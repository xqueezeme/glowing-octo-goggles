{
    "title": "The Twelve Vitali Ch. 13",
    "pages": [
        "Authors note: Hello everyone. It's beginning to look a lot like Christmas! I hope you are enjoying the week of chapters as your gift. Please comment and vote it means a lot to me. Thank you, everyone, for the positive feedback and comments they have brightened my days. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\nCat woke, slowly stretching and finding that her muscles protested only slightly, considering the punishment she had received last night. She smiled and rolled on the bed, humming happily at how relaxed she felt. It wasn't unusual for her to wake and find Matteo had already risen, but he had been waking her early lately, and she picked up her phone from the bedside table to check the time. It was late, and she frowned, listening for noise inside the apartment to let her know he was there somewhere close by.\n\nShe longed for the small loft they shared in Brisbane, as she realised even if he was here in the penthouse, it was so vast that she would never be able to hear him. She got out of bed and padded into the bathroom, thinking she would shower first and dress properly because his housekeeper was probably here and wouldn't appreciate a naked girl walking through the apartment.\n\nFinding her clothes in the wardrobe, Cat sighed. She would have to go shopping for something to wear tonight. She certainly had her savings still, but she wasn't sure that she been paid yet, and she couldn't expect Matteo to foot the bill because she felt she didn't have anything appropriate to wear tonight to the family dinner. She hated dipping into her savings, but once the commission money came through, anything she spent would be replenished.\n\nShe showered and dressed, taking care of her bruised ass cheeks and tender breasts. Rather than being upset by the dull ache and small twinges of pain as she moved, she embraced them and how she had acquired the marks that proclaimed her as Matteo's kitten. She had asked for them and had wanted them. He'd been so careful about unmasking the dominant side of his personality, but she was beyond grateful to him for last night because she needed it and craved it. She loved him and trusted him more than anyone else in her life, and she wanted the fantasy life he offered, but it still hung tantalisingly just out of her reach in her mind.\n\nFeeling the need to at least look the part of a woman who could marry into his family, she thought about going shopping again. She wouldn't have to get her hair cut, so that would save time, she thought. She liked the haircut she had received at the spa yesterday and fluffed her long fringe before scooping it partially to the side. The long layers of her dark hair sat naturally and gave her straight hair a bit more body with a small wave. She smiled as she applied a tinted moisturiser to her face. She felt good and, needing to see Matteo, she walked out of the bathroom in search of him.\n\n\"Good morning, Miss Catriona,\" Lisa greeted her. \"Master Matteo is in his office working,\" she added as Cat looked around, seeming indecisive. \"Can I get you some breakfast?\"\n\n\"I can get something. I'm sure you have better things to do than waiting for me,\" Cat smiled in a friendly way.\n\n\"I'd like to do it, it's my job, after all,\" Lisa reassured her. \"Coffee and French toast?\" she offered. \"Or pancakes maybe?\"\n\n\"Coffee would be wonderful, I'm not one for sweet breakfast dishes. Could I have some toast and maybe an egg or small omelette?\" Cat asked, feeling strange asking this woman to make her breakfast.\n\n\"Certainly, it will just take me a few minutes. If you would like to see Master Matteo, his office is down that way at the end of the hall,\" she said, indicating the way with her hand before disappearing back into the central kitchen area.\n\nCat thought about the fact that he was working and wondered if she should disturb him. Her need to see him this morning won out though, and she walked slowly in the direction Lisa had pointed. She could hear him on the phone as she drew closer, not what he was saying, but a low murmur, and once again she wondered if he would welcome the interruption. She would only stay a few minutes, she told herself, and then go eat the breakfast Lisa was making for her.\n\nTapping at the frame of the open door, Cat watched as he looked up and a broad smile appeared on his face as he waved her in. He began ending his phone call, and as soon as she got close enough to his desk, he pulled her onto his lap as he said his final goodbye and hung up before kissing her.\n\n\"Did you sleep well?\" he asked.\n\n\"Like a contented kitten,\" she grinned at him, brushing her fingers over the side of his face. \"Did you?\" she asked.\n\n\"I did,\" he chuckled. \"Have you had breakfast?\" he took in the fact that Cat had showered and dressed already.\n\n\"Lisa is making me something now, I just wanted to see you and say good morning,\" Cat said softly, leaning in to kiss him again.\n\n\"Good morning,\" he whispered into the kiss, and curled his hand around her jaw and the back of her neck, pulling her into a deeper kiss.\n\n\"How are you feeling?\" he asked as he slowly pulled away, looking at her carefully. They'd been through a lot as a couple the day before, and he didn't take anything that had happened between them lightly.\n\n\"I'm wonderfully green, really green!\" she exclaimed and grinned at him. \"You make me feel amazing,\" she stroked her fingers lightly over his neck, seemingly unable to help herself from touching him this morning.\n\n\"Good, because we have a lot to do today before dinner with the family tonight,\" he advised her.\n\n\"Oh,\" she said, trying not to let her disappointment show, but he was very attuned to every nuance of her now.\n\n\"Tell me, Kitten,\" he demanded, lifting her chin so he could look into her eyes. This name was the trigger for her where she knew he expected her to obey his commands.\n\n\"I was hoping I'd have time to shop for a dress for tonight. It's just that you only packed a bag for one night, and I'm not sure anything in there is suitable for the conversation I have to have with Roberto,\" she looked anxiously into his eyes.\n\n\"We can make time for that. While Andie has done wonders with your wardrobe, I have preferences of my own which you should start to know if you want to please me as much as you did last night,\" he let his hand smooth down her chest to cup her breasts. He smiled, noting her small gasp as his hand squeezed and knew she would be feeling the effects of last night most of today. He was pleased to find, however, that she wasn't wearing a bra.\n\n\"Mm,\" he groaned. \"Go and have breakfast while I wrap up a few things here. Then we can start our day,\" he instructed.\n\n\"If that's what you want,\" she squirmed teasingly on his lap and pressed up against him, kissing him softly.\n\n\"It is,\" he smacked her ass lightly and was pleased with the yelp she emitted. He helped her slide from his lap and stand. With a chuckle he watched her leave his office, shaking his head. This newer more relaxed and cheeky version of Cat was going to challenge him in a whole new way, he realised.\n\n*****\n\nHilary watched from a distance as her boss made his way through the new HQ offices toward her. She'd seen photos of the young woman her boss was infatuated with, but they hadn't done the young woman justice. She was tall for a woman, and slender, and in the casual but classy dress she wore she looked lovely. Her face shone with happiness each time she looked up at Matteo as he stopped to talk to the men and women who worked closely with him here.\n\nShe certainly wasn't like the women he was usually seen to date, and she revised her assumption that this was a mere infatuation as she took note, not of the girl herself, but the way Matteo looked at her. Hilary stood as they neared her desk and stepped forward, waiting for the introduction.\n\n\"This is the other woman I couldn't live without, Hilary,\" he introduced her without qualifying her position in his company like he had with the other members of his executive staff.\n\n\"I'm so glad to finally meet you, Hilary,\" Cat held out her hand in greeting. \"I'm sorry I've kept him away from Melbourne for so long,\" she said contritely.\n\n\"I'm happy to meet you too,\" Hilary took the proffered hand and smiled; something the no-nonsense woman was not known for. \"Your guests will be here shortly, lunch will be served in the small conference room.\" She said, turning her attention to Matteo. \"If you have a few minutes I'd like to go over your schedule for the next few days?\" she asked.\n\n\"Go in and make yourself at home,\" Matteo said softly to Cat and indicated the open door. \"I'll just be a few moments.\"\n\n\"Since when do we go over schedules like this?\" Matteo asked curiously.\n\n\"Since Roberto called to ask about your plans,\" Hilary said quietly. \"I have the feeling he is less than impressed by the amount of time you are spending in Queensland, and he asked about future trips overseas to your projects there.\"\n\n\"I see, well, all will be cleared up with my father tonight. I will be home after the weekend and only do day trips and overnighters, so you won't have to worry about fending off my family anymore,\" he said, knowing that Roberto could be an intimidating man when he wanted to be. Very little shook Hilary's composure, but his fathers could fluster her every time.\n\n\"Good then,\" she said abruptly and went back to her desk.\n\n\"You'll be joining us for lunch,\" he said just as abruptly, falling into their usual pattern of business, and noted the slightly arched eyebrow as he walked into his office to find Cat. \"Thank you,\" he said over his shoulder, \"This morning was very productive.\"\n\n\"For you, maybe,\" she chided him and returned to her work, hearing him chuckle, a rare sound, even for her, who was possibly closer to him than anyone aside from his family.\n\nMatteo stepped inside the door and watched Cat as she explored his office. He'd been authoritative this morning as they met with a personal shopper and he outlined his preferences in style and colour to her, saying that he would be open-minded but he would rather her figure was accentuated using lingerie rather than with gathered waists and skirts that hid her obviously lovely legs. His hand had glided over her ass as he said it, making sure his meaning was known.\n\nFor her part, Cat accepted what he said and seemed pleased by the look that was created with a more straight-line wardrobe accentuated by slimline cuts and seams as well as wide belts. The dress she wore now was one of his favourites from their morning excursion, and his eyes followed the way the soft material caressed her legs and ass as she walked slowly around the room before turning and seeing him standing there.\n\n\"This is huge,\" she indicated the office. \"Do you use all this space?\" she asked as Matteo walked toward her.\n\n\"Sometimes, if I have whole sections of the executive in here for a meeting,\" he explained. \"It can fill up pretty quickly with so many adults all in here together.\"\n\n\"The view is spectacular,\" she turned back toward the large windows behind his desk, and he moved behind her, wrapping his arms around her.\n\n\"You realise I've only just gotten back into Martyn's good books again when you summoned me here?\" Cat heard David's voice behind them and found Matteo's arms tighten around her, shielding her from his view and stopping her from turning around to see him. \"You can't just pull me off-site whenever you and Cat have a tiff. What did she do this time, or what did you do? Or shouldn't I ask?\"\n\n\"I haven't done anything!\" Matteo protested with a laugh. \"I just thought you might like to see your sister, it has been a few months,\" Matteo stepped away from Cat so David could see her.\n\n\"I haven't done anything!\" Cat protested as well. \"Is that seriously how you talk to your boss?\" Cat looked at David in surprise.\n\n\"Technically he's my boss's boss,\" David shrugged. \"I wouldn't talk to Martyn like that.\" He reassured her. \"Besides, Matt and I have bonded over football, so he's more of a mate now,\" he tried to explain further. The reality was that he didn't really understand their relationship himself, only that he liked the guy and thought of him as more of a friend than the owner of the company he worked for. \"It's great to see you,\" he smiled widely and went to hug his sister.\n\n\"Technically there are a few more bosses between us than just Martyn,\" Matteo chuckled, \"But I still have the authority to pull him off-site and mess up their schedule a bit. You'll be back there in time for the inspection; I checked it with Martyn this time.\" He rolled his eyes heavenward. \"Arguing with the two of you is going to drive me insane, you know that, right?\"\n\n\"That's something I've been trying to do for years, I'll have to get some tips,\" Ricco said, easily walking into the room and seeing both Cat and David there. He felt a pang of regret and jealousy, but he kept his voice light. For his brother's sake, he wanted no hard feelings or weirdness between himself and Cat.\n\n\"Don't look at me,\" Cat said, looking at him innocently. \"I think David might be getting fired though,\" she giggled girlishly.\n\n\"I guess he could come work with me in exchange for those tips on how to drive Matteo crazy. The man is usually so unflappable, even in a crisis,\" Ricco said, his eyes falling back on Cat. She looked truly happy, happier than he'd ever seen her, if he was honest with himself. She was relaxed, he realised, and he turned his eyes on Matteo and saw that he too was happy and relaxed. Ricco knew this was coming, but he hadn't been prepared for them to be so in love that it shone from the way it did this afternoon.\n\n\"So, lunch?\" he asked, distracting both them and himself. \"I'm starving,\" he grinned, promising himself that he would be happy for them both.\n\n\"Yes, lunch,\" David nodded and looked at Matteo, who led the way into a small conference room.\n\n\"You seem so relaxed and happy now,\" Ricco pointed out the obvious to Cat as he forced his feet to work and moved closer to where she stood to kiss her cheek before they both followed Matteo and David to the conference room. \"You're looking amazing because of it.\"\n\n\"Thank you,\" she said quietly. \"You're looking good too,\" she returned the compliment. \"I'm sorry, Ricco, I know this is probably awkward seeing me with Matteo,\" she grimaced and apologised.\n\n\"At least I know you picked a good guy this time,\" he acknowledged. \"I'm not sure how I'd feel if you picked someone like Ned again.\"\n\n\"Yeah, that's not happening ever!\" David bit into their conversation tersely. \"She deserves better, and she knows it. Don't you?\" He prompted Cat.\n\n\"I have better,\" she said, quietly ripping the band-aid off what could turn out to be a hurtful moment for herself and the three men in the room with her. \"Matteo asked me to marry him, and, although it's not official until he proposes properly, I have tentatively said yes,\" she watched Ricco's reaction as she spoke and saw the momentary pang in his expression and felt it herself. She didn't feel like she could express how she felt about that look and let herself get swept up in David surprised congratulations.\n\n\"You okay?\" Matteo asked his brother quietly.\n\n\"Yeah, it's not hard to see how happy you make each other. Congrats, man,\" Ricco stood, pulling Matteo up to give him the usual one-armed hug, bumping their shoulders together. \"You're a lucky guy. Cat, on the other hand, well, you have to live with your choices,\" he teased but laughed, showing he was okay with the situation, even though it felt like a vice gripped his heart.\n\n\"I dunno, he's the one who has to live with the Hellcat. Have you ever seen her when she gets angry?\" David asked.\n\n\"Yes, but I have found she is usually a sweet and lovable kitten rather than a hellcat,\" he chuckled. \"Except that one time when I borrowed one of Lorenzo's supercars and she thought I was trying to kill her. More of a wildcat than a hellcat though,\" he chuckled.\n\n\"You probably were trying to kill her with the way you drive,\" Ricco laughed. \"Thank God you have the sense to use Knox here in Melbourne.\"\n\nWith David encouraging him with quips of his own it was easy, Ricco felt, to keep up the teasing banter through their lunch. He appreciated that he had been told of the forthcoming engagement before the rest of his family so he could show them nothing but support at the family dinner tonight instead of the sadness he held trapped inside.\n\nHilary joined then for lunch and was equally surprised by the announcement, as they were all sworn to secrecy until they had spoken with Roberto and Stefano.\n\n*****\n\n\"Stefano is waiting for you upstairs,\" Roberto told Matteo as soon as he had greeted the young couple. \"Don't worry, I will take good care of Catriona. We have much to discuss, don't we, dear?\" he smiled benevolently.\n\n\"Are you sure about this?\" Matteo asked her.\n\n\"Yes, I need to do this. I will be fine,\" Cat said reassuringly.\n\n\"I'll be just upstairs if you need me,\" he bent to kiss her lightly before turning and walking from the library.\n\n\"Come and have a seat, Catriona. Can I get you a drink?\" Roberto offered solicitously.\n\n\"No, thank you,\" she smiled nervously.\n\n\"Current issues are such that I am hoping we can speak frankly,\" Roberto said. \"I have always been a fan of your honesty and candour and would hate to think that had changed at all.\"\n\n\"I would like that, I'm not very good at being subtle or tactful,\" she admitted. \"So here goes,\" she swallowed before rushing on. \"I know we have not known each other very long, but I have fallen in love with Matteo, and I believe he loves me,\" she blurted out the reason she was here. \"If he proposes formally, I will accept, unless you give me a reason not to,\" she admitted. \"I don't want to come between Matteo and his family. I know what family means to you all, to him, and I won't be that woman who caused a rift between him and his siblings or yourselves.\"\n\n\"I can see you have thought about this a great deal,\" Roberto said. \"I believe that, given time and training, you could be everything Stefano and I hope you will be and part of our family. Time, however, is not on our side, it seems. So, I am going to be blunt and tell you what would be required of you should you accept his formal proposal.\"\n\n\"I understand I would have to undergo a trial, and I have some idea of what that may entail,\" she said, surprising him.\n\n\"Tell me what else you know about our family,\" he asked. Through talking with Bianca, he knew Cat had been asking many questions while she was with the Donatis' and had become particularly close to quite a few members of their inner circle.\n\nCat spoke candidly about her knowledge of the Tables and how they were set up, as well as the importance of the relationship between the two men who sat at the head of that table, which included the woman they loved. She spoke of her understanding of the staff employed by the family and the loyalty gained through training and lucrative contracts for each position from maid to Kept to gardeners. Lastly, she spoke about her limited understanding of the trial and that she knew that she might have to be sent to a facility to undergo the training involved in being a part of this family as a wife to Matteo. Through it all, Roberto had sat back in his chair, tapping his fingers together and considering the young woman sitting across from him.\n\n\"You are well informed. Knowing all of this, you would still consent to marry Matteo?\" he asked with a raised eyebrow.\n\n\"Yes,\" she said with certainty.\n\n\"There is something, though, that you would like the answer to before you fully commit to him?\" Roberto asked knowingly. \"That is why you have put him off one last time, before accepting his proposal.\"\n\n\"Yes,\" she nodded. \"Is it Matteo's destiny to lead this family? He says no, but I can see that it would be a possibility. He is,\" Cat spread her hands. \"An amazing man.\" She finished lamely as she became lost in how to express how she felt.",
        "\"It is a possibility. It is also a possibility that Matteo could be named as Oracle and you would be given the same choice as his mother,\" Roberto mused. \"Tell me, would you marry his brother to have the life you want with Matteo?\"\n\n\"How can I answer that? Which brother? I don't know all of his brothers,\" she said, bewildered by the question and wondering why the possibility hadn't occurred to her.\n\n\"It is quite a simple question really. Do you love Matteo enough to publicly marry his brother in order to have the private life you want with him?\" Roberto asked.\n\n\"I had thought it would be the other way around, and once married I would need to accept someone into our relationship,\" she said quietly. \"I had thought that if it was Ricco, I could do that. I do genuinely still care about him. It's not the love I feel for Matteo, but I care about him, and, over time, who knows.\" Cat said honestly.\n\n\"It is dangerous to pre-empt what may or may not happen. Jacobi has learned this lesson and has gone to Europe for a time to lick his wounds. For the sake of argument, let's consider your way of thinking. What if you marry Matteo and one of my younger sons become his oracle? They are eighteen and not as worldly as the man you would consider marrying,\" Roberto said.\n\n\"Is that not the role of a Kept, to teach your sons how to be worldly in the way you mean?\" she laughed. \"You are right, we can't know what the future holds, but you know your family and will guide its future. So, it is you I have come to in search of answers and guess I should have been asking the questions you have asked of me. Would your other sons accept me as part of this family if I married your second son?\"\n\n\"Now that is the question, isn't it?\" Roberto smiled. \"Let's ask one, shall we?\" he tapped on his phone, and a few minutes later there was a knock on the door before it opened. \"Lucca, come in and meet Catriona,\" he welcomed his son.\n\n\"Hey,\" Lucca said, holding out his hand. \"Nice to meet you, Catriona.\" He turned to his father with a raised eyebrow.\n\n\"Hello, just Cat is fine, hardly anyone calls me Catriona,\" she smiled.\n\n\"Oh, you're The Cat!\" Lucca chuckled. \"In that case, it's very nice to meet you.\" He bent his head to kiss her cheek, surprising Cat. \"Does that mean Matt's home?\"\n\n\"Yes,\" she laughed.\n\n\"I have a puzzle even he can't fluke his way through,\" he grinned mischievously. \"Do you like puzzles?\" Lucca fished in his pocket and pulled out a circular metal puzzle with interlocking pieces and passed it to her. \"This is one of my current favourites.\"\n\n\"Is this one of those that you have to hold just right before it comes apart?\" she asked, examining the interlocking pieces.\n\n\"Something like that,\" he nodded, watching her as she examined it and played with the small amount of movement in the pieces, which, for all intents and purposes, appeared to be permanently locked together. \"So, you just called me in here to meet Cat?\" Lucca asked Roberto.\n\n\"Matteo has been trying to convince Catriona to marry him. She's concerned that the family won't approve,\" Roberto said.\n\n\"If he loves her, why would it matter what we think?\" Lucca shrugged and looked back at her to find she had worked out the puzzle quickly. \"The trick is putting it back together,\" he chuckled, taking the pieces from her and jiggling them together in his hand before passing them back. \"Ricco likes you. I assume Jacobi likes you. Why would you think the rest of us would think any different?\"\n\n\"I guess I didn't make the best first impression on everyone, and I was just concerned that maybe...\" her voice trailed off as she concentrated on the puzzle in her hands. \"Forget I mentioned it.\" She smiled and passed him back his puzzle, \"That one's not so hard once you realise it's a spiral and not meant to be flat. I used to work with a guy who collected those sorts of puzzles. He loved the Chinese puzzle boxes the most.\"\n\n\"I have a few of those if you want to take a look sometime,\" he offered.\n\n\"I'd like that,\" she said. \"If that's the puzzle you're planning on giving Matteo, I think he can fluke it,\" she looked at the puzzle in Lucca's hand.\n\n\"I've something diabolical for him. Speaking of which, where would I find him?\" he asked, looking at Cat and Roberto.\n\n\"He's with Stefano,\" Roberto said. \"You can go; we understand you've missed him.\" He smiled indulgently.\n\n\"It was good to meet you, Cat, we'll catch up again before you go,\" he grinned and left the room.\n\n\"Matteo is missed when he is away from home. I would like you to bring him home to Melbourne,\" Roberto said. \"He will stay in Brisbane with you if you decide to stay there, and I'm afraid that he could regret that decision if Stefano's health continues to deteriorate.\"\n\n\"I've agreed to return with him and work remotely from Melbourne on further projects for the Donati family. I had thought we could come back after the gallery opening next weekend,\" Cat offered thoughtfully. \"I hadn't realised Stefano was so unwell, and I wouldn't like to be the reason Matteo has regrets.\"\n\n\"I can see that, and believe it is important for you both to return as soon as possible,\" Roberto said in a commanding tone. \"If you want to be accepted by us then you need to put our family, your family now, before the needs of the Donati.\"\n\n\"I understand,\" she nodded.\n\n\"Will you accept his proposal, knowing what you know now?\" Roberto asked, pinning her with a delving gaze.\n\n\"If I say yes, what happens if he is named Oracle?\" she asked. \"I imagine you are far from retiring, and his brothers may all grow up and find wives of their own. Would he have to divorce me?\" she asked anxiously.\n\n\"Perhaps,\" Roberto nodded, being frank. \"You could stay with him and the family as Kept, but I think that is not the life you want. Still, as you said, you could have many years of wedded bliss before having to think about whether he is given any role on the new table and what that role might be. All this concern may be for nothing as the younger brothers mature and prove themselves as family men.\"\n\n\"So, you would suggest I live in the now and let the future take care of itself?\" she asked.\n\n\"I would suggest that, although the future is not set in stone. There are likely outcomes, and if you marry my son, I need to know you love him enough to open your heart to his brothers as well, and if the situation arose share the love you feel for Matteo,\" he said carefully as he watched her think through all that had been said.\n\n\"I love him,\" she said simply, looking down at the wide gold bangle with the kitten clasp Matteo had bought her that afternoon to remind her of her place in his life now. \"I love him more than enough to jump through all of the hoops becoming part of this family and being with him would entail.\"\n\n\"I will give you until the art showing in Brisbane to be sure, then, if you still wish to jump through my hoops, you will be sent to the Battaglia to undergo a trial,\" he said ominously. \"Only then will you be able to publically announce your engagement.\" The tone of his voice was the same commanding tone Matteo used with her when he wanted her total obedience, and she quivered.\n\n\"Yes, Roberto,\" she answered as if on automatic pilot.\n\n\"Now, I think it's time I spoke to my son about his plans, don't you?\" he asked, and she could see that he was pleased somehow by the mischievous glint in his eyes and the slight upward curl of his mouth.\n\n******\n\nMia had taken it upon herself to become Cat's best friend and introduced her to the members of the family as they arrived, making her feel instantly welcome as she sat on the back patio overlooking the pool.\n\n\"I'm sorry,\" Trista said contritely after gaining a moment alone with Cat. \"Matteo has never been serious about any woman. Even his fling with Nik was never truly serious, that I knew of, and... well, I just assumed, and I'm sorry. It's good to see him so happy now, I'm glad I didn't mess it all up for him and you.\"\n\n\"I think I might have done enough of my own messing up at the beginning, and I might have over-reacted a little bit to what you were saying,\" Cat admitted.\n\n\"I still shouldn't have said what I did or treated you that way, even if you weren't just a fling Matteo was having. I understand how awful that must have been for you now, and I'm glad you don't hold it against me,\" Trista admitted her fault, despite Cat's kind words. She'd taken an awful lot for granted growing up in this family and not being under the same pressures as the boys to be successful and accept the responsibilities of being the future leaders of this family where everyone would look to them for guidance in some ways.\n\nShe had been forced to open her eyes to the privileged life she led, particularly when her mother had visited the facility. Thersa had arrived, not to commiserate with her over the harsh treatment of her fathers, but to inform her that unless she changed her attitude she would arrange her marriage immediately and deliver her to her new family when she left the facility. After a lifetime of flaunting the rules that all her other siblings lived by, her fathers were finally disciplining her, and for the first time had her mother's backing.\n\nIt was only after that visit that she began to start listening to the men who had been trying to tutor her in the old ways and the expectations for the women of the tables in exchange for the privileged and cossetted lives they led. She would never have to learn how to cook or clean or do the menial tasks of the average person, but she would need to become a kind, gracious and benevolent lady who understood all walks of life and appreciated what they brought to society. Cat had been nothing but friendly to her on that fateful day, taking all of her acerbic criticisms and obvious disapproval with a smile. Even Andie had tried to warn Trista that she had gone too far several times, but she hadn't heard the warning, or hadn't listened properly to what she was being told, to be more precise.\n\n\"I've been away for a few weeks, so it will be good to see everyone together again,\" Trista commented as Aria and Zion arrived.\n\n\"Oh, I hope it was a good trip,\" Cat commented, looking around for Matteo and wishing he would materialise now that she was faced with so many new faces on her own. Even the familiar face of Ricco would have been welcome to her right then.\n\n\"It was educational, not much fun to be had. I learned a lot though,\" she said, unsurprised that Cat had no idea about her punishment.\n\n\"There you are,\" Lucca said, striding across to where she stood. \"Try this one,\" he passed Cat another puzzle that could fit in the palm of her hand.\n\n\"Did you find Matteo?\" she asked.\n\n\"Yeah, he's still upstairs with Papa,\" he shrugged. \"I guess that they'll be down soon enough. I think Mama is getting impatient with them and will go and make them come down soon.\"\n\n*****\n\n\"It's a question only, Matteo,\" Roberto said sternly. \"The same one I asked Catriona.\"\n\n\"And I answered it,\" Matteo blew out a large breath. \"I would refuse my destiny as Oracle rather than make her live as a Kept.\" He said in a much calmer tone without all of the expletives.\n\n\"You would let her marry one of your brothers so you could have the life you wanted with her?\" Stefano asked. This was what he had done, and he knew how hard it was, even for the fact that he knew Roberto loved Maria too.\n\n\"It's preferable, but not what I would want. Fuck, the twins are twenty years younger than me. You would deny me the right to marry Cat for a decade or more until they were old enough to assume their birthright?\" Matteo snapped.\n\n\"I would not want that, no. We are only hypothesising here. No decisions have been made, we just want you to be aware of all possibilities,\" Stefano said.\n\n\"What about Jacobi? Did you ask him all of this?\" Matteo demanded.\n\n\"No, Jacobi was never in a position to lead our family as chair or Oracle, so his marital status was unimportant,\" Roberto said carefully.\n\n\"Yet you let him believe for so long, let Ricco believe,\" Matteo was horrified. \"Ricco gave up Cat for that belief.\"\n\n\"We don't see it like that,\" Stefano said gently. \"They both had lessons to learn, and if it were meant to be, Ricco and Cat would have come back together in time. It wasn't though, and here you are fighting for your right to marry the woman you love.\"\n\n\"Are you interested in Catriona's response to the question?\" Roberto asked.\n\n\"I know what it would be,\" Matteo said offhandedly. \"She wouldn't let Ricco treat her that way, and she wouldn't be the woman I love now if I force her to it in the future. You asked the question, and I answered it,\" he said calmly this time. \"I'm going to marry Cat, and if you name me Oracle, I will renounce my position on the table and walk away from everything I believe in as good for our family and all of the Tables.\"\n\n\"Yet she would accept it for life with you,\" Roberto said.\n\n\"There isn't much that woman wouldn't endure for the people she loves, but it would change her, hurt her, and I don't want that or a relationship with my brother's wife, whoever that may be. I want Cat,\" Matteo said, all of the fight leaving him as he realised he may have to give up the future he had been groomed for his whole life. \"I never believed I would lead the family, not as Chair or Oracle anyway, I believed I was free to make my own choices.\"\n\n\"Perhaps you still can, it was only a hypothetical question, after all,\" Stefano said. \"Nothing has been decided, but it is good to know how you feel before we give our blessing to the proposed marriage of our second son.\"\n\n\"All we ask at this time is that you wait to announce your engagement until after she undergoes a trial suitable to the Thirteenth,\" Roberto said, gentler now in his approach. The devotion both Matteo and Cat had to each other was commendable; his son's adamant refusal to entertain the idea of becoming an oracle was surprising, but not altogether out of character. He had built himself an empire in the business world; it only stood to reason that he would have the same single-mindedness in his personal life.\n\n\"Fine,\" Matteo growled. \"If she agrees to the trial.\"\n\n\"She already has, my son. Did you not say just minutes ago that she would endure anything for the people she loves?\" Roberto asked.\n\n\"And at the moment she is downstairs enduring meeting my family without me, if you'll excuse me,\" Matteo said with an edge to his voice and left the room.\n\n*****\n\n\"Shit!\" Ricco said under his breath as he spotted Matteo looking thunderous as he walked with purposeful strides toward the back patio with Roberto following him at a distance. He moved quickly to intercept his brother and placed a careful hand on his shoulder. \"Whatever happened up there, let it go, she's nervous enough, and you look like you could kill someone,\" Rocco said in a low murmur. \"Stop and think about how easily she runs when she thinks she's the cause of a problem before you take another step,\" he added as Matteo tried to shrug off his hand.\n\nOf all of the siblings, Matteo was the most in control of his emotions, until recently. Now it seemed to Ricco that his brother was having trouble hiding his frustration and temper more often than not. He wondered what had gone on upstairs and looked past Matteo's shoulder to Roberto as he felt his brother take a shuddering breath and relax slightly.\n\n\"You good?\" Ricco asked, searching his brother's face.\n\n\"Yeah, I'm good, Thanks, Ric,\" Matteo said in a low murmur to equal his brother's.\n\n\"Great, because you probably should know that I think Lucca has fallen a little in love with Cat's puzzle brain,\" he chuckled and watched as Matteo raised an eyebrow in surprise. \"She's good,\" he explained in response. \"Maybe better than you even.\"\n\n\"I highly doubt that,\" Matteo said arrogantly, but grinned. He was proud that Cat had found a way to bond to at least one of his younger brothers. \"I guess we better save her then,\" he said in an even tone as Ricco released him and they walked out to the patio together.\n\n\"Hey,\" he said softly as he approached Cat. \"Sorry I was so long.\" He bent his head and brushed his lips against hers.\n\n\"It's okay,\" she smiled. \"Your brothers and sisters have been keeping me entertained.\"\n\n\"So, I hear,\" he looked at Lucca and shook his head. \"Can I get you a drink?\" Matteo asked Cat.\n\n\"No, play with your brother, he's been waiting for you to appear for a long time,\" she laughed.\n\n\"Okay, show me this diabolical puzzle,\" Matteo smirked at Lucca.\n\n\"You won't have enough time to do it now, and I don't want to make you all frustrated and grumpy in front of your girlfriend during dinner, who, by the way, is possibly better than you at solving my puzzles,\" Lucca said with an answering smirk.\n\n\"She's better than me at a lot of things,\" Matteo shrugged easily, making Lucca's eyes widen in shock at Matteo's admission.\n\n\"Somebody write down the time and date, Cat's going to want to remember this moment for future reference!\" he laughed loudly.\n\n\"I don't know, I think you have the legs to wear a dress as well as I do,\" Cat said with a perfectly straight face, making Lucca laugh even harder.\n\n\"Definitely not that dress,\" Ricco remarked with a grin.\n\n\"Maybe not, but perhaps something with a fuller skirt and flowing lines,\" Trista chimed in, thoughtfully appraising her brothers figure.\n\n\"You see what you have done?\" Matteo groaned and shook his head.\n\n\"I just gave credit where credit's due, you do have very nice legs,\" Cat smiled sweetly and kissed his cheek. \"He mightn't wear the dress, but if you considered designing a men's wear line I imagine you'd have at least seven instant clients,\" she told Trista and looked around the room.\n\n\"Maybe shorts for summer to show off those legs?\" Trista asked.\n\n\"I don't think I've seen Matteo's legs in the last decade,\" Mia announced and looked at him quizzically. \"I'll help you, Trista, if you can get him to agree to wear them at the Gathering.\"\n\n\"Your family has a Gathering?\" Cat asked.\n\n\"Yeah, big family gathering every year, Cat,\" Mia nodded.\n\n\"I went to the Donati Gathering recently,\" she admitted. \"I guess I hadn't thought that your family would do the same sort of thing.\"\n\n\"Ours is a bit quieter than the all singing, all dancing Donatis', I have no doubt,\" Matteo chuckled.\n\n\"Why were you there?\" Lucca frowned. \"It's usually only reserved for the close family, despite the numbers that attend.\"\n\n\"I was doing a portrait of them, and it was the best place to have them all in one spot. I signed a lot of paperwork to be able to be there and work with those people though, if that makes you feel better,\" she laughed.\n\n\"The new table portrait?\" Zion asked as he and Aria finally seemed interested in the conversation.\n\n\"Yes,\" she smiled.\n\n\"Joshua Donati is thrilled with it, and he invited Papa to the gallery when they unveil it,\" Aria said, stepping closer. \"I didn't know you did portraits as well as the landscape stuff you did for Vanessa.\"\n\n\"Frankie has one of her portraits, that's how I found her,\" Vanessa piped in, wanting to take credit for discovering the woman that her family was suddenly fascinated with. Despite all she had done for Cat, her friendship and amenability, she had quit the job as a corporate artist and left her high and dry. She had to find the remaining pieces she needed from local galleries at short notice. She was still mad about that, and wasn't sure she entirely approved of an unreliable woman like Cat dating her brother. She kept her mouth closed though, she knew what had happened to Trista when she voiced her disapproval, and didn't want that for herself. Once the HQ building was finished, however, she would be moving to Sydney and marrying her long term, long distance boyfriend and she wouldn't have to think about it again.\n\n\"Oh, I have seen that,\" Aria tilted her head. \"I didn't realise you were the artist, it's good.\" She nodded as if her approval was what they were waiting for.",
        "\"Excuse Aria, she's a bit of an art snob,\" Matteo chuckled. \"She spent her gap year dragging Zion through the great art galleries of the world.\"\n\n\"I didn't drag him, he wanted to come,\" Aria sighed as if this was an old argument she had to have every so often.\n\n\"I did,\" he backed her up as he always did and shook his head at his brothers. \"We had a great time,\" he reassured them and her. \"You are a bit of an art snob though, because of it,\" he laughed lightly.\n\n\"I just know what I like,\" Aria said with a small twist to her lips. \"Plus, I happen to have impeccable taste.\" She grinned.\n\n\"Dinner is ready to be served,\" a quiet, middle-aged woman said, interrupting the banter, and led them into the house.\n\nStefano had dressed and was sitting in his usual position to the right side of Roberto directly opposite Theresa.\n\n\"It's lovely to have you here, Catriona,\" Theresa said as Cat took her place next to Stefano. \"I missed the last occasion you had dinner with us.\"\n\n\"Just Cat is fine, everyone calls me Cat,\" she said automatically. Theresa was beautiful; and delicate looking, and looked less like a mother than a model or an actress to Cat.\n\n\"Catriona is such a lovely name, I hope you don't mind if I use it?\" Theresa said warmly. \"They all shorten their names too, even if it's just by one letter, but like all mothers I like to use full names, even middle names from time to time,\" she smiled.\n\n\"Is that how they know they're in trouble?\" Cat asked with a laugh.\n\n\"We were all angels who never got into trouble,\" Matteo responded to the question. \"Weren't we, Mama.\"\n\n\"Perhaps some were more angelic than others,\" she smiled indulgently at Matteo as his siblings teased him about his halo being held on his head by horns so it didn't slip and choke him.\n\nThe three-course dinner was beautiful. Cat spoke mostly to Matteo's parents because of where she was sitting at first, but it seemed that between courses a silent game of musical chairs was played as people moved to talk with other members of the family. During the main meal, she found herself sitting between Zion and Ricco.\n\n\"Did you visit the house of Lorraine while you were in Brisbane?\" Zion asked.\n\n\"A few times, but never long enough to explore it properly. It's a fabulous space,\" she enthused.\n\n\"Dante has a good eye, and not a bad family collection, from what I hear. I believe they specialised in historical manuscripts and books,\" Zion noted. \"We have a similar repository here with our family heirlooms, among other things. Perhaps you'd like to take a look sometime?\"\n\n\"I don't have a great deal of knowledge about antiquities, I'm sorry, but if you didn't mind me looking for pleasure alone I would love to,\" she said enthusiastically.\n\n\"Then I would be more than happy to show you through whenever you have time. Pleasure should be the main reason anyone looks at antiquities,\" he said genuinely. \"I think critics can be too clever and take the joy out of the viewing too easily by looking for flaws in the craftsmanship.\"\n\n\"I wouldn't mind coming along, it's fun to see the things you have seen for a lifetime through someone else's eyes as they view them for the first time,\" Ricco said casually. Contrary to how hard his lunch with Cat and Matteo had been, he was finding that he was enjoying her being here with his family tonight. He had an odd pang of jealousy now and then when she looked at Matteo, but he also realised that she had never looked at him quite like that and could appreciate that the relationship she and Matteo had was serious.\n\n\"I'd like that,\" she said easily, and smiled, placing a soft hand on Ricco's arm trying to convey that she knew this dinner was difficult for them both.\n\nMatteo had been watching Cat from the moment she left his side. He noted the way she focused her attention on whoever was speaking and made them feel like she was truly listening. Even Zion, who was the most stand-offish of his siblings, seemed to warm to her. He tried to imagine sharing his life and, more importantly, her with any one of them. He saw her place her hand on Ricco's arm gently as if he were injured, and smiled. They still cared about each other; he knew that from both of them. He tried to imagine stepping into the background and allowing them to marry so he could be the oracle his fathers suggested he should be.\n\nHe shook his head, he had said no, and he'd meant it. He swapped the roles around and considered if he could let Ricco into their life as the oracle. He shook his head again, he had always assumed he would have a lesser role, and one of the twins would rise to lead, just as his fathers had and his grandfathers before them.\n\nAs the main course finished, Matteo sat back and watched as people moved around the table. He wanted her back at his side, needed to feel her warmth and look into those crystal blue eyes. Instead, he moved to sit beside Vanessa, who had seemed out of sorts on the patio before dinner, and he wondered why.\n\nCat watched Matteo move and tilted her head. Of all his siblings, Vanessa had been the coolest toward her this evening, and she wondered if it had been about the way she had left her position as a corporate artist with her firm. Vanessa had been very good to her, and Cat had worked hard to get as much work done as she could before she had left, giving her almost two months notice to find another artist. She didn't like to think that Vanessa held that against her, and worried it would cause a rift between Matteo and his sister.\n\n\"So, we meet again,\" Rafael said as he came to sit beside her. \"Leo and I have been talking about you dating our big brother and decided we should point out how old he is.\" He said seriously, making Cat giggle.\n\n\"Seriously,\" Leonardo said. \"He's almost forty, and we are concerned he will bore you to death because he's forgotten how to have fun. We could help you with that, maybe, if you help us with something we want.\"\n\n\"I see,\" she said gravely. \"What do you suggest I do then to inject some fun into Matteo's life?\" she asked. \"Assuming that dating me isn't enough fun for both of us.\"\n\n\"She's got you there,\" Mia laughed happily from across the table where she had watched her littlest brother's descent on Cat.\n\n\"We just want him to buy a couple more horses. You like horses don't you?\" Leonardo asked.\n\n\"Matteo owns horses? You mean, the ones at his house on the hill?\" she frowned at him. \"I thought those horses belonged to your other brothers.\"\n\n\"No, the horses at the stud, he's pretty much ignored it the last couple of years, but there's this great little filly that I think could be a champion if we got her now and trained her properly,\" Leonardo said eagerly.\n\n\"I see. And you would like me to make him have fun by buying you a horse each?\" she asked sceptically. \"I'm not sure where the fun would be for me in this proposal,\" she laughed.\n\n\"They will let you rake out the stalls, or something really fun like that,\" Kalum, Mia's boyfriend chuckled.\n\n\"Well, how can I refuse an offer like that!\" Cat exclaimed, as the twins looked chagrined at their sisters teasing, making Kalum and Mia laugh all the more.\n\n\"Matteo hasn't wanted anything to do with the stud in years. What makes you think he will now?\" Lucca asked from nearby.\n\n\"Look at that big goofy guy, he hasn't stopped smiling tonight, and he can't keep his eyes off her. If that's not love, then I don't understand it at all. So, I reckon Matt's over the reason he hasn't been back out there for a while,\" Rafael grumbled. \"Besides, Leo's been accepted into Veterinary Medicine, so it'd be a worthwhile investment in the long run.\"\n\n\"It's fun going to the races when you're an owner, trust me, you'll love owning a filly or two,\" Leo said earnestly.\n\n\"Just so I have this right in my head,\" Cat took a breath. \"You started by telling me that Matt was too old for me and didn't know how to have fun anymore, but if I convince him to buy the filly's you want that I would have fun,\" she looked at the boys, who nodded. \"What about Matteo? Shouldn't it be fun for him too?\"\n\n\"He's too old,\" Rafael explained patiently. \"We told you he's forgotten how to have fun.\"\n\n\"Papa,\" Zion's voice rose. \"The little ones want a pony,\" he struggled to keep his voice even. \"It's on their equipment list for school apparently.\"\n\n\"No, they want Matteo to buy them a thoroughbred so they have an excuse to get him to take more interest in the stud,\" Roberto corrected his son and turned his gaze to his youngest children. \"Couldn't convince Catriona to help you?\" he smirked.\n\n\"We possibly could have thought our pitch through a bit better,\" Rafael admitted.\n\n\"It was on the fly though, so we went with the most obvious. Who knew Cat wouldn't agree that Matteo was old and boring and needed some fun in his life,\" Leonardo grinned at Matteo.\n\n\"I think what you meant was discerning, and, like my beautiful sisters, I have excellent taste,\" Matteo leaned back in his chair with a smirk. \"However, if you can convince Lucca of your reasons for wanting that particular pony, I will consider it,\" he looked at Lucca while his youngest brothers groaned loudly.\n\nCat watched the exchange, trying to work out the dynamics of this complicated family. She wondered why they wouldn't just ask him themselves rather than try this weird subterfuge. There was a changing of seats, and she watched as people moved with purpose as if there was a time limit to the movement, and she found herself sitting between Mia and Ricco.\n\n\"The pony is not the end game here,\" Mia explained. \"The game, because there is always a game, is to work out what they really want from Matteo, because it's obviously something they think he wouldn't give them if they just asked.\"\n\n\"I don't think I get it,\" Cat laughed.\n\n\"Think of it as a puzzle, they've given you the clues, you just have to follow them. Lucca is a master at this, which is why Matteo told them they would have to convince him instead of playing the game himself,\" Mia whispered, pulling Cat along into the game. \"Look at the clues they gave you cryptically, if you could work it out before Lucca does, that would be quite a coup.\"\n\n\"Okay, so not a pony, a racehorse, something they deem Matteo too old and boring for and something he hasn't used in a while,\" Cat said, making the clues succinct. \"It would probably be easier if I knew him better, but as he is neither old nor boring, I think that has to do with whatever it is they want,\" she whispered softly. \"A horse is transport, a racehorse faster transport, Ferrari has a horse logo. Does he have a vintage car he hasn't used for years that they want to restore maybe?\"\n\n\"Hold that thought, we might be able to check that out,\" Mia waved Kalum over, who had swapped seats with Vanessa and now sat near Matteo, and, as Cat watched, she whispered to her boyfriend and heard him chuckle. Cat then watched as Kalum went back to where Matteo sat and had a murmured conversation.\n\n\"Seriously? You want my Ferrari?\" he asked his brothers in a stunned voice.\n\n\"Shit, who worked it out so quickly?\" Lucca asked. He knew what they wanted, it wasn't hard to figure where the teenage boy's minds would go in this family, but he'd planned to string it out a bit longer before outing them.\n\n\"Cat,\" Mia said smugly. \"Though she didn't know if you owned a Ferrari.\"\n\n\"These family dinners are almost like hard work,\" Cat whispered almost to herself.\n\n\"You'll get used to it,\" Ricco said. \"There's usually some game or other to keep us all entertained. It was their way of stopping us from fighting when we were younger,\" Ricco indicated his fathers.\n\n\"Thanks for not making this awkward, Ricco,\" she said impulsively. \"I really do appreciate that. It's not easy, at least for me.\"\n\n\"It's not easy, but you look happy, and I've never see Matteo look the way he does with you,\" he took a deep breath. \"It will get easier for both of us.\"\n\nCat looked over at Matteo, who was watching her intently. She smiled and mouthed, \"I'm not getting in a Ferrari with you.\" He tilted his head and raised his eyebrows before nodding slightly.\n\n\"I think Cat is keen to drive the car herself now that she knows I have it,\" he grinned, and the younger twins groaned.\n\n*****\n\nCat stepped into Matteo's penthouse with him directly behind her. She'd enjoyed herself tonight more so because the strangeness between herself and Ricco seemed to slowly ebb away as the family indulged in a range of games and riddles after dinner that kept them all entertained and laughing.\n\n\"How are you feeling?\" Matteo whispered in her ear as he stepped behind her and wrapped his arms around her waist.\n\n\"Green,\" she sighed, happily leaning back into him. \"I enjoyed tonight, thank you.\"\n\n\"Your talk with Papa?\" he asked tentatively.\n\n\"Wasn't what I expected,\" she sighed and turned in his arms to look up at him. \"I love you,\" she said with feeling. \"I love you enough to play all of the games and navigate all of the obstacles to prove I can be the woman they want for you.\"\n\n\"You're already the woman I want, for me,\" he bent his head to kiss her. \"I don't want you to change a thing. I fell in love with you, not their idea of who you might be or might become in the future. I just want you as you are right now,\" he murmured huskily, picking her up and carrying her with him into the bedroom. He placed her on her feet and sat on the bed, \"That's a beautiful dress, and you wear it well, but right now it would look better on the floor,\" he murmured in a husky voice, his eyes rolling over her body.\n\nCat tilted her head as she realised that he wasn't moving. With dawning understanding, she smiled shyly and reached behind her with both hands, thrusting her breasts out at him to undo the zip in her dress. In her mind she heard a version of heavy bass house music that played in the bar where she had worked before meeting Vanessa. As the dress slowly dropped from her shoulders, she shimmied and swayed to the unheard music, letting the material drop to the floor to reveal her body to his heated gaze until she stood clad only in her thigh high stockings and a G-string.\n\nThe open, honest and trusting relationship Matteo had given her had a way of making her inhibitions all but disappear when they were alone together. She smiled softly as she stepped out of her dress and turned, picking it up from the floor by bending at the waist, keeping her legs straight and allowing him a closer view of her practically bare ass. She squealed as she felt his hand lash out and strike her and emit a groan that was a counterpoint to her squeal. She stood up and danced away from him to fold her dress over the back of a nearby chair. Turning back to him, she took small slow steps toward him, swaying her hips provocatively.\n\nCat enjoyed the way he looked at her with hungry eyes. He had shown her since that first night how much appeal her body held for him in many ways. He was a kind and generous lover, he made her feel safe and wanted, but at times like this she could see the desire in his eyes and the dominant side of his nature that was less willing to compromise in what he wanted, and she felt her answering need to submit to his demands.\n\n\"There's my sexy kitten,\" he growled and grabbed her as she moved closer, his hand reaching out to pull her into his lap. He grinned at her as if daring her to deny his words. He leaned down and kissed her, long, deep and passionately while his hands travelled over her body. His hands touched her neck, slowly travelling down to her breasts, encircling them and pinching the nipples, sending waves of tingling excitement through her and a whimpering purr from her lips. Her nipples became hard and erect at his touch as if answering his unspoken question of how much she wanted him.\n\nHis hands drifted down to her thighs and she widened them willingly, letting out a squeal as suddenly he slapped her pussy hard and growled as she attempted to close her thighs. His fingers delved into her, making her breathe deeply and let out soft purring whimpers of pleasure. Manipulating her clit with his thumb as his fingers forced her wider inserting one, then two as he brought her higher and higher, watching the trembling muscles of her thighs shake as she came close to the edge rapidly under his hands.\n\nHe stopped just as suddenly as he had begun, leaving her gasping and rocking her hips in need. Matteo caught her hands as they travelled down her body trying to find some release from the tortuous wanting she felt.\n\n\"Not yet, Kitten,\" He spoke huskily as though holding back his own lust and need when he finally murmured the words in a low rumble. His eyes bored into hers, and she nodded, speechlessly, waiting for him to say more. \"Now I have far too many clothes on, don't you think?\" He asked and stood to place her on the floor in front of him.\n\nCat almost dived onto Matteo with the invitation to undress him. She began with his shirt, running her hands over his chest, feeling the muscles through the soft fabric. Slowly she unbuttoned the shirt, letting her lips follow her hands. She kissed each small section of revealed flesh until she kissed just above his belt buckle. She kissed each wrist as she unbuttoned the cuffs, she was practically purring with pleasure as her hands ran up the flesh of his torso, lifting the shirt from his shoulders and pushing it down his arms.\n\nCat kissed down his neck and over his chest, moving slowly lower as her hands worked at his belt and zipper. Noticing how hard his cock was as she did, a small smile crept over her face when she caressed his cock through the material, and he let out a loud groan. Tucking her fingers into the waistband of his pants and underwear, Cat slid them down his legs as she lowered herself to kneel before him. Leaning forward, Cat kissed the tip of his erect cock and was rewarded with a groan from him, making her smile wider as she looked up at him. Matteo planted his feet widely and ran his fingers through her hair, and he stepped out of his pants, kicking them aside. Once free of the restricting clothes, Matteo pulled her lips back to his cock and groaned softly as she greeted his cock with a kiss, slowly widening her lips and letting her tongue snake out to roll around the fleshy head to lap at the tiny drop of precum.\n\nEmboldened by his groans of pleasure, Cat wrapped her hands around his thighs, grasping an ass cheek in each hand and pulled him closer, swallowing more of his cock until, overfull, she began to gag, swallowing hard against the reflex. Matteo pushed forward as he felt her swallow around him, his mind revelling in the pleasure he got from her warm and willing mouth and throat. Holding her head tightly in his hands, he began to saw in and out of her mouth, slowly making her take more and more of him. He watched as she desperately gasped at breaths between swallowing the big hard cock deeper, trying to temper his desire an ensure she was not distressed by the deep thrusts of his hips, \"Oh yeah, take it all, swallow me, kitten. Fuck!\" He exclaimed loudly as he felt her nose press into his groin.\n\nHer hands kept a tight grip on his ass as he growled out his lust for her. Drooling, saliva coated her chin and dripped onto her chest as she worked to take as much as he gave her. After what seemed an age, he pulled her from his cock and, lifting the rigid flesh up with one hand, he pressed her face to his ball sack. Dutifully Cat lapped and sucked on the pebbled skin, eliciting more growls and exclamations from Matteo.\n\nNot able to hold back the tide rising within him, he stepped back and picked her up. Matteo almost threw Cat onto the bed, following her to press her head down into the mattress while slapping her ass and encouraging her to lift it high for him. He entered her roughly and pounded into her tight wet pussy, blinded by lust, desire and the need to possess her totally.",
        "\"Fuck!\" He roared into the silence of the room as Cat squealed and bucked under the onslaught. His left hand wrapped around her thigh to tease her clit while his right hand began spanking her upturned ass, which jiggled so enticingly with each thrust he slammed into her. He felt her orgasm rip through her, her pussy clamping around his cock, milking at it, triggering his own intense orgasm.\n\nMatteo collapsed over Cat, taking long moments to catch his breath before pulling his softening cock from her. He rolled to his side and ran his hand down her back, feeling the heat of her reddened right ass cheek with satisfaction. Pale bruises from the previous night showed and added to the colour of his smacks, and he caressed the rounded cheeks lovingly.\n\nCat purred in pleasure. Her insecurities paled further as she realised that she didn't need the trappings of the white room and the leather restraints he gave her to feel his dominance and control. While their lovemaking had been rough and intense, tonight she had truly felt his need to possess her, and it filled her with a sense of wild joy as she lay in his arms. She moved her head to purr in his ear and nuzzle at his neck, showing how utterly happy she felt.\n\nThe feeling of contentment Matteo had at that moment was beyond anything he had felt previously with her, and while he hadn't been happy about her obviously intimate relationship with Ricco when he had watched them together tonight, he knew that he didn't need to be threatened by it. She was his and loved him without reservation after tonight. His family had accepted her without question, and his fathers had told him directly that she had agreed to do whatever it took to join their family as his wife. His thoughts darkened again as he considered their questions regarding sharing her if he was chosen to lead the family. He wasn't sure he could or would. He caught her up in his arms and held her tightly against his chest. He'd had to fight her demons and her past to get to this point, and he knew he wouldn't give up what they had as a couple easily. Even for his family."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "engagement",
        "family",
        "games",
        "shopping",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-13"
}