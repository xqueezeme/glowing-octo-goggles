{
    "title": "The Vermeer",
    "pages": [
        "This is a copyrighted original work of fiction. All rights reserved.\n\nAll characters featured herein in adult situations are at least eighteen years of age, even if not expressly stated. Any resemblance between actual persons, living or dead is entirely coincidental.\n\nMany thanks to BlackRandl1958, Jim K and Michael B for the superb editing work.\n\nThis work may not be copied or distributed without the exclusive written permission of this author.\n\n*****\n\nI was in deep shit. The whole business was collapsing around me. I owed two and a half million dollars to some very nasty people, money that neither I nor my family had. I had only one fleeting hope of survival. I called my father for sage advice.\n\nI flew down to St. Kitts to meet Pops and my Ma; both are getting on in years. After totally freaking out on me, Pops strongly suggested I meet with the family lawyer, Christo, back in Toronto.\n\nI caught the next flight back and managed to catch him. I went straight to his downtown Bay St. office.\n\nAfter a short wait, I was ushered into his big corner office. He sat at his fancy polished wood desk, with a background of standard lawyerly prop reference books behind him. His jacket was off and his blue silk tie contrasted sharply with the crisp white shirt, his slicked back white hair and his big white fake toothy smile.\n\nHe stood to shake my hand, \"So nice to see you again, Ben. I think the last time I saw you was at Frankie's funeral. How long has it been?\"\n\n\"Seven years, I guess.\"\n\nMy older brother's car blew up when he turned the key. The New Yorkers made a graphic statement out of him.\n\n\"How can I help you?\" Christo asked, \"Please have a seat,\" he guestured towards one of the two leather chairs facing his desk.\n\n\"So, here's the situation, Christo,\" I started as we both settled into our seats. He watched me intently with his lawyerly 'trust me' smile. \"Our main distribution guy, Mallory, he's Irish... or more correctly, was Irish, is dead.\"\n\n\"Oh?\"\n\n\"He was in Turkey trying to set up a viable distribution line or two for Afghani product, now that Damascus is ruined.\"\n\n\"Rough part of the world these days.\"\n\n\"No kidding.\"\n\n\"Who got him?\"\n\n\"A fucking bee! He went into anaphalactic shock and they couldn't revive him.\"\n\n\"Okay, so what does that have to do with why you're here?\"\n\n\"He owed me two point seven million dollars!\"\n\n\"So, you had a business loss.\"\n\n\"Yeah, I get that, Christo; the problem is I in turn owe basically the same amount to a bunch of Colombian thugs who really, really want to be paid for their coke.\"\n\n\"And you can't cover it?\"\n\n\"No!\" I had to take a deep breath. \"If you recall, me and my dad took a 4.36 million dollar hit last year when an airline was diverted to Athens. I'm close to being broke at this point. I had to put a mortgage on the house; we're not made of fucking money.\"\n\n\"So, what do you want from me?\"\n\n\"Advice, Christo, I need advice. My father insisted I don't do anything until I talk to you, first.\"\n\n\"And how are they? Healthy and happy, I hope.\"\n\n\"Yeah, they're fine, but they're getting on. They're taking off for Naples next week.\"\n\n\"That's great. Okay, how can I help you?\"\n\n\"Before Mallory died, he handed me an IOU of sorts, he did it before when he was short, and I could cover it. It's a painting. A Vermeer, worth a lot.\"\n\n\"So, sell the painting and pay the Colombians.\"\n\n\"Not so simple. The painting is hot. And I can't cover it.\"\n\n\"Hot as in stolen?\"\n\n\"Yeah.\"\n\nHe leaned back in his chair, lifted his hands up almost in prayer and tapped his fingertips together. \"And what exactly do you mean by 'he did it before'?\"\n\n\"The middle east is fucked up. Mallory was my guy, in and out. Colombian coke into Turkey, Saudi Arabia and other gulf states, Afghani heroin out. We had a great thing happening. He was hit hard a couple of times, himself, because of the Syrian troubles, and was basically getting along by the skin of his teeth. He had to rely on his two sons as couriers.\"\n\n\"How old was he?\"\n\n\"Maybe fifty. Nevertheless, to answer your question. Mallory transfered a painting from his Isle of Man safety deposit box to my Isle of Man safety deposit box, at the same bank.\"\n\n\"And?\"\n\n\"He then paid off the debt a couple of weeks later, it was just cash flow shit, and I transfered the painting back to him. It didn't really matter then, I had the funds to cover him.\"\n\nChristo gazed at me. \"But not this time?\"\n\n\"No. And that's the problem. I'm stuck with a Vermeer. And a debt.\"\n\n\"What do you think it's worth?\"\n\n\"Five mil.\"\n\n\"What makes you think that?\"\n\n\"That's the reward money.\"\n\n\"Huh?\"\n\n\"The Vermeer was stolen from a gallery in Boston, twenty or thirty years ago. It's called The Concert. The gallery wants it back. The reward money is five mil. My understanding is that's it's not reward money, per se, but money for infomation leading to the recovery...\"\n\n\"One and the same,\" he said while tapping his fingertips.\n\n\"I just need to get in touch with the gallery and make a deal.\"\n\nChristo's eyes were wide open. He wasn't smiling anymore.\n\n\"Five mil according to Mallory at least...\" Fuuuck!\" I really only had his word.\n\nChristo leaned further back as he sighed. That lawyerly look was definately gone. He clasped his hands together and with deliberate precision asked, \"And what deal do you propose to do with that painting?\"\n\nI looked him straight in the eyes, \"Sell it back to the gallery. Collect the money and then save my life... basically by paying back the Colombians, who have this thing for stuffing the body into the victim's trunk. It can't help with the resale value of the vehicle.\"\n\nChristo was stone faced but nodded slightly as he took it in.\n\n\"Here's my basic problem,\" I continued, \"I know the cops are going to be involved.\"\n\nHe kept nodding up and down.\n\n\"Christo, as you well know, we're in the drug running and money laundering business, not in the deal with the cops for a stolen painting business. The two don't go hand in hand. I need help. Your help.\"\n\n\"Can I ask a question?\"\n\n\"Sure.\"\n\n\"And I can assure you of confidentiality...\"\n\n\"Of course.\"\n\n\"Where did you get the painting?\"\n\n\"From Mallory.\" What the fuck did he think? That I'm making all this up?\n\n\"And where did he get it from?\"\n\n\"I've no idea,\" I lied.\n\nChristo simply gazed at me.\n\n\"I need you to guide me into exchanging the stolen painting for cash. Pure and simple. And from my perspective, it is really simple. My life and the lives of my daugthers and my wife and my parents are on the line.\"\n\nHe stared at me.\n\n\"Christo, I don't even know where to start.\"\n\nHe blinked twice as his fake smile roard back up,\n\n\"Can you give me a week?\" he asked, \"I need to talk to some people and think this through.\"\n\nGreat, I'd just relay that to the Colombians.\n\n*****\n\n\"Hey, Marcie, I'm home.\"\n\n\"What? Do you expect me to come running into your arms?\" She snarled at me from under her newly re-done bleached blonde hair. She did look good except for the permafrost on her face.\n\n\"What a pleasant reception, Marcie.\" How about, 'how was your flight,' or how about, 'how's your mum and dad'?\"\n\n\"Fuck off.\"\n\n\"Oh boy,\" I sighed, \"where are the girls?\"\n\n\"As if you fucking care?\"\n\nI shook my head as I climbed up the stairs to my bedroom.\n\n\"You need to put money into the account,\" she yelled from the bottom of the stair.\n\n\"You need to get a job,\" I said back, probably too loud.\n\nWhat used to be a marriage was now a farce. She wouldn't even cook dinner for me anymore. There was not even a false pretense that we were still a couple. Of course, the girls weren't there; she knew what time my flight was getting in. She was doing everything she could to alienate me from the girls and to hurt me. School was over for the day; the girls should or could, have been at home.\n\nShe had stated to me clearly on many occasions that she wanted the house, with the mortgage paid for by me, ten thousand a month and she was good with the year-old, fully loaded minivan. A hundred and twenty grand a year, oh, and have me out of the house? Permanently? It was pretty well the only conversation we had anymore.\n\nThankfully, it hadn't got to lawyers yet. If and when it ever did, she would be in a little bit of a pickle. She wouldn't be going to Christo, that's for sure. She'd have to find a lawyer of her own. \"And what exactly does your husband do?\" There's an unwritten code that even Marcie wouldn't be too stupid or too brazen to break.\n\nWhen we picked up that endless conversation, or negotiation, lately, her new opening line had been, \"You promised two years ago that you were going to put in a pool.\"\n\nYeah, that was before Athens.\n\nIf it wasn't for the girls, I really wouldn't bother coming home. She was such a spiteful fucking cunt. And she's the one that started cheating on me, while we were engaged to marry, as it turned out.\n\nBottom line, and it took me years to realize, just like my mother warned me: she was only interested in money and herself and that was it. The girls were a tool for her to achieve that end.\n\nI'd have been happy to take the girls. I'd sell the house and give her a whack of cash for her to just go away. Up until that point, she's wasn't buying that, At least not then. Maybe I just hadn't made her the right cash offer. She saw me as a gravy train. The two girls were simply the tickets to get on board.\n\nCash offer? What was I thinking? I was two and a half million in dire debt.\n\n*****\n\nA week later I was back in Christo's office.\n\n\"Sit down, Ben,\" he said. I did.\n\n\"It's not impossible. But it's not easy.\"\n\nThat was good news, I guessed.\n\n\"Here's what you're going to have to do.\"\n\nI shuffled in my seat.\n\n\"The Isabella Stewart Gardner Museum in Boston holds title to the painting. The FBI and the local District Attorney's office have been handling all inquiries and following all the leads pertaining to the theft, for the last... ppfft... twenty eight years? Normally, you'd just have to deal with them. The fact that the painting is in the Isle of Man can kind of work in your favour.\"\n\n\"Oh? How so?\"\n\n\"The FBI and DA's office will be off their home turf.\"\n\n\"How so?\"\n\n\"The painting is in the Isle of Man, part of the UK. We share the same Queen, remember?\"\n\nSmarmy bastard.\n\n\"I think that it's fairly justifiable that you approach the UK authorities on this matter. The last thing you want to do is start moving the painting around, especially after everyone's been notified that a potential seller has just come forward. You will have to be very careful. As soon as you announce you have the painting, no matter how careful you are, the possibility exists that they will be on to you and that you will be tailed.\"\n\n\"So, who do we deal with?\"\n\n\"I don't know how it will play out, the FBI and the DA will still be involved, no doubt and maybe to a great degree. But if you, or the lead to the Vermeer, turn up in London, it may be the Metropolitan police at New Scotland Yard or the local Manx constabulary that will be in charge of the recovery. I'd stick with Scotland Yard and just keep the Isle of Man people out of it.\"\n\nI took a deep breath.\n\n\"Either way, a couple things will need to happen. Number one, you will need a local emissary working as a middle man between the Gardner Museum and you. Their elected middlemen so far are the FBI and the DA's office. No matter what happens, you have to deal with them. But as I said, you should stay off their home turf. You've got to understand, cops are only going to want to deal with other cops. Two, you will have to provide proof that the painting is in your possession and that it's still in reasonable condition. Once they have that, only then will they get serious. Three, they will need to verify that in fact it is the stolen Vermeer, and not a forgery. For that, they will want an expert to examine the painting and then to... number four, formally accept the painting. Only then will payment be released.\"\n\nI took another deep breath.\n\n\"Naturally, the difficult part is running away with the money. And of course, the FBI, the DA's office, Scotland Yard's Fine Art and Antiquities Department, or whatever the hell they call themselves, Interpol and who knows who else will NOT want you to get away with that.\"\n\n\"What do you recommend?\"\n\n\"Ben, I'm a lawyer. I don't have an answer for you. You need to talk to someone in the money laundering business.\" He was smiling his big toothy grin.\n\n\"But this I can tell you or recommend to you. Get your plan in place and act quickly. They are bureaucratic agencies and will be inherently slow. Also, don't leave any DNA trace and don't subject yourself to video surveillance.\"\n\nThis was not pretty.\n\n\"It's going to come down to trust,\" Christo continued. \"In the end, the other side will have to have faith in your middle man to deliver, and you will have to have faith in that person, too. But understand everyone will have their own motivations. The Museum wants their painting back plus they want to catch the perps who did it. Your painting is just one of, I think, thirteen or fourteen items that were stolen that day. Do you have access to the other stolen items?\"\n\n\"No, not at all.\"\n\n\"Okay. But understand this... they will still want the other items back and once they see the Vermeer turning up, they are naturally going to assume that the other items will start to make their way back home, too.\"\n\nI shuffled in my seat, \"But that has nothing to do with me.\"\n\nHe smiled his toothy grin, \"They aren't going to burn their bridges on this one painting if in doing so the possibility of recovering the other items is lost. The carrot is the other twelve or thirteen items; the stick is having to buy this one back cleanly, even if you don't have access to the other stolen items. You follow?\"\n\n\"Yeah,\" I sighed.\n\n\"But don't try to overplay that. Make them come to fully realize that themselves.\"\n\n\"Okay.\"\n\n\"Ben, you have your motive and the cops and the DA have theirs, too. But let's not lose sight of the fact that you will be approaching them.\"\n\nI sighed again shifting in the chair across from Christo.\n\n\"Find a lawyer in London, or better yet just outside of London, someone young and inexperienced, someone naive.\"\n\n\"What! You want me to find a lawyer in London that is stupid?\" I couldn't believe what he was saying. Uncomfortably, I shifted in my chair.\n\n\"No, not stupid, just na\u00efve, and just outside of London, I would recommend.\"\n\n\"Why?\"\n\n\"Fewer cameras.\"\n\n\"Why na\u00efve?\"\n\n\"Ben, you don't want them thinking too much. You want them to do exactly as you tell them, nothing less and certainly nothing more.\"\n\nI sighed audibly. This was not a pretty situation.\n\n\"Why can't you be the middle man?\"\n\nChristo leaned back in his chair and tapped his fingertips together, \"I thought about it and I've concluded it's not a good idea.\"\n\n\"Why not, I know we can trust you.\"\n\n\"It's not that. Number one, we have a history together, and we're a Canadian firm. No, you got to find someone local. We can't even navigate the London Underground. Ben; it's simply not our jurisdiction. They'll find you through me, for sure.\"\n\nI sighed, \"Okay.\"\n\nHe continued, \"You will have to approach this lawyer, solicitor they're called there, anonymously and suggest that you have a Vermeer to sell. Be specific. Now the first thing that lawyer will need to do is contact the authorities in the UK, I suggest Scotland Yard, the Art and Antiquities Department or whatever it's called, and that lawyer will need to obtain immunity from prosecution for handling stolen goods. That should be fairly straight forward. My understanding is that it's happened there before. Only then does that person, through whatever intermediaries, including Scotland Yard, approach the Gardner Museum with an offer for 'information leading to recovery'.\" He used air quotes.\n\nI think I was staring blankly.\n\n\"Ben. You've got to do this yourself. You can't add layers of protective insulation. You've got to get it done just right.\"\n\n\"How do I find the right middle man?\"\n\n\"Try Google.\"\n\nI must have looked incredulous.\n\n\"If it were me, Ben,\" he said grinning with big white, fake teeth,\" I'd find a woman. A young one.\"\n\n\"What? Why?\"\n\n\"Because, aside from the very first meeting, I'd want to see bare skin to verify that that person isn't wearing a wire. I wouldn't allow any of their potentially doctored clothing to be on them and certainly no purses or briefcases nearby. You know that the cops will be pressuring them.\"\n\nThe lech. But he was absolutely right.\n\n\"Trust but verify. It's what Ronald Reagan said, right?\"\n\n\"As long as any meetings between you and the...female lawyer are on your terms, where you control all of the elements, everything should be okay. Plus, let's look at her motivation in this regard. One, the money will be great, for which she will have to submit a proposal to the Gardner Museum and they will have to draw up a contract with her. You're not paying her. They are. You'll be anonymous the whole time.\"\n\n\"How much should they pay her?\"\n\n\"I don't know,\" he smiled his big toothy grin, \"let her pick a number she's comfortable with. If the Museum thinks it's too much, it'll be her issue to sort out.\"\n\n\"Sounds fair enough,\" I said.\n\nChristo continued, \"The second motivation for her will be the prestige, the fun. When it's done, she'll be all over the tabloids as the individual who returned the Vermeer. Her career will be launched.\"\n\nI smiled at the beauty of the whole thing.\n\nHe leaned forward and pressed his index finger into the air, \"Just don't let her fulfill fantasy number three,\" he said, drawing me back to reality. \"No matter what the client confidentiality rules are over there, you don't want her helping the authorities bring the perps in. They will be pressuring her, for sure.\"\n\nI was staring straight ahead.\n\n\"And please be aware, Ben, that the reward money for the entire stolen collection is five million US, but it appears it's been fixed at that amount for many years. You get to set the price. I think the five mil, plus middle man expenses, will be reasonable. Really, it's the premium piece missing. If you ask for more, they'll probably have to go back to the board of trustees, who knows. It'll take time. And from what you've told me, time is not on your side.\n\n\"No, it certainly is not.\"\n\n\"It may be that the middle man fees have to come out of the five million, if that's all they've got.\"\n\n\"You may be right, Christo.\"\n\n\"And just hint the fiction to them that if this transaction is successfully completed, the other stolen pieces may be offered for return.\"\n\n\"And, Ben, please be aware. The Isle of Man is probably also your Achilles heel. Every time you go to and from that island, you're on camera in a relatively small sample. Keep that to an absolute minimum. Keep electronic communication on prepaid cell phones. Don't talk, if you can avoid it. Text.\"\n\n\"Why?\"\n\n\"Because people can overhear you or her talking. Don't share any electronic files, images and stuff.\"\n\n\"Why not?\"\n\n\"Images and other files have meta data built in that tells God only knows what about the origins of the file. I'm no expert in any of that, except to warn you to stay clear the fuck away from all of it. Use paper with no fingerprints or any other DNA attached. Don't be emailing anybody anything.\"\n\n\"Hmm... okay.\"\n\n\"And one last thing. You will be asking for five million, your middle man will be asking for the balance of their fee at the same time, that is, when the painting gets returned. Don't put yourself in a position where your middle man can run off with the painting or the reward money.\"\n\n\"Hmm... good point. How will I know that the middle man isn't cooperating with the cops?\"",
        "He simply smiled his big toothy grin, \"I'm a lawyer Ben, not a master criminal.\" Then he added, \"Trust but verify.\"\n\n\"Okay.\"\n\n\"Good luck, call me if you need anything.\"\n\n\"Thanks, Christo.\"\n\nWith that I walked out of Christo's office with my head swimming.\n\nOf course, the girls weren't home when I got back and nothing was on for dinner.\n\nI grabbed my laptop and headed out to Angelo's for an early dinner. My friend Angelo has a little bar/caf\u00e9 in Vaughan, just north of Toronto. The big screen TV is always tuned to international soccer, football or the Maple Leafs. He's got free wi-fi, plus I can get a nice pasta dish with bread, salad and a glass or two of Nero D'Avola, Sicilian red wine.\n\nI searched the internet for solicitors in the London area.\n\nI found a few potential ones. The top of my list was a young woman in Blackheath, away from central London.\n\nI also managed to book an overnight redeye flight to London for later that evening.\n\nThe girls were in when I got back home. \"Daddy!\" They both ran to me. I hugged and kissed them both.\n\nNikki is the younger of the two. She's nine, in grade four. She's skinny as a rail and has two big dark brown eyes that simply make me melt. She always has a little bit of a mischievous smile, and when she's on her Barbie pink bicycle, she rides around with a bit of maniacal look on her face as her mane of brown hair flaps in the air behind her. You can't put a helmet on her. Nikki always seems to have at least one bandage on and is perpetually in need of a good bath.\n\nDanielle is eleven, in grade six. She, too, has dark hair and brown eyes and has always been the more serious of the two, which is a good thing, because she keeps an eye out for Nikki the whole time. Where Nikki has an undeniable cuteness about her, Danielle is going to be, in my view, the knock-out beauty. Both kids, but especially Danielle, inherited their good looks from their mother. I noticed, too, just in the last few weeks, Danielle was starting to grow little bumps on her chest. I was baffled as to how I, as her dad, should approach that subject with her. Or rather, I hadn't figured out quite what to say yet.\n\nThankfully, both kids were doing well at school and both had good friends in the neighborhood. Also, luckily, they were close enough in age, that they could be friends, or good sisters, and entertain themselves.\n\nMarcie sure as hell wouldn't. The most she did was plop them in front of a TV and hand them some Mac and Cheese.\n\nTen grand a month? Seriously?\n\nAfter too short a time, I had to excuse myself from the girls to go and pack for the airport. The airline limo was already on the way. \"I'll see you girls in a couple of days. Daddy has to fly to Europe on business. You two girls be good. You know I love you both very much.\"\n\n\"We know and we love you, too,\" said Danielle. Nikki was already hugging me.\n\nHow sweet. My heart melted.\n\nI flew to Heathrow with a bit of a game plan already in place, but not all of it. Normally, passengers are expected to nod off for a few minutes during the red-eye flight to the UK.\n\nI couldn't sleep.\n\nI couldn't figure out how to ensure, with one hundred percent certainty, that my middle man would not cooperate with the police, or simply run off with the painting or reward money.\n\n*****\n\n\"May I speak with Florence Ashworth please?\"\n\n\"Flo is not in right now,\" she said in a lovely British accent, \"my name is Laura Berger, may I be of assistance?\"\n\n\"Do you know when she will be back in the office?\"\n\n\"I'm sorry, she's out at meetings. I don't have her itinerary; would you care to leave a message for her?\"\n\n\"Yes, but is it possible that I could have her cell phone number?\"\n\n\"Mmm... how about if I take yours and have Flo give you a call?\"\n\nWhat a pro. \"That would be fine.\" I gave Laura my number, calling myself Sam.\n\nFlo called two minutes later.\n\n\"Is this Sam?\" Such a lovely voice with a proper British accent, almost like the Queen.\n\n\"Yes, may I call you Flo?\"\n\n\"Yes. What can I do for you, Sam?\"\n\n\"You can meet with me and have a drink. I'd like to discuss a very special project with you.\"\n\n\"Can you come by my office?\"\n\n\"I could... but I'd prefer not. A pub would be fine.\"\n\n\"That's fine. Sam, do I know you? Who recommended me to you?\"\n\n\"You did, I saw your online profile and you fit the bill. You're young and I assume energetic and your office is in the right part of town.\"\n\n\"Does this involve an estate, a property?\"\n\n\"I don't want to get into details on the phone, but yes, it was part of an estate once.\"\n\n\"Sure, Sam, where and when?\"\n\n\"I'm free right now. Are you? Physically, where are you?\"\n\n\"I'm driving back to my office from Croydon, I should be back in about twenty minutes, and yes, I'm relatively free this afternoon. Shall I meet you there?\"\n\nKeep control of the situation. \"Flo, call me as you are approaching your office in Blackheath, I'll start heading towards where you will be and I'll find a suitable place for us to have a drink and a bit of lunch.\"\n\n\"All right, Sam, I'll call you in about twenty.\"\n\n\"Thanks, Flo.\"\n\nI knew of a suitable meeting place not far from her office and headed towards it.\n\nJust as I opened the door with a handkerchief, my cell phone rang.\n\n\"I'm at The Yacht in Greenwich; do you know where it is?\" I asked Flo. I had to explain directions. \"I'm early forties, I've a blue jacket on and dark hair.\" The place was almost empty. I ordered a half pint of Stella Artois and stared out through the window to watch the boat traffic on the River Thames. The shuttle-bus boats skillfully darted between the larger barges.\n\nTen minutes later, Flo breezed in. She was way prettier in real life than her online picture suggested. She couldn't have been more than thirty, thirty-two maybe. She was perhaps five-four, with straight reddish brown hair to just below her shoulders. She was slim, yet curvy, boobs too small, though. She had tight black pants to just below her knees, absolutely flat shoes. They were black, like dance shoes. She wore an off-white button-up blouse with collar and a thin long sleeve black sweater that came down to mid-thigh. I didn't see a wedding band or engagement ring.\n\nShe was a sexy little thing, yet very professional looking.\n\n\"Sam,\" she held out her hand, her fingers were slim, manicured with clear nail polish. The other arm was completely pre-occupied with a big green leather handbag. It may have had a laptop or tablet inside.\n\n\"Flo, thank you for meeting me on such short notice,\" I said as I shook her warm, delicate hand and regarded her features. Big brown eyes, high cheek bones, thin, yet expressive lips, slim sharp nose, not too long, small feminine chin, very pretty. The two well-developed muscles under her bottom lip and her straight white teeth, gave her a lovely, confident smile. She had a thin gold necklace and gold dangly earrings to match.\n\nShe sat herself down across from me at the high table in an empty corner. \"How can I help you, Sam?\" she asked in her fantastic Brit accent.\n\n\"You can tell me what you'll have to drink. I'm buying.\"\n\nShe looked over to the bar, \"I'd love a glass of white wine,\" she said with an exhale and then added, \"I've already had lunch. The bar white will be fine.\"\n\nI wasn't sure if I was hungry or not. My body was still in Eastern Standard Time. I walked up to the bar and came back with another half pint of Stella Artois for myself and white wine for her.\n\n\"Thank you, Sam.\" I was aware my fingerprints were on the glasses. \"So tell me, what's this all about?\"\n\n\"I'm sorry about the clandestine nature of this meeting, but I'm afraid it is absolutely necessary.\"\n\nShe sipped her wine and let me go on.\n\n\"I'm looking for a London agent to act as a middle man for a business transaction.\"\n\n\"And I would be that agent?\"\n\n\"Hopefully so, yes.\"\n\n\"And what type of transaction are we looking at?\"\n\n\"The recovery of a piece of property in return for a reward.\" I took a big gulp of beer.\n\nShe was watching me like a hawk.\n\n\"What type of property and what type of reward?\" she slowly asked.\n\nI paused as she took a sip of wine.\n\n\"Stolen property worth millions of dollars.\"\n\nShe blinked and trembled just a bit.\n\n\"Are you American?\"\n\n\"Flo, this isn't about me. For this to happen I'm Sam Anonymous.\"\n\nWe both sipped of our drinks. She was watching me from the corner of her eye.\n\n\"What would my role be? And how would I be paid?\"\n\n\"Middle man and you will be paid handsomely. In fact, you will set your own terms.\"\n\n\"Stolen goods? I'm sorry; I don't want to get into trouble.\"\n\n\"Yes, stolen goods and I can assure you that you will not be in trouble. In fact, you will be working closely with Scotland Yard, the FBI, probably Interpol and God only knows who else.\"\n\nShe took another sip of her wine and then slowly set it down on the table.\n\n\"When you said recovery, what did you mean?\" she asked.\n\n\"I meant the return of stolen goods to the original owners. There is a reward being offered for the successful recovery.\"\n\n\"And I would get that reward?\"\n\n\"No, the current holders of the stolen property would. You would be on contract and would earn a fee to act as middle man.\"\n\n\"I see.\" She sipped her wine.\n\nI wasn't certain that she did. I sipped my beer.\n\n\"Who do you work for?\" she asked.\n\n\"I represent the current holders of the stolen property.\"\n\n\"The thieves,\" she stated rather than asked.\n\n\"Errr... not exactly.\"\n\n\"Hmm...what's the stolen property?\"\n\n\"I'm sorry, Flo, I can't tell you. Yet.\"\n\n\"Why aren't you acting as the middle man; why do you need me?\"\n\n\"I'm too close,\" I said and looked her in the eye. \"Come on, finish your drink and let's take a walk outside where we can talk more freely.\"\n\nWe gulped the rest of our drinks back and both got up to go outside. I motioned for her to go first and I caught the door with my shoe and my shoulder as she walked through first.\n\n\"Come on, let's walk along the Thames to the Cutty Sark and back while we talk.\" I needed the pub staff to have time to clean off the glasses and wipe the table down before I divulged any more information. I pulled a Boston Red Sox baseball cap onto my head. I kept my head tilted down as I walked, which must have seemed natural as she was so much shorter than me.\n\n\"Are you interested so far?\" I asked as we walked down the cut stone stair to the Thames walkway.\n\n\"With caution, yes,\" she answered.\n\n\"Good, because caution is precisely what you will need. That and your wits about you.\"\n\nOn the south side of the River Thames, in Greenwich across from the Isle of Dogs, a stone walkway extends across the front of the grounds of the Old Royal Naval College and the National Maritime Museum. The grounds and the area are rife with history. Time and space literally came together right there. The paved stone walkway is perhaps eight foot wide and has a cast iron railing along its length, protecting people who are strolling along from falling into the river. It's a fantastic space with the Queen Mary Court on the left and King William Court on the right, and an expansive lawn in between. It's the former site of the Greenwich Palace, birthplace to Tudor Queens. It extends from Park Row on the east to the Cutty Sark on the west. The actual ship is in dry dock there.\n\nIt was a nice sunny day. You could feel the coolness off the water. The Thames itself has an olfactory presence, yet not unpleasant from our current location. It was London, in its absolute regal finest.\n\n\"What exactly will I have to do?\" she asked as we strolled along.\n\n\"Basically, what I ask you to, nothing less and most definitely, nothing more.\" I stopped momentarily and looked her straight in the eye as I said that.\n\nWe walked along. \"It's a painting. Worth a lot. I'll give you details of which painting it is and who holds title and all that stuff once you make a firm commitment to me that you are on board.\"\n\n\"What kind of commitment do you want from me? I'm not giving you any money,\" she stated quite emphatically.\n\n\"Oh, I'm not looking for your money.\"\n\n\"So, what kind of commitment?\"\n\n\"Just your word. But I haven't told you everything that you need to consider before I ask you for your word. Shall I go on?\"\n\n\"Yes,\" she said.\n\nWe resumed walking.\n\n\"The very first thing that you will need to do is obtain from the Metropolitan Police and whoever else they need to go to, immunity from prosecution, because let's face it, you will be dealing with stolen goods. It's not an unheard-of procedure here in the UK. And until you have that assurance from the authorities here, do not proceed. Do you think you can arrange that?\"\n\n\"Um... I think so. I think I would have to tell them what the painting is...\"\n\n\"Oh, most definitely you will,\" I rejoined instantly.\n\n\"Second thing is that you have to understand that the police will want to run a concurrent sting operation. They're probably compelled by law to do so.\"\n\nShe simply looked up at me as we walked.\n\n\"Sting operation?\"\n\n\"Yeah. They are going to want to find me as the first stepping stone to nailing the original thieves.\"\n\n\"But you said you're not the thief?\"\n\n\"That is correct, Flo. I'm not a thief, nor am I part of a thieving gang.\"\n\nI paused for a moment before continuing.\n\n\"You will be under immense pressure from the police and other authorities to comply with their requests. You must not give in to them. Remember. You are the middle man. I have to trust you and they will have to trust you, too. You can't be their pawn, although they will certainly want you to be.\"\n\nShe said nothing as we walked along.\n\n\"Flo, the people holding the painting aren't nice.\"\n\nShe stopped and looked up to me. \"Will I ever be in personal danger?\"\n\nI looked back down at her. \"You're in personal danger right now.\"\n\nShe turned a little white.\n\n\"This isn't a game, Flo.\"\n\n\"Why me?\"\n\n\"You're young, energetic, smart and your office isn't in downtown London.\"\n\n\"What's wrong with downtown London?\"\n\n\"Too many surveillance cameras.\"\n\n\"Why do I need to hide?\"\n\n\"You don't, I do.\" I pulled the front of my cap down a bit. She got the point.\n\nWe walked past a newsstand at the Cutty Sark. \"Flo, I'm going to ask you to do something that will sound a bit bizarre right now.\"\n\n\"What's that?\"\n\n\"Go and buy two copies of today's Sun and put them into your bag.\"\n\nShe did and came back. We started walking back.\n\n\"The true owners of the painting and the authorities that they deal with have been approached by plenty of fraudsters, confidence men, forgers, crooks, nut-balls, you name it.\"\n\nWe walked for a few moments.\n\n\"They will need to be sent proof that the painting exists and is in fine shape. Proof of life.\"\n\n\"How will I do that?\"\n\n\"This is good, Flo. You said 'I'. I take that as a positive. You're starting to take ownership of this project.\"\n\n\"I'm must say I'm intrigued.\"\n\n\"I haven't told you everything yet.\"\n\n\"Go on then, Sam.\"\n\n\"After you obtain immunity from prosecution, I will be providing to you proof of life photographs, which you will pass on.\"\n\nI think it was all sinking in. I continued, \"Once the true owners are convinced that the stolen painting is fine, you will then have to set up for their experts to physically view the painting to determine that it is indeed the genuine article.\"\n\nI paused, she was listening intently. \"Once that happens,\" I said, \"an exchange, painting for reward money has to be arranged.\"\n\n\"So, is that like a ransom?\" Flo asked.\n\n\"It's like a ransom, but it's not. It's reward money being paid for the successful recovery of the painting. Public institutions and police departments can't get involved in paying ransom money, but they pay reward money all the time. It's like paying an informant.\"\n\n\"Hmm... and I get a fee to put the deal together?\"\n\n\"Exactly. You've got to be the middle man. The true owners will be paying you to put the deal together. I'll be driving the deal, but you will have to make it happen.\"\n\n\"Hmm.\"\n\nI took a few paces to think about what I had to say next.\n\n\"If you agree to proceed, there are, as I see it, three possible outcomes for you. One, you will succeed in having the painting returned and your face will be splashed on the tabloids as being a hero and you will have earned a pocketful of coin and let's face it... you will have a high profile jump-start to your career. Two, the negotiations fail for whatever reason and the painting does not get returned and everyone goes home with long faces. And three, they find your body right down there in the Thames,\" I pointed.\n\n\"Are you threatening me?\"\n\n\"No, I'm merely letting you know what the reality is.\"\n\nWe walked along quietly for a good hundred feet.\n\n\"You speak to no one about me. I'm Sam Anonymous. Don't even tell them I have an American accent. Got it? If they ask for a description and they will, or ask where we met, or how, or when will we meet again... you say nothing. Are we clear on that? I have to trust you, Flo.\"\n\n\"Yes.\"\n\n\"But I have to trust and verify.\"\n\n\"How?\"\n\n\"Leave that up to me. But this I can tell you. If we meet face to face again, it will be on terms which I set out. Only. And the first thing that I'm going to ask you to do, is take all your clothes off.\"\n\n\"What are you, some kind of fucking perv?\" She was shocked.\n\n\"No, Flo. I will need to verify that you're not wearing a wire and that your clothes and bag haven't been converted into surveillance equipment alla Q, in James Bond.\"\n\nShe stopped walking. \"You're serious, aren't you?\"\n\n\"You're fucking right I am. And if you're wearing a wire or are part of their sting operation, I've been compromised and you'll be in there.\" I pointed to the Thames.\n\n\"Shit.\"\n\n\"No shit.\"\n\nWe walked silently for a few moments. She had a funny look on her face. I couldn't tell if it was a bit of a grin, or maybe fear or apprehension. I just couldn't read it.\n\n\"So, do I have your word?\" I gambled.\n\nShe hesitated, took a deep breath and said... \"Yes.\"\n\nI smiled, \"Good, this I can assure you. You will be well paid and it will be the most fun case you will ever have. If you behave and stay on the straight and narrow and by that, I mean no co-operation with the police. None whatsoever.\"\n\n\"So, what's the painting?\"\n\n\"Not so fast. You do what I tell you, remember?\"\n\n\"Okay, what do I do?\"\n\n\"First thing that you have to understand, you are not to ask me any questions. Understood?\"\n\n\"Okay, fine.\"\n\n\"Flo, you've got to recognize. If you're asking me questions, I don't know if you are asking on behalf of the police or not. So just don't ask me any questions okay?\"\n\n\"Fine.\"\n\n\"I'll explain everything you need to know in detail.\"\n\n\"Okay.\"\n\n\"Reach into my right hand pocket. There are two objects in there. Pull them out, they're yours.\"\n\nShe pulled out a cell phone and a little plastic baggie with five British coins in it. All clean of course. The coins were: One Penny-2008, Two Pence-2017, Ten Pence-2018, Fifty Pence-1997 and One Pound-1983.\n\n\"I call you. You don't call me.\" With that I pulled out my cell phone and hurled it into the Thames. \"In fact, I'll be texting you whenever possible. You'll have to find a charger. There are lots of minutes on the pre-paid plan. Don't use it for anything else. Don't give it to anybody. Don't let it out of your sight.\"\n\n\"Okay. What are the coins for?\"\n\n\"Can I have one copy of The Sun?\" She opened her bag and handed me one copy. \"Thanks.\"\n\n\"Very quickly, you will have to give proof of the painting's existence and an indication of its authenticity. The proof of life. I will arrange to have photographs taken of the painting front and back, plus one with this newspaper in front. Bottom left corner as the viewer sees it. Plus, I will take five detail photos showing the pattern of cracquelure and paint strokes for random areas numbered one to five on the painting and one photo showing the numbered locations general arrangement on the painting.\"",
        "\"What's crack...\"\n\n\"Cracquelure is the random paint cracking pattern in old oil paintings. Extremely hard to forge. The painting's true owner's experts will make an examination of the cracquelure on the new photos submitted and compare them to known photos.\"\n\nShe held up the little baggie of coins. \"What's this for?\"\n\n\"I have a matching set, in the same years. When you sit down with the police at Scotland Yard, ask whoever you are dealing with to arrange the coins randomly but sequentially one to five. You will have to relay to me what that order is and make sure the police make a record for themselves. The corresponding coins will be placed adjacent to the numbers one to five in the detail photos showing the year of issue. It will be absolute proof that the photos are current and genuine. When they see that, they'll be serious.\"\n\nWe were back at the laneway that leads to the pub.\n\n\"Do I still have your commitment?\"\n\n\"Yes, you do.\" She smiled.\n\n\"I'll text you later with the name of the painting and the recovery amount and then you're off to Scotland Yard to get your immunity. And one more thing. I would recommend that you demand a contract from the actual painting owners for your services and that you should get some good faith money up front, and no later than when the proof of life photos are handed over. You're going to have expenses. And make sure your passport is up to date. Okay, off you go. Good luck and please understand this, this is most important, seriously, your life depends on it, resist the pressure and temptation to co-operate with them. From their perspective, it has to be that... you are in charge, you are the one dictating the terms.\"\n\nShe took a deep breath, \"Okay.\"\n\n\"Also, whatever else you have going on, in either your professional life or your personal life, it all has to take a backseat to this project,\" I stared into her eyes, \"Is that clear?\"\n\n\"Yes,\" she said with perhaps just the slightest hesitation.\n\n\"And one last thing, Flo. Time is of the essence. You need to act fast.\"\n\nShe simply stared at me with a bit of awe in her eyes.\n\nI extended my right hand out towards her, \"Flo, do we have a deal and do I have your promise and commitment?\" I know I had a serious look in my face.\n\nShe looked at my outstretched hand and then up into my eyes, \"Sam,\" her hand reached to mine and our palms wrapped together, \"we have a deal and I promise that I will do my very best to complete this transaction.\" She smiled.\n\nHer touch was warm and she was lovely.\n\n\"Thanks,\" I said.\n\nI watched her get into a little white Mercedes and drive away.\n\nWhat a sexy little doll I stumbled upon.\n\nI sat down at the adjacent pub, The Trafalgar Tavern, and ordered a pint and some steak and mushroom pie. I didn't see any cops come and visit The Yacht.\n\nThat was a good sign.\n\nThat night, after buying some photo equipment, with Sterling, I used another pre-paid cell phone to text her. 'Vermeer - The Concert - $5 million US -- stolen from Isabella Stewart Gardner Museum'. There was plenty on the internet about the painting and the theft.\n\n*****\n\nThe Concert was painted in 1664 by Johannes Vermeer, a Dutch master from Delft. It is painted oil on canvas, 28-1/2\" high by 25-1/2\" wide. The painting was cut from its frame during the 1990 theft.\n\nThe painting shows the interior of a room with the sun coming in from the left. There is a black and white tiled floor, a table to the left in the foreground with cloth and violin on it and a double bass laying on the floor next to it. The back wall is plain but has two large paintings mounted. A young lady sits in profile with her back to the window playing a harpsichord like keyboard; the instrument's top lid is raised to reveal a painted landscape on the underside of the lid. Her hands are just out of view. A man sits on a chair to her right with his back to the viewer. He is playing a lute. To his right, another young lady stands in quarter-profile holding some sheet music, singing. Their clothing all has natural creases and is typical of the period. The tiled floor gives perspective depth to the painting, while light from the window contrasts light and dark, especially on the folds and creases of the clothing.\n\nThe viewer can only guess at the relationship among the three. Is it a man and his two daughters? The music teacher and two pupils? Or a man and his two lovers? Either way, in Vermeer's microcosm, they are the only two ladies in the lute player's world.\n\nThe painting is calm, serene, elegant and refined. We can almost hear the music. It is a quintessential Dutch masterpiece.\n\n*****\n\nI jumped onto an 'easyjet' flight to Douglas, Isle of Man, the next morning and headed straight to the bank. After a short wait, I was given access to the safety deposit box viewing room. As the clerk retrieved box #105 for me, I was able to re-confirm that there were no internal cameras within the viewing room. I had brought along the photo equipment that I bought the night before: an electronic camera with a high pixel resolution, two small tripods, an extension cord and some portable LED lighting that I set up on one of the tripods after the doors were secured and I was safely ensconced with the Vermeer.\n\nI had plenty of batteries for the camera.\n\nThe painting had been attached by a previous owner, perhaps Mallory, to a modern white 30\" x 30\" painter's canvas with what I guessed was double sided tape. It appeared to be in excellent shape.\n\nWith the painting flat on a table, with the table covered in black velvet, I took the front shots from above, several times. I took several with the folded copy of \"The Sun\" in the bottom left corner.\n\nI gently placed five red paper cut-out numbers at interesting, yet random, positions on the painting. Each number was three quarter of an inch high or so. I had to take 5x4x3x2, that is a hundred and twenty photos of each coin in each respective position on the canvas, every permeation mathematically possible. In addition, I had to take an additional twenty five close up shots of each coin at each position.\n\nI had to carefully peel the original painting off of the new painter's canvas. It came away easily with the tape still attached to the original painting. There were definitely marks on the back, including a stamp from the Gardner museum, which I figured the museum would be most interested in seeing. I took a bunch of shots and then placed the painting back onto the painter's canvas right way around, stored it back in the safety box and closed the lid.\n\nI was done and packed up in just over two hours. On my way out, I asked one of the staff what procedure was needed to have someone else be able to access the safety box. Her answer was that I would simply have to register that person's name with the registry for that box at the bank and that that individual, just like I had to, had to show two pieces of ID, or, if not registered, that they would have to come with a certified Power of Attorney document, or a certified Death Certificate document together with Trustee certification, some ID and most importantly, the key.\n\nPerfect, I registered the name Florence Ashworth as having access to the safety box #105 and gave her full signing authority on the safety box account.\n\nI opened yet another account at the bank and gave a standing instruction to the bank that any funds that come into the new account were to be transferred immediately and automatically to an account number I provided. The other account was an unallocated account with the London Bullion Market.\n\nI asked the teller who set up the account, \"When money comes into this account, how long will it be in this account before it's transferred out to the other account?\"\n\n\"Seconds, I would think. Certainly not long enough to earn any interest.\"\n\n\"Show me,\" I pulled out a ten pound note, \"deposit this.\" She filled out a little slip, I signed it with my alias, carefully minimizing my DNA exposure on the slip. She took the money and placed it in her till, stamped the slip, on her computer she credited the account, filed the slip and then turned her monitor so that I could see.\n\n\"Look,\" she pointed to the account activity screen, \"gone.\"\n\n\"Perfect, thank you.\" I waltzed out.\n\nEverything except the little flash card with the photos was carefully disposed of in a dumpster before I left the Isle of Man. I wore cream coloured latex gloves the whole time. The little flash card was stuffed into my wallet next to my fake ID.\n\nI caught the next flight to Dublin. I had a couple of hours layover in Dublin before I had to be back at the airport to catch a connecting flight to Bogota via Atlanta.\n\nMy biggest issue was the Colombians.\n\nThe next forty eight hours were going to be scary.\n\n*****\n\nI met the Murphy boys at the appointed hour at The Quay's Bar in Temple Bar Square in the heart of Dublin. It was a picturesque, touristy little pub, painted a quaint green. The pub sat on the corner of two little cobblestone streets. For us, it was handy because it was very random/public, yet tucked into a corner inside, very private.\n\n\"Ben, what do want us to say?\" Sean said as he sat next to his brother on the other side of corner booth, each of us sipping a pint of Guinness.\n\nThey were clearly brothers. Seamus was perhaps a little heavier and not quite as handsome as his older brother, and they both wore thin beards and somewhat tatty jean jackets. Perhaps the ten day shadow look was the deliberate cool look for young men in Ireland these days. Both of the lads needed their curly brown hair cut.\n\n\"You do realize that your father owes me 2.7 mil, US?\"\n\nThey looked at each other and said, \"Yes, we understand that. Look we're going to get that for you...\"\n\n\"We're just having a little difficulty right now...,\" Seamus added.\n\nJust fucking great.\n\n\"Who's going to take over?\"\n\n\"Me,\" Sean said.\n\n\"Sean and I,\" said Seamus.\n\n\"Who will be in charge? Or let me put it this way...who do I kill first?\"\n\nThey both turned a little white.\n\n\"Mr. Ben. Sir.\" Sean started, \"Our father had a great working relationship with you for years and years. I can't see why we can't continue in his footsteps. As you know, we ran the movement end of the business...\"\n\n\"I know that,\" I interjected. Reality check\u2014 Mallory had to recrute his own kids. Everyone else either fled the country, was killed or was drafted into some rag-tag jihadist militia.\n\n\"For years,\" Sean finished his sentence and then continued after a sip of black beer, \"we wish to continue, if you will have us.\"\n\n\"I do, but I need to survive the next few days and weeks. Your father owes me...you owe me two point seven, US. I need to pay the South American gentlemen for their gratitude towards us. Right now I can't cover it and I'm stuck with your dad's token IOU.\"\n\n\"A painting of a man and two ladies playing music?\" asked Seamus.\n\n\"Yes.\"\n\n\"Oh,\" they both responded simultaneously. \"We were going to check on that,\" Sean added.\n\n\"No need to, I've got it. Your father's vault box is empty.\"\n\n\"Congratulations,\" Sean retorted.\n\nI leant into his face, \"Listen buddy, I don't want it. It was a temporary gesture from your father. I want you to buy it back for two point seven...now.\"<br >\n\n\"Ben, Sir,\" answered Sean, \"we're simply not able to right now. Hopefully, soon. You have to understand the challenges we've been going through with the changing middle-east situation. It's been a nightmare. The good news is the Afghani's seem to be back as strong as ever. The problem is their supply lines back to us have been decimated. That's what our father was doing when he and I were in Istanbul, trying to piece it all back together. Now that they know he's dead; he literally died in their arms; they are certainly not just stepping forward and volunteering to us what is owed.\"\n\nOf course they were right. I knew all this intrinsically, already.\n\n\"Well how do you plan on getting that money then?\" I asked.\n\n\"We're talking to some local people here that should be able to apply some pressure in Istanbul on our behalf, but nothing has been resolved just yet.\"\n\nGreat, they're talking with the Irish gangs.\n\n\"Collectively between you two and your father's entire estate, how much is it all worth?\"\n\nThey paused and looked at each other and then back to me. Sean answered, \"If we pooled all of our resources together and sold the family house, it would be close to the money that we owe you. It would take years to get, but I don't see that we need to do that. We simply need to sort a few things out. Ben, please, don't worry, the two point seven will be covered.\"\n\n\"Good.\" I leaned in, \"because I'm not going to die because of your father's bad debt. Do you two understand that? The South Americans that I have to deal with, they're just not fun people. I'm flying from here to go and meet them. I'm going to try to negotiate terms for all three of us. Believe me, they will take me, my parents, my two daughters, you two, your mother and your wives or girlfriends and whatever families you have out, too. You've got to understand, these people have this attitude: they want to impress the world.\"\n\n\"How will they know about us?\" asked Seamus.\n\n\"Do you honestly think they don't already know? Are you fucking crazy? They don't want us as clients for who we know as contacts to move their product. We work with them because we can, more or less, consistently move their product, and most importantly, consistently move the money that's associated with it, back to them. We're just the horses they see with saddle bags of their product running off to the promised land. They know who the fuck you are. One of their people may be sitting in the booth behind us right now. Don't kid yourself, Seamus. I can't believe you guys are that na\u00efve.\"\n\n\"We're not, Sir, We're not.\"\n\n\"Ben is fine; you don't need to call me Sir, but seriously guys. I'm flying there and I'm going to try to buy us some time. They will be only so patient.\"\n\n\"We'll do everything we can,\" said Sean. \"Absolutely,\" countered Seamus.\n\n\"In the interest of self-preservation, I suggest you do. In the meantime, I'm going to try to unload 'the ladies' as you called them.\"\n\n\"Well if you do that then we've gained debt relief from you,\" Sean said with a bit of gaiety to his voice.\n\nI leaned into him and looked him straight in the eye. \"Sean,\" and then looked over to his brother, \"and Seamus,\" I paused gathering my words, \"it's an IOU. Not Payment. If I manage to keep my head attached to my torso, if I manage to avoid having our collective families murdered by those thugs and if I manage to successfully sell the ladies back to their rightful owner without being taken down by Scotland Yard, your prosecutors offices whatever they're called, Interpol, the FBI, the US District Attorneys and probably the CIA and MI-five, six, seven, whatever they're fucking called, and God only knows who else, you are going to fucking owe me for saving your necks. You got that? That price starts at two point seven. Do you fucking understand that? Me selling the ladies is my relief and only your temporary relief. Or look at it this way. I don't know how much I'll get for the piece, hopefully enough to cover my debt. I'm paying the short term price, you are paying the longer term price for your father's untimely demise. Are we crystal clear?\"\n\n\"Yes Sir,\" was their collective answer. I drank a bit more of my Guinness beer, gently placed the glass on the wooden table and stood up.\n\n\"Nice to see you boys again, we'll be in touch.\" I walked out of the pub and hailed a cab back to the airport. My flight bag bounced as it rolled along the cobblestones.\n\n*****\n\nBogota is a vibrant city with a massive population. I hired a car and an English speaking driver to take me to Marguerite's tumble down restaurant just outside of La Florida, Cundinamarca, on the road to Medellin. Once outside bustling Bogota, the impression of the countryside is palm trees, lots of vegetation, heat, colourful ramshackle buildings, corrugated metal roofs, random piles of tires on the sidewalk, children running wild, old men sitting smoking, laughing and drinking. Dogs, chickens and lots of faded painted advertizing. I got there during an election, just more advertizing to distract the eye. Colombians, as far as I could tell, were a happy lot in spite of the fact that, outside of Bogota, they seem to be teetering between second world and third world. Except for their football team, their coffee and their cocaine, those good people are... challenged in so many ways.\n\nI got there a couple of minutes early. I had the driver park the car in the shade and wait for me.\n\nMarguerite's is a small caf\u00e9, basically a small store made of breeze block and a corrugated roof. As you walk in you come right up to a service counter. The store is completely packed with coolers and shelves filled with all manner of unpronounceable delicacies.\n\nThere's a kitchen in the back, one very rudimentary washroom and access to the small patio that wrapped around the side and the back of the building. The patio is separated from the street with a low iron gate. A metal fence holds back the lush green shrubbery, defining the perimeter of the patio which holds six picnic style tables and an outdoor grille. Each table has a round hole in the centre to accept a big umbrella, but currently there was no sign of rain and hence, no umbrellas. Chickens roamed freely, pecking at the pea gravel and concrete pavers in the sunlight.\n\nI managed to get myself a cold beer and a soda for the driver.\n\nMarguerite, who is somehow related to Camilo, is a short woman with dark hair, probably in her fifties. She has that real exotic native look and a brilliant smile with bright red lipstick, all highlighted by the scarlet begonias tucked into her hair. She was a classic beauty that only refined with age. Sexy as hell. Knowing I was watching her, she smiled as she sang and half danced to herself all the while as she deep fried empanadas on the outdoor grille. She had rings on her fingers. I checked to see if she had bells on her toes, too.\n\nPity she didn't speak a word of English, though, I would have loved to strike up a conversation with her.\n\nShe had three clear glass jars with her homemade salsa 'aji pique' she called it and a big pile of cut up lime quarters waiting next to the grille.\n\nCamilo and his entourage arrived a few minutes later. Of course, Camilo showed up with Ernesto, his main henchman, in a dusty black Mercedes. They were escorted by two battered mini-vans full of tattooed thugs, one in front, the other behind.\n\nCamilo is sixty-five or so, a big heavy guy with leathery skin darkened, I'm sure, from sitting around a pool all day. His hair is still jet black, as are his eyes. We'd only met face to face a few times, but every time I did, it was always at Marguerite's and I'd always come away with the odd impression that he was not capable of smiling.\n\nCamilo was a bona-fide cartel member. He was just one of dozens or hundreds of...call them, lieutenants in the organization. He was the only guy that we dealt with and I knew for a fact that we were not his exclusive exporters. Most of the Colombian coke passes through Mexican hands. We're able to move much smaller amounts of his refined product directly to more profitable markets, albeit for a higher transport fee. That's our niche. Ours is a competitive business.\n\nErnesto his henchman was mid fifties, a wiry medium built, scary looking man with black hair, a handlebar mustache and an ugly scar along his right jaw line. He always gave me the creeps. Usually his shiny pistol was on prominent display in a black leather holster.\n\nWe sat in the back part of the patio. We were well protected, courtesy of Camilo, which I always found strange. With me\u2014alone, straight off a plane, unarmed\u2014he needed a small contingent of an army with him? Could I have been that much of a threat, or was there always something collateral in the back of his mind, associated with my appearance? Maybe it was an ethnic thing? Maybe the road was dangerous. Nevertheless, this was Camilo's turf. I'd been there a half a dozen times before.",
        "I had always rationalized that it was just a power show, and, in my view, really just a sign of weakness. Nevertheless, Camilo was okay. I'd known him for years. Between Pops and I, we'd done a gazillion dollars of business with him over the years. It should have been smooth sailing, but I knew it was not going to be.\n\nI bought up all of the cold Bud Lites for the gang. It was the only American beer that Marguerite carried. I paid her two US fifties for the beer, telling her to keep the change. It was fucking hot out, and I'd already finished my first one. I certainly needed the fluids.\n\n\"Ben, you owe me two and one half million dollars.\" Me-lee-yon is how he pronounced it.\n\n\"Yes I do Camilo. Yes I do.\"\n\nChickens pecked the ground nearby.\n\n\"Ben, you were short on the last money transfer.\"\n\n\"Yes I was Camilo. I certainly was. That's why I'm here.\"\n\n\"What the fuck happened?\" He motioned me towards a pair of tables just around the back.\n\nErnesto followed.\n\n\"You heard about the bust I had last year?\" I asked Camilo. Everyone else was out of earshot range.\n\nWe sat down facing each other on the table-tops of adjoining picnic benches. Ernesto kind of leaned on the side of Camilo's picnic table.\n\n\"No,\" Camilo answered flatly.\n\n\"In Athens? Heroin.\"\n\nAfter a moment of adjusting his big ass on the table top as it creaked from his weight, he finally said, \"I remember something. Was that you?\"\n\n\"Yeah.\" I said almost dismissively.\n\n\"So what? You didn't get nailed. You're sitting in front of me, so obviously you didn't get nailed.\"\n\n\"No, that aspect was covered, the point is though, I took a financial hit.\"\n\n\"So? We all have losses from time to time.\"\n\n\"I get that Camilo, trust me I get that. It's just that that one, from my perspective, was really big, and before I'd had a chance to recover, I suffered another loss.\"\n\nHe was silent for a second or two.\n\n\"So what are you saying? Is your network compromised, is that what you're thinking?\"\n\n\"Fuck no. Not at all. The Athens bust happened because one engine failed shortly after take-off on a commercial airline flight from Istanbul. They landed in Athens and then all of a sudden, we were off script. A fucking beagle sniffed us out.\"\n\n\"But you didn't go down.\"\n\n\"Camilo. Like you, I'm a professional; what the fuck are you thinking? I'm layered, too.\"\n\n\"Okay. You're right, Ben,\" he paused for a moment.\n\n\"What's the issue and where is my money?\"\n\n\"That's what I need to talk to you about.\"\n\n\"Why? You owe me two and one half million dollars. That's the end of the discussion. I'm not renegotiating.\" He didn't look very pleasant or happy.\n\n\"Camilo, please, listen to me. Mallory died. Do you know who he is?\"\n\n\"Of course, your shipping guy into Europe. What the fuck? He was a young man.\"\n\n\"Well, pushing fifty I think. And he was my guy into the middle-east, not Europe.\"\n\n\"Who took him down, or is it impolite for me to ask?\"\n\n\"It's not impolite, after all, self preservation is the name of the game, right?\" I smiled.\n\nCamilo half smiled back at me. I think that was the first time I ever saw him smile.\n\n\"A bee.\"\n\n\"A bee?\"\n\n\"Yes Mallory was stung by a bee and had an allergic reaction.\"\n\nCamilo said something very quickly in Spanish to Ernesto that I couldn't quite comprehend.\n\n\"Camilo, the fucking bee has done me serious harm.\"\n\n\"What harm?\"\n\n\"It killed Mallory at a most inopportune time.\"\n\n\"What do you mean?\"\n\n\"He hadn't paid me fully for the transfer of your product.\"\n\n\"Ben, Ben, please, please dear Jesus don't be saying you can't pay me.\"\n\n\"I can't pay you right now Camilo.\"\n\n\"Oh dear mother Mary! Please don't make this so...\"\n\n\"Camilo, I just need some time, I'll pay you. I just need a bit of latitude.\"\n\n\"Ben. With all due respect. I like you. We've been doing business together for how long? Sixteen years?\"\n\n\"Something like that.\"\n\n\"We've always been successful and kept our professional distances, but I feel that perhaps you don't have a full understanding of our respective positions in this business.\"\n\n\"Well, I think I've always imagined fairly accurately.\"\n\n\"Imagine all you want, Ben, but here is the cold reality. I have hundreds of families growing coca. They're not planting coffee or corn or any other crop, they are growing coca. For me. Collectively, with their children and extended families, there are thousands of people. They're all relying on me. Uncle Camilo. They grow it, they harvest it, they turn it into chagra paste which costs them money to do, and I then crystallize it, package it and give it to you, and others, for shipping.\"\n\nCamilo was wound up. Sweating.\n\n\"I need to pay them. They need food, tampons, pants, a new frying pan, cooking oil, just the basic necessities is really all they get. I'd love to give them the moon, but I can't. And now, Ben, for the love of God, are you really saying that you can't pay me the two and one half million dollars that you owe me? Have you any idea of what that much money means to this community?\"\n\nI couldn't say a word.\n\n\"My people, the thousands that rely on me, will go hungry. I will be a failure. Ultimately, it will be the end of me.\"\n\nHis head hung low. Was it just a show? After a few moments and after that little bit of self humiliation, Camilo sat up and took a deep breath. In that breath, I was certain, that I saw, what he had resolved in his mind: my death.\n\nA chill ran through my spine.\n\n\"Ben. You have to pay me, there's no other way.\"\n\nThis was my life on the line.\n\n\"Camilo, I have several solutions to the problem bubbling away. I just need a little time to make it happen.\"\n\n\"Explain that to a hungry belly.\"\n\n\"Camilo, we need to work together on this.\"\n\nHe slammed his Bud Lite bottle down onto a concrete paver scattering glass and chickens everywhere. He stood up and put his fat brown finger in my face, \"Listen to me, Ben! WE are not working on this together. I've got my own problems which you have just made two and one half million times worse. You owe me two and one half me-lee-yon, US. Fucking pay me!\"\n\nHe stepped away. Ernesto was suddenly in my face.\n\n\"Camilo, please, just give me a little time...\" I said trying to ignore him.\n\nHe stopped, took a deep breath and stepped back towards me. Ernesto backed away a little. \"Ben, personally I'd give you all the time in the world. In fact, I'd forgive your debt. But I'm not in a position to do so. As I said, that money is already allocated for fry pans and insulin and pork chops and rice and pencils and chicken feed. Ben! I don't have room to fuck up on this.\"\n\nI was speechless. He had a very ugly look in his face. But then he inexplicably softened his expression.\n\n\"Ben, if you set me back,\" he said very carefully, \"and if I can't look after my people as a result, I will look weak.\" He took a deep breath. \"There are many who will try to step into my shoes.\" He took another deep breath but couldn't look me in the eye. \"In the situation I'm in, Ben, I need to appear strong.\" He glanced at me quickly with his black eyes. \"Ben, sometimes appearing to be strong means... appearing to be ruthless and bloodthirsty.\" Then he looked me straight in the eyes.\n\nHe had cold eyes. I got the message.\n\n\"What's my timeline?\"\n\n\"I don't know, not long.\"\n\n\"I ask you, Camilo, run it out as long as you can. And please don't involve my family.\"\n\nAfter a long silence he said, \"Ben, I can't even make that promise.\"\n\nOh fuck.\n\nClearly, he didn't want a Vermeer.\n\nI had to make the sale work. Camilo had galvanized my thinking.\n\nI grunted, waved goodbye and stepped towards the iron gate. Chickens ran.\n\nErnesto suddenly was in my face! Subtly menacingly in his personal demonic manner, he quietly said to me, \"You fight for money, we fight for honour.\"\n\nI leaned into his ear, \"Ernesto, you're absolutely right,\" I whispered, \"we all fight for what we really need.\"\n\nScar-chin got it as I stepped into the car. He wasn't happy. He made an index finger cut across the neck motion while watching me pulling out in the taxi.\n\nI didn't even get a fucking empanada.\n\nI flew back home a nervous wreck.\n\n*****\n\nI was in a mental state, a very rare place for me to be, wherein things were very clear to me. Everything was in sharp relief. Black and white. Although Marcella and I had been effectively divorced for the last number of years, I didn't love her anymore, but I didn't hate her. I certainly loved my daughters. Normally I would think things through. Calculate. Eliminate the risks.\n\nNot now.\n\nI didn't have time and only limited funds. I knew I had to go out on the limb, to take risks. It was my last roll of the dice.\n\nLiterally, a life roll.\n\nThe other notion that jolted into my brain was, strangely enough... yes, I'm a walking dead man. And yes, I probably have only a very limited time on this planet. Therefore, I was somehow obligated to collect as much pleasure and happiness as I possibly could in the short time I had left. It was an extremely greedy, fully hedonistic thought.\n\nBut there it was. Crazy.\n\nFlo, naturally, worried me. Was she going to succumb to police pressure? That was a huge question. I needed to find out. Trust but verify.\n\nIt had been five days since our walk along the Thames.\n\n*****\n\nI flew to London with a fake passport and another pre-paid cell phone.\n\nI texted Flo. 'Let's meet today. Make your aft free. Be in your office, will text again with info after 12.'\n\nI figured that should give her, and hopefully not the police, sufficient time to get organized.\n\nI sat outside her office in a rented car. I watched her pull up in her little white Mercedes just after eleven; that was twenty five minutes after I sent her the text. About twenty minutes after that, two people, a man and a woman, pulled up in a clean, white minivan and went into her law offices. They were wearing business suits. Cops?\n\nThe two people never came back out.\n\nAt twelve twenty, I pulled out of my parking spot and re-positioned myself about a hundred yards down the road. I could just see her parked Mercedes and the sidewalk in front of her office. I texted her, 'Go to Biggin Hill in Kent, now. Pull off the road and park in front of the Crown Inn on the A233. Leave personal cell phone on desk. Go now!'\n\nI watched her leave and then, five seconds later, the two people wearing suits emerged from the law offices, too. They had to be cops.\n\nWith a little GoPro miniature camera and video recorder connected to a laptop open and sitting on the seat next to me, I did a little video shoot of the traffic flow. I watched Flo drive past me and recorded the next three minutes of cars that were following her in the same direction. I couldn't believe the resolution of that little thing on my laptop. The clean, white minivan seemingly wasn't one of the vehicles that followed.\n\nAlthough I hate driving right hand drive vehicles, I managed. I too took off down the A21 in pursuit.\n\nI checked the sky. I didn't see an obvious helicopter. I was worried a little about drones.\n\nA few minutes later, I saw her and her Mercedes parked in front of The Crown Inn just before Biggin Hill, as directed. I pulled off a hundred yards or so past.\n\n'Proceed south along the A233 for exactly 1.2 km. Pull off on the left as if you have broken down. Lift bonnet and wait in car.'\n\nI saw and videoed her pulling out from the parking lot and the next three minutes of traffic following.\n\nStill nothing in the sky above.\n\nI followed and videotaped the whole trip. I came across her Mercedes with the hood raised, as directed. I kept videotaping as I drove past her heading south.\n\nI kept checking the sky.\n\nIn the town of Westerham I pulled into The Kings Arms parking lot where I had already checked in. I parked behind the little hotel.\n\n'Proceed south to Westerham. Pretend to break down again at the main junction of London Road and the A25 right next to General Wolfe's statue.'\n\nFrom my hotel room, I videotaped the whole thing with the GoPro. The main junction was a very tight little space.\n\nI spent the better part of the next hour reviewing all of the videos on my laptop as Flo waited in her car creating a bit of a traffic congestion.\n\nI saw nothing. She seemed clean from a traffic tail perspective. If they were following her, they had to be switching cars and drivers which didn't make sense at this stage of the game. Once proof of life for the Vermeer was submitted, sure I could see them using elaborate techniques to follow her, but not at this stage in the game.\n\nBut then maybe I was wrong. Maybe they tagged her car with a device. Maybe there's a drone watching her. Fuck, it was only my neck on the line.\n\nI left the building and walked up to her and her car. I was sure she didn't see me coming. As I stepped up to her I slipped my latex gloves on. I motioned to her to unlock the passenger door. She did. I got in.\n\n\"Hi Flo, nice to see you again.\"\n\n\"Sam, what a surprise.\" She was smiling.\n\n\"Flo, I know it's a little awkward, can you make your way behind that building?\" I pointed to the Kings Arms and carefully didn't name it, \"and park your car. Do you see the entrance right there?\"\n\n\"Sure,\" she said with a grin on her face.\n\nShe did.\n\n\"Why the gloves?\"\n\nI didn't like that she was asking me a question, but I let it go. \"No fingerprints or DNA, Flo,\" I whispered, almost mouthed.\n\nShe parked.\n\n\"Okay, leave your handbag and your thin jacket in the car and follow me.\" She did. She followed me into the hotel and up to my little room.\n\n\"Flo,\" I held my gloved palms out, \"naked please.\"\n\n\"Sam, I'm not getting naked unless you do, too.\"\n\n\"Flo, why would I be wearing a wire?\" I pulled off my gloves.\n\n\"No one's wearing a wire, Sam. I'm sorry, your middle man is pushing back a little. I'm not getting naked unless you do, too. It's that simple. You said this is all about trust.\"\n\n\"Fine.\" I started unbuttoning my shirt. Her red painted manicured fingernails started unbuttoning her white blouse.\n\nShe continued, \"If you expect me to bare all, then I expect you to do so, also. It's just that simple.\"\n\nShe was wrong about that. She wasn't going to learn anything about me except for, apparently, the size and shape of my cock.\n\nWe stood facing each other with shirts off. A lacy white bra covered her small breasts. I could just make out the outline of her areola through the lacy material.\n\nShe was grinning.\n\nI was getting a hardon.\n\nI sat down on the end of the bed and pulled off my black loafers and socks. She sat down onto one of the armchairs and took off her sandals. Her toenails were painted a matching red.\n\nI stood up, undid my belt buckle and unzipped. She did the same to her blue jeans and thin gold coloured belt. We both sat back down to wrestle off our pants.\n\nI was most definitely getting stiff as I stood up to face her just in my white underwear. She stood with just her lacy white bra and matching white panties sporting a massive ear to ear grin.\n\nShe unhooked the back of her bra and let it slide down her slender arms. Her boobs were smallish, but still nicely curved, her areola a dark coral colour, her nipples wide and meaty, definitely very suckable.\n\nI could see white teeth flashing from beneath her grin as she watched me pull down my underwear. My circumcised cock sprang to life, pointing straight at her as the elastic slid down. I stepped out of my underwear as it pooled at my ankles.\n\nFlo was staring. Her eyes were wide open. Her mouth was open, but a hint of the grin still remained. She lifted her eyes to mine and reestablished her wide toothy grin.\n\nHer slender painted fingernails slid into her panties, just below her hip bones. She slowly slid them down revealing reddish brown pussy hair, trimmed into a slender vee, and coral coloured pussy lips all crinkly and soft hanging below her slit. Only then did I realize she had an inch gap at the top of her thighs.\n\nHer panties slid down to the top of her feet. I watched as a red painted toenail held the white lace panty as one foot slipped out, then with the opposite toe, the other.\n\nMy cock was raging hard.\n\nI looked into her face. Her brown eyes were sparkling, her grin had turned to a toothy smile. She lifted her right arm to her neck scooping up her shoulder length, straight reddish brown hair to reveal the sexy nape of her neck. Slowly she spun around.\n\n\"See, no wire.\"\n\nI didn't see a wire but I did see a sexy tight little ass sweeping to two dimples on her lower back and the length of her spine and her rib cage from behind.\n\n\"What I see is a sexy woman.\"\n\nShe completed the spin, dropped her hair and stepped towards me. The painted fingernails of her left hand slipped into curly black chest hairs on my sternum. Red fingernails from her right hand encircled my cock shaft.\n\n\"And what I see, Sam, is that you are very pleased to see me.\" She was smirking wildly as if she was trying to contain outright laughter.\n\nShe was gorgeous. My heart was beating away.\n\nChristo = genius.\n\nBut this wasn't going according to the plan.\n\n\"Some white wine, Flo?\" I squeaked.\n\nI stepped back, freeing myself from her grip and motioned her to sit on one of the two armchairs in the room. I couldn't keep my eyes off her; she was just so gorgeous.\n\n\"Sure.\" She sat down.\n\nEvery time I looked at her naked body my sphincter would automatically tighten up and my cock would flex up in response. It was bobbing up and down as if it had a life of its own. Every time she saw that, she giggled. My cock was level with her face.\n\nI opened a chilled bottle of Pinot Grigio.\n\n\"I'm sorry I'm a little off script here, I wasn't planning this.\" I looked down at my stiff cock as I poured the wine.\n\nI handed her a glass of wine which she sipped and then placed on the table next to her.\n\n\"I have to say, you look stunningly beautiful, just as sexy as can be.\" I set my own wineglass down and sat on the armchair next to her. I moved the little table lamp back so I could maintain a good view of her and those suckable nipples, which I noticed had stiffened a little.\n\nMy cock was pointing straight up.\n\n\"You're not a bad looking guy yourself, Sam. Tall, dark and handsome. You've got that exotic Mediterranean look, nice brown eyes, nice jaw, straight white teeth, lovely smile. Sam is my Casanova.\"\n\nWe each sipped our wine. She was grinning, I'm pretty certain I was blushing. I held a mouthful of wine in my mouth without swallowing.\n\nA red painted fingernail brushed a dark coral coloured nipple.\n\nI couldn't believe what she just did.\n\nI gulped.\n\nSweat broke out on my forehead. With that one little deft move, she just upped the sexual tension stakes a million-fold.\n\nI took another sip of wine trying to cool off my head. My cock was standing at complete attention. I put my wineglass down with slightly shaky hands.\n\n\"Sam, I don't mean to pry, but I notice that you are not wearing a ring. I take it that means you're not married.\"\n\nA question!\n\nI sighed trying to decide what to say. The truth I decided, \"I'm married,\" I stammered and then blurted out, \"she wants a divorce; we can't agree to terms. We sleep in separate bedrooms. The bitch hates me.\" I gazed at her.\n\nHer eyes went wide and then after a long moment the grin reappeared.\n\nI took another sip of my wine. As I set the glass down I noticed that she parted her knees. A red fingernail brushed her other nipple and then another one slipped down to her pussy.\n\nI was way off script. She had me.\n\nShe was diddling her clit. Her eyes hooded over a little.\n\n\"...I love chest hair on a man...\" she sighed.\n\nMy cock was raging. My mind, too. Was this woman trying to get my DNA via a semen sample? Fuck! Give it to her then, half my brain said and then followed up with... up the ass. Don't come inside her, just clean her off. Don't even touch her...",
        "\"This is crazy Flo.\"\n\n\"Is it? You just said that I'm sexy. And I can see that you are... firm... in that belief.\"\n\n\"Hoooo...\" I needed air. I couldn't believe how horny I was for that little woman. She was driving me nuts. I just wanted to lick her, eat her and fuck her. I wanted to take a sip of wine to calm myself down but my hands were trembling.\n\n\"Sam, I'm sorry, I'm naked in a hotel room with a very good looking man.\" A painted fingernail flicked one nipple then the other.\n\nI didn't know what to say. Her fat nipples were extended. Her areola crinkled up into ridges. My chest was beating.\n\n\"I've been thinking about undressing for him for days now. I'm caught up in some sort of crazy adventure with a handsome man and all I can think about when I go to bed is undressing for some American guy who goes by the name, Sam. I know it's crazy.\"\n\n\"What?!\"\n\nShe was diddling herself in earnest now. Her fingers were glistening. The fingers of her left hand were alternating from one nipple to the other and then squeezing her perky little tits.\n\nI couldn't believe my eyes.\n\n\"And here I am. My erotic dreams are unfolding in front of me, right down to the chest hairs and the big beautiful cock.\"\n\n\"What?\"\n\nMy cock was straining. My ability for rational thought was quickly disappearing. I was gripping my cock with my right hand. Pre-cum was oozing onto my index finger.\n\n\"I can't believe what is happening, Flo...\" Was I being set up? What the hell was happening? I was torn between panicking and jumping her sexy little bones.\n\n\"I'm not married. I don't have a current beau. I've only had a sad litany of pathetic wankers, wallys and complete prats as dates for the last few months...Sam, I've not had sex in almost a year! I'm thirty one, not ninety one.\" She held her palms out to me and with her eyes wide open, continued, \"And then you come along and tell me that I have to get naked in front of you!\"\n\n\"Huh?\"\n\nShe was wet. Her finger glistened in a shaft of light from the window.\n\nThe reality was I'd not had sex in probably a year, too. And that certainly wasn't with my bitch-wife.\n\n\"Isn't it obvious? Do I have to beg? I want to make love to you; I want to have sex with you. Anonymous sex. I'm not going to ask you your name or anything personal about you... except for one thing.\"\n\nA question!\n\n\"What's that?\"\n\n\"Do you have any STDs or anything else like that, that I should be worried about?\"\n\n\"No. Do you?\"\n\n\"No, but don't get me pregnant.\"\n\nThat was it. I couldn't take any more. I dropped to my knees between her thighs.\n\n\"Ohh...\" she leaned back in the arm chair and drew her knees up. Her coral coloured pussy lips opened up revealing a glistening rose pink interior. I inhaled as my opened mouth descended onto her loveliness. Sweet, musky, earthy, sweaty pheromones flooded my senses. My eyes rolled from the sudden sensory overload. Flo smelled every bit as lovely as she looked. I tasted her with my tongue and lips. She tasted divine.\n\nMy hands lightly pushed on the back of her thighs and my tongue and lips danced on her exquisite pussy. I probed, licked, nibbled, kissed, sucked, flicked, tasted, swallowed and licked some more. It took me a few moments to understand that it wasn't her pleasure that I was seeking but my own greedy hedonistic self's.\n\nI had to slow down.\n\nI gently sucked on her clit while flicking it with the end of my tongue. I looked up to see her head, neck and torso was all red, eyes closed head back while her red tipped fingers were mercilessly kneading her tits and pulling at her fat nipples.\n\nI poked my tongue as deep as I could into her vaginal opening. I heard air rush from her lungs. Again I sucked her clit and flicked it with my tongue. It was met with some stiff resistance. I could feel trembling on the underside of her thighs.\n\nI sucked her clit in between my lips.\n\nShe came. Hard. I could feel her muscle contractions on my chin. Although her eyes were closed, I could still see the contortion in her face as her nostrils flared and grimaced lips sought air. Spit and sweaty moisture covered her mouth and face just as I became aware that my cheeks and chin was similarly bathed in her sweat and pussy juices.\n\nShe smelled and tasted incredible, pure female sex. I continued licking her entire pussy and sucking on her clit.\n\nOver and over her body flexed while she continued to seek oxygen. Suddenly her knees and legs dropped forcing my mouth off her. Her whole body was a shiny pink color.\n\nHer eyes opened up, but she wasn't smiling. She took two deep breaths and then almost growled, \"Get on the bed, Sam.\"\n\nI was up and on the bed with my cock pointing straight up. Almost before my head hit the bed, her mouth and fingers were on my cock. Reddish brown hair spilt across my hips and belly as her head bobbed and her fingers stroked my cock. No way I could let that go on.\n\nI lifted her head off my cock. I could see a wild look in her brown eyes and her parted lips through the reddish brown hair that was plastered to her face with perspiration.\n\n\"On your back, Flo, I'm gonna fuck you.\"\n\n\"Just don't cum inside me,\" she said, as she rolled off onto her back and then parted her legs while brushing hair off her face.\n\nI rolled on top of her in a flash. With my arms stiff on either side of her neck I looked down to see her grinning wildly. Her fingers found my cock and she pulled me towards herself. I adjusted my hips accordingly. I could see my stiff cock wet with her saliva, held by her red fingernails.\n\nHer eyes widened and her mouth opened at the same instant that I felt a warm tightness on the tip of my cock. Her eyes closed and a breath of air escaped from her pursed lips as I rolled my hips sending my cock all the way into the warm silky depths of her wet pussy.\n\n\"Ghuughnn,\" she grunted, \"you're so big...\" Her face was red. Eyes still closed.\n\nStiff armed I stayed motionless staring down into her face with my cock buried to the hilt inside her. I could feel her heartbeat along the length of my shaft. With absolute delight I watched as a smile started to spread across her face and then her eyes opened up.\n\nWhat a beautiful woman.\n\nBoth of her hands with slim red tipped fingernails slipped into my chest hairs on my pecs. I could see the satisfaction and the pure lust wash across her face.\n\nShe rolled her hips back and then forth just slightly.\n\nI pulled out slightly and then pushed back.\n\nShe rolled her hips, I pulled out, she rolled back on as I pushed back in. With each synchronized motion our pace quickened. With each motion, the length of my stroke increased.\n\nI was fucking the gorgeous little creature named Florence Ashworth and she was lovin' it! Every thrust of mine was met with a counter from Flo. She was fucking me every bit as hard as I was fucking her.\n\nIt suddenly became very warm in the little room. We were both breathing very hard. Her teeth were clenched tight, her lips were pulled back almost in a snarl. Veins popped out on her neck. Her entire upper body was a dark pink colour. Her brown eyes stared into mine.\n\nShe was scratching at my chest. My arms were starting to give out as I pumped away.\n\nI slipped down onto my elbows. The heat emanating from her body greeted me. Her sweaty face buried onto the crook of my neck and shoulder on the right side. Flo's arms wrapped around me as she grabbed the cheeks of my ass and helped slam me inside her on each stroke.\n\nThe bed frame was banging against the wall. I didn't care. Neither did she.\n\nHer fingernails dug into my ass cheeks as she kept smashing herself with my cock. I tried to angle my cock from side to side and up and down on each stroke, but I was only partially successful. Her wet cunt eagerly slammed into my pubes.\n\nOur sweaty bodies slapped against each other as we searched for air in the hot little hotel room.\n\nShe came. Her whole body was shuddering below me; I could feel her vagina clenching my cock...\n\nI pulled out just in time and watched as my first spurt of cum hit her neck on the left side and the second, just below her right tit. I collapsed on top of her still trembling, glistening and sweaty, bright pink body and unloaded the balance of my cum load onto her pubic hair and lower abdomen. My hips were flexing uncontrollably against her quivering body.\n\nThe sound of the bed frame hitting the wall had stopped, replaced only with the sound of our heavy breathing. I could feel her heart beating against my sticky and sweaty chest. When both she and I had stopped twitching, I rolled off of her and lay next to her staring at the ceiling, still gasping for air.\n\nShe rubbed whatever cum was on her all over herself and then licked her fingers and the palms of her hands.\n\nI couldn't believe it.\n\nShe rolled onto her side, gave me a long passionate kiss and with her left hand found little wet spots of cum on my chest and proceeded to lick them all off.\n\nHoly fuck!\n\nIn amazement I watched as she worked her way down my chest to my belly, eating and licking all the way down until she got to my dick, which slipped into her mouth. Her lips were curled in a smile as she did it. After cleaning me off, she returned to my belly and pubic hair.\n\nUn-fucking-believable.\n\n\"Thank you, Sam.\"\n\n\"Thank me? Thank you, Florence Ashworth. That was, without a doubt, the hottest sex I've ever had in my life.\"\n\nShe was grinning wildly. She moved up the bed and gave me another kiss and then rolled back off me. We laid next to each other, letting our heart rates and breathing return to normal.\n\nAfter a few moments she said, \"I met with Jill.\"\n\n\"Just a second, Flo.\" I stood up off the bed and with my cock flopping around I gathered her clothes up off the floor and carefully examined them, especially the seams and especially her shoes. I noted they were size 5. Everything seemed clean. I put all of her clothes and her shoes into the little mini-bar fridge and closed the door.\n\nShe watched me in obvious amusement from atop the bed.\n\n\"Did I dress a little too hot for you?\"\n\n\"Sorry, there may be a listening device built inside your shoe.\"\n\n\"I really don't think there is; I've had those shoes for years.\"\n\nI wasn't going to argue with her.\n\n\"Okay, let's talk. What's happening?\" I asked as I lay back on the bed next to her. We were both on our sides facing each other. She ran her fingers through my chest hair.\n\n\"I met with Jill Turner...\"\n\n\"Please start at the beginning. Starting with you driving away from me at the Thames.\" I gently flicked her fat nipple.\n\n\"Okay. I did nothing after we had our talk, except think about everything you said. It was pretty late at night when you texted me the name of the painting and the amount. I then spent the next few hours on the internet reading all about the painting, the 1990 theft in Boston, about Vermeer's in general, about art theft in general and about recovery of stolen art.\"\n\n\"And?\"\n\n\"And then I went to bed and thought about undressing in front of you and...\"\n\n\"Okay I got that part.\"\n\n\"Sam, this is so much fun; it's so cool!\" I could see the excitement in her sparkling brown eyes.\n\n\"Flo, what happened?\"\n\n\"I called Scotland Yard and got in touch with Jill Turner of the Art and Antiques Squad, the next morning. She's so nice, I told her who I was, what I wanted to do and explained what the painting was that we were trying to recover.\"\n\n\"Okay.\"\n\n\"She was great.\"\n\n'Jill is great,' I'd just keep that in the memory bin. \"Tell me what transpired.\"\n\n\"She wondered who currently held the painting and I explained that I'm not in a position to divulge such information, that I can only act as a middle-man.\"\n\nMy hand found its way down to her cum hardened pussy hairs.\n\n\"Okay?\"\n\n\"I gave her all my personal details and got hers in exchange.\"\n\nI tugged at her pussy lips.\n\n\"I told her that I can't do anything until I receive a clearance of immunity from prosecution. She understood right away and said that she would try to get that.\"\n\n\"Good.\"\n\n\"She called me two days later and asked me to come to her office to pick up the letter. It's signed by the Director of the Metropolitan Police and there is a notice attached from a Richard Armitage, a Queen's Council, directing them to offer me immunity from prosecution. The immunity is good for one year.\"\n\n\"Excellent. What about their sting operation.\"\n\n\"Oh, Sam, you were so right about that.\"\n\n\"What can you tell me?\"\n\n\"Basically, they took the position that I would not be handed the immunity letter if I refused to fully cooperate with Scotland Yard.\"\n\nI think I turned a little white. \"Then what happened?\"\n\n\"I stood up, left the letter in her hands, said sorry, no deal, no Vermeer and walked out of her office with my head held high.\"\n\n\"Then what happened?\" Obviously she got the immunity letter.\n\n\"As I was waiting for the lift, Jill tapped my arm and said, 'Please, let's talk.'\"\n\n\"Okay.\" It sounded credible so far. Was it?\n\n\"Back in her office I explained to her that I was not going to co-operate with any police efforts, that I was strictly and exclusively going to concentrate on acting as an intermediary with the view to have the Vermeer restored to the Isabella Stewart Gardner Museum and to have the reward monies paid for the painting's return.\"\n\n\"Mmnn?\"\n\n\"Reluctantly, she agreed and handed me the immunity letter, telling me that she would not tolerate me standing in the way of her doing her job.\"\n\n\"I guess that was to be expected.\" I kissed her on the lips.\n\n\"I then pulled out a letter of my own, addressed to Detective Inspector Jill Turner at New Scotland Yard, I have a copy of it for you in my bag.\" She stared at me with a funny look in her face. \"In the letter I asked Jill to do the following: One, to contact the Isabella Stewart Gardner Museum on my behalf through whichever intermediaries she deemed suitable and proper, which I take it will be the FBI and the Massachusetts office of the US District Attorney and relate to them that I am in touch with certain parties who wish to provide information leading to the successful return of the stolen Vermeer painting. Two, to request that a reward sum of five million dollars US funds be prepared for immediate wire transfer, the details of which I indicated will be given to her at a later date. Three, that she obtain from the Museum a written contract for me authorizing me to act on their behalf to attempt to recover the Vermeer for a total fee of a hundred thousand pounds Sterling, of which I requested that ten thousand be forwarded to me immediately 'in good faith'. My Barclay's account number and details were included. Four, that she arrange with the Museum's suitable experts to, at the proper time, verify the authenticity of the said Vermeer, and if deemed to be genuine, to accept the painting on the Museum's behalf. And finally, number five, that Scotland Yard pledge in writing that they will not attempt or permit anyone to attempt blockading or intercepting the payment of the reward monies.\"\n\n\"Very good,\" I was impressed. I kissed her again.\n\n\"She didn't agree with that last part and crossed it out and said take it or leave it.\"\n\nI knew it sounded too good to be true.\n\n\"I had to accept.\" Flo said. \"Otherwise she was fine with everything.\"\n\n\"Great, what else did you talk about?\"\n\n\"I pulled out the coins.\"\n\n\"How did that go?\"\n\n\"I explained that I would bring her photographic evidence that the Vermeer is safe and is in good condition. I gave her my copy of The Sun. I told her one of the photos will include that newspaper in the frame and explained to her about the coins.\"\n\n\"Okay.\"\n\n\"I had a coloured photocopy of the Vermeer painting in my file; she looked at it and said, believe it or not, 'put the Sun in the bottom left corner.'\"\n\n\"Hah!\"\n\n\"She said she was impressed and that clearly I'd thought all of this through.\"\n\n\"So she didn't get the impression that you were a fraudster?\"\n\n\"No, not at all. Quite the opposite, the vibe I got from her was that she thought I was genuine.\"\n\n\"That's great.\" It sounded too good to be true.\n\n\"I asked her to arrange the coins in random order. She did and she made a note of it, left to right, numbered one through five, and made a photocopy for me.\"\n\n\"Great, what's the order?\"\n\n\"I can't remember.\"\n\n\"What?\"\n\n\"It's written down in my file, in my bag...\" she looked genuinely annoyed.\n\n\"I told her I would let her see, as you called them, the proof of life photos, but that I wouldn't hand them over to her until my ten thousand 'in good faith' funds are transferred to my account.\"\n\n\"What did she say?\"\n\n\"She said she'll see what she can do, but she couldn't promise anything on behalf of anyone else. I said I understood that.\"\n\nSo did I.\n\n\"I know I left this up to your discretion,\" I said, \"but don't you think a hundred thousand pound middle man fee, might be a bit excessive?\"\n\nShe seemed a little taken back. \"Perhaps, I'm open to negotiation. I had to ask.\"\n\nI wondered if I gave her too much leeway.\n\n\"She said that until the proof of life photos comes through, nothing much was going to happen. She asked if I could email them to her when they're ready.\"\n\n\"Did you agree?\"\n\n\"Agree to what?\"\n\n\"Email the photos.\"\n\n\"Yes.\"\n\n\"No. We can't do that.\"\n\n\"Why not?\"\n\n\"There's meta data attached to image files, emails and stuff. We'd be leaving a trail. You'll get paper copies.\"\n\n\"That'll have DNA and fingerprints on it.\"\n\n\"Yours, only.\"\n\n\"Okay Sam, as you wish.\"\n\n\"That's correct, Flo, as I wish.\"\n\nI stood up. \"I'm running you a bubble bath.\"\n\n\"Okay, but why?\"\n\n\"I've got to wash you.\" I said as I stepped into the bathroom. \"Did you receive a visit from the police this morning?\"\n\n\"No,\" she answered, \"why do you ask?\"\n\n\"Nothing.\"\n\nThe bubbles frothed up as she sat down in the warm water. The tub was an old fashioned claw foot style, in white, with feet that were fashioned in black and gold. She sat sipping her white wine as I fondled and cleaned her thin wispy pussy hairs in the warm water.\"\n\n\"Hmmm...I think I could get used to all of this international intrigue. What comes next, caviar and Champagne?\"\n\nI took her wine glass from her and slipped my finger inside her wet pussy.\n\n\"Oh I see,\" she exclaimed, \"it's me. I come next!\"\n\n\"Ahh..ha..ha..\" What a doll. I did rub her clit for the next few minutes as she sat holding the sides of the tub. I watched her eyes close and her expression went blank. Although the bubbles had subsided a bit, there were still enough that eventually they shuddered for a few moments. And then her eyes opened up and her entire face lit up in a smile.\n\n\"Go on dry yourself off and let's get dressed. You know where your clothes are.\"\n\nDressed and with latex gloves on, I started to clean every surface of the room that I had touched; the wine glasses were washed and the empty wine bottle packed into my case.\n\nFlo was dressed only in her panties and bra as she attempted to dry her hair with the towel and straighten it with her fingers. Her clothes and shoes were still in the minibar. She called to me from the washroom.\n\n\"If the painting was stolen in Boston, why isn't your middle man in the US? Does that mean the painting is somewhere in the UK?\" She asked as she stepped out of the bathroom with her hair wet, but somewhat splayed out.\n\nMy heart skipped a beat. \"Flo, don't you ever fucking do that again.\" I could feel the rage boiling up.\n\n\"Do what?\"\n\n\"Ask me a question. Did Scotland Yard put you up to it?\"\n\n\"No!\"\n\n\"Did they instruct you to fuck me with the thought that I'll fall in love and start spilling everything?\"\n\n\"No!\" She looked scared.\n\n\"Did they expect to pull my DNA out of your cunt hairs?\"\n\n\"No!\"\n\n\"Flo, you're scaring the shit out of me.\" I was shaking.\n\n\"No, Sam, I swear...\" I could see the fear in her eyes.",
        "\"Flo? Why did you ask the question?\"\n\n\"Sam I'm not working for them...\"\n\n\"Why did you ask the question? I told you not to.\"\n\n\"Everything that transpired was exactly as I described, I didn't make anything up or leave anything out.\"\n\n\"Why did you ask the fucking question, Flo?\" My fists were clenched. I could feel the blood in my head.\n\n\"I don't know. It was innocent. Out of curiosity.\" She was cowering.\n\nI took a deep breath. \"Well curiosity is going to get this little cat killed. Don't fucking do that again, Flo.\"\n\nShe scared the fuck out of me. I was shaking. I wanted to believe her, but I couldn't be sure.\n\nFuck.\n\nI took a deep breath.\n\n\"I'm sorry, Flo, this is all very terrifying.\"\n\n\"Sam, I'm not co-operating with the police. You have to trust me.\"\n\n\"Yes, I know I have to. That's what's terrifying me. That and...\" I broke off before saying anything else.\n\nFully dressed, she sat on the bed, pulling her shoes on.\n\n\"Sam, this is such a great experience, absolute brilliant fun except for one thing.\"\n\n\"What's that?\" I simply took a deep breath and exhaled.\n\n\"You've got to understand. I love the intrigue, me telling the Met what to do. I asked for and got a letter of immunity signed by the Director at Scotland Yard and a QC, even if I don't get a hundred thousand pounds, even if it's just a fraction, this is all so cool. And sex with you was fantastic. I'm like a real life female James Bond. I don't want to let this go. It's brilliant fun.\"\n\nI took a deep breath trying to calm my nerves.\n\n\"Except for one thing,\" she said.\n\n\"What's that?\"\n\n\"You.\"\n\n\"Me?\"\n\n\"You scare me sometimes.\"\n\nI took another deep breath and picked up her hand. \"Flo, you should be scared.\"\n\n\"Why? Are you planning to hurt me?\" She stood up.\n\n\"No, I'm trying to protect you.\"\n\n\"Protect me? How?\"\n\n\"Flo, sit down.\" She did. \"If you give them an inch, they will try to take a mile.\"\n\nShe simply blinked as she looked up to me.\n\n\"They see a young, na\u00efve, inexperienced woman that they think that they can bend any which way they want. They will threaten, they will cajole and here's the harsh reality Flo: they can harm. You and yours. Sorry to break that to you.\"\n\n\"Harm?\"\n\n\"Would that surprise you in say... Saudi Arabia? That the authorities land up harming the citizens?\"\n\n\"No. But we're not Saudi Arabia.\"\n\n\"No we're not. I'm just suggesting that Britain is on that same slippery slope.\"\n\nShe was incredulous, at least to a degree.\n\n\"Flo. I need you to listen to me. Carefully. I'm going to be very serious.\"\n\nShe gazed at me.\n\n\"If all of a sudden you don't hear from me again, seemingly inexplicably, it is because my head has been severed from my torso.\"\n\nI watched to make sure she heard and understood what I just said. Her expression seemingly didn't change.\n\n\"That is going to happen unless I can collect. And it's not just me, but my family too. This is not a fucking game.\"\n\nShe turned white, she was scared. I saw it in her eyes. In her whole face. That in itself was good. Was she really on board?\n\n*****\n\nAs soon as Flo left and after I collected the coin code from her bag, I further wiped the room down as well as I could manage and then quickly checked my alias self out of The Kings Arms.\n\nAt The Glades shopping mall in Bromley I purchased, with cash, a quality Hewlett Packard inkjet printer, additional ink and the correct cables to connect to my laptop. In addition, I needed and purchased photo quality paper, an envelope and labels.\n\nMy alias, together with the printer in an oversized shopping bag checked into The Crown Inn on the A21 in Chislehurst, just outside of Bromley. The quaint little hotel was built in a Tudor style and featured delicious local Kentish ales of which I enjoyed a few that night. No video cameras as far as I could tell. The food was excellent, too.\n\nA brown envelope with high quality inkjet photographs was addressed to Florence Ashworth at her Blackheath office. A courier picked it up just as I was getting ready to check out the next morning.\n\nAs I checked out, I explained to the lad at the little wooden hotel counter that I didn't want to transport the printer on the plane, that it would cost too much, \"Would you mind keeping it for yourselves; it's perfectly fine, or simply toss it in the rubbish bin.\"\n\nHe joyfully agreed. It was clean of DNA.\n\nAs the courier was on his way delivering the envelope to Flo at her office, I drove my rented car to Heathrow on the M25.\n\nI knew that my fast timing getting the prints confirmed that the Vermeer was in the UK. I hoped that because I was so fast that the suspicion would be that it was in London.\n\nI called Flo from the terminal.\n\n\"Yes, I just got them. I'll call Jill. Oh and Sam, one thing I forgot to tell you yesterday. She did ask me if I have access to the other items taken during the robbery.\"\n\n\"And what did you say?\"\n\n\"I said maybe.\"\n\n\"Perfect. Let's leave it at that.\"\n\n*****\n\nIt was early afternoon local time when the airliner touched down in Toronto. I called Flo from a bench in the little dog-shit parkette near my home. No cameras around as far as I could tell.\n\n\"She was thrilled to view the photos, I had her come by my office.\" said Flo.\n\n\"Great. Flo, listen, just as a precaution on the phone, don't use the name of the artist or the museum or any proper names, we don't want our conversation kicking off any software that's monitoring overseas calls, okay?\"\n\n\"Okay.\"\n\n\"Did she give you any indication of when she'll be able to come up with the advance?\"\n\n\"No, but she did indicate that she's already been in touch with the museum with a guy named Anthony. They asked that everything be filtered through the local, I'm not going to use the acronym, office. She told me the name of the contact but I can't remember it. It was either Kelly or Jeff, and through another guy, I have his name at the, investigator's office. The impression I got was that she is simply emailing the museum and copying the other two.\"\n\n\"But no feedback?\"\n\n\"Not yet. My letter has been forwarded to them. Jill told them that I've got immunity.\"\n\n\"Okay, so far so good, I guess. Keep your phone charged.\"\n\n\"Sam?\"\n\n\"Yeah?\"\n\n\"I'm sorry I scared you.\"\n\n\"Yeah, I'm sorry, too,\" I paused for a moment, \"and I'm sorry that I got angry.\"\n\n\"Sam?\"\n\n\"Yeah?\"\n\n\"Thanks for the... meeting. It was fun.\"\n\n\"It was. I'll call you, Flo.\"\n\nI called her the next day from a different bench but the same parkette near my home. She hadn't heard back from Jill or anyone else.\n\nThe following day, before I turned my prepaid phone on, I noticed an unmarked van in the parkette's little parking lot. It was bristling with radio equipment.\n\nThat fast. Fuck! I kept walking down the street, my heart was racing. Her pre-paid cell phone was compromised!\n\nI was in a rage as I walked home the long way around the block. My mind was screaming. How can a pre-paid anonymous cell phone in Canada that's calling a pre-paid anonymous cell phone in Britain track back a GPS location of the caller? There are too many random calls. We didn't say any trigger words like 'jihad' or 'Vermeer.' Fuuuck! She had to have given them her pre-paid phone and they retrieved the number.\n\nFuuuuck!\n\nI was hyperventilating as I walked down the street.\n\nUnless, I rationalized, they have the technology to figure out, okay here's Flo's GPS location, she has her cell phone in her purse, what other cell phones are within a ten foot GPS radius of Flo's, and which ones are engaged in overseas calls. Maybe they had the ability to track her physical location and match it with cell phones in the corresponding location? I wouldn't put it past them.\n\nI was sweating and in a rage as I walked.\n\nCan they fucking do that, or did she simply co-operate with Scotland Yard? Or maybe she carelessly left the pre-paid phone on her desk and went to the washroom while Jill or whoever was in her office?\n\nFuuuck!\n\nI wanted to believe that I could trust her, but I couldn't. I had to face it, the most likely and reasonable explanation for that cop car being there was that she was cooperating with Scotland Yard.\n\nI had to get a hold of my emotions and think rationally. Two things I was certain of.\n\nThe first was that it was an unmarked van at the parkette, probably CSIS, the Canadian Security and Intelligence Service, or the RCMP, the Royal Canadian Mounted Police. The radio equipment, as seemingly inconspicuous bumps on the vehicle, betrayed the high end of the vehicle. That wasn't local cops looking to bust a couple of fourteen-year-olds for smoking pot.\n\nThe second thing that I was absolutely certain of was that if Flo wasn't actively co-operating with the police, then at the very least, they were following and tracking her. Big time.\n\nAlso, I was fairly certain, that vehicle's presence had nothing to do with my drug running and money laundering business. I would have smelled that coming.\n\nI had to proceed. I had no choice.\n\nI wondered if NSA had a record of our phone calls in spite of the precautions.\n\n\"Hey Johnny,\" I called my friend and colleague, \"let me buy you an espresso. Can I meet you at Angelo's in an hour?\"\n\n\"Sure Ben.\"\n\nAfter the niceties I slipped Johnny three thousand in cash. \"I need five pre-paid cell phones. Each one has to be purchased from a different location, by as many different people as you can manage, in disguise. Change the number of minutes on each, the phone itself and as many different carriers. Once they are purchased, they have to be turned off, the SIM chip pulled and taped to the outside and batteries pulled once they're fully charged. Make sure I get at least one charger for each type of phone. Is three grand going to be enough?\"\n\n\"Should be plenty. Ben, I get the routine. No video records of the purchases.\"\n\n\"Sorry. I need them in twenty four hours.\"\n\n\"Okay. Meet here?\"\n\n\"Yeah, or at least leave them here with Angelo.\"\n\nAngelo handed me a note on the way out. Somebody had come by just that morning looking for me and had left a message.\n\n'Ben,\n\nWill you be supporting the Colombian team in the next World Cup?\n\nE.'\n\nHow fucking subtle.\n\n\"Angelo,\" What did he look like?\"\n\n\"Eh, he was just a young guy. Maybe thirty. Ordinary looking mangiacake, he seemed harmless.\"\n\n\"Angelo, trust me, he wasn't fucking harmless.\"\n\n\"Benny, what do you want me to say?\"\n\n\"Well, Angelo, if he comes back looking for an answer, the answer is an enthusiastic yes.\"\n\n\"You're not going to be supporting the Italian team?\"\n\n\"Angelo, after the Italians.\" What a stupid thing to ask.\n\n\"Sure thing, Benny.\"\n\nJust fucking great. I took a deep breath. I'll be sure to be on the lookout for a thirtyish, ordinary looking, harmless WASP.\n\nI needed to get in touch with Flo right away. Wearing a Red Sox baseball cap, I bought a pre-paid phone with cash from a booth manned by some little pimply nerd kid at Vaughan Mills shopping mall. I kept my head down all the way.\n\nI had to figure out a way for her to change phones too.\n\n*****\n\n\"Sean, I need a favour.\" I made arrangements to meet him and his brother in Dublin.\n\n*****\n\n\"Don't say a word and don't answer me. Flo meet me in the pub we first met at, at 4:30 on Thursday. Don't answer, just hang up, turn this phone off and get rid of it.\" I hung up the phone when I heard her disconnect.\n\nI hope she got the message. I tossed my cell phone into a garbage bin at a McDonalds.\n\nJohnny came through with my new phones.\n\n*****\n\nUsing a set of fake IDs I boarded an overnight redeye flight to Dublin. I had three pre-paid phones with me, two with their batteries pulled and the SIM chips pulled out.\n\nI met Sean and Seamus at The Quay's Bar at the appointed hour for breakfast.\n\nI slipped them fifteen hundred Euros each. \"Lads, don't sit down. I've only got four hours before I have to go back to the airport. I need five pre-paid cell phones with chargers from each of you. Buy each of them from separate places. Pay cash. Try to have blocked numbers. Make sure you are not surreptitiously caught on video making the purchases. Wear hats, keep your faces hidden as much as possible. Don't get the same model numbers or use the same carrier. Go get your girlfriends, their sisters, whoever else you need involved. I'm doing this to save your skins, lads. And make sure the phones are all turned off as soon as they've been purchased, pull the SIM chip out and tape it to the phone.\"\n\nThey both looked at me with disbelief.\n\n\"I'll see you back here in four hours. Go.\" Off they went.\n\nAfter finishing my absolutely stunning breakfast of fried eggs, blood sausage, regular pork sausage, bacon, beans, fried tomatoes and mushrooms, potato bread with cheesy top crust, coffee and orange juice, I cleaned and then slipped the steak knife that I had requested from the waiter into my case side pocket and then parked my suitcase with the bartender and went for a stroll. My belly was full. Dublin really does have some nice touristy areas I realized, as I tried to walk it off. I waddled back to the pub an hour and a half later with a copy of James Joyce's Ulysses. After a satisfying trip to the toilet, I sat down into a booth. The bar was open, so I ordered a pint of Guinness and continued reading.\n\nSeamus returned first, although a little late and handed me five phones. I zipped them up into my little black suitcase. I had a flight to catch, I was getting antsy.\n\nSean came in a few minutes later. He looked very flustered, pale almost.\n\n\"Ben, they're in my motor. Just behind, in the alley.\"\n\nYou fucking little idiot. I packed my copy of Ulysses into my flight bag and furtively pulled the steak knife from my case side pocket, slid it up my sleeve and then slipped it into my right back pocket as I stood up. Was he that stupid that he thought he could eliminate his debt by eliminating me? That was precisely why I had kept the blade. Seamus knew I was growing impatient to get to the airport.\n\n\"Okay, let's go. Bye Seamus.\" I followed Sean out. I was rolling my flight bag behind me on the cobblestones.\n\nAs soon as I turned the corner I noticed there was no car. I reached to pull the knife out of my back pocket. Sean reached into his jean jacket pocket and was pulling out a pistol as he turned, \"I'm sorry, Ben...\"\n\nIn a single lunge move that I learnt in fencing class years ago, I covered the seven foot distance between us. The knife plunged deep into Sean's throat. His eyes bulged out as I rapidly saw-cut to the left, I turned my wrist over and saw-cut to the right making sure to have positive contact with the carotid arteries, whilst avoiding his spine.\n\nBlood gushed out as the gun, and then he, dropped to the cobblestone alley in a dark red, oozing, crumpled mess. Such a fucking shame. Just a kid. How stupid.\n\nI cleaned the knife off on his jacket, holding his lapel with my handkerchief. His eyes were bulging with the last gasp of life.\n\n\"Sean, tell your dad I need his help to make things right. I'm sure he doesn't want your brother following your footsteps. You fucked up. I wasn't going to kill you. I need your father's help. Go and make things right.\"\n\nI swear I saw life pass from his eyes.\n\nI wrapped the knife with the handkerchief and stuffed it into my jacket pocket as I stepped out onto the street with my black suitcase. I was praying no one had seen what transpired. I had to figure Sean knew there were no cameras behind the pub.\n\nAs I walked down the cobblestone street it struck me how seeing someone die in real life wasn't anything like the countless times I'd seen it portrayed in film and TV. My heart was completely wrenched. I struggled with my emotions. I wanted to cry.\n\nAnd he was so fucking young.\n\nI wasn't half a block away when an empty cab came by.\n\n\"Airport.\" I used my sleeve to open the taxi door.\n\nThe steak knife and bloody handkerchief were covertly, yet nonchalantly dropped into a garbage bin in the smoking area outside Dublin airport. I had been cleaning my fingerprints and DNA off as best as I could during the entire cab ride to the airport.\n\nOn top of everything else, I was now a murderer.\n\nOh I had threatened people before, in a very credible manner and with full intent to carry through, but I never had to do it. Pops certainly had arranged and done it, but for me it was a first.\n\nMurder. I knew it was more than just self-defense. I could have simply tried to disarm him.\n\nMurderer.\n\nI wasn't happy with myself.\n\nWhat amazed me was how cold I was at that immediate murder situation. I was aloof. Business-like.\n\nI scared myself.\n\nAs far as I was concerned, Seamus still owed me two point seven mil. I knew that now he was motivated and focused just like I had been when my brother was killed. Just as motivated and focused as I was, courtesy of Camilo and Ernesto and the... mild mannered young man.\n\n*****\n\nThankfully, the airport security people let me through without incident. Including the one attached to my belt, I had eight cell phones. Five less than I hoped to have.\n\nAt Heathrow I needed to buy a couple of things and pick up a rental car under a false name.\n\nIn my hotel room, I made sure that each phone was fully charged, without the SIM chips inserted. I then cleaned each of the Irish cell phones and chargers. Each Irish cell phone was numbered one to five with a yellow permanent ink marker. The corresponding phone numbers were recorded and double checked before I slipped the list into my wallet. The SIM chips were taped to the back of each phone.\n\nAt 3:15, I bought a half pint of Stella at the bar in The Yacht. While having my drink, using a handkerchief, I surreptitiously placed an envelope on the bar. I pretended to talk on my cell phone.\n\n\"Excuse me, Sir?\" I asked the middle aged, balding publican.\n\n\"Wot?\"\n\n\"Listen, I'm sorry. Can I ask you to do me a big favour?\" I handed him a ten pound note. \"I was supposed to meet a friend of mine here in about an hour's time but something came up, I've got to run and all I really needed to do was give her this card.\" I pointed to the envelope that had Flo written on it. Clearly it was a thank you or birthday card with the envelope's tab licked down. \"She's on her way here, now, and I can't seem to get through to her cell phone. She's pretty, slim, thirty-one I think, straight reddish brown hair and her name's Flo.\"\n\n\"No problem.\" He picked up the envelope and put it behind the bar. \"And what's your name?\"\n\n\"Sam.\"\n\n\"No problem, Sam.\" He stuffed the ten pound note in his shirt pocket.\n\nI handed him another tenner. \"Buy her a nice glass of white wine and please say sorry on my behalf.\"\n\n\"Sure, Sam.\"\n\nI walked out opening the door with a handkerchief.\n\nThe thank you card that I left simply instructed Flo to have a glass of wine, to leave her bag and personal cell phone in the boot of her car, what the British call the trunk, and then to take a walk along the River Thames towards the Cutty Sark.\n\nNext door at The Trafalgar Tavern, I took a seat just back from the window, ordered a beer and watched.\n\nI didn't see anything that I could construe as police activity.\n\nAt 4:28, Flo's Mercedes pulled up and parked on Park Row right next to the Trafalgar Tavern. She and another woman, in her mid thirties to mid forties got out. The other woman was about Flo's height, had shoulder length light brown hair with either blonde or grey streaks and wore a light blue jacket. They exchanged a few words. Flo walked towards the Yacht. The other woman headed down to the walkway along the Thames. I got up and left.\n\nI followed the other woman, walking past the Museum and Naval College. She had the tiniest bit of limp in her gait. At the Cutty Sark, she appeared to have headed down into the pedestrian foot tunnel that crosses under the Thames to the Isle of Dogs."
    ],
    "authorname": "eclare",
    "tags": [
        "artwork",
        "crime",
        "police",
        "cartels",
        "international",
        "drugs"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-vermeer"
}