{
    "title": "Los Cinco Hermanos Ch. 04",
    "pages": [
        "Wherein we party hardy, then finish the shoot, and me\n\nAuthor's note: this is part 4 of a 12-part story arc which I've put under Group Sex (see Chapter 1). Like all my stories, it begins with character development and in this case, over several chapters. The chapters can have the elements of a number of different categories and I will try to give advance warning. This one is primarily Group, Bi/Lesbian and background. And a gentle reminder: this is all Fiction \u2013 Willing Suspension of Disbelief recommended... \n\n* ~ * ~ * ~ * ~ *\n\nGoing in to enjoy Fuzion was a delight. Ginger changed back into her street clothes, but Molly and I took a few minutes to spiff up. I decided I really liked the white sundress, but I got back the shoes I'd worn last night \u2013 much more comfortable to dance in. Molly blew me away. Black leather miniskirt, black sleeveless halter and flats. That and an understated job with the make-up and she looked phenomenal. \n\nJerry had a huge GMC Savanna van that would seat nine with all the amenities \u2013 or it sure seemed like it. We all piled in, the five guys and we three girls, and he drove us on down to the bar. I was a little nervous about how much attention we were drawing when he parked the van in the city lot a few blocks from the bar, but I had to admire his chutzpah in dealing with it.\n\nHe picked a big, mean-looking guy who was loitering around the cashier's station. He walked up to him, handed him the keys and a hundred dollar bill.\n\n\"That van hasn't got a scratch on it,\" he told the man. \"If it still doesn't when I come back for it, you get to live, and another Benjamin. Clear?\"\n\nThe man looked at the van, then the keys and money Jerry had put in his hand, then the rest of us, then back at Jerry.\n\n\"Sure,\" he said dispassionately. Jerry stuck out his hand. \"Jerry,\" he told the big guy.\n\n\"Kong,\" the guy said, taking Jerry's hand. Then I saw Jerry open his coat slightly so the guy could see something. Something I thought was illegal in California. The big guy just nodded.\n\nJerry smiled as he turned to join us. \"Okay, you groupies,\" he told us. \"Let's go harass the band!\"\n\n\"Hey!\" Ginger punched him slightly. \"I am the band!\"\n\n\"Oh, goody!\" Jerry just leered at her and she broke up laughing.\n\nWe all headed over to the bar and once inside, commandeered a couple of tables and pushed them together so we could get a ringside seat. Ginger checked in with her band, then sat with us for awhile before she had to go get ready.\n\nUnder the hubbub of the rapidly filling bar, I leaned over to Jerry and asked as quietly as I could, \"are you allowed to carry that in this State?\"\n\n\"We're still may-issue,\" he told me, \"and L.A. doesn't... although that may be changing. But actually...\" He paused as he reached inside his coat and pulled out a shield, setting it on the table in front of me. It had a blue circle on a six-pointed star with a bear in the middle of the circle. On the top of the circle it said \"Deputy Sheriff\" and underneath, \"Los Angeles County\" with a number under that.\n\n\"You're a Sheriff's Deputy?\" I asked incredulously.\n\n\"Reserve, for the Aero unit,\" he told me. \"I'm a civilian pilot and can be called in to help in emergencies. The status of sworn deputy goes with it. So does the carry permit.\"\n\n\"So you get to fly one of their helicopters?\" I asked, surprised.\n\n\"No, I fly my own. I kind of lend her to them when we're needed.\"\n\n\"You own a helicopter???\"\n\n\"Um... yes,\" he told me, smiling slightly. \"Maybe you'd like to go flying sometime.\"\n\nI guess the concept of obscenely rich hadn't really sunk in yet \u2013 but it was definitely trying to.\n\n\"I think that would be nice,\" I told him. \"But I don't know how long I'm going to be in town.\"\n\n\"If the opportunity arises, the offer is open,\" he told me. \"We've got five guys and Molly. Should I roll a die to see who gets the first dance with you?\"\n\nI must have looked at him kind of funny, because he added, \"I'm sure you noticed that girls do dance with girls here, right?\"\n\nActually, I hadn't, and I told him so. \"I was too busy with the testosterone-based eye-candy... so no, I didn't notice same-sex partners.\"\n\n\"Well, I suppose Dave and Paul can have that effect,\" he smiled.\n\n\"You, too,\" I told him. \"Don't sell yourself short.\"\n\n\"I never sell short,\" he kept smiling. \"I'm in the market for the long haul.\"\n\nI just shook my head and smiled. His ability to turn everything into a pun or a double-entendre was part of his charm.\n\n\"So do you happen to have a die?\" I asked.\n\n\n\"No,\" he told me. \"But flipping a coin two or three times will do the same thing.\"\n\nI eyed him skeptically. He reached in his pocket and pulled out a quarter.\n\n\"Molly is one, Dave two, Paul three, Jackson is four, Ron is five and I'm six,\" he explained. \"First flip divides the results \u2013 heads is one through three, tails is four through six.\" He flipped the coin and it came up heads.\n\n\"Next toss divides it into high or low,\" he went on. \"Heads is one-two, tails is three. It isn't the same probability of throwing a six-sided die, but it'll work.\" He flipped the coin and it came up heads.\n\n\"Last one is straightforward,\" he smiled. \"Heads is one, or Molly, and tails is two, or Dave.\" He flipped the coin and it came up heads. Three heads in a row. And Molly, who smiled at me.\n\n\"Don't let him bully you,\" she told me. \"You don't have to dance with me if you don't want to...\"\n\nMy answer was drowned out by the opening chords of ZZ Top's \"Legs\"...\n\nWell, fuck it, I thought. What better song? I stood up and held out my hand to Molly who was beaming.\n\nWe made our way to the dance floor where couples were starting to flow in. Molly and I had the same idea \u2013 we parked ourselves in front of where Ginger was playing. \n\nI am going to make this sundress work for me, I thought. My legs aren't that bad and fuck it, nobody I care about is going to be critical. I realized Molly was doing the same thing \u2013 teasing Ginger with legs that went all the way up. She was twirling and moving to show them off and I was getting seriously distracted until I remembered that's what I was supposed to be doing, too.\n\nThe smile we got from Ginger let us know we'd made our point. Then Molly surprised me. She moved in and took me in a tight dance cage, where she could use me like a pole, to be support for really showing off. I decided to go for it. But when I went to dip her and she damn near did a splits standing up, I about lost it. I was amazed.\n\n\"Jazz ballet,\" she told my stunned expression, and the night just got better from there.\n\nWe had a gas. The guys kept me and Molly dancing most of the night, and rehydrating in-between. Somebody scored some appetizers from Antonio's next door and it made do for dinner. I only got slightly buzzed, dancing most of it off. And I was getting an inordinate amount of attention from the single guys not in my group, especially considering the fact that I thought Molly would be the exclusive center of attention.\n\nOf course, Los Cinco Hermanos were paying quite a bit of attention to me, too, and it felt fabulous. Part of me watched in detached amusement as the jaded divorcee bitch part of me got worn down, and I felt happy and turned on like I hadn't since the divorce. In a couple of the breaks, the rest of the members of Fuzion came over and Ginger introduced us all the way around. They were talented and they were fun and I was feeling like God was in His Heaven and all was right with the world.\n\nWe stayed until closing at 2am, then went back to get Jerry's van. It was pristine. Apparently \"Kong\" took his job seriously. Ginger decided that rather than drive all the way home from Jerry's just to turn around and come back, she'd stay the night. I asked to go by my hotel to pick up my stuff and check for messages.\n\n\"So you're going to stay with me?\" Jerry asked.\n\n\"For now,\" I told him. \"I'm going to get my stuff so I can put it in my rental, but I'm not checking out of the hotel yet, just in case I need it during the week.\"\n\n\"Fair enough,\" he smiled and took me to the hotel, then went up to my room to help me schlep my stuff down. The desk clerk tried very hard not to give me a funny look as we went by with my luggage, so I stopped and told him I was keeping the room, just visiting a friend and I'd be back. Besides, they'd swiped my card when I'd checked in. I was sure they'd charge me until I checked out.\n\nIt was about 4am when we made it back to Jerry's and honestly, I was tired. Jerry reminded me that there were two unoccupied bedrooms available to Ginger and me. I went and found one and stashed my stuff. I was getting out my toiletries when Ginger knocked.\n\n\"Want company tonight?\" she asked. \"Or would you rather sleep alone?\"\n\nI really had to stop and think about that one.\n\n\"Do you really want to?\" I asked. \"I mean, are you used to not sleeping alone?\"\n\n\"I'm alone some of the time, and not, some of the time,\" she smiled. \"Just thought you'd like a bed-warmer. I take it you're used to sleeping alone?\"\n\n\"You know that stuff I laid on you for the video?\" I asked her and she nodded. \"Most of it was based on fact.\"\n\n\"You're shitting me.\" She looked incredulous.\n\n\"Nope,\" I told her. \"I'd been without for about a year before Los Cinco Hermanos picked me up at the bar Friday night. I got very used to sleeping alone. Then they all did me, and then you and Molly today. I think I've had more sex in the last two days than I've had in the last two years. Oh, and last night I treated myself to sleeping with Dave, after they'd fucked me six ways from Sunday. So I kind of went from drought to deluge.\"\n\n\"Wow...\" was all that came out of Ginger for several moments. \"Okay, well, it's your call,\" she eventually went on. \"I like how soft and comfortable you feel. But I'm good either way.\"\n\n\"No sex?\" I asked. \"Only sleeping... we have a shoot later this afternoon.\"\n\n\"No sex,\" she affirmed. \"Only sleeping.\"\n\n\"Then, cool... I'm going to grab a quick shower after I get my stuff put away.\"\n\n\"How about I join you and scrub your back?\" Ginger smiled.\n\n\"Works for me,\" I told her and went back to arranging my stuff. Half-an-hour later we were showered and snuggled in the bed, with her spooned in front of me.\n\nShe really was comfortable to sleep with, and I had no problem drifting off \u2013 very, very happy...\n\n* * * * *\n\nThe morning had been very lazy. I woke with Ginger entwined in me and discovered we'd both slept in rather late. Molly had breakfast ready when we managed to drag our sorry asses upstairs to the kitchen. We also discovered Paul there. He, too, had slept in.\n\n\"I don't know about these guys with the early-morning work ethic,\" he grumbled, sipping his coffee. \"Definitely not human. How Jerry can be up working on the movie, Dave and Ron out playing tennis and Jackson working out in the weight room that early is beyond me. Not sure I should trust them.\"\n\n\"Alien invaders?\" I suggested with a smile.\n\n\"Souls from Host?\" Ginger smiled.\n\n\"Invasion of the Body Snatchers?\" Molly offered. We all turned to stare at her.\n\n\"How do you know a movie from 1956?\" I asked her.\n\n\"1978,\" Ginger corrected me.\n\n\"That was the remake, with Donald Sutherland and Leonard Nimoy,\" I told her, \"and both were still made before she was born!\"\n\n\"Tahitian television was pretty limited, before the Internet,\" Molly told us. \"My grandmother was a 40's and 50's black-and-white film nut. Once she discovered mail order, she had a huge collection of DVD's.\"\n\n\"You're Tahitian?\" I asked.\n\n\"Actually, I was born on Tikehau, then moved to Bora Bora when I was eleven,\" she told us. \"They're all part of French Polynesia, but everybody knows Tahiti the best.\"\n\n\"Pardon my ignorance,\" I told her. \"I'd love to hear stories about Polynesia.\"\n\n\"Maybe later this week, if you stick around,\" Molly smiled. \"I need to finish cleaning up here, get the laundry started and make lunch. Then we have a porno to make.\"\n\n\"Oh, yeah... the five guy, two girl fantasy...\" I drawled. \"I hope I have it in me.\"\n\n\"Oh, you'll have it in you,\" Paul virtually snickered. \"Many times over.\"\n\n\"Oh, you tease, you...\" I smiled at him. \"Promises, promises...\"\n\nHe just smirked and sensuously licked his lips.\n\n\"Now cut that out!\" I admonished him. \"A girl's gotta get some food and then do some serious relaxing in the jacuzzi before we film!\"\n\n\"I like the way you think!\" Ginger exclaimed. \"Finish up and let's go!\"\n\n* * * * *\n\nWe picked up where we'd left off, same costumes and make-up, same bedroom scene. Jerry filmed a short bit where the three of us \u2013 wiped out after phenomenal girl-on-girl-on-girl sex \u2013 crashed out all snuggled together in the bed after pulling our tops back on, with a slow zoom in to my face and a blur out. We had to watch the last part of the previous afternoon's shoot for reference and by the time I was done \"referencing\" it, I was definitely horny again. Then Jerry dropped the lights and went to localized lighting so the edges of the bed were in shadow and I was the only one in it.\n\nAnd while he and Ginger were messing with the setup, I got to watch three of Los Cinco sporting hard-ons and playing with themselves to stay that way. I was rather juicy by the time we got to start filming.\n\nWe had decided on my fantasizing Dave first, and then Paul joining us out of the shadows, very much like my first time with them. Then they'd fade out and I'd be imagining Ron and Jackson. Then they'd fade to Jerry and Ginger, and then Molly joining us. Then we'd finish up with all seven of them, with somebody rotating out to handle the mobile camera and then back in again.\n\nThe only one not cycling out of the camera was me. It turned out to be harder to shoot than I thought.\n\n\"Remember, guys, cum shots!\" Jerry told us as we got ready. \"If you're gonna cum, make sure it lands on her, not in her, and that the cameras get it.\" That didn't sound terribly romantic. And besides, I really liked them cumming in me.\n\n\"We're probably going to need about three apiece,\" he added and I just about wrenched my neck, whipping it around to look at him.\n\n\"The guys have to cum three times apiece???\" I asked in astonishment. \"Can they even do that???\"\n\nAll I got for an answer was five guys looking at me with silly grins on their faces and two girls snickering.\n\n\"Can I at least get some of them in me?\" I whined, and I know it sounded like I was pleading. Well, I was, sort of.\n\n\"Okay, modification,\" Jerry told the guys. \"If you're going for a third, you can make it a creampie, and make sure Beth gets it... we want her really spunked up.\"\n\nThey all nodded like they knew what they were doing and we took our starting positions... me on the bed and Dave coming in out of the shadows. And we were off.\n\nI decided that dreamily playing with myself as if in my sleep would be good while Dave eased himself down between my legs. He gently spread my thighs more and I yielded to him, continuing to rub myself. Then he used his hands to spread my labia and expose my very swollen clit. I'm sure the cameras got some really good images of my dripping nethers before Dave moved in. He eased my hand away from myself and went down on me.\n\n\"Oh, God!\" I moaned as he sucked my clit into his mouth and began flicking it. This wasn't acting anymore. This was Oh-my-God sex with a guy who already knew how to drive me crazy.\n\nWe'd tentatively decided to do things pretty much in the same order as the first time I'd been with them, or at least for the first go 'round. We'd figure out how to insert the girls later. Jerry seemed to be taking a much more organic approach to this, rather than scripted. So I sort of knew how this was going to proceed. After all, it was supposed to be my fantasy...\n\nI nearly came when Dave inserted first one, then two fingers in my pussy, stroking what I now guessed was the infamous \"G-spot\"... not that I'd really ever believed it existed or had a lover who knew how to find it. In this case, Dave knew exactly where it was, just like Ginger had, and he was exploiting every bit of his knowledge. He steadily drove me to the edge and I surrendered. I was getting used to the crashing cums these guys \u2013 and girls \u2013 could bring out in me, used to them enough to anticipate them, and it was exquisite agony as I felt myself getting closer and closer.\n\nAnd then it was bliss. Dave sucked on my swollen clit and finger-fucked me and I came, hard. And I kept cumming as Dave drew it out and let me coast just a little before taking me over the edge again. The scene may have been fantasy for the film but the cums were real enough. I stopped caring about my moans and cries and just let him take control.\n\nThat's when Paul upped the ante. I had my eyes closed, so I didn't see him slide in from the shadows. But I certainly felt him as he knelt next to me on the bed and brushed his very erect manhood across my lips. Reflexively, I groped for his cock and when I found it, I wrapped my hand around it and pulled him to my mouth, swirling my tongue around him and sucking at the head. I was a little surprised at the pre-cum already oozing out, but he tasted great and I didn't care.\n\nI tried to deep-throat him. That was a mistake.\n\nI mean, it wasn't a mistake, per se, it was more like the wrong angle. I could only get about half of him in before I started to gag and I decided that gagging in what was supposed to be a dream wasn't such a good idea.\n\nI had to pause again, because Dave was making me cum again, and when I did, Paul gently withdrew his hard-on from my mouth and moved around to the head of the bed, straddling my head with his knees and gently lifting me on to his thighs. Then he offered me his cock again, and this time, if I tilted my head back a bit, I could get a clear shot at trying to take him all the way in.\n\nDave took advantage of the shift to replace his fingers with his cock and start a slow, steady pumping that took me right back up to going over the edge, repeatedly.\n\nAs I said before, I don't have much experience deep-throating. Friday night was pretty much it. But I can be stubborn. I like to think of it as \"tenacious\". And in this case, I was going to take Paul all the way down without gagging, so help me God! I did like I had with Jerry and reached for Paul's balls, using them to encourage him deeper into me. I kept licking and slurping and swallowing, catching a breath when I could, trying to draw him all the way in. And finally I found that magic point like I had with Jerry where all of Paul just slid all the way down my throat until his balls were bumping against my nose.\n\nI just held him there, swallowing like crazy, and being rewarded by him swelling up even more. Then Dave rolled me over into another orgasm and I went ape-shit. I think I'd characterize it as making Paul throat-fuck me. I grabbed his ass and pulled him into me as deep as possible over and over and over, pretty much in rhythm with the orgasmic waves crashing through my body.\n\nAll of a sudden, Paul straightened up, put his hands against my shoulders and forced himself back, out of me, muttering \"oh, fuck!\" and moaning as his cock cleared my mouth. Another \"Oh, FUCK!!!\" signaled the start of his eruption and he began blasting ropes of cum all over my face and still open mouth, in my hair and onto my throat and tits. And he just seemed to keep cumming and cumming... I was in awe.\n\nThen just as suddenly, Dave pulled out and along with his loud moan, I felt his hot seed splashing my pussy and mons, and up onto my belly, and he, too, seemed to cum forever. I couldn't look to see because I had Paul's thick cum running into my eyes. I felt like a cake with the icing melting off.\n\nWhile Dave and Paul were slowly coming down, I felt another hard-on pushed into my hand, so I started stroking it. I knew from the girth it had to be Ron. Then I felt Jackson wrap my other hand around his erection while somebody with a soft, slightly damp towel was wiping the cum away from my eyes. Not the rest of me \u2013 just my eyes. I guess they wanted me well iced.",
        "Since I was supposed to be dreaming, I kept my eyes closed as I moaned \"Oh, yeah, baby... more... please, more... give me more, lover...\"\n\nIt was only part acting. I was really getting into this.\n\nI heard Jackson's deep \"as you wish...\" while he literally picked me up and set me down on Ron's cock... right up my bum! Yes, he was lubricated, and yes, he was gentle, but I hadn't been previously stretched out and it burned like someone was sticking a beer bottle up my ass! Or at least, for a little bit.\n\nI swallowed my scream and went for the loud moan. I didn't want to fuck up the fuck flick. God bless Jackson! He gave me a couple of minutes to adjust to Ron up my butt, then knelt between my legs and eased his enormous cock into my pussy. Thank God Dave had stretched me out!\n\n\"Oh, God, yes, you sons of bitches!!!\" I murmured. \"Do me... of, God, yes! I want you so bad...\"\n\nAgain, it was only partially acting.\n\nAnd do me they did. Ron and Jackson got into an alternating rhythm where Ron was sliding into my ass while Jackson was pulling out of my pussy and vice versa. I'm sure they were doing a lot of it for the cameras, but Christ Almighty! Their version of a seesaw was driving me nuts!\n\nIt took longer to climax that way \u2013 an excruciatingly slow climb of increasing tension, like winding the rubber band on a toy airplane too tight, where I was aching for the release and not getting it. Jackson finally began rubbing his thumb against my clit and just like last time, I exploded.\n\nThe heavy drapes around the set kept my cries from echoing too badly, but the microphones had to be saturated. I think I would have done a muleskinner proud with the string of invectives I was moaning out to the guys, encouraging them to take me harder and deeper. And damn! I suddenly realized I had both of them balls deep in me.\n\nIt was exhilarating. No, more than that, it was overwhelming! I felt like I was one big blob of pure pleasure. It felt cosmic! I felt the guys swelling up to cum and I wanted to just melt together with them. I hadn't opened my eyes, but every nerve in my body was memorizing what they felt like, sounded like, smelled like... and then I hit the jackpot.\n\nWith a low \"Oh, man!\" from Ron followed by \"Oh, yeah!\" from Jackson, I felt them pull out and start spewing cum all over my pussy and belly, and again it seemed like quarts. I know nobody cums in quarts, but added to Dave's load, I felt slathered in cum, and I loved it! My pussy and ass were probably going to hate me in the morning, especially standing in front of a bunch of bored clerks and nurses and administrators, but right now I didn't give a rat's ass... I started feeling impatient, like I wanted them to get to their third cums so I could feel their hot seed deep inside every orifice I had.\n\nGod, I hope the cameras are getting all this, I thought. If we have to do a retake, I won't survive it!\n\nI felt Ron and Jackson ease away and I remembered that the next set was going to be Jerry and the girls. I expected it when I felt Jerry's cock brush my lips. I did not expect it when Ginger and Molly started licking the cum off my pussy!\n\nI started to sit up and look, but Jerry's hand on my shoulder reminded me I was supposed to be dreaming, and I laid back, grabbing his cock instead and guiding it to my mouth. As I lay there idly sucking on him at first, I realized if this was supposed to be my dream, I could bloody well have my eyes open! But I chickened out. I kept them shut and drew him deeper into me. He took the hint \u2013 he'd been there before.\n\nLike Paul, he drew me up onto his thighs and tentatively pushed deeper into my mouth. I was ready for him this time, and damn it, I was going to do the same thing I did to Paul \u2013 or more, if I could figure out how. I grabbed his ass, took a deep breath and pulled him into my throat.\n\nIt was getting easier to get past the gag reflex \u2013 to get to that point where he slipped into the back of my throat and repeated swallowing was all it took to keep it comfortable. Nobody every accused me of being a slow learner.\n\nWhat kept screwing up my concentration were the girls. They'd obviously started licking up the cum as a tease because they left a lot of it dripping down my belly, pussy and thighs. What they did do was get into a very creative sixty-nine, sort of. Ginger straddled me with her pussy towards my head and her face down onto my clit and mons. She hooked my legs behind her arms so that I was pulled way up with my knees pretty much up next to my tits. Thank God I'd stayed flexible!\n\nWhile Ginger stayed glued to my clit and was driving me insane, Molly pulled out all the stops and started tonguing my pussy... and my ass! I'd never had somebody tongue-fuck my ass before. It was squishy and weird and wonderful. And it tripped me over.\n\nI was squirming and clenching and pulsing and basically cumming my brains out when Jerry stiffened up and I knew what was coming \u2013 him, specifically. I didn't fight it when he withdrew from my throat and mouth, and after feeling him pump himself a couple of times, I felt his hot cum spray all over my face and throat. He had pretty good aim and he coated me very well.\n\nI'd been having trouble keeping my eyes closed because I wanted to see what was going on, but Jerry liberally spraying me encouraged me to keep them shut. I had no idea what semen in my eyes would feel like, but I knew I didn't want to find out.\n\nOnce Jerry had finished ejaculating, I went on the prowl, so to speak. I groped around until I found Ginger's pussy and with the last bit of flexibility I had, I grabbed her hips and pulled my head up into her crotch, feeling around with my tongue for her pussy or clit, or both. The gods of luck were being kind to me that day \u2013 I found both in short order and started doing what I could to return the \"tongue-lashing\" she was giving me. I could tell from her moans that I had her close when another bright idea hit me.\n\nI was within range of her anus. So I pulled a \"Molly\" on Ginger and sank my tongue as deep into her ass as I could. The results were remarkable.\n\nI heard a muttered, \"oh, you bitch...\" and then felt her tense up as if she were about to cum. So I stuck a couple of fingers in her pussy. That pretty much sealed the deal. She came and she came hard, clamping down on my hand and interrupting her wonderful cunnilingus to moan as she spasmed, her warm, sweet pussy juices trickling down onto my hand and my cum-soaked throat.\n\nI kept it up as long as I could, until Ginger was literally shaking above me and I thought she'd collapse on me. Then Jerry must have given some kind of signal because Molly and Ginger eased up and eased off of me, leaving me quivering, spent, cum-soaked and ecstatic in the middle of the huge bed.\n\nI groped around and found a towel and began wiping the cum out of my eyes as I felt the lights dimming and Jerry finally saying \"Cut!\", followed almost immediately by \"Beth! Don't wipe off all the cum. Just your eyes, okay? And your nose and ears if you need to... thanks.\" I felt the normal lights come on as I nodded and finished wiping my eyes. Tentatively I opened them and was very happy to see seven grinning people sitting around the edge of the bed.\n\n\"Absolutely, totally fantastic!\" Jerry raved. \"I am absolutely putting some of this in the teasers for the DVD! Maybe we can keep it off the internet for awhile, but I bet it'll be really popular.\"\n\n\n\"Why would you want to keep it off the internet?\" I asked. I tried to move and groaned as many formerly unused muscles registered their complaints. \"I thought that's how you made money...\"\n\n\"On the private, pay-to-play sites, yeah,\" he told me. \"I was talking about the enterprising hackers, also known as copyright violators, who steal the vids and post them on freebie porn sites. We try to go after them, of course, but it's damned difficult. We try notifying the more popular sites that we're about to release a new video and warn them against infringement. Sometimes they cooperate and screen the professional stuff before it gets posted. Once it's up there, though, it's gone. A popular one will be global in less than twelve hours.\"\n\n\"We can object if we find one of ours posted without our permission, and make the site take it down, but the damage is done. It'll just keep cropping up somewhere else. In this case, there are several MILF sites that will be interested \u2013 'Los Cinco Hermanos and the Amazing MILF!\" \u2013 I can see it now...\"\n\n\"Sounds like a Tom Swift book,\" I told him.\n\n\"Who?\" he asked blankly.\n\n\"Never mind,\" I told him. \"Before your time.\" I wasn't going to tell him it was before my time, too.\n\n\"Hey!\" Ginger piped up. \"What happened to Las Dos Hermanas? We're in there, too...\"\n\n\"Actually, Les Sept Fr\u00e8res et Soeurs,\" Molly smiled. \"Et la Baise Incroyable.\"\n\n\"Why does everything sound better in French?\" Paul wondered aloud.\n\n\"You really think I'm an Incredible Fuck?\" I turned to Molly. I was genuinely surprised.\n\nAll I got from all seven of them was a drop of the shoulder, a cock of the head and a look that said, \"Really? Are you kidding me?\"\n\n\"Okaaayyyy...\" I drawled, getting the idea. \"What's next?\"\n\n\"Round Two,\" Jerry told me, \"as soon as you rehydrate. If we're quick enough, we won't have to use any of the Spunk Lube.\"\n\n\"Spunk Lube?\" Again, I was clueless.\n\n\"A brand of fake cum,\" Jerry explained. \"A mix of silicone and water. Very realistic. If the real cum on you dries out too fast, we can refresh it with Spunk Lube for continuity. We want Round Two to add to what you've got.\"\n\n\"Nuts,\" I pouted. \"They still can't cum in me?\"\n\n\"Not until after they've cum on you,\" Jerry told me. \"So get some water and get back on the bed.\"\n\nI did as told and settled down. Molly had to put a little of the Spunk Lube on my face and mons where it had run off when I stood up. It didn't take long before Jerry was calling \"Lights, Camera, Action!\"\n\nThis time they took turns. I couldn't see it because I still had my eyes closed, but I could feel Dave kneeling between my legs and using some of the lube, he began rubbing my slit and clit until I was flooding. Then he entered me and took my breath away.\n\nI wondered if this was going to happen every time one of them skewered me. It just fell so incredibly good! I wanted it... I wanted them... I wanted to feel better than I ever had before in my life, ever.\n\nThere wasn't any fancy pairing up this time. I could feel Ginger and Molly sitting next to me and probably stroking or sucking one of the guys hard \u2013 probably whoever was going to be next. But Dave got down to basics and started a slow and steady fucking that I was loving, and as he went along, I felt him getting faster. Which was fine by me, because he'd already tripped me over a couple of times before he suddenly told me, \"Oh, baby! I'm gonna blow my load all over your pussy!\" and he started really driving into me.\n\n\"Oh, yeah! Come on! Come on, baby, give me your hot cum!\" I improvised. \"I want to feel your burning seed all over me!\"\n\nI guess it was pretty good improv. He jack-hammered me for a few moments, then just as I though he wasn't going to make it, he pulled out and I felt jet after jet of hot cum bathing my nethers, and it tripped me over. I quickly reached down and rubbed myself, to keep it going.\n\n\"Oh, yeah, baby, rub yourself for me!\" I heard Dave say. \"Rub my spunk into your pussy! Make me yours...\"\n\nOkay, that last bit really got me. \"Fucking Mother of GOD!!!\" I cried out as I came, insanely hard. I went nuts! Some wild woman part of me reared up and I opened my eyes and saw Dave above me, and I launched myself at him. I surprised the hell out of him as I grabbed him behind his neck and pulled him down onto me, searching for his lips, desperate to drink him in, to suck him dry... to make him mine.\n\nI have no idea how long that kiss went on, but it sure as hell wasn't long enough for me! I felt someone move next to me and then Dave began breaking the kiss, pulling away, which is exactly what I didn't want! I tried to hold on to him but he was very adept at slipping out of my grasp. Instead, as I flailed my arms around trying to catch Dave again, I found myself pulling Paul down onto me.\n\nI was surprised for a moment, and a little disoriented, but when my brain figured it out, so did the rest of me. Paul would do very nicely... Brothers and all that...\n\nHe let me draw him down into a kiss and I melted right back to where I'd been with Dave. And while Paul and I were kissing, he gently spread my legs and thrust into me.\n\nI moaned into his kiss from somewhere deep inside me. Somewhere that was ecstatic to feel him fill me, feel his skin on mine, his lips crushing mine, his tongue probing me as I teased him back. His rocking was gentle and comforting and all the good things fucking should be, and I wondered at the change in my luck, the new partners that actually treated me like something more that a fuck toy, even when they were using me like a fuck toy.\n\nHis scent and his taste washed over me in ever increasing waves of pleasure, while his rhythmic thrusting took me inexorably towards my release. Every stab into my pussy pulled on my clit and sent charges of electricity shooting through me. Even my nipples ached at the tension.\n\nAnd at last I heard that beautiful sound... his low moan and muttered, \"Christ, I'm gonna cum!\"\n\n\"Oh, yeah, baby... give it to me!\" I cried aloud. \"Cum for me!\" I didn't give a rat's ass about the cameras anymore. I fucking meant it! I reached down and grabbed his ass with both hands. I tried to keep him buried in me as I felt him speed up and stiffen. But he managed to pull away just as he was peaking and just like Dave, he spewed ropes of thick, hot cum all over my mons and belly.\n\n\"I'm yours, baby,\" he told me as he began calming down. \"Any time you want me... just dream of me... I'll be here...\"\n\nI reached out and grabbed his cock away from him, milking him, making the last few drops ooze out onto my hand. When I couldn't get any more, I lifted my hand to my mouth and licked him off of me, watching his eyes and seeing the lust there I craved so much. As he slowly withdrew his manhood from my hand and backed up, I saw a shadow fall over us and then Ron slid into place and laid his big, throbbing hard-on in the same hand recently vacated by Paul.\n\n\"Oh, my lovely Latino lover,\" I sighed, still amazed at how thick he was. \"Wherever are we going to put you?\"\n\nRon simply smiled in answer and leaned forward while I stroked his thick cock, already slippery with pre-cum. He kissed me, gently but with increasing urgency, and our tongues explored each others' length and breadth. And when I was thoroughly distracted by his wonderful kisses, he slipped his massive schlong into my pussy. My pussy! I swear to God, even childbirth wouldn't prepare me for that huge piece of chorizo! He'd only been in my ass before, and I thought that was nothing short of amazing... this was unbelievable! I remembered not to scream, but moaned loudly into his kiss. Bless the man, he held still for a few, letting me adjust \u2013 or adjust as well as I was going to... God! he was thick!\n\nThen he started easing in and out, and I realized that all the fucking I'd been getting \u2013 and the fingering \u2013 had been loosening me up and it wasn't taking me long to adjust to Ron's hefty erection. And his kisses really were distracting. Then he rolled all his weight over on to one elbow and used the other hand fondle my breast and gently roll my nipple while still kissing me. I went right over the edge, didn't stand a chance!\n\nI felt so filled up, so dominated by this man hovering over me, and yet he was gentle \u2013 persistent, but gentle and he built me up to another cum as we lay there. Then \"camera awareness\" must have kicked in because he eased off the kisses and back up to kneeling between my widespread thighs, exposing the sight of my swollen clit and labia framing his enormous member sliding in and out of me. I moaned again, loudly, as I went over yet again. I couldn't help it. The sensations were overpowering. I got so lightheaded, I thought I might pass out, but that's when Ron changes his rhythm.\n\nIncreasing his tempo and the depth of his thrusts, he began fucking me. Gone were the niceties of \"intercourse\" or \"coupling\". This was down-in-the-dirt rutting and I was getting pummeled by his manhood. The detached part of me that was still aware realized that under different circumstance, this might be assault with a deadly weapon, or at least an unnatural act. And heaven help me, I liked it!\n\nHe was so far past my cervix, my ovaries were waving \"Hello!\" and I still wanted more. Somehow I was being changed \u2013 enchanted into a cum slut or a cock whore or something... something raw and animal and lustful that wanted every inch of every cock these guys had to offer, and a couple of female hands and mouths as well.\n\nWhen Ron hit his peak, he managed to kneel upright and pull his massive member out in time to unload on my belly. But instead of hitting my mons like the other guys, he unloaded all over my chest and tits and even hit the underside of my chin, several times. They sure as hell weren't going to need any Spunk Lube after he got done with me! And as before, as he moved back out of the light, Jackson moved into it, taking Ron's position.\n\n\"Ah, my Nubian Lord,\" I breathed, trying to improvise, \"come to check on his faithful Harim... I am yours, my Lord. Take me as you will.\"\n\nBoy, did that have an interesting effect!\n\nWith a low growl, he put both hands under my ass, lifted me up and placed me on his cock... all the way in! Maybe speared would be a better description. Thankfully Ron and the others had stretched me out. Jackson went straight to the fucking and the sight of my light skin against his dark just turned me on like crazy. I hadn't had a black, before Jackson, or a Latino before Ron. And a whole bunch of politically incorrect fantasies came pouring into my mind.\n\nFuck it! I thought. The fucking Thought Police can go fuck themselves! I want this black man fucking my fucking white brains out!\n\nI was a little out of it.\n\nI would have thought I was all cummed out by now, but that wasn't the case. Jackson's raw, hedonistic, animal growls as he pounded away coupled with my fantasies and the very real sensations my pussy and clit were feeling, and I went tumbling over again... and again. Probably four or five times before he began to slow up and deliberately thrust, building \u2013 I was sure \u2013 to his own orgasm.\n\nWhen he finally went over, it was with what I'd call a bellow \u2013 a long, low moan that started deep inside and made its way up and out as he pulled out and sprayed my chest and belly liberally with his seed. I wanted to reach for his cock and milk the last of his cum out, but I couldn't make my body sit up enough, or my arms reach enough, to do it. I was starting to feel like a bowl of jelly.\n\nJackson eased out and I was marginally aware of Jerry taking his place. I would have been content to just lie there and let Jerry fuck the hell out of my pussy, but that isn't what he had in mind. He lifted my limp legs by my knees and separated them, then rocked me back so he had a straighter angle on my pussy. Then he rubbed the head of his cock around on the cum dripping off my pussy, took a couple of stabs at my slit, then buried himself in my ass.\n\nOh. My. God. I nearly fainted. The shockwave went blasting up my spine to my brain which refused delivery. I had sparkly lights all over my vision and I think I stopped breathing as I came so hard I thought every sexual muscle I had was going to permanently cramp.\n\nJerry dispensed with the niceties as well. He was definitely going for the cumshot. And I just lay there and took it \u2013 and relished it. The assault on my senses was overpowering, but I didn't care. I just wanted to be taken. I wanted to give him pleasure. I wanted my Van Gogh of the porno world to paint me with his semen.",
        "He didn't disappoint.\n\nWith steadily mounting thrusts that kept me continuously on the edge of passing out, he thoroughly fucked my ass and everything connected to it. When he got close to his own cum, he stuck his thumb in my pussy and covered my clit with his palm, thumb-fucking and rubbing me until I really was going to lose consciousness from cumming so much. I felt him tense and pull out, and then hot splashes of his seed on my face and breasts. My God, did he shoot far! And that was pretty much the last thing I remember thinking. A black velvet curtain descended on my brain as I slowly went limp and went out.\n\n\"Hey, are you okay in there?\" I heard Ginger's voice as if through a fog. \"Pulse strong but rapid, breathing shallow but steady, pupils equal and reactive...\" she continued to someone else. \"I think she just passed out.\"\n\n\"I think I just passed out,\" I mumbled in echo. \"What year is it?\" I continued, trying to tease them a little, \"and why don't I have any cum dripping out of my pussy?\"\n\nSeveral of them chuckled.\n\n\"Bad form,\" Jerry told me and I could hear the smile in his voice, \"to fuck an unconscious woman without her consent.\"\n\n\"I thought I signed a consent form,\" I told him, trying to open my eyes and sit up, and failing at both.\n\n\"Are you sure you're okay?\" Dave asked from next to me, and there was genuine concern in his voice.\n\n\"Pretty much,\" I told him, \"except that I don't have any cum dripping out of my pussy.\"\n\n\"Damn, woman!\" Jackson spoke up. \"You really are hard core!\"\n\n\"When you can sit up and see straight, and get some water in you, we'll talk about it,\" Jerry told me.\n\n\"You said I could get at least some cum in my pussy!\" I pouted as I struggled to sit up and open my eyes. Focusing them was a different matter. Molly handed me a bottle of water and I thankfully drank.\n\n\"That was before you took on your recent Herculean tasks,\" he chided me.\n\n\"I don't remember killing any lions or cleaning out any stables,\" I smiled slightly. He was almost back in focus.\n\n\"Well, you certainly did in my pussy!\" Ginger exclaimed. \"Not sure if she counts as a lion...\"\n\n\"And you sure as hell cleaned my stable!\" Ron told me.\n\n\"Ditto,\" Paul added.\n\n\"Ditto ditto,\" Dave smiled.\n\n\"Okay, I can see seven, and only seven, of you now,\" I informed them. \"When do you start cumming in my pussy?\"\n\nThe five guys looked at each other. Then at me. Then at Ginger and Molly. Then back to me. Then back at themselves.\n\n\"Um... give us five?\" Dave asked.\n\n\"I hope that's minutes, not days,\" I told him.\n\n\"Minutes,\" he told me. \"Go on and drink some more water, hit the head if you need to, and we'll meet you on the bed.\"\n\nI did as told, but the jizz was running off and drying up. I was going to need some of that Spunk Lube. When I got back to the bed, Ginger was reviewing the last of the scene we had just shot.\n\n\"Okay, move more towards the center and down more towards the foot,\" she told me, \"and lay back with your eyes closed and your hands up over your head.\"\n\nI move to comply and she made a few more adjustments before breaking out the Spunk Lube and recreating the icing on me as shown in the video. Jerry had decided to simply have the guys move in, fuck me, cum in my pussy and make way for the next guy. He'd end with a close-up of the guys' cum oozing out of me \u2013 apparently known in the trade as a \"creampie\" shot. Didn't sound close to the banana cream pies of my youth, but what the hell... this wasn't my youth.\n\nAs I lay there waiting for the \"Lights, Camera, Action!\" from Jerry, I decided to try some improvisation again. As the scene opened, I writhed as sensuously as I knew how \u2013 with my eyes closed \u2013 and murmured distinctly, \"Oh, God, I wish you would just come back and fuck me! I don't care if this is all a dream, I want you in me! I want you all, and I want you now!...\" Then I moaned and settled back. It was up to the guys now.\n\nAnd they were up. God, were they up! Must be nice to be a hung male in his twenties with amazing recuperative powers. It was certainly nice for me.\n\nThey dispensed with the niceties. Dave was first, kneeling between my legs and rubbing his cock on the Spunk Lube and cum on my mons to get some lubrication, then plunging into me. Foreplay didn't matter. My body was going to be ready for this regardless of what I thought. In fact, thinking didn't matter. I was running on pure animal lust. Maybe it was the Bitch in me, responding to their Call of the Wild.\n\nDave began fucking me in earnest, going straight to the \"fuck her brains out\" mode \u2013 not quite a painful jack-hammering, but definitely hard, fast and deep. And amazingly, since it was his third time around, he didn't take long to cum. He tensed up and sped up, and finally cried out as he pushed deep into me and held it as I felt the hot flush of his semen fill my welcoming depths.\n\nI wrapped my legs around him to hold him in, keep him buried in me, and reached up my arms to draw him down into a kiss that rocked my soul. Truth be told, of Los Cinco Hermanos, Dave was my favorite. I held him to me and we kissed long and tenderly as he slowly went down. At last, he eased off the kiss and, lifting my legs to tilt my pelvis up, withdrew.\n\nHe held me there for Paul, who was next. Keeping my hips tilted up, Paul didn't bother with the foreplay, either. He went straight for sloppy seconds, driving in deep and fucking away like Dave had, and this time I was already primed. I was the one who came first, ramping up and moaning like there was no tomorrow, tripping over and feeling myself convulse on Paul's hard stroking cock.\n\nThat seemed to do it for him, too. With a loud moan and a heartfelt, \"Oh, my God, babe! I'm gonna cum!\", he did. A lot. Even with Dave's cum in me, I could feel Paul's hot seed spurt into me and add to the pool collecting deep inside me. I murmured, \"Oh, God, yes...\" as I pulled him down into a kiss as well, and we let ourselves gently explore each other as his erection faded.\n\nEventually he, too, rocked my hips up and slid out of me, making way for Jerry. His slightly thinner but longer cock slid into me, sealing in the cum as he went for \"sloppy thirds\" \u2013 or I guess that's what you'd call it. Regardless, he was deep into me and fucking away right from the start. I was still up from cumming with Paul and Jerry just took me right back up again. He also didn't take long and I was right there with him. I'm not sure which of us tripped over first, but he shared a crashing cum as he spent a huge load deep in my pussy, joining those of Dave and Paul.\n\nAgain, I grabbed his neck and pulled him down into a long, gentle kiss while his erection subsided. I was getting used to the procedure... when he eased back to pull out, I kept my hips tilted up. It must have been the Director in him, because as he moved back to make way for Ron, he paused for a moment to spread my pussy lips and look at the semen leaking out around the edges. I could see him smile slightly as he moved aside, and then my attention was completely taken up by Ron's massive thick member. He had to be 2-plus inches wide and originally I didn't think it was humanly possible to take him. Now I desperately wanted to feel him stretching me out, to feel him pounding into me, crushing my clit on each stroke and driving me stark raving mad!\n\nHe must have been telepathic. He eased the head of his cock into my pussy, taking his time, getting lined up. Then he plunged in. All the way in. He didn't reach as deep as the others, but my God! He made every fucking nerve in my cunt stand on end and beg for more. I hooked my heels over his tight butt as he drove away, loving every second of it, feel the inexorable climb to my release. And his.\n\nLike the others, he didn't take long. But he took long enough to drive me over the edge a couple of times, my cries of encouragement and moans of delight coupling with his low, animal grunts of exertion and moans of pleasure. I felt him start to swell as he approached his climax and for a guy with a massive girth to start with, it redefined \"full\". With a \"nnnpphhhh... FUCK!!!\" he erupted inside me, feeling even hotter than the others as his seed bathed the stretched and tortured walls of my pussy with a soothing feeling of bliss.\n\nI reached up and pulled him down onto me, drawing his lips to mine, savory his exotic scent and taste with long, languid kisses on his lips and cheeks and neck while waiting for him to go soft.\n\nHe didn't.\n\nInstead, he began rocking in me with his still very erect manhood rubbing all my right places, and to my surprise, giving me a few \"aftershock\" cums \u2013 gentle, pleasurable pulses of orgasmic bliss that flowed through my body like a flood of heavenly energy, touching and calming every cell in my body. Except my clit. She had a mind of her own.\n\nHe did, eventually, ease up and lifted my hips before withdrawing. I was a bit late remembering that bit, but I did what I could to help. Then Ron moved aside and made room for Jackson. One look at his taut manhood bobbing between my legs and I remembered just how terrifying I'd initially found him. He might have been thinner than Ron, but not by much, and he was damn near a foot long.\n\nMaybe you've seen the expression BBC on the internet? It doesn't have anything to do with broadcasting. It means Big Black Cock and I was looking at a prime example. And the thrill of lust and fear that spread from my womb to my belly was excruciating. I liked it. No... I loved it.\n\nI figured I must be fairly rapidly becoming a slut, or whatever the current pejorative is for a cock-hungry bitch. I wanted that magnificent cock so far up my pussy, it was coming out of my mouth.\n\n\"Well, hello again, Big Boy...\" I murmured. \"Come back to give me a proper fucking? Make me take your all?\"\n\n\"Damn straight, bitch,\" he told me as he lined up on my pussy and using four guys' worth of cum for lube, plunged in.\n\n\"HOLY MOTHER OF GOD!!!\" Whatever he hit, he hit it right... I was clenching and pulsing and shaking and basically cumming my brains out within two strokes. I was moaning expletives like crazy as he kept stroking me with that monster cock. And I was cumming, too, over and over, relentlessly.\n\nAt last I felt him speed up and swell even more and I knew he was going to dump his load in me, and I remembered when he'd pulled out and bathed my chin and neck with his cum from all the way back at my nethers. And I suddenly got a shit-eating grin on my face as I realized how absolutely delighted I was at the idea of him pouring that much seed into my aching pussy.\n\n\"C'mon, baby,\" I virtually growled. \"Pump it into me! Pump your smokin' hot load into my pussy. Cum in me, you big sonofabitch! Cum in me!\" He took direction well.\n\nI don't know what part of my brain was counting, but I remember at least fifteen solid jets of literally hot cum blasting into me from that mammoth cock. I remember because I remember thinking God! That's a lot of cum! Where the fuck does he keep it? Silly, yes, but kind of how my mind works in stressful situations where I'm being overwhelmed by sexual sensations beyond my ability to handle. Or so I've discovered since then.\n\nWhen I reached to pull him into the kiss, he surprised me. He wrapped me in his muscular arms and brought me up to a sitting position on him, with him still buried to the hilt. Then we began kissing and licking and teasing each other with our tongues until he gently laid me back down on my back.\n\nJerry must have had a discussion with the girls because as soon as Jackson tilted my hips up and gently pulled out, they slid in next to me on either side and pretended to be asleep. I got the idea that I was supposed to do the same, so I laid back and closed my eyes. Ginger nestled in next to me and very, very softly whispered in my ear, \"pretend to wake up and comment on the dream\", so I did.\n\n\"Mmmmm,\" I moaned aloud, stretching and running into Ginger and Molly with my hands. I opened my eyes and smiled at them.\n\n\"You are never going to believe the dream I just had,\" I started telling them, completely oblivious to the fact that I no longer had any clothes on.\n\n\"Did it have to do with a bunch of guys?\" Ginger asked with a smirk.\n\n\"Yeah...\" I drawled. \"How did you know? Was I talking in my sleep?\"\n\n\"And a couple of girls?\" Molly asked and I turned to look at her.\n\n\"Yes, actually...\" I acknowledged. \"You and Ginny, if you must know...\"\n\n\"I'm not sure it was a dream...\" Ginger smirked coyly as she and Molly reached down and they each took a thigh and lifted and spread my legs.\n\nI felt the gush of cum pour out of my pussy and I knew the camera was getting it. And it turned me on like crazy. But I had a part to play, so I did.\n\n\"What???\" I exclaimed, trying to sit up and look, holding that position for several seconds for Jerry, who finally smiled and said, \"Cut!\"\n\nI reached straight for my pussy, stuck two fingers in and finger fucked myself and rubbed my clit and exploded! God, I needed that cum! And I came so hard, I sprayed some of the guys' jizz all over the bed and floor.\n\n\"Wish I'd known you were going to do that,\" Jerry told me. \"That would have been awesome video.\"\n\n\"I'm sorry!\" I told him, still breathing hard. \"You want me to do it again?\"\n\n\n\"Can you?\" he asked, but I didn't bother to answer. I just went back at myself again. I knew Jerry and Ron were diving for the cameras, but I was just paying attention to me. I got myself cranked way the hell up again, and I got off hard again, but I didn't spray the guys' jizz. I sprayed my own.\n\nFor the first time in my life, I squirted. And it went all over the place.\n\n\"Far out, she's a squirter!\" Ginger laughed.\n\n\"She's a fucking fountain!\" Ron bitched. \"And she soaked the camera!\"\n\n\"Don't worry, I got it,\" Jerry told him. \"Can you do that again?\"\n\n\"I don't think I can do anything again, right now,\" I told him, lying back and nearly passing out.\n\n\"Oh, yes, she can!\" Ginger told him and the bitch did me in. She pounced between my legs, drove two fingers into my sopping pussy and started rubbing that swollen G-spot area, and I'll be damned if she wasn't right. I think I was screaming my head off, but I also think I was hosing down Ginger and anything beyond her. Then I really did go out.\n\nNot completely passed out but like falling asleep where you're on the edge of consciousness. I had enough brains left to ask Ginger to ease up and that was about it. She did, and I fell asleep.\n\n[to be continued]"
    ],
    "authorname": "eidetic",
    "tags": [
        "mature",
        "older woman",
        "younger men",
        "younger women",
        "bi/lesbian",
        "orgy"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/los-cinco-hermanos-ch-04"
}