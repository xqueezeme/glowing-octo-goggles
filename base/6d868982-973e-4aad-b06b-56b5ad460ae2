{
    "title": "The Chronicles: Three Sisters 06",
    "pages": [
        "THREE SISTERS Chapter 6\n\n\"You have to marry my daughter.\"\n\nI heard her plainly. Loud, and clear. I couldn't say 'What?', or 'Pardon?'. Asking her if she was serious might not be particularly helpful, either.\n\nThen I had a moment of inspiration. I hadn't had too many of those, in my life. But I seized on this idea, as a drowning man clutches at anything close to hand.\n\n- \"I ... I have to discuss it - with my daughters.\"\n\nThe old woman raised an eyebrow.\n\n\"She - Sulcen - would be step-mother to my girls. In a way.\" I realized at that moment that it would be better if I stopped talking. Shut up, Veran.\n\n- \"I understand.\" said the Mother of Nadestis. \"You can have until the day after tomorrow.\"\n\n***\n\nI didn't know how to explain it to Inisian and Moruith. So I told them nothing.\n\nHedyn was curious, and probably deserved to know something. But I couldn't think of what to tell him, either.\n\n- \"Just give me a day, will you?\" I asked him.\n\n- \"Of course.\"\n\nI took my three daughters to the woodpile, and burned off some of my aggression splitting logs. Yevna had the patience of a forester. Tanguiste was dying to ask, but had the good sense to wait. Guenna was going mad, wanting to start questioning me, but I held up three fingers - and she sat down, to consider her options.\n\n- \"We can stay here.\" I told them. \"There's only one condition.\" And I related my entire conversation with the Mother of the Nadestis.\n\n- \"What?\" shouted Yevna, as she leapt to her feet.\n\n- \"That's completely unfair!\" said Guenna.\n\n- \"Wait!\" said Tanguiste. \"Wait!\" She had to slap her older sister on the arm to get her attention. \"Wait, Yevna!\" I was struck - again - by how much she resembled her mother.\n\n\"Wait!\" she said, once more. \"Let Father speak.\"\n\nMy three girls all looked to me.\n\n- \"What?\"\n\n- \"What do you want to do?\" asked Tanguiste.\n\n- \"I could think about it in private, Tan.\" I said. \"Alone. But I decided to ask you three how you would feel about it. Your opinions - and your feelings on the matter - are important to me. So ... please - tell me what you think.\"\n\nI turned to look at Yevna.\n\nMy eldest daughter was a creature of the woods, of the forest trails. She was a hunter, a forester.\n\n- \"She won't be my mother, Papa.\" she said. \"But I have to respect her, for killing the man who mistreated her.\"\n\n\"If you want to marry her - or if you think you should, just so we have a place to stay - I have no objection.\"\n\nI could never say 'No' to Yevna. Every time she spoke to me, every time I saw the gap where her two front teeth should have been ... I remembered what she had done, to free me, to save all of us.\n\nTanguiste was more complicated. She insisted on staring deep into my eye, as if she was trying to read my mind.\n\n- \"Papa.\" she said. \"What do you want?\"\n\n- \"What do you mean, Tan?\" I asked, in return. It was especially disconcerting, because the experience of looking into her eyes reminded me all too painfully of her mother.\n\n- \"Would this make you happy, Father?\" she asked. \"Or is this just something you would do in order to keep us safe?\"\n\n-\"You don't like the idea, pet?\" I said.\n\n- \"It's up to you, of course.\" she said, with Meonwe's eyes.\n\nThat was too much for me to take.\n\n- \"Guenna?\" I asked.\n\n- \"Are you completely in agreement with the idea of marrying this woman?' asked my youngest.\n\nShe was clever. Her use of the word completely left me hamstrung.\n\n- \"What's your second question?\" I asked.\n\n- \"You didn't answer the first.\"\n\n- \"Correct. Next one.\"\n\n- \"Would this solution be best for us?\" she said.\n\n- \"That's debatable. Possibly.\" I said. \"Last question.\"\n\nGuenna looked me in the eye. She didn't resemble Meonwe at all. If anything, she was beginning to look like me.\n\n- \"What do you want, Papa?\"\n\n- \"That's the same question your sister asked.\"\n\nAnd I still didn't have an answer.\n\n***\n\nWhat did I want? It was a reasonable question.\n\nEver since that fateful night, I had only wanted to keep my daughters safe. Once their safety was assured, I hoped that they could lead happy, relatively normal lives. In a strange way, the coming of Kestutis and his band might have been a blessing.\n\nNot for Svijo and his sister, obviously. But if nothing had changed, my girls might have continued to grow up in an isolated cabin, with only Inisian and Moruith for company. There were other families nearby, but it was not a community. The forest folk were far too wary of each other.\n\nHere, on Prospal, the girls would be safe, and surrounded by other people like us. They could make friendships, laugh and learn, meet young men and perhaps fall in love and marry.\n\nIf the price for their future was a wedding - even if it was between me and a woman I had never spoken to - did I have the right to refuse?\n\nI had to admit to myself that I was lonely. I had gone six years without a woman. Now Guen Nadesti had opened up the possibility that I might have a wife, a companion. She couldn't replace Meonwe, of course, but she might at least partially fill an enormous void in my life.\n\nBut why would Sulcen want me? Was she being forced into another marriage against her will? I was no Duenerth - but I had killed two of her brothers.\n\nMaybe all the poor woman wanted was peace and quiet - to be left alone. I tried to put myself in her place, but I just couldn't. There was no way I could even imagine what she had been through. It was hard to believe that she would be very keen on the idea of a husband - or of the marriage bed.\n\nA marriage of convenience, then. A wedding, an alliance between our families, and a superficially friendly relationship ...? I would continue, then, to be without female companionship.\n\nIt was possible. The thing could work. I imagined holding Sulcen's hand, just long enough for us to be wed.\n\nThat's when I realized that I couldn't go through with it - unless she was willing. If I saw disgust, or revulsion, in her eyes ... I couldn't bear that.\n\nI would have to see her, then - before we agreed to anything.\n\nHalfway to Mother Nadesti's house, I stopped dead in my tracks. What was I thinking? The least I could do was take a bath. I turned on my heel, and headed for the river.\n\nThe trees were thickly clustered, so that I could barely see the river, until I was almost at its edge. Low-lying branches provided convenient handholds - a good thing, because the slope was steep, rocky, and difficult to climb, up or down.\n\nThe water was cold, high summer or not. I gave my clothing a wash, first, and then prepared to submerge myself completely.\n\nIt was pure luck that I hesitated for a moment. I've no idea what distracted me, or caused me to pause. But that was when I saw the boat.\n\nThere was a slight bend in the river, and I was in the shallows, in front of a dead tree that had fallen into the water. Slowly, I pulled back behind it.\n\nThere were five men in the boat - two rowing, three scanning the riverbank. Four of them wore helmets. One carried a bow.\n\nI carefully worked my way back, using the fallen tree for cover.\n\nLuck favoured me again. I had climbed some way up the slope, taking advantage of every bit of cover, moving as slowly and stealthily as I could. Then I saw the boat turn about, and make for shore - near the exact spot where I had been swimming.\n\nIt was understandable. There were no easy places to beach a boat - the riverbank was too rocky, too steep. Even there, the men would have to jump out of the boat, find their footing in the shallows, and then tie their craft to the fallen tree. It was far from ideal.\n\nI ran.\n\nNaked as the day I was born, I burst from the tree line, and sprinted for the houses, clutching my sodden clothes in my hand.\n\nFortunately, the first person I saw was big Hedyn. It took me only a moment to tell him what I wanted. Had it been anyone else, they might have stopped to question me - or refused to do my bidding. But Hedyn trusted me.\n\n- \"Send my daughters to me! Then find your fighters, and bring them here! Hurry, Hedyn - no time to waste.\"\n\nI put on my dripping wet clothing.\n\nInisian was first to arrive.\n\n- \"Do you know where my girls are?\" I shouted, before he had even reached me. \"Find them! Tell Yevna to get her bow. And Tanguiste to bring my sword. And get your bow! Hurry! \"\n\nTanguiste came running, with Guenna at her heels. She handed me my sword, without a word. Little Guenna had brought a knife for me, too. She was brimming over with questions, but followed her older sister's lead, and remained silent.\n\nVery often, you discover a new facet of a person's character in a crisis. Some grow voluble, while others panic. I had already seen my girls in action, so to speak, on the night of their mother's and brother's death.\n\nBut now I was happily reminded of their calm, their composure under pressure. They held their peace, and waited by my side - ready to act, without getting in the way or distracting me with questions.\n\nInisian returned, with Hedyn and Vingoldas.\n\n- \"Weyl's gone for Seva.\" said Vingoldas. \"What did you see?\"\n\n- \"Five men just landed.\" I described everything I had seen.\n\n- \"Bacho's people, you think?\"\n\n- \"Do you know of anyone else who would use a boat?\"\n\n- \"We can handle them.\" said Inisian. \"We'll send them running back to their boat.\"\n\n- \"That's not good enough.\" I said. \"If they escape, and tell Bacho what they've seen ... or if it's someone else - whoever the leader might be.\"\n\nVingoldas met my eye. He understood me immediately. \"We can't let any of them get away.\" he said. \"We have to kill them all.\"\n\nYevna arrived, with her bow.\n\n\"You have a plan?\" said Vingoldas, to me.\n\n- \"I do.\"\n\nI began to explain what I had in mind. Weyl and Seva, the two redheads, arrived at a run. Vingoldas told them, in short order, what was going on.\n\n- \"One-Eye has a plan.\"\n\nSeva frowned; she plainly didn't like it. Vingoldas ignored her, and turned to me.\n\n\"Go on.\" he said.\n\nI wasn't completely certain that the men in the boat would act as I anticipated. If they did something unexpected, then we were in serious trouble. But they didn't know what they were facing. I guessed that they would be careful until they knew more.\n\nWhen they saw how small the community was, they might be emboldened.\n\n- \"Seva, you and Yevna have bows. There will be one man guarding the boat.\" I told her exactly where he was.\n\n- \"What if there's more than one?\" she asked, with her lip curled.\n\n- \"Then we're all going to die when the reivers come.\" I said, flatly.\n\n- \"Shut up and listen, Seva!\" snarled Vingoldas. That did the trick.\n\n- \"You and Yevna have to sneak up on him, and fire at the same time. You can't let that man escape. Do you understand?\"\n\n- \"I can do this alone.\" said Seva. \"I don't need your girl getting in my way.\"\n\n- \"Seva,\" I said, \"Yevna has spent years in the woods. She's a good shot, too. But because this is your home ground, she'll follow your lead, today.\" I looked at my eldest daughter. She nodded.\n\n- \"We don't have time for this.\" said Vingoldas. \"Off you go.\"\n\nSeva cast a quick glance at Yevna. Then she trotted off, towards the river.\n\n- \"She's a good girl.\" said Vingoldas. \"Stubborn, annoying, full of herself, argumentative, and quick to find fault ... but a good girl.\"\n\nWeyl didn't contest this description of his sister.\n\nI explained the rest of my plan to the others. Inisian and Hedyn were ready to do whatever I suggested. Weyl was uncertain, but when he saw Vingoldas deferring to me, he quickly fell into line.\n\nWeyl ran to get another bow, and Vingoldas directed us to a good observation point. The hardest part was getting non-combatants to do as we asked.\n\n- \"We can do it, Daddy!\" said Guenna.\n\nI didn't want my daughters exposed to danger, but there was no time for anything more complicated.\n\nGuen Nadesti came out of her house. Vingoldas filled her in as quickly as he was able.\n\n- \"I can help.\" she said. And then, despite the protests of Weyl, Vingoldas, and Hedyn, she sat herself down on a stump, a mere eighty to ninety yards from the tree line, and pretended to be watching my two youngest daughters as they played.\n\nThe rest of us took our positions,\n\n- \"This is madness.\" said Vingoldas.\n\n- \"If you have a better idea, I'm listening.\" I said.\n\n- \"How do you know they'll come here?\" he asked. \"That they'll act ... the way you think they will?\"\n\n- \"If you were them, what would you do?\"\n\nThat shut him up. Vingoldas began to imagine what the men in the boat might do - and what they might be thinking.\n\nWe didn't have long to wait. The boatmen, when they finally climbed the hillside, and reached the edge of the trees, could see the flat, open crest of Prospal Hill - and the seven houses where its people lived.\n\nThey could count. There wasn't much here to frighten them. Two young girls, playing, and an old woman dozing in the sun ... they emerged from the trees.\n\nI let out my breath, slowly. Four of them. Only one had a bow.\n\nThe boatmen came towards the little hamlet.\n\nInisian and Weyl stepped out from behind one of the houses, and launched two arrows at the enemy bowman. They both missed.\n\nOur opponents were startled - but they weren't cowards. Their archer immediately fired back - and missed.\n\nBut the other three - two swordsmen, and a spearman - gathered their courage, and rushed towards Weyl and Inisian.\n\nBless them - both young men did exactly as I had instructed, and pulled back behind the house - out of sight. As the enemy sprinted towards them, their quarry disappeared. Mother Nadesti, helped by my daughters, moved between the houses in the other direction.\n\nVingoldas, Hedyn, and I burst from cover, and rushed at the enemy bowman. Understandably, he gave ground. But we were not after him. We only wanted to get between him and his friends - to cut them off.\n\nThree against three. The boatmen were shocked, to find us prepared for them. But they weren't afraid, yet. Their friend with the bow was behind us. Surely that gave them an advantage.\n\nTheir archer was not a great shot - he missed. Then Inisian and Weyl came around the house, and let loose at him.\n\nOne arrow missed. But the second struck our foeman in the chest. He stared at it in disbelief. Then he staggered, and fell to one knee.\n\nThe trio ahead of me were shaken - that was evident. They didn't break and run, but they didn't advance, either. They clustered together, lending each other support.\n\nI was walking towards them - very slowly, with Vingoldas and Hedyn flanking me. It wasn't just vanity on my part - I suspected that we were an intimidating sight.\n\nThe enemy trio had lost their best chance to run. Their friend the bowman was down, and our two archers were now flanking them. In a moment, Inisian and Weyl would be behind them.\n\nThe swordsman in the centre bore a shield. He had studded leather armour, and a brace on his wrist. He was blonde, with an odd tattoo on his cheek. The spearman to his left had a neatly trimmed beard, and a broad forehead - it's odd, the things you notice, in moments such as this one.\n\nThe third man, another swordsman, had curly hair. He was a bit chubby, as Hedyn had once been. His eyes flickered, from me, to the swordsman in the middle, to Vingoldas, who faced him.\n\nI stepped forward.\n\n- \"Who are you?\" I said. Part of me was curious. I also wanted to give Inisian and Weyl time to get behind them.\n\n- \"Hammerfist.\" breathed the spearman.\n\n- \"Yaahh!\" shrieked the tattooed swordsman, as he launched himself at me.\n\nHe was young, and inexperienced, and he tried to do exactly what most men did - just as I had told Inisian. He cut at my neck.\n\nI caught his savage stroke on my own sword, and felt my arm shiver. The blades rang with the impact, and his weapon actually bounced back a foot. I calmly stabbed him in the face with the point of my weapon.\n\nIt was not an exceptional lunge - all I did was gash his cheek. But he panicked and tried to slash my face. He should have been watching me, instead. It was easy to parry his wild swing. Then I only had to dip the point of my blade, and thrust it into his throat.\n\nThe spearman held his ground - I'll give him that. The curly-haired swordsman panicked, and turned to run. Inisian and Weyl brought him down with arrows.\n\nHedyn circled around the spearman, while Vingoldas and I flanked him. I recognized the fellow - one of Bacho's men. He knew me, obviously.\n\n- \"If I yield, Hammerfist, will you spare me?\" he asked.\n\nI shook my head. He deserved that much.\n\nHe feinted at Vingoldas, and quickly spun around to lunge at me. I hadn't rushed forward - it was easy to step back, and swing my sword across.\n\nHedyn had all the opening he needed, and drove his sword into the spearman's back. Then he delivered the coup de grace, without hesitation.\n\nThe curly swordsman wasn't dead. Vingoldas dispatched him quickly and efficiently. Then he did the same for the mortally wounded archer.\n\n- \"Better check your paths - like the one with the rope.\" I suggested.\n\n- \"You'll see to the last boatman - and the girls?\" asked Vingoldas.\n\nI nodded. He took Weyl, and Hedyn. Inisian and I went down towards the river. We met Seva and Yevna on their way back.\n\n- \"We got him!\" called Weyl's sister. \"Both of us hit him!\"\n\nNeither of them were hurt. They were both relieved to learn that the threat was over.\n\nI pulled Yevna close, and kissed the top of her head. She smiled, without showing her teeth.\n\n- \"You did well - both of you. But we'll need your axe, Inisian.\" I said. \"That boat has to disappear.\"\n\n- \"I'll take care of it.\" he said.\n\n- \"I can help him.\" said Yevna.\n\nThat left me with Seva, walking back up the hill. She didn't say a word to me.\n\n***\n\nMother Nadesti was waiting when I returned. Her expression gave nothing away.\n\n- \"Are we safe?\" she asked.\n\n- \"I think so. For now.\" I said. \"None of them got away, to carry word.\"\n\n- \"You did well.\" she said. \"If you hadn't been here ... it might have been the end of us.\"\n\n- \"Then ...\"\n\nMother Nadesti easily read my expression.\n\n- \"The condition remains.\" she said. \"Just as we agreed.\"\n\nShe turned and limped away. After just a few feet, though, she stopped. She didn't turn around, but I clearly heard her voice.\n\n\"Thank you, Veran.\"\n\n- \"Wait.\" I said. I walked up beside her.\n\n\"I'd like to speak to ... your daughter.\"\n\nGuen Nadesti looked me over.\n\n- \"Alright.\" she said. \"But shouldn't you clean up a bit, first? You're filthy.\"\n\n***\n\nMother Nadesti gave us privacy, at least. Sulcen sat on a carpet, in the same house where I had first seen her. She wore the same simple brown robe. I noticed, though, that she had a thin chain of beaten silver around her neck, with a ring instead of a pendant. Her hands were crossed in her lap. One of them now bore a ring with a piece of amber.\n\nThese must have been her mother's touches. Sulcen was not wearing them the first time we met ... even though we hadn't been introduced.\n\nShe didn't raise her head.\n\n- \"May I ... sit down?\" I said.\n\nShe gestured, with one hand, to the carpet beside her. \"Please.\" she said.\n\nI lowered myself to the ground, a good four feet away. Perhaps I erred, on the side of caution. But I didn't want her to feel threatened, or pressured. At least she had spoken. It was only a single word, but it was important.\n\nShe wasn't going to refuse to speak. She might avoid eye contact, but we could communicate.\n\nThat was the extent of my diplomatic finesse. Now that I was seated near her, I had no idea what to say.\n\nTo my surprise, it was Sulcen who broke the silence.\n\n- \"Thank you.\" she said. \"For ... fighting for us.\"\n\n- \"Ah - you heard?\"\n\n- \"I watched.\" she said.",
        "- \"Oh?\"\n\nShe didn't turn her head, but she did nod. \"Yes. Had you fallen, we would have had to fight.\"\n\nThere was something chilling about the way she said it.\n\nI tried not to stare, but I glanced at her, from the side, several times. She was deliberately avoiding eye contact, keeping her head down, and turned slightly away, so that she wouldn't have to meet my eye.\n\n- \"Sulcen ...\" I said - with no idea what came next.\n\nThen she turned, and met my gaze.\n\nI wished she hadn't.\n\nThere was so much pain in her eyes. It went beyond despair. Despair is the loss of hope. I was very near to it myself, the night Meonwe was raped and killed. I despaired, briefly, overcome by my defeat, and by the horrors my loved ones had to endure. Yevna had rescued me - she restored my hope.\n\nSulcen looked like someone who had never known hope in the first place.\n\nI wanted to ask her what had happened ... what she had been through. It was probably not a good idea, but that didn't matter: I didn't have the courage. Or the foolishness. Sulcen looked down again.\n\nBut I couldn't sit there and say nothing. Already, the silence between us was lengthening ... as I grew more uncomfortably aware of it.\n\n- \"Umm ... I - ah ...\" I felt like a complete idiot. Better not to say anything, than to be making these inarticulate noises. Then I blurted out: \"Your Mother spoke to you?\"\n\nSulcen nodded.\n\n\"About me?\" I asked.\n\n- \"Yes.\"\n\n- \"And about ...?\"\n\n- \"Marriage? Yes.\"\n\nIt was impossible to read her face - or her profile, to be more precise, because she was half-turned away from me. But even without the curtain of her hair partially hiding her features, I doubt that I could have guessed what she was thinking.\n\n- \"Ah ... how ... how do you feel about it? Do you ... want this?\"\n\n- \"Why do you ask?\" she said.\n\nThat was not at all what I had expected.\n\n- \"Well ... your mother ... is offering me a marriage. To you. So ... I was wondering. Do you ... want to be married? To me?\"\n\nShe turned, slightly, to look me in the eye.\n\n- \"Do you?\" she said.\n\n- \"What?\"\n\n- \"Do you want to marry?\" she asked.\n\n- \"Of course I do.\" Why I said that, I don't know. It remains a complete mystery to me.\n\n- \"Why?\" she asked.\n\nNow I was stuck. Before I could reflect on what I was doing, I told her the truth.\n\n- \"So that my daughters can stay here, and be safe.\" I said. \"Because an alliance between our families may help to ... heal the ... to end the bad feeling between your mother and me.\"\n\n\"And ... because you're lovely.\"\n\nSulcen didn't react to anything I'd said. I couldn't tell if she was pleased, or upset.\n\n- \"So why ask me?\" she said. \"Why not just accept the bargain and take me?\"\n\n- \"I wanted ...\" Damn- why was this so difficult? \"I wanted to know, Sulcen, how you feel about it. I would rather have you happy. Or, at least - not unhappy.\"\n\n- \"I am not unhappy.\" she said.\n\nWell that was something, I suppose.\n\n- \"I know that ... that I'm no great prize.\" I gestured to my missing eye, to my scars. \"In terms of looks ... and in other ways.\"\n\n\"And I understand that you've ... been through a ... a great deal. I won't ... I won't force myself on -\"\n\n- \"I will be a dutiful wife.\" she said. Sulcen turned again, to look me in the face. \"I understand that you will try to make me happy. I will try to do the same.\"\n\n***\n\nThe next day, I met with Vingoldas. None of his watchers - young children, or girls, for the most part - had seen anyone approaching the hill from the landward side. Hopefully, then, the boatmen had been acting alone, and their disappearance would befuddle or confuse Bacho.\n\nVingoldas didn't say anything else - but he did extend his hand to me. I took it.\n\nThen I went to see Mother Nadesti.\n\n- \"She said yes.\" I told her.\n\n- \"She did?\"\n\n- \"You sound surprised.\"\n\n- \"No - just pleased.\"\n\n- \"Why do you even want this wedding?\" I asked her. \"What do you get out of it? Is it just so that you can trust me? Surely, after yesterday, that's no longer an issue?\"\n\nThe old woman shook her head.\n\n- \"No. You've always been reliable. Your daughter was right. I have to choose to trust you - or not. But I've always suspected that you were one of the most trustworthy people I know.\"\n\nGiven that I had killed two of her sons, and caused her to flee to this swamp-encircled hill, it was quite something to hear Guen Nadesti say that she trusted me.\n\n- \"Thank you, for that.\" I said.\n\n- \"I always liked you, Veran. And I bear some of the responsibility for what happened. I might have been able to hold Dengel back, if I had really tried.\"\n\n- \"I had nothing but respect for him.\"\n\n- \"I know. I've had plenty of time to wonder if the two of you could have been friends.\"\n\nI understood her pain. Had she encouraged Dengel to befriend me, he would still be alive. There would have been no battle, and several Nadesti men would still be alive as well.\n\nGuengerthlon also had to know that if she had made an effort to bring Dengel and me together, that Meonwe and Iarn would probably still be with us, too.\n\nIf only we had sat down, and had a serious conversation.\n\nIf Lanko had been punished, by his own family, for stealing sheep. If Dengel and I had become friends. Bacho would never have had the opportunity to betray me.\n\nMeonwe ...\n\nPain doesn't always diminish with time. Sometimes it remains as powerful as the first time we felt it. I couldn't help myself; tears came to my eye, and my scarred, eyeless socket throbbed.\n\n- \"I'm sorry, Veran.\" she whispered.\n\n- \"So am I, Guen.\"\n\n- \"I know.\"\n\n- \"Then why this ploy? Why this marriage?\"\n\nGuen Nadesti looked very old, at that moment. Old, and vulnerable.\n\n- \"Can't you see it?\" she said, softly. \"You took my sons.\"\n\n\"Veran - you took my sons. Now I want you to bring me back my daughter.\"\n\nShe didn't cry. I don't know if she could, anymore. But I wanted to.\n\n- \"Why ... what makes you think that I can, Guen?\"\n\n- \"I know you can.\"\n\n- \"Why? Because we're ... fellow sufferers? Because you think I can understand her pain? That I somehow know how much it cost her?\"\n\n- \"No.\" said her mother. \"Because when you arrived, it was the first time I saw a spark of interest in Sulcen. The first time since she came back.\"\n\n\"When I discussed you with Vingoldas, Sulcen listened - attentively - to every word. You think she's hard to reach? You should have seen her before you got here.\"\n\nI swallowed. \"I'm not sure ... that I can do it.\"\n\n- \"I want you to try.\" said Mother Nadesti. \"She's my last child, Veran.\"\n\n***\n\nBoth of us had experienced a marriage ceremony before. I didn't want to be swamped by memories of Meonwe - not in this way, nor at this time. And I doubted that Sulcen would want to be reminded of her first husband.\n\nThat was why I decided that we should do something different - something unconventional. Sulcen agreed to my suggestion, though without any particular enthusiasm. Her mother was more encouraging.\n\n- \"Very thoughtful, Veran.\" she said. \"Very wise.\"\n\nWe married beneath the trees, with only her mother and my daughters as witnesses. Virtually everyone else on Prospal Hill knew what was going on, but I don't believe that any of them begrudged us the privacy.\n\nI spoke the vows, and Sulcen answered. To my surprise, she met my eye when she said the words. I still couldn't read her expression.\n\nAfterwards, we broke bread, and drank sushen - fermented honey. There were no crude jokes, no ribald behaviour. The girls were wonderful. Even Yevna gave Sulcen a hug. Tanguiste embraced her, and squeezed her tight. Guenna kept herself in check, and only asked two questions.\n\nMother Nadesti took my daughters back to her house. Sulcen and I spread a fur and a blanket under the stars.\n\n- \"Have you ... have you been with many women?\" she asked. \"Since ...?\"\n\nIt was a painful memory. But it was also one of the very few times Sulcen had spoken to me without being asked a question. I wanted to treat her query with respect.\n\n- \"No.\" I said, softly. \"None. You will have to ... be patient with me.\"\n\n- \"I haven't, either.\" she whispered.\n\nI kissed her cheek, and enfolded her in my arms. I didn't caress her, or touch her ... anywhere. I just held her.\n\nIt might have been easiest to simply hold her, and let us fall asleep together.\n\nBut once we began in that manner, it might prove difficult - or even impossible - to progress any further. 'Start as you mean to go on', my father used to say.\n\nI began to lightly stroke her back, and then her shoulders. She shivered, and clung to me more tightly - but she didn't pull away. When I sought her lips with mine, Sulcen allowed me to kiss her. And then, to my further surprise, she kissed me back.\n\nWhat followed was not especially passionate - I was too careful, too afraid to rush, or to hurt her. But it was warm, and close, and more intimate than I had expected.\n\nSulcen gave of herself, as much as she was able. We consummated our marriage, under the stars, and then held each other close.\n\n***\n\nWe had to build two new houses, before winter: one for Moruith and Inisian, and a larger one for my three daughters, and my new wife.\n\nHedyn and Vingoldas pitched in to help us. Everyone on the hill contributed, in one way or another, whether by carrying stone, providing food, or keeping watch while the rest of us worked.\n\n- \"Should we have a house of our own?\" I asked Sulcen. \"Would you prefer that?\"\n\n- \"That would be cruel.\" she said. \"To your girls. And to you.\"\n\n- \"Are you sure you won't mind?\"\n\n- \"Your daughters mean the world to you. I can see that.\" she said. \"They would suffer, to be away from you. And ... I hope that I can be their friend. In time.\"\n\n- \"Probably sooner than you think.\" I said.\n\n*****\n\n \n"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "dark ages",
        "fantasy",
        "swords",
        "women warriors"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-chronicles-three-sisters-06"
}