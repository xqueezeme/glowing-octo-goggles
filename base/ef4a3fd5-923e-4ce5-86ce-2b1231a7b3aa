{
    "title": "Date Night with Keiko",
    "pages": [
        "CW: Mind control, forced impregnation\n\nThis story follows after Date Night with Julia. It can stand alone, but it works best if you read that one first.\n\n---\n\nWhen Keiko stole my wallet, she didn't know what she was signing up for.\n\nThe town where Andy and I live has a little festival every fall, with a low-key parade and some fairground-type entertainment and a hundred food stands. We'd made a habit of dropping by every year, if only for an hour or so. The rides were a bit much for me, but I enjoy sampling the food and watching the people.\n\nThat day, though, I had an ulterior motive in my people-watching.\n\n\"What about the blonde girl on your right?\" I whispered to Andy as we made our way through the crowd.\n\nHe looked at me, then glanced over at the smiling woman behind the cotton candy stand. She had bright blue eyes, and cute dimples, and gorgeous tits that she made very little effort to hide.\n\n\"She's...pretty,\" Andy said.\n\n\"Would you like me to borrow her for our date night?\"\n\nI suppose I ought to explain. I'm a bit strange in a few respects, but the strangest thing about me is that I can borrow other people's bodies. My body falls into a deep sleep, and I wake up in their body and control it as if it was mine. They remember nothing of what I do.\n\nUp until this past summer, I'd mostly just used this ability to borrow money from a few billionaires who could certainly spare it. But over the summer, a buff girl named Julia had bumped into me just before Andy and I had our Friday date night. She'd hurt my back, so I'd borrowed her body for the date instead. Andy was apprehensive at first, but the date went very well. I fucked Andy unprotected, and sent Julia back home pregnant.\n\nAndy certainly enjoyed it, but I think I enjoyed it even more. I'd wanted him to bareback me for years, wanted to feel his seed rushing into me and know that I was giving him a baby. And, now that I'd done it once, I was eager to do it again. Andy, however, was rejecting most of my suggestions.\n\n\"We don't know her,\" Andy said.\n\n\"Did we know the last one?\"\n\n\"I knew she wasn't kind to you,\" Andy said.\n\n\"Okay,\" I said. \"So if a girl is mean to me, I can borrow her?\"\n\nHe hesitated, then nodded, his cheeks flashing crimson.\n\n\"What about the girl back at the churro stand?\" I asked. \"The Latina girl with the deep brown eyes?\"\n\nAndy thought back, his blush deepening. \"What did she do?\"\n\n\"She rolled her eyes when I said I didn't need a bag.\"\n\nAndy sighed, although his grin hadn't left. \"She works in food service. We can't fuck every food service person who's a bit tired when she meets us.\"\n\n\"Not all of them,\" I agreed. \"Just the cute ones-\"\n\nI abruptly ran into someone, and she and I both stumbled backwards before I could gather my wits.\n\n\"Sorry!\" she said, sliding her backpack onto her shoulder. As she did, I got a better look at her. She looked to be of Asian descent, with straight black hair, pale skin, and dark amber eyes. She wore a black vest that highlighted how slender she was, and I was a bit jealous of her sense of style.\n\n\"Not to worry,\" I said. She smiled a bit shyly, then ducked her head and ran off.\n\nI glanced at Andy, raising my eyebrows, and he grinned and rolled his eyes.\n\n\"No,\" he said.\n\n\"She ran into me,\" I noted.\n\n\"She apologized,\" he replied.\n\nI sighed theatrically.\n\n\"Alright,\" I said, and we walked on.\n\nIt took me a while to realize what she'd done. Andy and I walked halfway around the park, just enjoying the brief middle ground between the summer's heat and the chill of the fall. A local dance studio had set up a stage, and we watched their students go through a couple of pop routines. I held Andy's hand, and ate the last of my churro, and watched the people in the crowd.\n\nIt wasn't until we stopped to get Italian ices that I realized my wallet was gone. Andy patted at his pockets, but he didn't have it either.\n\n\"Did you leave it at the churro stand?\" he asked.\n\n\"No,\" I said. \"I remember putting it away.\"\n\nThe truth of what had happened hit me suddenly, and I laughed. Andy frowned, confused, and I leaned in close to whisper to him.\n\n\"The girl who bumped into me. She took it.\"\n\nAndy hesitated. \"Are you sure? Because maybe you dropped it.\"\n\nI glanced around. \"Let me lie down in the shade,\" I said, \"and I'll check.\"\n\n---\n\nThe sensation of taking over someone else's body is hard to compare to anything else. For a brief moment, I get the senses of both bodies, and the rush of information is like stepping from a darkened room out into bright sunlight. It fades, over a few seconds, and then I'm inside their body.\n\nThe girl who had bumped into me had been walking through the crowd when I borrowed her. I wove my way through the crowd, trying to find a secluded spot to check for my wallet.\n\nHer body was fun. She wasn't super buff like Julia, but she was beautifully flexible, and I wove my way effortlessly through the throng of attendees. I really hoped she had stolen my wallet, because I was eager to get her naked and see how flexible she was.\n\nI found a quiet spot in the shade of a pine tree and opened my backpack. Down at the bottom, beneath a change of clothes and a bike helmet, I found a pile of a half-dozen wallets, including my own.\n\nHer wallet, on the other hand, was in her pocket. Her name was Keiko, she was 23, and she lived about a mile away.\n\nPutting her wallet and all of the others that she'd stolen back, I made my way through the crowd to where Andy waited next to my sleeping form.\n\n\"Is that you, Melissa?\" he asked.\n\nI grinned.\n\n\"Right now, my name is Keiko,\" I said, handing my wallet over.\n\nHe glanced at it, then at my sleeping body. \"So you did steal it.\"\n\nI nodded. \"I'm a master thief,\" I said. \"And you know what I'm going to steal next?\"\n\nHe took a deep breath. \"Tell me.\"\n\nI stepped closer, wrapping my arms around his neck. Keiko was a bit shorter than me, and I had to reach up to hold him.\n\n\"I hear that you and your wife have a date night on Friday,\" I said. \"Well, I'm going to steal her spot.\"\n\n---\n\nWhen I borrowed Keiko's body that Friday, I was instantly annoyed by her place.\n\nShe had an apartment in the luxury complex on the edge of the open space, up on the third floor. Her apartment had a balcony facing a stand of Aspen trees, their fall foliage an explosion of yellow and orange. She had a bunch of artfully chosen prints on her walls, a little bonsai tree on her dining room table, and a comically large TV on her wall. She very obviously didn't need to be stealing people's wallets to get by.\n\nShe was barely out of college, so it had to be her parents' money, one way or another. She had everything she needed, and she was picking people's pockets to entertain herself.\n\nI huffed. I was going to give her a better pastime - raising Andy's baby.\n\nShe had a bicycle parked near the front door. I was about to hop onto it when I realized that she'd already changed into her silk pajamas.\n\nThe second bedroom door led into her bedroom. I shed her pajamas, tossing them onto the bed, and looked down at her naked body.\n\nShe was a cutie. She was a few inches shorter than me, with pale skin. Her tits were smaller than mine, with dark little nipples. She had a relatively tame bush leading down to her demure lips. She was much more of an innie than Julia or I, and I spent a minute just exploring her pussy with my fingers.\n\nAs much fun as it was, though, I knew that I'd have more fun exploring her body with Andy's help. I opened her drawers until I found the black vest, exercise pants, and tennis shoes she'd been wearing at the festival, then slid them on.\n\nEvery body I borrow has some patterns of behavior that come with it - habits that run so deep that they're practically part of the body. One of the billionaires I borrowed would scowl at the slightest provocation; my friend Hannah would keep her eyes down and fold her hands. Keiko moved like a cat - her footsteps were utterly silent as I walked back into the living room.\n\nI grinned, as I slipped her bike out the door and then locked it behind me. Even if she didn't need to steal, she was a natural at it, and I wondered how Andy would feel about her stealing a thing or two from him.\n\n---\n\nOur street was quiet when I pulled in. Glancing both ways, I slipped the bike through our back gate and into the backyard. I parked it on the back porch, then slipped in the back door.\n\nI was a bit early, this time; Andy hadn't started dinner yet. I crept up the stairs, and padded silently into our bedroom.\n\nAndy was just stepping out of the shower, with a towel wrapped around his waist. He froze when he saw me; he knew I was bringing a different body over, but it's still disconcerting at first.\n\n\"Hi, Andy,\" I said, walking closer.\n\n\"Are you...are you here for date night?\" he asked.\n\nI smiled. \"I'm just coming over to steal, remember?\"\n\n\"Well,\" he said, \"I'd love to have you steal some dinner.\"\n\nI grinned. I put one hand up to touch his cheek, marveling at how much bigger he seemed in a body that's just a couple inches shorter than me. He leaned into my hand, pressing his head against me, and I reached smoothly up and untucked his towel.\n\nHe jumped a bit, but my touch kept him from going far. I glanced down; his skin was still a bit wet from the shower, and I could see him just beginning to stiffen at our closeness.\n\n\"I'll steal what I want,\" I said, looking back up to meet his gaze and pulling myself closer.\n\nHis breathing was light and swift, his heart racing at my touch.\n\n\"So, tell me,\" I said, sliding my hand down from his chest down to his hip, \"do you have any valuables around here? Maybe things that you're supposed to keep for your wife?\"\n\nHe smiled. I could feel my heart racing too, but I wanted to play the role of the seductive thief, so I kept my expression inquisitive.\n\n\"I...I'm not going to give you her jewelry,\" he said.\n\n\"Oh, I don't want that,\" I said, and kissed him.\n\nKissing, I've found, is one of the areas where it's easiest to tell who someone really is. No matter what body I'm in, Andy can tell that it's really me by the way we move together, our lips and our tongues falling into familiar patterns. I was still playing the part of the superior and seductive thief, but Andy could see the actor behind the role. I was promising him that no matter what games I played I was always his, and he was telling me he understood.\n\nHe broke away from the kiss, half out of nerves and half out of feigned reluctance.\n\n\"I shouldn't,\" he said. \"Having you over for a date is one thing, but this is something else.\"\n\n\"It is,\" I agreed. I ran my hands around his hips, keeping him from getting far. \"It's thievery. I snuck in, I stole a kiss, and now I'm wondering what else to steal.\"\n\n\"I...\" he hesitated. \"I love my wife too much to cheat on her.\"\n\nI grinned. It was sweet to hear, no matter what we were doing.\n\n\"She knows that sometimes thieves come along,\" I said, releasing his hips and taking a step back. \"Especially thieves as well-equipped as me.\"\n\nHe frowned. \"What do you-\"\n\nI reached down and grabbed both my vest and the long-sleeved shirt beneath it, pulling them off and tossing them to the ground. He took a quick, sharp breath, and I grinned as I slid my sports bra up and off.\n\nHe caught my eye, and I stared at him as I kicked off my shoes and pulled my exercise pants down. He glanced at my bush, and I grinned in triumph.\n\n\"Isn't this nice equipment?\" I asked, gesturing down. \"Look closely and tell me.\"\n\nI looked at myself, too. Keiko was petite, and not intimidatingly strong like Julia, but she clearly went to the gym. The muscles in her arms and legs were well-defined, even if they weren't that big, and she had a cute little six-pack. I spread my legs just a bit, letting Andy glimpse my lips, then took a step toward him.\n\n\"Tell me,\" I said. He couldn't lie to me - even if I didn't know him as well as I did, his cock was already stiffening.\n\n\"You're lovely,\" he admitted.\n\n\"See, that wasn't hard,\" I said, placing my hands on his hips. \"But I think you've got more valuables for me.\"\n\nHe gasped as I caressed his skin, my fingers trailing along his hip. Keiko had such a delicate touch; it was easy for me to glide across his skin so gently that I could feel his goosebumps.\n\nI wondered if Keiko ever used her deft fingers for this sort of activity. I hadn't seen any indication that she had a boyfriend; perhaps she wasn't much interested, or her parents frowned on it. If so, they'd be quite shocked when they found out she was pregnant, and didn't even know who the father was.\n\nAndy's breathing came quickly and sharply as I moved across and down, my fingers glancing across his bush and reaching the base of his stiffening cock. He placed a hand on my hip, and I couldn't tell if he just wanted to feel me or if he was playing the part of the reluctant husband.\n\n\"I shouldn't,\" he said. \"My wife...\"\n\n\"She's sleeping in the next room,\" I said. \"Don't worry - I promise not to wake her up.\"\n\n\"But I...you can't take this,\" he said. He didn't move to stop me when I ran my hand up his shaft and gave him a languid stroke, but he turned his head as if reluctant to watch.\n\n\"I already am,\" I said. I began stroking him, a bit quicker than I had been, but still slower than he wanted. He groaned, although I could see a bit of a repressed grin in his expression.\n\n\"Do you want me to go faster?\" I asked softly. \"Because I'll need a little bit of help from you.\"\n\nHe bit his lip as he looked at me. He didn't say anything, but I saw a surrender in his expression. I reached out and took his hand, marveling a bit at how much bigger it felt in a smaller body, then guided it down to my lips.\n\n\"Yes,\" I murmured as his fingers moved past my bush and along my lips. He moved so gently, his fingertips moving along my cleft and feeling how Keiko's body differed from mine. She was a slower start, I suspected, but Andy's fingers were already starting to get her there.\n\nShe was better than I was at multitasking, too. Andy and I would sometimes touch each other like this at the same time, and when he hit the right rhythm I would turn into a mewling puddle and forget to stroke him back. He told me it was cute, and I believed him. But in Keiko's body, I could enjoy the rhythm he was setting with his fingers and keep up my own as I stroked his cock.\n\n\"I think I like it a little faster than your wife does,\" I said.\n\nHe shook his head, unable to keep from grinning for a moment.\n\n\"You're a brat,\" he said.\n\n\"Am I?\" I asked, my hand moving up and down his shaft. He was hard, and his cock felt bigger in Keiko's hand than it did in mine.\n\n\"Yes,\" he insisted. His pace had crept up, and his fingers were hitting on all cylinders now. I knew he could feel my wetness on his fingertips, but my superior grin didn't fade.\n\nI held his gaze as we stroked each other, his fingers gliding along my lips, my hand pumping up and down his shaft. It was a game of chicken that I'd always lose in my own body, but one that I could win in Keiko's. Andy's fingers felt wonderful, I could feel my heart racing as the pleasure flowed through me, and I was delightfully wet, but I kept up my pace. His arm bumped into mine, and I grinned.\n\n\"Little awkward, isn't it?\"\n\nHe blushed, not knowing what to say.\n\n\"If you want to lie down on the bed, I can steal a climax in a different way.\"\n\nHe gasped, his rhythm faltering. My grin broadened, and he gave me a worried frown.\n\n\"Come on,\" I said. \"You've already given me such nice valuables. Just let me try this one on for a bit.\"\n\n\"I...is it safe?\"\n\n\"Is that a yes?\"\n\nHe looked at me, and I slowly pulled my hand away from his cock. He groaned, trying to keep up the facade of the loyal husband being seduced, but unable to conceal his excitement at the whole game.\n\n\"Yes,\" he breathed.\n\n\"Alright,\" I said. \"Go ahead, then.\"\n\nHe jumped up onto the bed and lay down on his back. I ran my hands down his chest, as much to tease him as to feel him, then climbed up beside him and straddled his hips.\n\n\"Here we go,\" I said. I grasped his cock and guided it to my lips, running his head back and forth. Keiko's pussy was a bit different from mine, but his cock felt lovely, and I could feel my wetness coating him and easing his passage.\n\nI wondered, briefly, what Keiko would think of this. Her apartment made me think that she wasn't involved with anyone or sexually active, and now I had a bare cock at the entrance of her unprotected pussy. Would she be excited, or scared, or angry?\n\nShe'd never know, though. I might be playing the seductive thief for Andy, but for Keiko I was impossible to resist. I could send her back to her fancy apartment with Andy's baby in her womb, and she'd have that baby without wondering who put it in her.\n\nAndy groaned as I pushed the head of his cock between my lips and inside. I closed my eyes, letting myself savor the sensation and adjust to his presence. He moved up to meet me, just a bit, and I put a hand on his hip.\n\n\"Be careful, there,\" I said. \"If you get too excited you might cum inside me. I'm just trying to steal an orgasm for myself.\"\n\n\"I thought you were safe,\" he said.\n\nI moved down slowly, driving his cock deeper inside me. Keiko was just a bit tighter than me, but I could feel her pussy getting used to Andy's cock. I leaned forward and gave Andy a kiss, our lips meeting as my ankles pressed against his.\n\n\"I'm perfectly safe as long as you do what I say,\" I whispered.\n\n\"That's...not all that safe,\" he argued.\n\n\"Oh, really?\" I asked. \"Are you worried you're going to lose control?\"\n\nI sought out the right rhythm, my hips dangling as I fine-tuned my approach. Keiko did seem to like it a bit faster than I did. I was rising and falling swiftly but not deeply, with Andy's cock staying buried inside me, filling me up. It was lovely; I could feel my own pleasure rising, and hear Andy groaning with lust underneath me.\n\nKeiko was not a moaner, though. Even as I felt my pleasure rising, felt my pussy responding to Andy's presence, I found myself mostly silent. I wondered if Keiko thought of her pleasure as a private thing, too valuable to be shared, or if she was just a ninja in everything she did. Either way, if I moaned I was pretty sure it would feel like an affectation. I hoped that I was making my pleasure clear in other ways, and kept seeking it out.\n\nAndy, meanwhile, was gasping louder than usual as I squeezed his cock. He was looking down at where we joined, watching my pretty little cunt open for him. I ran a finger along his chin, drawing his gaze back up to meet mine.\n\n\"How are you doing down there?\" I asked.\n\n\"I'm...okay,\" he said. His tone told me that he wasn't close yet so I figured that he could stand a bit of teasing.\n\n\"That's good,\" I said. \"I know I can steal a really nice orgasm from you as long as you don't cum too soon.\"\n\nHe took a deep breath, closing his eyes for a moment. \"You're not helping,\" he said.\n\nI grinned, my hips digging in a bit against his. The sensation was different, in Keiko's body; I didn't feel like I was finding a rhythm so much as trying to strum the right chords. The comforting warmth of his thighs against mine was like counterpoint, a bit of familiarity in an unfamiliar body.\n\n\"Maybe it would help to think about your wife, then,\" I said.\n\n\"Thinking about my wife helps me cum,\" he said.\n\nI grinned. \"Yeah, but this is different,\" I replied. \"Think about how she'd feel if you knocked up a strange girl in her bed.\"\n\n\"Oh, you are terrible,\" he said with just a hint of a grin.\n\nI reached down and found his hands. He tried to grasp them, at first, until I guided him. I placed his hands on my hips, at first, letting them rise and fall with my movements. After a moment I moved them up, though, sliding across my cute little six-pack and up to my petite breasts.",
        "He cupped them both, his thumbs circling my small nipples. I sighed, which seemed to be the loudest sound of pleasure that Keiko made, but Andy noticed.\n\n\"Yes,\" I said softly. \"Keep doing that. I promise I won't tell your wife about this.\"\n\n\"Yeah?\" he groaned.\n\n\"As long as you make me cum,\" I added.\n\nHe shook his head, but in truth I was already getting close. The gentle touch of his fingers and the firm motions of his hips were most of the chord that I needed. I knew I could get there with just those pieces, but there was something else I wanted, something that would make the chord perfect and send me flying across the finish line.\n\nI leaned in to kiss him. The sensations were a bit much for him - I felt his hands slow down as I pressed my lips against his - but, God, it felt good for me. I was so lucky to have a man who could keep up with the needs of whatever body I came to him in.\n\nThe kiss took over my attention, dominating my thoughts. The pattern of the kiss was still unquestionably mine, but I could feel a rising passion flowing into it. My tongue pushed into his mouth, brushing his tongue aside in my desperation to feel him. The kiss, the last little bit of power I could wield, was like the last tumbler in a lock yielding to my lockpicks and clicking into place.\n\nI felt Keiko's body rising up towards climax. For her it was a warmth, flowing from her pussy out to every extremity, arcing along her nerves like electricity. The waves rose up, but unlike in my own body, they didn't knock me over. In my own body I was helpless when I came, unable to speak or think as the pleasure steamrolled me. In Keiko's body, there was a part of me that stayed perfectly aware, even as the tsunami crashed down.\n\nI pulled my tongue back as the wave broke, my lips close against Andy's. I felt his groan as much as I heard it, felt his chest rise and his voice rumble against my mouth. I could feel my pussy squeezing him, the pulses coming swiftly, and I knew it must be almost as exquisite for him as it was for me.\n\nI didn't cry out, or moan, as Keiko's body enjoyed its triumph. The pleasure was incandescent, glowing inside me and calling out like a glorious chorus, but in Keiko's body the pleasure didn't demand to be shared. It was mine, and mine alone; I could feel my hips pressing sharply against Andy's as my cunt gripped his bare cock, and feel his hands on my perky little tits, and taste his tongue on my lips. Keiko's body saw no need to share these pleasures by making some stupid sound; they were just for me.\n\n\"Oh God,\" Andy groaned, as the waves crested and began to recede. I smiled; he could make the sounds that Keiko's body wouldn't.\n\n\"I knew you'd be a good person to rob,\" I said softly, accentuating my words with a rocking of my hips and a squeeze of my cunt.\n\n\"You're such a ninja,\" he said.\n\nI smiled, pulling back to look him in the eye. \"That's me,\" I said. \"Good thieves don't leave a trace.\"\n\n\"Well, there will be a bit of a trace,\" he said. And before I could ask him what he meant, he moved his hands down to my hips, grasped them, and rolled me over.\n\n\"What are you doing?\" I asked, as he propped himself up.\n\nHe smiled at me. \"Well, I have something valuable that you haven't stolen yet.\"\n\n\"No,\" I said. I reached up, feeling his chest as I pretended to push him away.\n\n\"Oh, yes,\" he said. He reached down and grabbed my right wrist, pushing it down against the bed. I struggled for a moment, trying to push him away, before he took my other wrist and held it next to my head.\n\nIn Julia's body, I might have been able to break free, if I'd really wanted to. In my own body, I don't know if Andy would have felt comfortable trying this sort of game. But now, in Keiko's body, I'd been bratty enough to provoke him, and for all of my ninja skills I wasn't strong enough to stop him.\n\nHe looked down at our hips, watching as he thrust his cock deep into me and feeling the twists of my hips as I pretended to struggle. Then, as he bottomed out, he looked into my eyes. I could see just how much he was enjoying my squirming, no matter how realistic it was.\n\n\"You said you wanted to steal things that were just for my wife,\" he said. \"Well, you're going to get them.\"\n\n\"You can't,\" I gasped. I twisted frantically against his grasp, then looked up at him wide-eyed. \"I'm not safe!\"\n\n\"Oh, I know,\" he groaned. \"It feels so good, fucking you without any protection.\"\n\nIt did feel good. Whatever Keiko would have thought about fucking a stranger, her body was eager to participate - I was coming down from my climax but I could still feel myself squeezing his cock, urging him to fill me.\n\n\"You can't finish in me, though,\" I said. \"What if you get me pregnant?\"\n\nHe looked down at my belly, then at where we joined.\n\n\"You'd be so pretty with a baby inside you,\" he said softly.\n\nI moaned, in spite of myself. Keiko would be gorgeous with a big pregnant belly. I could give that to Andy, give him another beautiful fertile field where he could plant his seed. The thought was almost enough to make me break character, but Andy was enjoying ravishing me too much for me to let it go entirely.\n\nI looked into his eyes, watching the ecstasy rising behind his gaze.\n\n\"What about your wife?\" I asked.\n\n\"You want to know a secret?\" he asked, his pace picking up. \"My wife loves this.\"\n\n\"No,\" I moaned, even though my moaning showed him how right he was.\n\n\"She does,\" he went on. He looked down to watch his cock slide deep into my bare cunt, his shaft filling me up. \"She enjoys it when I fuck other girls in our bed.\"\n\n\"Fuck,\" I gasped. \"Oh, that's wrong!\"\n\n\"It is,\" he admitted. \"But it turns her on so much. She loves it when they seduce me, and when I seduce them, and even when I hold them down and ravish them.\"\n\nI couldn't string words together. I looked at him, watching his muscles move as his pace grew frenetic, watching his rising pleasure twist his expression as he struggled to keep control. I felt his hands against my wrists, holding me down without hurting me, felt his hips pound against mine.\n\n\"But...more than that, my wife loves it when I cum inside the other girls,\" he gasped. \"She loves it when I fill their wombs and send them home pregnant.\"\n\n\"Fuck!\" I wailed, Andy's words making me cry out where I'd been silent moments ago. I twisted in his grip, not out of a desire to escape but because my passion had to go somewhere. He thrust into me, his cock driving into my squirming hips, claiming Keiko's body, claiming me. I was his, and I would give him as many babies as I could.\n\n\"Oh yes,\" he moaned. \"Oh, Keiko. Take my cum!\"\n\n\"No!\" I wailed. \"Don't knock me up!\"\n\nI didn't think I would have been convincing if there had been an audience, but I was only saying the line for Andy, and it set him off. He thrust into me desperately, then drove himself inside me, pushing me into the bed. His cock swelled, then pulsed inside me, his body straining as he pumped his sperm into Keiko's fertile womb.\n\nFor a moment that seemed to last forever, the pleasure made him into a ninja too - he'd scrunched his eyes shut as he thrust into me, but the pleasure was driving him past the point of speech. Then the dam burst, and he roared in primal pleasure as his seed flowed into me. He thrust desperately, pushing me back into the bed with each motion, bringing us as close together as he could.\n\nI tried to stay in character, but I couldn't keep my own ecstasy out of my voice. I cried out with him, our wails of pleasure merging just like our bodies and our genes. I arched my back, pressing my hips against his and burying his seed as deep in Keiko's womb as I could manage. I reached up as much as I could, and he grasped my hand as his pleasure crested and began to fade.\n\n\"Oh, Melissa,\" he gasped, looking up at me with a bit of worry in his expression. \"I hope that was alright.\"\n\n\"It was more than alright,\" I said.\n\n\"I just... I couldn't hold back.\"\n\nI grinned. \"I hear your wife really likes that.\"\n\nHe laughed. \"Pretty sure she does.\"\n\nHe released my wrist, and I reached up to caress his cheek. \"She does.\"\n\nHe smiled, then rested his head on my shoulder, catching his breath and basking in the afterglow.\n\n\"I should probably get you dinner, though,\" he said after a moment.\n\nI smiled.\n\n\"No rush.\"\n\n---\n\nI brought Keiko back every Friday for two months. Each time, Andy and I played a different variation on the same theme. One night I made him give me the combination to our safe before I let him inside me. Another night I pretended to be a comically bad thief, stomping around and dropping things, and he caught me and ravished me on the living room floor.\n\nIt was exciting to fuck him without any protection, and know that I was going to give him a baby, but even after we'd confirmed that Keiko was pregnant I brought her back a couple of times. The pleasure of letting him bareback me was exquisite, and I wanted as much of it as I could get. I knew he loved me, no matter what body I was in, but there was a particular way he held my belly after he'd knocked me up that I didn't know if he could replicate.\n\nI can leave people with some ideas, when I leave their bodies. As I biked back to Keiko's apartment for the last time, I told her that she should keep the baby, and not worry about who the father was. I told her that even if her parents cut her off, she'd get the financial help she needed. And I told her to pick a different hobby, because picking pockets for fun had probably gotten her in enough trouble already.\n\nI did feel a twinge of worry, as I woke up in my own body. Not about Keiko - I was sure that she and Andy's baby would be fine. No, I worried about whether I'd be able to find enough girls for this. Andy only wanted girls who had been mean to me, and I wasn't going to bend that rule. But every time I let him cum inside a girl's fertile pussy was a rush of power and pleasure, and the more I did it the more I wanted to do it again. If I couldn't find enough girls to borrow, I'd be even more tempted to do it myself. I did want that, sooner or later, but our plan was to wait another year.\n\nSo I wondered, as I came back to myself. Would I be able to find more girls for him? And if I couldn't, would I be able to wait?\n\n---\n\nI want to thank Sylvidoll for her editorial input."
    ],
    "authorname": "bumpercars",
    "tags": [
        "body control",
        "impregnation",
        "creampie",
        "wife",
        "unprotected sex",
        "science fiction",
        "nonconsent",
        "breeding",
        "brat",
        "love"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/date-night-with-keiko"
}