{
    "title": "Male Secretary",
    "pages": [
        "I am what you call hardline assertive. But to be a female executive in the corporate world, you have to be. \n\nI work right in the heart of downtown. My position is what you could call: \"lead director of sales and marketing for a First Coast software company\". And I take my work very seriously. Most men whom I work with are either intimidated or flat out hate me. I've been called all sorts of names in the office lunchroom: rude, a bitch, feisty, ice queen, and even a micromanaging cunt. It doesn't faze me. I embrace all of those names but represent none. As far as I'm concerned, I'm not here to make friends, I'm not here to be friendly, I'm here to get in there and get the job done. And if that means throwing my weight around in company meetings and not backing down from this male-dominated atmosphere, then so be it. \n\nI will hold nothing back when it comes to furthering my career. I won't lie, but in this combative environment, I can proudly say I am unstoppable. Mentally, I'm ruthless, cutthroat, and over-ambitious. Physically, I'm hard to handle for most men.\n\nIf my body could be described in any way, it would have to be \"Thick & Tall\". My thighs are heavy, my ass is round; I have an hourglass figure with a pair of voluptuous, all natural double F-cup tits; my stomach is flat and my chestnut brown hair is long and flowing. I also wear a pair of black framed glasses, but I don't have a prescription for them - they just make me look more cunning and business-like. I also have a notorious resting bitch face. Even the most alpha of men in the office have a hard time standing up to me; I can thank my Italian and Dutch ancestors for that. I'm close to six foot five, and when faced with dissidence from my male co-workers, all I really have to do is push my tits out and hover over them when I need to be really persuasive. And if that fails (which is incredibly rare) I just play a little bit of backbiting and office politics to get my way. \n\nDid I also mention I'm model material? It's true! My modeling career was short while I went to business school. I just couldn't break into that skinny-twig market fashion designers love and had to stick with mostly smalltime centerfold publications. Due to my heavy, amazon frame, I eventually began to attract sleazy photogs and porn directors looking to capitalize on my \"giantess\" body and wanting to hire me for their dominatrix films. No way. If I'm trampling or dominating any man, there's no money that can satisfy me because I symbolically do it every day in the office and make close to over a hundred thousand a year doing so! \n\nI guess by now you might I have an idea that I hate men. That couldn't be farther from the truth; I just love going toe to toe with them in this corporate jungle. This is a Social Darwinist world; throwing those around you under the bus is not only completely encouraged but perfectly acceptable. As far as I'm concerned, I am one of the few women who can do it. In fact, I am so good at it that it is incredibly satisfying watching these ego and money-driven men wither under the pressure of my cunning and dominance. It's actually satisfying watching the looks of these men when they realize I took their ideas, shut down their proposals with such self-important pretentiousness, and pretty much send them to the office break room going \"fucking bitch this!\" and \"god-damned cunt that!\" \n\nBut even those basic semantics of the job can get boring. \n\nDo you want to really know what I do to keep entertained in this job? I love, and I mean LUV, breaking down my male secretaries to the point of embarrassment and exhaustion. I guess I'm a reverse sexist in that capacity. \n\nI like my secretaries of a similar type. I like young men, preferably white guys or Latinos, who are of the sensitive and introspective artist type - the type my male co-workers would call \"beta bitches\". I prefer them fresh out of college. They must be clean shaven, low in muscle tone but not fat, under six feet and still possess the boyish good looks of their teens. If these requirements are met during the interview, I then hook them in by boasting of the easy job workload, hefty starting pay, and lucrative benefits package. Most of these young men don't even hesitate on accepting, but once hired, I drag them through a hell of constant browbeating, emasculation, and just flat out losing my shit over the most minuscule mistakes. \n\nI've had close to almost fifteen secretaries to date. Most put in their two-week's notice within the year; two others just stopped showing up; one ran out crying, and my last one actually suffered a panic attack. \n\nShoulder shrug. \n\nI'm cold-hearted. What can I say? I guess that's why I'm single at thirty-nine. I haven't had a date in five years, not that I'm really looking either, and my sex life is really just meh. \n\nTo be honest, I really do enjoy sex with men. I've experimented with the other sex in college, but there's just nothing like a real, fleshy hard cock plowing into my pussy. But most of the one night stands I've had are from men who were looking to get it on with a tall woman; it's these same men who want to be dominated by a tall woman, and to get sex, I have to play that role. My performance in the bedroom could only be described as ravenous by these types of guys, but in reality, I personally love being the submissive role when in the bedroom. It's a really big turn of mine that no one seems to read or even pick up on, not that I'm showing it well, either. \n\nMy current secretary Elliott seems like the latter of men who have that Amazonian fetish. I always see him ogling my boisterous legs coming out from under my knee high skirt. Sometimes I even unbutton my suitcoat to expose a little bit of my plump cleavage as to say, \"Here's something you can never have!\"\n\nHe does fill my criteria for my ideal male secretary, though. He's twenty-two, five foot seven with boyishly handsome features like sandy blonde hair, brown eyes, square jaw, narrow chin, nerdy black-framed glasses, and even a faint speckle of freckles that resembles the splatter of dirt. He is everything I look for in a secretary, and the perfect fantasy image I use when I drill my pussy with my pink vibrator at night. \n\nWork wise, though, he is terrible. And I mean really terrible; one of the worst secretaries I've had! He constantly misplaces files, messes up my reservations, and has put my schedule into chaos for two months. It's gotten to the point where the enjoyment of browbeating him has turned into actually having to be a boss and micromanage his every move! Apparently, he's some kind of \"writer\" which explains why his head is always in the clouds and eyes on my tits. When I interviewed him, I asked what he went to college for, and he said creative writing. I scoffed and asked if he was currently living on the street. The only reason I gave him the job was because he just sat there and took it like a pussy.\n\n***\n\nFriday night. \n\nI usually end my work days at this high-end, but local, health club and gym down the street from my office building. It's my way to unwind from the day - a time where I shut everything off, do thirty minutes on the elliptical, work on my lunges and crunches, and then take a long steam in one of the four saunas the gym provides. Sometimes if I'm feeling a little risky, I'll find an empty one, and use my vibrator until I squirt all over the wood seats. \n\nBut tonight I'm frazzled, threatened, and honestly annoyed because I see Elliot is here. This is a high-end gym with several amenities! How can a low wage, lit nerd, pansy novelist-wannabe pussy like my secretary afford a membership like mine? I, unfortunately, do pay him sixteen an hour, but hell doesn't he know his place?! He should be working out at the Planet Gym two blocks over where they don't even let you lift and keep you fat with free pizza. Why must he be at my gym of all places? And even worse, he's in the weight room! Yeah, like Elliot actually \"lifts\". Even worse he's actually trying to deadlift! \n\nI'm watching him right now from the corner of my eye as I'm doing my lunges. \n\nOh? \n\nPleasantly, he really is surprising! The...kid...can...squat?\n\nIn fact, he's squatting with some decent weight, using the perfect form by having his back straight, knees shoulder width apart, and keeping the bar close to his legs. He's squatting so good that he's barely making any noise. How is he even doing that?! Even worse why I am transfixed by that firm, tight butt of his!? \n\nThese feelings are mixing me up!\n\nI feel I need to call him out on something. I must give him flack, the same kind of shit I give him when I turn the office clock ahead five minutes and berate him for coming in late. But there is something about Elliot that just does not add up. Sure he is one of the worst secretaries in probably the entire Gulf Coast, but it's almost like my constant badgering and rudeness has no effect on him. It's like just he takes it, and comes back to work the next day like it was nothing. It's like he has thick skin or something!?\n\nMaybe I'll finally set him over the edge if I catch him doing something minuscule and embarrass him when he's off the clock. \n\nI'm ready to call Elliot out on not putting the weights back... \n\nBut he put them all back. \n\nMaybe he'll fail to wipe away his sweat when he uses some of the machines...\n\nBut he not only wipes them down but swabs the one next to him from another member! \n\nWhat the hell?! I'm so flustered by his perfect gym etiquette that I can't even do my lunges now! \n\nHere I am now just standing around in my tight green two-piece with my hands on my hips and eyeing down my secretary. My tits are hanging out a bit, and the passing other men are casting me glances, but who cares about them? I care about Elliot!\n\nOh...wait, that came out wrong! What the fuck am I even thinking?!\n\nI continue to watch Elliot. He's now moving from the weight section to the treadmills and stops to talk with a girl. A young millennial like him, a skinny girl. When he leans over and kisses her on the cheek and it all makes sense. \n\nHow could Elliot have a girlfriend? He can barely balance my office budget! Maybe a little boss honesty is in line. I'm not going to talk to them long, just...set a fire and go about my way.\n\nFlipping my towel over my shoulder, I approach them. I walk up and they are already in the middle of a conversation. Something about food or a dog, I don't know, but I just butt myself right in. \n\n\"Hellllo there, Elliot,\" I say. \n\nElliot looks over and his face grows pale. I see the fear in his eyes, remembering that I am the only real head bitch in his life. \n\n\"Oh,...hey Vic-I mean, Ms. Vicki.\"\n\nYes, he sure does know his place. I demand him to call me Ms. Vicki when he talks to me at work. I have no problem expecting the same when he's off.\n\n\"And whoooo's this?\" I say, arching an eyebrow. \n\n\"Um, this is my girlfriend, Jamie?\"\n\nI look over and size her up. Jamie resembles the type of girls I used to make howl in college by eating their pussy, only to be let down when it was their turn. The bitch doesn't even say hi to me, and instead just glares my way like Elliot comes to their apartment every night to rant how bad I emasculate him. She also looks like the typical girl a pussy like Elliot could nab - a plain Jane, brown-haired girl with black framed glasses and a fishy pale body that is flat as a board. \n\n\"So what are we working on today, guys?\" I ask.\n\n\"Just a treadmill and the sauna,\" Jamie responds coldly. \n\n\"Good stuff!\" I say, putting on my fakest friendly voice possible. \"But just remember the thirty-minute limit is the maximum in the sauna,\" I add to Jamie. \"If your Elliot stays in any longer, I might have to call the doctors and arrange an appointment. He's already showing signs of brain damage. Have a nice night, by the way!\"\n\nI pivot my back to them and left them speechless as my glutes pop with each step through my tight shorts. Boy that felt great!\n\n***\n\nStepping into the empty sauna, dressed in nothing by an extra-large towel that wraps around my already sweaty, curved body, the room is extra moist and humid tonight. I kinda wish I brought my vibrator. Dripping some water on the rocks and filling the room with new clouds of steam, I lean back into one of the top benches and close my eyes. \n\nI see nothing but Elliot there squatting and it confuses me, so I open them again. I still can't get over how good Elliot looked lifting those weights! Watching that boyish, undefined body of his has made me hot. It's weird, I know, but his calves were so thick and the only thing muscular. \n\nOn a side note, chicken legs on a man are such a turnoff! I love a man with heavy set legs, makes him more studier when he's fucking you...\n\nBZZZZZZZTTT\n\nHuh, what?...Oh, that's just great! A roll of thunder outside and the weak power system just shut off and now I'm left sitting here in a pitch black sauna with a wet pussy.\n\nWhat a way to start the weekend!\n\n***\n\nThe sauna holds its humidity for some time, but the lights remain off and it's too dark for me to move unless risking myself slipping and cracking my head on the tile floor. All of a sudden, I hear the door open and the sauna loses a little bit of its moisture. I call out, figuring it's an employee, and ask how long the power is going to remain off. The person who enters does not respond. I call out again, but my words stammer when a pair of rough hands slid up my inner thighs, making a beeline for my vagina. \n\nI immediately shriek and lean back until my shoulder blades hit the wall behind me. I go to stand up and scream, but lose the urge as a wet tongue runs up my freshly waxed pussy lips.\n\nThe tingling sensations are immediate. I've been eaten out plenty of times, but nothing is like what I'm experiencing! The waves of sensation that roll down my thighs match the slithering of the tongue that edge up and down my pussy. I gasp and moan, too consumed by the moment to scream out or tell him to stop. \n\nThe stranger is too good. So good in fact, I want more. I open my thighs wider, turning my feet to find his hips and pull him closer into me. His tongue suddenly catches me off guard and massages around my clit. My eyes roll and body twitches. His hands reach up and pull down the towel until my heavy breasts flop out. His cold hands grab them, barely able to hold the entire fullness of them in his grasp. There was also a startled jolt in his grasp, like a sudden reminder that the stranger had just made a horrible mistake. \n\nMaybe he needs some encouragement. \n\n\"Keep going...whomever you are, just keep going,\" I whisper in the dark. \n\nA deep exhale comes from his mouth and dampens my pussy. He suddenly loses himself between my thighs, pushing his tongue deeper into my vagina, back out, and slathering it around my nubby clit. He's eating my pussy so good that I begin to twerk my vagina upwards with each lick, grasping the back of his head, and holding his head there as I cum. My chest heaves, the energy is overwhelming! Demanding he to put it inside me, I explain that my tubes are tied, and say that if he's ballsy enough to creep in here and eat me out, the least he can do is finish inside me.\n\nHis tongue pulls away without hesitation and I see the muscular outline of his body in the dark. He's tall, dark, and handsome! As his hips press further up into my thighs, I feel the rock-hard stiffness as his cock rubs up against my pussy. It's much bigger than I have ever taken before. \n\nJust as he was about to penetrate me, the lights suddenly turned back on. Opening my eyes, my pupils widen when the lustful stallion of a man I had envisioned was barely a male at all, but my pussified incompetent secretary Elliot! \n\nWe look at each other blankly, frozen in the position of my legs open, eager and ready for his cock to insert inside me. Elliot just stands naked in front of me, his large penis still erect. I make the first move and push him backward. There was a look in his eyes at that moment that I've never seen before. He was confident, standing upright, and fully intent of giving me the sex I wanted. \n\nI...I...I just can't handle it. Pulling my bathrobe back over my trembling body (that was near another orgasm) I quickly flee the sauna. \n\nI rush down the narrow hallway where the doors to the other saunas line both sides of the corridor. The last door to my right opens and I jump out of the way. Jamie walks out of it, looking around as if she was looking for something. We connect eyes only briefly; she scowls at me again and I almost say, \"oh yeah? Well, your boyfriend just licked the shit out of my pussy and it was great!\" but am too caught up in the moment. I run to the end of the hallway and turn to hide around the corner. Placing my back against the wall, I clasp my hands over my pounding heart. \n\nNo one, and I mean no one, has ever handled me like that. I am confused, turned on, and bewildered. That was definitely not the same Elliot who I micromanaged while on the clock. \n\nRemaining against the wall, I hear Elliot's voice come back down from the hallway. \n\n\"I thought you were in room four?\" he whispers.\n\n\"No, I said two,\" Jamie says with impatience.\n\nThere came a pause in silence, then a simple oh. \"Do you still wanna?\" he adds. \n\n\"No! You took too long like always.\"\n\n\"Yeah, okay, sure, sorry,\" Elliot says in typical timid manner.\n\nThat's when I hear something that was a shade of me. \"How long were you in sauna four?\" \n\n\"Just a few seconds,\" Elliot lies. \"I startled my boss a little, I think.\"\n\nJamie sighs. \"She's a real big bitch. I don't care that she pays you sixteen an hour. I want you to start looking for a new job, you understand? And put on your towel again before someone sees you, idiot!\"\n\nMy heart sinks down to my stomach. I didn't mind being called a bitch. I'm used to it as I said, but I'm distraught. Who is this woman? What was her deal?! Where did she come from? And why does Jamie think she's head boss of my secretary? \n\n***\n\nMonday Afternoon. \n\nI've been pretending like nothing happened all day. In fact, I turned the clock forward another extra five minutes so I can get on Elliot for being ten minutes \"late\" just to show him that I forgot. Again, he takes it all in stride.\n\nI've been remaining inside my office for most of the morning and afternoon. This Brunson File I'm reviewing is really getting on my nerves because of its length, and when I do look up, you know what I see? Elliot through my inner office windows just sitting at his desk! Which is, of course, he needs to be, of course, but really? Like, do something! Of course.\n\nIt's strange. I gave him enough minimal tasks to do! I lectured him over some petty stuff earlier. Why are his eyes just glued to his laptop screen? It's almost like he's looking for something, maybe internet surfing, which I do not allow, or maybe something else?\n\nPanic is setting in - what if he's looking for a new job?\n\nAs much as I can still feel his tongue and mouth eating me out, I can also feel the anxiety in me. But why? He is just another male secretary...a male secretary who could lick pussy like a wizard...who can pack a punch with his thick cock. A male secretary who caught me off guard and...has yet to honestly quit on me. \n\nI hate to admit it now, but the thought of losing Elliot...scares me. He's a terrible secretary, but I've had worse even though I said he's the worst. Sure he's a little scatterbrained on the organizational side of things, but what guy isn't? Is it really me? Am I that much of a psychopath to make everyone around me miserable? I'm sorry if come off as a hypocrite, but no secretary has ever...I-I have to change his mind somehow.\n\n***\n\nIt's past five and going onto six-thirty. \n\nI sent an email earlier to Elliot's desktop demanding he stay late and re-file everything he has for me. The look on his face and his ability to hold his tongue is astounding! I've never seen such passiveness or patience in my life! We are the last ones here. I've actually never seen the office so empty. It's just us and the janitors. ",
        "I know I only have one chance at changing his mind, so I make sure the blinds to my office are closed along the front wall and back wall. Unbuttoning the few top buttons in my dress shirt, I make sure my cleavage is a little pushed out. A little visual stimulation never hurt anyone. As I reach for my phone, I exhale deeply, ready to speak to him personally for the first time since Friday.\n\nElliot enters looking exhausted and defeated, growing in red in the face. \n\n\"Look, I'm sorry,\" he began right away. \"My girlfriend told me she was going to be in four, but she walked into-\"\n\n\"You are really something, you know that.\"\n\n\"I know, I know-\"\n\n\"Where in your right mind would you ever consider that be reputable behavior at a gym? I should report you to management for that.\"\n\n\"I'm sorry, my girlfriend-\"\n\n\"I don't care about that,\" I say. \"Where did you learn to eat out pussy like that?\"\n\n\"Um, just...college, I guess.\"\n\n\"Touche. So what now?\"\n\nElliot pauses, unable to handle my mixed signals. \n\n\"What?\" he says.\n\n\"You gonna finish the job or just leave?\"\n\n\"I'm almost done filing.\"\n\n\"No, you idiot, I mean with this.\"\n\nI lean back into my desk, spreading my legs a little wider to where he could see the cut off where my short dress began and the white crotch-less panties ended. Between it was a little bit of tan, doughy thigh that his eyes zeroed in on. I want him to finish the job, but don't want to provide a full-on invite. Of course, all he is doing just standing there with his mouth open, giving me a confused look. Now I'm pissed. \n\n\"Hello? Anyone in there?\" I ask. \"I said are you going to finish the job or not.\"\n\n\"That' not professional,\" he says softly. \n\nReally? This fucking guy. \n\n\"And what you did to me last Friday was not really legal either,\" I say, \"Especially if I went to gym manager and demanded the cops be called. I guess we're gonna be both in the wrong.\"\n\n\"I'm not fucking you,\" Elliot says flatly. \n\nWalking towards him, the Brunson File still in hand, I reach down and cop a handful of his cock. Just as I suspect, it is already hard and stiff through his loose slacks. \n\n\"Maybe not tonight, but sometime you will. I'm very persuasive, Elliot. Stick around here a little longer and you'll find that out. Hell, it might even better our working relationship. I'll let you know when.\"\n\nI let go of his dick to show that I was still in charge. This kid could really be something amazing. He could be grade-A stud, a stallion, a great fuck, but I said it before, and I'll say it again: he's a pussy. A straight, passive pussy that won't jump the gun on anything!\n\nI go to turn my back on him, flexing my thick glutes but Elliot stops me! Grabbing my shoulder he spins me around and I find him within inches of me, reaching for my chest area. The feeling of his body presses into me and I lean back in shock and gasp as he grabs a handful of my dress shirt! The cloth tears with one swift pull; the Brunson File is knocked out of my hand and spills beneath my feet. \n\nMy mouth drops. How dare him! That's when the breeze of the AC hits my skin. I look down and see he yanked at my dress so hard that he pulled aside my bra and now my left tit hangs out. And what is Elliot doing? He is just standing there, raising his chin and grinning! Grinning with confident pride! \n\n\"Don't mistake my patience for your cuntiness as passiveness. I'd hate-fuck the shit out of you if I wasn't on the clock,\" he said.\n\n\"Excuuuuuuse me?!\"\n\nI was seething. How could he!? How could he be so ballsy!?\n\nThe room goes silence between us. I want him to make the first move. \n\n\"You'd hate-fuck me?\" I softly ask.\n\n\"In a second.\"\n\nI step forward and walk past him. He watches me intently as my heels slide across the thin carpet of my office and approach the door. Reaching forward, I center my thumb on the silver lock and press it in. We are now both locked inside my office. If Elliot wants to leave, he has to get through my ballooned tits, fulsome thighs, and bulbous, taut ass (I'm so horny even those narcissistic adjectives are making me wet). \n\nWhen I finally face Elliot, I say, \"I guess I'll have to modify your hours.\"\n\n\"I guess so,\" he says firmly. \n\nMy body flushes with excitement; my legs tremble in Elliot's presence.\n\nWe immediately throw our arms around the other, kissing, and trying wrestle and overpower each other's strength. The little twerp was stronger than I had expected, spinning me back around, grasping my ass with both hands, and walking my body into the desk. \n\nWhat are we doing?! Oh, god...this is so wrong, it is so unprofessional! If any upper management was still around, if even a janitor was outside the office heard us, we would both be fired on the spot! Deep down I liked it though, it felt good. Liberating to finally have a man take control of ME, and not the other way around! \n\nHis hands move in between my thighs and pull up my dress. Our lips kiss frantically, moving and roving through our panting breathes. I finally give into Elliot's strength and lay back onto my desk; his narrow waist presses between my thighs. His eager fingers reach between my legs, hooking the bottom of my silky, wet panties to pull them aside. I do the same to his pants, eagerly unbuckling them and zippering down the opening in his slacks. His heavy cock fell out through the hole. \n\nIt was enough. \n\nWithout hesitation or bullshit foreplay, he shoves his straddled hips forward. Elliot's cock slides up through my shaved lips, pressing deep on the inside, and rubbing up right where it's good. The full girth of his penis made me moan out, loud enough for anyone working late to hear. Grasping my wide hips, he leans over, and begins to thrust in and out like a rabbit in heat! I've never seen or felt anything like it! He's like a machine! \n\nI proceed to widen my legs and flap my feet and kick away my high heels. As they clunk onto the floor with the Brunson File, I clamp my thighs tight back around his waist and hook my bare feet together. Some women like their legs held upward and twisted, but I love them wrapped around someone. I want to feel them close to me as they thrust. \n\nElliot, however, isn't just sliding his dick in and out; he's inserting it deep and grinding his entire body into me! The feeling is so overwhelming that I'm already feeling it...I'm feeling...I'm feeling... \n\n\"Oh, shiiiiiiiiit!\" I find myself yelling.\n\nMy back lays flat on the desk. I roll back my eyes and I lay here jittering as Elliot wraps his arms around my lower back, his little hands grasping my ass again, and grinds his cock even deeper up into me! The orgasm is long and intense, seemingly elongated by his rabid humping. \n\nAs I feel it coming again, I reach up and grab him by the shoulders and pull his face down into me. He reminds me how tall I am because of his nose and mouth press right in between my breasts. With his face implanted in soft cleavage and torn fabric, I feel his hands frantically pull upwards and tear away the rest of my dress shirt. My buttons go flying and Elliot buries his face only deeper into them, licking and kissing as he pleases. \n\nHe remains in that position continuing to grind. I cum again and just as my orgasm rolls through with bliss, he moves back to thrusting. Elliot tries to pull himself up, but I interlock my fingers around the back of his head and won't let him. I like the feeling of his little body over me, trapped between my thick legs, and his head buried deeply in between my cushy, veiny tits! If he is to pass out, so be it. I know CPR. I can wake him. \n\n\"Cum inside me! My tubes are tied,\" I reassure him.\n\nHe grumbles something short and sweet as my breasts sandwich his cheeks.\n\nElliot just continues thrusting. The slaps of our skin take the backseat to my moaning and heavy breathing. My desk shakes, knocking over a cup full of pens and my coffee mug. The kid is going and going, thrusting faster and faster until...until...\n\nBlast off.\n\nHis hot breath dampens my skin and Elliot moans loudly into my tits. His body jerks once, then twice, each time giving a more warming sensation that rolls up inside my crotch area. Finally, he stops and we hold our position, letting nothing but our panting fill the quiet room. \n\nAs my body relaxes with him, I finally let go of the back of his head. Elliot pulls his face up, red-faced and taking in a deep breath. There was a moment right there where he remains between my legs. We look at each other briefly, unsure of what to say. I'm nervous to give him the satisfaction in that was some of the most passionate sex I've ever had. It's petty, but no man has ever taken control of me like that in my life!\n\nElliot then surprises me again by suddenly leaning back into me. His narrow fingers gently hold my chin in place and he starts to kiss me softly. There are no words that were needed; no gestures or bold responses to cover up our egos. It was so sweet! His kissing spoke it all - he just satisfied me and equally melted my cold heart! \n\nI'm a little bit more confident I can keep him around after this. Maybe a little business savvy is needed on my part. If I can ease up my micromanaging and if he can keep up these late work romps, then maybe our working relationship can improve. What's that time-old saying?\n\nAh, yes!\n\nWork hard, play harder, am I right?"
    ],
    "authorname": "Nicky_Vale",
    "tags": [
        "mature",
        "boss",
        "work",
        "role reversal",
        "thick",
        "femdom",
        "hate fucking",
        "secretary",
        "1st person",
        "funny"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/male-secretary"
}