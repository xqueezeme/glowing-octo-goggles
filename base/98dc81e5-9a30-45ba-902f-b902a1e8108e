{
    "title": "The Agency Ch. 07",
    "pages": [
        "Author's notes: This is a work of fiction, hopefully that is not a word you struggle with. It is a story of fictional, consenting adults who enjoy power exchange, lingerie, heels and the like. It's in the transgender/crossdressing category for a reason, if that scares you please back away slowly. For the rest of you, please enjoy!\n\n~~~~~~~~~~~~~~~~~~\n\nWaking slowly, her right arm pinned under her body, Michelle reached for her phone. The battery was dead! Sitting upright quickly, Michelle searched the bedroom for a clock. She hustled to the kitchen to look at the time on the microwave.\n\n\"SHIT!\" She hissed at herself.\n\nDiscovering she had overslept a solid twenty minutes, Michelle rushed to the bathroom to shower. She had to calm herself before shaving her legs though, she still had something in mind for the day and needed her legs to look perfect! Showered, shaved and moisturized, Michelle wrapped a towel around her torso and began applying her make-up. It was then she also realized she'd not chosen her outfit for today either.\n\n\"Dammit Michelle!\" She growled at herself. \"I blame the two of you,\" she said as she looked at the two dildos in the sink, \"you two obviously scrambled my brains last night!\" Picking a lighter lip gloss, Michelle was thankful she had gotten quicker and better with her make-up. \"Something neutral will work.\"\n\nExiting the bathroom, Michelle looked at the pile of red lingerie at the foot of the bed, feeling a tingle rip through her body as she did. She was quite pleased her ass wasn't sore from the night before, then decided to return to the bathroom. In the drawer of her small vanity Michelle removed the large plug she'd been wearing almost daily for the past week. Lubing it with her left hand, Michelle rubbed lube against her tight opening with her right feeling a twinge of tenderness as she did. Not surprisingly, the thick plug slid fairly easily into place. Retrieving a panty liner, Michelle attached that to the tip of her cage before walking back into the bedroom.\n\n\"Who'd have ever guessed condoms can be so multi-purpose!\" She chuckled as she walked to the closet. \"Perfect!\" Michelle exclaimed grabbing her dress from the hanger.\n\nMichelle's rush to get ready had paid off, she'd skipped breakfast but managed to leave only a couple minutes behind schedule. Stepping out of the building elevator, Fred was in his usual spot awaiting her departure. Based on his lack of subtlety or discretion in leering at her, Michelle had obviously chosen wisely in picking a bold colored asymmetric pattern dress that was very figure hugging. It had been one Babette had suggested, although it may have been a half size smaller than needed. It was extremely slinky to wear and had a full satin-like lining that felt wonderful over her body. The dress had a wide belt which further accentuated her waist, and while it came straight over her collar bone it dipped in the back to barely an inch above her bra. Michelle's lingerie consisted of a translucent cream bra and French cut bikinis with delicate white lace and a matching six strap garter belt attached to classic stockings and a tan pair of 5-inch heels. \n\n\"Business on the outside,\" Michelle whispered to herself as she stepped through the door to the outside world, \"slut on the inside!\"\n\nOn the way into work Michelle stopped and grabbed a muffin and coffee, which a nice gentleman paid for after some playful banter. Getting into the office, Michelle put her phone on the charger before trying to settle into her work day. The arrival of her Boss foremost in her mind, Michelle struggled to busy herself as the seconds lingered on like minutes. Almost jumping when the office door entered, Michelle scurried to her feet at the arrival of Ms. Allison.\n\n\"Good morning Ms. Allison.\" Michelle's voice trembled slightly as she spoke.\n\n\"Good morning sweetheart,\" Ms. Allison looked over Michelle closely, \"how was your weekend?\"\n\n\"It was fun,\" Michelle felt her cheeks burning red as she spoke, \"I spent most of it with Babette.\"\n\n\"And did My girls enjoy their weekend together?\" Ms. Allison raised an eyebrow as she asked her question. \"I believe you two have to share a bed when you spend the night, don't you?\"\n\n\"Yes, Ms.,\" Michelle shifted somewhat uneasily on her feet as her cage seemed to get tighter inside her snug panties, \"we do share a bed.\" Michelle swallowed hard, knowing that she needed to ask her questions now before she chickened out. \"Can I request a couple things please, Ms. Allison.\"\n\n\"Of course you can baby girl,\" Ms. Allison smiled knowingly, as if She could tell what Michelle was about to ask, \"why don't you come to My office.\"\n\n\"Thank you Ms.!\" Michelle quickly followed her Boss to the office.\n\n\"Go ahead and hang your dress on the back of the door,\" Ms. Allison instructed as they entered Her office, \"then have a seat.\"\n\nMichelle immediately regretted the lingerie she'd picked out this morning, feeling a pit in her stomach at the idea of being essentially naked in front of her Boss. Regardless, Michelle dutifully removed her dress, placing it on the hanger behind the door, then turning to face Ms. Allison.\n\n\"Now that is what I call a statement ensemble,\" Ms. Allison gleefully said as She looked Michelle over, \"I can't wait to hear what questions follow that outfit!\" Ms. Allison moved to the front of Her desk, taking a seat and slowly crossing Her legs much as She'd done at their first meeting. \"Before you ask your question though, I have one for you,\" Ms. Allison waited until Michelle was seated before continuing, \"what did you pick up at the, um what was it called again? Oh yes, the Sex Emporium last night?\"\n\n\"Oh, um,\" Michelle's face blanched, she'd never considered that using the company card would alert Ms. Allison to her purchase, \"I bought a dildo.\" Michelle's throat went dry as she shifted uneasily in her chair. \"Well, two actually.\"\n\n\"Two!\" Ms. Allison exclaimed quite loudly. \"Tell Me baby girl, what did you do with two dildos?\"\n\nMichelle rebellious appendage surged in its cage, how humiliating, she would have to explain her one sissy tryst in the door frame of her bathroom. The hair on her arms stood on end as a chill raced up her spine.\n\n\"After Babette and I kissed goodbye ...\"\n\nMs. Allison interrupted immediately, \"Back up sweetie, you two kissed?\"\n\n\"More like made out Ms. Allison.\"\n\n\"Tongue then?\" Ms. Allison watched Michelle's body language intently, savoring how embarrassed and uncomfortable Her newest employee was being. \"Start from the beginning and tell Me all of it.\"\n\nMichelle did just that, telling her Boss about the weekend, spooning, her conflict at the restaurant bathroom and apartment shopping. She continued through their kiss, still unable to look into her Boss' eyes as she spoke, and her renewed conflict at the fact she'd kissed a boy. \n\n\"Oh sweetie, you need to get over the old school way of thinking,\" Ms. Allison's voice was comforting as She spoke, \"did you enjoy kissing and being kissed by Babette?\"\n\n\"I did Ms.\" Michelle replied honestly.\n\n\"Then don't question it.\"\n\n\"Yes, Ms.\" Michelle responded.\n\nContinuing her tale of the weekend, Michelle ended with her orgasming while on a spit between two dildos. Much to her shock, Ms. Allison expressed nothing but pride in Michelle's actions. She even stated She was impressed that Michelle had been able to orgasm without touching herself.\n\n\"Now, what were your questions sweetie?\" Ms. Allison finally asked.\n\n\"I was wondering Ms.\" Michelle struggled to find the words regardless of the number of times she'd practiced asking, \"if it would be possible to start breast augmentation like Babette has done.\" It was a relief to finally get those words out, but the next question would be even tougher to ask.\n\n\"That's perfectly fine,\" Ms. Allison smiled at the inquiry. \"I can set up an appointment for you to meet the Dr.\"\n\n\"Thank you Ms.,\" Michelle's relief subsided, now came the bigger question, \"I was also wondering if, well if.\"\n\n\"Come along sissy girl,\" Ms. Allison chided slightly, \"you just asked for boobs and admitted to fucking yourself with two dildos last night, what can be so odd that it's a struggle to ask for at this point?\"\n\n\"I was wondering if You would fuck me Ms.,\" Michelle finally blurted, \"with Your strapon that is?\"\n\n\"So, My newest sissy wants a fucking huh?\" Ms. Allison playfully moved her legs, watching Michelle's body tremble slightly. \"Bent over the desk,\" She leaned forward slightly emphasizing Her position over Michelle, \"in front of all these windows.\"\n\n\"Yes, Ms.\" Michelle finally looked up, making eye contact for the first time since sitting. \"Please?\"\n\n\"Aren't you just adorable,\" Ms. Allison slowly stood, moving to the back of Her desk, \"and I'm sure you'd hoped that the heels and lingerie would help sway Me into doing it?\"\n\nMichelle felt panicked, had she overstepped? Ms. Allison sat behind Her computer, typing something quickly. This was not going how Michelle wanted at all. The silence, aside from the keys clicking, was horrible.\n\n\"I just wanted to wear something that made me feel sexy Ms.\" Michelle finally said.\n\n\"While I did say that eventually you'd beg for My strapon,\" Ms. Allison looked up with a smirk, \"today is not going to be the day.\" Michelle was crushed by Her words. \"There's a fine line and path I need to keep you on,\" Ms. Allison clicked the keys a few more times before continuing, \"and while I appreciate the please, I get to decide when I put on My strapon, not you.\"\n\n\"Yes, Ms.,\" Michelle's bottom lip quivered slightly, \"I'm sorry for assuming.\"\n\n\"I'd hate to think you've wasted such a lovely outfit though,\" Ms. Allison had a distinct gleam in her eye as She spoke, \"come stand over the edge of my desk muffin.\" Michelle wondered if Ms. Allison had changed her mind and quickly moved to the end of the desk. \"Legs spread nice and wide in those ankle breakers,\" Ms. Allison still hadn't moved from Her chair, \"and put your chest on the desk top.\"\n\n\"Yes, Ms.!\" Michelle quickly complied crossing her wrists behind her back.\n\n\"Heels off the floor too.\" Ms. Allison instructed without looking up.\n\nMichelle could feel her calf muscles tensing as she raised her heels off the floor, standing entirely on her toes. The mostly translucent French cut bikinis offered no covering from whatever eyes were beyond Ms. Allison's office.\n\n\"Now, while what you did is not quite topping from the bottom, it's close enough,\" Ms. Allison abruptly turned in Her chair and was suddenly standing at Michelle's left hip, \"do you know the term?\"\n\n\"No, Ms.\" Michelle's voice fraught with anxiousness.\n\n\"It's when a submissive tries to take charge of how they are dominated,\" Ms. Allison said while placing Her left hand on Michelle's lower back, \"and while begging to be fucked is admirable, trying to orchestrate when it happens is not. Understand?\"\n\n\"Yes, Ms.!\" Michelle felt her heart pounding in her chest.\n\n\"This will help,\" Ms. Allison said as She swatted Michelle's right ass cheek with Her hand, \"oh, but don't forget to count.\"\n\n\"One Ms.!\" Michelle blurted just as Her hand made contact again. \"Two Ms.!\"\n\nAfter the third swat Ms. Allison rubbed Michelle's bright pink bottom with Her hand, slightly soothing the area before proceeding. This time the swat was to Michelle's left ass cheek causing the young submissive to jump. Michelle's ass burned by the fifth swat to each cheek, before returning to Her seat, Ms. Allison gave the back of Michelle's panties a tug, pressing them firmly against the base of her plug.\n\n\"Now I do have good news for you,\" Ms. Allison said as She placed Her feet up on the desk inches from Michelle's face, \"and it's not that you get to spend the next minute or two cleaning the bottom of My shoes.\"\n\n\"Thank you Ms.\" Michelle replied as she moved her tongue to the bottom of the black heels Ms. Allison wore.\n\n\"I've made an appointment for you today to see the Dr. about breasts,\" Ms. Allison said as She watched Michelle intently lick the sole of Her shoe, \"it's in thirty minutes so be quick but efficient down there.\"\n\n\"Yes, Ms.!\"\n\nAs she licked her Boss' heels Michelle came to the stark realization that her cage was straining at the pressure of her rebellious appendage. Was it being spanked that had turned her on so much? The fact she was subserviently licking Her shoes? Or that she would be seeing a Dr. in the outfit she'd worn to the office today? Her head was spinning at all these thoughts. It was almost too much to take in at once.\n\n\"That's good enough for now,\" Ms. Allison said as She removed Her feet from the desk, \"when you stand back up, I want you to leave those delightful panties right where they are.\"\n\n\"Yes, Ms.\" Michelle replied slightly confused as to why she would pull her panties down without prompting.\n\n\"Go ahead and stand back up.\"\n\nAs Michelle stood she realized it wasn't that pulling them down was the concern, the material that had been so inefficiently covering her ass was now lodged between her red cheeks. Michelle, for lack of a better term, had a massive wedgie. It was both erotic to feel the material sliding back and forth between her cheeks and embarrassing.\n\n\"You have about 15 minutes to clean up and get dressed,\" Ms. Allison said as She returned to Her keyboard, \"then you have to be two floors up for your appointment.\" Michelle thanked Ms. Allison, who then added. \"And you're expected to take the stairs, so don't dally.\"\n\n\"Yes, Ms.\" Michelle dutifully responded while collecting her dress and heading to the bathroom.\n\nIt only took a moment to fix her long blond wig and makeup. Stepping into her dress, Michelle was ready in under ten minutes, walking into the office two floors up with a minute to spare. She'd cursed the decision to wear the heels she had on during her ascent, but did still love how they made her legs look. Plus, they simply fit with her dress.\n\n\"Oh I just LOVE that dress!\" A bubbly voice exclaimed.\n\n\"Oh, um, thank you.\" Michelle replied slightly flustered.\n\n\"You must be Michelle,\" the speaker finally appeared behind the reception desk, \"am I right?\"\n\n\"Yes.\" Michelle came face to face with the rather stunning woman.\n\n\"I just need your insurance card and ID please.\"\n\nHer smile was warm and inviting, her eyes a bright green color that offset perfectly with her auburn hair. The fact she looked stunning in her dark pink scrubs, something designed to be less than appealing, was proof enough how attractive she was. Without a second thought Michelle produced her insurance card and driver's license.\n\n\"Thank you, Michelle.\" The woman replied while looking at Michael's driver's license photo. \"Why don't you follow me to the exam room,\" she said handing the items back to Michelle, \"and we will get you all set up.\"\n\n\"Sounds good.\" Michelle could feel her face turning as red as her ass at this point.\n\n\"I'm Brenda by the way,\" she said extending her hand as she held the door for Michelle to enter the office area, \"please follow me.\"\n\n\"Nice to meet you, Brenda.\" Michelle stopped herself before introducing herself again.\n\n\"Right in here,\" Brenda said as she waved Michelle into the exam room, \"if you don't mind you can hang your dress on the back of the door, there's a robe for you to put on there.\" Michelle nodded uncomfortably; she certainly wasn't wearing Dr's office appropriate lingerie. \"We ran out of those little gripper socks, so rather than walking around barefoot you can just leave your heels on,\" Brenda winked at Michelle, \"sound good?\"\n\n\"Yeah, sounds great.\" Michelle replied.\n\nHad Brenda really winked? Was it Michelle's imagination? She obviously knew that Michelle wasn't her birthname after seeing her driver's license. If Michael had little experience with women flirting, Michelle had even less comparatively. Was she flirting or just being friendly? Brenda wouldn't have given Michael the time of day, surely, she couldn't be interested in Michelle at all. Shaking her head, Michelle removed her dress, pulling on the pale blue robe before taking a seat on the exam table and crossing her legs. The robe immediately fell open revealing Michelle's stocking tops and a bit of her panties. Pulling the robe back in place immediately, Michelle heard Brenda knock at the door.\n\n\"I'm all set.\" Michelle voice trembled slightly as she spoke.\n\n\"That's a good color on you.\" Brenda said as she walked in.\n\nBrenda took Michelle blood pressure and vitals, in spite of her best efforts, Michelle couldn't manage to keep the robe closed at the bottom with the oxygen sensor on one hand and Brenda holding her other arm taking her blood pressure. She simply hoped Brenda didn't look down. Regardless of how uncomfortable Michelle felt, Brenda's eyes were kind and comforting, her touch light, and her skin amazingly soft. She even gave Michelle a knowing smile after removing the blood pressure cuff, which allowed Michelle to hold her robe closed.\n\n\"The Doctor will be in,\" Brenda lightly touched Michelle's leg as she spoke, \"in just a moment.\"\n\n\"Thank,\" Michelle cleared her throat, \"thank you, Brenda.\"\n\nMichelle's mind raced even before Brenda left the exam room. Had she seen? Surely, she'd seen the flimsy panties Michelle had on, but could she see the pink cage underneath? It was beyond embarrassing, yet, Michelle's cock surged inside the cage.\n\n\"You're such a freak,\" Michelle said looking downward at her crotch, \"I want to die of embarrassment and all you can do is get hard about it!\" Another soft knock at the door pulled Michelle back to reality.\n\n\"Good morning,\" looking down at the clipboard the Dr. continued, \"Michelle, how are you this morning?\"\n\n\"I'm fine, thank you.\" Michelle suddenly found it hard to find her voice.\n\nThankfully the Dr. went through some rather simple yes or no questions at first, which didn't require a lot of thought or words from Michelle. Then came the words Michelle was truly dreading. The Dr. asked that Michelle lower her robe so he could examine her chest. Until that point Brenda had seemed rather preoccupied with taking notes, but now she was looking up at Michelle. She seemingly gave Michelle a nod, as if to say it was okay, which helped Michelle relax slightly. Opening her robe, with trembling hands, Michelle let it slip down her arms to her elbows before quickly realizing she would need to remove her bra and breast forms as well. Sitting in the office, bare chested, Michelle tried to focus on what the Dr. was telling her.\n\n\"We will have to slowly stretch the skin,\" he said poking at her chest, \"which we will do gradually, over time, with saline injections. How big are you looking to go?\"\n\n\"Um, well,\" Michelle's head was spinning, was she really doing this? \"I think a C would be nice.\"\n\n\"That would fit nicely on your frame,\" the Dr. concurred, \"we can start with your first injection today, I'll also have you use an ointment which will help with the skin and avoid stretch marks.\"\n\n\"Okay.\" Michelle sheepishly replied.\n\n\"Great!\" The Dr. stood quickly. \"Just to be safe we will also do a chest x-ray,\" he said turning to the door, \"then Brenda can get you set up for your shot.\" \n\nBefore Michelle could respond the Dr. exited the exam room. She hurriedly pulled the front of her robe shut over her chest. Her head was spinning, it wasn't until Brenda touched her leg that Michelle regained control.\n\n\"Are you okay?\" Her voice was as tender as her touch.\n\n\"Yeah, I think so.\" Michelle said looking into Brenda's eyes. \"Thank you.\"\n\n\"He can be a bit abrupt,\" she said as her fingers slowly glided over Michelle's stocking covered thigh, \"but he does amazing work.\"\n\nWas Brenda being forward or just friendly? Michelle was nowhere near capable of determining which was which. There was no way Brenda could be interested in her, was there? \n\n\"Why don't we get that x-ray done?\"\n\nMichelle slid off the exam table, before she could stop it from happening the sides of her robe slipped open fully exposing the front of her cream translucent panties and the cage inside. It was obvious to her that Brenda was looking directly at her caged cock, instead of looking repulsed, Brenda definitely winked at Michelle. This was almost more confusing than sitting in front of a Dr. talking about the size breasts she wanted! Walking down the hall to the x-ray room, Michelle tried to focus on just one thought, but her brain would not allow it. With the myriad of thoughts running through her head, Michelle was on auto-pilot as Brenda got her into position. As fast as her brain was running, Michelle could feel Brenda's hand lingering on her back. But was it lingering or was Michelle just thinking all these things? She needed to talk to Babette as soon as she got back to the office!",
        "\"Hold still for me.\" Brenda said softly.\n\nWith the x-rays done, Brenda escorted Michelle to the exam room, leaving her alone with her thoughts. One thing that couldn't be denied, even watching Brenda's butt sway in the scrubs had Michelle's full attention. Walking to the door, Michelle stood in front of the mirror opening her robe, wondering exactly what Brenda saw.\n\n\"Pretty unmistakable,\" she whispered to herself, \"there was no way she couldn't tell what's there.\" \n\nOnce again, the knock on the door snapped Michelle back to reality. Scurrying back to the exam table, she attempted to act calm and collected while the Dr. and Brenda reentered the room. This time she was carrying a tray covered by a small white towel. He went onto explain what was going on, and the amount of saline he was injecting, but Michelle was in too much of a mental fog to comprehend. What she felt was the pinch of the needle to the side of her chest and the slow stretching of her skin as the saline was administered. When he was done, Michelle had a small A cup, barely worthy of a training bra.\n\n\"Brenda will help you with the cream,\" the Dr. said rising out of the chair, \"and will set up your follow up appointments.\"\n\n\"Okay,\" Michelle meekly replied while desperately trying not to touch her petite breasts, \"thank you.\"\n\n\"This is a bit cool to start,\" Brenda said as she poured some cream in her hand, \"but it helps, or so I'm told.\"\n\n\"So you've been told?\"\n\n\"You're not the first girl to come up from downstairs,\" Brenda explained as she slowly rubbed the cream around Michelle's left breast, \"there's been quite a few actually.\"\n\n\"So you've met Babette?\"\n\n\"Yes,\" Brenda replied as she started to rub cream on the other breast, \"you will have appointments on Monday, Wednesday and Friday like she does.\" Brenda must have caught Michelle's quizzical look. \"The saline is absorbed into the body over time,\" she explained, \"it doesn't have any negative effects, other than you may need to relieve yourself a bit more often, so we add more every other day.\"\n\n\"Oh, well that makes sense.\" Michelle replied wondering it that meant she'd now see Brenda three days a week.\n\n\"Let that dry a bit,\" Brenda stood back as if she were admiring her work before continuing, \"then meet me back at the counter and we'll get you set up for your follow ups.\"\n\nMichelle sat uneasily on the exam table staring down at her burgeoning chest. Eventually she couldn't help herself and cupped her small breasts, giving them a slight squeeze. They weren't much, but they were a start. With the cream now dry, Michelle put her bra and false breast forms in place before putting her dress on again. Exiting the exam room, Michelle went looking for Brenda.\n\n\"I hope you're a bit of an early riser,\" Brenda said with a warm smile, \"the only opening I have consistently now is at 8:30.\"\n\n\"I could do that.\" Michelle answered.\n\n\"That's great,\" Brenda replied excitedly, \"I'm usually here around 8:15, just in case you get here early.\"\n\n\"Okay!\" Michelle replied as Brenda touched her arm.\n\n\"Next time we will take a measurement of your chest and track your progress.\"\n\n\"Sounds like a plan.\" Michelle replied\n\n\"If you end up coming early,\" Brenda seemed to blush slightly, \"bring coffee.\"\n\nMichelle all but stumbled out of the office door. That was definite flirting, wasn't it? She couldn't wrap her head around any of it, even as Michelle, Brenda was out of her league. Brenda also had to know Michelle had on a cage, how did that not deter her? She also knew that Michelle worked for Ms. Allison. There were far too many questions that Michelle couldn't answer.\n\n\"Hi Sweetie!\" Babette smiled as Michelle entered the front office.\n\n\"Oh am I ever glad to see you!\" Michelle replied. \"I have so many questions,\" she felt as if her knees would give out as she walked to Babette, \"I just got my first injection, do you know Brenda?\"\n\n\"Yeah, I don't think she likes me much.\" Babette responded. \"She barely talks to me.\"\n\n\"Really?\" Michelle could have been knocked over by a feather at this point.\n\n\"Why, what's up?\"\n\n\"I think she was flirting with me,\" Michelle replied causing Babette to chuckle, \"she made my appointments for 8:30 and told me to bring coffee and show up early!\"\n\n\"Seriously?\" Babette was now the one that was shocked.\n\n\"She even saw my cage,\" Michelle blushed at the recent memory, \"and knows I work here, she must know right?\"\n\nSmirking, and approaching Michelle slowly, Babette touched the side of her friend's face, leaning in slightly. Michelle matched Babette's lean, lightly touching their lips together. Babette's tongue flicked at Michelle's lips, when she flicked her tongue again, she met Michelle's. Stepping back, Babette smiled at her friend.\n\n\"Yes, she definitely knows,\" Babette said as she took Michelle's hand delicately in her own, \"she's been there for quite a while and knows all about your career path.\"\n\n\"Career path huh?\" Michelle chuckled, taking her seat behind the desk. \"I guess that's one way to put it. Speaking of which, when is your next date?\"\n\n\"Wednesday night,\" Babette replied tracing her fingers over Michelle's hand, \"nothing crazy like this weekend though.\" Babette shuddered just a bit at that thought. \"It will be fun though,\" reluctantly releasing Michelle's hand Babette continued, \"and I made an offer on the place we saw yesterday.\"\n\n\"That's exciting news!\"\n\n\"It will be a bit before I can close on it,\" Babette looked over Michelle's dress, for the first time realizing how nicely it fit, \"but that means you can get out of that dump you live in soon too!\" Bending to look at Michelle's feet, Babette leaned close to her ear before whispering, \"Well no wonder Brenda was into you, looking all office slutty and stuff.\"\n\n\"I learned from the best!\" Michelle quipped.\n\nDuring their banter, Michelle was paged to Ms. Allison's office. She confirmed with Babette that Ms. was alone, then proceeded down the hallway, unzipping her dress along the way. By the time she entered Michelle was ready to step out of the dress, which she did before hanging it on the back of the office door. Ms. Allison sad behind Her desk, smiling proudly at Her dutiful employee and motioning her to the chair. Michelle looked at the chair, noticing the all too familiar four leather cuffs and small brass padlocks on the seat. Without a word Michelle began putting the cuffs on her wrists, locking them in place with the small locks.\n\n\"How did your appointment go?\" Allie asked while watching Michelle cuff herself.\n\n\"It went very well Ms.,\" Michelle replied attaching the next cuff to her ankle, \"I have follow up appointments at 8:30 three days a week.\"\n\n\"You must be the first appointment of the day,\" Ms. Allison smiled as Michelle locked the last cuff in place, \"how is your bottom?\"\n\n\"My panties are right where You want them Ms.,\" Michelle replied as she turned her butt toward her Boss, \"and the sting is gone.\"\n\n\"I'm sure it was interesting wearing that lingerie to see the Dr.,\" Ms. Allison's tone was teasing yet playful, \"and the short robes Brenda always manages to give My girls, certainly she got a flash of those slutty little panties of yours.\"\n\n\"She did Ms.\" Michelle blushed deeply.\n\n\"I'm sure that was slightly embarrassing for you,\" Ms. Allison said as She used Her hand to direct Michelle to the end of the desk, \"but you seem to have recovered from it.\"\n\n\"Yes, Ms., I did.\" Michelle touched her toes to the corners of the desk, her mostly bare ass pointing at the buildings across the street.\n\n\"Go ahead and lock your heels to the cables,\" Ms. Allison had a wry smile as She paused to watch Michelle awkwardly bend over to chain herself to the desk, \"then put your hands behind your back and lean forward like you did this morning.\"\n\n\"Yes, Ms.\"\n\nIt took some balance, but Michelle managed to attach her cuffs to the desk, then leaned forward until her chest rested on the desk. Even with it being her first saline injection, the feeling of her chest touching the desk felt different. Now more of \"her\" was on the desk. With her nose touching the desk, Michelle could see out of the corner of her eye that Ms. Allison had gotten up and quickly walked behind her. She felt her cuffs being manipulated into place, then the metallic clink of them being locked together finalizing her helplessness. Her panties were slowly pulled downward, stopping just below her stocking tops.\n\n\"I thought this was the fat plug you had in,\" Ms. Allison lightly grasped the base of the plug, \"you know what to do sissy.\" Michelle breathed deeply, holding it and exhaling as Ms. Allison removed the plug. \"It seems you've been very good with training your bottom,\" Ms. Allison proudly exclaimed, \"it came out nicely.\"\n\n\"Thank you Ms.\" Michelle felt empty with the large plug no longer filling her ass.\n\n\"Now, what was it you wanted Me to do this morning?\" Michelle felt something easily slide over her recently emptied opening. \"I think My slutty little sissy wanted to go for a ride, didn't she?\" It quickly became apparent, as a smooth shaft slithered over Michelle's asshole, that Ms. Allison had decided to put Her harness on after all. \"What did I say you would need to do for this to happen sissy?\"\n\n\"You'd said I would need to beg Ms.!\" Michelle replied as the shaft slowly moved back and forth over her somewhat sore hole.\n\n\"So pick your head up, and do just that!\"\n\nLifting her head, Michelle flicked her hair to the side coming almost face to face with the screen of Ms. Allison's tablet. There, in full color on the screen, was Michelle's pained expression, just over her shoulder was her Boss' smiling face. At the bottom of the screen was a pause button and a timer showing the video was recording.\n\n\"Hurry up sissy,\" Ms. Allison said somewhat sternly while pressing the head slightly into Michelle's hole, \"or I'll call your kissy friend in here and let you watch while she shows you what begging looks like!\"\n\n\"Ohhhhh please Ms!\" Michelle's voice trembled as she spoke. \"Please, I need to please You so badly,\" her eyes watered, \"and need Your strapon inside me!\" Michelle's body strained trying to wrangle the phallus inside her as she continued to debase herself. \"PLEASE Ms.!\" Michelle's voice waivered even more, \"Please fuck me! I'll do anything You ask!\"\n\nThe words She had been waiting for emerged, causing Allie to have to fight to suppress a wide grin. All the girls eventually said it, it was just a matter of when. For some it took longer, as they unwisely tried to hold onto their last vestiges of manliness. No, they weren't going to \"take it up the ass\". At this point Michelle had moved beyond considering her relatively flush bank account, she was living as a girl willingly and enjoying it. Now, she was delving deeper into her submission. She'd caved quickly and willingly, and for that she was rewarded with the bulbous head slipping into her sphincter.\n\n\"Annnnyyyythingggg sissy?\"\n\n\"YES!\" Michelle squealed trying to suck the cock into her ass.\n\n\"So if I had Babette come in here, and remove her cage,\" holding Her position, both hands on Michelle's wiggling ass, Allie was in total control, \"would you suck her off like the cock you had in your mouth last night?\"\n\n\"YES!\" Michelle blurted. \"I'd suck every inch of her!\"\n\nMichelle was rewarded with another inch, the defined ridge of the dildo slipping all the way through her canal. Groaning loudly, the tension in her arms and legs subsided.\n\n\"Such a slutty sissy you are,\" Ms. Allison teased, moving Her hips from side to side eliciting another deep groan, \"do you think you're ready to be a cock sucker already?\"\n\n\"Yes!\" Michelle mewled. \"I'm YOUR slut Ms.! Please fuck me like Your slut should be fucked!\" Another inch slipped inside Michelle. As light headed as she was, she now understood, the more she begged the more she got as a reward. \"Please Ms. fuck me until I scream!\" Michelle's voice grew louder as yet another inch entered her body.\n\nAllie keenly watched Michelle's face, her struggle dissipated before Her eyes, as the realization struck home. Whenever Michelle paused, Allie would move Her hips in a circle, moving the shaft inside Michelle's anus. Watching as Her sissy's eyes rolled back, Michelle earned inch after inch until Allie's hips pressed against Michelle's ass. Allie gripped Michelle's hips tightly, digging Her nails into Her sub's soft skin, watching the reaction on the screen.\n\n\"Well your mouth looks perfectly ready for a cock,\" She teased, \"I just get nervous when your eyes roll that far back in your head!\"\n\n\"Sorry Ms.\" Michelle cooed.\n\n\"What is it you want now My sweet slut?\" Allie's voice was soft yet commanding.\n\n\"Please,\" Michelle stared into the tablet screen into Allie's eyes, \"please fuck me like you own me!\"\n\n\"Oh but I do own you!\" Allie pulled the shaft halfway out of Michelle before slamming back into her. \"Don't I?\"\n\n\"OHhhhhhh YES MS.!\" Michelle bellowed.\n\nWith both hands tightly gripping Michelle's hips, Allie started slowly, reading Michelle's reaction to each thrust while varying the length and speed. As much as anything, Allie was learning what Her sub enjoyed most. It was of the utmost importance to have this experience be as enjoyable as possible for Michelle, so she would want to do it again and again. Allie could tell that shortly after they were done Michelle would feel that urge, regardless of how sore her bottom was when she was finally untied. \n\n\"Ohhhgawd Ms!\" Michelle moaned. \"I think I'm going to cum!\"\n\n\"My little girl does love to orgasm, doesn't she?\"\n\n\"Yes!\" Michelle's body tensed, which was then heightened by Ms. Allison giving her ass a firm spank. \"Ohhh YES MS.! Again! Please!\" \n\nWith a smirk, Allie smacked Michelle's ass again and again with each thrust, watching and listening to Her sissy's positive reactions. Feeling Michelle's body quake, her leg muscles shuddering, Allie held Herself against Michelle's practically vibrating ass.\n\n\"Well that was intense.\" Allie proudly said as She slowly pulled out. \"Why don't you rest right there for a moment,\" She said after hearing Michelle's slight whimper as the shaft slipped out of her ass, \"I think walking is a bit beyond your abilities at the moment.\" \n\nWeakly nodding her head, Michelle was exhausted. The orgasm she'd experienced the night before was one thing, this was something completely different. Lifting her head would take far more energy than she could even muster at the moment. Michelle closed her eyes, feeling a level of sexual exhaustion she'd never known before. Feeling something cool and moist against her now sore opening, Michelle continued to rest rather than try to look. It took a moment for the fog in her brain to clear enough for her to understand she was being cleaned up by some kind of baby wipe. The coolness was refreshing. A smaller plug was eventually inserted, and Michelle's sexy French cuts were pulled back into place before her wrists were freed. \n\n\"Let's stand you up,\" Ms. Allison said softly while she and someone else lightly grasped Michelle's arms, \"and you can relax on the couch for a bit.\" \n\nMichelle simply nodded as Ms. Allison and Babette got her to her feet, walking her slowly to the couch. Lying down, Babette placed a pillow under Michelle's head before returning to Ms. Allison's desk. Closing her eyes, Michelle quickly dozed off.\n\nNot sure of how long she'd been asleep, Michelle sat up slowly, feeling unsure of how she'd ended up asleep on her Boss' couch to begin with. Looking around, Michelle finally processed everything. She was still in her mostly translucent lingerie, her tender opening was still tender, and while plugged was not being stretched by the larger one she'd started the day with, and while less horny than before, she was still intensely horny.\n\n\"How do you feel?\" Ms. Allison asked from Her desk. \"Babette left you a glass of water.\"\n\n\"Thank you, Ms.,\" Michelle replied taking a long sip, \"I'm okay.\" She took another long sip before continuing, \"That was pretty intense.\"\n\n\"It was, you seemed to have quite the orgasm.\"\n\nMichelle blushed, noting that Ms. Allison referred to it as an orgasm and not cumming. It was obvious that it was intentional, something to keep her feeling emasculated. Not that she needed much more assistance to feel that way.\n\n\"I do have to use the bathroom.\" Michelle said, almost asking permission, as she tried to stand.\n\nMs. Allison nodded as Michelle tried to get off the low slung couch and onto her tall heels. Her knees were several inches above her hips, which took some work. Slowly standing, Michelle's hand quickly went behind her as it felt as if the plug would fall out of her body.\n\n\"Don't worry,\" Ms. Allison suppressed a chuckle, \"it's a weighted plug, it will help tighten your sissy pussy back up after a fucking.\"\n\n\"Okay, Ms.\" Michelle replied feeling her face turning deep red at Ms. Allison's choices of words while slowly making her way to the bathroom.\n\n\"When you're all set, come back and have a seat.\" Ms. Allison instructed.\n\n\"Yes, Ms.\"\n\nWalking into the small bathroom, the word fucking had certainly been appropriate. Michelle's hair was a mess, her mascara was a bit of a mess, and she simply looked as if she'd been fucked hard. It was the case though, so she couldn't say she was surprised. What did surprise her, as she pulled her panties down and sat on the toilet, was her missing condom panty liner. It had definitely been on earlier, and she'd certainly added to it when she came. Orgasmed, she corrected herself. She would have to ask. After relieving herself, Michelle fixed her hair and makeup before reentering Ms. Allison's office. Standing by the chair, she waited for Ms. Allison to indicate she could sit.\n\n\"How do you feel muffin?\" Allie asked as She motioned for Michelle to sit.\n\n\"A bit foggy,\" Michelle responded crossing her legs in the chair, \"but very good otherwise Ms.\"\n\n\"That was quite an orgasm you had,\" Allie was truly impressed by how Michelle's body reacted, \"it's wonderful you enjoyed your first time as much as you did.\"\n\n\"It was surprising Ms.,\" Michelle struggled to raise her eyes above the top of her Boss' desk as she spoke, \"I was wondering where the panty liner went though.\"\n\n\"I'm sure you were marginally aware that I called Babette in to clean you up afterward,\" Allie waited for Michelle to nod, enjoying the increased embarrassment at the realization, \"it seemed a shame to wait for you to wake up after, and it was a nice reward for Babette.\"\n\n\"Reward?\" Michelle thought she knew what Ms. Allison meant but wanted to be sure.\n\n\"Oh yes,\" Her grin was like a Cheshire cat, \"she gobbled your fairly full condom without hesitation!\" Again, Allie paused a moment letting things sink in. \"Don't worry, you'll taste her soon enough.\"\n\n\"Yes, Ms.\" Michelle wasn't sure if she was anxious about tasting her friend or horrified by how much she was looking forward to that moment.\n\n\"Why don't you remove your cuffs now,\" Allie was enjoying the obvious torment on Michelle's face, knowing it was far worse than she was letting on, \"I had Babette remove the locks already for you.\"\n\n\"Thank you, Ms.\" Michelle replied, her throat suddenly dry.\n\nPlacing the cuffs on Ms. Allison's desk, Michelle walked to the door to retrieve her dress. Once again fully dressed, she exited the office heading toward her desk, wondering if Babette would be there or not.\n\n\"Hi Sleepyhead!\" Babette smirked as Michelle approached. \"Someone got worn out today!\"\n\n\"I know.\" Michelle's voice was a whisper compared to Babette's.\n\n\"I bet you can't wait to do it again too.\"\n\n\"You're right about that too!\" Michelle giggled as she walked over to see what Babette was doing on the computer. \"Surfing dating sites at work?\" She teased.\n\n\"It's a dating site of sorts,\" Babette replied, \"each girl gets a page on the company website.\" Michelle involuntarily squeezed her legs as Babette scrolled through the page of a voluptuous red head. \"Tomorrow I have a photo shoot to get my page set up,\" Babette said as she slowly kept scrolling, \"and I'm trying to get ideas of what it's going to be like.\"",
        "\"Holy shit!\" Michelle quickly covered her mouth after loudly blurting the words. \"Is she dressed as a latex pony?\"\n\n\"Yes she is!\" Babette's shoulders trembled as a chill ran up her spine. \"Take a look at this one!\"\n\n\"Well that's one way to get you to stop saying stuff that embarrasses me!\" Michelle quipped looking at the picture of the red head done up as a life-size blow-up doll.\n\n\"I think my jaw would cramp with my mouth held in that O position for so long.\"\n\n\"It's okay,\" Michelle leaned forward as much studying the pictures as her friend's reaction, \"I'm sure you can file a workman's compensation claim for a jaw issue.\"\n\n\"Who's being bad now!\" Babette giggled.\n\n\"I've had a good mentor!\" Michelle teased back."
    ],
    "authorname": "Ms_Allison",
    "tags": [
        "men in lingerie",
        "men in heels",
        "femdom",
        "sissy slut",
        "strapon play",
        "forced fem",
        "forced feminization",
        "anal training",
        "cross dresser",
        "cross dressing"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-agency-ch-07"
}