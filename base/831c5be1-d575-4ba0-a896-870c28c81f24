{
    "title": "My Little Ventrue Pt. 08 Ch. 02",
    "pages": [
        "~~Jack~~\n\n\"Consider a glass cage, my love, and within, a glowing sphere bounces up and down. The cage holds the sphere perfectly still on the horizontal plane, forcing the sphere to remain locked on its vertical path. It bounces at the speed of light, which, as you know, is the limit matter may travel. No faster. 299,792,458 meters per second.\"\n\nJack nodded, eyes wide and engaged as he watched Antoinette. Understanding the world in terms of special relativity was always a troubling mental exercise, but it was one he'd taken a few shots at when he was younger, and he knew Antoinette likely had as well. Course, her 'younger' would have been when Einstein suggested the theory, and Antoinette, forever looking to the future, would have added the hypothesis to her list of key scientific theories to understand.\n\nHe smiled as he listened to her, half absorbing the knowledge and trying to wrap his mind around it, half admiring the way her lips moved, and how damn good she looked in that business suit.\n\n\"This cage begins to orbit you at a great distance, and in this hypothetical, you are able to see and monitor it instantly; do not worry for the nuances that light must reach your own eyes in reality, as we ignore that in this hypothetical. As you watch, the cage orbits you faster and faster.\"\n\n\"But... if the speed of light is the fastest something can move, then... isn't this example violating that?\"\n\nHer own smile grew. \"How so?\"\n\n\"Because, if the ball is going up and down at the speed of light, and it's rotating around me, then... Pythagorean theorum, you know? The ball would have angled paths that would be a combination of its bouncing speed, and the orbiting speed. It'd be moving faster than the speed of light on an angle.\"\n\nA twinkle danced in Antoinette's eye, and she leaned forward, elbows on the glass table of her office. \"Exactly. But the law cannot be violated. The bouncing sphere will have to slow the speed of its bouncing, so its angled velocity will always have a total velocity of the speed of light.\"\n\n\"I could literally watch time slow down and the bouncing ball slow down too, the faster the glass cage moved around me?\"\n\nShe nodded again. \"The infamous time dilation. This example is crude, filled with hypotheticals and caveats, but functional.\"\n\nHe leaned back in his chair and buried his chin in his palm. He was next to her, at the table in her big office at the top of the tower, and also dressed in a business suit. They were having a Primogen meeting later, and he was invited, both to speak of details of what happened during his attack on the hunters, but also to speak for Azamel and Avery.\n\nThe meeting wasn't for another hour though, and he was free until then.\n\n\"But, now I'm all confused. What if two people were zooming past each other at high speeds? Do they both see each other as aging slower? Sounds like a paradox.\"\n\n\"And that is where the hypotheticals and caveats betray us. With them, we are discussing scenarios that simply cannot be measured. If two individuals flew past each other at great enough speeds to notice such a thing, they could not see any paradox, due to perspective, and the vary nature of the speed of light being the limiting factor in how we perceive each other. There is simply no way for both parties to be able to compare their experiences instantaneously. Any and all forms of communication would suffer the very same time dilation you are attempting to measure.\" She sighed and shook her head. \"It is forever mentally taxing, is it not? Down this rabbit hole, and suddenly, you realize your very experience of existence itself is subject to the whims of the materials of the universe.\"\n\n\"I have heard some mathematicians go mad.\"\n\nShe laughed and shrug. \"Understandable.\"\n\n\"Wait, so, if I left Earth at a super high speed, I'd see the Earth as aging slower, and an observer would see me on the ship, aging slower?\"\n\n\"Yes, but again, that measurement cannot be made.\"\n\n\"But, if I turned around, and came back at a high speed until I was face-to-face with whatever observer was on Earth, then... I'd have created a paradox, where both me and the observer expect to find each other aged slower? Because I'm flying away super fast, the observer sees me age slowly, but to me, they're the one flying super fast away from me, and they're aging slowly. I fly back, same effect occurs. Me and observer both see each other as having aged slower than the other?\"\n\n\"No, because your journey had two elements to it. Flying away, and flying home. Two different measurements, that create a different skew of the flow of time, not unlike two sides of a triangle being compared to another, single side, the side of the observer whose initial frame of reference did not change, while yours did.\"\n\nJack dropped his forehead onto the table, and started gently sliding it back and forth so it bumped along. \"Ugh, ok, so... if... I'm flying away, and the observer sees me taking a trip that takes a year to reach my destination. Observer knows that, while he saw it take a year, from my perspective in the spaceship, it took less. In my perspective, a year hasn't gone by yet... let's say a three quarters of a year went by, for me to arrive at a distant planet. Then I fly back, and... but... in my perspective, I'm thinking the observer is aging slower than me, and--\"\n\n\"Except, in this problem, your frame of reference remains the Earth. You must adjust your coordinate system in two separate circumstances if you are to measure and consider this problem from the point of you, the person in the space ship, but normally your reference point should remain unchanged through this hypothetical dilemma. You accelerate away from the earth, and then accelerate toward it to return home. Even if you changed the point of reference to be your space ship, and it was the Earth moving away from you for the first half of your journey, you would then be the one that has to catch up to the earth, speeding away from the reference point you original chose. Your point of reference would be your original vector, a vector you leave behind on the return trip. It would not simply follow you, because while velocity is relative, acceleration is not. We can objectively assume that you have left your frame of reference halfway through the journey, or arrived at it, depending on how you measure it, because we can measure the acceleration you used to create that change.\"\n\nJack just stared at her. \"... you are so hot right now.\"\n\nLaughter filled the room, sweet, delicious, and a touch husky. After a time, she smiled at him and rolled her eyes. \"I could wear glasses, if you would like? It has been some time since I have dressed as a sex-starved librarian for my pets.\"\n\nJack choked on another laugh. \"Ashley and Julee are into that?\"\n\n\"Are not we all? A quiet, intelligent woman, with a grand reservoir of knowledge, who desperately hungers for a frequent outlet for her large, endless sexual desires?\"\n\nHe had to admit, that was a very sexy image. Lots of masturbation sessions to porn in that general category.\n\n\"Hey, Antoinette, I... I wanted to talk to you about something.\"\n\nMore chuckles. \"Are we not talking of something at this very moment?\"\n\n\"Ha, I meant something... something less fun.\"\n\nHer laughter stopped, her smile faded, and she settled back in her chair. \"Oh?\"\n\n\"Um, yeah. It's...\" Oh god, how to word this. Maybe he shouldn't have said anything? Why question a good thing? \"Sometimes, I wonder... about us.\" Her eyebrows shot up, and he cut her off before the world exploded. \"Not what you think! Not, not really. Just, sometimes I wonder about us, because... well.\" He slid his chair in a bit closer. \"I love these kinds of conversations. I love being able to talk to you about shit like physics, and you take it seriously, and give amazing insight. I like that I can talk to you about music, and you take it seriously, and give amazing insight.\"\n\n\"Are you saying you only appreciate me for my mind?\" The shock on her face faded, partly replaced with a playful grin.\n\n\"Ha, no. I'm saying... our relationship is unique. Very unique. And honestly, sometimes I wonder what... what I can give you,\" he said. She tilted her head to the side, grin vanishing again, but said nothing. \"You know so much, and have been through so much. Growing up, I was always under the impression committed relationships were about two people growing together, but I... don't really see that happening with us. I'm certainly growing, every moment I'm with you, but I don't know what I'm providing you, how I could be helping you grow.\"\n\nShe leaned back, and tapped her fingers on the glass table with one hand, while the other pulled her hair over her shoulder to begin combing it. Instead of the confident, powerful woman he almost always found, Antoinette looked nervous. That, was a very strange look to see on her, and he gulped as he watched the woman of his dreams deliberate.\n\n\"You wish you were with someone closer to your age, someone who could... evolve with you, as you aged.\"\n\n\"I'm not saying that.\" Ugh, why did he bring this up? Why why why did he listen to Damien? Bleh, he knew why. Because they were thoughts he'd already had, about this strange, amazing relationship he found himself in. \"But, I... I am saying, that it's something I've thought about. Not in the sense that, I think it's something I should have, or that what we have is worse or better or...\" He rubbed his buzzed hair and sighed. \"I love you, Antoinette, and I have no intention of ending this relationship. But I do wonder about this kinda stuff sometimes, about how different we are, about whether I'm able to provide anything in this relationship.\"\n\nShe met his eyes, her crimson gaze reaching past his face and into his soul. They'd stared longingly into each other's eyes before, many times, and he was quite comfortable meeting her stare now. Usually. Right now, she looked at him with something more than loving eyes. She was analyzing him. On anyone else, the analytical expression wouldn't merit notice, but Antoinette didn't let people read her expression unless she wanted them to, or was comfortable enough to lower her poker face. And her analyzing eyes were like the eyes of some grand, calculating machine. Made him think of the sphinx gates in The Neverending Story.\n\nThey made him feel very small. And that was the worry, the one concern he had about their relationship. Most relationships were built on two people being equals, but Jack was her inferior in so many ways, even if she denied it.\n\n\"Jack,\" she said after a cold eternity, \"it is true that I am much older than you. It is true that I have experienced far more than you, and despite how our undead minds resist change, half a millennium of second life has molded me. It will be many hundreds of years, before you will be able to appreciate events and circumstances with the same perspective as I.\"\n\n\"Yeah.\" That made him wince.\n\n\"And, it is true that I have a wealth of knowledge above yours, that which surpasses typical metrics. Hundreds of years of experience has taught me much.\"\n\n\"Yeah...\" This conversation was starting to hurt.\n\n\"Jack.\" She reached out and grabbed his hand. \"If I asked you, to consider whether you had a personal bias clouding your judgment, in any matter at all, not just this one, how would you respond?\"\n\nHe raised a brow. \"I would... agree, undoubtedly. I'd do my best to see past my biases. I'd try and be as objective as possible, and I'd ask for some outside opinions, cause I'm only human -- er, vampire -- and I know I could never be a hundred percent objective about anything. I try my best to always accept that I could be wrong about anything, I think.\"\n\n\"You are self aware.\"\n\n\"I guess. Kind of a hard thing to define, right? I don't know if--\"\n\nShe laughed and smiled at him. \"Your very admittance of an imperfect understanding is exactly what I am talking about, my love.\" As her mischievous smile returned, she pulled on his hand, harder, until he had to stand up. And before he knew it, he sat on her lap, sideways, and blinked at her. \"Do you have any idea, my love, any idea, how rare a quality that is? Can you fathom how rare it is for the average kine, or indeed, average Kindred, to think to themselves 'perhaps I do not know everything'? Do you have the slightest inkling, on how rare a trait it is for someone as young as you, to have the self awareness to understand that what you see is not a perfect recreation of reality, and that your biases color your perspectives to the extreme?\"\n\n\"I mean, I get that not everyone's a thinker, but--\"\n\n\"It goes further than that, my love. I am not speaking of intelligence. I am speaking of wisdom, a wisdom that most only learn through decades upon decades of suffering, and only when they are so lucky as to survive their own stupidity. To look around you and think 'I do not understand this world, and my journey to do so will be a never ending struggle, a struggle worth pursuing' is a perspective on the universe that so few ever achieve.\" Sighing, she hugged him, and pulled his head to hers until their foreheads touched. With him sitting on her lap, and her being as tall as she was, they were eye to eye. \"The greatest philosophers of history started with such a viewpoint.\"\n\nThat managed to pull a smile out of him. Any stroke to the ego was candy for a Ventrue, or anyone for that matter.\n\n\"Greatest philosophers, mmm?\"\n\nShe laughed again. \"Oui. The ability to simply look at yourself, and consider not only that your own understanding is imperfect or limited, but others may provide a superior, more detailed, more nuanced, and more logical perspective, is wise beyond all measure. And the awareness to apply this reasoning to every aspect of your life, is...\" Grin growing, she leaned in and kissed him. \"I have told you before, you are an old soul. There is much about us where we are equals.\"\n\nHe'd be blushing horribly if he'd been Blushing Life right then. \"Yeah?\"\n\n\"And, that is not all.\"\n\n\"Oh?\"\n\n\"There is something, something important... where it is I who falls short.\"\n\nHe tilted his head to the side, and eyed her closely. Her poker face was gone, ripped away by her own words, and he found himself lost as he stared into her eyes again. Now, as if from nowhere, he found sadness. Not the sadness he was familiar with, sadness caused by pain, visceral pain, family pain, loss and mourning. That wasn't what he saw on her face. The sadness he found there was like looking into an abyss of coldness. It was the sort of sadness he figured you might find on a reluctant king or queen, someone forced into their position, someone who lost everything that they used to know.\n\n\"What?\"\n\nAfter a long sigh, she closed her eyes, and kept her forehead against his. \"For many my age, it is impossible for us to connect, emotionally. We have left that part of us behind. The older Kindred become, the more difficult it is for us to find, or accept, true intimacy with another.\"\n\n\"Jaded?\" He tried to not think of Jacob and Minerva, or even worse, Maria, and the only man who'd probably ever love the corpse woman, Lucas.\n\n\"Perhaps. Much of what brings joy to a soul, loses flavor over the centuries. Many Kindred, as they enter their elder years, become obsessed with their work, their covenants, their goals, and the very idea of finding contentment becomes alien. We become slaves to our ambitions and our Beastly instincts. It... it takes much, to stir genuine emotion within us.\" Her arms slipped around him and held him by his waist. \"I have told you this before.\"\n\nHe nodded, forehead still against hers. \"Yeah, but... I... I guess it's hard to understand.\"\n\n\"Of course. And you will not understand it for centuries yet. It is the curse of immortality.\"\n\nWait. He lifted his head, looking up as he scanned memories. \"This reminds me of a Conan story.\"\n\n\"Conan?\" The Prince raised a brow, and Jack couldn't help but laugh.\n\n\"Conan the Barbarian. The story had a bunch of these immortal beings in it, and when they grew tired of life, they would kill themselves in a ritual suicide. It...\" He chewed on the thought for a moment, before leaning in and setting his head against Antoinette's shoulder. \"They were villains in the story, but it was sad. They lost the will to live, for no other reason than they'd been alive for too long.\"\n\n\"Then the author displayed startling wisdom. Life is precious because it is short. Our second lives are different, and it is the struggle of all Kindred to find joy in immortality.\" Her left arm raised, found the back of his head, and her fingers stroked his hair and scratched his scalp. Ah, heaven. \"You fear that you bring little to our relationship, and are perhaps a leech, drawing from my experience and life knowledge. And yet, here I sit, fearing that I am the leech, attached to you and offering nothing in the way of emotional satisfaction, while I siphon empathy and passion from you.\"\n\nShe was afraid she was leeching from him, and damaging him. Wow.\n\nHe melted into her touch, turned his head, and kissed her neck. \"It's a strange relationship.\"\n\n\"Indeed. I did not... open myself to you lightly, Jack. At first, I found your open soul and lack of experience to be a delight to tease. It was a fun game for me. I hope it was fun for you, as well.\"\n\n\"I mean, kinda? It was definitely scary, having the queen take an interest in a random, new squire.\"\n\nShe laughed. \"And, with every encounter, I realized how much more there was to you, little Ventrue. I realized that you were precious, quickly becoming precious to me, and that... that I had fun with you. Genuine fun, different from the master and servant relationship I have with my ghouls. With you, there is... an indescribable feeling, more than a simple desire to tease and spoil, or to rear. You are... a missing piece. I feel complete when you are with me. And I worry that I am using you.\" Her laughter vanished, and the somber coldness in her eyes returned.\n\nBut before she could say anything else, Jack kissed her. Not one of their quick, fluttery kisses, but a long one, a deep one, one that he'd normally let her trigger, not the other way around. As the conversation went on, it'd become painfully clear that Antoinette was just as insecure about their relationship as he was. Her concerns were vastly different than his, but she still had them.\n\nAnd that made him feel a lot better, in a strange way. Antoinette always seemed so secure, so confident, like everything she did was a perfectly calculated plan. Considering how many experiences she'd had, every action she did probably was something she'd calculated as a reflex, cause she'd done it dozens of times before. Except, not this, not romance like this, not with someone as young and different as him.\n\nMutual uncertainty. Something to bond over. Something to overcome together.\n\n\"I've never felt like you've taken anything from me,\" he said.\n\nHer smile brightened. \"And I--\"\n\nKnock knock. Before Jack could get off Antoinette's lap, the door to her office opened, and Elaine walked in.\n\n\"Ann, I--oh. Hello Jack.\" The blonde woman's lips cracked into a big grin, and she walked over to them, hips swaying with deliberate, exaggerated motions. She wore a business suit like the Prince, and the skirt highlighted the shape of her wide hips and curvy thighs. Nothing like a woman in a suit and skirt.\n\n\"Elaine. You are early.\" Antoinette didn't react to Elaine's approach; probably heard her coming, while Jack had been a little too distracted. Another one of those age difference things, presence of mind, a skill Jack seriously hoped he'd eventually learn.\n\n\"Yes. I thought we should talk again before the meeting, about how much of the Ordo you are willing to share with your Primogen. But, it appears I interrupted something?\" Her evil smile continued as she casually walked up to the chair Jack had abandoned, and sat in it. She leaned back in it, set her hands together on her lap as she crossed her legs, and watched him and the Prince with expecting eyes.",
        "\"Oui, that you did.\" Antoinette chuckled, a playful, husky sound, and held Jack's hand as he stood beside her while she remained seated.\n\n\"You two are utterly adorable.\"\n\n\"Are we not?\"\n\n\"I could write romance novels about such a beautiful couple.\"\n\nThe Prince scoffed, grinning. \"You do not have the artistic skill or creative mind to be a fiction author.\"\n\nElaine rolled her eyes and laughed. \"Pretentious Daeva.\"\n\n\"Jack,\" Antoinette said, \"would you mind if I asked you to leave until the Primogen meeting? I would speak with Elaine.\"\n\n\"Yeah, of course.\" He stood up straight, nodded to Antoinette in a very 'yes my Prince' kinda way, and looked at Elaine.\n\nHe still didn't trust her, not completely, and he knew Antoinette didn't trust her completely either. The difference was, the two of them were such old friends, they could become enemies and it wouldn't ruin their friendship. The fact they'd remained cooperative for hundreds of years seemed more like the exception, not the rule, as far as elders were concerned.\n\nAntoinette trusted her enough to have sex with her, with Jack, and the ghouls. That may have sounded like a lot of trust for some people, but for someone like Antoinette, it wasn't. Hell, Antoinette and Elaine probably kept a bit of guard up, ready to strike out and fight each other, even in the middle of orgasm, despite their friendship. Elders were just paranoid like--\n\n\"On second thought,\" Antoinette said, smiling at Elaine, but speaking to him, \"come, and masturbate for me.\"\n\nHe froze, blinking at the grinning Elaine, before slowly turning and looking down at the Prince. \"Now?\"\n\n\"Oui. I feel horrible for sending you away.\" Oh no she didn't. Her devil smile was in full bloom. \"Come, masturbate, here.\" With her eyes on him, she undid the button of her black suit jacket, and then several of the top buttons of her white shirt, exposing the black bra underneath.\n\n\"Um... are you sure? The meeting--\"\n\n\"Is not for some time. Now, come, enjoy yourself.\" Smile unending, she curled a finger at him and toward herself.\n\n\"What about Elaine?\"\n\n\"I,\" Elaine said as she gestured toward herself with a loose wrist, \"will watch, of course.\"\n\nAnd, Antoinette knew Elaine would say that, judging from the wicked grins the two carried. These two women were so in sync, it was scary.\n\nMaybe he should try something different, instead of just mindlessly following along? He certainly loved following along, cause Antoinette spoiled the shit out of him. But, maybe it was time he tried doing something he never did before.\n\nHe folded his arms across his chest, put on a surly expression, and looked away. \"No.\"\n\n\"Non?\" Antoinette said.\n\n\"No?\" Elaine said.\n\n\"No,\" he said again, and he put a hint of whine into his tone. \"I don't want to.\" A lie, of course. Just seeing Antoinette expose her bra was enough to have him craving her.\n\nThe two elders looked between each other, apparently shocked by his behavior. But, after the shock passed, they chuckled, and Antoinette stood up. Uh oh. She stepped over to him, devil smile growing, and set her hands on his shoulders. Before he could say or do anything, the powerful Daeva slowly turned him to face Elaine, while she slipped behind him, and pressed her breasts and bra into the back of his shoulders as she hugged him.\n\n\"I believe you do,\" she whispered.\n\n\"I don't.\" Resist. Resist, damn it.\n\n\"You cannot lie to me, my love.\" Her hands drifted down over his body, and she pressed her fingers against his abs through his shirt. \"Or, perhaps, you would prefer to cum on Elaine's breasts?\"\n\n\"Um, I--\" He froze and stared, as Elaine instantly picked up on what Antoinette was saying, and started to undo her suit jacket buttons as well. \"You don't have to--\" He gulped as Elaine met his eyes, and started undoing the buttons of her shirt. Within seconds, the shirt was undone save for the bottom button, and she grinned up at him as she set her hands on the arms of her chair.\n\nLike Antoinette, she was wearing a black bra, something obviously meant to be sexy rather than comfortable. Evidently, the two women had become immune to uncomfortable clothes, and wore whatever they felt looked best.\n\n\"My love, you would do me a great disservice, if you denied me.\" Antoinette hugged him tighter, making sure her huge breasts squashed against the back of his shoulders. \"And, it would be in your best interest to listen to the Prince of Dolareido.\"\n\nOoh, a gentle threat. And fuck him, it triggered instant arousal. Something about a powerful woman threatening him was hot, and by this point in his life, he'd accepted it. He definitely had a kink for the intimidating, female villain trope.\n\nBefore he could reply, Antoinette guided him around the table, and up to Elaine. The blonde spread her legs, and Antoinette pushed him closer until he was standing between his great grandsire's knees.\n\n\"I know your desires, lover,\" the succubus whispered down over him. \"Give into me. Do as I say, and I will make every night Elaine is with us a veritable feast of silk skin and wet heat.\" As she said it, her right hand began to undo his shirt buttons, eventually undoing them all, before slipping down onto his crotch to rub it through his pants. He wasn't blushing life yet, but that didn't mean she wasn't going to tease him until he did. Her left hand slid up, and he found her fingers wrapping his throat. \"Deny me at your own peril.\"\n\nWelp, he should have known better than to try and play the unwilling participant. Antoinette knew him so damn well, she could press every kink button he had like playing the piano. She'd trapped him between two powerful, deadly women, threatened him like an evil villain might, had her enormous breasts pressed against him, and was offering to pleasure him using another woman's set of huge breasts.\n\nThe fact they were all still in their business suits, just made it all the hotter.\n\nHe sighed as he gave in, and Blushed Life. Both women audibly purred as his erection immediately pressed against the insides of his boxers and pants. Elaine sat up straight, set her hands on his pants, undid his fly, and pulled down his boxers just enough to free his length from his clothes. But then she stopped. Still sitting up straight, so her propped-up breasts held up by her bra were only inches away from his pelvis, she set her hands down on the arms of her chair, grinned up at him, and waited.\n\nHer grin melted into a happy sigh, as Antoinette inched him closer to Elaine, took his cock into her right hand, squeezed on the base of its length, and guided it down until it pointed straight toward her friend. His glans dragged along Elaine's bare sternum, before Antoinette guided the swollen head of his cock to the right, and into the side of Elaine's left breast.\n\n\"Give into me,\" the succubus whispered again. \"I can make every fantasy you have ever dreamed of come true.\" Apparently, his moment of resistance earlier had sparked something in Antoinette as well. Without him asking, she'd taken up the mantle of villain, and was trying to corrupt him, as if he were the righteous hero.\n\nWelp, if he was the hero, meant to resist the temptations of a succubus, he was fucked.\n\nHer squeezing grip worked back and forth, and Jack shivered as heat began to build up underneath his testicles. Moments later, drops of his precum leaked out from the tip of his length, wetting Elaine's breast and his foreskin. Antoinette peeled the skin back, exposing the swollen, aching, tingling head of his cock, and gently rubbed it up and down along the inside of each of Elaine's breasts where the bra didn't cover them. Her grip tightened, and she worked her hand faster, knowing exactly what to do to bring him closer and closer to orgasm in record time.\n\n\"You could paint my old friend in your seed, my love, every inch of her, inside and out. You could fuck her, while my ghouls and I clean her with our lips, and tongues.\" Her grip on his cock tightened again, and stroked him faster. \"Or perhaps you would rather fuck me, while Elaine massages your body with her breasts, her thighs, her everything. Or perhaps, you would simply prefer to sit down and watch my old friend and I drive each other to climax again, and again, and again, while my ghouls suckle on your length, and--\"\n\nThe heat in his glans grew electric, and he moaned quietly as each stroke of his cock caused the sensitive skin to rub and sink into the supple skin of Elaine's left breast. Warmth gushed up from between his legs, up his length, and into the spot where Antoinette was burying his cock's head in her friend's body. White fluid squirted from him, splashing up and over the breast, some of the liquid slipping down between Elaine's bosom, some overflowing and running down along the outside of the breast Antoinette was rubbing with his cock. Elaine said nothing, but she moaned openly as she looked down, and watched his cum flood over her chest, and soak her bra.\n\n\"Delicious,\" Antoinette whispered.\n\n\"Indeed,\" Elaine also whispered.\n\n\"I uh... um...\" He stared down at the sight of Elaine's bra and chest soaked in his cum. If he'd been human, his teeth would have fallen out from him being spoiled rotten.\n\nElaine leaned back, and idly ran a finger back and forth through the trails of his cum, as Antoinette pulled him back, and gave him a gentle slap on the ass.\n\n\"Now, off with you. Elaine and I have secret matters to discuss before the Primogen join us. Wait for them, and join them.\"\n\n\"Yes, Prince.\" He nodded, turned off the Blush, got dressed, and headed for the door. Of course, he took a peek at Elaine, who still had her shirt and jacket open, and was grinning as him as she continued to run the tip of her middle finger through the white liquid coating her skin.\n\nSo spoiled.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Antoinette~~\n\nAntoinette smiled at her old friend as her lover left, and settled in her chair as Elaine wiped Jack's cum off her breasts with a napkin. Unnecessary. It would fade into the faintest hint of dust in minutes, but, it was easier to have a conversation without the distraction.\n\n\"You overindulge him,\" Elaine said, her weak reprimand joined by a smile.\n\nAntoinette buttoned up her shirt and jacket, and chuckled. \"I do. For over two years now, I have spoiled him almost nightly, and it never grows old.\"\n\n\"I hope I will get to join you, frequently.\"\n\n\"Judging by how my love has reacted so far, I am sure that can be arranged. Perhaps not every night we make love; we do enjoy our private intimacy from time to time.\"\n\n\"Of course, but...\"\n\n\"But, since you have only just arrived, I am sure we can convince Jack to invite you to bed with us tonight. And tomorrow night.\"\n\nElaine smiled and nodded. \"Wonderful. But onto the business at hand. As I asked before, what am I allowed to share with your Primogen?\"\n\n\"Nothing, I am afraid.\"\n\n\"So your quest to bring the city into cooperation continues to fail?\"\n\nAntoinette frowned slightly. \"Perhaps. The peace I obtained since the Purge has continued, but as we speak, the Carthians and Invictus prepare themselves for inevitable confrontation. This is of course compounded by the chaos of the arrival of the Uratha and the Begotten.\"\n\n\"Much has happened to your city, these past two years, since Jack was embraced.\"\n\n\"Indeed. And what's worse, Maria both pushes to revive the Lancea et Sanctum, but also...\"\n\n\"Also?\" Elaine asked, tilting her head to the side.\n\n\"After my love killed Lucas, I found several hints to suggest that someone is... up to something.\"\n\n\"Up to something? Awfully vague, Ann.\"\n\n\"Indeed. But I have spoken with spirits from across the Gauntlet, and they insist that Maria has been in communication with other spirits who are related to Black Blood in some way.\"\n\nThe name Black Blood drew a shiver from the old Ventrue. Antoinette did not share all her secrets with Elaine, but she did share many. Black Blood had been a thorn in her side for over a century, and she had spoken with her old friend about the blasted spirit before; if it truly was a spirit.\n\n\"Why would she do such a thing? And, how does she even know about the creature?\"\n\n\"I do not know. Perhaps Jacob spoke with her. Perhaps... perhaps it decided to speak with her on its own. I do not know. But I do know that both Black Blood and Jacob have tested their abilities in pursuit of resurrection. They have failed, but, that does not mean they would not point another onto the path.\"\n\n\"Why would Jacob help Maria?\"\n\n\"I do not know. Perhaps she made a deal with him.\" Sighing, Antoinette shook her head. \"I will find out eventually. For now, pay attention to those two, and listen for potential clues as to their motives.\" No easy feat. All Primogen were masters at saying less than they knew, while simultaneously misdirecting; well, except for perhaps Garry, but only a fool would underestimate the young elder.\n\n\"Alright, so, assume the two Nosferatu are up to no good.\" She laughed, shrugging. \"Nothing new.\"\n\n\"And the two Gangrel bark at each other,\" Antoinette added. \"A precursor to inevitable confrontation.\"\n\n\"Gangrels being Gangrels.\"\n\n\"And, the details of my experiments continue to be secret.\"\n\n\"To me as well. You have not told me of most of your experiments or intentions there in, Ann.\"\n\nThe Prince smiled at her old friend. \"I have told you more than anyone except my sheriff. Even my new student, and especially my new childe, remain ignorant to the scope of my goals.\"\n\nThey shared chuckles. It was such an old game, elders sharing only parts of their secret agendas with even their closest friends. They shared perhaps a third of their secrets, implied another third, and left the other third completely unknown to all. And so the game would continue, with only Daniel as a truly trusted confidant.\n\nNo doubt, that was part of Elaine's attraction to Daniel, to learn more about Antoinette's experiments. She could not blame her friend for it, either. At their age, the hunt for knowledge was as reflexive and enticing as any Beastly instinct.\n\n\"And what do they know of Jack?\"\n\n\"That a Strix curse has awakened in him, and that, while it is dangerous, Jack seems to be in control.\" Something the boy had proven, and yet, Antoinette was not convinced.\n\n\"And his lineage?\"\n\n\"Jacob knows, undoubtedly.\"\n\n\"Oh? Viktor and I never met him while the two of us were a pair, or in a context where he could deduce such a thing.\"\n\nAntoinette shook her head. \"Jacob is Jacob. If he did not manage to piece together the puzzle on his own, his blood rituals will have.\"\n\nWith a heavy sigh, Elaine leaned back in her chair and frowned. \"You should have killed him by now.\"\n\n\"I will not kill him, Elaine. Jacob is an old friend, and for all our disagreements, he has value. And besides, I... made a promise to Minerva. I will not kill the man without just cause.\"\n\nElaine rolled her eyes. Yes, it was a conversation they had had before. But there were reasons to spare Jacob's life, more than simply her promise to Minerva that she would give the dead woman's lover the benefit of a doubt. As Elaine said earlier tonight, she agreed with some of Jacob's views on their second lives. There was wisdom to be found in the old bastard's brutal, animalistic view of the world, and she refused to ignore or dismiss him simply because she did not agree with, or enjoy those views.\n\n\"Very well. Be aware I will not let the old snake try and control me with knowledge of my lineage. And besides, since Jack is aware, I expect the information to spread.\"\n\n\"It is hardly harmful information.\" There was little anyone could do with the secret that Elaine was Jack's great grandsire. If anything, people would fear her, now that Jack himself had become infamous.\n\n\"I suppose not. And the Begotten, and Uratha?\"\n\n\"Jack has spoken with them, and will relay information. But they know little of my experiments. Avery assumes I am seeking to harness ephemera as means of power, the deluded fool.\"\n\nElaine smiled at her. \"I thought that too, once upon a time.\"\n\nAntoinette returned the smile. \"I know. It was to my advantage to continue such a facade, even with you, old friend.\"\n\n\"Ah, I see. I cannot be trusted.\"\n\n\"Naturally.\"\n\nThey smiled at each other again, each turning a little more devious than before, before Elaine put her hands up in surrender. \"If I did not know better, I would think you trusted me less than before.\"\n\nUntil Antoinette knew more, she could not tell Elaine of the unknown entity, roaming within her city. There were simply too many possibilities, too many ways for such a revelation to backfire. She shared much with her friend, and even trusted her to touch her little Ventrue, but when it came to such a strange, volatile, and potentially dangerous secret, she would not share it without reason. Hopefully Jack knew to do the same.\n\nSo, for now, she would let the old Ventrue believe Maria was to be suspected, as many did. Antoinette, however, was not convinced of the Nosferatu's potential ill intent.\n\n\"I trust you, dear friend, with much. But we both know--\"\n\nElaine flicked a hand to the side, dismissing Antoinette's explanation. \"Do not fret. I am just... annoyed, I suppose. Annoyed with myself, for not having told you of Viktor, or the curse.\" Before Antoinette could console her, Elaine laughed and shrugged. \"I can still remember being utterly confused, when he agreed to join you on this ridiculous quest to build a new city in a new land, specifically for vampires and such.\"\n\n\"Yes. I was a touch surprised myself. But, despite what Viktor evolved... or devolved into over the years, as Tony did, they provided value as I built this city. Do not think that he was a thorn in my side from day one. And if the curse affected him, it did so differently than it did Julias, which I find unlikely. Viktor is to blame for his attitude, his actions, same as my childe Tony.\"\n\nA touch of relief crossed Elaine's face, and she nodded again, before the two of them turned to face the door of her office. The Primogen walked in, followed by Jack and her sheriff.\n\nTime for yet another hour or two of needless barking, and daggers in the dark.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Damien~~\n\nDamien raised his sword, and did his best to follow the sheriff's movements. Borderline pointless, but not completely. He managed to get in a block as the larger man brought his own sword down toward Damien's head, and then another block as Daniel brought his massive sword around to swing for Damien's side. Like the sheriff, Damien had adopted a longer sword some time ago, but unlike the sheriff, he didn't have the skill to use it. Or the sheer strength. Mekhet didn't take naturally to bursts of pure physical power, but given enough centuries, even they could summon strength enough to punch holes through concrete. They may not be able to throw a bus like an elder Daeva or Nosferatu, but still.\n\nThe third strike hit Damien hard. Daniel was just too damn fast, and brought his sword around to hit Damien's exposed side. Crack. Ribs broke, and Damien fell to the marble floor, grunting in pain.\n\n\"There is a reason,\" Daniel said as he stepped back, \"that people don't use swords this long.\" With gloved hand, he gestured to the long sword in his right hand's grip, and the similar sword in Damien's.\n\nBoth swords were dull, and not their actual swords. Approximations, meant for training.\n\n\"Slower,\" Damien said.\n\n\"Not that much slower. The blades are light, after all. The issue, is control, like a dog trying to carry a very long stick.\"\n\nNatasha giggled at the simile, despite the worry in her eyes over his injury, and Damien offered the little woman a small frown.\n\n\"For example,\" the sheriff continued, \"do this.\" Daniel put his weight back on his right foot, pointed his left palm at Damien, and with his right elbow drawn back, pointed his sword at Damien so it nearly touched his left hand's palm. \"Look.\"",
        "Damien forced himself up from the hard marble floor of the Elysium Tower, and bit down the pain. Daniel was as cold as ice to ignore the fact he'd just broken several of Damien's ribs. But, that was a part of the reason Damien had come to him for training. Cold, efficient, and fast. That's what Damien wanted to become.\n\nAnd he wasn't worried about becoming too cold, not with Fiona there to warm him.\n\nDamien squinted at the sword's tip, and licked a fang. Still, completely, utterly, still. Daniel's grip was as still as the dead, and Damien slowly rotated his head around the sword tip, looking for any signs of movement. There were none. Considering the length of a blade amplified any hand trembling, the fact the very long sword's tip was dead still, was kind of freakish. And impressive.\n\n\"You're saying I need more control.\"\n\n\"Yes, among other things. You need to learn how to control the length of the blade. Using a smaller sword is like swinging a hammer, and requires little finesse in most situations. But if you want the superior range of a weapon like this, you'll need to learn to counter balance for the motion.\"\n\nNatasha, sitting on a bench nearby, shook her head. \"It seems unnecessary. There's a reason w-we usually wield our weapons like this.\" The tiny woman raised her own dull sword in her right hand, a short thing similar to the sword she usually used. She pointed her left hand's index finger at Damien, like aiming a pistol, and smiled. \"A gun has a m-much longer range than a sword.\"\n\n\"A silver bullet is useful against a werewolf,\" the sheriff said. \"Against a fellow Kindred, not so much.\"\n\nNatasha mimed shooting a much larger gun, with both hands. \"Shotgun!\" Her smile was vibrant.\n\nUnless Damien was seeing things, Daniel smiled, if only for a moment. Natasha, being happy and even joyful around the cold sheriff, was really cute.\n\n\"A shotgun may work quite well against a Kindred, but it will do little to an Uratha. Or a Ventrue or Gangrel that are being defensive with their Disciplines.\" Daniel relaxed his stance, and gestured with his left hand to his sword. \"The only way a Kindred can survive a sword, is a Gangrel exploiting transformations to become a swarm of bats, or a cloud of smoke, or river of blood.\"\n\n\"I've never seen M-Michael do anything like that,\" she said.\n\n\"The man prefers his big, loud, boisterous, strong transformations.\" Daniel managed a tiny shrug, and adjusted his glasses. \"Garry, on the other hand, has been known to become smoke, or Miasma, during the Purge.\"\n\nDamien and Natasha both shuddered. It was easy to forget sometimes that Garry, despite only just barely hitting elder vampire years, had earned his position. He was very, very strong, and smarter than your typical thug Carthian. He might not have been able to beat his closest comparison, Michael, in a straight fight, but that didn't mean he couldn't beat him in other ways.\n\n\"A sword, combined with speed, can handle almost any situation, be it against Kindred, Uratha, or Begotten.\" Nodding, Daniel lifted his sword and looked back to Damien. \"Defend yourself.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\nBeaten and hurting, Damien picked himself off the floor, and dragged himself to sit beside Natasha on the bench. Damien had attempted to hit Daniel in three matches, and had failed all three. Natasha had also attempted three, and had actually nearly managed to hit him, but didn't. The little girl was fast.\n\nOf course, it might have had something to do with how Daniel didn't hit her as hard as he hit Damien. Not because she was a girl, but because she was his childe. The sheriff had a soft spot for Natasha, even if he rarely showed it.\n\n\"Sire,\" she said, grimacing as she rubbed her shoulder where Daniel had cracked her one. \"Um, how d-did your night with Athalia go?\"\n\nDaniel opened a wardrobe on the side of the gym, exposing the various training weapons within, and put away his training sword. \"Why do you wish to know?\"\n\n\"T-To... be nice?\"\n\nHer sire looked at her with a raised brow, adjusted his glasses, and grabbed his trench coat from the bench beside them. \"It's personal.\"\n\n\"Yeah! B-B-But, that's part of why it's nice to talk about it. You d-don't talk to anyone ever, Sire. But, Damien and I, we... we're...\"\n\n\"Similar,\" Damien finished. \"... sort of.\"\n\nThe sheriff eyed them with as much emotion as a rock, before he finally sighed and folded his arms across his chest. Defensive posture. Talking about something like social interaction was definitely something the three of them sucked at, but Natasha and Damien had both been pulled into a lot of socializing the past couple years, Tash especially. They weren't the same people anymore. They'd evolved; a difficult thing for Kindred to do. In this matter, they'd gotten an upper hand on Daniel, who seemed to be the most antisocial man alive. Or, un-alive.\n\n\"What do you want to know?\"\n\nNatasha shrugged, and rubbed her arm where Daniel had nearly broken it. \"I d-don't know! Did you, um... kiss her?\"\n\nThe sheriff frowned and grunted; barely of course, but he did. \"Yes.\"\n\nNatasha's smile brightened. \"D-Did you, um, do more? I mean, I know something horrible j-just happened to her, but, maybe if you, um... you know...\"\n\n\"Comforted her,\" Damien added, \"she might not be such a risk.\"\n\n\"She is...\" Daniel paused, looked down, and stared at the marble floor. \"She is sad. But, much of the anger she once felt is gone.\"\n\n\"I suppose that makes sense,\" Damien said. \"She must have hated every moment of life, knowing what she'd been doing to her daughter when raising her, and then again, hated life, when Angela became a hunter. And then, how angry she must have felt, and guilty, knowing what Angela had done to Jack.\"\n\nThe little Mekhet next to him hmmm'd and nodded. \"N-Now it's over. It's sad, but... she's free.\"\n\n\"I am helping her,\" Daniel continued. \"How I do that, is private.\" With that, Daniel walked out.\n\nPrivate? Damien raised a brow as he watched the sheriff collect himself and leave. No ceremony, no goodbyes, he simply left, leaving Damien and Natasha alone.\n\n\"Your sire is... efficient.\" Damien got up, took a step, and regretted it immediately. The tall bastard had thoroughly cracked Damien's legs with his dull sword, several times. He fell, on his ass, and groaned as he pushed himself up to his feet again.\n\n\"He is that.\" Natasha had an easier time getting up, and she limped over to him before looking him up and down. \"Think you'll b-be fine?\"\n\n\"I will. But a little shocked to learn that Daniel is capable of sex.\"\n\nNatasha giggled and shrugged. A groan announced her own pain, and regret. Daniel may have gone easier on her, but that didn't mean he didn't beat her bones to their limit as well.\n\n\"He didn't say he was having s-sex with her.\"\n\n\"But...\"\n\n\"B-But, I... suppose he would call that private, if he was having it.\" She grinned up at him. \"I'm happy for him. It's nice that Athalia won't b-be trying to kill Jack, and it's... it's very romantic. Sire is such a c-cold man, and Athalia is...\"\n\n\"Also cold, but cold like an arctic blizzard.\" In comparison, Daniel was far more stable. Perhaps his stability would be the foundation Athalia could use to become stable herself.\n\nMore giggles from the little lady. \"Y-Yeah. And, if they can make each other happy, that's wonderful.\"\n\n\"Don't forget, Athalia was supposed to help us in that raid, and she didn't.\" Limping as well, Damien dragged himself over to the cabinet of practice weapons, put away the sword, and once she handed it to him, put hers away as well. \"The only reason we're not hunting her down and killing her, is because we feel bad for her.\"\n\n\"And b-because she's a Begotten. Hunting her down might not be so easy.\"\n\n\"You think Daniel would have trouble killing her?\"\n\n\"Emotionally?\"\n\nHe shook his head. \"Physically.\"\n\n\"No, of course n-not. Daniel is... is crazy. He can actually use Auspex to leave his body!\"\n\nThe two of them left the tower, and started down the street. The weather was turning cold, and less people were outside. Those that were wore trench coats and furry jackets, all with the obvious need to look gorgeous even when the weather didn't permit exposed skin.\n\n\"I've heard of Mekhet entering Twilight like that. Out of body experiences, done at will. Lucas told me it was possible, but it was beyond him.\" Keeping secrets from Mekhet was tricky business. They had lots of ways to learn things, and some of them weren't just about being sneaky.\n\n\"Sire says, he wants t-to teach us more about reading objects using Auspex.\"\n\nThe Spirit's Touch. Reading an object to learn about its past was definitely a useful skill, if a bit disorienting. He could still remember touching the sword Lucas had destroyed to fuel his sorcery against the Prince. The scene it'd showed him, of a man, two thousand years ago, getting his ear cut off, would stick with him for all eternity.\n\n\"It is useful. I can only barely do it, but it is useful. I should try it more often, and see what I can learn about the--\" The thing he wasn't supposed to talk about with anyone except Jack and the Begotten.\n\nNatasha stared up at him, looked around worriedly, and started walking again. \"Y-Yes, to learn about... the thing.\" Nothing slipped past her. She caught the expression on his face, and from that single glance, deduced he knew about the mysterious presence. Impressive.\n\n\"The thing.\" Well, that answered that. The little Mekhet knew about it, too. It made sense. The Prince undoubtedly did, considering Daniel's abilities. \"Does... does Samantha know?\"\n\n\"N-No! Of course not. Um, do a lot of people know?\"\n\nHe shook his head. \"Jack and myself. And the Begotten.\" Maybe the Begotten simply told the Prince, as they had Jack?\n\n\"If Jack knows, and my b-boss knows, then...\"\n\nDamien shook his head again. \"We must keep this a secret, no matter how many important people know.\"\n\n\"But, why? We d-don't even know what's going on. Why is everyone so scared b-by this?\"\n\n\"Azamel made it clear. Whatever this thing is, it's risking everyone's lives. It's damaging things like the Gauntlet, and other barriers between realms.\" He tried to shrug, to pass it off as yet another threat, like the ones they'd faced before, like the spider monster or the hunters, but the shrug died halfway. \"It's making me nervous, like there's a ticking time bomb underneath our feet.\"\n\nThat earned a shiver from the small woman.\n\n\"Yeah. It's... it's scary. This rumor has b-been going around for a while, but nothing's come of it.\"\n\n\"There's also a rumor going around that Maria might be trying to perform resurrection.\" He glanced Natasha's way to see if she'd heard it. From the way her eyes flicked to him and then down, she had.\n\n\"Yeah.\"\n\n\"Know anything of it? She was your old boss.\"\n\nShe raised a brow at him. \"She's your current b-boss.\"\n\n\"Touch\u00e9. So, I guess neither of us know anything.\"\n\n\"I think... think m-maybe I should see if the Uratha can help learn anything. Spirits might be involved.\"\n\nHe nodded. \"Ok. I'll try and get closer to Maria, see if I can get something out of her. But...\"\n\n\"But?\"\n\n\"But, I've already been getting closer to Maria as the months have gone on, and have seen no suggestion that she's reaching into other realms.\" He raised his fingers to air quote 'other realms'. It was such an absurd concept, and yet, it'd become a regular part of his life the past couple years.\n\nWhat if Heaven and Hell truly existed? If realms of spirits and dreams existed, then maybe Heaven and Hell did. He'd always thought they did, but there was a difference between a realm existing as some sort of unknowable thing, a background idea, a belief based on faith, versus something that existed as an actual thing to be touched. It almost sullied the idea.\n\nThe more he learned about the world, the more he believed God must exist, but that his existence couldn't be accurately defined by the Bible or the Testament of Longinus. Perhaps God was as the new age philosophers and spiritual sorts believed, a being that was the universe, literally, and that everyone was literally a part of God. Or, maybe, God was some sort of machine, and the physical realm, the spirit realm, the dream realm, and whatever else existed out there, were part of some kind of resource harvester and simulation, like the Matrix.\n\nScary.\n\n\"I... I know she loved Lucas,\" Tash said. \"B-But, she accepts that he was horrible. I have a hard time imagining she would just... try and d-do something like that.\"\n\n\"Me too.\" Cause, as much of a cold hard ass Maria was, she also had a soft side to her, and a wise one. She may have been sad and alone, but he doubted the woman would be so shortsighted as to pursue something as dangerous as communing with deadly, perhaps evil spirits, for something as selfish as resurrection. He hoped.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nIt wasn't easy, finding S\u00e1ndor. It took a whole week, actually. Jack had to visit Azamel twice, and call Damien four times to get him to ask Fiona about it, before anyone managed to provide a hint on where S\u00e1ndor was. No one knew. The man kept to himself.\n\nBut Fiona being Fiona, rambunctious and filled with wanderlust, apparently managed to track S\u00e1ndor based on his movements, and intercept him to deliver Jack's message.\n\nJack waited for him outside his mansion, sitting on the stairs in front of the huge front door. Eventually, the Begotten walked up the driveway, alone, an unreadable expression on his face. Stern, cold. It wasn't exactly resting bitch face, so much as the man seemed void of emotion. Someone who didn't know his circumstance would probably assume he was angry, or indeed had resting bitch face. To Jack, it was clear he was a scarred, broken man, doing his best to keep the rage inside where it wouldn't destroy everything around him.\n\nThat was the problem with revenge. It might start allowing someone to heal from trauma, but it wouldn't heal damage itself. Only time would do that, and a couple weeks was nothing.\n\nJack stood up and gave a small wave. \"Hey.\"\n\n\"Hey.\" The taller man stopped in front of the stairs, and looked up at the huge building. \"You vampires and your need for... boastful habitation.\"\n\nJack laughed, and pushed open the door. \"Yeah, it is pretty ridiculous. Ventrue are the worst for it.\"\n\nS\u00e1ndor followed him in, looking left and right at the mansion and its beautiful, royal, over-the-top Victorian decor. \"I suppose it's no different than kings and queens living in castles.\"\n\n\"You old enough to have seen that? Like, medieval ages?\"\n\n\"No. I am... about two hundred years old, I think. I was born in Romania, and left quite young.\"\n\nA gargoyle from Romania. Heh.\n\n\"Judging from what Azamel told me, you must have started having nightmares at some point, about a gargoyle? Trying to... eat you?\"\n\nWith a heavy sigh, S\u00e1ndor nodded as he followed Jack, eyes up and taking in the sights of the huge, master staircase, and the chandelier. \"Yes. It's one of the reasons I fled my home. I thought I was cursed, and that the monster would devour me. But, the nightmares followed me across the ocean.\"\n\n\"Across the ocean? So you did what Antoinette did, came to North America during the colonization period.\"\n\n\"Not long after that period was done, yes. I believe your Prince came here a hundred years before I did.\" S\u00e1ndor was talking a lot more than Jack figured he would. Either he wasn't as wholly miserable as he used to be anymore, or Jennifer had started to open him up.\n\nJack sat at the top of the stairs. S\u00e1ndor raised a brow at him, slightly of course, and eventually sat down beside him. There were couches and shit, fancy rooms and whatnot Jack could have taken the man to, but, none of them felt natural or right. It was better like this.\n\n\"Still, that's really old. You must be pretty damn strong, in more ways than obvious.\"\n\n\"I... suppose.\"\n\nJack shrugged and gestured to the man. \"We had a fist fight, but that's it. Begotten can do more than that, can't they? I've seen Athalia bury an entire area in darkness, and start slicing things at random like a... well, a nightmare. I've seen Fiona spin web. We've both seen that Mark asshole sneak around. What can you do?\"\n\nS\u00e1ndor thought about it for a moment, eyes pointed down at the stairs he sat on. \"I'd rather not say.\"\n\n\"Heh, good.\" Jack smiled at the man when S\u00e1ndor looked at him, confused. \"I didn't have Azamel in that list, cause I don't know what she can do. I'm sure she can do a lot, but her abilities are a mystery. I'm sure that's intentional. She's smart.\"\n\n\"She is.\"\n\n\"And she's dying.\"\n\n\"Yes... she is.\"\n\n\"And the three Begotten she's been taking care of, they'll be leaderless without her. Or, I should say, without protection.\"\n\n\"They're Begotten, capable of defending themselves.\" His tone grew dark. \"Why?\"\n\nWelp, time to make the pitch. \"Azamel wants you to meet the others, and become... well, their new protector, when she's gone.\"\n\nS\u00e1ndor grunted, eyes still pointed down. But, Jack could see he was thinking about it.\n\n\"Azamel overestimates me.\"\n\n\"Does she? You said yourself you're super old. And, I'm sure if you'd been in control while I was fighting your Horror, the fight would have gone differently.\" Who knew what sort of crazy things the ancient creature could do. Apparently he'd invaded Eric's dreams before, so it wasn't like S\u00e1ndor didn't have tricks up his sleeve. The Begotten could do more than just physical things.\n\n\"I am strong, and capable. But despite that, I still lost my family.\"\n\nAh, right. There was more going on than a broken man struggling to recover from his pain. His confidence had been shot, too. How much did he blame himself for their deaths, for not being strong enough to save them? Probably completely. Probably to the point he would have killed himself, if he'd been given a few moments of peace after killing Jeremiah.\n\nBut, he hadn't gotten it. Jennifer had latched onto him immediately, and started to insert herself and Beatrice into the man's life. Maybe she'd come to the same conclusion Jack had.\n\nThat woman was too damn smart.\n\n\"S\u00e1ndor... Jeremiah, with that witch Elen, managed to outsmart and dodge some of the oldest vampires in the world. The Prince and the sheriff were both looking for them, and couldn't find them. Isabella lost one of her men to them. I lost my sire to them. I lost my sister. I nearly lost my mother. And the only reason things didn't get worse, is because of this fucking curse inside me they woke up.\" Worse, relatively speaking. It still sucked being cursed, but its power allowed him the opportunity to bring the hunters down.\n\n\"Silver lining,\" the gargoyle said.\n\n\"Yeap. Otherwise, more Kindred would be dead, and probably all the Begotten.\"\n\n\"Your point?\"\n\n\"My point is, you can't blame yourself for this insanity. And hey, I'm all for self blaming, when it's warranted. If some shmuck walked up to your door and took you out, then killed your family, sure, blame yourself. But this was an extreme circumstance, S\u00e1ndor. Cut yourself a break. You're a powerful man, and the other Begotten need that. More than that, you've been around, and you've learned a lot more than they have. I have no idea about Mark, but Fiona's just a kid, and Athalia's... more broken than you are.\"\n\nS\u00e1ndor slowly turned his head, looked at Jack for a long while, completely still, before looking at the stairs between his feet again. \"You're asking me to take up a new burden, knowing that I owe you.\"\n\n\"Yep.\"\n\n\"I... suppose I should speak with Azamel again. I have been meaning to ask her, about how to better control hunger.\"\n\nJack smiled. \"Sounds like a plan.\"\n\nThe gargoyle nodded as he stood up, but only got up halfway before he sat down again. \"I have spoken with her once already though, about a different topic.\"",
        "\"Yeah?\"\n\n\"Yes. The strange tears I have seen.\"\n\nOh shit. \"You've seen them?\"\n\n\"I have. I don't know who's made them or why they're there. But they're there, around where Dolareido exists.\"\n\n\"And you've never seen them elsewhere?\"\n\nS\u00e1ndor shook his head. \"No. Whatever they are, they are unique to Dolareido.\"\n\n\"Can... can you take me to one of them?\"\n\n\"Yes, but so could the other Begotten.\"\n\nJack nodded. \"They could, but sunrise is in a few hours, and it could take time to get Damien and Fiona, or Azamel involved. Besides, we're just gonna take a look, not go through it or anything. Let's go.\"\n\nS\u00e1ndor nodded. No arguing, no convincing, he just did. Awesome. The two of them got up, and Jack followed him to the front door.\n\nExcept, opening the door revealed someone about to knock.\n\n\"Clara?\" Oh shit shit.\n\n\"Jack.\" She smiled at him, then at S\u00e1ndor, then at the mansion as she looked past. \"Jesus. This place is right out of a romance novel.\"\n\n\"It's very over the top, isn't it?\"\n\n\"Yeah. Uh... can I come in?\" She tilted her head to the side as she realized what was happening. \"Oh, you were leaving. Figured you just got the door for me.\"\n\n\"No, uh, I didn't. S\u00e1ndor and I were going to check something out.\"\n\n\"Check something out?\"\n\n\"Yeah, um, something important.\" Jack looked to S\u00e1ndor, but the Begotten kept his mouth shut, arms folded across his chest. Right, great, now was a great time for him to stop talking, instead of being useful and saying something that might get Clara to leave. The Uratha didn't know about the weird presence in Dolareido, and he wanted to keep it that way. For all he knew, one of them was the culprit. Uratha could cross the Gauntlet using their natural abilities, so maybe one of them was doing the damage.\n\n\"You're... going to look into the strangeness happening, aren't you?\"\n\n\"Strangeness?\" Fuck.\n\n\"Don't even bother trying to pretend you don't know what I'm talking about. You're not that good a liar, not yet.\"\n\nFuck fuck.\n\n\"It's nothing personal, Clara. But, you know, vampires and the whole Danse and shit, right? I don't know what's going on, and I need more information. At the same time, the less people who know, the better.\"\n\n\"Well that's too bad, because I'm calling in my favor.\"\n\n\"You can't be serious.\"\n\n\"Totally,\" she said, the language announcing her age. A bit older than she looked. \"Something's going on in this city, and I want to know what. Spirits are talking about resurrection, and more than a few have mentioned the 'ghost lady', Maria.\" She air quoted ghost lady. \"So yeah, the pack's getting pretty nervous about that, cause we don't know why the fuck spirits would be involved in that. And more than a few of the pack have seen some strange tears in the Hisil, like, big cuts in the ground and in walls and shit.\"\n\nJack winced with every sentence. Not because he didn't already know these things, but because Clara was being so honest about it. No effort to twist her words, to say less than she knew, or to imply things rather than say them. No subtext, no manipulation, she just said them.\n\nAnd he owed her. Anything she wanted.\n\n\"You... you want in,\" he said.\n\n\"Yeap.\"\n\n\"Can you promise me you won't tell anyone?\"\n\nShe frowned and folded her arms across her chest. \"Not even my pack?\"\n\n\"Yeah.\"\n\n\"Why the fuck wouldn't I tell them?\"\n\n\"Because we don't know what's happening, or who's causing it. This is tricky business, Clara. For all I know, one of your pack is possessed and is up to something.\"\n\nShe didn't look convinced, but after a while, she sighed and nodded. \"I can't promise I won't tell them for forever, but I'll keep my mouth shut for now.\"\n\n\"Good enough.\" He opened his mouth, but looked left and right first, before shutting it. \"Actually, let's walk and talk. The house could be bugged.\"\n\n\"Bugged?\"\n\nNodding, he stepped out onto the huge driveway. Scully and Mulder flew overhead, quiet, and blending into the night sky perfectly. With how many crows they had in Dolareido, those two could hide in plain sight, even up in Rich Side.\n\n\"Like I said, no one knows what's going on, except that it's a big deal. So until I have some kinda clue, I need to be smart about this.\" Once the three of them had some distance behind them, he felt comfortable enough to continue. \"Something's been tearing at the realms. Like, not just the spirit realm, but the dream one, too.\"\n\n\"The dream one too?\"\n\n\"Yes,\" S\u00e1ndor said.\n\nJack gestured to the Begotten as he walked. \"The Begotten were the first to find out about it. Azamel told me, not long after she arrived in the city. So whatever this thing is, it's been at it since then, at least.\"\n\n\"Who else knows?\"\n\n\"Natasha and Damien. The Prince and the sheriff. And the Begotten.\" He was taking a huge risk trusting Clara, but, he couldn't help himself. She was that sort of person, someone he could trust, and someone he wanted to trust.\n\nShe raised a brow. \"That's it? Five vampires and five monsters? If this is so dangerous, then--\"\n\n\"We don't know who's doing it.\"\n\n\"So?\"\n\n\"So, if we spread the word about what's happening, whoever they are might change tactics.\" He shrugged. \"Don't let the enemy know you know.\"\n\n\"Ah, like Churchill and Coventry.\"\n\nJack shook his head. \"That's a myth.\"\n\n\"Really?\"\n\n\"Really. But, the idea still applies. If we're going to catch this thing or person, and take advantage when they make a mistake, we have a better chance if they don't know we know.\" But after a second, he shrugged and sighed. \"Of course, they might know we know. The evidence hasn't exactly been hidden.\"\n\n\"So, you think... what? That Maria is--\"\n\n\"We don't know it's Maria.\"\n\nClara took his shoulder and forced him to look at her. \"David says the spirits are talking to Maria, the same spirits we've seen hanging around some of these strange tears. Red wraiths.\"\n\nJack shivered. Red wraiths. The one encounter he'd had with them had not been fun, with him, Damien, and Fiona running for their lives until Clara and Flowing Sanctuary showed up and saved them.\n\n\"Those red spirits,\" Jack said. \"They were obsessed with flesh.\"\n\n\"Yes, they are, kinda like how someone attempting to, oh I don't know, create a flesh body might be? We're pretty sure they work for Black Blood, and... and if there's anyone capable of something as crazy as resurrection, it's Black Blood.\" It was her turn to shiver. \"Black Blood's nothing like anything the pack has seen before. Avery warned us, but... fuck.\"\n\n\"I don't want to blame Maria just yet. Not enough evidence. And she's not some psycho crazy woman who'd risk destroying the city and everyone in it, for something as selfish as resurrecting a dead lover.\" He hoped. \"And besides, if she was working with Black Blood, then Jacob must have tried something like this before, considering how close he is with the spirit. Minerva's still dead.\"\n\n\"Maybe Jacob's using her? Using her for a trial run? Vamps like him play the long game.\"\n\nSighing, Jack stopped walking as the driveway joined the streets of Dolareido. They were still in Rich Side, and no one walked the streets in the middle of the night in Rich Side. Safe to keep talking, mostly.\n\n\"Maybe. But--\" He blinked, looked down, and rubbed his head. \"Mary said she could see tears, too.\"\n\n\"Mary? Your... the ghost. She's seen tears too?\"\n\n\"Yes. So something's happening in, uh, whatever place it is that ghosts go to when invisible, I guess.\"\n\nS\u00e1ndor finally spoke up. \"It sounds like, whatever it is that's causing these tears, is doing so across many realms.\"\n\n\"S\u00e1ndor and I were going to go check out one of the tears, one he found in the dream world.\"\n\n\"Just you two? I... I suppose considering it's you two, you could probably handle anything thrown at you.\"\n\nJack grinned at her. Much as it was the curse, not Jack, that had so much power to throw around, he couldn't help but feel good about what she said. Typical Ventrue.\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\nS\u00e1ndor found them a place similar to one of his lairs, and opened a door. It didn't matter how powerful Jack became, he doubted any Kindred would ever feel comfortable leaving the world of flesh and blood. In Dreamland, his powers were far less useful.\n\nFor the Begotten, it was the other way around. S\u00e1ndor's human body faded in the shadows, and the enormous gargoyle emerged, like Pennywise stepping into its lair and exposing its spider-like monstrous form. And damn, S\u00e1ndor was tall. At the sight of the monster stepping out of the black and into the halls of his strange dream castle, Clara whistled.\n\nJack eyed her, eyebrow raised.\n\n\"What?\" She said, shrugging. \"Dude's tall, dark, and handsome.\"\n\n\"He also has four arms, and horns and wings and stuff.\"\n\n\"Heh, tell that to Jessy. Fur and a snout don't seem to bother her.\"\n\nJack half expected S\u00e1ndor to jump in and say something, considering they were basically talking about how several women seemed to find his transformed body attractive. But the huge beast said nothing. His human body had a habit of being quiet and still. His enormous gargoyle body frequently went dead silent and completely still, like a statue.\n\n\"And,\" she continued, \"you saw one of the pack at the party last week, right? Practically getting DP'd on the floor? I know one of those vamps has a werewolf kink, and has asked her about transforming for sex.\"\n\n\"Into the full werewolf form, right? Not, like... the wolf form?\"\n\nClara choked on a laugh. \"No you sick bastard, the full Gauru form. Dangerous as fuck, but some of you vampires are kinky fuckers,\" she said, still laughing. Jack laughed too. Clara had a great laugh, and he couldn't help himself. \"S\u00e1ndor,\" she continued, \"you uh... I mean, feel free to not answer, but I'm pretty sure that Fiona girl can have sex while in her spider body, especially with how she drapes herself all over Damien while in it. Is that something your Horror's body can do? Cause if no, there's a few women I could probably update.\"\n\nS\u00e1ndor snorted, a loud, heavy sound, but in the following silence, he sighed. \"I can.\"\n\nClara laughed harder, and poor S\u00e1ndor stared at the two of them with his typical cold, stone face. It wasn't a pure, silly laugh though. Something else came with it, a sort of sad sound, and Jack's laugh slowly died off as he watched her. She was trying to make S\u00e1ndor laugh, to spread her laughter to him. Maybe it was a canine thing, a desire to share joy, or uplift others. It wasn't working very well on S\u00e1ndor, but it made Jack smile.\n\n\"It figures,\" she said, after her laughter died down. \"Come to Slut City, and everyone gets laid, in every way possible.\"\n\nS\u00e1ndor snorted again, shook out his wings, and started down the path outside. \"Follow.\"\n\nJack and Clara watched the enormous creature push open the giant wooden doors, and lead them outside, to the narrow cliff path they'd seen before. But before they stepped out after him, Jack leaned in to Clara.\n\n\"I don't think we should touch that subject with him.\"\n\n\"What, sex?\"\n\n\"Sex, romance, anything like that. He's still really beat up about his family.\"\n\n\"Ugh, my bad. Figured Jen would have gotten into his pants already, considering, you know, it's Dolareido.\"\n\n\"He's not from Dolareido.\" And probably didn't frame everything in a sexual context, like basically everyone in Dolareido did.\n\nNodding, Clara stepped out onto the cliff, and sucked in a breath. It was windy, it was night time, and the cliff road wasn't exactly wide. Ten feet across sounded like plenty of space, until a misstep meant careening off a mountain and into fucking clouds, that likely hid an astronomical drop beneath. Then ten feet was nothing at all, and the each gust of wind felt like an attempt from God to murder them.\n\n\"Where is the tear?\" Jack called out over the wind.\n\n\"Ahead, past the woods.\"\n\n\"Past?\" Jack raised a brow, and stared out past the haunted village, and into the woods he and the gargoyle had torn up a couple weeks ago. \"I thought those woods were endless.\"\n\n\"They are, in this chamber. You can reach another chamber from within.\"\n\nShivering, Jack rubbed his arms as he nodded and followed after. He didn't like this place. It wasn't because it was a haunted village; that was kinda awesome, and something any vampire would love to take advantage of, or at least visit. It was his memories of the village that bothered him. The first memories of the village, before he'd recovered from the curse's possession, were his most prominent ones, and they felt tainted. Dirty.\n\nIt only got worse as he followed the titan through the woods. A lot of the damage the two of them had inflicted was repaired, but not all of it.\n\n\"Jesus,\" he said. \"I didn't really get how much... destruction we'd caused.\"\n\nDestroyed trees, smashed tree trunks, and lots and lots of blood. The corpses were gone, and he could vaguely remember S\u00e1ndor collecting them to bury them or something, but the blood was still there. Blood, guts, and a lot of dead rats and crows. He was happy he didn't bring Scully and Mulder into the dream this time. This couldn't have been an easy sight for them, either. At least the bodies weren't rotting. Maybe bacteria and such couldn't survive in the nightmare. If nightmare chambers were created by scarring, powerful incidents in the real world, then it made sense that the nightmare would only handle things that fit whatever defined the nightmare.\n\nIf the legion he'd summoned had died in Fiona's jungle, he bet they'd have started to rot, rotted thoroughly, and be devoured by carrion eaters by now. But in this nightmare, the focus had apparently been a scary, haunted village, with a scary, haunted castle, on a scary cliff edge, with scary, haunted woods between the village, and any hope of escape.\n\nS\u00e1ndor snorted, but kept walking. Despite his size, he knew where to step to avoid trees, zigzagging and slithering around the thick trunks and sharp branches. Clara and Jack followed in his wake, since it seemed like the best path. Any misstep could mean stepping on sharp branch, or getting one in the face, especially with how dark it was.\n\nThey came to a tree. A big, nasty, fat, ugly tree.\n\n\"I've seen this tree before,\" Clara said. Her night vision was much better than his. \"Some idiots with an enormous tree harvester were sawing down trees, and they cut it down, and this huge evil black ooze creature came out.\"\n\nJack choked on a snort. \"Was it voiced by Tim Curry?\"\n\nShe grinned at him. \"It was. You are way too young to have seen that movie.\"\n\n\"Ha. Well, Mom liked the old Disney movies, collected them, and insisted Mary and I watch them.\"\n\n\"Most definitely not a Disney movie.\"\n\nHe shrugged. \"That's Mom for ya. She couldn't tell the difference.\"\n\nBefore they could start laughing, S\u00e1ndor motioned toward the enormous, black mouth of the tree. On closer inspection, it wasn't a hollowed trunk, like Jack figured it was. It was an endless cave, black and more black, a tunnel into nowhere. Considering the size of the tree, even the giant gargoyle could fit, and as Clara and Jack stared, the titan folded his wings snug to his back, leaned forward, and walked into the tree on all fours, tail slithering in the air behind him.\n\n\"Maybe he's taking us to a Christmas wonderland,\" Clara said. \"Or a Halloween one.\"\n\n\"Yeah, maybe.\" Shrugging, he followed after S\u00e1ndor, happy to get out of the nasty forest and the memories it stirred.\n\nOnce they were through the tree, it was obvious where they had come out. A closet. And, upon further inspection, a hospital supply closet. And a very old hospital, at that.\n\n\"Ugh, I don't even want to know how this nightmare got created,\" Clara said.\n\nS\u00e1ndor rumbled as he pushed his way through the large doorway of the closet. Too big. His shoulders and horns tore the door frame apart, and Jack and Clara winced and sucked air between their teeth, as the titanic creature ripped the wall half apart on his way out.\n\n\"This doesn't seem like a very practical entrance for you, S\u00e1ndor,\" Jack said.\n\n\"It's not. I found this chamber recently, hovering in the dream near the Terrence Hospital. I still need to rearrange my lair to fit them together, if I decide to keep it.\"\n\nRight, Begotten doing Begotten things, manipulating the very dimension of their existence.\n\nJack looked around at the hospital hallway, and sighed. Yeah, this was a hospital from probably sixty or eighty years ago, which meant treatments were brutal and inefficient compared to today. People were also a lot more superstitious, and believed in things like ghosts. He rolled his eyes. Ok, maybe not superstitious if they were actually correct, but he was pretty sure almost all those people who said they'd seen ghosts, were lying or had overactive imaginations.\n\n\"We're in the basement, right?\" Clara said. She looked up at the old bulbs in some very tacky glass shells, and down at the hard, dirty floor, and white walls.\n\n\"Yes,\" the gargoyle said. \"I sensed a disturbance, when I touched this chamber. It led me here.\" He motioned for them to follow, and they did.\n\nThe old hospital was creepy as fuck. The shitty old lights flickered, and didn't provide nearly as much light as they should have. The nearby doors, all closed, showed darkness underneath them, and a lot of the shadows moved, as if someone on the other side of the door was casting a shadow, and walking around. They moved with heavy footsteps, deep, resounding, and alien. Whispers drifted through the air, tiny things Jack barely noticed, but when he did, he could hear words hidden in the rasps.\n\n'You're going to die here. There's no saving you.'\n\nHe pushed the voices away. If he'd been human, they'd have been terrifying. As a vampire, they were still terrifying, but not as much. Plus, the knowledge that he was friends with the nightmare's owner definitely lightened the fear factor.\n\nFollowing the giant creature through the hallway was kind of funny, once he managed to ignore the obviously haunted hospital's attempts to scare him. S\u00e1ndor was so damn huge, he had to walk on all fours, and keep his ludicrously massive wings snug to his back.\n\nHe stopped eventually, and sat down not unlike a dog would, and gestured down the hall ahead of him. Jack and Clara looked at each other, shrugged, and stepped around the beast. Both of them gasped at the sight of the tear.\n\n\"I've seen one other tear,\" S\u00e1ndor said, \"but this one is deep.\"\n\n\"Yeah, I can see that,\" Jack whispered, eyes wide and locked onto what he was seeing.\n\nTear didn't do the scene justice. It was like someone had taken a claw the size of a car, and dragged it across the air, somehow cutting through it and into the world and reality behind it. It floated in the air a foot above the ground, and reached from one side of the wide hallway to the other. The edges of the tear were frayed, and the gap of the wound was big enough that Jack could have jumped through it if he wanted to.\n\nHe could see things, glowing green things on the other side. They were moving."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "slow",
        "violent",
        "romance",
        "paranormal romance",
        "suspense",
        "vampire",
        "werewolf",
        "monster"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-08-ch-02"
}