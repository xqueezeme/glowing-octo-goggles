{
    "title": "And Soon My Evil Plan... Ch. 01",
    "pages": [
        "And Soon my Evil Plan will be Complete! Chapter 01\n\n*\n\nSynopsis: It's not an easy life being an Evil Mad Scientist (tm), but it has its moments... especially when your arch nemesis the beautiful Super-Heroine finds herself helpless in your power. Mwuahahaha! Sometimes though, there are more interesting things in life than becoming an omnipotent Evil Overlord... and rescuing a lovely damsel in distress does have some definite rewards. A screwy tale of super-romance.\n\nSex contents: Some Sex\n\nGenre: Humor/Romance\n\nCodes: Science Fiction, Superhero, Humor, Slow\n\n*********\n\nIt's never a good day when BetaGirl shows up on your front door step. It gets worse usually when she just knocks a hole through the roof and plants herself sternly in front of your desk in your innermost sanctum sanctorium. She cracked her knuckles and started to tap her right toe in anticipation of performing some bodily harm upon my august personage. The glare she gave me was certainly world class &ndash; and well worthy of the world's famous and renown super-heroine. \n\nI suppose it was warranted. After all, according to the tabloids I was Public Enemy #1 and an insane super-villain bent upon either global anarchy or some fiendish plot to become the greatest evil overlord since Genghis Khan. \n\nAbsolute nonsense of course. No one in their right mind would want to be an Evil Overlord &trade; anyway. The hours are bad, the pay is irregular and the most beautiful maidens in your kingdom are either crazier than you are or will fall in love with your archenemy and plot your downfall. Also, it's nearly impossible to get good qualified Minions of Evil &trade; anymore. You certainly can't find any good ones on either Monster.com or Craigslist. I gave up the idea a long time ago&hellip; besides, I like sleeping in late. A few years ago I tried to grow a really evil looking beard, but it really just made me look Emo, so I shaved it off. Spock and Vincent Price could pull it off, but these are sadder and wussier times. \n\nEven my best David Nivenesque disarming smile didn't do a thing to put her at ease and she marched up to me with barely controlled fury.\n\nI couldn't think of anything specific that I'd done recently to piss her off. Except of course:\n\n- Sending the plague of WALL-E robots to dismantle General Motors corporate headquarters building. Sorry, but it looked like junk to me, and they'd really ticked me off.\n\n- Perhaps it was the misunderstanding concerning that global television broadcast that showed the Prime Minster of Japan sodomizing the CEO of Honda in full leather fetish gear, on all channels (photoshopped of course, but by professionals). \n\n- Unleashing the FemBots, designed to look like members of the Brady Bunch and the Osmond and Partridge families, to terrorize and shut down all broadcasting operations at CNN, FOX, NBC &amp; the BBC for nearly a week had certainly annoyed the powers that be. CBS and ABC had already broadcast retractions of their various slurs to my good name and character in the nick of time, and PBS was still trying to get me to appear on an episode of Frontline and avoided the story entirely. Being called an \"insane madman\" on worldwide television just gets right up my nose and makes me really annoyed!\n\n- Then of course there was the trivially minor matter of the rogue giant Buckyball that seized and engulfed the entire Board of Directors of General Electric and bounced them to a specially prepared desert island I'd carefully cultivated with rabid wombats and specimens of Hallucigenia sparsa. \n\n- Concerning the relatively unimportant matter of the Director of the Department of Energy becoming permanently affixed to his office toilet seat by a bizarre mutant strain of flesh eating bacteria that continually excretes superglue, this was merely a slight misunderstanding&hellip; I had been actually trying for his Deputy Director, the guy who actually did 95% of the real work &ndash; and the gentleman who seemed the most upset by my various discoveries.\n\n- I do admit that sending the horde of bio-engineered flying monkeys to invade the White House during a formal state dinner for the Queen of England might have been a tad bit overdone. The part where they spray painted all over the walls and called the President a poopy-head was fine, but they exhibited a bit too much enthusiasm with the dung throwing part of program. The Queen of England, an unfortunate target of collateral damage, sent me a rather stern note, and I had to locate an extremely rare piece of Irish Balleek china to send for an apology gift that wasn't already in the Royal collection to soothe her ruffled nerves. I didn't feel like dealing with MI-5 this week; those chaps are absolutely humorless.\n\nSo much for what I'd been up to the last two weeks or so. I could go on with a few highlights from last month, but you get the idea. \n\nI'd really been pretty much a good boy lately and really didn't see the need for one of Earth's only two legitimate \"A\" level Superheroes to come busting into my hidden fortress and start hassling me. Unless she also had a chunk of stock or her 401k retirement plan in eBay. Those new DSR changes really screwed up my Powerseller account, and I, in return, have been devoting my more recent efforts into painstakingly destroying their stock value painfully and slowly, until soon they'll become a penny stock! Ha!\n\nBetaGirl is a good looking young thing. Honey blonde hair and good tits with a firm tight ass that her clinging spandex costume just barely restrains while holding all of the rest of her goodies into place. She doesn't look a day over mid-twenties which is remarkable since she's been in the super-heroine business alone for well over thirty years. What a waste of a very nice looking piece of ass though, she's in love with her work and proudly admits that she's much too busy for a boyfriend. The National Enquirer has a standing million dollar reward for any photo showing her in any sort of romantic embrace with a man, or any woman for that matter. The Weekly World News maintains she's in a love triangle with a space alien and Bat Boy, but those pics make even FARK photoshops look believable in comparison. \n\nI wondered if she was even more socially awkward than I am. Maybe this was just her way of wanting to ask me out on a date? \n\nToday however, she was certainly not in the mood for any romantic dalliance, or at least not with me. Dusting the debris from my ceiling off of her magnificent spandex covered breasts, she stopped for a one-liner or two. Something along the lines of \"Desist! Foul miscreant your reign of evil is now at an end!\" Yawn. The flourish of her cape while she denounced me was a very nice touch I do admit. I wonder how long she had practiced that move in the mirror.\n\nI blinked a few times politely at her and then suggested that she try the next door down the hall for that particular miscreant in question, but that he might be out to lunch, so then she'd have to either wait or try back after 1:30. Me? I'm just the janitor&hellip; never mind the big office with the fancy desk and the bank of very large computers right behind me.\n\nBetaGirl might be blonde but she's not stupid. Reaching across my desk she grabbed me by the throat and lifted me a good five inches off of the ground. A pretty neat trick since she's barely 5'8\" and I'm a good 6'3\". I think she cheated and hovered off the ground a little bit, but I was too busy being strangled to appreciate how the feat was done.\n\n\"Wicked Worm! Where's the master shut-off switch to shut down your insidious engines of inequitable evil?\" She actually said a good bit more, using other words that I'd never heard of in over 12 years of college while gaining six Doctorates. None of them were in English, however, but she probably just made the words up anyway to sound more threatening. \n\nShe had her hands around my windpipe a bit too firmly for me to reply, but I glanced over towards a large blinking machine with lots of fancy flashing lights and a large red button, marked in cheerful day glow letters \"Danger &ndash; Do Not Push!\" \n\nThis seemed to satisfy her and she tossed me aside like a ragdoll for a moment to commence the shutdown of my computer systems by pressing that button. This action did indeed shut down nearly all of the machinery in the room&hellip; and also released an invisible cloud of paralytic nerve toxin that I am immunized against. My 'real' emergency shutdown button is in my \"command center\" in the basement, behind a door marked \"sewage valves\", accessible through an always unlocked janitor's broom closet. I have a laptop computer down there that can directly connect with secure Administrators rights, but I can usually perform nearly everything just as well from my bio-implant connection inside my skull to my real master control center, which is under a glacier in northern Greenland.\n\nI'll be honest with you; I didn't really have any contingency plans made for this particular moment in time. Over confidence I guess &ndash; when you're in the Evil Overlord business you never think that bad things will happen to you. Having adventures certainly will make you late for supper!\n\nChecking to make sure that BetaGirl was very much incapacitated, I grudgingly gave the order to evacuate the site but really there really wasn't too much in the way of last minute stuff to grab. I keep nearly all of my research work on my computer so I really just had to grab a few important and/or expensive pieces of equipment. I only have about ten full-time employees (i.e. evil henchmen), and they'd do fine getting out by themselves in one of the escape pods to my primary backup headquarters. Besides, having to perform an emergency escape gains them an immediate week of paid travel time/vacation&hellip; it's in their contract. \n\nAll my secret escape pods come standard with a Corinthian leather interior, dual climate zone comfort system, satellite TV including the Spice channel, an AM/FM/CD/DVD player, an emergency small arms cache, first aid kit, foreign language phrase book, $1000 each in dollars, pounds, yen and gold, a small but decent wine selection, a box of Hershey chocolate bars, and a pair of fuzzy dice hanging from the rear view mirror. A fellow could have a pretty good weekend in Vegas with all of that stuff! \n\nLoyal service should be rewarded... which is how it becomes \"loyal\" service in the first place. Never shoot the messenger or take your frustration out on the flunkeys; honest messengers and good employees are hard to come by when you are in the Evil Overlord business.\n\nThis had been my main headquarters, on this remote island off the coast of Maine, but I had several other alternates already constructed and waiting for stand-by use. Never build just one of anything&hellip; I have nearly identical back-up island retreats off of the coast of Oregon, North Carolina, Cuba, Haiti and the Bahama's, not to mention a few mountain retreats in Arizona, Peru and the Himalayas. I guess it's time to start building next on that small island off of the coast of Turkey now as well.\n\nIt didn't take me long to grab the two or three essential things that I didn't want to live without and toss them into my own escape pod. At the last minute, I decided to bring BetaGirl along with me. Oh, she would have been unhurt when my underground base went kaboom into rubble, but it just didn't seem 'polite' to do that to her. Besides, my conversational skills with women were a bit rusty and this would be good social exercise for me.\n\nNormally, this particular paralytic agent would only work for up to ten hours or so, and I figured BetaGirl, being what she was, could probably fight clear of it in just an hour or two. Fortunately, I had a few other fun pharmacological goodies that I could make her drink that would prolong her stupor long enough to have a pleasant and delightful weekend with her, albeit without a lot of actual conversation.\n\nNo! I most certainly not did not perform any 'outrages' or take any familiarities with her near helpless and delectable body! Just what sort of villain do you take me for? Simply because I am evil does not mean I am wasteful, and it's wasteful to kill or molest prime Grade-A dalliance material. After all, I might have some use for her at some point. Besides, gloating over captives is really overrated. \n\nI get lots of marriage offers regularly in my email. Probably from the same sort of odd and weirdly fucked up women that correspond regularly with serial murderers in prison. There are, after all, hordes of beautiful young women out there just waiting to marry someone as rich and powerful as I am. I will not, under any circumstances, marry a woman I know to be a faithless, conniving, back-stabbing witch simply because I am absolutely desperate to perpetuate my family line. Of course, we can still date and bump uglies occasionally. I think now that I should have stopped for awhile after my second PhD, and gone to a few spring breaks and gotten laid instead. However, since I was only about twelve at the time I'm not sure how much success I would have had at the frat keggers. Still it would have been educational.\n\nIt was too early for Spring Break on some nice sunny beach, but there was still good late season skiing up at Whistler, so we went up there for a long weekend of zombie snow bunny fun. I had to admit it was a lot of fun to put her on skis and push her down a mountain. Ok, she hit a lot of trees&hellip; hard and fast, and went over a cliff or two, but it wasn't as if she could feel it. And she looked as if she needed the fresh air anyway. I took a lot of videos and posted the better cringe worthy 'Sonny Bono' moments up on YouTube. \n\nWhen we had enough fun in the snow and sun, we went shopping for a nice fine antique Persian rug and I rolled BetaGirl up in it and had her packaged for immediate air express freight shipment back to Washington. I'm not sure if they'd let her keep the rug, I don't know if government employees at her civil service level are allowed to keep gifts. Still, I thought it would be fun to ship her back to the President in the exact same manner that Cleopatra had herself delivered to Julius Caesar in Alexandria.\n\nThis should have given me at least a month to at least get things organized at my new North Carolina island refuge, but it didn't quite work out as well as I had hoped. About a week later, more or less, BetaGirl reappeared on my doorstep, and in a pretty foul mood to boot. She kicked down the front door this time (normal sized, those silly huge metal fortress doors are too slow to open and close and are a pain to properly install) and every other door in the place until she found me hiding in my janitor's closet. The janitor's uniform and the stage makeup didn't fool her one bit and she just about squeezed my neck so hard that my head nearly popped off.\n\nThis time, she pressed the correct tiny black button to shut everything down, but still for her troubles she got pricked by a small drugged micro-needle that sent her straight off to sleepy-time land. What a shame&hellip; she'd come all prepared this time with fancy nose filters all ready for more poison gas, but a smart Evil Overlord never pulls the same trick twice. There aren't many things that will pierce BetaGirl's virtually invulnerable skin, but I'd discovered a few and made more than a few emergency contingency plans. I chucked her drugged body into an escape pod and make my own final preparations for escape&hellip; again.\n\nTime to evacuate another citadel of evil. This was starting to get expensive! \n\nMost of the staff was still on vacation from the last evacuation, but it was time for everyone to do it all over again anyway. It's a good thing that virtually everything important runs remotely from Greenland, otherwise it would be one heck of a nasty security issue to have all of my inventions and years of research unprotected on these machines. Sure things were going to go boom, but a lot of my better computer stuff is very proprietary and custom built. The only Windows PC's or Apples are strictly for 'bait' purposes and contain highly entertaining but flawed descriptions of my plans for global domination. The joke is on them&hellip; only a fool would even want to rule the world, I'll happily settle for being filthy rich instead.\n\nOff we went this time to Fort Lauderdale, and we had a lot of fun on the beach re-enacting all of my favorite scenes from the movie \"Weekend at Bernie's\", posing the stuporic BetaGirl for photos on the beach with lots of booze and half-naked drunk college kids. She was the life of the party at more than one beer bash since she could drink an endless amount of booze without falling down. I thought about sending some of the better shots to the National Enquirer, but settled instead for just posting my holiday pics on my Flicker page instead.\n\nI did leave her to detox this time from my zombie drugs in a nice soft king sized bed&hellip; also currently occupied by two other young fun loving couples too drunk and stoned to realize that they had company while they were passed out. I admit then that I couldn't resist calling the National Enquirer, People Magazine, and every other tabloid that I could think to report that BetaGirl was \"pulling a train\" at a certain Ft. Lauderdale sleazy motel room. The smart photographers took their pictures and ran before BetaGirl was coherent enough to start smashing cameras, and photographer noses. For months the tabloids were awash with increasingly sordid and unlikely tales of her recent debauchery.\n\nShe didn't look at all happy in a news conference later the next week, during which my name was regularly featured, and often with coarse language. Usually in the context of the bodily harm that she would conduct on my august personage the next time we met. I swear the woman has no sense of humor!\n\nMy next secret fortress of desolation was a remote site in the wilderness of Arizona and I actually had a few months of peace and quiet before BetaGirl tracked me down here. Before she burst out of the ground at my feet I had just time to turn on my personal forcefield and make a note to myself to re-double my layer of electronic and thermal shielding around my complex before she threw me through a few walls, ceilings and floors until my shield became disabled. I didn't like the look in her eyes that said that she'd be perfectly happy to throw me through a few more thick concrete walls, without protection, if I gave her even the slightest amount of trouble.\n\nShe did grab from my 'real' work desk a few computer disks and a folder labeled \"Project Overlord\" that was apparently left lying visible on top of my desk. The disks and folder naturally didn't contain any of my top-secret plans and instead were copies of my favorite family recipes and my notes for this season's Rotisserie Fantasy Baseball league. Imagine the government's surprise when they decode these stolen plans and find instead my instructions for making Grandma's Sunday Pot Roast, and my scouting reports of promising rookie prospects from the Winter Baseball leagues.\n\nI had a few tricks I could have pulled off to make an escape, but I was getting tired of losing expensive 'secret fortresses' that apparently weren't nearly secret enough&hellip; and my back was now absolutely killing me. I grinned as much as my mangled spine would let me and I let her put me into cuffs. She didn't bother with playing with any self-destruct buttons this time (she muttered something about dropping an asteroid on it later), so I sent the self-destruct command via my implant while she was flying me off to Phoenix and into the waiting arms of some Federal Marshals. Alas, my welcoming committee did not also include a good chiropractor. \n\nExpecting all sorts of nasty deviousness from me, the Marshalls kept me sedated for a few days until I was safely ensconced in the safest, deepest and most secure rat hole they could find to put me into. The place oozed an atmosphere of 'abandon all hope ye who enter', but I wasn't too concerned. I'd lost communication with my master computer via my implant, but I'd already given what orders I needed to. I caught up on my sleep and gave my abused back some well needed rest for a few days until my captors deemed it was time to start interrogating me, Evil Overlord #1, and the top most wanted criminal in FBI history.",
        "*************************\n\nI didn't decide as a child that I wanted to be an evil mad scientist. I hadn't thought about much of anything until I had already graduated from both Stanford and MIT by the ripe age of ten. I had my first PhD not much later and I kept adding on a fresh one every year or so until I turned twenty and ran out of subjects that interested me. I may have an IQ of approximately 270, but my attention span is decidedly lower. Fortunately I can churn out a revolutionary new patent that changes the world every odd month or so, so I'm always doing something new and different.\n\nMy 'problem', as it were, is that I don't play especially well with others and never learned how to share my toys. I work best alone, with maybe just a few other folks at hand to wash out the dirty beakers and do the scut work at the lab. By sharing, I mean that I take an extremely dim view of governments and corporations telling me that my ideas are too radical (and valuable) to be patented. \n\nExamples:\n\n<ul> <li>I created an ultra-green energy saving air conditioning and heating system that used only a tiny fraction of the costs of conventional systems. The US Department of Energy put the Patent approval on hold while they investigated the national security implications and \"conducted a few tests\". That was ten years ago. They got really pissed off when I posted all of the research last year up on my web page for anyone to read (and duplicate). </ul>\n\n</li> <ul> <li>Also in this home energy savings theme, I devised a new chemical formulation many times more thermally insulating than fiberglass or Tyvek, more than suitable for home insulation. That Patent was upheld, but the Department of Commerce did nothing when a flood of cheap Chinese product flooded the domestic market for nearly two years, never a paying me one cent in royalties. Sure, my 'revenge' put those factories out of business, but not before most of the original US and Euro makers (who had paid royalties) had gone under. </ul>\n\n</li> <ul> <li>My bio-engineered life forms that were designed to eat (and thrive) on plastic trash were declined Patent protection under advice from the Department of the Interior and the Environment Czar. Even the kook 'green' groups were more scared of the efficiency of my creations than their pollution and trash cleanup skills. So far, only Vietnam and a single remote African country are using this new biological technology&hellip; and their biggest imports are now other people's garbage. </ul>\n\n</li> <ul> <li>Want one of those practical flying cars that we were promised in the 1950's? I designed an energy source small and powerful enough to fly one&hellip; or replace those massive heavy and inefficient batteries in hybrid cars. The Departments of Commerce, Energy and State all teamed up to squash this one and the Patent disappeared into some trashcan along the way. The US Big Three automakers should have loved this, as it made every car on the road obsolete, but you'd never have known it from the howling they made. The Internet is a wonderful thing however, and Honda and BMW both read my web site religiously. Now, if they would only pay my royalties. My lawyers are in negotiations with BMW and I think the new Honda Chairman at least has learned to play ball as well&hellip; but I've got a horde of flying monkeys on standby just in case. </ul>\n\n</li> <ul> <li>How about a bio-engineered tree that could grow to the size of a redwood and be ready for harvesting in less than five years? Even better, that it can regrow back up from its' roots, thus replacing the need to replant tree stock! Nope, the Sierra Club didn't like this 'Frankentree' at all and my office got a lot of bombs in the mail for awhile. Seems the tree hugger types don't want any logging at all, let alone environmentally friendly logging that could be sustainable (and profitable). A few timber companies have started planting these, but the sabotage levels have skyrocketed so the cost savings aren't what they should be yet. Vietnam and several African counties have had better success though with their limited planning projects. </ul>\n\n</li> <ul> <li>I thought NASA would be delighted to obtain a single-stage to orbit heavy lifter that could replace the Space Shuttle, carrying triple the cargo volume while operating at a third of the cost. Apparently, this would put too many aerospace firms (and jobs in all fifty states) out of business. It also suffered from a \"not designed here\" bias. NASA was polite, but the plans remain locked up indefinitely for further peer review. A French-German-UK Euro space consortium is seriously interested in dealing, as well as some Indian and a Singapore government financed groups. I'd say the other Asian countries were equally interested in getting a piece of this action, but they've been the worst about paying other royalty payments (especially the Chinese, Koreans and Japanese). Oddly, the Vietnamese have been the best about paying me for the patents they use! </ul>\n\n</li> <ul> <li>My practical Fusion power generator would have dropped world electricity bills at least in half, and replaced the need for coal and oil burning (and polluting) power plants. Naturally, this pissed off more people than I could count. The Patent went off to Dept of Energy for 'study', again, and every oil and coal producer and their dogs sent hired assassins after me. I admit this made me lose my temper a bit, but I'd wanted to field test some exploding FemBots and homicidal flying monkeys anyway. Hey! They sent the assassins and ninjas on me first! </ul>\n\n</li> <ul> <li>Don't even get me started on the CO2 scrubbing plant that would safely and easily remove most of the extra man created auto exhaust from the air. Even Al Gore howled bloody murder! The EPA, and all of the rest of the usual left and right-wing suspects squashed this one flat too. The EU and most of Europe were a bit politer about it, but not much. Supposedly Romania has the idea of building a few of these plants if the EU votes to tax nations for carbon shares starting next year. They'll make a fortune selling off their green credit points to all of the other nations and that should get that ball rolling. </ul>\n\nI could go on, but you get the idea. A hundred brilliant ideas &ndash; and a thousand reasons why the powers that be feel that none of them should be implemented now. When I wouldn't shut up and go back into my corner they pushed&hellip; and I pushed back, much harder.\n\nFrankly, it's not so much the money&hellip; I've got billions already, but it's the lack respect. I just don't remember the US Government squashing Thomas Edison under their thumb because electric lights would put the New England whaling ships out of business. It didn't matter which political party was in charge of the White House or Congress&hellip; too many important special interests would be financially hurt by anything that would make the world a better place to live in.\n\nAnyway, now I'm public enemy number one for both the political right and the left. Some days it just doesn't pay to go to college at the age of eight. \n\nI should have kept my big mouth shut and worked on finger painting in kindergarten instead of reading a Stephen Jay Gould book and learning algebra that first week. Or else maybe I should have simply started an evangelical Tele-ministry device to get the billions of dollars I needed to enact any future Master Plans for world improvement. That way, I would not only acquire the money, but I'd also get a fanatical cult of followers that would obey my every command, should I ever need such a thing, plus I probably would have gotten laid a lot more! \n\n******\n\nI figured that I had been a captive for about five days when my tiny (but very secure) cell door opened and I was led off by a few goons without necks for my first interrogation. Actually, I could have probably escaped from my cell with the help of a few internally hidden bio-gizmos at any time but I was enjoying the peace and quiet. Besides, I really did want to get all of these little misunderstandings cleared away so I wouldn't have to replace another expensive hidden fortress. You can use all of the robotic earth movers that you want to, but in the end some live breathing workers (usually overpaid union guys) have to pour the blast resistant cement and screw in all of the light bulbs. Gloomy spooky hallways may suit my mood these days but it's bad for morale and discourages spies from skulking about, and makes harder work for my real janitors.\n\nMy interrogators looked like arrogant upper-level government twits, and I decided that a good offense was by far my best defense. They also didn't seem to like the way I smiled at them.\n\n\"I won't bother to say 'Hello', because I won't be here long enough to care to know your names anyway. This game has gotten silly and it's time to put an end to it once and for all. Effective from the moment I allowed BetaGirl to capture me and bring me to you, a countdown timer has been running and Very Bad Things &trade; are starting to happen and will continue to happen - non-stop, until I am released, with all charges against me dropped.\"\n\nThey blinked at me&hellip; a good start.\n\n\"For starters, since I've been here&hellip; have you noticed that it's been a bad week for the stock market. The Dow's down two to three thousand points already? That's just the start. The longer I stay here the longer you get to play \"How Low Can We Go?\" Wall Street will crater so bad it will make the 1929 Crash look like a joyride in comparison. When Wall Street has taken its' final dead cat bounce, then I'll start on the DAX, and the Nikkei until they're toast too. Trust me. The commodities and precious metals markets are starting to skyrocket and there won't be a ceiling in sight. Want $500 a barrel oil? Just wait and see. How about a $20 loaf of bread? It's just a matter of time now&hellip; and you're now starting to waste it.\"\n\n\"I don't want much &ndash; just approve my Patents, make sure my royalties get paid and leave me the fuck alone&hellip; after also sending over a skilled Swedish Masseuse to fix my screwed up back.\"\n\nWith that I put my hands behind my head and grinned while whistling an airy tune and refused to answer any more questions. They thought I was bluffing&hellip; not hardly. My supercomputer under the glacier in Greenland makes the fastest Cray look like a 286 era computer in comparison. I could play the world financial markets like a concert violinist&hellip; frankly, that's how I've made the majority of my fortune. The Dow and NASDAQ would crater&hellip; until my implant got in contact with my computer again to tell it to stop. \n\nGovernment idiots being what they are, I expected the situation to get very ugly before they took me seriously, and they didn't disappoint me. It took over a week for my masseuse to appear and they moved me into nicer guest quarters while the final details of my Presidential Pardon got worked out. You've got to be pragmatic when you're an Evil Overlord or publically branded as an evil mad scientist. I have no problems at all compromising with my enemies if the result will be of distinct benefit to me in the long run.\n\nThe Dow had dropped by nearly half before I put the brakes on what would have been a horrific world-wide depression. I thought it would be rubbing in salt to mention that I'd just made a bit over fifty billion in profit by 'shorting' the market, as part of my program, so I kindly avoided mentioning this little detail. They just wouldn't have appreciated the irony.\n\nA few days later I was dressed in a new nice suit and on a private plane heading for the Caribbean and never expected to see BetaGirl ever again&hellip; until she washed up nearly dead on the shores of my personal island near Andros about a year later. "
    ],
    "authorname": "Stultus",
    "tags": [
        "superhero",
        "humor",
        "reluctant",
        "bondage",
        "science fiction",
        "evil overlord",
        "romance"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/and-soon-my-evil-plan-ch-01"
}