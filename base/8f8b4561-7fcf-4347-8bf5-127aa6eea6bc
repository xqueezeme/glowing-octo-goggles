{
    "title": "Girl Power Ch. 02",
    "pages": [
        "Thursday finally came. This would be my second time posing nude for the class. The first time I enjoyed it and also got a thrill from making my two friends get erections as they looked at me. I also met a new girl, Janelle, an exotic and sexy young woman. \n\nAfter I described the experience to my roommate, Morgan, I coached her through her first orgasm in life by helping her masturbate. All in all, I was enjoying using my power to affect those around me. I wondered how my next nude modeling session would turn out and how I could learn to use the power of my body and exhibitionism I realized I had a lot to learn and understand.\n\nI was a pile of nerves all day anticipating the modeling session this afternoon. Sitting in the the cafeteria, I tried to identify what made me so excited. Was being naked in front of people a reason to become so sexually on edge? I wondered if all nude models felt this way. Maybe I could ask Jacob about his experiences.\n\n\"Hey, doc, did you like get a big one when you were nude modeling?\"\n\nNah, I don't think that'd be the right approach. Maybe I'm a freak. It could be that normal people wouldn't get turned on by being naked with other people. Of course, most normal people didn't take their clothes off in a classroom. \n\nI didn't ponder the question too long, as one of my favorite songsters might say. I did think ahead to getting home later tonight, all keyed up, stripping in front of Morgan and giving myself a big, fat orgasm. Maybe, she just might join in. That was so hot when she masturbated for the first time the other night. Maybe I could even get her to be naked with me. I think I'm opening her up. I kinda like thinking that I am exerting some sway over her burgeoning sexuality. I don't look at it as corruption as much as exploration. I think having someone who cares about her show the way is a good thing. Or, maybe it's not corruption, exploration, or education. Maybe it's just plain old seduction.\n\nI ran back to the room and stripped to begin removing the telltale marks of underwear. I showered and sat on my bed naked while finishing an essay for comp class. Morgan came in and just laughed.\n\n\"I think I must be the only person on this entire campus who never knows when a naked person will be waiting for her,\" she said while smiling.\n\n\"So, that's a complaint?\"\n\n\"No. I am getting used to it, but can't say I am totally used to it. And, Gretchen, believe me it is not a hardship looking at your body. I think I'm sorta like Caitlin. I would give a lot to look like you, even for a day.\"\n\n\"And, I keep telling you that you're crazy. You're beautiful. Maybe if you'd let me see what you keep so well hidden, I could tell you how hot you are,\" I said and added after a pause, \"or could be.\"\n\n\"It's funny, Gretchen, that the idea of you seeing me naked does not make me want to vomit as much as it did before. Maybe we're making progress.\"\n\n\"Hey, you could come with me and we both could model for the class.\"\n\n\"Now, I'm ready to vomit.\"\n\nWe both laughed.\n\n\"So, I'll have to tell you all about tonight's session when I get home. You can live vicariously through my experience.\"\n\n\"I don't know,\" she said not meeting my gaze. \"That might be too much for me. You know, might get me too excited.\"\n\nI was quiet until Morgan looked at me. \"Well, we've learned there's a remedy for that,\" I said.\n\nMorgan turned scarlet. \"God, Gretchen, I still cannot believe I did that. I've been feeling I should go to confession and do like years of penance.\"\n\n\"You did nothing wrong. You had an orgasm. That is one of the best things in the world. If God didn't want us to have orgasms, he wouldn't have given us a clit.\"\n\n\"Somehow, I think I missed that point in my catechism class,\" Morgan replied with a smirk.\n\n\"Well, take it from me\u2014that's the gospel truth.\"\n\nWe shared a laugh.\n\n\"Seriously, Morgan, you should not feel guilty. As a matter of fact, you should treat yourself to more and more of them. I know they can get a lot better.\"\n\n\"You mean like the ones you've shown me?\"\n\n\"Yep, and even better still. If we were to do it together, I guarantee you'll think your head is going to shoot off.\"\n\n\"We did it together.\"\n\n\"No, we did it in the same room in separate beds, with the lights out and the sheets on. I mean doing it looking at each other. That's the best. Well, almost the best.\"\n\n\"What'd you mean almost?\"\n\nI knew I had her intrigued now. I wondered if I could open her mind just a little bit more.\n\n\"I told you about Lisa and me.\"\n\n\"Yeah.\"\n\n\"What I didn't tell you about is when we invited Derek to join us.\"\n\n\"No way! You let a boy see you masturbating.\"\n\n\"Yep. And we watched him. That was hot.\"\n\n\"Jesus, Gretchen, sometimes you really shock me. I have never even seen a naked boy. I've certainly have never seen one aroused and masturbating. And, no boy has ever seen me naked. God, thinking about all this and then having a boy watch me masturbate, well, that's like not even in my wildest imaginable dreams. Heck, I never even dream about that stuff at all.\"\n\n\"Morgan, remember what I said about saying 'never' regarding sex. Anyway, I'm not suggesting anything right now. But, at least let your mind entertain the image of Eli and Zeke sitting naked in front of you stroking their long, hard cocks.\"\n\nMorgan wiped sweat from her brow. With a sly smile, she said. \"Do you think they have long ones?\"\n\nI got up and bumped fists with her.\n\n\"There's hope for you, yet.\"\n\n\"I doubt it,\" she said. \n\nArriving at the studio a few minutes before class, I saw Jacob, the instructor, sitting at his desk.\n\n\"Hey, Gretchen, you came back.\"\n\n\"Were you doubting me?\"\n\n\"Wouldn't be the first time we had a 'one and done' model.\"\n\n\"Well, here I am.\"\n\n\"Great. I had some good feedback on your first session.\"\n\n\"What kind?\" I asked.\n\n\"A few students said you were very relaxed and that made them feel more comfortable looking at you.\"\n\n\"Uh, isn't that the point of a life drawing class\u2014to look at the model?\"\n\n\"Of course, but you have to realize that this is a first-time experience for most of the students. They have never been in a situation where they are supposed to stare at a naked person they've never met before. Society teaches us we should avoid looking at a naked person unless we're involved with them or it's at a naturist park, or something. Otherwise, people can be accused of being voyeurs.\"\n\n\"I think a lot of us have some voyeurism in us,\" I said.\n\n\"I agree, but we are supposed to keep that feeling contained. Now, we are asking, no we are commanding them to look. Look at this naked woman. Look at her breasts, her pussy, her ass. Stare at her. It can be intimidating to the student.\"\n\n\"I never thought about it that way.\"\n\n\"Yeah, well, you did a good job. Plus some students said it's a lot more fun when the model is as attractive as you and with a good figure.\"\n\n\"Now you're embarrassing me.\"\n\nJacob looked at me and smiled. \"I doubt that, Gretchen. I think you know you're attractive and you like people seeing you naked. That's not a critique. Actually it works to my benefit and helps the students do better work. Having a true exhibitionist for a model is a special treat.\"\n\nJacob could read me better than anyone I'd ever met. \n\n\"I guess I'll go get changed. Anything special for tonight?\"\n\n\"As a matter of fact, I want to do some reclining nudes. When the students get here I'm going to have them move that chaise lounge up on the platform. I'll drape a clean sheet over it and we can do a bunch of poses. You might not be as tired as doing all those standing and stretching poses.\"\n\nI nodded and scooted behind the curtain. In a few seconds I was naked and once more evaluating my figure in the mirror. Jacob's words swirled in my head. People thought I was attractive. People liked looking at me. I am an exhibitionist. I smiled and pinched my nipples to make them stand up.\n\n\"Yes I am,\" I said to myself as the tiny buds turned red and hardened. \"I am an exhibitionist.\"\n\nJacob called me and I walked out to the platform, careful to avoid tripping.\n\nI saw Eli and Zeke grinning like a couple of kids about to ride the monster roller coaster. I wondered if they did have long dicks and if they would like to jerk off as I was doing myself. Those were just the kind of thoughts that helped my nipples remain tight and proud.\n\nJacob talked me through a number of poses as the students worked behind their easels. I was surprised when he called for a break. It seemed I had just started.\n\nI walked over to Eli and Zeke. \n\n\"Hey, Gretchen,\" said Eli.\n\n\"Hi, guys. Do you mind if I take a look?\"\n\n\"Sure, but don't laugh,\" said Zeke.\n\nI moved to stand in between them. I saw Jacob gesture to me and went to him.\n\n\"Gretchen, if you're going to interact with the students, you should wear your robe.\"\n\n\"Oh, sorry. No problem.\" I dipped behind the screen, donned my robe and loosely tied it at my waist.\n\nWalking back to the two boys, I could easily detect their erections straining their pants.\n\n\"Prof wants me to cover up when I'm not posing.\"\n\n\"We wouldn't have minded if you didn't.\"\n\nI deliberately looked down at each of their crotches.\n\n\"That's so sweet of you,\" I said.\n\n\"Uh, sorry, Gretchen,\" said Eli in a low voice. \"Those things happen, you know.\"\n\n\"It doesn't have anything to do with seeing me naked.\"\n\n\"God, yes. It has everything to do with that. You're totally amazing,\" chimed in Zeke.\n\n\"Well, I'll just have to take those two tents as compliments.\"\n\nI turned and looked at their drawings. Each had talent. Eli went for a more realistic view. He had done a full body outline as I reclined facing him. I thought maybe he gave me too much credit in the boob area, but I was not complaining.\n\n\"That's good, Eli. You make me look attractive.\"\n\n\"You are attractive, Gretchen.\"\n\nZeke stood back to allow me access to his easel. His style was a bit more abstract. He captured the lines of my body, this time from the rear as I had moved around the lounge. He was now just adding some detail, but I don't think he would get as anatomically precise as his friend.\n\n\"I like this, too. You both have talent.\"\n\nThey thanked me and said I should check out Janelle's drawings.\n\nShe was just walking back in from a bathroom break.\n\n\"Do you mind?\" I said as I picked up the edge of a sheet.\n\n\"Ok, but it's just a sketch.\"\n\nFlipping the paper back, I had to stop myself from gasping.\n\nJanelle had captured me as some sort of sexy creature. My breasts and pussy were done in great detail and my eyes looked like they were coals of fire.\n\n\"Wow,\" was the best response I could make.\n\n\"That's what we thought,\" said Eli.\n\nJanelle flipped one more sheet over and there was a close-up detail of my pussy. My lips pushed through the thin covering of pubic hair and my clit-hood was the center of focus.\n\n\"Holy shit,\" I let out.\n\nJanelle smiled and said, \"I think you are so fucking hot. I wanted to get all that down.\"\n\nI looked at her. She didn't flinch from my gaze. I thought I was about to be eaten by a wild animal. The extra wetness in my pussy told me that this could be a girl who could turn my world upside down. My limited experience with Lisa and a couple other friends told me that women could be amazing.\n\n\"I think she likes you,\" said Zeke and poked me in the side.\n\n\"Fuck off, Zeke,\" she said.\n\n\"Well, do you?\" I asked.\n\nJanelle licked her lips and nodded.\n\nMy knees almost buckled. This exotic looking woman wanted me. She wanted me in a bad way.\n\n\"Ok, class, let's get going. Gretchen, can you get back on the lounge?\"\n\nI dropped my robe and climbed on the lounge, giving the guys and Janelle a great view of my back and spread legs.\n\nJacob said that he wanted me in one pose for the rest of the class and that the students should work on the one view. He propped a pillow behind my head and placed my arm so it rested up and on top of my head. He had me place one foot on the floor and then bent my other leg at the knee. My other foot now touched my knee. The effect was to open my pussy as I faced the guys and Janelle. He asked me to cup a breast with my free hand. I knew I must look wanton in that pose. The other students moved around to get a better view of my provocative pose.\n\nThe room remained silent except for the sound of pencil and charcoal on paper. Every time Janelle looked at me, I felt my vagina contract. I knew I was wet, but didn't know how obvious it was to those watching me. It didn't matter. The feeling of being watched and wanted overpowered any cautionary impulses I had. Jacob finally called an end and the class started cleaning up and putting away their materials. I stretched on the lounge, getting some kinks out.\n\nJacob stood in front of me holding the robe.\n\n\"Nice job, Gretchen.\"\n\nStanding, I let him slip the robe on me. I cinched the waist.\n\n\"What'd you think of the sketches you saw?\"\n\n\"Interesting,\" I said as non-commitally as I could.\n\n\"Do you also know Janelle?\"\n\n\"Just met her in this class.\"\n\n\"She has talent,\" he said. \"She certainly isn't shy about letting her sensual side show in her work.\"\n\n\"No shit,\" I said.\n\n\"The guys have talent, too. Sometimes I think they don't let their emotions free. That's the thing about Janelle, she lets it fly.\"\n\nI thought about how she depicted my pussy. She was definitely letting it fly.\n\n\"So, you can come back next week?\"\n\nI brought my somewhat lurid mind back to the present.\n\n\"Sure, if you want me, Jacob.\"\n\nI don't think I purposely made that sound as sexual as it came out. Well, maybe I did.\n\nJacob smiled. \"Gretchen, I want you to model. That's all. Ok?\"\n\n\"Of course, what else did you think I meant?\"\n\n\"Gretchen, do you think you're the first model to flaunt her sexuality? Or, to come on to me? I don't get upset. I understand that there is always a touch of eroticism in posing nude. But, I think of you as a model, not as a sex object.\"\n\nNo one had ever called me out so coldly on what I was doing. Yet, he did it in a way that did not humiliate me.\n\n\"Sorry, Doctor Adams. I'll be happy to come back next week, if you still want me to.\"\n\n\"I do. You are going to be a great model.\"\n\nAs he reached for his crutches I chanced a glance down at his crotch. Damn, nothing showing. \n\nI dressed and ran into Zeke, Eli and Janelle outside.\n\n\"Wanna get that ice cream tonight?\" Eli asked.\n\nI agreed and we headed to the snack bar in the Commons. Along the way I found out that Janelle was also a fine arts major and planning to become a painter.\n\n\"Well, you have talent. Jacob thinks so, too.\"\n\n\"Really?\" she said.\n\n\"Just told me.\"\n\n\"That's nice to know. Of course, it's easier when you have a beautiful body to work with.\"\n\nWe had fallen a little behind the guys as we talked. \"Janelle, are you hitting on me?\"\n\n\"Do you want to be hit on?\"\n\n\"Not what I asked.\"\n\n\"Ok. Yeah, I am.\"\n\n\"So, you're gay.\"\n\n\"Let's say I'm open. Does it freak you out that I want to have sex with you?\"\n\nI swallowed hard. \"I wouldn't say it freaks me out. I also don't know if that's what I want.\"\n\nJanelle ran her hand down my back, lightly touching my butt.\n\n\"You are major hot, Gretchen. I want you.\"\n\n\"Uh, I should take that as a compliment?\"\n\n\"Think about it. I could make you cum like you've never cum in your life. I'm talking a whole new dimension.\"\n\nMy vagina clenched, for about the tenth time tonight. I envisioned this exotic woman naked and crawling over my body. \n\n\"Have you been with a woman?\" she asked.\n\n\"Sorta\"\n\nShe laughed. The guys turned their heads but she waved them off.\n\n\"Gretchen, there's no sorta. Either you had sex with a woman or you didn't.\"\n\n\"Well, my best friend and I fooled around in our senior year. Curiosity and all that. There were a couple others, too.\"\n\n\"Did they fuck you?\"\n\nI stopped walking. Janelle turned toward me.\n\n\"What,\" she asked, \"too direct.\"\n\nI stood with my mouth open.\n\n\"How's this, did they insert a finger inside you? Did you play with their boobs? Did any of them eat you or you eat them? Does that help?\"\n\nI still could not find my voice. She smiled again and slipped her arm through mine.\n\n\"Let's keep walking. Gretchen, let me tell you what I think. I know you like showing off. I know you like people looking at your naked body. I suspect you like the idea of exciting people by showing your body. I also know you get seriously turned on. I could see how wet you were getting. When you looked at my drawings, I knew you got a rush. So, I know there is some interest there. What I'm offering is a fun way to explore that interest.\"\n\n\"Janelle, I don't know.\"\n\n\"Hey, no need to answer now. Just think about it. I'm willing to bet that when you think about it, you'll be playing with yourself.\"\n\nI couldn't think of a single thing to say. She was so right. First Jacob and now Janelle. Was I that much of an open book? Was my \"secret power\" not really a secret? We walked behind the guys in silence for a while.\n\nJanelle leaned into me. \"You also like looking at those two tight butts, don't you?\"\n\nI giggled and nodded.\n\n\"You want to fuck them?\"\n\nGiving into the charged atmosphere of her questions, I answered. \"Well, first I'd like to see what's behind those pants.\"\n\n\"Yeah, they both get so hard drawing you.\"\n\n\"You noticed?\"\n\n\"Of course, I stand next to them. From what I can see Zeke seems to be packing a bit more than Eli. But we'd have to do much more complete examination to make a final determination.\"\n\n\"We?\"\n\n\"Told you, I'm open.\"\n\nArriving at the Commons we got our cones and sat around a table. We were trading some background. When it came to Janelle, she finished her cone, wiped her mouth and grinned.\n\n\"I suppose you noticed I am not white bread like you three.\"\n\nI started to say something, but she cut me off.\n\n\"It's no big deal. You three are white. Me, well let's say I have a lot of color in my background.\"\n\nJanelle explained that her father is African-American and her mother is Native American with a little Mexican mixed in. Her father's father was African-American. \n\nHer skin was light brown and smooth as silk. She kept her thick, black hair in a long plait that highlighted her Native American heritage. Her face was a m\u00e9lange of all the races producing a unique, exotic result. If she were five inches taller, she could make a killing modeling. At five feet five she was not going to walk the runways. She had a tight figure with what appeared to be quite small breasts and a round butt. In any sized crowd, Janelle would stand out.\n\nAnd, she wanted me. I did begin to wonder how sex would be between the two of us.\n\n*** In art history class on Friday, Zeke and Eli wanted to know what I really thought of their work.\n\n\"I like both of them,\" I said. \n\n\"We like drawing you,\" confessed Eli.\n\nI slowly raised my index finger and said, \"Yeah, I guess you do.\"\n\n\"God, that's embarrassing,\" said Zeke.\n\n\"But, we're only guys,\" he added, \"and you are freaking beautiful. Our other friends cannot believe we get to see you naked. They are all like thinking of signing up for class. I guess when you see someone dressed and then know that they are posing nude, it sorta makes if really sexy. I mean that's why we get turned on. You're someone we know and you're hot. Sorry, if getting aroused bothers you.\"\n\n\"Don't worry I'm only yanking your chain.\"\n\n\"I wish,\" said Zeke, half under his breath.\n\n\"You'd like that?\" I asked.\n\nJust then class started. For the first time in Art History, I felt time drag on. I wanted to continue this conversation with the guys. This just might be the opening I was looking for. None of us had any classes that afternoon and we decided to go off campus for some sushi. We walked to a popular place and ordered a variety of dishes.\n\n\"So, let's put it out there,\" I said.",
        "They looked at me. \"You really want me to jerk you guys off?\"\n\nI had to use every ounce of control not to collapse in laughter watching their expressions.\n\n\"God, no, that's not what I meant,\" said Zeke.\n\n\"So, you wouldn't like me jerking you off?\"\n\nAs I was finishing that last sentence, our waitress arrived. By the look on her face, I knew she heard what I said. Grinning from ear to ear, she served our plates and asked if we wanted anything else. When no one responded, she looked at the guys and emphasized, \"Anything? Are you sure?\"\n\nI cracked up and held my palm out. She slapped it and went to take another order. We dug in and enjoyed the food.\n\n\"Ok,\" I said drinking the last of my Diet Coke. \"Let me ask a question.\"\n\nThey stared in silence.\n\n\"Do you guys get off after drawing class?\"\n\nZeke and Eli looked at each other. \"Guys, it's a simple question. Do you guys jerk off after watching me in class?\"\n\nZeke slowly nodded. Eli joined him.\n\n\"Alone or in your room together?\"\n\n\"God, Gretchen, you're making me freak out,\" said Eli.\n\n\"Hey, it's a normal thing, especially if you are not sleeping with someone. I don't think you guys are. Right?\"\n\nThey nodded.\n\n\"All right to make you feel better, I can hardly wait to get back to my room and get off. I am super horny all during class and like just make it to my room. And, let me tell you, it's awesome.\"\n\n\"What about your roommate?\" asked Eli.\n\n\"She doesn't mind. In fact, I think she's beginning to like watching me do it.\"\n\n\"You let her watch you?\" said Zeke.\n\n\"Absolutely. It makes it sexier having someone there.\"\n\nZeke played with his food. \n\n\"So, do you guys do it together?\" I asked.\n\n\"No way,\" said Eli. \"I do it in the bathroom,\" he said without making eye contact with anyone.\n\n\"Me, too,\" admitted Zeke. \"Unless Eli is going to be out of the room for a while.\"\n\n\"Cool,\" I said. \"See we can talk about these things.\"\n\n\"Well, since we're talking honestly,\" said Zeke, \"What's it feel like to be naked in front of people?\"\n\nI looked at both of them, ate a California roll and said, \"It is a fucking rush.\"\n\n\"Don't know if I could do it,\" said Eli.\n\n\"Has a girl ever seen you naked?\" I asked. He smiled and said yes. \n\n\"How about you?\" I asked Zeke.\n\n\"Had a couple girlfriends,\" he answered.\n\n\"Ok,\" I continued, \"So, I suppose you liked these girls seeing you naked?\"\n\n\"Yeah,\" agreed Eli, \"but it's different. We were having sex, so of course we are going to be naked.\"\n\n\"Yeah, but I'm talking about the part where she's looking at you naked. Do you like that?\"\n\nBoth guys agreed they did.\n\n\"Well, it's like that being in front of the class, except I don't plan to have sex with everyone in the class.\"\n\n\"Great,\" said Zeke, \"That means you might have sex with some of the class.\"\n\nI laughed. \"Actually, I've been thinking about fucking...\"\n\nThey hung on my words.\n\n\"Janelle.\"\n\nTheir mouths dropped. \"Just fuckin' with you, guys. But, gotta admit it probably would be good sex.\"\n\n\"Wow,\" said Eli. \"She is incredibly hot. Just thinking of the two of you together is driving me crazy.\"\n\n\"Are you hard right now?\"\n\nHe blushed, smiled and nodded.\n\n\"Cool,\" I said.\n\n\"Me, too,\" added Zeke.\n\n\"Sweet, a two-fer,\" I said.\n\nWe laughed. Finishing our food we said good-bye and headed back to our dorms.\n\nI told Morgan all the details. She kept shaking her head.\n\n\"I can't believe you talked to those guys like that,\" she said.\n\n\"Why not, it's just sex.\"\n\nShaking her head, Morgan said, \"It'll never be 'just sex' for me.\"\n\n\"Morgan...\"\n\nShe thought for a moment and then said, \"Yeah, never say never when it comes to sex.\"\n\nI showered, studied for a while and went to sleep. I was too tired to even think about masturbating. As I drifted away, I wondered if Morgan were disappointed that I didn't let her listen to me having an orgasm.\n\n*** The weeks sped by. I was so busy with classes and modeling that I couldn't believe we were half-way through October.\n\nThe modeling was now more of a job than an adventure. We were only meeting once a week and I enjoyed doing it; still got a mild kick from being naked in a room of people; but the hot buzz had faded to a distant hum. Still, the money was good and I became better friends with Eli, Zeke and Janelle.\n\nThe third Friday in October was always celebrated as Founder's Day as the college recognized the man who started the school and gave it a shitload of money. There were all kinds of organized activities and a huge bonfire at night. Homecoming was traditionally the following day.\n\nThere was one activity that was not organized by the school, but was as much of a tradition as all the others. The Founder's Day Naked Mile Run was held on Friday morning. Since there were no classes on Founder's Day, I heard there was always a great turnout. The Run started at the farthest eastern part of the campus and wound its way through the two quads, around the Commons, past the athletic fields and ended at the statue of our founder. The event ended with all the participants singing the Alma Mater and dancing around the statue.\n\nWhen I first heard about it, I got really excited. Then, I learned the tradition was that it was men only. When the college opened it was an all-male school. They kept the Naked Mile as a men's event. I think a lot of the women through the years were relieved. Even though I wouldn't be running around naked, I liked the fact that Zeke and Eli were considering participating.\n\n\"Go on,\" I urged them. \"It'll be fun.\"\n\n\"Sure, you just want to see my impressive manhood,\" Zeke said.\n\n\"Well, you could satisfy our curiosity and whip it out now,\" I said. Janelle and I were across from them in a booth in the Commons.\n\n\"Don't think so,\" said Zeke.\n\n\"Anyway,\" added Janelle, \"There will be tons of guys, so it's not like everyone will be looking at just you guys.\"\n\n\"Will you be looking at us,\" asked Eli.\n\n\"Fuck yes,\" she said.\n\nWe all laughed. Morgan came by and sat with us. \n\n\"What's so funny?\"\n\n\"Oh, we were discussing how good the boys will look in the Naked Mile Run,\" I told her.\n\nMorgan's mouth opened. \"Really! You guys are going to do it?\"\n\n\"Thinking about it,\" answered Zeke.\n\n\"They're definitely doing it,\" said Janelle.\n\n\"Yep. Definitely,\" I concurred.\n\n\"Looks like we don't have a choice,\" said Eli.\n\nWe gave each other high fives.\n\n\"I heard you sorta need some help to get your clothes from the starting line to the finish,\" I said. \"We'll do that. You can get re-dressed in our dorm since you'll finish right outside.\"\n\nWe made a basic plan and agreed to meet at a quarter of eight on Friday morning. Anticipation built all week. We began to become concerned as it rained all day Thursday. The forecast was sketchy for the next day. Janelle and I decided to take along a couple towels in case the guys needed them.\n\nAs I was standing naked in front of Morgan after having come back from modeling, I asked if she wanted to hang with us for the day.\n\n\"Are you like going to the starting line?\"\n\n\"Sure. We need to get the guys' clothes.\"\n\nShe thought for a few seconds. \"But, that means they will be undressing in front of you.\"\n\nI smiled. \"Yeah. Isn't that cool?\"\n\n\"Gee, I don't know.\" Morgan said.\n\nI pulled a chair over and sat in front of her.\n\n\"Morgan, you have never seen a naked guy, right?\"\n\nShe nodded.\n\n\"You'd like to see a naked guy, right?\"\n\nShe hesitated.\n\n\"Morgan, I think you know you do.\"\n\nShe slowly nodded her head.\n\n\"Perfect. You will see Zeke and Eli, and a couple hundred other guys. It will be totally non-threatening. You can look and be just like everyone else. We all will be looking.\"\n\n\"But, I've kinda become friends with them, you know, through you.\"\n\n\"Even better,\" I said. \"Be honest. Haven't you looked at them and wondered what they'd look like naked. Wanted to know what kinda dicks they have?\"\n\nMorgan was now completely red.\n\n\"Maybe,\" she said softly. \"Of course, I have no idea what a real naked penis looks like.\"\n\n\"Morgan, it's ok to think about this shit. It's what women and men do. That's why it's called sex appeal\u2014it's supposed to be appealing. You are not going to go to hell if you looked at a guy's dick.\"\n\nShe still didn't look convinced.\n\n\"Just come with us. It'll be fine, I promise.\"\n\nShe smiled, \"And, you're sure I won't go to hell if I look at his penis?\"\n\n\"Hey, if anyone goes to hell it'll be me for killing you if you ever call it a penis when we are out in public.\"\n\nWe laughed together.\n\n\"Besides, you'll only go to hell if you look at their dicks AND balls.\"\n\nMorgan snorted and howled. I went out to meet some other friends. We ended up going to an upper class dorm and drinking. I was feeling high as I finally crawled back into my bed that night.\n\nFriday morning was overcast and slightly chilly. I thought that being able to wear clothes today was not a bad thing. Morgan and I dressed and met Janelle at the Commons. We grabbed coffee and bagels and headed across campus. Janelle and I each carried a back pack to hold the guy's things.\n\nArriving at the starting point we saw at least two hundred guys. Most were dressed in sweats and were milling around both to keep warm and to burn off some of their nerves. We found Zeke and Eli. We had brought coffees for them and they thanked us.\n\nAround eight a senior stood on top of a picnic table. He was wearing a bathrobe. Using a megaphone, he shouted until he got everyone's attention. He reviewed the route and explained the etiquette of the run.\n\n\"Look, assholes, the administration sorta turns a blind eye on this, but that doesn't mean there aren't some rules. First, keep your shoes on. We don't want you falling all over the place. Second, don't harass any of the spectators. And by this I mean, do not wag your willies at the ladies. If you think you're so attractive, they'll find you. Third, keep on the paths that are marked. Fourth, if you get too excited, and for those slow-minded out there, I mean if you get a hard-on, just keep running. Try to get in the middle of the pack so it's not too obvious. Fourth or fifth, who gives a shit what number, after we reach Big Ben, we sing. We then get dressed. This is not a free pass to wave the flag all day long. Cover it up. If you think it's funny to go chat up some girls with your dick sticking up, then you may just get busted. This is fun and no one complains. Don't make it into something it ain't.\"\n\nMost of the guys were nodding as he spoke. I noticed a few were either still drunk from last night or had started early today. \n\n\"Ok, we start in three minutes. Time to strip.\" He opened his robe and tossed it and the megaphone to a blond girl standing by the table.\n\nI heard Morgan gasp.\n\n\"First time for everything, sweetie,\" I whispered in her ear.\n\n\"Ok, guys, let's get it going,\" said Janelle.\n\nZeke and Eli looked at each other and broke out laughing. They started pulling clothes off. In a few seconds they each were down to boxers. Without much hesitation they shucked them down and deposited them in the backpacks we were holding.\n\nI made no attempt to be coy. I checked each guy out.\n\nZeke, true to Janelle's prediction, had a thick cock. It wasn't unusually long, but it looked mean, especially since it was a shade darker than his skin. His balls hung low and I'd have to say it was pushing a ten on the Peter Appreciation Scale.\n\nEli's looked tiny in comparison. It was pale, skinny and short. His balls looked really tight. I put that hopefully to either nervousness or the chill in the air.\n\nThe whistle blew and hundreds of naked guys started making their way to the path.\n\nJanelle and I gave each guy a slap on the ass and shouted good luck. Morgan was speechless, a condition that I hoped would go away at some point.\n\nWe watched dozens of bouncing dicks run past us. Morgan almost fainted when a tall guy with a long, white dick waved.\n\nShe moved her hand in a semblance of a wave.\n\n\"Someone you know?\"\n\n\"My lab partner,\" she gasped. \"Oh, my god, how can I ever work with him again?\"\n\n\"Morgan, he seemed happy to see you,\" I said, and then caught myself, \"I don't mean like having a hard-on, just happy that you were here. I don't think he will be embarrassed.\"\n\nWe took a shortcut across the campus. All along the path people were two or three deep cheering on the runners. Most of the spectators were women, but there were some guys. I suppose they were too shy to join in. We arrived at Big Ben, that's what we all called the founder's statue, before any of the finishers arrived.\n\nWe heard a cheer and then around the corner came the senior who made the announcements. His big dick was flapping and flopping. I was duly impressed. Not that I've seen a lot of dicks. There were the two guys I slept with, the one guy I gave a BJ as a Truth or Dare at a party, the five guys who I played a cutthroat strip poker game with and most of the guys in our group in high school. We went skinny-dipping on Senior Skip Day. And, oh yeah, there was Arnie, one of my best friends, who was confined to a wheelchair after an accident. I used to give him lots of handjobs and an occasional BJ. He appreciated it and I liked it. So, well, I guess I have seen a few dicks.\n\nNow the number of dicks flashing by was overwhelming. I recognized a bunch of guys from various classes. I also liked the variety of naked butts on display. \n\nZeke and Eli were in the middle of the pack. We gave them a shout out as they streaked past us to get into the big circle around Big Ben. Right behind them was a small guy with a big hard-on. It was the only one I saw.\n\nThe guys had their arms around each other's shoulders and started singing the Alma Mater. As the first note rang out, the skies opened and it started pouring. We girls stepped under the archway to our front door. The guys sang both verses and then gave a huge shout. They high-fived and fist-bumped each other, probably too pumped from adrenaline to notice how cold they were. Finally they ran toward us. I noticed the cold had started to take effect. Both guys looked a little shriveled. We tossed them towels.\n\n\"Quick, get inside before you freeze.\"\n\nWe hurried up to our room, the guys holding the towels in front.\n\n\"Let me check the showers,\" I said. \"You should get under some warm water.\"\n\nThe coast was clear and they went into the bathroom. Ours was a girls only floor, but guys could use the bathroom if someone stood watch outside. I parked by the door. Five minutes later, the guys came out with towels wrapped around them. Back in our room, we congratulated them on the run.\n\n\"How about a picture?\" asked Janelle.\n\nThey guys smiled and looped their arms around each other.\n\n\"Really, guys,\" she said. \"What's with the towels? We've seen it all.\"\n\n\"I just don't want pictures of my dick all over the internet,\" said Eli. \"Someday, I will be looking for a job, you know.\"\n\n\"Guys, there were like a thousand phones taking pictures and videos today,\" she said.\n\n\"Yeah, but we'd be lost in a bunch of other naked guys. That's different than standing here.\"\n\n\"Ok, how about this?\" suggested Janelle. \"Gretchen and I will stand next to you. We'll cover the good bits with our hands. Morgan can take the picture.\"\n\nZeke and Eli looked at each other. Slowly, a shit-eating grin appeared on each face.\n\n\"Works for us,\" said Zeke.\n\nThey peeled off the towels and tossed them away.\n\nIt now was a more sexually charged atmosphere. They weren't with hundreds of other guys. They were standing naked in my room. I noticed that the warmth was loosening things up and said so.\n\n\"God, my nuts were like in my throat,\" said Eli. \"It was freaking cold.\"\n\nJanelle handed her phone to Morgan. I placed mine on the desk beside her.\n\nMorgan looked shell-shocked. With the guys in the middle and Janelle and I on the outside of each of them, we asked if they were ready.\n\nGetting a nod, we cupped their crotches. I was next to Zeke and couldn't believe how big he felt in my hand. I squeezed a tiny bit. He pushed back. I felt a slight increase in size. Morgan took several pictures with both of our phones.\n\n\"Let's switch,\" said Janelle.\n\nI released Zeke. His dick was much thicker now.\n\nI stood next to Eli. I could see that Janelle must have done the same, because he was no longer tiny. Cupping him, I felt his dick jump. I slid a finger underneath his balls and probed a nut. He gave a little yelp. After Morgan took all the pictures, I slipped my hand around his semi-erect shaft and pulled it up. Janelle was doing the same. In seconds both guys were hard and upright. Morgan's mouth hung open. \n\nZeke's dark dick curled slightly toward his stomach. It looked to be as thick as my wrist. Eli's was surprisingly long, given what it looked like soft. His balls had tightened up and so he looked like all dick. I motioned with my eyes to Janelle and we switched positions again. I took Zeke's hard-on and stroked it. Janelle did the same with Eli.\n\n\"Hmm,\" I said, \"I wondered what these bad boys would look like. They made such nice tents in your pants during class.\"\n\nMorgan kept staring.\n\n\"Would you guys mind if Morgan sorta joined us?\" I asked.\n\n\"As long as one of you keeps doing what you're doing, it's just fine with me,\" said Zeke.\n\n\"Me, too,\" chimed in Eli.\n\nI motioned Morgan to come over. She shook her head.\n\n\"They really don't bite,\" I said. \"Come on.\"\n\nKeeping hold of Zeke's erection I reached out with my other hand and took Morgan's hand. I pulled her next to us.\n\n\"Stand here and I'll take a picture,\" I said.\n\n\"Oh, no, I couldn't,\" she protested.\n\n\"Morgan, relax. It's just fun.\"\n\nI stepped aside and pushed Morgan next to Zeke. I focused the camera. \"Ok, cover them up.\"\n\nJanelle used both hands to cover Eli's shaft and balls. Morgan was a deer in the headlights.\n\n\"Zeke, can you help Morgan?\"\n\nHe took her hand and placed it on his balls and then positioned her other hand to shield his rigid shaft. Morgan was sweating and her cheeks were crimson.\n\n\"Say 'Blow me'\" Janelle, Eli and Zeke called out. Morgan looked like she might faint and showed a weak smile. I took a couple shots and asked the guys to turn around. \"Ok, ladies, grab some buns.\"\n\nJanelle started playing with Eli's tight ass. Morgan timidly placed a couple fingers on Zeke. After a few more clicks, I said, \"Perfect.\"\n\nThe guys turned back to us. \n\n\"Now, what?\" asked Zeke.\n\n\"Now what what?\" Janelle said.\n\n\"You can't leave us like this?\"\n\n\"Sure, we can,\" said Janelle. \"You have to learn control and not let yourself get all excited.\"\n\n\"Come on,\" Eli whined. \"You guys were playing with our dicks. What'd you expect?\"\n\n\"What do you want?\" I asked.\n\n\"Well, how about if you, you know, use your hands, or something.\"\n\n\"You want us to jerk you off?\" I said in mock horror.\n\n\"Uh, yeah, I guess,\" said Zeke.\n\n\"Go sit on the bed, we have to talk,\" I said. Pulling Janelle and Morgan into the corner, I whispered. \"What do you think?\"\n\n\"I wouldn't mind, but I hate to just give in to them,\" said Janelle.\n\n\"You can't be serious,\" said Morgan. \"You're willing to masturbate them. Right here! In my room!\" Janelle and I exchanged a glance and shrugged.\n\n\"Maybe that sounds a bit weird,\" I admitted.\n\n\"A bit?\" said Morgan. \"It's crazy.\"\n\n\"But, it would be kinda fun,\" said Janelle.\n\nThe three of us were silent for a minute. \"How about this?\" I offered. \"We offer to jerk one of them off, if\u2014and only if\u2014the other guy does himself at the same time.\"\n\n\"Ooh, I like that,\" said Janelle.\n\n\"You two are completely insane,\" said Morgan.\n\n\"Look, Morgan, think of it as an advanced sex ed class. You never saw a naked guy before. Now, two cute guys are a couple feet away with hard-ons. Now, you can see what it looks like when a guy cums. And, you will see a guy get himself off. Hell, Morgan, this is like a master's level course.\"",
        "Morgan slowly shook her head, but didn't say anything.\n\nStanding back in front of the guys, I looked at the erections standing up from the two laps.\n\n\"Ok, guys, here's the deal. One of us will jerk one of you off, only if the other guy jerks himself off while we watch.\"\n\nThey looked at each other. \"Uh, I don't know,\" said Zeke. \n\n\"Well, that's the deal. Take it or leave it,\" I said. \"Of course, you both could jerk off while we watch, but then you wouldn't have one of us touching you.\"\n\nEli leaned in and whispered to Zeke. After a minute, Zeke nodded. \"Ok, but we get to pick who jerks one of us off.\"\n\nI agreed, but heard Morgan gasp behind me.\n\n\"And, we get to see your tits.\"\n\n\"That's not part of the deal,\" I said.\n\n\"Yeah, well, it's only fair since we are naked. We should at least get to see something.\"\n\nI turned and huddled with my friends.\n\n\"Gretchen, there is no way I am showing those guys my breasts,\" said Morgan. \"I don't care if we get to see them masturbate. There's just no way. This is crazy enough already. I am not going any further.\"\n\n\"Fuck it,\" said Janelle. \"I'll flash them. They already saw your tits, Gretchen. I want to see them cum.\"\n\nI faced the guys. \"Final offer. Janelle will flash her boobs and I will jerk one of you off.\"\n\n\"Uh, Janelle has to keep her boobs in sight until we cum,\" said Eli.\n\nI looked at Janelle and she nodded.\n\n\"Ok,\" I said. \"But, Morgan gets to choose who I jerk off.\"\n\n\"I never said...\" Morgan began. Janelle touched her arm to silence her.\n\n\"Ok, deal,\" Eli said.\n\nWe looked at Janelle. She smiled and pulled her sweatshirt over her head. Underneath she had a long-sleeved tee shirt. In a second that joined her sweatshirt on the floor. She wore a thin black bra. Her small breasts filled out the cups and her nipples pushed through the thin fabric. She reached behind her and unsnapped her bra, let the straps slide down her arm and then cupped her hands over her breasts as the bra fell to the floor. All sets of eyes were on her. She looked at me and slowly revealed her breasts.\n\nThey were a little lighter in color than her face and shoulders. The contrast made them stand out and attract attention. Although small, they were perfectly formed mounds topped by dark areolas and darker nipples. Each nipple was hard and stood out proudly. The guys stared with their mouths slightly ajar.\n\nJanelle pinched her nipples and pulled out her breasts. As she released them, they bounced on her chest. I felt a tug in my gut looking at the milk chocolate orbs.\n\n\"Ok, Morgan, choose,\" said Janelle.\n\nMorgan looked from Janelle's naked breasts to the two erections in front of her. She had a dazed look and appeared to be frozen in place. I slipped an arm over her shoulders and said, \"It's ok, honey, just point to one of them.\"\n\nSlowly, Morgan raised her hand and pointed at Zeke. I smiled since I found his dick to be the more attractive. I knelt in front of him and grabbed his shaft. He squirmed and smiled at the same time.\n\n\"Hey, Eli, get going,\" called out Janelle, as she played with her nipples. Eli took his own shaft in hand and started moving up and down. \n\nI moved my hand. I felt the friction against the dry dick. \"This needs some lube,\" I said. Bending, I slipped my mouth over the young man's cock and took him inside. I could hear Morgan gasp.\n\n\"Oh, shit,\" cried Zeke as he felt my tongue move over his shaft.\n\n\"Fuck, that is so unfair,\" whined Eli. \"Hey, Janelle...\"\n\n\"No fucking way, dude. Just keep stroking it.\"\n\nPulling off, I now had a wet dick to play with. In seconds I added some pre-cum to make my hand glide better.\n\n\"Hey, my dick needs some serious lube,\" called Eli. \"Seriously.\"\n\nJanelle sighed and went to him. \"Such a baby,\" she said. She bent and quickly swallowed his thin shaft. Eli groaned with excitement. When he was covered with her saliva, Janelle stood back up and motioned for him to take up the task. Eli stroked up and down. He, too, was able to add some pre-cum and make it easier for him to play with himself.\n\nMorgan leaned into Janelle and asked, \"Did they both just cum? Is that what that stuff is?\"\n\nJanelle slipped an arm around her waist and pulled her close, her naked breast pushing into Morgan's arm. \"Honey, that's pre-cum. When a guy gets excited, it oozes out. Helps to let a guy slide into a girl. Then the girl gets wet and all sorts of good things happen.\"\n\nBoth guys started grunting as their climaxes approached. \"Getting close,\" muttered Zeke. \n\n\"Good boy,\" I said. \n\n\"Me, too,\" said Eli in a raspy voice. Janelle released Morgan and knelt in front of Eli. \"Come on my tits.\"\n\nThat was it for Eli. His next stroke resulted in a strong rope exploding and landing on Janelle's chest. \"Come around here quickly, Morgan. Watch.\"\n\nMorgan stepped up and looked as two more streams shot up. Janelle bent forward to catch some white liquid on each breast. She added her hand to Eli's and pumped to extract a couple weaker eruptions. She rubbed his tip on her nipple. Eli groaned and spurt two more times. One landed on her small breast and the other coated both of their fists. Janelle leaned in and licked the tip of Eli's dick as it extended from their fists. She cleaned it and then licked their fists clean.\n\nAfter watching his friend and Janelle, Zeke could not hold back. He exploded as I pushed his dick back to direct the eruption toward his chest and stomach. I pumped him while squeezing his balls and the flow continued. As his last burst was just about to escape, I captured his dick in my mouth and took the few remaining drops. Zeke moaned as my tongue pushed into his pee hole. \n\nReleasing him, I sat back on my haunches. I scooped some cum from his chest and offered my finger to Morgan. Morgan shook her head, but I took her hand and pulled her close.\n\n\"Just taste it, honey. Go on.\"\n\nMorgan lowered her head and I slid my finger inside. Morgan sucked it clean. She held it in her mouth and then slowly swallowed, making a funny face. I pulled Morgan's face to mine and kissed her. I shoved my tongue inside and could detect a slight taste of Zeke's sperm. I teased Morgan's tongue and was pleasantly surprised when she dashed her tongue inside my mouth. In a second it retreated and Morgan stood up. Her face was crimson and covered in sweat.\n\nJanelle looked at the boys, lying spent on the couch.\n\n\"If you guys want, you can clean my tits with your mouth.\"\n\nThe guys stared at the cum-covered breasts. As much as they wanted to suck on her tits, they were not sure they wanted to taste cum. \n\n\"Uh, too bad. Gretchen?\"\n\nI quickly moved and took one breast wholly into my mouth. Ever since Janelle exposed her boobs, I was wondering how they would feel. I pulled one dark and hard nipple into my mouth. I licked it clean and sucked the hard stub. Before moving on, I asked Morgan if she wanted to do the deed. She shook her head. I moved to the other small mound and repeated my cleansing. This time I finished by biting down on Janelle's nipple and sucking hard. Janelle cried out and pushed her chest against my mouth.\n\nWhen I finally released her, Janelle sat down, breathing hard. She looked at her extended nipple and could detect slight teeth marks around her breast.\n\n\"Fuck, bitch, that turned me on.\" Janelle ran her tongue along her lips as she massaged her breasts. \"Wanna finish what you started?\"\n\n\"Nah, I'm good,\" I said. \"I think maybe it's time for the boys to find their clothes.\"\n\nJanelle squeezed both her breasts and muttered, \"Bitch. That is so fucking cold.\" I grinned at her. She flipped me the bird and then grinned back. \"I'll get you for this,\" she said.\n\nI tossed Zeke a towel and he cleaned up the remnants of his eruption. The guys pulled on their clothes. I gave them each a kiss, grabbed their crotch and thanked them for a fun time. They received similar treatment from Janelle. They stood by Morgan. She tentatively kissed Eli. I placed her hand it on his crotch. She could feel the semi-hard member under his sweatpants. When Zeke came to kiss Morgan, she surprised me by placing her hand between his legs. The look on her face indicated she was even more surprised to feel how big and hard it had gotten. When he slipped his tongue past her lips, Morgan sucked it. I was shocked when I saw that Morgan let her tongue follow his into his mouth. They pleasured each other for a few seconds. He pulled away with a happy smile and kissed her lips again.\n\nAfter the guys left, we three girls looked at each other. Janelle started laughing and soon all of us were bent over double. \n\n\"That was totally awesome,\" said Janelle. She had not put her top back on. \"They both came so hard.\"\n\n\"You showed them your breasts,\" said Morgan. \"And, you guys put your mouths on them. What did you expect?\"\n\n\"I guess that was a little over the top,\" I admitted.\n\n\"Fuck, no,\" Janelle shot back. \"It's not like we gave them a total blow job.\"\n\n\"It's the closest thing I ever saw to one,\" said Morgan, her face still flushed.\n\n\"See, you're getting more and more educated,\" I said. We locked eyes and I thought she was thinking about our kiss and if that was part of the education.\n\n\"So, how was touching your first dicks?\"\n\nMorgan's mouth moved without sound coming out. Finally, she swallowed. \"I can't believe I touched two erections. And, god, I saw them both ejaculate. Plus you kissed Janelle's nipples. This has been the strangest day of my life.\"\n\n\"I get that, Morgan,\" I said. \"But, did you like touching their erections?\"\n\nShe blushed once more and nodded. \"They're so hard.\"\n\n\"That's the whole idea of erections,\" said Janelle. Morgan seemed to have no more words.\n\nI was still tired. \"I think a nap is in order. Remember we have the bonfire tonight and homecoming tomorrow. It's going to be a hell of a weekend.\"\n\n\"Yeah, you're right,\" said Janelle. \"I admit it was an adrenaline rush with Eli and Zach and I'm crashing. I guess I should head back to my dorm.\"\n\n\"Or,\" I said, \"You can crash here. We can share my bed, if you don't mind.\"\n\n\"I don't mind,\" Janelle said as a smile crossed her face.\n\n\"Is that cool with you, Morgan?\" I asked.\n\n\"Sure. I think I'll nap for a bit. Then, I have a ton of work to get done. Right now, I have to go to the bathroom.\"\n\nAs soon as she left, Janelle pulled me to her. Her lips crushed mine. \"I'm finally going to sleep with you. And, I'm going to get back at you for teasing my tit.\"\n\nI kissed her back and stepped back. \"Janelle, we can only sleep. No making out and definitely no fucking, including playing with my boobs. That would freak Morgan out. I think she's had all the sex she can handle for today.\"\n\n\"This was hardly sex,\" said Janelle.\n\n\"For her it was like an orgy,\" I said.\n\n\"Ok, but you have to promise we can hook up at another time, otherwise, I might not be able to control myself.\"\n\n\"No, promises. But, it's certainly within the realm of possibilities.\"\n\nShe kissed me, only this time it was soft and hot. I responded and in seconds we were exchanging tongues. I slid a hand to her breast and she shivered. Just then I heard the door opening and we broke apart.\n\nMorgan looked at the two of us and noticed our labored breathing.\n\n\"Not interrupting, am I?\"\n\n\"Nope, just talking about the fun with the guys,\" I said. \"Let's get to bed.\"\n\nJanelle said she had to go to the bathroom and wanted to wash her tits. She pulled on a shirt and left the room.\n\nI took Morgan's hand and brought it to my lips. \"Are you ok, Morgan?\"\n\n\"You kissed me, Gretchen.\"\n\n\"Yes, it was an impulse. You have nice lips.\"\n\n\"God, does that mean I'm gay?\"\n\n\"No, honey, it just means we kissed. Did you hate it?\"\n\n\"I think I liked it. I got sorta excited, you know, down there.\"\n\n\"That's normal, Morgan. Don't let it bother you.\"\n\n\"Actually, Gretchen, it was a good bother.\"\n\nI smiled and she smiled back. I moved to her face and kissed her again. This time she really kissed back. I was surprised at the heat and intensity.\n\n\"Wow, Morgan, you're a great kisser.\"\n\n\"Now, I know you're putting me on.\"\n\n\"No way. That was a hot kiss. Did it affect you again?\"\n\nMorgan looked at the floor and nodded. I lifted her chin and kissed her again, this time using my tongue. Morgan let her body fall against me and when I pulled my tongue back, hers followed. I sucked on it. I moved one hand to her breast. Morgan sucked in a breath and pulled back.\n\n\"I can't, Gretchen.\" She eased my hand from her breast.\n\nI kissed her softly and told her I understood. \n\n\"You know, Morgan, if you want to, you know, relieve some pressure, you can do it.\"\n\n\"With Janelle in our room?\"\n\n\"Sure. I'm quite sure she masturbates. Maybe the three of us could do it together. I know I'm super horny.\"\n\n\"Gretchen, I can't do that. Sorry.\"\n\n\"Nothing to be sorry about. So, we'll all just take a nap. Is that ok?\"\n\n\"Well, maybe if you gave me one more kiss, I might be able to go along with it.\"\n\nI pulled her mouth to mine. This time it was tender. I ran my tongue along her lips. She let her tip touch my tip. I sucked it into my mouth and her breath was hot and fast.\n\nWe heard the door and broke apart. I thought this was the second time in a couple minutes that the opening of a door interrupted a kiss with a sexy girl. I couldn't honestly say which one was better. I looked at Morgan and her open face. My heart leaped in my chest with a feeling of great tenderness. At that second, I realized how much I felt for her. Never would I want to hurt her and told myself to tread carefully with her.\n\nJanelle came in and peeled her shirt off. She unzipped her jeans and pushed them down. She was wearing a hot pink thong. It was obscene how good it looked on her. Morgan was standing behind her and stared at the tight buns. I pulled off my top and dropped my sweats. As per usual, I was commando underneath.\n\n\"Ooh, I didn't know we could go that far,\" cooed Janelle.\n\nI let her see me look at Morgan and said, \"It's ok, you can keep those on.\"\n\nMorgan sighed in relief and began breathing again.\n\nMorgan pulled the drapes closed. She took off her sweatpants, but left the rest of her clothes on and crawled into bed.\n\nI let Janelle get into my bed and she scooted over to the wall. I followed her, pulled the covers up and called over my shoulder.\n\n\"Wake me up if I sleep too long, Morgan. We can have lunch together.\"\n\n\"Sure.\" \n\nI moved behind Janelle and spooned her. She pushed back. Her hands slid her thong off and I felt her naked ass push into my pussy. Calling upon all my strength, I resisted the temptation to touch the naked woman in my arms. Janelle pulled my hand to her breast.\n\nI kissed the back of her neck, inhaling the musky smell of sweat and perfume. \"This is all for now, Janelle,\" I whispered. She pushed her ass back again, and then we settled down to try to sleep. I enjoyed the feel of her hard nipple against my palm as I drifted off.\n\nIt seemed like I just closed my eyes when I felt a tap on my shoulder. I turned to see Morgan standing next to my bed. Janelle was still breathing deeply and was sound asleep. Morgan was wearing only her grannie panties below her waist. She still had on her sweatshirt above.\n\n\"It's almost one,\" she said in a low voice so as not to wake Janelle. \"I'm hungry and want to go to lunch. Can I bring you something back?\"\n\n\"I'll come with you. I'm hungry, too.\"\n\nI looked at the crotch of her white underwear. I touched the inside of her thigh and ran my hand up to lightly touch the front of her panty.\n\nMorgan sucked in a breath and jerked back. I eased out of bed and pulled Morgan to me on her side of the room. Her arms slowly snaked around me and we hugged.\n\n\"I had a nasty dream about you,\" I said softly. \n\nMorgan looked over my shoulder at the nude back of Janelle, exposed where I pulled down the covers.\n\n\"You mean you were naked in bed with that hot body and thought about me?\"\n\nI glanced back at the tight chocolate colored ass.\n\n\"Yeah, that's what happened.\"\n\nI took Morgan's hands and moved them to my bare butt. \n\n\"Oh, Gretchen, this is too much.\"\n\nI kissed her and she shivered. As I kissed her harder, she squeezed my buns. \n\n\"Gretchen, this is crazy. Can we please stop?\"\n\n\"Absolutely, as soon as you let go of my ass.\"\n\nMorgan laughed and with a final squeeze, freed my buns.\n\n\"They are so small,\" said Morgan. \"Especially compared to mine.\"\n\nI reached behind her and slipped my hands inside her panty and grabbed her naked butt.\n\n\"Oh my god, Gretchen,\" she gasped.\n\n\"Morgan, you have an awesome ass.\" I squeezed it and kissed her again. I heard Janelle cough and released my roommate and stepped aside. I turned to see Janelle starting to stir. She still had her back to us.\n\nI faced Morgan and cupped her crotch. I felt the heat and sensed moisture. I could also detect a thick patch of pubic hair behind the panties.\n\nMorgan swayed at my touch. \"You are a sexy woman, Morgan. Very sexy.\"\n\nMorgan stepped back and sat heavily on her bed. She slowly shook her head, trying to regain control.\n\n\"What time is it?\" Janelle was now sitting up. Her breasts looked so good as she stretched.\n\n\"Time for lunch,\" I said. \"Let's get dressed.\"\n\nJanelle climbed out of bed and stretched again facing the both of us. Morgan stared at the thin dark strip between her legs. Janelle turned and bent to look for her thong under the covers. Her pussy opened and we both saw the bright pink and a quick view of her butt hole.\n\nI touched Morgan's foot with mine and mouthed, \"Wow.\"\n\nMorgan blushed.\n\nThe three of us dressed and headed to the Commons. We sat with a couple other friends and exchanged stories about our male friends that we saw naked earlier. I'm sure Morgan was pleased we left out the masturbation part. We did show them the pictures.\n\n\"Not fair,\" said Joanie, one of our friends. \"You guys got to grab their dicks. I just watched them go by.\"\n\n\"Yeah,\" said Sarah, \"but at least I got to see Josh naked.\"\n\n\"Josh, the basketball player?\" I asked.\n\n\"Josh, the guy she has wet dreams about,\" said her roommate Joanie.\n\nSarah licked her lips.\n\n\"So, did it live up to your imagination?\" asked Janel.\n\n\"It was awesome,\" said Sarah. \"Totally awesome.\"\n\nThe girls chatted about specific guys and I felt my phone buzz. I opened it and was surprised at the text. I smiled and typed a response. Slipping the phone back in my pocket I zoned back into the conversation. We exchanged more favorites and Joanie asked Morgan which dick she liked the best.\n\nMorgan's mouth worked, but no sound came out.\n\n\"Well, there were so many to choose from,\" I said, \"Why zero in on just one. I think I speak for Morgan when I say, we loved them all.\"\n\nThe girls agreed. We finished up and made plans to meet later for the bonfire.\n\nJanelle said she was going to her dorm to crash and work on a couple things.\n\nMorgan was quiet on the walk back to our room. She pulled off her jacket and sat at her desk. She began to study.\n\nI pulled off my top and dropped my jeans. I plopped on my bed and read for a while dressed only in my thong. I wondered if Morgan were all right.\n\n\"Hey, Morgan, you ok?\"\n\n\"Sure. Why wouldn't I be?\"\n\nThe sharpness of her answer startled me. \n\n\"Morgan, what's up? Are you pissed at me?\"\n\nNo answer.\n\n\"Was it all that talk about naked guys at lunch? I didn't mean to jump in like that when Joanie asked you about your favorite? I just thought maybe you were a little embarrassed. I'm sorry if that bothered you.\"\n\nMorgan spun in her chair. Her cheeks were red and tears formed in the corner of her eyes. She looked at my nearly naked body.\n\n\"Morgan, what's wrong?\"\n\n\"Gretchen, what is going on? You have to tell me. Just what is going on?\"\n\n\"Going on with what?\" I could see that Morgan was upset, but I was puzzled about what was causing her to be like this.",
        "\"You kissed me. You put your hands in my panties and felt my butt. You put your hand on my, on my...between my legs. You put my hand on your breast. Are you like in love with me?\"\n\nIt hit me hard. What I thought was teasing and light flirting was something else altogether to Morgan. Knowing that Morgan never had a sexual relationship meant that I was the first person to arouse her. I looked at her and was overcome with conflicting emotions. She is an attractive woman, both physically and personally. I liked her a lot and was happy she was my roommate. \n\n\"Was that your first time kissing a girl?\"\n\n\"You know it was, Gretchen. It was just about the first time kissing anyone.\"\n\n\"Just about?\" I asked.\n\n\"Duh, Like Zeke and Eli kissed me before they left.\"\n\n\"Yeah, but that wasn't really a sexy kiss,\" I said. \"Or, was it?\"\n\nMorgan avoided my eyes. \"Hey, what happened?\"\n\n\"Zeke put his tongue in my mouth.\"\n\n\"He did!\"\n\nMorgan nodded.\n\n\"And?\" I prompted.\n\n\"It was nice,\" she said and smiled. \"But, not as nice as when you did it. So, like, what's going on?\"\n\nI patted the space next to me on the bed. \"Come over and we can talk.\"\n\n\"Can you put your shirt on?\" asked Morgan.\n\n\"Oh, does this offend you?\"\n\n\"Not it makes me uncomfortable, sorta turned on. I don't want to be all bothered while we talk.\"\n\nI grabbed a tee shirt and pulled it on. Morgan sat next to me on the narrow bed as we rested our backs against the wall.\n\nI held her hand. \"Morgan, I don't know where to begin.\"\n\n\"Why did you kiss me like that?\"\n\n\"Honestly, I didn't think about it. You looked so cute and I felt so close to you. I just did it. But, then it felt so, so good that I wanted more. I'm sorry. I should've talked to you about it or something. It was really sexy. Besides, you kissed me back.\"\n\n\"Gretchen, please be honest. Are you gay?\"\n\nI wanted to laugh, but knew that would offend Morgan. \"No, Morgan, I'm not gay.\"\n\n\"But you said you felt sexy kissing me.\"\n\n\"Yes. That is so true.\"\n\n\"But, doesn't that make you gay? And, you touched me, Gretchen. Touched me where no friends touch each other. Doesn't that make you gay?\"\n\nI pulled her head and rested it on my shoulder. \"Morgan, I told you that I enjoy sex. Sometimes being close to a woman feels so good. And, yes, I have had sex with girls. I told you about Lisa. She and I did it, actually we sorta did it a lot. Still, that doesn't mean that most times I prefer sex with a man. I don't consider myself gay. I think the real question you have is, are you thinking you're gay?\"\n\nMorgan's breath caught and a second later she started sobbing. I pulled her down and held her in my arms. I let her cry with her head resting on my chest.\n\nStroking her hair, I tried to comfort her. \"It's ok, Morgan, let's talk about it.\"\n\n\"Gretchen, when we were kissing I was feeling like the time I masturbated. I mean I had the same sorta feelings between my legs. So, I'm thinking I must be a lesbian.\"\n\n\"Morgan, this is your first real sexual experience. I think you are discovering that sex is powerful and something that makes you feel good. I don't think that because you have these feelings makes you a lesbian. I think that you are just learning about sex. The fact that the first time is with another girl, well, that's just the way it is. How about when you felt Zeke's erection? Did you have any of those feelings?\"\n\nMorgan paused and then said she did.\n\n\"You liked touching him, didn't you?\"\n\n\"Yes.\"\n\n\"And, you probably felt excited between your legs, right?\"\n\n\"I did.\"\n\n\"And, when you guys kissed, did you like that?\"\n\nShe couldn't look at me, but nodded.\n\n\"Did you feel that between your legs?\"\n\nShe nodded so softly, I barely noticed it.\n\n\"So, Morgan, this is all new for you. Don't worry about it, enjoy it.\"\n\nMorgan was quiet for a long time. Her head rested on my shoulder. She then straightened up and looked at me. \"What if I'm falling in love with you?\"\n\nShe looked away as soon as she spoke. I could feel her crying.\n\n\"Morgan, honey, look at me.\"\n\nSlowly she lifted her head. \"Please don't cry. I now understand I was being so unfair to you. I thought it was fun and that I was helping you understand your body and what it can feel. I never meant to lead you on.\"\n\n\"I know,\" she said between sobs. \"I'm such an idiot. I know that you would never want someone like me. Especially when you could have someone so sexy like Janelle. Or, one of the guys.\"\n\nI took her face in my hands and pulled her close to me. \"Morgan, I would make love to you in a second and I would do it before I ever even considered those other people. You are beautiful, smart and so, so nice. But, I'm beginning to understand that it would mean different things to each of us. To me it would be wonderful, hot sex with someone I like a lot. To you, it would mean giving your virginity to someone. That's a big step, honey. I'm not sure you're ready.\"\n\n\"You really would pick me over those others?\"\n\n\"Yes.\"\n\nMorgan chuckled. \"I don't believe you, but it sounds so nice I think I'll pretend to believe you.\"\n\n\"Can I kiss you, Morgan?\"\n\nShe nodded and puckered up. I gently let my lips find hers. The intensity surprised me and I pulled us close to each other. \n\n\"God, you are the best kisser,\" I said.\n\n\"Thanks.\"\n\n\"How about this, Morgan. Let's concentrate on being friends. Let's see how that goes. If we can do that, maybe then we can decide if we want to have sex. I mean real sex. Like all the way sex.\"\n\n\"You mean kissing each other in places besides our lips?\"\n\n\"See, you are so smart.\"\n\nMorgan initiated the next kiss. \"I can do that, I guess. Anyway, I still get to see you naked.\"\n\n\"Yeah, maybe I'll have that pleasure with you some day.\"\n\n\"Don't hold your breath,\" Morgan said and kissed me. \"Well, don't hold your breath for too long.\"\n\n\"How about if we get off together?\"\n\n\"Like masturbate together?\"\n\n\"Yep.\"\n\nMorgan fell into another long silence. Finally, she said, \"I could try it, if we are in our separate beds and I can keep the covers on.\"\n\n\"God, you take half the fun out of sex,\" I said. Letting her know I was just kidding I then added, \"Still, half the fun is better than none of the fun.\"\n\nMorgan hugged me. We still had time before dinner and before the time we were going to meet our friends for the bonfire.\n\n\"How about now?\" I said.\n\n\"Now, what?\"\n\n\"I'm horny. Let's do it now.\"\n\n\"Gretchen, it's daylight.\"\n\nI laughed so hard I thought I was going to pee myself.\n\nMorgan was getting pissed. I caught my breath and said, \"Morgan, don't get mad. It's just that I never think about time when I want to get off. I do it when I need to do it. Sex is not just for at night, with the lights off and the shades drawn. Come on, honey, take a baby step with me.\"\n\nMorgan remained quiet. I took the first step and pulled my clothes off. \"I'm getting in my bed and I'm going to have a really, really big orgasm. Go on get under your covers.\"\n\nI pulled down the bedding and crawled in my bed. I pulled the covers up to my boobs. Spreading my legs I let my hand come to rest on my pussy. Greeted by hot dampness, I started playing with my clit.\n\n\"Oh, Morgan, this feels really good. Come on, join me.\"\n\nMorgan stood and moved beside her bed. Slowly she lowered her pants and pulled off her socks. Taking a deep breath, she pulled her sweatshirt over her head. She now wore only her panties and her bra. I could not help but stare at her chest. The thick bra hid two large, creamy boobs. I couldn't imagine what they would look like freed from their entrapment. Morgan blushed deeply as I continued to stare.\n\n\"Wouldn't want to give me a little peek?\" I asked. \"They look so beautiful.\"\n\nMorgan grinned, shook her head and got under her covers.\n\n\"I can't believe I'm doing this,\" she said.\n\n\"Take your bra off.\"\n\n\"Gretchen, I don't think...\"\n\n\"Take it off, Morgan. It will be so much better.\"\n\nMorgan sighed and pulled the sheet over her head. After a few moments of struggle, she dropped the formidable garment on the floor. \n\n\"Do you like the way your boobs feel without a bra?\" I asked.\n\n\"It's strange. I at least usually have a tee shirt on. I feel like I'm doing something really naughty.\"\n\n\"You're doing something really natural, Morgan. Now, let's get to the fun part. Slide your hand under your panties.\" I saw Morgan hesitate. \"Or, you could take them off and add them to the pile.\"\n\n\"I've never been naked in bed,\" she said.\n\n\"So, who's going to see you? It's lots more fun if you aren't wearing underwear.\"\n\nMorgan wiggled out of her panties and deposited them on top of the growing pile.\n\n\"Imagine that, Morgan is naked.\"\n\n\"Don't make me think of it. I might scream.\"\n\nWe both laughed. \"Ok, now start out slowly rubbing your pussy.\"\n\nI could tell her arm was moving and I let my hand begin the familiar motion.\n\n\"Feel good?\"\n\n\"Very. You're right it's a lot sexier without underwear.\"\n\n\"Play with your nipple with one hand and keep stroking with the other.\"\n\nMorgan followed my instructions and soon closed her eyes and her tongue protruded slightly from her rosy lips.\n\n\"Are you wet yet?\"\n\nA second later, Morgan whispered, \"Yes.\"\n\n\"Ok. Use a finger inside while your thumb rubs your clit. And, keep playing with your boob.\"\n\nA low groan escaped her lips and I assumed she was following my instructions. I was doing the same, only three fingers were inside me. Morgan was lifting her hips and rolling her head back and forth.\n\nHer eyes were still closed. I couldn't stop myself. All thoughts of not pushing the sexual boundary between us were disappearing faster than a morning fog. Maybe she was ready to take the next step. I know I wanted to. Sometimes my power controls me as much as I control it.\n\nI slipped out of bed and crossed over to her. I lifted the covers and crawled in next to her.\n\n\"Gretchen! What the heck are you doing?\"\n\n\"I want to be next to you.\"\n\n\"No. This isn't right. I can't do it with you here. Please go back to your bed. God, Gretchen, I'm naked.\"\n\n\"So, am I, honey.\" I kissed her gently. She initially held back, but then relented and kissed back. My tongue slipped into her mouth as I moved tight to her body. I could feel my breast push into hers. She made a sound that came deep from her throat.\n\n\"Gretchen, this feels so sexy. I can feel your breasts next to mine. But, I can't touch myself with you here. Honest, I can't.\"\n\nI smiled and told her, \"You don't have to, sweetie.\"\n\nI slid my hand down her stomach to rest on top of her thick bush.\n\n\"Oh, my god. Oh, my god, Gretchen. Please, no. This is so wrong.\"\n\nI pushed down and let my finger rest on her hard clit. She grabbed my wrist and tried to pry it away. I used my other hand to loosen her grip. I let my finger slide along her lips, thrilled by the hot wetness I encountered.\n\n\"Gretchen, that feels too good. Oh, it's wrong. Wrong.\" Her head was rolling back and forth, her tongue extended out as her eyes clenched tightly. \n\nI moved my finger up and down slowly. Morgan stopped talking and struggling. Her legs moved apart a couple inches. I stroked harder, ending each movement by rubbing her clit. Morgan's hips were rising to meet my efforts.\n\nI moved my mouth to hers and we kissed. Our tongues wound around each other. As I plunged deeper into her mouth, my finger penetrated her sex. Morgan cried out. I slowly began pumping my finger in and out of her vagina. I did not go deep in case she still had her hymen.\n\n\"Oh, no, please don't,\" she whimpered. When I added a second finger, she pulled her face back and drew in long gulps of air. I moved my free hand to her right breast. The soft pillow could not be contained by my grasp. Pinching her nipple, I picked up the pace of my fingers down below.\n\nHer nipple was now hard and stiff. I grabbed the top of the sheet with my teeth and pulled it down. Morgan shook her head, but made no sound.\n\nMy eyes took in the splendid sight of her large breast. The milky white skin served to show off her large pink areola and dark red nipple. I fondled her breast and moved my mouth to latch onto the nipple. Morgan made sounds, but no words escaped her.\n\nI sucked her nipple and lashed it with my tongue. By her reactions, I judged that Morgan had at least two orgasms so far. I was not finished. \n\nReleasing her nipple, I kissed her other breast and then slowly kissed my way down to her navel. I tongued that sweet depression and kept moving south.\n\n\"No, you musn't, Gretchen. That is too much. I can't have you kissing me there.\"\n\nI pushed my fingers inside her and put my mouth on her pubic mound. Her hair was thick and soft. The blond curls tickled my nose. \"I want this more than anything else, Morgan. More than anything.\" \n\nHer hands were entwined in my hair. She tried to pull me up, but I forced my face between her legs. Her scent nearly overpowered me. It was the most erotic sensations I had ever experienced. I moved my body so that I now rested between her thighs, my legs dangling off the bottom of the bed. Kissing her thighs, I could see her wetness flowing freely.\n\nWanting to wait no longer, I pressed my mouth to her lips. If she pulled me off at the point, I would relent. I did not want her to look back on our first time as some sort of an assault. From this point forward, she could have control, even if she did not know it.\n\nShe cried out and began to shake. \"Tell me if you want me to stop, honey.\" Morgan grunted. I paused. I felt her hands on the back of my head, her fingers wrapped in my hair. At first she tugged. I offered a slight resistance. Suddenly, she pushed my face hard against her pussy. \"Gretchen, I'm ready. Please make love to me.\"\n\nI pushed my tongue far into her canal and took her clit between my fingers. Her taste was strong and sweet as her juice covered my mouth and chin. I drove my tongue in and out in rapid succession. Morgan screamed and her thighs clamped around my head. She yanked me by my hair and this time pulled me from her pussy. A stream shot from her pussy, covering my chin and face.\n\nHer body contorted with the seemingly endless orgasm. Not wanting to push it any further, I wiped my face on the sheet and moved up to take her in my arms. I pulled the covers up and with Morgan's head resting on my chest, I softly stroked her hair.\n\nFinally her breathing returned to normal and she kissed my neck.\n\n\"Are you ok?\" I asked.\n\n\"I have no damn clue,\" she said. \"I can't even begin to describe how that felt. It was like I was out of my body. So, that's sex? Wow. God, Gretchen, I think I peed the bed.\"\n\n\"No, you squirted. It was awesome and beautiful. Remember this is just a glimpse of what sex is like.\"\n\n\"But, I didn't do anything to you,\" said Morgan.\n\n\"Honey, just being able to touch and kiss you. Watching you have an orgasm like that and knowing I was responsible. Well, that was beyond joy.\"\n\n\"Oh, Gretchen, I love you.\"\n\n\"Yeah, and I love you.\"\n\n\"I never want this moment to end,\" Morgan said and timidly rested her hand on my breast.\n\n\"Morgan, this is only the beginning. I promise you the best is definitely yet to come.\"\n\n\"How could it be any better?\"\n\n\"Let's see. We can do this lots more. You can practice masturbating until you can really give yourself humongous orgasms. And, you can go out with Zeke.\"\n\nMorgan rose up quickly. \"What?\"\n\n\"Yeah, I got a text from him after they left. It was when we were at lunch. He wanted to know if you were dating anyone. I told him no. He couldn't believe it. He thinks you are the most beautiful girl he's ever seen. He also said he never had a better kiss in his life. He asked me if I would put a good word in with you.\"\n\n\"Zeke thinks I'm beautiful? I can't believe it.\"\n\n\"Believe it, girl. You are a hot cookie. I say go out with him. He's really nice and smart, which I know must rank high on your checklist. Plus, you got to feel his hard dick. From experience, I can tell you that is a very nice dick. I say all that is the start of a beautiful relationship.\"\n\n\"Gretchen, this is all too much. Just a few minutes ago, I was a complete sex geek. Now I've had sex with my roommate and a cute guy wants to take me out. I will never be able to cope.\"\n\n\"Morgan, what have I told you about never?\"\n\nMorgan laughed, grabbed my breast and said, \"When it comes to sex, never say never.\" She bent over and put an almost chaste kiss on my nipple. Grinning she looked up at me.\n\nI kissed her. I knew that the rest of our year together was going to be a hell of a lot of fun. I had just learned the biggest lesson about my power. I used my body to bring Morgan to a new understanding of herself and her own sexuality. I had two guys cumming because of my influence. A hot, exotic woman was dying to take me to bed. If I could influence them, I knew I had a power that had almost limitless potential. I was looking forward to learning more about girl power. \n\n* * * * *\n\nNote: Depending on what you, the readers, want there is a lot more to explore with our group of college freshmen. If there is interest, there will be more tales of how Gretchen is learning to use her power. "
    ],
    "authorname": "AltheaRose",
    "tags": [
        "nude modeling",
        "masturbation",
        "oral sex",
        "exhibitionism",
        "first time",
        "girl-on-girl",
        "jerk off party",
        "nude runners",
        "erections"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/girl-power-ch-02"
}