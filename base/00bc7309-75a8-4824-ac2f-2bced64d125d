{
    "title": "Aurora - Way of the Goddess Pt. 08",
    "pages": [
        "This is a work of fiction. All characters depicted are 18 years and over\n\n*\n\nThe younger of the Bragg brothers, Roger was also the most industrious and had the multi-million dollar waterside property to prove it. It had three things in particular Caddy's own humble residence lacked -location, location, location. Situated on the north shore, with a view of the Opera House out one window and the ionic Harbour Bridge out another, Tanya's 'shack', as she liked to call it, was more palace than mere mansion.\n\nTanya spent the afternoon preparing the guests' last supper. The fare was modest, healthy and delicious, a fitting finale after the monotony of serial gourmet take-outs. She was still fussing in the kitchen when a voice called, 'Helloooo' and the scholarly Maya strolled in, clad in a light summer dress and black high heels. Freshly showered and beautifully preened, she dumped her black and white checkerboard shoulder bag on the black granite counter and tossed her car keys on top. \"Are they back?\" she asked brightly, raising her arms to sweep back her hair.\n\n\"Hello Aunty Tan,\" Tanya muttered, not looking up, \"my you look well.\" \n\nMaya rounded the counter and kissed Tanya wetly in the ear. \"Hello Aunty Tan, my you look fuckable.\"\n\n\"That's better. Where's Godzilla-with-a-handbag?\"\n\n\"Mum? There's a soiree at the gallery. She'll be round later.\"\n\n\"Brrr...\" Tanya shuddered, \"poor Caddy. Death by a thousand platitudes. Better her than me.\"\n\n\"Maya!\" Beck cried, running into the kitchen. They fell into a giggling clinch and staggered across tiled kitchen floor. \n\n\"Oh, Rebekah, with a 'k' and an 'a' and an 'h'.\" Maya waxed, \"It's been so long. How I've paced the rugged shore, year after year, rain hail or shine, searching for your sails on the horizon.\"\n\n\"Well you're an idiot, aren't you? We flew.\"\n\n\"Did you miss me?\"\n\n\"Of course I missed you. Did you miss me?\"\n\n\"Uh huh.\" Maya nodded. Yes, she had, but not as much as she'd missed Beck's old man. \"Where's Damon?\"\n\nBeck stiffened imperceptibly. Picking up the blip, Maya hugged her. \"Just one more night, Becks? Can I?\"\n\nBeck was briefly tempted to tell her about Vicky, just out of spite, but in the end simply shrugged. \"It's fifty bucks an hour, or part thereof.\"\n\n\"Fifty?\" Tanya demanded. \"Aren't you selling him a bit short?\"\n\n\"Did I say fifty? I meant a hundred.\"\n\nMaya drew a breath. \"Bargain!\"\n\n\"Five hundred bucks and that's my last offer.\"\n\nTanya gave Maya a wink then looked at Beck. \"For that old crumbly? Now you're pushing it.\"\n\n\"How about my undying gratitude?\" Maya suggested. \"Seriously.\"\n\n\"As long as it comes with a big double dildo.\"\n\n\"I wouldn't have it any other way.\"\n\n\"What's this, Moosh?\" Watson demanded, strolling in, \"You sending me bankrupt again?\" \n\nMaya bounded into his embrace and threw her arms around his neck. \"I just bought you.\" she announced, grinding her pubic bone against Watson's half a bar.\n\n\"Really. How much?\"\n\n\"Fifty bucks and a spin on a double dildo.\"\n\n\"Fifty bucks?\" Watson cried. \"There's one born every minute.\"\n\n\"I brought you a present.\" Maya said, pulling free. Reaching for her shoulder bag she rummaged around inside, then pulled out a small black bundle. \"Here,\" she said, \"a little souvenir.\"\n\nWatson bunched the tiny black briefs under his nose. They were still slightly damp, redolent of girly musk and perfume. \"Aww, you remembered.\"\n\n\"They suit you, Dommy.\" Beck said.\n\n\"They're Paula Dodd's.\" Maya explained. \"I swapped them for the ones we made yesterday.\"\n\nWatson turned the briefs over, then opened them up and peered inside. \"That's Paula's.\" Maya nodded at the flaky white residue in the crotch. \"I made her cum in them. Well, I didn't make her cum, not this time anyway, but I told her she had to squirt in her panties before we could swap.\"\n\nA presence loomed at Watson's elbow as Beck leant in for a look. \"Sure she didn't just blow her nose in 'em?\"\n\n\"Nuh uh,\" Maya shook her head. \"I watched her do it to make sure she didn't cheat. Then we swapped knickers. She wore mine but I saved hers for you.\"\n\nAnd sat around school for the rest of the day without any undies. Beck reached down and squeezed Watson's straining cock. \"Well that did the trick.\"\n\nBending, Maya reached under her dress to skim off her lacy pink knickers. \"I know I said I'd give you a pair, but can I keep these after we finish? I'll give you a pair the next time, I promise.\"\n\n\"Well I can see where this is heading,\" Tanya tutted, \"and it's not the dinner table.\"\n\n\"Why not?\" Maya smiled sweetly, \"That's where we did it the last time.\"\n\n\"I thought we might eat out by the pool.\" Tanya said. \"I was actually thinking dinner but it looks like the menu's just changed.\"\n\nTanya's pool was indoors, twenty-five meters by ten, salt water under a polarizing glasshouse that also served as a conservatory. The glazing was opaque to the neighbours but provided a spectacular view of the harbour from inside. The pool shimmered under the late evening sun, barely stirred by labouring robots. Beside it, surrounded by greenery, was a showroom array of expensive patio furniture, including fabric-cushioned sun lounges in various degrees of recline. Music wafted out of the fernery, the radio of all things, ad-free with a nightly mix of alternative music.\n\nIt was Beck's first glimpse of the pool- Tanya had been saving the best till last- and she was already undressing at the mere sight of it. Kneeling at Watson's feet, Maya tugged his shorts down. The old man's erection sprang free, almost batting her in the eye and, seizing the shaft, she commenced rubbing the knob all over her face.\n\n\"Really,\" Tanya tutted, \"I don't know where you get it from.\"\n\n\"Bullshit!\" Maya replied. \"You taught me everything I know.\"\n\nWatson looked at his meat, clutched in Maya's little hand. It reminded him of a fire hose, swelling and stiffening as the pressure came on. \"Not too tender after yesterday?\" he asked.\n\n\"No way.\" Maya shook her head.\n\n\"What about Beck?\" Tanya asked. \"Did she say it was okay?\"\n\nMaya looked at Beck, stark naked, poised at the edge of the pool. \"We're heading home tomorrow.\" Beck shrugged, \"Might as well.\"\n\n\"Make sure you remember this, Maya Elizabeth.\" Tanya admonished. \"Generosity like this has got to be a two-way street.\"\n\nThere was a tiny splash as Beck cut the water as clean as a knife. \"How could I ever forget?\" Maya said, peeling her dress off overhead. Reaching behind her back, she unhitched her bra, pushing her chest out as she did. Watson groaned as her tits bounced free, nipples erect, ready for sucking.\n\n\"God they're gorgeous!\" he said with a shake of the head, gazing in wonder at the two perfect cupcakes.\n\n\"Do you really think so?\" Maya cooed, giving her little girls a loving fondle.\n\nTanya walked up behind Maya and slapped her butt. \"Look what you've gone and done now.\" she chided, nodding in the direction of Watson's dribbling penis.\n\nHands on his arms, Maya backed the old man up to a sun lounge. \"I think I know a way we can fix that.\"\n\nRipping off his T-shirt, Maya pushed Watson onto the coarse cotton cushion, then leant over and engulfed his cock all the way to the back of her throat. Eyes closed, Watson put his hand on the back of her head to follow it bobbing up and down in his lap.\n\nBeck hauled out after an obligatory three or four underwater laps, hands clasped, elbows in, leaving a trail of sodden footprints behind. \"That was fast.\" she observed, gesturing with her chin at the pair on the pool chair.\n\nTanya looked at her, weighing her options. Streaming water, Beck's slim, tanned, almost serpentine body with its pointy little tits and gently heaving belly was a sight to behold. There was other stuff pending- a trophy wife's work was never done- but Tanya had never been one to let mundane responsibility stand in the way of juicy self-gratification. Life just wasn't long enough. \"How about it Becks?\" she held out her hand, \"You and me? For old times sake?\"\n\nBeck guided Tanya's hand down to her soft, hairless mound. Between Tanya and her niece she was developing a quite a taste for the fairer sex and, swallowing the bitter little pill of resentment, she nodded. \"Mad if we don't\"\n\nPicking up a pool towel Tanya began patting Beck down, lavishing attention on her breasts and long, slender legs. \"What's happening, Aunty Tan?\" the old man asked, elevating the backrest to forty five degrees, \"Getting a little Beck into you?\"\n\n\"You just mind your own business, Damon Watson. We're busy.\"\n\nStanding, Maya hurdled Watson's legs and settled on his lap. \"Just ignore them, Damon. We can make our own fun.\"\n\n\"Last one to cum's a rotten egg.\" Tanya crowed as Beck stepped behind her to unbutton her black lace camisole. Pausing to mash her cold skin against Tanya's warm back, the blonde looked around for a comfortable venue.\n\nTanya gestured in the direction of the pool. \"Let's grab a couple of air mattresses, Honey. Rodge and I fuck on them all time.\"\n\n\"Sometime's even with each other.\" Maya tittered.\n\n\"Oh shoosh you. Don't go giving away our family secrets.\"\n\nKneeling on the edge, Beck retrieved a brace of air mattresses from the pool and gave them a shake. Arranging them end-to-end, she stood back while Tanya, naked except for her cast, flattened several white towels over the makeshift workbench. Sitting, Beck lay back and spread her legs while Tanya manoeuvred into position between the blonde's thighs. She set to, expertly tonguing Beck's tight pink slit into a state of arousal, and after thirty seconds all trace of the little blonde's angst was gone.\n\nWatson and Maya sucked face for a few minutes, the girl's fragrant hair hanging over his face. His hands wandered her body, bumping over her ribs, stepping down her spine, grasping the taut bubbles of her butt. Maya reached around and wrapped a hand around Watson's cock, then commenced ploughing her furrow with the big, round head. She parked it at her entrance and was tensing to impale herself when Watson pushed her up. \"Let's try it in reverse.\" he suggested, \"then you can watch Tanya and Beck.\"\n\nMaya bounded up. Standing, she spun around while Watson steadied her, then planted one foot either side of his thighs. Bending, she dropped to a squat, pushing her butt out to reveal her parted pink mound and the cute little pucker of her butthole. \"May I?\" she asked, reaching down to grab the old man's erection by the top of the shaft before lowering herself onto it. Contact. Her outer lips mushed open and the knob of Watson's penis sank up to the base in her entrance- instant bliss and an eye-popping vision.\n\nShe was tight, impossibly tight, and her ribs were heaving as she sucked in huge breaths. Head down, she studied the sight for a moment, a man's thick shaft poised to enter her body. She shook her head. \"God I love this!\"\n\nDown on the terracotta paving, Beck was on her back, her hips twitching with the sensation of an inch or so of tongue worming into her. Eyes closed, mouth wide open welded to Beck's mound, Tanya commenced fingering herself, savouring the taste of the fluids filling her mouth, a spit and pussy cocktail as invigorating as tonic. Beck clenched a fistful of Tanya's hair, her abdominals knotting as she lifted her shoulders. \"Put your finger in me?\"\n\nAnything to oblige. Pulling the fingers out of her own sopping pussy, Tanya propped herself up, then ran a fingertip up and down Beck's slippery furrow. Stretched apart by the spread of her legs, Beck's outer lips spontaneously opened, revealing the tiny pink petals of her delicate inner folds. Teasing them apart, Tanya dipped a finger through Beck's tight entrance and pushed. Beck arched her back as the woman's finger pentrated her, its probing tip heading straight for her G-spot. \"Suck me!\" she whispered, pulling Tanya down.\n\nWith a little bit of wiggling and some bouncing up and down, Maya coaxed her own pussy-opening over the head of Watson's dick, and he disappeared, popping inside her. She threw her head back, biting her lip, as the huge intrusion forced her membranes apart. Watson clenched his teeth, fighting the urge to ram himself into her, as hard, as deep and as violently as he physically could. Shivering, Maya settled her weight onto him, taking him in, inch by inch, until he bottomed-out deep in her belly. Watson patted her butt. \"Okay, Sweetheart?\"\n\nMaya nodded. \"Just getting used to it. I keep forgetting how big he is.\"\n\nThe image of Roger's monster flashed through his mind. The poor young girl had no idea. \"No problem, Honey, just take your time.\"\n\nBeck was starting to power-up, thrusting and grinding, riding Tanya's finger as the woman skilfully tongued her clitoris. \"Oh, Tan!\" she cooed, \"Oh Tan! That's lovely!\"\n\nTanya nodded on Beck's smooth mound. Yes indeed. It was.\n\nWrapping his hands around Maya's tiny waist, Watson commenced hoisting her up and down, the knob of his penis bumping over her cervix at the end of the line. Hands braced on his thighs, Maya pushed when he lifted, relaxed when he let go, controlling the depth while he took care of the tempo. The sight of her narrow, pliant back- her spine, her muscles, the divots of her Venus dimples, the way the small of her back merged into the swell of her buttocks- was like something out of a fantasy, almost too perfect to be real. Her cute little butthole, her plump wet pussy, distended around the shaft hammering into her, candy pink membranes clinging to his meat- the sight, the smell, the sensation- fucking Maya was a feast for the senses. \"Jesus.\" he whispered, \"Maya, that's awesome.\"\n\nHead tossing from side to side, Beck reached down with both hands and pulled herself open, giving Tanya a clear shot at the hard bead of her clit. She was jerking and convulsing, her insides flooding with fluid, as the neurochemical cascade lit the fuse and her orgasm got ready to detonate.\n\nMaya's insides were similarly on the boil. By five minutes she had acclimatised, and was dropping her weight onto Watson as hard as she could go, savaging her clit, working it for all she was worth while Watson squeezed her breasts and pinched her nipples. He was flirting with the inevitable himself but didn't want to be the first to cum. He had standards to uphold and was utterly determined to take out the title of Tanya's fabled Rotten Egg. Cupping Maya's butt cheeks in the palms of his hands, he held her at the top of the upstroke. \"You gonna cum, Maya?\"\n\n\"Mmm hmm,\" Maya nodded and her head fell forward, \"in a minute.\"\n\n\"Want to rub your clit? I'm not gonna last long.\"\n\nA shout from below announced Beck's belly-busting orgasm. Heels down, hoisting her ass into the air, she writhed and bucked pulling Tanya into her with two fistfuls of hair. Just hearing her did the trick, as if the phenomenon were contagious and transmitted by sound. Maya's insides gripped Watson's cock as he drove up into her, and she came with a long, drawn out groan that turned into a squeal of ecstatic abandon. Hands around her waist, Watson pumped Maya furiously up and down, ass off the chair, balls flopping.\n\n\"Jesus Christ!\" he exclaimed breathlessly, his pelvic floor clenching, his cock hosing semen into Maya intimate spaces, \"You are... so... fucking... incredible!\"\n\nSpent, Maya fell back, and Watson slung an arm over her chest as his hips jerked through the final throes of a first class climax. On her back on top of him, Maya dropped her legs to the sides and reclined, idly fondling the old man's cum-covered balls, running her fingertips around her distended pussy lips where his big, fat cock disappeared into her body. Watson scraped her nipple with a calloused fingertip. \"Well, Maya? How was that?\"\n\nMaya nodded but said nothing, lost for words.\n\nBeck sat up on the air mattress, looking all hot and bothered but patently satisfied. \n\n\"Look at you,\" Tanya said, \"you look like the cat who got the cream.\"\n\n\"She might be the cat,\" Watson huffed, \"but you got the cream.\"\n\nTanya nodded. \"And bloody delicious it was, too.\"\n\nWhen Watson's erection was too soft to fight off her muscle tone, Maya gradually extruded his cock, along with the remains of his generous load. She gave a last, determined squeeze and his knob popped out, her pussy dribbling fluid as her insides shrank to their normal dimensions. \"Dammit!\" she cursed, then turned in his lap, \"Guess what I forgot?\"\n\nThree pairs of eyes looked at her, waiting.\n\n\"My panties.\"\n\n\"Panties?\" Beck frowned. \"What for?\"\n\n\"To mop up the cum. For a keepsake.\"\n\n\"Where are they, Pookes?\" Tanya grunted, pushing up.\n\n\"In the kitchen. In my bag.\"\n\n\"Hang on you two.\" she said, raking her hair back, then limped away, heading for the kitchen.\n\n\"Aww,\" Maya cried, \"poor Aunty Tan. Not on your poor sore leg.\"\n\n\"Sore-schmore.\" Tanya waved her protest away. \"Can't afford to waste it.\n\nWatson closed his eyes, luxuriating in the feel of the body lying on top of him. Maya's muscles had relaxed and her breathing slowed, and their hearts were beating in time. Serene and surreal in equal measure, and after a moment he was even hearing voices.\n\n\"And what the bloody hell is going on here?\" Caddy demanded, striding in, handing Maya a scrunched up pair of lacy pink briefs. \"You two at it again?\"\n\n\"Ta, Mum.\" Maya replied, taking the panties, before scrupulously wiping every last drop of semen from Watson's cock and balls before swabbing her cunt. Task complete, she held them up to the light, studying the gooey residue approvingly. \n\nBending, Caddy feasted noisily on her daughter's little breasts, one at a time, nibbling her nipples to full attention. \"Fuck I'm horny!\" she breathed, then mimed the act of thumping her belly. \"Bloody period!\"\n\nRolling onto all fours, Beck stood. \"Bloody period.\" she snorted. \"Get it?\"\n\nStraightening, Caddy held out her arms. \"Becky you poor baby. All this greedy little bitch has done is fuck your old man. You'll be glad to see the back of us.\"\n\nThey exchanged a deep kiss and Beck shook her head. \"Nuh uh. I've got him forever. I don't mind her having a bit of a lend.\"\n\n\"Are you for real?\" Caddy cried. \"Move over, Mother Theresa.\"\n\nTanya hobbled in, a mobile phone stuck to her ear. \"Of course it's no problem... No it's not... I can... I can... I can and I will... No. Don't do anything, I'm on my way.\" All eyes were on her as she cut the call. Whoever it was, it sounded serious. \"It's Macca.\" Tanya announced and shot Watson a glare, \"She's in a state!\"\n\nWatson eased Maya off his lap, his ardour instantly wilting. \"Are you going over?\"\n\n\"What do you think?\"\n\n\"Want me to come?\"\n\n\"No! You stay right where you are, Mister. You've done enough damage.\"\n\n\"Why? What did she say?\"\n\n\"This may take a while.\" Tanya said, ignoring him. She looked at her sister. \"You right to get Romeo and Beck to the airport in the morning? If I'm not back?\"\n\n\"What's going on?\" Caddy frowned.\n\n\"Just ask lover boy.\" Tanya sneered. \"And stock up the naughty corner... mouldy bread and toilet water. It might just have a permanent resident.\"\n\nBeck took Maya's hand. \"Swim?\"\n\n\"Are you in trouble?\" Maya asked the old man as Tanya limped dramatically out the door. \n\n\"Apparently.\"\n\n\"Why? What's happened?\"\n\n\"Beck can tell you.\" Watson replied, slapping Maya's butt. \"Give me a minute to talk to your mum.\"\n\n\"What's going on?\" Caddy demanded.\n\n\"It's Macca.\" Watson explained, pulling on his shorts.\n\n\"What about her?\"\n\n\"Well, you see, I accidentally sort of... well, put it like this... \"\n\n\"Spit it out witness.\"\n\n\"Well... I sort of accidentally had sex with her.\"\n\n\"With Macca?\"\n\n\"Uh huh.\" Watson grimaced, bracing for impact. In his mind's eye he saw Caddy using a fist, realising too late she'd just slap him instead.\n\n\"Well good for you.\" Caddy sniffed, sitting beside him. \n\n\"You're not mad?\"\n\n\"Why on Earth would I be mad? You did the dumb little bitch a favour. At least she'll have had one decent fuck before she throws it all away.\"",
        "\"You don't like her?\"\n\n\"Macca? I love her to death, but the poor girl must be thick as two short ones. All that happy clapping and praising the lord. And the way she runs around after that god-awful boyfriend. A jolly good fucking is just what she needed. Did she dig it?\"\n\n\"At the time.\"\n\n\"I see. And what about afterwards?\"\n\n\"Well let's just say she had some buyer's remorse.\"\n\n\"Really?\" Caddy asked with a wicked smile. \"Did Macca go off the deep end?\"\n\n\"Somewhat.\"\n\n\"Did she beat her breast?\"\n\n\"Oh yes.\"\n\n\"And gnash her teeth? God knows she's got a set.\"\n\n\"Uh huh. Do you know how hard it is to find sackcloth and ashes these days?\"\n\n\"Try Bunnings? Self-flagellation aisle?\"\n\n\"Didn't think of that. Thanks for the tip.\"\n\n\"Think nothing of it. Still, more importantly. Damon? Did she cum?\"\n\n\"Oh yes.\" the old man nodded. \"A couple of times.\"\n\n\"Ubelievable! Were those her first?\"\n\n\"Orgasms? I'd say so.\"\n\n\"How did you do it? And in case you're wondering, no, I have no shame asking.\"\n\n\"Well...\" the old man hedged, \"we sort of started with mouth-\"\n\n\"Mouth? Victoria? No fuckin' way!\"\n\n\"Yes fucking way.\"\n\n\"Hang on. Are we talking about the same Victoria?\"\n\n\"Verily. Macca.\"\n\n\"The bible-thumping, happy-clapping, get down on your knees and please Jesus Victoria?\"\n\n\"The very same.\"\n\n\"And you say you started with mouth? Then what?'\n\n\"The old horizontal tango. Missionary of course. I thought it only appropriate.\"\n\nCaddy put a hand on her heart. \"You actually got that old cock into her?\"\n\n\"Here!\" Watson glared. \"It's only as old as the woman it penetrates.\" \n\n\"Yes, but... all of it?\"\n\n\"Right to the hilt.\"\n\n\"Well fuck me dead.\" Caddy breathed. \"You know, with a bit of luck, this might just wake her up out of her coma.\"\n\n\"Funny you should say that.\"\n\n\"Really? Why?\"\n\n\"Well we went for a run this morning and talked it all out. In between Vicky trying to run me to death.\"\n\n\"And?\"\n\n\"Well, let's just say she might have seen the light at the end of the pulpit.\"\n\n\"Seriously?\"\n\n\"Fingers crossed.\"\n\nCaddy winked. \"See! All she needed was a jolly good fucking. And just in time.\"\n\n\"Actually I think it was more the chat we had on the run.\"\n\n\"Bullshit, Damon. I don't care what she says, her mind was made up the minute you nailed her. All the deep and meaningful later, that's just window-dressing. Some nice mouth and a damn good skewering... how could a soul-crushing, woman-hating, radical fundamentalist death-cult compete with something like that?\" She punched him on the bicep. \"You randy old stud-muffin you! Well bloody done!\"\n\n\"Well, let's not talk too soon.\"\n\n\"What do you mean?\"\n\n\"You didn't hear Tan?\"\n\n\"Tanya?\" Caddy blew a raspberry. \"That bloody drama queen?\"\n\n\"It's a pretty big step.\" he persisted. \"After twenty-odd years of bible-bashing inculcation.\"\n\n\"No sweat.\" Caddy threw her arm around him and gave him a hug. \"No now you've gone and given her the antidote.\" She snapped her fingers, \"Fixed in a jiffy.\"\n\n\"And if it's not?\"\n\nCaddy winked. \"You'll just have to work on it. What do you say? A two-week course on some desert island, with Doctor Watson and his little blonde assistant? That should do the trick.\"\n\n\"I'll have to start charging.\"\n\n\"Now then, don't go getting tickets on yourself. Tell you what. How about a nice little fuck? Just you and me? For services to humanity?\"\n\n\"While you've got your... you know.\"\n\nCaddy leant into him. \"I won't tell if you don't. We can do it in the shower. I wouldn't normally, but this deserves a bloody celebration.\"\n\n* * *\n\nTanya was back just after one a.m. Watson's fear of a haunting, together with the prospect spending the rest of his days in the naughty corner was enough to curtail what should have been a festive final evening. Even the Cialis, administered by a sympathetic Caddy with no ulterior motives whatsoever, did little other than keep him erect. Sensing his energy, or lack thereof, the girls pleased themselves- and each other- in a variety of ways, from double-dildoing and oral to tribbing and fingers. Yet even they had their limits and when the house fell silent, Caddy checked to find they'd put themselves to bed and were cuddled-up snoring like fairytale princesses.\n\nWatson pulled on a baggy pair of shorts when he heard the door open downstairs, followed by the crash of Tanya's keys on the black rock bench. He had a huge Cialis soft-on, about ten kilos worth, reaching halfway to his knees, not even good for pissing out of. Shame and guilt were jostling for elbowroom along with fear of the sisterhood as he padded out of the living room into the kitchen. \"Tan?\"\n\n\"Still awake?\"\n\n\"How's Vicky?\"\n\nTanya planted her fists on her hips. \"Listen, Damon.\" she growled, nodding in the direction of his groin, \"Ever thought of just tying a knot in it?\" \n\nThe old man opened his mouth but nothing came out as he floundered for a reply. Tanya let him stew for a moment before putting him out of his misery. \"Well don't.\"\n\nHe gave his head a tiny shake. \"Say what?\"\n\nTanya bounded over to him and swept him into a whirling embrace. \"I think we did it!\"\n\n\"We? Did what?\"\n\n\"Dragged her out of their clutches. You and me. And Macca of course.\"\n\n\"What makes you say that?\"\n\n\"I was there when she made the call. First one to her handicap. She had him on speaker. And about a minute after he hung up that disgusting old preacher rang. Would never have believed it if I hadn't heard it with my own ears. Should have heard her. Cool as a cucumber. I really didn't think she had it in her.\"\n\n\"Really? So what did the creepers say?\"\n\n\"Aaron disowned her. Then the old scab put a curse on her and started talking in tongues.\"\n\nGoosebumps sprang up on Watson's skin. \"Why that filthy old snake oil salesman. How was Vick when you left her?\"\n\n\"Umm.. exultant is probably the best word. I always keep a bottle of Veuve in the car for such emergencies. We had a glass or two to celebrate then I tucked her in.\"\n\n\"Do you think she'll be okay?\"\n\n\"No,\" Tanya held him at arm's length, \"I think she'll be awesome. I've given her some time off just to get her bearings. If she makes it through the next few day's I reckon she'll be fine.\"\n\n\"Poor kid. I hope she makes it. Out of the cult.\"\n\n\"Well she's off to a flying start. Where are the girls?\"\n\n\"Sacked out. I think they fucked each other senseless.\"\n\n\"What about Cads?\"\n\n\"Same with her.\"\n\n\"So it's just you and me?\"\n\n\"I wanted to wait for the verdict.\"\n\n\"Really. You sure that's all?\"\n\n\"Pardon?\" \n\n\"Macca was a bit vague on some of the details.\" Tanya replied then ran her hands over her body. \"So what do you say? Want to show me on this life-sized doll where you touched her?\"\n\n* * *\n\nAirports. From the parking Nazis who made sure as many victims as possible were herded into the daylight-robbery car parks, to the self check-in consoles and the do-it-yourself bag drop, from disinterested staff and insolent security, to overpriced food and the brigands in the fashion shops, airports were one of Watson's most enduring aversions.\n\nWhile first contemplating throwing sanity to the winds and disappearing over the horizon, Watson drew up a list, pros on one side, cons on the other, to inform his decision. An ostensibly simple exercise, commenced over a joint and some beers, it morphed into an epic of soul searching, culminating in a creation that was more a circuit diagram than simple old list. But one single loathing prevailed, from the first green and red scribble, to the settlement at the marina where he handed over his life savings.\n\nAirports.\n\nBeck, in spite of her old man's angst, was like a puppy with two tails, aided and abetted in her enthusiasm by Tanya. Dressed in a pair of light grey, knee-length denims and a striped pink T-shirt, she was dashing from pillar to post, stocking-up on lollies and teen magazines, gushing over fashions in the clothes stores. Wearing a light summer dress that showed off the comely curve of her cast, Tanya hobbled after her with infinite calm and fathomless goodwill, saying exactly the right things when called upon for fashion advice. Watson studied the gorgeous socialite with a mixture of adoration and sadness. They hadn't even left yet and he was already missing her.\n\nTanya's phone rang and a bare moment later, the old man turned to the sound of flying footsteps behind him. A fit young woman was pelting down the corridor, obviously late for her plane. She was wearing well-worn, contour-hugging, khaki cargo shorts and Teva sandals, with a gingerbread silk waistcoat flapping open over breast-bouncing violet singlet. Looking away at first he did a quick double-take, as the initial sight of that pretty, flustered face made a connection.\n\n\"Sorry I'm late, Boss.\" Vicky panted and in the same breath said, \"And thanks again for the day off.\"\n\nTanya threw her arms open. \"Naww, come here, Darling.\" Sweeping Vicky into a clinch, Tanya rocked her from side to side then held her at arm's length. \"How are you travelling?\"\n\nVicky had trussed her hair up in a haphazard bun but most of it had already escaped. \"I've never been better!\" she replied a little manically. Pre-empting Tanya's next question, she said, \"They haven't called back.\"\n\n\"You cool with that?\"\n\n\"It's like I've just woken up from a twenty year nightmare.\" she nodded feverishly. \"I'm never going back! Never!\"\n\nWatson looked on, his heart pounding, as Tanya gathered Vicky into another rocking hug. \"Poor baby. I'd die if anything happened to you. Think of all the work I'd have to do.\"\n\nThe slap of gladiator sandals on polished floor tiles heralded Beck's arrival. Treating Vicky to something resembling a rugby tackle, Beck folded the young woman into a breast-mashing hug. \"Are you coming with us?\"\n\nVicky staggered a little when Beck let her go, then straightened her clothes and brushed back her hair. Reaching out, she slid a long, blond tress of Beck's hair between fingers and thumb. \"Not this time, Little Mermaid. We'll just have to wait till Tan gives me holidays.\"\n\n\"When will that be?\"\n\nTanya leant into her. \"In a couple of years.\" she said in a low voice, \"If she's lucky.\" \n\n\"I've just got to work on a few things first.\" Vicky smiled wanly.\n\n\"Well can you hurry?\" Beck frowned.\n\n\"Don't pester the poor girl.\" Watson carped. \"Vicky's had a busy few days.\"\n\nBeck nodded. Not to mention the odd, rampant fuck.\n\n\"What do you say, Beck?\" Tanya squeezed her hand, \"Let's go and find you a new dress. It's almost Christmas. You'll be needing some party clothes.\"\n\nWatson looked at the several shopping bags clutched in Beck's hot little hands. \"Another one?\"\n\n\"Oh, shoosh, you.\" Tanya said then looked at Beck and rolled her eyes. \"Boys! They just don't get it, do they?\" Towing Beck away, she left the chest-heaving young woman and the sheepish old man standing together under a bank of scrolling airline information screens.\n\n\"Mind if I give you a kiss?\" Vicky asked, then suckered her mouth to Watson's before he could answer. Toothpaste and tea, and the sweet natural taste of female saliva.\n\n\"Congratulations,\" Watson smiled, wiping his mouth, \"we've just been filmed pashing by half a dozen CCTVs.\"\n\n\"Think I care? I'd ravish you if we had a little more time.\"\n\n\"How about a walk instead?\"\n\n\"Can we hold hands?\"\n\nWatson slipped his hand into hers by way of reply. \"It's okay, they'll think you're out for a stroll with your dad.\"\n\n\"Granddad more like it.\" Vicky teased.\n\nWatson clutched his heart. \"Oh, ouch!\" as some celestial entity adjusted the focus knob, reducing the bustling crowds to moving wallpaper. \"So how was your first night of freedom?\"\n\nVicky hugged his arm. \"Terrible. I had nightmares all night. I dreamt they were after me, the Pastor and Aaron. The congregation too, the whole bloody gang.\"\n\n\"Bad luck.\" Watson said. \"I'm sorry, Sweetheart, I really should have come over.\"\n\n\"Why sorry? They were just dreams. When I woke up this morning I was still in my bed, all safe and sound. I'd rather it that way than the other way around.\"\n\n\"Dreaming you're free and waking up back in the fold?\"\n\n\"Uh huh. The same dream I've had two or three nights a month for most of my life.\"\n\n\"Freedom dreams?\"\n\nVicky nodded.\n\n\"Well, guess what? They're no longer dreams.\"\n\n\"And all it took was one magic spell. A handsome prince, an emergency passport, a trip in the Stream with my two favourite pilots. A little Champagne, some awesome sex, a run round the lake and... voila!\"\n\n\"You know,\" Watson frowned, \"I'm pretty sure I saw that one in Harry Potter.\"\n\n\"Harry who?\"\n\n\"Never mind. So. What did you tell them?\"\n\n\"Last night? Exactly what you told me to. That I'd turned Buddhist.\"\n\n\"And how did that go over?\"\n\n\"Well... Aaron told me to go to hell and then he hung up on me.\"\n\n\"The man you were going to marry? Whose kids you were going to have? The one you were about to pledge your life to?\"\n\n\"Uh huh.\"\n\n\"He hung up on you?\"\n\n\"I rang him back just to make sure.\"\n\n\"And?\"\n\n\"He hung up again.\"\n\n\"I'm not sure what I should do. Offer my congratulations or condolences.\"\n\n\"I didn't just dodge a bullet, Damon. I dodged a blinky express train. There is not one glimmer of love in that man. Cold as a corpse. Marrying him would have been a disaster.\"\n\n\"What about your old mate the Pastor?\"\n\n\"Well he was not a happy chappie. He started shouting and ranting, saying I was betraying him and ruining my life. Then he said he was coming around with a prayer group.\"\n\n\"What for?\"\n\n\"To save me.\"\n\n\"From what?\"\n\n\"From Satan.\"\n\n\"What did you say?\"\n\n\"If he set foot on my property I'd call the cops.\"\n\nWatson's face lit up. \"Seriously?\"\n\nVicky nodded. \"Uh huh! I said if he so much as rang me again I'd take out an AVO.\"\n\nWatson shook his head as they set off again, arm in arm. \"Oh, my god! Vicky Macdonald! That's just sensational!\"\n\n\"It was pretty gnarly.\" she grinned. \"The silly old A-hole just about blew a gasket. He ended up talking in tongues.\"\n\n\"Really? What a cock.\"\n\n\"He does it all the time.\" she said, \"It's really creepy.\"\n\n\"You know it's bullshit, don't you?\"\n\n\"Talking in tongues?\" she shuddered, \"Mmm... you know, in spite of everything I still have my doubts.\"\n\n\"You're kidding me!\"\n\nVicky rolled her shoulders, looking uncomfortable. \"Sorry. Look, I know I'm just being superstitious, but it's just so... so unearthly!\"\n\n\"You got a phone?\"\n\n\"Phone?\" Vicky frowned, then rummaged around in her pink leather shoulder bag. \"Sure. Here.\"\n\n\"Can you ring Tan?\"\n\n\"What for?\"\n\n\"You'll see.\"\n\nVicky tapped an icon and after a moment said, \"Tan? Hold on, Damon wants a word.\"\n\n\"Hey Tanny,\" Watson said, turning his back on the puzzled young woman, \"do us a favour and put Beck on for a sec?\"\n\nA moment later another voice said, \"Yo?\"\n\n\"Remember that glossolalia you do?\"\n\n\"When you're being naughty?\"\n\n\"That's the one. Can you do some for me now?\"\n\n\"Easy peasy.\" Beck replied. \"Monster voice or wicked-witch voice?\"\n\n\"Normal voice will do.\" It was for demonstration purposes, after all. He didn't want to scare the pants off Vicky, no matter how delectable the contents.\n\nA hundred meters away in the middle of a fashion boutique, Beck launched into an incoherent yet otherwise fluent babble and Watson handed over to Vicky. She listened for a few seconds and her eyes went wide, then she dropped the phone as if it had just sprouted a rattle and fangs. She turned away, cringing, with her hands over her ears as Watson picked the phone up, chuckling. \"Aaaaannd... cut!\"\n\nVicky staggered around blinking tears out of her eyes as the phone demanded, \"What was that all about?\"\n\n\"Tell you later, Moosh.\" Watson replied. \"And don't go spending all of Tanya's dough.\" \n\nSlinging an arm around Vicky's shoulders, he guided her in the direction of a coffee stand. \"It's a party trick, Sweetheart. Both Beck's and his.\"\n\n\"It always seemed so real.\" the young woman panted, almost hyperventilating, \"His eyes would roll back and his jaw would go slack.\" She shivered. \"It used to frighten the crap out of me.\"\n\n\"Exactly as it was meant to. So? Last night? What did you do?\"\n\n\"Just covered my ears until he was done.\"\n\n\"Then what?\"\n\n\"I told him if god was really mad at me he could go and tell me himself, but since he hadn't I figured he wasn't.\"\n\n\"Ka-pow! Good work!\"\n\nVicky looked at him, grinning. \"Then he called me a squalid little whore and told me to go fuck myself.\"\n\n\"In those words?\"\n\n\"In those very words. Do you think he was cross?\"\n\n\"You know what that means, don't you?\"\n\nVicky shook her head with wide, innocent eyes.\n\n\"You outed him! When his pathetic little stage act didn't work, he got so frustrated he revealed his true persona. A foul-mouthed, scaly old Svengali.\"\n\n\"A what?\"\n\n\"An illusionist. It's all smoke and mirrors, Vicky. He utterly relies on his audience suspending belief.\"\n\nWatson sat her down and joined the queue to order her a drink. Returning a few minutes later he set a takeaway flat white on the table in front of her and sat down at her side with his chai latte.\n\n\"Why Buddhism?\" she asked out of nowhere, stirring a serve of raw sugar into her coffee. \"I mean why are they so scared of it?\"\n\n\"Ah! Well! It's not a religion for starters. It's a code of ethics. And it's the only one that doesn't teach separation from god. If we're all god, we don't need some creepy old spruiker to act as a go-between. The Big Three hate it. More than atheism.\"\n\nThey sat in restive silence for a moment, playing with their coffees, and then both spoke at once. \"You first.\" Watson offered.\n\n\"I was just going to ask, what happens now? I mean with you? You and Beck? You and Beck and...\" she shrugged.\n\n\"Us?\"\n\nVicky gave a little nod. \"I guess. It would be nice to think there might be an 'us', even if only now and again.\"\n\nWatson put a hand on hers. \"There's no reason why not.\"\n\n\"Haven't scared you off?\"\n\n\"Not even close. I'm the one who started it, in any case.\"\n\n\"No,\" Vicky sighed with a little shake of the head, \"you didn't start it, you just provoked it. I was the one who started it. If I hadn't gone to Caddy's this wouldn't have happened. I would have vowed my life away to a cold, calculating, sanctimonious proselytiser and spent the rest of my days popping out his kids. In time I might have joined those female dogs in the congregation, and had the chance to make some other poor girl's life living hell. You have a lot to answer for, Captain Watson.\"\n\n\"How can I ever live with myself?\"\n\n\"Right! I've got a jolly good mind to drag you back home and make you fuck me right now.\"\n\n\"Hang on...\" Watson said and slurped his beverage, \"...I'll just finish my chai.\"\n\nRealising what she'd just said, Vicky put a hand to her mouth. \"Oh my god,\" she exclaimed, turning beetroot red, \"I'm so sorry.\"\n\nWatson rolled his eyes. \"What for now?\"\n\n\"Using the 'F' word.\"\n\n\"Oh for god's sake, Vicky. Fuck fuck fuck fuck, fuckity fuck fuck There. Is that better?\"\n\n\"Right. Yes. Sorry. Fuck! I guess I can say it now, can't I?\"\n\n\"Say what you like, Sweetheart. Think what you like for that matter. In fact, tell you what, just go ahead and do what you like, at least to the extent you can get away with it.\"\n\nVicky looked left and right and leant into him. \"Well, you know what I'd really like to do? Drink some Champagne, then lie naked on the bed in an expensive hotel while some ruggedly handsome writer puts his... thing...\"\n\n\"His cock.\"\n\n\"Puts his co... co... cock, in my thing-\"\n\n\"In your hot, wet, tight, slippery, sweet little pussy.\"\n\nVicky's eyes rolled back and she put a hand on her heart. \"Oh... Damon.\"\n\n\"Right? Then fucks the living daylights out of you.\"\n\n\"Oh my goodness.\" Vicky breathed and her hand settled in his lap, finger's squeezing a big fat tube. \"You're reading my mind.\"",
        "\"And this ruggedly handsome man.\" Watson said under his breath, surreptitiously slipping his hand between her smooth thighs. \"You know I'd really like to meet him one day. To tell him what a lucky bastard he is.\"\n\n\"That shouldn't be too hard to arrange.\" Vicky arched an eyebrow. \"He's sitting right next to me.\"\n\n\"Really? Don't think you could do a little better than some flogged-out old boiler, old enough to be your dad?\"\n\n\"Perhaps. But I could never do better than you.\"\n\nWatson gave her a nudge. \"You'll give me a big head if you're not careful.\" And that's not all. There was still enough Cialis in his system to wreak havoc if he dropped his guard and he had to call on some particularly dark memories to stave off a spectacle.\n\n\"So can we make it a date?\"\n\n\"Why not?\"\n\nA thoroughly masticated departure announcement waffled out of the airport PA and Watson caught a snippet of his flight number. Twisting in his seat, he checked over his shoulder to find the flight was now in the process of boarding. Turning back, he sat, shoulders hunched, one hand resting on Vicky's. \"Well, that's it. I'm about to turn into a pumpkin.\"\n\n\"That your flight?\"\n\n\"Sounds like it.\"\n\nThere was a moment's strained silence and Vicky drew a breath. \"Damon? What do I do?\"\n\n\"About what, Sweetheart?\"\n\n\"Everything.\"\n\n\"Well... just ask yourself three questions. Where am I, where do I want to go, how do I get there? It's a sailing thing. Works like a charm.\"\n\n\"Should I find a relationship?\"\n\n\"Depends.\" Watson shrugged. \"Rebounds can be a little bit messy, and you've got plenty of friends to keep you occupied. If I were you I'd make the most of the solitude, at least for a while. Unless you're desperate.\"\n\n\"No,\" she shook her head, \"definitely not.\"\n\n\"Then you're in a good place. You're the master of your own universe, and I mean that literally. Just remember, what you think you become, so think what you want and don't think what you don't want.\"\n\n\"I've had it back-to-front my whole life.\" she breathed in dismay. \"I've always thought about the bad things that might happen... not measuring up, not fitting in. And that's exactly what I got.\"\n\n\"Really? Well, did you ever think about just busting free? About finding someone to sweep you off your feet and give you the fucking you so richly deserved?\"\n\n\"I did.\" Vicky nodded, staring at the table. \"Lots of times. That's what kept me feeling so guilty.\"\n\n\"Well it came to pass, didn't it?\"\n\nVicky looked up at him in shock. \"Oh my god. And it was almost exactly as I imagined. Except...\"\n\n\"Except the other party wasn't a borderline geriatric?\"\n\nShe gave her head a little shake. \"More a ripped, rangy, triathlon type. Like the guys I race with.\"\n\n\"Better luck next time.\" Watson laughed. \"Important thing is you know how it works.\"\n\nVicky looked around in a panic. \"We need more time. This is all so new to me I don't know what to do.\"\n\n\"You do!\" There was a second, slightly harsher announcement, reminding the herd that airlines waited for no man. \"Final boarding, Vick. I'd better split.\"\n\n\"Please, Damon. As my spiritual master. Please, what do I do?\"\n\nWatson stood, bouncing up and down a few times to rearrange the contents of his shorts. \"Spiritual master? Where's my groupies?\"\n\n\"I'm serious. What should I do?\"\n\nThey set off, walking as slowly as possible while still laying claim to slavish obedience. \"What if I don't know?\"\n\n\"But you do know, Damon, I know you do. What should I do next?\"\n\n\"Okay, I'll leave you some homework till we see each other again. Step one. Become aware of your thoughts. Most humans have no idea of the garbage being swept along in their stream of consciousness. And they just let it go, day in, day out, year after year for their whole bloody lives. And guess what? What they think they create.\"\n\n\"Is that why the world's in such a bloody mess?\"\n\n\"That's exactly why.\" Watson nodded. \"And it's being done deliberately by those who know. So set a timer. Every fifteen minutes, stop and examine your thoughts. Become aware of what you're thinking. Ask yourself, are you thinking what you want, or are you thinking what you don't want? Are your thoughts of benefit to you? If not, change your thoughts. Preferences, not aversions. It's vital. We're single channel processors, we can only think one thing at a time.\"\n\n\"What about the rest of the time?\"\n\n\"If you persevere, after a month or two there won't be a rest of the time. It'll become second nature. It'll become habit, and you'll live your life in perpetual awareness. This is the stuff we should be teaching our kids in kindergarten.\"\n\n\"Do you live in awareness?\"\n\n\"I do my level best. And it works, most of the time.\"\n\nVicky elbowed him playfully but her eyes were brimming. \"So how come you fell-in with such a messed up young chick?\"\n\n\"You?\" Watson asked, hugging her shoulders. \"You're not messed up, just poorly advised. And anyway, meeting you has been one of the best things that's ever happened. You coming to the gate? Beck would love to say goodbye.\"\n\n\"Better not.\" Vicky shook her head, \"I'd hate to make a scene.\" Sucking a huge breath, she looked at him on the verge of tears and breathed, \"I'm gonna miss you.\"\n\n\"If you do then it means you're not working hard enough. On treading the path. Practice makes perfect, remember? Awareness is fabulous, but you have to work on it.\"\n\n\"Like running.\"\n\n\"Exactly like running. Yesterday almost killed me, but if I did it every day for a month or two I'd give you a run for your money.\"\n\n\"You're on.\"\n\n\"So are you. Become aware. It's very important.\"\n\n\"Got it. First step, awareness.\"\n\n\"You'll love it, you'll see.\"\n\nVicky's eyes lit up and she delved into her shoulder bag. \"Oh, I almost forgot. Here.\"\n\nWatson knew immediately what it was but had no idea why she was giving it to him. \"Your passport?\"\n\n\"You said I could come to your world. Well, here I am, and here's my passport.\"\n\nWatson flicked it open to Vicky's photo. Her hair was longer in the pic, shapeless and frumpy, and her face was a mask of bottomless melancholy. \"Not the best piccie.\" she mumbled.\n\nWatson held it up beside her, looking from the miniature portrait to her face and back again. \"Seems to be in order.\" He handed the document back. \"Welcome to Earth.\"\n\nVicky grabbed his hand and thrust the passport into it. \"You didn't stamp it.\"\n\n\"Oh,\" Watson waved dismissively, \"it's all electronic these days. No need.\"\n\n\"Stamp it!\"\n\nWatson did as he was told. Flipping it open, he planted a great big kiss on the picture of the sad-faced girl. \"There. A stamp. For VIPs only.\"\n\nChecking the photo for lip-prints, Vicky slipped the passport into her pocket and slid her arms around his neck. \"No!\" she flatly replied, \"this is for VIPs.\" Rising on tiptoes, she melded her mouth to his.\n\n* * *\n\nBy the time he reached the gate it was empty, save for three last stragglers- a cross-looking gate keeper, a woman with a pink fibreglass leg, and a tiny blonde teen fondling a brand new iPhone.\n\n\"Look what Tan gave me!\" Beck cried when the old man rolled up, \"My very own mobile!\"\n\n\"A what? Dammit... Tan, look, really, that's really, really generous but, you know, this whole technology thing...\"\n\n\"Oh put a sock in it you silly old drama queen. I can't rely on you to do the right thing so I gave to someone I could trust.\"\n\n\"But GPS tracking.\" Watson frowned, \"And metadata. You know every single message, every single call you make is-\"\n\n\"But GPS ny ny ny nyaa. Bloody Kev's been in your ear, hasn't he? Listen, Captain Paranoid, I've switched off the GPS and the number's on private. The phone's registered to the firm in any case, and if you use your noodle it will be perfectly safe.\"\n\n\"No!\" Beck hugged it to her chest. \"Don't even think of taking it off me.\"\n\n\"Sir?\" the gate-keeper called, \"Mister Watson? Please, the flight's ready for departure.\"\n\n\"Give Tan a kiss.\" Watson said.\n\nBeck leant into Tanya and gave her a deep, lingering kiss on the lips. It took all of Watson's will not to look around for the nearest CCTVs, wondering how many perverted eyes were hanging onto the exchange. Tanya gave Beck a bearhug. \"Look after the old boy for me.\" she said, \"And don't let him put the frighteners on you about that phone. Just call me anytime. I love you Rebekah, with a 'k' and an 'a' and an 'h'.\"\n\n\"I love you too, Tanya, with an 'n' and a 'y' and an 'a'. Promise you'll come and see us real soon?\"\n\nTanya put three fingers to her temple in a salute! \"Scout's honour.\"\n\n\"And bring Rodge?\"\n\n\"Wild horses couldn't keep him away.\"\n\n\"And Maya? And Vicky?\"\n\n\"Jesus,\" Watson cursed, \"I'll need a flippin' cruise ship at this rate. Off you go, Moosh, before they clap us in irons.\"\n\nBeck sauntered up to the gate and flashed her boarding pass.\n\n\"Sir!\" the gate guardian huffed in exasperation.\n\n\"Tan. Vicky. Please. Keep an eye on her for me.\"\n\n\"Count on it. Anyway, we're having lunch together in the city later on. I'm gonna hit her up for a blow-by-blow.\"\n\n\"Really? You really think she's ready for that?\"\n\n\"About what happened, idiot. I'll tell her it's therapy.\"\n\n\"I'll be interested to hear what she says.\" Watson intoned. \"Tan, gotta go, and thanks for an incredible few days, Tan. It's been life changing.\"\n\n\"For all of us, one way or another. Maya had an incredible time and Caddy just loves the socks off you. Not to mention Beck. And I reckon you're on a promise with Ally as well. And as for Vicky... a girl never forgets her first time.\"\n\nWatson clutched his heart and pretended to stagger. \"I'm gonna need rehab!\"\n\n\"Rehab?\"\n\n\"Sex rehab.\"\n\n\"I wouldn't waste my time if I were you. Between school holidays and annual leave you might just have your hands full.\"\n\nThere was the sound of heels striking the floor as a fat, angry little woman strode down the corridor brandishing a walkie-talkie. \"Mister Watson! If you do not board immediately your baggage will be offloaded and you'll miss the flight.\"\n\n\"Better give me a kiss, then.\" Tanya said, then cupped his face in her hands and plied him with a deep, wet, swirling kiss. Breaking off, she let him catch his breath while she wiped her mouth.\n\nThe gate attendant flounced off in a huff, spitting her displeasure into the two-way. \"Better go,\" Watson sighed, \"I think Miss Piggy's calling the filth.\"\n\n\"Off you go then.\" As Watson turned to leave, Tanya yelled a few last orders at his back. \"Call me on the mobile when you get home. And give Macca a call. And stay in touch this time you bugger.\"\n\n\"Yeah, yeah...\" Watson groused, turning to leave. \"It's like being married again.\"\n\n\"Hey Dommy!\"\n\nWatson skidded to a halt and looked over his shoulder at the beautiful, beaming woman with the bright pink leg, \"I finally figured it out... Dommy. It's short for Dirty Old Man. Am I right?\"\n\n\"Close. It's actually DOMOTS...\"\n\nTanya looked around for inspiration. \"Got it! Dirty Old Ma Of The Sea.\"\n\nWatson shook his head. \"You know too much, Tanya Bragg!\"\n\n\"Too much knowledge is barely enough, a little blonde goddess once told me.\"\n\nWatson looked down the aerobridge. \"I think I can hear the engines starting. Better go, Tanny. Thanks for everything.\"\n\n\"Steady as she goes, Captain, my Captain.\" Tanya blew him a kiss. \"Until next time.\"\n\nHands in the pockets of his canvas jeans, Watson set off down the long, sloping tunnel, wondering. Was it a sense of doom he felt, or anticipation? Destiny, he reminded himself, was the path that he chose, while fate was the twists and turns in the road. Beck had just forged herself a brand new destiny, one that wasn't centred on him. All of a sudden, there was the very real chance that their paths would diverge, until each disappeared over their own private horizon. He would lose her, forever maybe, and that would be the end of his fantasy come true- a tiny, teen partner with an unquenchable lust for sex and adventure. And yet. \n\nIf she did pull it off- and there was no doubting she would- maybe he could hitch a ride on her coat-tails instead. Hobnob with the rich and deluded, jet around the world in abject luxury. And of course there was the matter of Vicky. And Tan. And Caddy. And Maya. And one day, maybe, even the pocket-hotty Alana.\n\nTime to practice what he preached, the old man thought. Look out future, here we come.\n\n*\n\n \n"
    ],
    "authorname": "RaptorDreaming",
    "tags": [
        "group sex",
        "incest taboo",
        "jailbait",
        "lesbian",
        "older man",
        "younger woman",
        "orgy",
        "teen sex",
        "young",
        "older woman"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/aurora-way-of-the-goddess-pt-08"
}