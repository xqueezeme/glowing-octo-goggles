{
    "title": "Dig Two Graves Ch. 04",
    "pages": [
        "Preface: This is a fictional story intended for adult audiences. This story is about vengeance and adultery. There is no sex in this chapter.\n\nThere is the fourth and final chapter. There will be an epilog which I hope to finish in a few days.\n\nTuesday 12:13 PM\n\nWith nothing better to do I've camped out at Bud's place. Technically I'm not fired but I'm certainly not welcomed in the office. Bill needed to go back to his office after our meeting with Susie and Vicky. He said he would be hard to reach for most of today, but to contact Janine with any new developments.\n\nAccording to Tracy, Bud's somewhere down in Houston following up on a hunch. I wish he had waited and I could have gone with him, but Tracy said he left first thing this morning. The worst thing is I feel my life is falling apart and there isn't anything I can do to stop it. I know I have good people working for me but I've always been a person to roll up my sleeves and get my hands dirty. This waiting around was driving me crazy. Even the report that Tracy handed me from Bud did little to spell my frustration, as the audio and video captures from my house last night reveal little of consequence.\n\nIt's been a hell of a day and it's barely noon. In a sense, today is worse than yesterday. At least yesterday I was doing something, even if it was rushing about like a chicken with it's head cut off.\n\nI find my attitude toward Susie and my marriage slowly changing. Increasingly I am having a harder time seeing how I will get past this. I am already struggling with her betrayal from Friday night. Now I am starting to have suspicions that she may even be part of this setup. If I do find out she's part of this, there will be hell to pay.\n\nI reflect back to the meeting this morning. As we walked out I asked Bill about the stunt he pulled at the end of the meeting. In a way it pisses me off. Actually it's more than that. I'm not pissed off, I'm envious. He got to her. He waited ten years but he finally got his chance. The way I feel now, I don't want to wait nearly as long.\n\nA knock on the door startles me a bit and I look up from the office I commandeered at Bud's to see Tracy enter.\n\n\"Bud's on the phone for you,\" she says.\n\n\"Bud?\" I say into the receiver as I pick up the phone.\n\nTracy smiles at me and leans over the desk. For a moment I have a heavenly view down Tracy's blouse. Tracy gives me a naughty smile as she knows exactly where my gaze is fixed, as she punches the lighted button on the front of the phone unit and suddenly I hear the sound of Bud talking to someone. Tracy then presses the \"hands free\" button and Bud's voice is now carrying from the speakerphone.\n\n\"Bud?\" I repeat?\n\n\"What the hell took you so long? Tracy have to give you lessons on how to operate a phone?\"\n\n\"If you only knew how close you were to the truth!\" I laugh. Tracy gives me a smile and finally straightens up and walks back to her desk, but not before giving me a little bit of exaggerated sway in her hips on the way out. \"Wish I could have gone down there with you Bud.\"\n\n\"Yeah I bet, but you would have only slowed me down. We've dug up a few things down here, some really important things too. But before I spring them on you, I want to wait until I get everything tied up. Do you think you can set up a meeting between the two of us and Benner for tomorrow morning?\"\n\n\"That might be kind of hard tomorrow morning Bud. I have that meeting at my firm where I have to give them my response. Bill and I have hardly had any time to go over the package they have offered and have scheduled time to look at it tomorrow morning.\"\n\n\"Shit,\" Bud grumbles. \"Well, you'll need to hear what I've dug up before you have that meeting, and especially before you meet your wife and her lawyer.\"\n\n\"Can you clue me in as to what you have found out so far?\"\n\n\"I don't want to be mysterious, but I still don't have my ducks lined up and it's best I keep things quiet until I know for sure. So somehow we need to meet tonight. You need to setup a time for the three of us to talk, and it needs to be late because you're going to be really busy the rest of today. I need you to fly down here to Houston pronto.\"\n\n\"Pronto? You mean right this minute?\"\n\n\"Sooner the better. But before you do set up that damn meeting.\"\n\n\"OK, I'll get that done here. I'll ask Tracy to get me a flight while I try and setup a meeting for tonight. Do you think nine o'clock is late enough? And where am I going to meet up with you once I get down there?\"\n\n\"No sooner than nine I think, and no you won't be meeting up with me down here in Houston. Come to think of it, you better make it later, let's say 10pm. Set the meeting up for my office there in Dallas. While you're down in Houston, you'll have your own little job to do. We got a bead on your secretary. She's actually down here if you can believe that.\"\n\n\"You're shitting me!\"\n\n\"Nope! And I know you need to chat with her so write down this address and get your ass down here.\"\n\nI scribble furiously as Bud gives me an address to an apartment. He reminds me once again to schedule a meeting for tonight and then we hang up.\n\nFirst I call the number I have for Janine as I stand and start walking towards Tracy's desk in reception. Janine answers on the first ring and I quickly bring her up to speed on finding Heidi. Just as quickly she tells me there's no way in hell I'm going to talk to Heidi alone. She says for me to book her a flight along with my own and that she'll meet me at the airport.\n\nI give Tracy my American Express card and ask her to perform some airport magic for two. I tell her to find the first available flight down to Houston and to find a return flight that would land at Love Field around 9pm.\n\nWhile Tracy starts banging away on her keyboard I return to my temporary office to collect all my stuff and prepare for a dash to the airport. Tracy's just finishing our reservations as I return to her desk. I give her peck on the cheek as she hands me two e-tickets and an itinerary.\n\nI give Janine a quick call to give her the flight information and tell her exactly where I'll meet her at the airport. We will both have to dash to make it in time. Just as I hang up I remember what Bud asked me twice not to forget. I barely caught Janine on the phone a second time and tell her that we need to get Bill in a meeting tonight and ask if she could set something up no sooner than 10:00 since our flight doesn't arrive until 9 pm? She says she'll get someone to set it up.\n\nTuesday 3:49 PM - Houston\n\n\"Now remember Janine,\" I say softly as we walk up the steps. \"She's pretty shy. I'll introduce you and explain why you're here. Just smile and nod OK?\"\n\nShe looks at me, smiling and nodding. It makes me laugh for one of the few times in the past four or five days.\n\nSmiling myself I take stock of the building where Bud said Heidi was now living. I shake my head and hope this is something very temporary, for both of us. There was no security on the front door so we simply entered and took the stairs to the second floor. The hallway was at least clean if dimly lit. We walk down the hallway and are soon standing in front of 211B. With a nervous sigh and a glance at Janine, I knock on the door. At first I can hear nothing but then pick up the light sound of approaching footsteps.\n\nI can see the spyglass in the door cover up and hear a \"oh my God\", on the other side of the door. The door chain rattles and two deadbolts later the door swings open to reveal a very surprised Heidi.\n\nAfter the past few days I'm very unsure of where I might stand with Heidi. I watch as her eyes tear up and suddenly she steps across the threshold and surprises me with a very intense hug. Stepping back she blushes and a bit of the ol' Heidi appears. Shyly she smiles at me and it's only then she notices my colleague.\n\n\"I can't believe you here, Mr. Vickers. I'm not even sure how you found me but I suppose I shouldn't be surprised,\" she says, her eyes never leaving Janine. I watch as she takes in the tight blouse and tighter skirt Janine seems to favor. \"Mr. Vickers?\" She asks with a veiled and slightly disapproving tone.\n\n\"Heidi, you've called me Jake for ten years. I can't see any reason why you should be changing now!\"\n\nA smile faintly touches her lip while she still casts a guarded suspicious look at Janine.\n\nSuddenly I realize that if my beliefs are correct, Heidi has no idea of what's going on back in Dallas and she's wondering why I am here next to Janine. \"Janine, this is Heidi Bevis my administrative assistant, but in reality my right arm and conscience. Heidi, this is Janine Prescott. She's a paralegal.\" I think about explaining more but less is better at this point.\n\nHeidi looks at both of us confused, then awkwardly steps back and invites us in.\n\nI had been in Heidi's home in Dallas a few times to help her out with home repairs and similar activities. I know most of her family is down here in Houston. In fact my previous ill-fated trip had included some time in Houston and was one of the reasons Heidi has accompanied me on the trip. Heidi leads us into a small living room and motions for us to sit, asking if there is anything we would like to drink. Both of us decline politely.\n\n\"You're a hard woman to track down Heidi,\" I tease her.\n\nShe looks embarrassed and then puzzled. \"I'm so sorry for leaving you so quickly. I wanted to stay long enough to make sure they replaced me within someone good enough for you, but they told me not to worry about it and that it was more important that I get down here to Houston to help my brother.\"\n\nI realize Heidi must have just given the answers to several puzzles but I wasn't even sure of which questions yet.\n\n\"Heidi, are you OK?\" I ask sincerely. \"Are you in trouble?\"\n\nShe looks puzzled again. \"Y-Yes I'm just fine. I have been more worried about you. I tried to call you this morning but no one answered your phone! So I tried to call Mr. Weston and they told me he wasn't available. So I called the receptionist and asked to have you paged and they told me you don't work there anymore! Mr. Vickers are you in trouble? They told me it was just something routine. You didn't get fired because of me did you?\" She asks, casting another suspicious look at Janine who has now occupied a chair facing me. Despite the seriousness of my situation I can't help but notice out of the corner of my eye the long expanse of leg exposed from her crossed legs under her short skirt. I have to force myself to concentrate on Heidi.\n\nSuddenly I'm in one of those situations where I'm not even sure how to proceed. I glance over at Janine but she shrugs without help. Finally I ask, \"Heidi, just tell me what's going on. Janine and I came all the way down here to find you and make sure you are OK.\"\n\nHeidi looks at me with puzzlement. She casts another evil eye at Janine who just smiles in return. \"Didn't Ms. Hinckley tell you what happened? She promised she would explain why I had to run out on you!\"\n\n\"No, sit down and tell me about it.\"\n\n\"It's awful Jake! I mean I guess I knew it was going to happen but it's still awful!\"\n\n\"Just calm down and tell me about it.\"\n\n\"It's my brother Bumper.\"\n\n\"The one that keeps having a few problems?\"\n\n\"Yep that one. He did it good this time Jake. He got caught buying some more drugs and this is the third time. The prosecutor told him he was going to go to prison. You know Bumper wouldn't hurt a fly. Can you imagine what those hard core criminals would do to him if he was sent to jail?\"\n\n\"When did all of this happen?\" I ask with concern.\n\n\"Last week,\" Heidi sniffed.\n\n\"Right after you left Houston?\"\n\n\"Yes.\"\n\n\"Why didn't you call me and tell me?\"\n\nShe looks at me puzzled again. \"I didn't call you because I knew you were working down in San Antonio. I can't interrupt your day with my little emergencies Jake.\"\n\n\"As either your boss or as your friend, I think you should have! So what's the situation now? How can I help?\"\n\n\"Jake?\" Heidi says truly puzzled.\n\n\"What?\"\n\n\"Well, don't you already know?\"<br />\n\n\"Know what?\" I respond, equally confused. My attention is momentarily distracted by the sight of Janine uncrossing her legs and leaving them slightly parted like a scene out of Basic Instinct. I can't quite tell if she's wearing ...\n\n\"About my brother silly! You sent Ms. Hinckley out here to help me!\" She says in part frustration, snapping my concentration from somewhere south on Janine's belly button to Heidi's face. A quick peripheral view at Janine's smirking face confirms my suspicion of multiple games at play.<br />\n\n\"Ms. Hinckley showed up did she?\" I continue. \"Did she help you?\"\n\n\"Didn't she get back to you?\"\n\nFor a moment I think about playing this along and seeing where it ends up. Then I shake my head clear of such nonsense and go with what works best for me. \"Heidi, I didn't send Ms. Hinckley out here. So why don't you tell me what happened?\"\n\nHeidi stares at me with astonishment and slowly sits down. I glance over at Janine which is a mistake, because she has now spread her knees another delicate inch or two confirming that she is not wearing anything under her skirt and that she has a very trusting relationship with her razor. I clear my throat and force myself to again look at Heidi.\n\n\"I thought she came out to see me at my home in Dallas because you sent her. I'm fairly certain she said that.\"\n\n\"Why don't you tell me what happened Heidi,\" I repeat firmly.\n\nFor the next twenty minutes Heidi tells me practically everything about Hinckley visiting her. Heidi found out about her brother on Monday while at work. She immediately went to Tom Weston my boss to ask for a family leave. Tom, of course, granted her request and Heidi made arrangements to go down to Houston Tuesday night. Heidi explains that while she was packing and making other last minute arrangements, her doorbell rang and she was quite shocked to see Ms. Hinckley, the executive director of HR, standing at her door.\n\nHeidi invited her in and Hinckley proceeded to sympathize with Heidi regarding her brother, saying she also had a younger brother that got caught up in the ugly underground of drugs. As Heidi explains to me, Hinckley apparently has relatives in both the Houston police department and in the Prosecutor's department. She offered to make a few calls and intercede on Heidi's behalf. Hinckley suggested she might be able to get Heidi's brother put into a rehabilitation center instead of having to do jail time.\n\nI interrupt Heidi for a moment and ask her if she had any idea how Hinckley would know about Bumper. Heidi again looks puzzled for a moment and says that Mr. Weston must have told her. Out of the corner of my eye I notice Janine jotting something on her little PDA device and I knew she was making sure we followed up on this loose end. I turn back to Heidi and motion for her to continue with her story.\n\nHeidi was understandably ecstatic about any chance of her brother not going to jail. She enthusiastically agreed with Hinckley's plan. Hinckley was true to her word and her brother did get sent to a rehabilitation center. Heidi has been down in Houston since last Tuesday afternoon and was planning to relocate here permanently so that she could continue to help her brother. She had already contacted a real estate agent to sell her place in Dallas. I knew Heidi's parents were divorced, the father's whereabouts unknown and the mother could usually be found having a relationship with a Vodka bottle.\n\n\"So everything seems to be OK?\" I ask a bit suspiciously. Thinking about how close Hinckley and Schmidt were, I suddenly remember that old saying about Greeks and gifts.\n\n\"As well as it could be. If it were a perfect world my brother wouldn't be messed up on drugs. But the center he has been assigned to seems quite promising. I actually have some hope he can quit.\"\n\nI smile, genuinely happy for her. She's gone through several depths of hell over her brother, hell her entire family, in the time I've known her. For a moment I debate with myself to bring up the issue of the affidavit. Heidi has enough turmoil going on in her life right now.\n\n\"So did you get partner?\" Heidi suddenly asks out of the blue, startling my thoughts back to the topic at hand.\n\n\"No Heidi,\" I respond. \"Anything but ...\" I think to myself.\n\n\"You didn't?\" Heidi responds surprised.\n\n\"There's nothing for you to worry about Heidi. It will work itself out when it's time.\"\n\n\"But Ms. Hinckley said it was all but a done deal when I saw her last Tuesday.\" Heidi continues.\n\n\"She did?\" I respond surprised, making another mistake and glancing over at Janine. She seems to have been waiting for just that moment and spreads her knees even further apart, just for a moment, before covering herself up by crossing her legs. In that brief moment it became graphically clear that she is not only doing a massive pricktease by flashing her shaven pussy, but given the glistening I see she is even aroused herself.\n\n\"Yes Jake,\" Heidi responds. \"She even had me sign a glowing statement about how much you've done for the company.\"\n\n\"She did?\" I repeat even more surprise. I realize I am still staring at the spot where I had just witness a wet naked pussy. With effort I twist my head back toward Heidi. \"You signed an affidavit?\"\n\n\"No, it wasn't an affidavit. I've worked for you enough years to know the difference. It was just a performance report. She had me sign the second page and initial both pages.\"\n\n\"It was two pages? And you said it was glowing?\" I ask.\n\n\"Yes. Well the first page was glowing. The second page said something about your leadership skills and that it was an area for improvement. I asked Ms. Hinckley about that and she said all performance reports were like that. They had to put something down that wasn't so positive regardless of how good a job someone did.\"\n\nI stare at Heidi for a second trying to make sense of what she was telling me. \"Did they copy Heidi's signature?\"\n\nI reach into the portfolio I brought with me and pulled out the manila folder containing a copy of the affidavit. Carefully extracting it and folding it to the second page, I hand it to Heidi. \"Heidi, is this the second page you're talking about?\"\n\nHeidi scrunches her expression for a moment and then quickly reads the single paragraph. \"Yes, I think this is exactly what I signed last week. But I don't understand any of this notary stuff. There wasn't a notary here last week. It was just me and Ms. Hinckley.\"\n\nBefore I can stop her Heidi flips the first page back to the top. I stand to try and take the document from her before she can read it. Unfortunately Heidi is a quick reader and she read enough in those first couple of seconds to stand up and twist away from me to prevent me from retrieving the document in her hand.\n\n\"Oh my God!\" She exclaims.\n\nSighing, I sit down and let her read the entire affidavit. I glance over at Janine who is now sitting demurely, her legs still crossed, and quite interested in the interplay between me and Heidi.\n\nHeidi slowly sits down in the nearest chair. I watch as she slowly turns crimson, the phrase \"Oh my God,\" being repeatedly whispered.\n\nShe finishes reading the first page and flips to the second, as if she expected the second page to now say something completely different. For a long while she stares at the document.\n\n\"H-H-How ... W-Why ... Jake?\" She stutters.\n\n\"Take it easy,\" I tell her. I had the same exactly feeling when I saw it for the first time.\n\n\"What does this mean Jake?\" She asks. \"T-T-This says ... well ... it accuses you ... us ... of having an affair! It says ... you force me to have sex with you ... that you made me do things like ... well ... you know!\" Heidi buries her face between her hands and starts to sob.",
        "I start to get up and go to her but with Janine there I'm reminded of how careful I need to be.\n\n\"Heidi, I have to ask you a question that I already know the answer. I knew the answer before I even came here but I have to ask the question anyway. Did you sign this affidavit?\"\n\n\"NO!\" She says very emphatically. \"I signed your performance rating!\"\n\n\"You didn't sign that document?\" I repeat.\n\n\"No!\"\n\n\"But the second page ... that looks familiar? That is a page you signed? But the first page is different?\"\n\n\"No! I mean yes! The second page is the same. The first page is a lie! A page of disgusting lies! I would never do anything like that! We never did anything like that! And you would never do that to Susie!\"\n\n\"Heidi, would you sign a legal affidavit stating that you did not sign that document as it is currently put together?\"\n\n\"Definitely!\" She says, a bit of anger now creeping into her voice.\n\n\"What does all this mean Jake? Are you in trouble Jake? Am I in trouble? Was Ms. Hinckley behind all this? What does this mean about my brother? Oh God, what does all this mean?\"\n\n\"It'll be OK Heidi,\" I sooth. \"Don't worry. You haven't done anything wrong and you're not in trouble. What's important is that you stay here in Houston and take care of your family and your brother. OK? You don't need to worry about anything else. I'll make sure of it OK? Just keep me aware of what's going on in your life.\"\n\nHeidi sniffs and nods. \"But what about you Jake? This is talking about sexual harassment! That -- that you forced me!\"\n\nI smile to disarm her fears. \"No need to worry about me Heidi. Those that know me well know the truth. And your signature on an affidavit will go a long way toward quelling any other problems.\"\n\n\"And Susie? Does she know ... about this?\" She inquires.\n\nI just nod.\n\n\"Oh my God! How is she doing? This must be awful! She -- she doesn't think that I ... you and me ... did anything?\"\n\n\"Susie's struggling a bit with the enormity of all of it, but don't you worry a bit. I know that she thinks just as warmly about you as she did before all this came to light. So don't you worry about a thing.\"\n\n\"Surely she can't seriously think that you and I did anything? It's just the one page and that is obviously so fake!\"\n\n\"The problem is that you are so honest. Your signature on that first document, even though it was a fake, carries a lot of weight. Plus there are the ...\" I stop myself.\n\nHeidi eyes me. \"There are what Jake?\"\n\nI sigh. \"There are pictures.\"\n\n\"Pictures? How can there be pictures? We've never been together.\"\n\nI shrug.\n\n\"Do you have them?\"\n\nI look up at Janine, trying to ignore the pussy flash. She smiles and shrugs.\n\n\"They are pretty upsetting Heidi, I don't think ...\"\n\nStanding up suddenly, \"I don't really care what you think Jake Vickers. I have a right to see those pictures!\"\n\nI sigh and reach into my portfolio and extract the other manila folder. \"You better sit down Heidi.\"\n\nHeidi slowly sits, never taking her eyes off the folder. When she is fully seated I give her the folder. She looks one last time at me and opens the folder.\n\n\"Oh my God!\" She murmurs, and I watch as she turns a shade of crimson. She studies each photograph, saying \"Oh my God\" each time, turning a darker shade of crimson as she looks at each of the eight pictures.\n\nShe finishes and puts all the 8\" by 10\" glossies back in the folder and hands me back the folder.\n\n\"I can see how people might be fooled by those pictures,\" Heidi says finally. She looks up at me. \"But it's not us. It's not me. I don't have a tattoo.\"\n\n\"Tattoo?\" I exclaim. I open the folder and start scanning through the photographs.\n\n\"Look at the last picture,\" Heidi says quietly.\n\nI skip to the last picture. I scan every inch but can't see anything. I'm about to ask Heidi where she saw the tattoo when I spot it. It's right in the middle of her back just above the crack of her ass. In the last picture she's sitting straight up straddling my lap. The sheet that was partially covering her has slipped down and is bunched around her waist. But just barely sticking above the sheet is the outline of some type of tattoo.\"\n\n\"Wow,\" I murmur to myself. \"This could be important! Would you mind if we insert a statement into the affidavit that you don't have a tattoo?\"\n\nHeidi nods her head. Janine efficiently generates an affidavit using the software on her laptop, and prints it out with the small but equally efficient portable printer. Being a notary she also is able to notarize the document. It seems incredible but in only a few short hours we've managed to uncover a lot of suspicious activity and have thrown a significant amount of doubt against the idea that Heidi and I had been in that bed.\n\nI stand up to leave. I walk over to Heidi and give her a hug. Heidi hugs me back. \"I'm sorry Jake,\" she says.\n\n\"I'm sorry too Heidi,\" I reply. I give her a last hug and then Janine and I precede Heidi to the door. I wish her well and remind her to call me if she has any difficulties. On second thought I tell her I expect at least a couple calls a week regardless of things are going.\n\nShe nods with a sniff and Janine and I close the door behind us. Janine and I are quiet all the way to the car. We fasten our seat belts and pull out of Heidi's drive. Janine immediately reclines her seat a few inches and leans back, her skirt hiked up, her knees spread and pussy on display.\n\nI can't help but look over to see her smiling at me. \"My compliments to your barber.\" I finally manage to squeak out.\n\n\"You like?\" She laughs.\n\nI watch as her hand moves to her pussy, her middle finger snaking deep inside. I can see her wiggling it in and out for a few moments before pulling it out and holding it up in the sunshine. Her finger glistens as I watch her slide it between her lips and suckle on it. I can't help but groan and she laughs again. \"I know what I'll be thinking about tonight in my hotel room ...\"\n\n\"So,\" she coos. \"Do you think you would like to try your hand at it?\"\n\n\"My hand?\" I ask a bit flustered.\n\n\"Yes. You said you liked how my barber did it. Think you would like to try your hand at being my barber?\"\n\nI close my eyes for a moment to steel myself. \"If this divorce goes through ...\"\n\n\"If your divorce goes through you wouldn't be anywhere near as interesting,\" she laughs, sitting up and putting her knees together. \"And just so we understand each other,\" she continues. \"Around the office I'm known as the Ice Queen. No one would believe a word if you decide to say anything.\"\n\nSuddenly I find myself completely disengaged from the blonde black widow. I smile only for affect. \"Believe a word of what?\" I reply innocently. \"But I do have to ask you a question.\" I continue glancing over at her. She tilts her head toward me but offers no further encouragement.\n\n\"Why the flash? If you're the Ice Queen then why the charade? And maybe most importantly, why me?\"\n\nShe laughs. \"Maybe because I enjoy the tease. Maybe because I can.\"\n\nI shake my head. \"That's not really an answer but more of an evasion. Because you can? Do you get away with this all the time? I really would like to know. Why the tease and why me?\"\n\n\"Yes,\" she replies with a smirk and then says nothing further.\n\nWe drive silently back to the airport before Janine pipes up. \"I was curious.\"\n\n\"Curious?\" I repeat.\n\n\"In cases like yours, there's usually something to the allegation. Your wife would surely not have proceeded with a divorce on the flimsy evidence we've seen so far. There must be something else in your past. From what I have seen, men can be sized up into two categories. They are either cheaters or wimps. So I was curious if you were a cheater so I tested you. A cheater would have gone for me by now.\"\n\nI look over at her. \"Really? I knew we were supposed to be the simple sex, but I never knew we were that simple.\" I wait for a response that is not forthcoming. I glance back over at her. \"So because I haven't made a move on you, you don't think I'm the cheating type?\"\n\nShe looks at me and smiles wickedly. \"I haven't decided fully yet.\"\n\nI shake my head as I drive through the streets surrounding the airport terminals. She more or less had just called me a wimp. A week ago I would have laughed it off. Now I'm just angry. Why would she be so vindictive after what happened last Friday night? Then I realized she doesn't know about last Friday, that Bill said the details of that evening would not be shared with his staff unless necessary. So is Janine just a young black widow? A tease? Is she still baiting me? Suddenly I decide I just don't care. For all of her physical beauty and seductive attractiveness, I sense a lot of hidden emotional baggage that I had neither the stomach nor time to wade through. Reaching the terminal for departure, I pull up to curb and put the car in park. \"Why don't you go ahead and check in and I'll return the car and catch up with you later.\"\n\nShe looks at me confused for a moment. \"I could have ridden to the rent-a-car with you?\"\n\n\"There's no need for both of us to haggle with the car or the shuttle. Besides you have that big bag with all of your equipment. You go on and I'll catch up.\"\n\nShe looks at me for a moment and shrugs. I think she had just realized that all of our game playing had just reached its logical conclusion. She moves to open the car door and then stops and turns back to me. Smiling, her hand slides over and nestles on the inside of my thigh. \"Don't you trust me Jake?\"\n\nI turn and stare directly into her eyes. Unflinchingly and without a trace of the sarcasm I feel, \"with my life.\"\n\nShe laughs and withdraws her hand. She opens the car door and steps out, peering back in through the window. \"Jake, you still have a few things to learn. It wouldn't be your life. It would have been your balls.\"\n\nI watch her walk into the terminal. \"Hardly,\" I think to myself. \"And I'm glad there are things I still need to learn. Not that I want to learn them, especially from you.\"\n\nTuesday 9:48 PM\n\nJanine and I arrive back at Dallas/Fort Worth and immediately split up. I am thankful it wasn't a long flight from Houston as there were hardly a dozen words spoken between the two of us. I assume she didn't like the way I had dismissed her at the terminal. I get the feeling that few men had done that with her.\n\nI pick up my own car from short term parking and head out to Bud's where Bill and I will meet with him to discuss the latest discoveries and go over strategy.\n\nI pull up to Bud's office and notice that Bill's car is already parked. I walk in and am surprised to see Tracy still there. \"Have you been here all day?\"\n\n\"No, I took off earlier this afternoon because I knew I would have to reopen for tonight. Bud's not here yet but he called in about ten minutes ago saying he was just getting off the Interstate and should be here shortly. Your lawyer is already here though,\" nodding toward the conference room.\n\nI begin to turn toward the conference room when the office door suddenly jerks open and Bud comes strolling in with a big shit eating grin. \"Thanks Tracy,\" he says first to her. \"Why don't you scram for home and tell that husband of yours I'll make it up to him for making you come out here this late.\"\n\nTracy smiles and picks up her purse to leave. The poor girl was keeping the place open for us waiting for her boss to get back. I promise I will make it up to her. She says, \"you bet you will!\" Bud asks her if my lawyer was there and when she nods, asks her to wait a minute and to give him a chance to get the two of us situated in his office. She tells him that she had already sent my lawyer on to the conference room. He nods in acknowledgement\n\nBud and I enter the conference room and I introduce Bud to Bill. He asks that we get comfortable while he checks out the results of some of the other parts of the investigation.\n\nWe can hear him talking to Tracy for several minutes through the half open door and then he tells her thanks for staying over and to drive safely home. He disappears for the longest couple of minutes and finally barges into the conference room.\n\n\"Sorry to keep you both waiting,\" Bud says as he dances his way around our chairs to reach the other side of the table. \"I wanted to get the latest reports from Tracy and my staff,\" he explains as he settles his bulk into his chair.\n\nBud takes one look at my face and chuckles. \"Sorry,\" he says. \"I know this isn't funny but boy you look like you're going to bust. So let's get at it? What do you say?\"\n\n\"I'm all for that!\" I nearly explode.\n\nBud laughs again. \"OK, First, let's look at their original affidavit they said your secretary signed.\"\n\nHe pulls out the original affidavit and lays it on the table. \"First, Jake do you know anything about printers and the Secret Service?\"\n\n\"Secret Service?\" I query.\n\n\"Yeah. The U.S. Secret Service is part of the treasury office. Everyone knows they are directly responsible for the protecting the president, but their original mandate was to protect the nation's money supply. When there's any counterfeiting going on, it's the Secret Service that gets involved.\"\n\n\"What's the Secret Service have to do with Susie and me?\" I ask getting a little alarmed.\n\n\"Nothing, except they did us a big favor!\"\n\n\"What do you mean?\"\n\n\"With the advent of computers, especially printers, copiers, and such ... it's become a whole lot easier to print something out that looks like a $20 bill. Of course, a good quality counterfeit bill requires using the right paper stock and watermarks ... that's another story. But on the surface, you can print something that looks very authentic. The Secret Service talked most if not all of the printer manufacturers to print a nearly invisible mark on every sheet of paper. Nearly every color printer sold in this country prints an invisible, unique identification code on every sheet of paper. The mark only shows up if you use the right kind of ultraviolet light. Even if you figured out how to view it, it wouldn't mean anything to you because it's a code.\"\n\nI start to get excited. \"You're telling me we can tell what printer these pages were printed on?\"\n\n\"More than that son,\" he continues. \"Since printers are connected to computers, and computers all have a concept of time, that invisible mark not only contains the unique code for the printer, but also has a date and time stamp. If you reveal the mark and know how to decode it, you can tell not only what printer printed the sheet of paper, but what day and what time.\"\n\n\"It's actually easy to see the mark. You just need the right light source. The tricky part is figuring out how to decode the mark. Unfortunately each printer manufacturer developed their own code. But lucky for us, I know a guy that has those codes and I showed him your affidavit.\"\n\n\"What did he find out?\" Bill asks before I even have a chance.\n\n\"Both sheets of paper were printed on the same printer.\"\n\n\"Oh,\" I say, hoping to hear otherwise.\n\n\"But they were printed at different times,\" he adds with a smile.\n\n\"Different times?\" I repeat.\n\n\"Yes, both sheets were printed on January 17<sup>th</sup>. The second sheet was printed first at 7:03 AM. The first sheet was printed fifteen hours later at 10:13 PM.\"\n\n\"How can that be?\" I ask stunned. \"That's the day Heidi said she signed the affidavit, but she also said that she left for Houston late in the afternoon. She was in the air at the time the first sheet was printed. She couldn't have initialed that page.\"\n\n\"That's exactly right Jake.\"\n\n\"But then ... how did her initials end up on it?\"\n\n\"Obviously Heidi never put them there! To tell you the truth, forensically it wasn't a very good attempt to create a forged document. The second page was printed on a laser printer using toner. Heidi's initials appear to be real and are in black ink. We might even be able to figure out what pen was used, based on an ink analysis but that's overkill. The important thing is that Heidi's initials on the first page are made of printer toner.\"\n\n\"Oh God,\" I murmur, realizing this completely debunks the original affidavit. \"OK, I understand the toner .vs. ink thing. But I'm curious. If the set of initials on the first page were generated by a printer, were they an exact copy of the second page?\"\n\n\"You're on the right path boy. You're smart despite what your father grumbles about you,\" he chuckles. \"We did check that out and the two initials are not exactly the same. We don't have proof on exactly how it was done, but I think it's a good guess Heidi's signature was scanned off the first original page and then digitally altered before being transferred to the forged first page. That first page was then printed later.\"\n\n\"I think I would have felt better if the two sets of initials matched. But at least we finally have some good evidence this is all a setup,\" I murmur.\n\n\"There's one more thing Jake,\" Bud adds. \"I get a lot of things done because I know a lot of people. I trade favors all the time.\"\n\nBill laughs. \"And who did you trade favors with Bud?\"\n\nBud glances over at Bill with a grin. \"Now I would never tell you who. But I do know Jake's firm leases the 14<sup>th</sup> and 15<sup>th</sup> floors in a building downtown Dallas. And I also know that security for the entire building is outsourced and that access to all the offices requires a security badge.\"\n\n\"Don't tell me ...\" I smile.\n\n\"Yep, a friend of a friend happened to print out the badge access log for the two floors leased by your firm on January 17<sup>th</sup> between midnight and midnight on the 18<sup>th</sup>.\"\n\n\"And?\" I ask not wanting to be kept in suspense.\n\n\"Look for yourself,\" he chuckles taking a printout and tossing it on the desk.\n\nWith Bill equally interested over my shoulder, I quickly scan the report. I was most interested in access first thing in the morning. There were several badges checking in and out all during the wee hours of the morning. I figure they are either maintenance or security staff. But two entries capture my interest. At 6:23 AM, two badges were used on the 15<sup>th</sup> floor just seconds apart. I look up at Bud, the disappointment evident on my face. \"OK, we have two interesting badge numbers. But who are they?\"\n\n\"Tsk tsk tsk ... a little faith Jake.\" He grabs a second printout from the same folder and tosses it on the desk between me and Bill.\n\nI laugh. \"You're enjoying dragging this out a little too much!\"\n\nBill grabs the second printout which apparently lists all the badge numbers for everyone in the building. Looking over each other's shoulders, we scan Bill's list for the two numbers that occurred at 6:23 on my list.\n\n\"Got it,\" he says. \"Evelyn J Hinckley.\"\n\n\"Fuck her!\" I murmur. I give the second number to Bill and watch him flip a few pages.\n\n\"Timothy K Schmidt,\" he serves up.\n\nI slowly sit back in my chair. \"I'm going to kill that motherfucker ...\"\n\nI look up to see Bud staring at me intently. He glances over at Bill. \"Jake I can tell what you're thinking and I think your lawyer can too. I can tell you from personal history it's not worth going to prison over a woman.\" He glances at Bill again and continues, \"Someday I'll share a personal story with you, so don't you go stewing over this and hatching plans. You still got a tough row to hoe and you don't need criminal charges to be added to what you already got.\"\n\nI mull over what Bud said and nod, sitting back up. But in the back of my mind, \"He's right ... but ...\"\n\n\"Jake, we got more evidence to go over so let's not get mired in just one piece. We've shot a couple of big holes in those words on that affidavit, but pictures tell a thousand words right? So let's look take a closer look at these photographs. I had someone I trust look the negatives over. One thing is that it's fairly certain those photographs have not been faked. The person that took these photographs used regular ASA film, not a digital camera. A digital picture you can always claim it to be fake whether it is nor not. But it's a whole lot harder to air brush out a negative. I don't know if this was done on purpose, but they created a mostly \"un-impeachable\" set of evidence. Sorry Jake, but the photographs are real and I have to believe that's you in the starring role.\"",
        "Bud looks at me for a moment before continuing. \"Now, that being said, we suspected the photographs were staged and we can prove it by little pieces of evidence here and there. First, we know that someone else took these photographs. The only way one of two people in the photograph could have operated the camera is via remote and a tripod. My expert blew up some of the photographs concentrating on the objects on the night stand. The first three pictures were taken from almost the same position and from the clock; we know they were all taken at 1:30 AM. Of interest, your body position Jake is identical in all three photographs. Now in the fourth picture it gets a tad bit more interesting. The time changed to 1:31 AM, and this picture is the only one that shows any movement on your part. In the remaining four pictures, your body position is identical to the fourth one. Unless you count my wife, it's very suspicious that someone would hardly ever move while having sex. There's also one other interesting thing about the fourth picture. The expert I had look at the pictures figures the camera shifted a good foot to the left.\"\n\n\"How did you figure that out?\" Bill asks.\n\n\"It's the calendar and the clock on the night stand,\" Bud answers. He pulls out two more pictures from a folder, looks at them for a moment, and then puts them on the table for Bill and me to see. Pointing to the first new picture Bud continues, \"This is a blowup of the nightstand from the third picture. From the perspective of the camera, notice the calendar is in front and to the right of the clock. The very left edge of the calendar overlaps the right edge of the clock. Now look at the same view from the fourth picture.\"\n\nWe take a few moments and see what Bud is pointing at right away. In the blowup of the fourth picture, you can actually see a small gap between the calendar and the clock. \"I see it,\" I say. \"That gap could only have happen if the clock, calendar or camera moved. And it's a safe bet the clock or calendar didn't move.\"\n\n\"Right,\" Bud says. \"Like I said, my expert was even able to guess that the camera moved about a foot left. I gave him your height and he made some guesses as to the distance between your waist and the top of your head. Using that as a base, he figured the camera was about 9 feet away. Once he knew that, he could just use geometry and figure out how far the camera moved.\n\n\"That's good stuff Bud,\" Bill chimes in. \"Now we've proven there was at least one other person in the room.\"\n\n\"Oh, we're just scratching the surface Bill. I had a very good trip down in Houston!\" Bud laughs.\n\n\"So what else?\" I ask anxiously.\n\nBud laughs again. \"Keep your pants on boy! You got a hot date tonight or ...\" Bud suddenly stops in mid-sentence. \"I'm sorry Jake. That sorta slipped out before I even thought about what I was saying.\"\n\nI shake my head and motion I was fine and that he should continue.\n\nA bit red in the cheek Bud says, \"I spent almost all my time down in Houston just in the hotel you stayed in Jake. I asked around and found out the name of the bellboy who had been there the longest. If you want to know what's going on in a hotel, talk to the bellboys or the cleaning staff. I found one young guy that had been there for several years and all it took was a picture of Grant to make him sing his fool head off.\"\n\n\"First thing I showed him was one of those photographs, and asked him about the calendar. He said they didn't use anything like that in the rooms. The only way a calendar like that could have been put there was if the customer brought it. Then this bellboy starts turning detective on me going all over the photograph. He chirps up that the water bottle wasn't provided by the hotel. I asked him how he knew that. He said the hotel had an exclusive contract with Ice Mountain brand and that the water was Aquafina. So Jake, that's a question for you. Did you bring any water into the room?\"\n\n\"No ... I don't think so,\" I puzzle, trying to remember back. \"I certainly didn't go out of the hotel and buy any water and bring it back. You know I have a low tolerance for alcohol and often just drink water. While I was there I just drank what was downstairs in the lobby or in the mini-bar in my room.\"\n\n\"You told me Monday that you and a couple of other guys were celebrating Saturday night. What did you drink then?\"\n\n\"I had an ice tea with dinner. Afterwards I had one beer and then water after that. Wait ... I just remember something. We each bought a couple of rounds. Of course I was a cheap date because I was only drinking water by that time. I remember Schmidt buying the last round. He said he had to use the restroom so he brought the drinks back himself. I didn't even need any more water but he brought me a bottle anyway. And I did drink it. In fact I now remember taking that bottle about half full back to my room. I suddenly started getting very tired and so hung it up and retired to my room. I really can't remember much more than that until the next morning.\"\n\nI look up at Bud. \"What are you smiling about?\" I ask him.\n\n\"Well, what you just told me jives with what else I found out.\"\n\n\"You have more?\" Bill asks.\n\n\"Oh yeah! Something big! I told you I made good buddies with that bellboy. Well, I got him to do something for me. This time it took a Franklin, but it was worth it.\"\n\n\"Well ... what was it!\" I ask.\n\n\"One of the first things I noticed when I walked into the hotel was the security cameras. I asked the bell boy if they only had that in the lobby or did they have them everywhere. He said they only had them on the front desk and the main hallways of each floor near the elevators. I asked if he could find out what room you were staying in and if the tape for that floor was still available for the evening of January 15<sup>th</sup>. That's when I had to pony up the Franklin. But like I said, it was worth it.\"\n\nBud reached into his bad and pulls out a VHS tape. My eyes get big as I watch him get up and walk over to the TV on the side of his room.\n\n\"Now I've already viewed this several times and even had some extra work done. So it's already queued up to about the right spot.\"\n\nBud presses place on his recorder and an image flickers on the screen. It's a view down a hallway. In the foreground on the far left are two elevator doors. On the far right is a convenience stand and one of those old floor cigarette butt ashtrays that's been converted into a trash can. In the distance is a long hallway with what seems to be an endless parade of hotel room doors in view. The upper right hand corner displayed the date and time, and it was currently set to January 15<sup>th</sup> at 1:23 AM. In the lower right hand corner it said \"#18\".\n\nOnly a few seconds after the image appears we see the far left elevator in the bottom left hand corner of the screen open. We can't see into the elevator but shortly two figures emerge and begin walking down the hallway away from us. Both are wearing overcoats and the larger of the two is also wearing a hat. By his size and the way he walks he appears to be male. The other is very recognizable by the mid-back level frizzy hair style she has. It's the woman in my photographs.\n\nWe watch them walk down the hall. Bud narrates as we watch and said that he went and counted the number of doors between the elevator and my room at the hotel. He said they stop directly in front of my room. As the three of us watch, we see the man in the overcoat produce a key card, open my door and disappear into my room.\"\n\n\"Holy shit!\" I exclaim. That proves someone entered my room just before the pictures were taken. You did it Bud!\"\n\n\"Not so fast,\" Bill says. \"I agree this seems to be the icing on the cake, but the two doubting Thomasina's I heard this morning won't see it the same way.\"\n\n\"What do you mean?\" I ask.\n\n\"It's pretty obvious it's the woman in the photographs. But the man in the photographs could have been you. He was about your height. They'll argue this is proof you did cheat. After all, no one but you should have had your key card.\"\n\n\"Oh shit, you're right!\"\n\n\"Not so fast Kimosabie,\" laughs Bud. \"I haven't shown you everything yet! First, this isn't the only tape I got. I managed to get all the tapes for Jake's floor for that evening. I clearly have Jake on tape entering his room a good hour and a half earlier, and he doesn't come out until the next morning. Second, I mentioned I called in a few favors. I called in a few down in Houston. As soon as I saw this footage I rushed off to another video expert I know down there and had him take a crack at it.\"\n\n\"Initially when my expert reviewed the footage several times and said it was doubtful we would get anything on the two individuals as they seem to be aware of the camera and had their faces turned as soon as they neared the camera's visual field.\"\n\n\"But ... then he started concentrating on that old chrome pedestal ashtray. He advanced the tape to the point where the elevator doors just start to open. Then he started blowing up and enhancing the section of the frame near the ashtry. This is what he got on his first blowup.\"\n\nBud reached down into his magic bag of tricks and pulled out another folder. This time he pulled out a single photograph. It was a blowup of the ashtray. Right on the corner for the chrome ashtray we could see the elevator doors open and two people standing there.\n\n\"Damn,\" I say. \"We can almost make them out.\"\n\n\"Hold your horses,\" Bud says. \"This is a blowup of the blowup.\"\n\nBud pulls out another photograph and lays it on his desk. Bill and I both look at it and then at each other.\n\n\"Is that Schmidt?\" Bill asks?\n\nI look at the blowup again. Although grainy and somewhat distorted in the curvature of the chrome ashtray, we could clearly see the two elevator doors as two parentheses. And framed in the middle of those two curved elevator doors were two faces. One belongs to the woman in my photographs. The other belongs to the VP of sales at my firm, none other than Thomas K Schmidt.\n\nI whistle.\n\n\"I'm not done yet!\" Bud says with glee.\n\nI had the bell boy access the security logs for your floor for that evening. It seems it shows your room being entered by someone in maintenance at 1:23 AM that morning. I tracked that guy down and he wouldn't admit to anything except he lost his card sometime that night. He didn't find out about it until 4:00 AM or so. I'll bet you a dollar to a doughnut he took a bribe. After all, that's how I was getting all of my information!\"\n\nBud holds up his hand when I try to speak.\n\n\"One more thing Jake and then I'm done. The bellboy even recognized the woman in your photographs. She's a high class hooker. He gave her name and I even tracked her down. She wouldn't answer a lot of questions but did say she was hired as part of a practical joke. She simply acted like she was fucking you but never did. She laughed and said they never even bothered to take your pants off. Of course, she refused to let me tape record her or sign a document.\"\n\nBud smiled and threw an audio cassette tape on the desk.\n\n\"But as luck would have it. My recorder was accidentally turned on. So I screwed up and taped it anyway. There's no way you could enter it as evidence for court, but it may carry a little weight with a certain prosecutor.\"\n\nBud throws one last photo on the desk and we look down at my \"partner\" in bed.\n\n\"There she is Jake. There's your mystery fuck.\"\n\nI sit back and laugh, much more in relief than for any other reason. A deep laugh ... one that I've needed for days.\n\nI look at my watch and see that it's barely 10:30 pm. I quickly give Vicky Gambino a call. She doesn't answer but I leave a message indicating that Bill and I would like to meet up with her and Susie tomorrow. We have one last consideration for Susie and if that doesn't convince her that I was innocent then I wouldn't fight her suit for divorce.\n\nBoth Bill and Bud are quiet while I make my call. Bill puts a hand on my shoulder. I grin and the two of us begin talking strategy for the next day. Bud gets up and makes a fresh pot of coffee, and for the next hour we kick around several ideas.\n\nJust as we are about to break up for the evening, my cell phone rings and it is Gambino. Bud's phone rings at the same time so I get up and step outside. Vicky says she got my message and had talked with Susie. They would meet us at Susie's office at 8:30 AM tomorrow.\n\nAfter hanging up I walk back into the conference room and tell Bill, \"The game is on.\"\n\nBill and I quietly talk a bit more strategy for the next day while Bud finishes up his phone call with a few grunts. He finally hangs up and sits quietly, a bit too quietly.\n\n\"Something wrong Bud?\" I ask.\n\n\"Not sure yet,\" he answers gruffly. \"I still got a few irons in the fire. I'll let you know when it's the right time.\"\n\nBill and I just give each other a puzzled glance. Bud seems a bit sour for someone that just broke this little situation wide open. It almost seems like he's stonewalling a bit, but maybe it has to do with one of the other agency's cases. I can't think of too much that could go wrong with ours that might throw a damper on what was uncovered today.\n\nWith Bud's disposition in the crapper Bill and I silently come to the same agreement that it was time to break up our little group. With a few handshakes all around Bill and I head outside, have a few last words and then split up.\n\nI drive back to my hotel and break the seal on the mini-bar. Taking a cold one outside on to the balcony, I take a moment for a very heavy sigh and begin to reflect back on the last few days. Life has been nothing but a rollercoaster and a whirlwind since Friday. For maybe the first time I start to give serious thought to what transpired Friday night. My mind has been in turmoil. I was in such a rage that evening, but I can also see how Schmidt set everything up. In hindsight it's easy to see how Susie jumped to the conclusion she did but couldn't she have talked to me about it instead of humiliating me and literally putting me into the hospital? Her reaction was swift and deadly, but she's always been that way, I knew that before we got married.\n\nI still have a lot of anger against her for not even giving me that chance to talk about it. And then there's the whole issue of fucking that asshole right in front of me, even though I know how ruthless she can be, the level of deceit to lure me into that chair and then the betrayal ... will we be able to work our way through this?\n\nI know in my heart I love her. That's not a question. Strangely it's not even a question of trust. This was a one-off thing she did as revenge. She was reacting to her own rage and that once she discovers the truth she'll be mortified.\n\nI wander back inside the hotel room for a moment to grab a rare second beer before retreating back to the balcony. Settling heavily into the chair I sigh, knowing that I want somehow to fix all of this, but not sure of how to pick up all the pieces.\n\nI stare out at the lights of Dallas as I nurse my beer. I feel like tying one on and getting drunk but know I need all my wits about me for the meeting with Susie tomorrow. Halfway through my beer my cell phone rings. I check it quickly to see that it's Bud.\n\nBud is nothing but abrupt and tells me to expect a package on the front desk of my hotel no later than 7 AM. He says there will be a few things in the package marked for Benner's eyes only. He makes me promise to deliver it only to Benner and not to look into any of the folders that were marked. I reluctantly give him the promise I wouldn't but not after arguing with him for several minutes. He says little as is his nature while I argue with him. His only response is that there is a time and place for everything. Right now it's not the right time. I grunt in response and Bud forces me to promise not to look into the folders one last time.\n\nAfter hanging up with Bud, I think back to when he was in his office and try to remember anything I heard that would give me a clue as to why he seems so gruff. I shake my head realizing that Bud said very little even then. A bit of foreboding descends over me while I call Bill to tell him about the package. Bill is just as mystified as I am and suggests we meet at the same little coffee caf\u00e9 no later than 7:45 so that he would have some chance to see what Bud was putting into the package.\n\nWednesday 8:30 AM\n\nTo say I slept restlessly last night would be an incredible understatement. The only thing more difficult than last night's sleep was resisting a peek inside the package waiting for me at the hotel's front desk. After seeing all of the contents marked with Bill's name, I was somehow able to resist examining the contents. The only reason I was able to hold off was because I gave my word, to an old friend such as Bud, no less.\n\nBill has just joined me at the booth I grabbed in the corner. I first slide across the table the coffee I bought him, followed by Bud's package. He lifts the lid on the box and frowns a moment, extracts the two folders inside and then stands up and moves away a few paces. He looks through both folders as I extract the voice recorder from the pocket of my jacket. It is also marked for Bill but I sorta broke my promise to Bud. I did promise to not look into any folders. I didn't say a damn thing about not listening to any audio tape.\n\nI stare down at the recorder, trying desperately to keep the anger bottled up that threatens to boil over. Rage at Susie if not pure malevolence at that asshole Schmidt. It is only the despair in my heart that helps me keep the rage contained..\n\nBill returns to our table and asks if I'm ready to head up to Susie's office. I ask him to wait a minute and then explain the tape, and what I heard on it. He puts a comforting hand on my shoulder and then we discuss what we might do with the information. Our mood is decidedly different that it was last night. Grimly we pick up our material and begin walking toward my wife's office.\n\nA look of expectation is on both of their faces as we enter. Silently I watch as the look of expectation changes to puzzlement for both of them. I realize they expected us to come out blasting. Instead we have entered as pallbearers ready to bury the dead.\n\nBill reaches into his portfolio and extracts the affidavit secured yesterday by Janine. He hands both Susie and Vicky a copy.\n\n\"What is this?\" Susie asks.\n\n\"I suggest you read it,\" Bill says. \"It speaks for itself.\"\n\n\"Where's the original?\" Susie asks.\n\n\"We have it, we plan on turning it back over before we leave today,\" Bill says.\n\nBoth of them quickly scan the document and look at each other. \"Did you see Heidi before she signed this?\" Susie asks me.\n\n\"Yes he did,\" Bill answers for me as I remain silent. I can feel my anger just burning below the surface. I don't trust myself to speak.\n\n\"Then I agree with your counselor. This document does speak for itself.\" Susie says. \"It says that Heidi, when confronted by Jake, will sign anything.\"\n\n\"What!\" I yell.\n\nBill's hand immediately and firmly grips my forearm squelching the next words that were about to come out of my mouth.\n\n\"Of course she signed this Jake. She's been your secretary for years. She's been your lover for who knows how long. You're intimidating and basically you coerced her into signing this new affidavit.\"\n\n\"Have you completely lost track of all your senses?\" I respond incredulously. \"You're completely ignoring everything you know about both Heidi and me for the past eight years!\"\n\n\"You cheated on me. I don't have a clue as to who you are.\" Susie replies.\n\n\"After last Friday night, I could say the exactly same thing.\" I hiss, forgetting my promise to let Bill do the speaking. His reminder is to even more tightly squeeze my forearm.",
        "At least this time Susie has to look away. Only for a moment though, and when she looks back into my eyes, the prosecutor's mask is in place.\n\nBill pulls another document from his portfolio. \"This is a copy of the original document you gave my client,\" Bill says, handing each of them a copy of the \"original\" affidavit. \"We are curious if either of you noticed the decidedly different tone between the first and second pages of the affidavit you apparently believe to be the truthful one. Did you notice the first page is a harassment complaint? The second page accuses my client of poor leadership skills, as if it is a performance evaluation. These two pages don't fit together.\"\n\n\"That's an opinion you and your client seem to share by yourselves.\" Vicky Gambino says.\n\n\"Susie,\" I blurt out, again forgetting my promise. \"Heidi told me she never saw that first page. She says the original first page was my performance appraisal. She says she signed the second page and was told to initial both pages. She says there was no notary there!\"\n\n\"Of course she'll say that Jake. You've coerced her into covering your ass! Has anyone noticed that this woman signed two completely different affidavits? Doesn't this speak of her character?\"\n\n\"You know damn well of Heidi's character,\" I challenge.\n\n\"Now that's what I want to see, my husband sticking up for his lover against his wife.\"\n\nI look at her flabbergasted. \"Pot calling the kettle black,\" I simply respond. But at the same time I see Susie's resolve weakening a little. She knows I speak the truth about Heidi's character. She may have lost all faith in me, but she hasn't about Heidi.\n\n\"How come Heidi hasn't said anything about this until now? She would have known about the affidavit last week,\" Susie challenges.\n\n\"Heidi's brother has had a drug relapse and was jailed. Heidi's been down in Houston with her family trying to take care of the situation. Of interest, would either of you venture a guess as to who actually secured the signature on this document?\" Bill asks, waving his hand at the copy of the initial affidavit.\"\n\nNeither one of them rise to Bill's bait. \"The HR Executive Director herself, Ms. Hinckley, went all the way out to Heidi's house to get Heidi's signature, just hours before Heidi left to go to Houston. Hinckley offered to help Heidi with her brother's problem. She told Heidi not to worry about how much time she needed to spend in Houston, to spend all the time she needed. Hinckley even told her that my client personally sent her out to see Heidi with instructions not to worry about any family leave. Jake didn't send Ms. Hinckley out on that trip. Why would an Executive HR Director go so far out of the way to help Jake's former secretary without even telling Jake? Why wouldn't she send one of the several HR representatives that work under her? And that's not to mention the fact Jake didn't even know about any problems with Heidi's brother until yesterday. And it's our understanding that Ms. Hinckley is a close personal and professional ally of Mr. Schmidt, someone you have recently allied yourself with if I'm not mistaken.\n\nSusie glances at me at the reference of her and Schmidt. For a moment she pales, but then almost as quickly the hard prosecutor mask descends and she theatrically throws up her hands. \"None of these arguments matter,\" she says. \"The pictures themselves condemn you. Even if the woman in the pictures is not Heidi, you obviously were fucking somebody. I'm not divorcing Heidi. I'm divorcing you.\"\n\n\n\nBill's hand again tightens on my forearm cautioning me. Bill looks at Vicky and says, \"It's our understanding from the meeting yesterday there were two and only two points of contention leading to the suit for divorce. While both are damning on their own, together they make an impelling case. We have already cast significant doubt about the first contention, the affidavit. We have even more information that will completely shred any remaining doubt about the initial affidavit and prove it to be forged. The second contention is the pictures about which we have raised significant doubts. Wouldn't it make sense for everyone to cool down, take a step back, and get the facts before proceeding?\"\n\n\"The original affidavit hasn't been proven false,\" says Vicky Gambino. \"As far as anyone knows, Ms. Bevis is in those photographs and she's now trying to cover up for her boss. After accusing him she's had second thoughts and doesn't want to bite the future hand that will feed her. Nothing has proven that the original document is not valid.\"\n\nBill looks at me and I subtly shake my head about revealing the information about the tattoo at this time. It doesn't appear that either of them is receptive.\n\n\"As just said, there is data that will shred any doubts about the original affidavit. We only need the time and opportunity to present it.\"\n\n\"I sincerely doubt that and I am tiring of all this grandstanding,\" chirps in Susie. \"Jake, believe me, I took a firm look at the evidence. It made me sick to my stomach. I then had experts look at it and they confirmed it. This charade that you and your lawyer insist on presenting only makes you look all the more desperate and despicable.\"\n\n\"Desperate and despicable? To have arrived at the conclusions you have proves one thing that you failed to look objectively and also failed to consider all the facts. It's obvious for one thing that you have completely ignored any issues of character. After you see what we have to show you this morning I'm confident you'll be looking at it quite differently. What we will show you will completely obliterate the two pieces of evidence you are set to hang me with.\" I literally clinch my teeth to prevent myself from adding any more comments about the previous Friday and ... well as Bud said it's not the right time or place. At least not right now. In the back of my mind I have to wonder why I am even sitting here?\n\n\"Jake, this isn't a game. This isn't something you have to win at all cost, even to make stuff up.\"\n\nSuddenly I know why I am still sitting here wanting to prove my innocence. \"Whatever we show you can be easily authenticated, or at least already has been. But you're wrong to some degree. You're right, it's not a game. But it is something I have to win. You accused me of something extremely egregious. Something I would never consider doing. You impugned my dignity and my character. And you punished me severely, both emotionally and physically for something I never did. Even if you refuse to see the light, what we have done the past few days to completely disprove everything you have thrown at me is important to me. It is up to you to determine if it is important to you, and eventually us.\"\n\n\"Thank you for those brilliant remarks counselor,\" Susie retorts sarcastically.\n\nI smile back at her, mainly because I know it pisses her off when she's trying to get under my skin and I just smile back.\n\nTo head off a deteriorating conversation Bill interjects, \"Do either of you know about the invisible printer codes the U.S. Secret Service requires printer manufactures to print on each sheet of paper?\" Not surprisingly, Susie knows all about it. However Vicky Gambino has never heard of it. I sit back and sip my coffee while Susie in her normal concise and efficient ways brings her lawyer up to speed.\n\n\"So what about these invisible codes?\" Vicky asks.\n\n\"Are you aware that the two sheets that make up the supposedly \"original\" affidavit you gave me on Monday were printed at different times on the same day?\n\n\"Wouldn't that make sense?\" Vicky asks. \"The sheets would come out of the printer at slightly different times.\"\n\n\"Yes it would,\" Bill counter. \"Except in this case, the second sheet was printed at 7:03 AM. The first sheet was printed fifteen hours later at 10:13 PM. That sheet was printed after the affidavit was signed by Heidi and supposedly notarized. It was printed hours after Heidi got on a plane and was in Houston. If Heidi was in Houston, how did her initials get on that page?\"\n\nI watch as Susie sits a bit straighter and skeptically narrows her eyes. \"You can prove this?\"\n\n\"You can prove it yourself. Your staff has even more expertise than what we are able to provide. It's something that could have easily been done before,\" Bill counters with a dig. Bill reaches down into his portfolio and rifles through several folders until he finds the one he wants. \"Here you are,\" he throws the folder on the table. \"This is the same folder and same original so-called affidavit you gave me Monday. Have your experts go through it.\"\n\nShe pulls the folder off the table and opens it, checking the contents. \"I will,\" she says emotionlessly.\n\n\"So assuming they were printed at different times. That doesn't necessarily prove anything malicious as you claim. Perhaps there was a typographical error and they just reprinted the first sheet?\"\n\n\"Ms. Gambino,\" Bill quickly speaks up. \"I'm sure you're aware that would never be done with a document that was supposedly notarized. But more importantly ... if they did reprint the first sheet, how did you explain Heidi's initials on it? Remember Heidi was in Houston by the time that sheet was printed.\"\n\n\"Not only that,\" I add. Heidi's initials on the first sheet are not in ink, but in toner. The same toner used to print the first sheet. This fact confirms Heidi's recent affidavit that she had never seen or initialed that page.\"\n\n\"I think we have sufficiently proven that at least the first sheet of the affidavit you have presented is in fact a forgery. That not only was it not signed by Heidi Bevis, but in fact she never even saw that page until it was presented to her this week by Jake.\" Bill adds.\n\nWithout admitting anything, the look on both Susie's and Gambino's face told me all I needed to know. They know that affidavit was forged.\n\n\"I do hope you realize,\" Bill adds. \"The very fact the affidavit is a forgery also introduces malicious intent.\"\n\n\"I hope you are not suggesting my client forged that affidavit or has done anything maliciously!\" Vicky quickly says.\n\n\"I think it's clear that your client has done several things quite maliciously!\" I add hotly.\n\nBill's squeezing hand again forces me to close my mouth.\n\n\"We are not insinuating that your client had anything to do with forging that affidavit. We even have evidence as to who did. It is a shame that your client didn't execute sufficient due diligence to discover this information for herself. It only took us, with much less resources, a few hours once we had the document in our possession. But then we suspected it was false to begin with while your client did not.\" Bill holds up his hand to quench an objection from Gambino. \"We wish to move on and present other information to you.\"\n\nAgain reaching down into his portfolio, Bill produces another folder. Opening it he distributes two copies of the badge log data for the day the initial affidavit was printed. We had already highlighted the pertinent information of when access was gained to the floor as well as highlighted to who those badges belonged. Bill explains what the documents are, and specifically emphasizes that at the time the second sheet was printed at 7:03AM, the badge log indicates only two people on the floor. Bill pauses while he let both women determine for themselves that those two individuals were Hinckley and Schmidt.\n\nUnable to contain myself, \"I know who gave you that affidavit Susie. And I also know that you are aware the two of us have been adversaries for years. You knew he has long had it in for me. You should have considered that from the start. He set me up, and you backed him.\" I glare at Susie, and for once she doesn't hold my gaze and looks away.\n\nBill says, \"Now for what was certainly the more damaging evidence ... the photographs. Yesterday we discussed the very short time period the photographs were taken. We also discussed about how my client didn't move during that time period.\"\n\n\"So you're admitting it's you in that photograph?\" Susie asks me directly.\n\n\"Yes, unfortunately.\" I reply.\n\n\"So even if that isn't Heidi, you still cheated on me with a woman that looks like Heidi. Maybe you even fantasized it was Heidi?\" Susie challenges.\n\n\"Do you really think so little of me that you have to manufacture my failings?\" I reply hotly. I gather myself and press on. \"Yes it is me in that photograph. And no it isn't Heidi. If you look closely at this last picture, you'll see the top of a tattoo at the very base of her back. Heidi, as you might guess Susie, doesn't have any tattoos.\"\n\n\"I'm convinced it isn't Heidi Jake. Heidi's not the problem. You're the problem Jake.\" Susie says with her anger returning.\n\n\"What I would like is a chance to present our findings without being challenged on each and every point,\" Bill says.\n\nSusie looks at Gambino and then back at me. \"No,\" she says simply.\n\n\"Fine,\" Bill says. \"It will only slow up our presentation, it will not change it. First, the reason Jake didn't move in the photographs is because he was drugged.\"\n\n\"Drugged!\" Susie says. \"How do you know that? And why wouldn't you have disclosed that on Monday!\"\n\n\"I'll come back to that later. Right now I'm going to press on. Second, these photographs were staged. We have already agreed to the points about the clock and calendar.\"\n\n\"No we haven't agreed. You discussed and we discounted it.\" Susie challenges again. \"Nothing was agreed upon.\"\n\n\"First, do you really think my client is that stupid to allow photographs of him to be taken while cheating? Second, we've already proven that one of your two major issues was maliciously forged. We know quite a bit of effort was put forth to manufacture a fake affidavit. You don't think that casts any doubt on the issue of the photographs? That the people behind the affidavit wouldn't go as far as to stage the photographs?\"\n\n\"With great effort I'll refrain from commenting on how stupid your client may be. And there can be several reasons why the clock and calendar are positioned as they are.\"\n\n\"What about the water bottle?\" Bill asks.\n\n\"The water bottle? What about it? You're not suggesting the hotel doesn't sell or provide water?\"\n\n\"This hotel has an exclusive contract with Mountain Ice. They don't provide any other kind. They don't sell them in the vending machines, not in the dining rooms, nor in room service. If you look closely that water bottle is of the brand Aquafina. It doesn't belong.\"\n\n\"You could have brought that water bottle in yourself.\"\n\n\"True, and he did. And he was given that water bottle by Mr. Schmidt.\"\n\n\"How convenient, it's all Schmidt's fault?\" Susie challenges. \"He's the reason you cheated?\"\n\n\"No, this entire situation is not entirely his fault. It's also partially yours,\" I hiss. \"And I did not cheat!\"\n\nBill only glares at me this time, and I settle back into my chair fuming.\n\n\"There's a witness. A Mr. Weston was with both Jake and Mr. Schmidt. We have not yet had time to interview Mr. Weston but we are confident that when we do, he'll be able to confirm that Schmidt came back with the last round of drinks and a bottle of water for Jake. That was about 15 minutes before Jake began to feel drowsy. At that time he said goodnight to both Weston and Schmidt and retired to his room, alone I might add.\"\n\nI smile as Susie begins to look down at her hands. She always does that when she's stressed or feels a situation slipping away.\n\n\"Have you seen one of those flip calendars at a hotel?\" Bill probes.\n\nSusie raises her eyes. \"I'm not the one that needs to be answering questions.\"\n\n\"I'll take your avoidance of the question that you have not seen that type of calendar at a hotel. Or have you?\"\n\n\"No!\" She says emphatically.\n\n\"Wanna know who has one of those calendars on his desk?\" I add, improvising. I had no idea if Schmidt has one of those calendars or not, but I see an opportunity to bluff.\n\nSusie doesn't answer, her eyes glancing back downward toward her hands.\n\n\"We can prove there was a third person in the room.\"\n\n\"You have evidence someone else was in the room?\" Vicky asks.\n\n\"First, we know the camera was moved. The calendar and clock were turned so that they would establish a time and date for the person taking the pictures. This again goes to the question as to why you would think my client would allow a third party take pictures of him cheating? Or is it more likely he was being set up as we have already proven with the affidavit.\"\n\n\"How do you know the camera wasn't on a tripod? It looks the same angle to me.\" Vicky asks, with Susie now being quiet and looking at her hands.\n\nBill explains about the blow up on the pictures and the angle of the clock and the calendar. He then reaches back into his portfolio and extracts the folder with the negatives. Tossing it on the desk near the other folders he invites them to have their own experts examine it as closely as we did.\n\nI look back at Susie. She was now wringing her hands together, her vision fixed. I don't even know if she is still listening.\n\n\"Jake, you said you had evidence you were drugged?\" Susie suddenly says, drawing herself back into the conversation.\n\nBill intercedes, \"Direct evidence ... no. Lots of circumstantial evidence ... yes. We don't have a water bottle to test. We can't run a blood test on Jake at this late date. But how do you think these pictures were taken. Have you noticed there's no evidence that Jake has even managed penetration with the woman in the photographs?\"\n\n\"Oh come on,\" Susie challenges unbelievingly and standing up.\n\nI blurt, \"Look for yourself Susie, except look with your eyes open this time. Look without being blinded by what you wanted to believe I was capable of doing. Would it make a difference to you to know that I woke up the next morning with my pants on?\"\n\nSusie glances up at me and then back to the pictures. Shaking her head she sits down.\n\n\"Jake, everything you've been saying is all directed along the lines of you being set up. Why would he go to these extremes?\"\n\n\"Susie, you already know he went to the extreme of forging an affidavit! And you already know why! I've been telling you for several months now. He went to those extremes for several reasons and they aren't even that farfetched when you consider the goal. We were both striving for one partnership, a very lucrative partnership. One of us was going to make it. There is a person behind all of this and you know it. You know it as well as you know me. The other reason is that the two of us simply don't like each other, but I think his attitude goes beyond and borders on jealously and hate. Nothing would make him happier than to stick it to me as hard as he could and then rub my nose in it. But he needed someone close to me to make it really hurt.\"\n\nI watch as all the color drains out of Susie's face. I can see she now realizes fully how much she had been duped. I wonder if she's started to realize that even if she didn't stick the blade in my back, she had a hand in twisting it.\n\nVicky asks if we have similar evidence of a setup concerning the photographs.\"\n\nBill retrieves a VHS tape that Bud had created from different segments of the hotel's security system. After getting permission he walks over to the side of her office and turn on the TV. Inserting the tape, he grabs the remote control and retreats back to our side of the table.\n\n\"This is the security monitor tape for the floor of Jake's hotel room on the night these pictures were taken.\" He presses the fast forward button until the clock says 1:23 AM. He backs the tape up a minute and decides to let the video tape do all the talking. A few seconds later we see the elevator doors open and two people emerge and walk down the hall. They stop and use a key card to enter a room. He fast-forwards the tape again until it reads 1:35 AM. A few moments later the same two people emerge from the room and turn away from the camera continuing down the hallway. They push open another door marked by the sigh \"Stairwell\" and disappear. He reverses the tape up and plays the whole sequence again.",
        "\"That was Jake's room they entered,\" Bill adds quietly. \"That was the same night as the photographs. They were in his room for only twelve minutes. There were in his room during the time period the photographs were taken. If you wish I'll play the tape again and you can see they are even aware of the security camera and go to great lengths to make sure their faces are never exposed to it. Do you want me to replay the tape?\"\n\nVicky looks over at Susie who is now wringing her hand a little more aggressively. She seems to have lost a little more color. Vicky looks back up at me and shakes her head.\n\n\"I only have one more thing we want to show you,\" Bill explains. Again he reaches down and pulls out one more folder. \"These are your copies,\" Bill says as he hands over the folder containing two sets of blowups. He then reverses the tape to 1:23 AM when the elevator doors first open.\n\n\"Do you see the chrome trash can in the right lower hand corner?\" He asks.\n\nNeither of them says anything. \"This is important. Watch!\" Bill says firmly. It is an order more than a request. Susie looks and stops wringing her hands.\n\n\"Yes I see it.\" She says dispirited.\n\n\"Look at the first photograph. This is a snapshot of that frame in the tape.\" Tossing the picture on the table, they see basically the same thing as what is being shown on the TV.\n\n\"Now look at the second picture. This is a blowup of the lower right corner of the first picture,\" Bill adds while I toss another picture. The picture clearly shows the top rounded portion of the chrome ashtray.\n\n\"Now look at the third picture which is a blowup of the second picture,\" Bill says.\n\nI glance across the table at the picture now in front of Susie. The outline of the trashcan is now lost, but the appearance of images in the chrome is apparent.\n\n\"And last, this is a blowup of the third picture,\" Bill says.\n\nAgain I glance at the picture in front of Susie. Shown are two people both wearing long coats. The smaller one on the right has frizzy hair like Heidi. The one on the left is a taller man. As we saw last night the appearance is grainy from the blowups but it's quite clear, at least to me, who it is.\n\n\"It's not a very clear picture,\" Vicky states.\n\n\"It may be difficult to present in a court. But I don't think that's necessary is it? It only has to have validity in this room. And I think all four of us know exactly who it is.\"\n\nSusie drops her eyes to her hands again. She seems to have disassociated.\n\n\"Susie,\" I add. \"We even found the prostitute in the pictures. She won't sign an affidavit but she will come up here. She's identified Schmidt as the man that paid her. She says she was told it was all a prank. And she will also tell you that she thought I was drunk or something because I never moved. She'll also tell you that my pants were still on the entire time and that we couldn't have fucked because I didn't even have an erection.\"\n\nI can hear Susie crying. A part of me remembers what we have had together and desperately wants to go to her. But another part remembers what she has done recently, and wants her to hurt as much as I do.\n\nI realize that Susie was correct earlier. I had lied to myself about the \"not winning at all costs.\" Yet so far I discover I am still losing. We are both going to lose.\n\nVicky puts a hand on her shoulder and looks up at me. She says her client needs a little time and that they will get back to us.\n\nI bristle a little at that. After all I've been put through. I want her to get down on her knees a beg me to forgive her. I'm about to say something when I feel Bill's hand on my arm. I look back to Susie and then Vicky. Vicky mouths the word \"please?\"\n\nI nod. Bill and I stand and turn to leave. At the door, I stop and look back.\n\n\"Susie,\" I finally say. She looks up at me, her eyes flooded with tears. I feel my heart tugged in separate directions and have second thoughts about saying anything further. I wave dismissively as I turn without a further word. The door clicks loudly as it closes behind me.\n\nWednesday 1:00 PM\n\nBill and I are escorted into the same conference room in which I met the review committee on Monday. The same five members are present. I smile at Tom and Kristy as I sit down and hold a seat out for Bill.\n\nJust prior to the meeting I had a quick conversation with Tom Weston. He confirmed that he had mentioned Heidi's problem to Hinckley. Heidi certainly had an HR type problem and since Hinckley was the Executive HR Director it was her department. He was surprised when I told him, with only the barest details, about Hinckley's personal involvement. Tom was also able to confirm the other item. He did remember Schmidt buying that last round of drinks for two reasons. One, because Schmidt had taken so long and two, he actually noticed that the bottle of water that was on the tray didn't have a cap on it.\n\nKristy clears her throat in an effort to start the meeting. \"Excuse me,\" Kristy says. She stands and extends a hand across the table. \"I don't believe we've been introduced?\" She says to Bill.\n\n\"You must be Kristy Evans. Mr. Vickers has told me a lot about you. I'm Bill Benner. Mr. Vickers has retained me as his counsel.\n\n\"I see,\" she says solemnly.\n\n\"Mr. Vickers,\" Kristy says formally. \"Surely you know you are not permitted external representation.\"\n\n\"I know I am entitled to representation,\" I respond.\n\n\"Yes you are, but internal representation. This is not a court of law. We must follow HR policy which does not permit outside interference.\"\n\n\"I do not believe it is possible for me to receive unbiased internal representation. As such I require external representation. If you feel differently then I see little reason for us to continue this meeting at this time.\" I rise to my feet, followed quickly by Bill.\n\nKristy looks down at Tom first who nods, and then at Hinckley who shrugs.\n\n\"Mr. Vickers,\" Kristy says dryly. I have been appointed as special counsel for this situation and I have been appointed by the partners to resolve this issue. An emergency meeting was conducted last night with all partners of this company as well as the members of this panel. After much discussion it was decided that your employment with this company has been terminated. The severance offer tended to you on Monday is still valid but only if you sign it now. In addition, you will need to sign a document stating you will not seek any further civil procedures against the company.\n\nI slowly settle to my seat. \"This was decided last night?\" I say haltingly.\n\nNo one responds to my question. I glance to my left at Tom Weston who grimaces. I realize at a glance he was outgunned in that meeting. I look straight ahead at Kristy who has a slight mist in her eyes, doing what she can to maintain her composure. \"This day is not turning out exactly as I planned ...\" I think to myself.\n\nI feel emptiness inside, a sudden loss. I had poured years of myself into this company only to be forced out by trumped up charges by some fucking jackass. I glance to my right and lock gazes with Schmidt. The shit-eating grin on his face is too much ... or perhaps just enough ... to flame my insides.\n\nI look back at Kristy. \"It was agreed on Monday that I had until midday today to report back to this panel with my response to the charges against me.\"\n\n\"That offer was a courtesy and was non-binding,\" Kristy says dutifully.\n\n\"Non-binding?\" Bill speaks up from my side.\n\n\"Mr. Benner,\" Kristy quickly says. \"You have no status in this meeting and I will need to have you escorted from the building if you cannot refrain.\"\n\n\"Oh shut up,\" Bill says, surprising everyone in the room including me. \"Christ, now I remember distinctly why I didn't go into corporate law!\"\n\n\"Mr. Benner ...\" Kristy interrupts.\n\n\"You'll hear me now,\" Bill interrupts back. \"Or you will hear me in court. And I can assure you that what you hear in court will not be of your liking.\"\n\nWithout pausing for an answer, Bill precedes to lay out all the original charges and evidence that we had uncovered the past two days. It was actually pleasant for me to sit back and watch. I especially loved watching Hinckley. She must have turned five or six different shades of bleach white to crimson red as her personal involvement in this scam was revealed. I especially liked the shades she turned when Bill explained how she used the information given by Tom Weston to persuade Heidi to sign the original document. But the best was when he described the hidden print codes and the badge data. Bill also hammered on the point that the emergency meeting held last night violated their policy in terminating my employment. He also made a point my termination was not only based on trumped up allegations, but that criminal laws were broken by upper management in creating forged documents, and that company resources were used in the commission of the crimes.\n\n\"As such,\" Bill winds down. \"Your original offer is completely unacceptable.\"\n\n\"Then according to the parameters decided in our meeting last night, I'm afraid we will have to withdraw our severance offer,\" Kristy responds.\n\n\"Excellent,\" Bill responds. \"Your organization has performed a great service for my client by withdrawing the offer. It opens the door for my client to file not only civil charges for wrongful termination, but also opens the door for criminal charges to be brought against not only the organization but specific executives. However, given that my client has contributed a significant part of his life to this organization and still has some fondness, he will entertain an offer that is at least 250% greater than the severance offer you have withdrawn. In consideration my client will agree not to file a civil suit against the organization, one that he would easily win. My client will also not provide any information to the District Attorney regarding criminal acts. Additionally my client will sign a non-disclosure and a non-competition agreement. However, my client reserves the right to sue individuals for grievances that have been done to him outside of the purview of the company.\"\n\nBill has been talking non-stop for fifteen minutes or more. His sudden silence leaves a verbal vacuum in the room.\n\nKristy clears her throat. \"I will need to present this to all of the partners.\"\n\n\"I'll give you until end of business tomorrow.\"\n\n\"I'll need several days just to prepare them,\" she counters.\n\n\"You held two emergency meetings in a period of 48 hours. I'm sure you can manage one meeting in the next 36 hours. I will prepare our documents to file in court tomorrow. If I have not heard from you by end of business tomorrow with a satisfactory answer, we will file with civil court first thing Friday,\" Bill says firmly.\n\n\"How will I contact you?\" Kristy asks.\n\nBill extracts a business card and slides it across the table.\n\nKristy smiles and picks up the card and then glances to her left at Hinckley and Schmidt. \"I will need to see both of you in my office right after this meeting. I will start with you Ms. Hinckley.\"\n\n\"I have several meetings this morning. I can see you this afternoon,\" Hinckley explains. Schmidt nervously sits back in his chair.\n\n\"No,\" Kristy says. \"You can follow me to my office now. If you need to cancel any meetings, my administrative assistant will do so for you.\"\n\nKristy looks to her right. \"Tom, could you please escort Mr. Vickers and Mr. Benner to the door?\"\n\nTom nods and the meeting breaks up. Tom chuckles as he tells me that the other managing partners will easily cave into the new package once they see all the shit that's been going on. We exchange gratitude for years of being colleagues. He tells me to let him know where I settle and not to be a stranger. Lastly he says he's not going to escort me out. He figures I know where the door is and he's not too worried about me stealing a printer or anything. We shake hands and I see him quickly head down the aisle, not toward his office but toward Kristy's.\n\nBill and I laugh as we proceed toward the door.\n\n\"So do you think you won asshole?\" I hear behind me as we pass a vacant conference room.\n\nI wheel to see Schmidt leaning against the door jamb.\n\n\"Aren't you suppose to be taking your medicine in Kristy's office right now?\" I jab back.\n\n\"Fuck that shit,\" he laughs.\n\n\"You know they are going to fire you,\" I goad. \"That evidence you forged was just good enough to be bad.\"\n\n\"So what! There's a better paying jobs at dozens of other companies.\" Schmidt laughs and steps back into the conference room.\n\nI quickly begin to follow when Bill grabs my forearm.\n\n\"You don't want to do this Jake,\" He warns.\n\n\"I have to do this,\" I say, and step into the conference room, closing the door behind me.\n\nI walk directly up to Schmidt. He stands a few inches taller but it doesn't intimidate me.\n\n\"You'll never get that partnership now Jackass. In fact, you'll be lucky if you stay out of jail.\"\n\nI drop to my knees as pain explodes across my face. I never figured, nor saw, the forearm that crashed across the bridge of my nose.\n\nDazed I hear him laugh.\n\n\"You've always been such a fucking wimp. Fucking lawyer wimp,\" He laughs.\n\nI struggle to get my head cleared, my vision to focus ...\n\n\"I'll give you one thing,\" he continues. \"You are a good fuckin' lawyer except for one thing. You don't see the big picture, or at least not anywhere as well as I could.\"\n\n\"I'm going to fucking kill you,\" I mutter.\n\nSchmidt laughs. \"You see Vickers, you proved my point when you came in here and started talking about the partnership and evidence. Do you really think this was all about the partnership?\"\n\n\"Of course it is wormbrain,\" I mutter. \"It's what you've been after all along. That and how to fuck me over.\"\n\nSchmidt laughs again. \"You see ... you're still proving my point. This had little to do with any fucking job. This was about your wife! Ever since I first saw her at college I wondered what it would be like to have my balls pressed against her ass ... or her chin. I knew you could never appreciate a piece of ass as good as she is. I knew somewhere inside her was a slut just waiting to burst out, and that I was the man that would know how to open her cage. Unfortunately the bitch wouldn't give me the time of day back in college, but she sure as hell does now. And do you know something Vickers, I was right. She is a first class slut and an even better cocksucker. I've never seen anyone learn to deep throat cock as fast as she has. And the way she begs me to feed her cum ... fuck she's one hot slut. I got a friend whose cock is even bigger than mine and I've talked her into trying his cock and letting me film it. If you want I'll send you a copy.\" He laughs.\n\n\"You piece of shit,\" I hiss, my vision starting to come back into focus.\n\n\"You fucking wimp!\" He roars. \"You don't get it do you? You lost asshole. I've been in your bed fucking your wife every single night since Friday. You fucking cuckold! Do you know she begs me for more of my cock. She can't get enough. Hell, just a few hours ago I called her up and told her I had lunch for her at my office. When she showed up, she locked my office door, stripped down to her g-string and heels, dropped to her knees and sucked my cock like a harlot that hasn't eaten in a week. I can't begin to tell you how good it was with my fingers in her hair, fucking her mouth. It only took me a few short days, asshole, to take your wife and turn her into my personal whore. I've turned your wife from a respectable assistant DA to a complete cockwhore. And you're the wimp that let me do it. I ought to do your wife a favor and just beat the shit out of your pathetic ass.\"\n\nSchmidt then bends over slightly and whispers, \"... and just between you and me ... she told me she now loves the taste of cum.\"\n\nMy vision sudden clears in blinding fury as I lash out from my position. Standing haughtily over me, I snap my head back and feel the back of my head smash into his nose. Leaning back as much as I can, I throw the hardest punch I possible could directly into his groin. Schmidt's loud explosion of air and swearing was enough for me to stagger to my feet. I look down at Schmidt. He's bent over, holding his crotch with one hand, his bleeding nose with the other, cursing me with what little breath remains in his lungs.\n\nI don't hesitate. I bring my knee up as hard as I can directly into his face. Even with his hand covering his nose his bellow of pain brings only a smile to my lips. I allow myself a brief trace of satisfaction as Schmidt topples over backwards, one handing holding his nose and the other holding his groin.\n\n\"I've only begun to fuck your life over ...\" I say. I want to kick his face in. It takes everything I have to turn and walk toward the door.\n\nBill looks at me with a raised eyebrow. \"You make your lawyer's life interesting,\" he says. \"Are you OK?\"\n\n\"I've felt better,\" I reply gingerly touching the bridge of my nose. \"But I'm not bad considering.\"\n\nHe smiles. \"Let's get out of here.\"\n\n\"One thing first,\" I say as he groans. \"Seriously I have to do this. Follow me please.\"\n\nI walk only a short distance over to where Marketing was located. I go directly toward Schmidt's office and have mixed emotions about finding his administrative assistant at her desk.\n\nShe watches me approach her desk, a look of apprehension and surprise on her face.\n\n\"Betty,\" I begin. \"I don't want to get you in trouble. I just want to know one thing. Was my wife here yesterday?\"\n\nShe looks at me and sighs. I close my eyes in pain as I see her nod.\n\n\"Did she go into Schmidt's office?\"\n\nShe nods again.\n\n\"And the door was locked?\"\n\nShe nods again.\n\n\"Thank you Betty. I appreciate your honesty.\"\n\nI look up at Bill. \"Let's go Bill.\" I say resignedly. \"There's only one way to play this game now.\"\n\nThursday -- 11:00 AM\n\nAs Bill and I take our seats, it's apparent the cluster bombs Bill dropped in yesterday's meeting had generated a lot of collateral damage. Today's meeting only involved four of us. Bill was there as my representative and only Tom Weston and Kristy Evans were representing my old company.\n\n\"Where are the others?\" I ask.\n\n\"The HR review panel was dismissed as your employment situation has now been settled Jake,\" Kristy says a lot less formally than the previous day. \"We're simply negotiating the terms of your severance package.\"\n\nI nod my head, realizing behind the faint smile on Kristy's face there was a lot more being said than expressed.\n\n\"Jake,\" Kristy starts. \"After meeting with all the partners, your terms were accepted except for the monetary portion. They have agreed to increase the amount to three million.\"\n\nI raise my eyebrows in surprise and look at Bill.\n\n\"That offer only amounts to a 50% increase,\" Bill challenges. \"That's considerable less that the five million we are seeking.\"\n\nKristy looks at Bill. \"That's our offer,\" she simply says.\n\nBill and I look at each other. We both shrug as he extracts a folder from his briefcase. Bill hands the folder to Kristy. We watch as she opens it up. She was unable to suppress the surprise that laced her face.\n\n\"What's this?\" She exclaims. \"You're suing for ten million? That's twice what you asked for yesterday!\"\n\n\"As I indicated yesterday, our position was not negotiable. You have executives that were included as part of an executive review process forging documents, on company time, and using company resources,\" Bill explains. \"The entire termination process enacted by this firm against my colleague was a conspiracy involving some of the highest members of this firm. And if that wasn't enough, my client was physically attacked in this building by one of your senior execs.\"\n\n\"I'm aware of the physical confrontation Mr. Benner,\" Kristy responds having re-adopted a formal tone. \"It's a matter of interpretation as to who attacked whom,\" Kristy says. Again I see the slight trace of a smile in the corner of her eyes as she glances at the twin black eyes left by Schmidt forearm across my nose.",
        "\"My client merely defended himself. In fact he had to do so from his knees after he was struck down by your Marketing Vice-President, Mr. Schmidt.\"\n\n\"Mr. Schmidt was acting on his own behalf. He was no longer employed by this firm.\"\n\n\"Oh?\" Bill replies. \"I assume you do not have ex-employees as part of your HR panel reviews. So Mr. Schmidt must have been employed by this firm at the time of yesterday's meeting. Since Mr. Schmidt attacked my client immediately after the meeting, I see no other course but to conclude at the time of the attack he was still within this firm's employment.\"\n\n\"There's still a matter of interpretation of who attacked whom.\"\n\n\"Ms. Evans,\" Bill retorts. \"I personally witnessed the attack by Mr. Schmidt.\"\n\n\"I would expect you to do nothing else but support your client,\" Kristy says.\n\n\"I do hope you are not accusing me as an officer of the court of suborning perjury? Besides, there's a second witness.\"\n\n\"A second witness?\" She says with surprise.\n\nBrad gets up and opens the door. Betty Higgins, Schmidt's administrative assistant that I talked with yesterday, enters the room looking very timid. Bill holds out a chair for her. She gratefully accepts the chair.\n\n\"Mrs. Higgins,\" Bill addresses her. \"I just want to assure you that you're not under oath. I simply have a few questions for you and would appreciate your honest answers.\"\n\nBetty nods.\n\n\"Were you standing besides me yesterday? Outside of conference room 15-C?\"\n\n\"Yes,\" she says.\n\n\"Did you witness the altercation between Jake, Mr. Vickers and your former boss Mr. Schmidt?\" Bill continues.\n\nBetty hesitates and looks first at Tom and then Kristy.\n\n<br /> \"Mrs. Higgins, I would personally appreciate if you would tell the truth as you best remember. There will not be any negative repercussions if you tell the truth,\" Kristy assures.\n\nBetty sighs and then looks back at Bill. \"Yes, I did see it.\"\n\n\"Can you describe what you saw?\"\n\nBetty glances first at me, then at Kristy before finally looking back at Bill. I suppress a chuckle because it was obvious to me that Bill had gotten to her somehow. I've never known her to be anything like accommodating or helpful. Perhaps my opinion was a bit biased since I knew that she had been reporting to that scumbag.\n\n\"They, Mr. Schmidt and Mr. Vickers, started arguing and then Mr. Schmidt just struck Mr. Vickers across the face.\" Betty says.\n\n\"Can you show me how?\" Bill interrupts.\n\n\"Well, he used his forearm like this,\" she says, taking her arm and pretending to strike Bill across the top of his nose.\n\n\"Thank you Betty,\" Bill says. \"Then what happened?\n\n\"Well, Mr. Vickers went down. I mean not all the way to the floor, but just to his knees. I could see he was woozy. Mr. Schmidt then starting telling him things, terrible things, about his wife, I mean ... Mr. Vicker's wife. Then Mr. Schmidt said something about how he ought to beat up Mr. Vickers. He didn't use those words exactly. There were some swear words mixed in, but basically that was what Mr. Schmidt said.\n\n\"Then what?\" Bill prods\n\n\"Then Mr. Vickers somehow was able to hit him in the face with the back of his head. I couldn't see how he did it because he was still on one knee at the time. Mr. Schmidt was standing over the top of him taunting him about Mrs. Vickers. Then Mr. Vickers punched him right in the groin. Mr. Schmidt fell to one knee while Mr. Vickers stood up. Mr. Schmidt was still threatening Mr. Vickers and swearing at him. Then Mr. Vickers kneed him in the face. Mr. Vickers said something I could hear and then he turned to leave. That's when I turned and went back to my desk. I didn't want to have anything else to do with what happened in the room.\"\n\n\"Thank you Betty,\" Bill soothes.\n\n\"When you got back to your desk, did Mr. Vickers and I show up just a few moments later?\"\n\nBetty nods. \"I guess so; the two of you arrived shortly after I sat down at my desk.\"\n\n\"Did he ask you about his wife going into Mr. Schmidt's office around noon on Tuesday?\"\n\n\"Yes he did,\" she replies.\n\nI am about to object to my own lawyer's line of questioning when he tells Betty that was all the questions he had for her.\n\nBill turns to Kristy. \"Is there anything you would like to ask her?\"\n\nKristy looks down at Tom and then back to Bill, shaking her head. She then thanks Betty and tells her she can return to her duties.\n\nThen as a shock to me, my lawyer then gives a very brief explanation of what happened at my home Friday night and the hospitalization over the weekend. Kristy and Tom were both shocked. Kristy being the attorney I trained recovered quite quickly and argued that what happened at my residence was irrelevant given it was a private matter and had nothing to do with the company.\n\nBill argues that Schmidt and Hinckley both conspired against me, that they used company resources in an effort to discredit me and commit criminal crimes and subverted the very HR process to get me fired. In addition Mr. Schmidt, on the previous day, admitted before witnesses that he did all of these things using company resources and procedures in an effort to gain sexual control of Mr. Vicker's wife. As such what transpired Friday evening, even though it was my private residence, was simply an extension of criminal and civil violations that spawn within the walls of this firm. Bill then adds his opinion that any judge would accept that argument and allow a jury to hear all the testimony. Finally Bill asks Kristy how she thinks all of this will play in the court of public opinion.\n\nKristy then glances at Tom and asks that we excuse her and Mr. Weston for a ten minute break.\n\nOnce outside in the hallway, \"Do you think they'll go for it?\" Brad asks.\n\n\"I don't see where they really have any choice. They know that if we go to trial the papers will eat this up. This isn't the kind of publicity a company like this wants to have. I don't think they'll agree to the whole ten million dollar figure though.\"\n\nAbout fifteen minutes later they both come back into the room looking grim.\n\nKristy looks at me. \"Jake, I can offer you six million tops. That is the max they will go for. And they also want you to sign a permanent non-disclosure and a two year non-competitive agreement, as you offered.\n\nI look at Bill and smile. All we really wanted was the five million, and I didn't care personally about the non-competitive clause.\n\nI nod back at Kristy and smile, reaching across the desk to offer her my hand and acceptance.\n\nAfter a few words between Kristy and Bill who needed to get together to iron out the details, Bill and I exit the conference room and walk toward the elevators.\n\n\"Mr Vickers?\" I hear behind me.\n\nBoth Bill and I turn to see Betty Higgins nervously rubbing her hands together.\n\n\"Betty?\" I inquire. \"Is there something wrong?\"\n\n\"Well,\" Betty says. \"Both yes and no.\"\n\n\"What is it Betty?\"\n\n\"It's about yesterday when you were asking me about Mrs. Vickers going into Mr. Schmidt's office?\n\nThe sudden angry look on my face caused Betty to take a step backward. Bill took a small step toward her and said, \"Go ahead Mrs. Higgins, what did you want to say?\"\n\n\"Well,\" Betty says, not sure how to proceed. \"I wasn't surprised that you asked me those questions Mr. Vickers. But there was one question I was surprised that you didn't ask.\"\n\nI look at her puzzled.\n\n\"You didn't ask me how long Mrs. Vickers was in his office yesterday. She did lock the door like I said but she was in there only about a minute, maybe two at the most. And when she came out she looked very angry.\"\n\nI glance over at Bill as he glances back.\n\n\"Thank you for telling me that Betty. I'm sorry if I alarmed you,\" I tell her. \"Is there anything else you would like to share?\"\n\n\"No Mr. Vickers. Well, yes, I'm sorry all this happened to you.\"\n\n\"Thank you Betty, I appreciate that,\" as Bill and I watch her turn and walk away.\n\n\"So?\" Bill asks me.\n\n\"So what?\" I ask back.\n\n\"Yesterday when you found out she went into his office, I could see you finally give up and it was almost like your heart hardened completely against her. Now it's obvious nothing happened in that office yesterday, at least anything sexual. Does this change anything?\" Bill asks.\n\nI look at Bill for a very long moment and then say \"Not a damn thing Bill. Not a damn thing. When I heard those tapes from Tuesday, that finished it for me. I just hadn't realized it yet.\" Just then the elevator bell dinged and the doors slid open. Bill and I entered and I watched as the doors closed for the last time on another aspect of my life.\n\nThursday 4:30 PM\n\nOnce again Bill and I are being ushered into my wife's office. This time at their bequest, although to be honest we would have asked for another meeting anyway. It was time to finish this once and for all.\n\nI notice immediately that Susie looks much better than the previous day, although she is still having a difficult time looking me in the eye. After we sit down Vicky says, \"Jake, Susie has withdrawn her petition for divorce. She recognizes ...\"\n\nVicky is cut short by Susie's hand on her arm.\n\n\"Jake,\" Susie says, struggling but managing to look at me. \"We have a lot to discuss. I have some things to tell you that will be difficult. I've made some grave mistakes in this whole affair. I want to ask you for your forgiveness. I want, no ... I need for you to come back home.\"\n\nI take a very deep sigh. \"There's no easy way to say this Susie. I can no longer do that. I doubt I will ever be able to forgive you and I certainly can't come back home.\"\n\nVicky is shocked, but I notice Susie seems to have expected my response.\n\n\"We've filed for divorce,\" Bill speaks up within the sudden lull, presenting them with copies of the suit and proposed settlement.\n\n\"The settlement is straight forward. Whatever assets were brought into the marriage by both parties will be retained. All assets acquired during the marriage will be split 50-50. There will be no one-time settlement fees and no alimony. We realize that under Texas law Ms. Vickers would be entitled to 50% of all combined assets, but we think there are special circumstances that require a special settlement. It would not be in either party's best interest to have all of the events of the past week brought out in court.\"\n\n\"Jake, what has happened?\" Vicky says stunned.\n\nSusie puts her hand on Vicky's arm to silence her. I realize that Susie still hasn't told her lawyer about any of the things she's been doing with Schmidt. I've had enough.\n\n\"Vicky,\" I say with an acidic tone. \"It's apparent that your own client hasn't told you what she's been involved with, so let me give you a succinct overview.\"\n\nI glance at Susie and she drops her head, staring at her hands again. \"When I arrived home last Friday, after being gone for nearly two weeks and the day before our anniversary, I was seduced and tricked by my wife to sit in a chair and allow myself to be tied up. My wife then proceeded to suck and fuck my very worse adversary ... in a position only inches away from my face. That level of humiliation apparently was insufficient as my wife then demanded I lick my adversary's sperm out of her cunt. When I refused she grabbed my testicles and twisted. When I continued to refuse she twisted my testicles so hard that I passed out.\"\n\nVicky looks at me, then her client, and then back at me, her mouth seemingly stuck open.\n\n\"I regained consciousness over the weekend in a hospital, alone, and informed that I was fortunate they were able to save one of my two testicles. They told me I had only about a fifty-fifty chance of keeping the other one. Fortunately, I was told just this morning that blood flow to that testicle is improving and they no longer think amputation will be necessary.\n\n\"Oh my God,\" I heard Susie say, a horrified look on her face.\n\nI ignored her, concentrating on her lawyer. \"As I was released by the hospital, I was served a TRO by my wife against my own residence. I discovered that all of our money had been removed from our accounts and my credit cards were all reported as stolen.\"\n\n\"On the next day I am served divorce papers and told by my company they wish to fire me. Over the next two days I gather enough evidence to completely shred all the trumped up and forged evidence that had been assembled against me. As bad as this week has been, if nothing else had happened ... I would have still wanted to try and save my marriage.\"\n\n\"Unfortunately that's not the case. On Tuesday the four of us met and we were able to present in just 24 hours enough evidence to cast doubt on both the affidavit and the photographs. I understand that neither of you two could admit to that, yet I know as well as you do that doubts had been created within your minds. Despite those doubts, I've learned that my wife left this office Tuesday evening where she met my worst adversary and fucked him in my bed in my house, as she had been fucking him for the past several days.\n\n\"I first learned of this Tuesday night. Each morning that I have sat here this week trying to get my wife to see that all of these charges were false, she was laughing at me with the knowledge that her mouth, pussy and even ass were full of Schmidt's cum.\" I look over at Bill and nod. Bill reaches into his trusty portfolio and brings out a cassette tape.\n\n\"This is a copy. It's a recording of Schmidt making a phone call from my bedroom on Tuesday night. I'll let you two listen to it on your own time but the gist of it is that Schmidt has made plans for having you gangbanged this weekend. Of course if you still want to do that I suppose you could give him a call.\"\n\nI look at Susie. Tears are rolling down her cheeks. For the first time since I've known her the tears elicit no feelings within me.\n\nAddressing Susie I say, \"Were you crying yesterday because his cum was inside you even as you listened to how he setup this entire thing?\"\n\nI sigh. I've inflicted enough damage for one day. Bill and I should have left then, but I couldn't leave well enough alone. \"I have just two more things to say to you Susie. First, you need to get yourself tested. Schmidt fucks anything that walks. Second, I will always love you, but I can no longer be with you. I don't know who you are anymore. I don't understand how you could have so easily believed I was cheating on you. I don't understand how you could have betrayed me like you did. I don't understand how you turned so vicious. I don't understand how you could continue to see Schmidt even after you had to suspect that I might not have cheated. Do you really have that much vengeance in your heart? Several nights ago I sat in my hotel room thinking about all the questions that needed answers. I still have so many questions but I no longer care about the answers. I think I finally understand that old saying now ... the one that says, \"before you embark on a journey of vengeance, dig two graves\". Susie, you've buried both of us.\""
    ],
    "authorname": "winterfoxx",
    "tags": [
        "adultery",
        "cheating wife",
        "vengeance",
        "revenge"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/dig-two-graves-ch-04"
}