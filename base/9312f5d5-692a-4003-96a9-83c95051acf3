{
    "title": "Two Hundred Dollars Ch. 18",
    "pages": [
        "129 Dollars \n\nOn Sundays, Bailey usually visited Laura for tea in the afternoon. Her parents still went to a church of some kind \u2013 Laura never specified \u2013 but they didn't make Laura go for the afternoon session, so the two girls could talk without worry of Mrs. Anderson eavesdropping. \n\n\"So, did anything happen after I left?\" Laura asked. \n\nBailey nodded, sipping her tea, \"I did another dollar after I got back.\" \n\n\"And?\" \n\n\"We... fooled around.\" \n\n\"But how did you do the spanking?\" Laura wanted to know, her eyes alight as she leaned forward. \n\n\"I straddled him, but facing away.\" \n\nLaura looked up at the ceiling, picturing that, and asked, \"So you could feel his... feel him?\" \n\nBailey sipped her tea again, hesitating a bit before speaking so she could choose her words carefully, \"He made me come like that.\" \n\n\"What?\" Laura's eyes widened as she leaned farther forward. \"While he was spanking you?\" \n\nWith a soft, wistful exhalation, Bailey replied, \"Yes. I... told him when to do it, so it would work out right. I've been doing so many, I couldn't take much more.\" \n\nLaura turned her head slightly sideways to peer at Bailey with suspicion, \"That's not the rule.\" \n\nBailey's cheeks flushed and she looked away, \"What?\" \n\n\"He gets to decide when to spank, not you.\" \n\n\"Well,\" Bailey rolled her eyes. \"He let me time it... if I said, 'please'.\" \n\nLaura let out a simpering moan, \"You had to ask for each one?\" \n\n\"Mm-hm.\" \n\n\"Oh, god,\" she closed her eyes while her knees bounced with excitement, \"I'm doing that next time. And that made you come?\" \n\n\"Right on the fifth one,\" Bailey said. \n\n\"And him?\" \n\n\"He came pretty quick right after,\" Bailey explained. \"I, uh, let him have a free one. Told him he could do it right when he came.\" \n\n\"How was that?\" Laura's eyes widened again as she sucked in air through her teeth. \n\n\"Hard,\" Bailey punctuated the syllable by spearing Laura's eyes with her own. \"I don't recommend it.\" \n\nThey sat in silence for a moment, and Laura took the opportunity to refill their tea cups. \n\n\"Passionate, though, I bet,\" Laura said, probably meaning the force behind that last slap. \n\n\"Uh-huh,\" Bailey agreed, \"That's one word for it.\" \n\n\"It must be nice, though,\" Laura twitched with realization. \n\n\"Nice?\" \n\n\"I just mean that you can give him a gift, and he's not questioning anymore whether it's really a gift or you trying to trick your way into paying him extra,\" Laura pointed out. \n\nBailey hadn't considered that, but Laura had it right. By clearing her strange debt to her friend, Bailey had, from a certain point of view, freed herself. \n\n\"So,\" Laura drawled out, \"Does it make you, you know, wanna go further?\" \n\nBailey smiled and felt her face redden. \n\n\"What?\" Laura asked. \"Have you already gone further?\" \n\nBailey's eyes wandered around the room, \"Maybe a little?\" \n\n\"What's a little? What am I missing? Details!\" Laura insisted. \n\nAm I going to tell her about the shower? Then I have to tell her about wearing a shirt in the shower like a... like a... I don't know. I won't tell her about the shower. Too embarrassing to talk about how embarrassed I am about my stupid chest. Leave that out. She won't get it, not with her boobs. \n\n\"I used my hand on him once,\" Bailey said. \n\nLaura gulped and Bailey realized her friend's eyes had gotten stuck at their widest setting. \"Was it, like, messy?\" \n\n\"All over my butt, yeah,\" she said. \n\nLaura narrowed her eyes, an honest but quiet curiosity coming through, \"Was it sticky?\" \n\n\"Not that time,\" Bailey pursed his lips in memory, wondering if the lack of adherence to her flesh had more to do with the venue than Kent's level of hydration. \n\n\"There was another time when it was sticky?\" \n\n\"In the morning, yesterday,\" Bailey said, \"he was grinding me and it sort of poked out of his shorts?\" \n\nLaura's eyes reverted to their widest state, \"You saw it come out? Where did it go?\" \n\n\"All over my shirt and my stomach,\" Bailey rolled her eyes, \"That was sticky... and cold.\" \n\nBailey exhaled as Laura lowered her eyes in wonder. \n\n\"Bai?\" \n\n\"Yeah?\" \n\n\"I-\" Laura stammered. \n\nBailey waited patiently, knowing how hard Laura found it to ask sexual questions, but also that no amount of prodding could speed things up. Sometimes, you just had to give your friends time to work past their issues. \n\n\"How hard is it?\" \n\n\"His, uh, erection?\" Bailey thought it best to use grown-up sounding words. \n\nLaura gulped and nodded, her anxiety preventing her speech. \n\n\"You felt it didn't you, sitting in his lap?\" \n\nLaura nodded, \"That was through his pants, though. I mean, when you straddle him.\" \n\nBailey tried to stifle her laugh, but didn't quiet manage it. \n\n\"Come on,\" Laura pleaded. \"You know I've never done any of that stuff.\" \n\n\"I know. I know. I'm sorry,\" Bailey held herself to a smile, \"It's hard enough and it feels nice, if you like that feeling.\" \n\n\"I do,\" Laura replied hopefully. \n\n\"But I don't know what you want me to compare it to,\" Bailey shrugged, looking around the kitchen hopefully. \n\n\"I don't know,\" Laura looked around too, and jerked her chin toward the kitchen counter, \"Say... that dough roller there.\" \n\n\"That's solid wood,\" Bailey raised a sarcastic eyebrow. \n\n\"So...\" Laura trailed off. \n\n\"It's not that hard,\" Bailey said, trying to hide her surprise at her friend's innocence. \"More like, I don't know... I don't know.\" \n\nBailey scratched her head and gave up, \"You'd just have to feel it and then you'd know.\" \n\n\"Oh,\" Laura said, a worried look on her face. \n\nOh, great. What do I do now? \n\nSearching through herself as deeply as possible, Bailey couldn't find any reasonable objection to the image of Laura straddling Kent or handling him. \n\nI think I'm okay with that. I think. And she's my friend, and she's curious, and Kent's a pretty safe guy. \n\n\"Do you want to find out?\" Bailey asked. \n\nLaura looked up hopefully, \"That's okay? With you?\" \n\nBailey shrugged again, \"Sure. I mean, we get to choose how he spanks us right?\" \n\n\"Right,\" Laura twitched, seizing on that certainty. \n\n\"So the next time you're over,\" Bailey drawled, \"you just tell him to lie on his back and ... you can sit on him.\" \n\n\"Mm,\" Laura moaned, \"So he can spank me and I...\" \n\n\"Can feel how hard he is,\" Bailey concluded. \n\n\"Okay. Okay,\" Laura said. \"When?\" \n\n\"Um, not tonight,\" Bailey said. \"I think Carson'll be out Monday, though, if you come by early enough.\" \n\nI need to warn Kent about this, Bailey thought, I don't know what will happen \u2013 not exactly \u2013 but he needs to understand Laura before she shows up. \n\n============================= \n\nAround four in the afternoon, Bailey had arrived home. Walking past Kent's door, she'd greeted him politely but hadn't entered his room. Instead, she stopped by about an hour later. \n\n\"Too bad we can't do anything while Carson's here,\" she remarked, thumping herself down on his bed and resting while staring at the ceiling. \n\n\"Might be too loud,\" Kent agreed, \"especially if you take it on bare skin.\" \n\nShe probably hasn't considered how much quieter it is if she keeps her jeans on. \n\n\"Yeah, but I can't think of anything I'd do besides spanking,\" Bailey kept her voice low, so it wouldn't carry down the hallway. Even with Carson's door closed, she tended to keep her guard up. \n\nKent thought about that a bit, \"Yeah, me neither.\" \n\nNot that he couldn't really think of anything, but most of the things he thought about tended to cross a line Bailey clearly didn't want to cross. \n\n\"As soon as he's gone though,\" Bailey let her voice trail off suggestively. \n\n\"Your butt is mine?\" \n\n\"Pretty much.\" \n\nShe lay on his bed for a bit, looking up at nothing, and Kent watched her chest rising and falling, the shape of her body under her shirt indicating she had a very supportive bra helping her out. \n\n\"About Laura,\" she said suddenly. \n\n\"She alright?\" \n\n\"Oh, yeah,\" Bailey assured him. \"But, y'know, curious.\" \n\n\"Curious?\" \n\n\"About you.\" \n\n\"Me?\" \n\nStill lying down, Bailey turned her head to look him in the eyes, then lowered her gaze to his crotch, then back to his eyes. \n\n\"I see,\" Kent spoke slowly, \"And?\" \n\n\"The next time she comes over,\" Bailey said, \"I need you to... just sort of be aware. She wants to, you know, feel you.\" \n\n\"Oka-ay,\" Kent replied, sucking in a breath through narrowed lips. \"And do we know how she's going to do this?\" \n\n\"By sitting on you,\" Bailey said. \"So, uh, wear sweat pants, I guess.\" \n\n\"Is she... um... going to get off like that?\" \n\nBailey shrugged. \"I don't know. I don't know how... or even if... she does her homework, okay?\" \n\n\"Her homewo-, oh right,\" Kent took a moment to recognize the euphemism for self pleasure. \n\n\"I'm just warning you,\" Bailey said. \"I think she'd be here tonight if I hadn't made an excuse.\" \n\n\"Poor thing,\" Kent said, meaning it. \n\n\"Yeah, you feel real sorry for her when you're spanking her,\" Bailey rolled her eyes hard. \n\n\"I'll still spank her,\" Kent said. \"She's got a nice ass, too. However, I was referring to all the stuff she's missed in general.\" \n\n\"Yeah, exactly,\" Bailey said. \"And here we are, catching her up as gently as we can.\" \n\n\"I just wonder-,\" Kent cut himself off as they heard Carson's door open. \n\nThey waited silently as he came up the hall and peeked in their door, a bit sleepily. \n\n\"Hey guys,\" he muttered. \n\n\"Carson,\" Kent replied. \n\n\"Gonna hit the shower,\" he nodded, his eyes half-lidded. \"Later.\" \n\nThe moment he closed the bathroom door, Bailey leapt up and slapped three marks on the white board. She waited with the bedroom door open until she heard the water running in the bathtub. \n\n\"While we have time,\" she said to Kent, and held out her hand. \n\n\"Where are we going?\" he took her hand. \n\n\"My room, obvi.\" \n\nBailey dragged him after her in a rush, closing and locking her bedroom door behind him. \n\n\"Quick, quick,\" she said, unbuttoning and dropping her jeans to the floor, revealing the lacy, somewhat transparent, white thong. \n\n\"Crap, wrong bra,\" Bailey said as she ditched her shirt. \n\nShe blushed a bit and turned her back on him. The bra she currently wore, a simple white number with solid cups, unlatched at the front. Kent watched from behind as she slipped it off her shoulders and fetched the transparent one he'd bought her from the top of the laundry pile. She seemed unaware, however, of where she'd left her mirror leaned against the wall. As she reached to grab the bra and put it on, he caught a very brief, full on view of her little breasts with their tiny, perky nipples. \n\nThe moment passed and she donned the new bra. \n\n\"Ready?\" she asked, turning to look at him with her face gone pale. \n\n\"Yeah, sure,\" he replied. \"Are you? We have a good ten minutes or so.\" \n\nBailey closed her eyes and made a conscious effort to slow down her breathing. When she opened her eyes, she caught Kent staring at her breasts, and a faint giggle came from her lips. \n\n\"Sorry,\" she said, \"it was just so important to warn you about Laura, and then we had to move fast-\" \n\n\"You don't need to apologize,\" Kent pointed out as he sat on her bed. \"You friend is important to you. I get it.\" \n\n\"Yeah,\" Bailey took another quick breath and sat down in her desk chair to calm down. \n\n\"I just hope I'm doing the right thing for her,\" Kent said. \"I mean, you could handle this debt all on your own, but she seems to be enjoying herself.\" \n\nKent shrugged, at a loss for words, but took some time to look at Bailey's breasts. Through the sheer bra, in the afternoon light coming through the window, her nipples came through clearly, easily visible to his eyes. Focused on her thoughts, Bailey didn't notice him staring. \n\n\"She definitely is,\" she agreed, rotating her chair back and forth. \n\nKent's eyes wandered down to her thighs. \n\nWatching the way the muscles in her thighs twitched as she used them to control the chair, he spoke in a slightly droning voice, \"If you know what she's going to do, and you're okay with it, then so am I. But she can tell me what she wants, too.\"  \n\nLeft, right, left, right. \n\n\"That would be better, actually, you know,\" Kent added. \"If she could talk to me.\" \n\nLeft, right, his brain started to hypnotize itself with her leg motion. Left, right. \n\n\"I'm sure that'd be cool,\" Bailey agreed as she stood up. \"Okay, ready.\" \n\n\"How you want it?\" he snapped out of his reverie. \n\n\"Over your lap,\" she said, already moving to lay herself across his thighs, immediately arching her back and lifting her hips thigh. \n\n\"Still kinda red from before,\" Kent traced circles over the darkest parts of her cheeks. \n\n\"It's a rough schedule,\" Bailey acknowledged. \"The price of handing my butt over to you.\" \n\nGiven the angles, and the tightness of her ass in this bent over position, the lowest part of her right cheek loomed far too tempting in front of him. He placed his hand there and began striking. \n\n\"One,\" she squeaked out. \"Two!\" \n\nThe next two landed in the same spot, freshening up the darkest place on her flesh. \n\n\"Hoo,\" she whistled and got up on her knees, rubbing her right cheek. \"Three and four.\" \n\n\"Two more dollars to go,\" Kent said. \n\n\"Yeah,\" she said, and looked around the room. \n\n============================= \n\nBailey stood up, turning her back to Kent. \n\nI've got to do one where he can see my boobs, she realized, although he's already been staring at them enough, why should it matter? \n\nBut they had a rule, and she had to follow the rules. If she didn't, Kent would catch her and force her to do it right. \n\nWhat if I broke the rule? Would he make me do something else? \n\nShe remembered the time Kent had caught her out for doing the inspection wrong. He had forced her to drop her pants a second time, just to make sure she knew that he knew. \n\nDelicious, she thought, just like when I got caught forgetting to count properly. \n\nBailey did not see a way, however, to make such a mistake today. They'd made the 'bra and panties' rule so recently, she couldn't possibly pretend to forget it. \n\nWhat else can I do? \n\nShe put it aside for a moment, knowing they didn't have time to get complicated. \n\n\"Over here,\" she said, waving him out of his place on her bed. \n\nTurning away again to face the little mirror, she put her hands on her knees. \n\n\"Can you, um, see my breasts?\" she asked as he came to stand beside her. \n\nProbably should have gone with 'tits' there, Bailey realized, noting how rarely she used either word in her head. It's almost always 'boobs' in my head and when I'm talking to Laura \n\n\"Your arm's in the way a bit,\" Kent said. \n\nBailey took her hands off her knees, but found she couldn't lean over very far. \n\n\"Here,\" she said, impulsively grabbing his left hand and pulling it under her body, just as Laura had, so his hand cupped her breast. Then she folded her arms behind her back, trusting him to hold her up. \"Now, quick.\" \n\nKent's grip on her breast tightened as she let him have all the weight of her upper body. She squirmed a bit, wiggling her hips and moving her chest so that her nipple shifted into just the right place. His hand felt warm, but her nipple had hardened anyway from the cool air in the room. \n\nWill he do it like he-, Bailey gasped suddenly as Kent caught her nipple between thumb and forefinger, gently squeezing the little nub. Oh, yes. \n\nThe first spanking, a surprise she should have predicted, came right on the tail end of her gasp. \n\nNailed it. \n\n\"Five,\" she said, feeling the pressure on her nipple release and increase again. \n\nAs the sensation forced tension through her body, he slapped her right cheek again. \n\nIt's going to be so red over there. \n\n\"Six,\" Bailey spat out. \n\nHer body threatened to stop functioning. She focused as hard as she could on keeping her knees from buckling, locking her thighs and calves in position, and letting the rest of her body go limp, depending entirely on his arm. \n\nKent kept his grip on her nipple without releasing the pressure, and started to slowly twist it. \n\nBailey moaned, her legs starting to shake, as the next spanking struck. \n\nAt least he's striking higher, a small part of her mind noted. \n\n\"Seven,\" she counted. \n\nHe gave her one, last, hard pinch, crossing her pain threshold for a fraction of a second, and spanked her again. \n\n\"Eight,\" Bailey cried out, her hands going to her knees to brace herself. \n\nHow embarrassing if I'd fallen to the floor. \n\n\"You okay?\" Kent asked. \n\nPanting feverishly, sweat putting a shine on her forehead, she nodded. \n\nOh, god, she thought, I want my little corduroy pillow. \n\n\"Last dollar,\" she muttered, and crawled up on her bed, presenting herself in profile to Kent, her left cheek closest. \n\nThe position put her favourite pillow just out of her reach. The moment Kent left, she'd get on that thing like a cat in heat. She also made sure to move her body back from the edge of the bed in an attempt to put her right cheek out of range and steer his hand towards her left side. \n\nI don't know if I can keep doing three every day if he doesn't spread them out better. \n\nAt least, while he'd groped her, he'd had to go high on her right cheek. That helped somewhat. \n\nBailey arched her back, turning her right cheek away toward the wall, and looked at Kent. \n\n\"Whenever you're ready?\" she prodded. \"We don't have all day this time.\" \n\nKent shrugged and stepped over. As she'd hoped, he laid his hand on her left cheek, perfectly in the centre. \n\n\"You're in a hurry?\" he asked. \n\n\"Yes,\" she hissed as she locked her hips in place, knowing full well what he meant to do. \n\nFour of the hardest smacks he'd ever delivered landed on her left cheek, cracking out loud echoes that cascaded on top of each other. She moaned through the body-shaking, stinging pain, not bothering to try to speak until the burning from the fourth one started to fade. \n\n\"Nine,\" she pronounced clearly, \"Ten, Eleven and Twelve.\" \n\nWith a sharp exhalation, she sat up on the bed, put her feet on the floor and faced him. Impatiently, she nodded at the door, \"Before Carson is done?\" \n\nInstead, Kent sat back in the chair, \"We have a minute or two.\" \n\nBailey peered at him, knowing his style didn't include staying where she hadn't welcomed him. \n\n\"What?\" she asked. \n\n\"Well,\" he said, \"technically, we're not done.\" \n\nBailey turned her head slightly to give him a sharp eyed stare, \"Why not?\" \n\n\"The rule was,\" Kent pointed out, \"That I need to be able to see your breasts for one whole set of spankings.\" \n\n\"Sure,\" she drawled out. \n\n\"And I couldn't,\" he squeezed his right hand in mid-air. \n\nShe glared at him in disbelief, feeling her jaw hanging open. \n\n\"You were groping me!\" \n\n\"But not seeing you,\" he pointed out, \"Unless you want to add, say, 'feeling you up' to the list of ways you're paying your debt off.\" \n\nA jarring alarm bell went off in her head, forcing her eyes wide. \n\nProstitution! the klaxon cried out. I'm not a prostitute! \n\n\"Oh,\" she whispered, \"So...\" \n\n\"Either you owe me three spankings,\" he said, \"Or?\" \n\n\"Or what?\" Bailey realized Kent wanted her to offer something, but her brain had long since shutdown in its urgent need to get her to start humping her corduroy pillow. \n\nKent tilted his head back and forth as he realized he would have to come up with the idea himself. \n\n\"Alright,\" he said. \"You took away, let's say, half a minute of me seeing part of your body. So I get half a minute of seeing something extra.\" ",
        "\"Extra?\" she asked, shivering. \n\nI broke a rule, and he's calling me on it. And he doesn't want more spankings. He's going to make me do something else. \n\n\"Yeah,\" Kent smiled, \"Sit just as you are now, but lose the bra or the panties. Your choice. That'll even it up.\" \n\nI have to follow the rules. And somehow I broke the simplest one, the newest one. And he caught me. \n\nA delicious thrill went through her, getting trapped like that. He'd picked the worst possible time to point out her mistake, right as she desperately wanted to drive herself to orgasm, even as the unknown variable of Carson's shower threatened to curtail their time. Bailey knew she couldn't choose the easy way out. Telling him to just spank her three more times felt like cowardice. \n\nBut which half? Top or bottom? He's seen one, but never the other. Am I ready? \n\nOn the one hand, it felt like the perfect time. On the other hand, the angles left no room for subtlety or a slow reveal. She'd have show him her breasts dead on, and just sit there... \n\nNo, not today. Not yet. \n\nBailey hooked her thumbs on the waistline of her panties and lifted her hips just enough to slide the white lacy affair over her hips. From there she let it drop to the floor. She kept her feet exactly where she'd planted them when she sat up. \n\n'Sit just as you are now' is what he said, and Bailey intended to follow that rule perfectly. With her feet shoulder width apart, it left space between her thighs, which meant he could see everything one could see from the outside. \n\nI'm not going to flinch, she thought, looking him in the eyes, watching his own gaze slide down her body to examine her pussy. I just trimmed it back, so he can see my lips through my hair. I hope I'm not leaking enough that he can see that. \n\nKent lowered his head to lean forward and Bailey felt the first prick of self-consciousness at his unusually frank scrutiny. \n\n\"Having fun?\" she retorted, stiffly forcing herself not to close her thighs against this intangible intrusion. \n\n\"Yes,\" he smirked, but did not meet her eyes. \n\nShe watched his head move from side to side, as if trying to memorize her from every angle. \n\nMy thighs aren't that wide open, Bailey reminded herself, fortifying her legs as they tried to collapse of their own volition, there aren't that many points of view. \n\nOn that score, Kent showed her up. He stood up, walked around and sat beside her, still looking down into her crotch. As he drifted around behind her, her heart started pounding and the muscles in her legs shivered rebelliously. \n\nWhat happened to all the air in this room? Why can't I breathe any of it? \n\nHis breath traced over the back of her neck, just under the fringe of her shoulder length hair. \n\nTouch me. Oh, god, anywhere. Just touch me somewhere. \n\nBut touching didn't factor into this particular deal anywhere. Instead, Kent moved around in front of her again, backing away and sitting on the chair, still looking at her pussy. \n\n\"Time's up?\" she asked through gritted teeth, and never had anyone layered so much sarcasm and cynicism into two words. \n\nShe did not move her feet. \n\n\"We're good,\" Kent declared. \n\nIn a flash, Bailey leaned over and pulled her panties back up into place. \n\n\"Alright,\" she declared, pointing at the door, \"Before Carson finds out what we're up to.\" \n\nKent shrugged, sketched a probably ironic bow, and unlocked the door before slipping out quietly. \n\n\"Bastard,\" she hissed, locking the door behind him. \n\nA moment later, she seized her pillow and jammed it into her crotch. \n\nOh, that was awesome, Bailey's memory called the last ten minutes up perfectly as she knelt on her bed and then bent over so her ass stuck up in the air, I was looking for a rule I could break and he found a violation I hadn't even noticed! \n\nHer body starting humping the pillow and she felt her lips slide past each other with all the juice that had leaked out of her over the past several minutes. \n\nEven better, he groped me. He squeezed my breasts and enjoyed squeezing them. He played with my nipple just like he did with Laura's. There's nothing wrong with my breasts. \n\nNot only did she feel vindicated about her chest, she also remembered his chilling examination of her lower body. \n\nHis eyes, she thought, his eyes just raking over my pussy, crawling over my skin. And I just had to sit there, wearing nothing but this see through bra... \n\nBailey held her moan to a low, throaty growl she hoped wouldn't penetrate the walls, even as the corner of the corduroy pillow slid down her panties to partially penetrate her vagina. The hard edge of the seam pushed against her clitoris at the same time, and she repeatedly drove her hips down. \n\nHer body shuddered into orgasm, blanking out her mind for some unknown period of time. When she regained awareness, she lay on her side, the pillow loosely resting between her thighs, a small wet streak of her juices having left a dark spot at the crotch of her panties."
    ],
    "authorname": "xtorch",
    "tags": [
        "spanking",
        "spank",
        "nudity",
        "masturbation",
        "bra",
        "panties",
        "transparent",
        "rules",
        "debt",
        "nipple"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/two-hundred-dollars-ch-18"
}