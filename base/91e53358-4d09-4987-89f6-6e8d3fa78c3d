{
    "title": "The Designer Ch. 17",
    "pages": [
        "My watch alarm buzzed at 6:45 a.m., and I quickly shut it off. I didn't want to wake up my sleeping companions. I need not have worried, because the bed was empty. As I yawned and wondered where my sleeping partners had run off too, I felt the covers being pulled off of me. I looked down and saw Alyssa yanking on the comforter.\n\n\"Time for a shower, J!\" she smiled.\n\n\"Are you taking one with me?\" I asked, my morning erection throbbing.\n\n\"Of course,\" she smiled, and then walked over to the side of the bed pulling me by my arm. \"But we cannot dilly-dally, Kelly is making you breakfast.\"\n\nI made a grumpy noise, still shaking the cobwebs from my brain as she pulled me into the bathroom. She started the shower, letting the water heat up. I pulled out a couple of towels and hung them next to the door.\n\n\"C'mon\" Alyssa said when the water was warm enough, \"When is your final?\"\n\n\"8:30\" I said flatly, and then sighed as the hot water pelted my skin.\n\n\"Then we have enough time for this,\" Alyssa said kneeling and taking my flagging cock in her hand.\n\nShe lifted her eyes to mine as her mouth surrounded my cock. I locked eyes with her feeling her willingness and love. I closed my eyes as the steamy water hit my chest, Alyssa's lips and tongue invigorating my erection. I combed my fingers through her brown hair, now soaked with the water from the shower. Her hair was plastered to her skin, drawing my eyes down to her full breasts that bobbed as she moved her head back and forth. I was soon gasping with desire, recapturing her loving eyes with mine. Her eyes smiled as she brought a hand up to cup my balls, squeezing just firm enough to cause me to groan.\n\n\"Ohhh Alyssa, that feels wonderful.\" I sighed.\n\nShe pulled back, holding my head in her mouth while her other hand stroked my shaft. I suddenly felt my need increase and my fingers curled through her hair. My hips flexed pushing my cock into her mouth. She relaxed her jaw, and sucked. I started moving my hips faster; fucking her open, willing mouth. Her tongue flicking along my shaft and teasing the head on my back stroke. Soon my desire boiled over and I thrust hard. Moaning my climax, my cock jerk and spurted into Alyssa's mouth. She started swallowing, taking my length deep in her mouth. Milking my cock with her sucking. I shivered with passion.\n\nWith a satisfied grin, Alyssa stood up and wrapped her arms around my neck. She kissed me deeply and I tasted my tartness on her tongue. She wordlessly grabbed the soap and started to lovingly wash me. She started with my chest and arms, turning me to apply the soap to all the parts of my body. I tried to wash her, but she shook her head.\n\n\"This is for you, my love.\" Alyssa said softly, \"You need to be ready for your test. Now go dry off, Kelly has breakfast waiting for you.\"\n\nI stepped out of the shower, feeling clean and refreshed, and dried off. I went to my armoire and found that one of the girls had laid out clothes for me on the chair in front. I put on my clothes, wondering when they had managed to do all this without me noticing.\n\nI walked up the stairs to the main floor kitchen. The smell of fresh biscuits and sausage filled my nostrils. Kelly was dressed in one of my tee-shirts that hung loose like a short dress on her much smaller frame. She was busy frying eggs just as I liked them. She turned and greeted me with a kiss.\n\n\"Go get started on your coffee,\" Kelly said with a smile, \"I'll have your breakfast in just a moment, Sir.\"\n\n\"Sir?\" I asked raising an eyebrow.\n\n\"Mmmm,\" Kelly said with a smile, \"I really liked that submission thing we did the other night. I feel like I'm taking care of you properly when I call you Sir.\"\n\nI chuckled, \"You both are taking great care of me, Kelly. But I'm not sure I'm comfortable being called Sir by my girls.\"\n\n\"Maybe you'll grow to like it Jeremiah, Sir.\" Kelly teased, \"Now go sit down.\"\n\nI went and sat down at the table. A steaming cup of coffee was waiting with my notes from last night stacked neatly beside it. I sipped the steamy brew as I flipped through my notes refilling my brain with what I'd studied the night before. After a couple of minutes, Kelly slid a plates of eggs, sausage, biscuits and gravy in front of me. She kissed me on the cheek and massaged my neck.\n\n\"Have a good exam, Jeremiah, Sir.\" Kelly said with a giggle, and then disappeared back down the stairs.\n\nAlone, I finished studying while I ate my breakfast. In the back of my mind I appreciated the attention of both my girls, and tried to figure out how to repay them for their kindness. I checked my watch, and realized I had about 30 minutes to walk across campus. I helped myself to another cup of coffee, pouring it into a stainless steel mug. I collected my books and notes, and left for my exam.\n\nOn the way I ran into Jerry, looking a bit tired and haggard as he trudged across campus.\n\n\"How come you look like a million bucks,\" Jerry asked with a slight grin?\n\nI had to brag, \"My girls took care of me this morning.\"\n\n\"Girls?\" Jerry asked, then whistled, \"Man you have all the luck.\"\n\n\"Why don't you have a girlfriend, Jer?\" I asked as I sipped at my coffee.\n\n\"I never know how to talk to a girl,\" he said.\n\nI scanned him quickly and promised myself to help Jerry later. He really was a nice guy, he just needed a bit more confidence. He'd make any girl a nice boyfriend, I knew he'd be considerate, if not worshipful to any female attention.\n\nWe walked to the classroom, and soon were in the middle of the exam. It wasn't difficult as much as it was time consuming. Since we were allowed notes, we had to develop an entire software design plan by hand given a rough specification. We had to choose between object-oriented design, or a more traditional modular design. I went with a traditional modular approach, since that is what I'd focused more on in my studies. There really wasn't an incorrect answer since both could do the job given the specification. It was just a matter of filling in the structure with the details. Two hours later I was done and I handed in my exam and started walking back home.\n\n\"J! Wait up.\" I heard a few minutes later.\n\nI turned and saw Jerry jogging towards me. I waited for him, just outside the memorial union. I wanted to get back home to show my girls some of the appreciation they deserved, but since Jerry was a friend, I waited to see what he wanted.\n\n\"Hey man,\" he started catching his breath, \"I'm done with finals, want to hang out later?\"\n\nI figured he was wanting me to come over to play video games like we usually did.\n\n\"I have a lot of work to do back at the house. We were supposed to move all the furniture out of the upper floor yesterday and got sidetracked.\" I replied, then remembering I was engaged.\n\n\"Oh, maybe I can come help?\" Jerry asked.\n\nI saw his eyes light up, and I realized that he really wanted to visit my house. Probably wanted to see more of Kelly. I thought about that for a second, and remembered my bragging statement about my girls taking care of me this morning. I cursed at myself, because I'd let my guard down and again revealed more of my relationship than I intended. I did need help moving some furniture, but I knew I'd better ask the girls first before I just brought Jerry over unannounced.\n\n\"Well maybe,\" I answered, \"I need to check with Alyssa and see if that it's okay with her. Go home and eat some breakfast, I'll give you a call after a bit.\"\n\n\"Cool,\" said Jerry with a smile, \"I'd love to have something to do, the rest of the summer seems mind-numbingly boring.\"\n\nHe headed off towards his dorm, and I finished the short walk home. I entered the house and dumped the backpack by the door. Kelly was on the phone on the sofa, and Alyssa was curled on the opposite couch sipping tea. Kelly was wiping her eyes as she spoke to the phone.\n\n\"Oh Mom, I'm so sorry.\" she said with concern in her voice, \"I'm sure you and Dad can work it out.\"\n\nI looked at Alyssa and raised an eyebrow. She looked at me and I felt emotions of sadness and concern. I had no idea what was going on, but pushed back a bit of comfort towards both of the girls.\n\n\"We can all talk about it tonight,\" Kelly said, \"7 PM at the restaurant. ... Right. I can't wait to see you and Dad. ... I love you Mom.\"\n\nI sat down next to Kelly, \"What's wrong Kel?\" I asked as I pulled her close.\n\n\"My parents had a big fight.\" Kelly said putting her hand on my chest, then lifted her hand to touch my pendant. \"It's been happening more and more often, since I left for school. I was the youngest, and I'm afraid with me gone they don't have much in common anymore.\"\n\nAlyssa slid beside Kelly on the opposite side, and hugged her close, \"I'm sorry Kelly, but you know it's not your fault. Sometimes people just grow apart.\"\n\n\"I know,\" Kelly said, \"It just sucks.\"\n\nWe all hugged in silence, not sure what to say.\n\n\"Could you help them, Jeremiah?\" Kelly said, \"I mean, you've made me so happy.\"\n\nI stiffened a bit. I was still uncomfortable with the way I'd taken advantage of Kelly. She and I had never talked about that night other than remembering the physical attraction followed by uninhibited sex. I didn't know if she knew how much I'd changed her in an instant. It was my mistake, and my recklessness had turned her into a sex-starved slut. It was only after we met a week later at a hotel that was I able to change her back into a normal person. Alyssa helped me, and we both thought we'd done a fair enough job.\n\n\"Kelly, do you know what I've done to you?\" I asked, finally comfortable enough with her to properly address the subject.\n\n\"You've fixed me, J\" she replied simply, \"You made me whole.\"\n\n\"I broke you first,\" I reminded, \"Remember the week between when I left and the hotel? What do you remember about that week?\"\n\n\"I was out of control. Horny all the time,\" Kelly recalled blushing, \"I mean I still get horny now, especially around you, but then I couldn't get enough sex. I remember Lexi and I had a lot of sex, with Carmen too. There was also a strange incident with my friend Jenn. I think Lex and I almost killed her.\"\n\nHer voice softened as she remembered the feelings. She looked up at me, a bit shocked and saddened.\n\n\"Are you saying you made me like that,\" she asked softly.\n\n\"Yes, Kel,\" I said with remorse, \"I didn't know what I was doing then, and I made a mistake. First with you and then with Lexi too.\"\n\nShe shrunk back from me, leaning into Alyssa. Looking up at me with a bit of surprise and hurt. She searched my face trying to process her feelings about the revelation. Alyssa hugged her carefully.\n\n\"Jeremiah confessed it all to me when he got back home, Kelly,\" Alyssa explained. \"You need to know how devastated he was over what he had done. He didn't have time to repair what he had done before he had to leave. He enlisted Carmen's help to look over you until he could figure out what to do. He also asked for my help.\"\n\n\"Did you change Carmen too?\" Kelly asked, \"Or Alyssa?\" she looked over her shoulder at Alyssa her eyes wide with unanswered questions.\n\n\"I didn't change Carmen until we met at the hotel,\" I answered honestly, \"that was the first time I'd used my power specifically to help someone. Remember the first night when Carmen was crying?\"\n\nKelly nodded, and I continued, \"I made a small change to Alyssa, while I was figuring out how to use my powers.\"\n\nAlyssa smiled, \"Yeah, Kelly, I used to be a lesbian,\"\n\n\"Really?\" Kelly asked in a voice that wavered between shock and sadness, \"and you're okay with the change?\"\n\nAlyssa nodded, \"I really believe that Jeremiah fixed me too, I loved him so much. But because I was a lesbian, or at least had a strong moral understanding of same-sex attraction, I never felt like I could truly be with him. I was a wreck trying to reconcile the two opposing parts of me. Jeremiah's little tweak freed me to love him completely.\"\n\nKelly smiled and reached for Alyssa's hand. Alyssa hugged her back.\n\n\"What I can do is adjust people's moral profile, as well as their self-control. My first... I hate to say mistake, because it brought all of us together... but I over-reached and removed all your morals, and left you with little self-control. You simply desired things that felt good.\"\n\nI tried to speak as plainly as possible. As much as I didn't want to have this conversation, I needed Kelly to fully understand what I could do, and what I had done to her.\n\nKelly looked at me, and nodded, \"Okay, I understand how that feels like. I continually felt the need to be happy. What made me happiest then was sex, eating yummy desserts and sleeping.\"\n\n\"Those are normal desires for everyone, Kel,\" Alyssa explained, \"Without any moral constraints; I would do the same thing, all day every day. Everyone would focus on what gave them pleasure.\"\n\n\"So the weekend trip, you fixed me?\" Kelly asked, \"Me and Lexi?\"\n\nI nodded, \"I had to, and I couldn't leave you and Lexi like that. Alyssa helped me come up with questions so we could try to figure out what you remembered about your morals. And over our meals I slowly readjusted your moral curve to something that was close to normal.\"\n\n\"Everyone seems to be able to adjust their own morals over time,\" Alyssa explained, \"by evaluating their experiences, and how things change. Jeremiah can simply speed that up, or reinforce someone's self-control.\"\n\n\"So sort of like hypnosis, or mind control?\" Kelly asked a bit unnerved.\n\n\"Not really, you are still free to make choices. Jeremiah can change the inner conflicts, helping you to make certain choices easier.\" Alyssa explained, \"Someone with Jeremiah's powers if used selfishly could really mess with people's minds. We are lucky that Jeremiah had a pretty intact morality already, before he learned of his powers.\"\n\n\"I didn't know I could do any of this, until that night in your dorm,\" I confessed, \"I reacted impulsively then, and since that night I've been very careful about using my powers. I'm not always comfortable about having them, quite honestly.\"\n\n\"Why do I feel so attached to you?\" Kelly asked sliding back against me, \"I think I understand more, and accept that you made a mistake.\" She looked up at me, \"I forgive you for that, I really am happy to be with you, but I don't know exactly why I feel that way. Did you force me to feel this way?\"\n\n\"No,\" I answered, \"at least not consciously. Alyssa and I think it's a combination of making changes as well as a sexual connection that has bound us all together.\"\n\n\"I think the combination of the sexual energy as well as intimate knowledge of your emotions creates a strong pair bond.\" Alyssa theorized, \"I don't think Jeremiah is aware of how strongly he's bonded himself to each of us. I know he's happy with the result, but I don't think he knew what he was accomplishing. I do think that he's affected his own bonding as much as he's changed each of us.\"\n\n\"So we're all stuck with one another,\" Kelly said flatly. Then smiled, her tone indicating that she understood. \"I don't know that I'm completely comfortable with what happened. I do know that I'm reassured knowing that you, Jeremiah, seem so intent on making it right. I also know that I'll happily stick with the both of you as we all figure this out.\"\n\n\"I'm glad to hear that, Kelly,\" I said with a smile, \"I only want what's best for each of us.\"\n\n\"So, could you help my parents?\" Kelly asked, \"Or would that bond you to them too...\" she made an uncomfortable face as she considered the implications.\n\n\"I don't think I'd become bonded to them,\" I started, \"I was able to change another couple, and haven't felt the need to be with them, as strongly as I've felt with you.\"\n\nAs if on cue, the phone rang.\n\n\"Hello?\" Alyssa answered the phone, \"Oh Hi, Ron. Yeah, Jeremiah is right here.\"\n\nShe handed me the phone with an odd expression on her face. I picked up the receiver feeling some trepidation.\n\n\"Hi Ron, how are things?\" I asked, not sure if I wanted to know the answer.\n\n\"Things are great, Bro! I was just feeling bad about leaving so suddenly.\"\n\n\"Don't be concerned, Ron, I'm glad you are getting along so well with Robin.\"\n\n\"That's part of why I called,\" Ron continued, \"I got done with my exams yesterday, and Robin and I are looking for something to do. She asked if you guys needed any help with your house. We left so suddenly, she felt a little bad about leaving all the cleaning to you.\"\n\n\"Uh, well actually,\" I continued, thinking about my conversation with Jerry after the test, \"We do need to move a few pieces of furniture down from the upstairs. I could really use your help.\"\n\n\"I'd love to help, tell me the time, and we'll be there.\" Ron said earnestly.\n\n\"How about after lunch?\" I offered, \"Just come by we'll figure it out as we go.\"\n\nSure thing, pal.\" Ron replied and hung up.\n\n\"Okay, that was weird,\" I said looking at Alyssa.\n\n\"Who is Ron?\" Kelly asked.\n\n\"Ron used to live in the room that is now your office,\" Alyssa explained, \"Jeremiah fixed him and his girlfriend to be attracted to each other. So Ron would move out and move in with Robin.\" Alyssa looked at me, \"What did he say?\"\n\n\"He just felt bad about leaving so suddenly, and wanted to know if we needed any help with the house.\"\n\nAlyssa thought for a moment, then looked up at me, \"I guess that doesn't really mean anything. We'll have to see what happens when he gets here.\"\n\n\"I'm also going to invite Jerry over to help move things.\" I told the girls, \"It would go smoother with more help. Are you both okay with Jerry helping?\"\n\nThe both nodded, then Kelly looked at me, \"Could you help my parents, J? I really don't like them fighting all the time.\"\n\n\"I'll try, if I can, Kel,\" I promised, \"I'll need Alyssa's help though. She knows more about how my powers affect people's minds and psyches than I do.\"\n\n\"We'll see what we can do,\" said Alyssa.\n\nI gave Jerry a ring and made plans for him to come over after lunch. The girls went into the kitchen to make sandwiches, while I chatted idly with them. The conversation shifted to what furniture needed to go where to help expedite the changes to the top floor. We agreed to empty as much of the furniture into the other main floor bedroom, using it as storage for all the spare furniture from both the basement and the upper floor. Then we talked about what else needed to be done before Lexi and Carmen got here the next evening.\n\nAs we ate lunch, Alyssa suddenly stopped eating, \"Damn, that might be it!\" she said and stood up. \"Jeremiah where did we put my books?\"\n\n\"I think they're in Kelly's office,\" I replied a bit confused, \"Why?\"\n\n\"Limerence,\" Alyssa said cryptically and walked towards the office.\n\n\"I really don't know why a limerick is important right now,\" Kelly said with a smile.\n\n\"There was a young man from Nantucket...\" I started, and we both cracked up laughing.\n\nKelly and I smiled and continued eating. Alyssa walked back in reading a book and mumbling to herself. She sat down reading and started eating again. I was used to Alyssa doing this often as she got consumed with her studies. Kelly though, was caught between laughing at her intensity, or extreme curiosity as to what brought up the brainstorm.\n\n\"What's got you riled up, Doctor?\" I asked Alyssa.\n\n\"Well the talk about pair-bonding got me thinking.\" Alyssa said turning the book over and looking at me. \"I think we're all caught up with one another, intertwined emotionally and physically. One researcher calls the feeling, 'limerence'. It's like being drawn to something that's very alluring or attractive. The feeling of limerence can be one-sided or felt by both parties of a pair. In our case, I think your adjustments have caused a bit of limerence within us. And the sexual consummation has cemented that feeling, as well as causing you to feel limerent towards us.\"\n\n\"You're going to have to boil that down a bit,\" I said, \"I keep hearing, 'there once what a man from Nantucket,' when you say that word.\"",
        "\"Not a limerick! ...\" Alyssa laughed, then paused, thinking.\n\nShe continued trying to make it more simple, \"When you change someone, you draw them to you, I think. It creates a strong desire to be close to you. My theory is that's why Ron called out of the blue. It doesn't necessarily mean a sexual desire, it's more like an infatuation.\"\n\nShe looked at Kelly, then back to me, \"With Kelly and Lexi, that feeling was enhanced by direct sexual contact. Same with me, now that I think about it. That was like welding us together. I don't think you meant to, but that connection you've started with us is a very powerful connection. It explains why we can't stop thinking about each other. We're all entangled.\"\n\n\"Okay, so that is something you've talked about before.\" I answered, \"Why is it important now?\"\n\n\"Well with Ron, you'll have to be careful.\" Alyssa explained, \"Try to reassure him that you're still friends. Most likely Robin will be very curious as to your relationship also. She might even be more flirty and physical with you.\"\n\n\"God I hope Ron doesn't get more physical with me,\" I said feeling a shiver up my spine.\n\n\"I don't think he will, he's obviously heterosexual.\" Alyssa said pressing her fingers against the bridge of her glasses, the way she did when she was in counselor mode.\n\n\"Limerence has nothing to do with sexuality,\" she continued. \"Though the closeness that Robin might feel for you, she might confuse with a sexual desire.\"\n\n\"That might be uncomfortable,\" I said, thinking about the solution.\n\n\"So wait he did make us love him?\" Kelly asked with some confusion, \"I understand it wasn't intentional, but...\"\n\n\"No, Kelly,\" Alyssa said, \"Limerence isn't love, it's infatuation, attraction. People call that feeling falling in love, but love is more than the attraction. Love is deeper than that, and more towards the actions of one towards the other. I like to say love is a verb, not a feeling. Limerence might emerge into love, but it's not the same. I love Jeremiah, because I want to always be by his side and helping him. It's hard to explain.\"\n\n\"Yeah, not getting it,\" Kelly said with a frown.\n\n\"Okay, I think what Aly is saying,\" I tried, \"Is that my actions caused you to feel attraction towards me. That is the same with everyone I've used my power on. Our interactions since then have solidified that attraction, because we've both chosen to pursue that feeling. So our connectedness is as much a result of our individual choices as it is my initial changes. Did I get that right?\"\n\n\"Exactly,\" Alyssa said, \"Jeremiah created the environment, but your own choices and feelings, as well as his choices and feelings have solidified that connection.\"\n\n\"Okay,\" Kelly said, \"I think I'm understanding. Let me try... Jeremiah didn't force us to love him. He did make the conditions favorable for that to happen.\"\n\n\"Yes,\" Alyssa said, \"That's why he needs to be careful with Ron and Robin. To keep from becoming enmeshed with them as well.\"\n\n\"And with my parents,\" Kelly said, still visibly concerned for her family.\n\n\"Yes,\" I said, \"What happens if I just drop the relationship? If I told Ron and Robin to go away?\"\n\n\"Well they would feel a horrible rejection, and it could result in some really hard feelings.\" Alyssa answered, \"This is really uncharted territory. The literature uses limerence to explain some really dysfunctional relationships, especially where the limerence is one sided and not reciprocated. This is just my theory, but I think you need to reassure both Ron and Robin that they are still friends. We'll have to see after that. It might require you to adjust them slightly over time.\"\n\n\"Wait, wouldn't that cause more problems\"\" I asked.\n\n\"Possibly, but again, without a physical sexual consummation, I think you'll be able to stay free from entanglement.\" Alyssa allowed.\n\nI sighed and pushed my half eaten sandwich away. Suddenly not hungry. I knew that Ron would be easy, and I did like him as a friend. Maybe changed he'd even be a better friend. Robin was attractive, and if she suddenly went on the prowl... I had never been more sexually satisfied, but I also knew that I had a weakness for the female form.\n\n\"I need you two to stay close with me with Robin around.\" I confessed, \"Probably be best to be you Aly, since we're engaged.\" I lifted her hand and kissed my ring.\n\n\"Well that won't be a problem.\" Alyssa said leaning over and kissing my cheek, \"Our engagement might help matters, actually. If you adjusted Robin's curve like I indicated, she would respect a monogamous relationship.\"\n\n\"Even though I'm not monogamous.\" I added sliding my hand to Kelly.\n\n\"Definitely not monogamous,\" Kelly said, holding my hand.\n\n\"What Robin doesn't know won't hurt her.\" Alyssa said, \"We'd better get this cleaned up they'll be here soon.\"\n\nWe put away our lunch, and changed into working clothes. We didn't have enough time for any grab ass. After our serious conversation I don't think any of us felt like it anyway. \n\nJerry arrived first, and Kelly took him under her wing and he helped her take the extra furniture out of her office. She also enlisted his help to move a bed into her room. Jerry was very happy to help Kelly, and even was able to have a conversation with her. Kelly was a great conversationalist, and once Jerry relaxed, they hit it off well. Moving a bed into her room also solved the problem of the illusion of our separate relationships that we needed to demonstrate.\n\nRon and Robin arrived, and as soon as Robin saw Alyssa's ring she hugged her close. The two of them went off and talked about girl stuff and I didn't see much of them until later. Ron was also all business, and the two of us made quick work of moving the furniture to the spare room. We also moved some of the stray furniture from the basement. When Ron saw the big four poster bed in the middle of the room he gave me a wink.\n\n\"I guess you and Alyssa wanted a bit more privacy.\" He said with a knowing smile.\n\n\"Yeah,\" I offered, \"This is just until the upstairs gets finished.\"\n\n\"Who is Kelly, anyway?\" Ron asked, \"Where did she come from?\"\n\nI spun the tale about Aly and I wanting to turn the place into a Bed and Breakfast inn. I told him I ran into Kelly on an internet list-serv and she was moving to our town to shift schools. She had a background in the industry with her folks. So I offered her a job, in return for free rent during school.\n\nRon bought it hook line and sinker.\n\n\"This would be a great inn, if you fixed it up nice.\" Ron said.\n\n\"Yeah, we also wanted to redo the back yard into a formal garden. Maybe Alyssa and I will get married here.\" I said.\n\nI felt a bit weird saying the words, but oddly, also very comfortable. The idea of marrying Alyssa was becoming more and more natural. Kelly's rough ideas for a formal garden had me thinking thoughts of how romantic the backyard could become.\n\n\"Really? That's really cool.\" Ron said, \"If you need any help with the physical labor buddy, let me know. I'd love to help out.\"\n\n\"That's great Ron,\" I said, \"I'll probably take you up on that.\"\n\nWe rejoined the rest of the group for some refreshments in the dining room. Jerry came over and talked with Ron and me, while the girls chattered about wedding plans. For all the possible outcomes the whole afternoon was a success. About four o'clock we started saying our goodbyes, saying we had a business dinner set up with Kelly's folks. Hugs and handshakes were exchanged.\n\nRobin kissed me on the cheek and looked at me in the eyes with some admiration, \"I'm so happy for you and Alyssa, J. Seeing you two together really gives me more hope for Ron and me.\"\n\n\"I'm glad to hear you say that, Robin,\" I said truthfully.\n\nI really enjoyed working with Ron, glad that he was a bit more relaxed. Everything seemed to be working out fine.\n\nKelly gave Jerry a kiss on the cheek as he left, thanking him for his help. Jerry blushed a deep shade of red, and shyly waved good bye. He kept looking back at Kelly as he walked back to his dorm. \n\n\"He might have a crush on you, Kelly\" I said teasingly.\n\n\"Oh he definitely does,\" Kelly said with a smile, \"He's cute, but I'm unavailable.\"\n\n\"He doesn't know that, though.\" I answered.\n\n\"Oh right.\" Kelly said a bit chastened.\n\n\"We might need to help Jerry out too,\" Alyssa said, \"Just to keep him happy.\"\n\nI wasn't sure what she meant by that, and really unsure about using my powers at all. At least until we better understood about the bonding thing. Still, we had a short amount of time to get ready to meet Kelly's parents, so we all retreated to the basement and got ready for dinner.\n\nAfter we said goodbye to Ron, Robin and Jerry, we were all in need of a shower before meeting Kelly's parents for dinner. Kelly grabbed what clothes she needed and said she would get ready upstairs, in her room.\n\nAlyssa and I shared the downstairs shower helping each other undress. I was ready to repay Alyssa's favor from earlier in the morning. We kept our conversation to a minimum. The water streamed against her body and she leaned back against the wall. I knelt between her legs, first caressing her breasts and suckling on her nipples. Then I kissed down her belly as she combed her fingers through my hair. I inhaled her scent as I started licking her slick outer lips. The water streaming down her torso filled my mouth, along with her taste. She cooed her appreciation for my tonguing. I added a finger, then two, sliding the digits inside of her aroused slit.\n\nI brought her right to the edge of orgasm, then backed off, and stood up. She looked at me with eyes filled with passion and threw her arms around me. She lifted her legs and wrapped them around my waist. I lifted her slightly. Then maneuvered my prick to enter into her ready pussy. I leaned her back against the wall and started to fuck her with a steady motion. Our eyes locked with each other as we made quick passionate love. Finally moaning our mutual orgasms as she bucked against me. Sated, we washed each other carefully enjoying the soft touches of each other's bodies in the warm water. We finally started talking as we took our final rinses and turned off the water.\n\n\"I think Ron and Robin acted quite normally,\" I began, \"I didn't sense any differences really.\"\n\n\"Yeah, me either,\" Alyssa agreed, \"I think the engagement ring helped to squelch any undue desire that Robin might have felt. Though she asked me a lot of questions about you.\"\n\n\"Ron offered to help work in the yard to start fixing up the formal garden,\" I answered, \"It's not out of character, too much. Though to volunteer to work was a bit of a surprise. I actually welcome the help.\"\n\n\"That is interesting,\" Alyssa said, pausing for a moment before continuing, \"Jeremiah, we don't know if my theories are even correct. So let's just continue to be friends with the both of them. I'm actually starting to like Ron now that every word out of his mouth isn't a womanizing slur, it might be nice having him help out.\"\n\n\"What do you think about helping Kelly's parents?\" I asked.\n\n\"Well, if my theory is correct,\" Alyssa started, \"Helping them might help us. If they develop a good feeling about you, they'll be more willing to have Kelly work for us. At least they'd be willing to see the story as true, and not be overly suspicious.\"\n\n\"I hadn't thought of that,\" I answered honestly.\n\nAlyssa's plans always comforted me. She always seemed to have all the angles covered. This plan, however, tread along a grey line of becoming overtly manipulative. It didn't bother me too much. A lot was riding on this meeting with Kelly's parents. I knew Alyssa just wanted what was best for all of us. We did have to be careful; if the normal world found out about a five person polygamous relationship then we'd all suffer.\n\n\"So what should I do,\" I asked.\n\n\"I want to test something, but I need to wait until we're with Kelly.\" Alyssa answered, \"Can you zip up the back of my dress.\n\nWe finished dressing. I zipped up her dress, and she helped me with my tie. Alyssa and I didn't dress up very often, preferring a comfortable wardrobe over style. Dressed in a snug black dress that came down to her thigh and her hair pulled back into a loose ponytail. Alyssa looked beautiful.\n\n\"Baby, you are stunningly gorgeous,\" I said as I pulled her to me and kissed her.\n\n\"And you are roguishly handsome\", she said adjusting my tie.\n\nWe walked upstairs hand in hand to see how Kelly was getting along. Kelly was striking. A pale yellow sundress offset her darker blonde hair. The light blue belt around her waist emphasized her sparkling blue eyes. Her tan skin was luminous as she finished rubbing lotion onto her arms.\n\n\"Kelly, you look amazing!\" I said.\n\n\"Beautiful,\" Alyssa agreed.\n\nThen Alyssa adjusted her glasses, and I knew we were about to start her experiment.\n\n\"Jeremiah I want you to scan us, but I want you to look carefully at our relationship sections.\" Alyssa explained. \"Kelly, I want you and I to think first only of Jeremiah. That should be easy since he's right here. When Jeremiah says to, I want you to think about Alexis, and then about Carmen.\"\n\n\"What am I looking for?\" I asked.\n\n\"I think you should see peaks within the relationship section that relate to each person as we think about them.\" Alyssa began, \"I think they'd relate to a pair bonding, and the peaks will be higher for more significant relationships. If you can identify those areas, I want to see if you can see peaks for Ron, Robin or Jerry.\"\n\n\"Umm... Okay, I think I follow.\" I replied, \"Just say when.\"\n\n\"Wait,\" Kelly said, \"Why are we doing this? Are you going to adjust me Jeremiah?\"\n\n\"No, Kel,\" I said, \"I'm only going to scan.\"\n\nAlyssa added, \"I think if Jeremiah can identify individual pair-bonds on us, he can relate that to your parents. He might be able to simply strengthen those bonds for the both of them to help them with their current struggles.\"\n\n\"Oh okay,\" Kelly said with a bright smile, \"Alyssa, thank you for thinking about my issues. I'm ready when you are.\"\n\nI focused my mind on Alyssa's moral curve, and saw a bright spike in her relationship graph. I intensified my focus and I felt like I could zoom in on that portion. I shifted my focus to Kelly and saw a similar spike in her graph; it wasn't quite as prominent, but still much taller than the surrounding area.\n\n\"Focus on each other,\" I said, intrigued by what I could sense, \"Kelly think about Alyssa, and Alyssa think about Kelly.\"\n\nThey both turned to look at each other, and Kelly's graph shifted. A new spike was alight with intensity, not as tall as her bond with me, but still strong. I focused on Alyssa again and saw the same thing. I was fascinated. They agreed to focus on Carmen, and I could see the spike shift and a similar spike for Lexi. When they focused on Jerry, the spikes were much lower. Alyssa had a significant spike for her friend Robin, though much lower for Ron. Kelly had marginal reaction to both Robin and Ron, which was normal since they'd only just met.\n\n\"Tell me what you saw,\" Alyssa said as I sat down and rubbed my temples.\n\n\"Okay, you were right, when you focused on a specific person moral curve spikes at a specific point.\" I reported. \"It seems the stronger the good feelings of the relationship the higher the spike. You read higher for Robin than for Ron. Your highest was for me, then Kelly, with significant spike for Lexi and Carmen. Kelly, after me I think you have the strongest feelings for Lexi.\"\n\n\"That's true,\" Kelly said, \"Of course she was my roommate for a long time, before we started being lovers.\"\n\nWe left the house and started walking to Kelly's car, while Alyssa explained her plan.\n\n\"Kelly we need to arrive a bit before your parents, so Jeremiah and I can sit in the bar and watch you.\" Alyssa plotted. \"When your parents arrive, have a quick conversation, try to get them to think about each other, so Jeremiah can scan them and identify their pair-bonds.\"\n\nKelly nodded in understanding as she started the car and headed to the restaurant.\n\n\"Jeremiah, you need to be ready,\" Alyssa said, \"When we meet Kelly's parents, you'll need to push their related sections higher when you shake each of their hands. It'll have to be quick.\"\n\n\"That's a good plan; I think I can do that quickly enough.\" I answered again impressed with Alyssa's ability to plan and use my ability with the least amount of interference.\n\nI was starting to get nervous. There was a lot riding on the next few hours. We had taken for granted that Kelly would be able to transfer schools. She had already invested so much of her time and effort in taking on the project. I really wanted all of this to work out for all of us. The uncertainty of meeting her parents was boiling in the pit of my stomach.\n\nAlyssa leaned into me whispering, \"You're leaking again lover. Think happy thoughts, like of me naked.\"\n\nI blushed, and squeezed her tight, and shifted my attention from worrying about things out of my control. I started thinking about controlling her breasts. Then I drifted into some strange fantasies, laying her on the bed, with each limb secured to one of the bed posts.\n\nAlyssa elbowed me in the rib, \"You have some very naughty thoughts,\" she said with a smile.\n\n\"How much of my thoughts can you sense?\" I asked, she seemed to be able to know what I was thinking more and more.\n\n\"I have to focus a bit,\" she answered, slipping her hand into mine, \"You also have to be distracted, or open your mind, then it's like I know exactly you're thinking. It's more like pictures and images. It doesn't last very long.\"\n\n\"I can never tell exactly what you are thinking, just what you're focusing on, or sometimes emotions.\" I replied grateful for the distraction as we pulled into the parking lot.\n\nKelly had picked a restaurant with a good view of the river. It served local seafood and steaks, and had a highly rated wine cellar. Alyssa and I made for the bar which overlooked a large water wheel that moved steadily in the slow current of the river. Kelly sat on a bench waiting for her parents. Alyssa ordered us a couple of beers, and reminded me to keep a careful watch.\n\nI watched as Kelly stood up and looked over her shoulder towards us. Then she raised her hand and waved towards the parking lot. A handsome couple approached with smiles on their faces. Kelly's father was tall, not fat, but carrying a few extra pounds. Neatly dressed in a suit and tie, clean shaven with a genuine smile. For some reason I'd expected him to be more intimidating, but he seemed like a very nice guy. Kelly's mother was very attractive, and middle-age was treating her nicely. She had long blonde hair like her daughter and wore it in a similar style. She was fashionably dressed with a sense of easy confidence about her. It was like she knew she'd always drawn an extra look from men, and was used to the attention.\n\nKelly started talking to them, and I had to focus really hard to read them from a distance. I felt my temples throb as I focused, but I was able to pinpoint two points each for each of them. One of the points would be for Kelly and the other for the spouse. I tried to focus more and see if I could discern any difference between the two spikes. I finally sighed and gave up. I related what I saw to Alyssa and she thought for a moment.\n\n\"If you can lift the lower point for each of them, I think that would work.\" Alyssa said quickly.\n\n\"Why?\" I asked curiously, \"Wouldn't they be more attached to each other?\"\n\n\"In this case, I think they've transferred their mutual attachment to Kelly,\" Alyssa said confidently, \"Judging their body language, they're both genuinely happy to see her again. They're also a bit distant from each other, like they are a bit mad at each other. I can feel a bit of hostility in their posture.\"\n\nI trusted Alyssa's diagnosis she was a fine student of human nature, even without the benefit of my powers. We stood up and walked to the entrance, hand in hand.",
        "\"Mom, Dad, I want you to meet, Jeremiah, and Alyssa,\" Kelly said smiling.\n\n\"I'm Bob,\" said Kelly's dad, holding out his hand. I shook it firmly and pushed the lower point upwards significantly.\n\n\"Jeremiah,\" I repeated, \"It's a pleasure to meet you, sir. Kelly has been a great help to me.\"\n\nWhile I was talking with him, Alyssa had shook hands with Kelly's mom. Her mom had caught Alyssa's hand and noticed her ring. She smiled at Alyssa and I heard her say something congratulatory, I was more focused on adjusting Bob. Then Kelly's mom looked at me.\n\n\"I'm Betsy, Jeremiah,\" she said offering her hand palm down.\n\nI took Betsy's hand and bowed my head, pushing her point up significantly as well. I lifted her hand and brushed her finger tips.\n\n\"Pleasure to meet you; I can certainly see where Kelly get's her charm.\" I said in return.\n\n\"Well it's a pleasure to make your acquaintance, and thank you for taking care of our girl the last couple of days. Kelly tells us you're looking to start a Bed and Breakfast.\"\n\nWe continued the discussion as we waited for our table. I noticed Bob step closer to his wife, and slip an arm around her waist. She also leaned into him, accepting his closeness. Kelly looked up at me and smiled. It seemed the first hurdle was cleared. Now would they buy our story?\n\nWhen we sat down for dinner, Kelly continued to lead the conversation, reporting how well she had finished the term. She told them how she had met me when I came to her school for a competition. She made up a story where we'd met in a coffee shop, and just hit it off. She then went on to say we had traded emails, and that's how we got to know each other.\n\nBetsy wanted to know what Alyssa thought about me emailing another girl. Alyssa smiled shyly.\n\n\"I wasn't that thrilled at first, to tell you the truth,\" Alyssa said telling Betsy what she wanted to hear. \"Jeremiah kept all the emails professional. He was concerned about his house. He'd just inherited the property and wanted to improve it.\"\n\n\"Oh yeah, Mom,\" Kelly said, steering the conversation back to herself, \"Jeremiah's inherited this huge house from his grandparents. It's been used as off campus housing for the last twenty years, but it's bordering on the historical downtown area. It could turn into a really nice inn.\"\n\nThat brought Bob into the conversation, and soon both Betsy and Bob were all business. Asking me about the house, how much money I had to invest. They related how they had started their first inn, and they looked at each other remembering fond memories. They suddenly leaned closer to each other, and that made Kelly feel very happy. From that moment the night just flowed naturally. Bob, hearing my plans, agreed that Kelly would make a great manager. Both of them gave their blessing for her to change schools and accept the job. Betsy wondered if it would be okay to stop by and check out the house. As we finished dinner it was still about an hour until dusk, so I agreed. Bob generously picked up the check, and the girls all walked together and got into Kelly's car.\n\n\"Why don't you drive with me, Jeremiah?\" Bob said, \"It's been awhile since I've driven near campus.\"\n\n\"Certainly Bob,\" I replied, as I got in the side door.\n\nI felt a little nervous because I was so used to having Alyssa nearby to give me comfort. The evening's conversation left with nothing but good feelings towards Bob, however, so I was confident I could handle a few minutes away from the girls.\n\n\"This might work out to both of our benefit,\" Bob said as he followed Kelly out of the parking lot.\n\n\"How so?\" I asked, trying to understand what he meant.\n\n\"Well Betsy has an itch to own a Bed and Breakfast in the valley,\" Bob started, \"We've spent the day looking at prospects up and down, and frankly none of them really caught my eye.\"\n\n\"There are a lot of different place around here. My house is close to campus as well as the historic district. It's also close to all these new wineries that are becoming popular. I don't know much about inns, but the conversation tonight has me excited about the possibilities.,\" I said, then continued so I could probe Bob's feelings towards Betsy. \"At least you got to spend some time with Betsy. You both seem like a very happy couple.\"\n\n\"Well we've been married a long time,\" Bob said smiling suddenly proud of being with his wife, \"You're right I did get to spend time with Betsy. That and seeing Kelly tonight looking so happy really made the whole day worthwhile.\"\n\nWe slipped into silence for a few moments as Bob steered through the light evening traffic. He kept close behind Kelly so I didn't need to give him instructions. Soon he started the conversation up again.\n\n\"With Kelly engaged in your project,\" Bob said, \"Betsy and I might want to invest some of our money into making this venture really work. We are both interested in seeing Kelly succeed.\"\n\n\"That's very generous Bob,\" I replied, \"I think I have enough to cover the costs of a remodel, but I'll certainly talk to Alyssa about perhaps creating a partnership. It would help to reduce the risk we're taking.\"\n\nI knew enough about business to know that I was taking a huge risk with my inheritance. It was one of the many factors that troubled me in the back of my mind. I was also a bit shocked to hear such an offer come from Kelly's dad, literally an hour after meeting him. It didn't make a lot of business sense to offer money so quickly.\n\n\"We'll just have to see what your house has to offer,\" Bob said as he slid his car near the curb and parked behind Kelly.\n\nI got out of the car, relieved to be reunited with Kelly and Alyssa. Kelly took charge of the tour, showing off a bit for her parents. She started with the grounds, walking around the side of the house, to the large backyard. Her mother agreed there was ample room for a formal garden, and also thought adding a large deck around the back with a hot tub area would make a good attraction for romantic couples.\n\nInside Kelly showed them her room/office. She explained that we'd been vacating the upper floors to enable that to be renovated first.\n\n\"Jeremiah and Alyssa want their love nest to be first priority.\" Kelly said with a teasing smile.\n\nAlyssa blushed appropriately, and I smiled a knowing smile, \"Hey it's my house still!\" I explained confidently.\n\n\"You should build a large deck off the second floor too,\" Betsy explained, \"Because once you start having guests, you'll want the little extra privacy.\"\n\n\"That's a good idea,\" Kelly agreed, \"I'll be sure to tell the architect.\"\n\n\"Oh, did you call Steve?\" Betsy asked, and Kelly nodded, \"Good he's excellent with decks, you should have him consult with Eduardo for the backyard.\"\n\nIt certainly seemed like Betsy was sold on the idea. We continued the tour upstairs and Betsy listened to Kelly's ideas for the main living quarters. She confessed that it seemed a bit roomy, but then explained she wished they had planned extra room for themselves in their first property. When we got to the basement and they saw the extra large bed, both Betsy and Bob understood why the upstairs needed to be expanded.\n\nWe went back upstairs and Alyssa boiled some hot water for tea. We all sat down and enjoyed a hot cup of tea and talked about plans. Bob and Betsy sat very close to each other, and smiled a lot. At one point, Betsy excused herself and asked if she could talk to Bob in private. So Kelly, Alyssa and I stayed in the dining room while they went to the main living room. Kelly was all smiles.\n\n\"I haven't seen them be that close in ages,\" Kelly explained, \"Whatever you did Jeremiah, it seems to be working. Thank you!\" She leaned over and kissed me on the cheek, then whispered, \"Once they're out of the house I'll thank you more properly.\"\n\nBob and Betsy came back in the room, and once again Betsy took the lead.\n\n\"Bob and I would like to be silent investors in your project,\" Betsy announced, \"In Kelly's name we would like to invest a share of the costs for the improvements.\"\n\n\"Gosh, Betsy, that sounds like it will help us a lot, but I'm really unsure what that means,\" I replied honestly, \"Would it be okay if I had my lawyer call you and talk about the details?\n\n\"I think that's very appropriate,\" Betsy said, \"I hope that you have all you need as far as incorporating this venture. I'll call Kelly in the morning, and email you some details as what you need to do as the owner of a hospitality property. Frankly this house has great potential, but you need to tread very carefully, there are a lot of hoops to jump through to make this work.\"\n\nSuddenly my palms began to sweat, and Alyssa rubbed her hand up and down my spine.\n\n\"Yeah, we've just really been talking about it and dreaming a bit,\" I confessed, \"I really don't know much about the details. That's why I sought out Kelly's help.\"\n\n\"Well, Jeremiah,\" Bob said with a smile, \"Hiring Kelly might have been your best move. With Betsy's help we'll get all this squared away. I hate to say have your lawyer call my lawyer, but that is probably the best step. He'll have your best interest in mind.\"\n\nWe all shook hands, and Kelly walked her parents out to the car. Alyssa breathed a deep sigh, glad that the evening with Kelly's parents was over. It was another hurdle we had managed, and we were that much closer to having our family in one place.\n\n*ring ring*\n\nI picked up the phone, \"This is J.\" I said evenly, not knowing who would be calling so late.\n\n\"I kicked that test's ASS!\" Carmen said loudly.\n\n\"That's awesome Carmen!\" I answered, which caused Alyssa to stand up and lean into listen.\n\n\"Thanks to Lexi's help I had everything nailed!\" Carmen said confidently, \"I won't know my final grade for a couple weeks, but I know I passed the class.\"\n\n\"I'm so glad,\" I said, then Alyssa spoke into the receiver, \"When are you leaving!?\"\n\n\"Oh hi Aly babe!\" Carmen said happily, \"Lexi and I are going to bed now; we should be asleep in an hour or so, if you know what I mean.\"\n\nAlyssa and I laughed, we wanted to go to bed too, and not just to sleep.\n\n\"Then we're out of here at 6, the van's all packed and ready to go.\" Carmen continued, \"Lexi will wake up and run at 5, then kick my ass outta bed and we'll be off.\"\n\n\"How long will it take to get here?\" I asked.\n\n\"Depends on how fast this van will go,\" Carmen laughed, \"We figure 10 maybe 12 hours, but we'll give you call around lunch time.\"\n\n\"Sounds perfect,\" I said, \"Drive carefully, Carmen, we all want you here safely!\"\n\n\"Love you both!\" Alyssa said with a smile.\n\n\"Oh we both love all of you,\" Carmen said, \"We'll see you tomorrow!\"\n\nShe clicked off, and Alyssa hugged me excitedly. Everything was fitting together. Kelly came back inside, and I shared what Carmen had told us. She was happy with Carmen's success on the test and glad to know they'd be home tomorrow. We all hugged tightly, feeling a bit of weight off our shoulders. The hug turned into kissing, and soon we all filed down to the hallway to our bed in the basement.\n\nOnce we got to the basement, Kelly told Alyssa and I to stay dressed. She moved us to the foot of the bed, and then told us to wait there.\n\nShe walked behind us, and said, \"You both were such a great help to me and my parents, and I want to thank you both for helping. I want this one night, just the three of us, to be something we'll always remember.\"\n\nAs she finished talking she crawled up on the side of the bed, and then knelt on the end. She was completely naked except for the silver pendant we all wore. She kneeled on the bed, her bottom resting against her heels, her head was bowed, and her hands rested on her thighs. She was showing her submission to both of us, and we were both touched by her action.\n\nShe lifted her hands to hold her pendant, and then lifted her eyes to meet mine.\n\n\"Jeremiah, I don't know why we have become so attached. I learned today for the first time that you made an error. But I can no longer believe it was a mistake. Since I've known you I've never been happier. You introduced me to the joys of sex, you made my friends your friends, and your friends my friends. You've shown me love, and accepted my love in return. This pendant might not be a wedding ring, but it's sealed us as family ever since I've worn it.\"\n\nA tear fell from her eye and traced down her cheek, \"I love you Jeremiah.\"\n\n\"I love you too,\" I started, but she held a finger to my lips, the shifted her eyes to Alyssa.\n\n\"Alyssa, you have become as important to my life as anything, or anyone. You've become my older sister. When we first met, I knew that we shared a connection. Since our first touches at the hotel, I've felt entirely at home in your arms. You have become more than family to me. You are a part of the pendant. Likewise, I am sealed to you as much as I'm sealed to Jeremiah. I love you, Alyssa.\"\n\n\"I love you too, Kelly,\" Alyssa said. Again Kelly held her finger to her lips.\n\n\"Allow this humble servant to show the both of you how much she loves you.\"\n\nI started to complain, but she lifted her eye to me and expressed such deep feeling in her eyes, I stayed silent. I allowed her this moment to be what she wanted it to be. I looked at Alyssa and felt her calm me, a feeling of acceptance filled me as I began to understand what Kelly was trying to express to us.\n\nKelly wordlessly, crawled off the bed and began to undress Alyssa. I stood quietly watching. The slow sensuality of the ritual was arousing and I felt my erection press into my trousers. As Kelly helped Alyssa step out of her dress, then removed her bra and panties I gasped in deep arousal. Alyssa was also visibly aroused; her nipples rock hard as she allowed Kelly to guide her onto the bed to lie on her back against the headboard.\n\nKelly returned to me, slipping off the bed to remove my clothes. She carefully folded each item, as if it were a piece of sacred clothing. Finally she pulled my underwear down and released my rigid manhood. She allowed herself a small smile and a lick of her lips as she eyed my throbbing cock. Then took my hand and led me to the bed.\n\nI tuned into Kelly's mind, trying to discern what she wanted to do, but it soon became apparent. As I crawled onto the bed, she lowered her mouth to my cock, and took its length into her mouth. She sucked it expertly, spreading her saliva and my pre-cum over its tight sensitive skin. Then she turned from me, and lowered her mouth to Alyssa's open pussy. Alyssa had been idly playing with herself watching the arousing scene. Kelly took Alyssa's hand from her pussy and moved it on top of her own head.\n\nAlyssa moaned and arched into Kelly's mouth, her fingers combing through our lover's golden hair. Kelly slid her hand back and opened her pussy lips, inviting me between her legs without saying a word. I crawled on my knees behind her and notched my cockhead between her fingers. As I slid home we all moaned, as if we were all touching each other. I was overcome, and projected my erotic feeling to my two lovers. They reflected my psychic urges and we simply rode the rebounding waves of ecstasy. The whole build up to the physical act had left us all very needy, and the ride to the peak was quick.\n\nWe shook together in powerful climax, our voices raised in moans of emotion. Our bodies stiffened as our sexual energy released, then collapsed in a heap of heaving flesh. We curled into each other and as our breathing slowed we fell into a deep sleep.\n\nThe next morning we woke up together in a tangle of limbs and bodies. While it was nice and warm between Kelly and Alyssa, none of us felt like playing. We wanted to save ourselves for Carmen and Alexis later that night. So we arranged ourselves to be more comfortable and just dozed, enjoying the closeness. It felt more like a weekend than a Thursday since we were all finished with school. Sleeping in was fine for a while, but soon my brain started buzzing with thoughts. I extricated myself from the girls and padded to the shower to clear my head.\n\nAs I let the hot water stream down my body, I reviewed the previous nights events. I knew I'd have to call my lawyer. It had been almost a month since I'd finalized my inheritance and gained access to my trust. The lawyer was an old family friend, who I knew would help me make the right decisions.\n\nThinking of Kelly's parents made me remember mine. Or more accurately, my lack of parents. My dad disappeared when I was young, and I was raised by my mother. She was my grandparents' only child, as I was her only child. I loved my mother, and had been devastated by her death in a car accident my senior year of high school. She was hit by a drunk driver on her way home from the hospital where she worked the night shift. My grandparents had passed away a couple of years earlier. First my grandfather from a heart attack, then my grandmother passed a few months later. My mother always said she'd died of a broken heart.\n\nIt was hard when Mom had died. I was 18, so I was already an adult. My senior classes were all easy, and I still graduated on time. I just went into automatic mode after my mother passed. I didn't hear anything from my father, not that I expected any contact. After graduation, I moved into the house I lived in now. My lawyer assured me that I'd always have a place to live. He took charge of my mother's estate, which wasn't much. She'd paid off lots of bills with her inheritance from her parents, the bulk of their estate was held in my trust. He sold our house and liquidated the rest of her assets, which allowed me to pay for tuition and books. Since my rent was taken care of, I was able to live fairly well with what I received.\n\nKelly's close relationship with her own parents, brought back a lot of hard memories. I really never had much of a family. Despite my grandparents doting on me, my family life wasn't like the other kids. I wasn't jealous, I was just used to being that boy without a father.\n\nAlyssa and I had talked about it often, her parents died when she was 14. She was raised by an aunt, and couldn't wait to get away from her family. It was one of the reasons we had become friends, while other people had money from family. We had both survived on our own, with some help from scholarships, but we were used to being more self-sufficient than most college students.\n\nI shook my head, clearing the sad thoughts. It was what it was, I couldn't change the past. I could only build my own future, my own family. I started washing myself, being a little more rough with the washcloth than normal. As I was rinsing, the bathroom door opened and in came both Kelly and Alyssa. They still looked sleepy, though they smiled at me lovingly.\n\n\"Are you going to use all the hot water?\" Alyssa asked.\n\n\"Well since we have half the people we usually have, I think you'll be okay.\"\n\nI stepped out of the shower and shook my head, spraying the naked girls with water. They shrieked and slid past me into the shower. They laughed and pulled the curtain closed.\n\n\"No boys allowed!\" said Kelly with a giggle, a gentle reminder of our earlier decision to not play until Carmen and Lexi arrived.\n\nI smiled and finished drying off, before heading to the side room where Alyssa and I kept our clothes. I got dressed in comfortable shorts and a tee-shirt, and went upstairs to Kelly's office. I flipped on the computer and went to get a cup of coffee while it booted up. When it was ready, I checked campus email. It was empty, which was to be expected.\n\nI sat on the sofa and dialed my lawyer. The phone rang and when the receptionist heard my name she rang me right through.\n\n\"Jeremiah,\" said Thomas, my lawyer, \"I was just going to call you. I received something interesting in the mail yesterday. Do you have time to drop by?\"\n\n\"Sure Uncle Thomas,\" I said, \"I was actually going to see if you had time to see me. I need your counsel on some things. Can I come by now?\"",
        "\"Of course,\" Thomas said, \"There is nothing pressing for me today, only reading through boring depositions. I always hate doing that: I'd love to catch up with you. Judging from the bank statements I've seen you've been enjoying yourself.\"\n\nI laughed, \"Yeah, I'd say. That's part of what I need to talk with you about. I'll see you in a few.\"\n\nI went back down the stairs and slipped on my shoes. The girls were still using all the hot water. I called to them, saying that I was going to visit my lawyer. They made noises like they heard and understood me. I walked up the back stairway and headed downtown. My lawyer's remodeled an old Victorian era house into office. It bordered on the same neighborhood as my house, so it was a quick walk.\n\nWhen his secretary saw me, she ushered me into his office, and brought me a cup of coffee.\n\n\"Jeremiah,\" Thomas stood and hugged me, \"It's good to see you, son. You need to stop by more often. Beyond being your lawyer, you know I consider you family. Connie asks about you often.\"\n\nConnie was his wife, and she had practically adopted me after my mother passed away. I did consider them family, and was a bit chagrined that I had not stayed in touch. We weren't related but I'd always called them Uncle Thomas and Aunt Connie.\n\n\"I've had a wild couple of months Uncle Thomas.\" I shrugged, feeling a bit uncomfortable. \"I really need your advice on some things, but I don't know where to start.\"\n\n\"Well let's start with this,\" he said, picking up an envelope off the desk and handing it to me.\n\n\"What's this?\" I asked.\n\n\"It came in the mail,\" Thomas explained, \"It was as part of a larger package of documents from another law firm that is handling your father's estate.\"\n\n\"What?\" I asked, not sure I heard correctly.\n\n\"First I'd heard of it too,\" Thomas said putting his hand on your shoulder, \"I know you haven't had any contact from your father in years, so it was a shock to get this yesterday. I didn't quite know what to do, so when you called this morning I took the opportunity to break it to you.\"\n\nI was numb, having relived memories of my mother just a few hours earlier, my nerves were raw. My eyes filled with tears, and that confused me, because I really didn't have any feelings for my father at all. I fingered the envelope, looking at the front. The handwriting was foreign, yet oddly similar to my own hand. It simply said, \"For Jeremiah.\"\n\n\"Do you want me to step out while you look at it?\" Thomas asked.\n\nI shook my head, and looked up at him. He understood, and sat in a chair next to me instead of going behind his desk. I slid my finger along the edge of the envelope, neatly opening it. It felt like I was opening a crypt. The envelope and paper inside was yellowed with age, like it had been in storage for years. I unfolded the single sheet of paper, and started to read.\n\n----------\n\nJeremiah,\n\nIf you're reading this then I'm dead. I've always been plain with words. I left when you were four and I've thought of you often in the last ten years. I owe you an explanation for why I left.\n\nI loved you and your mother very much, Jeremiah. I know it might not seem like that. I haven't enjoyed been away from either of you. I have kept a close eye on you, and have tried to provide for you as I could. I could not stay with you for reasons that may have become plain to you, or will become plain to you.\n\nIt's hard to just say this in a letter. So I'll just say it. I'm a psychic, or something. I don't know exactly what to call it. This ability was passed down to me by my father, and has been in our lineage for generations. I'm able to see people's emotions, and can influence how they make decisions. If you're old enough, you might have experienced how this works. If you're too young to have had it manifest, then I hope you never do.\n\nIt can be a blessing or a curse. My grandfather was able to help many people. My father, however, used his gift selfishly, and brought ruin to our family. I followed my father's example, and shamefully damaged the people I loved. Specifically your mother and you. Be careful, Jeremiah, use your powers sparsely, and only to help. Don't use it for selfish gain.\n\nI know that sounds trite coming from your absent father. It could be true that I left selfishly. I have thought on that much over the years. You need to know, I left to protect you. You and your mother. I hope you can someday understand.\n\nI love you Son,\n\nIsaiah Jackson. --------------\n\nI folded back up the letter and closed my eyes. I put the paper back in the envelope, folded it in half and slipped it into my front pocket. I looked at Thomas with guarded eyes.\n\n\"Did you read it?\" I asked.\n\n\"No Jeremiah, it's just for you.\" he said softly.\n\n\"What else was there?\" I asked.\n\n\"Bank records mostly. His estate is fairly substantial, and he left it all to you. I need to know what you want to do with it.\" Thomas said.\n\n\"Anything else?\" I asked.\n\n\"A safety deposit key for a bank in Montana.\" he added.\n\nI sighed, that could wait a while, too much was going on to worry about a box in a safe a thousand miles away. I sipped my coffee and considered what I had read. I'd have to let Alyssa read it too; I shared everything with her. Finally I looked at Uncle Thomas and smiled.\n\n\"I'm getting married,\" I said.\n\n\"Really, wow!,\" Thomas said, \"To who?\"\n\n\"Alyssa Monroe,\" I answered, \"I think you met her once earlier this year.\"\n\n\"Oh yes, brown hair, glasses, beautiful eyes. Congratulations. She seemed like a very nice girl.\"\n\n\"Before I say anything more, what we talk about here is protected right? Confidentiality?\"\n\n\"Of course,\" Thomas said, \"Are you in some kind of trouble.\"\n\n\"No, not exactly.\" I answered and pulled out the letter and handed it to him, \"You'd better read that first.\"\n\nHe read through the letter, looked up at me, then read through it again. Then he took off his glasses and looked at me.\n\n\"And can you...\" he started, and I stopped him with a nod.\n\nHe sat back, and listened while I told him my story. I didn't leave out any detail. He was non-judgemental while he listened. He asked questions when he didn't understand what I was saying. I clarified until he understood. I told him about how I started our family, that I had become entwined with the four girls. He tried to understand, but was more focused on trying to get me free from the entanglement.\n\n\"Uncle Thomas,\" I said firmly, \"I don't want to be free. I love them, all of them.\"\n\n\"You have to be careful, Jeremiah,\" Thomas said in his lawyer voice, \"Society will not react well if it's found out you are living with four women. The state has laws against polygamy.\"\n\n\"I know, I have a plan, just keep listening.\" I said.\n\nI told him about Kelly and her parents. About the Bed & Breakfast idea. How it could be a cover for my family. I used the word family repeatedly, because family was important to Thomas. I knew he considered me family, and I wanted him to consider Alyssa, Kelly, Alexis and Carmen as family too. He nodded as he began to understand.\n\n\"I don't know much about real-estate law, but I can research and find someone that can look over the contracts.\" Thomas said finally. \"I think your cover story will work, we'll just have to arrange it carefully. Do Kelly's parents know about your... situation?\"\n\n\"No, they don't.\" I admitted, \"I don't think they'd respond well right now.\"\n\n\"No I think you're right.\" Thomas added.\n\n\"I want to have each of the girls covered should something ever happen to me,\" I added, \"Alyssa will be covered by our marriage, but each of the others need to be covered as well.\"\n\nHe nodded, \"Of course. I can handle that for you Jeremiah.\"\n\nI slid over a piece of paper with Kelly's mom's contact information, \"Here is Becky's information, I don't know where to start with the real-estate and property. I just want to have everything handled securely. I'll also need to liquidate some assets to cover the costs.\"\n\n\"I can handle all that,\" Thomas said, \"Your father's assets are easiest because his estate is mostly liquidated already. I'll handle the documentation required to shift his accounts into your name. That should be enough for the foreseeable future. The rest we can figure out once the ball gets rolling.\"\n\nI smiled, \"If I know Kelly, she's probably pushing on the ball right now.\"\n\nI stood up, and so did Thomas. We hugged affectionately, then he leaned back.\n\n\"I hope you know what you're doing, Jeremiah,\" he said, \"Regardless, Understand this, son; I'll have your back as much as I can. I promise.\"\n\n\"Thank you, Uncle Thomas,\" I replied, \"I know that I can trust you.\"\n\n\"Will you bring all your ladies over to meet Connie?\" he asked, \"She will want to meet all of them.\"\n\n\"I will,\" I promised, \"I'll set something up. Send her my love in the meantime.\"\n\nWe shook hands, and Thomas indicated a box filled with papers from my Dad's estate.\n\n\"Anything important?\" I asked.\n\n\"Nah, I'll put it all in storage. You'd better hold on to this though.\" he said holding out a keyring, \"The information on the bank is on the fob, it's yours now.\"\n\n\"Thanks, Unc.\" I said and walked out of his office and back home.\n\nIt was lunchtime by the time I walked back home. I was hungry having skipped breakfast, so I was glad to see the girls had made sandwiches. I sat down to eat lunch, and slid the envelope with my father's letter over to Alyssa.\n\n\"What's this?\" she asked intrigued.\n\n\"My dad's final instructions to me,\" I said with a shrug.\n\n\"Your DAD\" she said, then opened the letter scanned the page.\n\n\"Can I see?\" asked Kelly, \"I don't know much about your family.\"\n\n\"You can read it, sure,\" I said, then related the story of my family, and how my Dad left when I was four.\n\n\"Jeremiah, this is huge!\" Alyssa said.\n\n\"I'm sorry to hear your parents aren't alive,\" said Kelly taking the letter from Alyssa.\n\nI shrugged, not wanting to open those emotions up.\n\n\"It is what it is, Kel, thank you.\" I smiled then looked at Alyssa, \"Why is this huge?\"\n\n\"Because, it explains that you aren't unique. We might be able to find more people like you, and understand what you can do a little better.\"\n\nI slid the safety deposit key across the table, and Alyssa looked at it and up at me.\n\n\"My father's safety deposit box in Montana.\" I said flatly.\n\nI was feeling a bit grumpy. My father's letter was over eight years old. I didn't know anything about my father, his name was never spoken when I was growing up. I didn't even know his first name until that morning. Then I started to feel angry.\n\n\"He knew, Aly, he fucking knew. And never told me. Wrote this letter to make himself feel better. Meanwhile, I have no idea. If I had known. I might ...\"\n\nMy eyes closed as I swallowed the words I was about to say. I felt a cooling sensation and felt Alyssa take my hand. I wanted to say I wouldn't be in this mess, but that wasn't true. I loved being in this mess. These four lovely female that I had bonded with, as much as they had bonded with me. My anger sputtered to a low boil. My eyes opened.\n\n\"I don't know what I would've done...\" I answered my unanswered question, \"I'm glad I didn't know, because I'm so very happy with the both of you,\" I said looking at my two beautiful companions.\n\nAlyssa looked at me with care in her eyes, I knew she felt my anger, my regrets. Kelly just smiled at me and snuggled against me.\n\n\"I never want to be apart from any of you, I can't wait until Carmen and Lexi get here tonight.\" Kelly said.\n\n\"I can't wait either,\" I said, meaning every word.\n\nAlyssa looked at me with some concern in her eyes. She had felt my anger and rage at my father's note. I knew that my nerves were frayed. I felt raw, and if I felt raw, I knew that Alyssa would be sensing my frustration. She looked at me and gave me a comforting smile.\n\n\"J, listen, sweetheart,\" Alyssa said, \"You've gone through so much in the last 24 hours. Anyone else would be a basket case. You found out a family secret from a father you hadn't heard from in years. You're starting a new lifestyle with us. You've gotten engaged to me. You're starting a new business. Babe, on the issues of lifestyle changes you're off the scale. I think you need to take a step back, cut yourself a break.\"\n\n\"This new thing...\" I started, \"This thing with my father, his note, that key.\" I started to ramp up my emotions again.\n\n\"Don't worry about it, babe,\" she counseled, \"at least not right now. It was clearly triggered by your emotions. Keep your emotions in check for now. Later we'll figure out how to deal with that. This is all new, but you'll figure it out. Just like you figured out how to fix people.\"\n\n\"As usual, you're right,\" I said, relaxing trying to force a smile, and failing miserably.\n\n\"I think you need to take a nap,\" Alyssa said, \"Alone. Kelly and I will be okay. She isn't going anywhere. I promise.\"\n\n\"Okay.\" I said and I stood up and kissed her. I walked down the backstairs and fell into our bed. I buried my head under a pillow and cried. Big heaving sobs. I didn't care, I just needed to release my emotions safely. After a few minutes, I stopped. At some point I fell asleep.\n\nI woke to a hand combing through my hair, and I turned and saw Alyssa sitting beside me.\n\n\"Wake up sleepy head,\" she said smiling.\n\n\"Mmmm,\" I said blinking my eyes, can pulling her closer \"Come sleep a bit with me, the nap was just what I needed.\"\n\n\"Yeah, I'm glad to hear that love\" Alyssa said with a smile, \"I think you won't want to nap much more when I tell you the next piece of news.\"\n\n\"What?\" I asked, feeling a bit of resignation, what else would I find out today, \"Tell me what it is.\"\n\n\"Carmen and Lexi are here!\" she said with a smile.\n\nI grinned and started pulling the covers off of me, Alyssa helped me out of bed. We hurried up the stairs to the kitchen where Kelly was happily hugging Lexi and Carmen. Lexi saw me first and hurled herself at me. Jumping into my arms and wrapping her legs around me. She hugged me furiously with her tight athletic body, and it felt so good. I swung her around, and then lowered her down to the floor. Carmen tackled me next, wrapping her arms around me and kissing me on the lips. Then kissing me deeper before pulling herself away.\n\n\"Man, I missed doing that,\" Carmen said with a glitter in her eyes.\n\nI still felt emotional from the afternoon, so I went and hugged Kelly too.\n\nAlyssa and Kelly had ordered pizza so we all sat around in the living room to catch up, and allow the travelers some time to relax. It was much different than the last time we'd all met, the sexual energy was still present but much more subdued. It felt so natural to sit and listen to Lexi and Carmen talk about their ride. Lexi was also very excited to relate that her training was improving very well since they had returned from the our hotel rendezvous.\n\n\"I've been having some great improvements in my times,\" Lexi said happily, \"I just feel so much more confident and it's easier to push through the little walls. I think I'll have a good chance walking on to the cross-country team in the fall.\"\n\nFinally the conversation turned around to Alyssa and I. Her ring had not gone unnoticed, with both Carmen and Lexi grabbing her hand to examine the ring, then hugging her in congratulatory hugs. Alyssa blushed each time, she looked like she wasn't quite comfortable with all the attention.\n\n\"When did you pop the question,\" Carmen asked after polishing off a third large slice of pepperoni pizza.\n\n\"Two days ago,\" I answered with a blush, \"It was really a surprise to both of us.\"\n\n\"How could it be a surprise to you?\" Carmen asked with a laugh, \"I would have thought you would have asked her weeks ago.\"\n\n\"Really?\" I answered a bit shocked at her reply, \"I really wonder why you thought that?\"\n\n\"Jeremiah, I might not have the best track record with relationships,\" Carmen said with a glint in her eye, \"But I can identify true love when I see it.\"\n\nLexi also nodded while she curled into Kelly's side, \"You two complete one another. It makes us all happy to see you two together. I think your relationship is the one that holds us all together.\"\n\n\"You might be right,\" I allowed, \"I was thinking that some of you might feel some jealousy or something with the arrangement.\"\n\n\"Why would we feel jealous?\" Carmen asked, \"You've been pretty clear about our relationship since you gave us this pendant.\"\n\nAll of the girls lifted their hands to their chains and fingered their Celtic knot. I lifted my own hand to my slightly different knot. The connection we felt at that moment was full of love and comfort. My worries and guilt faded as I tuned into our mutual love for each other. I remembered that Kelly had the conversation with Lexi and Carmen about polygamy, and it comforted me knowing everyone accepted the truth of our unique union.\n\nAlyssa looked at Carmen and Lexi, then to Kelly, \"The ring might be on my finger,\" she said softly, \"But all of you are a part of it. It felt so ... empty not having everyone together. This house finally feels like home now!\"\n\nWe all raised our beer cans in a mutual toast. Then finished off the rest of the pizza.\n\n\"So give us the tour,\" Carmen said happily, \"I want to hear more about Kelly's plans for this place.\"\n\nKelly took over and lead all of us through the house, starting in the upper floor. She had drawn a rendering of how she wanted the master suite to look that she had tacked to the wall. Then she started talking about the plans for the Bed and Breakfast as we toured the main floor. She mentioned the kitchen would need to be remodeled.\n\n\"I'd like to help with that,\" said Carmen, \"I really love to cook. Would I be able to help Kel?\"\n\n\"Certainly, Carmen!\" Kelly said with her bright smile, \"The more we all help the better this whole plan will work.\"\n\nFinally Kelly led us downstairs to the basement. Talk of plans came to a halt as Carmen and Lexi saw the huge bed in the center of the basement. Carmen walked over to the foot and sat down, then bounced on it softly.\n\n\"Nice mattress,\" she said with a gleaming smile, then pulled her t-shirt over her head.\n\nThat started a cascade of clothes as we all hurried to get undressed. Lexi pulled me close, wrapping her body against me and pulled my head down to kiss her. I saw Carmen slide back on the bed with Alyssa crawling after her. Then I felt Kelly hug me from behind pressing her breasts into my back. The three of us shuffled over and fell onto the bed.\n\nI spent many minutes kissing Lexi, cupping her small breasts and playing with her taut nipples. Kelly was busy below my waist licking and sucking on my engorged cock. I looked over to where Alyssa laid over Carmen as they both engaged in a lusty sixty-nine, moaning and lapping hungrily at each other. I snaked my hand down to cup Lexi's pussy, my fingers feeling her excited wetness as I wriggled my fingers inside of her.\n\n\"I need more than fingers, Jeremiah.\" she said breaking our kiss.\n\nKelly grabbed me by my shoulders and laid me back on the bed. I swiveled my legs from under me. Lexi pounced, straddling my thighs, then raised herself up and impaled herself on my rigid cock. My hands went to her waist, but then my vision was obscured by Kelly's tan thigh lifting over my face. I moved my hands to her thighs as Lexi started moving up and down my pole. I pulled Kelly down and started licking her tasty pussy.\n\nOur room was soon filled with the joyous sounds of passionate lovemaking. Lexi rode my cock hard. She liked to go fast like she was galloping on a horse. Kelly rubbed her pussy over my face to a slower rhythm. I was stuck in the middle, not that I minded. Lexi's pace enabled me to hold still and just let her ride. I concentrated on lapping Kelly lovingly, enjoying her taste, the feel of her velvety folds, and her moans of encouragement. She responded lustily, her hips beginning to move faster. I moved a finger to enter her and it slid easily deep inside. I added a second and finger fucked her while my tongue lapped at her hard clitoris. The three of us rode our building orgasms together.",
        "Lexi won the race, leaning back like a racer hitting the finish tape and moaning loudly. Feeling her pussy quake, I thrust into her and jetted deep inside of her. Kelly moaned loudly while watching Lexi quiver through her orgasm and spent into my mouth. I greedily drank and swallowed her offering before she rolled off of me. The two of them slid up beside me and snuggled closely and I dozed off.\n\nA shift in the mattress stirred me, I felt Lexi roll away from me, and another warm body take her place. I opened my eyes and saw Carmen's dark eyes looking at me. I felt her breasts against my side and she leaned down and kissed my lips.\n\n\"Nap time is over stud,\" she said sultrily, \"time to play.\"\n\nI slid my hand behind her head, combing through her black hair. I kissed her deeply, feeling her tongue ambitiously explore my mouth. I rolled towards her rolling her onto her back, pressed close to Lexi who was snuggled close to Alyssa sucking on her nipples. Kelly slid down the bed and off, then walked over to Alyssa's other side and started suckling her other breast. I noticed Lexi lean over and kiss her old roommate as Alyssa combed her fingers through their hair.\n\nCarmen shifted under me, sliding away from the threesome as we continued our passionate kissing. I kissed her jaw, then down her neck, slowly covering her mocha skin with sucking kisses. I lowered my mouth to her breasts sucking in her dark nipples and I heard her moan in pleasure as my tongue lapped her stimulated buds. My hands massaged her round breasts as my mouth and tongue stimulated her tender tips.\n\nThe sounds of her arousal filled me and I felt my cock stiffen against her thigh. I continued kissing down her lithe dancer's body, enjoying her taut stomach muscles. My hand slid down and cupped her sex, fingers plying through her dark short pubic hair. I lowered my mouth to her mound and blew softly over her wet curls. I heard her hiss in response then lowered my mouth to her sex, sucking her extended lips into my mouth.\n\n\"Oh Jeremiah,\" she cooed, \"That's it baby, lick my pussy.\"\n\nI did as she instructed, using my tongue to slide her lips open and tasting her delicious juices. My cock was throbbing and I raised myself up on my knees. Her eyes lifted to mine and she smiled brightly.\n\n\"Mmmm yes, baby,\" she instructed, \"lemme feel that cock in me.\"\n\nI notched my engorged cock head against her open lips, and pressed my hips towards her. Her eyes rolled back into her head as she felt me enter her. I grabbed her ankles and lifted her legs up and out, opening her wide for me as I started to steady fucking motion.\n\n\"FUCK,\" Carmen exalted, \"I missed your cock, baby... FUCK ME FUCK ME HARD.\"\n\nI pushed her legs back towards her torso her knees bent back almost to her shoulders. I fucked her hard and fast, my earlier orgasm kept me from going to the edge to quickly. Soon Carmen was moaning in constant ecstasy urging me to fuck her harder and harder. She grabbed her knees, freeing my hands to fill themselves with her bouncing breasts. My thumbs grazed over her hard nipples as I rutted into her, hammering my cock deep into her pussy.\n\nI glanced at the bed beside us and saw Alyssa between Kelly's thighs. My eyes traveled along Kelly's sexy curves until her face disappeared between Lexi's freckled legs. Then I traced along Lexi's undulating form until I saw Alyssa's thighs clamp around Lexi's head.\n\n\"YES, God!\" Alyssa moaned into Kelly's pussy, \"Fuck! LEXI! CUMMING!\"\n\nThe whole chain of female flesh was soon quivering through orgasm as I felt my own peak building in the base of my balls. I glanced back down to Carmen, seeing her watch the other three. She turned her face back to me, and bit her lower lip.\n\n\"DO IT!\" Carmen spat at me, \"FUCK! MAKE ME CUM!\"\n\nI rammed into her harder and faster than I thought possible. She was oozing wetness, but the furious fucking I and her own heat made me feel like I was rocking my cock through a molten substance. Even with her legs pulled back, Carmen was lifting her hips, meeting my pounding thrusts. Abruptly she froze and her eyes rolled back into her head. Her body jerked and I felt her pussy clamp around my cock like a vise. Ripples of contractions milked my shaft as I bottomed out into her and roared out my own orgasm.\n\nI closed my eyes, locked into a powerful thrust as I felt Carmen quiver beneath me. I opened my eyes to see her looking at me with wide eyes. Her body still shaking with the after shocks of her powerful orgasm. I released her breasts and she lowered her legs as I rolled off her towards the other three girls still recovering from their tryst. As we caught our breath all of us arranged ourselves. My arms around Carmen and Alyssa, while Kelly and Lexi cuddled on Alyssa's other side. My eyes grew heavy and I fell asleep.\n\n------ Epilogue:\n\nJeremiah clicked Save, and watched the network indication show his confessions had been safely saved in the cloud. He shut the lid to his laptop, and stroked his beard, lost in thought. A smile of remembrance flickered through his eyes. Standing and packing his laptop into his satchel.\n\n\"Any more clients today?\" Jeremiah called out through the open door to his finely furnished office.\n\n\"No Doctor, all done for today,\" came the cheery response, as Lexi peeked her head through the door, \"Can I get a ride home, Sir?\"\n\n\"Of course,\" Jeremiah laughed, \"since I'm going to the same house you are, it makes the most sense.\"\n\n\"And we'll save the planet by burning less gas,\" Lexi offered, winking at me, \"I'm hungry.\"\n\n\"Me too,\" Jeremiah agreed, \"I wonder what Carmen's cooking?\"\n\n\"Kelly told me it was taco night, when I called home earlier,\" Lexi explained.\n\n\"I've always loved taco night,\" Jeremiah smiled tossing his satchel over his shoulder, and walking towards Lexi.\n\nShe leaned against the door, her short pencil skirt accentuating her slim muscular legs. A modest professional blouse revealed just enough of her perky breasts to stay professional and elicit a bit of desire in Jeremiah as he walked up and hugged her close, kissing her cheek.\n\n\"I'm looking forward to dessert,\" Lexi breathed into his ear, then pulling back and looking into Jeremiah's eyes.\n\n\"Me too,\" Jeremiah agreed, \"Let's collect Alyssa and head home, you know how Carmen gets when we're late for her cooking.\"\n\nJeremiah held Lexi's hand as they walked across the lobby of the offices of Jeremiah Jackson & Associates Professional Counseling, LLC. Jeremiah stopped and let Lexi enter Alyssa's office first before following her through.\n\n\"Any new prospects, today?\" he asked Alyssa.\n\nAlyssa looked up from her computer screen, her librarian style glasses, and dark chestnut hair falling over a soft red sweater as she focused on her co-workers. She smiled and nodded.\n\n\"The Kwon's fit the profile for your intervention perfectly,\" Alyssa recited, as she went down the list, \"They are set to start the profiling step next week. I'm working on the Carlise's and Shephard's. We also have a potential pre-marital counseling with a couple from the University. I know you love the younger couples.\"\n\nJeremiah blushed, \"Aly, I don't get that involved anymore, your protocol allows me to not become so intimate with our clients.\"\n\n\"Not that there's anything wrong with that,\" cooed Lexi, wrapping her arms around Jeremiah with a squeeze.\n\nAlyssa smiled at Lexi and winked, then looked up at Jeremiah, \"Don't you wish you could bend the rules a little now and then?\" She looked down at her notes, \"This ... Samantha, or Sammi, is quite the physical specimen.\"\n\n\"Fuck me,\" Jeremiah sighed, rubbing his palm across his face.\n\n\"Maybe I will,\" Alyssa offered.\n\n\"I think you'll have to take a number, \"Jeremiah grinned, squeezing Lexi's behind.\n\n\"Kelly and Lexi never mind sharing, and Carmen has been so randy lately, we might all be fucking you,\" Alyssa admitted unbuttoning the top button of her sweater, standing up and flicking off her computer.\n\n\"Let's get home quickly,\" Jeremiah answered, \"It's taco night!\"\n\n\"I love taco night!\" Alyssa cooed, as she took Jeremiah's hand. and the three of them left the offices, heading back to the house they had all shared for the last twenty years.\n\nAuthor's Note:First I'd like to thank you all the readers that have read, commented and voted through this series. It brings me great satisfaction to know that people have read and enjoyed my story. Which only makes the next part harder to write.\n\nFor personal reasons, I'm suspending my writing at Literotica. The story of Jeremiah and his Designing ability will have to pause for the foreseeable future. I hope I've provided enough details to provide some resolution to the questions I advanced in the initial chapters. \n\nI realize there are some new branches in these last chapters, I hope you can use your own imaginations and come to your own conclusions. Perhaps the muse will return and I'll be able to pick up the traces and write again. If that happens, the stories will be in Novels and Novellas and the erotic content will be greatly reduced.\n\nAs with all the chapters of The Designer, editing props go out to sportychica334 who has been a constant encouragement to telling this story. Additionally, Karenas has assisted me greatly in bringing the characters to life, and keeping the story on track. \n\nThank you for your understanding, your readership, your comments and your votes."
    ],
    "authorname": "HankDolworth",
    "tags": [
        "college",
        "coed",
        "threesome",
        "ffm",
        "fff",
        "romance",
        "drama"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-designer-ch-17"
}