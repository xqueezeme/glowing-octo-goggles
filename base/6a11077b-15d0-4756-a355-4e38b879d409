{
    "title": "My Name is Raquel Ch. 05",
    "pages": [
        "You may have noticed an error in the originally published episode. It was a distraction that I have fixed in this version. Enjoy.\n\n*******\n\nMy name is Raquel and I'm a crossdresser.\n\nMy nearly lifelong panty fetish, that I had kept from my wife of 15 years, was discovered by my stepdaughter, Jessica, while I was lying on top of my collection spread out all over the master bed wearing a pair of blue boyshorts with pink lace around the waist and masturbating. She had also observed me drinking my precum and watching transvestite and transgender porn.\n\nShe indulged my panty fetish by combining my collection with her own panties and allowing me to pick and choose which ones I wore. We began swapping panties back and forth that we had worn and cum in. On nights my wife, Allison, was out with her childhood friend, Crystal, we would get together, have a \"panty party\" where we would hold private fashion shows and watch each other masturbate.\n\nJessica is the first person to put all the clues together and recognize the inner Raquel in me. She helped me transform into her and began dressing me in all varieties of lingerie, not just panties. She taught me the finer arts of makeup, wearing and walking in heels, speaking like a girl, and most importantly acting like a girl in bed, eating her pussy, sucking her strap-on dildo, and taking it in my manpussy. Luckily, Jessica and Allison literally had NO secrets.\n\nAllison surprised me by figuratively and literally embracing my transformation into Raquel. She was not angry in the least bit that I had hidden my panty fetish. She understood how I might have feared revealing something that most people wouldn't accept. She was sincerely apologetic for not being the one to see Raquel, for not being the one to help draw her out.\n\nShe confided that, after seeing me transformed into Raquel for the first time, it became obvious that my sensitivity to her sexual needs as a woman, the way I acquiesced to keeping my man clitty and legs shaved, the way I was always eager to perform cunnilingus, and especially, my willingness to kiss her after she gave me blow jobs and even clean her pussy after sex were traits that had always attracted me to her. She acknowledged that she had ignored these signs even though she had personally witnessed them in her childhood friend, Crystal.\n\nCrystal had been born a boy, Christopher, and Allison had helped her transform. When they were 18, they became lovers. What I had assumed were innocent girl's night out and weekend girl's trips were a continuation of their lifelong love affair in every way except physical sex. Although they had not sex since Allison and I became engaged, they were as close as two people can be.\n\nCrystal was transgender, choosing not to go full out, but she had had a beautiful set of breasts.\n\nPre-Raquel, I would say that Allison's and my sex life was at least above average. After I revealed Raquel to Allison, it rose to another level. I threw out all of my men's underwear and always wore at least a pair of panties and stockings under my regular clothes. I loved weekends the most, though, when I could transform for two full days. Our sex life was filled with sexy underwear, pussy licking, and strap-on dildos or butt plugs in my manpussy.\n\nWhen Allison confided my identity as Raquel to Crystal, and the two of them concocted a plan for a threesome, our sex life went off the charts. They surprised me one weekend and for the first time I got the chance to suck something other than a dildo. I got to taste real cum that wasn't mine. I got to experience a flesh and blood cock in my cunt. I got to feel one exploding inside me, filling we with semen. I got to be double-penetrated, Allison fucking me from behind, Crystal fucking my mouth. The three of us began spending lots of time together and Crystal became like my mentor, constantly refining Raquel into the girl she was meant to be.\n\nIn addition to wearing lingerie, I started fully dressing. I was extremely lucky that I was practically the same size as both Jessica and Allison, and Crystal for that matter. The only difference was my lack of titties, so all of my bras were A-cups. With a careful diet and exercise regime and tips from Crystal, I was able to trim down, tighten my butt, expand my hips a little and fit into their clothes even better. Our feet were even the same size.\n\nSo, while I basically started with a full wardrobe: cocktail dresses, minidresses, sun dresses, skirts, blouses, sweaters, skinny jeans, flats, platform sandals, stiletto-heeled pumps and boots, not to mention lots of makeup and jewelry, the three women in my life, my girlfriends, I called them, loved taking me out in public as Raquel to go shopping for things of my own. What more could a girl ask for?\n\nI got plenty of stares, but none that said, \"What's that guy doing in drag?\" Allison, Jessica and Crystal all recognized the stares. They assured me that the women were looking at me saying to themselves, \"I wish I had her figure. Or, I wish I was her.\" And the guys were thinking, \"I wish my wife or girlfriend was that hot! Or, I'd like to fuck that!\"\n\nThat brings us to this weekend.\n\nAllison and Crystal invited me to go on my first girl's night out with them. They decided that we should go to one of their favorite places. Crystal came over early so we could pregame. I was going to have a beer and got a look from Crystal that said, \"Girls don't drink beer.\" She suggested a Cosmo, which I really liked. We each had a few cocktails and started planning our outfits.\n\nI wasn't familiar with the bar we were going to and asked what it was like. At this bar, Allison said, \"Saturday nights are lady's nights and, unlike most bars that have lady's nights to draw male customers, this place caters more to ladies like us.\" I cracked, \"Who needs men, anyway?\" Crystal said, \"Well, dicks aren't a bad thing.\" I giggled at her response.\n\nWe decided that since we had enough time, we would get ready one at a time.\n\nCrystal went first. Since she was spending so much time at our place, lately, she had plenty of outfits she kept in the guest bedroom. Either way, since we were all basically the same sizes, she could have just worn anything in the house.\n\nShe chose a black lacy thong, a matching black bra, and a black garter belt and stockings. She put on a black minidress that barely covered her fine ass and picked out a pair of short black boots. Her black leather wristlet with gold spikes, gold hoop earrings, and gold chain necklace added some bling. She chose black fingernail polish and black lipstick, as well as dark grey eyeshadow to complete her \"Goth Meets Hooker\" look.\n\nAllison went with a pair of white crotchless panties with laces on both sides, holding the front and back together. She added a white lace balconette bra and white thigh high stockings. She went with a black and white plaid, pleated miniskirt and white blouse, tied in a knot below her tits. She wore a black lace choker around her neck. Her 5-inch red patent leather stiletto pumps made her calves and her butt tight. She chose eyeshadow in several shades of blue blended together, painted her nails blue and her lips in a red shade, as shiny as her pumps, to finish off her \"Slutty Schoolgirl\" theme.\n\nWe had helped each other throughout the process, now it was my turn. All of this lingerie, makeup, dressing, and accessorizing had gotten me hard. Crystal rubbed my erect clitty and said, \"This won't do.\"\n\nI said I couldn't help it. \"Well I can help it.\" She knelt in front of me and proceeded to give me a quickie blow job. I went along and didn't try to prolong it. It only took a few minutes of her expert sucking for me to blow my load. \"Mmmmmmmm, tasty,\" was her response, as I filled her mouth.\n\nKnowing how much I loved my own cum, she saved a little for our post-BJ kiss. Then it was my turn to, \"Mmmmmmmm.\"\n\nAllison stared at us with contrived impatience and asked sarcastically, \"Are y'all finished? And, by the way, Crystal, why did you get to suck her off?\" \"First \"cum\", first served,\" she replied with a smile. \"Well, we've still got work to do on Miss Raquel. Let's get busy.\"\n\n\"Sorry, dear. It was all my fault,\" I said sheepishly, with a sad pouty face. She laughed and punched me in the shoulder.\n\nI was pretty adept at transforming myself into Raquel, by now, but the girls insisted in taking over this time.\n\nFirst, Crystal presented me with a brand new set of nude colored Victoria's Secret lingerie. The panties were cheekies and the bra was a Dream Angels Demi Bra. They looked luxurious. However it didn't take a lingerie expert to see that the bra wasn't an A-cup. I coughed, \"Ahem,\" and held my hands, palm-up, cupping my non-existent breasts. She said, \"Honey, I thought about that,\" and opened another bag and pulled out a set of C-cup breast forms, with nipples.\n\nCrystal applied adhesive to the forms and expertly placed them on my chest. Fortunately, my regular grooming included complete hair removal below the neck, except for a landing strip above my clit, so there was no pesky chest hair. She used makeup foundation to make the edges nearly invisible.\n\nWith my new breasts in the way, I had to learn a new trick, though, putting my arms through the straps and clasping it in the back, rather than just hooking the clasps in the front and spinning it around. Allison saw me struggling and said, \"Come here, Baby, let me help.\"\n\nShe stood behind me and hooked my bra, then helped me adjust it in the front so it showed the right amount of cleavage. Her hands lingered, copping a feel. \"I really like this,\" she purred. I looked at Crystal and mouthed, \"Thank you, thank you, thank you!\" The weight and the bounce my new titties added were a fabulous new feeling.\n\nNext, Allison told me to sit on the bed. She slid the panties up my smooth legs. I stood and Crystal said, \"Let me show you a trick.\" She grabbed my flaccid girlcock and tucked it back between my legs, then pulled the panties up snugly into my crotch. I looked down and it almost created a camel toe effect, albeit, a little lopsided, but it felt good. Allison helped me put on a pair of shiny thigh high nude stockings and said, \"Time for your makeup, now.\"\n\n\"I know you normally put on your own makeup, and you do a fantastic job, but just sit back and let us make your first girl's night face.\" I didn't mind and I definitely wasn't offended. As a matter of fact, I loved being pampered.\n\nThey settled on a pink motif. They spent extra time adding false eyelashes and the right blend of powders and pink blush. Then they applied pink eyeshadow and hot pink lipstick. Lastly, they applied long fake nails and painted them hot pink, as well.\n\nMy outfit included a tight black leather miniskirt and a light pink blouse with just enough buttons undone to show my new cleavage. Above-the-knee black boots with 3-inch spikes left the tops of my stockings showing between the boots and my miniskirt.\n\nThey picked a short layered cut blond wig, glued on, 3-karat diamond stud earrings in silver settings (a special gift I had actually given Allison) and a silver cuff bracelet for my left wrist. They decided my look was \"Hot Chick Meets Classic Chic\".\n\nWe were ready to go out. One chick and two chicks with dicks.\n\nI had kept the Cosmos coming during our preparation, but we celebrated the final results of our efforts with a shot of tequila and booked an Uber.\n\nBefore our ride arrived, they informed me that they had talked and decided that if the opportunity presented itself, hook-ups would be okay if all three of us was comfortable with it. This was new territory. But what wasn't new in our lives, recently? I wasn't sure about it, but agreed to keep an open mind.\n\nWe got to the bar and found a booth. When the waitress came by, I ordered my new favorite drink, a Cosmo for each of us. The place was clean and the music was a mix of electronic and my favorite 80's pop and rock, something one would think catered to women. We were cutting up, drinking and being catty about some of the girls in the bar. The three of us danced together to a number of songs.\n\nUpon returning to our booth after one dance session, I noticed a table with three hotties about thirty feet away, a redhead, a blond and a brunette one of each, like us. They were three of the best looking girls in the bar.\n\nAllison caught me looking. \"They're hot, aren't they?\" I feigned innocence.\n\n\"What? I hadn't noticed.\"\n\n\"Yeah, right. It's okay to look, you know?\"\n\n\"Well, yeah I may have noticed them.\"\n\nCrystal noticed them too, because they were also checking us out. She said, \"I don't know what you think, but beside you two, those are the prettiest three ladies here and I think I've seen them in here, before.\"\n\nI don't know why, because the two hottest babes I've ever seen were sitting with me, maybe it was all the Cosmos (and the tequila shot), but me eyes kept wandering over to them.\n\nThey, too, noticed the attention they were getting from us and got up and started walking over towards us.\n\n\"They're coming over,\" I said. \"How do I look?\"\n\nCrystal leaned in close and whispered in my ear, seductively, \"Hhhhott!\"\n\nThen they were standing right in front of us. The redhead spoke up, \"You girls looked like you're having fun. Would you mind if we joined you?\" Crystal and Allison looked at me, wanting me to give a sign as to whether I was ready. I replied to the new girls, \"We are and we'd love for you to.\"\n\nThey introduced themselves. Janet was the redhead. Niki was the blond. Lynn was the brunette. Allison, Crystal, and I slid around so they could fit in the booth. The booth was large enough for the six of us, but just enough. Crystal and Allison were to my left, with Allison on the end of the booth. I was in the middle of the booth. Janet slid in first, next to me on my right, followed by Niki and Lynn.\n\nWe carried on drinking and chatting. All the while, Janet kept inching closer to me, until our legs, hips and shoulders were touching. At some point, she casually raised her left arm and put it on the back of the booth, then let it slide down around my shoulders. Allison noticed and threw me a wink.\n\nAn 80's song from the Pretty in Pink soundtrack started up. Janet said, \"Ooo, this is one of my favorites!\" \"I love this movie and the soundtrack, too,\" I said. \"Let's dance!\" Janet said, basically to the whole table. So we all headed to the dance floor and danced together.\n\nTwo songs later, a slow song started. Everyone headed back to the booth. I started to, when Janet grabbed my hand and said, \"Wait! I like this one, too. Dance one more with me.\"\n\n\"I'd be delighted to.\"\n\nI didn't know who should lead, but Janet took the initiative and pulled me close and put her arms around my waist with her hands just above my ass. I went ahead and put my arms over her shoulders. I nuzzled her neck and noted a hint of Chanel, my favorite perfume. My head was spinning. My tucked dick was enlarging and growing backwards towards my butt crack. The song ended and Janet kissed me. It was lip to lip, but didn't last long. I barely had time to kiss back. Then it was over. What a tease.\n\nWe returned to the booth. Allison and Niki were sitting next to each other and were kissing. Crystal and Lynn were likewise making out. When Allison saw Janet and me, she asked, \"Are you ready to go?\" I didn't know who she was asking.\n\nShe said, \"We're ready to go. Niki and Lynn are coming back to our place. Would you care to join us, Janet?\"\n\n\"Does that mean Raquel is going? If so, that's a yes.\"\n\nI really didn't know what I was expecting. This whole scene was alien to me. Allison and Crystal had hinted that the girls at this bar might be girls, or they might not. With Janet, Lynn and Niki, I couldn't tell either way. I didn't care, either. As It turned out, later, Lynn and Niki were girls, Janet was not, although, at this point, I still did not know.\n\nWe were going to order an UberX, but just as we got outside, a limo pulled up. A group of girls piled out and headed into the bar.\n\nI asked the driver if he had to wait on his customers. He said that he was free for a couple of hours and could take us wherever we wanted to go as long as he could be back by then. It was perfect timing.\n\nAllison and Niki, and Janet and I fit across the back seat, comfortably. Crystal and Lynn sat together facing us, with their backs to the driver.\n\n\"Would you ladies like some champagne?\" The driver offered. \n\n\"Yes!\" we replied in unison. Crystal did the honors and popped the cork and began pouring and passing out flutes.\n\n\"I love champagne, the bubbles tickle my nose,\" Janet giggled. \"Cheers!\"\n\nThe 30 minute ride home was mostly silent after that, as we all began kissing.\n\nMy hand was on Janet's stockinged knee. I began rubbing her thigh, slowly going higher and higher. When I got to the hem of her very short skirt, she playfully slapped the back of my hand and whispered, \"Wait, you naughty girl.\" So I had to be content with French kissing her and nuzzling her neck, inhaling her enticing perfume.\n\nIt was dark in the back of the limo, but I was sure I saw the other girls getting at least to second base. I was jealous.\n\nWhen we arrived home, I paid the limo driver and we practically ran inside. Although with my tight shirt and heeled boots, one could scarcely call it running.\n\nOnce inside, Allison offered, \"Would you girls like another drink, or would you prefer to retire to more private settings?\" As worked up as we were, private settings were the unanimous choice. Allison laughed, \"Whew. I'd hoped you would say that, I just had to offer.\"\n\nI had decided to give Allison and Niki the Master suite. Crystal and Lynn would go to the guest bedroom, Crystal's new home-away-from-home, which had it's own on-suite, too. And Janet and I would use my oasis, my Shangri La, Jessica's room. We said our good nights, but before going our separate ways, I demurely shook Niki's and Lynn's hands and gave them hugs and kisses, saying, \"It's been so nice meeting you. I'll see you in the morning.\"\n\nI gave Crystal a goodnight kiss and while the rest of the girls were telling each other good night, I hugged Allison tightly and kissed her tenderly saying, \"Thank you, my love. I love you more than you could ever know.\" She smiled a smile that melted my heart. \"I love you, too, Raquel. Now go enjoy yourself.\"\n\nOnce we were in my Garden of Eden, where Raquel had come to life, I wasn't as impatient as I had been in the limo. Janet and I kissed for a while and we talked some. We told each other about ourselves and how we came to where we were tonight. That's when I finally confirmed she was like me and not a female. We had remarkably similar stories. It was hard to believe because she was so feminine, so pretty.\n\nShe said, \"You don't know how lucky you are, to be a gurl, like me, and to have a wife like Allison, who loves you how you are.\"\n\n\"Trust me, I know and I thank my lucky stars every day.\"\n\nShe complimented my transformation, too. And she admitted that even though she had been transforming into Janet for years she had had a hard time figuring out that I wasn't a female at first. \n\n\"Thank you, that's probably the most perfect thing you could have said to me.\" I blushed.\n\n\"There's one more thing I have to tell you.\" My mind immediately went to the negative and I thought, \" Uh oh, here it comes.\" \n\nAlthough I didn't know what \"it\" was. What she told me surprised me, but in a way it didn't. And it wasn't an uh-oh moment.\n\nShe said, \"My friends and I have been going to that bar for years. We've seen Allison and Crystal there many times. And they always just seemed like the perfect couple. I mean, sure they danced with a lot of other girls and looked like they definitely partied, but I've never seen them leave with anyone, always just the two of them.\"",
        "\"You don't know how much it means to me to hear that. That's sweet of you to tell me,\" I said. \"So, what made you decide to hit on us tonight?\"\n\n\"First, their attitudes were ever so slightly different. And second, when I saw you with them, I said to myself, \"Janet, you're looking at an angel,\" and I just had to try and meet you, even if I thought my advances would be shot down.\" I know she could see me blushing, now, even through my makeup. \"To be honest, my girlfriends and I don't go there to hook up all that much.\"\n\n\"Well, I guess we're the two luckiest girls in town, tonight. Now let's stop talking,\" I grinned. \"Show me what I've won.\"\n\nShe stood and started her striptease. I sat on the edge of the bed and watched. She kicked off her heels, unzipped and shimmied out of her skirt, and unbuttoned her blouse. She faced away from me and looking back over her left shoulder pulled the blouse off that shoulder. She turned and looked over the other shoulder and repeated the move, letting the blouse drop to her shoulder blades pausing a moment, then letting it fall to the floor.\n\nShe bent at the waist and peeled one of her stockings to the floor. With her back to me, I had a stage front view of her ass. She pulled the other one down, shaking her moneymaker at me. She spun around and unhooked her front-clasp bra, opening it like a book, to expose her breasts. They looked incredibly lifelike, but as I soon found out, were prosthetics like mine. Lastly, she pulled off her panties, and out from between her thighs dropped her previously tucked ladycock.\n\n\"How have you kept that thing hidden?\" I gasped. It was a monster.\n\n\"Very difficultly, and with a special adhesive,\" she replied. \"I definitely couldn't let your attempted seduction in the limo, make me hard.\"\n\n\"My attempted seduction? Come here, I'll show you seduction!\"\n\nWe switched places, her sitting on the edge of the bed. I was eager and I quickly stripped down to my bra, panties and stockings and knelt on the floor between her legs.\n\nShe was already starting to leak precum. I ran my tongue up the bottom of her shaft and right across the head. She moaned. My god, her precum was absolutely delicious.\n\nI certainly knew how I liked my clit treated, so I held hers firmly with one hand and stroked it lightly with the other. I felt her hands on my head. They were just resting lightly. But she remained passive and gentle while I began to bob my mouth up and down her cock.\n\nI had trained my mouth and throat vigorously, and after making sure my mouth and Janet's cock were both lubricated enough I pushed all the way down until my nose was buried in her pubic hair, a little heart shaped patch. She gasped, perhaps shocked that I was able to deepthroat her. I loved the feel of her thick member pulsing in my throat.\n\nFinally I felt her hands grip my head and I thought, \"Yes! Do it! Fuck my mouth and throat!\"\n\nShe sensed my desire and rocked her hips back and forth on the edge of the bed, shoving her cock deep in my throat. Her desire for me spurred me on and I wrapped my lips around the head of her cock and began using my lips and tongue to slowly swirl and slurp. I was in paradise!\n\nAll I wanted was this goddess's throbbing cock in my mouth and throat and hands. I expertly worked her dick for at least a half hour, when she suddenly pulled me back. I looked up at her with nothing but raw lust.\n\n\"I'm about to cum,\" she gasped.\n\n\"Yes,\" I hissed. \"I want it. Please! Fill my mouth with cum.\"\n\nHer hands became firm on my head. I reached up and held them there with my own hands. I felt her pull my head forward almost undetectably.\n\n\"Yes,\" I begged. \"Yes. I want that.\"\n\nI was breathing heavy. I was panting. I was possessed. I relaxed my mouth open into an \"O\" and slid my mouth off for a second to catch my breath. Her eyes gleamed and her hands wrapped around the back of my head and into my hair.\n\nShe pulled my head forward again and I didn't resist. When her cock passed my lips again I wrapped them tightly about her shaft and began sucking while she made love to my mouth.\n\nJanet wasn't rough, she just held my head like a man might hold a woman's hips and made slow, passionate love to my mouth, sliding her cock into my willing throat every fifth or sixth stroke.\n\nEvery nerve in my body and mind was on fire with joy and pleasure.\n\nIt was not long before I heard her start to moan and her thrusts became more frantic and forceful. Every thrust drove her cock forcefully into my throat and I was in heaven. I looked up into her eyes again and begged her with my eyes. I wanted her to fill my mouth with cum so badly, and I wanted her to see how badly I wanted it.\n\nHer eyes stayed locked on mine until I felt her cock begin to surge and her eyes crossed a little and closed.\n\nHer cock exploded cum into my eager mouth. I could feel it hit the roof of my mouth and it filled my senses. I began moaning with joy and pleasure as I swallowed again and again, not letting a drop go to waste. It seemed like she would never stop cumming and I didn't want her to.\n\nFinally her orgasm passed and she smiled down at me hoarsely whispered, \"Thank you.\" I held her flagging cock in one hand and rubbed the head against my lips and cheeks. I could feel semen smearing my lipstick.\n\n\"Oh my god! That was earthshaking!\" She scooted all the way up to the pillows and patted the bed beside her. I crawled up and lay on my right side, up against her and draped my left leg over hers.\n\nAfter, a few minutes, she began playing with my little clitty through my panties. Needless to say, after all that had just transpired I was fully erect. Her fingernails tracing my ladycock still encased in my panties sent shivers down my spine. She scooped the precum that was oozing through the front of my my cheekies and stuck the finger in her mouth. \"Mmmmmmm! I want more of that.\n\nShe straddled my chest, facing my feet, and leaned down to lick me through the satiny shorts. She said, \"Lift your hips,\" and shoved my panties down to my thighs. With her elbows on either side of my hips, she grasped my shaft and began slowly pumping more precum out of me, lapping up each dollop. My equipment was much smaller than hers and she easily took it all in with one slurp.\n\nShe then slicked up a finger with precum and saliva and worked it slowly into my manpussy. I clenched tightly around it and she squealed. She worked it in and out. I was able to reach the nightstand for a tube of lube and handed it to her. That made it much easier to add one, then another finger, as I loosened up.\n\nMeanwhile, her little o-ring was right in my face. I spread her cheeks and began tracing circles around it with my tongue. Her response was to Mmmmmmm, while keeping my entire cock in her mouth, which made it feel much like a vibrating pussy toy.\n\nAs I tightened the circles with my tongue spiraling closer and closer to the bullseye, she was working magic of her own with her tongue and gently massaging my balls. I didn't stop until I poked my tongue in her boycunt. Then I relentlessly tonguefucked it. \n\nShe pushed back harder until my nose was buried in her crack. All of this had the effect I was looking for, she had gotten hard again.\n\nJanet never stopped sucking me, though. And I've got to admit, she had skills. I pulled out of her mouth several times I was feeling close to orgasm. And used all of my edging skills to hold back. Finally, I said, \"Stop.\"\n\nShe looked back and said, \"But I'm not done yet. I haven't made you cum.\"\n\n\"I've got to have you inside me,\" I replied. \"And I promise, you'll make me cum. Besides, you've got me so ready back there.\"\n\n\"If that's what my baby wants.\"\n\n\"Yes.\"\n\n\"How do you want it?\"\n\n\"I want you between my legs, facing me, so I can watch your face while you fuck me.\"\n\n\"I love that position, too.\"\n\nShe spun around and laid on top of me first, moving slowly up and down, causing our stiffened clitties to rub together. She even reached between us and graded them together with one hand. This caused a feeling that is hard to describe, other than to say it was ecstatic. She started moving down more and more so that her tip was getting closer to its final destination, until it finally slipped past my balls and nestled against the opening of my pussy.\n\n\"Put it in me, now,\" I pleaded.\n\nShe grabbed the lube and squirted some more of it on her finger. She liberally reapplied it to my cunt. Then she put even more on her ladycock. \"Want to be sure I don't hurt you.\" She was aware of her size, something I appreciated. I'd never had anything that large, before. \"Here we go!\"\n\nThe head popped in. I inhaled sharply. She considerately stopped to give me time to acclimate. While I did so, she leaned down and kissed me, nibbled on my earlobes, and tonguefucked my ear canal. When I was ready for more, I put my hands on her ass and pulled her into me just another inch or so. I was using the breathing and relaxation techniques Jessica had thought me to no avail. Janet was just so big. But I was loving every inch so far.\n\n\"Let me know when you want more, baby. And let me know when to stop.\"\n\nI squeezed her ass and gave another pull. \"Thanks. I want all of you and I don't want you to stop until I have it, beautiful.\" She had seven inches in me. \"Now! Give me all you've got!\" She plunged the rest of the way and her balls slapped my ass. \"Ohhhhhhh, yeah! Hold that, right there!\" My ass was stretched to it's limits. She held it there, embedded deeply in my pussy.\n\nBut, because we had taken it so slow, I was now ready for action.\n\n\"Fuck me, Janet! Fuck me hard!\" She responded and began pumping in and out. \"Ohhh, Raquel, you're so tight!\" I kept clenching and unclenching, kneading her with my sphincter.\n\nI lost track of time. She fucked and fucked and fucked me. And she fucked me some more. \"Cum in me, Janet fill my pussy!\"\n\n\"Keep talking to me like that!\"\n\n\"Shove that cock into my cunt! Fuck me! I want your juice to fill my vagina. I want so much cum, that it overflows and runs down my crack! Flood me with you jizz!\" I got my wish.\n\n\"Raquel, I'm cummmmming!\"\n\nI felt her love muscle pulse time and time again. There was so little room in my pussy for anything other than Janet's cock, that it squirted out around the edges and did, in fact run down my crack.\n\nThat was my cue. Without ever touching my clitty, I felt it. My orgasm hit with such unprecedented intensity, all I could manage to get out was her name. \"Jannnnnnet!\" My ejaculation was with such force, the first shot fired up and splattered off her breasts forms, coming back down and splattering all over my torso. The second shot arched and part of it actually landed in my open mouth. The remaining shots soaked my chest and abdomen.\n\n\"Wow! I've never seen anything like that.\"\n\nI replied, \"Me neither. That's not typical, for sure. I guess I have you to thank for it.\"\n\nWe laid there until her cock had deflated enough to fall out of my pussy. \"I've got to have a taste of you,\" she said. She shifted down and licked my stomach.\n\n\"Kiss me!\" She scooted back up and let me taste myself on her lips.\n\n\"Here, give me your hand.\" I took her hand and held it below the opening of my pussy and squeezed out a load of her cum into her palm. I lifted it up to my chest and turned her hand over to pour it into the puddle of my own, resting between my fake breasts. I folded her middle, ring and pinkie fingers up and used her index finger to stir two gooey liquids together. \"Now, try that.\"\n\nShe licked up a mouthful, \"Yummy!\"\n\n\"Be a good girl and give your sweetie a taste.\"\n\nShe sucked up another mouthful, moved up until our lips were touching. I opened my lips and used my tongue to part hers allowing the combined elixir to run into my mouth. I savored it, waiting a minute or two, before swallowing.\n\n\"Cuddle with me,\" I said as I rolled into the little spoon position. She obliged.\n\nShe stroked my head and I thought I heard her say, \"I love you, Raquel!\" Because, you know, Raquel is easy to fall in love with.\n\n\"I love you, too, Janet.\"\n\nThe next morning after a couple of quickie blow jobs, one for me and one for Janet, and after freshening up our makeup, we put on our panties and bras, wrapped up in a couple of satin robes and headed to the kitchen for coffee. We were the last two girls to arrive.\n\nAllison, Crystal, Niki and Lynn fell silent when we walked in and all eyes turned to Janet and me.\n\n\"What?\"\n\nCrystal (of course) spoke up. \"Well, if loudest equals the most fun, we're looking at last night's winners!\"\n\nThe room erupted in laughter.\n\nAfter hanging out for a while, our new friends got ready to leave. We all hugged and kissed and said our goodbyes We promised to stay in touch and exchanged phone numbers, and Facebook profiles (Raquel has her own recently created profile).\n\nAllison said, \"Well?\"\n\nWe took our coffees to the den and I told them about my night, not leaving out any of the details. We sat around the rest of the morning swapping stories. Allison had had her first true lesbian night and really enjoyed it.\n\nMy name is Raquel and I'm a crossdresser."
    ],
    "authorname": "Raquels_Panties",
    "tags": [
        "anal",
        "crossdresser",
        "girls night",
        "transgender",
        "anal sex",
        "first time"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/my-name-is-raquel-ch-05"
}