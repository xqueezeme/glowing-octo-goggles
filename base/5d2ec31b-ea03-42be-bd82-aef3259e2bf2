{
    "title": "The Proposal Ch. 02",
    "pages": [
        "It was simply called The Club, something that the members often joked about. It was a total lack of creativity, just the thing one would expect from an organization founded by mining engineers well over a hundred years ago now. Then the bankers had taken it over, eventually joined by lawyers and doctors, until The Club was the premier social organization in the city. You had to be invited in by another member, and then screened by a board. The fee was exorbitant, but the connections, access, and perks it bought were well worth it. Or so everybody that was a member tried to convince themselves.\n\nJonathan had been a member for years now, and the price did not even register anymore. Years ago, he had written it off as a business expense, but it was more of a social thing, since most of his friends were members as well.\n\nOne such group of friends meet every two weeks, usually for golf and lunch. But today it was only lunch, the late winter weather not really supporting the whole golf thing.\n\n\"We should go to Hilton Head or something, get out of town for a long weekend.\" Randy had made his money in trees. With a city ordinance that required trees to be planted according to a complicated formula based on square footage of building space, he was guaranteed to be in business for a while. The city was growing.\n\n\"I don't know. If we are getting on a plane, lets go all the way to Arizona, Mexico, something really good.\" Markus was a lawyer as well as a doctor by trade. He was also probably the smartest man at the table, something he would deny if you asked him. The devout Catholic was the father of six, and the only one here to have never been touched by the cold hand of infidelity.\n\n\"South Florida. I was watching the weather channel this morning; it was 80's down there. Unfucking real. If we go, I want to bring the toy.\" Morrison had made his money in real estate, working closely with Randy. The two were peas in a pod when it came to money, but total opposites in most other things. The toy was his current mistress, instantly drawing a scowl from Markus. He rarely said anything about his friend's habits, but everybody here knew that he did not approve. But he also firmly believed that they would all just burn in hell for it. His priest had told him so.\n\nJonathan listened to the conversation, his mind turning over the things that his brain and his heart were telling him. The Duty Brain cell had been swamped along time ago, so he had turned down the normal glass of wine he indulged in at these meetings, trying to work through how he felt. The sudden silence at the table ripped him out of his thoughts, as he realized that everybody was looking at him.\n\n\"What?\"\n\n\"Boca?\" Randy rolled his eyes. He couldn't stand it when somebody did not keep up in conversation.\n\n\"What?\"\n\n\"Golf. Boca Raton?\"\n\n\"Fuck, let's go to Vegas.\"\n\n\"Vegas?\" Markus was not a big fan of the gambling. But he salivated at the golfing offered there. He didn't like South Florida, either, convinced that it was a cesspool of sinning, so he was surrounded by bad choices.\n\n\"Yeah, Vegas. Markus, you know your wife wants to go to that stupid spa again. Wives or girlfriends, no toys. Be a good time.\" Jonathan made the finger motion for teeing off with his right hand.\n\nThere was more silence as everybody looked at the man that was their unspoken leader. Jonathan was the richest amongst them all, but that was not why. He was the most aggressive, and when many of them were still thinking about angels and consequences, he was plunging ahead. And amongst a group considered some of the most forward leaning businessmen on the east coast, that meant a lot. \n\n\"Next weekend?\"\n\n\"You fucking crazy? That's racing. We'll go in two weeks, after we hit the big laps here, and stay in that new place they just opened. Read about it in the Robb Report.\" Morrison was also a true redneck, no matter how rich he got.\n\nThe meeting broke up shortly thereafter, lunch all but forgotten in the decision to head out west. Markus waited for everybody head off, then him and Jonathan headed upstairs to the lounge that took up the top part of the four story suite that The Club occupied in the office tower.\n\n\"So what's going on? You've been giving me the eye all afternoon.\"\n\n\"I don't know. You know that girl I'm seeing?\"\n\n\"Your call girl?\" He said with a smile on his face. Jonathan had explained his arrangement to the group last golf outing, to much ohhs and ahhs. He was still conflicted about how he felt about it. Paying for it definitely did not help the karmic balance.\n\n\"Yeah, her. You know Robert Enders, right? He asked if he could call her some time, and I about choked his lights out.\" Despite the fact that Robert Enders, Jonathan Games, and Michael Robinson had started a very profitable and wildly successful Venture Capital firm together, they were not what one might call best friends. They were freaky brilliant when they put their minds together, able to look at raw data and brain storm out which company would make it, which would fail, which could be salvaged, and which would go big. \n\nThis often involved a fair amount of conflict, and the three had a private conference room that was super sound proof, where they could scream, yell, curse, and throw things at one another. But they accepted their differences, because they were incredibly rich because of them. \n\n\"You and Rob have never really gotten along. If it weren't for Mike, that thing would have never worked out.\"\n\n\"I know. Mike reminded him about our rule of not screwing each others women.\" It was a pact from way back when, three Harvard boys turning the banking world on its head with their use of data and information management technology to pick winners and separate the wheat from the chaff when it came to losers.\n\n\"So what do you want?\" Markus had decided against another glass of wine, so he popped the top of a Diet Coke, his poison of choice when coffee was not available. He drank coffee like a fiend.\n\n\"I told myself after Angelina that I would never put myself through this again. You know how I get. You know what happens.\"\n\n\"But you think it is happening?\"\n\n\"Yeah. That's why I want to bring her out. Let you guys see it. You and your wife, you guys are my emotional counter weight.\"\n\n\"Glad to help out. Speaking of my darling wife, her next book is finished.\"\n\n\"Send it down, I'll get that puppy published.\" One of the things that the firm had acquired was a small publishing business, which had become the outlet for a series of moderately successful books on faith and marriage by Markus's wife Margie.\n\n\"You're a scholar and a saint, I don't care what the others say about you.\"\n\n\"He's a NASCAR fan?\" Tammy looked truly amazed. To her, NASCAR was a redneck convention, with 200'000 inbred motherfuckers watching cars go in circles, swilling beer and fighting in the stands. \n\n\"No. But he says they do a lot of business there. His company owns a box at the track.\"\n\n\"They have boxes at the tracks?\"\n\n\"Apparently so.\" Amber shrugged. All it meant to her was that he was not around right now, so she was catching up on studying. She was planning on packing for Vegas, as well, so that she would not do it last minute, as was her normal modus operandi.\n\n\"Well, it is Sunday, last day off before we have to go back to school from this beautiful weekend, and you should not spend it sitting here.\" Jessica was trying to decide if she should wear her short hair up or down. It was her first date with Ricky, and she wanted to make a good impression. Finally she just turned to Tammy, who indicated down with a wave of her hand.\n\n\"Don't worry about me. I have studying to do, and I've been out like the last three nights.\"\n\n\"You do go out a lot on school nights.\"\n\n\"Yeah, but my baby is not some spring chicken. He has me home early.\"\n\n\"Not that you go to bed when you come home.\" Tammy shot her friend a knowing grin in the mirror.\n\n\"Do, too.\"\n\n\"Not to sleep. You guys should be a bit more considerate of other people in the building.\"\n\n\"You didn't say anything about that.\"\n\nThe doorbell rang before either of the girls could say anything back, and Amber slid out of the couch she was sitting on, walking across the hardwood towards the banging noises. Jesus, these people really wanted in. \"I'm coming, I'm coming!\"\n\nPulling open the door, her parents threw their arms around her, screaming out loud. \"SURPRISE!\" They both kissed her, then stepped back, looking at their shocked daughter. \"We were on our way down to see your Aunt Elsie, so we decided to stop by and see how you were doing!\" Her mother seemed very satisfied with that, as they stepped inside, looking around. They always felt the need to inspect the living condition of their youngest when they came by.\n\n\"Glad you called ahead.\" Shaking her head at her own sarcasm, Amber led them back into the living room. Tammy and Jessica waved from the bathroom, and her parents waved back. \n\n\"Want to go to dinner withy our old folks? Saw a new steak place up the road.\" Her father dropped onto the couch, stretching his legs out. It had been a three-hour drive, and they had two more to go.\n\n\"Sure, why not. Let me get dressed real quick.\" She walked into the back hallway, turned right at the bathroom, and into her room, which had its own bathroom. When they had first moved in, they had played rock-paper-scissor for the master bedroom, and she was the master.\n\n\"Nice bed.\" Her mother had followed her, giving her a questioning look. \n\n\"Thanks.\" She avoided the question by hoping in the shower. But it hung there until halfway through dinner, when she finally broke it to her parents. She had always told them everything, a side effect of being the baby out of five.\n\n\"I'm seeing somebody. He's a bit older, and he's the one that bought me the bed.\"\n\n\"How much older?\" Such details are important to mothers, but she had seen her dads ears perk up. \"Is this the lawyer, Spike, what was his name?\"\n\n\"Spencer? No. But I meet this guy the night I had my date with Spencer. Who was a total jackass. This guys name is Jonathan\u2026and he's forty two.\"\n\n\"Forty two? He's twice as old as you!\"\n\n\"I know that.\" She shrank back a bit, knowing fully well what was about to come.\n\n\"Where did you meet him?\"\n\n\"A bar\u2026\"\n\n\"Just like that slut Kelly, huh? I told you, hang out in bars, you meet people that hang out in bars! I take it that he is\u2026\"\n\n\"Karen.\" Her fathers voice cut the stream of in mid sentence. He knew fully well that once his wife got going on the wife of their oldest son, it was time to step in. For one, he did not share his opinion of their daughter in law, but also he was pretty sure that berating their daughter would not do a lot of good. \"What does this gentleman do?\"\n\n\"He's a venture capitalist, or something like that. Don't worry; I'm not dropping out of college or anything. School is very important to him.\" She related how he had gotten her into the class she needed, only editing it slightly.\n\n\"Well, that's good enough. Do we get to meet him?\"\n\nAmber was about to respond when her jaw went into neutral. This was a safety switch that most children have when looking their parents in the eye that keeps them from moaning out loud from sexual arousal. She did manage to close her mouth before the second wave hit her, and excuse herself from the table.\n\nShe rushed to the bathroom, locking herself in a stall. It was coming on fast and powerful now, and she slammed her hand into her pants, finding the thong she was wearing vibrating out of control. It was the one he had given her, she realized for the first time. Her legs shook as she fingered herself, combined with the vibrator pushing against her clit.\n\nShe almost bit through her wrist to keep from screaming out, and sweat covered her brow before it released its grip on her, he body wracked with the feelings it had given her. She took a second to compose her breathing, then fixed herself in the mirror before heading back out.\n\n\"Sorry. Girl thing.\" She smiled graciously, and her fathers face turned sour, settling the whole thing for her. Her mother nodded understandingly. \"Well\u2026ahhh, I don't know.\" She knew for a fact that meeting the parents would fall into the category of relationship bullshit that he would not want to deal with. And for the first time, she realized that she wanted him to meet her parents. What did that mean?\n\n\"What do you mean?\"\n\n\"Well\u2026ahhh, you know. He's older, so I don't know how comfortable he would be with that.\"\n\nHer dad nodded, as if that made perfect sense. Her mother did not seem convinced. \"Well, I mean, if he is that age, doesn't he have kids of his own? I'm sure he would understand if you ask him.\" Amber nodded slightly. Did he have kids? He had never mentioned anything about it.\n\n\"I'll talk to him about it.\"\n\nThe BMW hit the interstate well ahead of most traffic. He was no fan of NASCAR, or any type of racing for that matter, so he rarely stayed the entire race. Nothing happened until the wreck, and unless you were watching the entire thing, you would only get to see that in replay. Screw that. But there was a lot of business done, so he went and suffered in silence. He had considered bringing Amber, but he knew that there were a lot of sharks in the water, and he did not want to put her into that. Would he have been possessive? And would that have been in keeping with his role? \n\nHe shook his head, trying to clear the thoughts away. Already the Duty Brain cell had organized his current predicament into a clear list he could work down and attack. First, how did he feel about her? He deferred that one until later. Second, how did she feel about him? He didn't know, and had no way of knowing. But reasonable estimate of the situation said that she felt some connection to him, after all, he was paying her. Probably the same kind that Madeline felt, a kind of symbiotic, platonic connection. Yeah, she flirted with him a lot, but how much of that had he bought? A lot, based on what he was paying her. It was a lot of money, even though she had cut it in half.\n\nNext, what was his role in this thing? And how would he keep playing it? That's what this weekend is for, he told himself. Damn it! A chirping sound interrupted his deep thinking, telling him that somebody was trying to call him. He glanced down at the screen mounted in the dash, seeing her name. Tapping the button, the speakerphone came to life.\n\n\"Hey baby.\" Even through the ether, her voice sounded like smoked honey, making him weak.\n\n\"What's up?\"\n\n\"Ahh\u2026my parents just left, they stopped through on their way to see my aunt. And ahh\u2026\"\n\nHe knew what she wanted before she even said it. He fired off an internal curse, his mind turning in on itself as he tried to head it off, say something that was not harsh but slammed the door shut. Nothing came out in time.\n\n\"\u2026well, they wanted to meet you. I think I stiff armed it.\"\n\n\"Good. You know how I feel about that shit.\" That came out a bit angrier then he wanted it to, but he didn't even realize it.\n\n\"Sorry. It won't happen again, I promise.\"\n\n\"Good.\" Still with the venom. Stop, he told himself, stop it.\n\n\"You ok?\"\n\n\"Yeah. I told you about that.\" He clamped his jaw shut, almost biting his own tongue off, stopping himself before he threw out more anger. Jesus, what is wrong with me he asked himself.\n\n\"You hit me earlier with the thong. Did you do it through your cell phone?\"\n\n\"Yeah.\"\n\n\"You coming over?\"\n\nHe thought about it for a second, realizing that if he wanted to, the exit was ahead by four miles. Decision time, he would be there in about three minutes his brain told him. Damn it, he had meant to go over there, enjoy her sweet laugh and pussy, get recharged for the week, and make this fucking money. Now he was freaking out!\n\n\"No.\"\n\n\"Ok\u2026\"\n\n\"Listen, I have to go.\"\n\n\"What's wrong?\"\n\n\"Nothing!\" His finger slammed the kill button, and he floored it, flying past the exit. Damn it!\n\nShe stared at the phone in disbelief. What had his ex-wife done to him that he hated relationships so much? Dropping it onto her bed, she sank into the duvet, trying to fight back the tears. What had he done to her that she felt this way about him?\n\n\"If you are calling me for conformation that what you did was a good idea, I'm the wrong person.\" Markus sounded much more intelligent and educated across the phone. It was his preferred medium of communication.\n\n\"You don't understand what this woman is doing to me. I can't let that happen.\"\n\n\"You know what I would tell you\u2026\"\n\n\"That God has a plan for me, yes, I know. Why do I ask you for relationship advice again?\"\n\n\"Because I'm the only person you know who has been married to the same woman since college, and who has never cheated on said woman. Plus my wife has never cheated on me, and my kids adore you for reasons I do not understand.\"\n\n\"I guess it is not kosher to bring her over to your house for dinner tonight?\"\n\n\"Be there at seven.\"\n\nNormal clothes. What the fuck are normal clothes, she asked herself as she stared into the closet. Normal, like what I normally wear when you take me out? Normal, like I'm going to class? Normal, like business casual normal? Normal was not a fashion term for a reason. \n\n\"Jeans. Normal means jeans.\" Tammy was trying to be helpful, but all she got was an angry look from her friend. \"I'm telling you, jeans.\"\n\n\"You know how much these damn jeans cost?\"\n\n\"$200.\"\n\n\"How did you know?\"\n\n\"Looked it up online.\"\n\n\"So then, they are not normal jeans.\"\n\n\"Wear the damn jeans, and a t-shirt. I don't care if he spent a thousand dollars on the shirt, it is still just cotton assembled by some underpaid kid in Thailand. Put on the most expensive underwear you have, throw in some closed toed heels, and you're in business. Come on girl, your closet is worth more then my car, and I still need to dress you?\" Of course Tammy was a fashion whore, who had made it very clear to the manager of a local Express that his willingness to give her free clothes was directly related to how deep she would let him put his cock down her throat.\n\n\"Shut up.\" She dug into her underwear drawer, then dropped the towel, feeling the satin slide across her skin. The jeans followed, then a white t-shirt that cost more then her accounting 212 books. Both made in Taiwan. \"Happy?\"\n\n\"Jesus, what is wrong with you?\" Tammy gave her a look that made it clear that she did not relish being snapped at, and was not above throwing the can of coke in her hand.\n\nAmber dropped onto the bed next to her friend, and almost burst into tears. She didn't, but being a girl, Tammy saw the signs. They sat, silently, listening to Jessica sing in the other room as she cooked.\n\n\"I don't know. Something has come over him lately. Since Sunday, he's been a total dick.\"\n\n\"Why does it bother you?\"\n\n\"What do you mean?\"\n\n\"Well, if it bothers you, you are invested.\"\n\n\"Yeah, so?\"\n\n\"I thought you said you weren't going to become invested. He's paying, remember. Call girl, sugar daddy.\"\n\n\"I know I said that!\"\n\n\"Relax, I'm on your side here. Maybe you need to walk away.\"\n\n\"Maybe.\"\n\nThey heard the doorbell ring, and she stood, heading outside. He was still in his suit from work, instantly making her feel underdressed.\n\n\"You look beautiful.\"\n\n\"Thanks. You said normal, you didn't change yet?\"\n\n\"I can wear this where we are going.\"\n\n\"Which is where\u2026\"\n\n\"My buddies house.\"\n\nThat gave her pause as she slipped into the door he held open for her. She had never meet one of his friends before, and it had been a couple of months now. \"We are going to your friends house?\"\n\n\"Yeah. His name is Markus; I think I mentioned him before. Markus, Margie, Markus junior, Sarah, Kylie, Angela, Virginia, and Jonathan.\"\n\n\"What? How many kids is that?\"\n\n\"Six.\"\n\n\"And they named one after you?\"\n",
        "\"I'm his godfather.\" He was rather proud of that one. But he turned serious again. \"These people are very important to me. And they'll be going to Vegas with us, I thought you might want to know some before hand.\"\n\n\"Ok\u2026we still going?\"\n\n\"Why would we not be?\"\n\n\"I don't know\u2026\" \n\n\"Listen\u2026Amber\u2026I know I've been a dick lately. Work has me stressed. I apologize.\" That was a bold face lie, but he was a good liar. It helps in banking.\n\n\"It's ok. You pay me for this, remember.\"\n\nHe did, and cringed internally at the mentioning of it. They pulled into the long driveway, and up to the huge house. She figured you had to have a massive crib to house six children. She couldn't even imagine what that would be like as a woman, birthing all those screaming little toads, and then having to raise them, feed and clothes them. She was one of four, but six was a completely different order of magnitude.\n\nShe had been to his place, and it looked exactly what one would think a forty-year-old bachelor pad would look like, stuffed with expensive art and the latest technology. This place was a home, even if it was a huge one. The children ranged from eighteen to four, and she knew that she would not be able to keep their names straight, and instantly felt bad. The youngest was Jonathan; she hung her pride on that.\n\nMargie was a beautiful woman with a ready smile who ushered her into the kitchen as soon as they walked in, and put Amber to work helping her put dinner on the table. Apparently the kids were all studying their age appropriate materials, and Amber wondered what their secret was. Powerful sedatives?\n\nThe kids were allowed to eat in front of the TV in the rec room after studying, and the grown ups ate at the dinner table. Except for Sarah, and Amber could clearly tell that the young girl had a crush on Jonathan. Was that healthy? And what about the fact that she felt jealous? She pushed those emotions aside and tried to focus on the conversation, seeing again how at ease he was. \n\nEven more so then when he was just with her, he seemed to be opening up, laughing, leaning back in his chair, as if the tension was visibly bleeding out of him. She sipped her wine slowly, trying to keep up with their conversation, but she didn't know the people they spoke of, had never been to the places they mentioned, and apparently Markus and Margie had been married longer then she had been alive. That was a kick in the uterus.\n\nFinally Jonathan sat up, and she took that as the signal that they were leaving. He got the door for her, as always, and she slid inside, waiting for him to roll down the driveway.\n\n\"Nice people.\"\n\n\"Thanks. Bit much on the god thing, but they are strange like that.\"\n\n\"I noticed that. But you seemed very relaxed in there.\"\n\n\"My second home. Me and Markus go way back.\"\n\n\"I could tell. Listen. I'm sorry if I've caused any relationship looking drama lately. It is just that\u2026I'm here. That's what you wanted, somebody to be here. I'm here. Anything you need, I'm here.\" She was not entirely satisfied with the way that came out, but she thought she had done a decent job of wrapping what she wanted to say in what she knew he wanted to hear.\n\nHe nodded, looking over at her. \"Thank you. I'm glad I found you.\"\n\n\"I'm kinda glad myself.\"\n\n\"Pick you up Friday?\"\n\n\"I gotta wait that long?\"\n\n\"You gonna burst?\"\n\n\"No, remember you bought me a vibrator.\"\n\n\"I gotta see that.\" They smiled at each other, and she knew that she would get action that night. A guaranteed recipe to kill whatever bad mood he might be in.\n\nThey all laughed at her camera, but it was her introduction to private air travel, and they could all go to hell. She told them that, too, and that brought out more laughter. Morrison had brought his wife, who was wildly suspicious until she spotted Margie. Angela's marriage to Morrison could be called unstable at best, dysfunctional being a more honest term. Randy, being the other single member of their little crew, had acquired his own arm candy, but she was mostly looks, and not much for conversation. Amber did see her eyeing Jonathan, and figured that she was trying for an angle to move up the wealth ladder. But this one did not worry her. You could poke her tits and let all the air out.\n\nShe had never been to Vegas, so he indulged her, and had the taxi driver take the scenic route down the strip on the way to their hotel. \n\n\"You'll have time to explore. We have tee time tomorrow, so you can play.\"\n\n\"I'm going to the spa with Margie.\"\n\n\"Good, get all buffed for me.\"\n\n\"Anything for you.\"\n\nThe hotel room was very similar to the one in the Hilton. A bit bigger, a bit gaudier, but probably spoken of very well on the Travel channel. She took pictures of it, too. Dropping onto the bed, she watched him stalk across the room, sensing the restless energy in him.\n\n\"Come here.\" Her voice had him stop cold, and he came. She pulled him onto the bed, and before he could stop her, she had him naked. She moved fast, knowing fully well by now what he would do, where his hands would go. The stage where he could just push her buttons by knowing women was over, and now he was the one slightly behind. She was fast, kissing, licking, nibbling, and sucking him deep into her throat. He cried out as she worked him over, going up and down the hard shaft, her finger teasing his prostate.\n\nHe was gasping for air, his mind unfocused, sweat cursing down his skin as she sucked him off. She knew him, knew him well by now, so she brought him close, excruciatingly close. He could feel it churning, but then she backed off. It was sweet torture, taking him to the edge, leaning him over, and then pulling back. She did it again, and he screamed, begging for release. She dared again, but mistimed it by a hair, his cock twitching in her mouth. Jacking it with her free hand, she sent it shooting into her mouth, sucking it dry.\n\n\"Ohhh\u2026ohhhh, my god.\"\n\n\"You okay?\" She crawled on top of him, her tits and hair hanging down into his face.\n\n\"Well\u2026my left side is not hurting, so I guess that feeling was not a heart attack.\"\n\n\"That's not funny.\"\n\n\"Easy, I'm not that old.\"\n\n\"I'm being serious, you okay? You have been all tensed up lately.\"\n\n\"Yeah, I'm good.\"\n\n\"Bullshit.\"\n\n\"I'm ok, I'm telling you.\"\n\nShe put her nipple in his mouth, and he sucked it like a little kid, his eyes closed, lying back on the pillow. Slowly she ran her fingers through his hair, kissing his forehead. \"I'm here, my sweet little sugar daddy.\"\n\n\"So, does she call you daddy?\" Morrison was a terrible golf player. But he made up for it with a talent for gratuitous shit talking, which always disrupted just about anybody. \n\n\"You mean in bed?\" Jonathan was the best player amongst them, so they were always paired up against Markus and Randy, who were currently trying to decide how they were going to get out of a sand trap, walking around the little ball as if it would levitate on its own if they stared at it long enough.\n\n\"Yeah.\" Randy and Jonathan were watching them from the shade of their golf car, enjoying the tasty refreshment of a cold beer.\n\n\"Sometimes. I'm telling you, it's like porno sex with that girl. Awesome. The noises, the way she looks, the whole thing. Unbelievable.\"\n\n\"Cool. But you think you are falling for her.\"\n\n\"Why do you say that?\"\n\n\"Because you brought her out here, and made me bring my wife. Which ensured that Margie would be here, who might as well be your emotional compass.\"\n\n\"You should be better to your wife.\"\n\n\"I know.\" Morrison shrugged, taking a sip from his beer. \"Done a lot of damage there, though.\"\n\n\"With toys?\"\n\n\"Come on.\"\n\n\"I'm being serious. This has nothing to do with my girl, or anything. Angela is a good girl.\"\n\n\"I know. I'm taking her to Sandals during the kids' spring break to patch things up. Honestly this time. I've been reading Margie's books. And I think that guy you told me about is really helping.\" He left it unsaid that if Jonathan told anybody that he was going to marriage counseling, he would kill him.\n\n\"Get the new one yet?\"\n\n\"Yeah. So you and Amber\u2026\"\n\n\"I don't know dude, I don't know.\" Jonathan watched Markus chip the ball, sending it onto the fairway. Standing, he pulled out a pitching wedge, walked onto the grass to his own ball, looked downrange once, whacked at the ball, and listened to Morrison hoot and holler when the ball landed on the green, two feet short of the hole. Too easy. Too bad not everything was like that.\n\n\"I've never been to a Spa.\"\n\n\"It is heaven on earth, and I mean that.\" Margie smiled at the younger woman as they lay down on the massage tables. Amber had always assumed that two tables in the same room were a movie prop, but Margie explained that they were often used for couples. Which lead them to Jonathan.\n\n\"You can't tell him I told you this,\" because I'm not sure why I'm telling you, she didn't add,\" but I really like him. Not just\u2026well\u2026\"\n\n\"I know about your arrangement.\"\n\n\"Oh\u2026ok.\"\n\n\"It's ok, I don't judge. I was there when he brought the escort out.\"\n\n\"Really?\"\n\n\"Yeah. Nice girl. We were in Lake Tahoe, skiing. They had some business thing going in conjunction with the trip, so he thought he needed a date, and got this escort. Big ol' tits, I mean DD, hourglass body, blond hair, from central casting or something. But really smart, said she went to school at UC Davis. Good conversational, really strong flirt. It was sad, really.\" She smiled knowingly. She knew how that night had ended.\n\n\"Huh. Well\u2026\"\n\n\"You know why you are here?\" Margie turned her head to look into the big green eyes, seeing how nervous the girl was.\n\n\"So that he can\u2026\"\n\n\"No, so that I can. You know he made Morrison bring his wife? If he had let him bring his little mistress, Markus would not have brought me, because he knows how I feel about that. You have to understand\u2026Jonathan is a very sweet man. But he does not trust himself.\"\n\n\"What do you mean?\"\n\n\"Well, take Angelina for example. He loved that woman. I mean, devoted. Unreal. He would have given her anything, and did. You think he's rich now, you didn't know him before he got divorced. Just as a frame of reference. But she was totally wrong for him, cheated on him, all kinds of stuff. When he let her go, he still loved her, despite everything. Gave her millions of dollars above what he should have, could have gotten away with, and let her go out to L.A. or something to start a new life without asking for anything. She said things during their divorce trial, they were just not true. He was so hurt, he never fought for custody, nothing. He could not bring himself to drag her name in the mud, so he lost his daughter.\n\n\"He has a daughter?\"\n\n\"Yeah. He has not seen her in four or five years now, except in pictures. She's Sarah's age. They used to be really good friends. He never mentions her because I think it hurts him to bad. And he told Markus that he's afraid he is falling for you. So he brought us out here to look at you. I write books about relationships, and he thinks I'm some kind of expert.\"\n\nAmber sat in stunned silence, her mind trying to keep up with the flood of information. The masseuses entered the room, and they lay in silence, letting themselves be worked over. They did not speak about it anymore during the rest of the day, and then Angela and the other bimbo were around, so she let it go, but her mind kept coming back to it.\n\nShe watched him closely at dinner that night, trying to see the signs that would tell her what it all meant. But he was his charming self, flirting with her, but Angela and Margie as well. She knew that most of the people at this table had been friends for going on two decades or longer. She was an outsider, as much as she wanted to slip into their midst's and confront him.\n\nIt was not until that night, in the hotel room, that she brought it up. The sweat was sticky, the smell of sex pungent and powerful. He was trying to catch his breath, his hands running up and down her back, feeling her ass, eyes closed, enjoying the after glow. She had been aggressive tonight, he thought, almost attacking him once they came through the door. When she was on, there was no stopping her, and it was her show. The shyness of their first encounter had given way to a lioness that knew what she wanted, and what she wanted to give him, show him, do to him.\n\n\"Can I ask you something?\" Her voice came from close, but it still retained that quality that always shook him to the core.\n\n\"Anything.\"\n\n\"Do you have any kids?\"\n\nThere was a sharp intake of breath, and she screwed her eyes shut against any type of assault that might come. There was a whistling sound as he exhaled past pursed lips, his body deflating under her.\n\n\"Sorry, is that a relationship question?\"\n\n\"No, its ok. Yes, I do. I have a daughter. She's eighteen now, living in California.\"\n\n\"Do you ever see her?\"\n\n\"No. My ex-wife has total custody of her. I didn't really do that well in the divorce thing. Mostly my fault, I was an idiot.\"\n\nShe sat up, running her finger down his chest, then licking the sweat of her finger. \"Well\u2026why don't we go see her?\"\n\nThe strip was lit up below, even at one in the morning cars snaked their way along the neon and mass of bodies. The city truly never slept. Unlike her. He looked back at her form underneath the sheets, the rhythmic slow rise and fall of her breasts telling him she was still in deep sleep.\n\nWhat was this woman doing to him? He had wanted to cry at the mention of Samantha, and something had told him that if he had, she would have held him, and made the pain go away. But he had been there before, hadn't he? Standing by his parents gravesite, killed senselessly by a drunken driver, crying in weakness, Angelina holding him. Then during the reception she had screwed the caterer, wasn't it? No, it was the driver of the hearse. The caterer had been at Morrison's wedding. God damn it!\n\nHe leaned his forehead against the cool glass, exhaling sharply. He wanted to believe, really did. He had it all. He was top in his business, and he could buy any thing he chose. He was well regarded in all spheres of life, and could do whatever he chose. But this eluded him. Happiness. Looking back at Amber, a smile curled at the edges of his lips. And there it lay, sleeping. His for the taking. \n\nThere were parts of him that really wanted to believe that she was in this for the money, for the free ride. An Anna Nicole Smith in a Pamela Anderson body, with a Condolezza Rice mind. But Duty Brain cell reported that the large part of his analytical brain did not agree. He could see it in her eyes, in the way she moved around him, touched him. And he could see it in the way that Markus and Margie looked at her. She was not some girl he brought around that might as well not be there, the way that Randy's eye candy had sat there at dinner, her tits about to pop out of her top. This was a human being to them. Had Margie said something to her?\n\nHe slipped into the sheets, kissing her softly. She purred, rolling away, but he was insistent. Finally she relented, her eyes opening. She had that amazing ability to be instantly awake, and he loved it.\n\n\"Get dressed.\"\n\n\"Where are we going?\"\n\n\"L.A.\"\n\n\"You know how to drive a stick?\"\n\n\"What kind of question is that?\" She had dressed in what they now referred to as normal clothes, stalking through the lobby of the hotel. The casino was still in full swing, she could see through the massive arch. Everything they might need for a day was in a small bag he was carrying with them, brought up by room service.\n\n\"I ordered a car.\"\n\nThey stepped out into the night, and the doorman held open the door to blazing red BMW M3. Waving her around, he slipped into the passenger seat. She dropped into the driver seat after a second of hesitation. She had never driven anywhere with him around, and for all he knew, she might not even have a drivers license.\n\n\"You drive first. I'll navigate. Everybody knows women can't read maps.\"\n\n\"Aye, aye captain.\" The engine rumbled, then roared, and they shot out into traffic. She thought this a bad time to mention that her license was one point away from suspension. If he had asked she would have shrugged. Speeding tickets are a bitch.\n\nThe sudden movement of the car woke him up, and he looked around, not remembering where he was for a second. So he looked over at her smiling form, and asked.\n\n\"California. L.A. is about twenty miles down the road.\" Her smile was downright devious now.\n\n\"What was that?\"\n\n\"What?\"\n\n\"We were stopped, and we like jumped away from the curb.\"\n\n\"Ohhh\u2026nothing.\"\n\n\"Right.\"\n\nShe laughed, and watched as he had his seat come back upright. He had been reclined back as far as possible, after she finally convinced him to go to sleep.\n\n\"How long we been on the road?\"\n\n\"Just under three hours.\"\n\n\"WHAT?\"\n\n\"Well, I'll just tell you. That was a cop. He was going to give me a speeding ticket, but I cried my way out of it.\"\n\nHe looked close, and he could see a bit of redness around her eyes. She had wiped the tears away, but he had no doubt that she could cry on command. She struck him as the type.\n\n\"Ahhh\u2026\"\n\n\"I've had six speeding tickets in my life.\"\n\n\"SIX? You barely twenty one!\"\n\n\"My insurance is hell. My parents were paying for it out the ass, but with the financial support of a nameless benefactor, I've been able to relieve them of that burden.\"\n\nHe took the information in quietly, rolling his head a couple of times to work out the kinks. \"How do you explain your sudden cash flow to others?\"\n\n\"All my friends know I have a sugar daddy. And to my parents, I told them I had gotten a couple more scholarships. Well, they know you give me money. They know about the bed, the clothes, stuff like that.\"\n\nHe grunted as a way of response, then looked at her again. \"We need to find an Internet caf\u00e9' so that I can get online. Maybe we can find them that way.\"\n\n\"Done already.\" She handed him a slip of notebook paper. Three phone numbers, all with L.A. area codes, and an address up in the hills graced the page.\n\n\"What is this?\"\n\n\"I'm very charming, and that young Highway Patrolman was very helpful.\"\n\n\"You are out of control.\"\n\n\"Feel free to spank me whenever you want to. I've been a bad, bad, girl.\"\n\nThe house was not too excessive, and he guessed its price tag in the two to three range, based mainly on location. The Beemer fit right into the neighborhood, and nobody would pay attention to the Nevada plates. The thing working against them was that it was four in the morning on Sunday.\n\n\"She religious?\"\n\n\"No.\" He chuckled at that one.\n\n\"Athletic?\"\n\n\"Wife or daughter?'\n\n\"Either.\"\n\n\"No.\"\n\n\"Well, I guess we got nothing.\" Picking up his cell phone, she studied the three numbers, then dialed one.\n\n\"This is the house number. These two have the same predial, so they are cell phones on the same contract. I'm guessing she's the primary, so I'm hoping this is her.\" He nodded, hoping she was right.\n\nThe phone rang several times, then somebody answered.\n\n\"Hello?\"\n\n\"Samantha?\"\n\n\"Yeah, whose this?\"\n\n\"It's Amber, from that party the other night. Listen, I'm outside, I need to meet you. It's important.\"\n\n\"Right now?\"\n\n\"Yeah, please.\"\n\n\"Ok\u2026\"\n\nThe phone died, and she winked at him. He just stared at her. They watched the door, and when it opened, she heard him gasp. The girl that came out was a striking image of her mother, or at least of the picture she had seen. The same blond hair, the same athletic figure, the same deep blue eyes. She watched the girl look around, then come up the driveway towards the car. She let her get to the sidewalk, then kicked the door open, and jogged across the road.\n\n\"Samantha?\"\n\n\"Yeah\u2026\" The girl stepped back, her body going into a kind of natural defensive position. \"I don't know you.\"",
        "\"No, you don't. But I have something to show you. It's not bad, but I need you to come across the street with me.\"\n\nJonathan watched from the behind the mirrored glass of the Beemer. He could not hear what Amber was saying, but something told him to stay put. He was not entirely sure what was going on, but he felt a kind of peace, a kind of calm, and suddenly his mind went crazy. I bet she would take care of me when I'm old and decrepit, he thought.\n\n\"Across the street?\"\n\n\"Right there, by the Beemer. I know this seems weird, but believe me, you want to do this. You can see your house from there, and there are cars on the street.\"\n\n\"Ok\u2026\" The girl followed her across the road, and stepped around the back of the red car, her eyes warily sweeping up and down the street. Amber pulled open the door, and Jonathan stepped out, looking at his daughter.\n\n\"Hey Sam.\"\n\nThey both cried as she jumped into his arms, and Amber watched them walk down the road a bit, then back up. Upon her suggestion they climbed in, and she spun it around, driving them back to a diner she had spotted up the road. The two got a seat and ordered breakfast, while she walked outside and called Margie.\n\n\"Hello?\"\n\n\"Sorry to wake you up. I'm in L.A.\"\n\n\"What?\"\n\n\"I guess I should say we. We drove out to find his daughter.\"\n\nThere was a short silence, and she heard the ruffling of sheets in the background, and could tell that the woman was moving around the room with what had to be a cordless phone. Wow, that was a great hotel they were staying in.\n\n\"Honey, I don't know what kind of hold you have over my friend, but you are amazing. How's he doing?\"\n\n\"Crying into his oatmeal. Nice girl. Really beautiful.\"\n\n\"I hope that's all she gets from her mother. Proud of you, kiddo.\"\n\n\"Thanks. I don't know how the plane thing works, so I'm not sure if we'll be back in time for the flight tonight.\"\n\n\"Don't worry, we'll take care of it. Call me later and let me know what's going on.\"\n\nWalking back inside, she took a seat at the counter, and ordered herself a coffee along with a bagel and cream cheese, and a massive blueberry muffin. This deserved comfort food. The conversation in the booth had turned animated, and she could tell that they were both laughing now. Her order was delivered and she thanked the lady behind the counter, then looked out the window the other way. She didn't want him to see her crying.\n\nAmber encouraged him to spend the day with his daughter, but they insisted on dragging her with them, so she reluctantly tagged along until it was time for them to consider exit plans. Jonathan called Vegas, and had Markus get all their crap out of the room. Everybody would fly back on his plane, while Amber and him would just fly out of LAX. He cried again when he had to say goodbye to his daughter, but then she climbed back into her car, and disappeared into traffic, and he composed himself.\n\nThey walked in silence into the terminal, and she left him alone with his thoughts and emotions, until they were airborne and headed for home, the excitement of first class travel not really living up to traveling on a private plane.\n\n\"You ok?\"\n\nHe turned to look at her, his eyes red from the tears he had shed. A weak smile crossed his face, and she leaned down, kissing him softly, and pushing up the armrests. He came into her arms naturally, and she cradled him, kissing him softly. \n\n\"You are an amazing woman.\"\n\n\"I try. You are only part quasimodo, so I guess one good deed deserves another.\"\n\n\"What good deed?\"\n\n\"You brought out things in me that I never knew were there.\"\n\n\"I didn't know they were there, either.\"\n\nThey kissed, soft and slow, the kind that could go on forever, that was not so much a beginning as an end in itself, conveying and communicating things that are hard to say otherwise, and in other ways. His fingers ran through her hair, she purred into their lips, and it left them both breathless, and wanting, needing more.\n\n\"Still want to join the mile high club?\"\n\n\"President of that one, too?\"\n\n\"Ohh, yeah.\"\n\nShe went first, finding the first class lavatory a bit bigger then the peon ones, but not by much. When he joined her, it was a squeeze. But she already had her pants off, which helped. So he pushed her into the wall, squeezing between her and the sink, letting her unpack him, and stroke his hardening cock.\n\nShe again impressed him with her athletic ability, holding on to him as her legs climbed onto the sink, then sliding herself down onto him. He held her, but her incredibly powerful legs took most of the weight. It was a slow movement at first, with her tits dragging up and down his chest, her mouth open, eyes screwed shut as she let him fuck her.\n\nThere were times when they were slow and passionate. This was not one of those times. This was a time for sexual fulfillment for expression of raw emotions through physical contact, for porno screwing, and loud moaning and screaming. They stifled that through a lot of biting, but she could not believe how hard he was doing her. \n\nHe looked into her eyes, listening to her pant and moan, unable to contain it any longer. His breath was hot on her skin when he leaned down, his teeth digging into her earlobe before he released it.\n\n\"I love you Amber.\"\n\n\"OHH MY GOD!\" She exploded in her strongest orgasm ever, her body shaking, his body unable to hold back, shooting its sticky goo up into her, filling her with jizz. She was shaking and trembling, thrashing around on his hard cock, and he could barely keep a hold of her. They had probably woken up most of first class.\n\nSlowly he managed to turn, and sink down onto the toilet seat. She clutched him tight, and even though she tried, she was unable to hide the tears.\n\n\"I love you, too. God, I love you so much. I'm so sorry, I'm so sorry. I know that is not what you wanted. I know this is not what you want. I'll understand if you don't want me around. I'll go quietly. I don't want anything\u2026.\"\n\nHe silenced her by kissing her, hard. Wiping her tears away, he kissed her again, slowly turning her on his lap in the cramped quarters as his softening cock slipped out of her. \"Crazy, crazy woman. You aren't going anywhere. You're mine.\"\n\n\"You don't want a relationship.\"\n\n\"Yes. Yes, I do. I want one with you.\"\n\n\"I'm not your girlfriend. I'm your call girl.\"\n\n\"Then I'll still be your sugar daddy.\"\n\nShe looked him in the eyes, through her tears, through the sniffling, through the initial shock and pain. Then she flung herself at him, squeezing him tight, and kissing him all over. \"You are a wonderful, wonderful man. God, I love you so much.\"\n\n\"You aren't to bad yourself.\"\n\n\"I've been meaning to ask you\u2026\"\n\n\"What's that?\"\n\n\"How you feel about me calling you daddy in the bedroom?\""
    ],
    "authorname": "Rattlesnake1775",
    "tags": [
        "older man",
        "younger woman",
        "call girl",
        "sugar daddy"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-proposal-ch-02"
}