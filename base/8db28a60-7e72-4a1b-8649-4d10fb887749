{
    "title": "The House Sitter",
    "pages": [
        "This is a gentler (and longer) story than what usually seems to come out of my head - so much so I was tempted to file it under the Romance section rather than Mature, so you might want to bear that in mind before you start. Rest assured there is some sex, but it takes its time to arrive. All characters are of the age of consent or older. \n\nIf you make it to the end, thank you, and let me know what you think via votes and comments.\n\nThanks to VM for some terrific proofreading and feedback.\n\n**\n\nIt was, whichever way you looked at it, a great deal.\n\nThe house was positioned on the edge of the national park, perched on the lower slopes of a gentle valley with a stretch of garden that ran down to a small lake. It was over a hundred years old but had been carefully and tastefully modernised and restored. Three bedrooms, two bathrooms, a large and well-equipped kitchen and a comfortable if rather cluttered living room. The nearest village was a 15-minute drive away. Mobile reception was a bit iffy, but there was a half-decent internet connection - good enough for web browsing and email if not for streaming TV shows. But that suited me fine. This was going to be the summer, after all, that The Novel finally got written. No binge watching for me.\n\nSix weeks of perfect isolation. \n\nOh - except for Polly.\n\nPolly was the reason the whole deal was on offer, really. She was a bouncy six-year-old black Labrador. I was more of a cat person myself, but when I was introduced to Polly she wagged her tail approvingly and I patted her head and Mrs James cooed that she seemed to like me very much. Mr James muttered something inaudible which sounded faintly scathing. I guessed he wasn't much of a dog person either.\n\nAnyway, Mr and Mrs James were off on their long-promised world cruise after his early retirement. He'd sold his company, his children were off his hands, and I surmised that he'd run out of excuses not to give his wife the trip that she'd long been clamouring for. But Polly, of course, couldn't go with them. Hence the hurried if informal search for a house-sitter and dog-walker. Hence a friend of my uncle's making casual enquiries as to whether I was still trying to make a go of writing after quitting my teaching job. Hence me sitting there on that first evening in their garden after waving them off a few hours earlier, watching the sun go down while I sipped a cold beer.\n\nPolly lay quietly beside me. She'd had her walk, a brisk hour through some local foothills that she'd enjoyed very much, scampering off in pursuit of various interesting smells and startled rabbits but always obediently coming back to me when I called her.\n\nI scratched her head affectionately. Already she had won me over.\n\n\"Thanks Polly,\" I said. \"I think this going to be a great summer.\" She lifted her head and looked at me and thumped her tail softly.\n\n**\n\nI soon worked out a routine. At eight in the morning I unplugged the internet connection in the garage and made my way to the study. There I worked pretty solidly through until eleven. Then Polly had the first of her walks, which took us up to an early lunch. Then I was straight back to it until around four in the afternoon, or until I'd done my four thousand words for the day, whichever came sooner. Then Polly, to her stunned delight, had her second walk of the day. On this second walk I was more adventurous, choosing footpaths and directions at random and relying on a combination of wonky signposts, intermittent Satnav readings on my phone, and Polly's sense of direction to get us back home again. Sometimes we were back inside an hour. Sometimes it was nearer three hours and getting perilously dark. Polly never seemed to flag, which is more than I can say for myself, but gradually my stamina increased. I was also eating more healthily than I had for some time, being limited to the extremely tasty but relatively limited foodstuffs available in the local village shop - lots of vegetables, fruit and eggs. \n\nThe days flew by. Fifteen thousand words became thirty and then forty and then fifty. More importantly, they were words I didn't hate when I re-read them. Perhaps this was the breakthrough at last. I made a promise to myself that if I ever made any good money out of my writing, I would buy myself a house here or somewhere very like it. It seemed to me utterly perfect. Memories of my short, failed marriage with its bitter ending seemed a lifetime away. If I wanted to chat, Polly was always willing to listen and always in complete agreement with whatever I said.\n\nAnd then, towards the start of my third week there, I was awoken at two in the morning by the sound of somebody breaking in.\n\n**\n\nOf course, it was Polly who actually heard them.\n\nPolly was supposed to sleep in her basket downstairs. This had lasted all of two nights - she'd looked so reproachful when I left her to go upstairs that I had caved in and now her basket was at the end of my bed. She snored slightly but rather charmingly.\n\nAnd that night I woke to find her growling.\n\n\"Hey Poll... what is it?\" I asked sleepily. She growled again, then was silent. I listened. \n\nDownstairs, very faint but definitely audible. A window scraping open. I recognised the sound as I'd opened it myself only a few days previously. A thump, then another. Unmistakably man-made sounds.\n\nI looked quickly at my mobile. No signal, of course. There was no landline in my room - there was only one handset in the house, which was downstairs. Nor, my mobile informed me, had I remembered to turn the Wi-Fi back on after our second walk. So, no emailing or Skype calls for help either.\n\nI guessed a house like this was an obvious target. Fairly remote, obviously well to do. Break a window, get in, grab as much as you can and be gone in twenty minutes. Even if it was alarmed it would take the local police a good half an hour to make it out here. Maybe closer to an hour.\n\nThe sensible thing to do would be to lock my door and wait for them to go. But I had a sense of responsibility. I'd been hired as a house sitter and it seemed rather feeble to just cower in my room. Plus - I was angry. Everything had been going so well. The last few weeks had been the happiest, most productive I could remember for a long time and now one or more lazy, unimaginative low-life criminals were spoiling it. I was going to damn well tell them what I thought of them.\n\nI took hold of Polly's collar. Her fur was bristling. She was obviously of the same mind.\n\n\"Come on Polly,\" I whispered. \"Let's give these fucking bastards the fright of their lives.\"\n\nI took hold of a poker from the fireplace in the other hand then threw open the door.\n\n\"WHO'S DOWN THERE?\"\n\nPolly barked furiously.\n\nThere was a loud and very feminine shriek from downstairs.\n\nPolly barked again, but in a different tone. Before she was angry. Now - in the space of an instant - she was excited. She pulled away from me and I lost my grip on her collar. I noticed as she shot down the stairs that her tail was wagging.\n\n\"POLLY! What are you doing here?\" \n\n\"Who's that?\" I called again, still very worked up.\n\n\"Well, who's that?\" said the voice, rather nervous. \"And what are you doing in my parents' house?\"\n\n**\n\nI made my way somewhat cautiously down the stairs, still clutching my poker.\n\nIn the living room, just visible from the light coming through from the kitchen beyond, was the slight figure of a girl. Polly was prancing around her, clearly delighted. The girl was trying to pat her with one hand, while clasping an ornamental letter opener in the other. This she was brandishing rather unconvincingly at me. I could see she was young, no more than eighteen, and I relaxed a little though I was still pumped with adrenaline.\n\n\"Who the hell are you?\" she said.\n\n\"Me? I might ask you the same question!\" \n\n\"This is MY house!\"\n\n\"So... why the window? Where are your keys?\"\n\n\"I've... lost them.\"\n\nThis didn't sound terribly convincing. But as I came closer, I thought she began to look familiar. I'd seen her somewhere before. I glanced at some of the pictures on the fireplace. She was younger in those pictures, probably only thirteen or fourteen - but it was definitely her. The daughter who'd been sent off to stay with relatives in Europe. Or apparently not. \n\n\"So, this is you?\" I said, pointing. She nodded.\n\n\"You're supposed to be in Spain for the summer,\" I said, somewhat accusingly.\n\nShe looked a little shame-faced.\n\n\"Yes... I was going to be. But I've come back.\"\n\n\"Well... didn't your parents tell you I was staying here?\"\n\n\"No... they, er, didn't.\"\n\nThere was definitely something shifty about her answers now.\n\n\"When did you last speak to your parents? Do they even know you're coming here?\"\n\nA slight pause. \"No... I thought the house would be empty. So, I just... came here.\"\n\nI looked at the clock and something else struck me. \"How did you get here? Have you got a car?\"\n\n\"No. I... got a train. Then I walked from the station.\"\n\n\"The station! But that's miles away! The last train would have got in... what, around midnight?\"\n\n\"Yes. Just before, actually.\"\n\n\"You've been walking through the dark for the last two hours?\"\n\nShe nodded, and suddenly looked very young, and very tired. My anger faded, replaced with a mixture of irritation and sympathy.\n\n\"OK,\" I said. \"You must be shattered. Just... get to bed and we'll talk in the morning. Do you need anything to eat?\"\n\n\"No... I ate on the train... I'm very thirsty though.\"\n\n\"Glass of water? Or some milk?\"\n\nFor a moment a glimmer of a smile was visible. \"I was going to say a beer, but actually, some milk would be nice.\"\n\nI put down the poker and went through into the kitchen and got two glasses of milk. Polly followed me hopefully but I told her firmly that she was out of luck and there was no way she was having anything. Then I opened the cupboard and gave her a dog biscuit.\n\nI gave the girl her glass of milk and she looked at me over the rim of her glass as she took a big gulp.\n\n\"Are you in the blue bedroom? My brother's?\"\n\n\"Yes,\" I said.\n\n\"I'll use mine then,\" she said. \"It's the yellow one, opposite. I think I could sleep for a week.\"\n\nShe finished her milk and I took her glass and put it in the sink. \n\nShe yawned and stretched and I stole my first proper look at her. She had been walking for two hours, and travelling for god knows how long before that. She was very pale. There were big dark smudges of tiredness under her eyes and her shoulder-length blond hair was straggly, a little greasy and rather unkempt. Her clothes were scruffy and unremarkable: blue jeans and a grey sweater under a dark green hoodie. I thought she was quite breathtakingly lovely. \n\nShe suddenly looked at me, and I noticed her eyes were clear and deep and blue. And very serious.\n\n\"Don't tell my parents I'm here,\" she said. \"Not until we've spoken in the morning, anyway. Please?\"\n\nI nodded. \"OK,\" I said. \"Let's speak then.\"\n\nThe noise I'd heard was her large rucksack landing on the floor after she'd pushed it through the window that she'd forced open. Now I carried it upstairs for her, Polly trailing behind us. At the top of the landing I followed her into her room and rather self-consciously put it beside her bed.\n\n\"I'll say goodnight then,\" I said. \"Polly - you coming?\"\n\nBut Polly was already curled up at the foot of her mistress's bed. She gave me an apologetic look but it was clear where I now stood in the hierarchy.\n\n\"Sorry,\" said the girl. \"But I always used to sneak Polly up into my room. She's used to it when I'm here.\"\n\n\"That's fine,\" I said, and wished them both good night and went out, shutting the door. I realised I was a little jealous that I had been replaced so easily in Polly's affections. I think that's what it was.\n\nIt was only when I got back to my own room that I realised I hadn't asked the girl her name.\n\n**\n\nPolly woke me up by scratching at my door and whining. I padded over and opened the door and she bustled in, tail wagging and cheerful, happy for me to be her best friend again now that it was breakfast time. I looked across the hallway. The girl's door was slightly ajar - Polly must have nosed it open to get out - and I could just see a rather small, motionless lump under the bed clothes.\n\nI pulled her door closed, got dressed, and went downstairs. I decided I would have to write off my usual routine for today at least, so I busied myself catching up on some other chores: tidying away some of my things and having a general clean up, chopping up and bringing in some more firewood from the shed for the wood burner and clearing out some gutters.\n\nShe came downstairs just after 11, still in her pyjamas but wrapped in a startlingly pink dressing gown that I guessed she'd had when she was much younger. Polly rushed over to meet her and the girl bent and scratched her ears fondly.\n\n\"Dear Polly,\" she said. \"At least somebody's glad to see me.\"\n\nShe looked at me quizzically. \"Have you spoken to my parents?\"\n\nI shook my head. \"I said I wouldn't. But I think I should, at some point today. Don't you?\"\n\nThe girl shrugged a little helplessly. \"I suppose so.\"\n\nI asked her if she wanted coffee and she nodded. I made us a cup each and then gestured to the living room. Somewhat reluctantly, she followed me. I sat down in one of the armchairs and she settled herself into the sofa opposite, legs tucked up underneath her. Polly lay down on the carpet directly in front of her, rather protectively I thought. \n\n\"So,\" I said. \"You didn't like Spain then?\"\n\nShe sighed. \"I never really wanted to go. But mum said it would be good for my language skills and I thought it sounded rather... glamorous and exciting. But the reality was it was just all the same people as here, all ex-pats living in their own little bubble, going to each other's villas every night to drink too much wine and laugh at the same old jokes. And some of the men...\" \n\nShe shuddered. \"Honestly, I was the youngest person in the area by about fifty years. And all these awful middle-aged men were making any excuse to put my arm round me and give me a squeeze and make jokes about how if they were twenty years younger ha ha ha... yeuch!\" She shuddered melodramatically.\n\n\"So - you just left?\"\n\nShe looked down. \"Well, the thing you must understand about my family is that there's lots of us, and there's lots of feuds and grievances and the whole thing's a minefield really. I just told Aunty Sue that I'd heard from Uncle Tim that his wife wasn't well, and I know she can't stand her and Uncle Tim never speaks to her either, and so if I said I was going to stay with them there was no way she was going to check with them. So... I just texted them yesterday to say I'd arrived safely when of course I was... always planning to come back here.\"\n\nThere was something a little evasive and rushed about the way she spoke that made me doubt this was the whole truth, but I also sensed now was not the time to push for it.\n\n\"What's your name?\" I said.\n\nShe looked surprised. \"Oh yes - of course! Silly of me. I'm Natalie... Tilly, most people call me. At school, I mean.\"\n\n\"I'm Matt,\" I said. \"Or Matthew, I suppose, but nobody calls me that.\"\n\nWe regarded each other for a moment.\n\n\"I don't really know what to do,\" I said. \"This is your parents' house, they're not back for another four weeks or so... and I feel I should tell them that you're back here. And obviously, if you want to stay here... I'll have to find somewhere else.\"\n\n\"Why?\"\n\n\"Well... it just wouldn't really be... right. And... well, I'm trying to get a book written.\"\n\n\"Really? You're a writer?\"\n\n\"No,\" I said. \"I can't call myself that until it's finished, published and at least one person has bought it. But... an aspiring writer, at least.\"\n\n\"Well, you can keep writing. I'll stay out of your way. I'm really very quiet, you know.\"\n\n\"Hmmm,\" I said. \"No, I think I should probably try and find somewhere else. Maybe there's another cottage nearby I could rent, or something.\" \n\n\"But that's crazy! This is a big house, there's lots of room. And I promise I'll stay out of your way.\" \n\nI considered. She looked at me a little helplessly.\n\n\"I really don't want to be here on my own.\"\n\nI looked at her sceptically. \"And so, when you broke in last night... you were planning to maybe... invite some friends up to stay, perhaps? Have a bit of a house party for a few weeks?\"\n\nShe flushed scarlet. \"No! Nothing like that!\" But again, I sensed I had struck a little closer to home than she liked.\n\nI pondered. I didn't really want to leave. But I also couldn't imagine explaining to Mr and Mrs James that I'd spent the summer shacked up with their young daughter, no matter how innocent it all was.\n\nShe could see me thinking it over.\n\n\"Look,\" she said. \"This is my fault. I've the one who's spoilt it. I've got an idea - will you at least agree to this?\"\n\nShe took a deep breath.\n\n\"I'll text a few friends. See if I can find somewhere else to stay. It might take me a few days, but I promise I'll be gone by the weekend. And... don't tell my parents I was ever here. They still treat me like I'm fourteen and it'd just be... well, I'd never hear the end of it. Please?\"\n\nShe looked at me beseechingly. I looked at her, then at Polly. Polly's eyes also seemed to be pleading.\n\n\"Fine,\" I said. \"Just until the weekend.\"\n\nPolly's tail thumped.\n\n**\n\nThat afternoon I tried to get back to the writing but it wouldn't flow, so I gave up early and took Polly for her walk. Natalie was in her room, door shut - I guessed she was still catching up on her sleep.\n\nWe had a good ramble along one of our favourite routes, along the shore of the lake for a few miles and then back again. It was a glorious day, sunny but cool. Polly splashed around happily in the shallows, and I threw her the occasional stick to fetch but I was a bit fed up. I hoped Natalie would find somewhere to go, and soon. I knew that, despite her best intentions, she'd be a distraction. There is all the difference in the world between an empty house and a house with somebody else in it, no matter how quiet and discreet they're trying to be.\n\nAnd, if I was honest, she was too attractive to feel relaxed and comfortable around. Already I found myself thinking about those quick glimpses of her figure that I'd seen underneath her dressing gown. Her blue eyes looking into mine. I didn't want to become another one of those leering older men that she'd had too much of in Spain. \n\nNo, sadly, the sooner she was gone, the better. \n\nWe made our way back and I dried Polly off with an old sack before letting her back into the house. There was the smell of cooking. Natalie was standing by the hob, peering into a saucepan and prodding something with a fork.\n\n\"I'm making pasta,\" she said. \"It's about the only thing I can cook, but everybody says it's pretty good. And I've done a sort of salad. Hope that's OK.\"\n\n\"I've been cooking for myself for two weeks,\" I said. \"I don't care if it's just a cheese sandwich, as long as somebody else made it.\" I got myself a beer from the fridge and poured myself some into a glass. She looked at it.\n\n\"Can I have some of that?\" she asked, a little shyly.\n\n\"Would that be legal?\" \n\n\"Of course! Well... in lots of countries it would be. And I promise I won't tell on you.\"\n\nI poured her a small glassful and then topped it up with lemonade. We chinked glasses.\n\n\"Thank you,\" she said. \"For the drink... and letting me stay a few days.\"\n\n\"Any luck finding somewhere?\"\n\nShe returned her attention to the pasta. \"No, nowhere yet. Maybe my friend Gillian, she's the best bet. She's got three younger brothers though, and they just... gawp at me all the time. Like they've never seen a girl before. Or Ashley, I've stayed with her lots of times. Her father's a bit odd though. Swims totally nude every morning in their pool, so you have to be careful.\"",
        "\"So... have you actually contacted them?\"\n\nShe looked at me quickly, then looked away. \"Well... not exactly. I'm still thinking about the best thing to do. I mean, I don't want to get an invitation to go somewhere and tell them I'm coming and then realise I could go somewhere else which would be nicer, you know?\"\n\n\"I suppose not,\" I said. \"Though we did say the weekend, and that's not much time.\"\n\nShe speared the pasta again, and looked irritable. \"I know! I'll sort something. I think this is ready. Can you set the table?\"\n\nShe was right, her pasta wasn't bad at all.\n\nOver the meal Natalie set herself to finding out more about me. She had the disconcerting ability of the young to ask quite direct questions with the minimum of embarrassment, which was both rather unsettling and rather sweet at the same time.\n\n\"So, why aren't you married?\"\n\n\"I was,\" I said. \"Until quite recently.\"\n\n\"Oh, I'm sorry. So, are you here nursing your broken heart?\"\n\nI smiled. \"No. Not that bad. By the end I think we were both glad to get it all over with.\"\n\n\"How long were you married for?\"\n\n\"Three... just under four years.\"\n\n\"No children?\"\n\n\"No.\"\n\n\"So... why did you get divorced? Or am I not allowed to ask that?\"\n\nI twirled my pasta around my plate. \"I don't mind you asking. I'm not sure I can really answer, though.\"\n\n\"Can't answer or don't want to answer?\" Her voice was friendly. I looked up and saw she was looking at me quite seriously.\n\n\"A little of both, I suppose. I think I'm still... working it all out.\"\n\n\"Did you cheat on her?\"\n\n\"No,\" I said.\n\n\"Would you tell me if you had?\"\n\n\"Yes,\" I said. \"I think I would.\"\n\n\"Well then... did she cheat on you?\"\n\n\"I don't know. I don't think so.\"\n\n\"This is intriguing,\" she said. \"At least for me. You must tell me to stop asking questions, if you want. Everybody says I'm terribly nosy. But sometimes I think we're all just so polite with each other, and we never say what we're really thinking and - well, I can't really see the point of that.\"\n\n\"Maybe to spare people's feelings?\" I said, a little amused at her earnestness.\n\n\"Yes, I'm always being told to think about that. But I think people would rather that you asked them about things honestly, wouldn't they - at least most of the time?\"\n\n\"Yes,\" I said. \"I think most of the time... well, some of the time... they probably would. It's just... knowing when those times are can be tricky.\"\n\nShe gathered our plates together and scraped the leftovers into the salad bowl.\n\n\"So, you didn't cheat on each other. As far as you know, anyway. Did you argue a lot?\"\n\n\"Towards the end,\" I said. \"Towards the end we seemed to do nothing else.\"\n\n\"But you must have liked her to start with? More than liked her - I mean you must have really fancied her.\"\n\nI had to laugh. \"Yes... I did... I did really fancy her.\"\n\n\"What did she look like? Have you got a picture? Or is that too nosy again?\"\n\nI took out my phone, scrolled through some pictures and found her a picture. It was taken on our honeymoon, standing barefoot in the sand on a beach in the Caribbean.\n\n\"Wow... she's really... beautiful! I mean... gorgeous!\"\n\n\"Out of my league, you mean?\"\n\nShe tutted. \"Don't fish for compliments. No, not out of your league at all.\" She looked at it more closely. \"You look really happy.\"\n\n\"We were,\" I said. \"And then suddenly you wake up a few years later and realise you're not.\"\n\nShe took one last look and then handed the phone back. As she did so my fingers brushed against hers, just for the briefest of moments, but we were both very aware of it. She coloured slightly and busied herself tidying things away. \n\nI retreated to the living room and stared rather aimlessly at the television. Polly trotted over and settled noisily on my feet. My fingers still tingled from that brief touch.\n\nYes, the sooner she was gone, the better.\n\n**\n\nThe next day I made a valiant effort to stick to my old routine. And it mostly worked. The words didn't come as easily but at least they came, and by lunchtime I was reasonably content with my progress. I reckoned I was two-thirds of the way through my first draft and already the ending was forming nicely in my mind.\n\nI didn't see Natalie, I heard her very quietly go downstairs once but other than that it was as silent as I could have wished. When I went downstairs at midday, she was sitting on the couch reading a magazine, Polly lying beside her.\n\n\"How did it go?\" she asked.\n\n\"Really good,\" I said, and I was touched when she looked pleased.\n\nI patted my legs to summon Polly. \"Come on Poll, time for our walk.\"\n\n\"Can I come?\"\n\nI must have hesitated.\n\n\"Oh... that's OK, you don't want me along.\"\n\n\"Sorry,\" I said. \"It's just... this walk at lunchtime is the one I use to get the story straight in my head. I sort of... tell it to myself, and see what's working, and what's going to happen next. I think if you came...it wouldn't work as well for me.\"\n\n\"That's OK,\" she said, but I could see was a little hurt. She was still very young, I reminded myself.\n\nI looked at her. \"Listen... later each day I do the big walk. Two, three hours, all over the place. And that's when I really want to empty my head. Come with us then. You can... sing the entire soundtrack from Frozen, if you want.\"\n\n\"I'm not that much of a baby!\" she protested, but she was mollified. \"All right, I'll come later. And serve you right if I do sing all the way.\"\n\n\"I look forward to it,\" I said, and we smiled at each other and she went back to her magazine.\n\nThe afternoon writing also went well, though I was aware at the back of my mind how much I was looking forward to her company later. I knew this wasn't good, but I was a man and she was lovely and it would be silly to deny that I liked her very much. And she would gone in a few days, so I should make the most of her company.\n\nWhen I went downstairs she was cleaning her walking boots that she'd found in a cupboard. She was in her jeans and a t-shirt with a man's shirt loosely over the top of it. It was a warm day but I knew it could get cool quickly.\n\n\"You'll need a sweater or a coat,\" I told her.\n\nShe rolled her eyes. \"You sound like my Dad! I'll be fine.\"\n\nI shrugged. \"OK,\" I said. \"Let's go.\"\n\nI didn't get the soundtrack from Frozen, but I did get several numbers from Annie, Mamma Mia and The Sound of Music. She sang quietly to herself as we trudged along, me a few paces ahead of her, Polly alternating between bounding ahead to scope out the lie of the land and running back behind us to make sure we hadn't dropped anything. \n\nI liked her voice, and I liked being out there, just the three of us.\n\nWe reached the top of the valley - the last few hundred yards to a rather breathless rendition of 'Climb Every Mountain' - and gazed down at the landscape below.\n\n\"It's really beautiful, isn't it?\" she said. \"I mean, that sounds... really feeble. But it is.\"\n\n\"It is,\" I agreed.\n\nWe stood like that for several more minutes. The sun was beginning to get low and though the view was stunning I was aware that we'd have to hurry to get back before dark. Beside me, Natalie suddenly shivered.\n\nI had a spare sweater in my backpack and I handed it to her with mock disapproval. She took it meekly.\n\n\"Thanks... Dad.\"\n\n\"Come on,\" I said. \"Let's get home. Lead the way, Polly.\"\n\nWhen we got back - only a few minutes before it got really dark - I said it was my turn to fix supper. I was relieved to learn she wasn't a vegetarian, as I'd bought a couple of steaks from the village shop a few days earlier and I'd been looking forward to them. I cooked them medium rare with some chipped potatoes and another makeshift salad and felt rather pleased with myself when she wolfed it down and declared that it was the best meal she'd had in ages. \n\nShe had another glass of watered-down beer with her meal and we chatted more easily than the night before. There was still a hint of evasiveness in some of her answers about her time in Spain so I didn't push that and instead asked her about her time growing up here and her brother and other, safer topics. \n\nWhen I asked her if she wanted coffee she grimaced.\n\n\"Better not... I can feel a tummy ache coming on and, well... coffee can make it worse.\"\n\nI nodded.\n\n\"In fact... do you think we could go to the town tomorrow? I need to get some things. I don't really want to go, somebody might see me and tell my parents - it's such a small place... but I really think I'll have to risk it.\"\n\n\"Give me a list,\" I said. \"And I'll get what you want.\"\n\nShe blushed slightly. \"Really? You know the sort of things I'm talking about?\"\n\n\"Of course. It's no big deal.\"\n\n\"Well... it's kind of embarrassing. Girl stuff is just the worst. Are you sure you don't mind?\"\n\n\"Give me a list,\" I said again. \"And I will get what you need, and then we will never speak of it again.\"\n\nShe smiled. \"Thanks,\" she said. \"That's really nice of you.\"\n\nI wanted to ask her if there was any more progress on finding somewhere to go, but I also suspected the answer was no. That argument could wait until tomorrow. Though tomorrow was Thursday, which was cutting it a bit fine. Ah well. It wouldn't be the end of the world if she had to stay until Monday, I supposed.\n\n**\n\nIn town the next morning I got all her things from a pharmacy and topped up on various other supplies. I noticed I was buying different food than I would have if I'd just been shopping for myself. Things that I thought she'd like. Just in case, I told myself. If she did have to stay the weekend we may as well make it nice, and have some good food and a decent bottle of wine. And if she was gone, then I could still enjoy it on my own.\n\nI returned to a rapturous welcome from Polly and a more subdued one from Natalie. I could see she was suffering a little so I just handed over what I'd bought for her and said I'd see her later - I was going to go straight back to work.\n\nSometimes the words seem determined to stay in your head and sometimes they can't get out fast enough. That afternoon they poured out of me and for the first time I felt confident that not only was I going to finish this damn book, it was actually going to be at least half-decent. Something I could be proud of.\n\nI was so focused that I didn't even notice the time until there was a tentative tap on my door. I looked around and saw her standing there with a tray.\n\n\"It's nearly seven,\" she said. \"And I don't think you've eaten anything. Did you even have lunch?\"\n\nI realised I hadn't and I was ravenous.\n\n\"I'm sorry,\" I said. \"We'll have to skip our walk today.\"\n\n\"That's all right... I'm not really up to it anyway... but I bought you something. In case you wanted to carry on.\"\n\nShe'd done me a plate of pasta and meatballs which smelt wonderful. \n\n\"Thanks Natalie. That's really kind of you.\"\n\n\"That's OK,\" she said. \"Carry on. But don't forget to eat.\"\n\nShe closed the door and I quickly gulped down the food, which was very welcome indeed. I smiled when I noticed she'd also put a glass of milk on the tray. A little in-joke between us. Or was that reading too much into it?\n\nWhen I finished, I debated if I should carry on or go downstairs and chat to her. I'd just finish the chapter I was on, I decided. Just a few more minutes.\n\nWhen I looked at the clock again it was a few minutes after ten. I felt drained but exultant. I had thought it was going to be touch and go to finish the book before the end of my time here - now I felt sure it would be done in the next week. Ten days at the most. An actual, real, full-length, honest-to-goodness book.\n\nI took my tray downstairs to wash up and to see if Polly needed to go outside one last time. Natalie was asleep on the sofa. I saw she was wearing my sweater from the day before. Polly lay stretched out beside her, one eye watching me speculatively.\n\nI quietly took the tray into the kitchen, let Polly out for a few minutes, then went up to Natalie's room. I took the duvet from her bed and carried it downstairs. Then I carefully arranged it over her. She didn't stir. Polly settled back down on the carpet. I left them both and went up to my bedroom, undressed, and was asleep inside five minutes.\n\n**\n\n\"So,\" I said over breakfast. \"What's the plan? Who's the lucky winner? The three lovesick boys or the nudist dad?\"\n\nShe scowled. \"It's easy for you to laugh about.\"\n\n\"Sorry. But that was our deal.\"\n\n\"I know.\" She sighed. \"Gillian's away. So I guess it'll have to be the nudist dad.\"\n\n\"OK,\" I said. \"What time do you need to leave?\"\n\n\"Well... the thing is... you see... the problem is...\"\n\nI held up my hand. \"Natalie - we had a deal! I don't want to hear about problems.\"\n\n\"I know, and I'm totally not bullshitting you. I swear. But... they're away until next weekend. And then they say I'm totally welcome.\"\n\nAgain, that note of evasiveness. She would never be a poker player.\n\n\"And when you say 'next weekend' - that means when, exactly?\"\n\nShe looked down at the floor. \"Well... they're back on Sunday night. And they have some house guests on Monday who are leaving on Tuesday. So, I could leave that Tuesday morning, and stay with them from Tuesday night.\"\n\n\"Next Tuesday... Natalie! That's... ten days away!\"\n\n\"Well - so what? I've been good, haven't I? Tell me honestly - has your writing gone badly since I got here?\"\n\nShe looked at me fiercely. I sighed.\n\n\"No... actually, it's gone quite well. But that's... not the point.\"\n\n\"Of course it is! You came here to write, and you're writing. And I can bring you meals, and tell you how marvellous you are.\" She was being mischievous now, but I was still annoyed.\n\n\"We agreed it wouldn't be appropriate for you to stay here with me!\"\n\n\"Well, actually you said that, and I didn't agree with it. But it's worked really well so far. No inappropriateness on either side. And it's only ten more days. And then I'm gone. And then - you will Never See Me Again.\" These last words were delivered with a dramatic flourish. \"Unless you want to. Perhaps when you're super famous I can come and get my copy of your book signed, and I can sort of look at you all dewy-eyed and you can write 'To Natalie, who made it all happen for me with her wonderful pasta and meatballs' and I can clutch it to my virgin bosom and...\"\n\n\"Oh shut up,\" I said. I was trying not to laugh and only just succeeding. \"You're... completely impossible.\"\n\n\"Mmm... That's just what Daddy says.\" Her blue eyes looked at me, sparkling.\n\nI glowered at her, but it was pointless. She'd won, she knew she'd won, and all I could do now was concede defeat gracefully.\n\n\"Tomorrow, we're going to book your train tickets.\"\n\n\"OK.\"\n\n\"You're going to cook two out of three meals. And the only reason you're not cooking all of them is that I can't live on pasta.\"\n\n\"Agreed.\"\n\n\"And you're going to be quiet.\"\n\nShe ran a pretend zipper across her lips.\n\n\"And... and... well, you're going to... not really annoy me.\"\n\nShe looked sorrowful. \"Have I annoyed you? Really?\"\n\n\"No... I'm just saying... don't start. OK?\"\n\n\"Deal,\" she said. \"Come on Polly. Let's go for a walk.\" She looked at me. \"Do you want to come with us?\"\n\n\"No,\" I said. \"I'm going to go upstairs and kick things and pretend that they're you.\"\n\n\"Ooh... so masterful! See you later then.\"\n\nShe headed off across the living room. I watched her go. Her bottom rolled cheekily in her jeans. It seemed very exuberant and very pleased with itself.\n\n\"Damn it!\" I said under my breath to the empty room. I had been totally out-manoeuvred by a teenage girl.\n\nBut I knew, deep down, I wasn't sorry at all.\n\n**\n\nTo her credit, she did try and branch out from pasta. But her omelettes were not a great success and she set off the fire alarm trying to make savoury pancakes so in the end we agreed it was better that we stayed on the tried and tested. On Monday night I made her a chicken stir-fry that once again she devoured and I allowed her to try the wine that I'd bought a few days previously.\n\n\"I hope you're not trying to get me drunk,\" she said primly.\n\n\"No,\" I said. \"You're having half a glass and that's it. What do you think?\"\n\nShe sipped again. \"Umm... a slight understated hint of blackberries with a wonderfully crisp tang of apples?\"\n\n\"Oh Christ.\"\n\nShe giggled. \"Sorry, I read something like that in one of Daddy's magazines. I'm running out of things to read. He's in their wine club, or something.\"\n\n\"So, what did you really think?\"\n\n\"I thought it was pretty gross, actually. I think I'll stick to beer and lemonade.\"\n\n\"OK,\" I said. \"I hereby end my attempts to broaden your horizons.\"\n\nShe widened her eyes. \"Really? Is that what you were doing? Gosh, what a lucky girl. What else is on your list for me?\"\n\nThere was a playful invitation in her eyes, a little more confidence that hadn't been there previously. She was daring me. But I didn't think she really meant it, and I didn't intend to find out. \n\n\"Doing the washing up,\" I said. \"And properly this time. Come on Polly. I'll take you down to the shore and back.\"\n\nShe pouted but didn't say anything more. \n\nAs I walked down to the lake in the evening gloom I reflected on that exchange. Ever since she'd won her battle to stay on for longer there had been a slight shifting in our relationship. Before there had definitely been a sense of a clear boundary, between what we could say and how we'd act with each other. We'd never touched each other, for example, apart from that one time our fingers brushed together. We'd kept a certain amount of physical space between us as we moved around the house. Now those spaces seemed to be shrinking... I noticed she'd started standing a little closer to me. I caught traces of her perfume now, and I wondered if that was because of her greater proximity or because she'd started wearing it. If so, why? She'd definitely upped the flirting too.\n\nPart of me wondered if she was even aware of it. Pretty girls can sense their power over men before they begin to consciously understand it. They can use it without meaning to. It would be dangerous to read too much into it.\n\nI just had to last a week, that was all.\n\nThe consolation was that at least the writing was still going well. I thought might even finish before she left. That would still give me a couple of weeks to just really enjoy myself out here. Perhaps even borrow one of their tents and go hiking a little way for an overnight stay in the woods. I hadn't done that since I was a boy. Or take a canoe from the boathouse and do a trip to the top of the lake. Do some fishing. Heck, maybe even start some notes on a second book.\n\nI realised suddenly that I was trying to think of things to do once the book was done and Natalie was gone. The book being finished - subject to revisions and minor rewrites after it had sat in a drawer for a few months - would feel wonderfully strange, but in a good way. Natalie being gone would feel... well, the thought of it made me feel empty.\n\n**\n\nOn Tuesday I came downstairs at lunchtime to find Natalie siting at an artist's easel in the garden. She was dabbing at a canvas in a very intense, focused way.\n\n\"I didn't know you were a painter,\" I said.\n\nShe jumped and twirled around. \"God, you startled me! No - I'm not, at all. You're not to look.\"\n\nShe stood up and placed herself protectively in front of her picture. I held up a hand.\n\n\"That's OK,\" I said. \"Show me when it's done. If you want to. But I think it's a great idea. I wish I could paint. But I've never been able to draw even a straight line.\"\n\n\"Oh... well, I'm not much good really. I used to like it. And I always thought I'd like to try it again sometime. Then I thought today, well, why not now? I'd like something to sort of... well, remember this time by. Being here, with you and Polly. It's been... really nice.\"\n\n\"Yes. It has. That's a lovely thought. Whatever you do, I hope you'll let me take a photo of it too. I'd like to remember this time as well.\"",
        "\"Oh... but you'll have your book for that.\"\n\nI shrugged. \"This is where I wrote the book, but the story came from other places. But the time I spent being here, writing it... I don't know, maybe that'll be in some other book. But I'd really like a copy of the picture, if you'd let me have one.\"\n\n\"Well... I'll see how it turns out,\" she said. \"It's probably going to be rubbish.\"\n\n\"Well then, I'll send you a copy of my rubbish book, and I'll have a copy of your rubbish picture, and we'll be all square.\"\n\n\"But I bet your book isn't rubbish. It can't be!\"\n\n\"Why not?\"\n\n\"Well... I can't imagine you writing a rubbish book, that's all.\"\n\n\"Thank you,\" I said.\n\nThere was a silence.\n\nShe looked at me. \"Now you're supposed to say... I can't imagine you painting a rubbish picture.\"\n\n\"Oh.\" I looked skywards, embarrassed.\n\n\"Well, come on then!\"\n\nI puffed out my cheeks. \"The problem is... I've seen you cook. I can totally see you painting a rubbish picture.\"\n\nShe tried to hit me with her paintbrush. \"OH FUCK OFF! That's so MEAN!\"\n\nI laughed. It was the first time I'd ever heard her swear, and it was charming.\n\n\"I'll see you later,\" I said. \"I'm going back to my brilliant book, while you work at your rubbish picture.\"\n\n\"Fuck off! You can get your own fucking meals from now on!\"\n\n\"Oh god, yes, thank you! No food poisoning for me tonight.\"\n\n\"I HATE YOU!\"\n\n\"Hate you too!\" I called back cheerfully, and went back inside. Polly looked at me, puzzled.\n\n\"Don't worry,\" I said, without thinking. \"I love her really.\"\n\nPolly thumped her tail, pleased. I stared at her. Then I looked back outside, where Natalie was once again focused on her picture. \n\nI went up the stairs rather slowly and thoughtfully.\n\n** \n\nShe tried to scowl at me as I came down for supper but I could see her smirking underneath it and the mood within five minutes had a very relaxed, intimate air. Somehow that silly little exchange had broken another small barrier between us. I decided to push at something that my mind had occasionally kept returning to.\n\n\"So... Spain,\" I said, between mouthfuls.\n\n\"Mmhmm. What about it?\"\n\n\"Why did you really leave?\"\n\nShe stopped chewing and looked at me. \"I told you. Boring people and grabby old men.\"\n\n\"I know that's what you told me. I just think there's some other things you didn't.\"\n\nShe gazed at her plate and moved some pasta around for a few moments.\n\n\"It all seems a bit silly now.\"\n\n\"I'm sure it didn't at the time. But if it's embarrassing, don't tell me. I've just been wondering, that's all.\"\n\n\"Why were you wondering?\"\n\n\"I don't know. Nosiness, partly. And... I think something upset you then. I like you a lot, and you'll be gone soon... and sometimes telling things to people can help. But it's up to you.\"\n\nShe moved some more pasta around, took a half bite, then put her fork down again. Then suddenly those deep blue eyes were on me again.\n\n\"You won't tell anyone? Actually... don't worry, I know you won't. You make me feel very safe.\"\n\n\"Thank you,\" I said. \"And I won't.\"\n\nShe fidgeted in her seat. \"The thing is, Spain was always a bit of a... well, a sort of cover story. I knew my parents were going away for the summer, and I thought poor old Polly would be put in kennels, and the house would be empty.\"\n\nShe paused, and took a sip of her drink.\n\n\"And... I'd sort of been seeing this boy. And I was really crazy about him, god knows why. I even wrote poems about him! Can you believe that? I just thought he was so... perfect. And I really... I really wanted to spend as much time with him as I could. So, I told him I'd go to Spain, and then I'd find some excuse to leave, and everybody would think I was somewhere else, and then we could come up here and spend the summer here. Just the two of us.\"\n\n\"Ah,\" I said. \"But... obviously something else happened.\"\n\n\"I was supposed to wait three weeks before I came back. He was busy doing some job for his father, or something. But I couldn't wait that long so I came back after a fortnight and I hitch-hiked to his house and his parents said he was in town and... and... and...\"\n\nSuddenly she was near tears.\n\n\"Hey,\" I said. \"It's OK. Take your time. Or don't tell me... I think I can probably guess.\"\n\n\"And he was... he was coming out of the cinema and he had his arm around this girl and I thought well maybe that's his sister and then I saw him kissing her and there was no way... well, I went up to him because even then I thought he'd be able to explain it or something and he just looked at me really surprised and he didn't even take his arm away from her. And this girl he was with... she said... she said... something so awful to me...\"\n\nI reached across the table and held her hand. I don't think she even noticed.\n\n\"She said... she said... darling, the truth is from what he tells me I'm just a... much better... fuck... and she just laughed... and I ran away and he called after me but... well, then I sort of came here anyway because I didn't know what else to do.\"\n\n\"Jesus, Natalie,\" I said. \"I'm so sorry.\"\n\n\"I know it all sounds really silly but it was just... awful.\"\n\n\"Of course it was. You didn't deserve that.\"\n\nShe sniffled. \"Oh god. Horrible bitch.\"\n\n\"Totally horrible bitch,\" I said. \"They deserve each other. And you deserve a hell of a lot better.\"\n\nShe sniffled some more and then Polly came and laid her head on her lap. That made her really burst into tears. I came quietly around the table and put my arm around her and that's how we stayed for a while, Polly and I trying to comfort this crying girl. \n\n**\n\nOn Thursday I declared a day off.\n\n\"We need a challenge,\" I said. \"We're going to canoe to the top of the lake and back.\"\n\n\"Really? The whole day? What about your writing?\"\n\n\"I'm nearly done. I'll finish tomorrow, I think. Maybe Saturday, but I think tomorrow.\"\n\n\"Don't you want to finish it today?\"\n\nI shook my head. \"Have you seen the weather forecast? Lots of rain on its way. Lovely today, but tomorrow and the weekend - no good at all.\"\n\n\"Oh no! That's such a shame!\"\n\n\"So... let's make the most of it. Picnic lunch, picnic tea. Set off as soon as we can. I reckon about three hours there and three hours back. What do you say?\"\n\n\"Yes,\" she said, clapping her hands. \"I'd love it. I haven't done that for years. We used to do it all the time when we were smaller. I know exactly where we can have lunch, too.\"\n\nWe assembled a bag of sandwiches and snacks and a cooler box of drinks. I went down to the boathouse and cleaned up the rather dusty canoe before launching it into the water. I found some old but serviceable lifejackets and cleaned them off as well.\n\nThen, with Natalie in the bows, Polly in the middle, and me at the back, we set off.\n\nThere was hardly a breath of wind on the lake, just a very faint breeze which was enough to keep us cool but not enough to make paddling hard work. We settled into an easy rhythm, hugging the shore for the most part but occasionally cutting out into deeper water when we went past an inlet or a bay.\n\nI could hear Natalie humming and singing quietly to herself as she paddled. She'd tied her hair into a ponytail and I could see the occasional bead of sweat run down her back, soaking into her shirt. I noticed that my borrowed sweater was sticking out of the top of her bag and I wondered if I would ever get that back. She seemed to have become quite attached to it. I found I was humming along too. Polly watched the shore intently, ready to leap out and attack the moment she saw a rabbit or any form of life.\n\nBut the lake and its shores seemed completely deserted that day. It wasn't quite peak holiday season and this lake was more remote and more difficult to get too than some of the others. I had occasionally seen a few other boats over the last few weeks but it was never busy, and today it was completely ours.\n\nEvery now and again I would call a halt and we would just float idly, letting the boat spin and drift while we soaked in the sun and sipped our drinks. Polly lapped water from the lake. Then we would pick up our paddles again and resume our leisurely progress.\n\nAround midday Natalie pointed to a small outcrop just to the left and ahead of us.\n\n\"We used to go there for lunch,\" she said. \"It's one of my favourite places. Can we go there?\"\n\n\"Of course,\" I said.\n\nWe beached the canoe on the rocky shore and I somewhat stiffly extracted myself. I looked around. It was a perfectly private spot, enclosed on either side by two walls of rock that stretched out into the water for about twenty feet or so, forming a small harbour. Behind us the woods were thick and dark and for all I knew they could have gone on for miles. We could have been the last people on earth. \n\n\"I love it here,\" said Natalie. \n\nShe spread out a picnic blanket from the bag and we settled down to eat. Polly was banished to eat her somewhat smelly dog biscuits in a patch of shade some twenty feet away, where she crunched them enthusiastically and very noisily. \n\n\"I'm just trying to think when I was last here,\" said Natalie. \"It might have been... six or seven years ago. Wow! Can it have been that long? Yes, I think it must have been, because...\"\n\nShe trailed off. I looked over, enquiringly, and saw that she was blushing.\n\n\"Because...?\" \n\n\"Well... you can see it's quite private here.\"\n\nI nodded.\n\n\"So... we used to swim here.\"\n\n\"Ah,\" I said, understanding dawning.\n\n\"And well... that time was the first time I realised... my body was a bit different. And that maybe I didn't want to just... strip off in front of everyone. I mean, it was only my mum and dad and brother, but... still. You know?\"\n\nShe took another bite of sandwich and swallowed it thoughtfully.\n\n\"So, I didn't swim that day. I hadn't bought a suit or a bikini, so I just didn't. And I remember feeling a bit sad as we went back that I hadn't, you know? Like that was something I could never do again.\"\n\nShe sighed. \"Anyway, so that was how I know when it was that I was last here. Funny how those things stay with you.\"\n\n\"Did you bring a suit with you today?\"\n\nShe shook her head. \"No... I didn't think about it. I could swim in my... underclothes, I guess. I've got a change with me.\"\n\n\"If you want,\" I said, \"I could go for a walk up into the woods and you could have a swim. If you wanted to. I wouldn't peek.\"\n\nShe looked at me. \"I know you wouldn't,\" she said. Then she went back to eating her sandwich, seemingly lost in thought.\n\nWhen she'd finished eating, she got to her feet. She looked at me.\n\n\"I guess... sometimes I just need to be a bit braver.\"\n\nShe lifted up her arms and pulled off her top. She was wearing a blue sports bra underneath it. Then, more shyly but still with a sense of determination, she peeled off her shorts. Underneath she wore black panties, high cut into a V shape.\n\nShe paused for a moment, then smiled a little nervously at me, took a deep breath, and took off her bra. Her breasts were startlingly white, full and round and topped with smooth, puffy pink nipples. Then she tugged down her underwear. She'd shaved herself neatly, with just a small nest of dark blonde hair above her barely visible slit.\n\nShe looked at me. \"I'm going to swim.\"\n\n\"OK,\" I said. I think my voice may have been a little dry.\n\nShe walked down to the shoreline. Her buttocks were high and firm and perfect. She stood knee deep for a moment, adjusting to the temperature, then took a few more steps out before launching herself out into the deeper water.\n\n\"Oh my god,\" she said. \"That's cold!\"\n\nThere was a wonderfully erotic innocence about watching her swim. She was aware of me watching her, enjoying the sight of her, but I think she also felt completely safe. I would catch a glimpse of breast or bottom occasionally breaking the surface and that was lovely but mainly I just liked watching her swim and being totally free and relaxed.\n\nAfter a few minutes she stood waist deep in the water and called to me. \"You should come in!\"\n\n\"Maybe next time.\"\n\n\"There's not going to be a next time,\" she said, a little wistfully. \"Please?\"\n\n\"All right,\" I said. \"But I'm not as brave as you. Look the other way!\"\n\nShe pouted, but she turned her back.\n\nSomehow I managed to get myself undressed, though my hands were trembling. I was rock hard, there was no way she wasn't going to see that - but I also knew that today, that didn't matter. She was right. There wouldn't be a next time.\n\nI walked out to join her. The first touch of the water almost sent me scurrying back.\n\n\"Jesus!\"\n\nShe turned to look at me.\n\n\"Oh my god! Look at the state of you!\"\n\n\"You're not supposed to be looking!\"\n\n\"Sorry!\" She giggled and turned around again. I hurriedly splashed out to deeper water to make sure I was covered up, gasping as I did so. If nothing else, it was going to be near impossible to sustain an erection in those kinds of temperatures.\n\n\"You decent now?\"\n\n\"I guess.\"\n\nShe turned around, her eyes gleaming with mischief. \"What I want to know is, does something like that help or hinder you in the water?\"\n\n\"Very funny.\"\n\n\"I mean, it could be like an extra rudder, or something. If you need to turn really fast.\"\n\n\"You think you're funny.\"\n\n\"Well... I'm sorry, but that's such a ridiculous thing, isn't it? I almost feel sorry for men having those. I mean... they're not dignified, are they?\"\n\n\"I hope you drown,\" I said, and swam out a little deeper in what I hoped was an aloof manner. After a few more snorts and giggles she swam out to join me. We floated together, treading water, just a few feet apart. I looked again into these blue eyes, the wet blonde hair framing that beautiful, fair skinned face.\n\n\"Sorry,\" she said, smirking only slightly.\n\n\"It's ok,\" I said. \"It's probably fair comment. Dignity is... not easy.\"\n\n\"Is it because of me? You being like that?\"\n\nI looked around, embarrassed. \n\n\"No... it's because of Polly. She just... gets me excited.\"\n\nShe laughed and promptly took in a big mouthful of water. As she spluttered, I saw her eyes widen in a slight panic so I grabbed her and lifted her up, holding her close as she recovered her breath. Her body was firm and delicious, pressed against mine through the freezing water. She put her arms around me.\n\nWhen she'd recovered I looked at into her eyes, just a few inches from mine now. \"Yes. Of course it's because of you, Natalie\"\n\nShe smiled. \"Thank you,\" she said. \"That's... really nice.\"\n\nWe floated like that for a while longer. I could have kissed her then, and she would have let me, but it wasn't the place or the moment. \n\n\"Come on,\" she said. \"I bet I'm faster than you. Race you back to shore.\"\n\nI lost by a good three lengths.\n\nAs we emerged shivering from the water, she looked at me appraisingly. The cold had indeed done its work.\n\n\"Well,\" she said. \"I don't need to worry about that any more, do I?\"\n\n**\n\nWe made it back to the house around seven, feeling very well exercised and relaxed. Natalie had been quiet on the way back but she seemed happy. Every now and again she would turn around to pat Polly and she would smile at me and I'd smile back. \n\nWe unloaded the boat and Polly rushed off to see if any new smells had arrived in the garden in our absence. We walked a little wearily up to the house and put everything away.\n\n\"You want anything else to eat?\" I asked her.\n\nShe shook her head. \"No, not now. I might get a snack later. I want to go and work on my picture. I feel sort of... inspired. Do you mind?\"\n\n\"Of course,\" I said. \"I'll probably go and read and then turn in early. See you tomorrow.\"\n\nShe nodded and then quickly and rather clumsily pecked me on the cheek. \"Thank you,\" she said. \"That was just the loveliest day.\"\n\nI stroked her cheek. \"For me too.\" Then I turned and went upstairs.\n\n**\n\nFriday, as predicted, was a grey stormy day. Rain clouds built up in the distance and then moved ever closer towards us as the day progressed. But I was only vaguely aware of them. I could see the finishing line now. I sat down at around nine and hardly looked up until lunchtime, when Natalie brought me a tray of bread and soup.\n\n\"Going well?\" she whispered. I nodded.\n\nShe kissed me gently on the top of my head. \"Clever boy,\" she said, and went out, quietly closing the door behind her.\n\nBy five it was done. I found myself strangely reluctant to type the last words, even though I'd known what they would be for several weeks now. It was a strange feeling. I felt triumphant but also slightly sad. I remember my mother once saying that although she loved me as a new-born baby, part of her had also mourned the excited, expectant feeling of being pregnant. I supposed this was something similar.\n\nI saved the file carefully, made all the backups I could possibly need, then sat staring at the screen for a while. Out of the window I could see the rain clouds had nearly reached us. Then I went downstairs.\n\nNatalie was in the kitchen, wearing an apron. She looked at me questioningly.\n\n\"It's done,\" I said.\n\nShe walked over and gave me a hug. I squeezed her softly in return. \n\n\"What's that smell?\" I said. \"It's... terrific!\"\n\nShe went a little pink. \"Well, I thought you'd finish today, so I made you a cake. To celebrate.\"\n\n\"Not really!\"\n\n\"Well, don't get your hopes up. I found a packet of cake mix that's about five years old, but I think it's OK. And I iced it, and everything. Look!\"\n\nShe was very proud of it, and a lump came to my throat as I looked down at the small, rather lop-sided cake on which she'd carefully iced a picture of a book with my name on the front.\n\n\"That might be the best cake ever,\" I said. \"Let me take a picture of it before we cut it. And you, please, if you don't mind. I haven't got a picture of you.\"\n\nShe blushed again, a deeper colour this time, but she picked up the cake and stood holding it a little self-consciously while I snapped her with my phone.\n\n\"Thank you, Natalie. That's made a good day even better.\"\n\n\"Let's see what it tastes like first,\" she said. \"It might kill us. That would be a shock for my parents when they came back, finding our mummified bodies on the kitchen floor.\"\n\n\"I'm not sure we'd be mummified in just a few weeks,\" I said. \n\nShe rolled her eyes. \"God! Men are so... literal about everything! Have some cake and shut up.\"\n\nThe cake was surprisingly delicious, and between us we finished it. We agreed that after all our exertions yesterday we could afford the calories. \n\nWhen we'd finished she looked at me. \"I think you should go for a walk. You've been cooped up all day.\"\n\nI peered doubtfully outside. \"I think it's going to rain any minute.\"\n\n\"You'll have time. Just twenty minutes. And I haven't taken Polly for a walk today. I wanted to be here while you finished your book.\"\n\n\"OK,\" I said. \"You going to come?\"\n\n\"No... I want to stay here. You should go with Polly. Clear your head.\"\n\nSo, Polly and I did a hasty twenty-minute walk along the shore. The wind was blowing quite strongly and there was a faint drizzle but it was refreshing and invigorating and there was a wild beauty about being out there that was very different from the more tranquil scene I was used to. Polly pranced about delightedly, chasing leaves and other bits of debris that were being blown around.\n\nWhen we got back the rain was just starting to get heavy. There was no sign of Natalie downstairs. My shirt had got a little wet so I went upstairs to change and dry off. I saw her door was shut as I went past, with a light showing from underneath it. I could hear her shower running, and then stop.\n\nI went to my room and pulled off my shirt and trousers and towelled myself down a little. The rain was really pelting down now and I stood in the window watching it, enjoying the feeling of being warm and inside while watching the waves on the lake pound and break on the shore.",
        "\"Matt?\"\n\nI turned. She was standing there in just a simple white nightdress that seemed a shade too small for her. She'd taken her hair down and it hung loosely around her shoulders. She looked a little shy but her eyes held mine as I looked at her.\n\n\"Now that you've finished... I'd really like it if we could... go to bed together... If you'd like to.\"\n\nI swallowed. She looked nervous, waiting for my answer. Then I nodded slowly, and held out both hands to her.\n\n\"Are you sure?\" I said.\n\nShe nodded. \"Very sure.\"\n\nI reached out for her and she came into my arms. She was trembling, partly from nerves and partly from the cold. I held her tight, just smelling her and glorying in the sensation of finally being able to touch her and hold her as I'd wanted to for so many days now.\n\nThen she stepped back from me, reached down, and in a single, slow movement she pulled the nightdress over her head. There was that lovely, perfect body from yesterday, paler now in the evening light, still utterly desirable and perfect.\n\n\"Natalie, you're beautiful,\" I said.\n\nI pulled back the covers and stood back so she could get into bed. I took off my boxer shorts and slid in beside her. Then she took a deep breath and seemed to launch herself on top of me, her mouth on mine, her legs astride me. I took hold of her wrists and gently pushed us apart.\n\n\"Hey,\" I said softly. \"What's the rush? We've got the whole night, Natalie, and I want to enjoy every minute of it.\"\n\n\"Sorry,\" she said. \"Sorry... I'm really not very good at this.\"\n\nI shushed her. \n\n\"Just lie beside me,\" I said. \"I really just want to hold you for a few minutes, if that's all right.\"\n\nShe moved herself back onto the pillows beside me. I turned to face her and put my arms around her, one hand free to run down the length of her back and slowly stroke her from the top of her hips up to her shoulders. Her body, which had been tense, seemed to relax.\n\n\"Do you like my body?\" she whispered.\n\n\"It's beautiful, Natalie.\"\n\nI brought one of my hands around and placed it gently on one of her breasts. She gave a low moan at my touch.\n\n\"God, I've been thinking about you doing that.\"\n\nI ran the hand downwards, over her stomach and towards her groin, but stopping just short. Instead I stroked the arch of her hip, just able to reach the start of the fleshy area of her buttocks.\n\n\"You have nice hands,\" she said.\n\n\"Mmmhmm.\"\n\n\"Am I talking too much?\"\n\n\"No,\" I said. \"You chat away if you want to.\"\n\n\"I always feel like you're teasing me a little.\"\n\nI shook my head. \"At the moment, I don't think there is a happier man on the planet. There is nowhere I'd rather be than here with you.\"\n\nShe smiled a little smugly. \"Good. Me too.\" She closed her eyes, then opened them again, looking at me. \"It's funny that this has happened, isn't it?\"\n\n\"Why's that?\"\n\n\"Well... I thought I was going to be having a debauched summer here at the house. With... him. And instead I've ended up in bed with you. And this is so much better.\"\n\n\"We haven't done anything yet,\" I said. \n\n\"I don't care if we don't do anything else. Well... I kind of hope we do, I suppose. You are planning to, aren't you?\" She looked at me rather anxiously as she said this.\n\n\"I was planning to, yes.\"\n\n\"Good.\"\n\nWe lay there like that for another few minutes. I kept my hands busy but gentle, exploring as much of her as I could reach but still focusing mainly on her back, chest and hips. Gradually the remaining tension eased out of her.\n\nI started to move my hands lower, first of all running my fingers through the little thatch of hair between her legs. She groaned softly.\n\n\"I feel like I'm going to just... melt.\"\n\n\"Can I touch you?\" \n\n\"God... yes, please touch me.\"\n\nCarefully I ran the lightest of fingers further down and along the edge of her small slit. I could feel the moistness along her lips. She gasped at my touch.\n\nI spread my fingers and began to delicately slide my hand up and down, one finger on each side of her small, damp opening. Her breathing began to get heavier.\n\n\"Matt... I think you're going to make me... keep doing that...\"\n\nAs my hand reached the top of its arc each time I slightly squeezed my fingers together, just enough to tease and trap her little clit for a moment. Then I released it and ran my fingers back down, varying the speed each time so she could never settle, she could never quite know when that pressure would be back.\n\nWith my other hand I gently encircled one of her breasts, toying with the nipple so it became proud and firm. She moaned.\n\n\"Oh... this is so much better... I had no idea...\"\n\nNow I pushed one of my fingers between her legs more firmly downwards, forcing those lips open and running the finger lightly up and down through the moistness.\n\n\"Have you played yourself while you've been here?\" I whispered into her ear. \"Have you lain on your bed and made yourself come?\"\n\n\"God... yes...\"\n\n\"Did you think about me?\"\n\n\"Yes... I thought about the first time I saw you... on the stairs... I knew then I wanted to get you to... fuck me. I just needed to... figure out how...\"\n\n\"Well, you've done it,\" I murmured. \"Because my fingers are on your lovely little wet pussy and soon I'm going to slide myself into you and feel how tight you are...\"\n\n\"Yes... I want you to do that...\"\n\nI hooked my finger so I could carefully slide the tip of it into her. She jolted.\n\n\"Is that OK?\"\n\n\"Yes... that's... really nice... god, I'm so wet! I can't believe... how wet you've made me.\"\n\nI slowly and ever so gently finger fucked her with the tip of my finger and then I brought the finger up to my mouth and tasted her. She watched, wide-eyed, chest heaving and breathless.\n\n\"Does it... taste normal?\"\n\n\"It's delicious,\" I said. \"I want to taste you properly. If you'll let me.\"\n\n\"God... Matt... you can do whatever you want to me... just please do something... you're sending me out of my mind!\"\n\nI slid myself down the length of her body until my head was just below her waist. I slowly slid her legs a little wider apart so I could more easily fit my body between them. Then I began to taste her, starting from the top of one inner thigh and moving upwards at a leisurely pace, though her soft thicket of hair at the junction of her legs and then down the other side. While I did this, I teased her swollen opening with a finger, pushing her lips open and then together again, entering her briefly with the top joint of my finger and then retreating again. I noticed her hands were gripping the sheets. \n\nI bowed my head lower and ran my tongue up the length of her small, perfect entrance.\n\n\"Oh Jesus... nobody's ever done that... that feels amazing...\"\n\nI licked my way around her carefully, just delicately flicking my tongue over her small button once or twice but focusing most of my attention around her labia and thighs. I kept my fingers and hands busy, stroking and playing and touching her constantly. She seemed to be lost in her own world, eyes closed, occasionally pushing her hips upwards to grind herself a little more firmly into my face.\n\n\"Natalie,\" I said. \"I'd like to fuck you now.\"\n\n\"Oh god, yes please Matt... that was just lovely but I really want you inside me...\"\n\nI moved myself back above her body and rested above her, looking down at those eyes. I could see a slight flicker of nerves.\n\n\"Put your hand around me,\" I said. \"Make me wet as well.\"\n\nShe took her hand and stroked it against herself and then reached up to grasp my cock firmly and coat it with her juices. I began to lower myself downwards, letting her hand guide me.\n\nShe looked at me. \"I hope... I mean... I've not done this very much. I hope I'm... good for you.\"\n\n\"Sssh... you're already good for me. Now please let me fuck you or I think I might explode.\"\n\nShe smiled, and pushed our bodies a little closer together, and suddenly I felt myself entering her. She was very tight, tighter than any girl I'd ever known, but she was so moist and eager that I advanced easily and smoothly into her.\n\n\"Oh god Matt... that is just... oh yes!\"\n\nShe shuddered and suddenly wrapped her arms around me. \"Just let me feel you like that... for a second... oh yes... don't move... oh god!\"\n\nShe cried out and I felt a tremor course through her.\n\n\"Oh fuck!\" she gasped. \"Oh that's... oh fuck! Oh god Matt, you've made me come!\"\n\nI let her ride it out for a few moments before kissing her softly. Those big solemn eyes were full of wonder now.\n\n\"You're the first person to make me come, do you know that? I've always had to... do it myself.\"\n\n\"Congratulations,\" I said. \"You get a badge. Or maybe I do.\"\n\nShe giggled and gasped again. \"Oh god, I loved that. And you feel so big in me! I just... god, I just want to stay like this forever.\"\n\nI kissed her again. \"That sounds nice,\" I said. \"But I was rather hoping it was my turn next.\"\n\n\"Oh yes... fuck me Matt. Do whatever you want... I'd love to feel I'd made you come too. Fuck me now, please.\"\n\nI began to move more rhythmically inside her. To start with she watched me, her arms gently around my back, then her body began to move with mine, and she began to slip away again, focusing on her own pleasure even as she felt mine begin to build.\n\n\"Fuck me Matt... I'm going to come again... am I good for you?\"\n\n\"You're amazing Natalie... you're perfect...\"\n\n\"I've wanted you so much... I can't believe you're finally fucking me...\"\n\n\"I wanted you too,\" I said. \"When I first saw you that night... I thought... what a beautiful, fuckable girl...\"\n\n\"Oh god I wish I'd known that... So nice. Fuck me harder... make me come... come in me Matt, if you need to.\"\n\n\"Soon... So close now... I just want to feel you come again... come on my cock, Natalie...\"\n\n\"God yes... so bad... talk to me some more...\"\n\n\"Your perfect cunt is the loveliest I've ever fucked... I'm going to come so much in it...\"\n\nShe groaned again and again the tremors rippled through her.\n\n\"OH GOD!\"\n\nI came too, calling out her name as I spurted deep inside her. I felt her arms tighten around me, and then her fingers digging deep into my back and drawing blood. There was a distant sense of pain but it only intensified all the other feelings and for several moments the whole world seemed to spin and fade.\n\nWhen I recovered and looked down, she was gazing at me, slightly concerned but with a trace of that female smugness that I recognised. \n\n\"Hello again,\" she whispered. \"You're all mine now. For a while at least.\"\n\n**\n\nWe lay and listened to the rain. The sky grew darker and it was even stormier as the last of the day faded. If there are better places to be than in bed with a lovely, young, playful woman on a dark night as the rain lashes down outside... well, I can't think of them.\n\n\"You've doubled my number,\" she said, after a while.\n\n\"Hmmm?\"\n\n\"My... lover count, I suppose. I'd only had one... lover, before, though that seems like a terrible name for him now. Bedmate? Yeuch. Anyway, you know what I mean. You're my second.\"\n\nShe peered up at me. \"Don't tell me what number I am for you... I'll be so jealous.\"\n\n\"Probably not as many as you think,\" I said. \"Single figures, anyway.\"\n\n\"Really?\"\n\n\"Really.\"\n\n\"It was good for you, wasn't it? No matter what that horrible bitch said.\"\n\n\"Yes. That was... amazing.\"\n\n\"I wish I'd known,\" she said. \"I could have said to her, actually, he's the terrible fuck. He doesn't know what he's doing at all. He just sort of... grunted away and thought that by kissing me a lot that would make it nice for me.\"\n\nShe prodded me. \"You are just... so much better. More than better. You know what I mean.\"\n\n\"Thanks,\" I said. \"I do.\"\n\n\"Do you want me to shut up?\"\n\n\"No,\" I said, quite truthfully. \"I love your voice.\"\n\nShe made a contented noise and somehow managed to snuggle even closer.\n\n\"So... about my leaving on Tuesday?\"\n\n\"Hmmm?\"\n\n\"I mean... do you still want me to go? Because I will, if you want. I mean, just because I seduced you so shamelessly, don't feel that you have to ask me to stay.\"\n\nI sighed. \"I don't know, Natalie. I mean - will you expect sex every day?\"\n\n\"Oh god yes. Five or six times a day, I think.\"\n\nI thought about it. \"That's quite a lot.\"\n\n\"You're still in very good shape for your age. I'm sure you can manage it. And I'll try and... do as much of the work as I can.\"\n\n\"OK then,\" I said. \"I guess you can stay.\"\n\nShe lifted her head and kissed me on the mouth. \"Good. Because I texted Ashley yesterday evening, and said not to expect me.\"\n\n** \n\nWe had nearly two weeks together.\n\nIf you asked me what we did on each day during that time, I couldn't tell you. But everybody should be so lucky as to have such a time in their lives, of whatever length.\n\nI remember being deep inside Natalie as she lay beneath me on a picnic blanket in the lawn, and then suddenly both of collapsing in hysterics as Polly decided to come over and give us both a friendly, slobbery licking.\n\nI remember another canoe trip, to a different cove this time, and another naked swim. This time the cold water proved to be no deterrent, and we managed to make love standing with the water just above our waists. The heat of her body against the cold of the water.\n\nI remember waking one morning to find her crouched above my legs, sucking me gently into consciousness as she looked up at me with those blue eyes. The feeling of exploding into her mouth.\n\nI remember standing in the house and looking down the garden to where she sat painting, utterly engrossed. Picking up my borrowed sweater from the sofa and holding it to my face so I could smell the faint scent of her.\n\nAnd I remember the day she told me it was, after all, time for her to leave.\n\n**\n\n\"No,\" she said.\n\nI looked at her in surprise. I had been expounding at length about where we could go once her parents returned. I had some revisions to do on the book, but I thought perhaps once they were done we could hire a car and drift around France for a few weeks, then perhaps drive down to Italy. I don't think I noticed that as I chattered away she was saying less and less.\n\n\"I'm not coming with you,\" she said. \"I'm sorry Matt, but I mustn't.\"\n\n\"What do you mean, you mustn't? I... love you.\"\n\n\"Oh, I know,\" she said. \"And I love you. It's just... it's too soon for me, Matt.\"\n\nI stared at her. A horrid cold feeling was creeping across me.\n\n\"If I come with you now, I'll never leave you. I'll never be able too. And... that would be lovely, except... I worry that as I get older, a little part of me will wish I'd just had a little more time for myself. To find myself... completely. Make sure I'm fully grown, as a person, I mean. Before I become part of you. Do you understand?\"\n\n\"No,\" I said. She smiled, and stroked my face.\n\n\"I think you do, really.\"\n\n\"So... are you saying... this is the end?\"\n\n\"No. I don't think so. But it might be. We'll... just have to see.\"\n\nI let out a long shaky breath. I felt my world was falling apart.\n\n\"Can I... call you? Email you?\"\n\n\"No,\" she said. \"I think it's best we don't. For a while. It would be too easy to come back to you, particularly those first few months. I need to do this completely on my own.\"\n\n\"So... what will we do?\"\n\n\"I don't know,\" she said. \"We'll find each other again, if that's what's meant to happen. Oh - yes, I know you hate that kind of stuff. Mysterious cosmic forces of the universe and all that. But... I think it's true. It will be for us.\"\n\n\"No,\" I said. \"That's crazy! I'm not going to lose you just because... there was some secret sign that I missed!\"\n\nShe came into my arms. \"I'm sorry,\" she said. \"But you'll have to trust me on this.\"\n\nLater on, much later on, I came to realise what an astute, clever, amazing girl she was, and so much wiser than me. But at that moment, feeling raw and bloody, I almost hated her. That quiet, steely determination that we were, for now and possibly forever - over. It was inconceivable.\n\nThe following day I drove her to the station. She was wearing my sweater. She kissed me goodbye and gave me a long hug. I was probably a little colder and more distant than I should have been, but she seemed to forgive me.\n\nThen I drove back, Polly sitting rather dolefully beside me on the passenger seat. The last day was spent in a kind of stunned stupor. I packed all my things away. Somehow when her parents returned I managed to make conversation, but I saw them looking at me a little oddly. They probably thought I'd just gone a little stir crazy, all that time on my own.\n\nWhen I got home, I found a square, flat package at the bottom of my suitcase. She must have hidden it there the night before she left. \n\n**\n\nTwo years passed. \n\nThat first book of mine sold to a publisher and did moderately well. Enough for me to get an agent who sold the television rights for an agreeable sum and, amazingly, managed to get me a two-book deal with a generous advance. It was everything I could have wished for. \n\nThe second book fared less well than my first. My agent hid his disappointment and made encouraging noises but I sensed he felt he hadn't picked a lucrative winner after all. I started the next one. I was sufficiently disciplined that each day I had more words at the end of it than at the beginning, but I knew they were pedestrian and functional. There was no magic there. The book didn't excite me. Very little did.\n\nAll this time I had no contact with Natalie. More than once I thought about calling her, just to hear her voice. But each time I held back. She'd been so certain, so determined. I had to respect that. Instead I would look at her painting. Her painting of the house by the lake with the black dog lying peacefully in front of it. \n\nThen, one evening after a particularly dry and fruitless day of writing, I got the email. I didn't recognise the address. When I opened it just had two things in it. \n\nA hyperlink. And a single emoji below it. \n\nIt is, on reflection, a miracle that my spam detector didn't immediately grab it and hide it from me. Some might say it was a sign.\n\nOf course, you should never click links in emails from addresses you don't recognise.\n\n**\n\n\"Yes,\" I said. \"I want to buy it.\"\n\nThe agent looked up from his phone, rather stunned. \"But, ah, don't you want to have another look around? We've only been here a few minutes.\"\n\nI shook my head. \"I've seen all I need to,\" I said. I didn't tell him I could have walked around it blindfolded.\n\n\"Oh, well... right. Well... that's good.\"\n\nHe looked rather doubtfully at my scruffy jeans and scuffed shoes.\n\n\"Ah... what sort of offer did you have in mind? I know the vendors are really keen to get a good price and I don't think...\"\n\n\"The full asking price. I don't want to haggle.\" That would completely wipe me out and then some. But it would be worth it. I knew I would have to scrap the current book and start again. It would have to be a lot better this time. And then I would write another one. And another. If my publisher dropped me, to hell with them. I'd publish the books myself. If I had to, I'd maybe even do some creative writing teaching on the side. Or empty bins. Or... something. \n\n\"Well... that's great! I'm sure they'll be delighted... I know with the divorce they'd like to get everything settled as soon as possible. And with you not having a property to sell... I can't see why we can't get this all sorted really quite quickly.\"\n\nHe was fonder of me now. Suddenly realising that you're going to get a fat commission will do that to people.\n\n\"You're a writer, you say?\"\n\n\"Yes, I am.\"\n\n\"Well... this is certainly just the spot. Couldn't ask for better. Hardly a soul for miles. Damned pretty too, with the lake right there. Well... let's go and start the paperwork, shall we? Hello... where the devil's that dog come from?\"\n\nHe gazed irritably into the garden. ",
        "\"Well... that's just not on! It doesn't look wild. Perhaps some of the locals walking their dogs have been taking liberties and cutting through the garden, knowing the house is empty. I'll go and have a word with whoever it is right now, shall I?\"\n\nHe looked at me anxiously, his commission suddenly not seeming quite so secure.\n\n\"No,\" I said. \"Don't worry. I'll deal with it.\" I was remembering the emoji under the hyperlink that had taken me to the estate agent's web site. The small black paw print.\n\n\"Well, if you're sure...\"\n\n\"I'm sure,\" I said. I turned and looked at him. \"If you don't mind, could I meet you back at your office in a little while? I'd just like to... walk around a little.\"\n\n\"Of course,\" he said. \"I quite understand.\" He didn't, but I didn't say anything. I just followed him out and watched as he locked up the house. Then we shook hands and he drove off.\n\nI waited until his car was out of sight. I was remembering the emails that had followed that first one. Nervous at first, on both sides. Then hopeful. And then, finally, full of anticipation and joy.\n\nI looked around the apparently empty landscape. There was a gentle breeze rippling the surface of the lake. I whistled. A few seconds later a black bullet emerged from some bushes and hurtled back across the garden towards me. I bent down and fussed over her. I don't know which of us was more pleased.\n\nThen I scratched her ears and straightened up. \n\n\"Come on Polly,\" I said. \"Let's go find her.\""
    ],
    "authorname": "AnnasFriend",
    "tags": [
        "older man",
        "romance",
        "younger girl",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-house-sitter-4"
}