{
    "title": "Free Fall Ch. 02",
    "pages": [
        "\"Are you coming to the flea market with us this morning, Zoe?\"\n\nMy grandfather put his newspaper down and looked at me. He was still in his robe, his short grey hair a little mussed from bed. He gave me an affectionate smile.\n\n\"No, not this week.\" I tried to sound casual, but my heart jumped a little. \"I'm going to the zoo with Nico and Lena.\"\n\n\"Oh, that sounds fun,\" my grandfather said. \"We haven't been to the zoo in years. Not since you were little.\"\n\n\"Yeah, I know. It's been a long time. I know they built that new polar bear exhibit a few years ago, I'm looking forward to seeing that.\" I ran my eyes over the crossword clues, not really reading any of them.\n\nMy grandmother put down her section of the paper and said, \"Just the three of you? The boys aren't coming?\"\n\nMy grandmother was too smart. I didn't even have to look, I could hear it in her voice; she knew.\n\n\"They're at a birthday party, so, yeah, just us.\" I was still going for casual. I was pretty sure I was failing. I looked up to find her watching me, one of her eyebrows arched just a little. She knew me too well.\n\nAll she said was, \"That sounds nice,\" but her eyebrow and the length of time she watched me said she knew there was more to the story. \n\nI felt like I was lying, although I hadn't made anything up. Nico and I really were taking Lena to the zoo, and Rose really was taking Jack and Will to a birthday party. The facts were correct, I just hadn't mentioned how excited I was about spending the whole day with just Nico and Lena. I hadn't mentioned my nervous excitement or my hope that he'd kiss me once or twice before the day was through.\n\nI hated feeling sneaky, but this thing with Nico had just happened, I didn't even really know what the thing was. Less than 48 hours ago he'd kissed me for the first time. Things had escalated pretty quickly after that kiss, and I came home at midnight, disheveled and blissful, having just had the most incredible sex of my life. Granted, my life had only spanned 22 years so far, and only 4 of those years had contained sex of any kind, but what had happened with Nico was in a completely different emotional league from anything that had happened in college.\n\n\"We're going to get an early start,\" my grandfather said, picking up the thread of our conversation. He obviously hadn't noticed anything noteworthy in my reply to his question like my grandmother had. \"Try to beat the crowds. In fact, I should go get a shower.\"\n\nI tried not to show my relief, but I realized they wouldn't be at the house when Nico came to pick me up. I'd been kind of dreading that, and especially after seeing my grandmother's shrewd expression, I was relieved I wouldn't have to deal with the guilt in the moment.\n\nMy grandparents knew Nico, and they had great respect for him as an artist, a craftsman, and as a person. He'd done a beautiful job with the design and installation of their patio, and he'd impressed them with his polite manner and modesty. They really liked him, but he was probably not their first pick for a boyfriend for me. The gap of 14 years between our ages would no doubt be a concern to them both.\n\nIf Nico and I started dating for real, I would have to tell them, of course, and face whatever disapproval they might have. But for now, I was glad for the reprieve; I was really looking forward to enjoying the day. \n\n//\n\nIt took me a whole hour to get dressed. It was going to be a hot August day, and the majority of the zoo visit would be spent in the sun walking around, so I needed something cool that wouldn't look awful once I got sweaty and tired. I knew Nico had already seen me sweaty and tired\u2014it was pretty much how I always looked when I saw him thanks to an unusually hot summer and the lack of air conditioning in Rose's house\u2014so he probably wouldn't care, but I cared. I wanted to look good for our first date.\n\nI settled on a simple floral sundress in white, blue and green. It had thin straps, a fitted bodice, and a flared skirt that stopped a few inches above my knees. It was cute, but still practical for a whole day of walking, looked fine with my white keds, and still showed off quite a bit of skin. I put my red hair up in a loose ponytail, pleased with the strands that hung loose at the nape of my neck\u2014just a little sexy, but not overdone.\n\nI heard the rumble of Nico's truck when he pulled up and my heart raced a little. From the kitchen window, I saw Lena dart across the yard, and then Nico followed behind. I greeted the enthusiastic five year old first, letting her into the house and leaning down to give her a hug. Her excitement was unrestrained and she babbled excitedly for a few minutes about the animals she wanted to see.\n\n\"We checked the website before we came,\" Nico explained once she'd stopped. \"For the zoo's hours, but then we looked at the exhibits, too. So, we're a little excited.\"\n\n\"Good,\" I said. \"Me, too. I can't wait.\"\n\nI locked the door behind me and followed Nico across the patio he'd installed. He turned once he'd reached the path to wait for me, and the sun lit up every silver hair on his curly brown head. He smiled and it almost took my breath away, that smile.\n\nThe first time I'd seen him in anything but work clothes was two days ago, on the Friday night we'd spent together. He'd looked so sexy in just a clean t-shirt and jeans, but this Nico was even sexier. He wore a short-sleeved cream colored button shirt, untucked over jeans, and pair of black, flat-soled sneakers. The white shirt looked great on his bare olive-brown arms, and was loose enough in the collar I could just see some chest hair peeking out. My body responded with a pleasant flush of arousal. Already. \n\nThe drive was more than an hour, but the time went fast. We got the zoo just as it opened and joined the crowd of families at the gate. I got such a thrill knowing anyone who looked at us would just see a couple and their daughter out for the day; that was definitely the fantasy I was entertaining.\n\nIt was sunny, hot, and humid, and I should have been exhausted, but while I was hot, the heat I felt wasn't from the weather, it was from the low buzz of arousal I felt throughout my whole body. All it took was being with Nico, catching his eye from time to time, and seeing him with his daughter, to turn me on. I didn't feel the heat at all; I was too busy falling in love.\n\nI wasn't sure how open he wanted to be in front of Lena, so I let him take the lead. He was the one who took my hand, and then he was the one who kissed me. Once, after we'd ducked into a shady spot to get a better view of the kangaroos\u2014just a quick brush of his lips across my cheek\u2014and then again later in the day while we were watching Lena playing in one of the little playgrounds in the park, he moved behind me and slid both hands to my waist, bent and pressed a soft kiss just behind my ear. It lasted all of a second, but I felt pleasure zing from all the points of contact down through my body and right between my legs.\n\nWe ate a late lunch at the overpriced snack bar, and then got ice cream and sat on a bench in some shade to eat it. Lena sat on my lap, and I could tell by the way she leaned back against me she was tired.\n\n\"We've only got a few more exhibits left,\" Nico said. He was studying the park map. I was studying his profile, especially the curves of his mouth. He smiled when he turned to look at me and found me staring. \"Are you too tired to keep going?\"\n\n\"No, I think I can make it.\" I was tired now that we'd sat down, but I was in no hurry to end our day together. I glanced down at Lena who had a glazed expression on her face. \"I think someone might need to be carried, though.\"\n\nAfter we'd cleaned up, Nico put Lena on his shoulders and took my hand. We walked the rest of the zoo at a leisurely pace, my head swimming a little from the familial picture we presented. I was tired and hot, but happy, so happy. From the way Nico looked at me as we walked the gravel paths, and the smile on his face, I guessed he was feeling something similar.\n\nWe lasted another hour. By the end of that hour my feet were starting to hurt and I longed to sit down for real. Lena was so sleepy she didn't even ask for anything from the the gift shop as we walked through, she just sat on her dad's shoulders as we made our way to the park's exit. Nico, who was used to working hard and functioning on not enough sleep seemed unaffected by the heat or miles we'd walked. He also looked a lot less disheveled than he did when he got home from work. No less attractive, I noted, and wondered to myself if I could ever find him even a little unattractive.\n\nNico got Lena in her car seat and buckled her in. She was old enough to do it herself, and usually insisted on autonomy, but she was far too sleepy to do anything but relax into the seat. I climbed in and turned around in time to see Nico plant a kiss on her cheek. \n\n\"You look worn out\" I said. \"Did you have fun?\" \n\nShe nodded sleepily, but smiled.\n\nNico started the truck and I fiddled with the air conditioning, pointing a vent back toward Lena and one toward my face. I sighed when the cold air hit my skin and relaxed into my seat. I glanced and Nico, who met my gaze and reached over to take my hand. We drove for a while in silence like that, and though my face cooled down, I still felt flushed from excitement.\n\nWe were about fifteen minutes away from my grandparents when Nico asked, \"Will your grandparents be there when I drop you off?\"\n\n\"I think so. They went to the flea market this morning, they're usually back by noon. Why?\"\n\n\"I would feel funny dropping you off and not coming in. And, I think...I want them to know about this, about us. You know?\"\n\n\"I think I know what you mean,\" I said. I knew Nico cared for my grandparents, and he was a man of integrity, so it stood to reason he would be unhappy if he felt he was being anything less than respectful.\n\n\"Maybe they won't care, but I don't want to feel like I'm sneaking around.\"\n\n\"I understand,\" I said. \n\nI told him about my conversation with them at breakfast, how my grandmother had known something was up.\n\nHe laughed. \"Of course she knew something was up, that crafty lady. She's so smart. Any idea how she felt about it?\"\n\n\"I don't know. I don't even know if she knows anything, or just suspects. I haven't exactly been a social butterfly since moving in with them, so any social engagement is a little conspicuous, I guess. Whether that means she knows how I feel or not...\" I thought again about that look she'd given me in the morning and sighed. \"Who am I kidding? She knows. I'm sure she knows. I'm terrible at hiding my emotions.\"\n\n\"She's good at figuring people out. Must be where you get it. I just hope this is OK with them.\"\n\n\"I think it will be,\" I said, but I was trying to convince myself as much as him. I wasn't sure what I'd do if they disapproved of the two of us seeing each other romantically.\n\n\"Oh, but on the other hand, I don't mind sneaking around Rose,\" he said. \"I can't hide it for long, she's going to notice things are different, but if we could just put off telling her a little longer...\"\n\n\"You don't think she'll approve?\" I'd been worried about that since I realized I had a crush on her big brother\u2014her favorite brother whom she was close with and loved so much.\n\n\"No. No, Zoe, she'll be...so happy. Are you kidding? This is what she's wanted for years. She's never known how to deal with my grief, she just wants me to get married again. She'll be so thrilled.\"\n\n\"I know, but when she's talked about how she wishes you'd meet someone it's always women your age, divorcees\u2014women with kids.\"\n\n\"She's talked about it with you?\" His laugh was pure exasperation. \"See, that's why I want to keep it quiet just a little longer. She's a compulsive match-maker. And once she knows there's something going on, she's going to be all over us. She'll try to take me ring shopping. She'll leave bridal magazines scattered around the house for you to find. She'll start suggesting honeymoon locations and names for our future children.\"\n\nI laughed, but it was a nervous laugh full of the thrill the phrase future children had caused.\n\n\"I don't want you to put you in an awkward position. You don't have to lie to her or anything, but if she asks how Friday night went, maybe you could just skip the part where I stripped you half naked in the kitchen, and...well, everything after that.\"\n\n\"I'll be vague,\" I said. \"Promise.\"\n\n\"Thank you. I will tell her soon. As soon as I feel brave enough.\"\n\n\"I've heard you're getting braver by the day.\"\n\nHe smiled, pulled my hand to his mouth, and pressed a kiss on the back of it. \"Can I kiss you? I've wanted to all day. I mean, really kiss you.\"\n\nI glanced behind me. Lena was fast asleep and probably had been for a while. I realized this was our chance. I doubted he would feel comfortable kissing me goodnight at my grandparents' house.\n\nI nodded and he pulled the truck to the side of the road, letting go of my hand. I turned in my seat to face him as he put the truck in park. \"You look so beautiful,\" he said, reaching for my hand again. He leaned toward me and I met him half way. I angled my head and he kissed me softly on the mouth. The pleasure was immediate\u2014a flush of it, like heat moving through my body.\n\nI remembered our first kiss, and how unsure of the situation he'd been. I felt some of that uncertainty in this kiss, too and realized that we knew each other well in some ways, but in we were still new to each other, too. I reached out and touched his face then let my fingers slip down and into the curls at the base of his neck. He made a small noise and kissed me more deeply, his mouth opening over mine.\n\nThe turn signal clicked in a steady rhythm, the only other noise in the car besides the soft, wet sounds of our mouths and tongues meeting. I longed for more contact as our kissing grew more passionate. Memories of his hands on my bare skin, of our naked bodies pressed together, made my head swim. I tugged at his neck, digging my fingers into the base of his skull, and he leaned toward me, his long arm pulling at my waist. I longed to climb into his lap, to feel his body against mine, but I wasn't sure I'd be able to stop at just kissing. I wanted him so bad.\n\nHe was obviously experiencing the same thing. His hand moved from my waist down my hip to my thigh. He slipped it under the hem of my skirt and dragged his fingers up my bare skin. When his fingers reached the edge of my panties, he moaned softly and leaned even closer. His kissed me hard and his hand slid roughly over my hip, his fingers spread wide. I could feel his desire in the way his fingers curled into my flesh. He wanted me, too.\n\nHe released me reluctantly and sat back in his seat. He groaned softly, a long, slow exhalation. I could see his frustration. Or perhaps it was just a projection of my own sexual need; my pulse was racing and my pussy was throbbing.\n\nWithout comment, Nico changed the turn signal's direction and pulled back onto the road.\n\nNeither of us spoke the rest of the drive, but he reached over and took my hand again. My thoughts were busy with the events of the day, remembering the way seeing him with Lena on his shoulders had made me feel. It tugged at that ache inside me, the longing that was sex and babies and wanting him so bad I thought I'd die. I'd never felt anything even remotely like it in my life. \n\n\"If this goes well, and your grandparents don't run me out of town with a pitchfork,\" Nico said when we pulled into their driveway, \"do you think I could take you out for dinner on Friday? Just the two of us?\"\n\n\"I don't think my grandparents own a pitchfork,\" I said. \"Or torches. Anyway, they're going to New York City this weekend to see my uncle and my parents. So I'm definitely free.\"\n\nHe looked at me, considering something. \"They're staying overnight?\"\n\nI smiled and nodded. \n\n\"Ohh Foxy,\" he said in a long sigh. I was pretty sure we were thinking the same thing.\n\nHe undid his seat belt and took a deep breath. He let it out slowly, clearly trying to prepare himself. \n\n\"They already like you, Nico,\" I reminded him. \n\n\"It's just that this matters so much to me,\" he said. I wasn't sure what he meant by this\u2014how my grandparents reacted or the two of us together\u2014but either way, I loved him a little more for caring so deeply.\n\nNico woke Lena up as he got her out of the car seat. She was groggy and confused, but didn't protest. She snuggled against her dad's chest, her head just under his chin, and I had to look away to quiet the pain inside me.\n\nI let us in the back door. \n\n\"I'm home,\" I called. I could hear the TV coming from the living room so I headed that way. Their heads turned as I came around the corner. Their eyes skipped right over me, and landed on Nico. My grandmother reached for the TV remote and switched off the power.\n\n\"Come in,\" she said. \"Nico, it's good to see you again.\"\n\n\"It's nice to see you, too, Mrs. O'Reilly.\" He nodded at my grandfather, who smiled and nodded back. \"Mr. O'Reilly.\"\n\n\"Come in and sit down.\" \n\nMy grandmother gave me the briefest of looks\u2014a knowing look\u2014but I couldn't interpret its meaning. Then she turned her smile on Nico and indicated he should sit. He did, but cautiously, like he was afraid he'd break the chair. He set Lena down in front of him, and she clung to his arm protectively. I'd never seen her act shy before.\n\n\"And who's this?\" My grandmother said, looking at Lena, who stared back at her with huge brown eyes. She was a little disheveled from the long, hot day. Her braids were frizzy and her knees were dirty, but she was still absolutely adorable.\n\nNico nudged Lena gently and whispered, \"This is Zoe's grandma. Can you say hi?\" She stared, silent. \"Can you tell her your name?\" Lena just stared. I knew my grandparents wouldn't be offended by her silence, my dad and uncle had both been very shy growing up, so they understood how kids could be. \"No? Can I tell them?\" A nod. \"This is Lena. She's a little sleepy.\"\n\n\"Of course she is, she had a long day at the zoo. I bet it was a lot of fun.\" My grandmother beamed at her, but Lena didn't even blink. \"It's nice to meet you, Lena. I'm glad you came to visit.\"\n\nWe made small talk about the weather, the drive, whether the zoo had been busy, whether I'd put enough sunblock on, and whether we were hungry or not. It was awkward, but I hoped I was the only one who felt it. Lena was silent, and Nico was uncharacteristically tense, and I was trying so hard to act like it wasn't awkward, which just made it all seem worse to me. There was no doubt in my mind my grandmother knew how I felt about him, and by the questions she asked him\u2014none too direct or obvious\u2014I could tell she was trying to figure out how he felt about me and whether this trip to the zoo had been just a trip to the zoo, or the beginning of something else.\n\nMy grandfather was oblivious to the subplot of the evening, and was just happy to see Nico. The two of them got on the topic of cars\u2014a subject I knew they'd discussed many times while Nico was working on the patio, and one I knew my grandfather could stay on for a long time\u2014and when Lena asked me for a drink of water, I took her into the kitchen and my grandmother followed, leaving the men to their conversation.\n\n\"I just realized we never ate dinner,\" I said as I put some ice in a glass. \"We had lunch on the late side, but that was a few hours ago. \"You must be hungry, Lena.\"\n\n\"We have some turkey breast in the fridge,\" my grandmother said. \"I could make you some sandwiches. Would Lena rather have peanut butter? I know there's some in the pantry.\"\n\nI started to protest, to say she didn't need to feed us, but I knew that was pointless; I knew better than to stand in the way of my grandmother when she was on a mission to feed someone.",
        "\"Peanut butter will be fine for Lena,\" I said. \"I'll get it.\"\n\n\"Do you want to ask Nico if he'd like a turkey sandwich? There's pasta salad, too.\"\n\n\"Anything will be fine, Gran.\" I'd never known Nico to turn down food put in front of him, and he certainly wouldn't turn down something my grandmother offered him. \"I didn't mean to come home for you to feed us.\"\n\n\"You know I don't mind.\"\n\nI put Lena's sandwich on a plate, poured her a second glass of water, and took them to her at the big table where she was waiting. Her hair was a mess and her legs swinging beneath her were dirty, but she looked more awake than she had in the living room. \n\n\"Don't forget to thank my grandma,\" I whispered to her as I put the plate down.\n\nI found Nico and my grandfather deep in conversation about engines. He was a little confused when I told him to come in and eat, but didn't protest when my grandmother put a plate in front of him.\n\nThe five of us sat at the big table while we ate. Once Lena had finished, she climbed into my lap and sat, watching the grownups while we talked. Conversation focused on Nico's house and stayed light and relaxed. My stomach had relaxed, too, but I was still on edge. Every time my grandmother asked Nico something, I dissected the question, looking for the real meaning inside the words she used, trying to figure out how she felt about the situation.\n\nMy grandmother returned to the kitchen at one point and brought back a small plate of cookies. She slid the plate in front of Lena, who looked up at her hopefully. My grandmother gave her a smile, and I saw Lena smile back. Definite progress.\n\n\"What do you say?\" I prompted. Lena's thank you was soft, but audible, and I could tell it pleased my grandmother to no end.\n\n\"You're welcome.\"\n\nThey stayed another half hour, during which Lena finished her cookies and then leaned against me, completely relaxed. She still didn't say anything, but I thought that had more to do with tiredness than shyness by that point. \n\nI thought the conversation became more natural and relaxed, and when I dared sneak a peek at Nico\u2014I felt like my grandmother was watching me like a hawk\u2014he seemed at ease. His smiles were those gorgeous, easy, gracious smiles that made you want to smile back. I knew he was winning my grandparents over just by being himself.\n\nJust before they left, as Nico was thanking my grandparents for the meal, Lena remembered what I'd told her earlier and flew to my grandmother, arms out. \"Thank you for the cookies and sandwich,\" she said. It was one of those rare perfect moments you hope for, but can never count on happening. \n\nMy grandmother was surprised and delighted and leaned down to give Lena a hug. \"You're welcome, sweetheart. You can come back and see me any time.\" \n\n\"For more cookies?\" \n\n\"Yes, more cookies,\" she laughed. \"Do you like chocolate?\" Lena's nod was enthusiastic. \"Well, maybe next time you can help me bake some chocolate chip cookies. How does that sound?\"\n\n\"That sounds fun!\"\n\n\"Maybe you and your daddy can come back some time and have dinner again. We can eat out on the pretty patio he made for us.\"\n\nLena nodded and ran back to Nico, who automatically bent to pick her up. My grandfather said goodnight and wandered back to the living room. I told Lena I'd see her in the morning and thanked Nico for inviting me. It was all very polite and friendly, but I was longing for a kiss goodbye, or just to feel him put his arms around me.\n\nMy grandmother held the door and Nico backed out onto the porch. \"Thanks again for dinner, Mrs. O'Reilly,\" he said as he turned to go.\n\nMy grandmother smiled. \"Don't you think you'd better start calling me Helen?\"\n\nI didn't see his reaction, and he didn't respond, but I knew that comment would make him feel a lot less nervous about winning her approval. I guessed she knew that, too, and not for the first time in the last six months, I recognized what a great ally I had in my grandmother. I made a mental note to do something really nice for her soon.\n\n//\n\nI washed the dishes while she dried, neither of us talking, though I had so many questions I wanted to ask.\n\n\"I like Nico,\" she said finally, once she'd put away the last plate and I'd finished wiping down the counters. \"He's a good man.\" I wanted to agree with enthusiasm, but when I looked at her, I could see there was more coming. Her serious face made me nervous. \n\n\"Do you want my advice?\"\n\nI did. I nodded, but my stomach tightened.\n\n\"I would advise you to remember two things. First, remember that you're in a vulnerable place right now, in your life. You just went through a very difficult depression and made some tough decisions. Now you're feeling better, more like yourself.\" She raised her eyebrows, looking for confirmation of this last fact. I nodded. \"I've never known you to be anything but practical, but love does funny things to logical minds.\" She smiled and tucked a loose strand of my hair behind my ear. \"You have to make a choice this spring, and you need to be sure about your reasoning. Just promise me you'll really think it through before you make any big decisions, OK?\"\n\n\"I will,\" I said. \"I am.\"\n\n\"The other thing I would encourage you to remember is that anything you do, and any decisions you do make will affect not only you and Nico, but that sweet little girl as well. You need to be sure\u2014absolutely sure\u2014whatever decisions you make, you keep her in mind.\" She looked at me for a second, her eyes focused on mine, then hugged me tight. I hugged her back, and the relief I felt made me realize how tense I'd been. \"Take your time, Zoe. Enjoy yourself. He's an absolute dear, and obviously very fond of you. Just be smart about this,\" she said, then added, \"I know you will.\"\n\n\"Thank you, Gran,\" I said. \"I will, I promise.\"\n\nShe held me at arm's length and smiled. \"Go on upstairs and get a shower. And put some aloe on your shoulders, they're almost as pink as your face.\"\n\n//\n\nI was happy to be back at Rose's on Monday morning. Summer was almost over, and school was starting in a few weeks. I was sad to know my schedule would change and I'd see less of the kids. Rose would get them on the bus and I'd be there to meet them when they got home. I'd only have a couple of hours with the boys after school before their dad got home, but Lena's Kindergarten was only a half-day, so I'd get to spend two extra hours with her before her cousins got home. I was grateful for any time I got to spend with them, and knew once the weather got really cold and Nico's work slowed down, I wouldn't really be needed as much. I was trying not to feel too sad about the changes, but I'd grown attached to the kids and had really come to love our days together.\n\nI took the kids to the library around 9:30. It was only a ten minute walk, but felt a lot longer on the way back with a big bag full of picture books. The heat and humidity didn't help matters. We were half a block away when I saw the red pick-up truck pulling into the driveway. My heart skipped a beat. \n\nI tried not to worry something was wrong, but couldn't think why Nico would be home in the middle of the morning\u2014the most productive work hours during the summer. When Lena saw him, she ran to him and jumped into his outstretched arms. A few seconds later, we met each other on the sidewalk. He set her down and took the tote bag of books from me.\n\n\"Hey, Foxy,\" he said, making me laugh. I wondered if that nickname would stick around, and found I didn't mind if it did; it was the only nickname my red hair had earned me I actually liked.\n\n\"Everything alright?\" I asked. \"Shouldn't you be at work?\"\n\n\"I was in the neighborhood, so I thought I'd stop by.\"\n\n\"Really.\" I gave him a doubtful look. \"In the neighborhood?\"\n\n\"Well, I was in a neighborhood. One across town, but it looked a lot like this one. It had houses, anyway.\" He smiled, bent, and kissed my cheek. \"I have to be somewhere in twenty minutes, but I really wanted to see you.\"\n\nThe kids ran ahead and to the yard. Their sandals were already off and they were dragging some of the lawn toys out of the toy bin next to the deck by the time Nico and I got there. I reminded them to stay in the yard and Nico and I went inside.\n\n\"Did that go well last night?\" \n\n\"At my grandparents' house? Yeah. I think it did.\" I poured myself a drink of water and dropped some ice cubes into the glass. \"Want a drink?\"\n\nHe shook his head, and watched me take a sip. I could tell by his expression he wasn't convinced. \n\n\"I think it went great, actually. I mean, they already like you. And now they know your charming daughter. What's not to approve of? My grandmother said you're a 'good man'.\"\n\n\"Hmm. That's not code for 'too old for my granddaughter' is it?\"\n\n\"I don't think she cares how old you are, Nico. She doesn't have a single complaint about you. If she's worried, it's about me. She's worried I'm being impulsive.\"\n\n\"Are you? Being impulsive?\" He looked genuinely concerned.\n\n\"I have impulses,\" I admitted. I put my glass on the counter and moved to stand in front of him. We were exactly where we'd been on Friday night when I'd put my shoes on to leave, right before everything had changed. I ran my hands up his arms and linked them behind his neck. I had to stand on tip toe to reach him. \"And urges. But I've done a lot of thinking, too.\"\n\nHe slid his hands to my waist and steadied me, pulling me closer so our bodies touched.\n\n\"Sounds serious. Tell me about these urges.\"\n\n\"You only have twenty minutes.\" I put pressure on the back of his neck, pulling him down, and he responded, bringing his mouth to mine. \"I need more time than that.\" As soon as our lips touched, I felt the delicious sensation of heat and pressure pooling in my belly and pulling all my nerves a little tighter. We kissed for a few seconds, but the sound of the screen door opening brought us back to reality.\n\nHe dropped his hands and I stepped back. \n\nIt was Jack, and he was hungry.\n\n\"I'll make a snack,\" I told him. \"Give me a minute, OK? I'll bring it outside, we can eat on the picnic table.\"\n\nI moved back toward Nico once the screen door had banged shut and he took me in his arms immediately. We kissed, softly then passionately. My body responded, aching like fatigue inside me. I pressed my body against him, and moaned as I remembered how he'd lifted me off the counter and carried me to his bedroom just a few nights before. It felt like ages ago, but at the same time I could remember just how it had felt.\n\nWe parted reluctantly and Nico got the kids to wash their hands and set the table while I put three plates of carrot sticks, sliced apples, cheese, and crackers together. Normally, I might have given them options, but today I was pure efficiency\u2014they needed food and I needed to make the most of the time Nico had left at the house.\n\nI turned to find him leaning on the deck railing, arms crossed over his chest, watching me with a curious look on his face. When I joined him he asked in a slightly lowered voice, \"Should that turn me on?\"\n\n\"What?\"\n\n\"You. When you're all...domestic. Does it make me a male chauvinist if I find that sexy?\"\n\n\"I don't know. Maybe. If that's all you think I'm good for.\" He shook his head. He was only half kidding, I realized. His expression told me he was really thinking about it. \"Does it turn you on?\"\n\n\"It makes me...it makes me want you. I think that's different, but I'm not sure how. It's...\"\n\nI thought about how it made me feel when I saw him with Lena. It felt like arousal, but something else, too. \n\n\"Complicated?\" I offered as a finish to his sentence.\n\n\"Hmm. Yeah. Complicated.\"\n\nHe pulled his phone from his pocket and checked the time. \"So, Friday? Are you free?\"\n\n\"I'm free. All day Saturday, too. And Saturday night, come to think of it. My grandparents will be in Manhattan until Sunday night.\"\n\nHe laughed softly and looked down, away from my eyes. When he got shy, it made his face even more attractive to me. I couldn't say why, but it made my heart race. He hesitated as he spoke. \"I\u2014I can take Lena to my mother-in-law's Friday afternoon. She's been asking for a sleep-over for a while, and my sister-in-law's daughter will be there, too, so Lena won't miss me for a second. We could go out for dinner. And...stay somewhere...if you want?\" He looked back up, his eyebrows raised. He looked uncertain. Hopeful, but he wasn't sure I'd say yes.\n\n\"I definitely want,\" I said simply. It made him laugh again, relief this time. \"What time? And what do I wear?\"\n\n\"I don't know yet. Let me figure it out, I'll let you know.\" He made an apologetic face. \"I have to go.\"\n\n\"I know. It's OK. It was a treat to see you.\" I stepped forward and kissed his lips once, just a quick peck, nothing to attract the kids' attention. \"I'll see you Wednesday night at dinner.\"\n\nHe kissed each kid on the head, told them to be extra good for me, and left. Wednesday suddenly seemed like a long time away.\n\n//\n\nIf my wait from Monday to Wednesday felt long, it was nothing compared to my wait from Wednesday to Friday. I was happy to get to see him at dinner on Wednesday, but because he still wanted to keep our attraction a secret from his sister, we had to pretend nothing had changed from the previous Wednesday. It was so hard. My eyes automatically sought him out, and once they were on him, it was difficult to pull them away. When I passed him in the kitchen, or after dinner, outside in the yard, I wanted some reason to make physical contact with him. Really, I wanted him to take me in his arms and kiss me, but I would have settled for one intentional touch of his hand. \n\nThere was only one point where our eyes locked and neither of us looked away. It felt like it lasted a long time, though it was probably only a few seconds. If anyone had noticed, if they'd been looking carefully, it would have been obvious there was sexual attraction on both sides. I was a turned-on mess by the end of the evening. I'd hoped somehow he'd be able to get away when it was time for me to leave, that we could exchange a kiss in the dark of the side yard, but Rose followed me out instead, thanking me for helping with dinner, and telling me she'd see me in the morning. I drove away, unkissed and aching, but not entirely unhappy.\n\nI helped my grandparents load up their car the following morning before I left for Rose's. They were stopping at a friend's on the way into the city, and then spending the weekend with their son Gary, my dad's twin brother. My parents were joining them on Saturday for dinner.\n\n\"You sure you don't want to come out tomorrow? Or tonight, after work? There's plenty of room at your uncle's.\"\n\n\"No thanks, Grampa. I'll be in Manhattan in a couple of weeks for my birthday, I'll see Uncle Gary then. Be sure and give him and Aunt Lisa a hug for me, though. And mom and dad, too.\"\n\nMy grandmother gave me an extra long hug goodbye. When she drew back she looked at me carefully, her blue eyes keen and searching. \"We'll see you on Sunday night,\" she said. I hadn't told her Nico and I had plans for the following night, but she had to have assumed we would be seeing each other while they were gone.. \"Be safe, and have a nice time. And if you go out, don't forget to turn on the alarm.\" I read the unspoken message in her eyes: Enjoy yourself, and don't do anything stupid.\n\n\"See you Sunday. Have fun, you guys.\" I hoped she read the thank you in my eyes before she looked away. \"Love you.\"\n\n//\n\nNico knocked on my grandparents' back door at 5:30 on the dot. I was just re-sorting my overnight bag, making sure I had everything I might need when I heard the knock at the door. My heart jumped. I was a little on edge, and extremely excited. I let Nico in and he stepped through, looking more attractive than ever.\n\nHe'd gotten a haircut. Just a trim\u2014shorter around the ears and neck\u2014but it made him look so different. Not that I minded his messy curls\u2014I loved them, but he looked\u2014in what I suspected was a new shirt and new pants\u2014like a man on a date. And that was a very exciting thing indeed.\n\n\"I meant to get flowers,\" he said in greeting. \"I should have. I'm\u2014I\"m really out of practice with this whole dating thing.\"\n\n\"How long has it been?\"\n\n\"Oh God.\" He ran a hand through his neat hair, messing it up a little. \"It's been 14\u2014no,15 years? Since my last real date. Since I showed up at a girl's house like this, anyway. Nervous.\"\n\n\"You're nervous?\"\n\n\"Yes,\" he said without hesitation. \"You keep forgetting I'm a coward.\"\n\nI laughed. \"Oh please.\"\n\n\"You look so...\" He put his hand on his chest, over his heart and just grinned at me for a few seconds. \"Beautiful. I can't believe you're my date for the night. People are going to see me with you. How am I this lucky?\"\n\nI blushed and ran my hands down the skirt of my dress self consciously. \n\n\"That dress is beautiful, too. It's perfect on you, with your hair and your freckles. You're so gorgeous, Zoe.\"\n\nI'd spent a great deal of time preparing for the date. The last time I'd gone shopping with my mom in New York, I bought a lace turquoise sheath dress at Bloomingdale's. It was a simple design with a scoop neckline and cap sleeves. The fabric hugged my body enough to show off my modest curves, but loose enough it didn't look trashy\u2014perfect for a summer date night. I chose a pair of sandals with a heel, hoping that would get me a little closer to Nico's mouth when we kissed. I'd spent even more time on my hair, trying to find the right look. I settled on a low, loose bun. Judging by that awestruck look on Nico's face, I had done a good job.\n\n\"You've only ever seen me when I'm a mess,\" I said. It was something I'd realized when I was getting ready. I'd always been sweaty and tired at Wednesday night dinners, and although I'd showed up at Rose's last Friday freshly showered, I was sweating from the heat even before I stood up to leave.\n\nHe shook his head. \"You're never a mess, sweetheart.\"\n\nI didn't argue. I was too drawn in by the look on his face to do anything but stare. He moved toward me, then stopped.\n\n\"I forget. Am I allowed to kiss you before the date? Or, is that strictly an after-the-date thing?\"\n\n\"I think a kiss is allowed before. Maybe just one, though.\" I moved in his direction and stopped right in front of him.\n\n\"I'd better make it a good one then.\"\n\nHe bent, lifted one hand to my chin, and tilted my face up to his. It seemed to take a long time for his mouth to reach mine. His fingers were so hot against my skin and that heat traveled straight down my body like a roaming hand. He kissed me without passion, but his mouth was soft and he pressed it to mine so gently and for so long it made my knees wobbly. I caught the familiar seductive scent of his body and was brought back to that night in his bed. A shiver passed through me and just as he lifted his mouth from mine, I felt the barest touch of his tongue on my bottom lip.\n\n\"Oh my,\" I said once I regained the ability to breathe again. \"That was a good one alright,\" He grinned then his eyes lit on my overnight bag on the table next to my purse.\n\n\"Everything packed? Sun block and ski boots, just in case?\"\n\n\"Yup. All the essentials.\"\n\nHe picked up the bag and handed me my purse. \"Shall we go?\"\n\nI turned on the house alarm and locked the door behind me, thrilled beyond words to think of what the night held in store.\n\n//\n\nThe restaurant he'd chosen was an little tapas bar in town. I'd read an article about it in the paper and had thought it sounded interesting, but would never have expected Nico to pick it. I realized he'd probably picked it with me in mind, not because he was necessarily interested in it himself. I hoped it wouldn't end up being too fancy or too expensive for him. If he'd taken me to a pizza place with fluorescent lighting and rowdy college kids, I would have been just as happy.",
        "We were seated outside under an canopy of maple boughs strung with white lights. It was busy and the small tables were close together, but somehow I felt like we were alone in the world once we sat down. I also felt\u2014much to my surprise\u2014butterflies in my stomach. I noticed Nico looked more relaxed than he had earlier.\n\n\"Now I feel nervous,\" I said. I decided to be honest, since he had when he'd admitted nervousness picking me up. \"I don't know why; I feel like I've known you forever.\"\n\n\"Same here. But, technically this is our first date. Our first one without kids, anyway.\"\n\n\"It's auspicious,\" I said, nodding. \"I'm entirely too aware of\u2014everything. Am I sitting up straight? Should I cross my legs? Where do I put my hands?\"\n\nIt didn't help that I'd noticed several women checking him out when we'd made our way to our table. I wasn't threatened, but they'd been closer to his age, making me painfully aware of mine. I felt inexperienced and awkward like I never had before with him.\n\n\"You're perfect, Zoe.\" He laughed gently and smiled, putting me at ease just a little. \"Let's order some wine, maybe that will help you relax.\"\n\nIt did help, even before the drinks came I was feeling a little less self-conscious. I got a glass of wine, but encouraged him to get a beer, knowing that was his preference, and we began to ease into a more natural exchange. It didn't take long before our conversation was just a continuation of the conversation we'd had the previous week. It had no agenda, no predetermined direction; we just shared whatever came into our minds, and we went with the flow of it, enjoying each others' observations and ideas. At times it felt like hanging out with JD\u2014easy and fun, without any pressure of trying to impress\u2014but then I'd look into his eyes and feel everything inside me go soft and hot and remember I was on a date. And this was Nico. I was on a date with Nico.\n\n\"Tell me something about yourself I don't know,\" I said. We were halfway through the meal, completely at ease with each other, thoroughly enjoying ourselves. We'd been flirting a little, and teasing a lot, and I could feel the familiar buzz of excitement building in my belly. \"Something I wouldn't guess.\"\n\n\"Oh wow. Something you wouldn't guess.\" He looked off into the distance, thinking, and I enjoyed a tour of his handsome face. Those cheekbones. That jaw. And the new way his curls fell against his forehead since he'd gotten it trimmed. So attractive. I wanted to reach out and touch him, but I didn't. I just waited. \n\n\"I really like to be naked,\" he said finally. \"Like, all the time if I could.\"\n\nI hadn't been expecting that. \"You're a nudist?\"\n\n\"I...don't think so... No.\" He was genuinely thinking about it. \"I don't want to see other people naked. Present company excluded, of course. I just like...I don't know. I just like how it feels.\" He laughed, but he didn't seem embarrassed. \"I wouldn't want to go to a nude beach, you know, but if I could just be naked in my own home all the time, I would. It feels good.\" I must have looked shocked, because he laughed again when his eyes met mine again. \"What? It's not that weird...is it?\"\n\n\"I honestly don't know.\"\n\n\"You don't like being naked?\"\n\n\"I...um...I don't know. I don't think I've ever just hung out naked before.\" I felt myself blushing. \"I grew up with two older brothers, and I had roommates in college, and I can't exactly go naked at my grandparents', so maybe I've never had a chance to try it out.\"\n\n\"Mmm well, maybe we can try it out later.\" He grinned, and I blushed even more. \"OK, your turn. Tell me something I wouldn't guess.\"\n\n\"Ummm.\" I realized I didn't have a ready answer, so I had to think, too. It took me a while and I was pretty sure Nico was studying my face while he waited, like I had when he'd been considering the question. He had longer to study me, though, because I couldn't think of a single thing about me that was interesting enough to share. I was beginning to think all I'd ever done was study and get good grades. \n\n\"Oh\u2014I used to ride in equestrian competitions,\" I said excitedly when I remembered.\n\n\"Hmm. No...\" He shook his head slowly, grinning at me. \"No...I would have guessed that.\"\n\n\"What?\"\n\n\"Totally. I'm guessing English riding, not dressage.\" He laughed when my face fell. \"I do have a little girl, you know. I've had the crash course in all things horsie.\"\n\n\"Oh man. Well, I won some trophies. I was actually really good at it.\"\n\n\"Nope. That's a given, Zoe. You're really good at everything. Try again. Maybe something you're afraid of, although I can't even imagine that.\"\n\n\"OK. Umm.\" I thought for a while and felt him still watching me. \"Something I'm afraid of...how about this: I've never been camping.\"\n\n\"You're afraid of camping?\" He laughed openly. \"Oh, God, sorry, I'm laughing at your secret fear. That's really awful of me.\" He didn't stop laughing, though.\n\nI laughed, too. \"Not camping. I'm not afraid of camping.\"\n\n\"Sleeping bags? Tents? You have tentophobia?\" \n\n\"That's not even a real phobia,\" I said. \"I just don't like...camping. I don't like being outside when it's dark.\"\n\n\"So you're afraid of the dark? Ohhh.\" He was enjoying himself. \n\n\"No,\" I protested. \"Well, OK, kind of. I mean, I get scared outside in the dark. It's totally irrational. I'm fine indoors. And not in the city\u2014I mean, as long as there are streetlights I don't get scared\u2014but the idea of pitching a tent in the woods and sleeping there...at night.\" I shivered, honestly unsettled.\n\n\"For real?\" He was in genuine disbelief. \"OK. That's\u2014yeah. I would not have guessed that,\" he said, still chuckling.\n\nHe continued to tease me a little longer, until we'd finished eating, and I loved every minute of it. He asked if I wanted dessert, and though I'd read the restaurant's cr\u00e8me brulee was excellent, I declined. I was feeling a little full, though I suspected it had more to do with arousal and that full-chested feeling of excitement than the size of the meal I'd just eaten.\n\n\"So, what are we doing tonight?\" I asked, after our waitress\u2014who I noticed, every time she came to our table, couldn't take her eyes off of Nico\u2014brought us the check.\n\nHe slid his credit card into the folder after looking the bill over briefly, and laid it on the table, then sighed dramatically. \"I don't know, Zoe. I did have a naked camping trip planned for us, but I guess that's not going to happen now, is it?\" The look he gave me was so serious, so disappointed, I cracked up. Loud and un-ladylike enough I had to cover my mouth with my hand. \"To be honest, I thought you were braver than that.\"\n\n\"I'm sorry,\" I said, still laughing because his face hadn't changed. \"I'll make it up to you, I promise. Maybe I can come up with something else we can do.\"\n\n\"Something as good as naked camping? Somehow, I doubt that.\"\n\nThe waitress arrived and took the payment folder while Nico stared at me, still maintaining his stony stare. I couldn't keep from laughing, a giddiness was rising up in me, knowing where this evening was headed. Knowing we had the whole night together. Knowing, without a doubt, that it would be even better than the previous Friday night\u2014we had the benefit of time on our side.\n\n\"Well, I can try,\" I said. \"I'll do my best.\"\n\nWe left the restaurant, his hand light on my waist as we walked to the truck. He opened my door and waited while I climbed in, then gently closed the door. His eyes met mine briefly as the door shut, giving me an unexpected thrill.\n\n\"Where are we staying tonight?\" I asked as he drove up the hill, headed out of town.\n\n\"Not too far away. It's a nice place\u2014I hope you think it's nice, anyway. It's still under construction, but I got us a really nice room.\"\n\nI liked the sound of a 'really nice room', although I couldn't imagine what kind of place he'd take me to that was under construction. I didn't ask; I trusted his choices. After all, he'd made a great choice with the restaurant. \n\nIt took me longer than it should have to figure it out. He pulled onto a residential street where the houses were far apart, with swaths of uncultivated, woodsy land in between, so I guessed we were headed to one of the many B&B's out this direction. He turned the truck into a gravel driveway and drove up a slight incline, his headlights cutting across the front face of a big white house. I was still looking for a sign when I realized where he'd brought me.\n\n\"Oh my God, this is\u2014is this your house?\"\n\nHe pulled up to the end of the drive and turned off the engine. He left the headlights on, and we both peered out the window for a second at what we could see in the darkness. It was square, two stories, with dark shutters and tall windows. I made out some trees and bushes and another small white building a short distance away. I had a million questions, but I waited.\n\n\"It is,\" he said. \"Is that alright? For tonight?\"\n\n\"Yes. Absolutely.\" I'd been dying to see the house he was building since I'd heard about it. I unfastened my seat belt, eager to go inside. \"Can we go in?\"\n\nNico reached out and put his hand on mine. \"It's dark out there,\" he said seriously. \"You sure you want to go out?\"\n\nI laughed. \"Is this going to be a thing, now?\"\n\nHe shut off the lights and pulled his key from the ignition. It got dark. Pitch black, actually. \n\n\"Stay there,\" he said. \"I'll come get you.\"\n\nI could just barely see his face in the darkness as he came to my side of the truck. He opened my door and reached behind me to get my overnight bag. He took my hand and then stepped back, giving me room to get out. My eyes were adjusting little by little, but it was really dark out, and if I had to be perfectly honest, it creeped me out as we started across the yard. But I wasn't going to tell him that.\n\nI let him lead me through the darkness toward the house. I saw the dark mouth of an entrance, a porch, I thought, and Nico warned me when we got to the steps. \"Three steps up,\" he said. I found the steps with my feet, and in a few seconds was following him across a wooden porch floor.\n\n\"I have to let go of your hand to unlock the door,\" he warned. \"I'll be right here. OK?\"\n\nHe gently released my hand. I heard the jingle of his keys, then the solid sound of a bolt turning in a door. We stepped through and he closed the door behind us, turning the bolt again to lock it. He fumbled for a light switch and flicked it, turning on a dim light outside, a porch light. \n\n\"If I'd known you were such a scaredy cat, I would have left that on for you,\" he said. \n\n\"I'm never going to live this down, am I?\"\n\n\"Never.\" He bent and kissed me once on the lips and smiled. \"You were very brave, sweetheart.\"\n\nHe turned then, and switched on another light, illuminating the room we'd entered. \n\n\"The kitchen,\" he said simply. \"It's almost done. I tried to get the tiles finished before tonight, but I ran out of time.\"\n\n\"Oh Nico, it's beautiful.\" \n\nI walked into the center of the room and did a slow 360 degree turn, taking it all in. It smelled like old wood and new paint. It was mostly empty, and felt like an empty house. My footsteps echoed a little as I moved around the room.\n\nThe kitchen was big, with a wide window on the outer wall above a white double sink. There were glass-fronted wooden cupboards painted white\u2014the majority of them were empty\u2014that reached up to a high ceiling. The floors were wide wooden planks, worn in some places, but they were clean and, when I walked across them, they creaked, reminding me pleasantly of the floors at my grandparents' house. I could easily imagine how to room would look with the sun streaming in through the big windows, making the whole room glow.\n\nOver the counters and extending all the way around the kitchen was a border of blue and white tiles, alternating between plain and printed. I saw a stack of tiles in the corner, and realized these were the tiles he said he hadn't had time to finish. I knew he had done a lot of the work himself, and I thought of a hundred questions I had, but I wanted to see more, too.\n\n\"It's beautiful\" I said. I stepped up to him, slid my hand into his, and smiled up at him. \"Show me the whole house.\"\n\nHe gave me a tour through the first floor, switching on lights as we moved through the rooms\u2014a small dining room, a den or study, a tiny half bathroom, and a spacious living room. Some looked completely finished, but some were less complete, housing pieces of dry wall and boxes. The living room had a huge stone fireplace, which I guessed had to have been a selling point when he'd first looked at the house. \n\nI let him talk and just listened. I knew nothing about houses, so much of the minute details he shared were lost on me, but I enjoyed seeing his enthusiasm and trying to imagine what he saw when he talked about knocking down this wall or moving that one out a couple of feet. He obviously loved the house and had put a lot of work into it already. As much as I hated thinking of him and Lena here alone, I knew it was a special place to him. \n\nI followed him upstairs to the bedrooms, enjoying the creak of the stairs beneath our feet. He took me through the two smaller rooms first. They were all finished, freshly painted with bare wooden floors. The first room was empty except for some cardboard boxes neatly stacked in a corner. \n\n\"My office,\" he said. \"Not that I really need an office, but we don't need three bedrooms. And I have a desk, but not an extra bed, so...office.\"\n\nThe second room was painted pink. Very pink. There was a small bed along one wall, with a fancy headboard. It was bare, but had a pile of sheets and blankets on top of it. Across the room was a matching white dresser and vanity set, painted with pink roses. \n\n\"Yours, I assume,\" I said when we entered the room. \"I always pictured you doing your hair at a vanity like that.\"\n\n\"Takes a long time to look this good.\" \n\nHe stepped into the room and looked around. \"I let Lena pick the color. I had to talk her down a couple of shades, but I'm pretty sure this is the pinkest room in the county.\"\n\n\"You're such a good dad,\" I said. \"I always wanted a pink room, too.\"\n\n\"Never got one?\"\n\n\"My parents are strictly beige wall people. I think this would give my dad a nervous breakdown.\"\n\n\"I figure we can always paint over it,\" he said shrugging. \"It's worth it if she loves it.\"\n\nThe bathroom was tiny, but very clean. There was a huge white claw footed tub along one wall that immediately drew my eye. I noticed a pile of folded white towels on a small shelf and had a ridiculous thrill at the idea that he'd put them out in anticipation of me staying the night.\n\nThe last bedroom, opposite the bathroom, was Nico's and I was pleased to see it was much bigger than the room he currently had at Rose's. It was the only room that felt done. At least, it had a neatly made bed, a wide dresser, a big wooden trunk with quilts piled on top of it, and a set of bookshelves with some disorganized books. It wasn't complete, that was obvious, the windows were bare, and the closet was empty except for half a dozen moving boxes in the bottom, and the bookcase looked more like a prop than someone's library, but as Nico turned on the lamps on the side table and dresser, and turned off the overhead light, it transformed into a warm and cozy space.\n\n\"I hope this is OK.\" He set my overnight bag down on the floor next to a dresser.\n\n\"It's perfect, Nico. Thank you for bringing me here. I've been dying to see your house for so long.\"\n\n\"I almost booked a room somewhere,\" he said. \"There's a nice inn up on the ridge, I passed it a hundred times when I was working up that direction in June. It's cute, but I thought...you know, it's small. And this time of year they're probably busy, so...\" I moved toward him, drawn by the uncertainty in his voice. \"I don't know maybe this is selfish, but I just wanted to be alone with you.\"\n\n\"That's what I want, too,\" I said. I moved into his arm's reach and he drew me to him. \"I just want to be with you.\"\n\nHe smiled and pulled me closer. My arms went to his neck automatically and soon we were kissing, our bodies pressed tight. We picked up where we'd left off on Monday, in Rose's kitchen before the kids interrupted, skipping right over the tentative kisses for deep kisses that made my knees weak. It felt new and familiar at the same time, exciting and comfortable.\n\nThere wasn't a trace of hesitation in the way his mouth moved over mine, and I felt the power in his body as he held me while one hand roamed over my side and down my hip. He was more assertive than he'd ever been before and it was incredibly exciting.\n\nHe broke the kiss after a while, bending to drop his mouth to kiss my neck. He turned my head gently, bringing my bare throat to his mouth, and I let out a moan as he kissed me there, his mouth and tongue hot against my skin. I felt the touch lower, directly on my nipple and realized his hand had moved and his thumb was massaging the hard nub of my nipple through my dress. That made me groan, half in pleasure and half in recognition of how exciting he was.\n\nHe lifted his head to look at me while his thumb made purposeful circles. I groaned again and he smiled a half smile. \"I love that sound,\" he breathed. He shifted his hand and used the tip of his finger to manipulate my nipple, even though the layers of fabric\u2014the lace and silk of my dress and the cotton of my bra\u2014it was a precise touch and it only took a second or two for him to draw another groan from me. \"Mmmm,\" he said. \"That's the one.\"\n\nHe drew his hand away and slid it down my side.\n\n\"This looks like an expensive dress,\" he said. \"I'd hate to ruin it. Should we take it off?\"\n\nI nodded and moved to reach behind me, but he stopped me and pressed his mouth to my cheek. \"Let me do it,\" he said. His voice was low and full of desire. \"I'll be careful.\"\n\nHe walked around me, planting soft kisses across my shoulder and neck as he did. I felt his hands at the top closure and then he found the tiny zipper and drew it down with agonizing slowness. It moved silently, but every with every inch I heard the beating of my heart get louder and louder in my ears. He dragged it down my spine, dipping in at my waist, and then ending right at the top of my ass. Then his hands slid up my back, moving the fabric away as he worked his way high again, up to my shoulders. \n\nHe slid the fabric off one shoulder, then the other and I slid my arms from the arm holes, letting the dress hang at my waist. His hands came around and cupped my breasts lightly. I leaned back against him automatically and he pressed his mouth to my ear. His fingers found my nipples and worked them gently, applying just enough pressure to make me squirm.\n\nHis hands flexed, curling over the flesh of my breasts, increasing the pressure on my nipples. I sighed and pressed back against him a little more. He lifted his hands and then reached up and dragged the thin cotton fabric of my bra down, baring my breasts. \n\n\"Ohh,\" he breathed. \"You really do have the most perfect little breasts.\" I stared down, at my pale breasts and hard, pink nipples and Nico's big hands waiting. \n\n\"Not too small?\"\n\n\"Are you kidding? They're perfect, just enough to fill my hands. And look how hard your nipples are.\" He moved his hands so my nipples touched the very center of his palms, and with small, precise movements, and no part of his hand touching the flesh of my breast, he rocked the rubbery peaks back and forth.\n\nI groaned and pushed back against his body. I could barely stand it\u2014such a precise and perfect pleasure. He responded by tightening his core, giving me something to push against, while still manipulating my nipples with agonizing slowness.\n\n\"You're so sexy,\" he said into my ear. He closed his hands, trapping my nipples under his palms, and kneaded my breasts. \"I find the fact that you get aroused so quickly incredibly exciting. I feel like I could make you come just by touching you like that.\"",
        "When he pulled his hands away it was to bring them behind me again. He undid the hook of my bra and dropped it onto the floor. Then he returned to the task of removing my dress. I shivered in anticipation while he worked the lacy fabric over my hips and knelt to lower it all the way to my ankles.\n\nI stepped out and he stood, holding the dress carefully. \n\n\"Should I hang it?\" He turned toward the open closet door. \"I'm not sure I have a hanger, actually.\"\n\n\"It's OK. Just drape it somewhere.\" \n\nI didn't care if he tossed it out the window. It had been expensive, but it had already more than paid for itself by having a zipper Nico had to lower. I slipped my feet from my shoes while he laid the dress across the top of a bare dresser and then returned to me. His eyes swept down my body and back up again, landing on my face. He smiled and put out a hand.\n\n\"Come to the bed.\"\n\nI took his hand and let him lead me. I expected him to pull me onto the bed, but he sat on the edge instead and drew me toward him to stand between his legs. Sitting brought his face level with my chest, a fact I realized a second before his mouth made contact with my skin. His hands slid around my waist and up my back as he pressed his mouth between my breasts. I looked down and was grateful he had a hold of me because the sight of my pale breasts on either side of his curly head made me weak in the knees. I pulled my arms to my side and slid my hands into his hair. My breasts moved together, trapping Nico's face between them for a second. He made a noise of pleasure and I felt the vibration in my sternum. \n\nHe moved his hands from my back and held my waist, then turned his head and kissed the inside of my breast. I sighed as I watched, thrilled by the sight of his mouth on my skin. He lifted his head and began a slow and thorough exploration of my breast using his mouth. He kissed and licked and sucked the flesh, everywhere but my nipple, making the skin pucker and goosebumps appear. The anticipation was as erotic as the touch, and I groaned in frustration when he moved his mouth to the other breast, leaving my skin wet and my nipple aching for attention.\n\nHe lifted his eyes then, and repeated the same torturous exploration, coming only close enough to my nipple to make me draw a sharp breath in anticipation, but never making contact. He watched me, obviously pleased with how wound up he had me. I twirled my fingers into the longest parts of his hair as he opened his mouth and ran his tongue along side my nipple. I felt the heat of his mouth, but barely the touch. He moved his head a little and repeated the motion on the other side, just barely grazing the sensitive skin.\n\nI groaned his name in frustration. I was so aroused now. It ached inside me like a cramp, the need to be touched. I'd been a little wet all evening, but now I could feel my body was so turned on, the fluids were seeping from between my swollen labia to soak into the fabric of my panties. \n\nI clutched his head when he opened his mouth again. I watched his tongue extend beyond his lower lip, pink and wet and hot, and groaned louder than ever as he took my nipple into his open mouth. I swore and clutched at his head as his tongue finally circled and stroked my nipple, his mouth a hot seal around it.\n\n\"Ohh Nico,\" I moaned. \"That's incredible. Ohh God.\"\n\nI stared down at him, aching with pleasure as his tongue danced and swirled. I squeezed my thighs together and felt my pussy throb\u2014not an orgasm, but a strong pulse that made me gasp. He responded with a noise of excitement and lifted his sucking mouth from my breast.\n\n\"You really could come from this, couldn't you?\" He moved his mouth to my other breast and closed his lips around it. His tongue circled and flicked my nipple, pushing my arousal higher and higher until I was almost holding my breath. I squeezed my thighs together again and felt my hard clit pulse in response. It felt like I was close, the pressure of my swollen labia on my clit felt so good, but I wanted direct contact with my it. \n\nI looked down at Nico's mouth over my breast and groaned. I thought of how good it would feel to have his circling tongue on my clit and nearly came right there and then. I pushed him away more roughly than I meant. \n\n\"Not yet,\" I breathed. \"Not yet.\"\n\n\"You were close...\" He was staring at me with something like admiration.\n\n\"I don't want to come yet,\" I said. My whole body was on edge, ready for the release. I grabbed his hands when he reached for me. \"Don't touch me,\" I said. \"Please. Not yet. I just need a minute.\"\n\nI stepped back and let go of his hands. Seeing the state I was in, he stood.\n\n\"Sweetheart...\" He tugged the blanket and top sheet all the way back, making room for me on the bed. \"Lie down, catch your breath.\"\n\nI slid onto the bed's surface. It felt cool against my hot skin, but even the touch of the sheet against my breasts gave me a thrill. Nico watched me for a few seconds while I willed my body to calm down. Once my heart rate had returned to normal, I patted the bed's surface. \n\n\"Sorry,\" I said. \"It's safe now.\"\n\n\"Don't you even think of apologizing for that.\" He sat down and put his hand on my bare hip. \"I never knew a woman could orgasm like that\u2014just from nipple stimulation.\"\n\n\"I didn't either.\"\n\n\"You never have before?\" \n\nI shook my head.\n\n\"I've never tried on my own, and I've never been with anyone who was good at foreplay. I'm starting to think I've never been with anyone who knew the definition of foreplay.\"\n\n\"That's terrible,\" he said. \"Foreplay is the best part.\" \n\nHe was so earnest, it made me laugh. And it made my heart swell with affection, too, because I knew he meant it. \n\n\"What's so funny?\"\n\n\"You are every girl's dream man, Nico.\"\n\n\"I don't know about that.\" He looked a little bashful. \"I just like seeing you turned on. All the noises you make, the little groans and sighs. God, and the way your body moves against me when I touch you. You're so exciting, Zoe.\"\n\nHe leaned and kissed me, trailing his hand up my side. His eyes held mine. \n\n\"Can we continue?\" \n\n\"Yes, please. But\u2014\" I plucked at the collar of his shirt. \"I'm starting to doubt this secret confession of yours. You don't look very naked.\"\n\nHe grinned and planted a kiss on my lips, then slid from the bed. \"You're absolutely right. Give me a minute.\"\n\nI watched him cross the room and open the two windows a few inches. \n\n\"Oh? Is it about to get hot in here or something?\"\n\n\"We passed hot just a few minutes ago,\" he said. \"I just want to give my new neighbors something to talk about.\"\n\nHe came and stood next to the bed, unbuttoning his shirt as he did. I sat up on one elbow and watched with interest. A slow strip tease would have been fun, but I was glad he didn't take his time. I was dying to see his naked body again. He reached the last button and slipped the shirt off. I could clearly see the outline of his erection at the front of his trousers. I remembered how it had felt the first time I took him inside me and shivered with delight.\n\n\"Don't stop now,\" I said. \"That's not even half naked.\"\n\nHe laughed and bent to take his shoes and socks off while I enjoyed the flex and shift of his body as he did. Then he straightened up again and reached for the button on his trousers. \n\n\"Wait,\" I said. I slid to the edge of the bed where he'd been sitting earlier. \"Let me do it. I'll be careful.\"\n\nHis mouth quirked in a smile and he let his hands fall to his side. I'd only intended to undress him, but my hand brushed his erection as I lowered the zipper and my stomach tightened with excitement. I remembered how his cock had felt the first time I'd touched it, and my pussy throbbed in response. I got the zipper down and pushed the fabric of his pants and boxers over his hips. His cock sprang up and I heard myself make a noise of awe and delight.\n\n\"Step back a little,\" I said. \n\nHe did, stepping out of his pants. I slid all the way off the bed to help free his feet, my eyes unable to shift from the sight of his bobbing erection. I shifted, but didn't get back on the bed. I got on my knees, knowing his erect cock would be right in front of me. I reached out and took it in my hand. Nico drew a slow breath, his stomach tensing. I knew he was watching, but I was too focused on the sight in front of me to look up.\n\nI wrapped my fingers around the hard shaft and began to stroke it with a light touch. I was pleased to hear him let out the breath he'd been holding and immediately draw another and hold it. I glanced up to see him staring. His brow was drawn and his mouth was open just a little in anticipation. I dropped my eyes back to his cock. It was wet at the tip now. I barely thought about it before I brought my mouth to it, wanting a taste. I opened my mouth and let the tip of his cock touch the tip of my tongue, then moved my tongue a little to lap up the fluid leaking out. He tasted clean and sweet. When I closed my lips around just the tip of his cock, I saw Nico's body tense. He moaned my name as I sucked gently, more fluid leaking into my mouth. \n\nI looked up again, letting my mouth fall away from his cock. I ran my fingers up and down the hot shaft and watched his reaction. He was still holding his breath, but he let it out shakily.\n\n\"Is this OK?\" \n\nHe moaned again, an affirmative somewhere in the moan, and sort of nodded.\n\n\"Should I stop?\"\n\n\"Ohh God...no, baby. Don't stop.\"\n\nI moved my head back to his rigid cock and watched him. His eyes were wide and his forehead was drawn as he waited. I stroked him in slow movements and opened my mouth a little. He looked absolutely agonized, and I couldn't help but smile, thinking I owed him a little agony after how long he'd taken to put his tongue on my nipple, but I wanted to feel him in my mouth so bad, so he didn't have to wait long. It wasn't mercy; it was desire.\n\nI closed my lips around the tip of his cock and drew it into my mouth gently. I saw his belly rise and fall rapidly a few times as I sucked him in, just to the widest part of the head, and then swirled my tongue and drew back again.\n\n\"Oh, Zoe. That's\u2014\" he started to say, but all that came out next was a groan from the depth of his chest when I returned my mouth to his cock.\n\nThe taste of his dripping fluid in my mouth was so exciting. I continued taking the head of his cock into my mouth as slowly as I could, using my tongue on the underside each time I drew back. Above me, he sighed and moaned out his pleasure. I stroked his thick shaft as I sucked him, trying to keep my pace even and not too fast. We had all night, and I wanted to use the whole night. I wanted it to last.\n\n\"Sweetheart,\" he breathed, \"your mouth feels so good.\"\n\nHe reached down and touched my face, pushing a strand of hair away from my eyes. I could feel my whole body throbbing with excitement, and the look of pleasure on Nico's face just turned me on more. His expression was still agonized, but he gave me a smile that was weak, and full of desire. I held his gaze and resumed sucking him while he watched.\n\nDespite my slow pace, he was soon breathing quickly, and I felt the tension in his body when I rested my hand on his thigh. His hips swayed and jerked from time to time, and his hand clenched and unclenched at his side. I knew I could make him come, and I thrilled at the idea of it. I moved my free hand up between his thighs and gently cupped his tight balls, but he groaned and stepped back, reaching for my hands.\n\n\"Oh God,\" he said. \"Not yet, not yet.\"\n\nHis cock left my mouth and I waited as he held my hands in a tight grip and drew a few deep breaths. There was a drop of fluid pooling at the tip of his cock. I longed to take it on my tongue, but when I moved to lean forward, he stepped back, bent and lifted me from the floor. A second later, his mouth was on mine, his tongue parting my lips. He crushed me to him, trapping his hard cock between us. He dropped onto the bed, pulling me with him and kissed me passionately.\n\n\"I was on the verge of coming,\" he said, barely lifting his mouth from mine. \"Oh God, I wanted to...\"\n\n\"You could have,\" I said. \"In my mouth.\"\n\nHe groaned and pressed his thigh between my legs. \"You're so fucking sexy, Zoe.\" \n\nHe kissed me hard, still breathing a little fast. Then he drew back enough to look down into my face. His dark eyes were bottomless as he studied mine. \"I don't want to come yet, not even in your sweet mouth.\"\n\nHis words and the look on his face made me shiver. And then he smiled a hungry smile. \"Tell me what you want me to do,\" he said. \"Anything. I want to find all the ways I can to turn you on. Tell me what you want, sweetheart. Show me how to make you come.\" \n\nI thought of his mouth on my nipple earlier, and how close I'd been to an orgasm. How I'd nearly come just thinking about his tongue on my clit.\n\n\"Show me, sweetheart,\" he said softly. \n\n\"Take off my panties. I want your mouth on my pussy.\"\n\nHis eyes widened. \"Oh, baby...\" If he was shocked by my direct language, it wasn't a bad shock. He recovered quickly. He wasted no time. He sat up and tucked his fingers under the elastic of my panties at my hips and drew them down and off in one efficient motion.\n\nThe expression on his face was unbelievable as he parted my legs and moved between them. He was clearly very turned on, but he was in awe, too. And his awe only increased as he spread my thighs and slid his hands under my ass to lift my hips from the bed's surface. His eyes were focused on my sex as it opened. He lifted my hips higher and my knees fell back toward my shoulders, opening me even more.\n\nSuddenly he backed up and slid from the bed, dragging me with him. I yelped in surprise and his eyes jumped to my face, making sure I was OK. He brought me right to the edge of the bed and knelt, still holding my hips up in his hands. I had to close my eyes as he lowered his head to bring his mouth to my open pussy. I groaned even before his tongue made contact, the idea of what was about to happen was so exciting.\n\nHe'd been eager to oblige my request, but he was in no hurry to bring me off. He got comfortable first, shifting his hands to balance my hips on the flat of his palms, and lowered his mouth to my waiting sex. He dragged his tongue from the bottom of my pussy to the top and then back down again. He raised his eyes briefly when I moaned, but then focused back on the task in front of him and repeated the motion, licking me in another long, slow pass with his tongue.\n\n\"You're unbelievably wet,\" he said, lifting his mouth briefly. \"And you taste heavenly.\"\n\nHe returned his tongue to my sex and licked again, bottom to top and back down again, this time with a little more pressure. I lifted my head and craned my neck to see. The outer lips of my pussy were open with just a quarter inch of pink flesh showing. I'd trimmed my red pubic hair short, so the cleft was clearly visible. I shuddered with pleasure as he extended his tongue and ran it over the sensitive flesh. \n\n\"Ohhh that is amazing,\" I moaned. He looked up, his tongue poised, and slid it between the lips of my pussy\u2014just a little, a fraction of an inch\u2014and drew it up, then down, then up again. When it stopped it was directly above my clit, but the sensitive bud was still buried in the folds of my pussy. He moved his tongue experimentally. To the side, the other side, up, then down, all the while watching my face as I reacted to his touch.\n\n\"Spread yourself.\" His voice was quiet, reverent, and when I lifted my head to meet his eyes, I could see how excited he was. \"My hands are...occupied.\"\n\nI had to shift my legs to reach a hand down to my sex. My body tipped slightly, but Nico had me, his wide hands supported my hips and held me right at the level of his waiting mouth. I parted the lips of my pussy and heard Nico sigh. \n\n\"A little more,\" he breathed. \"Just like that. Oh, sweetheart. You're so beautiful.\"\n\nHe brought his mouth back to my sex and I tensed, holding myself open for him, and let out a sound like I was in agony as he pressed his tongue between the inner lips and licked me from bottom to top again. He hovered over my clit. I felt his breath and the heat of his tongue and then he dropped his head and licked it. Once, twice, then began swirling his tongue in a soft circle, stimulating it on all sides, round and round until I had to hold my breath I was so aroused.\n\nThen he moved his mouth lower and I felt his tongue slither inside me. He made a noise, deep and lusty, and I responded with a desperate cry. He tongued the entrance to my vagina with slow, searching thrusts of his tongue. I was certain no one had ever done that to me before, and it was an amazing sensation.\n\n\"Oh Nico, that's goood,\" I groaned. \"Stay there, stay there.\"\n\nHe responded to my direction with a groan of his own and I felt his hands grip my hips tighter. He kept his mouth at my hole and tested and teased the sensitivity of each square inch before dipping his tongue again into my body. I knew I was dripping wet, I could hear it when his tongue moved, a wet and sloppy sound that was as exciting as it was lewd. Then I heard him swallow as he lifted his head briefly, and I had to let my head flop back on the bed's surface, my strength sapped by a rush of excitement. \n\n\"So good, so good.\" \n\nI moaned and keened as he licked me, drawing more fluid from my pussy, and felt that delicious tension building in my belly. He fucked me gently with his tongue, a completely different penetration from anything I'd ever experienced. It was amazing. I was pretty sure if he kept it up, I would come, but I wanted direct contact with my clitoris when I orgasmed, and I wanted him inside me when it happened.\n\nI lifted my hand from my pussy and slid it into Nico's hair. He lifted his head. His lips were wet and his eyes were dark and emotional. It was the sexiest I'd ever seen him. \n\n\"Come kiss me,\" I said. \n\n\"Are you sure?\" He dropped his head and slid his tongue between my pussy lips. He found my clit and circled it. He seemed reluctant to leave my pussy. \"I can keep going.\"\n\n\"No, I want your mouth up here.\" He kept circling my clit, getting me more and more excited. He'd already figured out I preferred a soft touch to a hard lashing stroke. He'd also figured out the left side was more sensitive than the right, and he was rapidly perfecting the speed and direction I would require to come as well. It felt so good. Unlike anything else. And the sight was so erotic\u2014my hips tipped in his hands, his open and eager mouth. But I ached for the sensation of his body against mine, for the pressure of his cock buried inside me. \n\n\"I want you to fuck me,\" I said a little more desperately than I intended. \"Please, Nico.\"\n\nHe lifted his head and lowered my hips to the bed's surface. He was up in a second and moved onto the bed. He wrapped an arm around me and pressed his lips to mine. I could taste my pussy on his tongue, but then his mouth lifted again and he shifted my legs and body until I was in the center of the bed. He parted my legs, moved between them and lowered himself onto me slowly. I felt his cock against my sex, but he didn't penetrate me, only rested his hips on mine. \n\nHe was propped on his elbows, his chest pressed again mine, our faces level. He kissed me softly again and again, slow, gentle kisses that gradually increased in intensity. I was already turned on and close to an orgasm when he'd lifted his mouth from my pussy. My body had calmed a little, but the slow sucking action of his mouth on mine was bringing me right back up. I spread my legs a little, bringing my knees off the bed. He responded by rocking his whole body forward and back. I felt the thickness of his cock as it slipped between my labia, and then moaned as he continued rocking his body, grinding his erect penis against my pussy.",
        "He lifted his mouth from mine to find me breathing fast. \"Am I too heavy?\" \n\nHe was heavy, but I didn't mind. It felt so good to be pressed that close. I shook my head. \"Oh God, no, I love it. Don't stop.\"\n\nHe lowered his mouth again and continued kissing me as he made subtle adjustments to the angle and position of his hips. I felt the head of his cock find its target. He pressed forward and I tensed and grabbed hold of the bed sheets. I gasped and he stopped moving. \n\n\"Zoe?\" \n\n\"Don't stop. It feels so good.\" \n\nThe sensation was unbelievable\u2014just the head of his cock pressing into me. He hadn't penetrated me with anything but his tongue yet, so even though I was dripping wet, my body wasn't quite ready for full penetration, but it didn't hurt\u2014it felt absolutely incredible. I arched my back and swore.\n\nHis eyes were big as he eased himself back, then forward again, making me gasp again. \n\n\"Talk to me, Zoe. Should I stop?\"\n\n\"No, no, don't stop. Just...slow. Don't go deep yet. Oh God, but don't stop.\"\n\nI felt his body tense as he drew back, then move forward again. It couldn't have been more than an inch\u2014his hips barely moved\u2014but the pressure was enough. I ran my hands over his shoulders and locked eyes with him. \n\n\"Oh Nico, why is that so fucking amazing?\"\n\nHe shook his head, clearly thrilled by my reactions. \"I'm not even\u2014\"\n\nHe pressed forward just a little and I groaned. \n\n\"Ohh right there. Mmm, yes\u2014right there.\" \n\nSomehow he found the physical control to do exactly what I needed. He watched my face for cues, although I became so vocal, I left little for him to guess.\n\n\"Right there. Oh Nico. Just like that, just like that, just a little.\"\n\nI saw his arms tremble slightly as he eased himself forward and back. I could feel my body opening as the thickness of his cock head pressed into me. It wasn't that he was so large, it was just the resistance my body offered gave me such a delicious sensation of pleasure right on the very edge of pain. He rocked gently, pushing a little more each time. My whole body ached for it, for the release, and I knew I would come soon.\n\n\"That's\u2014\" I gasped. \"That's going to\u2014make me come!\"\n\n\"Zoe...\" His eyes went wide again when he realized I was close. \"Oh Sweetheart, I'm barely inside you. Your body is unbelievable.\"\n\nHe found a rhythm, slow and steady, barely penetrating me, and with each movement I whined and moaned beneath him. I could see it was an effort for him to not plunge himself deeper, but he held himself where I wanted him, staring down at me in wonder.\n\n\"A little more,\" I gasped. \"Just a little.\"\n\nHe obliged, carefully pressing deeper, and I was surprised when he moaned in response. \"Ohh sweetheart. You feel so good...\"\n\n\"So good,\" I echoed. He rocked forward and back on his knees, still watching my face. I could feel my body beginning to accept his gentle thrusts, relaxing even as my arousal rose higher with each shallow penetration, and I knew this precise and delicate ache would fade quickly once he filled me up.\n\nI stared up into his handsome face and brought a hand down between us, ready to get past the peak. \"Don't stop,\" I begged. \"Don't stop, Nico. Just like that.\"\n\n\"I won't,\" he breathed. I could see the pleasure in his expression. \"You're close...I can feel it,\" he gasped. I touched my clit and my hips jumped under his, making his cock dive deeper inside me, but still not all the way. I groaned and he drew back and found his rhythm again. I stroked myself and whimpered, right on the edge. \"Come, sweetheart,\" he urged me. His hips moved a little more quickly, and with a little less precision, but he was doing his best to keep his rhythm steady.\n\n\"Yes,\" I said suddenly. \"Yes, that's\u2014\" I gasped and he stopped moving and stared down at me, his eyes huge. I let out a long, low moan as I reached the highest peak and then my pussy contracted. I crushed my clit under my finger as the spasms began.\n\nI panted and squirmed and managed to gasp, \"Push your cock deep!\"\n\nHe did. Slowly and completely while my pussy quaked around his thick shaft. I stared up at him. His expression matched my own disbelief. I wasn't sure what he felt, but for me it was unlike anything I'd ever felt before.\n\n\"Ohhh Zoe...\" he breathed. His expression was complete astonishment as he watched me writhe and shake. I could hear myself groaning and whining as I came. It was the most intense orgasm I had ever had. It felt like a workout. I was sure my pussy would be sore afterward.\n\nMy whining became sighs and once my pussy's throbbing slowed I carefully lifted my finger from my sensitive clit and sighed. He began to draw back and my pussy pulsed weakly, making me sigh again.\n\n\"So sexy. My God.\" He shook his head and smiled. He very slowly began to rock his hips again, filling me thoroughly each time, but in no real hurry. \"Is this OK? You need to rest?\"\n\nI shook my head and ran my hands over his shoulders. His skin was hot and damp and I could feel the tension in the hard muscles as he held himself above me. \n\n\"God. You came so hard.\" He was obviously aroused from watching me orgasm. I could hear it in his voice, and it was plain on his face. \n\nI shook my head. \"I didn't even know I could, not like that. God, that was...unreal.\"\n\n\"Mmm,\" he smiled a hungry smile. \"It's so exciting to see you like that\u2014when you're about to come. God, it turns me on so much.\"\n\nHe lowered his mouth to mine and kissed me softly. When he lifted his head, it was only a fraction of an inch. I looked into his deep brown eyes and saw intense lust there. \"Just now, I wanted to keep you there, on the edge. I was barely inside you, but it felt so good. And your face\u2014oh God, you looked so sexy. And then\u2014\" He kissed me again, his tongue slipping between my lips briefly. I felt his lips move when he spoke, though his voice was only a whisper. \"When you did come\u2014and you told me to push my cock deep\u2014you got so tight.\"\n\nAlthough I could see he was excited, his hips rose and fell in the most leisurely fashion. From the look on his face, he was savoring the sensation of finally pushing himself deep. I lifted my legs and wrapped them gently around his hips. With each downward movement of his hips, I pulled him close with my legs, holding him against me for a second before relaxing my grip as he moved his hips back up. This way, together, we filled and filled my pussy in slow, luxurious movements. \n\nHe brought his mouth back to mine and we kissed. It wasn't long before his hips began to rise higher and fall harder. His pace gradually increased and he had to lift his mouth from mine to breathe. The look on his face was so exciting, so unlike any expression he wore out in the world\u2014it was lusty and needy and when he rose up and lifted my legs from his waist so he could thrust deeper inside me, I saw a focus that thrilled me to my core.\n\nFor the next few minutes, he was lost in his pleasure. Occasionally he would close his eyes and rest his chin on his chest, then he would groan, his head would roll on his neck, and he'd look down at me with intense desire.\n\n\"You are so gorgeous,\" he said. He smiled, but it was a slightly tortured smile and it faded quickly to be replaced by the lusty look he'd worn a moment before. \n\nHe grasped my ankles and brought them to his shoulders and began to thrust harder. He leaned forward, pressing my legs back, bending me nearly in half. I felt my hamstrings stretch more than they'd been stretched in a while. His cock moved deeper inside me, and the sensation was different, a dull, thick pleasure that spread through my whole body like a fever.\n\n\"Oh God, that's so deep,\" I groaned.\n\n\"Too much?\" His voice was throaty and full of emotion.\n\n\"No, I love it.\" \n\nI reached for his neck and pulled him down to kiss me, but his mouth never made it to mine. When my knees touched my shoulders and his cock filled me completely, I groaned, realizing he'd reached my body's limit. He stared, wide-eyed and made his own sound of excitement\u2014a deep, animal noise.\n\nHe shifted, grabbing my hands and laced his fingers in mine. Then he pressed them into the bed's surface just beside my head. His whole body was tense as he drove himself downward, filling me more deeply than a moment before. His weight and the power of his thrusts made it hard to breathe, but the expression on his face\u2014that lusty desire\u2014made it even more difficult.\n\nHe must have seen my discomfort, because he slowed his hips and asked, \"Too hard?\"\n\nI shook my head. \"Don't stop. Go as hard as you want,\" I whispered. \"Hard as you need.\"\n\nHe let out a long, low curse. Then he set his jaw and resumed thrusting, carefully, but deeply and gradually building force over the next few minutes. His face was wet with sweat and his brown curls bobbed as he thrust. I couldn't do anything, with my arms pinned and my whole body under his. His deep, downward thrusts drove the air from my lungs as his muscular body pushed mine into the bed's surface. I was completely at his mercy, which should have scared me given his physical strength and the sheer mass of his body bearing down on me, but I trusted him. I trusted him completely.\n\nI watched his face grow tense and his brow wrinkle with effort as he got close to his orgasm. Suddenly he let go of my hands and pressed his mouth to mine, crushing me under his torso. He was breathing fast, but he kissed me excitedly.\n\n\"Are you\u2014going to come?\" \n\nMy words came out in gasps as I struggled to breathe. When he answered, his voice was so low and lusty, it sent another thrill through my whole body.\n\n\"Yes.\"\n\n\"Are you going to\u2014come inside me?\"\n\n\"Yes. Is that what you want?\" His thrusts became wild\u2014fast and hard and desperate.\n\n\"Oh God, yes.\" \n\n\"I'm so deep inside you, sweetheart.\" His eyes went wide and I wondered if he was reading my thoughts, my fantasies about having babies with him. I was on the pill, so there was no danger he'd get me pregnant, but even the idea of his semen inside me\u2014the potential of pregnancy\u2014thrilled me.\n\n\"Do it, do it.\" I wanted it in the worst way. I wormed my hands up and into his hair. I dug my fingers into his scalp. I almost begged. \"Come, Nico. Come inside me. I want it.\"\n\n\"Ohh God. Baby\u2014\" He shook his head, like he was shaking off a fog, but then his whole body tensed and he thrust hard, pushing me down into the bed's surface. His hips quivered and the sounds he made were half curses, half grunts. He drew back a little and thrust again, bearing down on me. The air left my lungs and I lay, unable to draw more than a shallow breath while he trembled above me. I felt the pulse of his cock at the entrance to my vagina, erratic but strong. My pussy was pulsing too, from the intense, repetitive friction of Nico's thrusts. Together, we made a frantic rhythm that gradually slowed, though his heart kept thumping like mad in his chest.\n\nFinally he lifted his torso from mine, allowing me to take a deeper breath, and for a second he just panted, his chin on his chest.\n\n\"Zoe\u2014Zoe\u2014sweetheart\u2014\" His words were clipped and strained as he tried to catch his breath. \"You are fuck\u2014ing amaz\u2014ing.\"\n\nI groaned when he straightened up, giving me room to lower my legs. His cock slipped from my pussy and he ran his hands down my legs as he moved to the side, gently helping me lower them to the bed. He flopped onto the bed beside me, still panting. \n\nMy hips ached from the strain of having him on top of me for so long. I stretched my legs and arched my back, relieving some of the stiffness.\n\n\"You OK?\" He was still panting, but he turned on his side and pressed his mouth to my neck. His hand ran down my body and rested on my belly. \"I tried not to crush you, I know I'm heavy.\"\n\n\"I'm fine.\" I slid my hand over his. \"I don't think I've been so...um...thoroughly...fucked before.\"\n\nHe laughed. A burst of hot breath across my neck. \"Oh God, I was thorough, wasn't I?\" His hand slid lower, his rough fingers sliding into my red pubic hair. The heat of his palm was nice and I felt my tired pussy pulse distantly, responding to his touch. \"I hope I wasn't too rough.\"\n\n\"It was exciting,\" I admitted. \"Remind me to send a thank you letter to my yoga teacher.\"\n\n\"Is that why you're so flexible? The way your body bends...\" He made a noise low in his throat. \"God. You're incredible. I was watching your face, I was going to stop\u2014but you just folded right up.\" \n\n\"I took yoga in college. I had no idea those classes would have such far-reaching benefits.\"\n\n\"Far-reaching is right. Your knees reached right up to your ears.\" He pressed a kiss on my cheek and then lay back on the bed and sighed. I saw his eyes close. He drew a couple of deep breaths, his chest rising high each time.\n\n\"You're not falling asleep, are you?\"\n\nHe laughed, but didn't open his eyes. \"Not this time. I'm just savoring this feeling.\"\n\nI moved toward him and he automatically shifted his arm to make room for me. His eyes stayed closed as I snuggled up against him, resting my head on his shoulder. I traced my fingertips through his chest hair. \n\n\"What feeling is that?\"\n\n\"Not sure there's a word for it. Happy doesn't do it justice.\"\n\n\"Really happy?\" I suggested. \"Really, really happy?\"\n\n\"Really, really happy is getting close,\" he said laughing, \"but it's...more than that. I feel...like...\" I shifted so I could watch his face. His brow tensed and relaxed and tensed again as he searched for the words. \"Like I'm going to be OK.\"\n\n\"You'd been worried you weren't?\" \n\n\"I was worried. Or...worried I'd only ever be OK. Not better than that. Just going through the motions. Working as many hours as I can so I'm exhausted when I get home. Too exhausted to feel sad.\" He paused, and I waited, just watching his face. It made my heart ache when I thought of how much sadness he had inside him. \"I treasure my time with Lena,\" he went on after a few seconds. \"I can't get enough of that. But I think the rest of the time I'm just on autopilot. Just doing, not being, you know?\" He opened his eyes and looked down at me. \n\n\"I think that's a pretty common experience,\" I said. \"Life is painful. Nobody wants to feel sad.\"\n\n\"But how come, when I'm with you, I don't mind. I don't mind feeling sad. Why is that?\"\n\n\"I'm a good listener?\" I'd heard that a few dozen times in my life from grateful friends.\n\nHe shook his head. \"No, it's more than that. You are a good listener, but you pull it out of me, the emotion. I don't mean you make me sad\u2014you don't. You make me really, really happy. But I get sad sometimes when I'm with you and I don't try to run away from it.\"\n\nHe turned his head, looking up at the ceiling. I wanted to tell him how much I loved his displays of emotion, even the sadness, but I waited.\n\n\"I can't believe I cried the first time we had sex,\" he said after a while. He laughed, but he seemed genuinely embarrassed. \"I don't even know what the hell that was.\"\n\nI stretched my face up to his and kissed his cheek. \"It was real.\"\n\n\"Not exactly my manliest moment.\" He looked back at me, the first display of uncertainty he'd shown since we'd gotten to the house.\n\n\"You do not need to worry about your manliness, Mr. Onassis. Anyway, I don't believe you want to be that guy, the one who can't show emotions. That guy who's all buttoned down and in control of himself. I dated that guy, Nico, and let me tell you, he was an angry mess.\"\n\nHe looked at me for a while, a faint smile growing on his lips. \"Have you ever thought of becoming a therapist? Instead of a doctor?\"\n\nIt took me a second to realize he wasn't joking, despite the smile on his lips. \n\n\"You're so smart, Zoe. I know you've heard that your whole life, how smart you are, but I mean smart about people, smart about emotions. You pay such close attention to what people do and say, and what they feel.\" He smiled for real, his eyes crinkling at the corners. \"Maybe that's why you're such an amazing lover.\" \n\n\"Am I?\" I couldn't help but laugh, partly from excitement, but also because I'd never thought of myself as particularly skilled or knowledgeable sexually.\n\n\"God yes. A lot of it is just you\u2014how sexy you are. The way you move and the way you react, how vocal you get...\" He made a low noise, deep in his chest. I felt it under my palm. \"It's so exciting being with you. I love touching you and watching your response. But it's also the way you look at me. You make me feel so good, so...desirable. You make me feel like I'm the sexiest man alive.\"\n\n\"You are,\" I said. I meant it; I knew I'd never look at another man with half as much attraction as I looked at Nico. \"No question.\"\n\nHe made a noise of appreciation and sighed again. For a few minutes we lay together quietly. He closed his eyes again, and his chest rose and fell in slow, steady breaths, but I could tell he was still awake. The air coming in from the open windows was cool and scented with some kind of night-blooming flower. I could hear the crickets and a light breeze in the trees, but otherwise it was silent. \n\nMy thoughts were busy with what he'd said. The compliments, and the suggestion, which I thought had been genuine, not just an idle comment. I wondered if that would be fulfilling to me, if I'd enjoy it as a career, listening to other peoples' problems. And if I decided that was the direction I wanted to go, would that solve the problem I hadn't even admitted to myself? My desire to stay here? Near Nico.\n\nI moved from under the weight of his arm and sat up. His eyes opened, he turned his head and smiled, but didn't say anything. I moved until my face was level with his and then propped myself on an elbow. I reached up and pushed my fingers through his curls, thinking. I wanted to stay with him, I realized. More than I'd ever wanted to be a doctor, I wanted to stay with him, to be with him and raise a family. I wanted to marry him, and move into this house. I wanted to have babies with him and grow old together.\n\n\"What are you thinking about?\" He asked softly.\n\n\"I don't know if I can tell you. I think it's too soon.\"\n\nHe didn't press for more information, but he watched my face quietly for a while and then said, \"I love you.\"\n\nI sighed and a wave of excitement swept through me.\n\n\"I love you, too.\" Then I added, \"I've never been in love before,\" because I realized for the first time that it was true.\n\n\"Never?\"\n\nI shook my head, thinking. \"I thought I loved my boyfriend. I mean, I thought what I felt was love, but it never really matched up to what my friends described when they talked about being in love. That feeling...like you're going to die if you don't see them, and then the overwhelming dizziness when you do see them...I never really felt that. I didn't believe my friends, actually. I thought they were exaggerating. But, I also wondered if there was something wrong with me, that I didn't feel it.\"\n\nHis voice was very quiet when he spoke. \"Do you believe them now?\"\n\n\"Actually, I think they understated it a bit,\" I said. \"This feels...so much better...and so much worse than they described.\"\n\n\"Worse?\"\n\nI nodded. \"I love you so much, it hurts.\"\n\nI hadn't meant to say it so plainly, and when his smile faded a little, I worried I'd made a mistake, but then he looked at me seriously and said, \"I love you, too. So much, it hurts.\" \n\nThe next moment his hand lifted and he slid it to the back of my neck and pulled me down to kiss him. We exchanged a long, slow kiss that gradually became more passionate. He rolled onto his side and pulled me closer, pressing my body to his. We kissed and held each other for a long time without speaking, though we were saying plenty with our eyes. It took him a while to get hard again, but in the meantime we played\u2014stroking and kissing and exploring each others' bodies at leisure. I had no sense of time passing and didn't even care. As far as I was concerned, we were in our own private world where time was irrelevant.",
        "It was an incredible night, and I was filled with an irrational sadness when we woke late in the morning, knowing we'd be parting ways in a few hours, but I tried to push it down and ignore it while we cooked breakfast and sat in the unfinished living room to eat. I knew I'd been lucky to get a whole night with him, though I hated that I didn't know when we'd get a night together again.\n\nHe drove me back to my grandparents' house and kissed me in the truck. \"I wish I didn't have to go,\" he said. I was pretty sure his sad expression mirrored mine. \"I feel like picking Lena up and bringing her back here.\"\n\n\"You could.\" I was hopeful, but he shook his head.\n\n\"I told Rose I'd take the boys tonight.\"\n\n\"You could bring them along,\" I suggested. \"I can make dinner.\"\n\nHe laughed. \"I like your grandparents too much to unleash those two in their house.\"\n\n\"Hmm. True. We could eat outside.\"\n\n\"What about tomorrow morning? Breakfast? Me and Lena? I'll bring the bagels, you make the coffee. We can play house again.\"\n\n\"Deal.\"\n\nHe kissed me again and smiled. \"I feel so much better now. How does 9:30 sound?\"\n\nI smiled, too. \"Perfect. I'll see you then.\"\n\nThere was another kiss, then another slightly softer, slightly longer one after that, and one more that ended with a very reluctant parting of our mouths. \n\nI sighed.\n\nHe sighed.\n\nI sighed again and had to force myself to open the truck door, climb out, grab my overnight bag, and close the door behind me. It took so much effort. I watched him drive away, a mix of emotions. The morning seemed an impossible length of time away, but at least I had something to wait for. I thought about how comfortable the morning had been once we'd gotten out of bed, and how much fun it had been to make breakfast together. It felt like we could easily slip into that routine together, and I wanted that with all my heart. \n\nI wasn't entirely sure where things were going. I wasn't sure Nico knew either. And I knew despite the fact that being together so far had felt like the most natural, easy thing in the world, we hadn't known each other very long. And maybe that didn't matter, but it was worth remembering.\n\nI thought back to my grandmother's advice and her gentle reminder that my life was in transition, that this was a vulnerable time for me to make any big decisions. I knew she was right, but I also knew I'd never felt so certain about anything as I felt about Nico. All those focused years of fast track science classes I'd held the image of myself as a doctor in my head with absolute clarity, but the image seemed foolish to me now\u2014like a kid's idea of what being a grown-up is all about. Now I felt I knew what I wanted. I just hoped I could wait for the right moment to ask for it."
    ],
    "authorname": "angel_grant",
    "tags": [
        "romance",
        "older man",
        "younger woman",
        "redhead"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/free-fall-ch-02"
}