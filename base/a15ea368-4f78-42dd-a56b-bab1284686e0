{
    "title": "The Bar and Grill Pt. 03",
    "pages": [
        "AUTHOR'S NOTE. This is part 3 of 4. The final installment is now done, and it will be posted as soon as I have some time for some final editing.\n\nThanks to everyone for their comments, both good and bad, on the first two parts. I know this is different from what's normally posted here, but you can't say you weren't forewarned.\n\nAs always, I really would appreciate your thoughts and comments on this installment and how you think it's coming along.\n\n*\n\nTwo weeks after Nicole introduced me--and Lonnie Mackie--to the joys of Thai grilled chicken skins, my life took a dramatic and unexpected turn.\n\nIt all started out innocently enough on a Wednesday night at seven thirty. I was leaving after another long night, and I spied Nicole at a table in the dining room, taking an order from her parents while stroking the blonde hair of a little boy in a high chair.\n\nCurious, I decided to butt in on the proceedings, so I ambled over to the table to say my hellos.\n\n\"Gertie, Willie,\" I said, nodding to Nicole's parents.\n\n\"Hey, Tim,\" they said almost in unison.\n\n\"And is this the famous Alistair?\" I said.\n\nNicole nodded, her face on her son.\n\n\"He's a handsome little fella,\" I offered.\n\n\"He is that,\" Gertie said.\n\n\"He's a Sanderson through and through,\" Willie said, staking his family's claim to the boy's genetic benefits.\n\n\"He has his father's eyes, though,\" Nicole whispered, still smiling and looking at her son.\n\nI was surprised and more than a little curious. I'd never seen this side of Nicole. The only time I'd ever heard about her husband, the boy's father, she'd turned to ice. Yet, she looked at her son fondly while speaking about him. I realized I still knew almost nothing about this sphinx of an employee. Was she divorced? Widowed? What did she like other than cooking and, obviously, her son?\n\nAnd that's when I said it, not even thinking before the words were out of my mouth.\n\n\"Y'know, I'd like to maybe all get together for dinner sometime if that's okay with all of you.\"\n\n\"Sure,\" Willie and Gertie chimed.\n\nNicole's face looked troubled, though, as if she was torn between the joy of stroking her son's hair and the fear of socializing. Was it socializing in general, or just socializing with me? I decided to press on before she could refuse.\n\n\"Have you tried the appetizer Nicole came up with?\" A little misdirection to get the ball rolling.\n\n\"Which one is that, dear?\" Gertie said to Nicole.\n\n\"You probably wouldn't like it,\" Nicole mumbled.\n\n\"Maybe, maybe not,\" I said. \"I think you should try it, though. On the house. See what your little girl can do.\"\n\nWillie was intrigued. His stocky frame indicated he liked food, but his ordering history leaned heavily on meat and potatoes. Still, the notion--maybe even fatherly pride of some sort--that his little girl had developed a real restaurant menu was breaking down his natural inhibitions to try something beyond meat loaf, fried chicken, or pot roast.\n\n\"Let's give it a shot,\" Gertie urged, and Willie nodded.\n\n\"Yeah, let's.\"\n\n\"So what's this about dinner?\" Gertie chirped, getting the conversation back on track. God bless her.\n\nNicole shot me a don't-you-dare look, the first I'd seen from her in months. I smiled back at her before turning to Gertie.\n\n\"Why don't you all come over to my place Saturday. I'll get Jack to cover for me, and I don't think Nicole is working. Nicole and I will plan a menu, and we'll all just eat and drink and have a relaxing evening. Bring whoever you want. Barry's still at home, right?\"\n\nGertie nodded, smiling brightly.\n\n\"Hell,\" I went on. \"Go ahead and invite Clara and Leon and the boys, too. Matter of fact, I'll invite her in just a minute.\"\n\nGertie was bubbling with enthusiasm of a family meal she wouldn't have to cook.\n\n\"Nothing too weird, right?\" Willie ventured.\n\nI shook my head and laughed. \"Whatever we make, you'll like it. I promise. Right, Nicole?\"\n\nI turned and looked at the mask that had, once again, descended over her face. She held my eyes for a minute, her lips tight, then turned and strode to the kitchen to place her parents' order.\n\n\"What's wrong with her?\" I asked, turning to Gertie and Willie.\n\nGertie pooh poohed the reaction.\n\n\"She's like that a lot,\" Gertie said.\n\nWillie's eyes had followed her, and I don't think he even realized speaking.\n\n\"'Specially since Alistair was killed.\"\n\nSeeing a piece fit into the puzzle, I decided not to waste the opportunity.\n\n\"How was he killed?\"\n\n\"Murdered,\" Gertie whispered.\n\n\"They never caught him,\" Willie added, looking sadly at Alistair as he spoke.\n\nI felt like an incredible asshole. Here they are, trying to enjoy their dinner in my restaurant, spend some time with their grandson and Nicole when she can snatch a few moments with them between tables, and I'm dumb enough to stick my nose in where it doesn't belong.\n\nGertie stopped my shame from overwhelming me, though.\n\n\"So,\" she chirped up, \"what time on Saturday?\"\n\n\"Five okay?\"\n\nGertie looked at Willie, who nodded, then back to me. \"And Nicole? If she's helping you, she'll probably need to be there earlier.\"\n\nI shot a look at the kitchen door, then back to Gertie. \"Maybe I should-- \"\n\n\"Nope,\" Gertie interrupted. \"You try to work it out with her, she won't even be there. You tell me what time, and I'll get her along so you two can whip us up something really nice, okay?\"\n\n\"Two o'clock?\" I offered.\n\nGertie nodded. \"Two it is.\"\n\n\"And she should bring Alistair with her,\" I rushed in.\n\nGertie just smiled and shook her head. \"Smack dab in the middle of nap time.\"\n\nI nodded.\n\n\"But nothing too fancy, right?\" Willie said.\n\nI laughed. \"Sold.\"\n\nI left them to their dinner and moved to the bar, where I invited Clara and her clan. She was surprised, but quickly accepted for just her and Leon. The boys had a dance or some such thing.\n\nI thought back on my conversation with Gertie and Willie. Sure, having your husband murdered is going to scar the hell out of any woman, so it went a long way toward explaining Nicole's behavior, particularly what had to be her first boyfriend after that took to beating on her. It all fell into place now, and the mystery that was Nicole was clearing up.\n\nThen I thought about Gertie at the end of the conversation. Let's get something straight here, folks: I'm not completely stupid. Gertie was clearly pleased about Nicole and I spending time alone in my house cooking dinner. I wasn't sure whether she was pleased to just be getting Nicole out of her shell or whether it was romantic plans for the two of us. It seemed she wouldn't have minded it either way.\n\nAnd that led to my final thought. Namely, I was now looking at Nicole as something different than an employee and fellow lover of the culinary arts. For the first time ever, I was looking upon Nicole as more than just eye candy to glance at occasionally in the kitchen. No, now I was seeing a beautiful woman that I'd--maybe--like to become more involved with, spend time getting to know as more than just an employee.\n\nThen the doubts started creeping in. Was Jenny right? Was I looking at Nicole like this because I wanted to play the knight in shining armor and make it all better for her?\n\nThat, of course, made me think of Jenny.\n\nOh, that and the fact that Jenny just happened to stroll in with Jammer as I was finishing my beer and getting ready to go home and feed Ernie.\n\nTWENTY\n\nWe were seated around a tall pub table in the bar area, taking the first sips of our beers.\n\n\"You haven't called me back,\" I started.\n\nJenny smiled. \"Warned you,\" she said. Seeing my hurt expression, she softened and went on. \"Really, Tim, I've been busier than hell all week. Only reason I'm here right now is because Jammer was driving past as I got off the train and dragged me up for a drink.\"\n\nI nodded. She did, after all, work in the city. That meant an hour plus commute each way. And with her job, there was no doubt she worked twelve hour days. She'd barely had enough energy to screw me unconscious the past two Saturday nights we'd spent together. Still, it wasn't a boyfriend-girlfriend thing going, and I was beginning to want more.\n\n\"Chill, dude,\" Jammer said.\n\nI smiled at him.\n\n\"You moving in on her?\" I teased.\n\nHe sipped his beer. \"What makes you think I haven't done so already?\"\n\n\"Boys, boys,\" Jenny chided. \"Settle down here, willya?\"\n\nShe turned to me and put her hand on my forearm. \"If it makes you feel better, Tim, he's never gotten past second base with me. Ever. And that was in high school. I'm not seeing him behind your back, okay?\"\n\nMy startled expression turned to laughter at Jammer's hurt feelings.\n\n\"Jenny, you're ruining my reputation here,\" he protested.\n\n\"And if you ever want to get past first base again,\" Jenny continued, ignoring Jammer, \"you won't tell him what base you reached.\"\n\n\"Oh, I know what base he reached,\" Jammer proclaimed. \"He's got a whole new spring in his step lately.\"\n\nWe chatted about old times for a while, about people we'd gone to school with and who had kids and who else had divorced and so on.\n\nOur conversation was interrupted when appetizers materialized on the table in front of us.\n\n\"I thought you all could use something to eat,\" Nicole said, briefly smiling before turning away.\n\n\"Nicole,\" Jammer called after her, \"come back here, honey.\"\n\nI saw her back tense at his voice, and she stuttered her step. But she kept walking back to the kitchen.\n\n\"That girl,\" Jammer said, turning to me. \"Nicole. What's the story with her?\"\n\n\"Helluva cook,\" I said, pushing the chicken skins in front of him. \"Try for yourself.\"\n\n\"I know she's a helluva cook, Timmer. Everyone at the party complimented her stuff,\" Jammer said, picking up a skewer and taking a bite. \"You're right. Good.\"\n\n\"She came up with it,\" I said.\n\n\"So why won't she give me the time of day?\" Jammer asked. He turned to Jenny. \"You're a woman. What's her problem?\"\n\nI turned to Jenny to hear her answer and saw her staring at Nicole across the room on her way to the kitchen.\n\n\"Jenny,\" Jammer insisted, breaking her reverie.\n\n\"You're a pig,\" Jenny said, \"and she's looking for something else right now.\"\n\n\"That hurts,\" Jammer said as I laughed. \"What's so funny?\"\n\n\"That's what she called you,\" I told him. \"Monday after the party.\"\n\nJammer got flustered at this. \"It was late,\" he whined. \"I was drunk. Hell, Timmer, you know I didn't mean anything by it.\"\n\n\"You're not what she needs,\" Jenny insisted. \"She looks like she's been through a lot. She doesn't need a quick roll in the hay with someone.\"\n\nJenny turned to me with a weird look on her face.\n\n\"What?\" I said.\n\n\"It's you,\" Jenny said.\n\n\"Me what?\"\n\n\"That she wants,\" Jenny said, turning back to look as Nicole strode from the kitchen to the bar to get drinks.\n\n\"If I didn't know any better,\" Jenny continued, her eyes still on Nicole, \"I'd say she has a crush on you. Or at least is curious about you.\"\n\nI tried to laugh it off, and Jenny said nothing. Jammer, though, wasn't one to hesitate putting in his two cents.\n\n\"What the hell is it about him lately?\" he asked Jenny. \"Some chick dumps him, divorces him, and he's waist high in more premium trim than I can get on my best day.\"\n\n\"He's not a dickhead,\" Jenny said, smiling at Jammer.\n\n\"You think I'm a dickhead?\"\n\nShe laughed. \"No, Jammer, you're not a dickhead. I was just teasing.\"\n\nHe seemed relieved.\n\n\"We've already agreed you're a pig, okay?\"\n\nHis sheepish grin turned to fake pout. Say this for Jammer, he could take as well as he got. Frankly, if I was a chick, I'd find him cute and endearing and funny and all of those things that women seemed to want in men. And he's definitely better looking than me, so I found it hard to stomach Jenny's assessment.\n\nJenny seemed to be reading my mind, though. Maybe staring at Jammer with a pondering look gave it away.\n\n\"Listen, boys,\" she said. \"Neither of you really has a clue what a woman wants. You both have a general idea what women want, but not what an individual, specific woman wants, okay?\"\n\nJammer seemed game, and I was willing to play along with it, so we waved her on.\n\n\"It's like this,\" she said, leaning over the table and talking lower. \"You, Jammer, you're like the little boy that women want to play mommy with. You're petulant, funny, you can take a joke and laugh at yourself, and you don't take things all too seriously. You need someone--and I mean if you're thinking long term here--you need someone who's like you. Someone who needs to keep things light and fun and spontaneous. Anyone who says opposites attract is full of shit. Opposites attract initially, but end up getting on each other's nerves after awhile. So that's the type of woman you need.\"\n\nJammer seemed to actually give this some thought for a moment.\n\n\"So you're saying,\" he started, \"you're saying . . . . If she's really smart and intense and ducks in a row on everything, she's not going to find me attractive?\"\n\nJenny shook her head. \"Oh no,\" she responded. \"She'll find you attractive, all right. Hell, you're a good lookin' guy. A lot like Tom Brady without the dimpled chin. Big, handsome, great smile, dark hair. The whole package.\"\n\nJammer preened like a prize swan at this, but her next statement shot him right down.\n\n\"But she'll be the one to dump you. Not the other way around. You'll keep going to the well so long as you get laid, but she'll dump you regardless of how good the sex is.\"\n\nNow the fawning chest puffery was gone. Jammer actually thought about this, then shrugged.\n\n\"And if I don't want to find someone and settle down? If I don't care if it's long term?\"\n\n\"Then you need to decide, on those nights when there is no warm body next to you in that big old house of yours, whether you're lonely or alone. Some people don't mind being alone. Some people, though, get lonely when there's no one else to tell about their day.\"\n\n\"Jesus,\" he said, gulping his beer. \"I didn't drag you here tonight to think about all this serious shit.\"\n\nJenny and I grinned at his discomfort.\n\n\"But as long as we are,\" Jammer said, taking the last gulp of his beer, \"why don't you tell me what type of woman is perfect for our little Timmy here.\"\n\nI held my hands up defensively.\n\n\"Whoa, fellas,\" I said.\n\nBut Jenny's eyes had fixed on me.\n\n\"Someone who cares about him as much as he cares about her,\" she said.\n\n\"A bit trite, don't you think?\" Jammer challenged. \"Why don't we start with his looks. If I'm Tom Brady, who's Tim? Barney Fife?\"\n\nJenny shook her head. \"Jackson Browne.\"\n\n\"The singer?\" Jammer said. \"Folk dude from the seventies?\"\n\nShe nodded. \"He looks a lot like him. Hair's shorter, but the build and face are about the same. But it's more.\"\n\n\"How so?\" I asked.\n\n\"He's more introspective. The silent watcher type. Enjoys company, but doesn't need to be--doesn't want to be--the center of attention.\"\n\nJenny took a sip of her beer, looking at me as she spoke. Her eyes seemed troubled, like she didn't much like what she was describing in me.\n\n\"He's the kind of man a woman--the right woman--doesn't want to baby or mother. She just wants to hold him in front of the fire on cold winter nights. To just enjoy being with him. To cook dinner with him and laugh together about their day.\"\n\nJammer and I were silent when she finished. Her telling of it was so sad, somehow, and I knew why. I'm pretty sure Jammer picked up on it, too.\n\nJenny was an achiever. She loved her job, the stress, the long hours, solving all of the problems in the office. Sure, she could screw like a minx on a Saturday night, but that was only after putting in another six or seven hours at the office. And she had taken off early on the three Sundays we'd been together, which meant she'd probably gone home and prepared for the shitstorm her week was bringing.\n\nIn other words, she'd never be the kind of person for me. Maybe not for Jammer, for that matter.\n\n\"Cheer up, Tim,\" she said, putting her hand atop mine. \"I was honest from day one. Now that I know you a little better, I'm pretty sure I've hit the hammer on the head, right?\"\n\nI nodded. She was right, and I saw that.\n\n\"So Saturday night is off?\"\n\nShe nodded. \"It'll only make it harder for you if we keep up, don't you think?\"\n\nJammer decided now was the time to introduce some levity.\n\n\"So that means you'll give me a shot?\" he trumpeted, slapping his hand on the table. \"It's about goddamned time.\"\n\nI smiled. Jenny, of course, was right. I could already feel myself becoming too attached. I'd been disappointed we never talked or spent any time together doing anything but screwing. Jammer could do that; he could just have casual sex with someone and not need more. I now realized, for the first time, that I just wasn't wired that way. Sex is awesome, particularly with Jenny, but it left me wanting more.\n\nThe real problem was whether I'd ever change to become more patient. Every time I got a blowjob, did the donor have to get an engagement ring? Was sex enough to just hook me into thinking I was in love?\n\n\"So what d'ya say, Jen?\" Jammer continued. \"Saturday night?\"\n\nShe laughed, shaking her head.\n\n\"No, Jammer,\" she said, giving my hand a gentle squeeze. \"I'm gonna need a lot more time than that to recover from my bouts with Tim here.\"\n\nI flashed Jammer a grin at this one.\n\n\"Still friends?\" Jenny said to me.\n\n\"Forever,\" I said, squeezing her hand now. \"And thanks.\"\n\n\"Don't mention it,\" she said. \"Though I can tell you, I'm definitely going to miss-- \"\n\n\"Oh no,\" Jammer whispered, interrupting her.\n\nWe looked at him, then followed his eyes to the door.\n\nJenny said, \"Is that-- \"\n\n\"Nina,\" I confirmed.\n\nAnd she had seen us and was walking straight at our table.\n\nI felt Jenny's hand squeeze mine again, then start to disentangle. But I held onto her hand, not letting it go. I wasn't sure I could do this alone.\n\nBut then another thought occurred to me, one that I decided to act on.\n\nI stood, letting go of Jenny's hand and turning to both of them.\n\n\"Night now,\" I said, and started walking toward Nina.\n\nAs I approached, her smile got brighter and she raised her hand to wave. I couldn't help but notice that there was no wedding ring on her finger, which surprised me. I knew she and Steve had married within weeks of the divorce.\n\n\"Hey, Nina,\" I said, approaching her.\n\n\"Hi, Tim,\" she responded.\n\nAnd I just walked right on past. Before she could react, I was disappearing through the kitchen, out the back door, and into my Jeep.\n\nThere you go, Nina. Take that.\n\nHow's it feel to have someone you supposedly love blow you off with nary a care?\n\nSucks, huh?\n\nTWENTY-ONE\n\nNicole was even more quiet than normal the next morning. All efforts to get her to talk were met with monosyllabic responses and grunts. By the time afternoon clean up arrived, I was tired of it.\n\n\"Fine,\" I said to her back as she loaded the dishwasher. \"I'm sorry, okay? I shouldn't have gotten you roped into a dinner party without asking you first. I just thought, you know, it would be fun to just get together and cook for some family.\"\n\nHer shoulders slumped as she went still.\n\n\"C'mon, Nicole,\" I continued, pleading. \"I'll do it however you want. You want to cancel the whole thing, no problem. You want just me to do the cooking? That's fine, too. I just thought . . . . Well, I don't really know what I thought. I just don't need you all pissed off about it though, okay?\"\n\nShe turned, her face nervous, and leaned back against the counter, her hands on each side of her ass.\n\nWe stared at each other for a few moments, her mouth starting to say something several times before she managed to speak.\n\n\"I've never cooked any French food,\" she finally said.\n\nI smiled. \"You got anything particular in mind?\"\n\n\"Beef bourguignon?\"\n\nI nodded, running through the timeline in my mind.",
        "\"Perfect for a cold winter night. But that takes quite a bit of time,\" I said. \"I can probably start it in the morning, though. You can help me finish it when you get there in the afternoon.\"\n\nShe shook her head. \"No. If I'm going to learn to make something French, I should be in on it from the beginning, right?\"\n\nI nodded. \"Suppose so.\"\n\n\"Is ten too late?\"\n\n\"About perfect.\"\n\nWith that, she turned back and finished the dishes while I mopped and wiped off counters.\n\nThe next day, Friday morning, we cut ten pounds of chuck roast into two-inch cubes and made a simple burgundy wine marinade with crushed garlic, peppercorns, and bay leaves. That night, I told her I'd swing over to her parents' house the next morning to pick her up. And before I knew it, Saturday morning was there.\n\nThe start of the day that would change my life.\n\nIn ways both good and bad.\n\nTWENTY-TWO\n\nWe entered the kitchen through the garage, and Nicole stopped to take off her snowy shoes and layers of jackets. December in northern Illinois can get cold.\n\n\"Hey, little man,\" she murmured as Ernie did his best to jump into her arms. She bent down and petted him. \"What's your name?\"\n\n\"That's Ernie,\" I told her, throwing my jacket over a stool and going to the refrigerator to pull out the marinating beef and other ingredients we'd need.\n\n\"This is nice,\" Nicole said, holding Ernie in her arms as she stood and walked into the kitchen. Ernie was doing his best to drown her in vigorous licks all over her face.\n\nI followed her eyes, pleased I'd gotten up early enough to get the house cleaned.\n\n\"Tour?\" I offered.\n\nShe nodded, putting Ernie down before he licked her skin off.\n\nWe went from room to room of my home. Okay, house. It was still lacking any personal warmth after Nina and the girls had packed it up and trucked it off with them.\n\nErnie followed Nicole like a, well, love sick puppy dog. Traitor. You'd think I didn't spend every night trying to sleep over his rumbling snores.\n\nOnce done with the tour, we went back to the kitchen and got started. Two hours later, the bourguignon was braising in the oven; the dough for the cheese puff appetizer was resting; the pears for dessert were cooling in their poaching liquid; and the croutons and chunks of slab bacon for the Salad Lyonnaise were prepared.\n\n\"So that's it, huh?\" Nicole said, sitting on a stool at the breakfast bar across the counter from me.\n\n\"That's what?\"\n\n\"That's all French cooking is?\"\n\nI laughed. \"No,\" I said. \"That's all French bistro cooking is. Simple ingredients prepared simply.\"\n\n\"That salad, though. Salad Lyonnaise. Croutons, bacon, frisee, and poached egg? An egg on a salad? I mean, you promised to go easy on my dad, right?\"\n\n\"Wait 'til you taste it, little girl,\" I said. \"It's like bacon, eggs, and toast for breakfast except it's in a salad.\"\n\nShe laughed. \"Figure out a way to melt a pound of cheddar cheese on it and he'll really like it.\"\n\nNicole was cheery, which surprised me. She'd originally seemed upset about doing this, but now she was as relaxed as I'd ever seen her. I decided not to push it, regardless of the number of questions begging to be asked by me and answered by her. So we said little when she got up and we cleaned the kitchen together.\n\nBy one-thirty, there was nothing to do except wait until five when everyone showed up.\n\n\"Ideas?\" I said.\n\nShe shook her head.\n\n\"Want me to run you home? Come back and get you in a few hours?\"\n\nShe pondered this before answering. \"No sense in that. They're probably all napping in front of the television.\"\n\n\"Wine? Beer?\"\n\n\"Too early.\"\n\n\"Lunch?\"\n\n\"Too late. We'd never eat this monster meal we just prepared.\"\n\nI stood looking at her, waiting for her to offer some ideas of her own. She sipped her coffee, which was cold as ice by now, and waited me out.\n\n\"You're not helping here,\" I said.\n\nShe smiled. \"Wanna just talk?\"\n\n\"Sure. About what?\"\n\n\"Your life,\" she said over her shoulder, walking into the living room and sitting on the love seat. She curled her stocking feet up to the base of her bottom, cradling her legs in her arms.\n\nI followed, splaying out on the couch with my feet on the coffee table.\n\n\"What about my life?\" I said.\n\n\"Well,\" she started, drawing it out while she chose her words. \"I suppose I already know all the . . . the bad parts. Why don't you tell me about the good parts? The things you like to do and stuff.\"\n\n\"Fair enough,\" I said. \"So long as you tell me your favorite things, too.\"\n\n\"Deal,\" she agreed.\n\nAnd that's how it started. Two hours of talking about our favorite things. Colors? Blue for me, yellow for her. Music? We both liked classic rock and most modern rock. We agreed rap is evil, and we disagreed on classic country; she liked the female singers like Tammy Wynette and Loretta Lynn while I loved Waylon, Willie, Merle, Johnny, and--of course, seeing as Ernie was named for him--the incomparable Ernest Tubb. She loved Italian cuisine, my preference was Thai. However, we both loved sandwiches, the weirder the ingredients the better the sandwich, and all movies in all genres. Her favorite movie was \"Singin' In the Rain,\" mine was the John Wayne classic \"McClintock!\"\n\nAll told, I was amazed how many things we seemed to have in common. And there were enough dissimilarities to keep the answers real enough to be believed. Somehow, the afternoon just slipped away with the two of us talking and reminiscing about fond memories and the like.\n\nThings took a strange turn, though, when I asked her what she wanted to do with her life.\n\n\"Meaning?\" she said.\n\n\"You know,\" I explained. \"Career wise.\"\n\nShe looked troubled. \"Well, I really like what I'm doing now,\" she started. \"Particularly the cooking part of things. Can't say I'm too thrilled with waitressing, but I really like the cooking.\"\n\nShe smiled. \"It took me by surprise, to tell the truth.\"\n\n\"Don't see why. You're really good at it,\" I admitted. \"A little professional training, you could run your own place.\"\n\nShe nodded. \"That's not gonna happen, though.\"\n\n\"Why not?\"\n\nShe looked at me like I was a dumb ass, which I was. \"Tim, I've got a little boy to raise. Money's not growing on trees here, and I've got to make sure he's taken care of before I worry about everything I want to do.\"\n\nI nodded, trying to smile like I understood.\n\n\"And now,\" she continued, her voice going softer, \"it's about to get way worse.\"\n\n\"How so?\"\n\nShe looked at me, her lips tightening in thought before she spoke. \"Mom and Dad are putting the house up for sale. Downsizing once my brother's gone in June. Once they sell it, I'm gonna have to find a place of my own. That's gonna make things even tighter.\"\n\nI pondered this for a few moments. I was really giving her as many hours as I could. Sure, I could take away some hours from Uncle Jack, and he probably would be glad to be rid of some of them, but they wouldn't be enough to make up the difference.\n\n\"Your Mom and Clara still gonna do the babysitting after the house sells?\"\n\nShe nodded. \"They're staying local. Neither of them wants such a big house anymore is all. They want something that won't take so much of their time to keep up.\"\n\n\"Well,\" I said, drawing out the word while deciding whether to spill my initial reaction out loud.\n\nShe raised her eyebrows at me.\n\n\"You could move in here,\" I finally said. \"You and Alistair, that is.\"\n\nIf the last you're-a-dumb-ass look was obvious, this one was over the top. Then she laughed.\n\n\"I'm serious,\" I said. \"There's plenty of room. You've seen it all. There's two bedrooms all the way across the house from my bedroom. Full bath between them. You could live here with no problem.\"\n\n\"Oh yeah,\" she scoffed, \"and just what would I have to do in exchange for this? Huh?\"\n\nI knew what she meant, and it both bothered me and pissed me off.\n\n\"I'm not asking you to sleep with me, Nicole,\" I said. That was only partly true; I admit I was becoming intrigued by the notion of at least dating her. Still, I wouldn't ask for such a tit-for-tat, so to speak.\n\nShe seemed skeptical at my response, though.\n\nI sighed. \"Listen,\" I said. \"Do I like you? Sure. Yeah, I like you. Do I think you're pretty? No doubt. But am I telling you to move in here so I can . . . charge you. . . .\"\n\n\"Then what's in it for you?\" she said. \"Why?\"\n\n\"It won't be totally free,\" I said. \"I'll make you pay rent--probably the gas bill or electric bill, which is about three hundred a month total in the winter--and I'll want you to keep it all clean. Frankly, cleaner than I clean it. I'll do the outside stuff, lawnmowing and snow plowing and stuff, and you keep the inside clean. It's just me here, and this is a big place to take care of on my own. You'd be a real help.\"\n\nShe smiled. \"Your laundry?\"\n\nI shook my head, relaxing at her sudden change in demeanor. \"I don't want you anywhere near my dirty underwear, if you don't mind. A man's got to have his secrets.\"\n\nShe nodded. \"And how do I know you're telling the truth?\" she said. \"About the other part.\"\n\n\"You don't. Then again, you're free to leave at any time, too. And if it was because of shit like that, you'd be telling everyone and I'd lose friends, business, and your Aunt Clara. You really think I'd risk all of that?\"\n\nShe shrugged.\n\n\"Just think about it, okay?\"\n\n\"Okay,\" she said. \"But if I say yes, when would I move in?\"\n\n\"Whenever you want,\" I said.\n\nShe nodded, then looked at the clock.\n\n\"Shouldn't we be checking on something?\" she said, getting up and going toward the kitchen.\n\nWe spent the next hour making final preparations for the dinner guests. Final touches on the food, setting the table, decanting some Burgundy wine for the main course and Port for the dessert.\n\nThe cheese puffs--gougeres, if you're French and are getting pissed off that I used bacon in the Lyonnaise--were just finishing as the doorbell rang.\n\n\"What smells so good?\" Willie asked, the delight obvious in his voice.\n\n\"It's got cheese, Daddy,\" Nicole told him.\n\n\"Then you know it's gonna be good,\" he said, walking past us into the kitchen and the smell of heaven.\n\nTWENTY-THREE\n\nThe dinner was an unqualified success. Both Willie and Leon agreed that them French maybe knew a thing or two about beef stew and salads and such. Clara was amazed at how well Port went with spiced, poached pears with Roquefort. \"Never understood that whole wine and cheese thing until this,\" she'd noted, her eyes wide open at the realization.\n\nWillie, Leon, Nicole, and I were sitting around the coffee table, drinking beer, chatting, and watching college basketball from the corners of our eyes while Gertie and Clara--who insisted they had to contribute something--were putting the leftovers into tupperware containers and loading the dishwasher. When the phone rang, Clara called out that she'd get it, and I let her.\n\n\"Tim,\" she said, appearing in the living room with a frown on her face, holding the phone toward me.\n\nI gave her a look.\n\n\"Nina,\" she said.\n\nJesus Christ! I thought. A perfectly enjoyable evening shot to shit.\n\nI stood and nodded toward the bedroom. \"I'll get it in there.\"\n\nClara nodded, and I excused myself with promises to return in a minute.\n\n\"Yes, Nina,\" I said into the phone.\n\n\"Tim?\"\n\n\"Yes, Nina, it's me.\"\n\n\"Are you,\" she started, fumbling, \"do you. . . . Is this a good time?\"\n\n\"No,\" I said. \"I've got guests over.\"\n\n\"Oh.\"\n\nThen she was quiet.\n\nAfter a few moments, I lost my patience to wait her out.\n\n\"You called,\" I reminded her. \"Did you want something?\"\n\nShe took another moment before answering.\n\n\"Tim,\" she said. \"I was wondering if . . . . Can we get together and, well, maybe talk about things?\"\n\n\"Like what?\" I said. \"We're divorced. There's really not a whole lot to talk about, you know?\"\n\n\"Things have changed,\" she said. I could hear her sniffling her tears, trying to maintain her composure. \"I know now that I've made a huge mistake. I was wrong. Wrong to do that to you. Wrong to try going back to Steve.\"\n\nI waited her out, too angry to respond. Now she sees it? Seven fucking months after springing it on me and four or five months after we're divorced?\n\n\"The girls,\" she continued over my silence. \"They really want to see you, Tim. They miss you.\"\n\nI gave a derisive snort at that one. \"Yeah. Sure. They miss walking all over me and treating me like shit.\"\n\n\"It wasn't like that, Tim,\" she pleaded. \"They were just confused and hurt. By the divorce and all. And they maybe took it out on you too much. But they loved you. They still love you. And they want to see you.\"\n\n\"It's over, Nina,\" I said, trying to keep my voice low. \"You made sure of it, okay? This was your choice, and you made it.\"\n\nShe was crying now, hiccupping as she tried to speak.\n\n\"I just want to meet with you. Talk with you, Tim. Is that too much to ask? Just once? I mean, after that night . . . . I wanted to tell you I was sorry. But you didn't even come home, Tim. We've never talked about it except that night.\"\n\nI closed my eyes listening to her. She was hurting. A lot. She now saw what everyone--including Uncle Jack, who you'd think was just an insensitive, gruff old codger--saw from the day she'd left me. A part of me wanted to climb through the telephone line and hold her, hug her, and tell her everything would be all right, she'd get through it. Another part wanted to climb through the line and choke her dumb ass to death for leaving me for this dream of hers.\n\n\"I've got guests right now,\" I said.\n\n\"Please,\" she begged.\n\n\"I'll think about it,\" I said. \"That's all I'll promise, okay? I'll think about it.\"\n\nShe sniffled a few times. \"Okay, Tim.\"\n\n\"Good night, Nina.\"\n\n\"Good night, Tim,\" she said. \"Hope I didn't spoil your night.\"\n\n\"Don't worry about it,\" I said, because she had.\n\nI went back to the living room where most everyone did their best to pretend nothing had happened. Gertie was now next to Nicole on the love seat, and they were talking in low whispers. Willie and Leon were watching the basketball game drinking their beers.\n\nClara was the only one to look me in the eye when I returned.\n\n\"What did she want?\"\n\nI shook my head. \"Nothing.\"\n\n\"Tim,\" she said.\n\n\"Really, Clara, I don't want to talk about it now, okay?\"\n\n\"She wants to get back together, doesn't she?\"\n\nClara's mother hen feathers were out.\n\n\"Yeah,\" I admitted. \"She wants to meet.\"\n\nClara nodded. \"And?\"\n\n\"And what?\" I said. \"You think I'd want to go back with her?\"\n\nClara's face told me she thought this possible. \"You're just so . . . you know.\"\n\n\"Gullible?\" I offered. \"Dumber than a stump? Jesus, Clara, no way, okay?\"\n\nShe smiled. \"Okay.\"\n\nSo for the next hour, we all sat around chatting about this and that, here and there, and all sorts of stuff I don't hardly remember. All I remember is when they got up to leave.\n\nAfter everyone had said their thanks and either shook my hand or hugged me, Nicole stayed back for a moment.\n\n\"That thing we talked about earlier?\" she said, a pensive look on her face.\n\nI only nodded.\n\n\"You think maybe I could bring Alistair over sometime? To meet you? Maybe see if the two of you are comfortable around each other?\"\n\nI smiled. \"Sure. Good idea. Just let me know when, okay?\"\n\nShe hesitated for a moment.\n\n\"What?\" I said.\n\n\"Tomorrow morning maybe?\"\n\n\"Breakfast?\" I suggested.\n\n\"He likes French Toast,\" she said, the barest trace of a smile curling her lips.\n\n\"French Toast it is,\" I said. \"Be here by eight thirty.\"\n\n\"Until eight thirty then,\" she promised.\n\nTWENTY-FOUR\n\nI won't bore you with the next morning. Suffice it to say that little Alistair took a shining to both Ernie and my French Toast, and he seemed okay with me. Nicole seemed to relax about the whole thing, and she told me she'd like to bring him by a few more times to make sure everything was good with Alistair.\n\n\"I can't run the risk of putting him into a situation like the last one,\" she explained before leaving. Given that the last prick had beaten her--the last time in front of Alistair--I didn't blame her one bit.\n\nIn the twelve days leading up to Christmas, Nicole and Alistair dropped by and started spending more time around the house, the time spent there increasing with each trip. Alistair got used to Ernie, Ernie got used to Alistair, and Nicole seemed to be getting comfortable with the whole idea of moving in.\n\nIt was interesting watching Nicole with Alistair, too. She was far different with her child than Nina had been with the girls. For example, the very first morning, she corrected Alistair several times on how to hold his fork and to chew with his mouth shut while eating his breakfast.\n\n\"You don't think he's a bit young for that?\" I asked.\n\n\"You're never too young to learn manners,\" was her simple response. \"Even if he can't really do it now, it's important that he learn what to be shooting for, dontcha think?\"\n\nWhen Alistair ignored my questions or Nicole's comments, she took his chin in hand, stared at him, and repeated herself or what I had said until he answered.\n\nFinally, when she caught me talking down to him--not quite baby talk, but close--she corrected me.\n\n\"Please don't do that,\" she said, almost embarrassed, but firm nonetheless.\n\n\"Do what?\"\n\n\"Talk to him like an adult,\" she instructed. \"Like you'd talk to me. The best way for him to learn to speak properly and act properly is to be spoken to and treated properly. He'll imitate your speech to him and keep talking like that far longer than he should.\"\n\nI only nodded.\n\nJesus, a mother who didn't baby her child, who actually demanded he behave and made no excuses. Granted, she wasn't beating him or overtly punishing him. Still, he was still not yet three years old. All told, a dramatic change from Nina's spoiling of Emily and Nadine.\n\nSeeing Nicole and Alistair a few weeknights here and there made those two weeks fly by. Before I knew it, Christmas was upon us. \n\nThe Bar and Grill, along with every other restaurant and tavern in Grant City, closes at five on Christmas Eve. As a result, the afternoon was packed with factory workers and everyone else off for a few days eager to cram in some drinking before spending the holiday with family. Nicole and I had been run ragged in the kitchen, and once the doors closed we sat at the bar with a drink before tackling the cleaning.\n\n\"What're you doing tomorrow?\" she asked.\n\n\"Relaxing.\"\n\n\"You're not going anywhere? Having anyone over?\"\n\nI shook my head, then took a sip of my beer. \"Orphan.\"\n\n\"Well,\" she started, but I interrupted before she could continue.\n\n\"No, Nicole. Christmas is for family, not interlopers.\"\n\n\"You're not an interloper,\" she said, her voice soft. I started to say something, but she continued. \"We got you a present. Me and Alistair. Not much, but I'd like to give it to you.\"\n\nShe turned and looked at me, holding me with her gaze. \"You've been real good to us. All of us. I don't like the thought of you at home--alone--on Christmas.\"\n\nGreat. I'd gotten nothing for them. Way to make me feel like an asshole. She seemed to read this on my face.\n\n\"You've already done enough for us, Tim. Really. And probably a lot more, too.\"\n\nThat really didn't make me feel a whole lot better.\n\n\"Dinner?\" she pressed. \"One?\"\n\nI held her eyes and saw she wasn't going to leave it alone.\n\nI nodded. \"One it is. I'll bring something.\"\n\n\"Appetizer,\" she said. \"Something good.\"\n\nI chuckled. \"I'll try.\"\n\nEnding it there, we went back to get the cleaning done so we could get out of there, her back to her family and me to whatever store was open so I could get some gifts.\n\nTWENTY-FIVE\n\nAt ten the next morning, I was home wrapping the gifts I'd purchased at the last minute when my doorbell rang.\n\nI looked over my shoulder and saw Nina huddled there, shivering in the cold on my front porch.",
        "Visibly pissed, I went and opened the door.\n\n\"Merry Christmas,\" she said, trying to smile. She leaned up to kiss me, but I dodged her efforts.\n\n\"Sorry,\" she said. \"It's just that, being Christmas and all-- \"\n\n\"Merry Christmas,\" I said. \"What do you want?\"\n\nShe looked around the house. Ernie was on the sofa, his eyes on her but otherwise ignoring her. My pathetic Charley Brown Christmas tree was glowing in the corner, and Christmas music was playing on the stereo. Johnny Mathis singing \"O Holy Night.\"\n\nShe looked at me, starting to unzip her jacket. She looked a combination of sad and uncomfortable.\n\n\"You didn't call me back,\" she said.\n\n\"No,\" I said, enjoying her discomfort and making no move to take her jacket. \"I didn't.\"\n\n\"I was hoping that-- \"\n\n\"Where are the girls?\" I interrupted.\n\n\"With Steve. I had them last night and this morning. Dropped them off with him for the rest of the day.\"\n\nHer eyes were pleading with me to make this a bit easier. Call me what you will, pussy whipped loser or the Spirit of Christmas Present, but the eyes got to me. I took her coat, threw it over the back of the love seat, and waved her into the living room.\n\nSeated back on the couch, I resumed wrapping presents when she spoke.\n\n\"It didn't work, you know,\" she said. \"Me and Steve.\"\n\nI was tying a ribbon around a stack of Disney DVDs for Alistair, not really in the mood to say anything in response. She needed to get something off her chest, let her do the talking.\n\nSee? I didn't go totally soft here.\n\n\"Aren't you going to say anything?\" she said. She was sniffling, the sign that tears weren't far away.\n\nI slid Alistair's presents to the side and looked up at her.\n\n\"What do you want me to say?\" I said. \"I'm sorry for you? You and the girls? I am, okay? I'm sorry your marriage with Steve failed. Again.\"\n\n\"I want you to say you'll give us another chance,\" she said, the tears now welling up in her eyes.\n\n\"I was more than willing to give us a chance,\" I said. \"It was you who never gave us a chance. Instead, you decided to give your ex-husband another chance without really giving us--giving me--a chance. Instead of making yourself happy with me, you decided to toss me away and give him the chance.\"\n\n\"It wasn't like that,\" she pleaded, the tears now spilling over and streaming down her face.\n\nEmotions swept through me. I really didn't need this on Christmas morning, and it pissed me off that she'd shown up unannounced on this of all mornings to force the issue. On the other hand, I felt for her. She'd made a mash of things, and now she was paying the piper. Most of all, though, I just felt plain tired. I'd been beating myself up for months over the divorce, over her leaving me to go back with Steve and re-make her family.\n\n\"Let's be honest here,\" I said, my frustration coming through. \"What we had really wasn't that good. Why the hell would you want to come back to it?\"\n\nShe looked like I'd slapped her. \"What do you mean?\" she protested. \"We were happy. Everything was great.\"\n\n\"Yeah. Great. So long as I put up with your shit and with the girls' shit. So long as I was always there to give you everything you wanted and needed and stayed out of the picture when you were busy pining for your lost love.\"\n\n\"It wasn't like that,\" she said, anger flashing in her eyes. \"I loved you. I still love you. And-- \"\n\n\"But not enough to give us a real chance,\" I argued. \"Not enough to put aside your first husband and concentrate on me. Not enough to make your girls actually treat me with a little bit of respect in my own fucking home.\"\n\n\"I told you: They're angry and confused.\"\n\n\"And what did you ever do to help them not be angry and confused? They got to sit here and see you constantly feeling guilty about Steve, constantly apologizing to them for me actually trying to make them listen and behave and do their homework and shit.\"\n\n\"It's not that simple.\"\n\n\"Bullshit,\" I yelled.\n\nNina jumped in surprise and a touch of fear. In all our years together, I could count on one hand the times I'd raised my voice. Now, though, my fatigue at her denials was turning to anger.\n\n\"Will you listen to yourself?\" I pressed. \"Your whole goddamned notion of how good we were rests on how good it was around here for you and the girls. Fuck me. You could care less how it was for me.\"\n\n\"That's not true,\" she said.\n\n\"The hell it's not. Tell me one thing about how it was good for me.\"\n\nMy eyes flashed, daring her to come up with something. When she said nothing, I continued.\n\n\"You thought so fucking little of me that you decided to move out and back with Steve without giving me the courtesy of even telling me. And now that your little dream turned into a nightmare, now that it didn't come true, you want to come back here and just move back in and act as if nothing's happened. Like I should just suck it up and go back to kissing your ass.\"\n\n\"You didn't even fight me on it,\" she said, half anger and half sorrow. \"Maybe if you'd tried.\"\n\n\"Then nothing would have changed. You'd have still moved back and I'd have felt even shittier about it. No thanks.\"\n\n\"So I wasn't worth fighting over?\"\n\n\"Not after you went on dates with him while I was babysitting for you. Not then you weren't.\"\n\nShe said nothing, and I let my anger cool as I reached over and slid the jewelry box in front of me.\n\n\"Who's that for?\" she said, seeing the stamp of Lorenz Jewelers on the box.\n\nI looked at her, then back to the box in front of me. My answer was automatic, and even surprised me a little.\n\n\"Someone special,\" I said.\n\n\"Do you love her?\"\n\nI picked up the box and flipped it open, looking at the small gold bracelet within.\n\n\"Don't really know her yet.\"\n\n\"Do I know her?\"\n\nI shook my head.\n\n\"So maybe we've still got a chance?\"\n\nI shot a look at Nina in response to this.\n\n\"I'm just saying,\" she said. \"You maybe haven't found anyone yet. Maybe you'll just, I don't know, consider dating for awhile? Give us a chance at having a real relationship.\"\n\nI flipped the box shut with a clap and reached for the wrapping paper.\n\n\"Please?\" Nina whispered.\n\n\"No,\" I said, cutting off a strip of paper big enough to wrap the bracelet in. \"There's no chance.\"\n\n\"Can you tell me why?\"\n\nI didn't look at her, concentrating on the wrapping.\n\n\"Please tell me?\"\n\n\"You remarried him,\" I said, trimming the paper and taping it before reaching for the ribbon. \"We weren't divorced three weeks and you were remarried. Like you couldn't wait to replace me. Here I am, my whole life falling apart with no one, and there you are. Remarried before the ink dried on the divorce decree.\"\n\n\"But I . . . . We were . . . . You knew what was going on.\"\n\n\"What happened?\" I asked. \"Why did it fall apart this time? You start cheating again?\"\n\nOkay, that was unnecessarily mean. The shock on her face told me she thought so, too. I was tiring of this, though, and wanted to make my feelings plain. In short, maybe if I'm a big enough asshole she'll leave me alone.\n\nNina settled down, though, knowing she couldn't get through to me if she got pissed or stormed off.\n\n\"Well?\" I pressed.\n\n\"It was real good at first,\" she said. \"The girls were happy. Happier than they'd been in ages. And Steve and I were getting along real well. Not as happy as we were--you and I--but getting back into the groove of things. But as the day of the divorce neared, he started getting angry. He'd snap at little things, be angry for no real reason. Mostly at me, at first, but then at be and the girls.\"\n\nShe stood and walked to the window, looking at the snow blanketing the back yard as she continued. I put the present aside and watched her as she continued.\n\n\"I just thought it was nerves at first. You know, like he couldn't wait for the divorce to be over so I'd officially be his again.\"\n\nShe turned and looked at me. \"And sure enough, he settled down once the divorce was granted. I was pretty relieved, like maybe everything was behind us and we could get on with our lives.\"\n\nShe looked back out the window now, avoiding my gaze.\n\n\"Then he came home about a week later and said we needed to get married. If we were going to really give it a shot again, we needed to be married. He wasn't going to just have me running off like Brenda did. He wanted us officially together. I tried to tell him no, it was too soon, but he insisted. And he told the girls. They were all excited, and so was he. Like they were making the plans without me. So I went along with it. 'What the hell,' I thought. It was, after all, why I'd left you. So I could get married again to Steve.\"\n\n\"So it was his idea that you get remarried so soon?\" I said.\n\nShe nodded. \"And we did. And then it started again, only different this time. It started with our . . . well, in the bedroom. Steve's not like you. You're all wild and excited and rambunctious, like a kid in a candy story every time. Steve's different. Sometimes he's slow and methodical, patient, tender. Other times, he's aggressive and in control.\"\n\nShe looked at me and caught the look on my face.\n\n\"Kid in a candy store?\" I said.\n\nShe smiled. \"Trust me,\" she replied. \"That's a compliment. The way you are, I always knew I turned you on. It made me feel pretty and sexy and loved.\"\n\n\"But he's tender and romantic?\"\n\n\"You're both romantic,\" she flustered. \"Just in different ways. Your's was a mix. There was always tender, but it was mixed in with everything else, you know?\"\n\nI didn't, but I didn't really want to hear about it any more, either.\n\n\"So anyway,\" she continued, looking back out the window, \"the tender and romantic disappeared altogether. Every time we . . . . He was aggressive. Every time. Quick, to the point. It was angry. When you've been with someone long enough, enough times, you know. And he was angry, using our bedroom to take out that anger on me.\"\n\nShe turned to look at me, then walked back to the couch. She was reliving the re-collapse of her remarriage, and it was visibly taking its toll.\n\n\"Then the anger started again, at both me and the girls. When I tried to talk to him about it, he told me to get over it. He wouldn't talk. When he would talk, he'd say things like, 'What's wrong? Leaving me again?' Stuff like that.\"\n\nNina brushed some tears from her face.\n\n\"Then, about a month ago, while the girls were with my folks, we had it out. And he told me I was a useless cunt. I'd cheated on him and destroyed our marriage. When I told him I was sorry, that we were together again now and I wouldn't do it again, he called me a fucking liar. Said I'd done the same thing to you I'd done to him, so how could he trust me. He'd trusted me once and I'd ruined it. You'd trusted me once and I'd shit all over you. Now I expected him to trust me again, but I hadn't really changed.\"\n\nShe fixed me with her eyes, her face earnest. \"That's when I knew I'd been a fool. That's when I really saw how bad I'd treated you and given up my best shot--and the girls' best shot--at a really happy, loving family. Steve and I, we'd never be a loving family again. You, though, you were the one who gave me happiness.\"\n\n\"Bingo, Nina,\" I snapped. \"I gave you happiness. I gave the girls happiness. You could give a shit whether any of you actually gave me any happiness.\"\n\n\"But Tim,\" she pleaded, \"we were so good together. Even you have to admit it.\"\n\n\"Were, Nina,\" I said. \"Past tense. That's over now. Water under the bridge. Don't you see that?\"\n\nShe shook her head. \"No, Tim, not past tense. We can be happy again. All of us. Don't you see? You're not Steve. You can forgive. I've seen it in you. You're patient and caring and loving. You know why I did this, and it wasn't to hurt you. You know that.\"\n\n\"But it did hurt me,\" I said. \"Intentions don't count. Actions count. And you ripped my heart out without a thought.\"\n\n\"But I did think about you. I did hurt. You think I wanted to hurt you?\"\n\nI shook my head. \"No, you didn't want to hurt me. That wasn't your goal. But you damned well knew when you went back to him that it would hurt me, and it didn't stop you. Hell, if you shoot a machine gun off in a crowd, you may not intend to hit anyone, but you should damned well know that you will, right?\"\n\nJust then the buzzer went off on the stove, telling me my sweet peppers were done.\n\nI stood, looking down at her. \"Sorry, Nina. You just can't take some things back. Sometimes when you break something, it just stays broken.\"\n\nI went into the kitchen and took the peppers from the oven. I heard Nina's footsteps following me.\n\n\"But you won't even try, Tim? You won't even try to fix it?\"\n\nI busied myself pulling antipasto ingredients from the refrigerator and arranging them all on a platter. Prosciuto, capicolla, shavings of Parmigiano Reggiano and Pecorino Romano, marinated olives and mushrooms, meatballs, and sweet peppers. I spoke as I worked.\n\n\"Didn't you learn your lesson yet, Nina? You and Steve got divorced and you married me. Then you left me and married Steve. That didn't work out because too much had happened. And now you're looking to come back and remarry me? After all that's now happened in the last six, seven months?\"\n\nI looked at her as I placed the finished platter on the counter in front of me.\n\n\"That's one merry-go-round I'm not interested in getting back on again, okay?\" I said.\n\nHer lips quivered as she held back her tears.\n\n\"Please?\"\n\nI shook my head.\n\n\"Sorry, but I'm not the same Tim you left seven months ago. I'm the new Tim. The Tim that wants someone who puts Tim toward the front of their list.\"\n\nI got out the huge, fancy ice cream maker to start freezing the pumpkin pie ice cream. (Quick aside, but you really need to close your eyes and just savor the thought of a spicy pumpkin ice cream with chunks of gingersnap crusts. Sounds really, really good, doesn't it? Trust me, it is.)\n\n\"I've changed, Nina,\" I continued as she started crying. \"I forgave you a lot while we were married. I was content then with being second fiddle. But I'm not content now. I'm not someone's second fiddle. Not to their children and definitely not to their dreams. Don't get me wrong. I expect the children to come first, but not to the degree they did when we were together. Not to the point where my needs and feelings--my self-respect, for Chrissake--are totally ignored.\"\n\nI poured the chilled pumpkin custard ice cream base into the machine and flipped it on to churn. That done, I walked back to the living room, standing there as Nina followed me in looking all hang dog.\n\n\"I'm sorry,\" I continued. \"I really would like to have given you a better Christmas present here. But you're asking for one present I'm not giving you again.\"\n\nShe nodded through her tears.\n\n\"I'm sorry, too,\" Nina said. \"I just wish you'd give me another chance. At least think about it.\"\n\n\"Wishing won't make it so,\" I said.\n\nNina bundled back up in her jacket and scarf. She looked tiny and fragile, her eyes red with crying and her lips trembling as she tried to hold her emotions in check.\n\nI wanted to take her into my arms. Swear to God, I forgot everything I'd said over the past half hour and just wanted to comfort her and tell her it would be all right.\n\nShe placed her hand on the door knob, then turned to me one last time with hope in her face. I felt the pull, felt my body wanting to go to her, but I remained frozen in place.\n\n\"Merry Christmas,\" she said, and was gone.\n\nTWENTY-SIX\n\nNicole and Alistair moved in on New Year's Day. It was the easiest day to get her cousins to help with the heavy lifting, and it gave us some time to get her stuff set up before going back to full-time busy the next day.\n\nShortly after moving in, Nicole and I discussed some changes to the scheduling to make everything easier for everyone. First, while she waitressed two nights a week--she was back to just Tuesdays and Fridays and alternating Saturday nights, cooking the rest of the weekdays--I agreed to pick Alistair up at her mom's house and take care of him until she got home at nine thirty or so. This saved having him staying so late with Gertie and Willie, and it was easier to get him to sleep at an earlier time. Selfishly, as well, I missed having something to do on those nights, and little Alistair was a welcome bundle of energy to feed and take care of and read to. Downside? I got pretty tired of Disney cartoons. I mean really, how many times can someone watch \"Aladdin?\"\n\nWith Nicole and Alistair in the house, I also took to cooking at home again and eating more regularly. Nicole was upset at first because she wanted to pay at least her and Alistair's share of the groceries, but that was impractical. I just took things home from the restaurant to cook and wrote it off as a business expense. (Please don't tell the IRS!) And with the exception of milk, which I rarely drank and Nicole usually bought anyway, Alistair didn't eat enough to really make a difference in costs.\n\nSo there we were, like a family in some respects but more like roommates living our own separate lives. On the nights and weekends we were all home together, we all did our own things. I usually watched the same boring shit on television or old movies on DVD while Nicole read to Alistair and, after he was put to bed, stayed in her own room reading.\n\nGradually, though, things started to change. I'm not really sure when, but it was early March when things got strange.\n\n\"Nic?\" I said one Saturday after coming in from snow blowing a late snowfall from the driveway.\n\n\"Yeah?\" she said, barely looking up from the book in her hand. Neither Alistair nor Ernie were there; they were down for their nap together. Ernie hardly slept with me anymore, preferring to snuggle into little Alistair.\n\n\"Who's that car outside all the time?\"\n\nShe froze.\n\n\"There's been a car around here a lot lately,\" I said. \"A black Toyota.\"\n\nShe put the book down and got a really scared look.\n\n\"How long's this been happening?\"\n\nI thought it over. \"Three, maybe four times a week for the past month or so.\"\n\nShe didn't say anything, but her jaw was grinding.\n\n\"Something wrong? Someone you know?\"\n\n\"I think it's Randy.\"\n\n\"Who's Randy?\"\n\nShe turned away before answering. \"My ex. The one who used to . . . . I should have told you.\"\n\nI sat on the sofa next to her. \"Might as well tell me now, huh?\"\n\nI wasn't angry, but this didn't sound so good. The look on her face when she looked at me was a mixture of fear, embarrassment, and nervous energy.\n\n\"I met Randy just before Alistair--my husband Alistair--was murdered. Maybe three months before. I worked with him in the office at TelCof. He's maybe four, five years older. He was always coming on to me, but in a kind of innocent way. Nothing ridiculous, and I always blew it off. I was married, y'know?\"\n\nI nodded. Standard workplace games that don't really mean shit unless someone acts on them.\n\n\"He always said he'd make me his forever,\" she continued. \"I thought he was joking. The way he said it then, it seemed like a joke. But it wasn't.\"\n\nShe took a deep breath.\n\n\"Anyway, then Alistair was . . . he died. And I was really frantic, y'know? Here I was, twenty-two, little baby boy less than six months old, my husband of a few years is found . . . found dead in an alley behind his factory. He was working third shift then. Someone stabbed him, just left him there. They found him a few hours later.\"\n\nHer face was the emotionless mask I'd seen so many times before, her voice low and steady, like she'd told this story so many times she had it memorized and could get through it without breaking up.\n\nI put my hand on her forearm and gave her a reassuring squeeze. She tensed, her eyes flashed at me, then she bit her lower lip, relaxed, and went back to her tale.\n\n\"So at first, Randy was just there. Consoling. Always dropping by my desk to make sure I was doing okay. Then he started dropping by my apartment. I was alone. In Frontier City. Mom and Dad got over a lot, but they couldn't come over all the time. And when they weren't there, he started turning up. He was real good with Alistair. Patient, playing with him. Even changed his diapers a few times.\"",
        "She looked at me and smiled. \"How's that going, by the way? When you babysit?\"\n\n\"He's almost potty trained,\" I said. \"Thanks be to Jesus.\"\n\nThe smile got a little brighter, then slowly faded.\n\n\"So maybe seven or eight months after Alistair died, he starts taking me out for a drink or two. Then it's dinner here and there. Pretty soon, he kisses me. And I kiss back. Then . . . you know . . . .\"\n\n\"I know,\" I said. \"You can skip this part.\"\n\n\"So we moved in together, and that's when it started. Real slow at first, but then the comments started. 'You were sure giving ole Johnny the eye at work today,' or, 'So, you gonna try fuckin' your way to the top the way you're hanging all over Stafford?' and stuff like that. Joking at first, kind of, but getting nastier and a lot more frequent as time went on.\"\n\nHer eyes started welling up with tears, and she brushed them away with her hand. \"Then he hit me. Hard. A backhand across the face. We'd been out, and he'd been drinking. He said I was a slut who was chasing after every guy there. I wasn't, but he wouldn't listen. He just got madder and madder and then, out of the blue, he knocks me across the room. Then he's over there, over me, and his face is a mask of hatred. But then, it must've been the look on my face or something, but then he just gets a look of horror, too. What he'd just done. And he's crying and begging me to forgive him and everything.\"\n\nHer eyes turned to the television screen.\n\n\"I should've left the bastard then,\" Nicole said. \"Right after that first time. But I didn't. I believed him, that he was sorry and it wouldn't happen again. And for a month or so, it didn't. But then it did. It did happen again. When I told him I was going to leave, he told me he wouldn't let me. He'd find me and he'd kill me. Or he'd take Alistair and I'd never see him again.\"\n\nShe turned and faced me. \"After that, he knew he'd won and the slaps and punches and kicks were a lot more regular. Coffee not ready when he got up? Punch Nicole in the stomach. Smile at any man, no matter why or even if I'm just laughing at a joke? Take a belt to the slut Nicole and teach her a lesson. And on and on.\"\n\n\"Why didn't you tell someone?\" I asked.\n\n\"Who?\" she said. \"My parents? What're they gonna do? Tim, you don't know what it's like. What it's like to be all alone with your baby, then you aren't anymore. And when you move in, and everything's going good for awhile and then it's not, it's like you almost just accept it. I mean, I just leave, where the hell was I gonna go? And then, to make it worse, I saw his face. He meant it. I didn't really care what he did to me, but he threatened to take my baby. And he was serious.\"\n\n\"So what happened?\" I asked.\n\n\"The last time he went overboard,\" she said. \"I don't even remember what set him off. Just a bad day at work or whatever. And he really went after me, put me in the hospital. And Alistair was there. He'd always done it when Alistair was with my folks or babysitters or at least asleep in the other room. But this time, he was there. And that's when I knew I couldn't take this anymore. That sooner or later, whether I stayed or not, he was going to do something to Alistair. So I pressed charges.\"\n\n\"What happened?\"\n\n\"He was thrown in jail. His lawyer got him a real good plea bargain, but he still had to do some time. Six months. And I was given an Order of Protection. He's not allowed to come near me or call me or anything for two years.\"\n\n\"That's still in place, right?\"\n\nShe nodded. \"Another thirteen, fourteen months or so.\"\n\n\"And the black Toyota?\"\n\n\"Yeah,\" she said. \"That's what he drove.\"\n\nI nodded.\n\n\"I'm sorry,\" she said. \"I should've told you this before we moved in. I just didn't really think . . . I didn't . . . I thought he'd stay away.\"\n\nI shrugged. \"Don't worry,\" I said. \"I'll take care of it.\"\n\n\"How?\"\n\n\"I just will,\" I assured her. \"You don't worry about it, okay?\"\n\nSo the next day I called Jammer. And he called somebody--a pal in the State's Attorney's office--and he called somebody with the coppers, and they started staking out my place when they had the time.\n\nEvery time I saw the black Toyota, I took down the license number, date, time, and where it was and called the cop's name I'd been given. The cop told me to keep doing that so they could show a pattern, and he'd drive over and nonchalantly drive past the house. That usually led to the Toyota--and boyfriend-of-the-year--taking off.\n\nBut Nicole was a lot nicer and more open from then on, too. It was like a weight was being lifted now that someone was doing something about Randy.\n\nSoon, our evenings were spent chatting about our days or movies or books or how soon until Alistair would be out of diapers for good.\n\nWe became less like roommates and more like a family.\n\nWithout the sex, of course.\n\nThen again, Uncle Jack always said that getting married wasn't exactly the perfect cure for a nonexistent sex life.\n\nAnd with the exception of three exciting weekends with Jenny months before, my sex life was nonexistent.\n\nTWENTY-SEVEN\n\nI was just getting ready to leave the Bar and Grill on a Friday evening three weeks after the black Toyota conversation when I heard arguing at the bar.\n\nI made my way through the dining room, where every head was turned to the bar, and saw Nicole trying to break free of a guy about my size and age.\n\n\"I said we need to talk, Nicole,\" he was hissing as she tried to free her arms from his grip. A few of the regulars--big, middle aged factory workers with beer bellies and massive forearms--were hovering nearby, making sure things didn't get out of hand and ready for direction from Moe or me.\n\n\"We got a problem here?\" I said as I approached.\n\n\"Not your business,\" he said, not bothering to turn my way.\n\n\"'Fraid it is my business,\" I said, \"since it's my bar you're making a scene in it, mister.\"\n\nHe held the struggling Nicole tightly, but his face turned to me and sneered.\n\n\"This your shithole?\" he said.\n\n\"You Randy?\" I said.\n\nHe was surprised for a brief second, then he smiled. \"So you know. You know this ain't none of your business.\"\n\n\"But it is my business,\" I said. \"First, because she works for me. Second, because she's a friend of mine. And third, because you're doing this in my place. Any of those three things say I can pretty much deal with this however I want to.\"\n\n\"Yeah?\" he said. \"And what the fuck're you gonna do about it?\"\n\nI turned to Moe and said, \"Call the cops. Tell them there's a guy here, driving a black Toyota, license one jay three two two, and he's violating an order of protection, trespassing, and committing . . . Jammer?\" I said to my buddy in the corner.\n\n\"That would be battery and unlawful restraint, Tim.\"\n\n\"What he said,\" I said to Moe, who was already dialing before I'd finished speaking.\n\nShooting a look at my bartender calling the cops, Randy let go of Nicole and turned to me.\n\n\"You shouldn't be gettin' in the middle of this,\" he said, turning his shoulder back in preparation for a punch.\n\nBefore I could react, Lonnie Mackie, Bill Shelton, and another big guy they'd been bringing in with them lately had Randy held tightly.\n\n\"I think we need to go outside and wait for the police,\" Lonnie rumbled into Randy's ear. \"Don't you?\"\n\nHe tried to twist away, but they held on tight and dragged him through the door and to the parking lot.\n\n\"You okay?\" I said, turning to Nicole.\n\nShe wasn't. She was shaking like a leaf, her face a mask of terror.\n\n\"C'mon, babe,\" Jammer said, placing his hand on her elbow and guiding her toward the kitchen, \"let's get you something to drink and settle you down.\"\n\nHe looked at me and jerked his head to the parking lot, then guided her toward the kitchen. I saw Clara unfreeze in the dining room and start telling everyone the excitement was over, and most of the heads turned back to their meals and their dinner companions.\n\nI went outside to wait with douchebag, Lonnie, Bill, and the other Samaritan.\n\n\"You kick me one more time you little fuck,\" I heard Lonnie say from fifteen feet away, \"and I swear to God I'm gonna knock your fucking teeth down your scraggly ass little throat.\"\n\nThat didn't seem to stop Randy from fighting against his temporary jailers, though the sight of me did.\n\n\"So you're the one she's fucking now,\" he said.\n\n\"Who the fuck you think you are coming to my restaurant and pulling this shit?\" I said.\n\n\"You're gonna regret this,\" he said. His face looked crazy. Hatred, anger, fear, laughter, it was all there at once. \"I'm gonna get you fuckers.\"\n\nThe big guy I didn't know hit him in the guts, hard, and poor Randy looked ready to puke.\n\n\"You ain't gonna do shit, dickhead,\" he said. \"We ain't little girls like she was. You wanna pick on someone, you pick on men. Not women and babies and old ladies and small puppies, you pathetic little fuck. Y'hear me?\"\n\n\"Fuck you,\" he said, spit flying from his mouth.\n\nA cop car pulled in and Sgt. Moss stepped out.\n\n\"Evening, Tim,\" he said. \"Lonnie, Bill, Ted.\"\n\nWe all nodded in response.\n\n\"This him?\" Moss said.\n\n\"They hit me,\" Randy shouted. \"Right in the stomach. Probably got a bruise.\"\n\n\"Shut up,\" he said, then turned to me.\n\n\"What happened, Tim.\"\n\n\"You know Nicole, right? The one that's been working here for awhile?\"\n\nHe nodded. \"Clara's niece. Sure, I know her.\"\n\n\"She has an Order of Protection against this asshole. Still active. And he came here tonight and grabbed her and wouldn't let her go. When I told him to stop and leave, he wouldn't do it.\"\n\n\"That where these fellas come in?\"\n\n\"Yeah,\" I said. \"He was taking a swing at me. They restrained him and brought him out here.\"\n\n\"We just stopped him from hitting Tim,\" the guy named Ted said, \"and from getting away before you got here.\"\n\n\"This all true?\" Moss said to Randy.\n\n\"I'm not saying nothing,\" he spat at Moss. \"I get a lawyer. And I'm not saying nothing without his say so.\"\n\nMoss nodded, then turned back to me. \"The girl inside?\"\n\nI nodded.\n\n\"Why don't you go see if she's got a copy of that Order on her.\"\n\nI did, and she did. A minute later, Moss was reading the Order.\n\n\"You just fucking stupid or what, son?\" he said to Randy. \"Seems pretty clear to me you're supposed to stay away from her, right?\"\n\nRandy just glared at him in response.\n\n\"Okay,\" Moss said, pulling his handcuffs out and walking around Randy to cuff him, \"here's how this is gonna work. I'm gonna arrest you and charge you with violating this OP and battery and unlawful restraint and trespassing and anything else I can think up between now and the time I get all of this paperwork drawn up. You're gonna wait in the jail while I get this. But this is Friday night, so we probably won't have anyone free to get you down to the county jail in time for Saturday morning arraignment. Matter of fact, I can promise you we won't get you there on time, got it?\"\n\n\"I wanna press charges,\" Randy shouted. \"These fuckers punched me and hit me. I want them arrested.\"\n\n\"Shut the fuck up,\" Moss said, his voice bored. \"Anyway, because we can't get you there on time for arraignment tomorrow morning, that means you're gonna be sitting in jail until Monday morning until your bail is set. So you're gonna spend the weekend in jail. Got it?\"\n\n\"You can't do that,\" Randy protested, the weekend in bars now looming big.\n\n\"Watch me,\" Moss said, taking Randy by the arms and getting him in the back of the squad car.\n\n\"Thanks, fellas,\" he said. \"Have the girl come down after work to swear out the complaint.\"\n\n\"Does she have to?\" I said, not sure Nicole was up to it.\n\n\"I didn't see it, so someone who saw it all will have to do it,\" he explained.\n\n\"I saw it all, Mike,\" I said.\n\n\"So did we,\" the three big guys chimed in.\n\n\"Can any of us sign the complaint?\"\n\nHe shrugged. \"So long as you saw it all, sure. Don't make no difference. She'll probably have to testify, though. Sooner or later.\"\n\n\"Call me at home,\" I said. \"I'll swing in and sign whatever you want.\"\n\n\"Okay,\" he said. \"I'm working a double, so morning's good for me. About eight.\"\n\nI nodded.\n\nBack in the bar, I caught Moe's eye and pointed to Lonnie, Bill, and Ted.\n\n\"Free drinks all night,\" I said. \"And a gift certificate so they can take their families out to dinner. Whatever they want to eat.\"\n\n\"Sure thing,\" Moe said.\n\nI looked at Ted and remembered the punch he'd given Randy. It was a good punch.\n\n\"Get Ted two of them gift certificates, okay?\"\n\nTed got a great big, ear-to-ear grin. He knew what it was for. So did Lonnie and Bill, but that didn't stop Lonnie from complaining.\n\n\"Jesus, Tim, I'll go punch the little prick right now, in front of Moss and the rest of the coppers, if it'll get me another gift certificate.\"\n\nI laughed, then shook their hands while patting their backs and thanking them for covering my ass.\n\nWhat I said somewhere toward the beginning of this tale about good friends in a small town? This is what I meant.\n\nNone of them went to school with me, were related to me, or had ever been to my house for dinner.\n\nI'd only learned Ted's name after he helped me.\n\nSure we have our shitheads in small towns.\n\nBut we also have people who cover your back when the shit hits the fan.\n\nIf you got that kind of crowd in the big city, then maybe you're as lucky as we are here in Grant City."
    ],
    "authorname": "Rehnquist",
    "tags": [
        "divorce",
        "ex-wife",
        "no sex"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-bar-and-grill-pt-03"
}