{
    "title": "M Club Ch. 06",
    "pages": [
        "The first rule of M Club is: You don't talk about M Club. The second rule of M Club is: You don't talk about M Club. Third rule of M Club: No touching anyone but yourself. Fourth rule: No recording devices. Fifth rule: No clothing below the waist. Sixth rule: If this is your first time at M Club, you must masturbate. \n\n* * *\n\nLisa sat in her 7th hour Calculus class and couldn't help but look outside and sigh. The sky was slate gray and a steady rain pattered against the windows, just as it had most of the day. The M Club's planned meeting in their secret park location for this afternoon was clearly shot. What she couldn't say for certain, though, was whether she was more disappointed or relieved.\n\nTwice now, she'd gotten naked and masturbated along with her best friend Denby and Den's boyfriend Sean. The second time, Sean's friend Andy had also joined them. In each case, she'd been fine with performing for them, showing off that secret side of herself. Sean was a sweet, smart guy -- the sort she could see herself dating one day. Andy was more of a jock goofball, but still nice in his own way, and it was with him that her conflict arose.\n\nLisa hadn't dated much through high school and never had a steady boyfriend. She didn't see it as a problem and it had never been a priority to her. Yeah, she liked boys, fantasized about them (sometimes very explicitly), and harbored no doubts as to her sexuality, but it usually came down to maturity. High school boys, by and large, rubbed her the wrong way, and she wasn't attracted to older men. She assumed that eventually she would find that guy who was both mature and compatible in age, most likely in college. If Denby hadn't hooked up with Sean, he very well could have been that one exception at Highland High.\n\nWhen Denby started dating Sean, she'd hinted around that they could hook Lisa up with Andy. Again, Lisa appreciated the offer, but had rebuffed the attempts. There was nothing wrong with Andy aside from the maturity, and that was difficult to put into any concrete terms Denby would understand. Now that he was part of their club, though, and the barriers of nudity and sexuality had been breached, she got the sense that all the others were expecting her to finally relent and start dating him. Denby had openly brought it up Monday night after the last club \"meeting,\" and Lisa had deflected with a non-committal \"maybe.\" Andy had even floated a polite, inquiring text -- the first time he'd directly contacted her. She had politely left him hanging, unsure whether to accept his advances or decline and risk the associated fallout in the club. Maybe it would be fine, maybe it would make a mess of things.\n\nThe one thing she was certain of was that she didn't want to mess up the M Club. For such a small thing, it had opened her world in ways she hadn't expected. Sex, or at least their sexuality, was no longer some abstract concept that would maybe be broached far in the future. There was an openness and purity to their group's actions, like they'd stumbled upon a secret truth that sex and the human body was okay and not some secret to be locked behind closed doors. She loved that feeling, the exhilaration in being able to completely be herself and share with good friends.\n\nDid she have to date Andy to keep the club going for these last couple months before school was done and they went their own ways in college? Was she pre-judging him too harshly? He was nice and fun. Maybe she should just give it a chance, maybe have a little fun and gain some experience before college?\n\nWhy couldn't he be just a bit more like Sean, though? Someone who she was drawn to instinctively?\n\nHer teacher began to discuss the things tomorrow's quiz would cover, forcing Lisa's attention to return to the here and now. In the back of her mind, though, she couldn't help but weigh her options all while chastising herself for having to overthink everything.\n\n* * *\n\nAfter school, the members of M Club gathered around Sean's locker to discuss their options. Denby thought she could host everyone in her basement, but they wouldn't be able to \"play\" due to her mom being home. Sean was in a similar situation, with both mom and brother likely to be home. Andy, the only one who lived in an apartment, didn't think he'd have enough room and wasn't sure how long they would have any privacy. Lisa thought her house was free, since her younger sister Kara had drama club today, but there was something of a house rule against bringing boys over. It wasn't a rule she'd ever tested, but her parents had established it in no uncertain terms following an episode with her sister. \n\nWith no other good options available, Denby suggested they could all just go hang out at Highland Escape for a while. Escape was a local movie theater, bowling alley, video arcade, pizzeria, bar, and miniature golf course all rolled into one. It could be pretty crazy on the weekend, with birthday parties and others just looking for fun, but on a rainy weekday afternoon it was bound to be quiet. Lisa was indifferent and agreed to the idea when everyone else sounded enthusiastic.\n\nSean rode with Denby, leaving Lisa to feel like she should offer to ride with Andy just to avoid the appearance of leaving him out. In a nice gesture, he braved the rain to get his car and picked her up curbside. She could think of many boys who'd have never considered doing so.\n\n\"Thanks,\" she said as she buckled in. She felt a little guilty that he'd gotten wet, but it would have happened with her there or not.\n\n\"No problem at all,\" he said, pulling out after she was settled in.\n\n\"Nice car,\" she said, genuinely impressed. It was a Ford Focus, so nothing fancy, but clean and in good condition. \"Is it new?\"\n\nAndy shook his head. \"Nah. New to me, but couple years old. Early graduation present from my parents. I think my dad found a good deal and they decided I wasn't at any risk of not graduating.\"\n\n\"Nice.\"\n\n\"You have a car?\"\n\n\"No,\" Lisa said. \"Almost bought a junker once, but didn't want to deal with the hassle and insurance. And since I'm planning on living on campus next year where parking is almost non-existent, I figured I'd be better off putting the money toward tuition.\"\n\n\"Smart,\" he said. \"But that's no surprise coming from you.\"\n\nLisa squirmed a bit at the compliment. She preferred to keep her smarts and good grades out of the spotlight.\n\nShe decided to re-direct the conversation a bit. \"You're going to Southern, right?\" \n\n\"Yeah,\" he said. \"I probably could have gotten into State, but I'm smart enough to know I'd have been on the bottom of the curve around there. Plus, Southern gave me a walk-on opportunity to play football. No scholarship, but it's at least a chance.\"\n\n\"Good for you. Hope it works out.\"\n\n\"Me too.\" Andy's attention turned to navigating the afterschool traffic jam, made worse by the rain. When things cleared up a bit, he continued. \"Don't worry. I won't bore you with details of their football program. Even Sean gets tired of hearing it.\"\n\n\"It's okay.\" She did appreciate his consideration.\n\n\"Now, if you want to hear any more stories about naked guys in the locker room...\" He glanced over at her and winked. \"I remember what you like.\"\n\nLisa blushed, remembering how she'd joked about her fantasy of walking through the locker room after a football game. \"No, that's okay, thanks.\" She made it clear that she really was okay with his joke. \"Maybe another time.\"\n\nThey drove in silence a while, Lisa struggling to find any other common ground in which to strike a conversation. Andy saved her.\n\n\"Do you kinda feel like we're gonna be a third wheel here?\" he said. \"Like we're the little kids tagging along on our older siblings' date?\"\n\nLisa hadn't thought of it that way, but now that he mentioned it that's exactly what it felt like. When it was going to be club business, so to speak, they were on even ground. This, though, was couple and non-couple hanging out together.\n\n\"Yeah, it kinda does, doesn't it?\"\n\n\"Well, how about if things get awkward, we can have each other's back? No need to ruin their date.\"\n\nLisa nodded. \"Do we need like a secret word or signal, if one of us thinks we need to bail?\"\n\nAndy smiled. \"Sure. Got anything in mind?\"\n\nLisa wracked her brain. \"How about 'sushi?'\"\n\nAndy considered it and then shrugged. \"Sure. That'll work. If either of us thinks it's getting awkward or just wants out, we use the word and then we'll excuse ourselves and leave them alone.\"\n\n\"Deal.\"\n\nLisa found herself liking the little bit of conspiracy they were sharing. It provided a link between the two of them, while also showing how they both valued their friends' relationship. Maybe there was more to Andy than she'd realized.\n\n* * *\n\nLisa and Andy's fears were unfounded, as they decided to kick things off with a round of mini-golf where everyone was having a good time and there was little in the way of mushiness between Denby and Sean. Just the little bond they'd formed in creating the escape plan served to open things up a bit between Lisa and Andy, though, and she found herself enjoying the opportunity to tease him over missed putts or groan when he made a shot that she couldn't sink.\n\nThe course was built in a dark room almost entirely lit by black lights and the wild neon painted course and alien-themed artwork of the holes. Aside from a middle-aged couple that had started a good while before them, there were no other people on the course. Lisa, having played here a handful of times before, had never seen it so empty.\n\nAt the fourteenth hole, the simulated interior of an alien spaceship which was isolated from the rest of the course, Andy hurried everyone inside after taking a quick look around the rest of the course.\n\n\"Quick club meeting?\" he said. It took Lisa a moment to realize what he was suggesting.\n\n\"What, here?\" Denby looked incredulous.\n\n\"Sure,\" he said. \"The others just finished and we're the only ones on the course. And no one will see us in here.\"\n\nLisa figured there were bound to be security cameras, but she didn't see any in the little isolated \"spaceship.\" Any cameras looking over the rest of the course wouldn't be able to see what they were doing, and only an observant employee would have even noted them going in and not coming back out in the usual length of time. It was a crazy suggestion, but she found herself tempted. There were precious few things she'd done in her life that she would consider crazy or story-worthy. Granted, she probably wouldn't be sharing this story outside their club's membership, but she would know.\n\n\"I'm in,\" she said before she could talk herself back out of it. Denby gave her a surprised look.\n\n\"I don't think we can do it that quickly,\" Sean said, perhaps looking for an excuse to pass after seeing Denby's reaction.\n\nLisa shrugged. \"No one said we had to go to completion. Just a quick flash and...rub.\" She couldn't believe the words coming out of her mouth, or the casual ease with which she said them.\n\nSean seemed to consider and looked to Denby. Den clearly felt the pressure had fallen on her, face scrunched in thought. Lisa worried that she might have pressured her friend into an uncomfortable spot.\n\n\"Fine,\" Denby said, more with resigned amusement than annoyance. \"But how about just for a minute, to say we did it. And no climaxing.\" She looked at both of the boys to make sure they acknowledged. \"Not that you could finish in a minute, but we don't need to be leaving a mess in here. It'd probably light up like a beacon under these black lights and God knows I wouldn't want to come across something like that. Besides, security could probably rewind the video and figure out who did it.\"\n\nSean nodded in agreement. \"Coast still clear?\"\n\nAndy looked back out the way they'd entered and Lisa peered out through the exit near the end of the hole. Both reported the coast clear.\n\nDenby sighed. \"Okay.\"\n\nUnder the gun, no one wasted any time in getting down to business. Both boys wore shorts and had them pulled halfway down their thighs and cocks in hand in short order. Neither were hard yet, but clearly both were working to quickly rectify that. Denby had worn a skirt to school and reached underneath to slip her panties down to her knees. She could have used the skirt to cover herself a bit, but to her credit she hiked it up to her waist with one hand while her other began exploring between her legs.\n\nLisa was sorely tempted to flash her tits for the boys' benefit. She liked the way they looked at her when she'd exposed herself previously. Unfortunately, she'd had to wear several layers against the rainy chill and it was impractical to work through all the layers and under her bra in the short time they'd allotted to playing. It would have to wait for another time. For now, she was content to drop her shorts and panties all the way to the floor and had a finger running along her already damp slit. She'd given her new shave job a touch up this morning in hopes that she'd get to show it off at the club, so it was extra smooth and sensitive. With as dim as it was, though, the guys probably wouldn't appreciate it.\n\n\"Hey Lisa, nice panties,\" Andy said.\n\nLisa looked down and noticed that under the black lights, her panties lit up a neon orange. \"You know I planned it like that.\"\n\n\"Matching bra?\" he asked.\n\nLisa had to think for a moment. No, it wasn't a match, but she was half tempted to see what it might look like under the lights anyway. \"Sorry, no.\"\n\n\"I can't believe we're doing this,\" Sean said. His eyes darted back and forth between the girls and the two entryways. Nervous or not, he'd managed to get himself hard in remarkably good time and was stroking at a brisk pace.\n\n\"Andy's proving to be a bad influence,\" Denby said with no malice. It hadn't taken long for her to warm up to the idea, as she already had a hand up underneath her shirt, fondling a breast.\n\nAndy smiled. \"Wouldn't have been much of a club meeting if we didn't actually, you know, M.\" \n\nLisa skimmed quickly through her usual warm-up routine and soon had her fingers working across her clit, as if taking the one-minute limit as a personal challenge. Seeing her friends masturbating was arousing in its own right, but add to that her fantasies of being exposed in public and the risk of being seen or caught and she was as turned on as she could ever remember being.\n\nAndy, staying close to the far entrance so he could peek out if needed, had his eyes locked on Lisa. He wasn't leering so much as communicating, she thought. His thick cock was now fully erect and there was something in the way he thrust his hips into his hand rather than simply use a hand motion that telegraphed his implied desire for her -- that he was simulating screwing her rather than just self-pleasuring. She was of mixed feelings about whether she wanted that to ever transpire, but she was very excited by the lust she inspired in him. For having gone through high school with the usual body image insecurities, it was liberating to get an unfiltered reaction from a guy. Or guys, as was the case.\n\nLisa noted that Sean, like her, looked as if he was intent on trying to reach a climax in their self-imposed short window. Of course, that would only make a mess and probably annoy Denby after her warning, and Lisa hoped he wouldn't reach that point just to avoid making a scene. If it was up to her, she probably would have been okay with him going all the way just to see if it really did light up under the UV. Someone probably had a tissue or something they could use to try to wipe it up.\n\nDenby caught Lisa's attention and tilted her head toward the entrance, clearly wanting her to take another look to make sure the coast was still clear. No one was timing, but it was probably closer to two minutes since they'd started, and at least Den hadn't just declared they stop. Maybe she was too far invested now to be the one to end their fun.\n\nLisa, reluctantly, paused for just a moment and poked half of her head around the exit. Her heart skipped a beat when she saw one of the Highland Escape employees in the company t-shirt headed their way, carrying a bucket and some sort of long stick. She didn't know what to make of all that stuff, but it didn't really matter.\n\n\"Shit, someone's coming!\" she said in a desperate whisper.\n\nImmediately, everyone began pulling their clothes back up. Lisa, fumbled her shorts twice before finally dragging them back up over her hips and zipping them in place. Her fingers, still damp and smelling strongly of her arousal, she shoved into a pocket and tried to wipe clean. In under ten seconds, they were all decent and had putters and balls back in hand. Guilty but amused looks were exchanged all around.\n\n\"Think they saw us?\" Denby, more than the others, looked almost mortified.\n\nAndy poked his head out the other entrance and then looked back to the others. \"No, I think we're safe. Looks like they're just going out to fish balls from the water hazard.\"\n\nLisa peered back out the other entrance and saw what Andy was seeing. The long stick had a little net on the end and the employee was dipping it into the water pond that was adjacent to several of the early holes on the course. She felt flush with both relief and embarrassment at having sounded a false alarm.\n\n\"Thank God,\" Denby said, slumping back against the wall.\n\nSean patted her shoulder. \"Probably just as well. Another minute or less and I wouldn't have been able to stop.\"\n\n\"We'd better get out of here before we press our luck any further,\" Denby said and no one disagreed. \n\nHaving already spent several minutes inside the \"spaceship,\" they didn't even bother playing it and moved quickly to the next hole. Lisa took a better look at the employee, some fifty feet away or more, and realized she recognized him as Spencer Conley, a fellow senior from Highland High and quite a hunk in his own right. Looks, unfortunately, were about the only thing he had going for him, as he was something of a tool and tended to badmouth people behind their backs. Still, a tiny part of the back of her mind imagined what it would have been like had he caught them inside the spaceship, everyone with pants around their ankles and masturbating. What would he have done? Freaked out and had them kicked out or arrested? Tell everyone as school what he'd caught them doing? Or maybe join in? She had no idea.\n\nThe tension drained from everyone after they finished a couple more holes. There were a few jokes when they knew they were out of earshot, and Andy had a knack for turning everything into sexual innuendo. Ordinarily, it would bother her as a sure sign of immaturity, but in the context of what they'd just been doing and how she thought she had seen hints of greater complexity of character underneath, she just rolled with it and even threw a couple back at him.\n\nWhen the round was over, they moved to the pizzaria and ordered some cheese bread and sodas. Being a school night, they were almost all expected home for dinner soon, so they kept things to just light snacking and a chance to spend a few more minutes together. Lisa sat in the booth beside Andy, while Denby and Sean were snuggling up together opposite them. Andy made no effort to invade Lisa's personal space, though he did intentionally give her a couple nudges when they made jokes or poked fun of their friends.\n\nAfter the food was all gone, Sean leaned down to give Denby a kiss -- one that lingered a bit longer than would ordinarily be considered acceptable in a public place such as this. Fortunately, there were only a handful of other patrons and none appeared to be taking any note of their foursome. Lisa, however, felt just a bit uncomfortable.\n\nAndy turned to Lisa. \"Say, Lisa, have you ever eaten sushi before?\"\n\nLisa perked up at their code word and felt a small wave of relief. He was clearly feeling that same third-wheel vibe she was getting and hadn't wasted a moment in doing something about it.",
        "\"No,\" she said. \"But I've been meaning to give it a try. Heard that new place on Skyway is pretty good.\"\n\nAndy's eyes lit up. \"Oh yeah. Maybe we should try it sometime.\"\n\nLisa realized she'd just served up an easy softball and Andy had swung for the fences. For her to turn him down would seem awkward now. She had already convinced herself that a date probably wouldn't be so bad, after all.\n\n\"Yeah,\" she said, almost adding a qualifier or hedge, but instead left it at that.\n\n\"Cool,\" he said. He, too, seemed to be unwilling to act too over-eager or specific, perhaps for fear of scaring her off. Was dating always this awkward?\n\nLisa realized both Sean and Denby were looking at her. What was that -- gloating? Relief? Joy? Expectation? She didn't feel like dealing any of those expectations right now.\n\n\"I should be getting home,\" she said, turning back to Andy. \"Mind giving me a lift?\"\n\n\"Sure. Happy to.\"\n\nAndy didn't even waste a moment, sliding out of the booth to make way for her. Lisa quickly followed and noted that Sean and Denby were staying behind. She was happy both for them getting a little extra private time as well as not having to face those expectant looks any longer.\n\n\"Chat later?\" Denby asked.\n\n\"Sure,\" Lisa said, giving her friend a quick smile. The grilling was inevitable. \n\n\"Catch you guys later,\" Sean said. \"It was fun.\"\n\nLisa and Andy both agreed and gave their farewells before heading back out into the torrential rain. Andy offered to bring his car around for her, but this time Lisa just ran with him through the parking lot. By the time they got inside, her shoes were soaked through and the rest of her clothes were nearly as bad.\n\n\"Blah,\" Andy said, wiping the rain from his face with the hem of his shirt. \"Sorry, but I don't think I have a towel or anything else in here.\"\n\n\"It's okay,\" Lisa said. \"I was just ready to get away.\"\n\n\"Third-wheel?\"\n\n\"Definitely third-wheeling.\"\n\nAndy opened his mouth as if to say something and then closed it. He looked deep in thought and then must have made up his mind. \"Look, that sushi thing...if you didn't want to go out with me, that's cool. I know it was our code word, which worked great, but I just kinda...\"\n\nLisa was surprised to hear the uncertainty in his voice. He'd always seemed confident, almost cocky, in their previous interactions. Now she was seeing in him just a bit of how she often felt. It was endearing.\n\n\"It's fine,\" she said. \"I meant it. Yes, I'd like to go try that restaurant with you sometime. Or anywhere else if you're not into sushi.\"\n\nAndy's entire body relaxed in relief. \"Sushi sounds fine. Never had it, but we can pop our sushi cherry together.\"\n\nLisa giggled. \"Works for me. We can figure out a time later.\"\n\n\"Deal. Now, let's get you home before you freeze to death.\"\n\nLisa got Andy headed in the right direction and settled back, reflecting upon all that had happened in the last two hours. It was hard to decide which was the bigger deal -- masturbating in a public place with friends, or accepting a date. What did that say about her?\n\n\"What's on your mind?\" Andy must have had enough of their awkward silence.\n\n\"Oh, sorry,\" she said. \"Just thinking about earlier. Back in the golf course. Crazy.\"\n\n\"Yeah, that was pretty nuts. But awesome.\"\n\nLisa nodded. \"It was. Just a shame I couldn't finish. Got so freaking turned on.\"\n\n\"You looked like it.\" Andy glanced her way, as if trying to judge how she would take his observation.\n\n\"You too,\" she said.\n\n\"I was. Easy when I have such inspiration.\"\n\nLisa felt herself blush, knowing full well he'd only been checking her out when they had been playing. She remembered clearly the look in his eye, the thrusting of his hips. The image in her mind sent a tingle back down between her legs.\n\n\"I don't know what it is,\" she said, her voice low, \"but there's just something about doing it in front of other people.\"\n\n\"Uh huh.\"\n\nLisa saw the turn to her street coming up, but a moment of hesitation resulted in Andy driving right past it. She didn't realize exactly why until they reached the next block and the entrance to Walters Park.\n\n\"Turn in here,\" she said, suppressing a shiver more from nerves than the chill that had overcome her.\n\nAndy obediently turned his car and followed the narrow, twisty road that cut through old growth trees and dense undergrowth. At the end of the drive was a small parking lot that was, to her relief, empty.\n\n\"You don't live in the park, I trust,\" Andy said. Lisa detected a hint of nerves in his voice that echoed her own.\n\n\"No,\" she said, barely trusting her own voice. Was she really doing this? \"Just park over there.\"\n\nAndy pulled into the far corner spot where half the car would be obscured by trees and the rest by the heavy rain. Their windows were also sufficiently fogged to provide plenty of privacy. He turned off the engine and looked at her, uncertain but eager.\n\nLisa took a deep breath. \"I was hoping, maybe, you wouldn't mind if we finished what we started earlier.\"\n\nAndy smiled, looking instantly more at ease. \"I'd love to.\"\n\n\"Club rules, still,\" Lisa added. She'd agreed to go on a date with him, but she didn't want him to make any other assumptions. Of course, how crazy was it that she was going to expose herself to and masturbate with a boy, in his car, but not allow him to touch or kiss her?\n\n\"Of course,\" he said, nodding.\n\nLisa reached down to unzip her shorts and Andy wasted no time in following her lead. By the time she was able to wiggle out of the damp clothing and slide her shorts and panties down to her knees, Andy had already fished his cock out of his fly. He had to have already been hard, she realized -- probably as soon as she'd mentioned their club activity.\n\n\"No fair,\" she said, teasing. \"You don't have to pull your shorts all the way down.\"\n\n\"I can if you'd like,\" he said. His gaze fell to her crotch and she let her legs slip a little wider.\n\n\"Nah, it's fine,\" she said, letting her fingers tease along her inner thighs. \"I can see the goods.\"\n\nAndy peered around the parking lot one last time and then reclined his seat just a bit. Lisa looked around as well, but their windows were already so fogged that it would be almost impossible to see anyone in the lot unless they were right next to the car. With the rain coming down as hard as it was now, she couldn't imagine anyone out there sneaking a peek. And even if someone did...\n\n\"You wanna see my tits?\" Lisa couldn't believe how easily the suggestion came out of her mouth. Back at the golf course, though, she'd wanted to show them. Here she had the opportunity.\n\n\"You honestly think I'd ever turn down an offer like that?\"\n\nLisa smiled. She pulled her sweatshirt over her head and tossed in on top of her backpack by her feet. For a moment she considered just stripping down all the way, but decided that might be going just a bit too far on the very off-chance someone did come by. Instead, she pulled down the scoop neck of her stretchy t-shirt until it was hooked underneath one bra cup. It probably wouldn't accommodate both breasts, so she just left it at the one and worked the cup down as well until her breast popped free.\n\nAndy licked his lips. \"If you don't mind my saying, you have really nice tits.\"\n\n\"Say it all you like.\" Lisa liked the compliment, even if she felt a little self-conscious about it. She soaked up his attention, just as she had when it was both him and Sean, and even Denby. But being just the two of them, it somehow felt a bit more intimate, more suggestive. It made her nervous and excited all at once.\n\n\"I'd love to touch,\" he said, stroking his cock with a long, slow pace. \"But I know the rules.\"\n\n\"Yup. Not this time.\" Lisa lifted the breast suggestively and then pinched the nipple.\n\n\"Next time, then?\" \n\nLisa shrugged coyly. Had she not declared this \"club rules,\" she might have just let him go at her right now, with as aroused as she was getting. She distinctly remembered the feel of Denby's hand and then lips on her breast. It would be nice, very nice, to experience those sensations again. Maybe she really meant it.\n\nWhile Andy's eyes explored her body, Lisa's attention rested largely on his cock. This close, it appeared even thicker and angrier. The head was swollen like a sausage set to burst and large veins bulged from the shaft.\n\n\"I like your...\" What word did she mean to use? Penis? Nah -- too clinical. Dick? Maybe, but it almost sounded to small and weak compared with the specimen he was stroking. Cock? A good, strong word. Maybe a bit dirty, but she had her legs spread before him so that was hardly a fair knock. She certainly couldn't go with something like pee-pee. \"Cock.\"\n\nAndy seemed to swell with pride. \"Thanks. Not as big as Sean, of course, but...\"\n\n\"Not as long, but definitely bigger around.\"\n\nHe just nodded. \"Gets the job done.\"\n\nLisa wondered if there was any innuendo in that aside from the obvious. She had no doubt that he was more than adequately well-endowed to please a woman. If anything, she wondered if he might not be a bit too thick. Her own two fingers seemed more than adequate to fill herself up when she masturbated, and those two fingers were nowhere near as thick as his cock.\n\nFeeling a bit constrained in the shotgun seat, Lisa reached down and slipped her shoes off and then fully removed her bottoms. Freed of the fabric, she shifted slightly and angled toward Andy. She bent her left leg until her knee rested on the emergency brake lever and then raised her right leg and placed her foot on the dash.\n\nJudging by Andy's wide eyes, she was extremely exposed to him in this new position. Lisa knew this was way over the line of decency, yet the excitement overrode her embarrassment and she wanted him to look. Had he ever seen a girl like this before? She thought he'd dated in the past -- maybe Carrie Hamilton, last year? -- but she otherwise had no clue as to how experienced he might be.\n\nRather than worry about it, Lisa settled back and focused on getting herself off. Her fingers danced around the folds of her labia, spreading her slick moisture around liberally. On a wild hair, she used her fingers to spread her smooth pussy lips wide. Judging by the frantic increase in Andy's stroke pace, that clearly had given him the intended privileged glimpse of her depths.\n\n\"Fuck,\" Andy grumbled under his breath. \"I'd have never guessed what kind of girl you are.\"\n\nLisa knew she could have taken offense at his words, but chose to embrace them as a badge of honor. \"Just because a girl is sweet and quiet on the outside doesn't mean she can't have some dirty thoughts on the inside.\"\n\n\"I'm seeing that. Very clearly.\"\n\nLisa returned her focus to her clit, rubbing around and across the sensitive nub. She was so aroused, it wouldn't take much to push her over the top. Content to wait, she sought the edge and held on just a notch beneath it while waiting for Andy to get closer.\n\n\"Now, boys,\" she said, smiling. \"Boys, we all know what dirty minds you have. Always checking out girls' tits, dreaming about undressing them and licking them and sucking them. Maybe even fucking them.\"\n\nLisa had never talked dirty like that before. She would never have believed she could say such words without dying of embarrassment. In the heat of the moment, though, they just came tumbling out. The impact they had on Andy was intoxicating, as he looked consumed with lust and his stroking became a blur.\n\n\"Guilty. As. Charged.\" He could barely get the words out.\n\nLisa could tell he was on the brink, so she upped her own pace and slid two fingers inside to curl up against her g-spot. Between that and the steady flutter across her clit, her orgasm came in mere moments, a wave of heat and joy expanding out through every inch of her body. So powerful was it that Lisa felt her vision fade for several seconds, returning only just in time to see Andy's cock erupt with a thick rope of gooey cum.\n\nAndy's groans merged with her own, which only made her aware of just how loud she'd been. There was no sense in being embarrassed, though, since they were equally lost in the moment. His ejaculate, both the first and subsequent shots, coated the head of his beet-red cock, ran over his clenched fist, and dribbled down the front of his shorts. His body trembled and his chest rose and fell in deep, ragged breaths.\n\nIf she didn't know before, Lisa was now certain she was hooked -- both on watching and performing. Knowing she had that sort of effect on a boy, a man, was exhilarating. And if she enjoyed it, and he enjoyed it, what was the point of trying to find ways to pretend otherwise? She didn't think of herself as slutty or perverse, though, since this was still only something she would do with very select company.\n\n\"Damn, this is fun,\" Andy said, slumping back in his seat. \"I could get used to this.\"\n\n\"Preaching to the choir.\" Lisa watched in fascination as his cock visibly deflated in his hand. \"Looks like you made a bit of a mess, there.\"\n\n\"All for you,\" he said, then looked a bit embarrassed that he might have offended her.\n\n\"How sweet,\" she said, making sure he knew she wasn't bothered.\n\nLisa's fingers were still lightly playing over her pussy. She was still so turned on that going another round was high on her mind. Andy wouldn't likely be able to join her, though, and she really did need to be getting home for dinner. \n\n\"Probably a good thing it's raining,\" he said, looking at the mess spread across his hand and lap. \"If my clothes are wet enough, maybe I can get through the house without drawing too much attention to it.\"\n\nLisa chuckled. \"Lucky indeed. Maybe you should keep an emergency pair of shorts in your car.\"\n\n\"Good idea. For now, I think there might be some tissues in the glove compartment, if you don't mind.\"\n\nLisa brought her leg down from the dash and opened the glove compartment. There was half of a travel pack of tissues in there, as well as the usual car manual, receipts, and spare sunglasses. Her eyes glanced over all of that, however, and settled on the open box of condoms. Her heart rate hadn't even had time to settle back down after her orgasm, yet it still bumped up a couple notches. So he was sexually active, or had been. Was it with Carrie? Someone else? Was he still seeing someone she just hadn't heard about? A flood of emotions cascaded through her, not the least of which was jealousy, which made no sense to her since she was the one who'd rebuffed numerous prior attempts by Denby to hook her up with him.\n\nShe must have paused just a beat too long, because Andy leaned over and groaned. \"Sorry, forgot about that.\"\n\nLisa blushed and could tell from the tone of his voice that he was similarly embarrassed. How was it they could just have so completely exposed themselves to one another mere moments ago and then be so uncomfortable by the sight of a box of condoms? \n\nShe quickly grabbed the tissues and closed the glove compartment. Handing the package to Andy, she said, \"Someone paid attention during health class.\"\n\nAndy took the tissues and nodded clumsily. \"Safety first, right?\"\n\n\"Yup.\"\n\nWhile Andy began to wipe himself clean, Lisa worked to pull her wet panties and shorts back up, wiping her own residual juices off on the fabric. She'd have to change at home anyway, so there didn't seem to be much point in wasting any more of Andy's few remaining tissues. They both cleaned up as an awkward silence overpowered the steady patter of rain.\n\n\"Home?\"\n\nLisa nodded. \"Sadly, yeah. Dinner, homework.\"\n\n\"Ditto.\" \n\nThe short drive to Lisa's house was mostly quiet, aside from her giving him directions. When they pulled up, Lisa felt she needed to say something. Andy beat her to the punch, though.\n\n\"We're good?\"\n\n\"Of course.\" She appreciated his concern. And, in truth, she was good with what they'd done. It was everything else about him that she still needed time to figure out. \"I had fun.\"\n\n\"Good. Me too. I just don't want things to get, you know, weird. I like you and I do want to take you out. No expectations, just because we did...this.\"\n\nLisa nodded. \"A regular first date.\"\n\nAndy cocked his head to the side and gave her a smile. \"As regular as we can manage, yeah.\"\n\n\"Deal,\" Lisa said and reached for the door handle. \"Shoot me a text tonight and we can figure out a day and time.\"\n\n\"Sounds good.\"\n\nLisa hesitated and found herself looking at Andy, looking into his eyes, and seeing him in a new way. There was far more depth than she'd appreciated before. She still didn't know if he was the one, or a one, for her, but she was eager to find out. She leaned forward on impulse and kissed him on the lips. He was clearly caught off-guard, yet recovered quickly enough to press back for a moment before she broke it off.\n\n\"Bye.\" She said, giving him a big smile before dashing out into the rain. "
    ],
    "authorname": "WatchingCloud",
    "tags": [
        "masturbation",
        "public masturbation",
        "exhibitionist",
        "club",
        "mini golf",
        "black lights",
        "group",
        "group masturbation",
        "rainy",
        "parking"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/m-club-ch-06"
}