{
    "title": "Trilogy of Tits and Terror Ch. 03",
    "pages": [
        "This story is posted on the Literotica website. Do not repost anywhere else without the author's consent. For fans of my stories, they know what kinds of things to expect. This story deals with similar themes as the stories by wannabeboytoy, seducedHylas, and Dark Betrayal, namely cheating, betrayal, and heartbreak. If stuff like that isn't your cup of tea, then you probably shouldn't bother reading it. I do not condone any of these actions in real life. This is just a story. Enjoy.\n\n**************\n\nThe heavy door came to a close, leaving Madeline and the nun alone again.\n\n\"So...\" Madeline said with a smile. \"As I said, I do have one more story to tell you. One more story that I think will convince you fully. You ready?\" she asked with a raised eyebrow.\n\nThe bound nun, knowing she didn't have a real choice, couldn't do anything else but nod.\n\n************\n\n\"Ascent of the Dark Queen\"\n\n************\n\nAs soon as Jeff and Alice Proctor pulled up to the suburban home of the Cooper family, they could feel something heavy in the air.\n\nStepping out of their car, the married couple approached the house. Married for almost ten years, they had been brought together by their mutual fascination of the supernatural. Demons, ghosts, stuff like that. Some made fun of their chosen profession as demonologists, and it was admittedly a very niche field that most people didn't believe in. They had made a pretty decent living. Most of the time, they were dealing with your typical crazies who were either a little too paranoid or had watched a few too many horror movies. But every so often, they found a case that affirmed their chosen vocation. A case that would prove any doubters wrong and show that demons and ghosts were very, very real.\n\nAnd if the phone call they had received earlier in the day was true, today would be one of those days.\n\nThe couple walked with purpose towards the Cooper family, who were waiting at the end of the sidewalk in front of the house. The mom was crying as she clutched an open Bible, and the father was trying to keep up a brave face in front of his family. Sitting on the front lawn was a child, their youngest daughter, distracted with a doll.\n\nBut it was their other daughter that brought them there.\n\n\"Are you the Proctors?\" the dad asked, stepping forward. Standing under the buzzing street light, he held out his hand as the couple approached.\n\n\"Yes, I'm Jeff, this is Alice,\" Jeff said calmly, introducing himself and his wife to the panicked family.\n\n\"I'm Roger... this is my wife, Darlene,\" the man said. \"So, you can, uh... you can get whatever's in my daughter... out?\" he asked, partially in disbelief that he was actually saying these words.\n\n\"That's what we're here to do,\" Alice said, reassuring, a messenger bag full of her gear on her shoulder.\n\n\"When did this start?\" Jeff asked, his tone calm and knowing.\n\n\"A couple days ago, she uh, starting acting kinda funny,\" Roger said. \n\n\"In what way?\" Alice asked.\n\n\"Lashing out. Screaming and yelling. Saying things... terrible things,\" Roger said, shaking his head, his strong fa\u00e7ade crumbling. \"She's not normally like this. She's so nice and friendly.\"\n\n\"Our daughter's a good girl!\" the mom, Darlene, interjected. \"A church going girl! This isn't her! No! There's something inside her... a demon!\" she said, sounding like she was losing it already.\n\n\"Mrs. Cooper, we're here to help you guys,\" Jeff began, trying to reassure her.\n\n\"Can you do it? Can you get that... thing... out of my daughter?\" Darlene asked.\n\n\"Ma'am, we are very experienced. We'll do everything in our power to help your daughter. We just need you guys to stay calm.\" Jeff said.\n\n\"The nun inside... she told us to wait out here. She said we wouldn't want to be close by as this whole happened,\" Roger said.\n\n\"That sounds like a very smart plan,\" Jeff said with a reassuring smile. That was his best quality. He was undyingly patient and calm, even in the face of some truly fucked-up shit. His demeanor reassured the panicking older couple.\n\n\"We're gonna help your daughter. Space for us to work and lots of prayers are what's best,\" Alice said. \"Trust us, we can do this.\" \n\nJeff glanced at the house. It was a typical, two-story family home, one you would see anywhere in America. But he could already feel something. Some sort of deep, dark evil pulsing from the home. Despite his assurances, he was a little nervous.\n\n\"Well, then... go! Please! Help her!\" Roger said. Jeff nodded at the pair and turned to approach the house when the mom interrupted.\n\n\"Her name is Kelsey. Our daughter...\" Mrs. Cooper said. She stepped forward and handed Jeff a picture. \"She's only 18. She just graduated the top of her class. She's an athlete also. She ran track, and she was on the swim team. She's... she's an incredible daughter. She's so kind and sweet. She volunteers at the church... she loves helping people... everyone loves her. She doesn't deserve this! Please! Help her!\"\n\nJeff and Alice studied the picture. She looked as nice and sweet as her mother said, a bright, beaming smile on her pretty face. She was a brunette with bright, friendly eyes, a good tan, and a slim, fit frame, belying her athletic experience. She was clearly her parents' pride and joy. This was a girl with a future. This was a girl that was going places. This was the girl they were going to save.\n\n\"We'll save you daughter,\" Jeff said with a confident firmness. His confidence assured Roger and Darlene, and somewhat eased their fears. Jeff was calm and unwavering, despite everything. While the nun they had dealt with seemed a bit unsure, both Jeff and Alice seemed ready to help. Ready and able. \n\nThey were the right people for the job.\n\nTurning, the married demonologists approached the front door. They glanced at each other, as they always did before things like this. Alice looked up at Jeff. His confidence always reassured her. He gave her a small half-smile that warmed her heart. He was a handsome man of 32, and he was the man of her dreams. Most of her friends had thought she was kinda crazy for her desire to work in the field she did, but not Jeff. He was the one person who not only heard her out, but wanted to take part in it. He had been interested in the same field as well, so when they met, it seemed like fate. It seemed like these two belonged together. Getting married seemed like an obvious conclusion for two people with so much in common, which they did. And it didn't hurt that he was darn cute as well.\n\nHe was a tall, mid-western man. He had worked on a farm in his youth, giving him a good build that he had maintained into his adult years. He was never the type of guy to have much of a tan, but it worked for him. He also had a nice head of brown hair, a warm smile that you had to earn, and an infectious laugh. Also, he happened to have a nice butt and a sizable package. Alice couldn't have felt any luckier. And, on top of all that, he was brave, courageous, never letting anyone else see his fear, even in the craziest of situations. \n\nThey would need that tonight.\n\nJeff was strengthened by his wife in the same way. She was a cute brunette, a head shorter than him. She wasn't flashy like most other girls. She was a girl with substance, with an intelligent mind and a whip-sharp sense of humor. Her deep knowledge of the paranormal and her always-ready attitude always gave him more strength and courage. Alice always told him he was the brave one. The strong one. But he knew the truth. Alice was the strong one. She was the backbone of their marriage. And if they were gonna succeed here, it wasn't gonna be because of him. It would be her.\n\nNodding at each other, Jeff opened the door, and the couple stepped inside. Closing the door behind them, they studied their surroundings. The home was dark, as most of the inside was bathed in shadow, the only glow coming from the lights outside. It would seem like a normal, suburban setting, based on looks, but both of them could sense something was wrong.\n\nSomething was in the air, literally.\n\n\"Lights don't work,\" Jeff explained, flipping a switch on a table lamp futilely. Alice nodded, noting this fact.\n\nThe air was heated, tinged with something they couldn't quite put their fingers on. They weren't alone. Something was here. Something dark. And both of them could feel it. \n\nThey were startled by noise coming from upstairs, the sound of muffled voices and thumping through the floorboards. Glancing at each other, they headed upstairs, towards the source of the noise. The stairway was dark, but they were able to make it upstairs without stumbling. Arriving at the second floor, they found the one room with light emanating from within, a closed door at the end of the hall. As they approached, the noise from within got louder. Resting his hand on the warm brass doorknob, Jeff turned the knob and pushed the door open.\n\nAs they stepped inside, they could feel waves of darkness in the air, pulsing outward from the source of the disturbance. Closing the door behind them, Jeff looked up, laying his eyes on the source of that disturbance for the first time. \n\nShe was lying on the bed, or to be more accurate, tied to the bed, each limb connected to a bedpost with a thick, strong rope. It was the girl from the picture.\n\nKelsey.\n\n\"Ha! There they are! The ones you warned me about! The great, demon fighting couple I'm supposed to be afraid of... right?\" Kelsey called out, full of teenage arrogance, looking right at them. \"I'm shaking in my boots.\" Her voice sounded odd, as if her normal, teenage cadence was combined with the voice of someone else. Someone far more insidious and animalistic. Even though it was her, the daughter of those two people outside, she was unrecognizable. There was something in her, a darkness emanating from her. She was the source of the evil in the air. But, to be honest, it wasn't really her.\n\nIt was the creature possessing her.\n\nThey had gotten the call earlier in the day, and they had quickly made their way here. This girl had been possessed by a demon. At least, that's what the parents had claimed when they had called the Church for help. Jeff and Alice had taken part in a few exorcisms, so they had some experience in these things. Plus, they had a deep knowledge of demons and demonology, which they had compiled over the years. So, they were the ones to call. And the Church had done that, reaching out to them when their early efforts with this girl had failed. The Proctors had come here to help out, verify that this was indeed a possession case, and if it was, do what they could to get that demon out of her.\n\nSo far, everything supported the case that this girl was possessed. Not only the behavior of the girl, and the energy in the room, but something as simple as the lights being out. In cases like these, when the demon fully takes hold, a surge of dark energy will pulse out of the possessed person, taking out all the nearby lights. The only reason this room was lit was thanks to the portable lamp the nun had no doubt brought with her.\n\n\"Are you gonna do anything, you stupid cunt bitch? Or are you just gonna leave me tied up here?\" Kelsey spat out. Her words were directed at the other occupant of the room. Standing on the far side of the room was a nun. The woman that had called them when her efforts had failed. The woman who sounded so overwhelmed over the phone, and needed help from experts in the field. The woman who looked terrified now.\n\n\"You must be Sister Marie?\" Jeff said.\n\n\"No! She's the spineless, wimp pussy bitch!\" Kelsey cackled from the bed, but the couple tried to ignore her. Jeff and Alice approached her. \n\n\"Yes, Jeff... Alice... I'm the one who called you. And thank God you're here.\" Marie said. She did indeed look scared. Her eyes wide, sweat covering her face, a stray blonde hair escaping her habit, she seemed completely overwhelmed. She looked about the same age as the couple, but she seemed far less prepared for what was going on here than they did. She looked terrified. Jeff couldn't tell if the sweat on her brow was from the heat in the room or from the exertion of this exorcism. Jeff also couldn't help but notice the unusual habit she was wearing. Tight and figure forming, it hugged her slim body. She looked uncomfortable wearing something that tight. \n\n\"Have you made any progress?\" Alice asked.\n\n\"A little. I was able to attach the holy ropes before she really, uh... fully woke up, to keep her at bay. I did few basic invocations also, but... nothing beyond that. Whatever's possessing her... it's a nasty one. It's said some truly... awful things,\" Marie said, looking away.\n\n\"Oh, fuck off!\" Kelsey screamed out, annoyed. \"You are a pathetic excuse for a nun. You probably only joined the church because you couldn't get laid, you flat, plain, ratty bitch!\" Marie's cheek twitched, the young woman's words hitting deep. \n\nFor the first time, Jeff turned to study the young woman on the bed more closely. The pictures Mrs. Cooper had shown him had showcased her innocence. But the woman in front of him on the bed... there was something dark inside her. That innocence was gone. Clad only in a thin cotton blue and white nightshirt. With the heat of the room, or the evil in her blood, her tanned skin was coated with perspiration. Her nightshirt was heavy with her sweat, making it cling to her slim, athletic body. Something was not right with her. That much was clear.\n\nThere was evil dripping from her pores. It was clear both by sight and the heavy feeling enveloping the room. Jeff sensed immediately that there was something inside this girl. A demon, hidden just beneath the surface.\n\nAt the same moment Jeff studied her, Kelsey appraised him. And she liked what she saw.\n\n\"Hey, handsome,\" she began with a wicked smile. \"I know you came here to send me back, but... that doesn't mean we can't have fun first...\"\n\n\"Be quiet,\" Jeff stated firmly, studying the bed. The ropes tying her to the bed were well done, keeping her in place, thick, heavy ropes tied tightly around her wrists and ankles. But she wasn't struggling against them.\n\nIt was as if she was exactly where she wanted to be. \n\n\"Don't act like you don't want some of this...\" she stated, glancing down at herself. \"Trust me, I see your wife. We both know you'd be getting better from me.\"\n\n\"Quiet!\" Jeff called out loudly.\n\n\"Oooh, you got some backbone. I like that. Much better than pathetic, dreary-ass Marie here,\" Kelsey said. \"It'll be so much more fun to break you,\" she said, holding his gaze with hers. \"Evil wears us all down eventually. It's just a matter of when...\" she boasted, staring him down. She finally looked away and laughed. \"Baby, if you only knew what was about to happen...\" she said, eyeing him up.\n\n\"And what's that?\" Jeff asked, clearly impatient. She only smirked wickedly and licked her lips, before mouthing the word 'sex'. Jeff turned away from her, approaching his wife as she was unzipping her bag and taking out some gear.\n\n\"Check for any demons that are, uh... hypersexual,\" Jeff stated, which Alice nodded at. While this type of behavior wasn't exactly common, it wasn't unheard of either. She pulled out her journal and began flipping through the pages.\n\nJeff studied the room.\n\nLit only by the portable lamp on the dresser, it looked like a typical teenage room. Not overly girly, but clearly feminine. There were pictures of her on the walls, some with her friends. Some when she was younger with her family. Some with her little sister. She also had a few awards on the wall, things from the church and from her sports accomplishments. Her open closet was full of clothes, of course, and her dresser was covered with girly things, make-up and lip gloss and various knick-knacks. There was a big mirror next to the dresser, and near that was where Sister Marie was standing. \n\n\"Christ compels you to leave, demon,\" Marie called out, her voice shaky as she held up a cross. \"Christ compels you to hell!\" she said, attempting to sound firm. Even to Jeff, it was half-hearted at best.\n\n\"Shut up!\" Kelsey replied, rolling her eyes. \"I'm done with you, you fucking dumbass,\" she added dismissively, before turning back towards Jeff. \"I find this one far more interesting.\"\n\n\"Name yourself, demon,\" Jeff stated calmly, staring her down.\n\n\"Please,\" Kelsey replied, unaffected. \"You can do better than that.\"\n\n\"Just trying to keep this easy,\" Jeff stated. \"Leave her now, return from where you came, and no one will be hurt,\" he said confidently.\n\n\"I'm not here to hurt anyone,\" Kelsey stated. \"I just want to make people feel really, REALLY good.\" She said in a lustful tease. This time, Jeff rolled his eyes.\n\n\"You can't possibly expect us to believe that?\" Jeff asked, standing over the tied down teen as they talked.\n\n\"I just want to bring out the best in people,\" she said with a sickly sweet tone, pushing out her chest. He couldn't help but glance down as she did so, only to seemingly see her breasts press outward against her dress. Weird. At his first glimpse of her, both in the bed, and in the pictures, she seemed slim and flat-chested, but now, he could see a clear indentation caused by her boobs. She must be a bit more endowed than he initially thought.\n\nNot that he normally notices these things.\n\n\"You find anything?\" Jeff said, turning back to look at his wife.\n\n\"Too soon to tell,\" Alice replied, still skimming her notes. \"I think we need more information.\"\n\n\"This girl is interesting,\" the demoness from within Kelsey said, looking at herself. Everyone looked at her as she continued. \"So pure. So kind. So sweet. But even the prettiest flowers can have poisonous roots. I can see her thoughts. Her desires. This girl needs it bad! Haha. Me and her are gonna have a lot of fun together. Every church-going girl has a dirty slut buried deep inside her. I'm just gonna bring it out! Haha...\"\n\n\"Leave now, demon, if you know what's best for you,\" Jeff warned.\n\n\"Take of your clothes and join me if you know what's best for you!\" Kelsey replied with a laugh. \"You want me to leave? Take out your big cock and fuck me, then we'll talk! Haha!\" Jeff rolled his eyes in annoyance. \"Don't act like you're not already thinking about it. I can already hear your balls filling with cum. Cum that you're gonna give to me. Hope your wife doesn't catch on that you're already falling in love with me!\" As she said this, she glanced over at Alice. Jeff did the same, giving Alice a reassuring glance. \n\nBut Alice was unperturbed. She was a big girl. She could handle this. She'd been through a few of these types of encounters, and had heard a lot of filth. Although this was unusual, a spirit being this blatantly sexual, and making rude comments to both her and Jeff, she could handle it. If she could brush off all the comments that sluts at the bar would say to Jeff right in front of her, she could brush aside the things this demoness was saying. She put her nose back in her journal, searching for answers.\n\n\"You think very highly of yourself,\" Jeff stated, still calm in the face of this demoness.\n\n\"You know the funniest thing about humans?\" the demoness began. \"It's that you can know your doom is coming, you can be told about it, you can see it coming a mile away, and you still walk right towards it. Again and again, you humans walk right off that cliff. Like mice in a trap. So I can tell you exactly what is going to happen, and it still won't change how this ends.\"\n\n\"What's going to happen?\" Jeff asked, unable to stop himself from inquiring. Kelsey smirked.\n\n\"Me and you are gonna fuck!\" Kelsey called out plainly, her voice still that mix of her normal teenage cadence with something darker and deeper. \"You're gonna forsake your little wife, betray her, and join me in the warm waters of pure sin. And baby... the water's fine.\"",
        "Jeff glanced at his wife, again assuring her that this demon's proclamations were ridiculous. But Kelsey wasn't done yet.\n\n\"Your little wife will be forever haunted by what happens tonight. She'll never be the same. And you...\" she said, looking at Sister Marie. \"You're fate will be far worse, hahaha...\" she said, smiling evilly at the nun.\n\n\"Quiet, demon,\" Marie said, her voice shaky as she gulped.\n\n\"Yeah, the Church sent a tough one, here,\" Kelsey mocked. Even Jeff was slightly let down by how timid and unprepared Marie seemed. \"You know what, I'm done with you for now. Let me focus on this one...\" she said, looking at Alice across the room. Alice looked up at her in unison, but for a different reason.\n\n\"You're Darnessa. Demon seductress.\" Alice offered, trying to establish the demoness's identity. Kelsey simply rolled her eyes.\n\n\"I'm offended that you'd even confuse me with her,\" Kelsey said, voice dripping with teenage condescension. \"Darnessa plays for the other team, if you know what I mean. You'd be more likely to find her in some bar, trying to convince straight married women to rim her asshole. You got the wrong girl. Keep trying, idiot.\" Kelsey mocked.\n\n\"Be quiet!\" Jeff said again. He looked back at Alice, but she wasn't exactly offended. If anything, she was happy to gain new information about a demon, or, specifically a demoness in this case, so she simply shrugged her shoulders and added notes to her journal.\n\n\"Is that your big plan?\" Kelsey said to Jeff. \"To keep telling me to be quiet? If that's the case, I have a good idea on how to keep my mouth busy,\" she said with a smirk.\n\n\"Quiet!\" Jeff repeated, annoyed with her lazy come-ons. But unfortunately, it was necessary.\n\nTheir main plan of attack was to figure out which demoness possessed this girl. Jeff and Alice had taken extensive notes on every demon, ghost, or specter they could find research on. And they were hoping that, by examining their notes, they could narrow it down to figure out the demon's identity. A lot of times that entailed getting the demon to keep talking and reveal more information about themselves. Luckily, most of the demons they dealt with were quite vain, so with the right push, they would happily give away their identities. So that was the couple's plan. Play along as much as they could while slowly convincing the demoness to open up, and eventually identify herself.\n\nThey'd had good luck doing this, and different approaches had worked. The one that came to mind first was this one demon who just hated women. So, the couple goaded this demon along as it spewed pure filth about Alice, running her down savagely. Eventually, once his identity was revealed, they turned the tables on that beast and conquered it, sending it back to hell. It was an encounter that had proven their strength as a couple, and Alice's strength and confidence as a woman, to withstand such vicious treatment.\n\nThis particular demon seemed very sexually driven, so the plan, in Jeff's mind, was to just let her talk, spew her filth, and expose more about her true desires. She might say some awful things, but both of them could take it, and if it meant vanquishing this evil demoness, then it would all be worth it. \n\n\"Oh, c'mon, lover. Don't be so dense. I see your wife. Does she really keep you satisfied? After a long day of fighting against the unending wave of evil, don't you just want to take your mind off things and feel good? Don't you want to rip off your clothes and just...FUCK? I know I would. And I'm not talking about that making love bullshit that your slow, dull, disgusting wife offers. I'm talking real down and dirty, nasty fucking! The kind that I could provide. This teenage body looks delicious, doesn't it? Don't you want a taste?\" Kelsey asked. She again pushed her chest outward, and despite himself, he couldn't help but notice her boobs. He could swear they looked a cup size bigger than they had before. He looked away, hoping no one noticed, and as he did, a boiling anger rose up inside him.\n\n\"You are a demon from hell!\" Jeff called out. \"You disrespect the body you inhabit by speaking this way. By taking her body and using it for your own dark devices.\"\n\n\"Please, Jeffrey,\" Kelsey said, mocking. \"This is the body of an 18-year-old girl. Even though she might act all innocent, you can't see her mind. You can't see her thoughts, like I can. She's no innocent. She just hides it well. She acts all nice and sweet, but deep down, she wants, no... she NEEDS... dirty, nasty fucking. She's an 18-year-old girl! You want nasty? You want evil? You want me to show you a place where not even Hell's worst demons would dare venture? I show you a group of 18-year-old girls.\"\n\n\"No... not this one! Kelsey is one of the good ones. She goes to church! She helps the community. She's pure!\" Jeff affirmed.\n\n\"She's not even a virgin, hon,\" Kelsey stated. \"If she were as pure as you say, she'd still have that oh so precious v-card. No... she couldn't wait. She, ugh... she 'made love' with the pastor's son, right after one of those church events. Like I said, there's a slut deep inside her... I'm only bringing it to the surface. She may be inexperienced, but me... well... let's just say I'm VERY experienced. I've taught her SO much already!\"\n\n\"Quiet your forked tongue, demon,\" Marie called out, holding up her cross.\n\n\"SILENCE!\" Kelsey roared, her voice purely demonic and amplified throughout the room. A dark wave of energy knocked them all back. Jeff fell to the ground, as did Alice. Marie fell against the wall, her cross falling from her hand. Her eyes were widened, absolutely petrified. \"YOU ARE NOTHING! I WILL NOT BE STOPPED BY TRINKETS OF A FALSE GOD!\" Kelsey screamed, her body rising from the bed slightly, held in place by the thick ropes, her eyes blazing with red light, her mouth twisted as she spoke these unholy words. The demon was closer to the surface, and it was as if they could see her red eyes. Her fanged teeth. Her forked tongue.\n\nHer voice was beyond compare, possessing a volume and power that none of them had ever experienced. The house shook beneath her voice. Even though Jeff was normally calm, he couldn't hide the slight glimmer of nervousness as he glanced back at his wife, ensuring she was unhurt. Kelsey fell back to the bad, taking a breath and staring at the people in her room. Her chest was rising and falling, causing her now even larger looking breasts to press out against her thin nightdress. As Jeff rose to his feet and helped his wife and the nun to their feet, Kelsey spoke up again.\n\n\"Ha ha ha... you have no idea what you're against,\" she began, her voice dripping with malice, even though it was back to sounding more like Kelsey's own voice. \"You think you do, but you don't. The fight against evil is an unending one. You take out one demon, and more simply rise up and take their place. This world is descending into sin, and you know it. You can't stop what's coming. All you can do is give in to it. Succumb to evil, embrace it, pledge your loyalty to it while you still can. Because when you fail... your fate will be far worse,\" she said, her voice a sinewy evil. All eyes were on her at this point as she explained how futile their fight was. But Jeff was undeterred. Picking up the discarded cross, he approached the bed.\n\n\"Be gone, demon. Go back to hell where you belong!\" he yelled out, moving in close. Kelsey looked more confused than anything, giving him an odd, unafraid look as he approached. He leaned over her and pushed the cross in close to her. She looked past the cross up into his eyes.\n\n\"But you don't even know my name,\" she whispered, holding his gaze with hers. Before he could react, she summoned some sort of dark, demonic strength, stretching the thick ropes binding her to the bed enough to reach around his back and grab him. Before he could react, she yanked him down and jammed her tongue down his throat.\n\nJeff was completely taken by surprise. It happened too quickly, so he couldn't do anything to stop her, allowing her tongue entrance into his mouth. It slid against his, quickly overwhelming him, dueling with his married tongue and winning. Her plump lips slid against his as they kissed deeply, sending a thrill through him, despite everything. The whole kiss was affecting him to be honest, and he found it a struggle to pull away, both physically and mentally. Her spit slid into his mouth, mixing with his as her open mouth attacked him. It was as if her saliva was filled with dark energy, as if it was pure concentrated sin, and she was forcing him to take it. To swallow that sin and let it course through his veins. And all that sin had a curious effect on him.\n\nIt made his cock rock hard.\n\nFor a moment, he went along with this, as he was taken too off guard to react immediately, too surprised by the pleasurable kiss to realize how wrong it was. But eventually, he realized what he was doing and tried to pull away. Her grip was too tight, though, holding him in place, still forcing the kiss on him. He couldn't get away, until finally, he felt a tug on his shoulders, two separate pairs of hands trying to pull him back, to help escape the demonesses' grip. It took a few moments, but they were finally successful, pulling the husband out of the tight clinch he was in. Him, Alice and Marie fell back to the floor as Kelsey's arms returned to their place over her shoulders, held in place by the ropes that she shouldn't have been able to stretch that far\n\nJeff was in a daze, his head spinning. It was as if he had taken his first sip of a stiff drink, and his head was already spinning. His thoughts were a mess, he couldn't think straight. That kiss had affected him beyond just surprise, and he could practically hear the demoness's laughter in his head at how easily she had lured him in. \n\nHe ran his hand over his face, trying to clear his head. His mouth was slightly swollen from the harsh kiss, and he could still taste the sweet flavor of Kelsey's saliva.\n\n\"Are you okay?\" Alice said, looking down at him. Her face was spinning in his vision, but he shook his head to clear it.\n\n\"Yeah... yeah,\" Jeff said, sitting up. \"I'm... I'm sorry, I didn't mean to,\" he stammered.\n\n\"No. It's not your fault! Don't worry about it. It's hers...\" Alice said, glancing back at Kelsey. She was smiling smugly as she stretched like a kitten on the bed.\n\n\"Yummy,\" she purred. \"That was every bit as good as I thought it'd be.\"\n\nAlice was normally calm and reserved, even in the most dangerous of circumstances, but this made her blood boil. Not only was this an evil demoness possessing this innocent young woman, this was a woman forcing herself on her husband. She saw red. \n\n\"You will get out of that girl, and you will stay away from my husband, and me, and anyone that is good and true!\" Alice called out. \"We will send you back to Hell where you belong!\"\n\n\"Hahaha... none of you are pure.\" Kelsey began. \"Not one of you. That nun, that dull, weak little bitch... she's a coward. She's afraid, in way over her head, and her and her little church are liars who spread lies and false promises. Who act based on fear and deny the truth of this world! She will turn her back on everyone if it saves her own skin. And you... Alice... you're ruled by fear as well. Fear and... jealousy. You know you don't belong with him. You know Jeff's too good for you. You know you're not good enough for a man like him. You're not pretty enough, and trust me, girl-to-girl, you are definitely not. Plus, you have a flabby ass and no tits. You await the day when he realizes this. When he lets you know that what you have isn't enough for him. That he wants a girl with a killer ass. That he wants a girl with huge, jiggling tits! When you catch him in bed with a woman far more worthy of a man of his stature. When he enjoys her way more than he ever enjoyed you...\"\n\nDespite Alice's inner strength and her strong bond with Jeff, these words hit home, hitting in the deepest recesses of her self-conscience. \n\n\"And you, lover,\" Kelsey said, directed at Jeff. \"You find yourself tempted in the way your wife fears. You find yourself drawn to these other women, despite what you tell your wife. Prettier women. Sexier women. Women with juicy, mouth-watering asses and big, soft breasts. You feel lust for these women, and you don't want your wife to know it. And you know someday, you're gonna give in. You're gonna succumb. Admit it!\"\n\n\"No!\" Jeff groaned, still shaken and dizzy. \"It's not true!\" he added, leaning against the dresser in an attempt to hide his stiff cock, still throbbing from that sinful kiss.\n\n\"Oh, your wife does have tits? Are they hiding, because I can't see them,\" Kelsey said, mockingly.\n\n\"Be quiet!\" Jeff said firmly as Alice looked down shamefully.\n\n\"You enjoy that flabby, pathetic ass? Well, I guess I don't blame you after looking at her face...\" Kelsey began.\n\n\"QUIET!\" Jeff screamed, his normally calm, controlled demeanor breaking for a moment. The heat and the pressure of the dim, dark bedroom felt overwhelming. Jeff was starting to sweat. He still felt slightly off, ever since that kiss. He still felt slightly dizzy, and it seemed like his blood was just boiling. Like he was highly combustible, fit to burst. Both Alice and Marie looked at him, startled.\n\n\"Starting to hit close to home, aren't I?\" Kelsey replied. Jeff glanced at his wife and shook his head, letting her know that wasn't the case. And then he looked at Kelsey, and her smug, smirking face. Even though Kelsey had stopped talking, he could still hear her smug laughter at how much she had affected him. She looked content, unafraid. As if she was fearless of what him and Alice and Marie could do to her. As if she didn't need to go anywhere. As if she was exactly where she needed to be.\n\n\"Why are you here? What do you want?\" Jeff asked, through his slight daze. Kelsey studied him for a moment before replying.\n\n\"Oh, Hell's so boring,\" she said with a smirk. \"Sometimes, all a simple demoness like myself wants... is a good man.\"\n\n\"Bull,\" Jeff replied simply. \"Tell me what you're doing here.\" She looked at him, her large, expressive eyes looking up at his. His still showed some of that daze he was in. Hers blazed due to the demoness's presence.\n\n\"There's a war coming, Jeffrey,\" she began. \"The corrupt have walked this Earth and proclaimed their righteousness for too long. Banished out those they didn't agree with. Those who would call them out on their bullshit. Their lies! People who upset their precious order and control. I'm a soldier... a warrior... one of many... and it's an army that won't be stopped...\"\n\nHer eyes burned with heat, and despite how crazy it sounded, Jeff could feel the truth in her words. Kelsey, or the demoness inside her, believed the words she was saying. And for a moment, Jeff could sense the gravity of what she was saying. For a moment, he felt small, like he wandered into somewhere he didn't belong. He felt insignificant, as if suddenly realizing how little he mattered in the grand scheme of things. The moment was left behind quickly, but what was left behind was a small bit of existential dread.\n\n\"Join me, Jeff,\" she stated softly, and for one crazy, fleeting moment, his mind flashed to an image of him and Kelsey in bed, naked, rutting like animals as she spat out pure, hellish filth that only made him fuck her harder. He had no idea where this image came from, but he couldn't shake it. He couldn't help but imagine her naked. Her lithe, teen body. Her gorgeous face. Her large, firm, succulent boobs.\n\nWait!\n\nHer large breasts?\n\nWith a jolt, he turned back to face his wife, who together with Marie, was consulting through their various books and journals, trying to figure out a plan of attack.\n\nLooking around, he found what he was looking for. The photos Mrs. Cooper had given them. Holding it up and comparing it to the girl on the bed, his answer was confirmed. \n\n\"Look!\" he said excitedly, pointing to the picture, showing it to the other two women. \"Look at this, look at her, and tell me the difference.\" The two women studied it for a moment.\n\n\"I don't see anything...\" Marie said, frustrating Jeff. Alice was about to speak when she stopped herself, noticing something.\n\n\"Her... boobs?\" Alice asked.\n\n\"Yes. They were not as big as that when we walked in here,\" he whispered. \"They've grown, like, three sizes since we got in here.\" Alice looked up at him, gauging whether to ask why her husband noticed such things. He simply shrugged his shoulders. \n\n\"Just... I mean... we all would have noticed those when we walked in,\" he stated. \n\nIt was true.\n\nAs all three looked at the girl on the bed, her suddenly large breasts were very noticeable. She had gone from having a flat chest to having what looked like D-cups. They strained against the thin nightdress she had on, their perfectly round, smooth flesh molding against it. \n\n\"She can transform her body! Oh, that limits it down!\" Alice called out, too excited to contain herself, allowing Kelsey to catch on.\n\n\"UHHH! Finally, you noticed!\" she said with a smirk. \"At least I don't have to be subtle about it anymore.\" Then, with all three of them watching, her boobs inflated more, like balloons connected to tanks of helium. They expanded outward to obscene proportions, still full and firm, way too large for her frame, jiggling lusciously with every small shift she made. Her stiff nipples were evident beneath the thin material, which was stretched to a point where it was dangerously close to being threadbare. Her boobs were obscenely massive now, and despite everything, both the nun and the married couple were transfixed, watching this inhuman yet erotic act. \n\n\"There we go,\" Kelsey muttered to herself, looking down at her now massive tits. The dress had been conservative on her once slim frame, but now, with her sinfully enhanced frame, it looked indecent, showing off a cavern of luscious cleavage as her fleshy breasts poured out from beneath. Kelsey smiled, satisfied, before looking at the shocked people in front of her. \"I've worked wonders on her ass as well, but that's hard to see right now. If you want to check out the handiwork, you'd have to toss me around, flip up my dress, and take a peek,\" she teased, raising her eyebrows.\n\n\"Here! Here!\" Alice said, excitedly pointing. \"Mergelin! Demoness tease with body altering properties! That's it! That's who she is!\" All of them turned to look at Kelsey, but she seemed unaffected.\n\n\"Mergelin alters her hosts because she's a fat-ass, and the bodies have to alter themselves to contain all that blubber. Keep trying, you fucking moron!\" Kelsey called out. Alice scowled and kept searching for an answer. \n\n\"Marie, my dear...\" Kelsey began, turning her attention back to the nun, her tone sickly sweet. \"Would you mind loosening these silly ropes? I would like to sex up the handsome man over there, and it would really help if I could get rid of these little ropes first...\"\n\n\"W-w-what?\" Sister Marie stammered. \"Why would I do that, demon?\" Kelsey rolled her eyes.\n\n\"Because you know your side is losing, and you're too weak to go down with a sinking ship.\" Kelsey stated. \"You're a coward, Marie. You are weak. You are nothing. You can't stop what's coming. You see what I can do, now. You see how powerful I am. If you help me now, this can end well for you. So... how about it? Help me now, and you will be spared. I can give you so much, everything you ever wanted...\"\n\n\"Q-q-quiet, demon,\" Marie replied, weakly. \n\n\"How about you, baby?\" Kelsey asked, turning back to Jeff. \"Do you mind?\" she asked, gesturing towards her tied wrists.\n\n\"No!\" he replied simply. For a moment, he just looked at her as she looked back at him. It felt wrong, it was wrong, but... God, Kelsey looked sexy right now. Stretched out, her lithe body in that tight, sweat-soaked dress. Most of her long, firm legs exposed. Her pretty, innocent face, now tinged with evil, a look that really worked for her. Her knowing, evil smirk was a look that was both terrifying and ball-churningly sexy. And those boobs. God, you could lose yourself in those tits. They looked so massive! And soft. That cleavage was mouth-watering. They were way better than Alice's unimpressive pair. She was better looking than his wife too.",
        "Wait... what? He shook his head. What was he thinking? That wasn't him. Honest. It didn't feel like him thinking those thoughts. He didn't think like that. Ever! First, that flash of fantasy from before, now this. His mind drifting into thoughts of sex? He was suddenly dizzy again. What was going on with him? \n\nHe turned back to face his wife and the jittery nun, sweat on his brow.\n\n\"Zephrys... no, she's not THAT powerful... Kalanda... no, she's not known for seduction... Vesper... I don't think so... Siyex... no, she can't transform a body...\" Alice said, studying her notes with fervor, looking for answers. \n\n\"C'MON JEFF! I'M FUCKING HORNY! LET'S DO THIS THING NOW!\" Kelsey screamed out, squirming in place, seeking out attention. Still shaken, Jeff looked at her, as she had a displeased expression on her face. But Jeff was undeterred, trying to think up any answers as to how to stop this demoness. He turned back to his wife and the nun as they were discussing how to stop the being possessing Kelsey. But before he could speak...\n\n\"Does this change your mind?\" Kelsey asked. Pointing her fingers at her chest like a gun, her dress began to tear from the chest down, as if by some unseen blade. Her now huge boobs began to pour outward against the newly formed cut, eager to escape. The material began to rip apart, right down the middle, until it reached the bottom of the dress, between her legs. With another artful dance of her fingers in the air, the dress was pulled apart from the newly-formed seam, exposing her naked body to Jeff and the others.\n\nEveryone stopped what they were doing.\n\nJeff was transfixed. She was... perfect. Yes, she was possessed by a demoness who was pure, concentrated evil, and yes, he was married, but that didn't change the fact that the sight she was showing him was fucking sexy. Her long bare legs. Her cute, small, tight pussy, adorned with a small, sexy tuft of dark hair. Her long, flat, toned belly. And those tits... good lord, those tits. They looked even more massive exposed like this than they did in the dress. Two massive, rippling mounds of succulent breast-flesh, enhanced by evil to an almost obscene size, jiggling hypnotically with each movement she made, perfectly tanned like the rest of her, capped by two hard twisted nipples, calling out to him, begging for his mouth. She stayed there, raised up on her elbows slightly, proudly displaying herself. And despite himself, he couldn't stop gazing, admiring what he was seeing. \n\n\"Jesus...\" Alice admitted, in awe of the hot-bodied teen. She knew it was enhanced by evil, but... damn. \n\n\"My child!\" Marie called out. \"Some modesty! Cover yourself! Don't let this demon shame you like this!\"\n\n\"I ain't ashamed of nothing, darling,\" Kelsey boasted, laughing insanely. \n\n'And she has no reason to be.' These admiring words suddenly arose in Jeff's mind. And it was true. She had such a hot body, there was no shame displaying it like this, Jeff thought. Such perfect, mouth-watering tits. God, what he wouldn't give to feel them. And what he would give to fuck someone that hot. Wait... what was he thinking?\n\nWhat was going on with him?\n\nNone of them said it, but all of them could feel that the pressure had been turned up tenfold by this brazen display. All of them were on edge. All of them were sweating a bit more. All of them could feel that extra bit of nerves. That's what Jeff wrote these stray thoughts off as, because it certainly wasn't his normal behavior. \n\n\"Alice, we need to find something...\" he explained, a bit confused and shaken by this shocking view.\n\n\"I'm trying!\" Alice said.\n\n\"I know, it's just... we need to stop her,\" Jeff stated. The reason for his panic was that he could feel himself becoming transfixed. Too transfixed. His eyes hadn't left Kelsey's hot naked body. He wanted to look away, but some force inside him was preventing him from doing so. Those boobs were so huge... so perfect. God, she was so hot! SO much hotter than Alice.\n\n'You should fuck her,' he heard in soft, almost imperceptible feminine whisper.\n\nJeff jumped, and turned around, looking for the source of these words. Finding nothing, he was even more shaken. He swore he heard something, but... there was nothing there.\n\nNo! What was going on? Why did he keep thinking these things? Was he losing his mind? Was he going crazy? Or were the dark forces at work here getting stronger. He didn't know. But this was well beyond what he had ever experienced in this line of work. Gulping deeply, he realized he was dealing with something far stronger than he initially thought. Far stronger. \n\nHis eyes again fell to Kelsey, posing on her bed, naked and tied up, completely transformed from the innocent teenager she started off as, now looking like an image from a BDSM lover's dream. Tied up. Naked. Sexy. Just begging for it. He couldn't explain, but some force inside him was compelling him to keep staring, compelling him to step closer, despite knowing better.\n\n'Go to her,' that mystery feminine voice said, sounding vaguely familiar.\n\n'Take her.'\n\n'You deserve someone that sexy.'\n\n\"That's it baby, come to me,\" Kelsey beckoned with silky evil, and despite knowing better, and despite knowing that the mystery voice was beckoning him towards his doom, he couldn't stop himself from walking closer to her.\n\n'Untie her...'\n\n'Release her...'\n\n'You want her...'\n\nJeff kept approaching the bed, and the voice in his ear kept at it. \n\n'It would feel so good...'\n\n'Take her right in front of your...'\n\nThe words stopped the moment his eyes landed on the discarded cross on the floor. It must have ended up there during that nasty kiss. When her smooth, silky tongue was against his... anyway, the cross. It was right there, in front of him. That's what he needed. This was the way out. That's why he was moving forward. Not for her, but for this. To grab the cross, and draw that demon out of her when the time came. \n\nStepping forward, with a still uncomfortably stiff cock, he reached the end of the bed. His eyes returning to the naked young woman, he kneeled down to get his hand on the cross.\n\n\"That's it, baby, kneel,\" Kelsey said with a confident smirk. \"Perfect...\" she purred as he fell to one knee. Keeping his eyes on her, his hand reached out blindly towards the cross.\n\n'Don't do it...' the voice whispered, its feminine tone harder, dripping with evil. A demoness without the veil. Why did it sound familiar? No... no, it didn't matter. Jeff's hand was undeterred, ignoring the voice, and only moved closer to its intended target.\n\n'Forsake it... it lies...'\n\n'Join us in sin!'\n\n'Accept your place!' the voice commanded harshly.\n\nAs he reached around blindly, his eyes never left the naked young woman, looking over her massive peaks to see her bite her lip with pleasure. As his hand got within millimeters of the cross, she spoke up. \n\n\"It's time to be baptized anew!\" Kelsey announced. Again summoning that demon strength inside her, she reached down, again somehow stretching that rope beyond its limits, reaching down between her legs to press against her pussy. She began rubbing her pussy furiously, her bare ass rising from the bed. Before he could react, her body flexed and a blast of her sweet, divine girl-cum squirted from her pussy. The first blast of her delicious juice hit Jeff in the face, some of it landing across his tongue. He fell back due to shock, and as he did so, his hand slid across some heated object on the ground, burning his fingers. \n\nBut Kelsey was not done.\n\n\"Aaaaahhhhh! Fuck! Fuck!\" she squealed out, still furiously rubbing herself as more sweet juice sprayed from her pussy. It was a forceful stream of girl-cum, somehow spraying across the room. The first strong spray landed right on Sister Marie, both on her face and her chest, knocking her back in disgust. Before Alice could maneuver away, Kelsey gave her the same treatment, spraying a stream of her concentrated girl-cum right at Jeff's wife, landing all over her front and her all-important journal. \n\n\"Oh, Jesus. Fucking gross!\" Alice complained, angry and shocked as she tried to move out of the way.\n\n\"AAAHHHH! FUCK! GGUUUUHHHHH! YYYYYEEEESSSS!\" Kelsey groaned out, violently rubbing her cunt, still squirting her cum, grunting savagely, the demoness inside her bellowing an inhuman squeal of delight. More juice landed on Jeff as Kelsey thoroughly soaked the bed and her floor with her tasty juices. She finally collapsed to the bed, temporarily sated, the rope holding her wrist regaining its strength, pulling her arm back into place over her shoulder. She gasped for breath, a satisfied smile on her face. For a moment, a pregnant silence hung in the room.\n\n\"Oh my God!\" Alice said, with disgust.\n\n\"Godless, heathen slut!\" Marie called out, frustrated and upset, trying her best through her disgust to wipe the young woman's sinful juices from her.\n\nJeff unconsciously licked his lips, her taste as heavenly as he imagined. He did this without thought, and it only added to the haze he felt. Rising to his feet, he was again reminded of the burn on his hand. He looked down to see what caused it, and the only item he saw on the floor was the discarded cross. Wait, how could a cross burn him... unless... unless...\n\nHe was reminded of the passionate kiss he shared with Kelsey, and how she made him swallow her spit, sending him into a haze. And now, her juices, he had swallowed some of that too. Could it be... could that stuff...? Would it explain everything? The haze? The voice in his head? He wasn't possessed, but something was inside him. Clouding his judgment. Trying to wear him down, send him down the wrong path.\n\nKelsey watched him through her pleasured haze. Watched him putting the pieces together. And in that moment of realization, she acted.\n\n\"Alice! She has me! The demon! I'm compromised!\" He stated, but as he did, Kelsey acted. Moving with the gracefulness of a dancer, she sat up and summoned the strength of the demoness once more, easily stretching the ropes around her wrists and ankles, sitting up, and pointing her open palm at Sister Marie.\n\nWith a shockwave like blast, Sister Marie was thrown into the wall violently, knocking her unconscious. Kelsey turned her attention to Alice, using her unholy demoness forces to lift her up against the wall, choking her. Her feet dangled in the air as she struggled for breath. \n\nBut then Jeff acted.\n\nDespite his haze and inner turmoil, he tackled Kelsey, throwing her back down to the bed. They wrestled for control. Even though he was a grown man and she a teenage girl, her demoness strength made it a true battle. Even though, after what he had seen her do, she should have the advantage, he was somehow able to gain control, grabbing both her wrists in one hand and slamming them to the bed, with him on top of her, looking down at her. The ropes binding her returned to their normal state, still holding her in place, her demon forces no longer stretching them. He glanced behind him to see his wife still in the air, still struggling.\n\n\"Put her down, demon!\" Jeff growled. Despite her smug smirk, she obeyed, letting Alice drop to the floor. He looked back at her, dazed, unconscious, but still breathing. He looked down at the demon-possessed girl, his eyes blazing. \"Unhand this girl, demon!\" Jeff commanded.\n\n\"You first,\" she purred, looking down. And that was when he realized the truth. While he used one hand to hold her wrists down against the bed, his other was very busy. To be more specific, his large, open palm was currently gripping one of Kelsey's large, firm breasts. Somehow, during the struggle, his hand had ended up on her chest, without thought. Looking down at what he was doing, he was truly surprised, but he couldn't pull his hand away. Without letting himself think about what he was doing, his fingers squeezed the soft, succulent flesh, her hard nipple pressing into his palm.\n\n'So soft...' the voice said, returning to him.\n\n'So smooth...'\n\n'So God damned perfect...'\n\nHis head finally clearing for just a moment, his greater judgment won out, and he was somehow able to remove his hand from the perfect teenage breast, placing it on the bed next to her. He only then realized his precarious position, him on top of this naked young woman, holding her in place. Her naked body was pressed up against his clothed front. He looked down at her face and watched her bite her lip in pleasure. He moved to rise off of her, only to feel her stretch the ropes around her ankles as she wrapped her legs around him, clutching them tight, holding him against her.\n\n\"Mmm... fuck,\" she moaned softly. \"This is where you belong, baby...\" she whispered, grinding her wet pussy against his bulging, cloth covered cock. \n\n\"Oh...\" he groaned, feeling the pressure against his straining dick.\n\n'Do it...' the voice in his head urged.\n\n'It would feel so good...'\n\n'Take it out... and slide it in...'\n\n'She wants it so bad...'\n\nThe feminine whisper had softened from its demonic timbre, sounding more feminine and seductive, taunting him once more, and unfortunately for him, it was effective. It had lulled him into a daze, allowing Kelsey to act. His eyes closed in pleasure as she worked her magic, grinding against his throbbing meat. His blood boiled with heat, and every nerve ending was shaking with need as she writhed against him.\n\nJeff couldn't think straight. The young woman was driving him crazy with dark desires. He strained against her, trying to resist the pleasures she was bringing him, but he was failing. As she humped against him, he began to do the same, humping down into her, his cock desperate to be inside her, despite everything. His body was acting against his brain, disobediently, trying to aid in his own downfall. As he ground against her, his grip on her wrists loosened, as her fingers toyed with his palm, teasing him.\n\n'Touch her...' the voice whispered.\n\n''Feel me...'' Kelsey purred.\n\n'Take her...'\n\n''Fuck me...''\n\nTheir voices were indistinguishable. Jeff groaned from his throat in pleasure, as his free hand slowly began to move back towards her. \n\n'Pussy...'\n\n''Sex...''\n\n'Tits...'\n\n''Fuck...''\n\nStill in a daze, he found the strength to open his eyes, attempting to resist the pleasure she was bringing him. His hand stopped in its tracks as he lifted himself above her again. He looked down at the young woman, her big tits jiggling softly. Her nipples calling out to him. His eyes looked into hers. And despite her innocent features, he saw no purity there. Her face was a mask of animal lust, and her eyes were blazing with fire. For a moment, they glowed a vibrant red, the mark of the demon inside her. A jolt of energy coursed through Jeff at this. He tried to deny his raw physical desire for her, and let his better judgment win out, but it was coming at a struggle. Her lust-inspiring naked body was driving him crazy. The voice inside him was wearing him down, rendering all excuses meaningless. His wife... his beliefs... his better judgment... it was all failing him. These false shields crumbling in the face of pure, intoxicating sin. He knew the true evil he was facing down, and he was quickly crumbling. Kelsey smirked and guided his eyes down with her own, making him stare at her massive, sin-enhanced breasts. They looked so big... so soft. So perfect. His whole world was consumed by those massive, firm tits. So much better than Alice's pathetic pair. So much better than Alice altogether. Kelsey was better than his wife in every way. Prettier. Hotter. Sexier. Sure, she was possessed by a being of pure evil, but she wore it so fucking well. She looked so Goddamn good, way better than his wife.\n\n''Fuck me!\" Kelsey whispered, her voice resonating with the voice in his head, saying the same thing. They sounded identical. They said the same words. The voice in his head, the voice coming from Kelsey's mouth... it was the same.\n\nThe demoness was powerful. Very powerful. It had gotten into his head more deeply than he could have imagined, urging him along. She was in Kelsey's head, and his own. He wanted to explain this sudden revelation, but his wife was unconscious. All he could do was lie there, in a daze, realizing how deeply he was in trouble. How deep in the demoness's clutches he was. And the worst thing was...\n\nThe voice sounded so good. So right. Why did it sound so right?\n\nWas there any part of him that could resist? She had won over his body, and was slowly winning over his mind. Would the smart, strong, moral, man inside him win out? Or would his better urges burst through, as they always did? Would this be the moment Jeff unveils his master plan and stops...\n\nThese thoughts were quickly forgotten as Jeff quickly brought his mouth back down to hers, their lips meeting again in a fiery kiss. His tongue dove straight into her mouth. Their open mouths locked deeply together as they furiously made out, fully reveling in sin now. He took her evil, sin-infused saliva into his mouth willingly. Their mouths smacked together as they shared a wet nasty kiss. This went on for a while, so lost in the moment they were. Their mouths finally parted as his lips moved to her lithe, taut neck, kissing and sucking the smooth flesh there savagely. As he did, Kelsey's lips kissed along his jaw before moving to his ear, biting his earlobe, making him groan in pleasure. Releasing her grip on his ear, she whispered.\n\n\"Untie me, baby... untie me so we can fuck...\" Kelsey said savagely. Without second thought, Jeff reached his free hand to join the other at her wrists. These bindings, although they had been tested by her demonic strength, they had held her in place, preventing her from having free reign.\n\nUntil now.\n\nWith no hesitation, Jeff hands took to the knots, deftly undoing the tight bindings, until he finally undid the ropes there. Her slim wrists danced free from the ropes as he moved down to her ankles, untying her bindings almost in panic. Fully freeing her, he moved back up the bed towards her as she sat up.\n\nTheir mouths collided again as she wrapped her arms around his neck, making out deeply as they fell back to the bed. Jeff humped against her lewdly as she wrapped her legs around his butt and humped back into him. This went on for a few moments before her hands traveled between them.\n\n\"I want your clothes off, baby,\" Kelsey moaned softly. \"I want to feel you.\"\n\nIn fervor, she grabbed the hem of his shirt and pulled it up, exposing Jeff's fit, bare chest. She tossed the shirt to the side as he reached down to undo his belt. His belt splayed open as he deftly undid his pants, moving to lower them.\n\nNo more foreplay was gonna happen here. Both of them were too far gone. Her, possessed completely by the evil demoness, and him, his judgment clouded by the demoness's evil influence, had sent them both down a path where there was only one possible outcome.\n\nKelsey and Jeff were gonna fuck.\n\nIn a frenzied pace, Jeff tugged down his pants and boxers, revealing his stiff, bulging married cock to Kelsey's excited eyes, which were wide in disbelief. Nine and a half inches in length, with a sizable, prominent tip, and thick enough to where she probably wouldn't be able to fully grip it's width with her nimble hand. And attached to it were two large round and swollen balls, each filled to the brim with thick cum that he was dying to give to her.\n\nKelsey herself had only seen one penis in her life, that of her boyfriend's. But this was a cock. A real man's cock. A fat, meaty, bulging, throbbing cock. To her young eyes, it looked massive, which it was. And even though the demoness was very, uh... experienced, even she had to admit she was impressed. How could a man like him, on the side of the angels, have a cock so perfectly built for sinful delights?\n\nAnd she wouldn't have to wait long to experience those delights.",
        "Fully removing his pants, leaving him completely naked, he moved above her slightly, his weighty hanging cock guiding the way. He moved forward, his swollen eager cockhead swaying slightly, coated with his pre-cum, until the tip pressed against the soft lips of her plump, youthful pussy. With his intelligence dulled by the sin flowing through his veins, he looked up at her gorgeous face for guidance. Biting her plump lower lip sinfully, Kelsey wrapped her arms around his back, her legs around his butt, and pulled him forward. \n\nThe tip of Jeff's meaty cock entered Kelsey's waiting cunt.\n\n\"Ahhhh!\" Kelsey moaned out.\n\n\"Jesus!\" Jeff groaned. \"So fucking tight!\"\n\nKelsey tightened her grip around him and pulled him further, forcing more of his steel-hard prick inside her.\n\nSome small part of him, the part screaming out to stop this madness, the part that remembered that he was married to a woman he loved, the part that had been obscured by the cloud of sin in his mind, tried to deny what he was feeling. But even that part of him, despite everything, couldn't deny in the slightest, how fucking good Kelsey's cunt felt. Yeah, this was wrong and fucked up, but God, did it feel good. He didn't know if it was due to her 18-years of age, or the demoness inside her, but her cunt was tighter and wetter than his wife's vagina ever was and it squeezed every bare inch of his unprotected cock as it entered inside her. This was a cunt built to pleasure cock. To take a big, fat dick and make it feel really, really good. \n\nAnd that's exactly what it was doing. \n\nDespite her incredible tightness, she was so wet and ready that Jeff's impressive cock was able to slide smoothly inside her, all the way up to the balls. The tight walls of her teenage cunt were gripping every inch of married dick inside her, squeezing it, massaging it, pleasuring it, driving him crazy.\n\n\"Uhh...\" he groaned, grinding against her as she squeezed her pussy around him.\n\n\"This is what you wanted from the beginning!\" Kelsey moaned out, grinding against him, clutching him up tight. \"You wanted this pussy from the start!\"\n\n\"Guhhh... fuck!\" he moaned, wincing with pleasure as she worked her sinfully tight pussy around his swollen prick, trying to coax a thunderous load from his balls.\n\n\"You see what I can give to you?\" she moaned hotly in his ear. \"Do you see how good it is on my side?\"\n\n\"Oh my God!\" he sighed, moaning into her neck. This was... amazing! It had never felt this good. Nothing had ever made his cock feel this good. She was driving him crazy, squeezing his bulging cock over and over again.\n\n\"You see now?\" she asked, still slowly grinding her tight pussy around his hard cock. \"We didn't come here to hurt men like you. We just want to make you feel REALLY good!\" she giggled, arms wrapped tightly around his neck. She couldn't hide the insidious smile crossing her lips. She wasn't lying to him. Her and her sisterhood were immoral pleasure seekers who sought to share their dark, depraved, lusty desires with the best of men. What she wasn't saying was all the bad things they had planned. All the bad things they wanted to get away with while all these good men were... distracted... with the carnal desires they offered.\n\nThe world would belong to them. Her sisterhood. Those who reveled in dark magic. The demonesses and the witches and others of their ilk. Those who embraced the delights of sin. The world already pulsed with the blood flow of dark magic, just beneath the surface. Those on the other side tried to deny it, to suppress it, to act like it wasn't there. They spread their lies and acted above it all, when instead they were as corrupt as the rest. At least with the sisterhood of dark magic, they would be honest with their evil intentions.\n\nThey would control the world. Exert their influence to make the world a fitting place for women like them. Cull out the liars and the weak. The unworthy men and inferior women. Eliminate all who stood in their way. The world would burn and a better one would rise from the ashes, a perfect place for their kind. And through it all, the best of men, the best hope for humanity, would fill their evil cunts full of sperm and give them the pleasure they so richly deserved. \n\nEnergized by her plans coming together, the demon inside Kelsey acted. Summoning the strength of her true self, she rolled them both over. It was a strange sight, this taut, fit 18-year-old with luscious curves overwhelming a full grown adult man, but she did it with ease. Now she was on top of him, still squeezing her juicy pussy around his straining shaft. Putting her hands on his chest, she pushed herself up.\n\n\"We were meant for this baby,\" Kelsey stated, smirking as she looked down at the handsome, fit man beneath her. \"We've been watching you for awhile... you fought for so long against us. Tried to deny us our rightful place. Isn't it SO much better to just give in? Just join us instead?\"\n\n\"Oh...\" he groaned. There was still a part of him trying to deny all that she said, but that voice inside him was getting quieter and quieter. And a new voice, that other voice, the mystery voice, was only getting louder. It was speaking to his basest urges, trying to get him to go along with Kelsey's dark designs. And that voice was winning.\n\nHis wife was still unconscious, and he hadn't even checked on her. And he was currently balls-deep in a demon-possessed teen. All these things should force him off this bed right now. But all he could do was look up and stare at those tits!\n\nHoly shit! They looked massive! Huge and soft and succulent. Perfectly round and unbelievably firm. Mouth-wateringly smooth. They looked amazingly heavy and fleshy and bouncy, jiggling with every small move she made, begging for a strong pair of hands to grab them. They were taking the fight out of him, with every heavenly sway.\n\n'Touch them...'\n\nHe wanted to.\n\n'Big Breasts...'\n\nSo big.\n\n'You like them...'\n\nThey are nice.\n\n'You love them...'\n\nThey are VERY nice.\n\n'You love girls with big tits, don't you?'\n\nThey are especially hot.\n\n'So sexy...'\n\nVery sexy.\n\n'Feel them...'\n\nHe wanted to.\n\n'So soft...'\n\nThey do look amazingly soft.\n\n'Your wife's boobs don't compare...'\n\nThey really don't.\n\n'Your wife is nothing compared to her...'\n\nKelsey has his wife beat in every way.\n\n'Squeeze them...'\n\nHe REALLY wanted to.\n\n'They must feel SO good...'\n\nThey must.\n\n'Don't fight it...'\n\nHe didn't want to.\n\n'Don't fight it...'\n\nHer breasts did look amazing.\n\n'Don't fight it...'\n\nSo big.\n\n'Don't fight it...'\n\nSo soft.\n\n'Don't fight it...'\n\nSo perfect.\n\n'Don't fight it...'\n\nWould it be so bad?\n\n'Don't fight it...'\n\nOne touch wouldn't hurt?\n\n'Don't fight it...'\n\nAll he had to do was give in.\n\n'Don't fight it...'\n\nHe couldn't.\n\nHe was so far gone. He could barely muster up a reason not to just give in. Going forward with Kelsey just seemed so alluring. Going backwards and rejoining his wife seemed so dull in comparison. He had gone so far already. Was it so much worse to go just a little farther?\n\nSo Jeff reached up to shamelessly palm Kelsey's mammoth breasts.\n\n\"Ahhh! That's it!\" Kelsey moaned as she felt the married man's hands grope her huge tits. She felt his big, strong hands against her smooth, soft skin, groping her. His large fingers dug into the soft, succulent flesh, amazed by the softness. His first feel of her chest had almost been beyond thought, an instinctual act that he didn't even realize he was doing until it was done. A stray feel in the heat of the moment that got lost in the shuffle of more important things. But now, for the first time, he got to fully appreciate them. He got to deliberately feel these perfect boobs for the first time, worshipping them with his palms, squeezing them, running his fingers across the soft pliant skin.\n\n\"Feel them, hon...\" Kelsey moaned, rewarding him for feeling her up by squeezing her cunt around his throbbing shaft. Her copious juices leaking along his shaft, marinating his cock, soaking his balls in her sinful girl-cum. \"Don't they feel good? Yeah, that's it, keep squeezing them. You like them, baby? You like my big tits?\"\n\n\"Jesus...\" Jeff moaned, his cock twitching in pleasure.\n\n\"Uh uh, he's got nothing to do it with it, haha...\" Kelsey laughed before bringing her hands over his, helping him dig in deeper on her huge boobs. \"It's not halos and sunshine filling your hands right now! It's sin... evil... lust... darkness... that's what made these tits you love so fucking big!\" she said, gyrating on his eager prick.\n\n\"Oh!\" Jeff moaned beneath her.\n\n\"I'm not hurting this poor girl...\" the demon inside Kelsey said. \"I'm just bringing out the best in her. Put a little sin in her veins... make her the woman she was meant to be. Not the nice, sweet, church-going girl that takes joy from helping the less fortunate. No! Ugh! Boring! No, I'm making the hot, sexy, evil little seductress she was always meant to be. Here... let me show you what she's capable of now.\"\n\nUsing her toned, fit thighs, she raised herself up, revealing his shiny, swollen cock to them both again, raising up till only the tip was lodged in her plump young pussy. She paused for just a moment before slamming herself down, their bodies colliding roughly.\n\n\"Oh! Shit!\" Jeff moaned. Kelsey repeated the motion, again and again, working up into a good pace as she began riding Jeff's hard married cock. Her newly big, sin-infused tits bounced in his palms.\n\n\"You like that!? You like that fucking cunt!?\" Kelsey spat out as she worked herself up, riding him faster.\n\n\"Fuck...\" Jeff sighed. He glanced down at where their genitals were conjoined. Her tight, plump lips stretched to the max around his thick, pulsing shaft, gripping it and pleasuring him with every bounce. It felt so good! The good voice inside him, the one trying to defend him against this demoness's vile ways, to preserve the good man inside him, that voice was getting snuffed out. Lost beyond the overwhelming pleasure she was making him feel. It was like the nagging voice of his wife, trying to prevent him from enjoying the insane pleasure this young, vibrant woman was bringing him. Trying to ruin his fun. It was so much easier to just go along with Kelsey. Trying to resist this pleasure and deny how good it felt was impossible. He was in too deep now. It felt too good. Her tits were too big to deny. He was in her clutches, and there was no escape unless the demoness let him.\n\n\"Do you love it!? Fuck! Tell me! Do you love fucking me!?\" Kelsey asked, slamming herself down his huge pole as he continued groping her big tits.\n\n\"Gah... so good!\" he groaned out, unable to deny the truth. This was the best sex of his life. He had never felt this good. His cock was going crazy, and it was only by pure miracle that he hadn't cum yet.\n\nAnd they were just getting started.\n\n\"Shit! Here...\" she said, pausing her bouncing momentarily to lean forward, her massive, smooth, silky tits now hanging above his face, her hard throbbing nipples calling to him. \"Suck my tits, baby! I know you've wanted to from the start! Suck on my nipples, honey, and we'll be together forever! Please!\" she moaned. \n\nThere was no hesitation. She had driven him so crazy with her big tits and her tight cunt that he couldn't think straight. He was simply going onward based on the implied promise of more pleasure. A greater pleasure.\n\nAnd more pleasure he was gonna get.\n\nJeff leaned up and attached his open mouth to one of her throbbing nipples, forming a tight seal around the nub.\n\n\"Ahhh! Fuck! Yes!\" Kelsey screamed out. Jeff sucked on the nipple, lost in the sensation. He teased the hard nub with his tongue, circling around her hard nipple as his open mouth attacked her big breast. \"FUCK! Bite my nipple, baby, bite it! YES!\" she squealed as the married man bit down lightly on her rubbery nipple, sending a jolt of pleasure through her. She leaned down, molding her huge breast against his face, reaching up to squeeze it as his mouth stayed attached to her nipple. \"Open up, baby... swallow this down.\"\n\nJeff's eyes went wide as a surge of liquid hit the back of his throat. His mind was so addled that it took him a moment to realize she was squirting milk into his mouth. He jerked back slightly at this realization, but she held him in place, making sure he didn't go anywhere.\n\n\"Take it, baby,\" she moaned out. \"Take my milk. Swallow it down. Taste it! Savor it! You know you want to.\"\n\nDespite his initial shock, he couldn't help but get into the depraved act. He let the warm liquid pool in his mouth, allowing him to taste it. The milk was sweet, very sweet, but it was tinged with something he couldn't place. \n\n\"That's it... swallow my milk.\" Kelsey urged. \"The milk of the demoness. Hellfire. Lust. Sin. That it's what it's brimming with. Evil. Swallow it all down and let it fill you completely. Once you swallow it down, it will be part of you forever. Drink it in and we'll be connected for eternity. Taste it and I'll always be with you. Your blood will boil with delicious sin!\"\n\nAt first, the words she was saying made that now small voice inside him lash out, eager to free his mouth from the corrupting influence of her demonic milk. But the problem was that it tasted so good. Really, REALLY good. The flavor of sin was amazing, and he couldn't get enough, swallowing it down without hesitation.\n\n\"You are so good at this!\" Kelsey moaned, rewarding his acceptance by squeezing her cunt around his bloated shaft as she cradled his head against her breast. He kept at it, sucking at her hard nipple, gulping down the sinful liquid from her stiff teat. He finally was able to pull his mouth from her tit, only due to the need for breath, but the breath was short-lived, as he feverishly attacked her other nipple with the same fervor he did the first, taking milk from this udder as well. And with each gulp of the evil fluid, that voice inside him objecting to all of this getting quieter and quieter, until it couldn't be heard at all. \n\nKnowing he didn't need the help anymore, Kelsey resumed bouncing on his bloated cock, riding his full length smoothly as he kept his mouth attached to her huge breast.\n\nBut even now that his objections were all but erased, where that nagging voice of his wife had been suppressed within him, the real thing had reawakened.\n\nAlice stirred from her unconscious state. It took her a moment to realize where she was, on the floor of Kelsey Cooper's bedroom. As she remembered what had happened to her, she realized her throat was still slightly swollen by Kelsey's attack. Still a little dizzy, it took her a moment to gather her wits. She looked to the side to see the nun unconscious in the corner. Either that, or she was cowering in fear, but Alice was in such a daze she couldn't tell. And she was also hearing a strange noise that she couldn't quite place. But as she looked around, there was one thing she didn't see.\n\nJeff.\n\nSuddenly in a panic, she moved to her hands and feet before standing up. Her head was still spinning, so it took her a moment to get a clear picture of what was going on. And when it did...\n\n\"What the fuck!\" Alice called out. \n\nIn front of her was the unholy tableau of illicit fucking. Her husband had taken the young woman's place, on his back on the bed, naked. And on top of him was the girl. Kelsey. Naked as well. Riding her husband's cock roughly. \n\n\"Wha... what are you doing?\" she called out, stunned, momentarily forgetting what she was supposed to be doing, watching the 18-year-old's bare ass rising and falling as she fucked Alice's husband.\n\nNeither of the illicit lovers really acknowledged her. If anything, it only energized Kelsey. She sat up, yanking her nipple from his eager mouth, and began riding him harder, slamming down on his married cock, the meaty slaps filling the room.\n\nAlice was stunned by her husband's lack of response. What had happened when she was out? One minute, he's fighting against this demoness. The next, he's fucking her!? What the fuck had happened? Jeff would never do this. No, never. That means... what did the demon do to him? She had already possessed Kelsey. Maybe she had used her unholy influence on him too? Clouded his mind with her twisted manners, corrupting his good spirit. That had to be it. It had to be.\n\nHe looked unrecognizable. His face was twisted in masculine lust as he was ridden by this possessed young woman. She watched his hands reach up to embrace her massive breasts, squeezing them lustfully as they bounced up and down with their savage fucking. And his eyes... they glowed a dull red. This was confirmation to Alice. She was right! The demoness's influence had spread to Jeff somehow. The true him would never do this. Only through her trickery could she convince him to do this. This only spurred her into action more, knowing the only way to end this was to cast that demon back from whence it came, to rescue her husband and the poor possessed girl.\n\nWith a purpose, Alice moved to approach the bed, but Kelsey, without even a glance, extended her hand towards Alice, using her dark magic to take control of Alice, slamming her body back against the wall and holding her there.\n\n\"You see that, baby?\" Kelsey snarled, looking down at Jeff. \"Your dumb cunt wife's awake. Yes! Fuck! Do you think we should stop? Or do you just want to keep fucking me?\"\n\nJeff's eyes never left Kelsey's gorgeous face. His hands never stopped playing with her massive breasts. He didn't even give one glance over to his wife. He just kept driving up into Kelsey, fucking her. Alice couldn't move a muscle as she was frozen in place, and she couldn't call out to him either. All she could do was watch and listen.\n\n\"Tell me!\" Kelsey demanded. \"Tell me that you don't care about your dumb cunt wife! Say it!\" Alice watched, hoping he would fight back.\n\n\"I don't care about her!\" Jeff seethed, his eyes never leaving Kelsey. \n\n\"No! Say it! Say you don't care about your dumb CUNT wife!\" Kelsey demanded, riding his cock harder. \"Say it to make me happy! Say it so I can cum!\" \n\nJeff was so far gone at this point. He had tunnel vision, only focused on Kelsey and her delicious body. Her sinfully sexy words. Nothing else mattered. Only Kelsey. Only pleasure. So he was willing to do anything for her at this point. Tell her whatever she wanted to hear, to ensure them both the highest level of pleasure.\n\n\"I don't care about my cunt wife!\" Jeff grunted out, these words a slap in the face to Alice. Even though she knew he had been compromised by the demoness, it still hurt to hear him say this. \"I only care about you!\" Jeff added, his eyes only on Kelsey.\n\n\"Fuck!\" Kelsey moaned out, a ripple of lust coursing through her. She closed her eyes and bit her lip as she shivered. When her eyes opened, they were blazing with an unnerving red glow. She glanced over at Alice, her lips twisted in a hungry smile. \"Do you love me, baby?\" Kelsey asked, still writhing on Jeff's married dick, his palms still greedily squeezing her big tits. \n\n\"Yes... I love you!\" Jeff groaned, driving up into her harder.\n\n\"You love me more than your dreary, ugly little cunt of a wife?\" Kelsey asked, her lips twisted in an evil grin as she stared at Alice as she fucked her husband into submission.\n\n\"Yes! She's nothing compared to you!\" Jeff moaned out. \"You're hotter... fuck... younger... God damn... so fucking sexy!\" he stated, squeezing her big, soft tits, driving up into her roughly, the full length of his thick, swollen cock pumping smoothly in and out of her tight, drenched, clasping pussy. \"You're better than her in every way! You fuck so much better than her. You're in better shape... fuck... your butt is way better than her flat, flabby ass! Goddamn! Your pussy feels so much better than hers. And fuck... your big tits are amazing!\" ",
        "For a moment, they just focused on fucking, turning their attention solely on each other, doing it with an almost inhuman force, slamming into each other savagely. And through it all, Alice was forced to watch, held in place by Kelsey's dark magic. She had to watch her husband fuck this hell-spawned demoness in the body of an innocent teenager, her body warped by the sinful being inside her to be extra desirable. And hearing the words she forced him to say, hearing these words pass her husband's lips... a tear rolled down her cheek. \n\n\"You hear that, bitch?\" Kelsey screamed out at Alice, her voice half-teenager, half demon. \"Your husband's seen the truth and opted to join my side. Watch him... listen to him! Fuck! Goddamn! YES! He's fucking me so well! He loves me! And you will watch as he proves it to you! You will fucking watch, you stupid cunt... yes, yes, YES! You will watch your husband betray you for good! You will watch him commit the ultimate sin! You will watch him spurt that married cum inside me! You will watch your husband give another woman his baby!\"\n\n\"What!?\" Alice called out, able to form this one word out of pure shock.\n\n\"HOLY SHIT!\" Jeff groaned, his eyes blazing with excitement as he fucked her even harder.\n\n\"Fuck me, baby, FUCK ME!\" Kelsey screamed out.\n\n\"God damn! YES!\" Jeff grunted out, molesting her massive, jiggling titties, driving her crazy. His hips were a blur, driving up into her.\n\n\"Yes! YES! YES!\" Kelsey screamed, her body shivering with excitement as she slammed herself down onto him. His face was a mask of twisted, savage lust.\n\n\"You like that? YOU LIKE THAT!?\" Jeff demanded.\n\n\"YES! I love it! I love that big married cock! It's so huge! Wasted on a bitch like her!\" Kelsey screamed out. \"I'm your bitch now! I get your cock! Not her! Never her!\"\n\n\"Yes! Anything!\" Jeff groaned. \"I love it! I love YOU! I loved you from the start! You're so fucking sexy! Everything you said to my wife made my cock throb!\"\n\n\"You love hearing me trash your ugly, dull, brainless wife!?\" Kelsey asked, driving her ass down into him. \n\n\"YES!\" Jeff moaned. Alice was sobbing now.\n\n\"How stupid she is...\" Kelsey remarked. \"Fuck... fuck! All her work... her life's work... it's for nothing! YES! All she's done is ensure that demoness cunt gets filled with her husband's huge married dick! YES!\"\n\n\"Oh God!\" Jeff groaned.\n\n\"Give me your baby! Fill my slut pussy with cum and give me a baby! Do you want to impregnate me? Do you want to knock this evil demon slut up and give her a baby?\"\n\n\"YESSSSS!\" Jeff roared, fully bathing in sin now. With a move, he grabbed Kelsey around the waist and rolled her onto her back, their lips rejoining in a deep, savagely lustful kiss, their tongues down each others' throats. Now on top of her, Jeff began pumping in and out of her, his bare ass rising and falling as he showed the demon slut no mercy, quickly fucking her at a furious pace. They lost themselves in each other, fucking each other. Kissing each other. Their attention was only on each other, and the pleasure they were feeling. Jeff only cared about Kelsey. And Kelsey cared only about Jeff.\n\nWhich is why Alice fell to the floor, forgotten. \n\nNot sure if Kelsey realized what she had done, Alice crawled along the floor, trying to ignore her husband savagely fucking that evil slut mere feet away. But she heard them. Heard them loud and clear.\n\n\"You fuck so good baby... does wifey fuck you like you this?\" Kelsey moaned out.\n\n\"No... never... she's boring. She can't fuck like you can! God damn!\" Jeff groaned. Kelsey slid her hands onto his butt, squeezing it, digging into it with her nails as he fucked her roughly. Alice crawled over to her gear, finding her book, desperate for answers.\n\n\"Fuck me, baby... fuck your queen!\" Kelsey announced.\n\n\"UGHHHH!\" Jeff groaned, his head tucked against her shoulder, fucking her harder, driving his swollen prick into her. \n\n\"My sisters will rise from the ashes! Yes! Thanks to me! Yes! And thanks to you! Fuck me baby! Fuck me! That's why I'm here... for you! To convince you to join us! To use your... fuck... to use your talents to help my sisters rise. To ease them on their journey. All you have to do is fill me with cum, baby! Fill my slut pussy full of thick cum and give me a baby!\"\n\n\"Oh god...\" he gasped, the thought so insanely wrong that it could only make his nuts twitch with excitement. \n\n\"Give me a baby and cement our love forever!\" Kelsey moaned out, hands scratching against his back. \"Make me pregnant and I'll possess this body forever! Knock my slut pussy up and you'll get this kinda sex every fucking day!\"\n\n\"UGH!\" Jeff groaned, his cock throbbing with excitement.\n\n\"Join our side and you'll be a king among men!\" Kelsey moaned out. \"And I'll be your queen!\" she announced again, as if this was a point she loved making. Her loud, inhuman demoness voice rose to the surface again, mixing with Kelsey's teen voice into a cocktail of delicious evil. \"Queen Zephrys!\" she roared. \"Demoness QUEEN! I'll rise above my sisters and RULE this world! Beautiful and terrible, all will KNEEL before me! And with a king by my side, all will fall before my MAGNIFICENT POWER AND INCOMPARABLE DEPTHS OF SIN! THE WORLD WILL BOW BENEATH QUEEN ZEPHRYS! YES!\"\n\nAs she roared in pleasure, the walls shook. And despite her terrible proclamation, Jeff only fucked her harder, rearing up to fuck her savagely. Everything was going perfectly for the demoness. She was so close to success.\n\nBut she forgot about Alice.\n\nToo caught up in her own ego, Alice had caught the demon's mistake. Her slip. After hours of inquiring at her true identity, the demon had just gone and announced it.\n\nZephrys. \n\nA name Alice had dismissed before, she rapidly flipped the pages to find her again. Seeing now that all the pieces fit, she moved to act.\n\n\"Ughh! Fuck me!\" the demon known as Zephrys screamed out.\n\n\"Yes! YES!\" Jeff moaned, fucking her harder than he ever knew possible. And she was fucking him back even harder. Their bodies drenched in sweat, her legs kicked up in the air, the bed was whining due to the stress of the savage fucking.\n\n\"I'm gonna cum, baby!\" Zephrys moaned, her voice a teenage squeal of delight.\n\n\"Oh... I'm close!\" Jeff said, his voice strained. They kept fucking hard, filling the room with unholy noise, and as they got closer to the crisis point, it felt like a deep beat was accompanying them. A hellish rhythm of crazy, nasty, filthy sex. Of unholy lust. The deep, illicit pulse of sin encompassing them, surrounding them, from just outside the walls. The demon's grip, getting so close to encircling them completely. Forever and ever.\n\nBut Alice still had something to say about that.\n\n\"I cast you out, Zaphrys!\" Alice screamed out, summoning the purity of heart and the power of her message as she raised the cross high in the air. Zephrys's attention jumped from the man above her to Alice. Despite the savage fucking she was taking part in, she had to acknowledge the woman screaming her name. She swept her hand at the wife, knocking her back with her magic, and through it all, Jeff just kept driving into her like an animal. Seeing Alice discarded enough, she refocused on Jeff, wrapping her arms around his neck, looking up at him.\n\n\"Do it, baby! Make me cum! Fill my evil cunt with cum now! Forget about your dumbass wife! Give in to me!\" Zephrys urged him. Jeff was so far gone at this point, acting beyond thought, on pure animal instinct. He wasn't listening. He was following the pleasure. He was just mindlessly fucking, without thought or care of the consequences. \n\n\"Zephrys!\" Alice called out again. \"Zephrys of the clan Black Ash, demon spawn, hell beast! I cast you out! I cast you back to hell!\" she screamed out, cross raised with one hand with her book in the other, reading the words. Zephrys snarled at Alice, but the pleasure was dulling her reactions, and she was unable to truly fight her off. Jeff's cock felt too good, and she was so close to the edge that nothing could stop it.\n\nAnd Jeff just kept fucking. That deep, pulsing, sinful rhythm was being matched by his driving hips. His balls twitched. A shiver ran down his cock. \n\nHe was close.\n\n\"Fuck you!\" Zephrys snarled at the married woman as her pussy tightened with excitement.\n\n\"Zephrys, the power of Christ compels you! It sends you back to hell! Back from where you came! I cast you to hell! Go back, demon! I speak your name, Zephrys, and I cast you to hell, beast!\" Alice called out with strength of spirit.\n\n\"Baby, I'm gonna cum! Do it! Now! Cum for me! Please! Do it! CUM INSIDE ME!\" the demoness roared, a tinge of urgency in her voice.\n\n\"Guh!\" Jeff grunted, beyond words, fucking along to the hellish pulse.\n\n\"Do it, baby! Cum for me! Do it!\" Zephrys begged. \n\n\"I cast you down, Zephrys!\" Alice stated. \"The power of Christ... the power of love... the power of angels... the power of good... it casts you down, demon. Back to hell where you belong! The power of our marriage, of the bond it brings...\" she stated, holding up her wedding ring. \"Our love will win out. Our love will cast you down!\"\n\n\"SILENCE, BITCH!\" Zephrys roared, the room shaking. \"YOUR MARRIAGE AND LOVE MEAN NOTHING COMPARED TO THIS HOT BODY!!\"\n\n\"Oh fuck!\" Jeff moaned, his nuts twisting.\n\n\"Do it baby!\" Zephrys begged urgently. \"Fill me up! Your cock feels so good!\" she said, her eyes again pulled away from Alice to Jeff.\n\n\"I'm gonna cum...\" Jeff groaned.\n\n\"Yes! YES! Please! Baby...\" Zephrys urged, gripping him tight. \"I need it so bad! I'm so close!\"\n\n\"Ugh... oh... fuck...\" Jeff groaned, a shiver running down his cock as he pumped his swollen meat inside of her spasming cunt.\n\n\"I'm gonna cum baby! I'm gonna cum too!\" Zephrys panted.\n\n\"Fuck... fuck... fuck!\" Jeff groaned.\n\n\"YES... YES... YES!\" Zephrys screamed.\n\n\"I cast you down, demon! NOW! Zephrys, of the clan Black Ash, the power of Christ... the power of true love... the power that all is good and true... it all casts you out! I cast you back to HELL!\" Alice screamed.\n\n\"AHHH!\" Zephrys moaned, feeling a blissful sensation from her cunt and an inhuman tug from somewhere else. \"I'm gonna cum! YES! YES! YES!\"\n\n\"FUCK...\" Jeff grunted, right up at the precipice.\n\n\"Go to hell, demon!\" Alice added with purpose, her words finally taking hold.\n\nIt all happened in a moment. Kelsey, looking up at Jeff. And Jeff, looking down at her. And, for a single moment that he would never forget, the demon inside Kelsey rose to the surface. For a moment, he saw something he wasn't supposed to see. For a moment, Jeff saw the true Zephrys. The demoness in her true form. A form that couldn't be put into words or description, an unholy vision of pure, uncompromised sin. \n\nAnd how did Jeff react?\n\nHe came like a cannon.\n\n\"AHHHHHH! FUCK!\" Jeff moaned out, his voice guttural as his cock exploded, firing off thick jets of white-hot cum deep into her pussy. His eyes closed in pleasure as waves of bliss hit him. And in that same moment...\n\n\"UhhhhhhhhaaaaaAAAAAAAAHHHHHHHHHHHHHHH!\" she moaned, a dark, unholy, bestial moan of pleasure rising in her throat.\n\n\"UGGHHHHHHHHHHHHH!\" he groaned, his body tensed beyond belief.\n\nTheir voices combined in a violent, guttural, savage symphony of obscene pleasure, an unholy chorus of bestial need, colliding together like two huge waves, slamming into each other so violently it reverberated throughout the room.\n\nBut they weren't done yet. \n\n\"FFFFUUUUCCCKKKKKKK!\" Jeff groaned loudly, his voice sounding more like himself.\n\n\"AHHHHHHHHHHH! YYYYYYYYYEEEEEEEEEEESSSSSSSSS!\" Kelsey screamed, even more loudly than before, her voice sounding more like her own.\n\n\"Fuck! Fuck! Yes!\" he groaned out loudly.\n\n\"Oh my God! Fuck! Fuck! Fuck! Fuck! YES! YES! YES!\" she squealed, her yells deafening. Both of them were caught up in the waves of pleasure coursing through them.\n\nAgain and again, his balls twisted as his cock kept firing off rockets of cum into the pussy below him. He humped roughly into her, his body flexing as he came hard, the hardest orgasm of his life.\n\n\"YES!\" the young woman below him screamed out in pure pleasure, a teenage scream of bliss. Her limbs clutched him tight as her pussy locked around his pulsing shaft, spasming on it as she came hard. \"Oh my God! Yes! YES!\" she moaned.\n\n\"Oh my God!\" Jeff panted, his cock still firing, his overfilled nuts emptying into the waiting pussy beneath him. He writhed on top of her as she held him close, her spasming cunt coaxing more of his thick seed into her welcoming pussy.\n\n\"So good!\" she moaned, her big boobs sliding against his sweaty chest as they writhed against each other, riding this wave of pleasure. \"UHH! UGH! YES! YES!\" she squealed. He wrapped his arms around her and held her tightly as he humped into her, spilling his seed deep inside her.\n\nThis went on for what felt like forever but was probably just a few minutes. A few minutes of indescribable bliss, both of them achieving a new level of pleasure, together. Through it all, her pussy kept spasming, and his cock kept filling her up with his thick married seed. And when they both began to come down, at almost the same moment, their sweaty bodies collapsed against each other, panting for breath. Her limbs released her grip as her legs spread apart beneath him.\n\nBoth of them were barely conscious, trying not to fall asleep as they recovered. As they came down from their high, both of them were unable to keep their eyes open. The blazing red glow illuminating their eyes faded, getting dimmer and dimmer, almost gone as their eyes shut.\n\nIt took a few more minutes before either of them could find the energy to move or even think. But Jeff was the first to act. His head was finally clear, and he was still trying to fully put together what had just happened. Summoning the strength to move, he pushed himself up slightly and finally opened his heavy eyelids, looking down beneath him.\n\nAnd what did he see?\n\nThe beautiful, innocent eyes of Kelsey Cooper, looking up at him.\n\nThe demoness was gone.\n\nFor a few moments, they both stared, searching for answers. The flood of memories returning to him, realizing what he had just done, he didn't know what to feel. Regret and shame hit him in waves, and he hoped to see forgiveness in the woman below him. Her gaze held his, and before he could say anything, she gave him a small, almost imperceptible nod of understanding. One simple gesture, absolving him of any blame. Showing complete understanding of what just happened. And, once that happened, she wrapped her soft arms around him again, hugging him.\n\n\"You saved me,\" she whispered in his ear.\n\n\"Honey?\" Alice said, speaking up, unsure of if what she had done had worked. Jeff turned and looked up at his wife, his regret clear.\n\n\"Alice...\" he croaked out, tears filling his eyes. Lifting himself up, sliding his softening cock out from the younger woman's pussy, he stood up and approached his wife, wrapping his arms around her. \"I'm so sorry, honey...\" he said, crying into her shoulder. It was an awkward sight, him naked, covered in sex-sweat, hugging his fully clothed wife. \"That... it wasn't me. I promise! I swear!\" she said, looking at her.\n\n\"I know, honey, I know,\" she said, nodding but still kinda shaken. \"Are you okay?\"\n\n\"I... I think so,\" he said, feeling like himself again. But the things he had seen and done here... he could never forget. Alice looked past him at the girl on the bed.\n\nNo longer emanating evil, she looked like any normal teen, although, in her case, bare naked and covered with sweat. The lights of the house were glowing again, illuminating her nude form. But the innocence that had been gone from her had returned, and even her body language reflected that. She had already moved to cover her nudity with her arms, before pulling up a bedsheet.\n\n\"Are you okay?\" Alice asked her, approaching the woman that mere minutes prior had been torturing her with her words. But looking into her eyes, she saw none of that evil there. It was those lips that had said those words, but that wasn't this young woman.\n\n\"I think so...\" Kelsey said. \"I... don't know how it happened, but... oh my God,\" she said softly, the full weight of what happened now hitting her.\n\n\"It's okay, honey,\" Alice said, clasping her hand, reassuring her. \"We'll help you through this. All of us.\" Kelsey's eyes jumped from Alice to the now stirring nun off to the side, to the man behind Alice, quickly pulling on his clothes. Alice examined Kelsey's eyes, looking for any sign of the demon still inside her. Sensing this, Kelsey reached forward and took the cross from Alice's hand, handling it without fear.\n\n\"Thank you,\" she said, looking up past the cross at Alice, the woman who saved her. Alice smiled brilliantly at her. \"I'm... sorry for what I said... and did...\" she added, her eyes glancing at Jeff.\n\n\"Uh... that wasn't you,\" Alice assured, but despite that, those words weren't gonna be forgotten by her either. Kelsey nodded and smiled lightly.\n\n\"Just one thing, though...\" Kelsey began. \"Can... um... can we not tell my parents what, uh... exactly happened?\" It took Alice a moment to remember that this was a nice, sweet, church-going girl. Her parents, despite loving her, would never be able to forget about it if they found out what happened. They probably would blame her and Jeff for it. They wouldn't understand. Only the people in this room could.\n\n\"Of course,\" Alice assured, nodding her head at the young woman.\n\nMinutes later, all the occupants of the room made their way downstairs. Jeff was redressed and cleaned up slightly, and Kelsey had done the same, throwing on some pajamas to cover herself up. Alice supported Kelsey as Jeff supported the now conscious Sister Marie.\n\nWhen the Coopers saw their daughter, they ran to her. They sobbed with happiness as they hugged, all of them crying. They stayed like this for a while before Mr. Cooper moved over and thanked them for giving them their daughter back. He asked what had happened, but the Proctors assured him the answers would come later, telling him to be with his family. \n\nThe Proctors and Sister Marie stood away from the family and went back and forth for a bit, going over what had happened. Finally, they moved to part ways, their work done, with the promise to meet in a couple weeks to go over more fully what happened. They finally said their goodbyes to the Coopers as the sun began to rise, a bit of hope after a terrible night. \n\nAll seemed well.\n\nBut the thing that stuck with Jeff was during that last look back before stepping into his car. Him and Kelsey locked eyes. They had shared something this night. Despite everything, despite her being possessed, and him being hypnotized by her influence, they had still done the deed, and they had done it roughly. His body felt sore and exhausted thanks to her. And his seed was still leaking from her teenage pussy. This glance between was quick, one last moment between these two, an indecipherable message between the two, acknowledging what had just happened but not knowing what else to say. He looked away first before her, trying to move on, hoping to be able to move on from the events of the evening.\n\nThe Proctors got into their car and drove away.\n\n**************\n\n(Three Weeks Later)\n\nJeff and Alice had a lot of long conversations, going on about what had happened. He was of course beyond apologetic, and made sure to let her know that that wasn't truly him. That none of the things that happened in that room was really what nor who he was, or what he wanted. It was that demon that coaxed those words and actions out of him. \n\nAlice knew it was true, of course. She knew her husband, and knew he would never ever act like he did. That being said, those words still hurt, and what happened there would never be forgotten. Plus, you know... falling under the influence of a powerful demoness like Zephrys can affect a person. Change them. And yes, while he certainly seemed affected by that night, she knew that he was putting on a brave face. He would never betray that he had been affected strongly by what Zephrys did to him. That was just the type of man he was. Always wanting to look unbothered. But Alice wasn't careless, and she knew that she had to keep one eye on him and study how he'd been affected by what had happened. ",
        "She didn't want to come across as skeptical of him or anything. She couldn't let Jeff know that she had any doubts of him. Of course, she would never judge him for what happened. She just wanted to be there for him if he showed some scars from that night's events. But until that happened, she would be the nice supportive wife. She would put on a happy smile and act like things were all good, but she would be thinking about that night, and its effects, for a long time.\n\nAnd so would Jeff.\n\nHe had been honest with his wife about his true feelings for her, about how the things that happened that night were due to the demon's influence, and not his own. That all was true. But like his wife, he had been affected by the events of that crazy night. And while, yes, part of him looked back in regret, for the things that he had said and done under the demoness's influence, he wasn't as haunted as he thought he'd be. He had fallen under Zephrys' sway, a being of great power from the depths of hell. He should be upset for that type of invasion. He should be furious. That bitch made him cheat on his wife and possessed that girl, making her say and do terrible things. He should be overjoyed that his wife cast that thing back to hell where it belonged.\n\nBut he wasn't.\n\nHis feelings were strange. He couldn't fully define his own feelings on the matter, to be honest. He had touched something, something no earthly being usually could, and despite how wrong those events were, what had transpired there were the most vibrant events of his entire life. So coming back to normalcy strangely felt like a letdown, despite how bad those things seemed at the time. He would never tell his wife this. No! Never! Alice could never hear him talk like this. He didn't want her to start thinking that he had actually enjoyed what had happened to him. \n\nEven though he did.\n\nThat was the crux of everything, really. That was what had haunted his dreams. What filled his memories. At the end of the day, after all the crazy shit that went down, all he could think about was one thing.\n\nThe sex had been fucking amazing.\n\nHe felt truly awful to admit this, but he couldn't deny it. It was the truth. It was the best sex of his life. Putting that evil slut demon in that 18-year-old's body, using her demonic powers to enhance her body, turning her into an evil, hot-bodied seductress. An intoxicatingly sexy creature who's seductive wiles and luscious body would drive any man into submission. It was incredible!\n\nAnd damn, those tits!\n\nHe wasn't normally driven by such superfluous things, but damn, those suckers were unforgettable. Most men could only dream of experiencing tits that perfectly huge and soft first hand. But he had, and they were every bit as amazing as you could dream about. He could still feel their softness in his palms. He could still taste her delicious sinful milk on his tongue. Her breasts... her ass... her face... her pussy... every part of her was sinfully attractive. And yeah, she had been possessed by a demoness, and all those nasty words, her fucked-up dirty talk, and that ferocious sexual energy, that had all come from Zephrys, the demoness, not Kelsey, whose body she possessed. That added a whole other layer of shit to this whole thing. The whole situation was so fucked up, and it should be the most traumatic experience of his life, but whenever he thought back to that night, his cock would get rock hard.\n\nBut he could never admit this. No... not to anyone. Not ever. None of them would understand. He wasn't even sure he understood\n\nSo he went on, acting like things were normal, like he hadn't been too affected. When he made love to his wife for the first time after the incident, he acted like he wasn't thinking about Kelsey in her place. In his downtime, he pretended to be focused on normal things, and not secretly thinking about Kelsey's gorgeous face and juicy tits. When he was transcribing the events of that night down, he had to stop himself a few times from mentioning how great Kelsey's pussy felt.\n\nYeah... all was normal.\n\nHe did his best to shake these traitorous thoughts and just move on and proceed with his life. But the effects of that night weren't over yet.\n\nA few weeks after the incident, both Alice and Jeff returned at the Coopers house to meet with the family again. The church had been in and out of the house, studying Kelsey's room, combing through it to better understand how the demon had gotten to Kelsey. So, they weren't too put-off by the Proctors return, as they were used to having a bunch of people around after the crazy events of a few weeks prior. In fact, they were happy to see the couple that had rescued their daughter and weren't afraid to go over the events of that night. \n\n\"The demon was named Zephrys...\" Alice stated, sitting across from the Cooper parents, with Kelsey sitting to their side. \"The demoness was a truly nasty one. A powerful creature. We are still trying to figure how she came to inhabit your daughter. We are still going back and forth with the church on that. In fact, in about a week, I'll be meeting with some higher ups at the church to discuss this more fully, and try to get to the bottom of what happened.\" The Coopers nodded at this, and Kelsey had her head down, looking away.\n\n\"But... the demon is gone?\" Darlene Cooper asked.\n\n\"Yes. Rest assured, our efforts were effective. Obviously... the encounter had some... lasting effects,\" Alice began. Jeff glanced over Kelsey again. And yes... the demoness had left a permanent effect on her. Those enhancements that Zephrys had wrought with her body were indeed permanent. Meaning, her butt had permanently been enhanced, making it rounder and juicier than before. And her breasts were now as massive, round, and juicy as they had been that night. She had begun that night as a thin, lithe teen. Now, she truly had the body of a woman. Jeff did his best not to stare, despite how good she looked. Her outfit was simple, a fashionable pair of slim, tight jeans and a snug black cotton top, straining to contain her massive bust. They jiggled with every move she made. It was clear that she wasn't used to her new body yet, as that top was now far too small for her, not built to contain such enormous, firm breasts. Jeff looked away, refocusing on the conversation at hand.\n\n\"Even though the incident left lasting effects...\" Alice resumed, \"I assure you that this is over. There might be a bit of residue left behind, maybe some small, behavioral changes, but in my experience, it's never anything too severe,\" she explained, warning Kelsey's parents and assuring them that even though they might see some changes in their daughter, she was still the same person. Alice was in the same boat, keeping an eye out for any changes in her husband. \"But I assure you, the demon is gone. Demons like her don't return to the same people. Once they are vanquished in the manner we vanquished her, the only way she can possibly come back is if she is summoned. This was her one shot, and we stopped her. Yes, Zephrys was a persistent little bugger, but she's gone now. The best thing is to try to do your best to move on. I know it might be tough, but it's all you can do. You're out of the darkness now. Savor the light.\" The parents smiled, but Kelsey still didn't raise her eyes.\n\n\"Kelsey...\" Alice said softly. \"I want to make sure before we go... are you okay?\"\n\nFinally, the young woman raised her eyes. They rose first to look at Jeff for a long, shared moment. A memory flashed in Jeff's head, Kelsey and him together... in bed... fucking like crazy. He shook his head clear, ashamed that he was still thinking like this. Kelsey looked at Alice, those big, bright eyes hesitant.\n\n\"I'm okay...\" she said softly. Alice studied her for a moment, trying to read her.\n\n\"I know that the events of that night were... traumatic...\" Alice said delicately, not betraying the young woman's trust. Her parents still didn't know exactly what had happened that night. They still didn't know what she had done. The Church didn't either. All they knew was that the demoness had made a move on Jeff, and in doing so let slip her true identity, which allowed them to vanquish her. That was all they really needed to know. Delving any deeper would invite too many unwanted questions. The only people who would know what truly happened that night were Alice, Jeff, and Kelsey, and it would stay that way. \"But... Kelsey, you need to know that you did nothing wrong. You are still as pure and true as you were before. That wasn't you. Live your life. Don't let Zephrys win.\"\n\nKelsey took in her words and nodded. Alice smiled.\n\n\"And Kelsey, if you need anything at all, if you have any questions, call us. If any of you guys have any questions, let us know...\" Alice stated. Alice and Jeff then gathered their things and made to leave. Jeff shook the parents' hands and Alice did the same. Kelsey was a little back from them, and didn't acknowledge them as they made to leave. It was only as Jeff looked back as he stepped out the door that he met her stare, their eyes lingering on each others' for a moment.\n\nHis cock grew as hard as concrete in his pants.\n\n*************\n\nAbout a week later, Alice and Jeff were set to make their trip to go see the church to go over Kelsey's exorcism. But Alice, sensing Jeff was still going through things, let him stay home and have some peace and quiet. After what he'd been through, he'd earned it.\n\nJeff did his best to keep his mind on other things, but it always came to back to the events of that night. He tried to watch some TV, or listen to some music, but his cock was throbbing with need. He was about to give up and just jack off to thoughts of Kelsey, as had become ritual lately, when the phone rang.\n\n\"Mr. Proctor?\" the phone said.\n\n\"Yes?\" he replied.\n\n\"This is Darlene Cooper, Kelsey's mom,\" she said.\n\n\"Oh... how can I help you?\" he said, a little ashamed that he was about to jack off to thoughts of her daughter.\n\n\"This might sound strange, but... have you heard from Kelsey?\" she asked.\n\n\"No... is something wrong?\" Jeff asked.\n\n\"She went to hang out with some friends last night, or at least she said she was. But... no one's heard from her. I thought... maybe she had come to you guys.\" Mrs. Cooper said.\n\n\"Um... no, I haven't heard from her.\" Jeff said.\n\n\"Oh God...\" Darlene gasped softly.\n\n\"Darlene, don't worry, I'm sure she's fine. A major event took place... maybe she's still processing it.\" Jeff speculated.\n\n\"Maybe...\" she said.\n\n\"She seems like a good young woman. Very intelligent. Doesn't hang out in a bad crowd. I'm sure she's fine. If I hear from her, I'll let you know, okay?\" Jeff said.\n\n\"Okay. I hope so,\" she said, sounding partially reassured.\n\nJeff was a little concerned when he hung up the phone, but he didn't have long to think before there was a knock at the door. Caught off guard, he went to the front door to answer it.\n\nAnd there she stood. Kelsey Cooper.\n\nSpeak of the devil.\n\nIt was clear from one look at her that she had gotten more comfortably with her new body, Clad in a dark pair of tight yoga pants and a tight, dark blue tank top, very low-cut and cleavagey, showing off a fair amount. She looked even better than he remembered. He looked up from her chest just as she looked up at Jeff.\n\n\"Kelsey?\" Jeff said, stunned. The object of his fantasies was standing right here. His cock stiffened again. \"What are you doing here?\"\n\n\"I...\" she began, glancing away. \"I needed to talk to you...\"\n\n\"Well, you should have let us know. Alice isn't here right now, and your mom is worried sick...\" he began.\n\n\"I wanted to talk to... only you,\" she stated. A pause hung between them. Jeff looked down at her, unsure of what was going on, but with the way he had been thinking, there was no way he wasn't inviting her inside.\n\n\"What do you need?\" he asked as he closed the door behind them, trying not to stare at her huge tits. \n\n\"I...\" she began, looking down at the floor nervously. \"I... ever since that night... I can't stop thinking about it. About everything. About... what we did,\" she stated, looking up at him.\n\n\"What do you mean?\" he asked, unsure. \"You don't have to feel guilty.\"\n\n\"I don't.\" she said softly but firmly, her eyes staring into his. \"That's the thing. I don't feel guilty about any of it. Every time I look back, my pussy gets wet. And every time I think about you, my nipples get hard...\" Jeff glanced down, and sure enough, her hard nipples were poking through her top.\n\n\"Kelsey,\" Jeff began, warning her lightly, but she stopped him.\n\n\"You have to feel it too, don't you?\" she asked pleadingly. \"I know it was wrong, but... that felt way too good to just forget.\"\n\n\"Kelsey,\" he began again. \"It's best to just... move on. Don't look back,\" he stated nervously.\n\n\"Can you?\" she asked simply, glancing down at his clearly defined bulge. \n\n\"Kelsey!\" he said, backing up, bending over slightly to hide his erection. As if seeing what she wanted to see, her glare turned predatory as she began approaching him.\n\n\"I don't regret what I did with you,\" she admitted, stepping forward, her big boobs bouncing with every perfect step. \"The sex... it was so fucking good. I... I never would have landed a man like you unless what happened, happened. With how she changed me...\" \n\n\"What are you doing?\" Jeff asked, concerned, as he backed up.\n\n\"You're the only one who would understand what it was like. Her mind inside of mine. She was insane, but... I kind of understand her now. I felt what she felt, and I know how badly she needed it, and I get it. That level of lust. And filth. You felt it too...\" she stated.\n\n\"It's best not to think about it...\" Jeff said, his back hitting a wall, unable to pull his eyes from her cleavage.\n\n\"I can't forget it!\" she replied. \"Ever since that demoness got ripped from me, it feels like part of her is still inside me,\" she said, moving closer. \"And to be honest... part of me wishes she was still inside me. Her power... her lust. It was... incredible... wasn't it?\" she stated, biting her lower lip as her large breasts pressed into his chest. She looked up at Jeff before moving her mouth to his ear. \"Part of me wishes you were still inside me too...\" She let that thought hang as Jeff's eyes went wide.\n\n\"Kelsey...\" he croaked lightly. He stepped back slightly, a bit afraid of the thoughts she was inciting in him.\n\n\"When you came inside me before, right at the end, when it was just me and you... it felt so good! I felt so loved! I never wanted to leave that moment! Even though she was gone... at that point, I wanted the same thing she wanted. All I could think about is that it would have been so perfect if I got pregnant right then! I would have been so happy if me and you went on that journey together.\" she said, the words pouring out of her.\n\n\"Kelsey,\" he warned, despite the fact that hearing her talk like this was turning him on in ways he couldn't believe.\n\n\"Unfortunately, it didn't take then,\" Kelsey began sadly. \"But... I was thinking we could correct that mistake. We can correct a lot of mistakes together. Because Jeff, I'm, like, ovulating right now, and I have never been this horny in my life! If we make a baby together, I'll be so fucking happy, and you will too. Trust me.\" she said, stepping towards him.\n\nWithout a glance down, she reached forward and grabbed his bulging cock through his pants. She began rubbing his dick, causing him to wince in barely contained pleasure. Part of him wanted to push her away and reject her, but then again, part of him really didn't. She moved her lips to his ear again.\n\n\"Maybe together...\" she began. \"We can find her again. Let her teach us everything she knows.\" She said, kissing his earlobe softly, making him moan. \"And until we do... maybe we can relive that night... together. Show her what we learned... make her proud,\" she offered, looking up at him hopefully, a hint of that familiar red glow in her eyes.\n\nHis eyes were glowing too.\n\n************\n\nJeff and Kelsey proceeded to have a lot of sex. Like... A LOT of sex.\n\nWithin minutes of this conversation, the clothes came off, and they were in his marital bed, going at it like crazy. His cock returned home, deep inside her wet teenage cunt. And as soon as he entered her again, he wondered how he could have ever lived without her. And when he got his hands on those tits again, and put his mouth on them, rubbed his face against them... he didn't know how he'd ever let them go.\n\nThey fucked hard and rough to start, which only ended when he filled her up with cum. But that was just the beginning. She inhaled his shaft with her mouth, those plump lips wrapped around it, sucking him back to full hardness, toying with his large nuts with her fingers until he came in her mouth, swallowing his load. Her smile looked devilish after she gulped down his cum.\n\nShe was inspired to do it all, and do it all they did. He fucked her tight cunt a lot. She sucked his huge dick like crazy. She fucked his huge cock with her big, soft tits, smothering his shaft with them until he blew his load all over them. And, of course, she gave up her ass for him. Weeks prior, she never even considered this act, but now, she gleefully offered her ass to the married man, which he gladly took. It took a bit, but she grew to enjoy the aggressive butt sex, to the point where she'd be the one begging for it.\n\nIt was the best sex of Jeff's life, even better than the night with the demon. The demon had stirred something up in both of them, and they were now reaping that desire with each other. They fucked in every room in the house, going crazy with each other, fully lost in the haze of lust. They just kept fucking and fucking and fucking, for days on end.\n\nAlice returned home three days later. She stepped into her house, finding it a complete mess. Furniture was moved around, there was stuff everywhere and there were some strange noises coming from within. Her warning radar was pinging like crazy as she moved closer to the bedroom, stepping over strewn clothing and mystery liquids. Opening her bedroom door, her heart fell through the floor.\n\nOn the bed was Jeff, naked, with the girl, Kelsey, on top of him. Fucking him. Roughly. She was as naked as he was, her shapely bare ass facing the stunned wife. She kept riding Jeff's cock, smoothly taking it in her taut cunt. Again and again and again. It was just like before. Just like that night in her bedroom. Was this real? Was this a nightmare? What was happening? \n\nAlice was frozen in place, beyond stunned, just watching them go at it. This went on for a few minutes until finally, at the exact same moment, Kelsey and Jeff turned and looked at her. Faces expressionless, uncaring. Lost in a haze.\n\nAnd both their eyes were glowing a fiery red.\n\nAlice's heart jumped in fear. This was a nightmare come to life. She couldn't deal with it. It couldn't be real. It was too much evil to handle. Before she could find any answers, she fainted, collapsing onto a heap on the floor.\n\nWhen she awoke, hours later, like dust in the wind, Jeff and Kelsey were gone. Disappeared. The damage they had left behind was still there, as was the evidence of what they had done. Alice was dizzy as she rose to her feet, and she was about to leave the bedroom when she saw something on the bedroom mirror. Words, written in bright red lipstick.\n\n\"QUEEN ZEPHRYS WILL RISE AGAIN!\"\n\n*******************\n\n*******************\n\nThe nun was shivering with fear. She was so terrified it felt like she was about to pee herself. \n\n\"A truly terrifying story,\" Madeline said, smiling. \"You see, even though Zephrys was truly vanquished with but a second to spare, she had left her mark in both Kelsey and Jeff. A little part of her, left behind in both of them, still there even when the demoness herself was sent back to Hell. Those two... forever changed, forever altered, by their run in with that evil little bitch. The fact that those two came together again was simply inevitable. So, you see... even in failure, we win. Even when we are struck down, it is only temporary. Nothing can hold us down.\"",
        "The nun couldn't look at her smug gaze.\n\n\"But this isn't a new story, is it?\" Madeline said. \"This story sounded quite familiar, didn't it... Sister Marie!\"\n\nThe nun looked up, eyes wide.\n\n\"I... I... I...\" Sister Marie stammered, still bound to the chair.\n\n\"You knew most of it, but you didn't know the ending, did you?\" Madeline stated. \"Helping banish Zephrys, well... being a part of the effort against her, well... calling in the person who was able to banish Zephrys... that was your finest hour. That was the thing to put on your resume. You confronted a true demon, and it got sent back to hell! You won, right? You probably bragged about it to your sisters. But no, I'm afraid that's not how this tale ends. You didn't see how Kelsey was affected. You didn't know how Jeff was changed. You didn't realize that Zephrys being in that girl's body, even for a short amount of time, was enough for her plan to succeed. Enough to put her on the path to victory. All that you did was for naught!\"\n\n\"I... no, it just...\" Marie stammered.\n\n\"But we both know you really did nothing!\" Madeline said, her tone harsh. \"We both know exactly what happened. When it came down to the moment of truth, you wilted. While other, stronger people fought back, you... you curled up. You faked injury and curled up in fear, didn't you? You closed your eyes, hid in a corner, and hoped it would all work out. Well guess, what? It didn't. You failed, you weak, pathetic coward!\"\n\nIt was true. All of it. That night, Zephrys had slammed Marie into the wall, and while it had truly dazed her for a bit, she had regained consciousness relatively quickly. But despite that, she couldn't find the strength or will to stand up. To fight anymore. The demon was too strong, too powerful, and she just couldn't fight back. She was too unskilled. Too scared. Too weak.\n\nMarie thought about that night every single day. While the demon had been vanquished through the bravery of Alice, Marie couldn't take any credit. She didn't feel any pride for playing even a small part in the exorcism. It was true what Madeline said. At the moment of truth, when it came down to it, she had wilted. She'd been a coward. She'd been paralyzed by fear in the face of pure evil. She had been nothing to an entity like Zephrys. \n\nShe didn't know exactly what happened between the Proctors and Zephrys that ended with the powerful demon being banished back to Hell. But, from the moans and screams, the twisted words and the lustful cries, she could put the pieces together. The sounds and noises, the illicit moans and hellish screams... they would haunt her forever. \n\n\"You want to know why you should join us, Marie?\" Madeline asked, approaching the cauldron, stirring its contents. \"Because you can't stand up against us. You know it. You had the chance, and you crumbled in a pathetic heap of cowardice and terror. You are weak, Sister Marie. You are a coward! Our side is rising, my dear, and you will have to face us down again. And when that happens, there will be no mercy. Honey, the hell you face is the same as Tess did... and Sarah did. You are facing down an eternity of hell, and with the way you're going, you will not avoid it. But, my dear... there is a way out. Instead of trying to face down this evil... why don't you join it? Join us, and you will be protected. Join us, and you will be useful. Join us, and you can be strong. You will be desired. You will belong.\"\n\nSister Marie should really know better. But, these words... they were tempting to her weak mind. They were speaking to her fears, comforting them, soothing them, giving her an escape from her biggest nightmare. \n\nShe couldn't actually be thinking about this? No. NO! She was strong.\n\nMadeline sauntered proudly over to the door on the far side of the room, opening it. Two dark figures stepped in as Madeline closed the door behind them, before leading them forward. From the darkness emerged these figures, into the light. Marie gasped in shock.\n\nThere stood Kelsey, and behind her, Jeff.\n\nKelsey... even though this was the same person she had met that night, she was unrecognizable in many ways. Gone was any fa\u00e7ade of innocence and purity. And in its place was a tinge of wickedness, which only added to her appeal, making her infinitely more attractive. And the demon's effect on her body was ever lasting. Her breasts looked enormous, her tight black shirt clinging to their round, smooth perfection, nipples evident. And as she stood to the side, one other fact was made clear.\n\nShe was very, very pregnant.\n\nHer tight shirt clung to her bulging belly, highlighting it, showcasing the large, prominent bump. She turned and glanced at Marie, smirking.\n\nJeff was standing behind her. Where once, he had been a tall, strong beacon of hope, that same man was now clearly flowing with corruption. Brought down by the evil he had tried to face down. The smug smirk on his face was unrecognizable.\n\n\"Hello, my children,\" Madeline greeted them as they nodded, kissing each of them on the cheek. The witch turned to face Marie. \"This should erase all doubts, Marie. These two... it didn't take long to truly embrace Zephrys' influence. Kelsey left her family. Jeff left his wife. These two... they left everything behind to join our side. And trust me, they are happier this way. And they came to me with one goal: to bring Zephrys back to life. And tonight... they will get their wish.\"\n\nMarie was confused as Madeline continued.\n\n\"This war is vitally important. These two, they joined the cause. They saw our power, and found it irresistible. They saw the weakness of the Church and joined our side. Why not do the same?\" Madeline paused, letting these words sink in. \"No one's coming to save you. The Church... they don't care about you. In fact, they're probably better off without you. So, needless to say, they aren't sending a search party. Kelsey's family... they wouldn't know where to look. And Alice, Jeff's wife... she might be capable, sure, but she has become a target. Trust me... she will not get close to us. Ever! You don't have any choice, my dear, except to just give in.\"\n\nMarie was shivering with fright.\n\n\"Now, I didn't just bring these two here to further humiliate you, although it is quite fun. No, they are a vital part of this plan. Jeff...\" Madeline commanded. With a firm tug, Jeff reached around from behind Kelsey and lifted her top up, exposing Kelsey's pregnant belly and her massive, round breasts. Sliding his hands down, he slid them down and cupped those big boobs with his greedy palms. Bending her over slightly, so her boobs were handing down over the maw of the cauldron, Jeff squeezed her tits roughly, pinching her nipples. And from them, two jets of white milk shot out of them, into the cauldron. \n\nMarie's eyes widened at this indecent act.\n\nJeff squeezed her boobs with force, over and over again, shooting out stream after stream of milk from Kelsey's swollen tits into the cauldron. The cauldron glowed with a blazing red light at this, gurgling loudly. After a few minutes of this, Madeline gestured for them to step back.\n\n\"You see, there's a little bit of Zephrys still left inside these two, and that will never go away,\" Madeline explained. \"And now that...\" she began, before being distracted. Jeff and Kelsey were in each others' arms, making out savagely, hands all over each other. \"Okay, children, calm down,\" Madeline said, forcing the horny couple apart, at least temporarily. \"They are excited that their favorite demon rises tonight! Zephrys flows through both of their veins, even in her breast milk. And now that her milk is in my cauldron, the potion is ready. Zephrys is in there, summoned back thanks to her two followers, and there is only one step left to bring her back to life.\"\n\nMadeline grabbed a ladle and gathered a healthy amount of the mixture, pouring it into a goblet. Lifting the gurgling goblet, she walked it towards Marie and set it down on a table next to her.\n\n\"You just need to drink this.\" Madeline stated.\n\n\"What?\" Marie cried out, stunned.\n\n\"Honey, this is your path forward,\" the witch began. \"You want to join us... this is how. You drink this mixture in, and Zephrys will flow in your veins. You and her will become one.\" The witch saw the fear in the nun's eyes. \"Honey, with your cowardly spirit, and that, frankly, pathetic body, you will never be anything in this life. You will never get anything done. You will never earn anyone's respect. You will never be loved. Your life's work will end in failure. But you saw Zephrys's power for yourself. That power can be yours. That power, the desire she created, that can be you! You can be respected. You can be powerful. You can be feared. And you will be desired. You will be loved! What's the problem?\"\n\n\"I... I...\" she cried out. She remembered Zephrys clearly. Her harsh, evil language was burned in her mind. So the offer of allowing Zephrys inside her body gave her pause. \"No...NO! You are wrong! This is wrong! Everything about you is wrong! The Church...it will protect me. The good book...it will protect me. God will protect me!\"\n\n\"God doesn't care about you,\" Madeline stated bluntly. \"You are nothing to him. You are worshipping someone who doesn't give a shit about you. You withhold life's great pleasures for nothing. This Church...this Church of Light...its foolishness. A den of whores built on a throne of lies. Tell me dear...have you seen the light? Do they even know what the light is? Do you? I think you know deep down you're on the wrong team, honey. Say what you will about my side, but at least we cut through the bullshit.\" Marie looked away, tears brimming in her eyes. Despite everything she believed, these words resonated in the young nun. Maybe...maybe the Church she was part of wasn't the best. Maybe this sect was built on a false message. Maybe some of her fellow nuns weren't even good people. But these witches...they were definitely bad people.\n\n\"You see how happy Kelsey is?\" Madeline said. Kelsey was smiling lustfully as Jeff's hands were all over her, feeling up her pregnant belly while standing behind her. \"She is happier than ever, and that's because she let Zephrys in her life. That can be you. Imagine, Marie... you can have yourself a man. As handsome and strong and loving as Jeff.\"\n\nMarie's eyes flashed. That had been the hardest thing for her... giving up on the possibility of love. That was the thing she yearned for the most. Now, some of her fellow sisters didn't let this barrier stop them, but Marie cared about her vows. That being said, Madeline's words spoke to this deep yearning, inflaming it.\n\n\"You can experience something more fulfilling than anything your work has given you. Something that only we can show you. So... just drink it up and join us on the winning side.\" Madeline walked around her and leaned in close. \"Hon, just imagine the sex you can be having if you join us. You will get so much action, it's not even funny. You have no idea how fulfilling that is. Once you start having sex, my dear... you won't be able to get enough.\"\n\nProducing a sharp dagger from her dress, Madeline firmly cut through the ropes binding Marie to the chair. Surprised, Marie moved her limbs as they were freed.\n\n\"What... what are you doing?\" she asked, confused.\n\n\"Well, it's no fun to just make you do what we want,\" Madeline explained. \"For it to really take hold, you've got to make the choice yourself.\" Leaving the nun freed, Madeline marched away, snapping her fingers to have Kelsey and Jeff follow, which they did, Kelsey's top still pulled up. Her swollen tits quivered as she sauntered away. \"Think about it, Marie,\" she called out. \"You know what to do.\" The door opened and the three quickly exited. The door closed loudly, leaving Marie alone.\n\nSister Marie stood quickly, shaking off the ropes. Taking a few tentative steps, she moved to walk away before stopping. The light from the cauldron cast its light on her, shining on her slim and shapeless body. She looked down at herself, at the way her tight habit hugged her body. For some of her other sisters, these new habits highlighted their insane curves, showing off their perfect, luscious shape. For Marie, it only highlighted how featureless she truly was. Part of her envied those other girls and wished she had those kinda curves.\n\nNo... no, don't think like this. Just walk away. \n\nWalk away into a mansion no doubt filled with witches. Witches who will be upset that she didn't give in. Witches who will no doubt still chase after her, and if caught, will sentence her to an eternity of hell that she couldn't possibly comprehend. But she was strong enough. She could escape their clutches for the rest of her days. The church would protect her.\n\nRight?\n\nEven she didn't believe this. If she ran, she would get caught. Their reach was too wide. These witches... they were powerful. They were evil. She couldn't stand up against them. No one could. The Church, they couldn't compare to these evil witches. The Church couldn't match their power. No one could. The Church of Light... this new one, they did their own thing. They had lost the message. They had lost the plot. That Church wasn't the one she signed up for. Madeline was right. The Church didn't care enough to protect little old her. The witches, they would catch up to Sister Marie and the penalty would be severe.\n\nTheir offer was tempting. They could protect her. They would respect her. They would welcome her. They could give her everything she wanted. They could keep her safe.\n\nSister Marie found herself hypnotized by the gurgling mixture in the goblet. She approached it and lifted the heavy chalice. It's heavy weight, it's glimmering red contents. It emanated power, and delicious, tempting evil. And despite any doubts she might have felt, the scent of this brew was too tempting to ignore. It smelled so good! It would probably taste even better.\n\nAlmost without thought, Sister Marie lifted the goblet to her lips and eagerly gulped down its contents. \n\nShe had proved Madeline correct. Marie had been proven to be as weak-willed and cowardly and easily breakable as she suspected.\n\nAnd now... she was gone.\n\n*************\n\nMadeline marched out of the large room where she had stored the cowardly nun. Surrounding her, in the various side rooms, some of her followers had paired off with their assorted paramours, as had Elizabeth and Dave, leaving the main room relatively empty. Kelsey led Jeff by the hand away from her, down a side hallway, looking for a bit of privacy of their own. \n\nThe queen witch marched over, approaching her own love, her young husband, Alex. Standing as she approached, he looked a far cry from the young man he'd been the first time they'd met. His boyish looks had hardened up as she made a man out of him. Dressed sharply, all in black, a dark suit, shirt, and tie, his face had a short handsome beard, a look that worked for him.\n\n\"Did the plan work?\" he asked with a small, dark smile. Madeline, betraying her cool demeanor, jumped forward and met his lips with hers, kissing him savagely, turned on beyond belief by the work she had just done with Marie. His hands, as they usually did, went to her mammoth, mature tits, squeezing them roughly.\n\n\"What do you think?\" she replied arrogantly, her lips meeting his again. Reaching down, she grasped his bulge, using it to pull him forward, into her own small, side room.\n\nHer moans echoed louder than anyone's for the next few hours.\n\nHours later, they reappeared in the main room. Many of their followers had reappeared, studying the queen witch with knowing smiles. She looked freshly fucked, her once-again clothed body still sweaty. Alex's clothes were mussed, as were hers, but it wasn't like there was any mystery as to what they'd just been up to.\n\nMost of her followers had finished up their business for now, which meant the only loud screams left were the ones coming from she'd left Marie in.\n\nMadeline knew she would give in. She knew she'd accept her place, because that's what women like her did. They were weak and spineless. Pathetic little creatures who only cared about self-preservation, with no real greater purpose. Now, Madeline had given her one.\n\nLoud pained screams emanated from Marie's chamber. The transformation was always a rough one. Violent body pain, harsh fevers, blinding thoughts. Marie was in for a tough time of it. But she wouldn't be Marie for much longer.\n\nThat was one small fact Madeline left out. Usually in times like this, with a demonic possession, the demon's personality mixes with the host in a relatively even mix, with the demon having control. But Marie, she was so spineless, and so weak-willed, such a non-entity of a person, that when she allowed Zephrys in her... there probably wouldn't be much of her left. It would be almost all Zephrys, with only some deep, small, insignificant part of Marie left buried deep.\n\nThese transitions usually took some time, so they all had time to kill. As they did their work here, at the other side of the mansion, a group of fellow witches, followers, and family were waiting. One of their followers, Dalaas, a young, but truly sinful, twisted witch, was hard at work. Despite her dark nature, Dalaas was great with kids. So, while the head witches were handling the matter at hand on this side of the house, she was playing daycare with these witches' various children, taking care of them while the adults did their business. During this long wait, Madeline and Alex crossed the house, taking the opportunity to play with their children. Despite Madeline's fundamentally evil nature, she was still a great mom. She loved her kids. They were her entire world. And Alex, even though he was young, was a great father. Despite driving towards a great war, Madeline's family life was bliss.\n\nEventually, Marie's chamber went silent, meaning the time was close. Madeline and her followers were waiting outside the room, waiting for Zephrys to rise again. Not just her witches, but others as well. Others of her ilk. Elizabeth, leaning back against Dave, his arms wrapped around her lovingly. Nassia, the undying bitch, off to the side, looking almost like a model, with AJ next to her, willing to do her bidding. And there were others too: her generals, her friends, her followers. It was a full room. \n\nFinally, some laughter came from Marie's chambers as footsteps approached. The witches waited with baited breath as the door was pushed open. And finally... she appeared.\n\nThe first thing that emerged was a long, lean, bronzed leg, clad in a torn, ripped up habit. Her full form soon emerged, and Madeline could barely recognize her. The habit had been ripped up slightly as Marie transformed into Zephrys. Where once, she had been flat and shapeless, now... she was anything but. Her ass was juicy, round, and perky, jiggling with each step she made. And her tits... holy shit, her tits. They vaulted off her chest, like fucking melons, the tight habit straining to contain them. In places, it was threadbare, and in others it was torn completely through, exposing the soft, golden, succulent skin... and a good view of one her hard protruding nipples.\n\nUp top, the part of her habit that went over her head was askew, exposing some of her now soft, smooth, vibrant platinum blonde hair, falling over her face. And her face... it was a far cry from Marie. While there was probably a hint of Marie at the core, Zephrys' influence had won out, turning her face from plain but pretty to stunning and sexy. Her eyes were sharp and gorgeous. Her lips were plump and full, and they were twisted into an evil, mouth-wateringly sexy smirk.\n\n\"The Queen has risen!\" she announced loudly, her voice echoing through the large hall. Some of the witches looked on in shock and joy. Jeff and Kelsey went down to one knee to welcome their master back to life. But Madeline... she paused slightly before approaching her.",
        "\"Okay, calm down, your majesty,\" Madeline said with a small smirk, stepping up to Zephrys. The demon looked at the witch, eyes narrowing slightly at this small slight, but Madeline didn't care. Some women, like Zephrys, had to declare themselves royalty. But true royalty, like Madeline the Queen Witch, didn't have to say a thing. That type of regard came naturally to powerful women like her. \"I will say, Zephrys... the new look works for you.\" \n\n\"Well, seeing what I started with, I might just be a miracle worker!\" Zephrys proclaimed.\n\n\"Hmmm...\" Madeline said, straightening Zephrys' habit. Madeline knew Zephrys, and even though she didn't exactly like her, her power could not be denied, and for their war to succeed, they needed beings like Zephrys on their side. \"Now, you know the plan. Return to the church, explain away your... changes... tell them that you finally decided to go under the knife. And then, once they welcome you into the inner circle, give us everything. All their intel. Everything. And when the times comes, and you're still inside... you strike!\"\n\n\"I know!\" Zephrys replied brattily. Madeline's eyes narrowed. She knew this demon always had something up her sleeve, another plan at play, and she was doing her best to warn her against it.\n\nMadeline's suspicions were correct.\n\nSure, Zephrys would go along with this little plan. But that didn't mean she couldn't have plans of her own, ones that Madeline didn't have to know about. Zephrys had been confined in the depths of hell for far too long. She wanted to stretch her legs, so to speak, and really enjoy the fruits her mortal form could grant her. Do the type of twisted, fucked-up shit only a slutty demoness like her could come up. Gather a group of her own, like this bitch Madeline had. And maybe then, once she had spread her influence wider than even Madeline had, she would make her move. Take over this group, supplant Madeline, and take her place as the true Queen of Darkness, whose power was unparalleled. Everyone would fear her power, and worship her intense beauty. The mere thought made her nipples hard.\n\nBut all this...it would come later. And until that day came, she could be patient.\n\n\"Why we opted to give you a job that requires subtlety, I'll never know,\" Madeline muttered. \n\n\"I can be subtle,\" Zephrys stated bluntly. \n\n\"I hope you can.\" Madeline said. \"Your job is a vital one.\"\n\n\"I'll get it done. And honey... I'll have fun tearing those bitches apart!\" Zephrys said with a snarl.\n\n\"You'd better!\" Madeline said, before moving to stand next to the demon, reaching back and slapping her ass firmly.\n\n\"Ladies and gentlemen, I present to you, the demon Zephrys!\" Madeline announced.\n\nThe mansion filled with applause.\n\nThe witches, the black coven, the users of dark magic, the evil slut-bitches from hell, they were gaining power. And if their power kept growing at this rate, it seemed like nothing would be able to slow them down.\n\nThe darkness... it was spreading.\n\n**************"
    ],
    "authorname": "TheTalkMan",
    "tags": [
        "cheating",
        "big tits",
        "reluctance",
        "betrayal",
        "temptation",
        "teasing",
        "evil",
        "exorcism",
        "demoness",
        "possession"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/trilogy-of-tits-and-terror-ch-03"
}