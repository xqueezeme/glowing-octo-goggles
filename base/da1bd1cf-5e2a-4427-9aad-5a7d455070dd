{
    "title": "Four Blessings Pt. 02",
    "pages": [
        "***Okay so you guys liked it haha. Here's the second part. I am a terrrrriiibbblllee editor, I often read what I wanted to write rather than what I actually wrote. I fixed some grammer/syntax errors but unfortunetly I know I've missed some. Originally I had written an entirely different story filled with battle, new friends, undead, and even his twin makes an appearance. Welp I scrapped it because I am writing an erotic story not a lord of the rings, I had strayed to far from my objective (to make you cum) so I rewrote a fair bit and kept some. I think you all will be happy to hear that I have started a third part, only a couple hundread words in, being creative and writing new sex scenes is diffuclt! Who knew? \n\nThe following story contains humiliation, light bdsm, group sex, futas, and a femboy plaything. Enjoy!***\n\nChapter 9\n\nAiden awoke to a warm body behind him his naked form was wrapped in theirs. He smiled as he felt the fur on the Foxkins flanks. Silky smooth hairs rubbing against his skin. Turning and snuggling into Sophia he yawned. \n\n\"Morning my little butt slut, how are you? Feeling any different?\" Sophia asked\n\nAiden searched inwardly his thoughts coming up through the fog of sleep. At first he couldn't pinpoint it, soon though he began to hear the soft rustling of rodents and birds flitting through the trees and bushes. He instinctively knew the sounds were from farther away. \n\nEyes snapping open he looked up at the Foxkin, \"I can hear everything so clearly. Is this your bond gift?\"\n\n\"Enhanced hearing, I think so. Diane mentioned something similar though I think our gifts will be more potent with one another than they are with you, at least for now. I can feel Diane's life magic.. and her sexual magic, I don't think I can control it actively but I assume it will have benefits just like the enhanced hearing. Can you feel it?\"\n\nAiden searched himself again, he didn't feel much different but he'd also been doused in Diane's healing and sex magic for the last several days. He did feel very good though and full of energy, his mind drifting towards yesterday's events with Sophia. He felt a soft blush heat his face as he thought of the way Sophia had handled him. It made him feel... Naughty like Diane said. He smiled to himself as he breathed in Sophia's smell. Sophia nuzzled him laying soft kisses to his head and face. \n\n\"I'm not sure.\" He finally responded, \"I feel full of energy and well.. I'm definitely feeling more.. Horny. If that's even possible.\" He finally managed to say. Hiding his face in her cleavage. \n\n\"Oh?\" Sophia said laughter in her words, \"Does Sophi's little butt slut want to go for a morning ride?\"\n\nShe could feel him nod slightly in her cleavage. \n\n\"I'm sure we can go a few rounds before momma gets back. Have I told you how cute it is that you call her that?\" Sophia teased. \n\n\"Where'd Diane go?\" He asked sleepily.\n\nSophia rolled onto her back bringing Aiden with her. He sat astride her hips and his pliant butt flush against her. Her soft cock resting perfectly in his valley.\n\n\"She went to go look for the Widowkin and scout the surrounding area, Diane said she's probably hiding nearby. Possibly in the caves.\" \n\nAiden started to move his mouth towards Sophia's hard pink nipples, his hands gliding up and down her furry sides. Bringing her knees up she adjusted herself. Aiden felt her stiffening girlcock brush his pucker as he continued to suck at her nipple, his small hands groping her breasts. \n\nSophia looked at him, her eyes catching his. \"I want you to sit on it butt slut. Ride me. Milk my cock with your slut hole.\" Her words came out as a growl betraying her ardent need. \"Honey Sword Oil is on you right. You may want that.\"\n\nAiden's mouth popped off her nipple as he went to grab the bottle. Shifting himself back on her legs he let her ten inch cock come up between his legs as he began to pour oil along her head and shaft stroking her with soft feminine hands. He squatted over her using his fingers to spread the residue on his hole using his middle finger to press through his ring. \n\nSophia watched his face flush pink as he fingered himself. Grinning, she gripped the base of her cock and held it straight so he could plunge down on her. \"Hurry slut, I want to feel you tight ass squeezing me\" she gave his thigh and ass a loud smack. \n\nWarmth blossomed in his chest and his skin prickled at her words. She seemed to enjoy making him feel embarrassed and shameful at the words while also encouraging him to embrace that part of his sexuality. Squatting over Sophia's lap, his hands resting on her ribs, he lowered himself to her thick veiny cock. The mushroom tip throbbing beneath him. He felt the pressure build at his entry fumbling a bit with his aim as her tip slid against his taint pushing into his little grapes. Correcting his position began to spear himself letting gravity pull him down. Her cock head pierced his ring stretching him. Entering his channel Sophia grabbed his hips with a growl and pushed him downwards. \n\nSophia bottomed out in her boy his bubble buttpressed to her lap. His little member was sticking straight up grape sized balls coming to rest her pubic mound. They groaned in unison as Aiden wiggled his body back and forth her girth and length stretching his insides. Sophia squeezed his hips and slapped his ass. \"Ride me slut boy, ride me till we both cum.\"\n\nAt her urging Aiden began to rock back and forth his knees gripping her furry hips. Her breasts began to jiggle slightly at his movements. He felt his ring wrapped around the base of Sophia's girlcock, then he began to move up and down his ass cheeks clapping against her thighs. Clenching as he pulled upwards, Sophia could feel him constricting his passage around her. \n\n\"Oh fuck ya, you're such a good slut. Momma and I are gonna take such good care of you. I can't wait to see you in a summer dress or maybe a skirt! I want to pull your little panties to the side, watching you finger yourself like a good little slut!\"\n\nEncouraged by her dirty words and the thoughts they brought to his mind he began slamming down into Sophia's lap.\n\n\"Uhuhuhuhuhuhunnn.. Sophi..\" he cooed moaning her name.\n\n\"You're making me feel so good slut boy.. your little uhng.. prick is so cute, cum on Sophi's belly. Unnnnnnhh..oh fuck ya baby.. you can lick up your seed after.\" Sophia said teasingly. \"Want my hot load in your belly? Does it make you feel dirty? Feeling my hot load dripping from your boy pussy?\"\n\nAiden's cocked twitched his face and neck turned a beat red, breath coming quickly. His lips curled into an embarrassed smile at her teasing and then parting as he panted. As she continued to demean him Aiden wiggled back and forth, sliding side to side squeezing his channel against her thick cock each time. Sophia planted her feet and began lightly thrusting in time with him. Her hands reached back and grasped his ass cheeks spreading them wide. Aiden reached his own hand back and began kneading her balls, pulling and squeezing. \n\nSophia started grunting and thrusting harder causing Aiden to bounce in her lap, her hands forcing him up and down. Femenin cries carried through the forest with her thrust. \"We're almost there slut, cum for Sophi.\" Sophia breathed out chest heaving. The wet smacking of his bottom hitting her thighs, the sound loud in her ears. \n\nSlamming deep into him she began pushing his body against her hips rubbing her pubic mound against his taint just beneath his balls. The sensation caused Aiden to spurt out his seed all over Sophia's pale stomach as his ass clenched down on her. \"There we go butt slut, yesssss fuck yes. Milk my cock, I'm about to cum oh oh oh oh fuck!\" Screamed Sophia her thrusting unabated. \n\nBuried deep as she could go she forced his hips back and forth as his seizing channel ripped the seed from her balls. The moan caught in her throat as she grabbed his perfect ass again and spread his cheeks wide shooting thick ropes of cum into his butt. As her member started to soften it slid from his abused hole dripping seed. \n\nAt that moment Diane stepped into the clearing with the Widowkin, Gala. They both came up from behind Aiden stopping short. The perfect view of Sophia spreading his butt cheeks wide, used hole gaping. Ring winking at them as cum dribbled down his taint to his small sac. \n\nLaying down atop Sophia, Aiden was spent and didn't notice his audience. His sticky seed smearing over their stomachs. Sophia grinned at the Widowkin and Diane, she started to caress his hole with her fingers making it wink open each time as it involuntarily prepared for entry. Smiling, she whispered into Aiden's ear, \"Don't forget to clean me up butt slut, make sure to get your own seed as well.\" \n\nAiden nodded sitting up, his bottom cupped in Sophia's hands, her thick white seed still leaking from him. Aiden quickly gathered his small pool of seed with his fingers and made a show of eating it. Twisting his body around he moved into a sixty nine position with Sophia. As fished her dirty cum covered length up by his mouth. He started as he noticed Diane and someone else standing with her. His stomach coiled in on itself as he imagined what he looked like, black hair plastered to his sweaty face Sophia's soft girlcock between his soft pink lips.\n\nBoth women looked decidedly pleased, before he could say anything or interject. Sophia grabbed his testicles and flaccid cock in her hand pulling down softly, the thumb of her other hand curled up into his hole. Sophia's voice snapped at him before he could protest the rough treatment. \"I don't feel you sucking and cleaning slut boy..\"\n\nAiden shivered from head to toe, the dirty talk and the way Sophia controlled his body made his stomach quake. The shame and arousal only increased as he looked into the eyes of Diane and the beautiful stranger. His head dropping down to engulf Sophia's thick meat, sucking off their juices. Closing his eyes he focused on his task. Sophia's cum tasted salty and sweet, he moaned around her in satisfaction. Sophia continued to play with his soft tiny cock and balls, imagining how a chastity cage would fit snugly on him. Smiling, she relaxed and luxuriated in Aiden's hot mouth and tongue.\n\n***\n\nHaving finished cleaning Sophia and then actually cleaning themselves in the cool spring they were finally introduced to the Widowkin.. officially. The four of them sat in a loose circle eating a light lunch, Aiden not meeting anyone's eyes while the girls grinned easily guessing at the thoughts running through each other's minds. \n\nAiden studied the Widowkin surreptitiously. The most obvious thing about her were the four black chiton limbs that grew from her back. The limbs were multi-joined like spiders' limbs and ended in sharp points. Her dark skin was a grey blue. She had fierce black eyes her pupils lost in the irises. Two extra pairs of eyes sat on her forehead but were twice as small and had no sclera. Straight white hair in a pixie cut framed her face and curved underneath her chin. \n\nShe wore black silk bindings over her endowed chest, similar fabric was wrapped around her waist. She had thin chitin armor plates over her joints and hips, even the knuckles of her fingers were armored. Aiden thought she had a similar build to Alexa's. Tall, lean, and muscled. She had the physique of a warrior.\n\nShe ate meticulously as he watched her. Her every move seemed precise and graceful. Belatedly he realized that she was probably studying him in turn, the extra eyes blinked but he couldn't tell in which direction they might be looking. \n\nOnce everyone had eaten, Aiden was surprised when Gala spoke to him directly.\n\n\"You know there is no reason to be embarrassed. I witnessed the Foxkin breeding you yesterday as well.\" The Widowkin smiled ruefully revealing sharp canines. \"Your lovemaking yesterday on the creek bank. You looked very beautiful in throes of your passion. So seeing you today as you were was no great surprise.\"\n\nAiden groaned at that, Sophia guffawing, Diane smiling.\n\nLooking to Sophia the Widowkin grinned and asked, \"You take him roughly.. but he seems to enjoy it, yes?\"\n\nSophia caught her breath choking down her laughter, \"The nymph magic helps, the Dryads healing does wonders as well.\" She said mischievously giving her slut boy a side eye. \"His bond to Diane will definitely increase those attributes over time I'm sure.\"\n\n\"I can feel my magic in Aiden even now. Over time his passive abilities will increase with the Augmentation Blessing.\" Diane explained. She looked to Gala, \"would you mind telling us your story? Why did the brigands chase you into my forest?\"\n\nGala grimaced, \"A Hornetkin hive ambushed me and I was wounded far north of here, Hornetkin are territorial and they drove me far to the south. I was forced to keep moving and I had no time to hunt. I.. mistakenly stole a farmer's sheep and he caught me. I tried to barter with him as is custom, but he ignored me and told me that he'd report me to the guild.\" She sighed and continued, \"So I ran. I hid in the nearby caves, I was afraid and hungry. Not to mention wounded. I had only just left my mother's territory a month ago to make my own way. The Hornetkin were.. unexpected. I thought the two men were of the guild looking to pen me in or ambush me. Fighting the guild.. is not wise. Your intervention allowed me to escape and hunt, that is when I found you by the creek.\" Smiling again at the memory she looked at Diane. \"That's the short version at least.\"\n\n\"The two men were not a part of the guild.\" Diane said firmly \"they were hired by the farmer to kill you, he lied to them saying you were a Blackwidow I assume. Had they been of the guild they would not have entered the forest without permission. I think he intended for them to both die taking you down, that's actually where we found Sophia. They were attempting to use her as bait.\"\n\nThe Widowkin grinned faintly at that, \"Thank you for helping me Diane. I must go in search of a home today. My black silk is ready for harvesting. It will be a waste if I do not find a safe place soon.\" \n\nDiane smiled gently, she knew the Widowkin had a futa and was extremely tempted to pair her with her bonded. The Widowkin was young and inexperienced, but usually their race could contend with some of the fiercest monsters. \"Why don't you come home with us, you can rest in my clearing. We wouldn't mind your company or your protection. You may remain as long as you wish or until you find a new home, I may be able to help with that..\"\n\nThe Widowkin looked to Aiden, Diane and Sophia in turn.\n\n\"Don't look at me\" Sophia said, \"I still need to return to my father's ranch so that I can grab my alchemy supplies. Need Clothes too. Diane will you know when I come back into your forest?\"\n\n\"The trees will know you my love, keep walking west as best you are able. I'll meet you halfway up the hills.\" Diane replied comfortably. She would need to to attend to her duties as a Dryad as well. Aiden had captured her attention and she had been lax the last few days though she did not regret it.\n\nAiden looked at the Widowkin and gave her a shy smile. \"I don't mind if you come home with us, it's really Diane's home though.\" He was curious and asked, \"how old are you by the way?\"\n\n\"Nineteen,\" The Widowkin replied \"I left home when I finished marshal training. Our race generally lives in small communities and I was looking for seclusion when I found the home the Hornetkin forced me out of. It was a.. mistake to travel so far.\" \n\n\"My home is yours bonded.\" Said Diane squashing Aiden's comment. \"Gala please accept our gift of sanctuary at least until you're able harvest your silk.\"\n\nGala grinned at them broadley and nodded. Then she started to study Aiden. She saw attraction there. She just wasn't sure if the boy could keep up with her pace. Her sexual desires were similar to Sophia's just a bit more.. dominate. He really was quite pretty though. Imagining his pouty lips sucking her girlcock made her chiton limbs tremble. Maybe she could make this a permanent home after all?\n\n\"Then it's settled, Gala will come home with us.\" Looking to Sophia, she said, \"I have a few small caches of Bailona currency nearby in case of emergencies. Would you mind taking some coins and doing some shopping for us in Balon?\"\n\n\"Of course bonded.\" Smiling at the Dryad \"Let me know what you need. I will be leaving soon, so let's get a list together. Do you need anything Gala?\"\n\nThe three women came together talking as Aiden began packing their supplies preparing for the hike west up into the hills. \n\nAfter a half an hour Sophia split from the group giving Aiden a hug, grabbing his butt squeezing tight, \"See you soon my butt slut. A week at most.\" Then she gave his lips a peck and was gone running east through the forest. Her speed was impressive as she sprinted away, red mane trailing behind her. \n\nTurning the Dryad and Widowkin he smiled and began walking westward towards home. \n\n***\n\nA full day passed since Sophia had separated with them. Gala seemed to have no issues climbing the steep hills, her eight strong limbs propelling her. She insisted on carrying Aiden's pack as well. Often disappearing to hunt or scout and appear ahead of them waiting along their trail west. Small dead critters hanging from her pack, which they used for lunch and dinner. Each meal or break usually consisted of Aiden getting fucked or blowing Diane as well. The Widowkin a silent voyeur the whole time.\n\nThe hike passed quickly as the three talked. Diane showed them interesting plants and animals. While Gala spoke to him of what she knew of his Blessings and asking him questions about his childhood. As they entered Diane's clearing they shucked off their packs and immediately laid down into the bed of furs. Gala taking one of the extra Blackwood yurts nearby usually reserved for visiting Dryads. \n\nThe singing of birds woke Aiden from a pleasant dream of a red furred creature. He could hear the wind flitting to the trees and skittering of squirrels as they raced over branches chittering as they foraged. Eyes closed he attempted to direct his hearing. He'd been practicing on the hike back and he was getting good at picking up quieter sounds farther away.\n\nAs he listened to the surrounding area he picked up low tones of talking not far from him. Concentrating he heard Gala's throaty voice interspersed between Diane's musical one. Their words came into focus and he smiled as he eavesdropped on them.\n\n...friends with their mother and father. I owed Taya and Alec a few favors. They helped me clear out some.. less desirables from my forest. His father died in my care after the defense of the village. His wounds were too numerous. Since then Taya and I remained friends and she asked me to care for him after he received his unique Blessings on his 18th birthday.\"\n\nHe could hear Diane's smile as she continued. \"We had an instant attraction and we bonded the next morning. I'll be the first to admit I was scared of the permanent binding but... I'm not sure I would have stood a chance at resisting him or my own desires. He's perfect and I couldn't be happier, Sophia feels the same way.\"\n\n\"Does he.. I was wondering.. does he enjoy being a-a.. slut for you?\" Gala asked hesitantly. \"Does he actually like when you.. dominate him?\" \n\nDiane replied easily knowing exactly what made her boy toy aroused. \"Oh yes! Though I don't think he's fully accepted that part of himself, submissiveness, as you may describe it. I think he's a bit unconfident in sexual situations, his childhood was tumultuous at best and some of that is repressed. All it takes is time though. He'll start to understand his own sexual needs and desires. He is still young like you.\"\n\n\"My sexual needs.. as you put it, are more domineering than you or even Sophia I think. I like to control, while I've never had a partner to practice with I know it to be true. My mother is the same.. it's in my blood, I guess..\" Gala finished lamely. ",
        "\"What is it exactly you would like to do with him?\" Diane asked curiously, her voice still filled him mirth. \n\nAiden felt guilty for listening in but he couldn't help being curious as they discussed him. It sounded almost as if his and Gala's coupling was a foregone conclusion to them. A bit annoyed he continued to listen.\n\nGala hummed a bit before the answer rushed out of her, \"I want to tie him up in my webs.\"\n\n\"I.. see. He may enjoy that. You would need his permission I think.\"\n\n\"Of course.\" Gala affirmed. \"I had no intention of forcing anything. I ask because I'm genuinely interested in him. His Blessings are unique and he seems sweet. I wish him to be my first, my bonded for life if he'll take everything of me.\"\n\n\"Well,\" Diane said \"We will see if he is truly interested in you soon enough. He's definitely attracted to you physically. What else did you want to try with him?\" She asked grinning. \n\n\"Really?\" The Widowkin seemed surprised and excited. Listing out all the dirty things she wished to try with him and his other bonded. He gathered that she wanted to use him as a sexual object. Though not in a completely selfish way. With Diane filling in the blanks, Gala felt that Aiden would enjoy the act of being controlled and used. To act as her obedient submissive as she put it, at least as far as the bedroom went. Tuning out the conversation Aiden thought about what he had heard. \n\nIf he was being honest with himself what Gala was suggesting didn't sound too different from how Sophia played with him and to a lesser extent Diane. They did use him for sexual gratification but always returned it in kind. Outside of the bedroom they treated him as an equal. Each day he tried something new with his bonded. He enjoyed experimenting and what Gala suggested had planted a dark seed in his mind. He chewed on that thought as his conversations with Gala and Diane floated to the top. \n\nDiane was able to expertly pick apart his arousal and tell him exactly what his darkest fantasies and emotions evoked in him. \n\nHe had asked her why he felt giddy when Sophia had used her pet names or used him roughly. She explained that it fed a kernel of his psyche that enjoyed being what he considered to be a slut.. a boy toy. He buried that part of himself in his youth. The Stecher brothers often used off color names to poke fun at his looks or just bullied him outright. He had suffered it in silence not wishing to burden his mother or sister. Diane thought this may have led to his sexual and emotional repression. The nymph magic running through his body was bringing those darker fantasies to light. \n\nGala suggested that the harem consisting of only demis that were also futas may also have an effect, the fact that he was a human male was also a factor. Grex bonds can have strange effects dependent upon the harems composition. She surmised the act of sex could change their bonds over time deepeneing their relationships. Grex Blessings were relatively rare and the study around them wasn't exact. \n\nBreaking off that stream of thought Aiden yawned and got dressed. Diane may be a Dryad but she still had to maintain her home and land. With Sophia and Gala joining them, it would need a little maintenance. He also intended on eventually starting a small farm near Diane's home. Something they could maintain themselves but would also offer them with a steady supply of food. He also wanted to provide and care for them. He knew his Blessings may eventually attract the wrong attention and they would need to step in to defend him. He wasn't a fool. His bonded were more naturally skilled at fighting and had real world experience. Getting to work he began to gather his clothes to wash. \n\nExiting the yurt he headed towards the nearby stream. Diane stepped out in front of him. His lips quivering with a smile he raised his eyebrow waiting for her to speak. Grinning like a predator she leaned against an ornately carved staff, various birds and ivy cut into the wood. \n\nFinally she spoke snaring his eyes, \"I must leave for a few days. Gala has assured me that she will watch over you while I'm gone. You will need to check in with her regularly as she will be harvesting her black silk over the next day.\" She sighed as she explained, \"I need to meet with a few of my sisters and see to my duties as a caretaker. Hopefully Sophia will return to the forest while I am out. Make sure to provide Gala with meals she will be somewhat distracted while she harvests. Please please be watchful, my clearing is protected but this forest can still be dangerous. Roaming monsters are not uncommon as the snow melts and the mountain passes open.\" \n\nDiane stepped towards him then wrapping him up and bringing her lips to his ear as she whispered, \"Be safe my love and give Gala a chance. She is young, brave, and seems to like you quite a bit. Her sexual appetites may intrigue, who knows? She's also a virgin.\" Kissing his pouty lips as she stepped back. Wearing a knowing smile she tugged at her ear with thumb and forefinger. Turning she headed north into the forest. Aiden stood there watching her hips dumbly wondering how she knew he was listening in. \n\n***\n\nSophia was happy. She'd spoken with her father yesterday mostly telling the truth. Not wanting to expose Aiden's Blessing she told him that a Dryad had saved her from a kidnapping and they became friends. The Dryad offered to provide her a place to stay in the forest so she could practice her skills in herbalism and alchemy. Befriending a Dryad was no simple matter, her father recognizing the chance for her to train with the near infinite resources of the forest. Normally they only received monthly allotment from the Dryads at fixed prices. He had acquiesced and only asked that she return in a month to check in so he could be sure she was all right. \n\nThe next morning she packed her clothes leaving them in the front room of her father's ranch home. A few miles east across plains stood Balon city, with Diane's sack of gold in hand, she ran. \n\nReaching Balon's gates quickly she slowed as she caught sight of a line of wagons filled with goods, seeing familiar faces in the crowd she smiled and waved but didn't stop. Balon city had an even mix of demis and humans and they generally lived side by side peacefully. Balon was far from the Bailona capital and here in the deep wilderness even city folk needed to help one another. \n\nShe spotted a myriad of beast kin; Rabbit, Falcon, A family of Beaverkin. She even saw a few Daemon kin interspersed in the crowd. A Bulldon stood head and shoulders above the crowd. They were a docile people that found joy in manual labor, it was common for them to be farmers or builders. Bulldon looked similar to Bovinekin but they didn't have fur. Their skin a pitch black making their beady yellow eyes pop out. Four massive horns curled up on his bull like head. Sophia found it difficult to tell individual Bulldon apart, though they didn't seem to have a problem. \n\nLooking to the big shopping list that included requests from both Diane and Gala she started towards the market. Aiden had only asked her for a few foreign cooking spices and some toiletries. First she needed to buy a pack mule. She wouldn't be able to haul everything up into the hills on her own. \n\nThe day drifted by quickly as she stopped by the blacksmith, leather workers, tanner, and a seamstress. Sophia and Diane had decided it best to purchase armor for and a crossbow for Aiden. He would need to learn how to defend himself but he required the proper equipment. Buying herself a light chainmail gambeson with matching vambraces and shin guards made specifically for Beastkin. \n\nShe also purchased a shield and longsword for Gala, a shortsword and long dagger for herself. Gala said she would train Sophia herself. The Foxkin was skilled in hand to hand but hadn't trained with swords before. The last thing Gala requested was sewing supplies and cured leather that she could work herself. \n\nDiane's shortlist was more mundane and it only included things for cooking and herbs that didn't grow naturally near her lands. For the most part the forest provided for them. Diane was skilled in butchering and tanning. Nothin she killed went to waste. She also had a great knowledge of herbology and the creation of oils, poultices, and cures. Diane was young compared to some Dryads but she was still a fount of knowledge and experience. \n\nSecuring everything onto the pack horse she set off towards her last destination before she headed back home. Stopping at a food cart she bought a skewered Lidon lizard, she ate as she meandered towards the clothing district. Street merchants yelling out their wares and prices, streams of traders and adventures bustled down the wide streets. The sounds of people bartering, and coin changing hands loud in her fox ears. \n\nReaching her destination she looked up at the large black building. The red sign on the front named the store Rosie's. Rosie was actually a Foxkin and was once a friend of Sophia's mother. When Sophia's mother died years ago, Rosie was there to offer comfort and took on a similar role to her mother as confidant. \n\nMoving the pack horse into the store's stable Sophia stepped in through the front door. The store was a godsend for women shopping for all kinds of clothes. Two floors of the building displayed dresses, skirts, blouses, and a bevy of underclothes. They looked to be extremely busy too, demis and humans floating around the store. Some of the clothes were imported, while others made right here in Balon. \n\nThere was also an open secret in the futa community that Rosie had a basement shop that sold sex toys and various garments catered towards sex. Rosie had once been a mistress of a high class brothel in the capitol that catered to futas. She knew their variety of tastes extremely well. \n\n\"Sophia darling!\" \n\nSophia turned her head towards the voice, Rosie's head and chest leaned over the balcony cleavage spilling from her low cut black dress. \n\n\"Sophia! Come up to my office, I have so many new outfits I want to show you. They came straight from the capitol! Pierce Anuge is the designer, I hate the cock sucking twat but he does make beautiful dresses. Come now, hurry up child I don't have all day\" Gesturing at Sophia a broad grin on her face completely ignoring some of the shocked looks of a few customers.\n\nAn hour later, sitting at Rosie's desk over a cup of tea Sophia finishing her story about Aiden and Diane. Rosie was the only one she could confide the complete truth in. She would die before she gave up Sophia's secrets. \n\n\"Hmmmmm,\" Rosie hummed \"Never thought you would join a harem, especially a bound one. Though I'm a little jealous of this boy you describe he sounds delightful and very special. A Dryad as well.. I'm sure the nymphs magic is.. energizing, is it not?\" Rosie asked smiling over her tea cup.\n\nSophia scratched at her ears, grinning like an idiot. \"I would be jealous of me too.. he's perfect and I want to care for him and love him. It's a bit scary being bonded for the rest of our lives. He has a good heart and a strong soul though. And.. and I honestly can't wait to get back to him. I'm sure that Widowkin has him tied up and is abusing him thoroughly.\" She added sourly. \n\nGuffawing at that, Rosie leaned forward, \"So why are you really in my shop? New clothes, shoes, underthings? Or maybe something a bit more provocative?\" Her eyebrows raised, smirking at Sophia.\n\nSophia grabbed Diane's gold pouch and dropped it to Rosie's desk, with a clatter a few coins spilled out. Then Sophia handed over a piece of paper. They included clothing sizes for herself, Gala, Diane, and Aiden. \n\n\"This is mostly for Aiden.. one or two things for the rest of us when there's a special occasion. Otherwise he will need a full wardrobe, the clothes and underwear should range from full on slut whore to cute shy modesty.\" Sophia said with a toothy grin.\n\nRosie's eyebrows came down as she looked at his sizes, \"I believe we have a large selection in his size, though we may need to adjust the bust size on a few. A bra while not needed may help fill out a few of the dresses. Will he truly wear female clothing?\" She asked coyly, nose wrinkling. \n\n\"Diane and I are very confident.\" Sophia confirmed smiling as the Foxkins interest.\n\n\"Okay,\" Rosie said simply, picking up a bell she rang it once. Behind Sophia an employee entered a white furred Rabbitkin. She was cute and dressed immaculately like all of Rosie's people. \"Lauren, grab a few others and start collecting garments in these sizes. I've written down a few suggestions...\" \n\nRosie finished instructing the Rabbitkin on Sophia's list. Giving the younger Foxkin a wolfish grin she asked, \"Sooo.. time for a look around the basement? I'm sure we can find a few fun things for your boy toy. We received a few interesting devices imported from Franeek not long ago. A Futa woodcarver has been making a few waves in my circles. She sent something over she calls a butt plug that's all the rage, each set has ten sizes.. very fun looking. The carver also included another item called, anal beeds!\" Nodding enthusiastically. \n\nSophia was bouncing on her toes excitedly, she couldn't wait to get back home to her bonded! The thought of bending him deeper into their shared fantasies made her member harden. \n\n*** \n\nAiden finished preparing a rabbit stew for dinner as he squatted near the cook fire. Warm bread sat cooling nearby filling the clearing with the smell. As he gathered up a bowl for Gala and himself, he tucked a bottle of wine under his arm. Diane's underground storage cooler held a surprisingly large selection of wines. Cured meats, barrels of grain, and a variety of other foodstuffs which were kept fresh alongside her stockpile of herbs. \n\nAiden approached Gala's yurt, sticking his head in and froze. When he had come in for lunch hours ago she had been concentrating on cleaning her chiton plates. They ate in silence before Aiden had trudge off to continue his chores. \n\nStock still Aiden studied the Widowkin. She was naked lying on her stomach facing away from him. Her four chiton Limbs were delicately rolling up black silk into a cylinder like shape. The spider-like arms pulled at a single string attached to her lower back. A tiny hole no bigger than a pinhead spooled out the black shiny substance. His gaze drifted downwards as he admired her figure. She had shallow dimples resting just above her firm blue-grey ass. It was just as thick and wide as Sophia's. Her girlcock barely visible as it rested between her thighs. A large ball sac hung down to rest against the furs. Her butt started to jiggle back and forth. Aiden's eyes snapped to her deep black ones as she smiled over her shoulder.\n\n\"Like what you see butt slut?\" She teased.\n\nCoughing, Aiden stepped into her room, his face beat red. \"I brought you dinner and some wine.\"\n\n\"Thank you Aiden, please set it down here. I am still harvesting and I don't want to interrupt the process. I should be finished by midnight or so I think.\"\n\nShrugging Aiden sat down next to her positioning himself so that he couldn't stare at her without being obvious. Grinning at his tactic Gala ate the stew and bread watching him. Soon they started talking about their little things and finding the contrast of their lives interesting. While Aiden's youth had been filled with farming and housework, Gala had practiced for battle. She had mastered several fighting styles with different weapons. From her mother she learned tactics and strategy on warfare. \n\n\"Why do your people train like that Gala?\" \n\nThe Widowkin shrugged, \"It is our way, Widowkin are inherently territorial of their family land. Many other species like to challenge us for hunting areas and the like. So we train young and hard because we know the fight will come to us.\" \n\nAiden made to get up when Gala's hand came to rest on his. Looking into his eyes she bit her lip coming to a decision.\n\n\"Aiden would you like to share a bed with me tonight? We don't have to do anything, in fact I will be sore after the harvest so I'd rather just sleep.. you don't have to-\"\n\nAiden cut her off, \"Sure Gala I'd love that. Let me clean up the dishes and I'll come back and keep you company.\"\n\n\"See you soon butt slut.\" She said softly as he left the yurt knowing he'd heard it. Smiling, she began to focus on her task.. a few more hours she thought, sighing. \n\nChapter 10\n\nGala woke to the warmth of another body pressed to her front, looking down through bangs of he white hair she smiled. Aiden was curled into her breathing softly against her bosom. Pulling the furs up she wrapped her legs and arms around him. She breathed in his scent as she relaxed into bed of furs studying him. The freckles that peppered his nose, his soft pouty lips, and alabaster skin. He was beautiful and for now she had him to herself. Resting her chin against his temple she hummed to herself waiting for him to wake. \n\nEventually his hazel eyes fluttered open bleary with sleep. He felt his penis harden and the nymph's passive magic start exert itself upon waking. Staring into Gala's heavy blue grey cleavage, her dark nipples preset to his chest. He'd never get used to waking up in the arms of beautiful women. Her grey-blue skin was soft against his as he felt her arms and legs shift around him. He brushed the chiton on her hip with his fingers. The black armor felt warm and smooth but hard, he was sure it could easily deflect blades. \n\n\"If you keep petting me like that I'm going to have to start petting you back.\"\n\nHand retreating quickly he looked up and saw Gala's black gaze focused on him.\n\n\"Good morning Aiden. Thank you for the meals you provided yesterday. It was nice to be able to thread in peace.\"\n\nAiden was curious, \"What will you use the silk for?\"\n\n\"Black silk is a precious resource for Widowkin, we only produce it once a year. Normally my silk is clear or silver depending on how you see it. We can sell black silk if we wish and it will fetch us good trade or coin. Though we usually make fabric for clothes and other various articles. For this batch.. I'm not sure yet. I have a few ideas but there is no rush.\"\n\n\"Would you let me trim your hair?\" She asked him suddenly. \"I don't think hiking the wilds has done it any favors.\"\n\nReaching up he fingered the black strands and nodded. \n\n\"Okay sit up for me. Back towards me.\" She ordered. Picking up a pair of scissors she borrowed from Diane she began trimming the dead ends and combing through his hair with her fingers. \n\nThe whole time she sat behind him cutting his hair, his heart beat rapidly. Gala was nude and so her flaccid cock rested partially against his bottom. Here nipples grazing his back occasionally. He shivered involuntarily as she leaned forward turning his head to observe her work, her breath hot on his neck. \n\n\"Turn around.\"\n\nDoing as she asked Aiden spun and faced her sitting Indian style, Gala thighs sitting astride him. She watched him as his eyes flicked down and back up a pink flush creeping up his neck. \n\nBrushing a few strands of hair from his eyes she cupped his face staring into his wide hazel eyes. Slowly she leaned forward and kissed him softly, she started to nuzzle him before pulling back quickly. \"Sorry Aiden,\" she said \"I got ahead of myself..\"\n\n\"That's alright,\" he assured her a small smile on his lips. \n\n\"Felt.. good. You smell like pine needles.\" He blurted.\n\nShe laughed, the first real laugh since he met her. It was throaty like her voice and it tickled his spine. \n\n\"Aiden..\" biting her lip, eyes darting to the side and then back to his. \"Have you considered bonding with me?\"\n\nHis eyes drifted over her heavy breasts and dark nipples. Her taut abdominal muscles led to wide hips and thick muscled thighs that looked like they could crush him. Her member hung limp between her legs. His eyes drifted back up to her face. Her dark blue lips were parted revealing her white teeth. His gaze drifted over her strong jaw and pure white hair. Remembering her odd list of fantasies he'd eavesdropped on his brain locked up. As if his body already voted on the proposal his cock twitch and his puckered ring clenched. ",
        "Eyes wide he nodded. She stared at him and then opened her mouth to explain her sexual needs. Aiden realized as she spoke how brave she really was. He wasn't sure he'd be able to lay bare his darkest sexual desires to her. \n\n\"Aiden I have.. certain fantasies.. well there more like needs I guess.\" She began, \"I would like to have full control in our bedroom activities. I wish for you to be my submissive, as I would be your mistress. I would use you for my pleasure, but only if you felt pleasure at letting go and giving in to your vulnerabilities. To give up control. I would reward you for good behavior or.. punish you for bad behavior.\" Smiling shyly when she said this. \"I understand it's a bit.. weird? I don't know. I want you as my sub, but I also want you to want me as your mistress.. does that make any sense? We would remain equal partners, so you must give yourself willingly\" \n\nAiden had remained silent as he spoke, a neutral expression on his face. Diane's voice drifted through his mind asking him to give Gala a chance. Aiden started to feel his heart thumping quicker as he thought of how it would feel with Gala. He wasn't completely sure what being submissive meant in this situation but he wanted to at least try. If it might feed his own dark fantasies why not?\n\nThinking on what she had said he smiled at her. \"Gala-\" he said and then corrected himself. \"Mistress Gala, I would be honored to be your submissive. It sounds.. fun. I think I'll enjoy exploring this side of myself with you.\" Bowing his head to her. \n\nGala leapt onto him grabbing his face in both hands and started kissing him all over.\n\n\"Okay, okay Gala! Stop, stop, stop!\" He said laughing. \"Let me make breakfast while you prepare us for this.. stuff we're going to do.\" \n\nFinally her kissing abated and she smiled at him, her forehead pressed to his. \"Thank you bonded, I will enjoy instructing you... Thoroughly.\" Smile becoming wolfish, her sharp canines completing the look.\n\n*** \n\nFinishing breakfast Gala asked him to leave and come back in a few hours. She said she would need more time to prepare correctly and get things ready. Aiden decided to make his own preparations by taking a bath and thoroughly scrubbing himself making sure to get in every crevice. Even his anus which made him all the more excited to get back to Gala. \n\nFinishing his bath Aiden busied himself by attempting and failing to play Diane's lute. Eventually he heard Gala call out. Walking over to the Blackwood home he saw her standing out front. She stood straight backed hands folded behind her smiling at him. Aiden studied her as he approached. Gala really was beautiful, her impressive form towered over him. Her sleek muscles radiated strength. \n\nHer shiraishi was bound tight above and beneath her breasts showing off her blue nipples and large chest, the black silk skirt still wrapped around her waist hiding her monster. \n\n\"A few rules before we began,\" Gala said \"when we enter our bedroom together you will call me Mistress. Your name will be Slut, you will respond to it and obey it. Understand?\"\n\nAiden nodded sheepishly and she continued.\n\n\"Our safe word will be 'Orange'. If you ever feel like you do not wish to continue or if you feel too much pain just say Orange.\"\n\nAiden blanched at that and looked at her worriedly.\n\nGala forestalled him with raised palms. \"Do not worry no harm will come to you. The safe word will probably come in later but likely not today. We will just be experimenting together mostly. I do not intend to hurt you.. too much.\" She finished smiling \n\n\"And.. and we can stop whenever I want.. if I don't like it?\" \n\n\"Of course, we are equals, remember? This is a give and take and I want this to be as fun for you as it is for me. If you do not enjoy it neither will I\" she promised.\n\n\"Okay I think I'm ready then...Mistress.\"\n\nSmiling devilishly at that she pointed at him. \"Strip, slut. Then come in thirty seconds after me.\" Giving him one final smoldering look she entered the yurt.\n\nNude Aiden walked forward opening the furred flaps that made up the door, his body quivering slightly in fear and anticipation. Surprised he found he couldn't see, she had covered up the openings that let the sunlight in. \n\n\"Gala..?\" he called softly, stepping forth. Suddenly he felt his stomach drop out from under him. Something wrapped around his ankles and yelped, feeling himself being pulled up. Breathing wildly he jerked his arms trying to reach his ankles. He felt hands wrap around his wrists binding them. \"Gala is this? What are you doing?\"\n\n\"Shhhh slut, I'm getting you ready. You made a mistake though.. two in fact.\" He felt her drop his now bound wrists as he hung upside down. \"You are to call me mistress at all times. I'm going to have to punish you.\"\n\n\"Please G- Mistress, I'm sorry I was just.. surprised.\"\n\n\"I told you to keep your mouth shut slut. Are you looking for more punishment?\" Stepping away she pulled at one of the furrs covering the ceiling of the yurt. A thin stream of sunlight illuminated the boy's pale body. Aiden began to look around trying to find Gala. She stepped into the sunlight, her thick girlcock standing to attention in front of his face. The dark blue mushroom head dripping precum.\n\n\"Do you want to service me slut?\" She asked knowing the answer. \n\n\"Yes mistress\" he croaked \n\n\"Of course you do. But first.. punishment.\" Disappearing from view Widowkin shifted behind him. \"Such a perfect pale white ass you have. When I saw Sophia turn it red it made me wet. I think I would like to see it redder, what do you think slut?\"\n\n\"Hmmm uhh.. I don't know mistress\" then Aiden felt her palm slap hard against his ass cheek. They jiggled enticingly as he cried out. \n\n\"Wrong answer slut.\" She said harshly smacking his ass again. \"Beg to for me slap your ass! Beg for your mistress to punish you!\" Reaching up she grabbed his privates.\n\nAiden was awash in sexual energy, his heart pumped loudly in his ears as he hung there. Gala.. no his mistress gripping his tool. He felt that kernel of sexual desire ignite in his brain and he gasped. \"Yes Mis-mistress, please punish me!\"\n\n\"Of course slut!\" She said her throaty voice lusty with desire \"I think fifteen swats will do for each cheek. Then my slut can have a reward.\"\n\nGala looked at the boy strung up by her silk bindings. Her girlcock was rock hard and pulsing. She looked at his plush cheeks and couldn't help herself. Her face dove into his valley and she slobbered on his pucker. Pulling back she shoved her thumb in and started pushing against his prostate listening to him gasp at forced entry. Then she began to smack his ass cheek leaving red palm prints. \n\n\"Beg slut. Beg for mistress!\"\n\n\"Please mistress.. please punish me. I deserve it.\" Short little squeaks punctuated each slap. \"I'm your slut I deserve your punishment.\"\n\nSwitching hands her right thumb now lodge in his ass as she began to slap his other cheek even harder. The pale skin of his butt turning a deep red. With a final bruising slap the Widowkin moved to his front removing her thumb. He felt his feet lowering and then she did something with his bindings. He now hung parallel to the ground. His weight now supported by a new binding around his waist and additionally by his ankles and his wrists which were now behind his back. Looking up he saw Gala crouched before him the sunlight illuminating her beautiful face. Her eyes tracked his own as she smiled. \n\n\"Now it's time for your reward. You will let mistress use your slut mouth for pleasure. Do a good job and I'll give you another reward.\" \n\n\"Yes mistress, please use my slut mouth how you wish\" Aiden answered quickly, he was so turned on right now he couldn't stand it. His throbbing cock pointed downward leaking precum. Gala's anal probing had teased him mercilessly and he wish she would just use her thick member to abuse his hole. His butt cheeks burned and he still had tears watering his eyes from the punishment.\n\nStanding up Gala stood straight in front of him. \"Now slut since my thick girlcock will be filling your pretty mouth you won't be able to say the safe word. So instead open her clenched fists and spread your fingers.\"\n\n\"Yes mistress.\"\n\n\"Now open those girly lips and stick out your tongue for me?\"\n\nOpening his mouth as wide as possible Aiden stuck his tongue out flat. \n\n\"Good slut..\" she breathed, her eyes staring down as she laid her dark blue mushroom tip to his pink tongue. \"Keep it open slut I want to use your tongue a while.\"\n\nHer hand came up to cup his neck and jaw lightly as she pushed her head over his tongue going deep enough to hit his uvula and then back. Over the past few days Aiden had learned to take Diane and Sophi's cock and he had grown used to controlling his gag reflex. His eyes watching her pelvis rocking back and forth. \n\nGala watched as precum began to drip from her slit over his tongue mixing with his drool. It streamed down his lips and chin. \n\n\"Close your lips slut and start sucking, use your tongue and make sure to swallow your mistress's gift.\"\n\nShe watched as his pink lips circle her girth, his eyes staring straight at her veiny member. She could feel his little tongue stab at her slit and writhe around her head. Closing her eyes and leaning her head back she relaxed like that for a few minutes, the boy suckling at her mushroom tip his body hanging limp from the criss crossed branches that made up the ceiling. \n\nEventually she grabbed onto his petite shoulders and began rocking him back and forth. Standing there unmoving with her cock in the boys mouth she swung him to and fro. The speed of his swinging steadily increased as Gala's girlcock began to spear his throat. His small grunts punctuated her penetration. \n\n\"That's it slut boy let mistress use your hot little mouth. That's all it's good for. Sucking girlcock. I've seen the pleasure on your face when you eat Sophia and Diane. Even cleaning them off makes you happy. Their cum warming your stomach. That's it... suck harder. More tongue. Ohhhh fuccckk. You dirty slut! Your mouth was made for this!\"\n\nEncouraged by her words Aiden did his best to pleasure his mistress. He felt her warm precum lather his mouth and throat. As the speed of the swinging increased further he felt Gala's heavy baby makers slap against his chin and neck. His nose slamming into her white pubic hair just above her shaft. His lips felt raw.\n\nGala was close now. She could feel her tip buried in his throat with every swing the wet spit and cum on his lips making squishing sounds as her abs mashed against his face. \n\nHe swallowed each time she hit his throat, his tongue snaking out to lick at the top her smooth sac. \n\n\"Take. It. Slut.\" Grunting every word. \"Take your mistress's cock. I'm gonna bury my seed in your tummy. Keep going you'll get your reward soon.\"\n\nGala started thrusting in time with the swings now her tip nearly exiting his mouth before he swung back, her head drilling it the back of his throat. He could barely suck now, his tongue attempting to keep up. Drool and precum smearing his face. \n\nFinally Gala grunted loudly and grabbed his head, hugging herself to him. Her twitching cock buried in his throat as he swallowed. A thick coating of white seed washed his throat as he gagged on her thick meet. Slumping over him a bit, Gala moved her hips back a bit and let her mushroom tip sit on his tongue as he gasped for breath. \n\nBreathing hard she straightened up her softened length partially resting in his mouth. Her cock was still covered in her seed and his saliva. Looking down she grinned at him. Her slut, her bonded. She couldn't believe she found him, the perfect boy for her to nest with. \n\n\"Clean me slut. I think you deserve another reward. That bit with your tongue on my sac was inspired.\"\n\nSmiling around her soft girlcock he began sucking at her trying his best to collect all the seed off her. His mouth felt sore and his throat bruised. He knew his passive healing from Diane's bond would soon have him back to rights though. He was distracted by his thoughts as he sucked on her. She had been right. He enjoyed being used like this. It was nice to have a partner that could make that small flame of desire roar into an inferno. He wanted to be shamed and demeaned to be controlled. At least in a setting with those he was comfortable with.. like his mistress or Sophia and Diane. He felt giddy at his next reward. He knew to finish the binding Gala would need to use his ass. \n\nGala watched as he finished sucking on her head, her cock shiny with his saliva but clean of her seed. \n\n\"Good work slut. Now to your next reward, we're still going to use your fingers for the safe word\" she added stepping around his hanging body. \n\n\"Yes mistress.\"\n\nHe felt her start to wrap silk bindings over his mouth and around the back of his head. Shivering in anticipation he waited.\n\nShe trailed her fingers down his leg as she approached the binding on his ankles. Rewrapping and securing his ankles, she separated his legs, splitting him wide. The silk ropes that secured him to the ceiling remained taught as he did the splits hanging in the air, his wrists still bound behind his back. Breathing through his nose rapidly, eyes wide, Aiden waited for the inevitable. \n\nGala stepped up behind his pert butt, his legs spread wide. His small member pointed to the ground. She traced his reddened ass with her hands and gently pulled and played with his tiny ball sac. Opening a bottle she poured the sex oil on her now stiff shaft. She spread the oil over his bubble butt as well making his skin shine in the sunlight. With two fingers she worked the oil into his hole. \n\nFinishing, she grabbed a hold of his bound wrists with both her hands and looked up to the back of Aiden's head. \"I'm going to start using your boy pussy now slut. Make sure to squeeze and push for your mistress. I'd ask if you're ready for my thick girlcock but I already know you're begging for it.\" With that she lined up her oiled head with his puckered pink hole.\n\nGaya pushed her head in feeling his ring wrap around her shaft. Her heart was thudding and sweat began beading on her forehead. This is it, she thought, the true test. Slamming forward she buried herself into the boy. The eleven inches of her thick shaft splitting him in half. He screamed into the gag around his mouth, or tried to, she quickly drew back to her tip and slammed in again. His ass cheeks and thick thighs gyrating as her hips mashed up against him. Watching his hands for the safe word.\n\nAiden's eyes were wide as his whole body shook with the strength of Gala's thrust. The light sheen of sweat sweat covering his body making him shiver as he felt his body heat increase. Then she started moving with purpose, rapid thrusts pounding her cock into the boys hole. His passage clamped down on her each time she pulled out leaving his tunnel empty.. but not for long. \n\nGala was thrusting furiously now her hips making loud wet smacks against his bottom. She moved her hands down to his hips and grabbed tightly. Swinging him back towards her with each thrust just like she did with his mouth, though without the warm up. Her heavy breasts bounced in her vision as she watched her grey-blue meat stick spreading his hole. His pink ring wink at her frantically when she pulled out to the tip. \n\n\"Oh my little slut boy.. your abused hole looks so good with mistress fat cock in it. You feel so good.. uhhhhnnn.. clench for me slut! I'm about to cum. That's a good slut, yes-yes-yes-yes! Oh fuuuuck yessss..\" her balls poured forth a heavy dose of cum, shooting it into his channel as she continued thrusting. \"Oh shit baby.. you take it so well. Just like your mouth your ass is built for girlcock! Uuuuhnnnn..\" she groaned her thrusts slowing as she finished cumming. Sliding her length free she used her head to spread her cum over his taint and balls, claiming him. \n\nUnbinding him she lowered him to the furs. He rolled onto his back gasping for air, his little cock still erect. Smiling he watched as Gala placed a foot to each side of his head then squatted and without warning slid her soft dirty length into his mouth. \n\n\"You know what to do slut. Clean mistress.\" She sighed as he started to suck on her again. Her sweaty balls resting on his eyes and nose. \"Jack yourself off. I want to see you spurt while you suck on me.\" \n\nMumbling around her girth his hands came up to his privates and he started to work his penis with his thumb and forefinger. \n\n\"Finger your ass slut.\" Gala ordered\n\nMoaning in affirmation he hiked his knees up and began to finger a gaping asshole still dripping with her seed. \n\nAiden felt good.. really good. She had used him thoroughly and he had enjoyed the act. Still was in fact. Feeling how wide his hole gaped he started making little thrusts into the air and came. His cum spurts landing on his stomach. The smell of Gala's musk thick in his nose, as he sucked tightly on her cum drenched shaft.\n\nGala watched and laughed as his pathetic cock went limp and he continued to play with his ass. \"You are such a good slut for mistress. We're going to have so much fun together.\" \n\nHe moaned around her in agreement tickling her balls with the sensation.\n\n***\n\nSophia trooped through the Dryad forest leading the pack mule through the trees. There was no real trail so she meandered west up hill. With dusk closing in she knew she had to make camp soon. The canopy blocking the last rays of sun seemed to make night come quicker. Stopping she unloaded the pack mule, fed and watered him. Then she began to set up camp, as she began to collect firewood she realized dark it was. The moon was not yet up and the sun had set. Oddly though she could still see perfectly, the blackness of the forest seemed to take on a grey shade not unlike the moonlight but duller. \n\nShe smiled then, \"He must have bonded with the Windowkin..\" she said softly to herself. Using her new found night vision she quickly made a fire and started preparing her dinner. As she did though she picked up the sound of crunching leaves, her head whipping up to peer in the direction. As she watched Diane came around a large Blackwood. \n\n\"Hello bonded!\" She called coming towards Sophia's camp. \"Safe trip? Did you get everything you needed?\" She asked, eyeing the luggage. \"Seems like a lot.\" \n\nSophia responded but hugging the Dryad and laying a kiss to her cheek. Then pointed to the various items labeling them as she went. \n\n\"That bag is filled with outfits for Aiden, and this chest..\" she said grinning widely, \"is filled with fun toys, some new ones I picked up from Rosie's. They came in special order from Freetak.\" \n\nRaising her eyebrows at that Diane grinned back at the Foxkin. \"Can I see them?'' she said. I've seen Rosie's selection and was always intrigued, I just never had the inclination to buy.\"\n\n\"Of course!\" Sophia said excitedly. Opening the trunk she began to remove a few pouches, cases, and various items. \"You'll know some of these I'm sure. Rosie used to own a brothel catering to futas, so she knows her stuff.\"\n\nShe started picking up items and showing them to Diane. Most of the items were made of black leather and polished Blackwood. \"This is a ball gag, I also picked up a bite guard, riding crop.. A leather and a metal chastity cage, both adjustable. Leather cuffs, these leather straps are used in conjunction with them. I got a few dildos as well, all polished Blackwood and of various sizes.\"\n\n\"This,\" she said pulling out a wooden case and opening it \"is something Rosie called a butt plug. They are new and have a few sizes though I only think a few are comparable to our size.\" Pulling out one of the butt plugs she handed it to Diane. It was wider than her member but shorter and tapered at the end. \"They are inserted up the butt and will stay there.\" She added, \"His ring will tighten around this thinner part, see?\"",
        "Diane laughed and ran her fingers over the smooth wood. Sophia brought forth another item, this one a collection of wooden spheres all strung together. The spheres were smooth and about as big around as Diane's clenched fist, \"What are these she asked?\"\n\nSophia chuckled, \"They are called anal beeds. You shove each one up his ass, then you pull them out slowly or he can push them out. I'm extremely excited to try them.\" \n\nDiane nodded, \"What a wonderful device.\" Handing the item back.\n\n\"I got a few other things but they are in separate packs. I can't wait to show you his new outfits. They are some extremely sexy panties and lingerie I got too.\" Looking at the Dryad she laid a hand on her thigh. \"Thank you again for trusting me with that much money, and for welcoming me to the harem.\n\n\"Your welcome of course, we are bonded now, what is mine is ours!\" Diane said. \n\nThe night waned and the moon rose as they talked of their days. The Dryad had already spoken to her sisters giving and receiving updates on the forest. She also let them know that a Widowkin, Foxkin, and human boy would be living in their clearing for the foreseeable future. That they were bonded by a Grex Blessing now and to assist them if they needed it.\n\nThe two fell asleep excited to wake up and get home. Their butt slut was waiting for them. \n\n***\n\nStepping into the clearing Diane and Sophia looked around. They saw Gala sitting in a chair in what could be called the workshop area. A large flat stump with a pavilion over it that Diane used to sew, carve, or leather work. Sophia led the mule towards the Blackwood homes and began unloading the packs. \n\nDiane walking up to Gala asked, \"Hello my new bonded how are you? Where is Aiden? Is he okay?\"\n\nGala grinned up at her setting down the black silk she was working on. \"Wonderful Diane. He was wonderful, we had a great time. Thank you for that by the way. For the time alone with him and the advice.\" Standing she hugged the Dryad. \"He's.. in my yurt. A little tied up.\" She said shyly a light blue blush gracing her cheeks. \n\nTurning Gala waved the Foxkin over and led the two women into her home.The smell of sex wafted out of the entrance. All three smiled widely as they looked down. Aiden's arms and legs were bound into a fetal position. His ass exposed, he seemed to be covered in dry sweat and cum. \n\n\"Sorry about this\" said the Widowkin laughing a bit, \"he was being punished you could say.\" She cut the silk bindings and he sprawled out groaning his eyes flicking open.\n\nChuckling the three women watched as he woke. \"Mistress?\" He asked blearily.\n\n\"Yes slut, your other bonded are here they wish to see you.\"\n\nGuffawing at that Sophia crawled onto him hugging and kissing him. She didn't care that he was cum covered, he looked delicious. Diane kneeled down next to him kissing his lips. \n\n\"I'm so glad you're back!\" He said to the Dryad and Foxkin. Kissing them back.\n\n\"Are you sure? It looks like you had a great time with the Widowkin.. butt slut.\" Said Sophia. \"We could leave you to your mistress for a few more days.\"\n\nLaughing at that he replied, \"Yes I'm happy you're back and safe. I was a bit worried... and yes I did have fun with Ga-mistress..\"\n\nDiane, Sophia, and Gala all chortled as that. \n\n\"Let's get cleaned up together, I'm sure we could all use a bath and meal. Then Sophia has some new toys and gifts to show you.\" said Diane the corners of her mouth turning upward.\n\nRaising his eyebrows at that he nodded, happy all his bonded were home safe. \n\nChapter 11\n\nClean, fed, and refreshed the four started sorting through the supplies Sophia brought back. Sophia placed her own gear in a third yurt next to Gala's. An hour later after everyone had sorted through their things they sat in a circle in Diane's bedroom. A large case and a satchel sitting next to the Foxkin. \n\nAll three women were now staring at the feminine boy named Aiden. Blushing slightly, a small smile on his face he watched them in turn. \n\n\"Do you remember how I wanted to dress you up Aiden?\" Sophia asked.\n\nNodding he looked to the Foxkin. \n\n\"Well,\" she said, bringing one of the satchels into her lap \"my.. friend Rosie owns a clothing shop that caters to women and futa. We were able to get some clothes for you in your size. Underclothes as well.\" \n\n\"We would like you to dress up for us.. but only if you would like.\" Diane iterated, \"We won't force anything on you.\" The Foxkin and Gala nodding at that. \n\nAiden looked to the three of them in turn. He wanted to please them and part of him liked the idea of dressing in girls clothes. The thought of it fed that naughty kernel in his brain that Gala had been expertly working to enflame. \n\nHis face and neck began to turn from a pale white to a glowing red. His eyes focused on his hands. \"I.. I want to try it.. and if it makes you three happy.. that makes me happy. Plus I think.. I think I'm starting to enjoy this kind of thing.\" Taking a deep breath he just wanted to say it out loud. To be honest them and himself. \"You three showed me what my true desires were. To be honest with you.. I love it. I love being shamed, demeaned, and controlled. At least with you three. You make it fun and I enjoy exploring these feelings with you. I'm.. I'm your slut\" \n\nSmiling, the three women looked at each other and then crawled to him and wrapped him up in a group hug. \n\n\"Thank you for sharing that with us Aiden. You are very brave.\" Diane whispered to him. \n\nTaking their seats again Sophia began pulling out dresses, skirts, bras, panties, blouses, and other various articles. They were a variety of colors and designs. The Widowkin started sorting through the chest. Pulling out a few things but leaving most of it alone. The metal chastity cage and a wooden butt plug sat out in front of her. \n\nAiden stared at the clothing. He had never had so much in his life. \n\n\"Get undressed. Now.\" Gala ordered. Immediately he began stripping down to the nude. \n\n\"This,\" Gala said, holding up an odd looking metal piece to Aiden. \"Is a chastity cage, normally it is used to keep males from using their penis. To keep them virginal or from spreading their seed. For you, it will be part of our sex play. To shame you. You'll need permission to remove it, though you should be able to urinate with it on.\"\n\nEyes wide he watched as Gala fit the cage part around his small member, a two metal rings sat at the base of his scrotum and cock. Adjusting it until it fit snugly she proceeded to fit a lock to it, turning a key and removing it. She thread a silk strand through the key and hung it around her neck. The key resting in her cleavage. \n\nSmiling at him coyly showing off her canines she nodded. Then she held up another strange object. \"This is called a butt plug. You will use it at all times unless you are going to the bathroom obviously, or bathing and sleeping. It will keep your tight little butt ready for us. Plus I think it has the added benefit of strengthening your abdominal muscles. With Diane's healing it should work wonderfully. This is also the medium sized plug, there are a few even bigger.\" \n\nShuffling from foot to foot wondering if he might have made a mistake. \n\nGala slathered the butt plug in Honey Sword Oil and set in on the ground sticking straight up. \"Sit on it cum whore.\" \n\nJumping to her words he stood over the object and then squatted aiming his hole towards the tip of the butt plug. If he felt the cool tip press to his ring and he sat using his weight to drive it into him. He gasped as his ring stretched around the wide base and then felt the plug slide in and his ring cinch around the thinner end, the tapered bottom coming to rest up against his hole. \n\n\"Stand and turn around.\" Aiden did as he was told feeling the wide base of the plug push against the sensitive nub of his passage. His cock hardened partially in the chastity. \n\n\"Bend over slut,\" Said Gala \"use your hands and spread your ass.\"\n\nBending over he presented himself to his bonded. The flat part of the plug sat against his ring snuggly. His caged member hanging between his legs, useless. \n\n\"Perfect!\" Sophia laughed and clapped. \"Wonderful job Gala, you've done so well with him.\"\n\nDiane nodded grinning at the Widowkin.\n\n\"My pleasure girls.\" Gala replied smiling broadly at them. \"You can turn around and stand cum slut.\" She said to the boy. \n\nTurning Aiden faced them again with a shy smile on his pink lips, he stared at the ground not willing to look them in the eyes. \n\n\"Here,\" said Sophia, handing him a small piece of lace fabric. \"It's a thong and you wear it like underwear. Here I'll show you.\" Kneeling she fit his feet through the holes of the garment and slid it up his smooth legs. \n\nThe black fabric was snug against his privates and a thin strap ran across his taint and up through the valley of his ass connected to the strap that ran around his hips. \"Great,\" Sophia said, slapping his pert bottom making the butt plug shift inside him. \"This is a bra, hooks up in the front, I'll show you.\" \n\n\"You don't really need a bra but it completes the ensemble.\" Then she brought out a black dress that reminded him of Gala's black silk. \"Arms up.\"\n\nRaising his arms he let Sophia put the dress on over his head, the hem fell down to his knees. The dress hung from thin straps across his petite shoulders showing off his pale skin. Sophia cinched the straps on his lower back so that the dress hugged his hips correctly. \n\nBacking away Sophia looked at him in awe, Diane and Gala with similar expressions. The dress hung on him beautifully, showing off his feminine curves and pale alabaster skin. His straight black hair flowing down to his shoulders.\n\nAiden looked at them wondering what was wrong; they all seemed to be speechless.\n\n\"Gods you look like a young beautiful woman Aiden. I want to ravage you right fucking now.\" Diane said. Sophia and Gala both nodding. \n\n\"My pretty sissy slut ready to be used.\" Gala said, staring at him now like a starving dog.\n\n\"I'm going to destroy that pretty face of yours with my cock. Then breed you silly.\" Sophia croaked \"we can try everything else on later. Plenty of time. Plus there's a toy I need you to try..\"\n\nAiden, a bit shocked at their outburst, started giggling in a high pitch tone. Then he said \"Your butt slut is waiting, I haven't had all three of my bonded at the same time before.\"\n\nThe three futas looked at each other and back to him wolfish smiles promising a night to remember. Quickly they convened and discussed a quick plan of action watching him out of the corner of their eyes. He purposely tried not to listen.\n\nTheir quick conference breaking apart Gala grabbing the leather cuffs from the chest before shifting it into the middle of the bed. Diane covered the chest in furs while Sophia took his hand and led him to the center.\n\n\"Lay down on the chest.\" Sophia ordered, then she shifted him back a bit and he felt his chastity slip over the edge so that it dangled off the side. All three women began sliding his wrists and ankles into the cuffs strapping him securely over the chest. \n\n\"Try to move for me.\" Gala said, trying to shift his body he felt imobile. He wouldn't be able to move, let alone escape. Seemingly satisfied they left the straps and cuffs alone. The three women then knelt in front of him nude, their stiff girlcocks all pointing in his direction. Sophia brought something out from behind her back. \n\n\"We want to see if you can fit all of these up your ass.\" Sophia said grinning holding up the anal beeds. They looked strange to Aiden, eight balls connected to each other by a string each bigger than his clenched fists. All three women watched him staring dumbly at the new toy. \"Do not worry, we will take our time and have fun with it. First though were going fuck you silly and uses that pretty mouth of yours. Our sissy little slut whore.\"\n\n\"Forgot something!\" Diane said, running out of the yurt. Gala and Sophia looked at each other and shrugged then they turned back to their boy toy and grinned. \n\nStanding up Sophia walked behind him laying the anal beads to the side. Diane came in then with two tall mirrors she positioned them in front and behind Aiden so that he could watch his bonded take him. \n\n\"Good idea!\" The Fox and Widowkin said together. Diane nodded sagely. \n\nDiane and Gala then knelt in front of Aiden, cocks in hand as they started to push their tips into his cheeks and face.\n\n\"You want to suck my mommas cock don't you whore?\" \n\n\"My pretty little girl.. tummy full of our warm seed. You want mistress's girlcock in your throat, right?\"\n\n\"Please mistress!\"\n\n\"Stick out your tongue for momma.\" Diane commanded Aiden did as he was bid. Then they started to rub their mushroom heads against his tongue precum dribbling down their slits.\n\nMeanwhile Sophia had lifted up the hem of his dress and exposed his cage manhood and plugged ass. She began twisting the plug out as she smiled and listened to her bonded sisters tease Aiden. The butt plug popped free and he gaped open before the ring closed tight. Sophia then straddled his hips and legs applying oils to his butt and her girlcock. Pressing her tip to his entry it opened easily for her, practically sucking her cock in as she sunk to her hilt. She sat there a moment just enjoying his hot hole wrapped tightly around her girth, his butt flush against her.\n\n\"Ohhhh butt slut how I've missed this.. I'm going to use this hole now while your little useless penis hangs in its cage.\"\n\nAiden was euphoric with Sophia's cock buried in his ass. His own cock did hurt a bit as it strained against his chastity, he could feel his muscles trying to force cum up his shaft. Then he felt Diane's cock enter his mouth. \n\n\"I'm home..\" the Dryad said hilting in his mouth \"suck me butt boy, you have to get me off before Sophia finishes, I get your little ass next.\"\n\n\"Gala,\" Sophia called \"would you like to spread his cheeks for me? It'll be a wonderful show I promise!\"\n\nGala stood smiling at the Foxkin then straddle Aiden's back facing the Foxkin palming his butt cheeks she pulled him apart revealing Sophia's pale cock buried in his hole. Then Sophia and Diane began thrusting at the same time. Aiden was filled simultaneously with twenty inches of girlcock. He groaned and mewled around Diane's thick member as he felt Sophia's pelvis crash into his thighs and ass.\n\nHe felt Gala smacking his ass every few seconds encouraging Sophia to speed up her tempo. Diane for her part took a more relaxed pace. She hadn't seeded Aiden in two days and she knew she could cum when she chose at this point. \n\nA shiver ran up her spine as Aiden tongue began to slip out and lick her sack his lips around her hilt. His moans from the ass fucking vibrating everything. \n\n\"Momma's gonna.. gonna cum quick baby. Ohhhh shit..\" Diane whined, \"Oh shit that tongue feels good.\" \n\nGrabbing his black locks she held his face against herself as he swallowed on her tip. Cum burst out of her like a geyser, so much that she felt him gag around her. Pulling back she let it splash against his tongue, lips, and face. Then Diane fell backward, smiling at his cum covered face. His little pink tongue trying to collect it in his mouth. \n\n\"Gala..\" Diane huffed, \"this cum hole is all yours.\" \n\nGala leapt up over to his front and looked from Aiden's face to Diane's then back.\n\n\"Slut.. did you thank her for her seed?\" Gala asked pointedly.\n\n\"Thank uhn.. you uhn.. momma.. hhhhnnnn\" Aiden grunted out. Sophia's hips still smacking into him.\n\nGrunting Sophia buried her girlcock in his ass and came. Pulling out quickly she began to spray his hole and cheeks with her seed. Slapping his ass with her softening cock as she finished.\n\nLooking to Diane she said, \"Diane this cum hole is open.. and I mean open.\" \n\nGetting up Diane walked up behind her boy, her shaft still coated in cum and saliva. Hardening quickly as she looked at his gaping hole covered in Sophia's seed. Not wasting a moment she slid into his well used ass using Sophia's cum as lube. She quickly picked up the pace matching the Widowkin across from her who was now face fucking Aiden's mouth.\n\nSophia walked around the three of them taking in the show. Occasionally she would play with his ass, pull at his chastity, or gently grip his throat around Gala's shaft. \n\n\"I'm gonna finish in your cum hole my pretty sissy slut.. I want you to hold it on your tongue and show your mistress your reward before you swallow. Uuuuhhhnnnn fuck ya! You little cock sleeve.. take my seed.\"\n\nGrunting Gala started shooting off her load onto his tongue coating it, pulling back for the last few spurts she added to Diane's mess. \"There you go whore! Now show Sophi and mistress what's in your mouth.\"\n\nGala and Sophia watched as he stuck his tongue out a bit and showed the seed lathering his teeth and tongue. \n\n\"Swallow.\" And he did, savoring the Widowkins seed. \n\nAt that moment, Diane started to rail into him fiercely, Aiden huffing out with each thrust. Finally she too buried her cock into his hole and started cumming, pulling out and shooting the last of her load onto his pale booty. Wearing his pretty dress ass and face now covered in futa semen he was the quintessential slut.\n\nSwitching places Sophi in his mouth and Gala in his ass they started to saw him back and forth. The toy chest rocked a bit as they used his cum holes. As Gala entered Sophia exited before pulling out and pushing back in. They kept rhythm for a few minutes before both women washed his insides with their thick ropes of cum saving the last few strands for his ass and face.\n\nThen all three stood up making sure Aiden cleaned the cum off their members thoroughly with his tongue. \n\n\"Look at the mirror sweety,\" Sophia cooed. \"Look at yourself, the perfect sissy slut. Covered in our cum, both holes bred repeatedly.\"\n\nAiden looked into the mirror seeing his face and ass sticky with heavy loads. Lips puffy from overuse drool and snot mixing with their seed. His pale cheeks slathered in ropes of cum, the black dress hiked up around his hips. His hole looked like a dark bottomless well. It remained gaped as seed slowly dripped out. Aiden could feel a slight breeze entering his open chamber, his caged cock leaking as it hung useless and unneeded. Arms and legs bound tightly to the toy chest. \n\nThen he noticed three pairs of eyes staring at him through the mirror. Grinning at them before lowering his head to the chest and drinking in his cum covered bliss. \n\n\"A lovely sight, yes? Ready for the anal beads darling?\" Sophia sang.\n\n\"Yes Sophi. Use me up, whatever you want.\" He replied lustlely.\n\nThe three women smiled at this and started to sit down circling around his rear. Diane poured some Honey Sword Oil into his open hole and spread it over his ring. Then Gala and Diane both began pushing the white seed covering his ass towards that very same hole intending to use it as a lubricant for the large beads.\n\nSophia rubbed each bead with oil as well. Whispering to Diane and Gala she said, \"I'm going to start now, try to collect his seed, he can eat that too.\" \n\n\"Ohhh I'm sure our slut will enjoy his own flavor.\" Gala said. Then both Diane and Gala relaxed and leaned back to watch the show, the mirror well placed so they could watch his face as well. \n\n\"Here we go, remember to breathe!\" Sophie warned before she started pushing the first bead in.\n\nAiden gutterally moaned, eyes closed as he felt the first bead enter him. The bead sat tight in his passage, definitely the widest thing he'd ever had in his ass. With plenty of lube and girlcock his tunnel was well prepared. Slowly he began to feel the second being pushing in. Flicking his eyes up to look in the mirror he saw all three women focused on his ass, mouths agape. He looked and saw Sophia pressing the third ball in, staring in fascination. Each one stretching his ring out wide and pushing against the sensitive nub in his channel. Lips trembling he started to accept the fourth bead when is balls started to tighten up and he flexed weakly against the cuffs. ",
        "\"I-I'm cumming... uhhhhhhnnn.. ohhh momma it feels sooo good ohhh fuuck.\" He mewled. \n\nGala held out a hand underneath his chastity, his cum spilled down weakly from his tip. Crawling over to his face she grabbed his chin and smeared his sissy cum into his parted lips. His bottom lip capturing most of the seed.\n\n\"There you go slut boy, a reward for getting half way through the beads.\" She said \"What do you say and how does your cum taste?\"\n\n\"Taste good mistress, thank you mistress.\"\n\n\"Good slut now open up for Sophi, we can't wait to watch you push them out.\"\n\n\"Yes mistress.\"\n\nGala poked Diane as she started spreading his ass cheek indicating the other. Diane taking the hint started gripping the opposite cheek. Sophia pushed a sixth beed in with the help of her bonded.\n\n\"Almost there baby!\" She called.\n\n\"Unnnn.. soo full.\" He moaned.\n\n\"I know baby doll you're doing so good.\" Pushing in a seventh. \"Last one coming up!\"\n\nThe eighth and final bead was the hardest and took the longest finally though his ring enveloped that mass. Diane and Gala let go of his cheeks letting them slap back together.\n\n\"Impressive..\" said Gala, \"extremely impressive my slut. Many rewards coming your way. Now can you push them out or do you need help?\"\n\nAiden beyond full and quickly began trying to poop out the beads feeling his tunnel tightening as he started to work the first beed out. Soon enough it plopped out, hanging from his hole the weight causing the next beed to push against I'm his prostate.\n\nSophia, Diane, and Galla watched in awe as he inexorably pushed out each and every bead. The last one sitting against his breaching ring as he grunted and pushed. Seven other beads hanging from his hole. Finally he pushed the last one out cum and oil coming with it. His hole gaped widely as they listened to him breathe feminine moans of relief. \n\n\"Duh.. Done..\" Aiden whispered softly. \n\n\"Many, many more rewards..\" Gala promised.\n\n\"Better than I imagined.\" Diane commented.\n\n\"You did so well butt slut!\" Sophia cheered, \"We are definitely using those again soon. I'm amazed they all fit in you and you did so well pushing them out!\"\n\nAiden was too tired to respond. His cum holes well fucked and used, covered in seed, exhausted from pushing the anal beads out. He felt himself being unshackled and undressed. Then he was lifted up and princess carried. Opening his eyes for a moment he saw green skin.\n\n\"Momma..\" he whispered faintly.\n\n\"Mommas got you, I'm going to wash you off and heal you a bit. We went pretty hard on you..\" she said a bit sheepishly. \n\n\"Was fun..\" he mumbled, \"do it again soon.\"\n\nChuckling Diane said, \"Well that little sweet butt of yours will be fine soon. As tight as a virgin when I'm done. I'm glad you had fun so did we.\"\n\nSophia and Gala caught up to the pair both looking delighted. They started cooing and kissing Aiden making sure he knew how much fun they had and how much they cared for him. For the next few hours they doted on him. Healing and washing his body. Feeding him and even removing his chastity for a while. The butt plug remained out of his hole thankfully. \n\nThat night the four bonded fell into a jumble of arms and legs as they went to sleep in Diane's yurt. Happy, warm, and content. \n\nChapter 12\n\nFor the next few weeks a schedule started to take shape. Gala taught Sophia and Aiden how to use their newly acquired weapons and how to wear and maintain their armor. Gala and Sophia sparring as often as possible with a myriad of fighting styles. Diane helped Aiden construct a small garden so that he could grow and harvest some of their food. They also supplemented their meals with what they hunted and fished. Aiden insisted on cooking each meal for them as well, It was the least he could do knowing his Blessings could bring them hardship in the future. Plus he just enjoyed providing for them. Diane began tutoring Sophia in what she knew of herbology and alchemy, more of the former than the latter. Aiden continued to wear the clothes that Sophia bought him each day getting used to dressing like a woman. The three women happily encouraged the behaviour, it was a little odd being called a boy one minute and a girl the next but it also fed into that taboo fetish he shared with them.\n\nKeeping the sex more open, each woman took him multiple times a day individually or together. They had a light bed rotation with only one sleeping with Aiden at night. As time went on and they grew closer and more comfortable it became a group activity. This loose system provided some alone time with each of them while still indulging in their group activities. \n\nAiden was practically naked as he served lunch to Gala, Diane, and Sophia. Black thigh high socks, matching long sleeve gloves, black flats, and a black leather collar were the only things he wore. Pale skin shone in the sun, the spring air was crisp but quite bearable under the warm rays. His only other acoutremon was the butt plug in his ass and the chastity cage on his tiny member. The three women watched him amused, all three having faint erections just looking at him. \n\n\"Gala, why did you dress him up like that? He's irresistible, I can barely hold myself back.\" Sophia complained. \n\n\"I couldn't help myself, I did have a skirt and blouse picked out for him but then I saw him standing there like this.. Also it's warm enough today that he could be a little.. free.\" \n\n\"I love it Gala, well done! You'll have to wear this more often, Aiden, maybe your uniform for when we're home?\"\n\nAiden blushed at the praise. \"Mistress has a good eye. It's comfortable as well. How will you manage to keep your hands off me?\" he said with a straight face\n\n\"Well then,\" Diane said laughing \"It's official this will be the uniform you wear each day unless it's too cold or we ask otherwise. I think I speak for all of us when I say we enjoy your other outfits as well.\"\n\nNodding Aiden just smiled and started in on his sandwich and finger foods. \n\n\"Thank you for lunch Aiden, these little cracker things are my favourite.\" complemented Sophia. \n\n\"Blue River trout, olive oil, and lemon. A few other spices as well.\" Aiden said \n\n\"Mmmmhmm. Yes thank you bonded.\" Diane said \n\n\"Thank you slut. For the food, the complement, and the show.\" Gala said, smirking.\n\n\"You are all very welcome. You all take care of me.. It's one small thing I can do for you.\" Aiden said congenially. \n\nThey continued to eat in peaceful silence until Diane's head came up sharply looking north. Standing up she watched the trees as if searching for something. \n\n\"What is it Diane?\" Gala asked, worriedly standing up with Sophia and Aiden. All four now watching the forest edge. \n\n\"A Dryad sister,\" her tone curious but not worried. \"She must have something urgent to report. I was set to meet with them later this week.\"\n\nSophia caught Aiden's concerned look but just smiled and shrugged. She came up behind him and wrapped her arms around his middle as the four waited for the Dryad to enter the clearing. They all heard the Dryad long before they saw her, Sophia's bonded gift showing off it's ability. \n\nThe Dryad stepped from the forest edge spotting the group and marching towards them. Her gaze drifting over each of them but stopping on Aiden's mostly naked form, her lips curled up as she saw his chastity. His pale skin burning red as she studied him, this was the first stranger to see him dressed like this.. Not that he was dressed really. He wanted to sneak away but Sophia's strong arms kept him still. Aiden knew she was doing it on purpose too, he could feel the amusement rolling off her.\n\nThe Dryad shared many features with Diane but had darker almost black hair that curled around a delicate kind looking face. Her skin had a darker tone as well, a bold forest green. Her irises matched her skin but like Diane had bright streaks of yellow. Slimmer in the chest and hips than his bonded but still exuding that raw nymph sexuallity. \n\n\"Sister,\" she said cheerfully, \"I see your boy toy has taken to your.. desires. No wonder you bonded him, he's gorgeous, though I don't think he's my type. His cock is a bit small, and seems to be locked up, I wouldn't mind riding that pretty face though.\" \n\n\"Who wouldn't? My bonded is unique and beautiful. Still, it's too bad you weren't born a futa Samantha, he may have indulged you.\" Diane replied.\n\n\"Oh? The boy is fond of futas? Well that's too bad.. Oh well. Maybe I can watch sometime.\" Samantha said shrugging and smirking at Aiden. \n\n\"Samantha these are my bonded sisterwives, Gala is the Widowkin and Sophia the Foxkin.\" Diane said ignoring the comment \"Our half naked boy there is Aiden.\" \n\nThe rest of the group exchanged pleasantries, Aiden ducking towards the cook fire to grab another plate for Samantha. The dryad began taking small nibbles off her plate as she prepared to speak. Aiden took his seat between Gala and Sophia. \n\n\"Thank you Aiden for the repast.\" she said smiling. \"It's nice to finally meet you all. Consider me a sister or aunt in your case Aiden. Diane and I share a seed mother.\"\n\nSmiling at the other Dryad Diane asked \"Now, what brings you here sister? This obviously couldn't wait for our usual gathering.\"\n\nSamantha sighed and her shoulders slumped. \"Ill news I'm afraid.. A Ranger sought refuge north west of here. Zoe met him near base Falcon Peak. He was leading a small party of amateur guildies through Fulcan Pass originally when they were ambushed by a pack of managhouls and driven up into the mountains. The guildies were wiped out including their lieutenant. The Ranger escaped with his life but he was wounded. It took him a little over a week to make it to our forest, he came out in Unadat's Valley.\"\n\n\"How big was this pack?\" Gala asked.\n\n\"He reported fifty, no less than thirty. He wants to go back out and track them down. If they got loose in the countryside, it would not be ideal. Zoe and I agree and we want to go with him. Zoe asked me to come request that you join us. Fifty is probably too many for the three of us. If there's any more then definitely not.\" Samantha said. \"Bertha and Alice are aware and will cover our duties while we track the monsters.\"\n\n\"I wonder why a pack is in the mountains? Not much to feed on up there. The dwarves are deep in their tunnels, it's just hermit mages and witches that live alone.\"\n\nSamantha shrugged, \"The Ranger could only provide speculation, the managhouls looked to be mostly humans previously and had been through battle after being turned. A dark cult made them possibly or a cursed item maybe? The managhouls hunted him into Unadat's valley but.. He lost them or they found a new magic source. So.. will you join us? We will need to leave soon. If you do not come he will need to report into Blackwood Fort and the Adventure Guild. He will see if he can get a group together quickly. By that time who knows where they may end up.\"\n\nDiane looked at her bonded, sharing a dark look with them. Managhouls were undead that fed off magic commonly found on recent battlefields with high death counts and a significant amount of magery. If the field was not properly cleansed or sanctified by a cleric the dead would rise and feed on nearby magic. Individually they were weak and it was extremely rare for them to be able to mass. Only a lack of ability or complete negligence would produce a pack. They would remain on the battlefield until their magic source was consumed or dissipated. Once gone they would seek out new nearby sources which tended to be population centers. \n\n\"Aiden will you please retrieve my maps? Red tubes hanging on the side of the bookshelf in my study.\" Diane said waving at him. She looked to be staring at something only she could see deep in thought. \n\nAiden retreated quickly into the yurt four pairs of eyes tracking him.\n\n\"Well he really does pick up the spirits, truly a wonderful figure. He wears chastity all the time? Is there something up his butt too?\" Samantha joked.\n\n\"Oh yes,\" Sophia said \"likes it too. The device up his butt is a toy I recently acquired from Rosie's.\"\n\n\"A well trained slut boy if I do not say so myself, a natural too.\" Said Gala looking over the teacup in her hands, eyes smiling. \n\nComing back to herself Diane smiled and laughed. \"He has other redeemable qualities too girls! He is loving and kind, he works hard for us.. in many ways. Also he can hear you, especially this close!\"\n\n\"We know.\" Gala and Sophia said in unison. \n\nAiden came back out looking a bit flustered trying not to make eye contact with Samantha. Handing the maps to Diane he began cleaning up lunch. Diane spread out the map of the northern forest that also included Fulcan Peek.\n\nPointing to the map she indicated a pass that looked like it wrapped around the summit of the peak and traveled down into the Dryad forest through a wide valley. \"There are only two ways into Unadat's Valley, both of which the Ranger used to enter and escape. There may be a few underground caves that lead into the Dwarven tunnels but no one really uses them as far as I know. We can make it there in a day and should be able to track them easily. I will bring a mana crystal just in case and maybe we can lure them out.\" \n\n\"Why do they call it Unadat's Valley?\" Aiden asked.\n\n\"Unadat is a very old Werehawk that calls that valley home. She's said to be reclusive and will probably not care about the managhouls. Unless you can fly, you won't make it to her home.\" Sophia said helpfully. \n\nDiane nodded, \"She won't care for the managhouls but she won't go out of her way to kill them either. Okay Samantha, I will join you, I do not like the idea of a pack escaping into our forest if they choose that path. My bonded will need to make their own choice since it will be relatively dangerous.\" \n\nSophia, Gala, and Aiden had all decided to join her, not willing to leave Diane. Armor and weapons strapped to the mule, they set out to the northwest leaving the relative safety of Diane's clearing. \n\n***\n\nTheir journey was peaceful as they trekked through the forested hills. Aiden led the mule as it seemed to respond to him instinctively as he conducted it over rocky trails and a few fords. As they came to the summit of a steep hill Samantha called a halt. A small camp could be seen with two people sitting at the cook fire, the Ranger and Dryad stood to face them as they came near. \n\nZoe, the Dryad sister, was carrying a Blackwood bow rather than a staff however she didn't seem to have a quiver or any arrows. Zoe looked unique compared to her sisters, she still exuded the same nymph sexuality but was shorter and slimmer than both Samantha and Diane. Her face was a bit pointed and she had flame red hair not unlike Sophia's. She also had one yellow and one green eye that had a humorous twinkle like she was holding back laughter. \n\nThe Ranger was human and had tanned skin, a handsome face with dark blue eyes set above a somewhat crooked nose that looked to have been broken at some point. He had a short scruffy black beard that covered his face and a black mop of hair that covered his ears. He wore the Blacks every ranger acquired upon graduation complete with a black cloak. He was staring at Aiden with a perturbed look.\n\nDuring their last break Gala had decided that they don their armor and weapons, as they got closer to the Heritage Mountains wild monsters would become more prolific and they could not rely on the Dryads to see everything coming. Additionally the leather vambraces would cover Aiden's Blessings and make it difficult for anyone to spot them accidentally, especially the Ranger. \n\nWhen the group of five was finally standing in front of the pair there were short introductions and everyone introduced themselves. Kel, the Ranger, eventually had to ask and sake his curiosity.\n\n\"Have we met before? You seem familiar to me.. your face is quite striking, the eyes especially.. \" Kel asked curiously.\n\nAiden looked at him pointedly deciding to play with him a bit \"I don't like what you're insinuating and I think your tact needs work Ranger.\" Aiden said haughtily.\n\nHis bonded seemingly playing along glared at the Ranger, though he noticed Samantha and Zoe with confused smiles on their lips. Kel hands came up in surrender. \"I was not insinuated anything i was merely-\"\n\n\"Merely what? You know for a Ranger you fumble your words quite wonderfully. I thought you were supposed to be gentlemen and to protect women like me not attempt to stumble into my bed, not that you stand a chance.\" Aiden said his face reddening slightly as he tried to hold in his laughter. \n\nKel looked shocked, his eyes moving from the Dryads to his bonded and back to him, then cleared his throat. Then Sophia's laughter broke over the tense situation. Kel's head twisting in her direction a confused and distraught look crossing his face. \n\nThen Aiden laid a hand on the Rangers forearm, \"I am just teasing you Ranger Kel.\" Aiden said as everyone else started bursting out laughing.\n\nKel started chuckling too, smiling as he breathed out in relief looking at Aiden he opened his mouth to speak but Aiden forestalled him with a hand.\n\n\"You've probably met my twin, her name is Alexa. Tall looks exactly like me. She is a recruit in Blackwood Fort\"\n\n\"Ah.. oh. Oh ya, that makes sense. I think she was with Ranger Captain Tallen when I received my escort mission.\" he said sheepishly.\n\n\"Probably,\" Aiden said \"He's my uncle. Keep this knowledge to yourself though, it's not a secret persea but I don't need the attention either.\" Giving Kel a big beautiful smile trying to really lay it on thick.\n\n\"Hah! Well okay then.. ya alright. My lips are sealed. Might I say you do have a beautiful smile.. not to mention a wonderful sense of humor?\" He said cheekily, bowing he held out his arm, \"May I escort you to the camp my fair lady?\"\n\n\"Ah,\" Aiden said, blushing a faint pink \"and so here is the gentlemen I was looking for. Thank you for the compliment sir Ranger, please.\" Aiden said wrapping his hand around the ranger's arm. \n\n\"Of course my lady, right this way.\" gesturing back towards the fire.\n\nHe felt Sophia's lips touch and nibble at his ear and then whisper. \"A male Ranger for your harem my butt slut? How exciting and very well played.\"\n\nAiden just kept walking and smiled hand flexing on Kel's bicep. Then Zoe approached from Kel's side and decided to make the situation more awkward. \n\n\"Stealing the only man for miles from us Aiden? Not very kind of you to be so selfish. Well let me know how he is then, I could go for a good romp myself.\" said Zoe as she veered away from them to talk with Diane and Samantha.\n\n\"Fucking nymphs..\" mumbled Aiden's face a beat red.\n\n\"Yes.. they are quite persistent at times. May I ask you what you're doing out here? It is rare to see a human with the Dryads let alone two other beautiful demis. I assumed it would just be myself and horny Dryads out here alone.\" Kel asked nodding at the Widowkin and Foxkin as they sat down. \"Though you all are most welcome, many of the kin are known for their battle prowess which we will need soon I'm afraid.\"\n\n\"Diane is a family friend, when Alexa left for Blackwood my mother suggested I go and stay with Diane for some experience you could say. My Blessings will lead me on a somewhat adventurous future and my mother suggested staying with Diane to get some real world experience before I joined the Guild.\" Aiden said glossing over large parts of the story not wanting to spill all of their secrets. \"I met Gala and Sophia while exploring and we became fast friends. Diane has graciously allowed them to stay with me at her home.\"\n\n\"Well I am glad you all came. It will be good to have a few more swords and I can relax a little more knowing the Dryads attention will be on you and not me.\" Kel said jokingly, \"I'm afraid I was going to have to fight off Zoe, I think she intended to jump me in the middle of this clearing if you had come along any later.\"",
        "Aiden shrugged at the Ranger. He liked Kel but didn't want to encourage him too much, the Ranger had assumed he was a woman and no one else seemed to want to disabuse him of that notion. Aiden figured it would be easier to muddy the waters in case the legion ever sought to track him down. Not only that but his bonded had been treating him similarly the last few weeks anyway, though they seemed to specifically like that he was actually a boy turned girl. He couldn't blame them either, it felt naughty and exciting because it was taboo.\n\nThe Dryads soon joined them and they talked about the plan for tracking down the managhouls as they ate. At some point Sophia had come up to Aiden and took him by the arm to the wayside. \n\n\"Wanna sneak off for a bit? Go for a quick fuck? I think we could use the distraction.\" said Sophia, her eyebrow raised.\n\n\"Yes but we need to be as fast as possible, we leave early tomorrow, and I need my beauty sleep.\" he said. \n\n\"You're beautiful enough by butt slut, come on.\"\n\nSophia grabbed his hand and pulled him towards the nearby shrub forest with a few large trees that they could hide behind. Sophia and Aiden began swiftly trying to get their pants and armor out of the way. As soon as Sophia's erect girlcock was out she grabbed Aiden and shoved him face first into a Blackwood. Aiden braced himself with his hands and stuck his butt out. \n\nSophia was in a rush, extremely horny and blue balled. Not being able to take her boy all day had been maddening, especially with the nymph magic bubbling in her, Gala and Diane had both snagged him during their short breaks up the hills, Samantha had watched them while taking care of herself. Aiden was delighted and embarrassed in equal measure at the audience. \n\nMember in hand she pushed forward, missing her target a couple of times, pressing her mushroom into his chastity and taint. \n\n\"Gods I'm fucking shaking I need you so bad!\" said Sophia.\n\nAiden spit in his hand reaching between his legs he grabbed her and guided her to his hole. The little bit of saliva coated her tip as she began to break into his passage. It hurt a bit more but Aiden was used to it at this point and the pain felt more akin to pleasure now. \n\nGroaning Sophia pushed forward as far as she could go, moving a little faster than she intended. Aiden grunted each time she pulled back and pushed a bit farther in. Sophia dropped a dollop of saliva onto her shaft pressing forward again before hilting inside him.\n\n\"Oh fuck.. Sophi.. That feels so good. Uh Ohh god damn.\" \n\n\"Your ass is so tight baby, we can't wait for you to get used to it though. I need you now.\" \n\nWith that Sophia began spearing him hard, pumping her hips up into him nearly lifting him from the ground with each thrust. Her throaty breaths coming out erratically over the back of his neck, her rhythm methodical. Aiden was mewling wantonly just like the little slut he was. Sophia bit down on his neck causing him to yelp and encouraging him to thrust back into her his bubble butt smacking into her hips with loud cracks. At this point they were both so close they didn't care if anyone heard them. Sophia moved further up his neck above his collar and bit down again bruising his flesh and Aiden came. Her tail curled up underneath her and started to flick at his little sac causing Aiden to grip Sophia's girlcock even harder. His cum drizzled out of his tip through chastity as he whimpered. \n\n\"I want to.. I want to finish in your mouth.. Oh fuck, quickly turn around. On your knees.\" said Sophia her dirty length retreating from the used hole leaving him feeling empty. Twisting around and falling to his knees he immediately swallowed Sophia's girlcock to the hilt, the tip flexing against his throat. One of Sophia's hands latched to his throat feeling her shaft pump into him from inside and out. Squeezing her hand tighter she erupted into his belly painting everything white with thick ropes of her seed. Letting his neck go and resting her hands on his head she let him suckle on her as he attempted to drag every last drop out of her.\n\n\"Too much, too sensitive.. God damn you're getting good at that.\" said Sophia as she pulled her softened length from his mouth. Thin strands of cum connected to his lips. Standing a little shakily he ran his fingers over his lips licking up every last bit. Sophia helped him clean up to look somewhat presentable and then they reclothed and armored themselves sharing happy looks. \n\n\"That was a good distraction.. I didn't realise how much I needed that, Diane's sex magic can be a bit much to control at times. Also the thing with the tail was inspired.\" said Aiden. \n\n\"Thank you! And I know what you mean.. Lets head back before Diane sends one of those Dryads after us. Though I wouldn't be surprised if they were already trying to sneak a peek anyway.\" said Sophia. \n\nNodding at that Aiden and Sophia trooped back to camp surreptitiously. At least they thought they did until they felt the entire group eyeing them humorously. Aiden saw an odd emotion cross Kel's face but he still had a smile on his lips. Then he remembered Sophia biting him and his hand came to his neck with a grimace. \n\n\"Don't not worry so much my butt slut.\" Sophia whispered to him, seeing the gesture, \"The Dryads know full well what we were up to, though they are probably a bit upset we didn't give them a show. Don't know about Kel watching though.. Well if he sees the bruises and doesn't care then he might be interested, who knows? You may still have a shot.\"\n\n\"Have a shot? Sophia I am not pursuing him. I was just playing around.\" complained Aiden.\n\n\"Sure sure, let me know if you sneak off with him later. It would be entertaining to see my slut whore taken by a male for once. While I am not sexually attracted to him, anyone can see he is a beautiful specimen of human male physique. I know he'd enjoy it, I wonder how big his cock is? Though he would be bound after that for all time.\" Sophia teased. \n\nAiden couldn't keep the smile off his face as Sophia started describing in great detail what it would look and feel like to have Kel mount him. Not that he needed much help imagaining Kel's strong calloused hands gripping his hips and grinding into him from behind. \n\nAnother hour passed in quiet conversation as the group began drifting into their tents, tomorrow would be another long hike as they made their way into Unadat's Valley.\n\n***\n\n\"We found them and.. something else,\" Kel was saying \"It's odd, they're near where I originally lost them but they're split into two groups. One pack is circling a willow tree and I think there is a person hiding at the top but I can't get a good look at them. The other pack is larger but is farther back towards Fulcan Pass, they are attempting to get into a blocked off cave. Their must be someone or something in there with a larger magical source.\"\n\nThey were a few miles in the valley's basin. It was sparsely forested with shallow rolling hills. Long grasses dominated the area with large rock formations jutting from the cliff walls surrounding them. Currently they were camped out in an alcove between large boulders that must have fallen from up high long ago. Kel was tracing out a rough map of the two locations.\n\n\"We can take the pack of ten or so around the willow easily enough. We'll need a plan for the second pack though.\" Kel finished reporting.\n\n\"We can use the mana crystal to divide the second pack\" Gala offered, \"The Dryads can draw half into this small grove where they can tie them up easily. Then we can drag the second group into this area where the cliff juts out. The path narrows here and we can funnel them killing them one at a time if we must.\"\n\nDiane nodded. \"This seems to be the easiest plan with the least amount of risk.\"\n\nThe rest of the party agreed and set out towards the solitary willow tree. The high grass hid them as they got close. Then Aiden finally saw the monsters as they loped on all fours around the base of the tree howling at up something. The undead looked human but had pallid skin that seemed to be sloughing off their bones. Their eyes seemed to have rotted out with the rest of their organs but they didn't seem to need them. \n\n\"Zoe, Aiden, and Kel will take out as many as they can from afar. When the rest come charging, that'll be the que for our melee to engage. Should be quick.\" Gala outlined quickly. \n\nNodding the group began approaching. Aiden took aim and lined up his shot. His bolt flew true and nailed a managhoul's stomach to ground as it writhed screaming. He watched Zoe shoot three arrows in the time he was finished, they would appear on the string each time as if grown from the bow. \n\nQuickly the managhouls charged and the fight ended just as fast. Gala and Sophia took the brunt while Samantha and Diane tied them up in vines and finished them off with heavy blows from their Blackwood staves. \n\nJust as the last managhoul was put down a tall muscular form dropped from the willow. She had dark caramel skin and a mixture of leather and steel covering her vitals leaving her toned limbs exposed. A winged helmet curved down a strong jawline but was open faced revealing a young beautiful face. Light blue eyes peered at them over a cute nose and delicate red lips. Long blonde hair came out the top of the helmet set in a high ponytail. She was also wounded having large claw marks down her arms and legs, she held a bloody rag to her abdomen. \n\nThe dryads immediately swarmed around her, touching her wounds and talking softly. \n\nThe rest of the group took stock making sure they had no unnoticed wounds. Sophia, Gala, Kel, and Aiden watched the dryads fuss over the woman. \n\n\"An Amazon..\" Kel mused \"all the way up here. Pretty far from their home. Their sanctuary is on the other side of the Heritage.\" \n\n\"Wonder what she's doing up here alone.\" Sophia said. \"She's very pretty..\" \n\n\"Yes and young too. Plus the Maidens are great warriors.\" Gala said, sharing a look with the Foxkin before looking down at Aiden with gleaming eyes. \n\n\"What? What are you looking at?\" Aiden asked, wary of their stares.\n\n\"Oh nothing.. just thinking.\" Sophia said.\n\nKel watched the byplay curiously but didn't say anything.\n\n\"Good shooting by the way Aiden, that first shot was perfect. Would've punched right through a tougher enemy.\" Gala said, \"We'll keep practicing though. You'll need to work on reloading.\"\n\n\"Thank you.\" he said, happy with his progress. \"It was.. Educational watching you two fight as well. You're so strong Gala, and Sophia so fast. It's impressive.\"\n\nThe girls beamed at the praise from their bonded. Kel laughed and asked, \"What about me young lady? Did you not see your gallant knight hit two heads in two shots?\"\n\nAiden grunted looking unimpressed but he couldn't hide the blush or the crinkling of his eyes as he tried not to smile. \n\n\"Very well, it seems I will have to work harder to draw your eye my lady.\" He said, sighing. \"Woe unto me, I will likely perish attempting to kill a horde of our evil foe if only to attract your lovely gaze, even for a moment.\"\n\nGala and Sophia were howling loudly now at Aidens blazing red face. Aiden's smile was full of laughter and he felt a bit bad fooling Kel this long. He decided to let it go and thought maybe Alexa would clean up the mess he made. Doing his best to ignore the banter he strode forwards towards the Dryads and Amazon. His head involuntarily ducked when he started hearing their catcalls and whistles as if he could dodge under their inventive comments. He couldn't help but laugh.\n\n\"Don't run my love! Or do I love seeing that wonderful backside!\" Sophia called after him.\n\n\"Are you trying to swing your hips or do your legs just move like that on their own?\" Gala yelled. The rest lost the wind as he came upon the other group. \n\n\"Hello my lovely nymphs, how is the patient?\" Aiden asked, trying to claw back some of his dignity.\n\nFour heads turned to him, the Dryads with coy smiles as they regarded him, the Amazon looked at him curiously studying him from head to toe. They locked eyes and he couldn't look away, she really was stunning. She looked like a human woman in every way except scaled up, her proportions were perfect just bigger. Much bigger than him, definitely taller than Gala he'd say. \n\nFinally they broke eye contact and her head turned towards Diane. \"Who is the pretty one, your mate? Would you accept a Maiden's Duel for his bed?\" the Amazon asked in a lilting accent. \"Would you?\" her head turning back to him. Her eyes took on a strange cast in which he couldn't determine the emotion. Lust? Excitement? Hope? Anger? Possibly all of them or something completely different.\n\nThe Dryads started giggling, their musical laughter stringing together in an ensemble.\n\nAiden's red color returned. \"I am not sure what that is to be honest, I have never met an Amazon.\" \n\nThe Amazons head looked back to Diane and the Dryad raised her hands. \"For now I'll say the duel wouldn't be necessary, I can explain later. The others are coming over now. We plan on killing off the rest of the managhouls. Would you tell us why you are here and alone?\"\n\nAiden heard three pairs of footsteps as they approached from behind, Sophia's arm wrapping around his waist. He saw the Amazons eyes drift to the Foxkin before she looked to the rest of the group. \n\n\"My name is Dosa Penthes, my two Maiden sisters and I were tracking the managhouls into the mountains. A small village our sanctuary trades with occasionally disappeared overnight and we were afraid they were taken. When we found the tracks it looked like they were herded out and then turned into undead. We think they were driven into the mountains. For what purpose we do not know.\" Dosa explained remorsefully. \n\n\"Driven?\" said Kel sounding surprised, \"..and purposely turned into managhouls? That doesn't sound good. I can only think of one reason to use managhouls and that is to track and eat magic. The only thing strong enough to control undead in those numbers is a Lich.\"\n\n\"Did you spot the ones who did this?\" Gala asked.\n\nShaking her head the Amazon said, \"It was a small group and their trail disappeared around the beginning of Fulcan's Pass. I was split from my companions when I scouted ahead, they may have found more since we were separated... I've been stuck in that damn tree for days.\"\n\nThe group was silent, all engrossed in their own thoughts until Gala spoke up. \"We still have the other Pack to take care of so let's prepare, are you healed enough to fight Dosa?\" \n\nDosa answered by picking off her steel round shield and red painted spear. \n\n\"Very good, get some food and water in you. We have a plan so let's proceed. Dosa can join the cliff party.\" Gala said, \"We will meet up with the Dryads after and help them if needed.\"\n\nEveryone nodded in agreement and the two groups separated.\n\n***\n\nGala's plan had worked perfectly and went off without a hitch, every single managhoul was destroyed. The Dryads actually wiping their pack out first, the two groups met halfway just outside the blocked cave the monsters were attempting to breach. A massive boulder blocking the entrance, it looked odd sitting there, unataural.\n\nThe party stood around watching as Kel tried to find a way to see through a small crack between the cave wall and the boulder. Shouting into the hole for a full minute but seemed to hear nothing. He turned around to come back shaking his head, as soon as he did the boulder rolled to the side with a thundering groan. The dust cleared from the entrance revealing three people.\n\nTwo looked and dressed like Dosa but seemed older with blonde grey hair. The third was shorter than the Amazons by a few inches but more muscular and she was an orc. She had tribal regalia made up bones from animals that hung from her neck and wrists. Two short tusks stuck up from her bottom lip, a long braid of brown hair hung around her neck laying on her ample chest. White fur covered her bust and sat around her hips in a thong, she was otherwise naked revealing light green skin. Where the Dryads skin tone was a deep rich green, hers was more pallid but still looked smooth and healthy. As she stepped into the sunlight he got a good look at her face. She was surprisingly cute, a short button nose, black eyes, and plump lips, the bottom one pushed out a bit by the tusks. She looked over the group but looked unsure who to approach, finally their party approached the orc with the exception of Dosa. \n\nThe three Amazon Maidens talked in private, a quick terse conversation moving their arms and hands in clipped gestures. \n\nThe orc studied the group as they approached, she stood tall and undaunted as the group studied her in turn. Finally Diane bowed shallowly before speaking.\n\n\"Honored Shaman, do you require food or assistance?\" she said in a neutral tone. \n\nThe orc woman looked at Diane and bowed. \"That would be most appreciated Grove Witch. I have been stuck in that cave for a couple days without much for food or water. The Amazons sought refuge with me though that turned into a death sentence for us all. Before we eat, I must ask, did you destroy the Lich?\" she spoke clearly and succinctly, it was deep like Gala's but came from deep in her chest.\n\nKel cursed, \"Fuck. Fuck! I need to.. shit.\" He bit his knuckle then looked up at the orc. \"No we did not, it is missing. It was not controlling the managhouls when my party was attacked in Fulcans Pass two weeks past. I came back today with the Dryads to eradicate them. They must have let me give in favor of you and the Amazons. Why was the Lich after you?\"\n\nThe orc shrugged, head bowed morosely. \"It attacked my village to get to me I think. Killed everyone. I was the only Shaman left and I ran as is my duty. To survive. I thought I lost it in the mountains, but it caught up to me a day later with the managhouls. I was able to collapse a cave tunnel and seperate myself from him and eventually came out in Fulcans Pass, I made my way into this valley. I camped here and when I woke the next morning two Amazons were sprinting towards me the managhouls on their heels. So I blocked the tunnel, been here ever since.\" The orc said despondent staring at nothing \n\nKel looked to Diane. \"I must leave immediately. I need to get to Blackwood Fort as soon as possible and report this.\" looking at Aiden he said, \"It was good meeting you Aiden, I will tell your sister that you are well and whole.\"\n\nZoe laid a hand on his shoulder. \"Samantha and I need to return to the forest and take care of our duties. We will escort you as far as Selana River.\" \n\n\"Very well, I will speak with the Maidens and then depart.\" Kel said nodding to the group after shaking each of their hands and briefly speaking to the orc. After a quick conversation with the Amazons, Kel and the two Dryads were jogging south soon lost from sight. \n\nDosa came over to Diane by herself and they began speaking in a whisper to each other. The two other Maidens were already sprinting north at an insane pace, it looked like a human sprinting but without trying in the least. It was almost lazy. Sophia and Gala were now also talking to Dosa and Diane in a tight circle occasionally looking over to him. \n\nHe looked at the Orc and then smiled. \"Want some food?\" He asked cheerfully. \n\nShe gave him a tusked grin back. Waving her over to the Mule who was tied up to a nearby tree, \"What's your name? Mines Aiden.\" He asked, extending a hand.\n\nTaking his hand she intoned, \"Koradali Untasha, you can call me Kora.\"\n\n\"Nice to meet you Kora. I'm sorry about your village... I'm sure we can offer you refuge in our home. Well it's Diane's home, she's my bonded, the Dryad that is.\" He said handing her some rations, \"I'll make some real food later. So.. a Shaman huh? Never met a Shaman or an Orc. Seen some.\" \n\nHe knew he was rambling a bit but he honestly didn't know what to say to the woman whose whole village was wiped out, including her family. He sat down as she did, he picked up his crossbow and started to clean it as he glanced at her. She was smiling widely around the trail ration saying nothing.",
        "There were only two things Kora was thinking about; how to convince the Dryad to let her ride him, and riding him hard. She could smell three of the futas on him. The smell of their arousal was almost noxious to the orc, she could smell the Amazon wanted him too but wasn't as potent. She watched as his face turned a faint pink and he looked back to the crossbow. \n\n\"I was banished from my village.. not by anyone really just.. well I'm banished from everywhere.\" He laughed then said \"My Blessings are not.. liked by most humans and they are dangerous to me and those around me because of it.\" Aiden shrugged, not sure why he was telling her. She just seemed to want to listen, and he wanted to talk. \"I grew up on a farm with my mom and twin sister, it was a peaceful life for the most part. A few bad apples gave me trouble but.. My mom was kind and hardworking.. and loved me. Took care of me.\"\n\n\"When I got my Blessings the Elder and my family knew if I did not leave I would die or the village would. At least eventually... more likely the legion would just execute me or throw me in a cell. That's how I met Diane.\"\n\n\"What are these Blessings that are so bad?\" Kora asked shrewdly almost in disbelief.\n\n\"Grex, Beast, Daemon... and Augmentation.\" Aiden said, glancing over at half smiling half grimacing.\n\nShe laughed a bit showing off her white tusks again, they ended in a point just above her upper lip. \n\n\"Those are good blessings! Especially Grex and Augmentation! Beast and Daemon are useful, especially if you are looking to fight them or even better.. make friends. There are plenty of animals of both types that are not evil.. they just are.\" Kora said excitedly, grabbing up high on his thick thigh \"you should try and find a companion bond for both types when you're strong enough. They are a boon. Though I can definitely see how some would hate your Blessings or use them for nefarious purposes.\"\n\nHe stared at her dumbfounded no had ever reacted to them so positively. Admittedly, he thought, only a handful of people knew of his Blessings. In the same breath a small bit of hope blossomed. \n\nKora started massaging his thigh and then her fingers started to rub against his little cock still locked in the chastity. She had a confused smile on her face when she felt him through his pants, she grabbed him full in the fist then. He sucked in a sharp intake of breath at the aggressiveness, she was handling him firmly but not hurting him. He held his breath staring at her waiting.\n\nShe moved her other hand to his butt grabbing him, and pushing her fingers into his taint. She hummed a bit looking at him fondly. \n\n\"Ask your bonded if I can mount you. Tell them you want want me to ride you.\" Kora said huskily here hands had stopped groping him and just sat there. \"Here they come now my mate, ask them.\"\n\nGiving him a final squeeze with both hands she let go. He finally breathed again a light pink tinge suffused his neck and face. Looking up he found Diane, Sophia, Gala, and Dosa heading over and he gulped. Dosa looked determined and his bonded looked entirely too pleased. Aiden stood up as they came close, Dosa came right up to him and looked down into his hazel eyes.\n\nDosa's emotions were in turmoil, she badly wanted this to be the one. She was young amongst her people and had yet to find her true love. When she saw this girl.. No boy, she was immediately attracted but thought he was already claimed. When the Dryad had told Dosa of his true nature and the nature of his blessings she only got more interested. She wanted him badly, the added benefit of being in a Grex harem was nothing to sniff at either. There were a myriad of benefits from his current bonded already. To her though he just felt right, Dosa was physically drawn to this beautiful creature named Aiden. Who despite everything seemed to be enjoying his life and living it fully. So she would ask him and then that would be that. Not only that, she respected his bond mates, they were all of good character and excellent fighters in their own styles. \n\nAiden knew that look Dosa was giving him now. It's the same one that literally got him in bed with Sophia and Gala.\n\nHe couldn't help but laugh at the hilarity of it, and knew the answer before she even asked. He liked Dosa and was willing to take a chance. If his bonded endorsed Dosa after vetting her with that little group chat they had earlier he would trust them. It was also extremely hard to imagine saying no to such a determined look anyway, he could see that look drop a bit as she heard him laugh. \n\n\"I'm sorry Dosa, I am not laughing at you, I just know that look. And the answer is yes.\" Dona's face went from determination, to anguish, and then finally absolute delight at his words, \"you can join my harem as it were, I trust my-\"\n\nHis sentence was cut short as he was picked up off his feet and crushed into the Amazon's bosom. Luckily he still had his leather chest piece on. Not that it really helped, still she was ridiculously powerful it was mildly frightening to realize she could literally bend him half and break him. She kissed him fiercely on the lips before setting him down gently but not letting go of him. \n\n\"Thank you bonded I will not fail you. The others told me about your situation, I will love, care, and protect you to the best of my ability on my honor.\" She announced almost ritually. In that moment Aiden felt the weight of her words and was grateful for them, and it was extremely endearing. He watched as the Amazon blushed a bit and started bouncing on her toes, she looked like his sister when she saw a really cute puppy. \n\nHe bowed his head to her. \"I accept your love, care, protection and will do my best to do the same for you. Thank you Dosa, that was.. I- yes thank you.\" Aiden said, stumbling a bit at the end as his heart thumped in his chest. Then he felt a very pointed reminder in his ribs that was Kora's elbow.\n\n\"Ah yes I almost forgot.. I want- this is Koradali Untasha, by the way. She goes by Kora, and she will be joining us as well..\" he finished looking at his bonded. \n\n\"Say it.\" Kora said loud enough for everyone to hear.\n\nDiane, Gala, and Sophia had large smiles on their faces. Even Dosa looked pleased as if the orc was not only expected addition but an intelligent one. \n\n\"I..\" he sighed before finishing, \"I want her to mount me. To ride me.\" Then he looked at the orc who was grinning madly at him. \n\nDiane and Sophia clapped excitedly. Gala just looked at him like a piece of meat she wanted to devour, she did seem smug though.\n\n\"Well let's make camp,\" Gala said, \"then I need a release. It's been a long two days.. and then these two can have at him. After that we can have him again.\"\n\n\"Oh yes, I expect a very good showing from the two of you.\" Diane said, looking at the two new bonded. \"He's woefully in need of a good pounding. It's been at least a day since Sophia took him.\"\n\nSophia for her part just gave excited chirps and began talking with Kora and Dosa in heated whispers. Dosa smiled at him wryly and gave him a wink while Kora had the same mad grin on her face, her fists clenching. The five women started walking back to camp with the mule in tow.\n\n\"Hold on! Let me at least make some food first. Sex is always better on a full stomach!\" Aiden said walking after them. \n\nChapter 15\n\nA few things immediately happened when they got back to camp that didn't go to Aiden's one track kind of food and then sex. They all smelled and Diane forced them all to bathe, Dosa and Kora were kept out of sight from Aiden for reasons he could not fathom other than decency, which didn't seem to matter most of the time. Diane cooked and they ate in short shifts. Meanwhile Sophia and Gala removed his chastity and collar and scrubbed him down, washed themselves and immediately shunted him into the tent after drying him off and trimming his hair. \n\nSophia, Diane, and Gala came into the tent then and laid some recognizable items on the blankets in front of them. His chastity was immediately locked back on, the collar put around his neck, and the butt plug summarily pushed up his ass. \n\n\"You brought all of this.. Why?\" Aiden said, confused and wiggling his butt a bit trying to get comfortable.\n\nSophia chuckled and said, \"You never know what might happen, wish I could've brought more. Aren't you tired of wearing that armor all the time anyway? I could barely make out your curves with all the leather padding!\" She started unrolling his black thigh highs and the \"evening gloves\" and getting him dressed in his uniform. Behind him Gala was fussing with something and then he saw a cloth drop over his eyes which was then tied around his head. \n\n\"Okay...\" Aiden said warily.\n\n\"Shush slut, just relax and let us take care of it.\" Gala said brooking no argument. As Aiden mentally sighed and let them do what they wanted. He felt his wrist and ankles being bound in leather handcuffs, on his knees and arms behind his back he waited for the next move. \n\nHe heard Diane's voice in his ear then, her hot breath making his skin prickle. \"We will use that pretty mouth of yours first before we take you to your new bonded. None of us have had you all day and it's been.. Tedious not being able to jump you whenever we'd like. So, open those pretty lips and stick out your tongue, you're about to get three quick loads in that tummy of yours. We'll take you again after Dosa and Kora are finished with your holes.\" The next thing he knew the soft flesh of someone's cock was being pushed against his parted lips, opening wide he accepted the gift. He couldn't tell one girlcock from another by sucking really, but the way in which they used him and what tongue techniques made them blow their load quicker. Even easier was picking them out by taste and smell; summer rain and fruit - Diane, forest dew and salt - Sophia, earthy and fruity - Gala. He felt his mouth being cleaned up as he swallowed the last of Gala's seed, he was then picked up off the blankets and carried out. Exting the tent to the late afternoon sun and a slight breeze, his skin goosebumped in an anticipation. \n\nDosa and Kora both kneeled naked on the large ivy bed that Diane had made. They didn't really speak, both lost in their own thoughts of what was coming. When they saw him trussed up half naked they both straightened, their breath catching as they watched the pale boy being brought to them. His face was a bit red and he looked to be breathing quickly, his chest rising and falling visibly. \n\nDosa could not believe how feminie the human was, his large thick butt and thighs looked soft and doughy. He looked so helpless she wanted to scream, the fact that he liked it this way made her erection throb and twitch between her legs, a string of precum already dripping from her slit. She honestly didn't know what to hole she wanted first, his luscious pink lips or those plush cheeks that would pillow around her face and girlcock. \n\nKora was of a similar mind on everything Dosa was thinking but knew her first goal was to open up his tight hole in the valley of his ass cheeks. Her own girlcock was throbbing as well, it was wider than any of the other girls but a bit shorter only eight inches, in comparison to Dosa's which was longer than anyone else at thirteen inches just a bit slimmer. Kora knew he would come to love her rough style though, make him addicted to it if she could, she wanted to pound him into the ground and never stop, she could smell the blackberry soap and arousal from here. His scent mixed with the salty tang of the three other futa's seed. It caused Kora's heart to speed up and pulse increased and she started shifting back and forth trying to remain calm. \n\nThe three bonded laid him down on his back, removed his cuffs and the blind fold. He blinked open his eyes to find five beautiful women staring down at him. His gaze immediately flicked to Dosa's and Kora's naked bodies and erect girlcocks. Both women were muscular and a study in contrasts, both in their physical stature and their huge members. They instantly started touching him while his other three bonded sat back on the bed to watch the show. Sophia, Gala, and Diane were not exactly idle as they stroked their cocks at a lazy pace. \n\nHe could feel Kora's hands immediately go for his hips and ass grabbing at him in haste, while Dosa was lightly caressing his caged member, her other hand doing the same to his lips as she stared into his eyes. \n\n\"Make sure to give us a good show slut, we want to see you work hard to please these two ladies. They're both young and virginal so make sure it's a good one for both of them.\" Gala ordered. \n\nSophia and Diane humming in agreement.\n\n\"You like being called names slut? You like to be demeaned? I think I am going to use that pretty cum hole and bury my girlcock in your throat.\" Dosa said with a heat coming to her eyes. \"I want you to stare up at me while you do it too. Kora you want the sluts other hole? Knees or back? I'm thinking on his knees.\"\n\n\"Knees are good, I can ride him into your cock, make the whore choke on it. Sound good?\" Kora said unabated in her groping of his ass and thighs. The orc occasionally twisted and pulled at the butt plug. \"Let's turn him to the side so the others can get a good look.\"\n\nAfter that his body wasn't his own, it was just a tool for them, one that they would fill with their cum. Twisting him to the side and turning him over Kora and Dosa got him positioned, Kora aggressively pushing his back down while pulling up on his hips. Dosa laid a hand behind her as her long legs straddled his head and shoulders, his face was smashed into her balls as Kora got him into position. Kora was now hotdogging his ass cheeks, her precum slicking up and down her shaft against the tapered end of the butt plug. Dosa had a hold of her cock with one hand, pressing it against the soft skin of his lips and cheeks. \n\nDiane handed Kora the Honey Sword Oil and watched as she coated her very thick shaft, then Kora reached for the butt plug and tugged on it before pulling it out in one go. \n\n\"Ahhhhh oh shit, mmmmhmmmglmph.\" Aiden started to say something about pulling out too quick but Dosa pushed her cock into his open mouth and kept him there. She didn't push in, just left a fourth of her shaft sitting on his tongue, her tip grazing his uvula, Aiden's lips reactively closing as he started to suck. With his ass pushed up and the butt plug removed Kora watched as it opened and closed, winking at her, she poured a bit of the oil into his open hole and around the ring. Shifting from her knees to the balls of her feet then, she felt more comfortable in this stance as she made to invade his entrance. She gripped his hips with both hands and guided her thick orcish cock to his cum hole, her tip caught the edge of his ring. Pushing in a little she managed to sink her mushroom to the frenulum, his ring gripping her as he opened up.\n\nKora looked to Dosa and asked, \"Is the cock whore ready?\"\n\n\"Blink once if you're ready, I think she's really going to fuck the shit out your boy pussy, so be sure your good to go.\" Dosa said with a wolfish grin looking down into his eyes.\n\nAiden shifted his head a bit so that his throat straightened out with Dosa's long cock, this way it would slide right down his throat without too much gagging or choking. He felt Kora's hands bruising his wide hips, she was pressing down so hard he couldn't move his backside, internally shrugging he looked up into Dosa's mirth filled eyes and blinked once slowly. \n\nDosa grinned up at the orc and nodded, she felt her girlcock immediatley shove partially down his throat from the force of Kora's first thrust. The weight of it actually made Aiden moan and scream around Dosa but it only sounded like loud feminie mewling. \n\nKora, straddling his raised hips and waist, had immediately buried herself to the hilt not letting him prepare for the invasion, her balls smacked into his chastitiy making it seem impossible to breathe. Kora ground down into him with the intention of widening him up, she pushed in each cardinal direction before pulling out to her tip and slamming back into him moving her hips in a circle and repeating the process.\n\nDosa was now hilt deal in his mouth and throat, she could feel him attempting to swallow around her girth his tongue writhing around her. Aiden was finding it extremely hard to focus or get a chance to breathe, he put his hands against Dosa's inner thighs, his thumb and forefinger circling the base of her cock and ball sac. Kora pulling out of him caused her thick meat to tugged him backwards from the inside, in those short bursts of time he was able to push against the Amazon's thighs pulling his head back enough to take a breath through his nose. \n\nKora began to really go at him then, seeing that Dosa had gotten over her surprise and was now smiling and moaning as she leaned back on one arm. He still wasn't used to how wide Kora was but it didn't matter anymore, she was railing into him, tip to base. \n\n\"Fucking whore, I am going to break you! Have the Dryad heal you and break you all over again. You'll be drowning in cum by the time we're done. Gods damn, your pussy is tight... Fuck. You. Slut. Breed your pretty cum hole until you're pregnant!\" Kora started half grunting and shouting at him. Her hips cracking into his ass making his thighs gyrate. Her breasts bouncing in time with her thrusts, a sheen of sweat starting to bead on her chest.\n\nThe only reason his ass was even in the air right now was Kora holding him up. The sounds coming from his other end was even more lewd as Aiden began to choke and gag on Dosa's impressive length, drool, girl cum, and maybe a few tears covered her shaft. Dosa was extremely impressed that Aiden's pink tongue was still licking at her shaft as he continued to meet her eyes while being throat fucked. Albeit his eyes were a bit distant, a genuine face of complete bliss.\n\nHe was also doing this thing with his tongue when his lips pressed to the base of her cock, it slipped out and licked the top of her ballsack making her moan each time. \n\n\"Your sexy little tongue is gonna make me cum in that pretty mouth of yours, your.. Guh doing such a good job slut... ohhh uhhh fuck ya lick and suck your Maiden. Lick and suck, that's it you little bitch. Fu-u-cckk yesss... mmm.\" Dosa groaned out. Leaning back on both hands she let Kora pound his whole body into her, she drove him into the Amazon with ever increasing speed and ferocity. The loud wet smacking and groans filled the valley. \n\nDiane could tell everyone was close to cumming, even the three not directly participating including herself, it was highly arousing watching their boy get used in such a violent manner. She began ramping up the sexual magic for the whole group. Sophia, Gala, and Diane were now kneeling to the sides of Aiden pointing their cocks to his small form intending to cum all over him. \n\n\"You're doing so good slut boy, they're so close, hold on for just another minute.\" Diane said trying to encourage him, she also started to send some healing into him as well to try and increase his endurance as they approached the finish line. \n\nKora's eyes were wide, staring down at the boy's ass, she positioned her thumbs to his cheeks spreading him wide, continuing her unrelenting thrusts. She watched as her girlcock spread his asshole wide around the thickest part of her shaft, it was the most beautiful and erotic thing she'd ever seen. Aiden's tunnel was starting to pulse frantically around her girth and it made her pump even faster. A few seconds later his passage tightened around Kora's cock like a fist, she knew he was cumming now and felt him literally pull the orgasam from her. She flooded him with her sticky white fluid. Claiming him as she began lazily pulling in and out dumping her seed into his flexing hole. ",
        "Dosa felt him moan around her, she was at the finish line as well and couldn't help it as she fell to her back and wrapped his head in her massive arms and came pressing his face to her stomach. The vibrations sent a shock down her spine, her girlcock began spasming drenching his stomach and throat in her thick white spunk. Dosa's hips thrust minutely into his mouth, Aiden was swallowing with all his might, licking as he tried to get more out of her. \n\nThe three \"non-participants\" began coating his pale back in their own spunk, thick ropes of seed splattering his bent form. They all moaned in satisfaction, their eyes a bit dazed, watching Dosa and Kora come down from their orasams. \n\nStill gripping his hips and spreading his ass with her thumbs Kora began to slowly withdraw her member from his abused hole. She watched as the tip exited with a wet pop, cum drenching her length she spread it over his taint and ass marking him, all the while she gazed down at his gaping asshole. It didn't wink anymore but remained open looking well used and fucked, to her it was glorious and she couldn't think of anything in her life more pleasurable then this boy. With that she sat down heavily shaky legs slipping out from under her. Letting his deadened hips drop from her hands to the bed, his legs numbly spreading wide, boy pussy leaking with her seed. \n\nDosa grabbed the sides of Aiden's head. He was still, to her disbelief, sucking on her hard. With Aiden's lips at the base of her softening girlcock, she began to slowly pull him up, her sensitive tip causing her to let out shaking moans as it dragged along his throat.\n\n\"Oohh shittt.. Gods damn that that is too much... fucking slut, the only reason I don't rip you off is so you can.. Ah.. clean me.\" Dosa said, her voice cracking a bit. Sucking all the way to the tip slowly he let it leave his lips with one last lick to her head making her shiver. \"You slut, I'll pay you back for that lick.\" She promised grinning. \n\nHe laughed a bit raspily but otherwise seemed fine and extremely happy. Then he made a wonderful suggestion.\n\n\"Okay my bonded.. Switch. I want Dosa's thirteen inches to spear me while I choke on Kora. Fucking hell Kora.. your so thick. My ass feels just as empty as it did after the beads.\" Aiden said wantonly.\n\n\"Fucking hell yes..\" Sophia said grinning at him. \n\n\"That's my slut whore, always begging for more.\" Gala added pridefully.\n\nDiane laughed, \"Hold on just a minute let me tighten you up slut boy. Dosa deserves the full treatment, plus they need a second to recuperate. I'll leave these wonderful bruises on your hips, I'll heal them after we're finished with you.\"\n\nHe only nodded and laid his head down in his arms, he began to flex and stretch his body, he could feel the cum running down his back and from his fucked hole. Four different seeds filling his stomach and another on the way. Feeling pleased he smiled to himself, he'd missed this, there was nothing like two girlcocks fucking his two cum holes. His.. boy pussy.. he thought, laughing to himself a bit, was quickly being healed from Kora's ravaging. Not for the first time remarking on Diane's ability to reset him physically and sexually so soon. His own cock was leaking cum perpetually, it didn't even bother getting hard anymore, he cummed from anal explicitly. It was useless to his bonded anyway, but they liked it, often commenting how cute it was. \n\nBefore too long he was flipped on his back Kora was squatting over her face towards Dosa, while the Amazon had her knees up under his legs and tight to his hips. She was already rubbing the oil to her member and his puckered asshole, tight as a virgin once again. Though his insides were still slick and coated with seed from Kora' breeding. \n\nLooking up around Kora's stiffening member he met her wild gaze. \"I'm going to ride that pretty mouth now just like I said. Open your throat cum whore. Open wide and stick out that little pink tongue.\" Kora growled out planting her hands to his sides, \"There you go, suck me in, use your tongue slut\"\n\nAiden found Koras' width much harder to manage but he fit her in eventually trying his best to coat her in saliva before she rammed his throat. At the same time he felt Dosa press her mushroom to his entry, groaning as she pushed her head past the ring. \n\nDiane had done well and It almost hurt Dosa how tight he was gripping her girth with his ring. She kept pushing forward at a measured pace, spearing him as he'd suggested. She wouldn't pull out until she was hilted in Aiden's tunnel. The oil and now Kora's own seed easing her passage, inexorably his juicy bottom was pressed flush against her hips and she sighed. His tunnel was wrapped around her entire length. The wet squishing sounds of Kora's girlcock mashing into The boys mouth increasing her arder. Grabbing his thick thighs and spreading him wide she planted her knees and began to pull back, his passage flexing and pulling at her. She felt him begin to push and clench as she did, like he didn't want to let her escape. \n\nSeeking to repay him back for that lick, she let one leg go and grabbed his chastity, then with her thumb she began to press his taint just below his sac. She started rubbing him and pulling his soft caged cock, he came instantly, short spurts forcing their way out and leaking down her palm. As she pulled out her cock she rubbed his cum on her shaft and pushed back in. Making him seed his own asshole a Dosa bred him. \n\nKora felt his moaning loudly around her girlcock, his lips cinched around her base. Her ball sac was resting on his eyes and nose, she was grinding herself into his throat as he attempted to swallow her. Kora had the thickest cock of his bonded and it caused his throat to constrict around her tip. Soon the two new bonded found their rhythms, not exactly the same pace, but pulling and pushing him. He was their boy toy and they both had a ravenous need to play. \n\n\"Choke on it whore,\" Kora groaned out \"choke on my fat girl meat. Suck me ha-hard fucking slut. I want to fill your belly with my spunk. I know you fucking love it, cock sucking whore.\" She started to plank above him, her hips rising and falling, her balls never left his face really, but bounced and jiggled. She soon felt two small hands reach underneath and grasp a ball in each hand, gently tugging and massaging the large sac. \"Fuck it.. that's it slut, make your orc cum, suck my seed out.\"\n\nDosa watched her sister wife start pounding herself into his face and began to pick up the pace. Pushing his legs out as wide as possible she started impaling him, each thrust was met with a moist swish and wet smack of flesh as their sweaty bodies collided. Her hips cracking against his already bruised ass. \n\nKora came first as she ground her pubic mound into his chin, he could only swallow around her thick tip as she drenched his throat and belly in thick ropey seed.\n\n\"Suck and clean whore. Start clenching that tight ass, milk Dosa. Now.\" The orc said, reminding him a bit of Gala in the moment.\n\nDosa felt it immediately his entire passage squeezing her. She continued thrusting wildly as she came. \"Oh oh oh oh fuck fuck fuck uhhhhhhnnn shit you dirty slut. Oh my god, oh shit you dirty fucking whore. Milk my cock, for fucks sake your ass is tight!\" She practically screamed. Pulling out she drenched his gaping hole, taint, and caged cock with the last ropes of seed marking him as Kora had done. \n\nBoth his women pulled back breathing hard, smiling widely in the post-orgasm bliss. They also started to feel slight pressures and odd sensations as the new bonds took effect, but those mostly went ignored for the time being.\n\n\"Gods damn,\" Dosa said looking to Diane \"how do- how do you not just keeping fucking him all day?\" \n\n\"We do fuck him all day!\" Sophia said cheerfully, she started clapping \"Spectacular show bonded, all three of you. Now Aiden, I think it's time you took care of some others.. and this time we're going to let that hole get nice and loose. I'm going to take a page out of Kora's book and fill you with enough seed to get you pregnant.\"\n\n\"Yes, a great performance for your first time ladies. Kora your verbal abuse was spot on, Dosa you use your cock like an artist. That bit where you rubbed him with your thumb was well played!\" Gala said in a serious tone but playful manner.\n\nDiane was grinning as wide as possible, \"I think we will use you all night Aiden, until you cum yourself to sleep. Or pass out from exhaustion. What do you Aiden? All night with the five of us?\"\n\nAiden was dreamily watching his bonded, his body glistening in the fading light with heaps of futa cum. Smiling lazily he nodded.\n\n\"Use me like a slut whore.. till I break.. then heal me and break me again.\" He begged \"Please fuck me till I black out... use me after too? Also.. don't clean me up. Leave me like that for you to find in the morning.\" \n\nThe five bonded women now had blazing smiles on their faces all nodding wildly in agreement with his second great suggestion of the night. \n\nTheir love making was not unwitnessed though a massive white werehawk watched from far above. Unadat circled and eyed the group with some amusement as they used the boy like a whore the rest of the night. Maybe she'd finally pick a mate after all these years, I'll need to speak with his bonded, then maybe get a chance to breed him myself thought werehawk grinning internally."
    ],
    "authorname": "JayButte",
    "tags": [
        "bdsm",
        "dickgirl",
        "femboy",
        "futa",
        "futa on male",
        "futanari",
        "harem",
        "humiliation",
        "monster girl",
        "sissy"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/four-blessings-pt-02"
}