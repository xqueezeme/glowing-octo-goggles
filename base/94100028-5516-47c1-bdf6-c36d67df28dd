{
    "title": "O.I.N.D. GILF",
    "pages": [
        "As the sun went down in the distance, a tear rolled down my cheek. I smiled, thinking about how great it was the first time I watched the sunset from this viewpoint. No matter how many times you've seen it, there's just something special about watching the sun going down from the rear deck of a cruise ship. Kathryn had loved it. I guess it was only fitting that this would be one of the places that she'd want some of herself to be forever. \n\nKathryn had been the love of my life and I seriously doubted that I'd ever find her like again, though supposedly I had many years to try. She'd left a hole in my heart that had a particular size and shape that would be difficult if not impossible to fill.\n\nThe thrumming of the ship's powerful engines as we moved inexorably towards our next port was almost musical as I contemplated the task before me. This would have been difficult for a man of any age, but at only 31 having to do it was even more so. Especially since she'd been the very first and only significant love of my life. \n\nI thought about her and it immediately brought a smile to my face. Somehow I could never be sad when I thought about Kath. That gave me the courage to reach into my jacket and pull out the small anodized aluminum container that this trip was about. \n\n\"I love you Kath,\" I said. Then a slight breeze kicked up blowing some of the salt spray over me. I unscrewed the top and could go no further. There was a giant sized lump in my throat. Suddenly my legs could barely support me. For a second I almost put the top back on the container, but two hands grabbed the container and my hands lending extra support.\n\n\"You can do it Dad,\" he said. \"It's what she wanted.\"\n\n\"I know,\" I told him. \"But it just feels like I'm pouring her out. Or...or throwing her away. It just feels wrong. I feel like I should keep her with me.\" I was crying like a baby. The tears were moving unimpeded from my eyes, down my cheeks and making little marks on my shirt.\n\n\"What would you do instead, Dad?\" asked my 50 year old son. \"Keep her in an urn on your mantle?\" He looked at me with sympathy in his eyes. \"We both know that isn't what my mother wanted. I understand exactly how you feel. You need some physical part of her that you can touch or see, to hold onto. I knew you would Dad. So I cheated just a tiny bit.\" He handed me a gold chain with a glass pendant on it.\n\n\"There's a tiny bit of her in here that you can keep forever,\" he smiled.\n\nOkay let's pause for a commercial break!\n\nI'll bet that after reading the touching scene you've just read you're confused as hell. What do we have so far? A 31 year old man and his 50 year old son. About a third of you are thinking, Oh shit, StangStar is doing another time travel story. Close to another third are thinking God Damn that guy and his typos, he needs to get a new editor, that literary idiot mikothebaby let a big mistake get through again. The last third are just wondering how the hell I'm going to get the Mustang on this boat. Well all of you are going to have to keep your shirts on because in order to understand this heart wrenching and emotional tableau, we may as well start at the beginning.\n\nIn the beginning there was Heaven and the earth and...\n\nSorry...wrong beginning. Let's try this again.\n\nMy name is Raymond Jordan. When this all started I was 20 years old, in my third year of a four year program in architecture. I was leaning back in a big comfortable chair in my dorm room while my girlfriend and the love of my life at that point sucked my dick. \n\nMy eyes were closed and I was straining to avoid cumming but the tingling in my nether regions and the simultaneous curling of my toes were making it difficult.\n\nKathryn's head bobbed up and down nastily as her mouth worked its magic. The slurping and gagging sounds she made only added to the experience. I was almost there. \"Oh yeah baby, just a little more, \"I said. Then she stopped.\n\n\"Ray,\" she said smiling at me. \"I need a favor.\"\n\nWhy the hell was she doing this to me if not just to be cruel? She already knew that I'd probably do anything she asked. Kathryn, like me was twenty years old. Where I was a normal twenty year old guy she was the stuff dreams are made of. \n\nShe had long blond hair that fell halfway down her back, the clearest blue eyes you've ever seen and lips that were just made for sin. She was tall at 5' 8\" and had the body to go with it. She was slim but everything on her was perfect for her size. Boobs that were just a handful and long coltish legs completed the view. Her waist was small enough for you to get both of your hands around it and her butt was so tiny and tight that you could bounce a quarter off of it and get 2 dimes and a nickel back in change.\n\nThere was no way that I or any breathing male could refuse her anything.\n\n\"Ray, I know that this is our 6 month anniversary and it's a really important day for us, short term. But in the long term picture, it really isn't that big of a deal. When we're married and have kids we won't even remember today. Anyway, I know you wanted to have a little celebration and go out, but baby if I don't meet with my study group tonight I won't pass my Econ final,\" she said. \n\nI knew that she'd been having trouble with that class and was just hoping for a \"C.\"\n\n\"So, Sweetheart,\" I said. \"Go to your study group. We'll celebrate a different night. Now where were we?\"\n\nI wanted my dick back in her warm wet mouth badly.\n\n\"Uhm, Ray, that's not the favor,\" she said. Suddenly my Spidey senses were tingling and the tingling in my nuts was fading.\n\n\"Remember when I told you about my Grandmother?\" she asked. My Spidey senses were off the chart.\n\n\"Well she came into town today,\" she cooed. \"And I kind of told her that you and I would go with her, to this thing she's doing. But since I really need to study, I was hoping that you could take her for me.\" She looked at me with those puppy dog eyes and made that mouth that I still wanted wrapped around my peter, pout. \n\nI still can't believe that I was stupid enough to agree to it. I also can't believe that she never did finish my blowjob.\n\nAnyway, two hours later I found myself on her parent's porch. I was extremely pissed off but trying to hide it. I knocked on the door, wearing the only suit I owned. In the back of my mind I hoped that granny would take one look at me, find out that Kathryn wasn't coming and cancel.\n\nI made up my mind that there were just several things I would not accept. Number one; under no condition would I accept the old bag drooling on me. Number two; there would be no fondling allowed. I'd heard that a lot of these old women take liberties with young guys. Number three; there would be no holding onto my arm and pretending that we were an item. Old women tended to do that to make all of the other old biddies think they had something going on. And lastly, this was a one time thing, done only to help Kathryn out. Those were my rules and I was sticking to them.\n\nI only hoped that the old bag didn't babble too much and didn't have that C/T look. You know how a lot of very old ladies wear too much make up and look like a cross between circus clowns and transvestites. God, I hope I wasn't going to have to help her walk, or worse still, help with her walker or her wheel chair.\n\nKathryn's Mother, Mona, whom I'd met many times opened the door and invited me in.\n\n\"Thank you so much for doing this, Ray,\" she smirked. I'd always thought that Mona didn't really care for me. She always spoke to me as if she knew something that I didn't, like I was the punch line in a really big joke. But she spoke to her husband in the same tone so I'd accepted that it was just her way.\n\nIt no longer bothered me because I thought that she was funny as well. Have you ever encountered a parent who just hates you? A person who no matter how much you kiss their ass just makes you feel that they don't think you're good enough to date their kid. Mona's attitude didn't bother me anymore because I had the perfect comeback for her in my own mind.\n\nWhenever she looked at me or spoke to me condescendingly, I just thought, \"Mona, it doesn't matter what you think because I'm fucking your daughter, a lot!\"\n\nShe'd look at me when I showed up at a party and she didn't like the outfit I was wearing. While she looked down her nose at me, like I should be wearing Jodhpurs, I'd smile and imagine her daughter sucking my dick and my sperm blowing right down her throat. Try it sometimes and you'll discover an all new tolerance for your mother in law.\n\n\"She'll be right down,\" smirked Mona, looking over my suit and pursing her lips. I just smiled back at her while running my mental picture.\n\nKathryn's father on the other hand was a great guy. We genuinely got along great and I liked him.\n\n\"Hi, sorry to keep you waiting,\" said a very musical voice from behind me.\n\nI composed myself to be polite to granny and turned with a fake smile on my face. The smile got bigger and more real as soon as I caught sight of her. It was all I could do not to break my own drooling rule as my jaw dropped and my dick rose.\n\nStanding before me was probably...definitely the most beautiful woman I'd ever seen.\n\nShe was more petite than her granddaughter but curvier. She stood about 5' 1' maybe 5' 2\" early in the morning on a good day. \n\nShe had blond hair, the same shade as her granddaughter's and though shorter, just below her shoulders, her hair seemed better. Shit everything about her seemed better.\n\nHer hair wasn't bone straight like her granddaughter's. It was wavy and just seemed to flow and tumble with each movement of her head. Her eyes weren't blue, they were green and fiery. Only very small crow's feet in their corners gave any clue as to her age.\n\nHer entire face just radiated joy. Her body was sculpted. A thin and tiny waist supported large breasts that had to be natural from the way they moved. Her ass wasn't slim and boyish like her granddaughter's. It may have simply been due to age and gravity but her ass was rounder and fuller. Her legs were perfect and even her feet were beautiful inside of her spike heeled pumps.\n\n\"I'm Kathryn,\" she said smiling. I almost swallowed my tongue trying to reply which made her giggle again.\n\n\"K-K-Kathryn,\" I managed to stammer.\n\n\"The original,\" she smirked, looking me over. Energy just poured from her.\n\nI had to revise all of the rules I'd made.\n\n\"Often imitated, never duplicated,\" she laughed. \"Of course you can call me Grandma, since you'll probably be marrying my namesake. Come on we'd better get going. We don't want to be late.\"\n\nOnce we got outside, she took my arm and leaned into me. I got a brief whiff of a light floral scent and nearly swooned over her again.\n\n\"We can take my car if you'd like,\" she said pointing at a silver gray Jaguar. She handed me the keys and I forgot all about my 14 year old Chevy S10. The Jag was a dream to drive. It was however a rental. She told me that she always rented one because it was the same model of car that she drove back home so it felt familiar.\n\nWe ended up going to a concert by the local symphony. They performed a smattering of pieces by Mozart with several guest conductors and soloists. I was never really into classical music but I have to say that I enjoyed myself and Kathryn did as well. We talked during the intermission and I found out more about her. She introduced me to several friends of hers as her \"date.\"\n\nI had no problem with it and tentatively put my arm around her, which she didn't rebuff.\n\n\"I wish you'd done that earlier,\" she said. \"It's really cold in the auditorium.\"\n\nThe gentleman in me came out and I wrapped my jacket over her shoulders. The look she gave me was worth several million bucks, and I blushed embarrassingly.\n\n\"My granddaughter's taste in men has improved,\" she whispered to me during the second half of the show. She constantly whispered to me then and drew several angry stares that she just deflected by smiling. We have to go and get ice cream when this is over,\" she said and I nodded. Truthfully I didn't want it to end. During the last piece of the evening, her favorite, she grabbed my hand and held it. I'll never hear Eine Klein Nacht Musik again without remembering that night.\n\nThen we drove to her favorite ice cream place. I guess I was expecting some out of the way mom and pop store. We went down to the riverfront and hit a ColdStone creamery. We sat on the grass and ate ice cream as we watched the big boats slowly passing by in front of us with the stars over head.\n\n\"Ray,\" she said to me. \"I've thoroughly enjoyed myself tonight. And to think I was going to try to get rid of you.\" She started laughing after she said that.\n\n\"Don't look at me like that,\" she said. \"You just don't understand the situation. My family is weird as hell. First off there are my sons. I have three of them. They're all married. They all worry about poor old Grandma. They don't want me to either get hurt or get into trouble, so someone has to watch me. My sons all love me, especially Thomas, your future father in law. But they're all busy raising kids of their own and have lives of their own. So sometimes they end up passing me off to someone else. Mona and I don't get along...\"\n\n\"Imagine that,\" I interrupted. \"I think she's jealous of you.\"\n\n\"What are you talking about Ray?\" she smiled.\n\n\"Nothing,\" I said sheepishly. This woman made me as bashful as a virgin.\n\n\"So anyway, a lot of the time, I get handed down to Kathryn or one of her cousins. This time when I found out that even my granddaughter was handing me off, I was a little perturbed. But it all worked out really well from my viewpoint. I can't remember having this much fun in a long time,\" she said. \"Thank you.\"\n\n\"Are we done already?\" I asked.\n\n\"What did you have in mind?\" she asked smiling impishly. \n\nI didn't tell her what I really had in mind. \"Want to go dancing?\" I offered.\n\n\"Oooh!\" she squealed. \"I haven't been dancing in....\" she smiled again.\n\n\"A very long time. But these shoes wouldn't be good for that. I'd end up falling all over you,\" she said.\n\n\"I wouldn't mind that,\" I said quickly. She smiled again. This woman could easily own me with just that smile.\n\n\"Wait, we're not very far from Katt's apartment. I'll just borrow some of her shoes,\" she said.\n\n\"Uhm she's not home,\" I said. \"She's cramming with her study group.\"\n\n\"Well don't you have a key to her apartment? She has a key to your dorm room,\" she smiled.\n\n\"Well I kind of don't,\" I said.\n\n\"Why not?\" she asked. \"Well it doesn't matter, I do. Let's go.\"\n\nWe were actually only about 8 blocks from Kathryn's apartment. \"Doesn't it get confusing with both of you being named Kathryn?\" I asked.\n\n\"Nope,\" she smiled. \"Among the family, I'm Kath and she's Katt.\"\n\nThat fucking Jaguar's ride was so smooth that it was spoiling me. There's something to be said for a classy, well made automobile that simply cannot be overstated.\n\nWe took the elevator up to Kathryn's apartment. I'd told Kath that I wouldn't be much help in finding the shoes she wanted because all I know about women's shoes is that they're smaller than men's and more expensive.\n\nWe weren't particularly quiet, as we opened the door to the apartment. But then since they didn't hear us, it didn't really matter. The door to Kathryn's apartment faces her bedroom. There on the bed, my Kathryn was bouncing up and down on some guy I'd never seen before.   Another guy was fucking her ass at the same time. Meanwhile Kathryn was giving a far better blowjob than she gave me earlier to a third guy. \n\nJust as the guy getting the blow job turned his head, his eyes met mine. I just waved and closed the door.\n\nKath looked at me and said, \"I guess I'm gonna have to dance in these shoes huh?\"\n\nI slowly nodded. \"Kath,\" I began. \"I'm not sure I w...\"\n\n\"No way, Raymond Jordan,\" she said. \"You asked me to go dancing. So you have to keep your word. Let's go.\"\n\nWe got back in the car and I started driving woodenly towards the club I'd planned to go to. \n\n\"Ray, sometimes life does really shitty things to you. Stronger people learn to put all of those little things in boxes and keep all of the boxes separate,\" she said. \"Yep my idiot granddaughter is doing something terribly bad to you. You have to make a decision about what you're going to do about it. But the thing to remember is that life is very short. When you get to be my age you'll realize that no one ever dies thinking that they had too damned much fun. They always wish that they'd done more.\" \n\n\"Whether you break up with my granddaughter or not, it has nothing to do with us going dancing. When you look back on this 5 years from now, do you want to say, \"The night I found out that Katt was cheating on me, I went home all depressed and went to sleep.\" Or do you want to say, \"The night I found out that skank was fucking around on me I put her out of my mind and went out and danced my ass off.\"\n\nShe held out her hand in the car and I took it. \"Let's go dance our asses off Kath,\" I said.\n\nThe rest of the way there Kath kept singing and letting little laughs out.\n\n\"Are you laughing at me?\" I asked. \"I guess I am kind of a sucker.\"\n\n\"No sweetie,\" she said. \"It's just that you told me that she was cramming with her study group. You were almost right. It looked like her study group was really cramming it into her.\"\n\nKath and I danced until they threw us out. The music was loud and soon as Kath suggested, I just put all of my pain and hurt over what Katt was doing into a box in my head and forgot about it until I needed to deal with it.\n\nKath quickly learned that dancing today was very different from they way they'd done it years ago. You didn't learn how to do certain dances and practice them and finally perform them. You just got out on the floor and shook your ass to the music any way you wanted to.\n\nKath had the ass for shaking and she got a lot of compliments. She refused to dance with anyone except me. In the dimly lit club I don't think anyone knew how old she was. That is except for me and I didn't care. Several of my friends came over to me and let me know that they'd seen me. I knew that a couple of them would probably report back to Kathryn that they had seen me here.\n\nWhen I drove her home Kath gave me the nicest hug I'd ever had on her son's doorstep. I'm not sure whether she intended to press her breasts into me when she did it, but it got my salmon swimming upstream. She laughed at my embarrassment.\n\n\"I'm probably not going to get to be your grandma, am I?\" she asked.\n\n\"Probably not,\" I said. \"But I really enjoyed tonight. You're a very special lady.\"\n\n\"Good,\" she said. \"I'd have been a shitty grandma for you anyway. Talk to you soon.\"\n\nI was too preoccupied with my growing misery to even register what she'd said. I climbed into my truck and drove back to my dorm, missing the Jag's smooth ride all the way.\n\nWhen I got to my dorm, I noticed that the message light was blinking on my phone. I looked at the screen and saw that I had a couple of messages from my Kathryn. I listened to the first one, I hoped that she'd be telling me about a bunch of guys who'd drugged her and raped her. No such luck.\n\n\"Hey man of mine. I just wanted to thank you for watching my old granny. Hope she wasn't too much trouble. I love you soooo much and I will make all of this up to you. I feel so much better about my class after tonight. I'm sure that with just a few more study sessions like tonight I'll get my \"C.\" I owe it all to you. Call me.\"\n\nThen I remembered where I'd seen the guy she was blowing. He was the TA in her Econ class.\n\nThe second message was even stupider. I was thinking that maybe the guy had told her about seeing us. But then I thought about it. If I was fucking some hot chick, would I tell her that her boyfriend had been there watching her? If I hadn't had my turn, probably not. I could tell by the message that she still didn't know. But I was sure the guy was laughing at me, bit time.",
        "\"Hey Honey, I'm surprised that you're not home yet. The concert was supposed to be over by 10. I hope she didn't make you go out to eat or something with her. I'm exhausted from all of my studying, I just feel drained. I'm going to bed. I'll meet you for lunch tomorrow and we'll make up for tonight tomorrow night. Love you.\"\n\nShe must think that I'm the dumbest bastard to ever shit between two shoes, I thought. As I sat there, I wondered about it. I wondered how long she'd been doing it. More than that I wondered why?\n\nWe weren't married. Hell, we weren't even officially engaged. I had not given her a ring and asked her to become my wife. It was true that I'd spent a lot of time with her family and she'd told them that I was the man she was going to marry. That had been weird as hell. We were having dinner with her mom and dad and one of her uncles and his wife.\n\nShe'd told them that she was going to marry me and we'd have the same kind of marriage that her mom and dad had. Her mom had that supercilious smirk on her face. Her dad had a nice smile, but her uncle's wife had nearly spat her food out onto the table. The uncle just looked at me with a \"you poor bastard,\" look. I'd just chalked it up to a weird ass family.\n\nI was thankful to Kath for teaching me her philosophy. I used it a lot those first few days. The very next day after I'd caught her, my phones, both the cell phone and the dorm phone rang off the hook. I didn't answer them. She left lots of messages wondering where I was and what was going on. I didn't think about her. It was far easier than I ever thought it would be. I simply put her in a box in my mind and put the box away.\n\nBy afternoon she'd come over. I was conveniently at the library. A friend of mine in the next room had warned me. When I was done studying, I sat in the park across from my building and waited until her car drove away. Then I called the RA in my building and told him I needed my lock changed.\n\nI tried to anticipate every move she would try and blocked them all. By the end of our first day apart she had no clue of what was going on or why. As far as she knew, everything was fine. She'd gotten her pussy lit up, and I was still hopelessy in the dark. \n\nI had to admit I was beginning to enjoy it. I sat by my bed reading and every time the phone rang; I looked at the caller ID. If it was Katt's cell phone or her apartment line or even her parent's line, I just smiled and let it go to voicemail.\n\nShe did nearly catch me once. My locks hadn't been changed and at about 7 p.m. I heard a key in the lock. I dove into my messy closet and buried myself under my overflowing pile of laundry. Having to stay there and breathe in my own funk for several minutes did make me decide to visit the laundry very soon. But it prevented me from having to confront her. \n\nIt was all I could do not to laugh as she stood only inches away from me and started talking to herself.\n\n\"Where the hell are you?\" she asked. She checked my call log and saw that I hadn't gotten any of today's messages yet, and then she turned and left my dorm.\n\nSoon after that the phone rang again. It was a strange area code so I knew it was from out of our area. I tentatively picked it up.\n\n\"So are you depressed and heartbroken?\" asked a very musical voice.\n\n\"Nope,\" I said. \"A very wise and beautiful woman taught me how to handle situations like this. Life is too short not to have a good time.\"\n\n\"So how are you handling it,\" she asked. \"My skanky granddaughter asked me a little bit earlier about last night. I didn't mention what we saw.\"\n\n\"I just put her in a box and put the box away. I'll deal with her when it's time.\" I said.\n\n\"I've been giving this some thought,\" she said. \"Do you want me to fix this for you?\"\n\n\"Nope, I'm fine,\" I said. \n\n\"Oh Poo,\" she pouted. \"I'd decided that I wanted to be your Grandma after all.\"\n\n\"Why not just be my friend?\" I asked.\n\n\"Sold,\" she said warmly. \"Meet me at ColdStone, in a hour.\" Then she hung up.\n\nI met Kath at the same ice cream place we'd gone to the night before. We again sat on the grass in front of the river and watched the boats go by. But this time everything was different. \n\nTo begin with instead of a slinky little dress, Kath had on jeans. I couldn't help but peek at her ass every time I got a chance to. It just didn't seem possible for her to be anybody's grandmother. \n\nJeans are a test that most women should simply stay away from. There are no secrets in jeans. If a woman's hips are too wide, the jeans will call attention to it. If her ass is flat or lumpy or formless, the jeans point it out. Jeans expose every flaw in a woman's lower body.\n\nGuys can get away with it because the current trend is to wear the pants so loose and baggy that you can't make out the contours of a man's body. That doesn't work for women though.\n\nKath in jeans was a gift from heaven. She looked better in jeans, especially around the ass, than her granddaughter did. And the light sweater she wore today showed the way her breasts simply exploded from her rib cage. \n\nShe suddenly put down her ice cream and took off her thigh length leather jacket.\n\n\"Is that better?\" she asked me.\n\n\"Huh?\" I asked confused.\n\n\"I was worried about your neck,\" she laughed.\n\nI rubbed my neck trying to see what she was talking about.\n\n\"You were so busy trying to look at my ass that I thought you might break your neck, so I just took off my jacket to make it easier for you,\" she laughed.\n\n\"I w...\"I began. Then I thought better of it. \"Thanks,\" I said.\n\n\"Katt and I have spoken about going to Hawaii for a week or two,\" she said. \n\n\"Wow that should be a fun start to her summer vacation,\" I said. \"I hope that YOU have a good time, whether she does or not.\"\n\n\"She'd probably have more fun if she wasn't going with me,\" said Kath. \"I'll bet she'd rather be there with you.\"\n\n\"Oh yeah,\" I said. \"So I could hold her stuff while she fucks a bunch of other guys.\"\n\n\"Honey, you're lucky,\" She said. \"You found out about her before it was too late. Not everyone does.\"\n\nKath was hinting about something and I wasn't sure it was all about me and Katt.\n\n\"So how about if you come to Hawaii?\" she asked.\n\n\"Well number one, I have to find a summer job,\" I said. \"And number two there's just no way I could ever go anywhere with your granddaughter again.\"\n\n\"Oh my God,\" she smiled. \"A man with backbone. You're not going to take her back?\"\n\n\"Nope,\" I said.\n\n\"Good for you,\" she smiled, starting to eat her ice cream again. \"So let's talk about Hawaii again. What kind of summer job do you want? What would be perfect?\"\n\n\"What I want is anything that pays over minimum wage. What would be perfect would be a job as an assistant or a gopher in an architectural firm.\"\n\n\"So friend,\" she smiled at me using that same fucking smile that her granddaughter used to get me to do her bidding. I knew then that I was in trouble. Her words from the night before came back to haunt me. \"Often imitated, never duplicated.\"\n\n\"If I deliver you this perfect job, will you come to Hawaii with me?\" she asked.\n\n\"Two things,\" I began.\n\n\"Is it always going to be \"two things,\" with you,\" she asked.\n\n\"Number one,\" I said. \"I don't have nearly enough money for a trip like that. And number two, I'm still not going anywhere with Katt.\"\n\n\"Number one,\" she said. \"I'm very rich. I'll pay. And number two I want you to come with me, not along with Katt, but instead of her.\"\n\n\"But...\" I said.\n\n\"All of my relatives put up with me because I'm only 57, so I'm too young to go into an old folk's home, and secondly because they're all afraid that if they piss me off I won't leave them any money when I'm gone. If Katt or one of her cousins had gone with me to the concert last night, I'd have had a shitty time and been home by 9:45. You probably didn't want to be there with me at first either. \n\nYou were doing it for Katt. What did she promise you, a blow job, or anal? After a while I could tell that you were there and we were having a good time because you wanted to be with me. And you didn't even know I had money. Tonight you were checking me out weren't you? Don't lie I caught you already. But you weren't checking out my bank balance or my investments. You were checking out my ass, and my tits.\"\n\nI looked down embarrassed that I'd been busted so easily.\n\n\"Don't be embarrassed Ray, it's a nice thing. Women love to be appreciated. So let's just go to Hawaii and have fun. It'll help you to get over my skanky granddaughter, and I'll get to have some fun with a person who really wants to be with me for me. Not because he thinks I'll die and leave him some money.\"\n\n\"Okay,\" I smiled.\n\nKath leaned up next to me and I wrapped my arm around her. \"Sucker,\" she said. Then she started dipping her spoon into my ice cream.\n\nThe next day brought more calls from Katt, and more near misses. At lunchtime I got a call from Kath.\n\n\"Hello friend,\" she said. \"Two things,\" then she started laughing.\n\n\"First have you ever heard of Nathan Johnson and associates?\" she asked.\n\n\"They're one of the biggest design firms in the state,\" I said.\n\n\"You start there as soon as we get back from Hawaii. Is 15 dollars an hour okay?\" she asked. \"That doesn't sound like a lot of money to me but they said you'd be happy with it.\"\n\n\"I am sooo happy,\" I said. \"Thank you sooo much! What's the second thing?\"\n\n\"I need to borrow your dorm room tonight for about an hour or so,\" she said. \n\nI gave her my address and simply floated through the rest of my day. I even got a call from NJA confirming that I'd be one of their summer interns. Kath could do no wrong in my book. I'd filled out summer intern applications at every firm in the state for all three years that I'd been in school. I'd never gotten one. There were so many applicants and so few positions that even some guys who already had their degrees couldn't get in. I couldn't believe she'd gotten me one with only a phone call or two.\n\nI was so happy that I forgot to remind my RA about changing my lock.\n\nAt 7 p.m. Kath showed up with a big smile and a lot of bags. I hugged her so hard she almost fell over. She just dropped the bags and hugged me back. Once again I had to back away from her as she pushed those breasts into me and I got hard.\n\n\"Kath do you need me to do anything?\" I asked. \n\n\"Yep,\" she smirked \"you're going to be my audience.\"\n\n\"Where's your bathroom?\" she asked.\n\n\"Uhm, you probably don't want to go in there,\" I frowned sheepishly.\n\nAnother glimpse of the puppy dog eyes and I pointed to the door. She grabbed a chair and plopped it down about four feet from the bathroom door.\n\n\"Sit,\" she commanded, pointing at the chair. Then bags in hand she went into the bathroom and closed the door behind her.\n\n\"Oh God,\" she exclaimed. \"I knew it would be bad but Jeez. Have you ever once cleaned this room?\" I heard the sound of shoes falling and zippers. I don't know it they were opening or closing but I was nervous.\n\n\"Okay friend,\" she called. \"Tell me what you think,\" she said as she stepped out of the bathroom.\n\nKathryn was wearing a tight red one piece bathing suit that was made of a shiny material that appeared to shimmer. Between the material and her curves she achieved ignition. The blood went from my big head to my smaller one so fast that I nearly blacked out.\n\nThough modest by today's standards the suit looked incredible on Kathryn. It had small spaghetti straps to hold up the upper part. I didn't see how she expected to swim in it. Once the material got wet and heavier, her breasts would snap those straps in an instant. \n\n\"I need to learn Kung Fu,\" I told her.\n\n\"Why?\" she asked.\n\n\"I can see myself trying to fight off hoards of men who are dead set on trying to rape you on the beach.\"\n\n\"Does that mean you like it or you don't like it?\" she smirked. She went from looking at my face to looking at my pants. \"Okay, you like it,\" she said going back into the bathroom.\n\nWhen she emerged moments later in another one piece suit that was even smaller than the first, it felt as if the temperature in the room got hotter.\n\nThis suit was strapless and thong backed. It was cut so thinly in the front that I could tell she was shaved down there. And Kath didn't help matters any by stepping even closer to me. She was having trouble keeping her breasts from popping out of the suit as she stood there in front of me. I was having even more trouble seeing her as my ex girlfriend's grandma.\n\n\"What do you think of this one?\" she asked shyly.\n\n\"Kath, you're not wearing that one,\" I said sharply. She arched one eyebrow at me challengingly.\n\n\"If guys see you in that suit they're only going to be thinking one thing,\" I said.\n\n\"So, what's the one thing?\" she asked. \n\n\"Well...you know?\" I said nervously. \"They're gonna want to uhm...\"\n\n\"So are you thinking that?\" she asked. I didn't dare answer her. She stepped even closer to me and I backed away. She laughed and went back into the bathroom.\n\nI tried to think clearly. I thought about what I'd just seen and I reminded myself that she did have a wrinkle here and there on her legs up near her ass. But shit it was still the best body I'd ever seen. \n\nI didn't remember ever becoming so aroused by seeing a woman in a swimsuit. Katt had far skimpier lingerie that had never affected me that way.\n\nWhen Kath stepped out in that blue bikini I nearly lost it. Again, by today's standards it wasn't very risqu\u00e9, but the body it tried to hold in made it very arousing. It was blue with a moderate top and a wide front panty with a thong back again. This time she turned around and when I saw how full her ass was, I subconsciously rubbed my crotch. Whether she did it on purpose or not I'll never know but as she turned back to face me Kath adjusted the top and her boobs shifted. I almost ruined my pants right then.\n\nWhen she saw my reaction she just smiled at me and went back into the bathroom.\n\nWhen she came out my world changed. Kath was wearing a bikini that appeared to be made of three sea shells and some string. There was one very small seashell over each of her nipples and one that barely covered her pussy. My eyes bugged out. Her body was simply incredible. \n\nI'd watched that Mrs. America pageant on TV once. There were several women that were well into their fifties who were still built like they were in their thirties, but Kath put them all to shame. Her breasts were big and natural and sagged from their own heft. Her tummy was flat and tight. The most amazing thing about her though was her ass. It was just round and fat and it jiggled when she moved. I was simply spellbound.\n\nI wanted her more than any woman I'd ever seen.\n\n\"...t this one, Ray?\" she asked. I'd been so busy staring at her that I hadn't heard her talking to me.\n\n\"Kath,\" I said slowly. \"You have to stop. I'm thinking that maybe, I shouldn't go to Hawaii with you.\"\n\nShe looked disappointed and came over to me. \"But why?\" she asked. \"Ray, I'm getting old. I work out really hard and I eat right and make sure I get enough sleep and all of that crap. But I can't fight time forever. So I've just decided that I'm going to only do things that are fun from now on. All of my kids are grown and gone and have lives of their own. It's time for me to have my life.\"\n\n\"My mom and her mom were both beautiful women. Far better looking than I am.\" she said.\n\nI laughed loudly. \"Stop lying Kath,\" I said. \"I don't think that could be possible.\"\n\n\"Anyway,\" she continued. \"I guess I had a plan in mind for tonight. But maybe I'm moving too fast and scared you off. If you want I'll go back out tomorrow and buy some more Granny looking swim suits. I promise I'll buy suits that will cover everything up so you won't have to be embarrassed by me, but please come with me. We'll have fun and you're the person that I really want to be there with.\"\n\n\"Kath, you're taking this all wrong,\" I said. \"The problem isn't you, it's me. Every suit you wore tonight just got me hotter and soon I started thinking things that were definitely not nice and not friendly.\"\n\n\"I just see it as a mistake because if we went and you started running around in your little suits and attracting all kinds of guys, I'd just be sitting there jealous and pissed. So we really wouldn't have too good of a time.\"\n\n\"So you like my suits?\" she asked. I nodded my head vigorously.\n\n\"So how about if we compromise then?\" she smiled.\n\n\"What did you have in mind?\" I asked.\n\n\"Well how about if I go out and buy some more modest things for the beach and the pool. And I'll just wear the ones I bought today, for you?\" she asked.\n\n\"For me?\" I stuttered. \n\nShe looked down and nodded. \"I'll just wear them if we're lounging around alone. Like if it's a rainy day and we stay in the room and read or watch TV.\"\n\n\"Okay,\" I said shyly.\n\n\"You know at my age. There may be some days when we stay in even if it's not rainy,\" she smirked. \n\n\"Well I'd want you to get your rest,\" I agreed.\n\n\"There's just one more suit I'd like you to look at,\" she said. Somehow during the conversation we'd moved closer together and she was rubbing my arm.\n\n\"Kath, I don't think I can handle another suit,\" I said nervously.\n\n\"We almost had a big misunderstanding because neither of us was totally honest,\" she said. \"Let's not do that anymore. From now on let's tell each other the truth, and not try to be polite or spare each other's feelings, okay?\"\n\n\"Okay,\" I said. \"Kath, I truly love looking at your body, but if the suit you want me to see is as skimpy as the last few. I'm going to go off in my shorts.\"\n\n\"Much better,\" she said. \"This suit is older than all of the ones I've shown you today. It's the one I actually wanted your opinion on the most.\" Then she went into the bathroom.\n\nI felt safe again. For one thing if the suit was older it was probably less risqu\u00e9, I thought. Then my mind flashed back on a couple of other things she'd said. Did she actually say that on rainy days we'd stay in THE room? As in the two of us would only have one room?\n\nMaybe it was a suite that had a couple of bedrooms and a common area like a living room or whatever. That was probably what she meant.\n\nThen Kath stepped out of the bathroom. I coughed several times as I took her in. I don't know why it took her so long to drop those three seashells to the floor. Kath was completely naked and slowly walking towards me.\n\nShe grabbed both of my hands and sat down in my lap. Her legs straddled my waist. She moved both of my hands to her breasts and then fastened her mouth to mine. She started out with very soft, very gentle kisses and then slowly opened her mouth and sought out my tongue.\n\n\"How do you like this suit, Ray?\" she asked. Her voice was thick with lust and I was more turned on than I'd ever been in all of my twenty years on the planet.\n\nI was in heaven and flying high. I smiled and got ready to answer her and suddenly we heard that awful sound.\n\n\"Grandma, what the fuck are you doing?\" screeched Katt. She was standing right behind us and she was pissed. We were both so busy concentrating on each other that we hadn't heard her key in the lock or her opening the door.\n\n\"Didn't you hear me, God Damn it?\" she asked again. \"Exactly, what the hell is going on here?\"\n\nI was frozen in shock. Kath on the other hand reacted like a lioness. She flicked her head freeing all of that hair and then got off of me and padded over to Katt.\n\n\"Why are you here?\" she asked her point blank. I noticed at first that Kath wasn't nervous or tentative at all. Though smaller and naked she stepped right up to Katt.\n\n\"I've been calling and looking for Ray all day,\" whined Katt. \"Grandma why are you here naked with my fianc\u00e9?\"\n\n\"Boyfriend,\" said Kath. \"He never actually asked you to marry him.\"\n\n\"Ex boyfriend,\" I supplied. \"Don't forget she dumped me.\"",
        "\"Did not,\" sneered Katt. \"Grandma he's still got all of his clothes on so I can see nothing serious happened. I won't say anything to daddy or the family, but you owe me one. And you need to stay away from my boyfriend.\"\n\n\"Ex Boyfriend,\" I said again. \"And Katt, we're not together anymore.\"\n\n\"Since when?\" she shrieked.\n\n\"Since last night, when we stopped by your apartment and found you fucking three guys,\" said Kath.\n\n\"Oh,\" said Katt visibly paling. \"That was a mistake. It just happened. Don't get upset, it was only sex. It had nothing to do with love. I love you Ray. I don't love any of them. I just did it to get Darren to help me with my grades.\"\n\n\"So you did a gangbang with him and a couple of his friends for a 'C'?\" I asked. \"At least you should have held out for a B+.\"\n\n\"Ray, we can work this out. Don't be angry. It didn't mean anything,\" she whined.\n\n\"I'm not angry, Katt,\" I said. \"I'm relieved.\"\n\n\"You are?\" she asked.\n\n\"Hell yeah,\" I said going over to my TV. \"Look.\"\n\nShe followed me over to the TV and saw me reaching into the back of it. It was my best hiding place because Katt didn't care how anything worked. If something didn't do what it was supposed to do, she just called me and I either fixed it or got another one.\n\nHer eyes widened as I pulled out the box.\n\n\"Shit, I had gotten so into the whole engagement thing that I actually was going to ask you to marry me when we graduated,\" I told her. \"That would have been a nightmare. Now that I think about it, I'm sure that you'd have been cheating on me even after we got married. So in a way you saved me from a lot of heartache down the line.\"\n\nShe looked at me but didn't say anything. She was still staring at the box.\n\n\"Thank you Katt,\" I said with mock seriousness. \"If not for you my life would have been hell. Imagine me married to a cheating skank who never really loved me.\"\n\n\"But I do love you,\" she whined. \"We need to talk this over after my Granny is gone.\"\n\n\"We have nothing to talk about Katt,\" I said. \"Have a great life.\" I crossed the floor and opened the door for her.\n\n\"Wait until I tell Daddy,\" she said to Kath. \n\n\"I hope you do,\" said Kath calmly.\n\n\"You do?\" said Katt confused. This was not working out for her at all.\n\n\"Think about it,\" said Kath. \"It makes my life easier, and saves me money at the same time. It's exactly what I want.\" She paused for a second and grabbed my hand. She pulled me over to my couch and sat down on me as Katt watched.\n\n\"Sooner or later, your dad, my son Thomas, is going to find out about Ray and me. He'll be shocked, of course. But eventually he's going to have to get used to it. Ray and I are going to be friends for a long time, I hope. The sooner your dad and his brothers adapt to it the better for all concerned.\"\n\nKatt was stupefied listening to her grandmother.\n\n\"Then there's the fact of how this will affect you,\" said Kath. \"Of all of my granddaughters I never would have expected you to be the suicidal one.\"\n\n\"What?\" asked Katt. \"What are you talking about?\"\n\n\"Well you are in effect, cutting your own throat, twice,\" said Kath.\n\n\"How am I doing that?\" asked Katt sitting down next to us.\n\n\"Well when you run home and tell your father, he'll call me. Like I said he's going to find out about Ray and me sooner or later. If it's sooner, that's a problem for you because my old brain doesn't work as fast as it used to. So I wouldn't be able to figure out a way not to tell him about you using the apartment he's paying for as some kind of low budget academic brothel. I'm sure he'd be really pissed when he hears about how you spend your nights.\"\n\n\"You wouldn't dare tell him that,\" hissed Katt.\n\n\"Yep, I would,\" hissed Kath right back at her equally venomously. \"And trust me; I'm old enough to do whatever the hell I want. No one pays my bills or supports me. Can you say the same? So you'll end up in a hell of a lot more trouble than I will. And you'll have caused yourself an even bigger problem.\"\n\n\"What's that?\" asked Katt. She'd grown a lot paler since she started listening to her Grandmother.\n\n\"Well honey, you'll have made an enemy of me. So when I do die, you wouldn't get nearly as much as you think you're going to get, especially with you being my most special granddaughter and named after me.\"\n\n\"Okay Granny, I won't say a word,\" said Katt very sweetly. She stood up. \"Ray Honey, I'll call you tomorrow so we can talk.\"\n\n\"Don't bother, I told her. \"We're still done.\"\n\nShe left angrily and Kath started rubbing the front of my jeans. \"It looks like all of the excitement deflated your mood,\" she said kissing me. \"Are you okay?\"\n\n\"I'm just Skippy,\" I said. \n\n\"Don't worry, we'll have plenty more time for that in Hawaii.\" she smiled.\n\nHawaii was great. I had never had a better time in my life. Before we'd even settled into the hotel or had any kind of sex, I'd discovered something that Kath had known since the first night at the concert. The two of us, despite our age difference, were made for each other. We had the same temperament and liked most of the same things. In the few areas that we differed, we were both willing to bend and to blend.\n\nOne area where there was no need to bend or to blend was in the bedroom. We were all over each other all of the time. I was a young man with a young man's needs, and Kath was making up for lost time. It had been a very, very long time for her and she was trying to make up for it and try out all of the things she'd read about or heard about.\n\nThere was literally nothing that she wouldn't try. It was very refreshing for me. I was able to really just let go with her and be myself. With her granddaughter I'd often felt like I was trying to pretend or behave in a certain way so I wouldn't lose her. With Kath, I was under no illusion. I knew she was all mine just as much as she knew that she owned me completely. We did things that were illegal in some states but we only did them with each other.\n\nWe stayed in Hawaii for three weeks, and then I reported to my summer job at NJA. Mr. Johnson himself came down to the office to meet me on my first day. I busted my ass there and was soon being entrusted with things that many of the other interns never got to do.\n\nMy parents were disappointed that I didn't go home for the summer but realized how important the job was. I don't think they realized the switch when I finally told them that I was in love with Kathryn. \"That's nice dear,\" my mom said. \"Do you think she's the one?\" \n\nWithout hesitating I told her I was sure. \"What makes her so special?\" my mom asked me.\n\n\"Well mom,\" I said. \"She's one of a kind. Often Imitated, Never Duplicated.\" I laughed remembering where I'd heard that. After I hung up the phone I realized that she thought I was still referring to the granddaughter.\n\nKathryn bought a condo here in town to live in. We had a big barbecue as a house warming party. Kathryn had warned me that there would probably be fireworks involved. She'd invited her entire family. It was really intended as a dual purpose event. First it was a way of showing her new home to her family. And secondly to let them all know about me.\n\nNaturally Katt's family would be the first to arrive. Katt's dad greeted me warmly when he saw me as he usually did. Her mother simply stared at me.\n\nKath said, \"Honey why don't you get the grill started.\" Thomas and I moved at the same time.\n\nThomas smiled and said, \"Thanks for trying to help out Ray, but I think she was talking to me.\"\n\n\"Thomas, you can help Ray if you want to, but it is his grill,\" smiled Kath.\n\n\"What do you mean, mother?\" asked Thomas still smiling. Mona and Katt were busy in the garden looking at Kath's plants and hadn't heard.\n\nKathryn called Thomas over to sit with her and we talked, He was shocked. He actually flipped out and started calling me all kinds of names. He accused Kathryn of finally going senile. Finally Kathryn calmed him down and told him that maybe he should go home and come back when he was calmer.\n\nHe gathered his wife and daughter and did just that. Luckily his twin younger brothers and their families were more open. Both Carl and Cal simply shook my hand and started asking questions. Carl's wife Linda was very pregnant and I spent a good deal of the afternoon running back and forth fetching things for her. Cal's wife Debbie was really sweet and very open. She was the woman who'd spat out her food when she found out about Katt and I. She surprised me more than anyone else that day. \"You're obviously very good for mom,\" she'd said. \"I haven't seen her this happy in a long time. It's like someone pumped the breath of life back into her.\" She gave me a nice hug and earned herself a friend for life.\n\nKath of course embarrassed me greatly. \"He pumped something into me,\" she laughed. Her kids were all shocked. The grandkids didn't get it, but we had a great time. Everything was going great except for the fact that her oldest and closest son simply didn't approve of us.\n\nI was so in love with Kath by that time that I would have done anything to make her happy. I called Thomas and asked him to lunch.\n\n\"Mr. Smythe, what can I do to heal this rift between you and your mother?\" I asked him before he even sat down.\n\n\"Ray, it's just so weird,\" he said. \"I always thought of you as a nice young man. I kind of expected you to marry my daughter, and the next thing I know you're hooked up with a woman who's nearly three times your age. And to make things worse she's my mother. How the hell did this happen?\"\n\n\"None of us knows when or where we'll find love,\" I said. \"I thought that I was in love with your daughter. I followed her around like a puppy. I did any and every thing she asked of me,\" I said.\n\nHe smiled and said, \"I remember. I remember her telling us that she was going to marry you.\"\n\n\"So when she asked me to take your mom to that concert. To tell you the truth, I didn't want to do it. But I loved her so much I agreed even though it meant that we wouldn't be together on our anniversary. We'd been dating for six months that night. It meant a lot to me but obviously not to her.\"\n\n\"How can you say that?\" he asked. \"She was all broken up about it when you guys stopped seeing each other. When I saw you at Mom's condo I thought that Mom was trying to get you two back together.\"\n\n\"Mr. Smythe, what you and I talk about goes no further. It has to stay a secret between us,\" I said. He nodded his head and I continued.\n\n\"When I first saw your mother, I no longer thought going to the concert with her was an onerous task. She's the most beautiful woman I've ever met. I was still in love or thought I was, with your daughter, but we had a great time and we got along really well.\n\nShe asked me to go for ice cream after the concert and we talked. It seemed like she really needed to go out and have some fun. So I invited her to go dancing. You know women and their shoes. She didn't have the right shoes for dancing so we stopped by Katt's apartment to borrow some.\n\nWe walked in on my girlfriend having sex with someone else on our anniversary. It literally broke my heart. That's what broke Katt and me up. Then your mom and I just became friends. Then it got deeper than that. We just fit. Anyone who spends any amount of time with us can see that. We really don't care whether people accept us or not.\n\nYou're her oldest son, so you not being around us, hurts her and that hurts me. That's why I wanted to talk to you today. I'm going to be with her for the rest of our lives so it would be nice if you could be a part of that. Who knows, maybe someday she'll dump me too, and you can be happy.\"\n\n\"More than likely, you'll dump her and leave her heart broken,\" he said.\n\n\"If that happens wouldn't you want to be there to pick up the pieces and say \"I told you so,\" I asked.\n\n\"I'll think about it,\" he said. \"I'm not promising you anything.\"\n\nIt took another month or so but he started to come around. Katt and Mona never really did. They always hated me. \n\nWhen school started up again, Katt came to me outside of one of my classes and asked me if since the summer was over, I had ended my silly summer fling. I just laughed at her and told her that I had ended my silly fling, with her, months ago. I was seriously in love.\n\n\"What about me, I love you Ray,\" she said. \"I have everything she has and mine are younger.\"\n\n\"Yeah but hers are better,\" I said. \"Plus I can trust her.\"\n\n\"You just have some kind of GILF fixation, right now,\" she said. \"Sooner or later you'll come back to your senses and realize that you don't want the senior version of me.\"\n\n\"Katt, actually you're the skanky version of her,\" I said. \"I want the original. Often Imitated Never Duplicated GILF.\"\n\n\"Fuck you Ray,\" she snapped.\n\n\"Never again,\" I replied.\n\nWe had Thanksgiving dinner at Thomas' house and Mona went out of her way to embarrass me and make me feel uncomfortable. She did silly little things like setting a beautiful table complete with place cards for everyone there including the boyfriends or girlfriends of her nieces and nephews. Of course there was no room at the table for me and no place card either.\n\nShe did make an effort later and set up a little table off to one side near where their dog's food bowl sat, just for me.\n\nKathryn in her usual style handled it just fine. She sat me down in her place at the head of the table and then sat on my lap. We fed each other during the whole meal.\n\nYou could hear Mona griping the whole time about how undignified it was.\n\nKathryn laughed every time Mona said anything.\n\nFinally Debbie asked, \"Mom what's so funny?\"\n\nKathryn told her that Mona had purposefully tried to humiliate me and thought it was funny, but she'd only served to make herself look stupid and to become poorer.\n\nMona choked on what she was eating then.\n\n\"Mona, how much money do you think I'm going to leave you personally?\" asked Kath. \"Get a figure in mind. Every time you do anything to hurt, embarrass or humiliate the man I love, subtract a hundred thousand dollars from that number.\"\n\nMona's eyes got huge and she left the table. From that point on she was always very polite to me. She still glared daggers at me every chance she got, but she was very fucking polite.\n\nHolidays, vacations and special events were all times when the family got together. With the exception of Mona and Katt, I actually believed that they had all come to accept me.\n\nKatt never stopped trying. The next summer when we'd been apart for nearly a year, she was still trying. We were having a pool party to celebrate my upcoming graduation, and my being hired by Nathan Johnson Associates as an architect. \n\nKatt came out of the gazebo in a bikini and came over to me. \"What do you think of this?\" she asked. \"I'll bet you miss having this in your bed.\"\n\n\"Wow I said,\" Your grandma looks way better in a bikini than you do. Her breasts are larger and feel better than I remember yours feeling. Her ass is much nicer too. And you're getting a little soft around the gut. Maybe one of the guys you're fucking has knocked you up.\"\n\nShe just looked shocked.\n\n\"To answer your second question... I have to admit you're right. I do miss having you in my bed. But only because when we were together I got some rest. You always just laid there like a block of wood with two balloons attached to it. Your Grandma wears me out. But on second thought, with her I know she's doing it because she loves me and I love her. There's also the fact that I can trust her. She'd never do to me what you did.\"\n\nShe was really glaring at me now. \"Someday Ray, you're going to wish you were still with me. Grandma won't last forever.\"\n\n\"None of us will,\" I snapped. \"That's why I'll cherish every day I have with her for as long as we have. And who knows with all of the STD's out there maybe you'll catch something at one of your gangbangs and die before we do.\"\n\n\"What do you mean we do, Ray,\" she sneered. \"Maybe you've had your face stuck in my granny's pussy for too long. You aren't the same age as Grandma, you're just fucking her. You're my age dumb ass.\"\n\n\"Maybe this is the first time I've ever really been in love,\" I said quietly. \"But I don't know if I'd even want to live anymore if anything happened to her.\"\n\n\"You are fucking pathetic,\" she said. \"Get away from me.\" I turned around and came face to face with Kathryn and Debbie who'd heard most of it.\n\n\"She's one spoiled little bitch,\" said Debbie.\n\nKathryn didn't say a word. She just grabbed my arm and dragged me through the house. \"Kathryn, I'm sorry,\" I said nervously. \"I know she's your special granddaughter and I shouldn't have spoken to her like that but she pissed me off.\"\n\n\"Shut up, Ray,\" she said. She grabbed her keys off of the kitchen counter and we got into her Jag. We drove about four miles from our condo.\n\n\"This should be far enough,\" she said. I looked around and we were in front of a really sleazy motel. \"Okay get a room.\"\n\nI looked at her strangely. \"Look if you want to throw me out that's fine, but I want to get some of my stuff and I'm staying in a better place than this. I have a good job. I can do a lot better than this.\"\n\nShe tilted her head back and started laughing like there was no tomorrow.\n\n\"Ray, why do you think we're here?\" she laughed.\n\n\"Well I lost my temper with Katt, and you're angry with me,\" I said.\n\n\"No, I saw Katt try to tease you and heard everything you told her. The things you said to her got me so hot that I'm going to fuck your brains out and I didn't want the kids to hear me screaming, so we had to leave. Now get us a room.\"\n\nWe got back to the party a couple of hours later. Luckily we were in time for dinner. Apparently Debbie had told everyone about the incident.\n\nEven Thomas was looking at me favorably. A few months later he and I had another one of our lunches. \"I hate to tell you this,\" I said. \"But you're going to be shocked again.\"\n\n\"Please don't tell me you're leaving her,\" he said. \"I really didn't want to be right this time.\"\n\n\"Nope, it's worse than that,\" I said. \"Thomas, I'm out of school and I have a great job.\" He grimaced a bit at that. I guess it irked him that Katt hadn't earned enough credits yet to graduate and might end up as a sixth year senior.\n\n\"Anyway, I love Kath and I want to be with her forever, but what we're doing just isn't enough for me,\" I said.\n\n\"Well you're a young man. You can't expect her to keep up with you. What do you want me to do, help you find a mistress?\" he asked. His face showed shock and anger and he stood up.\n\n\"Thomas, sit down,\" I laughed. He sat down still looking at me funny.\n\n\"I called you here because the last time we had one of these talks it was AFTER Kath and I moved in together. This time I wanted you to know first.\"\n\nHe stared at me.\n\n\"Thomas, I want Kathryn to marry me. This isn't about legality; it's about so much more. As you already know, I've been with the firm for about a year now and I've moved up quickly. I've gotten several raises and I know your mom is rich but we're not living on her money. I support us now. That's great because there will be more money for you and your kids when the day finally comes that she's no longer with us. But I want her legally as mine.\"\n\n\"You do know the story about your biological father and how she never married him and that caused a scandal in those days. Well I want her to experience being someone's wife, basically mine. Look.\"\n\nI handed him a set of papers that I'd had drawn up that was basically a pre-nup. It stated that we would both in the event of a divorce leave with what we'd brought into the marriage. I would have no claim on any of her assets, period.\n\n\"Does mom know about this?\" he asked.\n\n\"Nope, I wanted to warn you first,\" I said.\n\n\"You know she's never going to sign this,\" he said. \"We all know that you didn't go after her for her money Ray. What do you need from me?\"",
        "\"Well, I hoped you'd give me your blessing to ask her and help me find a ring,\" I said.\n\n\"The blessing you've got,\" he said. \"Good luck finding the ring though. I do not want to be a part of picking the wrong one. Try Debbie though.\"\n\nSo that's what I did. I called Cal and told him I needed to speak to Debbie. Debbie and I took a couple of Saturdays and finally found what we considered the perfect ring. Then we organized another barbecue for the event. Debbie and I were conferring on the best way for me to ask Kath, when all hell broke out.\n\n\"Debbie, out of all of my daughter-in-laws, I trusted you the most,\" said Kath. \"Get the fuck out of my house.\" Cal came over to see what was going on. Debbie was almost in tears.\n\nThomas came over too. \"Mom, this is nowhere near what you think,\" he snapped. \n\n\"Thomas, how would you know what I think, you're...\" she began and then stopped.\n\n\"Kath,\" I began. \"You've really fucked this up, Sweetie.\"\n\n\"How?\" she asked. \"I really thought things were perfect with us.\"\n\n\"Nope, I've been thinking about this for a while,\" I said. \"I spoke to Thomas about it a few weeks ago. Cal and Debbie helped too, especially Debbie. Carl was supposed to organize it, but it's screwed now.\"\n\n\"Can't we fix it?\" she asked with tears beginning to flow.\n\n\"Nope we've just got to do it now,\" I said.\n\n\"Kathryn Smythe, I love you. Will you marry me?\" I asked.\n\nHer eyes were opened in shock. She looked around and saw everyone staring at us and more people heading our way. \"You all knew about this?\" she asked.\n\n\"He asked me for my blessing,\" said Thomas.\n\n\"He got Debbie to help him find the ring,\" said Cal.\n\n\"I'm sorry Debbie. I was jealous,\" said Kath.\n\n\"Forget about that Mom. What's the answer?\" asked Debbie.\n\nShe looked around and said, \"No.\" I was crushed. Even Thomas was shocked.\n\n\"Well...Maybe,\" amended Kath grabbing my arms. \"We'll be back,\" she said dragging me out of the house. You already know where we went. She tried to kill me again but she came back wearing my ring.\n\nNeither Katt, nor Mona attended our wedding by choice. Thomas had to force both of them to go. Kathryn of course refused to sign the pre-nup as Thomas had predicted. When I told her we couldn't get married otherwise she relented and signed it. Then she promptly tore it up immediately thereafter.\n\nThe next summer we got together for another bit of shocking family news. Katt was pregnant and didn't know who the father was. Thomas was beside himself. I took him out for a ride in my new car, a silver colored Shelby GT 350 Mustang. We talked and he told me how worried he was about her future. I told him that I'd get her a job at the firm and look out for her.\n\nThat seemed to make him feel a little better. A few weeks later we found out that Katt had lost her baby. Somehow she didn't seem too sad about it. She went right back to the life she was living. When I told her about the job, she looked at me as if I was crazy.\n\n\"I don't need a fucking job idiot,\" she snapped. \"That was supposed to be your thing. You were supposed to get a great job and take care of me. Like my mom and dad. You know just because you married my Granny, it doesn't make you my fucking granddad so don't try to give me any advice. Only two years ago you were begging me for pussy just like the rest of them. It's your loss. But if you ever want so much as a sniff again you'd better tap into that pipeline for me.\"\n\n\"What pipeline?\" I asked.\n\n\"I know Granny's giving you money left and right,\" she said. \"I saw that fucking car. It is not cheap.\"\n\n\"Katt, I bought the car with my own money,\" I said. \"Your granny's money is safe in the bank and her investments.\" Katt just shook her head and walked away.\n\n\"I told you she was stupid,\" said Kath when we talked about it later.\n\n\"I have tried so hard to love that girl and her mother,\" she snapped. \"But they just keep pushing it. First Mona, now her daughter. I don't know how much more I can take.\"\n\nFor the first time since I'd known her, I saw Kath upset.\n\n\"Honey, don't let that girl upset you,\" I said. \"It's not worth it, she's not worth it. Let's go on with the plan. I can get more time off from work. Let's do it.\"\n\n\"If I didn't have you?\" she said shaking her head. \n\n\"You wouldn't have half as many problems,\" I finished for her. Her face flashed anger again briefly and then she smiled.\n\n\"I'd be just another sad, 60 year old woman with no love in her life. I'd be another old woman put on a shelf in a nursing home somewhere, while a family who no longer has time for her waits for her to die so they can divide her assets,\" she said.\n\n\"Your kids love you,\" I told her.\n\n\"Oh, they love you too,\" she said. \"Most of the grand kids who are younger than you call you grandpa now.\" She laughed at my reaction to this. A grandfather at twenty-five.\n\n\"Ray what will happen to us?\" she asked seriously one night while we were lying in bed cuddled together after one of her lung busting marathon sex sessions.\n\n\"What will happen to us when my body starts to fail and I can't ring your chimes anymore?\"\n\nKath worked out like an Olympic athlete. She jogged every morning either outdoors or on our treadmill. She did yoga three days a week and did weights three days a week. Her diet most days was very Spartan though she loved spoiling me. At twenty five I couldn't do most of the workouts she did. But you can only hold back the hands of time for so long.\n\nNow it was my turn to get angry. \"Kath, I love you,\" I told her. \"Notice that I didn't say that I love fucking you, although I do. The sex that we have is spectacular, but it isn't all that we have. My philosophy is that we'll do it until we can't do it anymore. And when we can't we'll still travel together and we'll take long walks holding each other's hands. We'll find new ways to just kiss and hold each other and make each other happy.\n\nAnd when we can't do that anymore we'll sit and talk to each other about everything we've done and seen. We've been together for four years now and we've never run out of thing to talk about. I seriously don't think we ever will. This is why it's also very important that we pick another one of our drop dead dozen and go there soon.\" I told her.\n\n\"I don't think you like to travel Ray,\" she said seriously. \"It takes you away from your work or whatever building you're designing. I think you only take these trips with me for two reasons,\" she said. I started laughing and squeezed her tighter. I did notice that even then she seemed a bit frailer than she had when we first got together.\n\n\"Now who's the one with the two things for every question?\" I laughed. \"Okay Kath, what are your two reasons?\"\n\n\"Number one, you go on these trips because you love me so much that you'd do anything to make me happy and you know I love to travel,\" she said. I nodded and told her that was true.\n\n\"And number two, you just like fucking me in different hotels,\" she smirked.\n\nWe both started laughing and almost didn't notice that soft knocking on our door.\n\n\"Just a minute,\" said Kath. She put on a robe and threw me one as well. \"Come in,\" she said.\n\n\"Hi Mom,\" said Thomas. \"We need to talk. Why don't you put some clothes on while I talk to Dad for a few minutes?\"\n\nDad? That was a new one, I thought. A 44 year old man calling me Dad at 25.\n\n\"Ray, I want to apologize to you,\" he said looking at me. I started to say something but he cut me off. \"From the very start of this thing with you and my Mom, I guess at first I was against it. I thought that you were just using her for her money or something. You have to admit it's a weird relationship. I don't know why it seems so strange to anyone. Older men with young hot women are not only accepted in society but admired. I don't know why the reverse seems strange to people. \n\nAnyway after a while I guess we all came to accept you two. Well most of us anyway. I have to admit I still had some doubts. But Ray I couldn't help over hearing what you just told her and it really made me feel bad about the way I treated you. It won't happen again.\"\n\nI just nodded as Kath came into the room. \"I'll leave you two to your talk,\" I said. \n\n\"Actually I need you in on this as well,\" he said.\n\n\"Okay,\" I said. We went into the dining room and sat around the table.\n\n\"It's Katt,\" he said. \"I don't know what to do about her anymore. Ray, she's a few months older than you are; she'll be 26 next week. Since the miscarriage, and truthfully before it, her life has been on a downward spiral. All she does is lay around the house all day and go out every night. She doesn't come home until four or five in the morning. \n\nThis morning we got a call to go and pick her up because she'd been arrested for possession of drugs and public intoxication. You wouldn't believe the way she was dressed. Apparently she gave her car away during the night also. The boys she gave the car to, did some damage with it and we're being held responsible since the car is in my name.\" He put his hands over his head.\n\n\"I've tried to convince her to get a job for months. I even tried having her come in and work in my office on the weekends. She can't do anything. She doesn't know anything about anything. I know she never finished her degree but God damn it she was in college for six fucking years. What did I pay for?\"\n\n\"She can't do simple spreadsheets. She can't input info into a database. She can't even fucking type. What did she learn at school?\"\n\n\"Last week I went out into the backyard to give a check to our lawn service guy. He didn't hear me calling him because he was so busy staring at the house. I came up behind him and almost had a heart attack. Katt was in the window dancing naked and putting her ass and her breasts against the window. I ran inside to make her stop. She just laughed about it and said she was just revving them up to make them work better.\"\n\nI could tell that Kath was having a tough time not laughing.\n\n\"What was she like in school, Ray? When did things get this bad? How the hell do we fix this?\" he asked.\n\nI looked at Kath and she just shrugged her shoulders. I looked at her again and tilted my head. Her eyes bugged back out and she shrugged her shoulders again. Thomas looked at both of us and said, \"Okay there's something you guys aren't telling me, isn't there?\"\n\nKath saw the pain on his face and nodded at me.\n\n\"Thomas, remember our man to man talk that I swore you to secrecy about a few years ago?\" I said.\n\n\"The one where you told me about why you and Katt broke up?\" he said.\n\n\"That's the one,\" I said. \"Thomas I'm sorry but I didn't tell you the truth. I didn't lie to you, but I didn't tell you the whole truth. When your mom and I caught Kath, she wasn't screwing another guy. She was screwing three other guys. One of whom was the teaching assistant for her Econ class. I can't say for definite sure but that may be the way that she got through a lot of her classes without actually learning much.\n\nKatt always did have a way with guys. To be honest I actually did a lot of her papers and assignments either with her or sometimes flat out for her. I guess a lot of this is really my fault,\" I said.\n\n\"How is it your fault?\" asked Kath.\n\n\"I agree too, Ray,\" said Thomas. \"So you helped her out in school. Lots of students get by that way. In the business world we call it networking.\"\n\n\"This isn't just about school,\" I said. \"Thomas, your mom and I have talked for hours about the way you bulled your way through school and got your marketing degree. She's very proud of you. I did the same thing to become an architect. Of course I had help. Kath got me that internship at NJA that really helped to pave my way for success.\"\n\n\"She did something like that for me too,\" he said. \"I'm still not seeing it.\"\n\n\"It's simple,\" I said. \"You and I made plans for what we wanted to do in life. We stuck with out plans and became successful in our chosen careers. We also found the people we wanted to be with.\" He nodded and let me know that he followed me so far.\n\n\"Katt had a plan too,\" I said. \"But her plan didn't work out. She didn't have a backup plan so she's just spinning her wheels. Right now she doesn't know whether to try to bull her way through or try something else.\"\n\n\"What was her plan?\" he asked. \"Believe it or not, I paid for her stint in college, all six fucking years of it. Sorry Mom, but I don't have a clue what she wanted to do with her life.\"\n\n\"Yeah you do,\" I said. \"She wanted to be just like her mom. Remember when she told you that she was going to marry me, and she wanted our marriage to be just like yours and Mona's?\" \n\nKath snorted and got really pissed when she heard that. Neither Thomas nor I realized what she was making the angry face about so we moved on.\n\n\"The question is,\" I said. \"How do we help her now?\"\n\n\"Well we do have some time to figure it out,\" he said. \"My lawyer told me that if we send her to a drug treatment program, we can keep her out of jail. I'll still have to pay for all of the damages that happened with the car and her fines but keeping her out of jail is a big step.\"\n\n\"That gives us time to go on our trip, Ray,\" said Kath. \"We'll meet again to talk about this when we get back.\"\n\n\"Well I do have one idea already,\" I said. Thomas looked at me. He was interested.\n\n\"You and I need to look at everyone that we do business with who owes us a favor,\" I said. \"We get a few of those people to offer Katt a job. Something simple to start with that she can grow into. We don't let her know that it came from us. If it's necessary we even subsidize the job for a while. That way the company she works for doesn't lose money on it.\"\n\n\"How is buying her a job, going to help?\" asked Kath. \"The only thing wrong with that girl is that we've spoiled her already.\"\n\n\"Well having the job will make her more independent,\" I said. \"It will also hopefully make her more responsible and it will introduce her to a completely different group of people, so maybe it will get her away from the hard partying crowd.\"\n\n\"I like the idea,\" said Thomas. \"We need to come up with a few places so she can go on a few interviews. That way she won't think that we set it up. We can start planning as soon as you guys get back.\" Thomas was a bit happier when he left than he was when he first got there.\n\nKath on the other hand had her arms folded across her chest and was clearly angry.\n\n\"Honey why are you angry?\" I asked.\n\n\"Ray, you're a great guy and I love you. In fact you are the only man I've ever really loved. You mean so much more to me than that bastard who got me pregnant twice and then ran out without ever even asking me to marry him. You know in those days that totally ruined my reputation forever. If my Daddy hadn't been rich my life would have been ruined.\"\n\n\"I know that story already Kath,\" I said slipping my arms back around her.\n\n\"No Ray, Girls Katt's age aren't really mature enough to appreciate people for their true qualities, especially when it comes to men. They typically go for the jocks or the hot guys. Katt always did before she met you. So I kind of wondered why she was with you. Now I know and I'm pissed.\"\n\nKath told me a story or two that she'd been holding in for a long time. After she told me I understood much more about the family, and I shook my head.\n\nA few weeks later, Katt got out of the drug treatment program and accepted a job with one of the companies that we'd set up. She was fired after two days. Over the next three weeks she went through all four of the companies we set up. Finally Thomas gave her a job in his office where she pretty much did nothing. And that was the status quo for the next few years.\n\nMeanwhile, the years flew by for Kath and me. We visited all twelve of the places on our drop dead dozen list and started another list. We were very happy and very much in love. Kath was really excited about every new thing or place that we discovered. We took thousands of pictures and recorded hours of video footage. Then one morning after we'd had a particularly intense love making session it happened. It wasn't something that most people would notice but it scared the shit out of me. \n\nWe were getting ready for a barbecue with the entire family over. That meant the kids, the grandkids and even our first great grandkids. Thomas, Kath, Mona and I were sitting at a table. Cal and Debbie arrived. Cal stepped up and hugged Kath and she called him Carl. Most people occasionally got the twins confused but Kath never had. \n\nI freaked out. \"Thomas, you watch everything and do the grilling,\" I said.\n\n\"Ray, you guys aren't making another motel run are you?\" he laughed.\n\n\"No we're making an emergency room run,\" I said seriously.\n\n\"Honey, I'm fine,\" said Kath. \"It was just a senior moment. I'm going to start having them every now and then.\"\n\n\"Kathryn Smythe Jordan,\" I said. \"Do you love me?\"\n\n\"Of course,\" she smiled. \"I think we all know that.\"\n\n\"Then get dressed,\" I said seriously. \"If this is nothing you'll all have something else to laugh at me about. But we're going.\"\n\nA few hours later Thomas called my cell phone. \"Ray, are you guys on your way back yet?\" he laughed. \"Or are you staying until the motel closes? Should I save you a steak?\"\n\n\"Thomas, I'm at St. Mark's,\" I said. \"I need you to come down here. Come alone.\"\n\nThomas got there in fifteen minutes. He was still wearing his shorts and a sun visor and he wasn't alone. Debbie was with him and she looked worried.\n\n\"She had a T.I.A.\" I said.\n\n\"She had what?\" he asked. \n\n\"It's like a mini stroke,\" I said. \"Blood flow to the brain is disrupted temporarily. In a real stroke the symptoms can be permanent. In this case it was only temporary. They need to do further tests to determine whether or not this is a serious condition or just something that happened due to stress or something.\"\n\nHe noticed that I was holding her hand while she slept. \"Don't worry, they just gave her something to relax her during her MRI and it relaxed her too well. She's only sleeping.\"\n\nHe nodded his head. Debbie was already on the phone relaying the information to everyone else.\n\nWe sat there for a while watching her sleep. \"How'd you know Dad?\" he asked.\n\n\"I didn't,\" I said. \"I just noticed the mistake with your brother. She never gets the two of them mixed up. And she just looked funny to me. It was very slight but her coordination was off and so was her speech. She said it was because she was tired. But I knew better.\"\n\n\"God damn it,\" he said. \"I never noticed anything.\"\n\n\"Neither did I,\" said Debbie.\n\n\"You two don't live with her,\" I said. \"You don't spend every day talking to her and looking at her. Did you know that sometimes I just stare at her when she sleeps for hours? I can't help it. She's just the most beautiful thing I've ever seen and...\"\n\n\"Did you know that she can't sleep with all of that yammering,\" said Kath opening her eyes. \"You just had to go and ruin it didn't you?\"\n\n\"Ruin what?\" I asked.\n\n\"I know why you brought me here?\" she said. \"Everyone knows that I intended to sneak you to our motel today and fuck your brains out. After last night you were scared,\" she smirked. \"You thought I was going to totally drain you didn't you?\"\n\nDebbie blushed and started laughing. Even the doctor who'd come into the room and was standing behind Thomas had to look away for a moment.\n\n\"Doctor? Could that have anything to do with the attack?\" I asked. He smiled. \"I very much doubt it,\" he said. \"A healthy sex life may actually be contributing to your wife's incredible health and fitness. But eventually we all lose that race. We'd like to keep her here for a few days for observation and to run a few more tests. But I'm sure she'll be fine.\"\n\n\"Told ya,\" Kath smirked.\n\n\"Doctor, I'd like her moved to a semi private room,\" I said.\n\n\"But sir,\" he said. \"Your insurance will pay for a private room if you want it.\"",
        "\"I know\" I said. \"And I'd pay for one if they wouldn't. I want you to put her in a semi-private room and charge us for a private room.\"\n\nHe looked puzzled. So did Thomas and Debbie.\n\n\"Dad, did you have a T.I.A. too?\" asked Thomas.\n\n\"A semi-private room has two beds,\" I said. \"She'll be the only patient in the room so they can charge us for a private room to make sure no one else gets assigned to it.\"\n\n\"So the other bed just gets wasted?\" asked Thomas.\n\n\"Nope, that's where I'll sleep for the next few days,\" I said. \"Your Mom and I have never been apart since we got together. We're not going to start now.\"\n\n\"He's just doing this so he can attempt to violate my virtue while I'm in the hospital,\" said Kath. \n\n\"I'd never do that, Kath,\" I said.\n\n\"Why not?\" she asked. \"We've done it everywhere else. Don't pretend it hasn't crossed your mind. It certainly crossed mine.\"\n\n\"What do you mean everywhere else, Mom?\" asked Thomas.\n\n\"Oh we've done it a few times at your house,\" she smirked. \"Yours too Debbie.\"\n\n\"Where in my house?\" Thomas asked.\n\n\"Uhm your room,\" I said. \"You were on vacation.\"\n\n\"What about my dining room?\" he asked in a perturbed voice. \"Two years ago, we had Christmas at my house. The whole family was there. After everyone left, I found a pair of damp panties on the dining room table that we had just eaten dinner at a few hours earlier. That was you guys wasn't it?\"\n\nI looked down at the floor sheepishly. \"Hey at least we waited until after dinner was over,\" said Kath.\n\n\"Oh God, I blamed that one on Katt,\" he said.\n\n\"I already knew you'd done it in my house,\" said Debbie. \"I thought it was sweet.\"\n\nKath was in the hospital for four days. I never left her side. We had to make some changes starting then in the way we did things. Kath had always been as healthy as a horse, but now we found her taking several medications to prevent blood clots, lower her blood pressure and other things. It was only a mild change in lifestyle at first. Over the next few years though, the changes became more and more the norm. It was just as we'd predicted. We spent every possible moment of everyday together. It never got so bad that we actually stopped making love but we did cut way, way back. \n\nKath made me love her more with each passing second. We started a new tradition of having dinners at our house every Sunday where Kath would complain to the kids about how I was treating her.\n\nShe loudly asked Thomas if he could set her up with one of the young summer interns working at his office.\n\n\"Mom, why would you ask me to do something like that?\" he asked in shock.\n\n\"Your Dad is getting old Thomas. He can't keep up with me anymore. We only did it twice last week. I think I'm going to have to have a lover on the side.\" Everyone nearly died laughing especially me.\n\nThere I was like always with the family gathered around us holding her hand. \n\n\"Carl,\" she said. \"Can I stay with you for a few days?\" she asked.\n\n\"Why Mom?\" he asked.\n\n\"Because I can't get any privacy here,\" she said. \"This pervert even follows me and stands outside of the bathroom. Sooner or later he's going to have to learn how to stand on his own two feet, and let me pee in peace.\"\n\nEveryone was shocked at her words. I was sure she meant it as a joke. The part about me following her to the bathroom actually was funny, but I think that was the moment when they really realized that she wouldn't be with us forever and they'd have to figure out what to do about me. Most of them realized that I'd been with Kath for most of my adult life and I really had no clue of how to live without her or any willingness to do so.\n\nIn many of their minds I was not quite thirty years old but my life had been lived already.\n\nThat night was also the first night that I ever had cross words with anyone in the family.\n\nKath had fallen asleep in front of our fireplace while we talked over old times. Carl and his family had left already. Cal and Thomas were in the garage looking at my latest Mustang. I'd scoured the internet and finally found a Roush Black Jack special edition. I'd paid nearly fifty percent over market value but it was worth it. There were very few of those cars made.\n\nI heard a sound behind me and turned to see Mona coming into the room. Katt never came to any of the family gatherings. No one cared and it was never mentioned. Mona and I rarely spoke. So seeing that she wanted to talk to me was strange.\n\n\"She's asleep,\" I said smiling. Inwardly I was wishing that she's just leave and let me have my quiet time with Kath.\n\n\"I know that you're devoted to the old lady,\" she said. \"But you have to start thinking about your own needs. A young man like you has needs, and twice a week isn't going to cut it. I'm pretty sure that if you called Katt and was nice to her, she'd take care of those needs for you and be glad to do it.\"\n\nBefore I got over my shock at what she'd said, she sank even lower.\n\n\"Katt thinks you're an old lady chaser though. So if she's right and you are into older women, you could also call me, though I'm not sure you could handle me.\"\n\n\"Mona, I'm not going to tell Thomas about any of this,\" I snapped. \"But I want you to go and get him now. Tell him you have a headache and need to go home, or make up something that he'll believe. Then from now on whenever we have these little gatherings, find something else to do. Don't ever come back into my home.\"\n\n\"But she'll think I don't like her,\" said Mona. \"And I w...\"\n\n\"If Kath ever dies, I'll make sure you get everything she left you,\" I sneered \"Now go.\"\n\nMona took off like a scalded cat. I thought back to what Kath had told me about her a few years ago and just shook my head. \"Bitch,\" I said quietly.\n\n\"You told her Honey,\" smiled Kath.\n\n\"Sorry Kath,\" I said. \"How much of that did you hear?\"\n\n\"All of it,\" she said. \n\n\"I thought you were asleep,\" I said.\n\n\"You still don't get it do you?\" she said. \"Okay let me try this one more time. I love you Ray Jordan. We're connected. Not by wires or gears, but by our hearts. Mona makes you nervous and upset. Your heart beats faster and you warm up. That means my heart beats faster too and that woke me up.\"\n\n\"Sorry,\" I said again.\n\nShe just smiled. \"I wouldn't have it any other way,\" she said. \"But since you're apologizing, there are some things that you really should be sorry for.\" She was nodding her head as she sat up, smiling.\n\n\"Like what?\" I asked.\n\n\"You should be sorry that it took you so God Damned long to grow up and meet me,\" she said. \"I would have loved for us to have had many more years together. You should be sorry especially, for the six months that you spent following my useless granddaughter around. Those are six more months I should have had. You should really be sorry, that you were so shy and timid when we first met. That's at least an extra week that we could have spent fucking and I'd really love another week of things the way they were when we first met.\"\n\n\"Uhm Hm,\" I smiled. \"Is there anything you've left out?\" I asked.\n\n\"Ray the thing I'm the most sorry for is that we met too late for me to have your baby. I love my sons and their families. We have a great family but there's nothing I wouldn't give, except my time with you of course, to see what our babies would be like.\"\n\nOver the next few months Kath got weaker. I took a sabbatical from work so I could spend every second with her. I planned out things with her and with the family a lot of which never happened because she was just too tired.\n\nThomas planned a huge birthday party for me for my thirtieth birthday. I'm sure it was really special. Everyone came over and swam in the pool and ate and had a really good time. I missed it, or rather we missed it. Kath slept through it and I simply couldn't leave her. I started to plan things around her waking days. There were days when she'd be very lively and almost like the old Kath. On those days she could even walk a few faltering steps.\n\nThe only problem with those days was that she slept almost all day for the next couple of days after them. I'd always expected Kath to live to be a healthy 80 year old woman, but it appeared that she'd lived too much life to make it. It was almost as if in life, like in running there were sprinters and there were marathoners, with the rest of us being somewhere in between.\n\nKath was a world class sprinter. \n\nI arranged another trip for us, it took days of planning. This time the journey was much shorter though. Instead of us jetting off to Katmandu, the trip was much closer to home. \n\nDebbie and I got Kath dressed in an absolutely beautiful black dress. Except for a wrinkle or two here or there she looked almost exactly the same as she had nine years ago when we first met. Of course her health had really declined since then but what she lacked in energy, we made up for in shared memories.\n\nWe went to hear the local symphony perform Mozart. Though there were different musicians and a different conductor, the magic of the music still transported us back through the years. Kath fell asleep for a few moments here and there but squeezed my hand often to let me know that she was awake.\n\nThomas was waiting for us outside in his car. When I called him and told him that Kath was a bit tired and couldn't walk, he brought her wheelchair.\n\nI pushed her to ColdStone and we got ice cream and watched the boats for a while. \"This is what we did on our first 'Date',\" she smiled at me with a big tear rolling down her cheek.\n\n\"You're such a sap,\" she said. \"That's why I love you so much Ray.\"\n\n\"I love you Kath,\" I said. Thomas smiled as he watched over us. I leaned over to kiss her and squeezed her breast on the sly.\n\n\"Aren't you being a little forward young man?\" she asked. \"We just met after all.\"\n\nAt first I thought that she was joking. Then as I looked at her face I could tell she wasn't. She was still smiling but her face was wrong. I called Thomas and told him to hurry.\n\nThomas brought the wheelchair over beside us and Kath didn't notice him.\n\n\"Are you sure you love my granddaughter?\" she asked. \"I'd never tell this to anyone, but you have a nice face. That girl is bad. Get away from her as fast as you can.\"\n\nShe looked over at Thomas finally. He was in shock at her words about his daughter.\n\n\"What the hell are you doing here, you bastard,\" she spat at him. \"Get away from me. How dare you even try to come back into my life? You never even called or wrote to find out about your sons.\"\n\nThen as swiftly as it began the incident was over. \"I love you so much Ray,\" she said and then she closed her eyes.\n\n\"We'd better get her home,\" said Thomas. \"She had another attack didn't she?\"\n\nI slowly shook my head. He just looked at me strangely. \"Yes she did. I saw it. She was talking to you like she didn't know you Dad. And she thought that I was a stranger obviously,\" he said. \"We should get her home or to the emergency room.\"\n\n\"Thomas, she didn't think you were a stranger. She thought you were your father. It's too late to take her to the emergency room, and she's already home.\"\n\n\"You mean...\" he said. I nodded slowly and rubbed his shoulder.\n\n\"Thomas, you once said that you owed me one,\" I said to him. \"I want to collect now.\"\n\n\"I owe you a lot more than one, Dad,\" he said. \"What do you want?\"\n\n\"An hour with her before we call the police and the Coroner and the funeral director and the family,\" I said. \"There are so many things I still need to tell her.\"\n\nHe nodded and started making phone calls. I guess most people wouldn't have understood but he did.\n\nI held Kath in my arms one more time. Not surprisingly she was beautiful even in death. I told her how much I loved her and that I didn't think that I was strong enough to go on without her. I told her that I was already lonely and I couldn't wait until we were together again.\n\nIt seemed like the hour flew by, before I knew it Thomas was beside me and I could see an ambulance with its lights off parked nearby on the grass. I didn't remember the truck even pulling up. But there they were several men; those who wore hats had taken them off. They were all waiting for me. Kath's own doctor had come over and explained her condition to the EMS techs and the man from the coroner's office. \n\nThey very lovingly performed an examination on her and signed her over to the mortician. They expressed their condolences to me and told me that my mom had been a truly loved woman. I didn't bother to correct them.\n\nI guess we all handle the death of a loved one differently. Over the next few days I did a lot of really stupid things. I went out to my car, the Black Jack. It was my favorite of all of my Mustangs. I was going to go somewhere. As I sat down in the car and put my seatbelt on, I started thinking about Kath. That thought led to another and another until Cal came out of the house.\n\n\"Dad, you're back already?\" he asked. Then he looked at me. \"You didn't go anywhere did you? You've been sitting out here in the car for three hours, why?\"\n\nI told him what had happened and from then on they had someone watching me. They were afraid I'd sink into a depression and never come out of it.\n\nIt took a few days, it was actually the morning of the funeral that I realized what I had to do. Kath had wanted a funeral so her family could see her one more time. Instead of a burial she would then be cremated and my journey would begin.\n\nThe funeral was as you'd expect a very special affair. The service was non-religious. We all took turns standing and telling our favorite memories of Kath and things she did that made her special to us.\n\nKatt, of course embarrassed herself and all the rest of us by talking about how similar she and Kath were. I think she was saying it all for my benefit but I really didn't see any similarities between them, except for the name.\n\nKath's attorney called us all together the next day to read her will. I didn't really want to be there. But I had to; there were things I had to put right.\n\nI saw Katt in the hallway just before the reading.\n\n\"I'll bet you wish you were still with me now don't you Ray,\" she smirked. \"Remember the pre-nup. You aren't getting shit and I'm going to be fucking rich. Maybe after I fuck around for a few years to make you suffer, I'll let you marry me.\"\n\n\"I've got my own money Katt,\" I said. \"All I ever needed from your grandma was love.\" Katt snorted and walked away.\n\nMona didn't say a word to me. She just went into the office.\n\nKath left Carl one million dollars. She left Linda, his wife a half million. She left each of their three kids one hundred thousand dollars each. The only stipulation on the money was that they had to spend it. They could put it in a bank for a while but she wanted them to use the money to have and do things they wanted to do. She didn't believe in saving for a rainy day.\n\nShe left Cal a million dollars as well and left Debbie her own million. Debbie had really bonded with Kath and Kath considered her the daughter she'd never had.\n\nShe also left each of their kids a hundred thousand dollars.\n\nThen the surprises began. She left Thomas, her first born son an envelope telling him that he and I would talk and determine the amount of his inheritance after his divorce.\n\n\"What?\" everyone said at once. Mona almost fell out of her chair.\n\nKath left Mona five dollars. With all of the other inheritances she'd paid the taxes. Mona had to pay the inheritance taxes on her money at 33%, she should only receive three dollars and sixty five cents.\n\nKath left her special Granddaughter a quarter. After taxes Katt would recieve roughly seventeen cents. \n\nMona and Katt were pissed beyond reason.\n\n\"This is Bullshit,\" screamed Katt. \"I want my fucking money.\"\n\n\"What divorce,\" screamed Mona.\n\nThey were even more pissed when they found out that Kath had left everything else to me.\n\n\"We'll contest the will,\" screamed Mona. \"That woman was obviously out of her mind.\"\n\n\"I've been telling you that for almost 10 years,\" hissed Katt. \"What kind of woman steals her granddaughter's boyfriend?\"\n\n\"I assure you that Mrs. Jordan was very much in her right mind when she drew up this will. She was adamant about a number of things in it including her wishes for how her husband would take care of her ashes,\" said Kath's attorney.\n\n\"But why would she not leave anything to her oldest son?\" asked Mona. \"And what's all of this bullshit about a divorce? Thomas do you know anything about divorcing me?\"\n\n\"Today was the first I ever heard of it,\" said Thomas. \"I'm shocked about the way she treated you. Mom not leaving Katt anything does make sense because Katt has problems right now.\"\n\n\"Yeah but she totally stiffed me,\" shrieked Katt. \"She gave the other granddaughters, my cousins a hundred grand each. With me being her special Granddaughter I should have... I'll bet you have something to do with this didn't you Ray,\" she said glaring at me.\n\n\"Katt, she called Dana, her best granddaughter and she called Mary Anne her favorite granddaughter,\" I said. \"Each one of you had a little title to make you feel like she thought you were special.\"\n\nIt was the first thing I'd actually said since the proceedings began. And it opened the floodgates. Everyone was coming over to me to talk to me about this or that.\n\n\"Thomas your mother loved you very much,\" I said. \"You'll probably end up with more then either of your brothers did, but Kath wanted to wait until after the divorce so your inheritance couldn't be split with Mona as community property. It was Mona she wanted to stiff not you.\"\n\n\"Mary Anne,\" I said to Carl's oldest daughter. She came over to me and sat near me. \"Kath and I spent a lot of time keeping track of what all of her grand kids were doing and wanted to do. You want to take some time off and take a big road trip with a bunch or your friends and now you have the money to do that, Honey. But your car is a death trap.\" I reached into my pocket and gave her the keys to Kath's Jaguar.\n\n\"Take care of it and remember your Grandma when you drive it,\" I said. \"She loved to travel too. I think you get that from her.\"\n\n\"Thank you Grandpa,\" she said. \"I'll tell you all about my trip when I get back.\"\n\n\"Dana, it's your turn,\" I said. Dana came over. Katt was becoming angrier by the second. \"Dana, you just got engaged didn't you?\" She nodded. \"Kath and I talked about your young man a lot. I don't see it but she seemed to think that he reminded her of me back then. To start you guys out well, I think she would have wanted you to have this condo. I don't want you to spend your money on it so I'll have it redecorated for you. Just pick out the colors and furniture you'd like.\"\n\nEveryone was stunned. Debbie came over to me looking confused. \"Ray where are you going to live?\" she asked.\n\n\"Debbie, I can't stay here without Kath. Everywhere I look I see things we bought and I think about what we were thinking when we did them and it just makes me miss her more.\" As I started to cry she hugged me and rubbed my back.\n\n\"Kath gave me a mission to take care of. So I'll be traveling for quite a while. When I come back from that I'll look for a place.\"\n\nDebbie still didn't look convinced.\n\nI told Thomas, Mona and Katt that we'd get together to discuss the will and Kath's reasons and some things she wanted them to know first thing in the morning. Debbie told me that she'd be there too. I think she decided that she needed to crash the meeting to support me.\n\nThat night sleep wouldn't come. I knew that tomorrow would be a rough day. Cal and Debbie came over early in the morning to make sure I had breakfast. We'd scheduled our meeting for 9 a.m. I told Debbie that Thomas would probably need her a lot in the coming days.\n\nKatt arrived at 8:30 because she wanted to talk to me. It was funny looking at her and comparing the woman she was when we first met to the woman she'd become.",
        "She was still taller than Kath had ever been. She died her hair to make it the same color that Kath's was. Although Kath's natural hair color would have been gray long before we met.\n\nBut after the hair color there were no similarities. Kath had worked very hard to stay fit and in shape. Katt's breasts sagged a lot and her tummy had a lot of fat on it. Though only thirty she looked much older. Her face had lines all over it, and her normal expression was for her mouth to be flat and tight. She looked nothing like the girl I once thought I loved.\n\nAnd she showed none of the joy that her grandmother had radiated. There was only one Kath. And Katt would never equal her.\n\nI too was only thirty, I'd be thirty one in a couple of months but I felt much older. Katt came towards me and reached out to hug me as Debbie stood protectively near.\n\n\"I'm sorry about the things I said yesterday,\" said Katt. \"This whole thing, our entire lives are not the way things were supposed to be. I guess I've just been unable to let go of my anger about losing you.\"\n\n\"Katt, you didn't lose me,\" I said. \"If you have a quarter in your pocket and it falls out of a hole that you didn't know was there, you lose it, because you don't know it's gone or where it is. You willfully fucked around on me and expected me not to find out. There is a difference.\"\n\n\"But I was young and foolish then,\" she said. \"I expected you to be angry for a while and then we'd get back together. I didn't expect you to fall in love and marry someone else, especially not my Granny.\"\n\n\"Why not?\" I asked.\n\n\"Well because she was old\" said Katt.\n\n\"Katt, when we met, Kath was prettier, and built better than you've ever been or ever will be,\" I said getting angry.\n\n\"Well we can start again,\" she whined. \"I'm still just like her; I'm just the younger version. We even have the same name. You can call me Kath if it floats your boat. Fuck the money Ray, I just want you back.\"\n\n\"But you're not the same, Katt,\" I said. \"Kath was one of a kind. She was often imitated but never duplicated. She was the original. You're a pale copy. I'm not even sure you're a copy.\"\n\nBy this time her parents had arrived. Thomas greeted me warmly as usual. Mona just glared at me through red rimmed eyes.\n\n\"Well, we may as well get started,\" I said. I felt like shit. I felt like someone had just reached into my chest and pulled my heart out.\n\n\"Thomas,\" I said, \"Most of this concerns you and me, since Kath's will can't be contested. The remaining part of Kath's estate is roughly 7 million dollars. There's also a bit over 3 million dollars of my money. Kath left your inheritance up to me. My intention is to change a few of these things. Cal and Debbie definitely deserve more money. Kath was particular about the amounts she left each grandchild as well. She wanted to leave them enough money that they'd be able to do anything they wanted with their lives, but not enough that they'd be able to do nothing.\n\nWe both want you guys to use your money now while you can enjoy it. Life is too short to keep things on a shelf waiting for a rainy day.\n\nMy intention is to give you at least half of our combined total. And then give Cal and Debbie more as well.\"\n\nMona's eyes got huge. She looked at me and smiled for once.\n\n\"But I won't be giving you anything until after your divorce,\" I said. \n\n\"What fucking divorce,\" snapped Mona \"Kathryn hated me. She never liked me. This is just her way of cheating me out of my fair share.\"\n\n\"Mona,\" I said. \"You don't have a fair share. It's not like you worked for the money. It belonged to Kath so she could do anything she wanted with it.\"\n\nMona sat back down grumbling.\n\n\"Ray, do you have any idea why Mom decided against leaving Mona or Katt anything?\" asked Thomas.\n\n\"Yes, Thomas,\" I said. \"That's what we're here to talk about. Do you remember when I was dating Katt, and she told you that she was going to marry me and our marriage would be just like yours?\"\n\n\"Yes I do,\" he said smiling. To him that had been a happier time.\n\n\"Do you remember how angry Kath got when we told her about that a few years ago?\" I asked.\n\n\"Yeah, but I never knew why,\" he said.\n\n\"Thomas, your daughter never loved me,\" I said. \"I was never her type.\"\n\n\"Bullshit,\" screamed Katt. \"I was the one who wanted to marry you. I never stopped loving you.\"\n\n\"No Katt, you wanted me the same way your mother wants your father. I would have provided a secure and safe life for you so you could lay up on your fat ass and eat bonbons. Meanwhile you'd have been fucking every Tom, Dick and Harry you could meet on the side while I was at work just like your mother does.\"\n\nMona got pale and stood up. \"That's not true. What are you talking about?\" she screamed.\n\n\"Mona, Kath knew about you from the beginning,\" I said. \"She had investigators on you for most of your marriage.\"\n\n\"Okay, I'll admit it. I had a brief fling,\" she said. \"It meant nothing Thomas. It was only sex. You're always away working. I was lonely.\"\n\n\"No Mona,\" I said. \"The report is very thorough but Kath says she may have missed a few encounters.\" I handed Thomas a thick file. As he opened it there was a log which listed dates places and times. There were hundreds of pictures of Mona with a variety of men of all sizes and ages and races. There were pictures of Mona being taken by multiple men. Mona riding on a man's back while he wore a saddle. There were shots of Mona completely covered in sperm, Mona trying to swallow a huge penis and of Mona being pissed on. Mona with a circus clown, Mona with four men who had to be at least eighty years old each. She looked away and started crying.\n\n\"I can't help it,\" she said. \"I have a disease, I'm a sex addict. I just need help. But it's only sex,\" she said. \"Thomas, you're the only man I love.\"\n\n\"Thomas, no woman loves a man she doesn't respect. Mona has no respect for you. Look at the date and specifically the time she entertained those four Black gentlemen in your home. That was last week. They left your house only moments before you came home from work. It was almost like she was daring you to catch her. She had no fear of you finding out. She has no respect for you,\" I said. \"You're only her meal ticket, like Katt wanted me to be.\"\n\n\"No,\" screamed Mona \"I'm not that bad. It's just gotten worse recently.\"\n\n\"Bullshit,\" I said \"Thomas how long have you been married?\"\n\n\"Thirty two years,\" he said. Thomas was in shock. He couldn't take his eyes off of the pictures in front of him. Mona was trying to take them because she knew that the longer he looked at them the more the images would be burned into his brain.\n\n\"Thomas, if this hasn't been going on for that long,\" I said. \"How do you explain this?\" I threw him another file. He grabbed it before Mona could intercept it.\n\nHe looked at a couple of medical forms. \"What is this?\" he asked. \n\n\"It's a modern DNA test. The other sheet is an old fashioned blood analysis from about thirty years ago,\" I told him.\n\nHe glared at Mona. \"How could you?\" he hissed. Mona just looked down.\n\n\"Sorry Thomas,\" I said. \"You've raised her and sacrificed and did your best to be the best father you could be. I hope that you'll continue to help her but Katt isn't your daughter. Mona has been fucking around on you since before you ever got married.\"\n\n\"But I...\" said Mona.\n\n\"Thomas according to the records here,\" I said. \"Mona has had at least three abortions, since Katt was born. According to the log the reason she had them, instead of giving you more kids was that the other children wouldn't have been easily palmed off as being yours.\"\n\nThomas just put his head down. I think he wanted more than anything else to just run away right then, but to his credit he stayed for all of it.\n\n\"I think Katt knew about all of this and that's what she planned for me as well. That little statement she made at that dinner was just a joke between her and her mom. She wanted us to have the same kind of marriage that you two have.\"\n\n\"Think about it. In college I was brainy and hard working. I'm reasonably good looking but I'm not Brad fucking Pitt. There is no way that a girl who looked like Katt did should have been attracted to me. I'll bet it's the same way with you. Mona was probably really hot back then. Why would hot women pick guys like us? It would have to be one of two possibilities. Either they fell madly in love with us, which I doubt. Or she wanted to have something safe to fall back on in case none of the jocks she was fucking got rich and famous. A nice guy/sucker with a good heart who would always take care of her.\n\nI've long suspected that one of the reasons that Kath was attracted to me was the fact that me and my situation was so close to yours, Thomas. For all of those years she never said a word about any of this because she wanted you to be happy. She couldn't bear the pain that finding all of this out would do to you. She just figured that ignorance is bliss. But Thomas it's time for you to grow up and accept your responsibility as the head of this family, so she left it to me to put things right.\"\n\nMona grabbed Thomas and started crying and begging for him to believe that she loved him and only him. Thomas was still looking at the photos and the dates.\n\nThroughout all of this Katt had remained silent. I think she'd always known that her mother fucked around on her father and why. I also think that was what she'd hoped to model her marriage to me after. But the knowledge that she wasn't Thomas' daughter had floored her. He was the only father she'd ever known. Seeing what her mother had done from this angle hurt her badly. It threw her entire sense of self into flux. She no longer knew who she really was.\n\nI had never sought revenge against Katt, for cheating on me; I hadn't felt the need for it. I've heard it said that the best revenge is living well. Since I'd broken up with Katt, I'd had a much better, much fuller life than she would ever have. I hadn't simply moved on, I'd upgraded and never looked back. I went from having a girl I really liked, to the woman I'd love forever.\n\nThomas proved to be just as shrewd as his mother. He assured Mona that he didn't want a divorce. He did tell her to begin looking for a marriage counselor.\n\nWhile she did that and started trying to cook better and dress sexy for him in hopes of saving their marriage, Thomas was readying things for their divorce. Thomas sold the house they lived in for a dollar and moved most of the money from their checking and savings accounts into another account that was in a foreign bank. He transferred ownership of Mona's car to her and stopped making the payments on it. Then he took a buyout instead of his pension and quit his job. Again the money went into his offshore account.\n\nThomas decided that he wanted to complete my mission with me. All of the traveling I'd be doing to fulfill Kath's wishes would help him to get over his divorce.\n\nThe day before we left for Paris, which was the first place on our list, was a rough day for Mona. She was served with divorce papers, evicted and had her car repossessed all on the same day.\n\n\"I thought you said, you didn't want a divorce,\" screamed Mona over the phone that morning.\n\n\"I thought about it and decided that it would be the best option,\" said Thomas calmly.\n\n\"I'll take everything you have\" screamed Mona.\n\n\"Right now my net-worth is zero,\" said Thomas. \"In this state we have to split everything 50/50, so you're welcome to half of nothing.\"\n\nI reminded him of her inheritance. \"Oh yeah, Mona,\" he said. \"Since we do have to split everything 50/50 I'll get half of the money my mom left you, so you owe me a dollar and eighty three cents.\"\n\n\"Fuck you Thomas, you're not getting shit,\" said Mona as she walked away.\n\nThat was the last we ever saw of Mona or Katt. Debbie has told us that they've been seen on the bad side of town wearing way too much make-up and not enough clothes. She also told us they were sporting bruises. I guess that cheaters all eventually get caught even after they've gotten away with it for years. They also eventually get what they deserve. Both of them liked to fuck around a lot, now they'd apparently get to. Hopefully they could make a living at it.\n\nThomas gets better every day. Traveling like his mother liked to do suits him, but not me. Kath's plan was that I'd take her ashes and divide them into ten vials. I'd take those back to the ten places that we'd enjoyed the most on our travels. In each place I'd think of her and the fun we'd had there and I'd scatter her ashes so that she'd be a part of all the places we found special. After the tenth place I was supposed to go and find someone to fill my heart and the rest of my life.\n\nI guess that she thought I'd be like Thomas and each place and every week or so I'd get better, until I was able to function again. I also think that Debbie knew my intentions from the moment I told her that Thomas would need her. Everyone wondered why she'd hugged me for so long and cried before we started out on our trip.\n\nEach place actually got harder for me and each day became more of a struggle. By the time we got to the ninth destination, the cruise I was on when this tragic tale started, I could barely perform. Thomas had made the locket with a tiny bit of Kath's ashes for me and it really helped me to know that when all of this ended I'd still have something of her other than memories.\n\nThe last place on my List was the cliffs of Elessium in Europe. There was a legend that if you looked over the cliff with a pure heart you'd see your one true love. Kath had joked that she'd seen me, when we went there. I'd laughed and told her that she had to see me because I was standing right next to her, the way I always did.\n\n\"So the legend is true,\" she declared laughing.\n\n\"The legend is false,\" I told her. How could she have a pure heart when she was rubbing herself against me the whole time we were there?\n\nI asked Thomas to hold my jacket as we got to the observation deck near the top. We'd been climbing the steep little trail that took you up to the cliffs. Thomas was tired and cranky but he complied. \"Thomas, this is our last stop,\" I told him. \"Debbie is probably going to start introducing you to some nice young ladies when you get home so you need to get into better shape.\"\n\n\"I'm not sure I'm ready to meet anyone yet,\" he said.\n\n\"Thomas the one thing your mom used to always tell me was that you have to live your life to the fullest every day,\" I told him. \"Right now you're miserable because you got rid of a woman who never really loved you the way you deserved. That leaves you free to find someone to love the way I loved your mom. You're younger right now than she was when I met her. If you want to be miserable, at least find a woman to be miserable with.\"\n\nI stepped up to the edge and surprisingly this time I had no problem pouring out the ashes. I watched as the fine mist blew away on the wind taking the last of my true love's mortal shell with it. I spent a long time looking over the edge of that cliff.\n\n\"Dad we should go,\" said Thomas. \"It's time for us to go home.\"\n\n\"Thomas, the money is all yours,\" I said. \"Give Debbie at least another mill.\"\n\n\"We'll work all of that out when we get home,\" he said.\n\n\"Thomas, I never intended to go home. There's a note in my jacket pocket and all of the credit cards and ID. Thanks for helping me with your Mom's last wish, but I can't be without her anymore,\" I said as I stepped off the edge of the cliff and into my Kath's arms.\n\n\"We're together again now and happy as always. She was a little angry at me. But I explained to her that I couldn't be without her and still be happy. I eventually would have been with her anyway so I'd just cut out the Bullshit in the middle.\n\nShe reminded me that she'd wanted me to find someone else. I simply explained to her that I could never find another woman like her. She was Often Imitated but Never Duplicated. She laughed at that and everything was fine.\n\nWe watch over our family now, but mostly we just talk like we always have. We're the same age now as when we met and we'll never be apart again. Even in death, life and especially love, goes on."
    ],
    "authorname": "StangStar06",
    "tags": [
        "cheating",
        "romance",
        "mustang"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/o-i-n-d-gilf"
}