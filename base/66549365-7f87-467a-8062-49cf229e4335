{
    "title": "Milk and Cookies",
    "pages": [
        "Thanks to my editor, AnInsatiableReader, for helping my clean this up. Also, thanks to my fiancee, for putting up with the time it takes for my neurotic ass to write, and for helping me clean it up, too.\n\nThis is my entry in the 2012 Winter Holidays contest. Vote, comment and send feedback!\n\n*\n\n\"Now I know what he likes for a late night snack, for years now it's been bringing him back, milk and cookies...\"\n\nI kept my voice mostly to myself, but I still sang along to Clint Black's tribute to midnight snacks as it rang out over the speakers in the store. I was picking apples off the tray and putting them in a bag, but I stopped long enough to check the contents of my shopping cart. There was the milk, and there were the Chips Ahoy. \n\nMilk and cookies were not only my favorite snack, but I had something of a personal history with them, as well. Before I could reflect on that, I heard a young girl's voice call out behind me.\n\n\"Mama,\" she said. \"Santa Claus is kinda fat. I think he needs to go on a diet.\"\n\nI couldn't help but laugh. I turned around to see what looked to be a 5-year-old girl holding a package of carrots up for her mother to see. Looking at the mom, I wasn't surprised her daughter was thinking that way. The woman was built like a gymnast, with a tight body that looked like it had never so much as seen a cookie, much less ingested one. The ginormous rock on her left hand probably weighed more than she did.\n\nShe was so busy laughing that she hadn't yet answered her daughter's question, so I decided to help.\n\n\"What do you think will make Santa give you better presents?\" I asked, and the girl turned to look at me. \"Cookies or carrots?\"\n\nThe girl flashed me one of those big, cheesy smiles that only little kids can mean sincerely. Obviously, she'd not yet had the 'stranger danger' conversation with her parents. I hoped I wasn't coming off like a letch, but her mom smiled at me and eased my concerns.\n\n\"Uh, cookies,\" she said, like that was the most obvious thing in the world.\n\n\"I think so, too,\" I said. \"Why do you think I have cookies and milk in my cart? I'm hoping Santa will bring me some good stuff, too.\"\n\nOf course, I had no intention of leaving anything out for Santa Claus, but if the cookies survived till Thursday night, it probably wouldn't take much work for a jolly old fat dude -- or anyone else who might be breaking in -- to find them in my kitchen.\n\nThe girl started telling me all the things she wanted Santa to bring her. She barely noticed her mom take the carrots out of her hand and put them in the cart. \n\n\"Very cute little girl you have there,\" I said. \"I hope you both have a very merry Christmas.\" She thanked me, and they both returned my salutation as I walked away.\n\nWhen I decided to head to Wal-Mart on the way home from work, despite it being two days before Christmas, there was a not-so-quiet voice in my head doubting my intelligence. I was pleasantly surprised with the lack of mass humanity present in the store thus far, though. The freak ice storm probably had a lot to do with that, and it was also just after 3 p.m., so a lot of people were probably still at work. Still, I figured my luck would run out sooner or later, and I wanted to get out before the crowd thickened up. \n\n\"Milk, eggs, butter,\" I said aloud, double-checking the contents of my shopping cart against a list in my head as I pulled into the shortest checkout line. \"Bread, hamburger, noodles, apples, peanut butter, cookies, cat food, beer. Yep, that's everything.\"\n\nJust as I turned to face the register, a voice called out behind me.\n\n\"Ah, but you forgot something.\" \n\nI turned toward the unfamiliar voice just as a pretty blonde pulled her half-full cart in behind me. \n\n\"Oh?\" I asked. \"And what am I forgetting?\"\n\n\"Breath mints,\" she answered with a mischievous grin in her eye. I couldn't help but laugh.\n\n\"Really?\" I put my hand over my mouth and exhaled, and then sniffed my palm. \"Even back there, it's still pretty bad, huh?\"\n\n\"No, no,\" she said, blushing when she realized the unintended insult. \"It's just... your breath can never be too fresh, right? You never know when you might have to put it to good use.\"\n\nI smiled at the obvious come-on. I'm not the smartest guy in the world by any means, and my IQ dips even further when dealing with the opposite sex. But even I couldn't miss that one.\n\nI'd passed her a few times while shopping, but this was the first chance I had to get a good look at her, so I tried to subtly size her up as I loaded my items on the conveyor belt. She was somewhere in her early 20s and was pretty short; I guessed 5'2, maybe 5'3, tops. It looked like she had a pretty athletic body, although with the subfreezing temperatures outside, she was so bundled up that I couldn't really tell. Her streaky blonde hair hung in loose curls around her face and shoulders, and her face showed a trace of Hispanic descent. \n\n\"Well, I guess when you put it that way,\" I said, plucking a container of Ice Breakers from the shelf and tossing it onto the case of Samuel Adams. \"But, you know what they say. What's good for the goose...\" I grabbed another pack and offered it to her.\n\n\"Sure,\" she giggled, and I tossed the mints into her cart. Among the items already there were a ham, two boxes of stuffing, a can of sweet potatoes and several cans of cranberry sauce. That was no surprise, what with Christmas on the horizon. There were also coloring books and a box of crayons.\n\n\"Christmas dinner, huh?\" I asked, motioning to her basket.\n\n\"Yeah,\" she answered, and frowned when she surveyed my things sitting on the conveyor belt. \"You already bought yours, I guess?\"\n\n\"No, but I'm about to,\" I replied. \"Christmas dinner means making Hamburger Helper from scratch instead of using the box.\" I held up the hamburger and noodles for emphasis. \"And for dessert, milk and cookies. And of course, beer.\"\n\nI noticed a slight twinkle in her eye, a sharp contrast to the face she made, sticking her tongue out in the process. I couldn't help but notice the small stud that stuck out on top.\n\n\"That's Christmas dinner for you?\"\n\n\"Yes, ma'am,\" I answered.\n\n\"Wrong answer,\" she said. \"I believe your next line was supposed to be 'Bah humbug.'\"\n\n\"Who, me?\" I asked, feigning indignation with my hand clutching my chest. \"No. I like Christmas just fine. I sent presents to everybody, and I have a couple under my little tree at home. I even decorated my house this year, sort of. But I'll be by myself, so there's no point in even attempting to botch a real Christmas dinner. Hamburger, noodles and some seasoning -- even I can't mess that up.\"\n\nIt wasn't entirely true, but it was close enough.\n\n\"Alone on Christmas?\" she asked, sounding sad. Her eyes hit the floor. \"No one should be alone on Christmas.\"\n\nI silently agreed with her. This would be a first for me.\n\n\"Eh, I've done it before,\" I lied. \"It's not that bad.\"\n\nShe didn't answer. Maybe she saw through my bullshit, or maybe she was just sad about the idea of spending Christmas alone. I was too.\n\nI'd been facing her for so long that it caught me by surprise when the clerk asked to see my ID for the beer. He was already halfway through scanning my items. I'd be done in a few moments, but something about the woman made me want to keep talking to her. So, I blurted out the first thing that came to mind.\n\n\"So do you color inside the lines?\" I asked her as I handed my driver's license to the clerk. \"I'm more of an outside-the-lines kind of guy myself.\"\n\nShe seemed confused for a second, until she took the coloring books from the cart and put them on the belt, right behind the little bar that separated her things from mine. I noticed her blush.\n\n\"Oh, these,\" she said. She took a deep breath, and then exhaled. \"They're for my daughter.\"\n\n\"Last minute Christmas shopping?\" I asked. She kept loading her things onto the belt, and I noticed that she wore no wedding ring.\n\n\"Just stocking stuffers,\" she said. \"Her Christmas shopping was done by last weekend. Do you have any kids?\"\n\nI smiled wistfully. \"No,\" I said. \"Just a couple of nieces. I love hanging around kids, though,\" I finished, hoping I didn't sound too creepy.\n\n\"I saw you over there in the produce section,\" she said. \"The way that little girl was beaming at you, I guess she liked you.\"\n\n\"She was trying to feed Santa carrots on Christmas Eve,\" I said. \"Imagine the global consequences.\"\n\nShe giggled, but didn't get a chance to reply before the clerk cut in. \"That will be $37.82, sir,\" he said. The girl was really very pretty and I found it hard to turn away. I did, though, and I swiped my debit card. He handed me my receipt, and I loaded the few bags into my cart.\n\n\"Well, enjoy your proper Christmas dinner,\" I said to the blonde. She looked like she had something to say, so I waited a few seconds. When she said nothing, I figured it was just my imagination. I pushed my cart into the front aisle, toward the door.\n\n\"You too, Mr. Hamburger and Noodles,\" she answered. \"Remember what I said about the breath mints. They work wonders.\"\n\n\"You're going to give me a complex,\" I answered, laughing. She smiled at me brightly, but then turned that smile on the clerk as he started scanning her things.\n\nI tried to think of a way to stay there and talk to her some more, but nothing that wouldn't make me blatantly obvious came to mind. So, I waved at her and pushed my cart from the store. \n\nDon't get me wrong -- I'm not shy. But after a very recent, very bloody divorce, I wasn't really sure how to play the game again. I wasn't really sure I even wanted to. I had most of the next week off from work, and my plans involved watching football, drinking beer and really, not much else. I didn't feel like going into my vacation with a fresh memory of firm rejection.\n\nI quickly loaded my things into the truck and headed out. As I passed by the front door, I saw her come out, her cart full of bags. I was hoping she would look up and notice me, but she was looking down at her purse and talking to herself animatedly. I waited as long as I could for her attention to swing my way, but it didn't, and I couldn't hold up traffic anymore. \n\nOnce I turned onto Broadway, my phone rang. It was the only woman I really had left in my life.\n\n\"Hi, Mom,\" I said. This probably wasn't the smartest idea, driving on icy roads while talking on the cell phone, but I only lived a half-mile from the store. \n\n\"Kevin, will you please get over yourself and come home for Christmas?\" That was my mom, all right -- always blunt, never wasting words.\n\n\"Mom, I told you,\" I said. \"I need to do this by myself.\"\n\n\"No one needs to spend Christmas by themselves. It's not like you can't afford the plane ticket.\"\n\n\"I wouldn't even have to get a plane ticket, mom,\" I said, chuckling. \"Seriously, I'm going to be spending a lot of days by myself now. I need to get used to it.\"\n\n\"Christmas isn't a lot of days,\" she replied. \n\n\"You'll get no arguments from me.\"\n\nI pulled up to a red light and heard my mom sigh audibly into the phone. She meant well, and I knew that. My parents still lived in my hometown of Salisbury, Maryland, and my mother didn't like it that I planned to spend the holidays 2,000 miles away in Texas. \n\n\"Is it because Kira moved back here, honey?\" she asked.\n\n\"Mom, so little in my life has to do with Kira now,\" I scoffed. \"That's what happens when you get divorced.\"\n\nAs I knew it would, that lit a fire under my mom, and she started cussing. My mom was as kind, caring, nurturing and sweet as any other mom. But my mom also came with a mouth that would make a whole carrier full of sailors turn maroon. I still tried not to cuss around her, but the effort wasn't mutual.\n\n\"It has nothing to do with Kira,\" I said when my mom finished her expletive-laced tirade. \"I haven't ever spent much time by myself. There have always been relatives, roommates, friends, or girlfriends. Or a wife.\"\n\n\"What about your bosses? You can't spend Christmas with them?\"\n\nI figured this was where she would take it. She knew better than to bug me about finding another woman, especially this soon after my marriage had exploded all over the DC beltway. But I'd flown her out to Dallas not long after I moved here, and the two guys who ran my company had made it a point to meet her. Apparently, they'd both made a big impression.\n\n\"Brad is taking his fianc\u00e9e and another of their friends to Cancun for Christmas,\" I said. \"And Tim did invite me over, but he's spending the holiday with his fianc\u00e9e, too, and while being the third wheel really is one of my favorite things in life...\"\n\n\"I know, Kevin,\" she said. \"I just wish you wouldn't isolate yourself like this.\"\n\n\"It's not isolation, mom,\" I said, knowing I was full of shit. \"It's called self-identity. Learning how to depend on myself.\"\n\n\"You know, you're a very stubborn kid,\" she answered.\n\n\"I'm damn near 30, mom,\" I replied. \"Can I get an upgrade to 'very stubborn man?'\"\n\n\"You're only 28; quit adding years to your age. You make me feel even older,\" she said. \"And besides, you're still my kid.\"\n\n\"I know,\" I answered. \"Mom, everything happens for a reason. You taught me that. There's a reason I'm divorced, and there's a reason I'm spending this Christmas alone. I don't know what those reasons are, but they exist nonetheless.\"\n\n\"I know what one of those reasons are,\" she fired back. \"You inherited your father's thick skull.\"\n\n\"Yeah, because you're the least stubborn person I've talked to in, oh, at least the past 30 seconds,\" I answered, drawing the faintest of chuckles out of her. \"Mom, please don't worry about me. I'll be ok on my own. I'll definitely call you on Christmas, and I know I have a trip to DC sometime in late January. As soon as I know when, I promise you'll be the first person I tell.\"\n\n\"I damn well better be,\" she answered, and I just had to laugh. \"OK, honey. I need to go before your sister kills your niece. Merry Christmas, Kevin. I love you.\"\n\n\"I love you too, mom. Tell Janet and the kids I love them.\"\n\nAs with most mothers, mine knew me better than I did. She was exactly right -- it had little to do with wanting to spend time by myself. I just didn't want to be around anyone else, either, because I didn't want to dampen their moods. \n\nThere was just one more turn, and I found myself pulling into my garage. I'd hung a huge snowman on the inner door as part of the half-ass Christmas decorating I'd done before leaving town four days ago, and I chuckled at that -- after all, it was only visible from the garage, and no one but me had been in the garage since I'd moved in. But still, it made me laugh, so I guess it was worth it. \n\nInside, everything was as I left it. There was a three-foot tree sitting on an end table next to the couch, with a few presents underneath the table. I'd hung two stockings on the wall by the enormous flat-screen TV -- one for me, and one for my cat. There was some tinsel strung over the fireplace, and the tree was somewhat well lit.\n\nIt wasn't much, I knew. It was nothing like my mom and dad did in Maryland, and it wasn't even half of what Kira and I did for the three Christmases we were together. Still, it was something, and I was glad I'd gotten off my ass and at least made an attempt at making the house look festive.\n\nChester, my large gray and black striped cat, bounded into the room when he heard me enter and immediately started rubbing against my legs. This was a ritual for he and I -- I'd go off on a three- or four-day trip for my job, and then I'd come home and he'd act like I'd been gone for a year. I left a key with the neighbor, and she sent one of her kids over every day I was gone to feed him and play with him, but Chester was a social cat. Four days of very little human interaction did not sit well with him.\n\nI put the bags and beer on the table, grabbed one of the brews, and turned the TV on as I slumped into my recliner. It was nearly 4 p.m. now, so I figured there had to be some sort of sports on. Sure enough, I found a meaningless bowl game to watch. \n\nI collapsed back into my chair, and my mind briefly drifted back to the pretty blonde at the grocery store. I knew she had a daughter, but in today's day and age, that didn't necessarily mean she had a husband or a boyfriend. The worse she could have done was turn me down, and while that would have definitely bruised my ego, I still regretted not sticking around or at least trying to get her name and her number. \n\nAh, well. There was nothing I could do about it now. In my mind, I knew I just needed a little more time before I had the courage to get back on the horse, so to speak. Kira had wrecked me, but she hadn't killed me. I felt closer than ever to being ready to move on.\n\nSoon, I thought. Very soon.\n\nMy attention shifted back to the TV. The bowl game was in New York, everyone's favorite place to spend four hours outdoors two days before Christmas, and I'd only heard of one of the teams. Still, it seemed like as good a way as any to kill off a few hours. Only a fraction of one had passed before my phone started chirping again. I checked the Caller ID, half smiled and half rolled my eyes, and answered.\n\n\"Hello,\" I said.\n\n\"Kevin Collins,\" the voice on the other end responded. \"How you doing, man?\"\n\n\"Hey, boss.\"\n\n\"Boss?\" was the indignant reply. \"Jesus, Kevin. You know I have a name, right?\"\n\n\"Yes, Tim, I do know that,\" I said. \"You had a name when I worked for you six years ago, too, but back then you kept insisting I call you 'Captain.\"\n\nHe laughed heartily. \"That was a different time, and you know it.\"\n\nI did, but I ignored it. \"Besides, true or false -- you're calling to give me an assignment. If so, that would fall under the category of being my boss.\"\n\n\"Actually, that would be false,\" Tim said. \"I called for two reasons. The first is to thank you for dropping everything and handling that last-minute flight up to Montreal for us. That was huge.\"\n\n\"Tim, you understand that in order to drop everything, there must first be something, right? And besides, you know me. Can't get enough of Canada.\"\n\n\"I'm sure you had something else you'd have rather been doing,\" Tim said. \"That's all I'm saying. Brad and I appreciated it.\"\n\n\"No problem, Tim. It's the holidays, and you guys have families here in town. Me, not so much. If my hopping on a plane helps you stay in town with your families, I'm happy to do it.\"\n\n\"Speaking of you not having anyone around this year... that's the second reason I called.\" I instantly knew where this was going.\n\n\"Tim, I'm good, man.\"\n\n\"Dude, Julia threatened to show up unannounced at your house at 7 a.m. on Christmas morning if I didn't call you and beg you to come out to the lake for dinner.\"\n\n\"You mean, beg me for the third time to come out to the lake?\"\n\n\"Yes. That.\"\n\n\"The answer's still the same, Tim. I appreciate the effort, but I'm just going to hang out and try and get some things done around the house.\"\n\n\"Yeah right,\" he scoffed. \"You're going to mope.\"\n\n\"It's not moping. Going to watch a metric asston of football, drink about that much beer, and just chill with the cat. I have a computer desk to put together and some tile to lay in the upstairs bathroom, so if I can find a sober moment between all the drunk ones, I might actually get those things done.\"\n\n\"And you'll be doing this all by yourself.\"\n\n\"That's the plan, yeah.\"\n\n\"On Christmas.\"\n\n\"Yes.\"\n\n\"And the difference between that and moping is?\" Tim asked me.\n\nNot much, I thought. \"I promise, the feeling sorry for myself portion of the program will be kept to an absolute minimum.\"\n\n\"Dude, just come over here for dinner. Just for an hour or two.\"\n\n\"Tim, I appreciate it. I really do. But I need to learn to be alone. It sucks that I'm doing that over the holidays, but it's something I need to do.\"",
        "\"You'll have plenty of time to do that before and after dinner. Seriously, Kevin. If you don't agree to come, Julia is going to bring dinner to you.\"\n\nJulia worked for the company, too, but she was in the business office, so I didn't know her very well. Still, I knew from office stories that she could be very, very persistent when she wanted something. When we got talking about the past on our overnight trips, Tim talked about how they wouldn't even be together if not for her persistence. I took a deep breath and decided to come out with the truth.\n\n\"Tim, Kira and I used to be a lot like you and Julia are now,\" I said. \"You guys are unbearably happy, and I'm happy for you, man. You deserve all of that. But Christmas was a really special time for us, and I'm never going to have that again. If I have to spend even five minutes watching you two be like that on Christmas Day... seriously, I think I'll get sick.\"\n\nThe silence was deafening, but it didn't last long.\n\n\"I understand, Kev. I'm sorry.\"\n\n\"Nothing to apologize for. Like I said, I'm happy for you. It'd just be a little painful to be around all that this soon.\"\n\n\"What if I just come over there to drop off some food? I'll leave Julia here. We can watch a little football and just chat.\"\n\n\"Um, no,\" I replied. \"I can only imagine what tragic things would happen to my paycheck if I took the business manager's fiancee away from her for even a couple hours on Christmas.\"\n\n\"You know,\" Tim said, sighing. \"You're what my mother would call a stubborn pain in the ass.\"\n\n\"Yeah, my mother calls it that, too,\" I said. \"In fact, she just did about 20 minutes ago. She's on your side of this argument.\"\n\n\"Smart woman.\" We both laughed. \"I guess I'll let ya go, man,\" he said. \"But, hey. Try to leave some of that milk and cookies for the fat guy, all right?\"\n\nI busted out laughing.\n\n\"Don't be getting greedy on him, now,\" Tim finished, right before he hung up.\n\nEveryone at the office knew all about my milk-and-cookies obsession. That came about because of one of the many unorthodox practices Brad and Tim employed as managers. They wanted all the senior staff members to be more than just co-workers, and part of that was learning more about each other. So, at the conclusion of every staff meeting, they both answered random and usually personal questions about themselves, and we all went around the table answering the same question.\n\nA couple months ago, they wanted us to tell everyone about our first date, and my story had been quite the doozy. I was in eighth grade, living on the west coast of Turkey where my dad was stationed in the Air Force. A couple of my friends had dared me to ask a third-grader to be my girlfriend. I got to pick the girl, so I chose the only third-grader I knew. Her name was Rita. Her older sister was just one year behind me in school and was part of my circle of friends, and she let Rita tag along quite a bit. Plus, our dads worked on the same floor in the base operations building, so I'd seen her at a couple of the office Christmas parties. \n\nNear as my memory could recall, she was plenty cute, but still. I was 13, and she was 9. Just letting her call me her boyfriend wasn't enough; to win the bet, I had to go on a date with her, too. So, I invited her over to our apartment one day and after a couple hours of Duck Hunt on Nintendo, she shared my favorite dessert -- milk and cookies.\n\nI absolutely hated lying about it, even to a 9-year-old, so I told the poor girl the truth the following day. I tried my best to be nice to her every time I saw her after that, but she predictably hated me from then on. \n\nI didn't think of it as my first date at first -- it was at my house, and it involved a Nintendo game. My mom though, partially thinking it was cute and partially knowing she could torture me with it the rest of my life, told anyone who would listen that it was my first date. I didn't like it for a few years, but as I'd gotten older, I'd learned to embrace the story. It gave me something unique to say about my first dating experience, as opposed to what had happened on my real first date -- a hormone-infested gropefest in the back seat of my best friend's dad's car with a girl I realized I didn't really like shortly thereafter.\n\nAt any rate, my co-workers had had a huge laugh at my expense. The following morning, there was a package of Oreos and an elementary school-style milk carton on my desk. On the first flight I'd taken after I told my story, the flight attendant told me the plane was out of everything but Chips Ahoy and skim milk. It was part of office legend now.\n\nJust thinking about it fired up my craving, so I went into the kitchen and indulged myself. As I ate, I put the groceries away. The last bag was just the apples. I pulled them from the bag, and that's when I saw them -- the Ice Breakers. I'd forgotten about them. I picked them up and stared intently at the container, but all I could see in my mind was the pretty blonde girl from the store. \n\nI made quick work of the plastic wrapping and popped one of the mints in my mouth.\n\nSoon, I thought.\n\nVery soon.\n\n*************\n\n\"Watch where you're going, young man!!\"\n\nIt was a little old lady, wearing thick glasses and barely tall enough to see over her shopping cart -- the same cart that, despite her scolding, she'd just steered directly into mine.\n\nI was standing in the frozen food section, in front of the pies. I'd been attempting to make the agonizing decision between cherry and lemon meringue for about a minute when the handle on my shopping cart had pushed back into my stomach.\n\nA line about hoping she didn't drive the way she pushed a cart came to mind, but I squelched it. Cussing out an old lady on Christmas Eve would probably come with a heavy price tag in the next life. After all, this was somebody's Grandma, and they were probably looking forward to spending tomorrow with her.\n\n\"Merry Christmas to you, too,\" I said, attempting to be cordial. She gave me a stern glare and started to say something, but I quickly snatched both pies from the freezer and moved on before she could.\n\n\"Fucking Christmas Eve,\" I muttered under my breath as I headed down the aisle. I'd woken up pretty late that morning, and at halftime of an early afternoon bowl game, I'd been flipping channels. The Food Network was running a show with some top chefs making different things for Christmas dinner, and it looked damn good to me. It had drudged up happy memories of dozens of holiday feasts from years gone by. Those recollections, combined with the pretty blonde girl making fun of my ghetto Hamburger Helper, convinced me to give it a shot.\n\nBobby Flay could go to hell right about now, though. Mother Nature had dumped 12 more inches of snow on the Metroplex overnight, making yesterday's sleet and ice storm seem like a vacation in Tahiti. The nasty roads and bone-chilling temperatures didn't stop the Christmas Eve bumrush on Wal-Mart, though, and after driving around for five minutes looking for a parking spot and getting cut off twice, I'd finally fought my way into the store. I was then afforded the opportunity to navigate thick traffic in the aisles and dodge shopping carts, though the old lady's had been the first to actually make contact.\n\n\"Stupid old lady,\" I said as I pulled up in front of the large, open cold case with all the ham. They'd just restocked, apparently, because it was surprisingly full. \"What a stupid idea, coming out in public on Christmas Eve.\"\n\nI said it louder than I thought, apparently.\n\n\"I told you yesterday,\" a voice said behind me. \"Your next line needs to be 'Bah humbug.\"\n\nI spun around and came face to face with the striking blonde who'd dominated my thoughts since yesterday. She wore a dark leather jacket over a blood red, low-cut blouse that was tasteful, yet revealing enough to spark the imagination. Picasso might as well have manufactured her blue jeans, and her loose blonde curls dangled over her shoulders enticingly.\n\nNo ring today, either.\n\n\"Yesterday, I argued with you,\" I said. \"Today, I think you might be right.\"\n\n\"What are you grumbling about, huh?\" she asked, grinning from ear to ear.\n\nI looked back down the frozen aisle. \"Some old lady,\" I started, motioning over my shoulder before trailing off. \"You know what? It doesn't even matter. I'm instantly happier now.\"\n\nShe blushed and looked down for a moment. \"Thank you. You're very kind.\"\n\n\"And honest,\" I added.\n\n\"You have a name, or should I just call you Mr. Honest?\"\n\n\"No, Mr. Honest works, though not as well as your Mr. Hamburger and Noodles from yesterday,\" I said. \"But I understand if those are a little awkward for you, so you can call me Kevin.\" I stuck out my hand. \n\n\"I'm Brittany,\" she said. When she put her hand in mine, I forgot about the mad mass of humanity in the store. The globe didn't exactly go hurtling off its axis, but I wasn't thinking about anything else. The way her eyes were locked on to our hands, neither was she. Her hand was very soft, and we didn't so much shake hands as I simply held her hand in mine. \n\n\"What are you doing back here?\" she asked, reluctantly breaking the handshake.\n\n\"You inspired me to cook a real Christmas dinner.\" I motioned to the cart, where I had sweet potatoes, stuffing, cranberry sauce and the pies, along with a few other things I'd forgotten to get the day before.\n\n\"So,\" she said, gesturing at the case we stood in front of, \"I guess all that's left is a ham.\" \n\nI grinned and quickly tossed one into the cart, declaring, \"Done.\" She laughed as I asked, \"So what are you doing back here today? Just couldn't get enough of the Christmas Eve crowds, huh?\"\n\n\"Oh yeah, I'm thrilled,\" she said. \"Just had some things I forgot to get yesterday.\" I looked into her cart. Baking soda, salsa and ketchup were all she had managed to get thus far.\n\n\"You're a ketchup addict, too, huh? So important you just couldn't wait till Saturday?\"\n\nShe blushed, and it made her cheeks glow. \"The salsa, actually. My family will do chips and salsa all day tomorrow, right up until dinner. That doesn't work without the salsa.\"\n\n\"I could see how that would be an issue, yeah,\" I said. We pushed our carts together for a couple more minutes, and for two people who'd had no trouble making small talk, the ensuing silence was a little strange. I got a feeling that she was waiting on me to make a move.\n\nI stopped in front of the bacon, and she kept rolling toward the orange juice, so the moment was on hold, anyway. I never chose the cheapest brand with important things such as bacon, so it took me a minute. When I looked back to the juices, she was gone. I started looking around, half-panicked that I'd missed my chance again. I didn't spot her immediately, but I figured she couldn't have gone too far, so I moved on to grab some cheese, the last thing I needed. I took my time there, too, glancing all around me every few seconds to try and find her. Finally, I tossed something in the cart and pushed forward. \n\nWith the crazy ass crowd, there was no way she'd have been able to check out yet. My plan was to head toward the front of the store and see if I could spot her in a check-out line. As I pushed past the baking aisle, though, I had my second shopping-cart collision of the day.\n\n\"You did that on purpose, didn't you?\" Brittany asked me, the huge grin on her face making it very obvious that she, in fact, had done it on purpose.\n\n\"You caught me,\" I said. \"I hate being here on Christmas Eve so much that I just decided, to hell with it... the next person to pull their cart out of this aisle is getting T-boned.\"\n\nShe giggled. \"I saw you taking your time with the cheese, so I figured I would run down here and get some more flour, just in case mi abuela runs out today or tomorrow.\"\n\nI caught the Spanish she'd thrown in, but that was really the first hint that her heritage matched up with the faint Hispanic features of her face.\n\n\"Probably not a bad idea,\" I said, and the silence descended on us again. I pushed forward toward the check-out lines and she joined me. Finally, right about the time we reached the produce, I got tired of it. I stopped pushing my cart, and she did the same. She looked at me inquisitively, and I didn't wait long to satisfy her curiosity.\n\n\"Listen,\" I said. \"After all this craziness is over and the holidays have settled down for you, I'd love to see you again.\"\n\nThere. I'd said it.\n\n\"That was quite forward,\" she said, a smile playing on her lips.\n\n\"Yeah, well, I walked out of here yesterday without your number, and I've been kicking myself in the ass for it ever since,\" I said, matching her grin. \"But yeah, I suppose I could have eased into it a little more.\"\n\n\"No, no,\" she said. \"I like a man who isn't afraid to ask for what he wants. It's an attractive quality.\"\n\n\"It may have taken me a day, but yeah,\" I agreed. \"I wasn't about to let this happen again.\"\n\nShe just laughed, and as sexy a sound as that was, it didn't really answer my question.\n\n\"So...\" I said, trailing off, and a concerned look crossed her face.\n\n\"You remember that I told you I have a daughter, right?\" she asked.\n\n\"Yeah,\" I said, kicking myself for even asking now. \"I'm sorry. We just seemed to kind of, I don't know, click, I guess. I should have guessed her father would still be around.\"\n\nShe was confused for a second, but she figured it out quickly. \"Oh, no, that's not what I meant. He's not.\"\n\nMy spirits immediately lifted.\n\n\"I just wanted to make sure you were okay with my having a daughter,\" she said. \"Alicia is my whole world.\"\n\n\"Sure,\" I said. \"We can pick a place she can come with us.\"\n\nI think her smile actually touched the parking lot.\n\n\"Then definitely,\" she said, immediately digging into her handbag for her phone. \"I'd love to see you again.\"\n\nWe exchanged numbers and pushed our carts forward. This time, I let her go first.\n\n\"So where is Alicia today?\" I asked.\n\n\"At home with my parents,\" she explained. \"There is so much family in town right now, and a lot of them haven't seen her since she was a tiny baby. They begged me to let her stay with them while I went out, so I did.\"\n\n\"How old is she now?\"\n\n\"She turned 2 in October,\" Brittany said. \"Hopefully, tomorrow will be the first Christmas morning that is more about the presents and less about the wrapping paper.\"\n\nI chuckled. I remembered my youngest niece's first Christmas. She'd been so fascinated by the pink bows on her gifts, she'd hardly noticed she had new toys to play with.\n\n\"So, what do you do for a living, Kevin?\" she asked.\n\n\"Right to the point, huh?\" I asked, and she blushed. \"I'm just kidding. I'm a senior pilot for a private air charter company based here in Dallas. We fly out of a couple of the general aviation airports in town, to locations all over the world.\"\n\n\"That sounds exciting!\" Her eyes were locked on mine, and I could see her enthusiasm was genuine.\n\n\"It beats working for a living, for sure,\" I agreed. \"What about you?\"\n\n\"I work in marketing at an advertising agency in Richland Hills,\" she said. \"I'm a year away from finishing up my MBA at TCU.\"\n\nRichland Hills and TCU, I thought. Way on the other side of the Metroplex from Garland, where we were.\n\n\"You work in marketing... for an advertising agency,\" I said, choosing not to ask my question. \"How does that work?\"\n\n\"Advertising agencies compete for business, too,\" she said, giggling at the question. \"I'm hoping to move into actual content once I get my MBA.\"\n\n\"You don't look anywhere near old enough to have an MBA,\" I said.\n\n\"My Bachelor's degree only took three years,\" she explained, \"and even just going part-time, the MBA is only going to take two. I turn 24 next month.\"\n\n\"That's a lot to accomplish in such a short amount of time,\" I said, and she blushed again. \"And having a daughter, too? Wow.\"\n\n\"Thank you.\"\n\nThat was as far as we got before the people in front of her finished, and she started loading her things onto the counter. I went to help her, but got distracted by the wall of breath mints over the counter. She saw where I was looking and grinned at me.  Without missing a beat, I pulled the container from the day before out of my pocket.\n\n\"I'm good,\" I said, popping one into my mouth. \"Thanks to someone yesterday telling me my breath was a little rank.\"\n\nShe rolled her eyes. \"That's not what I meant, and you know it.\" She giggled, and all I could think about was that I wanted her to do it again. Soon.\n\nBrittany focused on the clerk for a few moments while she ran her card, and when she was finished, we said a proper goodbye. I fought off the temptation to put the breath mints to good use -- I didn't want our first kiss to be in a packed Wal-Mart checkout line.\n\n\"So you will call me?\" she asked.\n\n\"Of course,\" I said. \"I asked for your number, didn't I?\"\n\n\"Yeah, because that means soooo much,\" she replied, her sarcasm soaking the dirty tile floors.\n\n\"Fair enough,\" I agreed. \"But I'm not like other people. If I asked for your number, I plan on using it. Maybe not today and probably not tomorrow, to let you be with your family. But I make no promises about December 26th.\"\n\nShe laughed. \"You can call me in five minutes if you want.\"\n\n\"Ya know, I would, but I thought men were supposed to play hard to get these days,\" I answered back, making her roll her eyes again.\n\n\"Goodbye, Kevin,\" she said, wheeling her cart away. I wished she wouldn't. \"Merry Christmas.\"\n\n\"Merry Christmas to you, too, Brittany.\" I liked the way her name rolled off my tongue, and as she smiled at me, I couldn't help but imagine how her tongue might roll off my tongue.\n\nI thought that would be it. I paid for my groceries and zipped up my heavy jacket to prepare for the onslaught of the weather. When I got outside, however, I saw Brittany standing with her cart in a group of four or five other people, two of whom were uniformed Garland police officers. I was concerned briefly until she beckoned me over.\n\n\"What's wrong?\" I asked.\n\n\"Sir,\" one of the policemen said as he approached. \"Do you have to get on I-30 to go home?\"\n\n\"No,\" I answered. \"Just have to drive under it.\"\n\n\"Good,\" the cop answered. \"We're closing I-30 in about two minutes. We have about 15 accidents from here all the way to Fort Worth. We're closing 635 too. I'm about to go inside and break the bad news over the intercom.\"\n\n\"Good luck with that,\" I said, and got a grim nod in response. \n\nI turned to Brittany. \"I'm guessing you do have to get on I-30.\"\n\n\"Yeah,\" she said. \"I take 30 all the way to 820.\"\n\n\"Jesus,\" I said. \"That's like 40 miles from here. Where do you live?\"\n\n\"In Keller.\"\n\nKeller was a far northern suburb of Fort Worth, and Garland was on the southeastern side of Dallas. That was more than an hour commute. \n\n\"What the hell are you doing all the way over here?\" I shouted, mostly just to be heard over the winds that were whipping our faces with snow. She blushed and started shivering. \n\n\"You know what? It doesn't matter,\" I said. \"You think you can follow me for a mile or so on these icy roads?\"\n\nShe nodded and smiled.\n\n\"You thought I was being forward before,\" I said. \"I think it might be best if you come back to my house for now. It'll get you out of the storm and keep you off these roads. Are you OK with that?\"\n\n\"Yeah,\" she said. \"Thanks. Taking side streets all the way home would suck.\"\n\nI smiled. \"Where are you parked?\"\n\nShe pointed, and just as we stepped off the curb into the parking lot, we heard a loud crash. Our heads snapped to the right, where two trucks had slid into one another a few hundred feet away near the other entrance to the store.\n\n\"On second thought,\" she said, \"do you mind if I just ride with you?\"\n\n*********************\n\nThe ride home was mostly quiet. Brittany called her mom to let her know she wouldn't be home until later and to check on Alicia, but other than that, neither of us said much. I was mostly concentrating on not sliding off roads that had worsened considerably since I'd driven to the store, and the rest of my brain was thanking God for creating trucks with four-wheel drives.",
        "It wasn't until we sat patiently in my driveway waiting for the garage door to open that I really took the time to think about what I was doing. Less than 24 hours ago, this woman was a complete stranger. Now here she was about to come into my house, probably for the rest of the day. \n\nEverything happens for a reason, I thought.\n\nBrittany beamed at me from the passenger seat. Her lips were full and pouty, and images of what they would look like wrapped around my cock flooded my mind. I immediately scolded myself for thinking those thoughts about a woman I was simply helping out of a tough situation. I managed to force those onto the backburner, but the urge to lean in and meet those oh-so-kissable lips with my own was a little harder to sweep aside.\n\n\"What are you so happy about?\" I asked.\n\n\"You,\" she said. \"Someone so willing to help me out in a bad situation like this.\"\n\n\"Yeah,\" I said. \"A funny, gorgeous woman who barely knows me is about to spend the day at my house. I think I should be the one smiling.\"\n\nShe continued to smile as I pulled my Silverado into the garage. We grabbed the bags and headed inside. I quickly ushered her into the living room and gave her the remote while I went back to the kitchen. I warmed up hot chocolate while putting all my groceries away.\n\nI came back holding two steaming mugs and a blanket, and was pleasantly surprised to see her watching football on ESPN.\n\n\"This,\" I said as I handed her the blanket, \"you get now. And this,\" I said, holding one of the mugs up, \"you get when you explain to me why you're shopping all the way out here.\"\n\nI sat down in my recliner, putting both mugs on the table.\n\n\"What do you mean?\"\n\n\"You live in Keller, and we're in Garland now,\" I said. \"You probably passed by 30 Wal-Marts and a hundred other grocery stores on your way here. Why come all the way out here to shop? Two days in a row, no less?\"\n\nShe got up briefly to get the mug from the table, and despite my earlier ultimatum, I made no move to stop her. She took several sips quickly.\n\n\"Sorry,\" she said. \"It just looked too inviting. Anyway, my friend Sherry lives east of Rockwall. She went through my Bachelor's program with me at UT-Arlington. She just got dumped last week, and I'm worried about her. With so many people at my house, it's getting a little suffocating out there, so I decided to come out to check on her.\"\n\n\"Two days in a row, in this weather?\"\n\n\"The things we do for our friends,\" she said. \"Besides, I stayed over at her house last night. The stuff I bought yesterday was for her. She said she wasn't going to do Christmas dinner either, but I thought if everything was staring her in the face, she'd go ahead and do it anyway. Just my way of trying to cheer her up.\"\n\n\"There are Wal-Marts in Rockwall,\" I said. \"Why come all the way across the lake?\"\n\n\"You ask a lot of questions,\" she said, but didn't sound too annoyed by it. \"I grew up out here, and I know where this Wal-Mart is. So I stopped there yesterday on the way out there, and stopped by today on the way home.\"\n\nI thought for a moment. \"I guess that all makes sense. Just seems crazy to me that you live an hour away but came all the way out here to shop for basic things like ketchup and flour.\"\n\n\"Well, that's why,\" she said. \"Now, if you're done being inquisitive, I want to watch football!\"\n\nThose words were music to my ears, and I matched her grin as she turned the volume up on the game. No sooner had she done that, though, when it went to a commercial. The first ad was for Sunny Delight.\n\n\"I forgot to put your orange juice away,\" I said. \"Be right back.\"\n\nI hopped up and headed into the kitchen. I'd left her two bags on the table, and I fished the orange juice out and put it in the fridge. I started to walk back into the living room, but I bumped into my guest in the doorway.\n\n\"Sorry,\" I said. \"Didn't know you were coming in here.\"\n\n\"I spilled hot chocolate on your coffee table, and wanted to get something to clean it up,\" she explained. I looked on top of the fridge, where I kept my dish towels, and that's when I spotted it. I'd all but forgotten that my overzealous neighbor had insisted on hanging mistletoe over the doorway before I went on my last trip. \n\nI looked at Brittany, and she was looking at it too. Her eyes met mine, and there was a glow in them I instantly knew I would never forget. I was ready to laugh the whole thing off -- after all, we barely knew each other -- but when she licked her lips invitingly, I lost all my willpower. I leaned in and gently brushed my lips against hers. It was subtle, and it was tender. It only lasted a second, but there was more heat in that split-second of a kiss than I remembered from any other first kiss in my entire life.\n\nWhatever the case, it wasn't enough. I backed away briefly, but when I saw that her eyes were still closed, I leaned in again. If the first kiss had been a friendly introduction, the second was an all-out assault. I sucked her top lip between mine and she did the same with my bottom lip as our tongues instantly engaged in battle. I could feel her tongue ring with my own tongue. My right arm snaked behind her head and pulled her tighter as I felt her arms wrap around my torso. \n\nIt was everything I thought it would be when I was imagining it in the car, multiplied by ten. We broke apart ever so briefly out of respect to our lungs, but wasted no time tangling ourselves together again.\n\nShe pushed me up against the side of the fridge and became the aggressor, her hands running up and down my chest and sides as our tongues continued their battle. To answer her, I wrapped my arms around her waist and lifted her off the ground. She squealed at first, but quickly wrapped her tight, toned legs around my waist as I carried her back into the living room and deposited her onto the couch.\n\nWe were like two overly cautious school kids for the next half-hour. We made out frantically and let our hands roam wherever they wanted, but we carefully avoided any areas that might get us in trouble. I kept my hands away from her breasts, choosing instead to run them up and down her sides or across her stomach. Our legs rubbed together and created plenty of heat between our jeans, but my leg never slipped between hers, and vice versa.\n\nWe were exploring and living in the moment, happy to simply enjoy each other's bodies and mouths without pushing things too far. It was an unspoken agreement between us. We struggled to catch our breath when we finally split apart, still fully clothed except our shoes. She spoke first.\n\n\"I haven't done that since high school,\" she said.\n\n\"Been a long time for me, too,\" I replied. It had been nine months since I'd even kissed a woman; much longer for anything like this. \"You are very talented at that, by the way.\"\n\n\"You're not so bad yourself,\" she said. We went back to it for a little while longer, but eventually the mid-day malaise overtook us, and we drifted off to sleep right there on my couch.\n\n********************\n\nI noticed three things when I woke up some time later.\n\nFirst, Brittany felt just right nestled up against me. Somehow we'd managed to squirm ourselves into a spooning position. My back was pressed up against the back of the couch, and she lay on her side in front of me. At 6-foot-2, I had almost a foot on her, so her head fit comfortably against my neck and upper chest. My left arm was draped around her stomach. It was a corny thought, for sure, but it seemed like this particular position had been made just for us.\n\nSecond, I realized that the TV was off, and so were the living room lights. The clock on my satellite receiver was off as well, meaning that the storm had knocked out the power. Grrrrrreat.\n\nThe last thing I noticed was the most poignant of all, however. I could barely make him out through the tiny bit of light streaming through the living room window, but I saw Chester curled up against Brittany's legs. His head was tucked between his front legs, and he was sleeping harder than either of us had been.\n\nHis presence there was remarkable to me, and I alternated between staring at him and Brittany for the next few minutes. I couldn't help but laugh, and that woke up my house guest. She turned to look at me, that infectious smile still plastered on her face.\n\n\"What?\" she asked softly.\n\n\"Just watching your friend down there,\" I replied.\n\nShe reached down and petted Chester's back. The cat didn't budge. \"Why?\" she asked.\n\n\"He's always been a pretty damn good judge of character.\"\n\n\"Really?\" she asked, continuing to pet him. \"Well, then, I'm glad he likes me.\"\n\n\"He does,\" I agreed. \"Poor guy absolutely hated my ex-wife.\"\n\nI'd blurted that out without thinking, and I instantly froze. Thankfully, so did my vocal chords so nothing else stupid could slip out. Sure, we were spending the day together and making out like a couple of oversexed teenagers, but it was waaaaaay too soon to be unlocking the skeleton closet.\n\nShe said nothing for a few moments, and finally I couldn't take it anymore.\n\n\"Sorry about that,\" I said. \"Sure that was way more than you wanted to know.\"\n\nShe gripped my hand tightly. \"Not at all,\" she said. \"People get divorced all the time, Kevin.\"\n\nI didn't know what to say, so I said nothing. \n\n\"He didn't like her, huh?\" she said, trying to get me to say something.\n\n\"Not even a little bit,\" I said, laughing. \"The first time he met my mom and my sister, he gravitated toward them. He's cool with my sister's kids, even though they like trying to pull his tail. My dad plays rough with him, and he just eats it up. He doesn't mind the neighbors or their kids, either. But Kira... the first time she walked through the door, he hissed at her from across the room and hid behind the couch. Eventually he got where he would come out when she was around, but he'd stay away from her. He wouldn't even come when she'd get out the treats.\"\n\n\"Damn,\" Brittany said.\n\n\"I know,\" I said. \"After she left, she had to come back to pick up a few things, and he growled at her the whole time she was there. The only other person he's ever growled at was a door-to-door lawn care salesman I couldn't get rid of.\"\n\n\"Aww,\" she replied, bending down to pet him a few more times. Her long, smooth strokes did nothing to wake him up, but as her ass pushed backward into my crotch, something else was definitely stirring. \n\n\"Let me up a second,\" I said, and she just looked back at me over her shoulder.\n\n\"Why?\" she giggled, wiggling her hips to let me know she knew.\n\n\"Power's out,\" I said, ignoring the problem. \"Candles are in the kitchen.\"\n\n\"Oh, ok,\" she said and sat up on the couch, no small feat considering the furball attached to her legs. Chester was unhappy with the disturbance, and started meowing instantly. I stood up and patted him on the head.\n\n\"Calm down, Chester,\" I said, shuffling into the kitchen. \n\n\"Chester, huh?\" Brittany said to him. She continued talking as I entered the kitchen, doing that weird baby talk thing women like to do to animals. Normally it annoys me, but with Brittany it was cute, just a funny quirk that made me like her a little bit more. When I returned to the living room with the candles a few moments later, he'd already curled up on her lap and was back asleep.\n\n\"Wow,\" I said, watching the two of them as I set up the candlesticks and lit up the room. \"I knew he liked you, but... that's unprecedented. I don't think he even took to me that quickly.\"\n\n\"Aww, don't be jealous,\" she said playfully. \"I've actually always been good with animals. We have a chocolate lab, but he's down in the valley with my older sister for Christmas this year.\" Her face was hypnotic in the candlelight, and I could see the flames dancing in her eyes. \"I thought all men were macho and liked dogs,\" she said with a grin.\n\n\"I like dogs, but they are a lot of work,\" I said. \"I'm on the road so much with my job that it isn't really practical to have one right now.\"\n\n\"How would Chester do with a dog?\" she asked, petting him as he snoozed.\n\n\"I actually don't know,\" I said. \"He's ok with other cats usually, but he's never even had to share space with a dog. The neighbors have one, and I know he likes to sit in the kitchen window and stare at it.\"\n\n\"He probably thinks it's insane,\" she quipped.\n\n\"I think it is,\" I said. \"So what about you? All women are sensitive and like cats, right?\" I asked, turning her earlier joking stereotype around.\n\n\"I like them, but we don't have any because my mom's allergic,\" she said. \"I still live with my family while I'm finishing up school.\"\n\n\"Makes sense,\" I said. \"Exactly what I would have done if I'd gone to college right after high school.\"\n\n\"What did you do instead?\" she asked.\n\n\"I played professional baseball.\"\n\n\"Really?\" she asked, perking up instantly.\n\n\"Really,\" I replied. \"In retrospect, I should have gone to college instead. I had plenty of scholarship offers, but the only school I wanted to play for didn't want me. The Detroit Tigers did, though. Took me in the 22nd round.\"\n\n\"Where did you want to go?\"\n\n\"The University of Maryland,\" I replied. \"My dad got two degrees there, and my older sister was going there at the time. Now she's a chemistry professor there. But apparently their baseball team had enough lefties with 94-mile-an-hour fastballs.\"\n\n\"Stupid coaches, more likely,\" she said. \"Mid-90s is impressive for a righty, and it's a lot less common for left-handers.\"\n\n\"You know some baseball,\" I stated, very impressed.\n\n\"Three brothers,\" she said. \"I know more about sports than most men. One of my brothers works in the front office for the Colorado Rockies now, so I'm even more into baseball.\"\n\n\"All right,\" I replied. \"There has to be something about you that isn't completely and totally awesome. Out with it.\"\n\n\"All in good time,\" she teased. That meant she wanted there to be a next time, so I took it. \"So you signed with the Tigers. What happened then?\"\n\nI rolled up my left sleeve above the elbow. \"Pitched for them for three years, made it all the way to Double A. Took a line drive off my pitching elbow during a Memorial Day game in Connecticut. Hurt like hell, but I decided I could stay in the game. I made a few warmup pitches, everything felt fine, and the team trainer agreed with me. So, the next live pitch I threw, I tore tendons I didn't even know I had. My left elbow now looks like a drunk blind guy doing a jigsaw puzzle. That was pretty much it for my career.\"\n\n\"Wow,\" she said, looking over my elbow for a few seconds. The scars formed an intricate pattern that resembled nothing else on Earth. \"I'm sorry to hear that.\"\n\n\"Thanks,\" I said. \"It was tough to deal with, but I know everything happens for a reason. On a whim, I enlisted in the Marine Corps. They taught me how to work on the computer systems in airplanes. I became fascinated with aviation, and when I wasn't deployed overseas, I learned to fly. One of the owners of my charter corporation was a pilot I served with in Iraq. My professional life is pretty much perfect now, so I can't complain.\"\n\n\"Just your professional life?\" Brittany asked. \"What about your personal life?\"\n\n\"A story for a different time and a stronger drink,\" I said, grabbing the mugs off the coffee table and retreating into the kitchen. I'd already told this alluring virtual stranger more than I'd planned to, and it was a wonder she wasn't already out the door. Show and tell time was over for the day. \"You want a beer?\" I asked. \"They should still be fairly cold.\"\n\n\"Sounds good,\" she replied, and within seconds, I was sitting next to her on the couch again. \"Fair is fair, Kevin. I guess you've probably figured out that I'm divorced, too.\"\n\n\"Not necessarily,\" I said. \"You don't have to be married to have a child.\"\n\n\"True,\" she said. \"But I was. I got married two years after high school, divorced two years later, which was almost two years ago now. Seemed like a good idea at the time, but he turned out to be a complete and total assclown.\"\n\nI just grinned at her language.\n\n\"Sorry to be so blunt, but he was. Actually, pretty much every guy I've ever dated has turned out to be an asshole. Some were drunks, some just wanted to get me into bed, one was even a cheater. All of them were liars. I've only had one boyfriend who never lied to me, and he lasted for less than a week.\"\n\n\"What happened to him?\"\n\n\"A story for a different time and a stronger drink,\" she said, licking her lips as she turned the line around on me.\n\n\"Touche,\" I said. \"Are you still friends with your ex-husband?\"\n\n\"Not exactly,\" she said. \"He's in jail. Hopefully, he will be for a long, long time.\" There was obviously more to the story, but she'd tell me when she felt comfortable with me... if she ever did. \"Are you still friends with yours?\"\n\n\"The bitch landed me on Fox News,\" I said. \"The details are for another time, but she's a public figure in Washington. Our break-up was very messy, and due to her job, it was very public. I could forgive CNN and Headline News. Maybe even MSNBC. But once I saw the story on Fox News... that's just unacceptable. There's no forgiving that.\"\n\nShe was laughing again, which woke Chester up. I had to fight the urge to shove the cat off her lap and fall back on top of her on the couch, but I somehow managed. \n\n\"Ditch your friend for a minute,\" I said, standing up. \"You're very lucky. I don't think anyone's ever gotten a tour of my house at night with the power out.\"\n\nBrittany stood up, and Chester jumped off her lap and onto the couch. I grabbed the closest candle, and when Brittany took my hand, I could feel the sparks crackling at her touch. Between that and the smile she tossed me, my little problem was becoming not-so-little again. \n\nI led her through my house, which was really more than a bachelor needed. She couldn't see much, but that was okay, because I didn't have a lot to say. I hadn't even been in the two guest bedrooms or the extra bathroom since I moved in a few months ago.  \n\nWhen we got outside, though, I could tell she was impressed with the deck. On one side was a brand new hot tub that I had yet to use, and on the other side was a large gas grill, which was my primary means of cooking.\n\n\"This is quite the house, Mr. Collins,\" she said once we'd hurried inside, escaping from the freezing temperatures and lightly falling snow. \n\n\"Thanks,\" I said. \"I know it's too big for a single guy, really, but I figured...\"\n\nSomething caught my attention. Something she'd said.\n\n\"How did you know that was my last name?\" I asked.\n\nHer eyes flashed with something -- surprise, maybe? -- but they settled right down.\n\n\"You told me today at Wal-Mart,\" she said. \"When you introduced yourself.\"\n\n\"I did?\" I asked. I didn't remember telling her that.\n\n\"Yes, you did,\" she laughed. \"Typical man. Gets one little kiss, and forgets everything.\"\n\n\"Hey, that wasn't one little kiss,\" I replied. \"That was a whole bunch of the best kisses I've ever had. I seriously don't remember telling you that, but I'll take your word for it. You have to share, though.\"\n\n\"I thought I told you mine, too,\" she said, and when I shook my head, she shrugged. \"Oh well. It's Morgan. Brittany Morgan.\"\n\n\"Sounds hot,\" I said. \"Just like you.\" \n\nI had no idea what time it was, but it was dark outside. The only light came from the flickering red candle, but it picked up what was now becoming a familiar twinkle in her eyes. Staring back into them, I was entranced. She licked her lips as she nudged me backward against a counter in the kitchen. \"So what do you want to do now, hmm?\"\n\n\"You,\" I replied, picking her up around the waist. She wrapped her legs around my lower back as I lifted her, and our tongues wasted no time getting back together. I took slow, careful steps as I made my way down the hall, stopping only to open my bedroom door.",
        "I wanted to be cautious, but she was getting to me in a way no other girl ever had. Oh, sure, there'd been passionate times with previous girlfriends, and when my ex-wife and I were at our peak, things were intense. But I'd never felt this way about anyone after a few hours together. Every time we touched -- hell, every time she looked at me -- my pulse quickened, my breathing shallowed, and I could swear I even felt my blood heat up a few degrees. \n\nI had no idea if she was feeling any of the same things, but her eyes were closed tight, her face was flushed, and her lips were moist with anticipation, as if their only purpose right now was to get tangled up with mine.\n\nI slowly lowered her to the bed, and the second her back made contact with my bedspread, her eyes snapped open and locked onto mine. She smirked at me, and I watched as her hands gripped the bottom of her red blouse. Before she could pull it up, I grabbed her wrist.\n\n\"Are you sure?\" I questioned.\n\n\"Yes,\" she said breathlessly. \"I don't want to try to explain it right now, Kevin. We can think later. You just do something to me, and--\"\n\nThat was all I needed to hear. I leaned forward and kissed her belly button, relishing in the little squeal she let out. She pulled her shirt the rest of the way off, and I used my tongue, my lips and my fingers to gain intimate knowledge of each new inch as it was revealed. Her stomach was flat and toned, her skin was like silk, smooth and unblemished, and she got goosebumps when I lazily drug my tongue across the bottom of her ribcage.\n\nHer shirt landed in a heap next to me on the bed, and she arched her back so her fingers could work on her bra clasp.\n\n\"Let me,\" I whispered, covering her hands with my own. She smiled and moved her hands onto my back, and I proceeded to fumble clumsily with the clasps. It had been damn near a year since I'd taken off a woman's bra, and I wasn't all that adept at it then. So why volunteer? Simple: the more I struggled, the more I got to explore. While I worked at it, my lips traveled all over her chest, trailing kisses across her collarbones, her throat, and the upper, exposed portions of her breasts. I really wasn't even trying all that hard, but I heard her let out a relieved sigh when I worked the final clasp loose.\n\nI pushed myself off of her, taking her black, lacy bra with me as I got my first look at her breasts. They weren't large by any means, but they were slightly bigger than they should have been for such a small girl. Not being an expert on such things, I still guessed they were somewhere between a large B-cup and a small C. There was no sag or droop in the perfect orbs, the only break in the skin being her small, dark areola topped by twin pink eraser-sized nipples.\n\n\"You like?\" Brittany asked after I'd stared for a good half-minute.\n\n\"They're incredible,\" I said. \"You're incredible.\"\n\nBefore she could respond, I pounced. My hand kneaded one breast as I sucked the opposite nipple between my lips. She inhaled sharply, and her hand tightened in my hair. I took that as a good sign, and proceeded to spend more than 10 minutes worshipping her breasts, taking my time and moving back and forth between them frequently. I was spurred on by Brittany's frequent moaning, and I was doing my best to memorize all of her subtle responses. When she twitched, I wanted to know what I'd done to cause it. When she sucked air in rapidly, I tried to remember why. When she giggled, I seared it into my memory.\n\n\"You really do like them,\" she said after a while.\n\n\"Mm hmm,\" I said, not wanting to move my mouth away.\n\n\"I think they like you, too,\" she replied. \"But there are other parts of my body, you know.\"\n\nThis time I did pull my mouth away so I could meet her eyes. She had such a relaxed, serene look on her face that it caught me a little off guard. \"I bet they're all just as spectacular.\"\n\n\"Only one way to find out, Kevin,\" she teased, and started working on the buttons below her waist. I had no idea how far she wanted this to go. Hell, I wasn't sure how far I wanted it to go. All I really knew right then is I wanted to see what was underneath the jeans she started to peel from her body. \n\nHer legs were tanned and toned, and her toes were pedicured and painted. It was hard to notice any of that, though, because she wore the sexiest pair of purple lace panties I'd ever seen, and there was a sizable wet spot right in the middle.\n\n\"Oh, my,\" she said. \"I think I might have spilled something.\"\n\n\"You mind if I check for you?\" I asked.\n\n\"It's the gentlemanly thing to do,\" she quipped. Her voice got a little huskier then. \"Please, Kevin. Touch me.\"\n\nI rubbed my palm lightly over the wet spot, drawing the loudest moan yet from her lips. Her scent filled the room as I gently massaged her pussy through her panties, inviting more and more of her juices to soak them. I pulled them to side for a second, getting a nice look at her. Her hair was trimmed and dark, either because she wasn't a natural blonde or because it was soaked, I didn't know. I brushed my fingers lightly over her clit.\n\n\"Oh, fuck,\" she gasped. \n\nI briefly considered going down on her, but I figured that could wait. I knew what I really wanted. I moved up alongside her, wrapping my still-clothed legs around her left one and pulling it into me, opening her up a little more. My right hand dived into her hair, my tongue licked her earlobe, and my left hand curled itself under the waistband of her panties and searched out her clit.\n\n\"I know how beautiful you are, Brittany,\" I whispered. \"I know how hot you sound, and I love how your body moves. What I want, is...\"\n\nI trailed off on purpose as one finger dipped down into her pussy. I got it drenched, and then lifted it to my lips, sucking all her juices off before continuing.\n\n\"I want to see how all those things change when you're cumming for me.\"\n\nMy fingers pressed down on her clit without warning, and I swear, she tried to claw my arm off. Her nails sank into my shoulder muscles, but that didn't stop me from moving my mouth down to her neck. I picked a spot and nibbled and licked it, not really trying to leave a mark but not caring if I did. I'd only rubbed her clit four or five times when she screamed out.\n\n\"Holy fuck!!\" she shouted as her body shook. Her orgasm seemed to pulse, from her pussy up through her stomach, her amazing breasts and up to her beautiful face, which I saw flush even deeper. After the scream, she was now biting her lip so hard I thought my shoulder might not be the only thing bleeding. The wave rocked back down her body, and I felt even more of her juices ooze out onto my hand before I saw her legs trembling.\n\nWhen the brunt of her orgasm had subsided, I pulled my hand from between her legs and wrapped it across her body, just under her breasts, and squeezed tight. I don't think she noticed I was holding her at first, as she was concentrating on breathing normally. After she had it under control, her hand touched mine and she smiled.\n\n\"I can't believe you made me cum so fast,\" she said.\n\n\"I can't either, but I did,\" I answered. \n\n\"Don't get used to it, Mister,\" she said, mock-poking me in the chest. \"I can guarantee you'll have to work harder for the next one.\"\n\n\"So, I did well enough that you want there to be a next one, huh?\" I asked.\n\n\"Oh, fuck yes,\" she said, chuckling. \"But not right now.\"\n\n\"No?\" I asked. I'd planned on giving her a small respite before moving right back in, but as she wriggled free from my arms, I saw that she had other plans.\n\n\"No,\" she confirmed. \"It's your turn. And you have way too many clothes on.\" \n\nWithin seconds, my long-sleeved Jets T-shirt and faded blue jeans joined her clothes in the pile. I'd left her with nothing but her panties; she left me with only my boxers. My cock had been screaming to get loose pretty much since I'd seen her at the store this afternoon, and now that my pants were off, it found its own way through the hole in the front of my boxers to fresh air.\n\n\"Jesus, Kevin,\" she said as it popped free. \"So this is what's been poking me in the back all day. How big is it?\"\n\n\"I don't really keep score,\" I said. \"No one's ever complained, though.\"\n\n\"I would hope not.\"\n\nI'd never measured it, but my eyeball's best guess was somewhere between seven and eight inches. However long it was, it had always served me pretty well. I saw the glassy-eyed gaze Brittany was giving it now, though, and I considered how revved up she'd had me all afternoon and night. Size really didn't matter in this case -- it wasn't going to stand much of a chance. \n\n\"I don't think I'm going to last too long either, Brittany,\" I said. Her tiny hand slowly wrapped itself around the base of my cock, leaving more than half of it exposed.\n\n\"You better not,\" she said, licking her lips. \"There'll be plenty of time for stamina later.\"\n\nI groaned as she started to pump her hand slowly up and down. There was enough pre-cum leaking from the tip that she didn't need any other lube. I rubbed my hand lightly up and down her back as she leaned down to lick one of my nipples. Her hair fell all over my chest and stomach, tickling my skin lightly. \n\n\"You have such a nice cock,\" she muttered. \"I could get off again just touching it and staring at it.\"\n\nWhen the fingertips of her other hand started grazing my balls, that was it. I tried to warn her, but I felt the cum erupting from my cock before I even finished the thought. I felt some of it hit my stomach, but I couldn't see where the rest of it had gone. There were at least six blasts, probably more.\n\n\"Oh my God,\" she said. \"That was amazing.\"\n\n\"Sorry,\" I stammered. \"Tried to warn you.\"\n\n\"It's okay,\" she replied. \"Though, if you had, I probably would have put it in my mouth and swallowed it all.\"\n\nMy dick hadn't started to soften yet, and with her talking like that, I wasn't sure if it would. She turned her head to look at me, and I could see two globs of cum on her right cheek. Most of it had ended up in her hair, and her hand was coated as well. \n\n\"I seriously didn't mean to do that, Brittany,\" I said.\n\n\"Stop it,\" she said. \"You have no idea how hot that was, Kevin. All I had to do was touch you. It took less than a minute. That's incredible.\"\n\nShe smiled at me, and I leaned down to kiss her. She moved her head up to meet me, and when our lips met, it was no less electric than the first time, several hours ago now in my kitchen.\n\n\"I think I will need a shower, though,\" she said when we finished.\n\nWe shared a laugh as I led her into my bathroom. I flicked the light switch on out of habit and to my surprise, the light came on. \n\n\"Looks like you'll get a hot shower after all,\" I said. She smiled at me as she shimmied out of her panties, giving me a sexy little wiggle as she turned to get into the shower. I helped her with the water temperature, and then went to get her a couple towels. As much as I wanted to join her in the shower, I thought better of it and headed out of the room.\n\nI walked into the kitchen in just my boxers and leaned against the counter. I waited patiently for the doubts to start creeping in. I'd sworn up and down after my marriage had exploded that I was done with this whole opposite sex thing for at least a year, and it hadn't even been nine months yet. \n\nThe doubts never came. Prior to Kira, I'd never had a problem with confidence when it came to women, and I was happy to see that that hadn't changed. When I thought about the girl upstairs in my bathroom, I wasn't nervous, or scared, or skeptical. I was a little giddy, maybe, and definitely excited. But the negative feelings I expected to wash over me never materialized.\n\nI made a few sandwiches while I waited, and no more than 10 minutes later, I heard footsteps in the hallway. \n\n\"You could have joined me, you know,\" she said.\n\n\"I know,\" I said, and when I turned toward her, whatever else I might have said disappeared. Sweet Jesus, her hair was wet, she had no makeup on, and she was wearing my bathrobe.\n\n\"I hope you don't mind,\" she said. \"I have some extra clothes in my car, but nothing here.\"\n\n\"Looks way better on you than it ever has on me,\" I sputtered. Her hair was pulled back in a ponytail, and there were no traces of anything -- makeup or my little present -- on her face. She caught me staring.\n\n\"I know,\" she said. \"I have no makeup here, no lotion, nothing to make my hair look good. I don't know how I could have planned for this, but I should have tried. Please just try and forget that you've ever seen me like this.\"\n\n\"Why the hell would I want to do that?\" I asked, half-stunned by her nervous rambling. \"Brittany, you're gorgeous. Makeup might accentuate certain features, but it can't make an ugly woman look beautiful. You do that all on your own, makeup or not.\" Her face flushed a deep crimson.\n\n\"Thank you,\" she said demurely.\n\nWe sat and ate the sandwiches in relative silence. Throughout the meal, I caught her looking at me several times, and each time I met her stare, she just beamed a smile back at me. \n\nOnce we were finished, we got dressed and went to get her car from the Wal-Mart parking lot. The roads were still icy and it was bitter cold, but it was after 9 p.m. on Christmas Eve, and with so few cars on the road, she had no problem driving her little Mazda back to my house.\n\n\"I don't want to assume anything, Brittany,\" I said once we'd both parked in the garage. \"But can you drive this little thing all the way back to Keller tonight?\"\n\nShe looked doubtful. Before she could answer, her cell phone rang.\n\n\"Hi, mama,\" she said, getting out of her car and following me into the warm house. \"Yeah, I'm still here. I guess I'll try to drive back tonight. Any other night, I wouldn't risk it.\" She paused. \"Oh, no. What about dinner tomorrow?\" Her face fell as she sat down at the table. \"Good idea,\" she said, brightening up a little. \"Is Papa going back to get everything set up for Alicia? Good. He knows where I've hidden all her presents, right?\"\n\nI sincerely didn't want to eavesdrop, but she was sitting two feet away and wasn't trying to be quiet.\n\n\"Yes,\" she said. \"Umm...\" she trailed off, and looked up at me. \"I don't know, mama. It's Christmas Eve. I can't impose on my friend like that.\"\n\nI had a good idea what they were talking about, and I made a quick decision. I went into the garage, popped her trunk, and took two overnight bags out. Brittany was at the door as I came back in, and her eyes went wide when she saw what I was carrying. I sat her bags down in front of the stove and grinned at her.\n\nBrittany smiled. \"Ok, mama. I'm going to stay here tonight, but I'll be home first thing in the morning.\"\n\n\"Are you sure?\" she asked me when she'd hung up.\n\n\"Brittany,\" I said, taking her hands. \"I like you. I don't think that's any surprise. I enjoyed everything we did today. Doubt that's a shocker, either. If the weather was good outside and it wasn't Christmas Eve, I'd have asked you to stay over, anyway. But I don't want you driving that rear-wheel pair of ice skates two hours across town tonight.\"\n\nShe smiled widely. \n\n\"I'm glad I met you yesterday,\" she said, wrapping her arms around my waist burying her face against my chest.\n\n\"Me, too,\" I said, gently stroking her hair. \"What happened?\"\n\n\"The power went out at our house, too,\" she said. \"They're staying at my uncle's house tonight, a little further north. He still has power. My dad is going back tonight to set up the presents for Alicia and the other kids who will be there tomorrow. My mom's friends are telling her how bad the roads are. She didn't want me to drive.\"\n\n\"Smart woman,\" I said. When we broke apart, I took her hand and started walking back down the hall, but she tugged on my arm.\n\n\"Wait,\" she said. \"Aren't you gonna leave milk and cookies out?\"\n\n\"Um, no,\" I said. \"I keep my milk and cookies to myself.\"\n\n\"Santa Claus doesn't visit greedy people,\" she chided.\n\n\"Hey, milk and cookies are an institution in the Collins household, all right?\" I explained. \"They're everyone's favorite midnight snack, everyone's favorite dessert. We didn't bake cookies at our house if we didn't have a full gallon of milk.\"\n\nAt least she was laughing.\n\n\"Hell, there's even a rumor that milk and cookies might have had a starring role in somebody's first date, oh, I don't know.. how old am I now.. 15 years ago.\"\n\nSomething shifted in Brittany's eyes, and for just a second, she got a wistful expression on her face. It left as quickly as it arrived.\n\n\"Still,\" she said. \"Didn't your mama ever teach you to share?\"\n\n\"Oh, I'm willing to share,\" I said, writing off the pause as a figment of my imagination. \"With any sexy, stranded co-eds standing in my kitchen right now.\"\n\nShe giggled and playfully punched me in the chest. \"It's just been tradition in my family, even when we were old enough to know Santa wasn't real, we still put them out.\"\n\n\"Ok,\" I said. \"If you'll share with me now, we'll leave some out.\"\n\nShe beamed at me and grabbed the milk from the fridge as I pulled the cookies down. We each ate a few while we talked about her schooling, my crazy schedule, and how the Rangers had choked in the World Series. As I'd promised, I left half a glass of milk and a plate of cookies on the table.\n\n\"You want to watch a movie or something?\" I asked, not wanting to watch a movie in the slightest.\n\n\"No,\" she said. \"I think it's bed time. But if you don't mind, can I get a shower first? A real shower, with my soap and shampoo, so I can change into clean clothes?\"\n\n\"Sure,\" I said, picking up her bags. I walked into my bedroom and put them on the bed. A small part of me wondered if I was getting ahead of myself, assuming she was going to sleep in my bed, but her smile as she started to get undressed told me all I needed to know.\n\nI sat on the bed and opened my laptop as she disappeared into the bathroom. I was looking through flight plan assignments for the new year when I heard the bathroom door open a little while later.\n\n\"What do you think?\" she asked. I looked up from the computer and my jaw dropped.\n\nShe wore a purple TCU T-shirt and gray shorts with the Victoria's Secret PINK logo on the butt. Her hair was out of the ponytail now, hanging down over her shoulders carelessly. It was all I could do to not throw her on the bed and molest her. Every time I moved my eyes I found another part of her I couldn't tear myself away from.\n\n\"Kevin?\"\n\n\"I'm sorry,\" I said, licking my dry lips. \"Am I supposed to say something intelligent with you standing there looking like that?\"\n\n\"You, Mister, say the nicest things,\" she said. \"And you deserve a reward.\"\n\nShe closed the distance between herself and the bed in record time and leapt on top of me. Our mouths met instantly, and we spent the better part of the next half hour kissing passionately on my bed. Our tongues got involved instantly, and our hands and feet did, too. I was on top for a while, then she was, then we both rolled onto our sides. \n\n\"I take back what I said earlier,\" I said. \"I don't think I ever made out this much even when I was a teenager.\"\n\n\"Me either,\" she said before pulling me right back in for another kiss. Her hand started wandering, and for the first time since we'd gone back to the bedroom, she moved it down to cup my crotch. I wanted to tap the brakes a little bit, but my hands got curious and started squeezing her ass instead. I was sort of thankful when she rolled off of me and curled up against my side.\n\n\"Kevin, you have no idea how turned on I am right now.\"\n\n\"My dick is about to declare war on Calvin Klein,\" I replied. \"So, yeah, I think I kinda do.\"\n\nShe giggled. \"Okay then. But, still, I'm thinking...\"\n\n\"Me too,\" I said, meaning it. \"We just met yesterday, and I've known your name for like six hours now.\"\n\n\"Yeah?\"\n\n\"And there's this little demon on the pillow, cussing me out and calling me every name in the book and threatening to revoke my man card if I don't do this tonight.\"",
        "\"Yeah, he's yelling at me, too,\" Brittany said with a laugh. \"But the angel on the other pillow is telling me that it kinda likes you.\"\n\nShe was reading my mind. It was a little scary.\n\n\"Like... I might really like you. I know, I barely know you, but still.\"\n\n\"You mentioned leaving the milk and cookies out,\" I said. \"Well, in my house, we had a tradition, too. You get to open one or two presents on Christmas Eve...\"\n\n\"But you have to wait until Christmas to open the big presents,\" she finished.\n\nWe stared at each other for long moment, until we both started laughing.\n\n\"Is this conversation a little eerie?\" I asked.\n\n\"A little,\" she admitted. \"But I'm glad we agree.\"\n\n\"We do. Besides,\" I whispered in her ear. \"Christmas is tomorrow.\" \n\nBrittany shot me a \"come hither\" look that would have torched the neighborhood if there was an open flame nearby. We probably made out for another hour before finally falling asleep.\n\n************************\n\n\"Merry Christmas.\"\n\nMy brain was trapped under a thick layer of fog, but I was able to vaguely make out a woman's voice coming from nearby. My eyes were only half open, and it was still dark in the room. I couldn't see her, but I could feel her presence next to me on the bed.\n\nI switched on the bedside lamp and turned over, and the memories from the day before rushed back to me as Brittany came into view. I was thrilled to discover that she hadn't been a dream or a figment of my imagination. She was laying right next to me in bed. Her shirt had come off during our makeout session, leaving her topless. Her hair fell over her shoulder and splashed across her naked breasts. She was beautiful.\n\n\"You are the best Christmas present ever,\" I said.\n\nI kissed her. Hard. I forced my tongue into her mouth and, after a little squeal of surprise, hers met it eagerly. My fingers danced across her chest, brushing her nipples with each pass.\n\n\"Wow,\" she said a few minutes later.\n\n\"I agree,\" I replied. \"I hope you know this is not how I expected things to happen.\"\n\n\"What do you mean?\" she asked.\n\n\"I want to date you, Brittany,\" I said. \"I want to get to know you. God and Mother Nature got together and sped things up a little, and I'm certainly not complaining about everything that's happened. But I didn't ask for your number yesterday so I could get you into bed. I asked so I could take you to dinner.\"\n\nShe had an incredulous look on her face.\n\n\"I'm not a bullshitter,\" I continued. \"I'll always be straight and honest with you. I don't want what happened yesterday to give you the wrong impression. I know we haven't been on a real date yet, but if it goes like I think it will, I want there to be another one, and another one after that. If you're not okay with that, now would be the time to say so.\"\n\nShe leaned over and answered me with a long, soft kiss. It wasn't nearly as frantic or heated as most of our other kisses had been, but my toes were still curling when it was over.\n\n\"I'm more than okay with it,\" she said. \"I'm friggin' ecstatic. In fact, I'd like to show you just how ecstatic, but...\"\n\nShe trailed off, and a light bulb clicked on in my brain.\n\n\"You're missing Christmas with your daughter,\" I said, immediately getting out of bed. \"We need to get going.\"\n\n\"But the roads--\"\n\n\"Not every piece of pavement in the Metroplex is closed, Brittany,\" I said, heading toward the shower. \"I have a GPS. I'll find a way.\"\n\nShe sat on the bed, her mouth hanging open. \"Wow.\"\n\n\"Wow, what?\"\n\n\"I'm just surprised it's that important to you, that's all.\"\n\n\"A mother getting to spend Christmas with her daughter? It means a whole lot to me, yeah.\"\n\nI left her grinning on the bed as I got into the shower. A few seconds later, she pulled the curtains back. She was gloriously naked, and again, I had to fight the urge to throw her down on the floor. She stood on her tippy toes and gave me a kiss.\n\n\"You are such a sexy man,\" she cooed. \"Can I come in?\"\n\nWe both let our hands roam, but we somehow managed to stop things from going further. I washed her, paying special attention to her magnificent breasts and her back, giving both a decent massage in the process. She returned the favor, making sure my cock was nice and clean before she moved on to my legs. All it did was heighten my desire to explore her even further, but more important things took precedence.\n\n\"So, I guess that answers that question, then,\" she said as we dried each other off in the bedroom. I just shot her a quizzical look. \"I was going to ask if you'd join my family and I for Christmas dinner today.\"\n\n\"Oh,\" I said. \"Well, I just don't want you driving, Brittany. I would have dropped you off and gone somewhere else for a while. I was not planning to invite myself to your family's Christmas.\"\n\n\"You don't have to, Kevin,\" she said. \"I just did. It's the least I can do after how nice you've been to me, getting me out of the storm yesterday. Plus, I would hate knowing you're spending Christmas by yourself. And besides... I just want you there with me. That's okay, right?\"\n\nAnd with that, my Christmas plans morphed from football and beer to spending an entire day with people I didn't know. I bristled momentarily, thinking about my reasons for turning down Tim's invitation, but then I relaxed. With Brittany around, there was no way I would be in a sour mood.\n\n*****************\n\nThe rest of the day was, to put it lightly, a massive zoo. \n\nThankfully, parts of the Interstate were open, so it only took about an hour and a half to make what should have been a 45-minute drive. There were 15 or 20 people at the house when we finally pulled into the crowded driveway. Brittany told me it was pretty much all of the family they had in the area except for her older sister, who was spending the day with her husband's family in south Texas, and one of her older brothers, the one who worked in Denver and was staying there this year. \n\nBrittany's mom was thrilled to have another guest to feed, making a big production of welcoming me to her house and ordering me to feel at home. With her friendly smile and pleasant demeanor, that was going to be easy.\n\nHer dad was a different story. He was wary of me from the moment I walked in, even through all the presents. It was slightly odd being the only one there with no presents to unwrap, but I was okay with it. My only contribution to the presents at all was the stuffed cat I gave to Alicia, Brittany's daughter. It was an exact replica of Chester. I told her family that a friend had given it to me, but it had actually been a gift from Kira. She knew how much I liked the cat, and she'd taken a picture of him to a toy store one year for my birthday. It was one of the best gifts I'd ever received, but I figured it would be in good hands with Alicia.\n\nBrittany's dad started to warm up to me a little later in the day as we watched college football. We talked a lot of strategy, why the teams were doing what they were doing, etc. He peppered me with questions about the Rangers, and I mentioned that I'd met Kellen Howard, their young first baseman, on several occasions. We also talked about my brief professional baseball career.\n\nI could tell he wanted to ask me about my relationship with his daughter, but he never brought it up. Considering my relationship with his daughter consisted of two chance encounters, two orgasms, one shower and about four hours of tonsil hockey, I wasn't going to bring it up if he didn't. By halftime of the second football game, we were chatting like old friends.\n\nAlicia wasn't quite sure what to make of me, but she was enjoying the day in general. She knew how to give high fives, and anytime I extended my hand, she would dutifully slap it. She grinned at me when I used the stuffed cat to play with her, and I could definitely see the resemblance.\n\nDinner was, well, there's no nice way to say it. Dinner was fucking fantastic. Ham, stuffing, cranberry sauce, candied yams, and all the rest of the regular Christmas dinner fare was mixed in with some spectacular Tex-Mex cooking. On one plate I had ham, refried beans, deviled eggs and enchiladas. My stomach would likely hate me later, but my taste buds wanted to award me a Nobel Prize.\n\nThroughout it all, Brittany and I made faces at each other. Most of the time they were goofy, humorous faces, but a couple times I caught her staring at me when she thought no one was looking. For my part, I stole a glimpse of her whenever I could. She was just so beautiful. She wore very minimal makeup, and for most of the day, she walked around in pajamas and bunny slippers. Still, whenever I saw her, I wanted to wrap her up and never let her go.\n\nIt was quite frankly a little scary to me. Not two days ago I sat in my living room, half-buzzed, telling myself that someday soon I might be able to start dating again. Now here I was, daydreaming about a woman I'd just met and getting a touch romantic. \n\nI brushed off those thoughts and started helping her mom do the dishes. She protested at first, but I told her I wasn't leaving the kitchen till everything was clean, so she could either accept my help or not. She washed, I dried, and Brittany put things away. The three of us made a pretty good team, and the kitchen was spotless in about a half hour.\n\nBrittany chose that point to tell me about another Christmas tradition in her house, just as her mom started mixing up cookie dough.\n\n\"Every year, mama makes a different kind of cookie,\" she explained. \"This year is oatmeal chocolate chip.\"\n\n\"Oooh,\" I said. \"Good choice.\"\n\n\"Oh, but mama, do we have milk?\" Brittany asked, sticking her tongue out at me through her pearly white teeth. \"Kevin here is a snob. He doesn't eat cookies without milk.\"\n\n\"Hey,\" I defended myself. \"I'm a guest in your house, so I'll take whatever is being offered. Still... if you're going to do something, I say you should do it right.\"\n\nThey both laughed.\n\n\"Kevin said he even had cookies and milk on his first date, when he and his family lived in Turkey.\" Her mom raised her eyebrows at that, but didn't say anything.\n\n\"It's true,\" I said. \"A man doesn't forget such a momentous event in his life.\" \n\n\"Well, I just opened a new gallon a couple of hours ago,\" her mom said. \"You're all set.\"\n\n\"Thank you,\" I replied. \"Thanks for this whole day, really. My plan was to spend Christmas by myself until Brittany showed up. Your family has shown me such great hospitality today, and the food... I think you need to start a restaurant, Mrs. Morgan.\"\n\n\"You're such a sweet man,\" she said, pinching my cheek. \"But it's Mrs. Pacheco. Morgan was the asshole mi hija over there divorced.\"\n\nThe name she'd given me, Pacheco, sounded familiar to me, but I wasn't sure why. Brittany stared at the ground as her mom talked, but when it got quiet, she looked up at me. She was giving me a specific look. Hope, maybe? Anticipation? Anticipation of what? I mean, I'd promised her a Christmas gift, but that wasn't going to happen anytime soon. \n\n\"Well, Mrs. Pacheco, then,\" I said. \"I'm very happy I got to spend the day with your magnificent family. I'm going to go give my regards to Mr. Pacheco, then I need to be going.\"\n\n\"You're going home?\" Brittany asked. I could tell she wasn't happy about it. \"My car is in your garage.\"\n\n\"I know,\" I said. \"But I need to sleep somewhere tonight.\"\n\n\"You can't drive all the way to Garland tonight, Kevin,\" she pleaded. \"It's way past dark and the roads are still nasty.\"\n\n\"She's right, Kevin,\" her mom said. \"You literally can't, at least not on the freeway. A semi jackknifed on I-30 a few hours ago. It'll be shut down until tomorrow.\"\n\n\"They have side roads,\" I countered.\n\n\"And we have plenty of room here,\" her mom said with finality. \"You'll be sleeping here tonight. Don't argue with me.\"\n\n\"Yay!\" Brittany exclaimed, clapping her hands and jumping like a schoolgirl.\n\n\"He'll be sleeping in the living room, young lady,\" her mom said, tossing me a wink as she put the cookies in the oven.\n\n**************************\n\nIt was a little after 11 when Brittany's youngest brother went to bed, leaving she and I as the last two awake. The last of the family had left around 8 or 9 p.m. to head home, and her mom and dad had gone to bed right as the last car was pulling out of the driveway. So, we stood in the kitchen, bonding over a little late-night snack. Her mom's oatmeal chocolate chip cookies, just like everything else she'd cooked today, were outstanding.\n\n\"Alicia is the cutest little girl I have ever met, by the way,\" I said. \"I would have known she was your daughter even if you hadn't told me. The resemblance is striking.\"\n\n\"Thank you,\" she said, looking down into her glass of milk. \"She likes you, you know.\"\n\n\"I didn't,\" I said. \"How can you tell?\"\n\n\"She loves my dad and brothers, of course,\" she said. \"But she isn't really comfortable around most other guys.\"\n\n\"What about her dad?\" I asked. \n\n\"She hasn't seen him except on the other side of a bulletproof plexiglass window since she was six months old,\" she said. \"She cries when I take her, and she's the only reason I go visit him. He's there for at least 10 more years before he's up for parole.\"\n\n\"Can I ask what he did?\" \n\n\"Pushed me down a flight of stairs,\" she said. With her tone of voice, she could have been ordering Chinese takeout. \"It was right after Alicia was born. We got into a fight about something, and he shoved me into the wall. He did that all the time, and I guess I'd just gotten used to it. We lived in a second-floor apartment, and when I went to leave, he screamed for me to come back. I made it halfway down the stairs before he caught up to me and pushed me the rest of the way down. Broke my right leg and a couple of fingers.\"\n\n\"Son of a bitch,\" I muttered. I briefly pondered how hard it would be to break into a prison and kill someone, but a comment my mother always made during my teenage years came to mind. 'Son, if a woman wants you to fix something, she'll tell you so. Most of the time, all she wants is for you to listen.' So, I listened.\n\n\"That probably wouldn't have landed in him jail, though. I somehow managed to get into my car and drive here, where mama was watching Alicia. She took me to the hospital, and when my ex found out what happened, he wanted to come to the hospital. I wish he'd have made it, because papa would have killed him. Instead, the dumb shit got pulled over for speeding on the way over, and the cops found about 30 kilos of cocaine in his trunk.\"\n\n\"Holy shit,\" I said. \n\n\"Yeah,\" she replied. \"While he was awaiting trial on that, some girl accused him of raping her a couple years before, right after we got married. I don't know what ever came of that, though. I filed for divorce before I got out of the hospital.\"\n\n\"Wow,\" I said, pulling her into a hug right there in the kitchen. She wasn't emotional about it at all -- I guess when you have enough time to deal with something, it becomes no big deal. I felt pretty horrible for her, though.\n\n\"So, there ya go,\" she said. \"I've dated a few times since then, and the couple guys who did meet Alicia, she wasn't really happy about. She took right to you, though.\"\n\n\"I give good high-five, I guess,\" I responded, earning a laugh. \"My turn.\"\n\n\"Oh, no,\" she said. \"I didn't mean to tell you about that, it just kind of spilled out. You can tell me about your past whenever you want.\"\n\n\"What if I want to right now?\" I asked. She blinked, so I moved right on. \"I met Kira about a year before I got out of the Marines, when I was back home in Maryland on leave. We got married about a year after I got out. She worked in Washington, D.C. as a lobbyist for an energy company, and I quickly got a job working for an airline based out of Washington Reagan. For the first two years, our marriage was spectacular.\"\n\n\"And then?\" Brittany rested her head on my chest as we stood together. If there'd been some Barry White playing in the background, we could have been slow dancing.\n\n\"I guess we started to drift a little bit, but I didn't think it was anything out of the ordinary. She was taking trips, I was always on the road, and we just didn't spend as much time together as we used to.\"\n\n\"So what ended it?\" she asked.\n\n\"I came back from a flight to Las Vegas one night. When I walked off the plane, I turned my cell back on and had about 20 voicemails. The first was from an Associated Press political writer, asking me for a comment on the allegations. I had no fucking clue what he was talking about, so before checking the rest of my messages, I immediately called the guy back.\"\n\nI think Brittany could sense the hammer coming, so she just stood there in silence waiting for it.\n\n\"And he's actually the one who told me that my wife had been cheating on me for the better part of a year.\"\n\n\"Oh, Jesus, Kevin,\" Brittany said. \n\n\"Yeah,\" I replied. \"Anyway, most of the other messages were from other news people. A few from my friends, and about three from Kira, telling me we needed to talk.\"\n\n\"Wow,\" she said.\n\n\"She told me she'd slept with a few political nobodies in the past, interns or junior aides to this senator or that representative, just trying to earn a few favors. The media started caring about it when she skipped the underlings and went straight to the top. Apparently, someone had video of her in a threesome with a female senator from New Hampshire and her husband.\"\n\n\"Oh, God,\" she moaned.\n\n\"Yeah, I'm pretty sure Kira said that exact thing once or twice in the video,\" I said. It was my attempt to be glib, but Brittany didn't see the humor. Truthfully, neither did I. \"Honestly, I have no problems with threesomes. You have yet to really scratch the surface with me, Brittany -- I'm a pretty open-minded, adventurous guy. I have a lot of fantasies. I just can't tolerate being lied to.\"\n\n\"I'm the exact same way,\" she said into my chest. I wasn't sure which part she was talking about. I was happy either way.\n\n\"Anyway, Kira got fired, the senator resigned, and my airline put me on a one-month paid leave of absence due to all the publicity I was getting. That was about nine months ago. It was actually all over the news for about a week. I'm surprised you didn't hear about it.\"\n\n\"Well, there's a lot going on in my life,\" she said. \"And I don't really follow politics too closely. I'm so, so sorry for you.\"\n\n\"Eh, I'm a very firm believer in a couple of things. God works in mysterious ways, and everything happens for a reason. I could have lived without being a political punchline, but honestly, it worked out for the best.\"\n\n\"How so?\"\n\n\"My current boss, Tim, called me up the day after the airline put me on leave and offered me a job and a paid move out here,\" I said. \"Doubled my salary instantly, and gave me a quick, one-way ticket out of town. Kira begged me for a second chance, told me we could move back to Salisbury, start over, and she'd make it up to me. I figured that maybe if it was just the one indiscretion, as public as it may have been, I could forgive her eventually. Maybe. But as many times as it happened, as many times as she lied to me about it... I just wanted to wash my hands of the whole thing.\"\n\nShe nodded.\n\n\"And it's not like our relationship was all wine and roses anyway. She didn't want to have kids at least until she was in her 30s, if ever, and I wanted to start a family pretty much the moment my elbow blew up.\"\n\nShe looked up at me. Tears were lined up on the edges of her eyelids, but she had a shy smile on her lips.\n\n\"I know we're not there yet, Brittany,\" I said. \"But that's why you having a daughter doesn't scare me. I've been ready to have kids since the day she and I got married. If things go bad between you and I, it won't be because of Alicia. But if things go like I think they will, I'll want her to be as much a part of it as you are.\"",
        "That broke the dam, and she started crying on my red Terrapins hoodie. I lightly rubbed her back and tried to calm her down.\n\n\"Shh, honey,\" I said. \"I don't want to wake your dad. Him stabbing me in the neck for making you cry would be a pretty craptastic ending to this otherwise awesome day.\"\n\nShe started laughing through the tears. Then she leaned up and kissed me, and within 10 seconds, the mood in the room changed. I'd been half-hard since we'd started hugging, and now her hands were roaming all over my body. One of them got particularly adventurous and disappeared inside my sweat pants.\n\n\"What are you doing?\" I asked.\n\n\"Shh,\" she said. \"If you think my dad would have been angry before, just wait and see what happens if he catches me doing this.\"\n\nBefore I could ask what exactly 'this' was, she hooked her fingers inside the waistband of my pants and pulled them down. She sank to her knees on the kitchen floor, fishing my cock out of my boxers as she knelt. I wanted to say something, but when she wrapped her soft, kissable lips around the head of my cock, it got caught in my throat.\n\n\"Fuck, Brittany,\" I said, moving my hand into her hair. The shock of the initial sensation wore off, and I at least came back to my senses enough to caution her.\n\n\"They could walk in here at any minute, babe.\"\n\n\"A nuclear explosion wouldn't wake my dad up,\" she said. \"And the floors creak a little, so we'll have some warning. But if you're that worried about it... you better stop distracting me. Because I'm not stopping until I'm finished.\" That ended any protest I might have countered with, and I just sagged back against the sink and enjoyed it. I'd been riled up ever since our shower this morning, and spending all day close to her but not being able to touch her had driven me insane. I didn't think it would take very long, and I hadn't counted on her being this skilled at it.\n\n\"God, that feels good,\" I muttered. She purred at the compliment but never quit working on me. Her lips felt heavenly sliding up and down my shaft, and when her tongue flicked back and forth over the head, I had to bite my lip to keep from shouting her name. Her tongue ring was working wonders on the underside of my cock, the sharp contrast between the silky smoothness of her tongue and the hard metal sending my nerves into a frenzy.\n\nShe tried mightily to take me all the way in, and though she came up an inch or so short, she'd gone farther than any other woman had before. I tightened my grip on her hair, and before long, I was past the point of no return. I managed to warn her this time, though.\n\n\"Brittany, I'm gonna cum,\" I half whispered. She looked up at me with those piercing blue eyes, and that was it. I came in her mouth, blasting shot after shot against her tongue. The orgasm was so intense that my knees started to buckle, so I gripped the edge of the counter to stay vertical. I felt like I came a half-gallon, but Brittany never gagged and didn't lose a single drop. \n\nWhen she was satisfied that she'd gotten all I had to give, she grinned and stood up, wrapping her arms around my waist. \n\n\"I know some guys think it's gross,\" she said. \"But will you kiss me?\"\n\nI didn't have to think about it. \"Fuck, yes, I will kiss you,\" I replied. I pushed her back against the refrigerator and attacked her mouth with mine. She'd swallowed my cum by now, but I still detected a slightly thick, salty residue on her tongue. I didn't care.\n\nAfter a minute or two, I felt her rubbing her crotch against my bare leg.\n\n\"Somebody wants me to return the favor,\" I teased.\n\n\"I'll get myself off just like this in a minute,\" she moaned. \"You don't have to.\"\n\n\"Of course I don't.\" With that, I pulled my pants up and carried her toward the living room. Before I could get there, though, I spotted a doorway with something hanging over it. The same something had been hanging in my house and was partially the reason I was even here.\n\n\"Look,\" Brittany said, looking at the same thing I was. \"Mistletoe.\"\n\n\"They say you have to kiss a girl if you get her under the mistletoe,\" I said, lowering her to the ground. \"They never said where you have to kiss her.\"\n\nI pulled her gray shorts off and was pleasantly surprised to find she was wearing no panties underneath. I wanted to tease her. I wanted to prolong her anticipation by just staring at her beautiful pussy for a few moments. I wanted to drive her crazy, darting my eyes back and forth between her pussy and her face, licking my lips as her patience slowly evaporated. \n\nI wanted to. But her pussy lips, glistening in the blinking lights from the tree, looked so damn mouth-watering. She was more than just a little turned on, too, and when her scent reached my nose, I could no longer resist. I started below her pussy, just inches above her ass, and slowly trailed my tongue north. I dipped it inside her, to confirm that she tasted as good as she looked. I used it to bathe both lips, and by the time I finally made it to her clit, she was thrashing around wildly and doing her best not to make too much noise.\n\n\"You fucker,\" she gasped. \"Stop teasing.\"\n\n\"Um,\" I said, pretending to consider it. While I did, my mouth hovered inches above her, my breath landing directly on her clit. \"No.\"\n\nI snaked my free hand up under her shirt and lazily toyed with her nipples while I took my time between her legs. I knew there was a chance we might get caught, but this was my first time going down on her, and I wanted to make it special.\n\n\"Don't you like what I'm doing?\" I asked, already knowing the answer.\n\n\"Fuck,\" she uttered. \"You know I do. I could let you do this all night, Kevin. It's just--\"\n\nI didn't want her to finish the thought, so I gave her something else to dwell on. I slipped two fingers deep inside her and torqued my wrist back and forth. It wasn't an easy motion to make because she was pretty damn tight, but the way she thrashed around under me made it all worth it.\n\n\"You're going to kill me,\" she panted. She wrapped her legs around my broad shoulders in an attempt to keep me pulled tight against her, and though I could have easily broken her grip, I decided to oblige her. I'd been toying with her for 10 minutes now, and that was plenty long enough to be tempting fate.\n\nI dug my tongue as deep into her steamy, dripping pussy as I could, simultaneously rubbing my nose back and forth against her clit. The back of her hand flew up to her mouth just in time to stifle a scream that would have woken up my parents, much less hers. Her feet were at the base of my skull, bound and determined not to let me move until she'd come down from her peak.\n\n\"Where the,\" she gasped, \"did you.. learn?\"\n\n\"One of my first real girlfriends,\" I told her. \"My second year of pro ball, in Grand Rapids, Michigan. She swung both ways, and always had a woman on the side. She taught me exactly what she liked, and I watched her use those same techniques on a few of her girlfriends, too. As well as they worked for her, I figured I should remember them. They've served me well.\"\n\nHer eyes widened a little.\n\n\"I told you I was adventurous,\" I said. \"I just want to be included in all the wild debauchery.\"\n\n\"I'll keep that in mind, Mr. Collins,\" she grinned, standing up and walking into the living room. I followed her, until we were standing facing each other in the middle of the room. \"I'd love to explore all of that with you. But for right now, I want you to make love to me.\"\n\nBefore I could respond, she raised her hand up. \"That doesn't mean you love me, I get it,\" she said. I could feel another of her rambles coming on. \"I just feel a deep connection to you, and I want you to be gentle and tender with me, and all the other things I've never really experienced, and --\"\n\n\"Shh,\" I said, placing a finger gently on her lips and leaning down to her ear to whisper. \"I know just the place.\"\n\nI took her hand and led her over to a spot on the floor, just a foot or two away from the Christmas tree. I quickly took off my sweats and laid down on my back as Brittany pulled off her shirt. She realized what I wanted and smiled widely as she straddled my knees.\n\n\"This is so naughty,\" she said, holding my cock in place as she slowly lowered herself onto it.\n\n\"But it's so fucking nice,\" I grunted. It felt like a raging wildfire was engulfing me, as the heat from deep inside her radiated over my body. It took her a minute or two to fit all of me inside her, and once she had it, she didn't want to move. She was flexing her inner muscles around my cock, milking me without visibly moving a muscle. \n\n\"God, you're big,\" she said.\n\n\"And you're a liar,\" I countered. \"This pussy is way too tight to have had a kid.\"\n\nShe smiled and lifted herself all the way up, until little more than my tip remained inside. She stayed there a minute, balancing on her tip-toes before forcibly slamming her diminutive body back down onto mine. \n\n\"Oh, fuuuuuuuuck,\" she moaned, collapsing on my chest. \"So fucking good.\"\n\nWe fell into an easy rhythm for the next few minutes. She laid on top of me and gyrated her hips up and down, taking me as slowly or as quickly as she wanted. Just as she wanted, it was incredibly tender. I planted kisses all over her face and neck, then nibbled down her collarbone to her shoulders. My hands roamed all over her back before moving lower and cupping her supple ass cheeks.\n\n\"You have such an amazing body, Brittany,\" I whispered.\n\n\"It's all yours,\" she whispered back.\n\n\"Best Christmas present ever,\" I said, echoing my sentiment from the morning.\n\n\"I don't know if I should say thank you or you're welcome,\" she said. \"Your present for me is pretty fucking spectacular, too.\"\n\nMy hands moved to her hips and sped her up a little. Her breaths were quicker and more shallow, and her fair complexion had flushed slightly.\n\n\"That's it, sexy,\" I muttered, so softly that she might not have understood had she not been staring into my eyes. \"I want you to cum for me. I want you to make yourself cum on my cock.\" \n\nShe increased the pace on her own, and within a minute or so her head was buried in my shoulder, my skin providing the only muffler for her cries as she came. It wasn't as intense as the last one, and hopefully, it wasn't as intense as the next one would be.\n\n\"I love how you make my body feel,\" she said. \"I love how you make me feel.\"\n\n\"Let me make you feel better,\" I said. Without pulling out of her, I rolled us both over, planting her young, tight body on the skirt under the Christmas tree. I could feel the fake pine needles tickling my back as I stared down at her.\n\n\"Wow,\" she said. \"Under the tree and everything. You really are my Christmas present now.\"\n\n\"And you're mine.\"\n\n\"I am,\" she said, giggling. \"I'm already unwrapped, too. All you have to do now is play with me.\"\n\n\"Gladly, baby,\" I said, lifting my hips up and driving them back down. It wasn't hard and forceful, but it was firm. My strokes were slow but meaningful. I tried to make her feel every inch as I slid back and forth inside her. I just laid on top of her for the first few minutes, crushing her breasts against my chest and reveling in how small she felt underneath me. I didn't want to suffocate her, though, so I pushed up onto my elbows to take some of my weight off of her.\n\nWhen I looked down at her, I damn near lost all control and came right there. \n\nShe was angelic. \n\nThe lights from the tree blinked and flickered, lighting her face with an entrancing kaleidoscope of color. Her mouth was just slightly open, and I could see a tiny glare where the lights caught the ring in her tongue. Her cheeks were flushed, and her small hoop earrings laid in her hair. Her eyes were closed, but when she felt my weight lift, they opened and locked right onto me. There was a look there that I could only describe with one word, and my amazement at that little revelation just strengthened my attraction to her.\n\n\"You're so beautiful,\" I said. \"You're making it hard to concentrate.\"\n\n\"You're a big boy,\" she said, the double meaning in her words crystal clear. \"You'll find a way.\"\n\nMy lips met hers, and we kissed passionately as I continued to pump in and out of her. I relished the way her moans got lost in our mouths, the way she grunted each time I bottomed out deep inside her, the way she dug her heels into the back of my thighs. \n\n\"Oh, God, Kevin,\" she said. \"This is better than I always thought it would be. I think I'm going to cum again, baby.\"\n\nSomething about that didn't seem right, but my libido was in charge, and it immediately skipped to the last thing she said. \n\n\"Do it,\" I ordered. I kept the same steady motion throughout her orgasm, but as soon as she started to come down from it, I picked up my pace. It was my turn to get off, and I wanted her to cum with me.\n\n\"Just one more, baby,\" I said, groaning as she flexed her inner muscles. She was already tight, but when she did that, she felt like vise grips. She bit her lip to stop from crying out, but once she was used to the faster pace, she started talking dirty. \n\n\"Are you gonna cum in me, Kevin?\" she asked, faking shyness with her smile. \"Because I would like that. Would you like that, Kevin?\"\n\nThe way she kept using my name was driving me batshit crazy.\n\n\"I'm so close again, Kevin,\" she continued. \"Feeling your cock erupt inside me, shooting your hot cum all over my insides, I think that would help me cum for you.\"\n\nI really started giving it to her, ignoring the loud slapping noises our hips made as they collided repeatedly. She leaned into my ear for the next part.\n\n\"Please, Kevin,\" she whispered. \"I want to be a good little slut and cum for you again, but I just need a little help.\"\n\nShe leaned back and grinned mischievously at me, but when I pulled one hand up and clamped my fingers over her right nipple, her eyes rolled back in her head and she growled. Her pussy started spasming, and that pushed me over the limit.\n\n\"Cumming,\" I managed to eke out, just before the sensations hit me.\n\n\"Yes, baby,\" she gasped, clearly in the throes of her own ecstasy. I closed my eyes tightly, and the stars I saw mixed with the spots left by the Christmas lights to put on an interesting fireworks display as I exploded. I took one more hard stroke and stayed buried inside her, feeling my cock pulse as torrents of my cum flowed into her pussy.\n\nI felt her hands lazily roaming over my back as we both relaxed. I kissed her shoulders while I regained my strength. When I was ready, I pushed myself off of her, my cock slipping out of her as I went. The moment it was out, I wished I was back inside of her.\n\n\"Merry Christmas,\" we said simultaneously.\n\n*********************\n\nA voice was screaming at me, telling me something wasn't right. I couldn't understand exactly what it was saying, as it was trapped under layers of dreamland haze, but it was pretty persistent.\n\nI tried to figure out where I was. I was standing on a balcony, looking out on a bustling city. Horns were honking everywhere, but there was another noise, too, independent from the voice shouting at me. It took me a minute to place it, but then I realized what it was. \n\nIt was a prayer call, emanating from the external loudspeakers at a nearby mosque. Several times during the day, they would play throughout the city, and the Muslim residents would stop what they were doing and pray. It was like that in most Islamic countries, including the one I'd lived in for two years when I was younger, Turkey.\n\nThat's where I was. I was standing on the patio of the ninth-floor apartment we'd rented when we'd lived in Turkey.\n\nThat word bounced around in my fatigue-soaked brain a few more times, and each time it ricocheted off one of the walls in my mind, the screaming voice got clearer.\n\n\"How the hell did she know you lived in Turkey??\"\n\nI woke with a start, the voice still ringing in my head and asking a question that I hadn't even realized needed to be asked until now. As I gave it more thought, things started to click into place.\n\nBrittany had told her mom that I had milk and cookies on my first date, when I lived in Turkey. I remembered telling Brittany about my first date, of course. But I'd never told her I lived in Turkey at the time.\n\nI'd complimented her mom on the food, and she told me her last name wasn't Morgan, it was Pacheco. I remembered thinking the name was familiar, but not being able to place it. \n\nI could place it now. My first date, the one I'd had in eighth grade in Turkey, the one with a third-grader my friends dared me to ask to be my girlfriend.. the girl's name was Rita. \n\nRita Pacheco.\n\nOh. Fuck.\n\nI was on the couch in their living room. Dawn was just starting to break outside, and I heard no other movements in the house. Somehow we'd managed to not wake anyone up with our lovemaking, and she'd snuck back to her room while I crashed out on the couch. That couldn't have been more than 6 hours ago.\n\nMy overnight bag was in Brittany's room, so I was armed with a good excuse as I padded down the hallway. The door was cracked, so I pushed it open and slipped in noiselessly. She wore the same T-shirt from last night but nothing else as she lay there, peacefully slumbering on top of the covers. She held her pillow vertically, like she was cuddling with a teddy bear. I watched her side rise and fall as she slept, and for a moment, I was mesmerized.\n\nFuck, she was beautiful. If I'd let it, my imagination could have played full-length movies of the things I wanted to do to her, if I could only just slide up behind her in bed.\n\nThat wasn't why I'd come to her room, though. There was only one thing about all this that didn't add up, and I wanted to figure it out. Using the light from my cell phone, I scanned back and forth over her bedroom walls until I found what I wanted. Hanging next to her desk were her diploma from Fossil Ridge High School and her college degree, a Bachelors in Marketing from UT-Arlington.\n\nThey were both issued to Brittany Margarita Pacheco. Margarita could be easily shortened to Rita.\n\n\"I need to tell you something.\" I turned to look at her. She hadn't moved from when I first entered her room, and I started to wonder if maybe I'd just imagined her talking to me when I saw her leg move.\n\n\"When did you stop using your middle name and start using Brittany?\"\n\n\"Right after we left Turkey,\" she said. Her voice was full of acceptance, as if she knew I had figured it out. \"Margarita was my grandma's name, on my dad's side. She died a few months after Alicia was born. Everyone called her Rita, and they always called me that, too. I decided in fifth grade to start going by Brittany.\"\n\n\"Ok,\" I said. I just stood there dumbly, not sure what to do.\n\n\"When did you figure it out?\"\n\n\"I didn't realize it until this morning,\" I said. \"Last night, you were teasing me in front of your mom about my first date, and how it was in Turkey. I never told you that.\"\n\nShe smacked her forehead with her palm. \n\n\"Once I remembered that, other things clicked. Your maiden name. I knew it sounded familiar, I just didn't know why. And I knew I hadn't told you my last name at the store, but I didn't know how else you'd know it. Then last night, you said it was better than you'd always dreamed. That's not how you talk about a stranger you just met two days ago.\"\n\n\"I wanted to tell you the first time we talked,\" she said. \"I wanted to tell you the second time we met, too. And after we woke up at your house, with your cat on my legs. Hell, I was seriously hoping you'd figure it out last night when my mom told you her last name.\"\n\nI remembered the look of expectation she'd given me right then.\n\n\"Why didn't you?\" I asked.\n\n\"I was nervous at first,\" she explained. \"By the time the nerves wore off, there was such obvious chemistry between us, and I was scared of damaging it.\"",
        "\"I'm a pretty reasonable person, Brittany,\" I said. I could feel my anger building, but I was fighting mightily to quell it. \"But it seems there's a lot you're not telling me. You better start from the beginning.\"\n\n\"You remember how I told you that every man who'd ever been in my life has turned out to be a liar?\"\n\n\"Except one boyfriend who didn't even last a week,\" I remembered. \n\n\"Me.\"\n\n\"Yes,\" she said. \"Kevin, I always had such a crush on you. That was the main reason my sister let me hang out with you guys so much, so I wouldn't ask her questions about you all the time. You remember my swimming lessons?\"\n\n\"Very, very vaguely,\" I said. I was always a good swimmer, so I offered to help out as a volunteer for little kids' swimming lessons. I didn't remember Rita being one of the students until just now.\n\n\"Puberty and the hormone attacks started a little earlier for me than most girls. During those lessons, when you'd hold your hand under my back to keep me floating or move my legs to show me the proper kicking motion, I was too young to know what it was, but it got to me, Kevin. There are pages and pages about you in my diary from back then.\" \n\n\"You were one of the popular kids, but you weren't mean to the unpopular kids like most of the others were,\" she continued. \"You always had fun, but I remember you breaking up a couple fights, too. You always did the right thing. I was so excited when you asked me to be your girlfriend, and I was crushed when you told me it was all a joke. What a horrible thing to do to a girl, ask her out as a dare!\" She playfully punched me in the chest. \"I cried for a week, and I was mad at you for a long time. Mama was too, but she told me that boys did a lot of stupid things, and at least you were honest with me about it and didn't let it go farther.\"\n\n\"I was mad at myself for doing it, Brittany,\" I said. Yes, she had a lot of explaining to do, but I needed to make amends. \"I know I said sorry when I told you about it, but I truly was sorry. I still am. Believe me.\"\n\n\"I do,\" she said. \"I didn't realize until I went back and read my diary years later, that you always tried to be nice to me afterward, but I was really mean and just didn't want to talk to you ever again.\"\n\n\"You had a good reason,\" I said. \n\n\"The older I got and the more guys I dated, the better you looked. Sure, you'd hurt me, but they were hurting me and wouldn't even be truthful about it. Sometimes they lied about the shit they did, and sometimes they lied about other girls, sometimes they lied about wanting to see me again. And then... and then, my fucking husband was apparently transporting drugs.\"\n\nI felt so bad for her. She got tired of waiting for me and walked over, still gloriously naked below the waist.\n\n\"Be mad at me if you want,\" she said. \"Just please, hold me. I'll keep talking.\"\n\nI wrapped her in a hug, and just like every time before, we fit together perfectly. She lay her head on my chest, sighed deeply, and continued.\n\n\"I never really forgot about you, Kevin. You were the only man who'd ever been honest with me. About a year ago, I looked you up on Facebook. You were playing one of those games on Facebook, Mafia Wars or something, so I added you as a friend and said I needed more friends for the game. You accepted it.\"\n\n\"You Facebook stalked me?\" \n\n\"Yes,\" she said. \"When I first added you, I found out you were married. I was disappointed, but I let it go. Then when all of the stuff with Kira happened.. Kevin, it was so hard for me not to message you and tell you who I was.\"\n\n\"Wait,\" I said. \"I told you all of that last night, and you already knew?\"\n\n\"Kevin, it was all over the news, just like you said,\" she explained. \"I knew all about it before I realized you were the husband. You never talked about it on Facebook, but I started seeing your friends giving you their condolences and such, and I knew the girl's name was Kira Collins, so I kinda figured it out.\" \n\nShe waited for me to answer, but I had no intentions to. Any response I would have given right then would include a few expletives, and I didn't want to do that.\n\n\"Anyway, I kept tabs on you, thinking maybe one day I would get up the nerve to send you a message. Imagine my surprise when you moved here.\"\n\n\"So, why not say something then?\"\n\n\"Like I said,\" she said. \"I was nervous. I was busy, too -- insanely overloaded with classes during the spring semester, and I interned with an accounting firm downtown this summer. But mostly, I was just nervous. Then I saw you tell someone on Facebook that you were going to spend Christmas all by yourself, and...\"\n\n\"Jesus, Brittany,\" I said, exasperated now and unable to hold back any longer. \"You've known everything I told you, before I even told you about it.\"\n\n\"That's not true,\" she said. \"I knew about Kira, and I knew you lived here. And I knew a little about your baseball career, because I googled you, too. But I didn't know about your job.\"\n\nI just shook my head.\n\n\"The meetings at Wal-Mart,\" I said. \"I guess there's no way in hell those were accidental, either, huh?\" Both times I'd met her at the store, I'd been so excited. I was fascinated with fate and what it had done for me. Even as I asked, though, I knew there was no way they could be coincidences. \n\n\"Actually, the first one was,\" she said. \"I knew you lived in Garland from Facebook, but I was curious about exactly where. So, I looked you up in the online phone book. I didn't expect it to work, but I was surprised to find that you had a landline. So, I had your address. I was heading out to Rockwall to see Sherry, and I decided to just do something crazy. Throw caution to the wind, so to speak, and quit wondering about you.\"\n\nShe stopped to breathe.\n\n\"So, I came over to your house.\"\n\nThat took me by surprise. \"You did?\"\n\n\"I sat out front for two hours on Wednesday afternoon, trying to work up my courage,\" she explained. \"Finally, I got out and rang the doorbell. I think the only reason I did is because I knew what time it was, and there was a good chance you weren't home. Sure enough, no one answered. I figured I'd just head east to Sherry's house and send you a Facebook message, but I wanted to surprise Sherry with stuff to make a Christmas dinner. I knew there was a Wal-Mart right around the corner. So I'm halfway done with my shopping, and I turn down the aisle to get stuffing. I think my heart stopped when I saw you throw a bag of noodles into your cart. You smiled at me as you walked by, and I'm still not sure how I didn't wet myself.\"\n\nThe thought was humorous, so I smiled.\n\n\"How'd you know it was me?\" I asked.\n\n\"Facebook,\" she explained. \"You're not much for posting photos, but a lot of your friends like to tag you in theirs. Anyway, I kinda followed you throughout the store, and when you went to check out, I decided it was now or never.\"\n\n\"What about the next day?\"\n\n\"A case of weird timing,\" she said. \"I told Sherry the whole story, and after I spent the whole night talking about you, she convinced me to try it again on my way back home. As I turned onto your street, you passed me. As bad as the roads were, I figured you couldn't be going far, so I followed you.\"\n\nI didn't know what to say.\n\n\"When you asked me for my phone number, Kevin... my heart leapt out of my chest. I was so incredibly happy, and I've only gotten happier since.\"\n\nI led her back over to the bed. \n\n\"I had this whole thing in my head as a fairy tale, basically. A massive, fortunate coincidence, where truth is stranger than fiction,\" I said. \"Once of those things that you couldn't script if you tried. And now I find out.. you did exactly that. You planned everything.\"\n\n\"Not everything,\" she said. \"I believe in fate, too, Kevin. You got a job offer in the city I live in. What do you call that? And what about that snow storm? You know, the one that led to us spending all this time together the past couple days and developing this incredible connection? I like to think I can control a lot of things in my life, babe, but I can't make God hit DFW with the worst winter storm in more than 20 years. And meeting you at Wal-Mart... Kevin, I swear, I had no idea you'd be there.\"\n\nThere was a lot of truth in her words.\n\n\"I'm not sorry we met, Kevin,\" she said. \"And no, I'm not even sorry that I set it up. I've never been one to just let things happen to me; if I want something, I chase it. The only thing I regret is that the moment I handed you the breath mints on Wednesday, I didn't tell you everything.\"\n\n\"I told you last night in the kitchen that the worst part of the thing with Kira is that she lied and kept so many things from me,\" I said. \"That would have been the perfect time to tell me.\"\n\n\"Kevin, I knew last night was going to be special,\" she said. \"There is something magical going on with us, and I didn't want to ruin it. I can't say that I regret it, either, because..\" she trailed off for a second. \"Because last night was perfect.\"\n\nI needed to think. A lot.\n\n\"This is just a lot to take in, Brittany,\" I said. I spied my overnight bag, and made a snap decision. \"I'm going to go for a run.\"\n\n\"Uh, what?\" she asked.\n\n\"I run almost every day, when I have the chance,\" I said. \"It keeps me in shape, and it helps me clear out my brain. Right now, that's what I need to do.\"\n\n\"Are you mad at me?\" she asked, a slight look of fear on her face.\n\n\"I don't know, Brittany,\" I answered honestly, quickly throwing on sweatpants, a hooded sweatshirt, and tennis shoes.\n\n\"This is real, Kevin,\" she said, gripping my hand tightly. \"I might have set things up, but I can't manufacture the feelings between us, or what we shared the last two nights.\"\n\nI inhaled deeply. I knew she was right. Still, I'd been so badly burned, and now that I knew Brittany was keeping secrets from me, it made me wonder what else she wasn't telling me.\n\n\"I'm going to run,\" I said. \"When I get back, we'll talk.\"\n\nI stood up, but before I could get out the door, she surprised me by launching herself at me. She pressed me up against the wall and forced her tongue into my mouth, rubbing her bare legs against my crotch. I tried not to kiss her back, but that lasted all of a second. I responded with equal passion, and when she pulled away a few minutes later, we were both panting.\n\n\"Take that with you when you go running,\" she said.\n\nRunning with a raging hard-on proved to be pretty difficult, but after a quarter-mile of making my own path through fresh snow, I found a junior high with a running track. It was covered in snow, of course, but after one lap, I'd made a trail for myself. \n\nMy brain felt like a beachside resort after a hurricane. There were so many thoughts in my head that I really didn't know where to start. On one hand, Brittany was right. Our connection was way beyond physical. Regardless of how they came about, the feeling were real, and the thought of not seeing her again made me want to stop and vomit in the fresh snow.\n\nOn the other hand, I could give forgive just about anything but dishonesty, even if it was lying by omission. The relationship was based on false pretenses. This whole time, I'd been under the impression that we were discovering each other together, when in reality, she knew all there was to know about me before we'd even met. I believed in fate and karma and the cosmos, and knowing that she'd orchestrated everything kind of aggravated me.\n\nI was about three miles in when I made a decision. A few of them, actually. I stopped right there in the freezing cold and made a couple of phone calls. Ten minutes later, I was back at Brittany's house.\n\n\"I need to go,\" I told her. She and her mom were the only ones awake, and by the look on her mom's face, Brittany had told her everything. In fact, I wondered if her parents had known all along. \n\n\"You're leaving?\" Brittany asked.\n\n\"Yeah,\" I said. \"I got called in to take a flight after someone cancelled today. My bosses thought I was spending Christmas alone, too. I didn't tell them my plans had changed.\"\n\n\"Where to?\" she asked.\n\n\"Cancun and back,\" I said. \"Going to pick up one of my bosses, actually, along with a half-dozen other passengers.\" It was a little more complicated than that, but that's all I was going to tell her.\n\n\"Oh,\" she said. You'd have thought she'd just lost her best friend the way her face fell. My heart sank for her. \"What about... everything else?\" Her eyes were a little red and her cheeks a bit swollen, but she still looked incredible.\n\n\"We'll talk about it later,\" I said. \"I really need to get going right now.\"\n\n\"You don't need a shower after your run?\" Brittany asked. She was grasping at anything she could, trying to make me stay a little longer and talk to me.\n\n\"I'll grab one at the office,\" I said. \"I'm sorry about your car being at my place, but I'll take care of it tomorrow.\" I was going to do no such thing, but I knew she'd ask about it.\n\n\"Okay,\" she said, slumping back in her hair and looking dejected. \"Can I have a kiss before you go?\"\n\nI was tempted. Jesus, was I tempted. I so badly wanted to walk over to her, her mom's presence be damned, and lay a liplock on her that would steal her breath away.\n\n\"I don't think so, Brittany,\" I said. \"Not until I figure things out a little more.\"\n\nShe nodded in reluctant acceptance. I grabbed my bag from her room and headed back toward the door. Something made me stop, though.\n\n\"I guess I never actually met you or your husband, Mrs. Pacheco?\" I asked.\n\n\"I think maybe once, at one of the Christmas parties,\" she said. \"But I'm not certain, and even if you had, I wouldn't think you'd remember that.\"\n\nI nodded. I started to walk past them, but she grabbed my hand.\n\n\"Kevin.\" I looked at her. \"Christmas is a time for forgiveness, especially when the one who wronged you did so with the best of intentions.\"\n\n\"I know, Mrs. Pacheco,\" I said, smiling. \"Thank you for having me, and for your outstanding cooking. I'll never forget this Christmas.\"\n\n********************\n\nBrittany looked bewildered, but somehow managed to still ooze confidence as she strode confidently across the tarmac at Addison Field, pushing Alicia in a stroller. From my seat in the cockpit, I felt more than one part of my body react to her impending arrival. Sure, there was the predictable stirring in my loins as a highlight reel from the night before played in my head. But my stomach had enough butterflies to start a colony, and when I thought about everything she'd said and done the past three days, something on the left side of my chest started to ache, as well.\n\nBefore we'd taken off in Cancun for the return trip, my boss and a few others on board, I'd fired off a quick text message to Brittany. \"A car will pick you and Alicia up in two hours. Might want to pack for a few days.\"\n\nI turned off my cell phone right after, so I had no idea how she'd respond. Watching her now, I had at least part of my answer. She was bundled up, of course, but I could see a turquoise turtleneck sticking out of her leather jacket. Her blonde hair was getting tossed around a little by the cold winter winds, and really, that just added to the effect.\n\nShe was pretty much a walking wet dream.\n\n\"So, that's what this is all about,\" my co-pilot, Tommy, said from the right seat as he joined me in the private ogling. \"It all makes sense now.\"\n\nThere was only one other passenger, and he helped Brittany and Alicia up the steps before boarding himself. \n\n\"Good afternoon, folks,\" I said over the intercom when the doors had closed and we were taxiing out. \"The flight should take about two and a half hours, putting us at our destination sometime around 8 o'clock local time. Sit back and enjoy the ride.\"\n\nFifteen minutes later, Tommy and I had the Gulfstream pointed northeast and up at cruising altitude. The cockpit door opened, and the third passenger, Bruce, walked in.\n\n\"How is she?\" I asked.\n\n\"Looks like she's going to throw up, and it has nothing to do with being airsick,\" he replied. \"Her daughter is having a ball, though. Alice brought her some crackers, so I think they're best friends now. You might wanna get back there and calm mama bear down.\"\n\nI got up, and he took my spot in the pilot chair. As soon as I closed the cockpit door, Brittany was out of her seat.\n\n\"I thought that was your voice earlier,\" she said. She ran over to me and gave me a fierce hug. I kissed her on the forehead as we pulled apart. \n\n\"Hey, Alicia,\" I said, crouching down in front of the giddy little girl. She grinned cheesily at me and held out one of her Ritz crackers a few inches in front of my face.\n\n\"Aww, your mama taught you how to share already,\" I said. I gobbled up the cracker straight from her hand, and she squealed in delight. I tousled her dark, curly hair before standing back up.\n\n\"Brittany, you've already met Alice,\" I said, motioning to the woman sitting next to Alicia. \"Not only is she one of the best flight attendants in our company, but she also raised three kids. Are you comfortable with her watching Alicia for a little while?\"\n\n\"Um, sure?\" she replied, but it was clear that she was confused.\n\n\"We'll be right in the back, Brittany,\" I said, \"and there's an intercom where she can call us if anything goes wrong.\"\n\nShe nodded. I took her hand and led her through a door into the back lounge. Black leather couches lined both walls, and there was a wet bar near the back.\n\n\"You want a drink?\" I asked.\n\n\"I want you,\" she answered. She looked into my eyes, almost fearful of my answer.\n\n\"Well, come here, then,\" I said. She was on me in seconds, pushing me onto the couch before climbing on top of me. We made out feverishly for a few minutes, a replay of what had happened on my house at Christmas Eve. \n\n\"What is all this?\" she asked, waving her hands around when we took a break.\n\n\"It's an airplane,\" I responded, and she jokingly punched me in the chest. \"I wasn't entirely truthful with you earlier. I did take a flight this morning, but I didn't have to. This is our company airplane, the one we use to fly our people around. I wanted to use it, but it was going to Cancun to get my boss. I told them I'd take the trip if I could have the plane afterward. So here we are.\"\n\n\"And where are we going?\" she asked.\n\n\"You'll find out when we get there,\" I replied. I pulled her up until we were sitting next to each other on the couch. \"Brittany, I didn't tell you the whole truth this morning, but that's the last time that's going to happen. I've always been a pretty forgiving person. People act out of anger, or they make mistakes, and end up doing things they shouldn't do. We're all human, and I'm as imperfect as anyone else, so I understand. But it's hard for me to forgive a lack of honesty.\"\n\nShe opened her mouth to talk, but I held up a hand to stop her.\n\n\"I look at what you did, and the way you set all this up, as a series of small fibs, white lies,\" I continued. \"Like if I tell you I have to work late, then when you get home, I jump out from behind the couch with 20 of our friends and throw you a surprise party. I think that, given the magnitude of the situation, you should have told me anyway.\"\n\nShe nodded.\n\n\"But given that none of what you did was ever designed to hurt me, there's absolutely no way I can be mad at you.\"\n\nI pulled in her in for one steamy, passionate kiss, then she lay her head on my shoulder.\n\n\"Besides, I think all men would agree that if we have to have a stalker, she might as well be smoking hot.\"\n\nShe giggled as she sat up, but her face soon turned serious. \"I know how important honesty is to you, Kevin,\" she said. \"It is to me, too. That's why I told you about Alicia right away. That was the one dealbreaker for me, if you couldn't accept that I had a daughter. Even if you could, that wouldn't have been fair to you to find out after we had a relationship. I couldn't lie about it.\"",
        "I hadn't even thought about it that way.\n\n\"I told you, honesty was the biggest reason I tracked you down. I never thought of it as lying to you, if that's any consolation. I know how it seems that way now, but I always planned on telling you the truth. I was just trying to find a way to do it that wouldn't ruin what we'd already started to build. I honestly never expected the feelings to grow as quickly as they did. I've really never been that--\"\n\nI put a finger to her lips.\n\n\"You are so fucking sexy when you start to ramble.\"\n\nOur clothes flew off at a record pace. We made use of both couches, and I even fucked her on top of the bar. She was dirty and kinky and flexible and way more into giving than receiving, and I saw in her the potential for the kind of sex life I'd always wanted. Our lovemaking the night before had been perfect, but the raw, unbridled passion we were unleashing on one another now was just as exquisite.\n\nOf course, it ended just like last night had begun -- me laying on the floor between the two couches, with her rocking up and down on me, my cock buried to the hilt inside of her. The only difference this time is that when she came, I did too.\n\n*******************\n\n\"Kevin,\" the voice boomed over the loudspeaker, waking me up. It was Tommy, from the cockpit. \"Starting our descent now, brother. On the ground in about 15 minutes.\"\n\nBrittany was still wonderfully settled on top of me. Her weight felt better than I could have ever imagined. My cock was still inside her.\n\n\"I need to tell you something,\" her voice croaked. It was the same exact thing she'd said this morning, when I found out who she really was. My mind started to race with the possibilities of what she could be keeping from me now.\n\n\"I think I'm falling in love with you,\" she finished. She looked at me and smirked when she saw my look of worry evaporate. \"I had you going there for a minute, didn't I?\"\n\n\"Such a little brat,\" I said, tossing her off of me and rolling on top of her. \"I was about to tell you that I feel the same. But just for that, I'm not going to.\"\n\nI got up and started putting my clothes back on. She lay there for a moment, clearly expecting me to say something more, but I didn't.\n\n\"Kevin, that's not fair,\" she said. \"You can't play with these things.\"\n\n\"Brittany,\" I said. \"I think a tiny little part of me fell in love with you the moment you told me I forgot my breath mints. A little more went the next day, when I learned about your ketchup addiction. And it's just kept going ever since. I can't say I'm in love with you yet, baby. It's been three days. But I can see myself getting there.\"\n\nShe beamed back at me and we finished dressing in silence. We joined Alicia and Alice up front, and I was holding the darling little girl in my arms when the plane touched down.\n\n\"Welcome to Salisbury, Maryland,\" Tommy said, as I'd instructed him to do. \"The temperature here is colder than an eskimo's ass, and if there isn't snow on the ground yet, just wait, it's probably coming. I'm told your party is waiting right inside the FBO. This was a great flight, but I'm guessing y'all enjoyed it even more than we did. Thanks for flying Mile High West.\"\n\nBrittany laughed throughout his monologue, but she started giggling uncontrollably when he hit the end.\n\n\"I didn't even think about it, but I guess I'm in the club now,\" she said.\n\n\"We both are,\" I said. \"That was a first for me, too.\"\n\n\"You're taking me home with you!\" she continued when the reality of where we were going sank in.\n\n\"I met your family yesterday,\" I said. \"Only fair that you meet mine. Again.\"\n\nMy mom and dad were sitting on a couch inside when we walked in.\n\n\"Mom, you remember Rita Pacheco, of first date infamy, don't you?\" My mom's eyes lit up when she saw her. \"She's going by Brittany now, but it's her. Brittany, this is my mom. You called her Mrs. Collins then, but I'm guessing she'd be fine with Cindy now. And my dad, Max.\"\n\n\"Little Rita Pacheco,\" my mom said. \"I never liked what my boy did to you back then. I hope you make him pay for it for a long time.\"\n\n\"Oh, I think we're even now,\" Brittany said, giggling at the attention. My mom looked the question at me.\n\n\"Long story,\" I said. \"Another time.\"\n\n\"And who is this little one?\" my dad asked as Alicia grasped onto Brittany's leg.\n\n\"My daughter, Alicia,\" she said, picking her up. \"Kevin insisted she make the trip.\"\n\n\"Of course he did,\" my mom said. \"He's always wanted kids.\"\n\nI rolled my eyes as we made our way out to the car. The ride back to my parents' house was a short one. Brittany's eyes went wide when she saw the house; a three-story mini-mansion that sat on 30 acres about a half-mile from the Wicomico River.\n\n\"When we lived in Izmir, my dad was in charge of all of the financial dealings for the entire base,\" I explained. \"Now, he's in charge of all the financial dealings for the local medical center.\"\n\nJanet, my sister, met us at the door. She was there for the famous first date as well.\n\n\"I remember you,\" Janet said, giving her a hug. \"You were so tiny back then.\"\n\n\"Not a lot bigger now,\" Brittany giggled. \"I remember you laughed at me the day he broke up with me.\"\n\n\"Yeah, well, he's not the only one who did stupid things in his youth,\" Janet said. \"I should have been kicking his ass. Back then, having a girlfriend five years younger was absurd.\"\n\n\"Now, at my age, it earns you respect,\" I said. They both giggled. \n\n\"Mom says you make him happy,\" Janet said. \"That's all that matters to me.\" They hugged, and Janet disappeared down the hall.\n\n\"I'll take Alicia to the guest bedroom and get her situated,\" my mom said. \"Go into the kitchen. There's a present for you two.\"\n\nEveryone shuffled into the back of the house, and it was completely silent at last. \"This is insane,\" Brittany chuckled, hugging me tightly. \"I love it.\"\n\n\"Certainly not what I was expecting to be doing for Christmas last week,\" I agreed. \"Let's go see what my mom's talking about.\"\n\nI should have expected it, but somehow, it took me by surprise. Brittany just laughed heartily. On the table were a plate of Chips Ahoy cookies and two glasses of milk.\n\n\"I propose a toast,\" I said, taking one of the cookies and dunking it. \"To conniving girlfriends.\"\n\nBrittany giggled. I held the cookie up to her lips, and she took a bite. Then she grabbed a new cookie and dunked it.\n\n\"To second first dates,\" she said. I took a bite of her cookie. \n\nWe put the glasses down, and I held her tight as we danced to music only we could hear. I buried my nose in her hair and muttered.\n\n\"To milk and cookies.\"\n\nAgain, this is my entry in the 2012 Winter Holidays contest. This is my first contest entry, and I don't write short, so, the one-chapter limit made this a very long chapter. Thanks for getting this far. If you liked it, vote, comment and send me feedback! I promise.. going back to the Brad series now!  "
    ],
    "authorname": "SpotInTheSand",
    "tags": [
        "kevin",
        "brittany",
        "milk",
        "cookies",
        "christmas",
        "blonde",
        "airplane",
        "turkey",
        "mile high"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/milk-and-cookies-2"
}