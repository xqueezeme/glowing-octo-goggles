{
    "title": "The Twelve Vitali Ch. 06",
    "pages": [
        "Authors note: Hello everyone. Thank you everyone for the positive feedback and comments they mean the world to me and have brightened my days. I hope you enjoy this series despite its differences to the original story. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\n\"So, you had questions?\" Matteo asked, taking coffee from her and sitting on the comfortable couch in her apartment after driving her home.\n\n\"I did. I mean, I do. I guess I have even more questions after tonight,\" Cat sighed.\n\n\"Why the big sigh? You look beautiful, you mingled with a very elite crowd, and no one even questioned if you belonged there, and to deal with my brother, keeping him at arm's length without seeming too distressed, except that one moment,\" he commented. \"I would call that a successful night for both of us.\"\n\n\"Both of us?\" she frowned.\n\n\"That moment gave me an opportunity to test out any concerns you might still have about Ricco finding out we were dating,\" he said, and seeing doubt flicker over her face he continued. \"You also told me you were awkward and felt you didn't fit into that sort of social gathering. That obviously isn't true and will save some time in preparing for the roles we must play,\" he said simply. \"Maybe it was the dress,\" he conceded. \"I don't think any of the men could take their eyes off your cleavage long enough to actually have a proper conversation with you!\"\n\n\"You don't seem to be having any trouble talking to me,\" she tilted her head.\n\n\"Oh, trust me, I'm having problems, I just hide it better. I'm only human, Cat, and you are a very beautiful woman when you are not hiding behind those baggy clothes and long fringe,\" Matteo admitted. \"It's taking some willpower to keep my eyes above your neckline. So, distract me with your questions.\"\n\n\"This commission is going to be a big project and could take me anywhere between six months to a year to complete. I don't know what your time frame is or what you expect from this partnership time-wise,\" Cat said tentatively. \"I don't want to put my entire life on hold for you. At least not until we are sure that things will work out, and, if I am honest, I really want this commission.\"\n\n\"That's fair,\" he agreed. \"Dante's asked me to consult on a project here that could keep me busy for a while, and flying in and out of here rather than Melbourne wouldn't be an issue. I travel a lot anyway, so it's better if you have your own work commitments. We could probably negotiate a few short-term trips to Melbourne to visit your brother and attend family functions while people get used to seeing us together as a dating couple,\" he seemed to think through the situation as he spoke. \"Six months is certainly a reasonable time for busy people like myself to be dating before becoming serious and getting engaged.\"\n\n\"So, we'd work out a timeline and date for a few months, move in together and be seen in the right places, for a year while I'm here in Brisbane?\" she asked, following his logic.\n\n\"If you finish the commission we can return to Melbourne earlier. The timeline won't be too onerous, as I said, I travel a lot, you will have as much space as you need or want from me,\" he reassured her. \"Does this mean you will accept the partnership proposal I am offering?\"\n\n\"I need to know that it won't be an issue between you and Ricco, first. He seemed strained tonight before you pulled that stunt kissing me like that in front of him as if claiming your territory. I'm not a property you can just lay claim to, Matteo!\" she sighed again and sank into the corner of the couch opposite him. \"While I don't want to renew that relationship with Ricco, I can't be the cause of tension in your family. It matters to me a great deal that this partnership won't cause problems for you or him,\" she knew she sounded conceited saying that, but Ricco's appearance and words tonight had thrown her more than she thought seeing him again would.\n\n\"You said you split up amicably.\" he reminded her. \"He told me himself that he wished us well. Where's the problem?\"\n\n\"We did, but rubbing it in his face isn't good for anyone,\" she paused and looked up at him. \"The truth, tell the truth and it can never come back to bite you,\" she said, lecturing herself and making him raise an eyebrow. \"I overheard a conversation I probably shouldn't have a little while before Ricco and I broke up.\" She went on to tell him what she had overheard between father and son and the subsequent conversation with Roberto.\n\n\"I suspected as much. That just makes Ricco an idiot who deserves to lose you forever, but I understand what you are saying and will be more considerate of his feelings and yours,\" Matteo assured her. \"Anything else?\"\n\n\"That story reminded me to tell you that you need a new sales manager at the Wattle Estate you just built, the estate for low-income earners. If my brother hadn't had his heart set on the gated community there I would have walked away from that awful, sleazy salesman and never come back,\" she told him. \"He can't possibly be doing you any favours there.\"\n\n\"Sales have been slow,\" he acknowledged. \"I'll look into it, thanks.\"\n\n\"While we're on the subject of property,\" she continued. \"I'd rather have a gallery at Princetown and live at the house on the hill, if you wouldn't mind me redecorating and maybe renovating a room or two. Ricco said you were thinking of selling, but that would be such a shame, it's so beautiful there. Ricco taught me to ride. Horses aren't nearly as scary as I thought they would be.\"\n\n\"Did he?\" His head came up in surprise, and he tried to school his voice and features. He felt a little pissed that Ricco had taken her to his house to teach her to ride. His brothers were always welcome there, but this somehow felt like a violation, especially with Cat sitting on the couch with him looking so tempting. He imagined her on horseback and found the vision more than appealing. At that moment he wanted to lean across and... He shook himself, no, this was going to be a friend and business partner, he couldn't think of her that way. Could he?\n\n\"We can discuss that when you return to Melbourne,\" he said more abruptly than he had meant to and saw her eyes flash at him. In other circumstances he would enjoy subduing Cat. The only thing he missed about Nik now was the constant battle that was their sex life, and he imagined that the woman sitting across from him would challenge him in the same way. He felt his cock stiffen at the thought and fought to drag his thoughts and his eyes back to her face and their discussion.\n\nCat considered him for a long moment after he had abruptly shut down any further questions about the house on the hill. He seemed lost in thought and slightly uncomfortable, and she wondered about who had lived there with him. Was it Nik? She wondered. It was none of her business, of course, but, still, if they were to be friends and partners shouldn't she be able to ask and expect an honest answer? That was the premise he had sold her last night, total honesty between them. She noted that his eyes dropped to her breasts more than once during the prolonged silence, and she steeled herself for the big question she needed to get through.\n\n\"So, we'd be friends, best friends even, and business partners?\" she asked carefully, wrapping her head around this idea of a mutually beneficial albeit loveless marriage.\n\n\"Yes,\" he said warily, sensing something more behind the question.\n\n\"What about intimacy? Do you expect intimacy, or would that be blurring the lines of the relationship too much? Would you expect me to live like a nun? Would you be expecting to be able to keep a mistress or a hooker somewhere on the side, and would I be able to do the same? As you said earlier, we're only human, and while in theory this partnership could work, I am just trying to work out the kinks. I'm sure your family would notice if we never touched or kissed each other,\" Cat said, and despite her best efforts she felt the heat of a deep flush colour her face.\n\nMatteo gaped at her, his mind whirling. He had expected to be able to keep a Kept discreetly to service his needs, but he had not honestly considered her physical needs in that way. What had he expected? He knew that the idea of her using a Kept or having a clandestine affair was repugnant to him, and he stared at her in silence as his mind worked over the problem.\n\n\"Were you expecting to schedule conjugal visits so I could produce an heir for your family to fawn over?\" she said, her voice hardening as his silence continued. \"Do you expect a friend with benefits? You have to have something to cover this in that plan of yours.\"\n\n\"Intimacy is something we would need to negotiate,\" he said finally. \"Yes, there would need to be public displays of affection while we are dating, and even engaged, but beyond that is something we will need to negotiate once we have determined the timeline. I'm sure we are both capable of satisfying our own baser urges until we reach that point.\"\n\n\"Explain precisely what your version of public displays of affection are,\" Cat prompted him further. \"Do you plan to claim me as your property like you did tonight every time we see Ricco, or, god forbid, someone makes a pass at me?\"\n\n\"You're right, you're not property, but this is a business partnership I am proposing here, and for all intents and purposes we are both offering ourselves as viable commodities for what we can bring to this partnership,\" he said in obvious frustration with this line of questioning. \"Hand holding, embraces, the occasional kiss, nothing too deep or intimate, but enough that people believe we are a couple in love,\" he let out a long breath.\n\n\"Would you say tonight's kiss was not too deep or intimate?\" she asked, tilting her head.\n\n\"No, but that kiss had a purpose,\" He admitted.\n\n\"So, when it suits you or the situation we can discard the rules we set up?\" she asked, narrowing her eyes.\n\n\"Intimacy isn't something we have to decide on right now, is it? We both have needs; you have made that very clear. It's getting to know each other's wants and needs and keeping them within the boundaries of the partnership,\" he said, painfully aware of his attraction to her. Maybe this was a mistake after all. Finding a girl who appeared to have given up on love as much as he had seemed too good to be true last night, and now as he watched her he wondered what he had been thinking asking a girl he had known for an hour or two to accept a proposal like this.\n\nThis side of the partnership was not something he'd given a lot of thought to, but it was obvious that she had. He wondered what kind of woman she was in the bedroom. He had read the complete background check on her, including the attack and rape she had gone through, and he wondered how she was still functioning and asking these types of questions. Surely being intimate with another man becoming vulnerable to another person again would be as hard for her as it was for him. His mind settled on his brother who had broken down any walls she had up after the attack and then hurt her in his own way. Maybe there was more to the attack than he could know just from reading the report. He considered how to ask that question tactfully.\n\n\"We can take it all as slowly as we need to as long as we are on the right track, together,\" Matteo reached over, took her hand and looked into her crystal blue eyes. He suddenly felt protective of her and wanted to take the look of panicked worry and concern from her eyes. \"You can do this, Cat. We can do this, together,\" he squeezed her hand. \"We can count this as a first date.\"\n\nThey lapsed into silence again as they finished their coffee. He knew he needed to slow down, weigh everything carefully, come to terms with his attraction toward her, but the more time he spent with Cat, the surer he became that she was the perfect partner for him. She had proven tonight that she could not only look the part but act the part within his social circle. Through it all, though, she had remained herself; straight talking and honest, the qualities he liked best about her, despite the fact that his eyes landed on her breasts yet again and the bulge in his pants was threatening to become an embarrassing size.\n\n\"Maybe you should change into something more comfortable before we talk any more about intimacy. Maybe I should remind you that I'm only human, Cat,\" he said, admitting that he felt an attraction toward her again. The dress was having too big of an effect on him, and he needed her to cover up now that they were alone so he could concentrate on the contract.\n\nNo other woman since his breakup with Nik had affected him quite so much, and the feeling confused him. Perhaps having the closure from finding out the real story about the woman who had destroyed his ideas about love had finally helped him to start healing. That didn't mean he would ever put his heart on the line again and be vulnerable, but it certainly made him appreciate the benefits of having Cat in his life as his pretend girlfriend, and eventually fianc\u00e9 and wife.\n\n\"Yeah, honestly, I've been dying to get out of this dress since I put it on. I won't be a moment,\" Cat gathered some yoga pants and a sweatshirt from a drawer near the bed and walked into the bathroom, the only separate room with walls in the vast space.\n\nHe resisted the urge to offer to help her. He remembered the first night when she had gone to have a shower, and he had almost offered to help her then too. His attraction to Cat had always been there from the moment she had taken off the paint that had marred her pretty face and he had looked into her crystal blue eyes. Maybe intimacy should be a bigger part of the deal, he considered. Intimacy didn't automatically lead to love or putting his heart on the line. He'd had multiple affairs over the years, and they meant nothing to him, it was a purely physical and chemical attraction. He didn't make love to women, he fucked them, and he did it his way. He chuckled, knowing he was kidding himself. As friends and partners they would grow to care about each other, and it would be difficult to separate those feelings from any intimacy they shared. No, he had to have rules around intimacy to protect himself and his heart. He had almost convinced himself that his weakening resolve around sex with Cat was just a momentary aberration until she walked out of the bathroom.\n\nCat had scrubbed the make-up from her face and had pulled her hair into a long messy ponytail. She wore a light sweatshirt and yoga pants, and to Matteo she looked just as beautiful as she had before she had changed. He seemed to be in a constant battle with his libido tonight and, distracting himself, he stood and took his cup to the kitchen.\n\n\"I... umm... Do you want to sleep on the couch? We'll have to be awake in a couple of hours anyway,\" she offered.\n\n\"No, I'll need to shower and change, I'm not going riding in a tux,\" he chuckled and reached out to tuck a stray strand of hair behind her ear. \"You're just as beautiful like this as you were at the party tonight,\" he said softly. \"We need to think about and talk about the intimacy thing carefully. Not because I'm not attracted to you, but because I don't do romance. I don't make love. I fuck, and I have very particular tastes when I fuck. I know we could be great together, but that sort of intimacy could also mess things up if we aren't totally honest about what we want and need in all the other areas of our life together first,\" he confessed his true feelings on the matter.\n\nCat looked up at him, curiously searching his eyes, and unable to resist her any longer he lowered his head and kissed her softly without the depth and urgency of their earlier kiss just after midnight.\n\n\"Goodnight, Cat,\" he said in a soft voice, and walked to the door, turning back to look at her before stepping through it and closing it behind him.\n\n\"Goodnight, Matt,\" she whispered at the closed door, feeling confused and more than a little unsettled by his words.\n\n*****\n\nCat woke up with a fright. There was someone in the apartment. She sat up, and seeing Matteo relaxed slightly and pulled her knees up, wrapping her arms around her legs.\n\n\"So you have a key,\" she said, wondering why she was surprised about the fact.\n\n\"Well, this week is a trial, and I believe you still have a key to the apartment I am staying in,\" He countered easily and smiled, walking toward her with a fresh cup of coffee. \"Good morning,\" he said, and sat beside her on the bed. He hadn't slept, he'd stayed awake all night going over his plans and considering what the biggest hurdles were for her, as well as how to show her that she could trust him to be true to his word. It came down to honesty and trust; they would need both in absolute measures.\n\nHe waited until she took a sip of the brew and seemed to relax, moving to sit cross-legged and look at him. He leaned forward and kissed her lightly, his lips barely grazing over hers.\n\n\"We'll have to get going soon, but first, just to show you that I understand there are history and issues between you and Ricco,\" he took out his phone and placed it between them with Ricco's contact details showing on the screen. He hit the call button and put it on speaker. He had most of his conversations on speaker while he was multitasking, so he knew Ricco would think nothing of it.\n\n\"Hey, Matt, what's up?\" Ricco answered the phone straight away.\n\n\"I'm not disturbing you, am I?\" Matt spoke easily with the relaxed familiarity of talking to his brother.\n\n\"Saved me, Maryanne and her brother, Ben, are tripping down memory lane, and Cobi is eating it up,\" he said distastefully, making Matteo chuckle.\n\n\"Speaking of women like Maryanne, I got the feeling you still had a thing for Catriona Leone last night,\" Matteo's casual tone belied his interest. \"You planning on going there again? I don't want to get in your way if it's the real deal, you know.\"\n\n\"Cat's not like Maryanne,\" Ricco chuckled, \"She's amazing on a whole different level.\"\n\n\"So, you're planning on seeing her again, renewing the relationship, or what?\" Matteo asked.\n\n\"You're the one who said he had a date with her,\" Ricco said stiltedly. \"Why the interest?\"\n\n\"After seeing you with her last night I just didn't want to have any weirdness about us being brothers,\" he said, remembering the look on their faces as they spoke in the garden.\n\n\"Geez, I dunno what to say, Matt,\" Ricco said into the silence. \"I'd be lying if I said it didn't bother me, it does. It wouldn't matter who she dated. It would bother me on some level, but, I suppose, at least I know you're a good guy and wouldn't be an asshole to her.\"\n\n\"So, if you care so much why'd you let her go?\" Matteo asked curiously. \"You know I'll cancel the date if you think you still have a future,\" he offered.\n\n\"No, it's over, I was an asshole, let's just leave it at that,\" he sighed. \"Enjoy your date, Cat's an amazing woman,\" Ricco said. \"I'm good with it, if that's what you needed to hear.\"\n\n\"Yeah, I love you man,\" Matteo said, hearing the pain in Ricco's voice. \"Don't let Cobi mess your life up too much, you know nothing is absolute, right? Even for a second son?\"\n\n\"You're one to talk,\" Ricco chuckled. \"Don't worry about me. It is what it is, and it's too late to go back and undo the damage. Have fun, I mean that sincerely. I'll catch up with you when you get home and have time for a beer.\"\n\n\"All right, catch you later,\" Matteo said, and waited until Ricco had ended the call before turning off his phone and putting it back in his pocket.\n\n\"You good with that?\" Matteo asked, looking at her carefully and noting her glassy eyes.\n\n\"Mmhmm,\" she nodded, unable to trust her voice. Matteo had done that for her benefit alone; knowing his bond with his brother was strong enough to withstand anything. She was grateful to him that he had shared it with her. Ricco still cared, as she did about him, but, as he said, the damage was done and their circumstances hadn't changed, it could never work between them. \"I needed to hear that, thank you,\" she whispered and pulled herself up straighter. \"I guess it will take some time to work out the kinks in this partnership agreement. How long are you in town for?\"",
        "\"As long as it takes to get a contract drawn up that we are both happy with,\" he gave her a goofy smile, feeling a strange sense of joy that she had finally agreed to do it. \"It will be worded like a basic prenup, most probably. I can do the basic work on it, and we can probably ask Romy Donati to put in the unbiased legalese stuff. Aside from him, no one will know the true nature of our relationship.\"\n\n\"We'll do the whole first date thing tomorrow night. Favourite flower and colour?\" he asked.\n\n\"Champagne pink roses,\" she said with a smile. \"It's a fairly broad spectrum that you can't get wrong, but I prefer the golden shades to the girly pink shades. You?\" she asked.\n\n\"Can't say that I have a favourite flower, but I guess blue is the colour, not the deep, dark kind of blue, but I like clear crystal blues, like your dress last night,\" he said, stopping himself before likening it to her eyes. \"This isn't about me though; it's about you and our first official date tomorrow. Today, however, we ride!\"\n\n\"You will ride, cowboy. I will be back at base camp panning for gold,\" she laughed, and at his confused look she shrugged. \"It's a figure of speech, I'll just be doing a little research for the commission Peri has asked me to do. It involves some of the family members, so I may as well ask their wives about them.\"\n\n\"About that commission,\" he said in a businesslike no-nonsense tone. \"I get how important it is to you, but if Peri tries to usurp all your time can you throw my name in there with the word date, so she understands that you have other commitments too?\" he said in a commanding tone.\n\n\"Yes, Sir,\" she grinned in response to his business-like commands and persona.\n\n\"Seriously, the sooner we iron out all the details, the better we will both feel,\" he said softly. \"We need some time together, alone, to just talk about what it is we want and need from this partnership. Plus, I don't want the dating phase to drag out for the full year if we can help it. My father's health is not improving, and I want him to relax and retire without having to worry about me and what I'm doing with my life.\"\n\n\"You should call Roberto tomorrow. He knows me pretty well, and he mightn't be happy with the idea of his son marrying a girl from... well, the wrong side of town,\" she smiled crookedly. \"It might make him worry even more, especially given the fact that a couple of months ago I was dating Ricco,\" she added, remembering the conversation she had overheard and his words to her.\n\n\"Also on the tomorrow list now,\" he promised. \"Unless you'd like to hear what he says?\" he started to fish his phone out of his pocket.\n\n\"No, I don't need to know what he says. You're doing this for him, after all. If he didn't approve what would be the point?\" Cat shrugged.\n\n\"What would be the point, indeed,\" he echoed her thoughts and felt oddly uneasy about the idea that either of his fathers would warn him away from Cat.\n\n*****\n\n\"You must be Catriona,\" Louisa smiled as she welcomed Cat into her house.\n\n\"I've been looking forward to meeting you. Your website is wonderful, you're very talented,\" Louisa waddled back into the house, leading them to a sitting room where she was going through catalogues from some baby stores. \"Can I get you tea or coffee?\"\n\n\"You sit, I'll get it,\" Margarite chirped happily.\n\n\"I didn't realise Peri had shared the website with anyone,\" Cat frowned. \"I guess that's a good thing, so you all know what to expect from my style, in some ways.\"\n\n\"I haven't seen it, I didn't even know there was one,\" Margarite laughed, \"But that's not unusual, I am usually the last to know anything.\"\n\n\"Peri and I used to work together before she met Josh, I've known her for years, and we both have an arts degree and a fascination with the visual arts and antiquities. She's been looking for just the right artist for a while, so we were both excited when Dante found you down in Melbourne. He's a gem, that man, always seems to be in the right place at the right time,\" Louisa said with a genuine fondness. \"I dated him for a little while, but I think Dante was already in love with Peri and just in denial at the time. Just as well, because that's how I met Carlo.\"\n\n\"You dated one brother before dating another?\" Cat's interest was peaked.\n\n\"Yes, but Dante and I never would have worked out; we didn't have one of those great \"How I met your mother\" stories that all solid couples need to have,\" Louisa Laughed. \"You should ask Dante to tell you how Josh met Peri one day, he always tells it best. It's the craziest story ever!\"\n\n\"A \"How I met your mother\" story?\" Cat asked.\n\n\"You know how a couple first meets, or a first date story that's beyond awesome. You have to have one of those stories or you're doomed,\" Margarite explained patiently. \"Did you say you wanted coffee?\"\n\n\"I've already had two this morning, so maybe I should stick to water, or you will be scraping me off the ceiling,\" Cat shook her head. \"Can you tell me your story? The \"How I met your mother\" one?\"\n\n\"Oh, sure, but mine isn't as good as Peri's,\" Margarite lamented.\n\n\"I am sure it is amazing, you and Larry seem so much in love.\" Cat encouraged.\n\n\"Isn't he dreamy,\" she sighed. \"I just adore every little bit of him.\" She seemed to consider Cat for a moment. \"I hate to be rude and not tell you my story, but it's sort of related to stuff we don't really talk about with people who aren't family.\"\n\n\"I signed a non-disclosure for Peri so people could tell me their family stories without worrying about saying anything they shouldn't,\" Cat hastened to reassure her, and both women visibly relaxed.\n\n\"That's different then!\" Margarite bubbled. \"My family all live in the Victorian Alpine region, with snow and fireplaces and freezing cold winters,\" she shivered and pulled a face. \"It's the Amarti family up there. Anyway, my father had told me one of the Donatis' was coming to visit, and that he wanted me to meet him,\" she rolled her eyes. \"I didn't want to meet an uptight old-fashioned guy in a suit. The Donatis' have the most powerful family table, mainly because they hold to the old laws and traditions the closest, and because of that they have the respect of the other powerful families. So, you can imagine that I thought whoever was coming was going to be the biggest bore ever, and no one wants to be set up on a blind date by their father!\"\n\n\"Your father introduced you to Larry?\" Cat asked, thinking Margarite had been right and there wasn't a lot of awesome in that story.\n\n\"Not exactly, when this uptight bore in a suit was supposed to arrive I went snowboarding with friends instead. While I was out snowboarding one of my girlfriends spotted Lorenzo Manuel, who was well known on the extreme sports circuit, though he mostly raced bikes. So we stalked him and watched him until I realised the guy he was snow-boarding with was my brother. My friends and I immediately went over and said, \"Hi.\" Honestly, it was love at first sight, and we spent the whole afternoon together. He said he had a family thing to go to and that he'd meet me later that night in the resort bar for a nightcap, and I agreed, racing home to get ready for my big date. By this time I had totally forgotten about the bore my father wanted to introduce me to.\"\n\n\"I think I see where this is going,\" Cat said.\n\n\"Can you imagine that the guy I'd ranted and raved at my parents about not wanting to meet or go out with on a blind date was the same guy I'd just fallen madly in love with?\" she grinned.\n\n\"That is an awesome story, don't let anyone tell you it's not as good as theirs,\" Louisa said with a wide smile. \"Yours is about love at first sight and finding your soul mate. Peri and Josh's story is hilarious, but it wasn't love at first sight, and don't ask me to tell it. I can't do it justice, but if you're at a family dinner ask Dante, he never misses a chance to tease Josh about it.\"\n\nCat continued to ask questions about Carlo and Larry, getting to know not only the two men through their wives' eyes but also some of the strange laws and traditions of the Donati family, and she realised the other twelve families as well, including the Vitalis'. She understood now why there seemed to be two fathers in the Vitali family.\n\n\"The neighbours are at it again,\" Lucia announced as she walked into the house without knocking. \"I wouldn't count on seeing your menfolk again today unless you go and collect them.\"\n\n\"Ooh, who started it this time?\" Margarite clapped her hands again.\n\n\"The king of the kids, who else could get Dino out of bed on New Year's Day. He sent an emergency SOS to Dino's phone that had him running over here,\" she shook her head. \"Come on, ladies, the neighbours are expecting us.\"\n\n\"Who is the king of the kids?\" Cat asked Margarite, liking the effervescent young woman.\n\n\"Josh,\" she giggled. \"He and Dante are always declaring some sort of war when all of their nieces and nephews are there, it's loads of fun. Last year they brought in four small excavators and had a competition to build the best mud castle on one of the neighbouring properties they had just bought.\"\n\n\"Wow,\" Cat said as she followed the women out of the house to Lucia's Range Rover.\n\n*****\n\nThe Donati estate was a mass of noise and confusion as men and children scrambled around large obstacles wearing vests and carrying laser guns. The most amazing tree fort she had ever seen teemed with children all shouting and running for cover. It had been declared a kid only zone, but, as the King of the kids, Josh took cover there as well.\n\nCat sat watching all of the men play with each other and the huge crowd of children. She could see the different personalities she had got an inkling of from comments the rest of the family had made over the last forty-eight hours, especially the two women she'd had brunch with. She could see Ben watch everyone protectively, and Dino act similarly, his size and his strength showing clearly as he took careful aim at one of his brothers. Each of the other men all had traits that she could see worked in harmony with their teammates.\n\n\"Hey,\" Matteo jogged over to her wearing a vest. \"How was your morning?\"\n\n\"Good,\" she laughed. \"I'm a little overwhelmed by the sheer numbers of people here. You stay and play, I'm thinking of trying to find a quiet corner so I can do some sketching.\"\n\n\"You okay if we stay for an early dinner and then head back?\" he asked.\n\n\"Of course, I have work to do, and being here is perfect for that. The sooner I get it done the sooner we can move on your project,\" Cat said lightly.\n\n\"Good thinking, smarty pants,\" he grinned and whirled around as a group of tiny children all charged at him with Dante, and he swooped the little girl into his arms. \"I have your leader,\" he growled in a mock pirate voice. \"Yield or the Pirate Princess gets it!\" he held the squealing little girl above his head, making Cat laugh as Dante immediately yielded, but the little boys kept charging. \"Your brothers aren't too bright, are they, Eden,\" he chuckled as the boys danced around his legs and he tickled the little girl. \"If that was a sneak attack you need a better crew,\" he advised Dante.\n\n\"That wasn't an attack, these are our secret weapon to get the King of the kids out of that tree fort,\" Dante waggled his eyebrows. \"Where's your Dada, Eden?\" Eden immediately began calling for Josh loudly in a high-pitched squeal. \"We capture the King, and we win,\" he chuckled. \"Check and mate.\"\n\n\"Alright, boys, let's go find Dada,\" he picked the wriggling boys up in each arm and marched toward the tree fort.\n\nCat curled on a couch with her sketchbook, keeping half an eye on the tree fort battle. She'd begun a light sketch based on an image she got from this morning's activity. The movement and noise around her suddenly stopped, and she looked out to the tree fort again.\n\n\"You can't win with those hostages,\" Josh called in a loud booming voice, \"Because I've already stolen your queen!\" He pulled Peri onto the balcony with him. \"Rule number one, always protect the queen!\"\n\n\"You're all fired,\" Dante said to his brothers disgustedly. \"Beaten by a bunch of kids!\" He raised his voice and shouted, \"We yield, give us back the Queen or I will unleash my secret weapon on you!\"\n\n\"Never!\" Josh raised his fist, and the kids cheered.\n\n\"Release the queen, or there will be Brussel sprouts for dessert tonight!\" Dante threatened, and Cat laughed, as he could see a few of the kids' waver in their commitment to Josh.\n\n\"And,\" CJ came to stand beside Dante, \"I think I may have forgotten the Wi-Fi password I just changed. Did I text it to you, Carlo?\" He smirked.\n\n\"Not me, Ben might know, he knows everything, but you know how much he hates losing,\" Carlo said sadly. \"Plus, I think he lost the key to the garage where the quads are, so he's a bit cranky at the moment anyway.\"\n\n\"Fine, you can have the queen, but dessert better be awesome!\" Josh grumbled and helped Peri from the tree house. \"Besides, we already won, we don't need her anymore.\"\n\n\"He's got you there, Zio D.!\" Christo, one of Angelo's sons shouted down.\n\n\"Alright, we'll call it a draw, this time,\" Dante conceded, and a huge cheer went up.\n\nCat remained curled on the couch in the corner as the chaos moved closer to the house. She watched each of the men interact with each other and their families and smiled. These people genuinely loved and enjoyed being together as a big noisy group, that was obvious. Matteo melded in as if he had always been part of the family, and she wondered what big gatherings with his family would be like.\n\n\"How are you doing?\" Matteo came to check on her again.\n\n\"It's a lot to take in,\" she said quietly.\n\n\"This is just the inner circle, wait until all of the family arrive in a few weeks,\" Matteo said with a chuckle. \"There will be hundreds of all singing, all dancing, Donatis'.\"\n\n\"Is your family like this when they are all together?\" she asked.\n\n\"At times, I guess. We have different traditions, we probably don't get as excited about waging war on each other as these guys do,\" he explained.\n\n\"They do seem to love a good battle, from what I gather,\" she laughed.\n\n\"You have no idea! I guess the holidays are for the kids though,\" Carmen said, as she and Romy came to sit with them. \"It's good to see you, Matteo, it's been far too long. I hadn't expected to see you running around with the pirate king today.\"\n\n\"The pirate king? I thought Josh was King of the kids?\" Cat asked, trying to keep up.\n\n\"He is, but a few years ago we were going through a bit of a rough time as a family and my brothers and I took Dante on a deep sea fishing trip to say sorry for getting him shot,\" he began his story.\n\n\"Dante was shot?\" Matteo said, obviously startled by the news.\n\n\"It was just after Nik died, and you weren't really talking to any of us back then,\" Romy considered Matteo, who nodded in acknowledgement. \"Anyway, we were out there relaxing on a dinghy in the bay,\" he paused. \"We were just having a quiet break from the world when Dante appeared wearing a pirate hat and told us all we were prisoners of the pirate king. The next thing we knew Josh, Mama and Papa were speeding toward our little dinghy with all of the kids shaking swords and yelling pirate curses. It was the last big adventure we had with Mama and Papa before they died.\" His voice became sombre.\n\n\"You had all of these people and these children in a dinghy?\" Cat asked incredulously.\n\n\"He means a small yacht, Cat, not a dinghy,\" Carmen laughed and let her husband go on.\n\n\"Anyway, Dante had been shot, so Pete wouldn't let us make him walk the plank, so he still claims it as a win. We made Josh walk the plank instead because he was the only one who had to bring his Mama to keep him safe that day,\" Romy chuckled, obviously enjoying the memory.\n\n\"None of your wives went?\" Cat asked. \"Not even Peri?\"\n\n\"The only woman on that dinghy was Mama, because she had to come to look after Josh. He is the baby brother, after all, he needs more looking after than the rest of us,\" he smirked.\n\n\"That might be because he has so many older brothers picking on him,\" Matteo chuckled.\n\n\"Don't even think about joining team Josh,\" Dante warned Matteo, as he came to sit with them, having finally convinced his children to go with their nannies for a small rest. \"He already has Dino, and that guy is a one-man army.\"\n\nCat's fingers worked absent-mindedly as she listened to the men talk. Her sketched becoming more detailed and morphing into different concepts as the afternoon wore on. Sitting in her one spot, it seemed as if they all ebbed and flowed around her, making sure they spoke to everyone. It seemed to Cat as if they were engaged in a delicious dance around each other and their wives.\n\n\"I've come to steal Cat away from you again,\" Pete announced, holding out a hand to her.\n\n\"I can't catch a break in this family,\" Matteo shook his head. \"I think I need to take her back to Melbourne just to get a proper date alone with her.\"\n\n\"Probably,\" Pete agreed with a perfectly straight face before guiding Cat inside. \"I thought you might need a break from all the chaos,\" Pete murmured. \"Angelo would like a chat as well,\" he said, leading her into a library.\n\n\"Are you a history buff, like Peri?\" Angelo asked, as Cat was ushered to a chair.\n\n\"Only when researching a piece of art I'm doing, although this is a first for me where I didn't already know most of what I needed,\" she answered thoughtfully.\n\n\"Great, you get the short version then,\" Angelo's chuckle was full of relief. \"Way back in our family history the Donati family joined with the extraordinarily wealthy Medici family, and a bank was formed to look after the family members and their needs. So, while the family all had their own careers and finances, it became a place to go for no interest loans and sanctioned financial gifts. I am the current president of the family bank.\" He finished his explanation.\n\n\"I see, but that's not the sort of research and information I am looking for. I am more curious about your personality and relationship to your brothers, that sort of thing,\" she said quietly, unsure of the giant sitting across from her.\n\n\"Ah, here is where the rub is and why you need to know that information. The job you are doing is for the family, and as such, as much as Peri is steering the ship, so to speak, I will be the one funding the project, so we need to iron out a few details. As we have a little time today, and it will save me a trip into the city tomorrow when I would rather just be relaxing with my family,\" he pulled a leather case in front of him and unzipped it.\n\n\"I understand Matteo found an artist's loft in South Brisbane and is letting you use it for the time being?\" he asked.\n\n\"Yes, it's lovely. I'm not sure how long I can stay there though,\" Cat admitted.\n\n\"If you're happy there I will organise keeping it on a longer-term basis with him,\" Angelo explained and opened a wallet full of cards.\n\n\"This is your corporate card, you can purchase anything you need on it, within reason, I wouldn't like to see that you needed a Lamborghini, for instance,\" he chuckled. \"These others are charge cards for various stores that the women in this family can't live without.\" He indicated several slim envelopes on the other side. Information pin numbers etc., he zipped it back up. \"Try not to lose it, Margarite lost hers last year, and it was a pain in my ass for weeks,\" he rolled his eyes but smiled. \"Not that we couldn't fix it, but it's more paperwork.\" He grinned. \"I don't suppose you have your bank account details on you so I can get you set you up on the payroll?\"\n\n\"I do,\" she said, digging to the bottom of her carryall that held her pencils and sketch pad.\n\n\"Excellent, let's get you all set up today and then you can concentrate on the work that needs to be done,\" he said, seeming relieved.",
        "CJ came in and set up her phone with apps to access a range of family details, as well as an email address specifically for her work with them. \"I've put an SOS beacon on your phone if you are ever in trouble, hit it and we will find you, okay?\" he said so seriously it made her wonder why she or anyone in this family would need it.\n\n\"This family is a bit too much for a girl like me who grew up with nothing to take in,\" Cat finally spoke instead of just nodding her understanding. \"Is all of this really necessary? I don't need much, and I won't be here very long,\" she said, feeling so overwhelmed that she wanted to run away from everything just to get some peace and quiet. She needed some time to think and take it all in.\n\n\"I thought you did some work for the Vitali's?\" Angelo frowned at her.\n\n\"I was hired by Vanessa's interior design firm about six months or so ago. I was just an employee though. Nothing like this,\" she indicated her leather card case and her phone. \"Frankie I've known for years, he coached my brother and asked me to do that picture that Dante saw and liked for a charity auction. I never knew he was a Vitali at the time, or that he had bought the painting himself.\"\n\n\"I guess I can see why we may seem a little over the top, but, wait, there's more,\" he chuckled. \"No, not that set of steak knives you were expecting, but,\" he handed her a business card. \"You'll need a car to run around in while you're here. See Larry and he'll organise something so you won't have to call our driver every time you just want to go out and grab some milk and bread.\"\n\n\"That makes sense, I guess,\" she gave a half laugh. \"Is that everything?\" she asked.\n\n\"Pretty much,\" Angelo spread his hands.\n\n\"Do you think it would be okay if I just stayed here in the library for a little while, just to wrap my head around everything?\" she asked. \"These last two days have been the strangest of my life,\" she grimaced.\n\n*****\n\nMatteo was becoming worried. He had seen Pete return without Cat and asked him where she was and found out that she was meeting with Angelo about some of the details of her commission. When she hadn't appeared an hour later he went looking for her, questioning first CJ and then Angelo, who he found with Josh and Dante downstairs playing Mario Cart with the children.\n\n\"So, you and the painter chick, huh?\" Dante smirked. \"I'll help you look. She's probably still in the library.\"\n\n\"I dunno, maybe, there's something about her,\" he shrugged. \"Not the type I would normally go for. You should have seen her that first night,\" he laughed.\n\n\"What do you mean?\" Dante shrugged. \"She looks pretty hot to me.\"\n\n\"Remember it was really stormy the other night? I'd gone home because your brother cancelled dinner. It was late, I was on the couch in my boxers working on a project when the door bursts open and a drowned rat with blue war paint streaked across her face pushed open the door and almost fell into the apartment. She looked a mess, trust me, the wet hair sticking out and the paint that had obviously exploded in her bag smearing her face. Not so beautiful.\" Matteo admitted with a chuckle. \"Cute, maybe, but I wasn't in the mood to notice, considering the situation.\"\n\n\"Then what happened?\" Dante asked, seeming concerned but thinking this was the beginning of another great story he could regale his friends and family with instead of constantly teasing Josh, who had seemed to make an effort to relax with the family today. He'd need to get Cat's version of events, of course, the women's versions were always funnier than the men's.\n\n\"She sat down and went through her bag, cleaning up the paint, went to clean up and came back looking less like a drowned rat and more like a beautiful young woman. She informed me that she wasn't leaving in no uncertain terms. I called you and discovered the mix-up, then I offered to take the couch. We had pizza and beer, which she ate most of, and we talked. She was pretty much unlike any woman I knew, and I liked that. Now we're friends.\"\n\n\"Friends with benefits?\" Dante nudged his friend.\n\n\"I can't even get a first date with her while your family is throwing parties every day,\" he chuckled.\n\n\"I can fix that,\" Dante winked. \"All you had to do was say so instead of trying to tell me nothing happened when I asked you last night.\"\n\n\"Peri has a secret 'girls only' room for when the chaos gets too much. She comes from a small family too, just her and her mum, no siblings or extended family, so she understands how overwhelming we can be, especially to new-comers. I bet Cat is there. Go back outside, I'll bring her down,\" Dante said easily, clapping him on the shoulder before walking off.\n\n\"This is where you've been hiding,\" Dante said, walking into the cluttered attic style room Peri had shown her to sympathise with her need for peace and quiet for a few moments.\n\n\"Who wouldn't want to hide here, this place is amazing,\" Cat grinned, not denying that she was hiding.\n\n\"There's a very good friend of mind downstairs with a sad face who's been looking for you, and this you ran away to,\" he said with a soft smile and saw her eyes widen. \"A family this size can take a bit of getting used to, he just needs to know you're coping. He also thought you'd probably be hungry. He told me about barging into his room the other night with war paint on your face and eating his pizza before making him sleep on the couch. Sounds pretty tenacious, I'm not sure why he thinks you wouldn't be fine looking after yourself.\"\n\n\"That's not what happened!\" she gasped and blushed deeply.\n\n\"So, tell me your side of the story,\" Dante chuckled.\n\n\"I let myself into the apartment because I had a key; I was supposed to be there! I certainly wasn't expecting a half-naked man sitting on the couch! He gave me such a fright that I almost tripped over my bag and fell coming through the door. Then, instead of seeing if I was okay, he ordered me to leave and pointed out that I had obviously broken a paint tube and had it smeared on my face. So I told him that I wasn't leaving in the middle of a severe storm and went to clean up. I offered to take the couch, but he insisted. He ordered pizza for us to share and tried to get me drunk so I would agree to go on a date with him. I think he just liked the idea of slumming it for a while.\" She grimaced and shook her head. \"I meant that I don't usually run in yours or his social circles, and I was dressed in sweats at the time,\" she qualified the statement. \"When he told me who he was I turned him down flat and went to bed alone.\"\n\n\"What's wrong with who he is?\" Dante asked, laughing loudly at her version of the story. He could imagine that Matteo was finding this girl frustratingly attractive on a number of levels.\n\n\"I worked for an interior design company owned by the Vitali's, and I may have dated his brother for a little while,\" she admitted.\n\n\"So what? I dated Carlo's wife for a little while, and, well, I guess Peri explained that Josh met her first when she worked for him,\" he said as if it wasn't a big deal. \"It's not like you married his brother, and even if you did, that's no big deal.\"\n\n\"Speaking of Josh and Peri,\" Cat remembered what Louisa had said this morning. \"Louisa seems to have this theory about \"How I met your mother\" stories. She said that all of the desperately in love couples she knew had one. She's thinking about putting the women's versions into book form and calling it \"How I met your father\". I heard Margarite's story this morning,\" she smiled. \"It is a fabulous story, but she said the way you tell the Josh and Peri story is way better than any other of the stories, and she couldn't do it justice.\" They had walked back out to the rear deck of the house.\n\n\"Hi, I was getting worried you had run away,\" Matteo said, coming close and placing an arm around her waist. \"Are you hungry?\"\n\n\"Starving,\" she said and smiled. \"Seems I've arrived just in time.\"\n\n\"Grab a seat, I'll get you a calzone,\" he offered. \"Beer or wine?\" he asked.\n\n\"Always beer with Pizza,\" she laughed.\n\n\"Come sit with Dom and Fin,\" Dante guided her to one of the many tables that littered the back decking of the house. \"They aren't quite as loud as the rest of us.\"\n\n\"Thanks, I think,\" Dom smiled warmly at Cat as Dante excused himself. \"You're the painter who's going to be around during the gathering?\" he asked Cat directly.\n\n\"That would be me,\" she smiled in return, assuming he meant the family gatherings and events Peri had mentioned would be happening over the next few weeks.\n\n\"Rosanna and Angelo do such a great job out there getting everything ready, the property turns into a village atmosphere, complete with markets and everything, you'll love it!\" Finola said enthusiastically.\n\n\"I only met with Peri for the first time on New Year's Eve, so I'm not entirely sure what you're talking about, but it sounds wonderful,\" she agreed. \"At the moment, I am just trying to get to know all the faces I need for the painting. Would you mind if I doodled while we talked?\"\n\n\"Not at all, but you may want to swap seats, this is my good side,\" Dom chuckled, making Finola roll her eyes at him.\n\nMatteo and Dante arrived back with food and drinks a little while later, and Cat slipped her sketchbook into her carryall and accepted the beer Matteo handed her.\n\n\"May I look, please?\" Finola asked. \"I have always wished I was better at drawing.\"\n\n\"It's just a rough doodle,\" Cat said quickly, but seeing everyone turn to watch her she nodded and passed the sketchbook over after flicking through to the page where she had tried to capture Dom's facial features and written small notes for herself.\n\n\"If this is a doodle I can't wait to see the real thing!\" Finola looked up at her in amazement. \"You have a real talent.\" She smiled. \"Did you go to art school?\"\n\n\"Thank you,\" Cat said, feeling a blush creep into her cheeks. \"No, it just wasn't possible, but when I was younger we had an old neighbour who taught me the basics in return for doing his shopping for him.\" She said sadly, thinking of the old drunk who had been kind to her and David when they were still very young.\n\n\"Dom, Cat tells me Louisa is planning on writing a book as well, you should investigate that. It sounds like it will be a riot from cover to cover,\" Dante cut across anymore questioning from Finola as he saw Cat become sad and Matteo stiffen as if about to come to her defence.\n\n\"Do tell,\" he raised an eyebrow and looked around seeing Louisa with Carlo hovering protectively over her.\n\n\"Carlo, let your wife breathe for a few minutes and come and talk to us,\" he called out. When Carlo began to walk toward them with her, he laughed. \"Not you, your beautiful wife, but you can come too if you want.\" They made their small circle bigger to accommodate the other couple.\n\n\"Cat tells us you're writing a book,\" Dom frowned at her. \"Why am I only hearing about this now?\"\n\n\"I'm doing what?\" she looked surprised and turned to face Cat, looking cross-eyed and poking her tongue sideways at her, making her laugh.\n\n\"My mistake,\" Cat giggled, shaking her head.\n\n\"If you want me to tell her the story then you're going to have to fess up in front of Dom,\" Dante challenged her and leaned back in his chair, fixing Louisa with an evil stare.\n\n\"Fine, but it's not a very good book that anyone aside of Margarite and I will probably want to read,\" she said.\n\n\"I'd read it, if only to hear Margarite's story again,\" Cat smiled encouragingly.\n\n\"You can't hear it if you're reading it, but if it's as good as I think it will be I can narrate an audio version for you,\" Dante offered.\n\n\"It would be a collection of stories, sort of like an anthology,\" Louisa began tentatively. \"Margarite and I were talking, and all of the best love stories that end in great marriages have one thing in common,\" she explained, taking Carlo's hand. \"A great 'How I met your mother' type of beginning, Josh and Peri being the prime example. Theirs wasn't love at first sight, but even in that first moment they knew something big was happening. Carlo and I, Margarite and Larry, even the first time you met Peri,\" she poked a finger at Dante. \"Now you owe Cat the story, and you might as well include your own.\"\n\n\"I'd read that book!\" Finola exclaimed.\n\n\"Read it? You'd be in it!\" Louisa laughed. \"I know all about how you two met, don't forget. I've been collecting these stories for a while now.\"\n\n\"Okay, evict this baby already. Isn't he overdue now? Then you can write me my book. We won't be letting Josh in on this deal, just you and me, okay?\" Dom said with a smirk.\n\n\"I heard that!\" Josh said. \"Why does everyone in this family think I'm deaf?\"\n\n\"I, for one, am glad you're not, because I was just about to tell MattCatt the story of how you met Peri,\" Dante grinned widely.\n\n\"MattCatt?\" Josh pulled a face.\n\n\"You know, like Brangelina, I just made it up, I don't have the copywrite in place yet, so don't get any ideas,\" he narrowed his eyes at Josh.\n\n\"Romeo, Romeo, where for art thou Romeo,\" Josh called light-heartedly, and Romy came over to the now large group.\n\n\"What's up?\" he looked around and saw Dante giving him an evil look. \"What's D. done now?\"\n\n\"I need a gag order, immediately,\" Josh instructed.\n\n\"Hey, it wasn't my idea. Louisa told me I had to do it,\" he pointed at Louisa. \"To tell you the truth, brother, I'm more than a little scared of Carlo at the moment, so if Louisa says jump I ask how high,\" Dante said with a perfectly straight face.\n\n\"You have a problem with that?\" Carlo grumbled at Josh, moving closer to Louisa, who looked so pleased.\n\n\"Good grief,\" Josh sat on the end of the small couch Cat shared with Matteo, making her move closer to him. \"What is it you don't want me to know?\" he turned on Dom.\n\n\"Louisa is also planning on putting that story, along with others, into a book which I said I would publish for her,\" Dom said quickly. \"Carlo scares me too,\" he chuckled.\n\n\"Carlo, why are you doing this to me?\" Josh asked in a pained voice.\n\n\"Name one thing, just one thing, that Peri has wanted that you haven't given her,\" Carlo said easily and spread his hands. \"You can't expect me to say no to my wife when you can't say no to your own.\"\n\n\"This is your fault,\" he turned on Dante again. \"Don't think I don't know you started this,\" Josh grumbled.\n\n\"It can't be as embarrassing as the first time I met Matteo,\" Cat said softly, sympathising with Josh, who immediately perked up.\n\n\"You two are dating?\" Josh asked.\n\n\"I asked, but she turned me down flat. I figure if I keep asking she'll eventually say yes, just to shut me up,\" Matteo shrugged, making them laugh. \"It wasn't an embarrassing story,\" he looked at Cat with a frown.\n\n\"You weren't the one who looked like a reject from the set of brave heart,\" she said dismally.\n\n\"Luckily for you 'Dante the dramatist' doesn't know your story then,\" Josh commiserated.\n\n\"Sure I do. Haven't you learnt by now I know everything,\" Dante laughed.\n\nThe circle seemed to widen as more people joined them until all twenty-two of the Donati table sat with Matteo and Cat. Despite the number, it still felt like an intimate gathering to Cat, who tried to stifle her laughter as Dante related all of the mishaps that happened to poor Josh as he pursued Peri at the beginning of their relationship. Including the first time he had met her as a dark and bitter man, and the laughter she brought to his life that day.\n\nCat wondered how the trio had been formed from those two very different beginnings, because they were all very much in love and happy now. She knew exactly how she wanted to draw this family, and she hoped she could get Peri to trust in her creative vision. It seemed much later than it actually was, possibly because she was tired from her lack of sleep the night before.\n\n\"I hate to be the party pooper, but if Matteo doesn't take me home soon you'll have to find me a room,\" Cat laughed, slipping her sketchbook back into her bag.\n\n\"You're more than welcome to stay the night,\" Peri said easily. \"We have heaps of room, and I know Josh still wants to talk to Matteo about the Vitali HQ building.\"\n\n\"It's lovely, I visited a few times to get an idea of its proportions and space,\" Cat said. \"I did some of the artwork for the interior design firm working on it.\" She turned to Matteo, \"I don't mind staying if it's easier for you,\" she assured him.\n\n\"I'd rather drive back, I have some things to do in the city tomorrow,\" he said. Matteo was surprised that she had toured his building. He hadn't put two and two together where her working for Vanessa had been concerned. He wondered which pieces of art were hers and which had come from galleries.\n\n\"It's been fun to get to know you all better, I think I have some good ideas already about the flavour of the piece I'd like to do for you,\" she said enthusiastically.\n\n\"Would you mind if I stopped by sometime? I'm totally fascinated by the process, and I love your sketches of Dom,\" Finola asked.\n\n\"Sure, anytime, and once I'm finished you can have those doodles,\" Cat offered, grateful that Finola hadn't looked beyond the single page of Dom's sketches.\n\n*****\n\nThe drive home was mostly quiet, interspersed with her impressions of the family and questions about the Vitali family and whether they were as close as the Donatis'. Matteo admitted that their family had been fractured by the death of his oldest brother, as well as the addition of his stepmother and half-siblings. He explained that they were still close, but his stepmother had to fill a role that had been someone else's and it had caused some disharmony and adjustment that the family had never seemed to recover from entirely.\n\nLike the Donatis' there were eight brothers, one of whom had died, so the table, when it changed to the next generation, would be supplemented by first cousins. It was unusual to have so many brothers in one family, but there had been two different mothers' in his family, and the second significantly younger than the first. That, in itself, would make it difficult for his father's generation to retire, in that half of the heirs to the table would be deemed too young to ascend to their chairs. It could be done as a shadow table until they were ready to take on their roles, but the substantial roles would need to be taken up soon, which was why the older of three brothers were expected to settle down into the roles of family men. Even if they didn't lead the table, leaving the way open for the younger men, they would be expected to step up into the roles best suited to them sooner rather than later as the older members of the table dwindled in number, putting extra pressure on those remaining.\n\n\"Who decides the roles best suited?\" Cat had asked. \"I can see that each of the roles of the Donati table fit the men perfectly, but what if that isn't the case?\"\n\n\"It's decided by the current table, and there is always jockeying for position, I guess,\" he shrugged. \"I imagine, due to the nature of my business, I would be the engineer, like Carlo. Jacobi believes he will lead and has convinced Ricco that he will be the oracle, and that the three of them will rule like Josh and Dante do with Peri,\" he said carefully, knowing that she would realise that this was the commitment Ricco had made and that he had chosen his brother and Maryanne over her.\n\n\"Does he love her?\" Cat was stunned at the thought of it. She had the impression that, while they were friends, Ricco had no desire to be intimate with Maryanne. Or maybe it had just been assumed because she was dating him at the time.\n\n\"Love isn't necessary to a commitment like that. I think for Ricco it is enough that Jacobi loves her. Not everyone is as lucky as Dante, most find solace in Mistresses that we call the Kept,\" Matteo wanted to be honest with her. \"They are specially trained for the role, and many of the men and women, for that matter these days, have them. They are sanctioned and know their place, which is why in hundreds of years there has never been a scandal involving one.\"",
        "\"Do you have one?\" she asked.\n\n\"No,\" he chuckled. \"I have no need of one. I am not so ugly that I can't get a date every now and again. Nor am I in a loveless marriage and need to seek solace elsewhere, like the ones I was talking about.\"\n\n\"Does that mean that if we take this business agreement to its final end I could have a specially trained and discreet lover? Is that why you were acting so weird about intimacy last night when we spoke about it?\" she blurted.\n\n\"You really do just say whatever is on your mind, don't you?\" he chuckled. \"It's complicated,\" he answered. \"If it's just about scratching an itch there is no reason we couldn't do that for each other if we had boundaries and rules.\"\n\n\"Would I need training like a kept for these rules and boundaries?\" she said acerbically.\n\n\"If you were curious you could, but I'd never ask you to do it for my benefit,\" he said carefully as he pulled into the underground garage below her building.\n\n\"Peri asked me to sign a non-disclosure thingamajig before letting me talk to the family. But you're just telling me all of the ins and outs of yours,\" she said, turning to look at him.\n\n\"I promised you honesty and friendship above all else. How else are you supposed to trust me and me you if we aren't honest about everything? Besides, you don't strike me as the kiss-and-tell type with anyone's business, even your own.\" He answered, turning to return her look and locking eyes with her.\n\n\"If I'm entirely honest, I'm not sure how this will play out, but I know this is how I want it. There will be some things the family will want you to do before we get married, if we get that far, but nothing too onerous,\" he admitted. \"Maybe some lessons in public speaking, we do a lot of charity work, especially through my company. That sort of thing,\" he hedged. \"If you want training as a kept I can organise that for you, but I have no intention of treating you that way. I know that is why you broke up with Ricco. I want you as my girlfriend and fianc\u00e9 in the public eye, which means paparazzi and other difficulties, but that's part of who I am. So public speaking and elocution is something every member of my family has had to learn, including my brothers and me.\"\n\n\"I guess there is a lot for me to get used to and understand. Intimacy isn't just about the sex though; all of those people there tonight were intimate because they know each other so well. The couples in particular,\" she tilted her head at him. \"It's hard to fake that sort of love with hand-holding and the occasional peck on the cheek. Intimacy needs to be felt,\" she leaned forward and brushed her lips softly against his as a demonstration. \"Not just by the couple, but the people around them. Something to think about.\" She went to get out of the car. \"Good Night, Matteo. Sweet dreams,\" she said softly, stepping from the vehicle and closing the door. She gave a short wave and walked steadily to the elevator.\n\nMatteo watched her go and began making all of the usual excuses in his mind. He was tired, he'd been working too hard, he'd just sat through a huge lovefest with his cousins! None of it rang true as he realised that in just three days this girl had managed to get under his skin and he was in very real danger of crossing a line he had vowed never to cross again. The elevator doors closed on her, and, despite wanting to follow her up to the studio, he turned the car toward his apartment and made himself drive home.\n\nCat let out an explosive breath as she entered the lift alone. She was grateful for the space from him after today. He was sweet and attentive and had looked after her throughout the day. It was easy to have sat with his arm around her as the family all told stories and laughed together as if they were a couple, just like every other couple there.\n\nThere had to be something wrong with her. She must be insane after Ned attacked her, treating her like a possession to be claimed. Then Ricco had treated her like a dirty little secret. Now she was letting another man treat her as if her wants and needs didn't count, \"It was all about this bloody contract!\" she raged at herself. She knew she wasn't being fair to Matteo or herself, but she wanted more. For the longest time she had just accepted what she had been offered and been grateful. She had begun to believe she could have more when she'd been seeing Ricco, and had crashed back down to earth with a thud when she realised it wasn't going to be possible. Now here she was again in another impossible situation wanting more than what she was being offered, only this time she wasn't sure she wanted to walk away.\n\nCould she live in a relationship like what he wanted, always wanting more? He could give her the acceptance she craved for just being who she was. He could help David's career. He could do so much for her except love her. She threw herself on her bed and stared up at the ceiling. Seeing how happy everyone was today, the obvious love and devotion of that huge family had made her want that for herself. She knew she should call off this whole thing with Matteo. What she'd found out today about how their family worked should scare her. His face hovered in her mind. The only thing that scared her was the very real possibility of falling in love with him and not having him love her back.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "author",
        "designer",
        "artist",
        "family"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-06"
}