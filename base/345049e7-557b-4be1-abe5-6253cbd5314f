{
    "title": "The War of 2020 Pt. 09",
    "pages": [
        "********\n\nThank you aagurl789 for you wonderful work proofreading and editing this chapter!\n\nAs always, please be aware there is graphic content throughout this text.\n\nPlease read The War of 2020 Pt. 8 to understand the story. Pt.1 - Pt. 7 are also available.\n\nThis is a fun hobby for me that I'm happy to share with you but don't take it too seriously, this is erotica. It is also done in my spare time which I have not had a whole lot of so your continued patience while I think and write has been very much appreciated. Thank you all for you feedback and support.\n\nEncouragement, constructive feedback and opinions are always appreciated. If you have any suggestions on how you would like the story to progress please comment below.\n\nEnjoy.\n\n********\n\nMorgan felt the soles of her bare feet ache as she wandered the forest near Joe's house, trying her best to make it back before dark. Her head was still in the clouds, swooning with the stars as she thought about Smyth.\n\nWith his chestnut hair and emerald eyes, he was identical to Hunter in intensity and equal to Joe in passion, all while being so different from them in personality at the same time. Another jig saw puzzle of toxic masculinity for her to fucking manage.\n\nPoorly.\n\n\"Smyth...,\" she whispered, walking through the forest in the waning daylight.\n\nShe was caught off guard by him; a very unusual feeling for her when it came to men. She was not expecting him to be the type of lover he was, a lover that wouldn't engage without her explicit consent. He demanded that she be an eager and active participant, making her stay in the moment without any force or punishment. A complete change from Hunter and Joe, an intimate dance she had never really done before.\n\nIt was honestly a nice change of pace.\n\nShe was surprised that Smyth came on to her at all since he had his pick of slaves on the Compound.\n\nCuriosity must have got to him.\n\nShe wondered how much of a bitch she had to be to shake these guys, not that she really wanted to anymore but still. She was not able to keep this up for much longer and would fall to them sooner or later at this rate.\n\n'He was nice...' she thought, feeling the slick honey of her pussy slip between her thighs as she walked. '...And playful,' she continued, thinking of how thorough a lover he was, one that made her feel something deeper than just lust as they fucked.\n\nSomething much sweeter.\n\nShe mulled the ways she could use Smyth, enjoying the thought of spending more time alone with him. He was charming and lively, a soldier that still had his humanity intact even after years of War.\n\nStepping over tree roots and mossy rocks, she realized she was in familiar territory again. Standing somewhere in the North Quadrant, she was not too far from Joe's house but was still deep enough in the woods to be sufficiently lost.\n\nLooking around, she saw the large dead tree stump that she had originally used with Patty as a drop point almost a month ago Its brown gnawed bark looked more weathered and chipped, like it had taken a few licks itself over the past few weeks.\n\n'It's worth a try,' she thought, approaching the unassuming trunk. She looked around the quiet forest, remembering when she was there to retrieve her care package.\n\nFlashes of that night crossed her vision as she thought back, remembering everything with uncanny clarity. The feeling of cold steel slamming into her back breaking her skin, the welts that formed, the bruises they left.\n\nThen when that bastard was on top of her, the smell of his breath- bitter and rancid, along with the vulnerability she felt...\n\nThe pain. The terror. The fear.\n\nShe would never allow that to happen again.\n\nReaching into the dead trunk, her hands touched something sharp and foreign cutting her instantly.\n\n\"Ouch,\" she winced, gently running her fingers over the thin glass pens and broken shards. Her heart quickened and her mind began to race as she mentally pieced together what she was holding.\n\n\"Patty...,\" she whispered, half afraid to get her hopes up. \"Did you really do it?\" Pulling the thin pens up, she felt her face grow hot as the orange caps came into view.\n\nThree syringes of Depo-Provera; two broken and unusable, one still intact. Enough to protect her for at least three months or enough for all three of them for maybe a month.\n\nMaybe.\n\nShe popped the cap off the last salvaged needle and lifted her white camisole, pressing the tip into her stomach. She felt the medicine enter her body as she pushed on the plunger, letting out an audible sigh of relief once a \u2153 of the birth control was administered. She was deathly afraid of needles but felt nothing as she stabbed herself, knowing that she preferred being childless over anything else.\n\nShe decided to take the rest with her for Patty and Alice, unwilling to use the entire shot for herself. If she could make it back and give them each a bit, then they all might make it out of this as planned.\n\nShe wasn't sure of the science on that but was willing to give it a try.\n\nMorgan smiled at the thought, allowing it to give her comfort as she moved forward, deeper into the darkening forest.\n\n*************\n\nMurph pressed down on the clutch, shifting gears roughly as he sped back towards the Compound. Having taken his own Jeep to the Capitol, he refused to allow anyone to escort him back and was ready to kill any fag*ot that tried to get in his way.\n\nDriving recklessly, Murph weaved his way through the mangled warzone that was once downtown Charleston, WV. They'd taken a beating all fucking day, getting hammered by mortar shells and drone strikes as the UPP flexed their Commiefornia muscles and decimated the land.\n\nAlthough he was hell-bent on making it back, Murph was clearly in no shape to be driving anywhere. Steadily pushing his limits, he was already borderline wasted and still drinking straight from the handle. Careening down destroyed roads using dangerous maneuvers, Murph cursed to himself in a drunken rage, angry and belligerent.\n\n'Fucking Shithole!' he roared, driving hard and fast, as if he could handle the uneven terrain. All in an effort to get back home as quickly as possible to see her.\n\nHe needed to see her.\n\nThrowing his handle of Bourbon out the door, Murph felt his heart begin to ache painfully in his chest constricting his throat.\n\nA familiar feeling for him now.\n\nSuffocating the little that was left of his dimly lit soul, his emotions were well past the point of no return. Rage; pure and wild, flowed through his veins like liquid fire. He had never been so angry, never felt such resentment for someone in his life.\n\n\"I will kill him when this is over,\" he hissed, feeling his anger toward CGB kindle and stoke towards an inferno.\n\nThe worst part of all of this was having so little control over the situation, it made him feel especially fucking helpless having to work within the guidelines of Rule 23. He knew killing CGB would guarantee his own death as a Traitor and destroy any protections Morgan would have as their mutual property.\n\n'Please be there,' he whispered, white knuckling the steering wheel as he pushed past the city limits toward the rural outskirts. His mind had one singular focus and he couldn't afford to get side tracked when she was in danger and missing. She could be miles away from the Compound, hurt in a ditch or maybe even worse.\n\nDead.\n\nHe didn't understand why Mills wasn't answering his phone. Murph called his Lieutenants and they reported Mills was last seen following her into the forest near his home, alone. Murph would be making some changes after today, no one will be left alone with her ever again.\n\nTaking out a satellite phone, he called Mills one last time.\n\nNo answer.\n\n\"Fuck!\" he growled, unable to contain his frustration. Angry at everything, Murph was being irrational and didn't fucking care. He needed to find Morgan or he was going to turn around and fucking murder CGB. He couldn't believe he was stupid enough to think that sadistic fuck could ever change.\n\nEven for someone like her.\n\nMurph knew that CGB couldn't really stop being a psychopath but he didn't think he would actually hurt her. Now, she was going to be even more difficult to train and almost impossible to manipulate into submission.\n\nAll because he couldn't keep his fucking hands off her, the one thing he promised to do.\n\nMurph's soldiers watched nervously as he sped towards the outer gates of the Compound, seemingly indifferent to the towering metal barrier in front of him. With just seconds to spare, they opened the iron bars for him, allowing his rampage to continue on unhindered.\n\nSpeeding up the empty main road towards his home, he searched for any sign of Mills, anticipating the worst. Mills always answered his phone, especially when Murph and CGB both had to leave the Compound for a raid.\n\nGlancing to his right, he happened to spot a small creature sneaking in the dense forest, its curvy lithe body immediately catching his attention. Moving stealthily along the opposite tree-line, he saw glimpses of golden tan skin and long curly brown hair, the feminine hallmarks he was desperately looking for.\n\n'There you are,' Murph whispered, slamming on his brakes.\n\nSkidding to a stop, he jumped out and made a mad dash for her, abandoning his Jeep in the middle of the road. He followed the flashes of her white camisole that he could see, trying his best to get closer to her as she ran ahead, oblivious to him.\n\n\"Morgan!\" he yelled, sprinting over thick foliage and loose rocks. He felt his chest tighten at the sight of her running away from him, a sight he didn't want to see ever again.\n\n'You're not supposed to run from me,' he hissed, moving faster.\n\nMorgan turned her head at the sound of a booming voice, locking eyes with Murph for a moment from across the woodland. He saw the confusion on her face as she studied him, a look of genuine surprise that slowly turned cold as he came into view.\n\nInstead of coming to him, her eyes narrowed and she turned, running full speed in the opposite direction away from him.\n\nAgain.\n\n\"No!\" Murph snarled, sprinting with renewed vigor.\n\nShe was quick, able to put a solid distance between them as she ran deeper into the forest. But before she realized it, the lush vegetation began to squeeze her against the trees, making it impossible for her to navigate the maze.\n\nAs agile as she was, he knew the area better and was able to anticipate where she was heading, taking a path to cut her off.\n\nMorgan felt her legs burning painfully as she ran from Joe; she didn't know where he came from and wasn't sure what she should do next. She needed to get into his house but he came back way too early, there was no way she could get inside without him knowing.\n\nLost in thought, she didn't see him catching up to her on the left, his athletic build giving him the endurance needed to out pace her. As soon as she saw him she sprinted faster, making a last ditch effort to gain some distance from him.\n\nBut it was too late.\n\nHe had already slowed down his own pace to hook his arms around her, swinging her into a bear hug using her forward momentum.\n\n\"No!\" she screamed, digging her nails into his thick tattooed biceps. \"Let me go you fucking ginger bastard!\" She was indifferent to her clear disadvantage, using her only weapons on him as best she could.\n\nMurph cuddled her thrashing body against his hard chest like an excited puppy, happy to hold her while she kicked violently in his arms.\n\n\"You need to stop running away from me Morgan,\" he scolded half-heartedly, kissing the top of her head as he restrained her. \"Jesus Christ.\"\n\nShe screamed in response, scattering birds and animals alike as she tried to land kicks against his shins. He didn't care that she was scratching and kicking at him, it wouldn't have bothered him sober and certainly didn't bother him drunk.\n\n\"It's okay, I know he hurt you baby,\" he cooed. \"I know and I have you now...\" he said, wrapping his arms tighter around her.\n\nMurph smoothed her soft wild curls as he gently rocked her, ignoring her obvious distress, unconcerned by her screams. Taking a deep breath, he immediately felt better having her safely back in his arms.\n\nSafely back with him.\n\n\"What? Oh yeah...\" Morgan said, relaxing for a moment as she remembered her 'injury' from Hunter. Murph's large hands moved from her waist to her hips, reminding her exactly what he really wanted.\n\nWhat he always wanted.\n\n\"Put me down Joe,\" she growled, twisting her body around in his arms as she pulled from his grasp. She was in no mood for this, Smyth just left and she had finally made it back to the house when he showed up.\n\n\"Don't worry, I'm taking you home with me,\" Murph said, lifting her up from behind as he carried her through the dark forest towards his house. She dug hard into his thick arms, desperately trying to tear his flesh apart. She felt so small without her weapons and was frustrated to say the least. Murph didn't even register her efforts, his mind already calculating what to do next.\n\n\"I know you're upset baby...,\" he whispered into her hair, carrying her through the forest nonchalantly. \"I promise he will never hurt you again. I should have never trusted him to begin with, that was my mistake. I will be making some changes...\"\n\nMorgan kicked her legs up in response, connecting her feet with a tree in front of them. \"Stop!\" she growled, pushing hard against the towering oak, knocking them both off balance. Murph fell backwards, releasing her from his hold as they both tumbled to the hard forest floor.\n\n\"Fuck you Joe!\" she said, scrambling to her feet. \"You're not going to bring me back there just to fuck me and pretend like you give a shit about how I feel. Save me your fucking bullshit today,\" she hissed.\n\nHe was unbelievable; playing more twisted games with her head than Hunter ever could. He didn't care about her or what she wanted. He used his history with her to control her, gaslighting her as if she were too stupid to notice what he was doing. He treated her like property, no matter how much be tried to pretend otherwise.\n\n'Not anymore asshole,' she thought, squaring up with him.\n\nA deep rumble escaped Murph as he slowly stood, his lips turning up into a crooked smile. \"You could have hurt yourself baby,\" he muttered condescendingly, looking over her nimble body. Moving forward, his eyes narrowed back down onto her face, before his smile faded.\n\n\"What did I tell you about fighting me?\"\n\n\"Try harder...,\" she whispered, rushing him suddenly with a hard punch to his liver. Murph dropped to a knee in pain, grinding his teeth angrily as he glared up at her with bloodshot eyes.\n\n\"God damn it Morgan! What the fuck is wrong with you?!\" he hissed, reaching for her again. He was faster than she anticipated considering how drunk he was. He went for her hair first, grabbing a handful of curls to snap her head back towards him. Dragging her down to the ground underneath him, he kissed her forcefully, unwilling to give her even an inch of space. She whimpered against his lips out of reflex, conflicted by the heady mix of pleasure and pain he was forcing on her.\n\nAs usual.\n\nGrabbing her hips roughly, he flipped her over onto her stomach, holding her down against the soft grass with one arm. He handled her like a doll; displaying his effortless strength and measured restraint while doing so. Using his free hand, he roughly pulled her shorts down her thighs, finally getting a look at the damage CGB did to her ass.\n\nA large red cut marred her tan skin, slashing across her ass cheeks like an angry lightning bolt. Murph held her still as he looked her over, half assessing the injury and half admiring the body he wanted to fuck so badly. He hadn't seen her all day and felt his hard cock straining to be inside her, seeing her only made it harder to control. She was the only thing that actually satisfied him, every part of her wild being was made for him and only him.\n\nShe was never meant to be shared.\n\nHe was angry and horny, with both emotions equally competing for his attention and neither being very helpful to him right now. He needed to get her home before she got hurt even more from resisting him.\n\n\"Get off me!\" she screamed, jerking futilely as he held her down. With a frustrated sigh, he pulled up her shorts, turning away from her plump ass before he ended up fucking her on the forest floor.\n\n\"The patience I have for you is fucking incredible,\" he whispered harshly, his blue eyes dark with anger. \"You are such a spoiled bitch, I do not understand why I put up with your behavior.\" Taking out a pair of metal cuffs from his belt, he felt her jerk away quickly as she anticipated his next move. Holding her still, he cuffed her wrists loosely behind her back, all while she continued to thrash about like a suffocating fish.\n\nAbsolutely dramatic.\n\n\"You ENSLAVED me you fucking asshole!\" she hollered, seething and bitter. He acted as if she should be grateful that he hasn't just straight up kill her when in reality, he should be grateful she hasn't taken a knife to his fucking throat.\n\nHe picked her up again, attempting to carry her back to his house for the second time. Ignoring her words, he held her tightly against his chest as she continued to complain.\n\n\"I hate you! Just leave me here, I'd rather be with the fucking bears than spend the night with you!\"\n\n\"No.\"\n\n\"Kill yourself!\"\n\n\"I don't want to hear it Morgan.\"\n\n\"Then I will KILL YOU!\" she yelled, jerking in his arms again.\n\n\"You will stay with me tonight, we can talk about your concerns tomorrow. If you behave for once in your fucking life,\" he lied. He wasn't planning on listening to any of her ridiculous demands come morning. As soon as she was safely locked in his house, he would make that clear to her.\n\nShe struggled in his arms again giving him an excuse to hold her closer, snuggling her soft body against his hard chest. He knew she hated how much he treated her like a small animal or better yet, like a literal child. Ignoring her cursing and screaming, he was unbothered by any of her words.\n\nHe had tuned her out by this point.\n\nCarrying her squirming body, he thought about how much he hated CGB and how he wished that CGB wasn't a part of their relationship at all. Murph knew this would happen, that it was only a matter of time before that psychotic fuck went back on his word and hurt her, triggering her own need to protect herself. All of this was making her training even more difficult, even more impossible.\n\n\"I fucking hate you...,\" she growled, still twisting in his arms but quickly losing steam. Finally reaching his house, Murph carried her up through a side entrance, large enough that she couldn't kick the door frame to stop them even if she tried.\n\nGrowing tired of her incessant squirming, he stopped in his foyer, dropping her directly onto her ass, just a few feet from his War Room. She bounced on the hardwood floor with her hands still cuffed behind her back. Turning her head up, she glared at him with resentment.\n\n\"Fuck you Joe.\"\n\nMurph smirked down at her as he stripped off his dark green shirt, watching her silently seethe from the floor.\n\n\"I'm not bringing you upstairs, we will both break our necks if you kick up again.\"\n\n\"Let me kick your stupid fat head then,\" she mocked, kicking her feet at him.\n\nMurph knelt down between her legs, taking hold of them mid-kick. Spreading her open, he crawled atop her, pressing against her pussy with his hips. Even contorted with rage, her soft face mesmerized him, melting his anger away into warm lust.\n\nHe looked deep into her chocolate eyes, searching for her. His girl was down there somewhere underneath all that anger and frustration.\n\n\"Morgan,\" he whispered.",
        "He saw a spark in her eyes in response to him, giving him all the confirmation that she was undeniably his.\n\nThe acceptance he craved.\n\nHe knew she wasn't really angry at him, she was angry at the asshole that hurt her and was acting out because of it. A natural response considering everything.\n\n\"Take these fucking cuffs off me Joe!\" she hissed, squirming with him still firmly between her legs. He wrapped his arms around her, running his hands up her back toward her neck.\n\n\"Say 'Please',\" he taunted, leering down into her eyes as his hand slowly squeezed. He felt the delicate curls at the base of her neck, and the jump in her pulse as her blood raced through her, warming her from within.\n\nShe was excited too.\n\n\"Please... Go fuck yourself,\" she replied sweetly, narrowing her eyes. Murph grabbed her thighs with both hands, squeezing them hard as his patience began to wear thin.\n\n\"Say 'Please Master',\" he clarified, running his hands back up to her shapely hips, hooking his fingers into her small black shorts.\n\nShe clenched her teeth feigning anger, \"I will not call you Master.\" She was not about to contribute to Joe's insane ego. He was hungry for her submission more than anything else and she was ready to let him starve to death.\n\n\"Then it looks like you'll be in cuffs for a while slave,\" he replied with a smirk, pulling her shorts roughly down her thighs and off her legs.\n\nShe continued to glare at him as he slowly moved his hands back up her thighs, running them lightly over her sensitive skin towards her bare pussy. His calloused fingers skimmed her soft lips, rubbing the warm mound gently as her face started to flush red.\n\nShe saw his blue eyes brighten at the response, before he slowly lowered his head between her thighs, easily holding her legs open as she tried her best to close them.\n\nMorgan let out a strangled moan as his tongue immediately found her clit, teasing the sensitive nub before he touched her anywhere else. Licking her exposed pussy, he took her sensitive labia between his lips tearing gasps of pleasure from her. Then just as soon as he started he stopped, lifting his head back up to look at her mischievously.\n\n\"Say 'Please lick my pretty pussy Master',\" he teased, holding her ass firm with both hands. Pulling her closer to his face, she was forced to scoot down, bringing her pussy right up to his lips. She turned her nose up and didn't respond but in reality, she was enjoying herself too.\n\nThis was a great distraction for her while she worked on the metal cuffs behind her back.\n\nAnd it didn't hurt that Joe's mouth was an entirely different lover from the rest of him.\n\nSince they do this shit to her all the fucking time, she decided to try twisting her wrists as she's cuffed, keeping them from being tightened all the way. With enough slack and effort, she should be able to slip out of them.\n\nToday was as good a day as any to give it a try.\n\n\"Please...,\" she whispered, feeling his hands knead her ass cheeks roughly.\n\n\"Please what?\" he asked, lightly kissing the inside of her thighs. His lips trailed up the sensitive area as his hot breath traced goose bumps across her cool skin.\n\n\"Please...,\" she continued, drawing him closer to her. Leaning down, she met his lips for a kiss right as she felt her hands slip free of the cuffs. Dancing her tongue with his, she felt him melting into her, lowering his guard as she took control of his mouth. Then with her lips still locked to his, she wrapped her hands tightly around his neck, choking him.\n\nIn an instant, she pushed him onto his back and mounted him, holding her small hands firmly around his neck in a stranglehold. He looked up at her confused, still processing that she somehow got out of the handcuffs and was now on top of him.\n\nChoking him.\n\n\"Please stop being an arrogant dick,\" she growled, squeezing his neck hard before crashing her lips back down onto his. He was stunned, he had never really been overtaken by anyone, let alone by someone as weak as her, a woman. Murph's hands mindlessly wandered her hips, rubbing them softly before he remembered that she escaped her cuffs and was trying to choke him.\n\n\"You little fucking...,\" he growled, grabbing her roughly as he flipped her back over, getting on top of her again. Pressing down onto her, his large arms caged her small body underneath his, trapping her against the floor.\n\n\"What? Am I a bitch? A whore? Maybe a sloot?\" she laughed, smiling up at him ignoring the clear warning in his eyes.\n\n\"D. All of the above,\" he mocked, pressing his hips against her bare pussy again as he reclaimed her mouth. He held her wrists tightly above her head in one fist as his fingers tweaked her pert nipples. Twisting underneath him, her heavy tit pleasantly filled his palm, allowing him to feel her heartbeat as it hammered in her chest.\n\n\"What are you going to do about it?\" she taunted, enjoying the fact that he was not only horny but also visibly frustrated.\n\n\"Morgan...\"\n\n\"What?\" she pouted. \"Are you mad a little girl got the better of you? Hmm?\"\n\n\"Stop...\" Murph started, before he was cut short by her lips pressing up against his.\n\n\"It's okay,\" she teased, biting his lower lip. \"I know how frustrating it can be to lose to a girl.\"\n\nMurph let go of her wrists and spread her legs wider, kneeling between them again. Unzipping his slacks, he took out his hard cock, too impatient to completely undress.\n\n\"I don't fucking lose,\" he growled, holding her legs apart as he forced his cock deep into her pussy in one hard thrust. She cried out as his hands gripped her hips, holding her in place as he railed into her in angry hard thrusts, slamming her against the hardwood floor.\n\n\"Yes you do, you fucking loser!\" Morgan chided, still fighting with him as he fucked her roughly. Murph mauled her tits in response, squeezing and pulling at her hard nipples. She couldn't help how wonderful it felt having him angrily fuck her; the feeling of him losing control and needing to have her, needing to take her. She wondered if this was what she was actually attracted to, the urgency in their need for her.\n\nTheir fierce desperation to have her.\n\n\"I came all the way back here just to check on you and this is the fucking 'Thanks' I get,\" he growled, pulling out of her pussy momentarily, only to flip her onto her hands and knees. Holding her hips firmly, he forced her ass up and shoulders down, kneeling behind her.\n\nHer pussy throbbed and tingled with excitement at his rough handling, enjoying the feeling of him overpowering her again. 'Why do I like this so much?' she thought breathless, feeling him press against her pussy from behind. She was a fighter before this mission, a certified killer and soldier trained by some of the best. So why did she enjoy being fucked like this? She used to kill assholes like Joe and Hunter without a second thought and now she was taking their cocks whenever they wanted.\n\nAnd secretly, she was loving it more each time.\n\n\"You came home just to fuck me you goddamn liar!\" she yelled, still feigning anger. \"You don't give a shit about me and neither does Hunter.\"\n\nMurph bit against the back of her neck as he impaled her pussy again, using his cock to deliver his response. Her face pressed against the hardwood floor, muffling her gasps and growls, turning Murph on even more. For some reason none of this took away from the intense feelings building within her. The orgasm that was preparing to take away the last bit of power she had, stripping her completely bare.\n\nShe couldn't keep up the show anymore, he knew how to fuck her and she still didn't know how to take it all in. This has been going on for too long, she was being defeated by their sheer persistence alone.\n\nUncontrolled screams escaped her as an orgasm ran its course, lighting her blood on fire. Murph continued his relentless thrusts, fueled by his waning anger and growing pride as he felt her tight pussy contract around his cock.\n\n\"There is nothing wrong with me fucking my property,\" he rasped into her ear. \"After all she loves it.\"\n\nNibbling at her now, he continued to impale her voluptuous body as she struggled underneath him, trying desperately to make his words untrue. Looking down at her, he could feel himself losing control, getting too rough with her on the hardwood floor.\n\nShe felt so good, her warm silken pussy grasped his cock like a personal glove. Yet his lustful haze slowly cleared as his eyes fell on the angry slash across her ass, reminding him of what he was actually here for.\n\nTo make sure she was okay.\n\nMurph forced himself to slow down, letting up from her back as she continued to twist underneath him. He gave her more room to move, allowing her to turn enough to see him again. Taking hold of her left leg he lifted it up, fucking her in the new position as he felt himself fill her pussy again.\n\nLooking down, he watched her face contort in pleasure as he plunged into her in slow deep strokes.\n\n\"You need to stop running from me or I will lock you in a Goddamn Cabin for the rest of your fucking life,\" he promised, squeezing her leg against his chest as he fucked her harder. Writhing under him, Morgan felt his cock hitting every sensitive nerve in her pussy, making it impossible for her to think straight.\n\nHe dominated her so easily, without any effort or technique and he didn't care if she liked it or not.\n\n\"Stop chasing me and I'll stop running,\" she rebuffed, taking hold of his hands to pull him down onto her chest. She twisted her body more until she was fully on her back underneath him again, her legs now firmly wrapped around his waist.\n\n\"No. You don't get to make demands Morgan,\" he growled, \"I tell you what to do and you fucking do it.\" Forcing his swollen cock back into her pussy again, he felt the instinctual need to fill her with his cum and had no way of slowing down now.\n\nHer head fell back as he took over for the last time, thrusting into her with uncontrolled abandon, using her supple body to attain his own release.\n\nThis was their dance, fierce and passionate, they made love exactly like they fought.\n\nShe had lost; her pussy quickly falling for his ability to fill her so completely and fuck her so thoroughly.\n\n\"You. Are. Mine.\" Murph rasped into her ear as his cum shot deep into her womb, filling her completely as her own orgasm peaked once again. She belonged to him and needed to understand that. He was done treating her like anything but precious property, his to be hidden away like a secret treasure.\n\nHis secret treasure.\n\n***********\n\nLead Captain Smyth met with CG Barberi and CG Kelly at the Center after they arrived back to the Compound. Swooning still, Smyth was overwhelmed by the feelings rushing through him. Making love to Morgan was an experience he planned to replay in his head until he was somehow able to have her again.\n\n'Making Love,' he murmured, still feeling the adrenaline rush from their time together. He had never experienced sex like that; it felt so free and natural to fuck her, the complete opposite of what he had been told by most of his brothers. He wondered what other things he had limited himself from. No one had ever told him that there could be anything like this.\n\nBe anything like her.\n\nCG Barberi and CG Kelly were not so lucky; visibly angry and clearly frustrated, their heads were still firmly in reality and focused on the failing War efforts of the day.\n\nIt was an absolute shit show of a raid.\n\nBarking orders at soldiers as they entered the somber building, both men relaxed at the sight of Smyth, a familiar and trusted face within a sea of cold stares. CGB was visibly tense, his entire body wound up with every vein straining to pop through his hardened skin.\n\n\"Take a team into the North and South Quadrants, I want a full sweep for 50 Kilometers in both directions, anyone you find you kill. No exceptions. Our bridges are compromised too so bring a maintenance team to start repairs...,\" CGB ordered as he walked towards his office, motioning for his soldiers to leave as he entered with Kelly and Smyth.\n\n\"Christ, I never thought I'd be happy to be back in this shithole,\" Kelly hissed, motioning for a soldier to approach him from the entrance of the office. \"Go get my girl and bring her to me, I want to see her,\" he ordered, taking out a cigar.\n\nCGB picked up his phone to call Murph as he sat down behind his desk. After several long rings he finally answered:\n\n\"What?\"\n\n\"Did you fucking find her or not?\" CGB asked, handing Kelly a silver lighter from his pocket.\n\n\"I found her in the fucking woods. Alone. She will be staying with me tonight, we can rearrange things tomorrow,\" Murph replied curtly, without any further explanation.\n\n\"What?! Where the fuck is Mills?! I'm coming to see her first,\" CGB growled, feeling his mind start to cloud with dark thoughts of mutilation and dismemberment. Mills better be fucking dead or have a damn good reason for violating his oath.\n\n\"Fuck if I know, you figure it out,\" Murph hissed, before hanging up the phone.\n\n\"Fucking asshole,\" CGB snarled through clenched teeth. He was not going to go the entire night without seeing her and didn't give a fuck what Murph said.\n\nCGB took out a bottle of Whiskey from his desk drawer as he watched Patty come into his office. Walking in a sultry beeline, she went straight into Kelly's waiting arms in a perfect display of obedience. Her bare milky tits pressed against his leather jacket as he pulled her close into a long kiss.\n\nTurning away, CGB felt his anger start to metastasize at the sight of them.\n\nHe was jealous.\n\nHe needed to see his own slave, his woman, his mate. He was still beating himself over her and now he had the added sting of failing a raid on top of it, making him internally fucking miserable.\n\n\"Today we were hit left and right with misinformation and jammed comms misdirecting our firepower which wasted a third of our delegated resources,\" CGB spat. \"They must still have some fag*ot here working for them, someone that is high up and feeding them direct information.\"\n\n\"You think it could be a Squad Leader or higher?\" Smyth asked, taking a seat across from CGB.\n\n\"I think it's someone high enough to have bars but low enough to stay out of our sight,\" Kelly replied, running his hand over Patty's plump ass under her small black panties. She didn't wear a top as Kelly preferred his slaves to be topless all the time. Her hard dark nipples stood erect as her porcelain skin began to flush in response.\n\nCGB looked away from them again, taking a long swing of Whiskey.\n\n\"Bobby is absolutely out of commission,\" Smyth assured, looking to CGB. \"We have gotten all the information we can from him and should probably just kill him at this point.\"\n\n\"No, I want him in that fucking cell rotting away until the rats eat him alive. I want you to assign three from your Team to canvas the Compound for any traitors or planted equipment. I need you to do something personal for me, something I can only trust you with.\"\n\n\"Of course Sir,\" Smyth replied, sitting up in his chair.\n\n\"I need you to find Squad Leader Mills and bring him directly to me,\" CGB ordered. \"He has abandoned his post, endangered my slave and he better have a damn good reason why.\"\n\n\"Yes, Sir.\"\n\n\"I'm also requesting my own Lead Captain come up tonight to help with the War efforts. This is turning into more than I had originally planned,\" CG Kelly said, holding Patty close to his chest. Her wavy brown ponytail swayed gently down her back as she kissed his neck quietly, mewling softly as his hands wandered down to her pussy.\n\n\"LC Faraday? Fuck that would be nice, I could use his scouting experience during the hunts for sure,\" Smyth responded, eager to see his old friend.\n\nTurning towards the window, CGB watched as the sun set and changed the night sky from navy to black. He was wary from the day and wanted nothing more than to be done with it.\n\n\"That fucking Commander mapped out our land while he was running fucking circles up here, so we will need to do double duty and clean house. Move some shit around, change patrol patterns and set some mines around where no one should go.\"\n\n\"My boys will do some heavy lifting,\" Smyth responded.\n\n\"Go wait for me upstairs,\" Kelly whispered, before slapping Patty's ass and handing her off to a guard at the door. \"We saw the damage done to their HQ on the Pennsylvania border,\" Kelly started, turning back around towards the men.\n\n\"It's not enough, but we can work with it, the caves structure is not sound and there is no way they will be using it to smuggle any slaves out of the state. We will need to hold off on using more firepower if we don't want to collapse the whole thing.\"\n\n\"Send in two teams to take out the rest of their HQ perimeter so we can send the dogs in and watch their response time,\" CGB ordered, reloading his .45. \"We're done for tonight, call me if anything changes.\"\n\n\"What about Phase 2?\" asked Kelly, looking down at his phone.\n\n\"At your discretion brother, you can use my office,\" CGB said, before leaving them both as he walked out the door.\n\n**********\n\nJack watched the emergency vehicles filled with equipment and ammo, as they scattered across the freeway back to their designated Bases throughout the state. Having completely gutted out several ambulances, they had the perfect way to move their supplies as long as those Nazis actually abided by the Rules of War.\n\nThankfully, today they didn't attack the vehicles, presumably because they thought injured soldiers from their side were riding in some of them. According to the very few 'Rules of War' still in effect, Medics must help all injured troops regardless of affiliation. That's really been their saving grace as the Nationalist usually didn't risk hurting any of their own by attacking them.\n\n\"Move the weapons closer to us, I want access to everything for when we hit the barracks, I know they have added help so we need to be ready,\" Jack commanded, looking over several monitors displaying live feeds. It felt good to be back in control, to have the means to actually hurt those fucks and the knowledge of where to attack was invigorating.\n\nHe needed all the encouragement he could get.\n\nHe was in his element but also slowly splitting apart as his compulsion to run back into that hellhole to save Morgan became increasingly overwhelming. Every moment she was enslaved on that Compound, being raped by those fucks, Jack felt his mind slipping further into absolute madness.\n\nThey were doing well, had the Nationalists on their heels at this point while gathering more resources and retaining more men than he had anticipated.\n\nHe should just call it a day, it was late and his soldiers needed to regroup and rest.\n\n\"Did anyone confirm Patricia's status?\" asked Marshall Agners, as he entered the dark control room. LED monitors illuminated his haggard face, showing the telltale signs of stress and lack of sleep etched into the deep hollows of his cheeks and eyes.\n\nWeary and pleading, he looked to Jack for good news.\n\n\"She's still in the Center,\" Jack confirmed, leaving out the part where CG Kelly had taken her on as his personal slave, raping her just as savagely and consistently as all the others.\n\nAgner looked at the screen that showed the Center, his eyes narrowed and dark.\n\n\"I want her back, I want this place fucking destroyed and I want all of them dead.\"\n\nJack didn't have to respond; taking hold of Agner's shoulder, he gave it a light squeeze.\n\nThey would have their revenge soon.\n\n***********\n\nCGB galloped his stallion to Murph's brick house less than an hour later, having spent the entire time in between thinking about nothing but her. It was late but he needed to see her before he was ever able to relax. Stopping at the front stairs, he looked up in envy at the deceptively inviting warmth glowing from every window pane.",
        "As he sat outside on his horse, the idea that he had to stay away from her while she remained with Murph was more unnerving to him than he expected. He didn't think it was fair, was second guessing himself and he wanted nothing more than to confront Murph about the entire situation.\n\nDismounting from his horse, he saw the front door open before his boots even hit the ground. Murph stood stone faced and shirtless, looking down at CGB with a disgusted scowl.\n\n\"What are you doing here?\" he hissed, crossing his arms over his chest as he postured in front of his door.\n\n\"I told you I was coming to see her,\" CGB responded, walking up the brick steps. Murph's face looked more irritated than angry as he approached, his messy burgundy hair and lack of uniform said all he needed to know. Before Murph could mumble another word, Morgan popped out from behind him, looking up at CGB with shining eyes and pouty lips, she was as naked as the day she was born.\n\nHe was already fucked.\n\n\"I missed you,\" she said sweetly, moving directly for him through the doorway. CGB could hear the low growl leave Murph as she slipped past him and into his waiting arms. Her taut body moved with a silken grace that hypnotized him; from the sway of her hips to the slight bounce of her perky tits, he was always entranced.\n\n\"I... I missed you too baby,\" he whispered, picking her up to kiss her softly. He held her for a moment, taking note of his good fortune as she was safe and not hurt. She wrapped her legs around his hips as she returned his kiss, genuinely happy to see him as well.\n\nShe wanted to piss Joe off and this was the perfect way to do it. Naked and latched onto Hunter, she could practically feel Joe's eyes as they bore into her from behind.\n\n\"I want to come home with you,\" she whispered, running her hands through his thick black hair. CGB looked up at Murph and was met with cold blue daggers, his jaw remained fixed in a hard line as he restrained himself from saying something he would regret.\n\n\"No,\" was his only response.\n\n\"Why, what's wrong?\" CGB asked, putting her back down.\n\n\"Joe's being an asshole to me, a real dick,\" she huffed, hugging her arms across her chest. \"I don't want to stay here tonight and - did you hear me Joe? I don't want to stay here!\" she shouted. \"See,\" she said exasperated. \"He won't fucking listen to me.\"\n\n\"You are staying here Morgan,\" Joe responded, stepping towards her.\n\n\"I'd really rather not,\" she quipped, twirling airily as Murph went to pull her back inside. Missing her by inches she found her way to CGB, hugging herself against his barrel chest.\n\n\"Why don't you want to stay here tonight?\" CGB pressed, needing some justification before he went directly against Murph. Murph moved forward to reach for her again, missing her as she slipped behind Hunter's back to hide from him. Exaggerating her actions, she wanted to bring out Hunter's protective nature and eat at Joe's overgrown pride.\n\n\"He's mean...,\" she whispered into Hunter's back as she stood behind him, \"... and also a fucking asshole.\"\n\n\"He's always like that,\" CGB replied, turning around to cup her face in his hands. \"You will have to stay with him if that's all there is baby.\"\n\nShe pouted, switching gears again as she thought of a new tactic.\n\n\"Then will you stay too?\" she asked, looking up at him with doe eyes. Murph came up beside CGB, annoyed that she would take it upon herself, yet again, to make decisions that she had no right to make.\n\nAs fucking usual.\n\n\"He's not staying here,\" Murph snapped, reaching for her arm again to bring her back into the house. She pulled away from him before he could take hold, slapping his hand in the process.\n\n\"Either he stays or I fucking leave Joe,\" she said, snuggling herself back up against CGB's chest as she glared at Murph. She was playing with fire at this point and knew it, they both could react any type of way to her provocations.\n\nNot that she really cared.\n\nShe needed to chip away at their weak points and so far the best way to accomplish this was to turn them against one another.\n\nMuch to Murph's dismay, CGB wrapped his arms around her, pulling her closer as he rested his head onto hers.\n\n\"Looks like I'm staying Red,\" he said, rubbing his cheek into her soft hair. Murph's fists balled at his sides as he challenged him with his eyes, daring him to step forward. CGB didn't flinch, instead he gave Murph a quick wink and slapped Morgan's ass.\n\n\"Go.\"\n\nWith a sweet giggle, she spun around and took Hunter's hand, bringing him right past Joe through the arched doorway. Once inside, she made quick work of Hunter's shirt, lifting it up his hard chest in an attempt to get it over his head. Too short to reach, she jumped up, sharing a brief moment with him that made Joe's skin crawl.\n\nHe was doing this on purpose.\n\nWith a smile, Hunter helped her take it off, pulling it over his head to reveal the intricate dragon tattoo across his neck and chest.\n\nStanding on her tiptoes, she ran her fingers over it skimming his broad shoulders as she traced the black and red ink. Kissing him deeply, she rested her hand on the 1488 tattoo over his heart to feel its steady beating.\n\nSoon, Murph came up behind her, snaking his arm around her waist as he pressed flush against her back. Face to face with CGB, Murph dropped his lips down to her shoulder to softly kiss along her neck.\n\n\"Do you want us to fight Morgan?\" Murph whispered into her ear, sending an involuntary shiver up her spine. His hand ran from her hip up her back as CGB knelt down in front of her to kiss her exposed tits.\n\n\"Do you like it when we are angry with each other?\" he continued, digging his fingers into her skin as he grabbed her hips from behind. \"If I didn't know any better, I'd say you want us to fight over you.\"\n\nShe ran her hands through Hunter's hair, lifting his head from her hardening nipples. Turning around, she rubbed her ass back up against his hard cock and pushed her tits forward towards Joe.\n\n\"I don't want you two to fight,\" she said, squeezing the heavy orbs as she wiggled against Hunter, \"I want you to be nice... to me.\"\n\nMurph put his hands over hers, encompassing them as he looked down at her. \"I'm sorry if I was mean to you,\" he said, before he picked her up and brought her to his lips, kissing her softly. He always did this to her, take her emotions from hot to cold and back again.\n\nAn endless cycle of conflict, revenge and forgiveness.\n\nHunter took the hint, walking over to a nearby leather couch he sat down, letting his jeans fall to the floor. Licking and nipping at her lips, Joe was vaguely aware that he had carried her over to the couch, setting her down onto CGB's waiting lap.\n\nStraddling him in a reverse cowgirl, she ground her warm pussy over Hunter's cock, teasing him with every motion. Still excited from earlier, she was having trouble controlling herself. She was needy and aching, slowly becoming a slave to their cocks whether she realized it or not.\n\n\"You belong to both of us and will behave for both of us Kitty,\" Hunter rasped into her ear from behind. Taking hold of her hips, he lined her up with his rigid cock, using her wet opening as a guide. Murph had already taken off his slacks and stood before her, stroking himself slowly as he looked down at her. Rising up from Hunter's lap, she felt his thick cock enter her as he lifted his hips, thrusting up into her while pulling her firmly back down.\n\n\"Hunter!\" she gasped, reeling as he filled her pussy to the hilt in one hard thrust. She quickly realized her plans of manipulation were falling apart now that she was firmly between them again. Murph took her by the back of the neck and brought her face towards his cock. Her nails dug into Hunter's knees as she tried to steady herself but it was no use. He had taken control of her hips and was moving her at his own leisure, using her body like only he could.\n\n\"No more games Morgan, you are not a fucking Dove anymore,\" Murph said, tightening his hold around the back of her neck. Pushing his cock against her lips, he felt her open up to take him in, satisfying his need to dominate her for the moment. Hunter continued to move her hips up and down on his cock as he felt her knees squeeze around him.\n\nShe wanted to bite down on Joe, to jump off of Hunter, to fight both of them, to do anything.\n\nBut she didn't.\n\nTeasing his cockhead gently, she showed no signs of resistance to them and bobbed up and down working her lips and tongue like only she could.\n\n\"Kitty,\" Hunter groaned, holding her hips loosely as she started to move her body on her own, rocking over his cock faster as her orgasm grew.\n\nShe was using her skills as a Dove on them and didn't plan on stopping anytime soon.\n\nHunter's head tipped back as his hands fell from her hips, unable to keep up with her as she bounced in rhythm to sucking Joe's cock. As much as he was angry with Murph, he was his brother and partner, they were bonded together with Morgan and would make this work. In this moment, it certainly seemed like it could work between the two of them as it always did.\n\nShe had a way of making him optimistic, if only for a moment.\n\nMorgan rode on Hunter as she sucked Joe's cock feeling both conflicted and empowered at the same time. She felt betrayed and angry that Hunter would work with Joe against her, she was sure she had a better hold over him but apparently she needed to cultivate it more.\n\nShe had barely made it this far; finding herself falling deeper in love anytime she was between the two of them. The emotional black hole that was this insane relationship was not something she could have ever trained or prepared for.\n\nUsing both hands to stroke Joe now, she took his cockhead in her mouth and looked up to him, half expecting to see his trademark scowl in return.\n\nInstead, tender eyes met hers with affection, catching her by surprise. He wasn't annoyed or angry, his face was that of a man enamored; content and at peace with the woman before him.\n\n\"I love you,\" he said softly, stroking her cheek.\n\nShe blinked - Unable to register what he was saying.\n\n'What did he say?' she thought.\n\nTaking his cock from her mouth, Joe stepped back and began stroking himself again as he felt his balls start to tighten. Hunter moaned loudly as his hips bucked up into her, signaling his own release. She took her hard nipples between her fingers as she continued to bounce on his cock, all while staring intently up at Joe. Her hooded eyes held his and she knew in that moment she had lost to him for good, that she was not going to make it out of this unscathed.\n\n\"I love you too,\" she whispered, against her better judgement right before her head went back to Hunter's shoulder and an orgasm rippled through her, shaking her body to its core.\n\nJoe lost control at the sight of her; flushed and gyrating her supple body like a woman possessed, he had never seen anything more beautiful.\n\nThat was until he came a moment later, marking her tits with thick white jets of cum.\n\nNow she was perfect.\n\n*******\n\nMills watched as two UPP soldiers ran electric wires from the barracks to a detonator deep in the woods of the East Quadrant. Waiting patiently, he took his rifle and swung it over his back as he wrote down the entry points they had used onto his arm. He never planned on tracking them this far but once he saw what was going on he couldn't stop.\n\nThey were planning on blowing up the fucking barracks.\n\nMills didn't have any working comms on him and knew the Commanders would be furious by his absence. After he saw Smyth and Morgan together, these two caught his eye slithering along the perimeter of the forest. Mills decided to follow them and leave her, a choice that would only pay off if he could deliver these fag*ots without any casualties.\n\nMills watched as the two soldiers planted plastic explosives at the base of the large building, putting the devices at strategic points to ensure it would be destroyed. Mills had been watching them for a while, waiting to see if any reinforcements would arrive. None had and with time running out Mills decided to make his move.\n\nTaking his rifle, he waited for them to run another cable back towards the detonator in the woods before he pounced. Mills moved quick, making each stride count as he ran towards the oblivious men.\n\nAs he grew closer, Mills saw the large metal container that held the supplies they were using. The two soldiers had their backs to him as they rummaged through the bin looking for something he couldn't see. Mills aimed his rifle at the soldier on the right, pointing it directly at his left leg before pulling the trigger.\n\nThe blast gave Mills one moment to turn towards the second soldier before he would receive return fire. In that moment, Mills took a step forward, pointing his rifle at the other soldier's lower body, sending a bullet right through his thigh.\n\nSmyth watched Mills from several yards away as he shot the two soldiers and tackled them. Taking out his satellite phone he called CGB to report in:\n\n\"Report?\" CGB answered.\n\n\"I found Squad Leader Mills in the East Quadrant near the barracks. He just shot two soldiers, they have on enemy blues so I think he may have found some of the infiltrators.\n\n\"Confirm right fucking now, I want them alive if they are Smyth. Get them patched up and brought to the Center,\" CGB ordered.\n\n\"Stand by, Sir.\"\n\nSmyth put the phone in his front pocket and moved towards Mills as screams erupted throughout the forest. Mills was on the ground with one soldier, wrestling metal cuffs behind his back while the other rolled in the dirt holding his own thigh wound, trying to stop the massive blood loss. Their uniforms were UPP alright; special insurgent forces to be exact, which were usually fairly high within their command structure.\n\nTaking out his phone Smyth pointed and took a photo of the three men on the ground, instantly snapping Mills out of this adrenaline induced trance.\n\n\"Confirmed, Sir. Sending the photo now.\"\n\n\"Good. Bring him in Smyth,\" CGB responded, before hanging up.\n\n\"Fuck!\" Mills exclaimed, surprised to see Smyth standing over him, appearing seemingly out of nowhere. Still wrestling on the ground, Mills punched the soldier hard in the face, knocking him out cold. Smyth moved to put cuffs on the other soldier but he had already passed out from blood loss and was probably close to dying.\n\nDialing a number, Smyth made another call requesting a medic transport for enemy combatants.\n\nMills brushed off his uniform as Smyth spoke on the phone, unsure if he should confront him about what he saw in the woods earlier.\n\n\"So this is what you were doing instead of watching Morgan?\" Smyth asked as he hung up the phone, his tone hard and unforgiving. Mills looked at Smyth incredulously, unsure where his tone was coming from.\n\n\"I was searching for her after her latest fucking temper tantrum and found these men preparing to blow up the barracks,\" Mills lied. \"I tracked them all night until they led me here, they had most of it set up already, they just needed the wire.\"\n\n\"You abandoned your post, abandoned a branded slave,\" Smyth replied bluntly. \"That alone is enough for the Commanders to execute you.\"\n\nMills swallowed hard as he considered his words. Before he could respond, loud shouts began to echo from the barracks as soldiers poured out to respond to Smyth's request for assistance.\n\n\"CG Barberi wants me to take you directly to him right now,\" Smyth said, aware that he was possibly bringing Mills to his death.\n\nMills looked to him wearily and felt something in his mind snap.\n\n\"You know what, good. I'll tell him exactly why I left his whore alone, and it's because she was being fucked by you,\" Mills spat as he turned to walk away from Smyth.\n\n\"WHAT?!\" Smyth shouted, grabbing Mills arm to pull him back.\n\n\"That's right! I saw you with her you fucking traitor. I left her because she wasn't in any danger, why did YOU leave her?\"\n\nSmyth grabbed Mills by his collar and lifted him off the ground angrily, he could see several soldiers closing in on them and didn't have much time to decide what to do.\n\n\"You didn't see a goddamn thing if you don't want to fucking die today,\" Smyth warned.\n\n\"I am not afraid of you,\" Mills rebuffed.\n\n\"No, not of me,\" Smyth responded with a smirk, letting go of Mill's collar.\n\n\"I'll give you one choice right now, you forget what you fucking saw and never remember it and I'll make sure you make it out of this.\"\n\nMills straightened out his uniform, taking a moment to consider Smyth's offer. He wasn't sure how the Commanders would respond to him, even if he told them about Smyth, they might just assume he was trying to save his own ass.\n\n\"I want to be off babysitting duty for that fucking bitch,\" Mills hissed, \"...and I want Alice. You make that happen and I never saw you with the whore.\"\n\n\"Who the fuck is Alice?\" Smyth asked as the foot soldiers took hold of the cuffed men on the ground.\n\n\"She is the small slave that was brought into the residence for Morgan.\"\n\n\"A whore of your own then,\" Smyth laughed, slapping his back.\n\n\"It's a deal.\"\n\n**********\n\nAlice rubbed her eyes as she rose from bed, having been woken by a loud banging on her bedroom door. With a heavy sigh she stood, moving her legs towards the door.\n\nOpening it, she was met by Patty, her newfound mentor and slave sister within the Center. Alice didn't really see Patty as a slave sister like Morgan, but still saw her as one nonetheless. The Center was painfully boring without Morgan and her Masters have not said when she would be allowed back into the residence.\n\n\"Alice, good morning! Are you ready for our workout?\" Patty asked, carrying two pastel yoga mats into the bedroom with her, leaving the four heavily armed soldiers that escorted her at the door. Patty had been taking every opportunity to move around the building, getting an idea of its layout so much that she now knew it even with her eyes closed.\n\nShe would need to.\n\n\"It's so early, why don't you ever sleep in?\" Alice whined, putting on the pale green slip dress left by her bedside. Patty ignored her complaints, unrolling the mats in the middle of the room.\n\n\"You know what doesn't sleep? Your inflamed joints. You know what starts the day early? Your crippling back pain. Get up and get stretching,\" Patty ordered, pointing at the mat beside her.\n\nAlice had not gotten used to the structure Patty had enforced upon her, she didn't know why she was doing this and was a bit scared to ask. Working out and reading books was all that Patty wanted to do and she never explained why or where she came from. All she said was that she knew Morgan and was here to help.\n\nWhatever that meant.\n\n\"We have enough time for a quick session before we have to head out.\" Patty said, bending over into a downwards dog pose.\n\n\"Where are we going?\" Alice asked, reaching overhead as she stretched her arms.\n\n\"We..,\" she started but was stopped short as the door opened and several soldiers stood motionless awaiting their next order.\n\nCG Kelly walked forward and through the soldiers a moment later, making his way towards Patty.\n\n\"Sorry Doll, I know I said you'd have time for this but she's already here,\" Kelly said, taking Patty into his arms. Patty grumbled softly but didn't talk back, she looked to Alice and motioned for her to follow.\n\n\"Come on.\"\n\n*********\n\nCGB made his way back to the Center to meet with Mills and Smyth alone. Smyth had already brought Mills up to his office, a courtesy if there ever was one. He wanted to give the man a chance to explain himself, something he usually didn't have the patience for.\n\nPatience was something he was trying to learn.\n\nCGB walked in and saw both men standing in front of his desk offering a formal salute upon his entry.",
        "Closing the door behind him, CGB stepped slowly to maintain his composure, trying his best to not think of Morgan lost in the woods alone, in danger for hours while her trusted guard went against orders to play super soldier.\n\nPatience, he was learning patience today.\n\n\"Smyth you may go...\" CGB started but Smyth cut him off.\n\n\"Sir, if I may. I would like to put a word in for Squad Leader Mills...,\" he started, taking a step forward.\n\n\"Really?\" CGB asked, surprised.\n\n\"Yes... I was a part of the initial search party for her directed by Squad Leader Mills. He did a fine job searching for her for hours, sent a chopper when he saw your wrecked motorcycle...\"\n\n\"What? She wrecked Betsy?! Fucking Goddamn it, why didn't anyone tell me!\" CGB growled, taking out his phone to text a message furiously.\n\nLooking over to Mills, Smyth smiled wryly before reaching over the desk to pick up the handle of Whiskey.\n\n\"When Mills found the bike, he did everything he could to find her, he went into the woods alone and searched for hours, losing comms along the way.\n\n\"That true Mills?\" CGB asked, taking the handle of Whiskey from Smyth.\n\n\"Well yes, I ordered a chopper but I had a feeling she may have used your bike as a decoy. She escaped the Residence by rappelling down using chains from the room. She's... very resourceful.\"\n\nCGB smiled as he approached the man, visibly relaxing a bit.\n\n\"I am aware. You realize though, she cannot be more resourceful than her guards. If she escapes again I will have no choice... but for now. I want you and Smyth to watch her together,\" he said, turning back around. \"I don't think this is a job for one man anymore.\"\n\nMills took a deep breath and realized he just extended his stay in Hell even longer.\n\n\"Alright, I think it is worth noting Mills took out two top tier fag*ots and caught them both alive,\" Smyth encouraged, \"I for one am very curious to see what they have to say.\"\n\nCGB smiled and slapped Smyth on the back, \"I am glad I practiced patience today with you brothers. Now I am going to go have some fun.\"\n\n********************\n\nMorgan walked into the Center with Joe after several hours of fighting that finally led to a compromise.\n\nYeah right.\n\nShe knew they were double-crossing, backstabbing liars that were just paying her lip service but she really wanted to see Patty and Alice. So she walked behind him, right back into the building she successfully escaped from.\n\nIt was hot as usual and stuffy without any open windows. She hated how bleak and pale the granite walls were and wished they would let her paint or something. She watched CG Kelly and Smyth walk down a corridor towards an interrogation room. Soon after, muffled noises could be heard as they briefly opened the door to walk in. Morgan looked over to Joe and saw him talking to a Lieutenant about the Raid they had completed.\n\nTiptoeing quietly, she moved away from him and began walking down the hallway, heading towards the room the men had just entered. She held her breath as she opened the heavy wooden door, anticipating a torture in progress.\n\nInstead, she saw Patty and Alice lying on medical tables, their legs in high stirrups. Morgan gasped at the sight as her mind registered what she was looking at. She took a step away from the door only to have her back hit a heavy figure.\n\nJoe.\n\n\"No...\" she said, turning around to face him.\n\n\"Let's go.\"\n\n\"I said, No!\" she screamed, dropping down low to get away from him. Joe reached for her immediately and grabbed her by her waist, pulling her back and into the interrogation room. Hunter was already waiting with the Physician at a table, one with leather bracers to keep her still as they knew she would be noncompliant.\n\n\"Kitty stop it, this will not take long,\" Hunter barked, taking hold of her kicking feet as she struggled in Joe's arms.\n\n\"No! Fuck you and fuck him, I am not doing this!\"\n\n\"Yes, you are,\" Joe said, carrying her over to the table with Hunter and strapping her in. The Physician waited until she was securely strapped to the table before he approached her.\n\n\"Put a needle in me and I will hunt you down and kill you in your sleep you fucking bastard,\" she hissed, glaring at him.\n\n\"Don't worry Doc, she won't,\" Hunter assured.\n\n\"Yes I will. You know I will!\" she promised, making sure to give him her scariest look.\n\nThe physician hesitated for a moment but the hard stares from the Commanders overrode the threats of the small woman before him. Taking the needle to her arm, he attached a butterfly to collect several vials of blood.\n\nMorgan winced but did not cry out, she hated needles and could not bear to look at the one in her arm. It made her physically ill to think about her blood leaving her body, going into test tubes so they can get information on her that she didn't want to share.\n\n\"I only need a few minutes and I will have some results for you.\"\n\nJoe went to her head and softly brushed her hair from her face, looking down at her affectionately. He wasn't sure if she was pregnant or not, but he knew that he loved her and wanted her to be. He was told about her escape while they were gone and knew that there was nothing that would stop her but a fucking baby weighing her down.\n\nAlice and Patty were just finishing up their exams as the Physician returned to the room with a few pieces of paper.\n\n\"Unfortunately, you two are not with child and may need some medical intervention. Both of you have very low hormone levels and will need immediate treatment to offset some of these imbalances.\"\n\nStepping forward, a small smile cracked his face as he handed Murph and CGB both a piece of paper.\n\n\"Congratulations.\"\n\n*********<br >Please Vote and Comment!"
    ],
    "authorname": "MObryan",
    "tags": [
        "fighting",
        "force",
        "interracial",
        "mmf",
        "oral",
        "pregnancy",
        "submission",
        "threesome",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-war-of-2020-pt-09"
}