{
    "title": "How to Survive Depression",
    "pages": [
        "One of the bad things about depression is that it can sneak up on you and blindside you when you least expect it. Another bad thing is that you may not realize that you have it until your entire life is unraveling around you.\n\nConsider too that there are a lot of different kinds of depression: seasonal, manic, post-partum and more. My symptoms were not the classic signs of depression. I did not stay in bed all day with my head under the covers. I was irritated. Everything irritated me: my kids, my husband, my dog, the way my cloths fit, my job. Another major symptom was that I lost all coping abilities. My daughter would spill milk on the table and my day was ruined along with any kind of positive mood. The moral to that paragraph is that you don't have to have all of the classic symptoms to be depressed. Do some research or just go to step #1. This leads me to step number one of surviving depression.\n\n1) Talk to a doctor. Yes I know, the easiest thing in the world right? NOT. Actually going to the doctor and saying I am depressed and I need help was one of the hardest things I have ever done. Probably the only reason I did was: I was scared of how I acted with my kids and my husband said get help or move out, without the kids.\n\n2) Get your medication and keep trying till you get it right. Once you get to the doctor and get some anti-depressants everything is peachy, right? No, sorry but It doesn't work that way. The first medication I took helped a great deal but I was nowhere near one hundred percent. The dosage was upped once and then twice helping a bit more each time. Two years later I got a new doctor (we moved, I didn't actually seek one out) and she kept me on the original medication and had me try another along with it. HOLY HELL what a difference it made. The sun shone down and the angels sang in four part harmony. Two days on my new meds and I was a different person. I was awake for the first time in two years and I was horny as hell (much to the delight of my much neglected husband).\n\nYou may think that one kind of medicine is all you need but I discovered that there are THREE different chemical pathways of the brain that can all be malfunctioning; one at a time or in any combination. This means THREE different types of anti-depressants that you take one at a time or in any combination.\n\nDo not think that you can't ask to try something else if you feel that it is not working for you. If your doctor won't work with you FIND ANOTHER DOCTOR.\n\n3. Try a therapist at least once or twice. If you can't afford one check out one of the pastors/priests/rabbi in your area. Yes I did this, I called a total stranger and asked them to help me, and you know what? She was available to me immediately, on a Saturday, on her day off, she dropped everything to help this sobbing stranger on the phone. I don't remember her name at the moment but she is one of those people that I will never forget and will always be grateful to.\n\nI know you are thinking --hey I have my meds now everything is going to be great and I shouldn't have to do anything else. WRONG. Chances are that the relationships around you have taken a beating and so has your own emotional self. You may have withdrawn from everyone around you and you need an outside party to help you figure things out. Could be you only need to go a couple of times, or a couple of times a week. Which ever it is don't shortchange yourself from getting the help you need.\n\n4. DON'T STOP TAKING YOUR MEDS WHEN YOU START FEELING BETTER. My doctor warned me that the first drug I was taking was one of those that you take for a while and it builds up and maintains a steady amount in your body. The withdrawal symptoms could be WORSE than the depression itself. The second was one that acted in much the same way.\n\nTalk to your doctor if you want to get off your meds and they will tell you the best way to do it and can monitor you.\n\nThese are definitely strong drugs that you are dealing with and you need to treat them with respect.\n\nMy doctor warned me too, that although it was post-partum depression I was dealing with I had enough history of depression in my immediate family that I could have triggered something in my genetics and be on meds for a long time.\n\n(And yes I think people like Tom Cruise who have the gall to criticize people that have gotten help (Brooke) should be locked in a small room with ME, OFF OF MY MEDS until they realize what idiots they are. If God ever grants me one wish it would be that people like him experience post-partum depression in all it's glory so they can see what it is like.)\n\n5. Be active in your recovery. Do research to find out more about your type of depression and the best ways to treat it. Join a support group. Do what you need to do to stay healthy and realize that sometimes everything else must take a backseat to you working on the problem. Everyone around you will benefit from you staying healthy.\n\n6. Try not to strangle friends and family when they offer well meant advice, comments or do anything else completely stupid about your depression. Depression is a disease. In some cases it is temporary and can go away. In many others the 'hard wiring' of your brain is off and you are not making enough of the right chemicals. The only way to fix this is to take your meds. Sometimes you think you have it licked and you end up facing the same problem again. Most people don't realize that some people can never be cured. Short term depression does happen and you can get off the meds, end the therapy and live happily ever after. For the rest of us, we will be living with it for a long time. It is a chronic condition that can be managed quite well.\n\nMy own mother who has suffered from depression, and holds a Masters degree in mental health keeps asking me if I am off my medications yet. HELLO she should know better, but apparently doesn't. After putting up with it for so long I simply told her that I didn't appreciate her comments as they made me feel that I should be able to cure my depression all by myself; which was like telling a schizophrenic that they could stop taking their meds and be fine. Furthermore her comments were undermining the fact that I was taking my meds to make me feel better and maintain my health. I also told her that my doctor was the one who would help me make the decision of if and when I would go off them. She shut up about it and hasn't said anything since. It is nice.\n\nBe polite but be firm. You and your doctor know what is best for you. And they need to but out.\n\n7. Express your appreciation regularly to the people that stuck with you. My husband did not divorce me. I WOULD HAVE DIVORCED ME. He stuck with me because he loved me and cared enough about me and our kids to help me work it out. He is regularly thanked and gets laid all the time. (He loves my new meds as much as I do!)\n\nI would love to hear comments from you. (With the exception of Tom Cruise of course, unless it is an apology to me and every other female and family member that has been effected by depression. A box of chocolates would be nice too, Tom.)\n\nKeep in mind that I am not a medical professional and my advice is just that...advice. Stay healthy. "
    ],
    "authorname": "Emerald_Dragon",
    "tags": [
        "post partum",
        "depression",
        "medication"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-survive-depression"
}