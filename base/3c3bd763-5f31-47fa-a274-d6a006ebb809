{
    "title": "Pink Pills of Persuasion Ch. 06B",
    "pages": [
        "Johnny's Birthday Weekend -- Saturday Night\n\nMy phone went off again. \"Taking your time Johnny?\"\n\nWith the familiar pink vision back at my disposal, I knocked on the door between my room and Carly's hotel room. It was the same door that Anita entered through last night. There was no answer. I knocked again. No answer again. I tried the handle this time and the door was indeed unlocked. \n\nI carefully opened the door and walked into the darkened room. The only light in the room was the outside lights peeking in through the curtains. As my eyes adjusted quickly to the darkened room, I realized that I was absolutely just in taking those pills as a precaution!\n\nHoly fucking Toledo! What did Laney pull me into?!?\n\nFrom what I could tell, neither Laney nor Carly were actually in the room. However, there was Heidi standing in the middle of the room. The mysterious Mexican hottie that I've been pining over all weekend was finally alone with me. However, from the look of Heidi's outfit, her idea of getting to know each other better was quite different than mine.\n\nFrom head to toe, Heidi was dressed in black. Without heels, she was a tall woman that was almost eye level with me. In heels, she was an imposing presence at just over six feet tall. And damn, these were some heels. These were black combat heeled boots that went about mid-thigh high and were adorned by lines of silver spikes. Tucked into those combat boots were black latex pants that wrapped around her beautifully sculpted legs like a second skin. Not that she needed one due to the tightness of the pants, but she had on a black belt studded with silver spikes with silver rings strategically hanging every few inches along the bottom of the belt. It looked like there was a coiled chain hanging from one of these rings.\n\nShe was wearing a black tank top cut around her bust to look like a spider's web that was guarding her large treasure chest. The laws of physics were currently being put to the test as I couldn't for the life of me figure out how those voluptuous breasts were being kept within that said tank top. Once I reluctantly moved away from gawking at her chest, I continued to check out the rest of Heidi. Her bracelets and necklace matched her belt as these were also studded with silver spikes. Her lips were coated with a dark red lipstick, and her eye-shadow looked to be applied dark and thick. With a stern and serious look currently on her face, I was both turned on and a little bit afraid.\n\nEven with the powers of pink persuasion at my disposal, I was dumbfounded by the situation that I currently found myself in. In what felt like minutes but was most likely seconds, Heidi kept silently looking at me like a predator upon its prey. Little did she know that I was actually a pink-pilled wolf in sheep's clothing. \n\nHeidi was the first to break the silent but tense stare-down.\n\n\"Johnny, Johnny, Johnny, are you ready for a birthday present unlike anything you have ever received before?\" With that, Heidi grabbed a leather riding crop off the desk that was behind her and started to wave it in front of me. As she taunted me with the crop, a diabolical grin formed across her face.\n\nDespite her obvious black widow tendencies, my first thought surprisingly was damn...Heidi is looking so fucking hot! My second thought was...what the fuck am I doing here?!? My third thought was...what the hell was Laney thinking in setting all of this crazy shit up?!?\n\n\"Johnny, you have not answered my question! Mistress does not like it when her little boys don't obey her!\" With that Heidi took a step towards me.\n\nDespite the setting, I couldn't help myself. \"Mistress, seriously?\"\n\nMy sudden goofiness momentarily startled Heidi, but she quickly recovered in an infuriated fashion. \"Well, I have a collar just for you attached to the end of my chain! So you better fall in line before you are wearing it like a dog!\"\n\n\"Ok, sure thing, Heidi!\"\n\nAt the mere mention of her real name, Heidi quickly turned around and smacked the riding prop against the top of the desk behind her resulting in a crack that vibrated throughout the room. Even though I watched her do this, it still startled me. \n\n\"The name is Mistress and Johnny, you're my loyal, obedient little subject tonight!\"\n\nMaybe it was the revelation of her dominatrix title or just the simple fact of knowing that I had HRS-101 in my system, but I definitely wasn't as intimidated by this beautiful seductress as I was when I stepped into the room.\n\n\"Sorry Heidi, but unlike Rihanna, whips and chains don't excite me! So go ahead and hand me your whip!\" The look on Heidi's face was a mixture of confusion and anger. She hesitated but fulfilled my request. This was the first time that I have ever seen a female hesitate under the influence of HRS-101. With this my mind was telling me to tread lightly, but my hard-on had other ideas. \n\nWith the riding prop now in my possession, I followed up with another order. \"Heidi, please turn around so that I can take all of you in!\"\n\nBefuddled by the change of control in the room, Heidi didn't say anything but turned around very slowly as if there was a struggle going on for control of her body. I admired her strength but the focus of my admiration quickly changed once her back was fully turned to me. \n\nDamn, those black latex pants looked so phenomenal and tight from behind. Due to these pants almost being vacuum-sealed onto Heidi's lower half, I could tell right away by the smoothness of the material on her ass that she wasn't wearing any panties. I stepped towards the now less-domineering dominatrix and palmed her round ass. It wasn't as big as Anita's nor as unbelievably bubbled as April's but it was definitely round, firm, and complemented her curvy frame perfectly. I pinched her latex covered ass causing Heidi's breath to go short.\n\n\"Very nice ass you got there Mistress!\" I said in an almost mocking tone. \n\n\"Johnny, what the hell is going on?\" I could tell by the shakiness in her voice that fear was now added to her mixed emotions of confusion and anger as Heidi must now be in unfamiliar territory.\n\nConsidering she just stated that her mission for tonight was to toy with me as her submissive pet, I let her stew in this current situation as I continued to admire her from behind. Her top was cut so that it was bare in her back. In the square center of her back, there was a massive but beautiful colored-ink tattoo of a black, orange, tan and white jungle cat with piercing amber eyes. It looked as if it was springing out of a bouquet of colorful flowers. I don't have tattoos and don't have strong feelings one way or the other about them, but I must admit that Heidi had a meticulously inked piece of art on her back. With my hand still firmly placed on her ass, I studied her tattoo as if I was at the Louvre Museum studying da Vinci's Mona Lisa. \n\nWhile I was tracing the outlines of the leopard with my finger, Heidi finally regained her composure enough to speak. \"Johnny, could you please stop this? I'm very uncomfortable right now!\"\n\nI chuckled at the irony of Heidi's last statement. \"Uncomfortable?!? Your entire intention tonight was to humiliate me as your pet! So, if you don't mind, I would like to get back to admiring both your ass and this cool leopard on your back!\"\n\n\"It's not a leopard Johnny, it's an Ocelot!\"\n\nI consider myself an educated fellow, but I have no idea what the hell an Ocelot was. \"Ocelot?\"\n\nHeidi sighed and spewed out some education for me. \"It's an animal found in the part of Mexico that I'm from, Veracruz. In my culture, the ocelot is a revered animal known for its beauty and hunting skill.\"\n\nShe was right about one thing! This tattoo seemed to do the Ocelot justice in showcasing its beauty. I gave the tattoo one last glance, tossed the riding prop back on to the desk and then took a step towards Heidi from behind. At the same time, I placed both my hands to her shoulders and pulled her towards me. I leaned in and placed my head forward to the right of her head. I could feel her nerves had now fully taken over her body and the once confident look on her face had disappeared. At the same time, I knew she could feel my hard-on pressed against her latex-covered ass. I slowly swiveled my hips so that my dick would start to grind against her. \n\n\"What the fuck Johnny?!?\" I could feel her body occasionally jittering as she continued to try to fight the persuasiveness of the pink pills. \n\nTesting the limits of the HRS-101 in my system, I tried to silence her for the time-being. It worked for now. I then lowered my hands off her shoulders and reached around to cup her web-covered tits. I gave them a squeeze and playfully squished them together, while they miraculously remained secured in her top. By this time, her breathing had quickened to a very uncomfortable pace. While maintaining my playful grip on her breasts, my eyes re-focused on the side of her face. Her right eye kept darting around the room looking for answers. Her anger and confusion had now completely given way to her fear as if she truly was now devoid of hope for getting out of this current situation under her own free will. \n\nTo be honest, her sense of dread outweighed the power that I had in this situation. It wasn't a good look on her and I decided to take pity on this mysterious Mexican hottie! Not moving from our current position as I was enjoying the feel of her body from all angles, I not only calmed Heidi's nerves but also told her to freely submit to my wishes. At first, she didn't give me any indication that she was following my instructions. After the third go-around with this mental instruction, I could finally feel her body loosen and her breathing normalize. \n\nWith Heidi now at ease, I turned her to face me. For the first time this weekend, our faces were only inches apart. With her heels on, she was indeed exactly eye level with me. Earlier this weekend, I noticed that she had beautiful warm caramel colored eyes. Up close, these round wide-set eyes that were full of passion earlier were now lifelessly focusing on my face waiting for my next instruction. She possessed an oval shaped face with sharp nose and jawline that still maintained a beautiful yet delicate feminine look for her. Like April with her obvious mix of Spanish and Asian genes found in most Filipinos, I could see that Heidi was a wonderful mix of Spanish and native Mexican blood. Being so close to the border, many of my friends of Mexican heritage would often joke that the only thing that the Spanish gave them was their good looks. From looking at Heidi's striking profile, I couldn't disagree with my friends on this.\n\nAs I was finishing my study of Heidi's beautifully sharp facial features, I had another naughty idea pop up into my sex-fueled brain. Gently pushing and guiding Heidi's body, I had her bend over with her hands planted against the top of the desk. I retrieved the riding prop from the desk and returned to my newfound favorite position behind her. While figuring out my next move, I admired her still-covered ass while casually waving around the riding prop. Without the power to do anything else, Heidi patiently waited for me. \n\nSatisfied that I had enjoyed this clothed view enough, I reached around and unbuckled her studded black belt and placed it on the desk. After an initial struggle of creating space between the latex pants and her skin, I was able to dig my fingers into her pants just enough so that I could get a hold of her waistband. With a stiff but not too rough of a tug, I started to get her pants moving towards me exposing her gorgeous ass. Still struggling with the latex, I gave up and stopped pulling her pants just as it reached the top of her kneecaps. \n\nEven with the challenge of pulling these impossibly tight pants down, I still managed to hold onto the riding prop in my right hand. With her gorgeously light brown ass exposed, I decided to tease her a little. I took the riding prop and gently traced it around the natural outline of her curvy ass. Even under my mental instructions for her to relax, I could see Heidi's body tighten with recognition of the riding crop touching her body. I continued to let the riding crop playfully graze against her exposed skin including the inside of her thighs which caused her to pant in anticipation. I'm never been a huge fan of foreplay, but this was exhilarating. \n\nRemaining in the bent-over position, I used the riding prop to gently probe and push back her curvy ass flesh to give me a better look at her pussy lips. As I did this, I kneeled down. Now that I had a better vantage point, I saw Heidi's pussy lips slightly protruding from her body. Even with her trying to resist the HRS-101, I could tell that she was wet as her pussy lips were glistening in the limited light coming into the room. I flipped the riding crop around in my hands, so that the slimmer handle was facing the bent over form of Heidi. \n\nI mentally reminded Heidi to remain calm as I slowly inserted the handle of the riding crop into her pussy lips. The riding crop didn't meet much resistance as it slid easily into her pussy. All of this foreplay naturally lubed Heidi's vaginal walls nicely. I watched as Heidi arched her head back and let out a low sensual moan at the crop's entry into her. After a few inches were inserted, I slowly pulled back out. Just as I was about to pull the crop completely out of her, I slowly slid it back in. As Heidi got comfortable, and more importantly turned on, she started to slowly gyrate on the crop with the lower half of her body while her moaning turned into a guttural, sexual hum. \n\nI've experienced some outrageously sensual things lately thanks to these pills, but nothing this kinky. I could feel my dick anxiously pressing against the fabric of my clothes begging for its freedom and chance at this beautifully wet delicious pussy in front of me. Still winging it at this point, it didn't take me long to fish my boner out from my shorts. With one hand, I started to caress my hungry hard-on while maintaining the deliberate pace of the riding prop into Heidi's pussy. \n\nAfter a few more minutes of listening to Heidi's pleasurable humming, I was starting to get a little jealous of the prop. I left the prop in Heidi's pussy as I stood up ready to unbuckle my shorts and get more comfortable. As I was reaching for my belt, a phone started to vibrate and illuminate the room from the top of the desk. Never leaving her bent-over position, Heidi instinctively looked up at the phone and then looked back at me. Since it must have been her phone, I simply shrugged my shoulders. It was my birthday weekend and whoever it is on the phone can wait until we're finished. \n\nI walked over to the side of Heidi and admired how the fabric of her tank top was miraculously keeping her breasts contained. With her pants still stuck around her knees, the riding prop poking out from her pussy and her bare ass pointed up into the hotel room's air, she was a sight to see. I chuckled at the current predicament that this dominatrix found herself in. I didn't have much time to ponder this as her phone started buzzing again. This time in short increments indicating that she was getting text messages.\n\nOh hell, now I'm curious. With my freed dick pointing the way, I walked over to the desk and picked up Heidi's phone. \n\n\"What's your password, Mistress?\"\n\nHeidi answered and I quickly typed in the code. Her phone came to life and I immediately looked to see what all the fuss was about. \n\nThe last furry of buzzes were indeed text messages. I opened her text message icon and saw 3 unread messages interestingly enough from Laney. I tapped the icon and the messages from Laney appeared.\n\nFirst message said \"Code Red!\" What the fuck?!?\n\nSecond message said \"Carly...\"\n\nI didn't get a chance to read the third message cause I heard the buzzing sound of the hotel door being unlocked from the hallway. Oh shit...it's...\n\nThe door opened and Carly entered the room. She immediately stopped in her tracks as she saw us. \n\nCarly's face was in complete shock with her dreamy blue-gray eyes practically bugging out of her eye sockets. With her body frozen in shock, Carly's eyes drifted from Heidi to me. Even though I had the powers of pink persuasion at my disposal, I was just as shocked as Carly and I currently found myself incapable of moving, speaking, and/or thinking. I can only imagine the scene in front of Carly...a bent over half naked Heidi with a riding crop sticking out of her ass and myself fully dressed standing next to her with my boner happily poking out.\n\nAs soon as Carly's shock wore off, she threw her hands up in disgust and quickly walked out of the hotel room. My shock wore off the minute she disappeared into the hallway and I quickly ran after her.\n\nI got into the hallway and she was already about 10 to 15 feet ahead of me. \"Carly, hold up. Why don't you turn around and come back to the room?\" I mentally instructed her to calm down and not to say a word.\n\nMuch to her surprise, Carly followed all three orders and quickly walked past me back into the room with a perplexed look on her face. \n\nAs I was about to turn to follow her, I noticed an older gentlemen holding an ice bucket just a few doors down. By the look on his face, he must have seen the whole thing. \n\nAt that same moment, I realized that my dick was still out and free for the world to see. I quickly covered myself up and gave the older gentleman a sheepish smile. \n\n\"Not trying to get involved son, but next time, with a fox like that, you don't need to take a few warm-up strokes before stepping up to the plate!\"\n\n\"Um...thanks!\" I wasn't looking for unsolicited advice, but since he literally caught me publicly exposed, I was going to have to take this one on the chin. Even with the pink pills of persuasion in my possession, why do I keep finding myself in these awkward predicaments?\n\nBefore any more awkward interactions with other hotel guests, I quickly got back into Carly's hotel suite. I found Carly just inside the door calm but still with a confused look on her face. Heidi was also standing with the riding prop returned back to the desk but her pants were still around her knees.\n\nAs always, Carly looked good. She had on tight light blue jeans and sandals. She had a tight green cotton tank top tucked into her jeans with just enough cleavage on display to make your mouth water wanting to see more. It looked like she was still sporting her jewel-covered starfish necklace that disappeared into said cleavage. She complimented this necklace with simple classy gold hoop earrings. Her luscious long blonde hair was currently pulled back in a pony tail with her round beautiful sun-kissed face and slightly rosy cheeks now unobstructed to my view. Not that she was looking at me though as her eyes were locked on to Heidi. \n\nI didn't quite know where to start, so I acted casual. \"Good evening Carly.\"\n\nWithout breaking her gaze on to Heidi, Carly calmly responded, \"What the hell is going on in my hotel room?\"\n\nApparently, Laney must have hooked herself up with a copy of Carly's room key without letting Carly in on the weekend's extra-curricular activities. \n\n\"Yeah, I'm still trying to figure it out myself Carly. Why don't you strip down to your bra and panties and get yourself comfortable like Heidi?\" At this point, why the hell not? It sounded like a reasonable request to me. \n\nCarly hesitated at my request but then I mentally informed her to play along. With that momentary hesitation out of the way, Carly casually slipped off her sandals and started to unbutton her jeans. Due to the tightness of her denim, Carly had to give a little extra push to get her jeans off of her hips and down past her ass. While she did this, her panties slid down slightly giving me a perfect view of the best plumber's crack that I've seen since my hike with April a month ago. It truly was just a quick glimpse as Carly quickly re-adjusted her bottoms. She then pulled off the green tank top over her head causing both her hair and boobs to fall back into place in unison once the fabric was gone. It was a scene straight out of an 80's sex-comedy movie!",
        "Carly looked good in those white silk panties that were struggling to cover her large behind. It was apparent that her panties were smaller than her bikini bottoms as her tan lines were cutely peeking out. Her white bra had an intricate rose design that was also struggling to prevent her large breasts from spilling out. Without heels, Carly was just a tad shorter than Heidi. She remained calm as instructed but she couldn't fully cover her anxiety as she kept shifting her weight from one leg to the other. \n\nCarly's gaze remained fixated on Heidi. Heidi, who was confused and a little embarrassed for the last few minutes, now realized the unusual attention that Carly was giving her. She returned Carly's gaze with a look of sexual curiosity. \n\nThis evening just kept getting more and more interesting as I could feel the sexual tension between Heidi and Carly building in the room. \n\nTaking full advantage of this curveball, I turned to Carly. \"Carly, what do you think of Heidi?\"\n\n\"She's a fucking knockout!\" Carly replied without taking her eyes off of Heidi. \n\n\"What would you like to do with her?\"\n\n\"A lot of things...if she would let me!\"\n\nI looked over at Heidi, who had been quietly watching our exchange, but was now sporting a big smile across her face. \n\n\"Heidi, it looks like you are not opposed to Carly's desires!\"\n\nHeidi's eyes were full of desire as she was casually licking her top lip. \"I'm not a gentleman but I do prefer blondes!\"\n\nNot one to get into the way of the undeniable, I mentally lowered both of their remaining inhibitions which pretty much guaranteed the sexual fireworks were about to begin. \n\nCarly started to nervously approach Heidi, whereas Heidi met her halfway in a much more confident manner. Just inches apart, Carly reached up and wrapped both of her arms around the shoulders of the taller high-heeled dominatrix. Heidi reached behind Carly's lower back in return completing the snug embrace. At this point, I could only make out Heidi's face as Carly's back was to me. After sporting a quick flirtatious smile, Heidi unsurprisingly made the first move and leaned down for first contact. At first, Heidi simply laid in for a quick smooch. Once the proverbial waters were tested, they both really started to explore each other's lips. \n\nAs their make-out session intensified, I watched Heidi's hands slowly migrate down Carly's lower back to eventually cup her silk-covered ass. Her long narrow fingers stretched out in an attempt to cover as much as of the blonde's round ass as possible. Once her fingers were in place on both cheeks, Heidi squeezed. Carly's reaction was immediate as she tilted her back while letting out a sensual gasp. For the first time since their embrace, I finally could see Carly's face. With Carly's head tilted, eyes closed, and mouth agape, Heidi's eyes lit up as she started to lick and nibble on the blonde's exposed neck. \n\nBefore the hotel room could get any steamier, the phones started to annoyingly vibrate again. The first one was Heidi's. I ran over and grabbed it off of the hotel desk. Seconds later, my phone started to vibrate in my shorts and I pulled it out with my other hand. Heidi's phone was locked so I looked at the message on my phone. \n\nOh shit, it was from Laney. She must have been freaking out! Her message to me was simple. \"Johnny, are you okay?\" \n\nIt was a vague enough question to mask its intent. \n\nI typed back. \"Sorry Laney, I've been stuck in my room. I had friends calling me in a drunken stupor to wish me a happy birthday. I've been failing miserably on getting them off of the phone. I'll come over in a few minutes.\"\n\nLaney's reply came back quickly. \"Don't worry, take your time. I need a few minutes as well to freshen up. I'll let you know when I'm ready.\"\n\nAs soon as I finished reading this message, I could hear another vibration coming from the floor near me. I looked over and saw part of Carly's jeans moving. After re-pocketing my own phone, I reached down and grabbed her phone out of her back jeans pocket. \n\nNow, I had Heidi's phone in my left hand and Carly's phone in my right hand. I was almost 100% sure that they had messages from Laney on them. Unfortunately, both of these phones were locked. \n\nI looked up and realized that Heidi and Carly were oblivious to all of the phones going off. In the short time that I was going back and forth with Laney, Heidi must have made quick work of getting Carly's panties off as the brunette was currently pawing the blonde's two-toned round naked ass. It was quite a contrast to see Carly's well-tanned legs against her white as snow ass cheeks. I also realized that Heidi managed to get off her heels and pants off. Dang, she was fast!\n\nI didn't want to break up this steamy moment between Heidi and Carly, but I wanted to tie up some loose ends.\n\n\"Excuse me ladies, do you mind unlocking your phones for me? Then you may go back to enjoying each other's company.\"\n\nBoth ladies unlocked their phones for me and then went back to kissing each other as if I wasn't there. As expected, Laney had contacted both Heidi and Carly in fear of Carly walking in on Heidi and myself. I still didn't know what Laney was up to, but I used both phones to pacify Laney about some bull-shit story of Heidi and Carly engaged in some long girl talk.\n\nWith this complete, I placed both of the ladies' phones on the desk and returned my attention to the ladies. Not that I needed to, but I instructed both of the ladies to pretend that I was no longer in the room. In fact, I told them to forget that I was ever in the room to begin with. I was new to this voyeur thing, but I couldn't keep my eyes off the sexual magnetism that was being shared between Carly and Heidi. \n\nBoth ladies were naked from the waist down and inching closer and closer to the bed. With Heidi's back only inches away from the bed, she grabbed Carly's bra from the center and pulled Carly on top of her as they both laid down on the bed. Heidi locked her legs around Carly's lower back and pulled the blonde down as they continued to make out. \n\nI sat down on the chair next to the bed and got myself comfortable. My dick was still sticking out of my shorts and remarkably was even harder than before. I slowly stroked it while continuing to enjoy the show. \n\nHeidi somehow managed to pull off her spider-webbed black tank top revealing her gorgeously large, natural breasts. Unlike Carly's obvious tan-lines, Heidi must tan in the nude as there was just an even golden bronze tone applied to every inch of her beautiful body. Heidi then lifted her left breast while guiding Carly's mouth to feed on it. As Carly eagerly suckled and nibbled on newly exposed left tit, Heidi closed her eyes in bliss. \n\nAfter fully glistening both of Heidi's glorious tits with kisses and suckling, Carly pulled back to admire her work. At this moment, Heidi reminded the blonde who was in charge of this encounter. The brunette popped up from her laid back position and pushed Carly on to her back. With a sleight of hand, Heidi magically slipped off Carly's white rose bra releasing large two-toned melons much to my delight. \n\nAfter years of wondering what Carly looked like naked, Heidi had finally given me my wish in a matter of a half hour. As my eyesight moved from Carly's feet up, I was greeted by beautifully tanned legs that led up to her Carly's vaginal region that was white as snow as her bottom. Her natural blonde pussy hair wasn't neatly trimmed but not bunched in one area. Her wet pussy lips were bright pink that again contrasted nicely against the white skin in her nether regions. I could see that she never lost the freshman fifteen, but it was well distributed amongst her soft curves. Where her bra once was, there were now white half-moon shapes on each one of Carly's large breasts. In this position, she looked like she was out of a pictorial from one of my father's old Playboys from the 80's. \n\nWith Carly now naked, Heidi pulled her off of the bed and quickly flipped the blonde around. With both now sitting up on the bed and Carly's back to Heidi, the Mexican hottie reached around and started to claw, squeeze, pinch and tug on Carly's large two-toned tits. Meanwhile they resumed their make-out session with the blonde arching her back and neck so she could reach Heidi's succulent lips. At the same time, Carly's hands darted south to her pussy as she started to play with herself. Her pussy must have been pretty moist as I began to hear low sloshing-like sounds coming from her nether regions. I continued to lightly stroke myself but was being very careful not to waste my hard on. \n\nOnce Heidi was satisfied, the sexual director had the curvy blonde lay on the bed. Heidi lightly brushed Carly's pussy with her fingertips as the blonde responded by closing her eyes and moaning. It turned out to just be a tease as Heidi continued to move up on the bed. She finally found her destination as her golden bronze legs straddled Carly's face. With her body pointed towards the headboard of the bed, Heidi began to gyrate her hips up and down over Carly's sun-kissed round face. Carly eagerly accepted the invitation and began to voraciously lick and twirl her tongue into the Heidi's pussy.\n\nOver the course of the next few minutes, Heidi kept this steady methodical pace of riding Carly's mouth. I watched as Carly's hand once again made its way back down to her own pussy and she again started to play with herself. This time she was rubbing her clit almost at the same pace as Heidi was riding her face. I quickly got off the chair for a better look from the base of the bed. I had a clear unobstructed view of Heidi's pussy rubbing itself all over Carly's anxious lips and tongue. I also got a better look at Carly's bright pink wet pussy as she continued to rhythmically rub herself. \n\nEven though I instructed them to pretend that I wasn't in the room, I so wanted to get in on the action and reach down to taste the blonde's sweet pussy juices. However, I now found myself being held back by some twisted bro code. This was my roommate's sister and I felt that part of that trust between us meant that Carly was off-limits. Would Brett have done the same thing if my brother Mikey was a girl? I don't know but I still felt obliged to not cross this line. As I gazed on the curvy two-toned blonde, I realized that she would at this point remain forbidden fruit! How ironic considering how many lines I have already crossed thanks to the pink pills of persuasion!?! I just couldn't get past this bro code knowing that my guilt actually would come into play if I followed through on my desires for Carly. \n\nHeidi's quickening pace which resulted in her moaning getting louder and louder snapped me out of this momentary internal struggle. Heidi was quickly approaching the first orgasm of the night. She reached out and grabbed the headboard of the bed and really started to rub herself on Carly's hard-working mouth. I hope she doesn't give Carly a rug burn to go with that tan of hers. I rotated around the bed and now stood on the other side of the night stand to get a better view of Heidi's orgasm. I was just in time as Heidi's body started to furiously shake and vibrate. Carly's arms shot up to grab a hold of Heidi's hips as if she was now simply holding on for dear life. As Heidi's orgasm subsided, she allowed herself to gracefully fall down on the other side of the queen-sized bed. As soon as the beautifully toned and bronzed legs were removed from around Carly's face, Carly started to gasp for air. Once she had regained full control of her breathing, she started to laugh. \n\n\"Damn, that was hot!\" Carly exclaimed. \n\nHeidi picked her upper body off the bed and made eye contact with Carly. \n\n\"Your tongue has the golden touch! Where did you learn how to do that?\"\n\nCarly sheepishly smiled back at Heidi \"Thanks, but that was my first time!\"\n\nHeidi couldn't hide her shock. \"You've never been with a woman before?!?\"\n\nCarly shrugged her shoulders. \"I've always wanted to, but never had the opportunity nor the right moment to explore. Plus, I was ashamed because I was raised in a conservative family where they frown on stuff like this.\"\n\n\"Well, I'm glad that you've been sexually freed, my dear! And to think this whole time I thought that you were digging Johnny!?!\"\n\nCarly nervously chuckled. \"Damn, was it that obvious? I've always had a thing for Johnny, but he's my brother's roommate! Plus it looks like he and April have something going on. Since I like April, I didn't want to complicate things.\" \n\n\"Well he definitely has things...going on. And you're a better woman than most!\" With Heidi's retort, it became very apparent that Heidi knew a lot more about my recent sexual escapades than Carly. And I also have confirmation that my forbidden fruit viewed me in the same way. \n\nI decided that this little interlude needed to end as I was more interested in Act II. A little mental instruction would get this show back on the road. \n\nAs if a second wind hit Heidi's sails, Heidi jumped up and smiled mischievously at Carly. \"It's time for me to return that favor!\"\n\nLike the jungle cat on her back, Heidi pounced on top of Carly. What a sight to see the bronzed, toned body of the Mexican hottie straddling the sun-kissed cutely tan-lined curvier blonde! With a big grin, she playfully put her left hand around the throat of Carly and leaned down to leave some very loud and wet kisses. The expression on the blonde's face went from confusion to excitement and she soon stuck her tongue out hoping it would get in on the action. Heidi didn't leave Carly's tongue alone too long as she started to alternate from sucking the blonde's tongue with her succulent lips to tying and wrestling Carly's tongue with her own. \n\nAt this point, my dick was so hard that I had to resist from even touching it to avoid complete orgasmic combustion! In fact, I needed to cool off so I grabbed a water from the hotel fridge. \n\nMeanwhile, Heidi had completed her oral investigation of every inch of Carly's round, cute face. Heidi proceeded to migrate down Carly's curvy body. She took great delight in playfully teasing Carly by tracing the tan lines of her bikini top with her tongue causing Carly to giggle. To stop her from giggling, Heidi started to tug and pinch Carly's other breast quickly turning the giggling into low moaning. \n\nAs Heidi was playing with Carly's large chest, I also turned my attention to the blonde's tits. Even on her back, you could tell that she had very round, full-bodied breasts. Unlike April's and Laney's long protruding nipples, Carly sported very puffy areolas without the hint of hard nipples. I could tell that both women were enjoying the sensation of these puffy areolas being fully engulfed by Heidi's mouth. \n\nHeidi resumed her southern migration down the voluptuous body of Carly. She teased her belly button for a bit making me wish there was tequila available to do some body shots! Eventually she made it to Carly's tan-lined vaginal area. Again, Heidi lightly brushed Carly's blonde pussy hairs with her fingertips causing a melodic purr to pour out of Carly. Sensing the heightened tension flowing through Carly's body, Heidi leaned down and lightly blew into Carly's pussy. Carly's hands dug deep into the sheets as this caused a sexual sensation to vibrate throughout her body. \n\nWith her fingertips, Heidi started to rub Carly's clit while continuing to blow into the blonde's pussy. Carly unsuccessfully tried to cut the for replay short by reaching down to guide the Mexican hottie's face into her wet pussy which resulted in getting her hand playfully swatted away. Still rubbing Carly's clit, Heidi again traced the tan lines on Carly with her tongue but this time it was those lines left by her bikini bottoms. There was no giggling this time as there was just a lot of moaning. \n\nFinally, Heidi ended the foreplay, leaned down and stuck her tongue into Carly's anxiously wet pussy. At immediate impact, Carly grabbed one of the pillows next to her and buried her face as she braced herself for the pure ecstasy rippling through her body. Heidi didn't need much encouragement and continued to rub Carly's clit as she twirled and extended her tongue in the blonde's pussy. This definitely wasn't Heidi's first rodeo with cunnilingus. With all the build-up, Carly just released herself completely to the sexual energy flowing through her as she writhed and contorted her body in pleasure. \n\nI returned to the front of the bed for a better view. Once there, I realized that Heidi has positioned herself with just her upper half of her body on the mattress. With this, there was enough space to allow me to get in under her for a closer look at her pussy! I so wanted to get my first taste of Heidi but didn't want to stretch the limits of the HRS-101 by attempting to juggle the girls not noticing that I'm in the room while also focusing on Heidi's wet pussy. Plus this live lesbian show was such an unexpected sweet birthday present that I gave myself!\n\nAs I re-focused on the ladies, I noticed that Heidi was gradually increasing the speed of her fingers as well as the intensity of her oral work on Carly's pussy. Carly's body was no longer writhing and/or contorting but instead was now moving in a rhythmical undulating motion. Carly's eyes were closed and she was sexually biting on her bottom lip. She was in her own little dream world but I could tell that she was about to awoken in a sexual eruption.\n\nAs if on cue, Carly's eyes and mouth sharply opened. Her moaning rose to a higher octave but was intermittent as she was taking loud shallow breaths in between these louder moans. Her eyes then closed halfway while her irises rolled up under her eyelids. As her orgasm hit its stride, Carly arched her back as if she was offering her tits to the love gods above. Heidi clamped down on the blonde's lower half to ensure that she could keep up her work and gloriously drag out Carly's orgasm for as long as possible. And I definitely was watching the longest orgasm that I have ever personally witnessed. Shit, I should have taken notes on Heidi's technique!\n\nEventually, Carly came down from her orgasmic high and sat up at the head of the bed with a pillow propped up against her lower back. She was catching her breath but was smiling at Heidi. Heidi had got herself off of the floor and now was lounging demurely against the width of the bed with her mouth just inches away from Carly's feet. In fact, she was playing with Carly's cute feet which of course had tan lines from her beach sandals. They just sat there for a few minutes looking at each other basking in the sexual high of enjoying each other's bodies. \n\nBy that time, I too had re-positioned myself by sitting down in the chair next to the desk. With both ladies still naked and now lounging on the bed, I figured that I could utilize Carly to get to the bottom of what the hell Heidi and Laney were up to. \n\nCarly's voice broke the silence. \"Heidi, that was hot! But why exactly are you in my hotel room dressed like this?\"\n\nHeidi smiled back at the blonde. \"I would love to say that it was for you, but it was actually a birthday prank set-up for Johnny by Laney.\"\n\n\"Oh, ok, but why?\"\n\nHeidi now chuckled. \"You see, Johnny's on a little sexual winning streak lately...he's hooking up with April, Anita, and Laney...and Laney was afraid that Johnny was going to develop a gigantic ego...so she knew of my alternate lifestyle and thought it would be funny to have me scare him and knock down him down a peg or two.\"\n\nDamn...Laney, what the fuck!\n\n\"Wait...he's hooking up with April, Laney and Anita?!? Holy Shit! Wow!\"\n\nHeidi nodded her head. \"Yep, surprise! You didn't see that one coming, did you?\"\n\nThe blonde sheepishly smiled. \"No, but good for him! I was worried about him for a while. And obviously the ladies are okay with it!\" She paused and resumed on the original topic thanks to a gentle mental reminder by me. \"So, you were going to scare him but by beating and humiliating him?\"",
        "Heidi was now laughing. \"Look, I wasn't going to beat him or humiliate him. He seems like a nice guy and what he is doing for April is admirable. Plus Laney and Anita are enjoying his youthful exuberance after years of let's just say...boring sex lives. I was just going to scare him and tease him a bit. He's not the type of guy that I would normally dominate. Plus, Anita was not a fan of this whole idea, and asked me to not get carried away with it.\"\n\n\"So you weren't planning on going past any teasing?\"\n\n\"No, he's cute, but he's getting plenty of action and I'm not that desperate for some dick. And after tonight, I especially don't need dick when some cute blonde who is rocking these dangerously delicious curves is available!\" With that Heidi reached up and playfully tickled the bottom of Carly's feet. \n\nWell, Heidi, I don't know how to break this to you, but you might be getting some dick after all this evening. With approximately two hours left before this dose of HRS-101 wears off in my bloodstream, we had some unfinished business to attend to. \n\nWith that, I mentally instructed Carly to get dressed and get back down to the ladies. Hopefully, Laney and Anita will buy off on that bullshit story of their heart-to-heart girl-talk that Carly was going to feed them. Preparing for round two with me, I had Heidi get herself back into that sexy dominatrix outfit. To keep up appearances, I walked away from the ladies as they were busy changing and slipped back into my own hotel room. \n\nAs I got into my hotel room, I sent Laney a message. \"Finally, I'm done with all of the drunken birthday calls from the East Coast. Are you all freshened up?\"\n\nI grabbed a beer from the hotel fridge and popped open the can. I knew it would take a minute or so for Laney and Heidi to get back on the same page so might as well enjoy a cold one while waiting. \n\nIt only took a few long satisfying sips before my phone chimed again. Laney's reply simply stated \"Happy Birthday Mr. President! Come and get it!\" As much as I would have loved to have seen Laney in a Marilyn Monroe blonde wig and white dress, I was ready for round two with Heidi the dominatrix. \n\nI turned the knob on the door between my hotel room and Carly's and for the second time tonight, I found it unlocked. As I walked into the room, everything was the same from earlier in the evening down to the lighting of the room. This little scene of d\u00e9j\u00e0 vu made sense as I had Heidi forget about the first go-around. \n\nThere was Heidi, confident as ever, with a stern look on her face and her hands strongly pressed against her hips. \n\n\"Johnny, Johnny, Joh...\" I put my hand up to stop her from continuing. The first go-around with this was cheesy enough.\n\n\"Heidi, Heidi, Heidi, you look smoking hot! So hot, that I want to skip the foreplay and get right down to the good stuff! Shall we?\"\n\nOnce again, Heidi look confused. She tried to regain control of the situation. \"No Johnny, you are about to be my man servant and do whatever I tell you!\"\n\nEven though her English was perfect and I had no problem understanding her, her Mexican accent was prominent, but not overly exaggerated.. I actually found it really cute which probably would have annoyed her in this current situation. \n\n\"See Heidi, I appreciate what you are trying to do, but I'm just not into this stuff. But I am interested in getting to know you better if you know what I mean!\"\n\nWith that said, I walked up to Heidi and was mere inches away from her. I could see the confusion in her eyes along with frustration. Unlike before, there was no anger. Having a second chance at this, not being a smart-ass seemed like a wise choice. Heidi's frustration boiled over as she reached back for the riding prop. As she did this, I reached up and cupped her left cheek with my right hand. This startled her to the point that she dropped the riding crop and it bounced off the desk and on to the floor of the hotel.\n\nWith my hand still cupping her cheek, the beautiful, sultry brunette turned to me. As we locked eyes, I could see the intensity start to flare up in them but she didn't attempt to move my hand off of her face. I mentally instructed her to trust me and give in to my sexual advances. \n\n\"Heidi, it's okay. Let's have some fun but be gentle on the birthday boy!\" Since we were eye level, I tilted my head and pulled her in for a kiss. I closed my eyes as our lips met. As expected, Heidi didn't start with a simple peck of the lips and instead optioned to go for a more passionate lip-lock. Of course, I was more than willing to accept this. As the passion of the lip smacking increased, she quickly wrapped her arms around my shoulders and pulled me in even tighter. I could now feel her web-covered large breasts heaving up and down against my barrel-chested body. For the one millionth time in my life, I thanked my Southern European genes for giving me a naturally stout body. And thanks to all of the sex that I have been having lately, my abdominals have gotten firmer but not just yet to a 6-pack level. Oh well, I simply love beer too much!\n\nAs our passionate kissing continued, I directed us towards the same bed that Heidi and Carly were just on a few minutes ago. Without letting go of her lips, I sat down on the edge of the bed forcing Heidi to bend down. Instead of struggling with her latex pants like I did an hour or so ago, I reached around Heidi's waist and grabbed the bottom of her tank top. With an easy pull, I had her tank top on its way up. We unlocked our lips for a second as Heidi assisted me with her tank top and finished what I started by pulling it completely over her head and off of her body. \n\nHer gloriously round breasts were free and bounced slightly back into place. I reached up and grabbed both of them from the bottom. They were heavy and full of flesh. There was no silicone in this treasure chest! Her areolas were darker than her bronze skin and her nipples were small but hard. I massaged them in admiration while Heidi steadied herself by placing her hands on my shoulders. I needed to have these in my mouth. I guided her left breast into my mouth and soon I had a large serving of breast meat stuffed in my mouth. I started to massage her breast with my tongue. Her hands went from my shoulders to wrapping them around my head as I continued to suckle and caress her tits in pleasure. In appreciation of my work, she started to massage my scalp with her fingers. At the times that I came up for air, I would use my tongue to trace the outlines of her large, dark areolas causing Heidi to purr like a cat...possibly her beloved Ocelot!\n\nAfter thoroughly massaging Heidi's succulent chest with my mouth, we locked eyes. I still could see an intense fire in her eyes but by now it was sexually charged. She reached down and grabbed my boner through my shorts. She gave it a few squeezes, stood up, and then stepped up on to the edge of the mattress while I scooted back a little curious to see what was coming next. Once she was standing on the mattress, I was eye-level with her studded belt and latex-covered crotch. I reached up and grabbed her hips. She slowly rocked and swiveled her hips in my hands. I looked up and all I could see were Heidi's large bronze breasts which completely eclipsed any view of her face for me. \n\nBefore I could get use to this wonderous view, Heidi started to bend her knees while maintaining her swiveling hips. Before I knew it, the top of my head became a shelf for Heidi's tits. This was also only momentary as Heidi started to use my body as a slide. With her hands on my shoulders and toes gaining traction on my knee caps, she lowered her tits again until they engulfed my entire vision. Once she was satisfied that I couldn't see anything but her gorgeous tits, she started to also swivel her upper body turning her large tits into windshield wipers on my face. I'm sure that I had a stupid grin on my face as it was getting smothered and slapped by her glorious tits, and I was thankful that Heidi couldn't see it. \n\nHeidi eventually straddled me on the bed and we resumed making out. Within seconds, I could tell that she wasn't satisfied with this current situation, and attempted to rip my shirt off in the most primitive sexual way possible. As hot as that was, I liked my shirt and mentally had the sultry brunette pause as I pulled my t-shirt off in one piece. As soon as it was off, Heidi resumed pawing my chest and back. Without my shirt off she slid right on to me as I remained in a sitting position until our chests had full skin-to-skin contact and I could feel her heartbeat through her breasts. At this point, my boner was desperately wanting in on the action and was impatiently pitching a tent in my shorts. With Heidi's latex pants giving her some traction on my shorts, she swiveled her hips and was practically dry-humping my dick into oblivion. It was a birthday miracle that I didn't pre-maturely explode in my own shorts!\n\nAs Heidi eventually slid off of both me and the bed, she pulled me with her. Thankfully, I was able to plant my feet on to the floor while helping her graciously land on her feet. Heidi grabbed my shorts again and made quick work of both my belt and my fly. Before I knew it, my shorts and boxers were on the floor of the hotel room and my dick was happily freed and bouncing around in excitement. Heidi grabbed my dick and moved her mouth towards my balls. Without letting go or jerking my boner, Heidi started to lick, kiss and purr on my balls. Even under the persuasion of the pink pills, I think Heidi was sending me a message that she still could have me literally and figuratively by my balls. \n\nShe then gradually moved her way up from the bottom of my shaft to the tip with her tongue. She made sure that there was not one single inch of skin that was left untouched by her lips and/or tongue. This sensual exploration by Heidi caused my dick to uncontrollably throb. It was another birthday miracle that I didn't simply explode into an orgasm. With this miracle accomplished, I closed my eyes as she engulfed my slicked down penis into her mouth. For the next few minutes, I lost myself in the living dream of having this beautiful Mexican hottie treat my hard-on as the greatest lollipop that she had ever had in her mouth. \n\nI didn't want her to be ever done with this, but I knew as always my time was limited due to the HRS-101. Considering my past experience trying to get those pants off of her, I had the topless Heidi stand-up and show me how it was done. Heidi didn't need any pointers as she turned her back to me as she quickly unbuckled and lost her studded belt. As she bent over, her butt was coming closer to me as if I was watching a 3D movie. I instinctively reached out to grab her ass, but she playfully swatted my hands away. With ease that was both frustrating and exhilarating to watch, she quickly pulled down her pants releasing her beautifully round, juicy bronze ass to me. \n\nI impatiently watched her get her pants over and off of her combat-heeled boots. Once she had finally kicked away the pants towards the center of the room, I reached out and grabbed her ass. What a piece of art as I massaged her ass cheeks and brought it closer to me and the bed. For Heidi's part, she melodically swayed her ass as she backed up towards me which just caused my boner to impatiently throb again. I got off the bed and on to my knees and then opened her legs just slightly so that I could reach her pussy from behind with my mouth. As I got closer to tasting Heidi for the first time, I picked up the unmistakable scent of beach and suntan lotion. It was as if a big \"Carly was here\" sign hung from Heidi's clit. \n\nAfter a moment of reflection picturing the recent blonde eating out Heidi from a hour ago, I reached up to get a my first taste of Heidi's sweet pussy! As my tongue started to trace the edges of her pussy lips, I could feel Heidi's body tense up in response. For the next few minutes, I acquainted myself with the Mexican hottie's pussy as I listened to the moaning and quick, shallow breaths that the sultry brunette was taking. Since Heidi had already experienced an orgasm earlier tonight with Carly, I didn't need to do too much work on preparing her for the main act with me. However, that didn't stop me from still voraciously giving her pussy pleasure with my mouth and tongue. \n\nWith my dick at the point of hating me for all of this foreplay and voyeurism, it was time for it to get some action. I stood Heidi up as I tried to figure which position that I wanted to start with. Heidi, who still was trying to be an alpha despite the HRS-101 in her bloodstream, pushed me back on to the bed. For the second time tonight, she pounced on the bed to give her a pussy a ride. This time, instead of Carly's mouth, she used my dick as the saddle! I quickly grabbed the sheets for dear life as the sultry brunette bronco busted herself into ecstasy. And it certainly didn't take long as Heidi quickly found herself going into her second orgasm of the evening. I watched as she closed her eyes while weaving her hands in her hair. Her large breasts were both bouncing and swaying every which way as the orgasm rippled through her body. At this point, my dick was like a dog impatiently asking its owner to go outside and relieve itself. I had to pull some mental reserves that I didn't realize that I had to delay my orgasm.\n\nOnce Heidi was done, she got up. I looked at the bed and it was another birthday miracle that her heels didn't pierce through the sheets and mattress while riding me. I didn't have much time to ponder this miracle as Heidi grabbed me off of the bed and soon I was back in a tight embrace with her. She was still riding the high of her orgasm as her kissing was intense. I reached down and grabbed her ass again. I was enjoying this renewed lip-lock but I wanted to get back in her as soon as possible. Out of a mixture of sensual pleasure and frustration, I gave her ass a quick, but sharp slap. \n\nHeidi immediately let go of the embrace and gave me a look of shock. To be honest, it was at this moment that I was worried that the HRS-101 had worn off and I was about to get a taste of Heidi's unchecked style of sexual domination!\n\n\"Okay there Johnny, you want some of that!\" \n\nHeidi grabbed the edge of the bed and leaned back while slightly parting her legs. She then tilted her head back at me while tauntingly swaying her ass. I couldn't help but admire this beautiful exotic beauty in front of me in her gorgeously naked form.  \n\n\"Damn! Now you're taking your time with this shit! You getting in on this ride or what?!?\"\n\nI better get on that ass, before the HRS-101 does wear off! I got behind Heidi and grabbed her hips. I quickly admired her ass one last time before inserting myself in between. Once I was back in, I knew that Heidi preferred her sex fast and furious but I knew that my dick would explode if I took that route. Instead I methodically started to pump her from behind timing the sound of our flesh meeting so that I had a nice little beat to it. I gradually increased my speed and as I did, Heidi decided to help things along by driving her ass into my groin. \n\nAs the speed picked up, I knew that I wouldn't last long, and sure enough I didn't. As I could rapidly feel my orgasm building, I tapped Heidi on the hips to let her know. Apparently, she didn't pick up on this hint as she just kept pleasurably driving her ass into my groin. Forgoing subtlety, I slapped her on the ass and pushed her bottom half off of my groin. Heidi finally got the message and got to her knees as she swung around. \n\nShe quickly clamped down on my dick with her mouth as my dick started to mercilessly unload. Thanks to all of tonight's build-up, this orgasm and load was massive, and poor Heidi, no matter how experienced of a hottie she was, was simply no match for it! She was able to handle the first spurt but quickly realized that she was in over her head if she was going to take everything in her mouth. She quickly re-directed my erupting dick towards her large breasts as cum started to trickle out and down the sides of her mouth. I quickly coated her breasts and watched through half-closed eyes as my cum disappeared flowing down between the valley of her large tits!\n\nAs soon as I was done, I could feel my knees buckling from that exhilarating but exhausting sexual burst of an orgasm! Thankfully, I was close enough to the bed and landed with a thud. Heidi quickly got up and went into the bathroom to rinse herself off. I was physically exhausted but my mind was still actively processing everything that just happened this evening. I'm pretty sure that my 18 year old self would have loved to be having a birthday celebration like this!\n\nEven though I had my eyes closed, I soon felt the presence of another body hovering over me. I opened my eyes and was greeted by the newly cleaned up but still very naked Heidi. Her hands were at each hip and she had a serious look on her face. \n\n\"Johnny, how the hell did this happen?!?\" I looked at Heidi and my vision still had a pink hue to it, but not as strong as before. From her tone of voice and physical posture, I was becoming quickly aware that the HRS-101 had worn off. The dominatrix was back in control of her thoughts and body and I didn't quite know how she was going to react to all of this.\n\n\"Heidi, good question, but remember you invited me in here and you were in that hot outfit. I think our sexual instincts took over after that. And trying not to be presumptuous but I believe that we both had a good time!\"\n\nHeidi let out a big sigh. \"Don't get too big of a head about it, but yeah, I did enjoy myself. But that wasn't the plan. Shit went sideways!\"\n\nI tilted my head at Heidi. \"Heidi, please do enlighten me on how Laney's birthday gift to me was supposed to go.\"\n\n\"Well, for starters, we weren't supposed to have sex as I was merely going to tease and leave you wanting for more. Laney thought it would be a good idea to give you a small ego check. She likes you Johnny, but is worried that you might become an arrogant asshole with all of the play that you've been seeing lately. We've got enough of those assholes around here already.\"\n\nI coyly played along. \"So you were going to beat me up, tie me up and leave me?\"\n\nSurprisingly, this made Heidi blush. \"Well, I was going to tie you up, tease you and then leave you just for a few minutes. I was going to come back and release you once I made you sweat it out a bit. But don't worry, Anita made sure to ask me to be physically easy on you.\"\n\n\"Thank god for Anita! If you left it up to Laney, my ass would have been on ice for the rest of this evening!\"\n\n\"Yeah, her definition of fun even surprises me sometimes. And I live this lifestyle!\" Heidi paused and smiled at me. \"So, Don Juan, what do I tell Laney? That I let you feel the power of my whip until you cried for mercy?!?\"\n\n\"Well, let's take out the whipping and crying portion, but I am ok with you telling her that I learned my lesson the hard way. And I won't be sitting comfortably on any of the rides tomorrow!\"\n\nI stood up and looked at Heidi. With her no longer under the influence of the pink pills, this Mexican dominatrix was indeed a wild card! I was surprised to see her smile and then move towards me to embrace me. She kissed both of my cheeks and then hugged me tightly. She whispered in my ear \"Happy Birthday Johnny!\"\n\nI returned her embrace and we stood there for a few minutes. We might have lingered a little too long in that hug as I felt my dick miraculously begin to stir again. Pretty soon, my boner was poking Heidi in her mid-section. She laughed, released the hug, and punched me in the shoulder. She grabbed the riding prop one last time and gently teased my mushroom tip of a boner with it. \"Happy Birthday to you too!\"\n\nWith that, she clapped her hands, and exclaimed. \"Well, I need to go change and join the ladies for a drink! Get some rest Johnny!\"",
        "I didn't bother with changing as I grabbed my clothes and dragged myself back into my hotel bedroom. If April wasn't staying with me, I would have just dumped my body on the bed and passed out. However, I was trying to be a gentleman so I washed up before falling asleep to the images of the tan-lined Carly and the dominatrix Heidi!\n\n------------------------------------------------------------------------------------------------------------------------------------------\n\nSunday Morning -- Johnny's Birthday\n\n\"Hmmmmmm...\"\n\nI was being woken up in the best possible way. Usually, I'm not a morning person, but this was the exception. Today was my birthday and somebody had my morning wood in her mouth. And damn, it felt so good, so good, so good!\n\nI reached under the covers and caressed the individual on the head in show of my appreciation. My eyes started to flicker open as she hit certain pleasure spots on my boner telling me that she was well acquainted with my dick. As I opened my eyes more, I could see the morning sunlight peeking into the room. As I shook off the cobwebs and my surroundings became more clear, I suddenly realized three things!\n\nOne, April was still asleep next to me.\n\nTwo, I had no idea who the individual under the sheets was!\n\nThree, I didn't have any HRS-101 left active in my bloodstream so I could find myself in a stick situation in more ways than one pretty soon. \n\nOhhhhhhh...that felt good. Whoever this mystery person was under the sheets just bottomed out my boner into her mouth as I could now feel her lips on the base of my dick. I closed my eyes in ecstasy and immediately dismissed my worries.\n\nAs I was enjoying my wake-up call from our mystery guest, April suddenly started to moan. What the fuck is going on? \n\nThis went on for a minute or so as I stared in complete shock at April while she continued to moan with her eyes closed.\n\nFinally she whispered, \"Johnny, it's too early for this, give me a few minutes and I'm all yours!\"\n\nI looked more closely at April's side of the bed, and it didn't look like there was an extra lump there under the sheets. Whoever was trying to pleasure April must be using their hands because that person still had my dick in her mouth. \n\n\"Come on Johnny, quit it, I'll make it up to you in a few!\"\n\nI was about to say something but I was all of a sudden incapable of speech. Instead, I finally looked under the sheets and with the light barely penetrating the sheets, I could make out a head of dark hair pulled back in a ponytail bobbing up and down on my dick. Due to this pleasure that I was currently having, I had a hard time focusing on her face. Finally, she came up for air and looked up at me with a coy smile. My favorite minx placed a single finger over her lips signaling to me to keep quiet which wouldn't be a problem at this moment. \n\nLike an agile cougar, Laney slipped away from her spot in between my legs and off the bed onto the floor. Within seconds, a shape appeared on the other side of the bed and it looked like Laney was creeping up on April's sleeping body. Having spent a lot of nights with April recently, I knew that she likes to sleep in just her cotton panties. However, it sounded like these panties were no problem to Laney as April resumed moaning pretty quickly. \n\nLike a deer in headlights, I just continued to watch April's eyes which remained closed while her moaning became louder. \n\nFinally, April's eyes opened and she immediately locked eyes with me. I felt my stomach drop in nervousness as I didn't know or worse have control over what was going to happen next! Recognizing my concerned face, April winked as a big grin crossed her face.\n\n\"Johnny, look, you're pretty good with your tongue, but Laney is a fucking magician!\"\n\nDamn, is this my birthday or Halloween? This weekend has been chock full of tricks and treats! \n\nMy whole body relaxed and I sheepishly returned April's smile. Now that everybody was mercifully on the same page, I pulled back the sheets to reveal to pleasantly find both April and Laney already naked. I sat there in a daze wondering if I was still sleeping as I watched April moan and quiver in pleasure. \n\nApril didn't let me stay in this daze too long. \"Hey birthday boy, are you going to join in or what?\"\n\nSurprisingly my body was moving quicker than my brain was processing as instinctively I found myself not only out of bed but also standing at the edge of the bed lusting after Laney's toned little ass.\n\nPart of me wanted to smack Laney's ass hard for the shit that she pulled last night with Heidi! However, the sight of her ass and glistening pussy convinced me otherwise. I knelt down and stuck my tongue into my favorite Minx! It had been a while, but soon the sweet familiar flavors of Laney's pussy hit my taste-buds. Forget a stack of pancakes, this was the breakfast of champions for this birthday boy!\n\nWith that, I started in earnest at licking, twirling, and flicking my tongue at all of the glorious flesh in and around Laney's pussy. Whenever her body would exhibit a quick twerk, I knew that I found a good spot and would focus in on it. Laney would occasionally moan but her mouth was mostly filled with April's pussy. In fact, the sound that mostly filled up the hotel room was April's moaning. It didn't take long for that moaning to intensify with April. I tried my best to see if I could get Laney in that same state of ecstasy, but April was right, Laney was a fucking magician with her tongue! And soon, April's moaning just bellowed into one continuous moan. I actually stopped licking Laney's pussy and stood up to watch April as she writhed and contorted her body in absolute pleasure giving in to her orgasm. Not only did Laney not let up on the oral pleasure, but she was now pinching one of April's tootsie roll sized nipples which I'm sure was just amplifying the pleasure that April's body was experiencing.\n\nAs April finally came down from her orgasm, Laney slowly detached herself from April's pussy and slithered backwards off the bed towards me. Once she was back on her feet, she slightly turned her body and reached up to grab my face. Soon our lips were locked and I was tasting the sweet juices of April's pussy on Laney's lips. At the same time, Laney grabbed my hard-on and started to methodically pump it. I closed my eyes to enjoy this moment knowing that I couldn't picture a better way to actually start my birthday. When I re-opened my eyes, I realized that April had managed to regain her composure and had joined us with her standing closely to the left of me. I also realized that April's eyes were full of lust but they were not directed towards me at that moment. In fact, it looked like April had hungry eyes for Laney.\n\nIn shock, I released Laney from my grasp. Laney briefly returned the look of shock towards me but then realized that April wanted in on the action. She winked at me and gave my dick a playful squeeze as she quickly grabbed April to start their own embrace. As I watched the two of them passionately make out, I quickly realized that there was a sign of familiarity that they had with each other's bodies that go beyond that one night at my place. What started that night must have continued without me on other nights. Even though I had no reason to be, I felt a slight ping of jealously creep up on me. Oh well, this was definitely no time to pout! \n\nI quickly moved back over to April and Laney and pretty soon, my hard-on was actually in between them impatiently poking at their bellies as the two beautiful Filipinas continued to make out. They didn't release their lip lock but both did reach around and pull me into their tight hug. Even though I was left out of the smooching, I enjoyed the aerial view of both sets of perky tits poking at each other. With both sporting very large tootsie-roll sized nipples, they could have had the most epic of fencing matches much to my delight!\n\nEventually, I was able to get both ladies back on to the bed. I grabbed April's foot and playfully tugged her towards me. With just her feet hanging off of the bed, I quickly flipped her over on to her stomach! She didn't need to read my mind on this one as she kneeled down as much as she could and stuck her butt up and off of the bed! \n\nI then shot Laney a devious look. Before she could respond, I grabbed her foot, but not as gently guided her body to April's. I then flipped her on to her stomach and picked up the Minx by her waist. I stacked the older but just slightly smaller Laney on top of April. Soon I was greeted by the sweet sight of two beautiful Filipino asses on top of each other! \n\nMy dick was painfully throbbing to get in on the action and I didn't waste any more time. I jumped back on to the bed and got on my knees. I inserted my hard on into April's wet pussy and started to slowly piston myself in and out of her. At the same time, I lifted Laney's ass up into my face and resumed munching on succulent MILF pussy. Thanks to Laney's experienced tongue work, April's pussy was already well lubricated and in high gear so it didn't take long for her to hit her orgasm. Soon, April was lost in her orgasm as she started to uncontrollably moan. For her part, Laney started to playfully wiggle her ass into my face reminding me to not let up on her pussy. \n\nOnce April came down from her second orgasm of the morning, I felt her body just collapse on to the bed. Thanks to all of the vaginal lubrication, my dick easily slipped out of her on the way down. With April laying on the bed, I stood up on the edge of the bed. At the same time, I picked Laney up by her waist and pulled her towards me until my dick was buried deep inside her. Once I found my center of gravity, I started to methodically pump Laney's pussy while ensuring that neither of us would lose our balance. It didn't take that much strength to hold up the lean and limber Laney in mid-air while simultaneously driving my groin into her backside. I couldn't see Laney's face but it sounded like she was enjoying being fucked while suspended in air over the bed. In fact, all I could see was Laney's pony-tail flopping forward and backward as her toned backside slid up and down my hard shaft. This was a fun position that didn't last long as I would have liked due to me being worried about us losing our balance and taking a tumble on to the floor. \n\nThankfully, another idea popped into my head. I gradually slowed down the pumping and gracefully eased Laney onto her feet. Once she was settled, I jumped off the bed and landed firmly on the floor. Before Laney had time to gather her thoughts, I pulled her off the bed and she fell back into my arms. Her perky tits were inches away from my mouth and I couldn't help sampling her dark brown tootsie roll nipples for a few seconds. Laney purred and caressed the back of my head in appreciation. As much as I could have suckled these long firm nipples all morning, my groin was painfully reminding me that my boner wasn't done. \n\nSurprising myself with a second wind of energy, I flipped Laney around so that she was both facing and straddling me. From the looks of her face, I wasn't the only one surprised by my sudden strength, but she recovered quickly as her short but lean legs wrapped themselves around my waist. Without much re-positioning, our nether regions locked in naturally and soon I found myself deep inside her again. I reached around under her lower back and interwove my fingers together until I felt secure in this position. With my feet now on the ground and Laney once again suspended in mid-air at my mercy, I resumed driving my dick into her pussy.\n\nThis time was different though as I didn't methodically or gradually increase my ramming speed. This time I simply unleashed every single reserve that I had left in the tank knowing that I was going to reward myself with a large breakfast to refuel! \n\nAs much as I was enjoying this morning's activities, I was still slightly perturbed by Laney's so-called gift to me the previous night. If it wasn't for the Pink Pills of Persuasion, last night might have taken some rather humiliating left turns. It wasn't pure anger but more like temporary angst that I unleashed into Laney. And dang it felt good! I watched as Laney's perky boobs moved up and in down in unison as her arms went from flailing around to sometimes grabbing my arms to try to recompose herself. Meanwhile, the tie of her ponytail must have come undone as her long luscious locks of brown hair with blonde streaks flowed every which way in the air. I then noticed that her eyes were locked on to me with an intense but not an angry flair to them. She was sporting a devilish grin on her face letting me know that she was still enjoying this ride no matter how fast and furious I drove myself into her. \n\nOh hell, I smiled back as it was useless to use hard sex against somebody like Laney as they simply get off on it. Meanwhile, I could see April from the corner of my eye still on the bed. I glanced over at her and she was no longer flat on her stomach catching her breath. Instead she was perched on her back. She was gleefully watching us while rubbing her pussy at a pace that indicated that she was well on her way to her third orgasm of the morning. \n\nAs much I was enjoying the view of a naked April on my bed playing with herself, I could feel Laney's body tense in my grasp. I knew that she was close to reaching her first orgasm of the morning and I wasn't going to have April beat us to her third before Laney got her first. I don't think that I would hear the end of it from Laney if I did. I quickly moved Laney to the corner of the bed near April's feet. Once she was in place, I put both of her legs on my shoulders and began to drive myself down into Laney's pussy. It wasn't a piledriver position like I did to Kendra but it definitely allowed me to really drive my dick deep inside her pussy. Laney's eyes started to flicker and then close as I kept up the pace. \n\nI looked up at April and her eyes were also starting to flicker as she was also picking up the pace at strumming her own pussy lips. It was going to be a close race to see who hit their orgasm first...April or Laney?!? I was running out of steam but determined to help Laney cross the finish line first. In another birthday miracle, Laney's moaning went deeper and shallower as her body completely tightened around the driving force of my dick. Within seconds, she completely succumbed to her orgasm and her body started to quiver and shake. I watched as my favorite Minx enjoyed the thrills of sexual ecstasy as I slowed myself down to a more sustainable pace. \n\nNot to be outdone, April's purring transitioned into full moaning as she finally triggered her own orgasm with her nimble but firm fingers. With both ladies moaning and writhing in pleasure, I could feel my own orgasm reaching its own point of no return. I quickly dismounted Laney and went to her side. I was determined to coat the face of the devious Minx with my love juices especially for trying to put the fear of God into me via the dominatrix Heidi. Just making it to her side on time, I grabbed my erupting dick and watched as spurts of my cum quickly landed on Laney's cheekbone. With her eyes were still closed, the first burst of cum caught her off-guard . Thankfully, she wasn't angry and not only grabbed my dick but also started to stroke it as the remainder of my cum continued to land on her beautifully round, chiseled cheekbones. \n\nOnce I was done, I stepped back as Laney let go of my still hard but sexually drained penis. April pounced on Laney and began to lick my cum off of Laney's face. I was pleasantly surprised that neither one went barreling off the bed onto the floor and instead managed to gingerly stay there on the edge of the bed. Once April had finished cleaning off Laney's face with her tongue, Laney opened her eyes and again started to sport a devilish grin. She quickly opened her mouth and directed April to deposit my cum into her mouth. Much to my surprise, April didn't swallow yet and instead obliged Laney's request. Soon, I saw my cum drop in a big wad from April's lips to Laney's open mouth followed by a little trickle of my remaining load. \n\nWith the cum deposit complete, they resumed making out. I retreated to the hotel fridge and grabbed a bottle of water that I had stocked there. For a few minutes, I stood there drinking water naked while watching and listening to the smooching between April and Laney. I quickly finished the bottle of water and walked over to the two naked ladies glistening with sweat and sex on their bodies. April's bubble butt again proved to be too good to pass up as Laney was now gleefully pawing away at it with her hands. I couldn't resist that bubble butt either and soon I started to paddle it with the palm of my hand. As the intensity of the paddling increased, it snapped April out of the sexual trance that she was enjoying while making out with Laney. She reluctantly pulled herself away from Laney's embrace and off the bed onto her feet. \n\nShe leaned over and gave me a kiss. \"Happy birthday Johnny!\"\n\nWith that, I watched her walk away from me and to the fridge. She retrieved a water bottle for herself and quickly disappeared into the bathroom. She didn't bother shutting the door and soon I was watching the water from the shower head cascade down her bubble butt. I kept staring at the beautiful Pixie as the steam started to rise out of the shower and fill the air in the open bathroom. \n\nWhack!! I felt an unfortunate but familiar pain vibrating from my left ass cheek. It didn't take a brain surgeon to figure out who the source of this was. I looked over at the smiling Laney. \"Yeah, happy birthday, dumbass!\" \n\nI didn't know what came over me, but like a jungle cat springing into action, I turned to Laney and I spun her around. I bent her over so that her palms were flat on the hotel bed, and gave her not one but two smacks on her ass as well!\n\n\"That was for last night Laney! That was the strangest gift that I have ever received!\"\n\nOnce I was done, Laney flipped herself back around to me while pretending to massage her ass as if it was badly whipped by a belt. \"She told me that she hog-tied you up and made you cry for your mama!\"\n\nI winced. Damn it Heidi! I should have worked with her on that story a little bit more and probably take a few more pink pills to make sure I was comfortable with exactly what she was going to say to Laney. \n\nOh well! \"Yeah, Laney, that's exactly what happened!\" I played along while thinking about the hot, curvaceous Mexican dominatrix doing my sexual bidding with both Carly and myself. My poker face again didn't pay off as Laney punched my shoulder pulling me out of my thoughts. \n\n\"Damn it, Johnny! That's not what happened last night, was it?!?\" Laney wasn't upset but looked slightly disappointed. \n\nThankfully, I didn't have a chance to answer as April called out to us from the bathroom. \"Hey guys, hurry up and get in the shower with me, I'm a little lonely in here.\" I winked at Laney leaving her without knowing the truth about last night to join April in the shower. I needed to make sure that the Pixie's bubble butt was thoroughly cleaned and washed by my more than qualified hands!\n\n------------------------------------------------------------------------------------------------------------------------------------------\n\nSunday Evening -- Johnny's Birthday\n\nWith two day passes at the happiest place on Earth at our disposal, we leisurely walked around on the 2nd day at the park cherry-picking the rides that we wanted to go on again. I was living on a high that I couldn't even comprehend. In the span of 48 hours, I've had sex with 4 out of the 5 women that went with me on this trip and I watched the 5th one have her first girl-on-girl experience. This was a dream scenario of a birthday for a mid-twenties heterosexual male!",
        "It took Laney most of the morning to get over the fact that her prank back-fired. Heidi sheepishly must have confessed to what happened between us sometime after my morning threesome with Laney and April. Heidi played coy with me most of the day but did mention to me while we were momentarily alone that it's been a while since a male got the upper hand on her. I could tell that it quite perplexed her but not entirely in a bad way! I just smiled knowing that I had the secret weapon of pink pills at my disposal. All in all, it was a good weekend and everybody enjoyed their trip!\n\nWith the kids having school the next day and the rest of us going back to work, we called it an early day just around sunset and made our way back south on the 5 with a bunch of over-priced souvenirs. Carly, April, and I were all tired for various reasons but we had a pleasurable car ride home nonetheless. We dropped off Carly at her apartment and as she walked away from the car in her short shorts and mouse ears, I couldn't help but picture her beautiful curvy tan-lined body writhing in pleasure thanks to Heidi's skills. For her part, April pretended not to notice me and simply let me enjoy this quick trip down memory lane. \n\nAs we pulled in, we walked into my empty apartment. Brett had text me birthday well wishes earlier in the day. He also informed me know that April and I had the place to ourselves tonight as he would be spending the night with Molly. After all of the sexual experiences that I've enjoyed this weekend, I don't know if I have the energy to see if we could pull off one final night cap! \n\nAs we unloaded our overnight bags off of our tired bodies, our eyes met. April's almond-shaped brown eyes were full of excitement and happiness. I truly did dig everything about her and would heavily consider giving up the pink pills of persuasion to start a relationship with her. However, I was more than okay with our current situation! I smiled back and reached out for her with my arms. \n\nWe simply embraced for a few minutes. No kissing, no talking, just her body nicely melding into mine until our hearts were almost beating as one.\n\nFinally, April spoke. \"So, did we do okay with your birthday or what?\"\n\nI chuckled as the images of the various sexual adventures came flooding into my brain. \n\nApril started chuckling too. \"So, Heidi didn't really hog-tie you after all?!?\" \n\nStartled by this, I jolted back but didn't let go of our embrace. April was looking me over with a \"I gotcha\" look on her face.\n\n\"How did you know?\"\n\n\"Seriously Johnny, I left you alone in our hotel room two nights in a row on your birthday weekend! What kind of friend with benefits does that? I wish I was a fly on the wall for your so-called Italian dessert with Anita as well as your romp with the Mistress Heidi!\"\n\nI laughed. Yeah, I was na\u00efve to think that all of the girls wouldn't talk about their adventures with me. \"Sorry April, you said that you weren't emotionally available and I'm just having fun with the other ladies.\"\n\nApril punched me in the shoulder! \"The only thing that you have to apologize for is thinking that I was clueless for now knowing what was going on. You sure as hell got yourself of that little slump that you were in, slugger! And bonus points for me, I've got to know Laney a lot better thanks to you if you know what I mean!\"\n\nI pretended to rub my shoulder in agony as I smiled back at April. \"So you and Laney have been getting it on without me?\"\n\nApril laughed. \"I doubt you can be jealous since you at least hooked up with at least 4 of us over the weekend!?! And possibly Carly?\"\n\nI gleefully responded with a shrug. \"Guilty as charged for the first four offenses. I plead not guilty with the tanned blonde!\"\n\n\"Too bad, I'm sure that she would have been fun! But it would have been awkward hooking up with your roommate's sister.\"\n\n\"Haha, I guess!\" Not daring to say anything more, I leaned in to kiss April. She shook her head at me in disbelief before our lips met and once they made contact she slipped her arms back around my shoulders. Thanks to these ladies, I had quite a weekend!\n\nAs I was about to get comfortable in our make-out session, April abruptly pulled away much to my shock and dismay.\n\n\"I almost forgot...your birthday present!\" With that she quickly slipped out from my embrace and darted over to her overnight bag. Instead of opening the bag she shot me a shy smile as she picked it up. \n\n\"Do you mind heading into Brett's room for a few minutes? I got to set up your present!\"\n\nAfter last night's surprise from Laney, I was a tad bit concerned when it came to birthday surprises. And once again, my poker face was apparently non-existent as April giggled as to what must have been a perplexed look on my face. \n\n\"Don't worry, there's no whips and chains in this bag! I promise!\"\n\nI cautiously smiled at April as I excused myself into Brett's room. Thankfully, I didn't have to wait long as there was a knock on the door within five minutes. I opened my roommate's door to a hallway and apartment that was now almost cloaked in darkness. The little light that now filled my apartment was a faint flicker of light. At first, I couldn't figure out the source. However, once my eyesight grew accustomed to my surroundings, it looked like the light was coming from my room. \n\nAs I got to my doorway, I peeked into my bedroom. There were candles lit on both my dresser and my desk. In the middle of my room, there was April. She was leaning against my bed and once we locked eyes, she started to walk towards me. What a unforgettable sight she was! April had long white stockings that reached up to her upper thighs. The only other article of clothing that she had on was a long white silk robe with an intricate design of roses on it. The robe was untied and just naturally flowed against the sides of her body allowing the flicker of the candlelight to dance off of her beautiful naked form. I couldn't help but admire her small perky breasts adorned with long firm nipples that were proudly poking out from the robe.\n\nApril stopped by my desk and picked up what appeared to be an aluminum bowl. She smiled at me and walked back over to my bed. While placing the bowl on my night stand, she got herself comfortable while laying down on my bed. She smiled coyly at me and beckoned me to come over with her finger. As I got closer, April pointed at my clothes and whispered to me, \"Clothes off if you want to enjoy the show, birthday boy!\"\n\nI sure as hell didn't waste any time and soon I was completely nude with my dick proudly at attention impatiently waiting for the show to begin. April smiled and reached over to gently pass her hand over my hard-on. My dick twitched in appreciation of the attention but achingly longed for more. I leaned down to enjoy my birthday present, but April quickly halted me with her hand and a little finger wag. April winked at me as she reached into the bowl on the night stand. As she removed her hand from the bowl, she opened her hand to show me an ice cube. I was confused but intrigued by this. \n\nApril moved the ice cube to the top of her hand between her thumb and pointer finger. She brought up the ice cube to her lips and started to trace her lips with the ice cube. Once she was done moistening her lips, she puckered her lips and started to kiss the ice cube. During the entire sequence, her eyes remained locked onto mine. As if this couldn't get any hotter, April opened her mouth and wrapped her lips around the slowly evaporating ice cube. She started to push the cube in and out of her mouth causing my dick to jealously stir. \n\nSeeing my dick continue to involuntarily twitch in excitement, April's gaze finally went somewhere other than my eyes as she temporarily pulled the ice cube out of her mouth. She smiled as she moved the now cylindrical-shaped ice cube to the tips of her fingers. In a slow, deliberate and dramatic pace, she brought the ice cube to her perky tits. She rotated the cube around the circumference of each one of her breasts. I couldn't keep my eyes off of her tootsie-roll shaped nipples that were protruding from their perky mounds. Her nipples were already magnificent natural wonders, but now were so impossibly hardened from the amplified chills caused by the ice. I instinctively grabbed my dick and started to stroke it.\n\nApril's smile widened as we both quietly played with ourselves for the next few minutes...the ice cube on her tits and my hand casually stroking my dick. The ice cube met its final fate on her chest as it finished melting on her nipple. She grabbed another ice cube out of the bucket and placed it in between her breasts. She then just slowly let the ice cube naturally make its way to her stomach. She slowed its progress with her finger as it got closer to her belly and guided it so that it nestled into her belly button. She toyed with it for a bit and then pulled the ice cube from her belly button. She motioned for me to come over and have a taste. I would have preferred a tequila body-shot but I'm not saying no to a shot of ice cold water from the atop of a beautiful, naked woman. \n\nI stuck my tongue in her belly button and felt the refreshing chill of the water. After twirling my tongue in her navel cavity, I finished slurping the water out. Before April could put the ice cube back into her belly button, I grabbed her hand and pried the ice cube out of her hand.\n\n\"My turn April!\"\n\nI stepped up so that I was standing aside her head. I offered my boner and April teased it with her fingertips. She lightly pet and caressed my mushroom head. I closed my eyes at April's teasing but responded by taking the ice cube and rubbing it against her left nipple. She purred as I placed the ice cube on one side and pressed my finger on the other trapping her nipple in between. Thankfully, this game of teasing didn't last long! April finally gave in and engulfed my dick with her mouth. I alternated the ice cube on each nipple while April merrily bobbed up and down my hard-on. \n\nOnce the second ice cube had all but evaporated, I stretched my left arm to April's lower half to see how wet she was. My fingers felt little resistance as they slipped right in between her excited pussy lips. April's body twitched right away as if an electric jolt struck her and she momentarily released my dick as she shivered at me!\n\n\"Your hands are cold!\"\n\n\"Oh shit, sorry!\" Not sorry enough to remove my fingers from her wet pussy, but sorry nonetheless. We maintained this position for a while as I couldn't believe how wet April's pussy was! And no matter how much I tried to distract her with my fingers, she was focused on providing me a memorable birthday blowjob! And she didn't disappoint! In fact, I was getting nervous that I wouldn't be able to hang on much longer and simply decorate the inside of her throat. As if utilizing a sixth sense, April reluctantly pulled my hard-on from her mouth. \n\nApril smiled at me as she rotated her body from being parallel to me to facing me. With catlike reflexes, she grabbed me around my waist with her legs and pulled me closer to her. With her straddling me while standing next to the bed, I didn't waste any time in plugging myself into her. With April, it was usually sensual between us as I started to methodically rock my groin back and forth into her. I couldn't take my eyes off of her as I continued to pump my groin into hers. She simply smiled and purred back seemingly enjoying the moment as much as myself.\n\nI could have stayed in this position for as long as humanly possible, but April had different ideas. The beautiful Filipina Pixie let her legs go and slipped out from the position that we were in. She got on her knees and shimmied over on the bed so that we were eye-level with each other and only inches separated our two bodies. She wrapped her arms around my shoulders and pulled me in for a hot kiss! Once our lips parted, her smile was simply radiant!\n\n\"I think you're finally ready for the final part of your birthday gift!\"\n\nI shot her a perplexed but happily ready look. \n\nShe continued. \"I want you to come inside of me!\"\n\nHoly Shit! That is not the words that I was expecting! For most of my adult life and I'm sure with most people around my age who are not married, this is the thing that I always strived to avoid...cumming inside of a vagina! Didn't matter what protection was utilized, I always thought that with my luck, I would end up reaping what I sow! And now, here was this beautiful woman asking me to do just that!\n\nAs always, my poker face betrayed me! April let out a quick chuckle. \"Don't worry, I've been on the pill for a while and really want this! I'm okay if you're not comfortable, but I just wanted to put it out there if you were interested!\"\n\nWell, if I was to enjoy my first cream-pie, I couldn't picture anybody better to share this moment with! I nodded at April and her smile impossibly got even more radiant at the news. \n\nApril got on her hands and knees in a doggy position, and started to wag her bubble-butt at me. Thankfully, she gave me enough room on the bed to get comfortable behind her. With one last brief reflection, I entered her from behind. I've done the doggy-style position before, but this one was different. The room was dripping with anticipation and excitement as I grabbed her by the waist and settled myself to start pumping my groin into her backside. April must have also been experiencing some nerves as she was quiet other than some occasional low moaning. It took all of my mental power in my body from not unleashing my load prematurely.\n\nAs we both got into a rhythm, our nerves subsided. I started to really enjoy myself watching and hearing April's beautiful bubble butt make contact with my groin. Even though I wanted to stare at this beautiful scene in front of me forever, the ecstasy of this moment involuntarily forced my eyes closed. Once closed, my mind immediately transported me back to our first encounter in the locker room at work. I could vividly see us in the shower with the water cascading down her body as April was practically launching her ass at my hard-on. Given all of the sexual escapades since inheriting the pink pills of persuasion, that was by far the most special and exhilarating to me. In a way, it shaped how I utilize the pink pills. Granted, I still used them for my sexual benefit as any sane male would do, but that moment showed me that I didn't need to use them to completely turn April or any other female into a disposable vessel of my sexual pleasure. This didn't completely justify the means but in my mind especially with Melissa, but April, Laney, Anita, and the others benefited from the ends. \n\nBefore I could truly dive into the mental rabbit hole of pink pills and morality, the tensing of April's body brought me back to reality. She had increased the pace in which she was lunging her bubble butt at me to the point that I had to reinforce my position so that we didn't lose our balance. I strengthened my hold on April's waist and with the remaining reserves in my tank started to really drive my throbbing dick back at her. From there, it didn't take long for April to start her orgasmic ascent. The moment that her orgasm hit, she immediately halted the velocity of her body and I caught both her and myself so that we didn't go flying into the headboard of the bed. With my dick still firmly implanted and me cradling my favorite Filipina Pixie in my arms, April just allowed her orgasm to take over. She wasn't a screamer but her moaning was loud and her body vibrated as the orgasm overtook her. \n\nOnce it had subsided, she contorted her body to lean back and plant me a wet kiss. \"Your turn!\"\n\nWith that, April slipped out of my embrace and replanted her hands on the bed. I re-arranged myself and re-inserted my dick into her bubble butt. I grabbed her waist and started to pump again. Even with my tank now fully on Empty, I was able to get into a somewhat decent pace and thankfully, my orgasm didn't need much runway to take off. Within seconds of re-engaging, I felt my orgasm starting to build. I was so tired that even if I wanted to, I don't think that I could have stopped from cumming into April at this point. Then as if in glorious slow motion, I felt the release occur within my body. I closed my eyes as I felt each spurt leave my body and enter April's. April just let out a humming moan as her body willingly accepted my load. \n\nOnce I finished, I felt that not only was my body drained of semen but also my energy. Surprising myself, I gracefully collapsed to the left side of April. I laid on my back and closed my eyes contemplating everything that just happened. I've never felt such a rush like that before! April quickly joined me as her body melded nicely into mine. Once we comfortable in our snuggling positions, we locked eyes. We smiled at each other. There was nothing that needed to be said at that moment. She then laid her head on my chest. I felt her body immediately relax as she drifted off to sleep. \n\nI opened my eyes and watched the shadows caused by the flicker of the candle lights dancing off of the ceiling. I didn't want this weekend to end! I couldn't have planned a better birthday weekend if I tried! I might have originally got these ladies with the pink pills but I now knew that I was truly lucky that they have chosen to keep me around even after the pills had effectively worn off. I know that I still had to deal with both J.R. and Chris, but at this moment, I was just enjoying my first day of being twenty six years old in this wonderful world!"
    ],
    "authorname": "ziphuntington",
    "tags": [
        "blonde",
        "creampie",
        "dominatrix",
        "foreplay",
        "latina",
        "lesbian",
        "mind control",
        "threesome",
        "voyeur"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/pink-pills-of-persuasion-ch-06b"
}