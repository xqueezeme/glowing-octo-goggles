{
    "title": "Past, Present and Future Ch. 06",
    "pages": [
        "<center>A short tale of sugar relationships. <br> It\u2019s a stand-alone story but builds on earlier chapters in the series. <br> Please enjoy yourself. \n\n+</center>\nSometimes I get it wrong.\n\nThat\u2019s human.\n\nSometimes I get it right.\n\nThat\u2019s generally delightful.\n\n+\n\nTony had left the convertible top down and we didn\u2019t talk much as we rode west on old Highway 22. I held my purse in my lap, smiled as I enjoyed the fall colours flashing by. \n\nTony backed the sports car into the barn on our arrival. A gentleman in the best sense, he came around, opened my door and held out his hand to help me out. I needed it, actually. While the Jaguar was very comfortable, it always felt like my bottom was about six inches off the pavement and getting in and out wearing a short skirt was a challenge.\n\nUnlike the first time I\u2019d visited, Tony most definitely admired my legs as I unfolded myself from the vehicle. I didn\u2019t mind; I was here to be looked at. I stretched them out a little further than I really had to and got a little butterfly tummy at the look in his eyes. He helped me carry my things inside, went back to the barn. By the time he returned with some shopping bags in his hands, I\u2019d undressed, left my clothes in the hall closet, touched up my makeup and was assembling my flute in his kitchen.\n\nThat was after all our arrangement. I peeled on arrival each weekend and stayed that way, providing music for him on request. For his part, Tony was considerate, generous, supportive, kind - and an exceptional lover. I\u2019d fallen head-over-heels in love with him. My life was very happy.\n\n\u201cWhat\u2019s for dinner and what would you like me to play?\u201d\n\nThat seemed to becoming the first line I uttered every Friday evening.\n\n\u201cChicken Piccata with a Parmesan-Reggiano crust. You know my musical tastes, Stephanie; choose something for me, please.\u201d\n\n\u201cOne of Mama\u2019s recipes, Tony?\u201d\n\n\u201cOf course.\u201d\n\nI\u2019d never met Mama and was regretting it. I would have liked to been able to say thank you for doing such a great job raising her little boy.\n\nI twisted a little on the stool, found the most comfortable position.  \u201cWhat does \u2018piccata\u2019 mean?\u201d\n\n\u201cUm, basically boneless meat dipped in flour and fried in olive oil, with lemons and capers. It won\u2019t take long.\u201d\n\nI got the hint. \n\nI like the Kuhlau fantasy for flute in D Major. To my mind, no other piece of music has such liquid, flowing notes. I took a breath, composed myself and began.\n\nTony paused in his dinner preparations, closed his eyes, smiled. In a few moments, he opened them again, still smiling. His eyes drifted over my bare form, his smile deepened and he turned back to dinner. Kuhlau finished, I started a Graf fantasy, also very pretty and rather longer. \n\nIn front of me, Tony was pounding chicken breasts flat, putting on a pot of water, washing spinach, slicing lemons. His attention was now on the food, not me \u2013 and nobody could focus like Tony. My music was background for him and I smiled inwardly to see him swaying just slightly in appreciation. \n\nPasta in the pot and chicken sizzling in the pan, he put down his implements, stretched a little and poured two glasses of white wine. Walking around the kitchen island, he placed one of them on a second stool beside me. That done, he began to slowly circle my stool, his eyes drifting over me, head to toes.\n\nI shivered just a little, remembering how embarrassed I\u2019d been the first time he\u2019d done that, smiled inside at how foolish I\u2019d been, how much I\u2019d changed since then. I shivered a little more as a tender fingertip touched my neck, slid gently over one shoulder, down my flank, across my hip and then, barely touching, along the sensitive skin of my inner thigh. I felt my nipples harden at his welcome touch.\n\nFinger slipping off my knee, he turned, stepped away, flipped the chicken, stirred a pot and, grasping his wineglass in one hand, plopped down in a comfortable chair, watching me as only Tony could.\n\nHad you a year ago asked me the odds of my spending every weekend baby-bare for the pleasure of a fully-dressed man twice my age, I\u2019d have laughed. The laughter was still there, but now it was of delight.\n\nI finished the Graf piece, lowered my flute and took a sip of wine. I breathed in and was surprised to find how tight my tummy was. Tony could set me going with just one soft touch.\n\nHe rose, tenderly caressed my cheek with his fingers on his way back to the stove. I felt treasured, valued, loved.\n\nJust for fun, I started to play some Jethro Tull, but after a few seconds of poking and sniffing, Tony pronounced dinner ready. He held my chair, kissing my cheek as I sat down.\n\nI won\u2019t spend much more time extolling Tony\u2019s cookery. Three big Stephanie stars and I left the table stuffed. Someday, I thought, I should get him to publish a cookbook. I giggled at the thought.\n\n\u201cWhat?\u201d His head was tilted to one side, a gentle smile on his face.\n\n\u201cYou should do a cooking podcast, Tony.\u201d\n\nThe smile turned to a grin.\n\n\u201cWould you help?\u201d\n\n\u201cI\u2019d love to...\u201d  I turned scarlet as my mouth snapped shut. I don\u2019t blush much anymore, but I\u2019d just realized the implications of the two of us taping a video here in Tony\u2019s kitchen. \n\nIt was one thing being naked for Tony. I could handle that; I\u2019d grown to enjoy it. But bare Stephanie in front of thousands of anonymous viewers, maybe people who knew me at the university? Not so much. \n\nThe man obviously could see what I was thinking, for his grin doubled.\n\n\u201cI think you\u2019d do more for the ratings than my recipes!\u201d he laughed.\n\nI faked a scowl at him and his laughter turned into a solid belly laugh. I joined in a second later, happily confident that Tony would never expect such of me. He\u2019d pushed my limits many times, often much further than I thought I could go, but he\u2019d never once demanded anything which would leave me ashamed, unwilling to face myself in the mirror. Despite my state of constant bareness, I felt a solid respect from the man and knew I was far more to him than just a pretty toy.\n\nThe day was clouding over by the time we\u2019d finished the dishes; there\u2019d be no sunset to watch tonight. Instead, we decided to get an early start on a weekend\u2019s worth of studying and homework. As usual, Tony\u2019s patient assistance with my biology report saved me a lot of time and frustration. Finished that, I hit Save on my laptop and we each moved on to our individual assignments.\n\nOutside, the cloud had turned to drizzle as dusk settled in. I gave it twenty minutes, then decided that it was time to take the reins, to surprise the man who had made me love him so much.\n\n\u201cExcuse me,\u201d I said. \u201cI\u2019ll be right back.\u201d \n\nHis attention focused on his studies, he merely grunted an acknowledgement.\n\nI stepped down the hall, bare feet silent on the flagstone floor, opened the closet where my clothes lived on a wooden hanger Friday through Sunday. I\u2019d of course packed no suitcase, but the purse I carried into the bathroom was a large one.\n\nI normally don\u2019t wear high heels, especially not stilettos. I know they\u2019re not good for a girl\u2019s back or hips and I know my limitations as to stability and balance. But, let\u2019s be honest, there are few things that make good legs look better than a nice pair of heels. \n\nBlack, with black ankle straps and slender silver toe straps, I loved the way they stretched out my calves, tightened my bum and make my legs look almost endless. No, they weren\u2019t Guccis or Jimmy Choos, but they weren\u2019t cheap, either; it\u2019d taken me a long time looking at them, trying them on, looking at myself in the store mirror, before I'd decided. Thinking about that now, I smiled just a little. When I\u2019d agreed to be Tony\u2019s sugar-baby, I\u2019d resolved to give him value for his money.\n\nI still wasn\u2019t, I suppose, totally comfortable with all of that. A lifetime of societal indoctrination still had a residual hold on me \u2013 \u2018objectification\u2019, \u2018commodification\u2019, bleh.  But explain to me why girls are pretty if not to make boys enjoy looking at them? Tony had treated me with scrupulous honesty and remarkable generosity. My life had dramatically improved thanks to him and he\u2019d never once asked me to do anything shameful.  Without ever leaving his farm, he\u2019d taken me places I\u2019d never dreamed of.\n\nI pulled a small bottle from my purse. Perfume tends to either be cheap and brazen or else subtle and very expensive. This had not been cheap; it was something I would never have dreamed of pre-Tony. I put my fingertip over the mouth of the bottle, turned it over quickly, touched a scent-laden finger to the inside of my wrists, behind my earlobes, my throat and my cleavage, behind my knees. I paused, almost blushed at the thought &mdash; Blushing twice in one day, Stephanie! Who\u2019d have thought you could have retained any shyness?&hairsp; &mdash; and put another touch on either side of my sex and one at the top of my bum crease.\n\nTaking the black thigh-high stockings from their package, I smiled at the feel of the slippery material. Real silk was something I hadn\u2019t been able to afford pre-Tony, either. Sitting down, I drew them over my legs, smiled at feeling of silk flowing over my skin, smoothed them out, checked them for wrinkles and straightness. Looking at myself in the mirror, I felt my tummy tighten a little at the way they emphasized the soft bareness of my thighs above them. \n\nBending over, I strapped on the shoes, stood up and took another glimpse in the mirror. The heels made my legs look simply amazing. \n\nI looked for a moment at the ring he\u2019d given me the night I agreed to be his sugar-baby, ran a fingertip over the solitaire diamond, the symbol of our arrangement. I considered leaving the gloves off, keeping it uncovered, but they were thin; it would be visible. Being careful not to snag the material, I pulled the glove over my left hand, tugged and smoothed it up into place up to my elbow. The right glove was easier.\n\nI ran a brush through my hair, straightened my necklace and did a last check of my makeup. I pulled my shoulders back, smiled as my boobs shifted. I thumbed my nipples gently, smiled again as they stiffened a little. \n\nHeels, stockings, gloves, necklace - in the mirror, I was centerfold-ready. \n\nI started a reasonably good strut down the hall, my shoulders back and straight, my head up and my brightest smile on my face. The low click-click-click of stiletto heels on stone floor was distinctive.\n\nTony was still focused on his homework when I came into the room. His head came up, his attention searching for the unfamiliar sound. I put a little more sway into my hips.\n\nHe spun in his chair, turned to look at me. For the first time, I saw Tony diRossi disconcerted. I did a model\u2019s end-of-runway turn in front of him, posed with my hip thrust out, hand on hip, awaiting his inspection.\n\nI won\u2019t say his jaw had fallen, but his eyes were definitely wide open. \n\n\u201cEvery girl likes to dress up once in a while, Tony!\u201d I grinned.  \"You like?\" \n\nMy grin grew as I leaned down to kiss his forehead. One of my boobs brushed his shoulder, trailing over his shirt and pulled loose to brush his ear. I could see his gaze briefly shift.\n\nI put my mouth next to his ear, whispered. \u201cIt\u2019s OK, Tony. It doesn\u2019t count as fetish unless there\u2019s a garter belt, too.\u201d\n\nWith that, I slid back into my chair as if everything was normal and resumed working on my homework. I didn\u2019t look his way and the silence was\u2026 impressive. \n\nI could hear him take a deep, deep breath. It was clear that I\u2019d hit a pretty good button.\n\n\u201cI thought high heels were supposed to hurt?\u201d\n\nWell, they weren\u2019t exactly comfortable, but my, oh my, I did like the effect they were obviously having on my audience of one!\n\n\u201cYou get used to them.\" I tried to act casually, struggled to repress my grin as I turned back to my homework, started making notes, ignored him. I could feel his eyes darting over me. He gave a little sniff, then another and I was pretty sure the perfume was at work.\n\nIt felt delicious. \n\nThe dear man tried to call my bluff and turned back to his own work, but I could see it was a bit of a struggle. Eventually, he started typing on his laptop.\n\nTime to up the ante.\n\nI stood, stepped behind him, bent down and nipped his ear gently with my teeth.\n\n\u201cYou, sir, are entirely overdressed.\u201d\n\nHis head turned to look at me over his shoulder. I could see appreciation and amusement in his eyes, saw a growing gleam of hunger.  \n\n\u201cGirls like to look, too, you know.\u201d\n\nI gripped his collar between thumb and forefinger, bent to his ear again, whispered very softly. \n\n\u201cOff.  Take your clothes off.\u201d\n\nHe stared at me.\n\n\u201cNow, Tony.\u201d \n\nI paused for a moment, smiled, kissed his nose.\n\n\u201cThat is, if it pleases you, Mr. DiRossi.\u201d\n\nGrey eyes under white brows locked on mine, then he smiled.\n\n+\n\nI\u2019d noticed Tony as a freshman last year. To be fair, I think every woman on campus noticed Tony. It wasn\u2019t his distinctive white hair and beard so much as his flair, his perfect grooming and his GQ-level fashion sense. He had confidence, panache. Had he not been a generation older than the average co-ed or even had he not been so withdrawn, Tony could have had his choice of any woman on campus.\n\nInstead, he kept pretty much to himself. No, he wasn\u2019t shy. He was polite, intelligent, articulate, would enter discussions if questions were asked, but he made no effort to blend in, to make friends. \n\nThen the luck of the draw put he and I together as biology lab partners. His common sense, patience and analytic intellect had been gifts for me, a solidly competent music student who sometimes found herself floundering in the left-brained world of science. He\u2019d asked nothing in return, which I\u2019d found a bit surprising. \n\nThrown together like that, he wasn\u2019t evasive, but he revealed little, offered less and, outside of helping me with my lab reports, had been the Invisible Man. Classes finished, he would invariably be driving out of the student parking lot on Western Road ten minutes later. Alone. \n\nThere was something else I found unusual. He didn\u2019t ever seem to acknowledge that he was surrounded in class by attractive young women. Especially me, his lab partner, the very pretty young woman standing right beside him. \n\nEvery woman knows what I\u2019m talking about. Men always&hairsp; check you out, politely or less so. There\u2019s always at least that quick, surreptitious glance at a girl\u2019s figure and legs when they think you aren\u2019t looking. Always. But not Tony. His manners were impeccable, almost courtly. He\u2019d hold the door open for me in the hallway, that sort of thing. So, yes, he knew I was female, but \u2018attractive\u2019 didn\u2019t seem to be linked to that, let alone \u2018desirable\u2019. \n\nIt was unusual. Eventually it became mildly irritating. What was wrong with me? Wasn\u2019t I cute enough for him to notice?\n\nAfter class one Friday, intrigued, challenged, I\u2019d pushed too hard with those games women use to get attention - batting my eyes, playing with my hair, keeping very close to him, touching his arm. \n\nI wanted Tony to acknowledge my femininity, my attractiveness. Instead, irritated by my antics, those grey eyes turned on me like lasers and, without touching me or saying anything the slightest bit rude or crude, he kicked my juvenile game down about three flights of stairs. \n\nNo, thank you, he didn\u2019t want a coffee. No, thank you, he didn\u2019t want to chill for a bit. \n\nNo. Thank you.\n\nInstead, he'd called out my coquetry, seized the initiative and turned everything into a totally different game, one light-years beyond the usual social dance I\u2019d known all my life. \n\nHis counter-proposal had been for me to spend the entire weekend with him, absolutely starkers, doing whatever pleased him at the moment.\n\n\u201cHow about we do something less adolescent? I\u2019ll wait while you go up to the residence and pack a bag. No, actually, don\u2019t bother with a suitcase; you won't need anything. Just bring your flute, your purse and your books. I\u2019ll have you back at your residence in time for dinner on Sunday.\u201d \n\nAlternatively, he continued, we could just walk over to the campus Starbucks and he\u2019d help me with my lab report as usual. The \u2018before it\u2019s time for your milk and cookies, dear\u2019&hairsp; had been unstated, but quite clear.\n\nI would have called down Facebook hellfire and Twitter damnation on a boy my own age who\u2019d been so forward. I tried to dodge, tried to plead having to work at the campus pub, but Tony\u2019s grey eyes had me pinned. Twenty minutes later, we were heading out to the country in his convertible.\n\nOur destination turned out to be a pastoral gem near Watford. Having inherited a working farm from his late uncle, Tony had leased out the fields to his neighbours and renovated the old stone farmhouse into a warm, beautiful place with oodles of light and an outstanding view of the surrounding countryside. \n\nThe first thing he did on arrival was to introduce me to Pi, the farm\u2019s feline owner. I like cats; Pi and I took to each other.\n\nThe second thing he did was to tell me &mdash; gently, politely but quite firmly &mdash; to undress and then join him in the kitchen. The unspoken alternative &mdash; my choice and no hard feelings &mdash; was for me to be sent home in a taxi, thanks for coming out and we\u2019ll see you at the lab next week. With that, he turned and went to start dinner, leaving me staring at a row of empty hangers on a clothes rod.\n\nMany women would have opted for the taxi, but I was too stubborn to allow myself to be dismissed like an eight-year-old who'd tried to butt in on a serious adult discussion.  Scarlet with embarrassment but too stinking proud to leave, I hung up my clothes in the closet, assembled my flute and, very shyly, went back into the kitchen. Tony, meal preparations underway, merely pointed at a stool and told me to play.\n\nFurious at him for his boldness, furious at myself for agreeing, I did so. He clearly enjoyed the music, but, as the minutes passed with Tony\u2019s attention devoted to his cooking rather than my delectable and now utterly bare form in front of him, my embarrassment had turned to confused, frustrated irritation. How dare&hairsp;  he be so cavalier in the presence of a gorgeous, naked, blue-eyed blonde? How dare&hairsp;  he ignore my vulnerable, exposed sexiness? What sort of freak was he?\n\nOf course, once dinner was cooking, Tony\u2019s attention shifted. He\u2019d circled me on my stool as I played, openly examining and admiring. The look in his eyes left no doubt in my mind that he indeed viewed me as a very desirable woman. \n\nI\u2019d been prepared to wind up in his bed. How else, given the way his proposition had been phrased? My confusion increased when dinner was ready. Instead of finally making his move, he had, with courtly charm, seated me at the table beside him and served a meal Escoffier would have been proud of. While his eyes never left my breasts and legs, he made very polite, entirely normal dinnertime conversation. When after dinner he took me outside to his deck to watch a stellar sunset, I was more than a little bewildered.\n\nSaying then that he couldn\u2019t possibly pay me enough for the pleasure my music and my appearance had given him, he\u2019d tried to give me a sterling silver necklace instead. Intricate, hand-crafted and heavy, I was stunned at how well it both complemented and amplified my own beauty. Pawned, it would have paid for next year\u2019s tuition. Instead, I refused it, indignantly told Tony I wasn\u2019t for sale. After much discussion, I agreed that to wear it at his farm \u2013 if I returned.\n\nI think that refusal marked a changing point in our relationship. For the first time, I saw what looked like true respect in his eyes.\n\nIt was only then, hours after I\u2019d first doffed my clothes, that he touched me for the first time. Tony proved an exceptional lover \u2013 strong yet gentle, thoughtful and sensitive. I thought my head would explode with that first orgasm. Then came another, a better one. And another, still better. And again and again, almost all weekend, leaving me a puddle of quivering female happiness.",
        "I did return, of course, and the relationship developed into something neither of us had expected. I wound up spending almost every weekend with Tony. Aside from our age disparity, we were much like any other student couple. We spent our time going for walks, playing games, sunning ourselves by his swimming pool, doing homework. Perfectly normal - asides from my clothes never leaving the hall closet . That was different, I guess.  \n\nAnd sex. Mountains and acres and kilowatts of amazing, imaginative, stupefyingly-satisfying sex. None of the boys I\u2019d ever dated were even partway as good.\n\nThe relationship shifted again when Tony made a cautious offer to be my sugar-daddy, to support me financially through the remainder of my undergrad degree. It had taken me a while to overcome my moral and philosophical qualms about a modern young woman accepting money from an older lover. When I finally accepted, he presented me the ring, saying that pretending to be his fianc\u00e9e might allow me to dodge the judgemental bitchiness of my peers on campus. It was a thoughtful gesture, one I was to learn was typical of Tony diRossi.\n\nI wore that ring now with pride, a symbol of our agreement. The necklace was still reserved for the farm.\n\nSince that day, he\u2019d continued to push my boundaries, but never once had I felt threatened or shamed. The man was caring and protective as he was kind and handsome.\n\nAs time went by, while I was still spending 24 hours a day naked for Tony\u2019s pleasure, our relationship had become deeper, more real. I realized that I had become more confident, more daring at times, more interested in exploring a truly powerful womanhood in all its implications. As well, there was no doubt I was entirely in love with the man.\n\nI considered myself a very lucky young woman.\n\n+\n\n\u201cSo?\u201d I pressed. \u201cWould that please you, Tony?\u201d \n\nHe made no move, so I reached around, began unbuttoning his shirt from behind.\n\n\u201cI said \u2018off\u2019, Mr. diRossi.\u201d I paused, giggled, deliberately rubbed the back of his neck with my breasts. \n\nHe laughed at that, a low chuckle. \n\n\u201cYou win, Stephanie.\u201d He stood and turned, his hands at his buttons.\n\n\u201cI wasn\u2019t aware this was a competition, sir.\u201d I smiled my best, reached lower with my hands. \u201cI was thinking more of cooperation.\u201d\n\nI knelt in front of him, could see a promising outline in his trouser fabric.\n\nI looked up, smiled again. \u201cIf that pleases...\u201d\n\nHe cut me off, swept his fingers through my hair. \u201cYou know it does, Stephanie.\u201d\n\nIt took only a couple of seconds to unfasten his trousers. I worked quickly enough that they and his boxers fell around his ankles about the same time as his shirt fell from his shoulders.\n\n\u201cThat\u2019s better!\u201d I smiled. I reached out, ran a fingertip very lightly over that sensitive triangle just under his crown.\n\nShifting my hands, I put my right hand behind his knee, pushed gently on his abdomen with the left.  He got the hint and sat down again.\n\nI shifted so as to be kneeling in front of him. \n\nWith my eyes fastened on his and a smile on my face, I put my hands on his knees, began to run them slowly up his legs, thumbs over his inner thighs. As my hands moved, his cock rose, became harder. I giggled as it seemed to stare at me.\n\nMy hands reached his groin, fingers flowing gently around his wrinkled sac, floating lightly up his length, thumbs circling his now-swollen helmet.\n\n\u201cYou are so handsome, Tony, and this,&hairsp;\u201d and I squeezed it, \u201cis so beautiful!\u201d\n\nI could see laughter in his eyes at that. He\u2019d called me beautiful many times. I doubt he\u2019d ever thought of his sex as that. \n\nMy hands moved over him, up, down, around, back and forth, lightly, gently, softly. He closed his eyes; his breathing was deeper; his balls pulled up further; his cock grew stiffer. I leaned down, kissed its head lightly, knelt back and continued to stroke him, slightly harder now.\n\nThere was fondness in his eyes now; what I dared hope might be love. Generous, kind, gentle, caring, he\u2019d never actually used the word before and I was dying to hear it from him.\n\n\u201cThank you, Tony.\u201d I said softly. \u201cYou are so good to me.\u201d\n\nHis eyes half-closed, I could see him trying to process a lot of things - me, my heels, stockings, gloves, silver, my teasing, stimulating hands, my smile and wide eyes, my thanks, so graphically expressed.\n\n\u201cI love you,\u201d I whispered.\n\nI could see that enter his mind as well. He stroked my head with a gentle hand, smiled, closed his eyes \u2013 in thought? in acceptance? in anticipation?  I wasn\u2019t sure, but I was certain that he was pleased.\n\nI leaned forward, clasped his boys in my glove-clad hands, and rolled them softly, pulling gently away from his body. Looking up at his face, I began to give light tongue-stokes, as one might first savour a lollipop, little tastes, tip-of-tongue here, broader licks there, testing this place and then that, inquiring nibbles.\n\nTony\u2019s hand came down, stroked my face, came to rest on my shoulder.\n\n\u201cYou are a remarkable woman,\u201d he said softly. \u201cThank you for trusting me, Stephanie.\u201d I felt that settle in my heart, felt its glow.\n\nI pulled a little way back so he could see me, kept stroking and fondling with my hands. I gave him my sweetest smile, bent back down.\n\nI licked his abs, his thighs, behind his sac \u2013 my tongue teasing, playing, worshiping. Above me, I hear him sigh.\n\nI took him into my mouth, further, then pulled back very slowly, my tongue moving back and forth under his length. I slowed as his head emerged, let it trail off my lower lip.\n\nHolding him by his twins, I bent forward again, began to bob up and down over his length, my cheeks hollow with suction. I looked up at his face as I moved, saw the tension growing on his face, felt his arousal in the muscles tightening in his legs. His clean male odour filled my nostrils and I felt my body react to it, nipples hard as pebbles now, a hollowness inside me, a wanting, a wetness.\n\nI rose on my knees, still clasping the boys in one hand, raised my face towards his for a kiss. As his lips touched mine, his tongue sweeping inside, I switched grips and began pumping the soft, soft skin over his length. His hand came down, gently brushed the hair off my forehead, caressed my head.\n\nI sped up my pumping and heard a low sound deep in his chest. I pulled out of the kiss, leaned in, found I could surround his wet length with my boobs. I pressed them together with my hands. \u201cHelp me,\u201d I whispered, my eyes on his.\n\nTony\u2019s hips rose and the tip of his cock emerged from between the girls, then back out of sight.\n\n\u201cIt feels good, Tony,\u201d I whispered. \u201cSo good.\u201d\n\nAnd it did. I\u2019ve always had super-sensitive breasts and Tony sliding between them was indeed stoking my own fires. I rolled my nipples with my thumbs and saw him grin at the sight.\n\nI could feel his arousal growing, saw his abs begin to quiver. This was his turn, I knew. I dropped back onto him, sucked him between my lips, moved up and down his length as quickly as I could.\n\nAs he entered his final moment, almost ready, I pulled back, decided to give him something boys are supposed to enjoy. I aimed his empurpled cock at my boobs, began to pump his shaft faster and faster. One pearl necklace, coming up. \n\nI was surprised when he pulled back, out of my hand. He stood, those immensely strong arms lifting me in front of him. I could feel his member banging against my leg, then he\u2019d pushed books on the table to one side, sat me on the edge, knelt in front of me and buried his face in my sex.\n\nI didn\u2019t need this. Not now. I'd been ready to finish him, would have been happy to have given him that. For myself, I was already ready, already dying for him inside me. But this was Tony \u2013 always a considerate lover, always willing to go the extra mile, make sure of Stephanie. His teeth gently nibbling, lips and tongue teased, fingers exploring, Tony played his own music on me. His hands swept up and down my legs, traced their way along the tops of my stockings, caressed my abdomen, rose to clasp my breasts. They found my nipples and I moaned, growing louder as his tongue found my pearl, began to tease it with light flicking strokes. My chest was tight, my nips blazing, my ladybits swollen. I was half a second, one tongue stroke from coming, when he rose again, lifted me. \n\nHolding me under the arms, he sat back on the chair, lowered me slowly. I reached down, found him, aimed as he lowered me slowly onto him. The chair was high; I could barely reach the floor with my feet. I stood on my tiptoes, bouncing my body up and down on him. I felt his hands clasp my bum, lifting me, letting me fall back onto his cock.\n\nI held his head, kissed him as if our lives depended on it, gloried in the feeling of his stiff rim stretching me, sliding along my walls.\n\nTony\u2019s eyes were half-closed. I squeezed inside, hard and they opened. He laughed, moved his hands to my boobs, caught stiff nipples between his fingers, pulled gently.\n\nHe growled again, low, needy and leaned in to flick my nipples with his tongue.\n\nIt was all I needed. I gave a shriek as bliss fought ecstasy in an all-out brawl for my lady parts. It echoed up and down my body, rippled, began all over again.\n\nTony\u2019s hands left my boobs, fell to my hips, pulled me down against him, hard, unmoving. I could feel him throb inside me as he growled a third time, shuddering, panting.\n\nI leaned forward against him, feeling the blaze fade slowly, slowly. I laid my head on his shoulder, felt his chest hair on my boobs and belly, felt his own heart pounding.\n\n\u201cI love you, Tony.\u201d It was if I was listening to somebody else saying it, over and over. \u201cI love you, I love you, I love...\u201d\n\n+\n\nWe slept late; Pi apparently being willing for once to share my side of the bed. After a small breakfast, we spent most of Saturday morning just sunning ourselves on his deck, enjoying the warm fall sunshine, talking quietly about nothing much at all. I practised my dives, played my flute a little, held his hand, enjoyed the way it felt as it moved across my skin from time to time. The time went quickly.\n\nEventually, Tony vanished into the kitchen. I knew enough not to offer to help; it was not for nothing that Tony had once remarked that I could overcook cornflakes. I had my place in this relationship; just not in the kitchen.\n\nWhen he reappeared, he was holding a picnic basket. \n\n\u201cI thought a picnic might be in order, given the nice weather.\u201d\n\nIt was&hairsp; a lovely day, one of those clear, sunny, very warm days which often slide in between the brilliant colours of fall and the damp cold of winter.\n\nI smiled. A meal anywhere with Tony was fun and his picnics were real treats.\n\n\u201cWhere?\u201d\n\n\u201cDown the fields a way. I don\u2019t think you\u2019ve seen it yet, Stephanie.\u201d\n\n\u201cGive me a minute.\u201d  \n\n\u201cYou\u2019ll probably need something on your feet.\u201d\n\n\u201cOK. And I think I may need some sunblock.\u201d A bare summer at the farm had given me pretty much an all-over tan, but the sun was still as hot as it had been at the height of the summer.\n\n\u201cIt\u2019ll be mainly shady.\u201d He smiled and I felt my heart melt all over again. As I watched, he took off his shirt, folded it and left it on the table, leaving him in low walking boots and a pair of immaculate L.L. Bean shorts.\n\n \u201cI think you\u2019re keeping me under the trees to keep me secret from your neighbours, Tony.\u201d I giggled a little.\n\n\u201cMaybe.\u201d I felt my heart turn over at his smile.\n\nIt had been something that I\u2019d worried about earlier. Tony liked to take a bare Stephanie for long walks. I\u2019d initially been concerned about other farmers, bird watchers and passing hikers, but Tony had always been careful in choosing our routes and, so far as I could tell, I\u2019d never been seen.\n\nTony handed me the basket, leaving a small blanket for him to carry. He motioned with his hand and we set off with me in the lead. That too was typical of Tony. He\u2019d been quite candid in admitting that my going first, without the blanket covering me, allowed him a better view of my bum as I walked. I\u2019d blushed madly the first time he\u2019d said that, had grown to accept his admiration as nothing less than my due. \n\nThe bottom line was that Tony was generous and gentle; he also liked to look at Stephanie and the latter cost me nothing. Knowing he was watching, I put a little more sway into my hips, heard a low chuckle.\n\nWe crossed one field with sugar beets almost ready for harvest. I thought we were heading to a place we\u2019d been before, a low hill with a good view of the surrounding countryside, but he had me turn off a little early and we entered the large wood lot from another direction. I soon saw why he\u2019d advised me to wear sturdy shoes, for the ground got damper, then wet and finally almost marshy. Tony was able to direct me to keep from getting seriously muddy.\n\n\u201cStay a bit to the right, Stephanie, near that line of bushes.\u201d\n\nAs I did, it seemed to me that a very small brook was forming, barely a foot across. It wended its way through the plants, very slow and silent. It got wider as we walked, but I could easily have stepped over it.\n\n\u201cIs this what...\u201d\n\n\u201cYup.\u201d He smiled happily. \u201cThis runs into a larger brook, which feeds into another, then into a stream and, eventually, into Lake St. Clair.\u201d\n\n\u201cThat\u2019s so cool, Tony!\u201d\n\nIt was, too. I found it both interesting and impressive. And it was, as promised, shady. As the brook widened gradually, the trees on either side arched up over it, forming almost a cathedral of still-green leaves, with soft green grass on either side of the water. \n\n\u201cMost people \u2013 most city people \u2013 don\u2019t realize how many little streams there are in the country. In cities and towns, the smaller ones have generally been paved over, turned into storm sewers, which makes things easier but not nearly as natural.\u201d\n\nHe smiled again. \u201cThere are lots of little streams around, if you know where to look. But this one is mine.\u201d\n\n\u201cWe\u2019re still on your farm?\u201d\n\n\u201cMmm-hmm. For a while yet. There's nobody here but us, Stephanie.\u201d\n\nThe brook grew a little wider. I could still have hopped across it, but the banks were growing steeper. I looked back at Tony for guidance.\n\n\u201cThe bottom\u2019s getting sandy,\u201d he said. \u201cNot much muck anymore. Best to wade.\" He bent down and started taking off his shoes. \n\nThe ankle-deep water was clear and warm on my feet. With the sun-split trees overhead and the odd late-season butterfly fluttering about, I felt like I was in Eden. \n\nI stopped, turned back to Tony, still following, his shoes hung about his neck on tied laces.\n\n\u201cAre we coming back this way? Will we need our shoes up ahead?\u201d\n\nHe thought for a moment.\n\n\u201cNo, we won\u2019t need shoes and, yes, we\u2019ll come back this way. Why?\u201d\n\nWithout speaking, I hung my own shoes over a convenient nearby branch. When I turned back towards him, it was clear that he\u2019d never thought of this before. He grinned a bit, hung up his own shoes.\n\n\u201cYou\u2019re pretty clever, young lady,\u201d he smiled.\n\n\u201cSeemed logical, sir.\u201d\n\nI led the way down the brook, not hurrying, admiring the sights, appreciating the country stillness, enjoying the experience. It was indeed Edenesque and I felt so natural, so very much part of it. The warm breeze on my bare skin was a treat I\u2019d never have had a chance to experience had it not been for Tony. I could feel its soft caress across my face and tummy, my breasts and legs. The creek bottom was all sand now, with the odd small rounded rock. I stopped, set the picnic basket down on the bank, closed my eyes and stretched my arms up to the sky. Smiling, I turned slowly, feeling the sun on my skin, happy as I\u2019d ever been.\n\nI opened my eyes to see Tony smiling back. \u201cI like the pose,\u201d he said. He stepped to me, took me by the hand and led me a few steps further down the brook.\n\n\u201cLook up,\u201d he said softly. \u201cSee the branch?\u201d\n\nThere was a wrist-thick tree branch running across the brook. \n\n\u201cTake it.\u201d His face was gentle, but it was more than a request. \n\nI reached up, but it was just out of reach. Tony smiled, stretched, caught it. His strong arms and weight pulled it down to me. I seized it with one hand, then the other. When Tony let go, the branch rose a little, stretching me just a bit. I found I could pull it down easily enough and my feet never left the sandy brook bottom, but I was gently pulled upwards, standing very erect, legs and arms and back and tummy drawn out.\n\nHanging the blanket on another convenient branch, Tony began to move around me in the brook, his feet making soft splashing noises as he stepped. His eyes swept over me, all of me. \n\n\u201cSo very lovely,\u201d he whispered, \u201cJust beautiful.\u201d\n\nI felt him squat behind me, his face close to me. I giggled a little as he kissed the backs of my knees, then the dimples on my lower back. Still not touching me with anything but lips and eyes, he came around front, his eyes roaming over my exposed, tanned body. I watched his gaze start low, move slowly up, linger on my thighs.\n\nHe knelt, head in front of my sex. I could feel his breath on my mound and labia.\n\n\u201cSpread your legs a little more.\u201d The branch above me sagged a little as I did so. \n\nSmiling, without touching, he calmly examined my sex, then leaned forward, kissed my lower lips gently. I felt them swell just slightly, felt my nipples grow harder. \u201cSo lovely,\u201d he whispered.\n\nHow many men say that?\n\nRising, his eyes were fixed on my stomach, then my breasts. He leaned closer, kissed each breast lightly and I felt them grow heavier, my nips become harder, more protruding.\n\nTony could hardly fail to notice; he chuckled, kissed each one again, let his tongue run lightly up between them.\n\nStanding now in front of me, he touched me with his hand for the first time, his palm softly, tracing my cheek. \n\n\u201cI was amazed the first time we met,\u201d he whispered. \u201cIn the lab. I couldn\u2019t believe how lovely you were, how lucky I was to have you as a partner.\u201d\n\nHis head moved towards me and he kissed my lips softly before pulling back.\n\nAgain he stepped back, began to circle me. This time, he touched me, drew his hands softly over my waist and hips. I felt my arousal soar, higher and higher with each touch.\n\nSuddenly, he tripped on a rock, his feet slipping out from under him. He landed flat on his back in the shallow water with a great splash. \n \nI managed to keep my grip on the branch, but wouldn\u2019t have been human if I hadn\u2019t laughed.\n\nTony diRossi rarely lost lose his aplomb and this was twice in as many days.  Eyes wide, he scrambled to his feet, water pouring off his body, hair and shorts. It looked like his pockets were full and water continued to soak through.\n\nHe shot a brief indignant look at me and my laughter, then paused, began to laugh himself. It really was funny.\n\nHe combed water from his hair and beard with his fingers, ran his hands over his arms and chest. He thought for a moment, pulled off his shorts, wrung the water out of them before trying to pull them back on. He flinched a little; they must have been cold.\n\n\u201cNobody here but us, you said.\u201d I tried not to snicker. \n\nHe looked at me, shrugged. \u201cTrue.\u201d\n\nThe dripping shorts soon were hung on another branch. I took my own time admiring Tony, naked as me now. \n\nAnd why not?  I\u2019d learned from him, I think, had come to enjoy looking at him as a pleasure in itself. Moreover, Tony\u2019s truly masculine presence enhanced my femininity. Yin and yang are supposed&hairsp;  to react with each other, strengthen each other and it's sad that so many of us have forgotten that.\n\nYes, I enjoyed feeling cherished and I treasured his warmth and support, but I also enjoyed his solid, caring masculinity. That too was empowering for me, although I doubt the cold, doctrinal covens on campus would accept my use of the word. Whatever. I\u2019d never felt more alive than when I was here with Tony.\n\nYes, Tony had just turned 50 years old, twice my age and more, but you wouldn\u2019t know it. He limped a bit, a souvenir of a helicopter crash years before, and sometimes used a cane on very cold days. His white-blonde hair and beard had gone almost entirely white, but his body was still youthful - not quite buff, but definitely reflecting the hours he spent in the university gym every week. There was no middle-aged flab on him; he had a good sixpack, broad shoulders and enormously strong arms. ",
        "I thought he looked delicious, eminently desirable. As I watched, a lingering drop of brook water ran off his abdomen, trickled down his half-hard length, lingered briefly, fell off to plop softly in the still water below him. \n\nHis laughter fading, he pulled me into a bare, wet hug. Letting go, he again began to circle me. His hands found my hips again, swept down over my bum, squeezed gently. \n\nHis arms came around my waist, pulled us together. He was no longer half-hard and I shivered at the feeling of his swollen stiffness against the small of my back, his balls pressed against my bum cheeks. His head came down, lips nuzzling my ear briefly. I wiggled my bum against him in happiness.\n\nHis hands swept gently up, over my ribs, coming to rest under my breasts, then lifted and cupped them, his thumbs swirling around and around my rock-hard nipples. I could feel a trickle of ladydew on my thighs. I hissed slightly, gripped the branch harder now.\n\nTony shifted, came to stand in front of me. His manhood was almost purple in his desire now; I could see its reflection in the water. I liked looking at it when it was like that, too, enjoyed seeing the effect I had on him. He\u2019d given me so much pleasure with it; it was something we shared, something I could please Tony with and be pleased with in turn. It was wonderful in every sense.\n\nHis eyes ran up and down my form.\n\n\u201cSo beautiful,\u201d he said softly. His hands took my head, pulled our mouths together. His tongue probed my lips and I opened in welcome. Our tongues played, swept around each other, explored, then he pulled away, stood just in front of me, his eyes again sweeping over my nakedness.\n\n \u201cIs Tony pleased?\u201d I whispered.\n\nHe chuckled, reached up, took my hands down and began to lead me along the brook, soft water flowing around our ankles. He held my hand with one of his, clutching picnic basket and blanket in his other. His stiff rod waved and bounced with each step he took; light leaking through the leaves above flashed and danced on his shaft.\n\nHad it been up to me, I would have jumped him right there, in the middle of the stream, but Tony obviously had a destination in mind.\n\nAnother few minutes and we turned a bend. The banks became lower and the brook slightly wider.  I could hear a late bird singing somewhere, saw a level grassy spot at the brook\u2019s edge. Tony led me towards it, water splashing lightly over our feet and legs.\n\n\u201cHere\u2019s the spot, Stephanie. Hungry?\u201d\n\nI stopped, held his hand firmly. He stopped, turned to face me.\n\nSmiling, I knelt in the warm water, took his meaty weight in my hand, gave it a long, broad lick with my tongue, base to swollen crown. I leaned forward, felt its stiff rim pass between my lips, lowered myself down until it probed the back of my throat with its soft bluntness. Pulling back, I bobbed up and down on him two or three times, then pulled off, looked up at him with a smile on my face.\n\n\u201cHungry, yes.\u201d\n\nI thought his smile the most wonderful thing in the world.\n\n\u201cIf it pleases you, Tony.\u201d\n\nHis laughter rang through the trees; he led me ashore, hand in hand, put down the basket, and spread out the blanket.\n\nHe stepped towards me, his hands pulling me in tight against his body. I felt my breasts pressed against his chest, my nipples tickled by his chest hair, his solid length pressed between us.\n\nHis mouth came to mine, lips seeking lips, tongues dancing, playing. His hands ran up and down my sides, squeezed my bum, rose to my head, pulled me in closer. I ran my own hands up and down his back, scratched lightly with my nails, heard him inhale in pleasure.\n\nHe pulled away, just a little, enough for an expert hand to find its way over my tummy, caress my inner thighs. I found his cock, seized its length, began to massage it slowly, squeezing its crown, stroking his slit. His finger found my sex and I groaned softly as his fingers spread my happy dew around my lips, my opening, my clit. I felt myself become wetter, my breast under one of his hands almost crying out itself in pleasure.\n\nThen we were on the blanket. Tony\u2019s hands positioned me on my hands and knees; I knew how much he liked to take me from behind, waited for the wonderful feeling it would give me, waited to be filled to my absolute depths.\n\nHis knees spread my legs and he knelt between them. I felt his tip sweep across my sex, slide between my lips, find its target and ease its way in. He pressed into my ribbed, welcoming darkness with one long, smooth stroke, stretching me completely. \n\n\u201cTony!\" I gasped. \n\nHe began to thrust into me, quickly, hard. I felt my boobs sway and swing beneath me, almost bouncing with the slapping impact of his hips against my bum. I tried to back into him, but his hands on my hips held me in place and I could only wiggle a bit from side to side.\n\nMy head lifted, high up, my eyes staring at the trees, my smile almost matching the sun above them.\n\nI began to moan now with each of his  strokes, a hoarse joy in my throat and chest. \n\nTony shifted, pulled my legs together, moved his knees to rest outside my own. He seized my hair, pulled my head back long enough for a passionate, sizzling, needy kiss. I felt it work its way through me, fanning my fires, lighting new ones.\n\nReleasing my hair, he leaned forward, his hips still driving that wondrous cock into me. I could feel the heat within me burning higher, hotter.\n\nHe took more of his weight on one elbow, reached under me with the other, found a breast, squeezed. He seized my glowing nipple with thumb and forefinger, held it, shifting and pulling as he moved with each drive of his hips. His teeth nibbled my ear, released it.\n\nHe gently pinched the nipple and I was off, filling the woods with meaningless words and exultant cries as the joyous excitement exploded, flames running across and through every part of my body. Tony kept pounding into me, feeding, stoking my passion, pushing me higher and higher.\n\nHe froze, both hands on my bum now, pulling me against him, holding us motionless. I could feel him pulse and surge within me as he panted and gasped.\n\nA minute later, he grasped me around my waist and rolled down to the blanket, pulling me with him. Still joined, we lay together, listening to the leaves, my orgasm gradually fading.\n\nI still have no idea what was in the picnic basket. \n\n+     \n\nWe snuggled in bed that night, cherishing each other\u2019s presence. \n\nMy head on his shoulder, I lay beside him in the candlelight, felt his chest rise and fall as he breathed.  We talked, petted one another. Eventually Tony raised a subject I\u2019d rather hoped he\u2019d forgotten.\n\n\u201cHow\u2019s Marcy these days?\u201d\n\nMarcy, a fine art student, my residence roomie and definitely my best friend ever, was an irrepressible, bubbly cutie. With long dark hair, huge expressive eyes and to-kill-for lashes, she was also a varsity cheerleader, her body fit and sleek, petite but very shapely.  Put simply, Marcy was an eye-turner.\n\nShe\u2019d known of my arrangement with Tony and had accepted it as real but odd, something for Stephanie alone. One weekend however, suffering the aftermath of a family quarrel and a serious case of residence claustrophobia, she'd begged to join us in the country for a day, anything to get out of the city. After talking to Tony, I\u2019d said yes, but, refusing to be the only naked woman, I\u2019d insisted that she had to peel, too. I\u2019d also warned her that Tony would most certainly enjoy watching her in the altogether.\n\nTony had soon made her feel welcome and she\u2019d managed to deal with her embarrassment. While always polite and never creepy, Tony had indeed quite openly studied her nude beauty as she painted landscapes on his deck. He\u2019d made no move to touch the girl, but it had been very obvious that he found her very attractive.\n\nIt being by coincidence his birthday, I\u2019d brought a gift for him, a framed photo of me he had  himself taken with my phone during a love-making session weeks before. I was dressed only in sterling silver and a sleepy smile; my arched back and hands behind my head emphasized my boobs. The photo showed a sheen of perspiration on my body and perfectly captured the wildly-contented, just-laid look on my face. \n\nHe'd been very pleased with the photo, but Marcy's unexpected, delectable presence had inspired me to what seemed to be the height of daring. I\u2019d followed the photo with a bombshell offer.\n\n\u201cThere\u2019s something else, Tony.\u201d\n\nHe\u2019d looked at me, one eyebrow raised.\n\n\u201cHow about a hall pass?\u201d \n\nI\u2019d whispered that with Marcy sitting a few paces in front of us, bare as the day she was born. While she hadn\u2019t heard us, it was clear to Tony who I was talking about. Amazed, his eyes flipped back and forth between me and Marcy as I continued to speak.\n\n\"Tony, we women can't help being jealous; it's the standard factory setting. But here\u2019s the deal. I won't stand in your way. All I ask is that you don't try to hide it, don't try to keep it a secret from me. \n\n\"And it doesn\u2019t mean I'm agreeing to take part, Tony,\" I said quietly. \"I'm a boy girl, not a girl girl. But I won't try to stop you and I won't ever bitch at you or nag you for that. I promise.\u201c\n\nMy offer had had a not-entirely-unexpected reaction. Tony had politely sent Marcy home early and then, over the course of the next hour, almost broke the bedframe.\n\n+\n\n\u201cMarcy is doing better, Tony. She\u2019s learning to ignore her witchy sister, which is entirely to the good.\u201d\n\nI paused, thought carefully. \u201cWhy? Are you considering my offer?\u201d My words were spoken softly, scarcely daring to \u2018speak of the devil\u2019. \n\nI\u2019d decided that I loved Tony enough to share him with another woman. I was pretty sure no other gift would show how much I loved him, how much I treasured him, how much I wanted to please him. So, while I wasn\u2019t entirely confident about it, I\u2019d been quite sincere. It would be up to me to hold up my end. \n\nWas it to be now?\n\n\u201cIf I was thinking about it, Stephanie, would you reconsider joining in?\u201d His eyes twinkled as he said that; I chose to take it as a tease. Yet...\n\nI surprised myself by blushing. I\u2019d never thought of myself as having a shred of bi in me. Marcy and I...\n\nI looked away, stared at the flickering light on the walls. I had no idea where to go from here.\n\nHis arm came around my waist, hugged me softly. \u201cEnough,\u201d he whispered softly. \u201cThat was an unfair question, Stephanie. I was trying to make a small joke. I\u2019m sorry. I take it back.\u201d \n\n\u201cOK,\u201d I whispered. \u201cIt\u2019s OK, Tony.\u201d I knew that he meant that, but he\u2019d opened some doors I\u2019d rather hoped would stay closed.\n\nHe went to sleep soon after. It took me longer, a lot longer.\n\nMy thoughts kept circling back to a brief interlude in Tony\u2019s barn early that first day. Marcy was still clearly nervous about being naked in the presence of the elegant, clothed Tony and I\u2019d spontaneously put out my arms as an invitation to a hug, a friendly, supportive gesture, nothing more. She\u2019d accepted it in the same way - after all, we were besties; we\u2019d hugged many times before. Once our arms held each other, once our bodies were against one another, the fact that we were nude hit both of us at the same time. We'd jumped apart, blushing furiously. \n\nTony had seen us holding each other, seen us jerking apart, seen us blushing. Gentleman to the core, he never mentioned it. I was pretty sure he thought about it, though.\n\nLying there beside him, I thought back to it. It had felt good, I realized. Very different, not at all like hugging a nude Tony, but still remarkably good. My mind lingered on how her bare breasts had felt against my own, how her hair on my shoulder had smelled.\n\nOn his birthday, I\u2019d explicitly offered to step away, to go inside if Tony wanted to make a play for Marcy, seduce her right there on his deck. Now, running a thumb over his ring in the darkness, I thought about it. I knew any normal man would be delighted to bed Marcy. Whatever his devotion, his loyalty to me, he must have been &mdash; must still be &mdash; tempted.\n\nSurprisingly, I realized that I could be happy for Marcy, too, if it happened. Tony was an amazing lover and she deserved some happiness.\n\nA question began to coil and twist its way through my mind. If Tony ever took me up on my offer, if Marcy ever agreed, would it be better for me to be somewhere else, knowing, maybe even listening to Marcy\u2019s happy cries as Tony slowly sent her spiraling up into that ultimate ecstasy? Or would it be better for me to actually be there, not having to imagine&hairsp; what was happening?\n\nAnd if I was \u2018there\u2019, to what extent?\n\nMy mind kept returning to the feeling of Marcy\u2019s breasts against mine, of how her silky skin had felt under my hand. I was shocked to realize how aroused those memories were making me.\n\nThis was not something I could discuss with Tony. Not now at any rate.\n\nI slipped silently from the bed, closed the bedroom door behind me, stepped out onto the deck. It was clear, a warm night for the season.\n\nI stretched out on a lounge chair. From where I lay, I could see lights marking out farms here and there in the dark distance, the odd pair of headlights silently tracing their way through the night. It was utterly still.\n\nIn front of me, I noticed the chair Marcy had been sitting in while painting. It took very little imagination to picture the diminutive woman, her head shifting back and forth as she worked. I could see her figure in my mind - tiny waist, long, pink nipples, firm, shapely bottom. I remembered the way she had shifted long hair blown onto her face by the breeze. \n\nTony\u2019s strong presence lingered on the deck, too, memories of kisses, of strong, gentle hands moving over me.\n\nI closed my eyes, thought of Marcy in the chair, allowed one hand to drift up my thigh, over my tummy, up to touch first one breast and then the other. My nipples sprang to attention; I felt a slight quiver in my legs. \n\nI opened my eyes, let them sweep over the countryside, looked at the chair again, thought of how Marcy had looked in the sunshine, how firm her bum had felt to my hands when we hugged in the barn. \n\nI felt my ladybits grow heavy, then heavier still as I traced my nipples with both hands, rolled them between thumbs and fingers. I began to take deeper breaths, imagining her sweet face so focussed on her painting.\n\nFar away, an owl hooted and I opened my eyes, searching the skies. I looked at Marcy\u2019s chair, imagined her still there, squeezed my breasts, slid one hand to trace the soft skin of my inner thighs, felt my arousal grow.\n\nThe owl hooted again. I stopped, thought of Tony. Was this fantasy a betrayal of his faith in me? I\u2019d never fantasized about him, but then I\u2019d never had to. I thought on it, realized that he\u2019d almost certainly be delighted to know I was dreaming about Marcy. I was positive he\u2019d be thrilled to watch the two of us making love, too, would be heaven-struck if a threesome ever happened. So, no, I thought, this wasn\u2019t cheating.\n\nMy hand began squeezing one boob softly, then the other. My other hand found its way to my sex, a finger exploring its way between my lips, then again. Again.\n\nI felt wetness on my finger, felt a hollow weight in my loins. I closed my eyes, thought of Marcy stretching to relieve a stiff back, arms wide, head back, perfect boobs outthrust. My finger dipped deeper, flowed over my pearl, slid over slippery inner lips. Again. And again, slightly harder.\n\nMy breath was becoming ragged and I could feel a solid weight in my tummy. My breasts felt heavy, my nipples like balls of granite. I started to give a low moan, bit my lip. Tony was sleeping.\n\nI slid a finger in, stretched and rolled my entrance, then two. Slowly, slowly, as deep as they would go, then, ever so slowly, pulling them out to flow over my applauding clit, fingertips pressing on my G-spot their way out.\n\nAgain, deeper, my thumb gently working my bud as fingers slid with excruciating slowness in and out of my depths.\n\nI could smell myself on the air now and was biting my lip to keep the demanding chorus of moans and cries inside me. One hand continued to tease and stroke my sex; the other moved from breast to breast, fondling, rolling and pulling this nipple, then the other.\n\nI felt my nipples almost glowing, felt the orgasm build, begin to surge. I slowed down, lightened my touches. Closing my eyes again, I tried to imagine it was Marcy\u2019s hand stroking my boobs, Marcy\u2019s fingers fondling my pussy. I tried to imagine what it would feel like if my hands were doing the same to her. I stretched it out, gloried in the image of the two of us entwined out here on Tony's deck, gently pushing each other into...\n\nThe owl hooted again and I started. The sudden movement of my hand was all it took. The joy rolled over me like a searing wind, consuming, flashing from boobs to pussy, ricocheting back and forth with a glorious surge of pleasure. I managed to keep my cries inside, mostly. I lay there on the chaise, biting my lip, my entire body quivering silently, the stars and a few night clouds applauding from far above.\n\nI lay there a long time. The glow gradually faded and I was able to remove my fingers, catch my breath. I realized I had reached another turning point.\n\nMaybe.\n\nIn a while, I rose, wiped myself down with a damp handcloth, slid back in beside Tony in bed.\n\nThis time, there was no problem sleeping.\n<center>+</center>\n<center> Thanks for reading.<br>If you enjoyed this tale, please remember to vote or comment.</center>\n<center>+ + + + +</center>\nFor those who enjoyed Stephanie\u2019s tale so far, a sample of Chapter 7:\n\nTony eased himself out of me, lay beside me in the candlelight. Orgasmic ripples continued running through me as he adjusted himself, snuggled in closer. One hand swept gently over my panting body, clutched briefly on my bum, moved up to come to rest on my breast. \n\n\u201cYou are amazing, Stephanie.\u201d His hand squeezed my boob softly. \n\n\u201cI\u2019m amazed at you, Mr. diRossi, so good to me, so kind, such an amazing lover.\u201d \n\nHe squeezed again. \u201cI wish I\u2019d spoken up earlier, Stephanie, maybe the first time we met in the lab. So lovely, so warm \u2013 why did I take so long?\u201d \n\n\u201cIt worked out, Tony. You make me very happy. I love you.\u201d \n\nHe paused, started to reply, cursed softly when my phone rang. I recognized the ring.\n\n\u201cIt\u2019s Marcy,\u201d I whispered."
    ],
    "authorname": "TarnishedPenny",
    "tags": [
        "cmnf",
        "sugar-daddy",
        "nudity",
        "high heels",
        "outdoor nudity",
        "nude walk",
        "lingerie",
        "masturbation",
        "fantasies"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/past-present-and-future-ch-06"
}