{
    "title": "Hanukkah Tradition Ch. 06",
    "pages": [
        "This is not just a holiday story, but rather a tale of two newly weds, Rachel and Geoffrey, who have begun a new holiday tradition on this, their first Hanukkah together. In the spirit of the holiday they are exchanging eight sexy gifts on each of the eight nights. You don't need to be Jewish to appreciate the story. Neither must you have read the other parts of the series, but you might appreciate it more if you have. Enjoy!\n\n\"No, a little further to the right. No, oww! You're going to fast. That hurts!\" I felt his hands clasp a death grip on my hips, pushing much too quickly against my virgin ass. My eyes began to well with tears. How could I have been so wrong about this? \n\n\"Come on, Rachel. Its almost in,\" he said, ramming against me urgently. He spat saliva down onto his rigid dick between us, serving as our only lubricant.\n\nHe didn't slow down. Whether it was inexperience or lack of empathy, it was wrong in so many ways. As I lay there bent over with my bottom in the air, exposed and vulnerable, I breathed deeply in hopes of achieving relaxation. For long minutes I teetered on the edge - torn between crying out for him to stop and sucking it up, hoping the pain would turn a corner magically into sexual fulfillment. \n\n\"Stop!\" I finally broke down, pulling away from him, too upset to even look up. \n\nI remember lying on my side facing away from him, tears rolling down my cheeks, the burning pain in my bottom stabbing me to the core. I felt his breath on my neck behind me, whispering, coaxing, \"Come on, Rachel. It was almost in. Let me try again. Come on. Don't be such a baby.\"\n\nThat was a day I learned many important lessons. One, if you yourself are inexperienced, make sure you aren't screwing a similarly inexperienced person. Two, with anal sex one can never ever have too much lubrication. Three, saliva is not lubrication. Four, never ever let a man you don't trust completely touch you there, let alone put his dick there. Five, and perhaps most importantly, Darren was a complete jerk, unworthy of wasting any more of my time.\n\nWithin minutes of this episode he was out of my bed and pulling on his boxers. Despite his unrelenting and whiney complaints of \"blue balls,\" I told him I wasn't feeling well and he needed to go. His obvious lack of interest in my view was not an isolated event and as I shoved him toward the door in his half buttoned shirt and untied shoelaces, I knew I would never regret this seemingly rash decision. Locking the door behind him, I vowed to never again get involved with a lout more concerned with his own feelings than mine.\n\nEnter Geoffrey into my life. Wonderful and caring, he'd sooner sever his own limb than harm a hair on my head. We'd spoken a few times about anal sex and we both shared how exciting the idea was to us. Geoffrey confessed that it was a huge turn-on for him to have a woman trust him enough to allow him to touch her most private area. Although I didn't go into details, he understood that I'd had a bad experience with it in the past. \n\n\"I'm not tired of your other delicious hole, Rachel. I'm in no rush,\" he'd tell me, holding me tight, looking at me with love and lust in his eyes. He would never dream of pushing me into something I didn't want. Meanwhile, in the almost two years we'd been together. He'd managed to tease me, touch me and occasionally poke his fingers inside me, all while I squealed with pleasure. \n\nI knew anal sex was something he very much wanted to share with me, but he was more than happy to wait until the time that I asked him for it. He had always been infinitely more excited about an activity I was begging him for, rather than some men who seem to get off on talking a girl into something they'd rather not do.\n\nThat time had arrived, I thought. This sexy new holiday tradition was an excellent opportunity to give Geoffrey something of myself that made my pussy tingle with anticipation. Tonight he would have all of me. Tonight he would have my ass.\n\nEven before this tradition was proposed, I'd been thinking a lot about anal sex and read as much as I could on the topic. I knew that all those erotica stories where there's a little spit slapped on and he shoves it inside her until she has an \"anal orgasm\" were mostly fiction. I figured with a little careful planning and a few well-chosen items from the local adult shop, we'd be set. \n\nA couple days before, I went down in the mid-afternoon to Max's Adult Superstore, only a few miles from my house. I parked in back and looked around, trembling inside, making sure no one saw me. As I walked to the door, I decided that if I saw anyone I knew, well, they'd probably be just as embarrassed as I was, so who cares?\n\nBrowsing around a little, I found some of the paraphernalia on the walls to be a little frightening but most of it was quite sexy. Some of the dildos were so big I wondered if they needed to be registered as lethal weapons, I thought giggling to myself. I settled on a slim dildo made for anal play and some flavored lubricant. As I brought my purchases up to the barely post-pubescent-looking pimply faced clerk, I steeled myself for some lewd commentary. He surprised me though, hardly even looking up from his porn comic book long enough to ring me up.\n\n\"Have a good day,\" he mumbled, his eyes never leaving the cartoon pages. Somehow it struck me as an odd thing to say as simply as if we were in a grocery story. I hugged the plain paper sack to my chest and made my way out, breathing a sigh of relief when I got to the car without being seen by anyone else. Driving home I thought, how strange that going to an adult store would make me so nervous. Next time I'm bringing Geoffrey though.\n\nWhen I got home, I hid the sack of goodies in the closet behind some shoes. In the days leading up to the holiday I couldn't walk by my closet without feeling a flutter in my tummy, remembering what was hidden there.\n\nTonight was the fifth night of Hanukah and my turn to give Geoffrey a sexy present. This new holiday tradition had brought us much closer and more willing to share new things with each other. We never passed by each other now without a kiss or little pat on the butt and it seemed Geoffrey was at least half erect at all times. These were changes I could definitely get used to!\n\n\"Hurry up, Rach,\" Geoffrey yelled from the living room. I finished putting the last two dishes away and hurried out to see him holding matches and looking anxiously at his watch.\n\n\"Jeez, Rachel, its already seven minutes past sundown!\" I couldn't believe Geoffrey was so enthusiastic to start. Wrapping his arms around me and pulling me close, I could feel against my hip just how eager he was. Easing from his hold, I turned around to light the candles and he held me from behind as we watched the wax drip down the sides to the menorah base. The candlelight was beautiful and for several long moments we stood together and just watched. Now I felt even more assured of my decision to trust Geoffrey tonight. Tonight and every night.\n\nWhen I handed Geoffrey two small boxes he grinned, weighing each in his hands, trying to decide which to open first. I straddled his lap as he lay back in the couch holding the brightly wrapped boxes. He opened the lube first. \n\n\"Mmm...strawberry kiwi. But you know, I like the taste of your natural lube better,\" he said, winking at me.\n\nNext was the slim, flesh-colored dildo. This one really confused him since he knew I already had a dildo and he didn't immediately see the difference. My little purple dildo was a leftover from my single days, and it had mainly just collected dust in my panties drawer for the last year now that I had a wonderful real cock at my disposal. Seeing his confusion, I began to point out the features.\n\n\"See how it's tapered? Very little on the tip and then wider?\" I explained and he nodded, never taking his eyes off the toy.\n\nAfter careful contemplation, he up looked into my eyes, perhaps trying to read what my broad smile could mean. \"Does this mean...\" he started to ask as his cock stirred below my bottom.\n\nI leaned forward, kissing him, sucking his tongue into my mouth. Pushing my chest against his, he set the presents down and wrapped his arms around me. Holding him close, I whispered into his ear, \"Tonight I want you inside me. Inside me everywhere.\" I heard him moan against my neck and his cock hardened below me as I ground down hard against his lap. \n\n\"Are you sure, Rachel?\" he asked. \"This isn't something we need to do if you aren't one hundred-percent sure.\"\n\nI kissed him in response, a passionate kiss, while simultaneously wriggling against his crotch. My pussy had been wet for hours thinking about tonight and feeling him inside me there. \n\nLeaning back with my hands against his chest, I looked into his eyes and explained. \"Geoffrey, you are the most patient man I've ever known and I have never been more ready. I want you inside me there. I want to feel your cock in my ass.\" I pulled him off the couch and we headed for the bedroom.\n\n\"First, let's start with a shower,\" I suggested. From experience I knew that a shower would be relaxing and I loved feeling Geoffrey's soapy hands all over me. Also, I knew that cleanliness was important if I was to be completely comfortable with this. Geoffrey was hardly arguing but instead was peeling off my clothes and his simultaneously at lightning speed.\n\nHe pulled me into the shower, wrapping his arms around me and kissing me as the hot water sprayed over both of us. I could hardly remember when I'd ever felt so safe and any trepidation I had left my body immediately. Leaning over me, he pulled down the soap and handed it to me grinning, \"Me first, please.\"\n\nHe turned around and I spread soap over his back, around his waist, over his muscular bottom and down his strong thighs. I took my time, massaging along the way, since he was clearly enjoying this. His hands were on the wall to steady himself as I reached around to lather his chest and abdomen while rubbing my soapy breasts against his back. I wrapped both arms around him and began to caress over his hips and toward his crotch. Carefully spreading lather through his trimmed pubes and to his cock, I was not surprised to find him already very hard. I tugged his hip and he turned around.\n\nHe pulled me close for a kiss as I lightly pinched his already hard nipples. Starting at his neck, I lathered down over his chest. Geoffrey smiled and closed his eyes and I felt my pussy tingle with excitement. Seeing the water running over his chest with puddles of foam brushing toward his hardness was just so sexy. I let my hands brush over his belly, his thighs, and all the while he stood still, enjoying the attention. I grasped his shaft tightly in my soapy hands and watched his mouth open with a quiet moan. Moving closer, I pressed my wet breasts against him and started very slowly stroking up and down.\n\nGeoffrey's cock was so hard in my hand as I put my foot up on the side of the tub and directed it downward toward my middle. His eyes opened when he felt the purple sensitive head running along the slippery lips of my pussy. He grinned and wordlessly conveyed with his eyes, \"You aren't the only one who can tease.\" Reaching below, I caressed his soapy balls and his hardness jumped in my hand. \n\nAfter only a little more of this teasing, he'd had enough. Geoffrey announced, \"Your turn.\"\n\nI giggled, wrapping my arms around him for a kiss as he picked up the soap from the bin. I stood on tiptoe as we kissed, and he steadied me with one arm wrapped around the small of my back. Geoffrey ran the bar of soap over my shoulders and upper back. His tongue slid into my mouth as I felt him put the soap down, then both hands go to work massaging my back. I felt the hardness of his cock pressed to my hip as he cupped both of my ass cheeks at once, nearly lifting me. He massaged, making me moan into his lips, as he brought soapy, wet fingers lightly between my cheeks. My knees nearly felt weak as he slowly pulled away from me and I opened my eyes. He looked into my face, looking very pleased at the obvious control he had over my body.\n\nPressing gently, he leaned me back against the cold tile wall and leaned forward to whisper in my ear, \"Close your eyes.\"\n\nMy heart jumped in my chest as I concentrated on the water dripping over my body and over my breasts as his soapy hands roamed along my chest. Taking care to twirl his fingers around each of my aching nipples, he made sure I felt the warmth of his body close to me. \n\nHis hot breath against my neck made me shiver and his hands trailed down over my hips and along my thighs. I spread my legs just a little, trying to convey to him just how stimulated I was from his touch. He chuckled softly close to my ear as his fingers teased over my pussy, touching along the outside lips, still smooth from his recent and very thorough shaving. The teasing was driving me mad as I started to just slightly rock my hips, hoping to feel his fingers inside.\n\nGeoffrey cupped my mons in his hand, whispering into my ear, \"You're already so excited. I can tell.\" His finger gently slid between the lips, \"So wet already, little one? Are you eager to have me touch you tonight?\"\n\nThe pressure of his finger very gently hovering over my clit made me tremble against his chest. As he moved his finger slowly back and forth coming so close to my clit, I began breathing to the rhythm of his touch, moaning lightly. His cock was rubbing against my soapy hip and I reached out to hold it. Geoffrey stopped me. It was clear he wanted to do all the teasing for now.\n\nIn a raspy voice he continued his vocal torture. \"Tonight I'm going to touch you everywhere.\" His finger slipped easily into my pussy as he continued. \"Tonight I'm going to fuck you everywhere, Rachel. Not only are you going to let me but you'll beg me for it.\"\n\nI was beyond listening to most of what he said. All of my attention was focused on his fingers inside me, curling upwards to the sensitive spot inside. His palm caressed my engorged clit - delicious pressure but not enough to get me closer to release. With my legs spread I tried bending my knees slightly to grind down. I needed him to touch me more. \n\nGently pulling his hand from my quivering wetness, he nibbled my ear lobe and asked me to turn around. I looked up at him, pouting. How could he be such a vicious tease? He just grinned knowingly - clearly he was in no hurry. Directing my hands up onto the wall in front of me, he positioned me with my back to him and reached down again for the soap. He quickly brushed over my back and lower to my ass and I felt his knee between my legs, encouraging me to spread my legs a little wider. He cupped my bottom cheeks firmly in each hand. He'd always loved my ass. \n\nI felt Geoffrey's hand against the small of my back, gently directing me to lean over. He washed quickly over my hips, to my thighs, and I felt him caressing upwards towards my middle. Gently he pushed me over just a little more until I was bent at a very exposed and vulnerable ninety-degree angle.\n\n\"We need to get you nice and clean,\" Geoffrey said, as though sensing my momentary insecurity. \"Plus, Rach, I love seeing you so exposed like this.\" With those words he slid his hand up the back of my thigh upwards to where my legs meet. I groaned, imagining how I must look bent over like this with my legs spread so wide. With one hand on my bottom, he reached his other hand around to my front. When his finger snaked into my dripping slit, I stopped thinking and concentrated on how wonderful his touch felt. As he slipped his finger deeper inside my warmth, I felt his other hand sliding up and down over my ass. The combination was overwhelming.\n\nI held my breath as his soapy finger slid between my cheeks, gently rubbing over my tiny hole. The fingers in my pussy began to pump deeper inside me as I felt the tip of his finger pushing gently on the hole, just very barely wriggling inside. With his soapy finger he rubbed all around, poking slightly inside me as he ran his thumb up to my clit. He felt me shudder against his hand as he continued to tease me. And then all at once the teasing was over and he was swirling round and round my clit. \n\nI was quickly nearing an orgasm as I felt his index finger very gently pressing inside my ass. The feeling of his fingers in both holes and his expert touch on my clit quickly pushed me over the edge as I felt my body tense with a huge orgasm. As waves of pleasure washed over me, I felt my muscles grabbing both of his fingers.\n\nHe gently pulled his fingers from me and I spun around to kiss him. How amazing that I've found someone who knows my body almost better than I do. He smiled as we wordlessly rinsed. I could hardly wait for more. As we toweled each other, Geoffrey continued to tease, lightly nibbling my clean hard nipples. My pussy dripped with a wetness that wouldn't towel off and I anxiously pulled him into the bedroom.\n\nToo eager to feel his cock, I pushed him to the edge of the bed and he sat. I dropped to my knees, kissing his lips on the way down, then dipped my head down to his throbbing manhood. He was so hard and his clean scent filled my nostrils as I nibbled and kissed playfully at the purple head. I started to slide him into my mouth, loving the velvety feeling of the skin against my lips. I licked lower over his balls, feeling as though I could never get tired of his taste. Geoffrey reached down to hold my hair from my face as he closed his eyes. In my exuberance I nearly forgot what else the night would bring until minutes later Geoffrey gently caressed my arm, wordlessly conveying our need to stop before things got too out of hand.\n\nLooking into my eyes with a look of half lust and half amusement at my enthusiasm, he pulled me up onto the bed. \"Rachel, there's no need to rush. We have all night and I'm going to touch you everywhere before it's over.\" I felt my insides flutter as I remembered with a rush that tonight Geoffrey would be in my ass tonight.\n\nGeoffrey positioned me on my back, kissing all over my still moist skin. Goosebumps covered my arms as I felt his mouth on my nipples. Reaching upwards to grab some pillows, he kissed me deeply, and positioned himself between my legs. He had me lift up to put pillows under my bottom, while his eyes never left mine. Lifting my spread legs up, he hooked my legs up over his shoulders and began kissing my pussy. With my ass on pillows I was very spread, and Geoffrey had access to everything.\n\nGeoffrey squirmed his tongue between my lips and slid his tongue up and around my clit, then back downward, poking into my pussy. My middle ached and felt so empty as I spread wider to get his mouth closer to me. Geoffrey continued to trail his tongue down, closer to my most sensitive area, and I squirmed. Again in no rush, he just seemed to lick up and down, making me more and more crazed with passion. \n\nReaching over to the new lube on the bed, he watched my eyes as he dripped the liquid over my mound. I shuddered as I felt the cool fluid dripping downwards to the crevasse between my buttocks. Geoffrey pushed my legs up to my chest and had me hold them as he knelt between my legs so close I could feel his breath on my skin. There was a time when I would have felt uncomfortable with being so exposed like this, inspected so closely. But with Geoffrey it was too breathtaking to be embarrassing and I knew just looking at my legs draped open in front of him like this would make his cock throb with wanting.\n\nHis eyes never left mine as his fingers slid over my mound, pulling the lips open, then tracing further down and spreading the slippery lube everywhere. Geoffrey held me open with one hand while sliding a finger from the other hand deep inside my aching pussy. He thrust inside twice before adding another finger. I was so excited, his fingers made a slurping sound as they pushed in and out. With his other hand he trailed fingers over my ass, watching my face, seeing nothing but desire in my eyes.",
        "Gently he pushed his finger just barely inside my ass. \"Okay, Rachel, I know you're very excited, but you're going to need to relax.\" I closed my eyes, taking deep breaths, concentrating on his soothing voice and his fingers touching me. \n\n\"Mmm you're so tight here, Rachel. That's it, baby. Try to relax.\" As his fingers pumped in and out of my pussy, his other finger very gently pushed inside my other tight hole. Geoffrey added his thumb to my clit and tingling deep in my belly began to build again. I felt his thumb swirling around and around as his finger in my ass wriggled, very gently relaxing the muscles inside. I began getting closer and closer to another orgasm when I realized his entire finger was inside me.\n\n\"That's it, Rachel. You're doing so well,\" his soft voice gently encouraged me. Never stopping his rhythm over my clit, he pulled his finger from my ass and reached over for the toy. I closed my eyes, trusting him completely, as he poured more lube over my skin and then the dildo. I felt the cool rubbery tip against me, rubbing over the hole but not pushing inside. Without his finger inside me I felt strangely empty and anxious to be filled again. Without thinking I rocked my hips downwards as Geoffrey held the toy still and I felt the tip push just barely inside the ring of muscle. \n\nThe toy felt very much like Geoffrey's finger, except it was colder and smoother. As he kept only the most gentle of pressure on it, I couldn't tell if he was sliding our new toy a bit further or staying still. His fingers still played over my clit in a rhythm intended to keep me at the edge of orgasm without actually getting there. For long minutes I felt increased pressure in my ass, filling me, and it felt wonderful. Geoffrey's soothing voice continued to encourage me to relax as I wondered how much more toy there could possibly be.\n\nAfter long exciting moments on the edge of orgasm, I felt the base of the toy against me and I realized it was all the way inside me. I was so proud of myself for being able to do this and so filled with love for Geoffrey in being so patient.\n\n\"Good job, honey,\" his fingers rubbed over my clit more quickly. \"I want to watch you cum on the toy, baby.\" My eyes closed tightly, I concentrated on the wonderful sensations. \"That's it,\" he kept saying, \"after you cum that's going to be my cock in there.\" The thought of him impaling me there pushed me over the edge again and I had another powerful orgasm. Panting, I could barely catch my breath as I felt my insides twitching and gripping the toy. \n\nGeoffrey reached down for the dildo, gently pulling it out an inch and then back inside. The feeling of fullness turned to nothing but pleasure and any fears I had about taking his cock inside me were gone. As he pumped the toy in and out of me, I began to wriggle on the bed, wishing it was his cock inside me instead of this cold, impersonal toy. Geoffrey watched my face as though waiting for something but continued to gently thrust in and out. Finally, I could take no more.\n\n\"Please, baby, please put your cock inside me,\" I begged.\n\nGeoffrey smiled knowingly and watched closely the lust in my eyes. He wanted more. \"Inside you where, Rachel?\"\n\nExasperated, I looked at him, \"Where the toy is. Inside me. Pleeeease.\"\n\nHe continued pushing the toy in and out, occasionally brushing fingers over my still sensitive clit. I knew what he wanted. He wanted to know this wasn't something he was making me do. He needed for this to be something I wanted. And at that moment, I couldn't remember ever wanting anything more.\n\nLooking directly into his lust filled eyes, I gave him what he wanted. \"Geoffrey, pull the toy out and put your cock in my ass. Please, please, it's what I want.\"\n\nGeoffrey reached over for the lube and slathered a generous amount over his shaft, gently fisting it in front of me. His cock looked so hard and, I realized, so huge! How is that going to fit in my tiny hole?\n\nGeoffrey leaned over and kissed me while pulling the toy from my ass with a pop. \"You know I'd never hurt you, Rachel.\" I smiled, all at once feeling such a want come over me that I knew it was silly to worry. My insides felt so empty without the toy and I tried to pull Geoffrey closer, wanting him to fill me. He knew better though. He knew this was something that couldn't be rushed no matter how anxious I was.\n\nHe carefully guided his slippery cock to my ass and gently pushed. I was surprised to feel how easily the head slipped inside. Geoffrey kissed me as he very slowly pushed a little further in. Like with the toy, I felt full inside but his cock was so much hotter and more slippery against my opening. As his throbbing hardness pushed gently further and further. I braced myself for pain that never came. Each time he would gently press inside, he'd stop and allow me to adjust. As hard as he was, I know he must be using amazing control to gradually ease inside rather than impaling me outright.\n\n\"Tell me how it feels,\" he coaxed, talking between clenched teeth.\n\n\"God, Geoffrey, its so much better than I ever imagined,\" I said, half amazed.\n\n\"You are so tight. This feels so amazing,\" he uttered, nearly incoherently.\n\nIt was then that I felt the tickle of his trimmed pubes against me and I realized he was all the way inside. I smiled to myself as he leaned down to kiss my neck.\n\nWith ragged breath he whispered, \"I want to feel you cum on my cock while I fuck you, Rachel. Touch yourself.\"\n\nAs exciting as this was, I knew I could cum quickly. Reaching between us, I felt for my throbbing clit and then felt lower. I couldn't resist pushing my fingers inside my pussy, feeling the tightness with his cock in my other hole. Slick with my juices and the lube, I expertly ran my middle finger to my clit and began the familiar rubbing. As I began to massage, Geoffrey pulled just an inch from my ass and pushed back inside. He was slow and gentle, pushing over and over.\n\nAs the feeling of being fucked there began to urge me closer and closer to release, our combined moaning became louder. Sensing I was ready for more, Geoffrey's pushing became less gentle as he began thrusting deeper and deeper. The feeling was so amazing, I begged him to fuck me harder. Fuck my ass.\n\nI could tell by his breathing that Geoffrey was very close to cumming. I slowed my touches and teetered on the edge of orgasm until the instant I felt his cock begin to jerk inside me. Feeling him cum inside me, I had another intense orgasm and my muscles spasmed and squeezed him tightly, milking his seed from him.\n\nGeoffrey collapsed on top of me and I held him close as little drops of sweat tickled down my tummy. He moved his hips slightly and his softened member slipped from inside me. Reaching down, he removed the pillows and gathered me into his arms. As I lay on his chest, I thought over and over about my earliest experiences and how completely preventable all of that could have been - and how much exquisite pleasure I had missed out on as a result. Geoffrey's breathing became steady and I wondered if he was asleep. \n\nThis experience taught me much more than an appreciation for anal sex. It taught me that in a caring, trusting relationship, all things are possible.\n\n\"You okay, Rach?\" Geoffrey asked groggily.\n\n\"Of course, baby,\" I answered, brushing hair from his sweaty forehead. Somehow now this present seemed to be more for me than him, I thought. Luckily the holiday wasn't nearly over.\n\nMany thanks to RAB, the best editor ever. Don't write and ask who he is. I want him all to myself. Hope you enjoyed the story, and please don't forget to vote and leave feedback."
    ],
    "authorname": "Abby_Normal_7",
    "tags": [
        "shower",
        "adult store",
        "anal sex",
        "anal stimulation",
        "anal teasing",
        "butt plug",
        "lubricant",
        "anal"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/hanukkah-tradition-ch-06"
}