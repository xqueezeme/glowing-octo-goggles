{
    "title": "Helen and Alex and a Moment in Time",
    "pages": [
        "Her to Him\n\nIt was already after two and Anne had not turned up to meet me after all. Her text was short and to the point and she was clearly annoyed that the Tube delays meant she would not be able to meet me. Never mind, I can finish my coffee and get a cab home. It's not such a big deal.\n\nSo that's how it happened. There I was sitting alone in the middle of the lovely Viennese coffee house on the Strand, when I looked up and saw a very handsome young man, clearly animated talking to a work colleague or a friend. He was looking out the window, then at his friend then out the window again, anything but inwards to where I was suddenly desperate to see just how handsome he actually was. I could feel my heart beat a little faster as I crossed my legs a little closer. This was not a reaction I was expecting. I looked down and smiled to myself, \"Helen, what are you thinking!\"\n\nI looked at my phone, if only as a distraction, but nothing had changed. No text or social post to focus on. I looked up again, he was still in animated conversation. And then...\n\nHis companion stood up and had put on his coat. They quickly shook hands, and he was alone. Alone, just like me, with some coffee still to finish. I could not help but to look over at him. He was maybe at most 25, tall and with an amazing frame, at least the way his shirt sat on his body it was clear he was athletic, if nothing else. He was quite beautiful, and I felt myself now pretty much staring at him, figuring out his life story and his job, his reason for being here and how much I wanted to... \"Helen, enough! This is most unlike you!\"\n\nBut then he looked up and straight at me. For a second, I thought he meant to, but then quickly realized he was probably just looking at the inside of the room. But he wasn't, he was actually looking directly at me. He smiled and it was the most gorgeous smile, young and handsome indeed. I knew I was fidgeting, but I also knew that I could feel a sensation in my spine, my stomach was butterfly central and I could sense my toes wiggling inside my shoes. At least I had worn nice heels today and a shortish, but elegant skirt to meet Anne. I had wanted to make the effort for my oldest friend to take her to a job interview, that of course she was not now going to make. That did make me sad. I looked down and at my phone, it was probably time to go. So, I picked up my phone and was just going to reach down to pick up my bag.\n\n\"I am so sorry to bother you, but would you be offended if I offered to buy you another Macchiato?\" I was quite taken back by the perfect manners and deep sensual sound of his voice. Now my whole body became involved in the conversation and yes, I could feel that actually deep down, my vagina had just picked up on the interest my brain was showing.\n\n\"Well, yes, I suppose so, of course. But why? I mean, well is there something I can help with?\" He smiled.\n\n\"Not help exactly. I have just been let down with a business colleague who can't make a meeting this afternoon. I am going to Brussels in the morning and needed to see him before I left. So, I am now at a loose end for a couple of hours and, well, I saw you here and you seem to be in the same situation. I saw you on your phone and your face said it all. So, I am offering coffee and company. It's a busy public place so I hoped you would not think I was some kind of crazy guy.\"\n\n\"A macchiato would be perfect.\"\n\n\"Coming right up. I'm Alex, by the way and I run my own sports equipment company. I am independently wealthy, haha, and I hope I have a good sense of humour. Let me get the coffee and I want to hear everything about you.\"\n\nIt was all a bit surreal if I'm honest. Here was this really quite young, but incredibly sexy man buying me coffee and wanting to get to know me. This certainly does not happen every day. I was suddenly aware of what I was wearing. Why? It's a coffee with a stranger! I was conscious that I was wearing boring functional underwear. Wait! What am I thinking?\n\nAlex was soon back with fresh coffee which of course smelled delicious, very much like Alex. I was now quite aroused, and my body was definitely interested in this beautiful young man.\n\n\"I'm Helen and I have all my own teeth, not sure about wealthy, but I definitely have a sense of humour.\" Alex smiled and it was an electric spark, dare I say it, right between my thighs. I could feel a little sensation I had not felt in a long time, my body having had so little male attention in quite some time.\n\nWe were there for an hour and I don't remember him looking away from me once in that whole time. I'm used to men telling me their life story and them never asking me once about any of my interests, but Alex wanted to know all about me, and he was interested in my past life as a professional ballerina and my middle-distance running for Great Britain. It was a most sensuous and sexy hour and I felt myself leaning ever closer to him. But then, well, all good things...\n\n\"I have to go just now and make two important phone calls Helen. They will take some time, so I should go to my hotel and make them. I'm not a crazy, so I ought not to ask you back to the hotel, but perhaps would you let me buy you dinner tonight? As I said, I'm on a flight in the morning, but I would love to continue this conversation. You probably have better local knowledge than me, so if you choose where and when, I will be there. I really want to hear more about you, and I am loving talking with you.\"\n\nAnd so it was, we had a date. Well, I had a date with a gorgeous and interesting younger guy, who clearly had an amazing body. I had three more hours to get ready and fret over the evening. I hurried home and went straight to my wardrobe. I found a nice black dress, not too daring, but it was quite short. I know I still have long and slim ballerina legs and this would be attractive and not especially naughty. Was I already thinking about that? Is that what I was expecting this evening? I clearly was because before I knew it, I was rummaging through my underwear drawer, tossing aside the knickers that just were not for going out, or as I was clearly thinking, for the eyes of a 25-year-old guy. Fuck! I was thinking about that. Was I expecting to sleep with Alex tonight? I rather think I was, because I chose some very tiny panties that showed my bum and a bra that would put up very little resistance to a strong masculine hand. In the mirror I looked at my figure. I'm very slim, I have very few lines on my face or my body for that matter, which is a blessing of course and I know I do have a good body. My life had been spent looking after this little temple and it had looked after me very well indeed. I was ready to meet Alex again. I was excited, and it was exhilarating to be on a date...\n\nThe cab ride home was full of laughing and giggling. Alex, like me, was not really a drinker. We were both still quite sober, but we just found so many things to laugh about together. He was quite beautiful, his strong body was confident and sexy, his whole being exuded heavenly vibrations to me. I really wanted him, that much I now knew. But I had not been with any man in eight years and even then, only one man for quite a few before that. This was new and daring territory, but I really wanted to go there right now. I was so aroused and every nerve was drawn tight at the crazy, probably idiotically unlikely prospect of lovemaking with this young man.\n\nIf it was going to happen, then I wanted it to be in my own flat, because I was safe there, it was familiar and although I really knew Alex was a lovely man, I was out of practice in overnight dating. It would be, frankly, just fucking amazing to take him into my bed.\n\nWhen the cab stopped, I got out and insisted on paying the fare. Alex did not move to get out. For a second my heart collapsed. I had obviously misread him in my silliness and ludicrous thoughts of the age gap not being an issue.\n\n\"Can I kiss you goodnight Helen? This has been a wonderful and fabulous evening.\" He wanted me to meet him halfway and signal he wasn't expecting to get out the cab.\n\n\"No Alex, I want you to take me up to my flat. Is that okay with you?\" Even as I said these words, my heart was pounding. I noticed that I had just edged one slender bare leg in his direction. I was flirting and I used to be quite good at it. I'm quite naughty when I'm turned on it seems. As the cab driver took my money through the window, I saw Alex gather up his jacket.\n\nAlex smiled and with almost cat like moves he was next to me with his arm gently but firmly on the small of my back. The cab slowly drove away. He was here and was not going to disappear in a puff of diesel fumes from my life just yet. He so gently caressed my face and then kissed me first softly and gently, but then with smooth hands he drew me close to him and kissed me deeply, with just a hint of a sigh as he did so. My body was trembling and I could feel that just like in the coffee shop, my vagina had just cottoned on to what my brain was thinking. I could feel him tremble as well, he was nervous, but also gorgeously masculine and in control for one so young. I was probably already actually falling for him.\n\nI did not bother with the usual apologies for the mess, I had tidied up and had pretty much come to the conclusion that we would be coming back here, right now and doing exactly this. Alex pressed me gently against the wall in the hallway and kissed me now openly with passion, his hands tracing along my arms and my hips. He was exploring my shape and my figure. His hands then slid along my thighs as far down as he could go without stooping then back up my bottom. I was alive with sparks and desire for more.\n\n\"Helen, you have the most amazingly gorgeous body, you are such a sexy lady.\" I drew a breath. This was enormously erotic already. I just wanted everything right now.\n\nI reached for his shirt and began to unbutton it. It was another formal shirt, I guess he had not packed for this encounter with an older woman as part of his trip. As I revealed his fabulous chest, I kissed whatever skin I could reach and then slipped the fabric off his shoulders. He was strong and muscular without overdoing it. Yes, gym equipment was his thing. He was a walking advert for the sexy male body.\n\nI hesitated to undo his trousers, as I was sure I would have fumbled his belt in the dark. Sensing a pause, he gently slipped off his shoes and asked where I wanted to go now. I took his hand and started to climb the stairs. After three steps, he turned me around, his face now level with my stomach and gently slid his hands along my thighs and in doing so lifted up my short dress so that he could kiss all of my legs and caress my hips again. He kissed down my legs, almost all down my calves and ran his hands over my feet. I had small feet and my legs were toned from my years of training. He seemed to enjoy the experience and as he kissed back up along my long legs, I felt his breathing quicken. He now had a perfect view of my tiny panties and did not seem put off. His touch was electric and now I wanted more. I could feel his breath on my still hidden vagina, and it was at that moment I realised I was going to be naked with this man and have this gorgeous young body make passionate love with mine.\n\nIn my bedroom, I unzipped my dress, but let him slip it off my shoulders. I have strong-toned shoulders and wanted him to see them and feel his kiss on my whole body. I have very small boobs, good for ballet, but maybe too small for satisfying sex with this gorgeous young man, or so I thought. They were still quite pert, but I thought that maybe he would find them flat, empty or disappointing. But I was so very, very wrong as it turned out.\n\nHe took a step back and looked at me, I know he was savouring my slender shape and taking in my whole, practically bare body. He clearly loved my long slim and toned runner's legs, my small runner-and-ballerina round peach-shaped bottom, my middle-distance trained hips and my broad dancer's shoulders. He quite obviously loved my long hair, tied into a very high ponytail for the evening.\n\nHe leaned forwards and kissed me again, but this time his hands moved deliberately from my shoulders and arms around to slip off my tiny bra. As hoped, it gave up the fight quite easily and slipped to the floor between us, falling on my bare feet. His kisses slipped slowly down my neck, and I felt his hands slide so very gently across my now completely bared boobs to feel their size, such as they were. He squeezed them and his pleasing sigh made me feel so good about my body.\n\n\"God, I love your boobs.\" My god I loved him squeezing them and taking my whole breast in his hand. It sent a direct message to my aching clitoris. I nearly orgasm in the right hands, as it were when my boobs are adored. Doubly so, with these beautiful deep and loving kisses.\n\nHis mouth moved down and found my now solid and swollen nipples and he licked them one at a time, clearly enjoying just how firm and aroused they were.\n\nSo, there we were stitched together, me topless in my bedroom and Alex slipping off his trousers, to share in an amazing experience.\n\nI wanted to pleasure him in return and to put my hands all over his young body. So, I guided him to the bed. As I crawled on to pull down the duvet, making sure I let him have a slightly naughty view of my bottom, he put his hands firmly upon my hips and slowly, deliberately slid my little knickers over my bottom along my thighs to my knees, leaving my bottom bare and my eager vagina for him to see. He gripped my panties so that I could not slip them right off, or move, really. He kissed my back and bottom cheeks lovingly but with a desire I cannot remember experiencing before. He released me and I turned over, my knickers still on, but now somewhere around my ankles with my body now completely naked for him to take in and enjoy. And also for me to be loved by this incredibly sexy man.\n\nHe wore tight underwear, and my gaze was automatically drawn to his whole body, but of course to how big his cock was going to be. I can be classy, when I'm so turned on. He lay by my side, and we deeply kissed, his hands free to explore every inch of my body. The first time his hands touched my vagina I could not help but jump, the sensation was just so strong. He was still kissing my boobs and soaking them in his saliva, wet trails all over them. He did seem to love my breasts. I felt his hand just ease apart my thighs a little more. His fingers explored my clitoris, and it was at that moment I realized that I was unprepared in the waxing department, with me not expecting male company and given my age, he would probably be put off altogether. Wrong again, thankfully. Very wrong.\n\nHe circled my clitoris, first with one finger then with two and as he sensed my hips and vagina responding to him, he began to slide a finger inside me. Mixed with kisses to my boobs, I was already sensing the first perfectly delicious tingles of an orgasm. My breathing quickened and all I wanted to do was push my boobs deeper on to his face and guide his fingers into me. Classy to the end.\n\nBy now I was confident that my body had not put him off, my inhibitions had long ago receded and I wanted more. His fingers were now moving deliciously in and out of me and occasionally and quite deliberately brushed over my anus, which was an entirely new and sexy experience.\n\nI had to touch him; I could not keep my hands off of him. My hands moved along his muscular abdomen, loving the firm feel of him and with a flat palm slid inside his underwear. This was the moment of truth. And Holy fuck.\n\n\"Oh my god Alex, you are so big.\"\n\nThat involuntary sound came out my mouth as my fingers felt this huge, caged granite-hard cock. I don't know where those words came from. Alex just kissed my boobs a little more passionately, sucking my entire boob into his mouth. His free hand drew me closer to him. I sensed his already perfect erection respond and his fingers on my clitoris were driving me crazy with desire.\n\n\"Oh Helen, you are such a sexy lady. You're so fucking gorgeous.\"\n\nMy hand tried to encircle his shaft. His cock was simply incredible. My hands found a thick, mushroom head, smooth, hot and firm to my touch. I was careful not to scratch it with my nails, I was out of practice, so I slid my fingers down his shaft. A little of his precum helped to lubricate my movements. His shaft was long and thick. The root of his cock was hard, veiny and masculine and his lovely big full balls were soft and smooth, I noted also with not a hair on them. My touch made him move so that I could explore his body all the more. My hands now slid excitedly between his legs, tearing off his underwear then squeezing his balls as I moved back up. His trimmed cock felt to my touch to be so incredibly sexy. As my hand tried to encircle his shaft, with him now almost on his back, I could clearly see that he had a very, very big penis and it was some distance for my hand to slip back to his wide head again! My god this was going to be a once in my lifetime fuck!\n\n\"Oh god, you have such a huge cock Alex. It's fucking gorgeous.\" Still classy, but I was so turned on. His flat stomach and firm thighs were the backdrop to his beautiful strong, young cock. My hands tried to move up and down to pleasure him, but it was a long way from his head to the base. His foreskin was thankfully loose, and I could easily expose his head, dark red and inviting.\n\n\"Helen, let me see your gorgeous body move, I want to see your boobs whilst you make love with me.\" I could sense he was moving me on top of him, so I did, my thighs had to spread apart over his abdomen and my vagina was of course now very wet and willing. I moved to find his enormous manhood and help it find its way inside my body.\n\n\"Let me see your whole body my lover. I want to see your pussy.\" He placed his hands on my hips and gently tilted me back. It was startling to hear him say the word 'pussy'. I felt like a teenager. My now exposed and wet vagina was on show for him. His thickening cock told me that he liked what he saw.\n\n\"You're so gorgeous, just delicious.\"\n\nFeeling now much more body confident, I slid back and realized that I would have to sit up high to get his heavy and massive dick inside me. It was just so fucking huge and obviously I had never had something this large anywhere near me before. He first teased me and guided it across my clitoris and the sensation of a large cock sliding over my wet aroused clitoris was almost enough for me to orgasm on him and I wanted to, but as it started to rise in me, he moved his wide head inside. He let out a loud sigh as his cock penetrated my vagina, I had not been in this position for quite some time, and I felt quite tight. I was being stretched over it and the sensation of being so full of young cock was exotic and energising.\n\nMy small boobs bounced as I began to rock back and forth on him. I hoped they would not be a disappointment, not as youthful and firm as they had once been. Also, I could not take him fully inside me, he was just too long and thick. I thought he would be disappointed, but he was looking at me longingly as I pushed him as deep in me as I could. I felt his fat head squeezing my cervix with every move and it was sexy, as well as making me feel a little vulnerable. I'm sure he could feel it as well. I slid down as hard as I could on his shaft and threw my head involuntarily to the ceiling, with my boobs wildly swirling, as the first wave of orgasmic pleasure took hold with each squeeze on him.\n\nI wanted him to like my body, the sexy sensation of me spread very wide across his muscular frame and the feeling of his large cock pressing hard against my womb, taking me to heights of pleasure I thought had passed me by.\n\nThere I was with a young, strong and thick penis inside me, buried deep up to my helpless cervix, the eager head searching for a womb to soak in sperm. Oh, how I wanted it.",
        "\"My God Helen, you are so fucking sexy. Just gorgeous.\" Hearing that gave me the confidence to really let go and succumb to this young body keenly exploring my body. Alex's hands were squeezing my boobs, clearly he liked them and I was driving my spread lips down hard on his stone-hard shaft, stretching my vagina past anything I'd experienced before.\n\nSuddenly he sat up and pulled me to him to kiss me. His hands now firmly covering my bottom, as he kissed me passionately, my neck, my face, my ears and then gently pulling my head back to suck my entire bosom into his mouth, one after another. He rocked his hips, making his cock upright and deep in me. It was gorgeous and naughty. I was stretched as wide as I had ever been. My vagina was at the limit of its experience, and he was so young to be my sexual teacher. I bounced on him, shouting loudly in total unashamed pleasure.\n\nAfter taking his fill of my bare boobs and plunging his cock hard at my uterus, holding my whole weight he lifted me and laid me back onto the bed. Still deep inside me he rolled me on to my front. He grabbed my ponytail and took control of what was now clearly going to be a fuck. His legs pushed mine firmly apart and I was now pinned on my front, my head held back and his huge cock now pounding me into the bed. I was loving the abandon, the vulnerability and the passion. He was frankly ravaging my vagina into infinity, and I yearned for every thick and hard inch of him. His hands spread my bottom; I felt my bum open as I was held apart. I was going to be a little naughty now...\n\n''Grab my hair. Pull my ponytail you fucking bastard. Fuck me deep in my cunt with your huge cock Alex.\"\n\n\"'Oh shit. Fucking hell. Oh baby, your arse is fucking gorgeous. I love your tiny cunt Helen. Fuck you are sexy.\"\n\nI know I was involuntarily screaming loudly and incoherently in pleasure, my cervix now being completely crushed with every deep stroke, my clitoris pulled toward his shaft then away in exquisite moves.\n\nI was slowly sliding off the edge of the bed with every deep movement of his body against mine, which only made the sensation more powerful as my bottom was forced up, as I had to reach out for the floor. He was fucking my body with long deep strokes. Nine inches in and nine out again. And again. I had never been taken like this. Strong, firm hands, loving and deeply pleasurable. My vagina was as willing as it could ever have been. I was wet with desire for this lovemaking. How I needed this, and I was getting it. Completely and totally fucked a total seeing-to in my, er, cunt, totally naked under him and every inch of me being loved and adored by Alex.\n\nHe reached out and held my foot, somehow this was the sexiest thing he had done so far. He was tenderly rubbing my sole as he pounded me over and over.\n\n\"I'm fucking your tight little cunt Helen. Your gorgeous, wet, hot fucking cunt.\" Alex was really going for it. I'm genteel when I'm turned on.\n\n\"Yes, fuck me. Fuck your girl hard. Take my little cunt with your big dick you fucker.\"\n\nI wanted to orgasm and just needed a bit more sensation on my clitoris. All I had to do was to push my bum a little higher on to him. When I did that, he gasped and drove that big pleasure giving cock all the deeper into my willing vagina.\n\n\"Look at my arse when you fuck me Alex. Look at what you are doing to me. Look at your cock disappear deep into my pussy.\"\n\nThat was all I needed. I could feel the waves of pleasure building in my lower back then across my stomach and I felt my poor pummelled uterus contract as my body gave in to an orgasm. I could hear myself screaming and sobbing in ecstasy with the sensation of being pounded hard by a young energetic cock. I came so very hard and was shouting his name and any number of combinations of obscenities as my body gave itself to this man.\n\nAlex responded and bucked and pushed his hips twice deeply inside of me. For a brief second, I took all nine of his inches and on the second deep and fulfilling stroke he groaned loudly. I could feel his strong legs shake and then I felt it. Strong, vigorous, energetic and youthful convulsions and jerks meant that my body was being filled deeply with young sperm. In waves it poured into me, and Alex stroked my back as his orgasm subsided. I wanted to feel his sperm inside me. There was no possibility of pregnancy and I completely wanted to feel his naked cock in my body.\n\n\"Yes, come in me my darling. Bury that come deep inside my body.\"\n\nI was half over the bed, my bottom perched in the air and a beautiful male body was on top of me, covered in a sheen of perspiration with his glistening shaft of pleasure resting on my anus, a tiny dribble of his come slipped inside my open bottom as it slid between my legs. This was glorious sex.\n\nI rolled off the bed and we lay side by side, still in the bliss from the shattering climax to our sex. We did not need to speak, we just kissed and stroked one another passionately and gently. I had just experienced an incredible and well, a screaming orgasm, given to me by the biggest cock I had ever seen or touched. I felt his sperm inside me, mostly buried deep, but a little found its way over my clitoris, which tickled deliciously. Alex had just fucked his first sixty-year-old...\n\nWe fell asleep in one another's arms. I felt so wanted, safe and desired next to this strong young man. The more than thirty years between us seemed as nothing really. I felt Alex move from me some time later, by now it was probably about four in the morning. I thought he was getting up for his flight, but it was a quick bathroom trip. It made me realise that I would be losing him soon, so I took my opportunity to do something that I had wanted to try with this gorgeous man.\n\nAs he returned, I saw properly his entire naked body standing up. He was tall, well over six feet, toned and athletic, to within a millimetre of perfection. But what took my gaze, of course, was the now naked shaft that hung heavy and low, well past his dangling heavy balls, themselves large and full. Even without an erection he was still huge. I really can't believe that I had been powerfully fucked by that dreamy body, but the wetness in my vagina and the ache deep in my cervix reminded me that it really wasn't a dream. As he got back into my bed, he once again held me gently. He clearly wasn't regretting it. He didn't have to hold me, he could have simply turned over to sleep, but he kept hold of his older lover. I turned to face him and kissed him first softly on the forehead and then wriggled slowly down his body, kissing him gently as I went.\n\nI reached his pubic line and his gorgeous trimmed manly abdomen. I could now feel his growing cock against my tiny boobs. I slowly moved so that they would roll over his cock and rub my nipples. It was my turn to take control.\n\nI kissed the base of his shaft and then along the whole length. I could taste my own body on his dick and that excited me. I had no idea how he might like me to suck him but was just going to figure it out as I went. I kissed along his shaft, which was now pleasingly aroused and stiffening rapidly. I licked all over it, dropping some saliva to help with the next bit. I rolled half under him and let his head drop onto my mouth. I opened my lips and let his cock slide slowly into it. As he became harder, my mouth was pushed away from his body, so I chose to suck his tip and with one hand feel his big shaft to explore his size and shape. He was definitely at least nine inches long, his cock had a slight sexy bend upwards and was so very thick, even then his head was the widest part of it. A real monster dick!\n\nI moved a little lower and allowed his big smooth balls to fall on my face. I licked one and then the other, taking one of them fully in my mouth. I closed my lips around it and held it there for a second, the trust to let me suck his entire testicle, close my lips on it and lick all around him.\n\nI licked them both, covering them in saliva and darting my tongue out and sucking them inside, one at a time. He was aroused, whimpering softly and letting me explore his body.\n\nI slid back up to his shaft, now wanting more and more of his cock length into my mouth, but I was really only able to suck his head and maybe an inch of his length. I was dripping saliva from the sensation and his shaft was now pretty much soaked in my dribble. I remembered once that I had been able to push a much smaller cock past my throat without choking if I remembered to swallow, but Alex was inches bigger and wider so that probably would not work. Still, I wanted to suck more of him, I wanted him to feel pleasure from me. I really wanted to please him after he had made love with me so passionately to devastating orgasmic heaven earlier.\n\nI took as much of his cock in my mouth as I could, with repeated in and out movements of my head. I could feel his hard young manhood brush on my tonsils and so swallowed hard. My throat opened a little and I pushed him a little deeper. This made him pretty much wake up fully. My open throat could suddenly take a bit more of him. I pushed down a little and three sexy inches of his penis disappeared into my throat, his fat head was stretching me, but I kept going. I felt good and in control. I now had more than half of Alex's gorgeous cock in me and he was now able to fuck my mouth a little. I let go of his shaft and let him control the movements. He moved just a little in then out of me. When he pushed deeper, I didn't resist. My throat was wet, I was not going to stop now. I had remembered how to do this.\n\nI could breathe just fine when he moved out, so it was just sexy pleasure. He rolled almost on top of me, so he could properly fuck my throat. I moved around so that his curved shaft could follow the shape of my throat. He put his hands on my head and I put my hands on his bottom, to encourage him and to connect with him as this was very, very intimate. Once again, I felt a little vulnerable, but adored. With now quite deep strokes he pushed further into me until we both suddenly realised that my tongue was just able to lick his balls. I had taken all nine inches into my throat. It really hurt in a slightly pleasurable way, and this was almost certainly never ever going to be repeated. When he was fully inside me, he held his cock there, lost in pleasure. It was so sexy. My jaw ached, my mouth was splayed very wide and inelegantly I'm sure, but I had his young, long and thick cock deep down. I could feel he wanted to fuck me harder, so I just eased back until I just had his wide tip in my mouth.\n\nI started to more vigorously slide on him and he responded by pretty much pumping my mouth whilst holding my head. He did this for quite some time, enjoying his older lover and sharing this experience of his big cock pushing against my tongue and throat. I stroked his legs with my hands, occasionally scratching the insides of his thighs with my nails, that drove him wild, especially as I brushed his big sexy balls.\n\nI knew he was going to orgasm in my mouth, I wanted him to. I grabbed his amazing bum and let him go wild in my mouth. He fucked my mouth with a caring passion, but also with complete abandon as his orgasm neared. I drew him out of me fully, so that he was left in no doubt what I wanted from him.\n\n\"I want you to come in my mouth Alex. Your girl wants to swallow your come.\" Bingo. I slid his cock back across my lips and wrapped my mouth once more around his bone-hard erection with my tongue eagerly lapping his head anticipating the stream of sperm.\n\n\"I'm going to come in your fucking mouth. Fuck, I'm coming in your fucking throat. Fuck Helen, you are fucking gorgeous. Fuck.\"\n\nHe tensed. He drove his dick deep, hard and soft thrusts alternating. He again shouted my name loudly. He held his cock in my mouth as deep as he dared, without choking me. Then it happened. I had my tongue on his hole licking it in anticipation and then my mouth was rapidly flooded with hot young sperm. It splashed over my tongue, teeth, some straight at my tonsils and I could feel it shooting hard out of his gorgeous swollen and throbbing tip. My mouth was completely full of very, very thick fresh sperm. Once he had finished and his cock was soaked, he lay back, panting loudly. He kept telling me how incredible I was in bed. I saw his chest rapidly rise and fall. His big dick, now spent, still looked a formidable and beautiful weapon for lovemaking.\n\nMy mouth was still completely full of his slightly salty, but delicious come, and I kissed up his body in reverse this time. I kissed his neck and his ears and as I did, I just moved my throat over his ear so that he could hear me swallow his sperm in the darkness.\n\nI swallowed his come in three goes. I made sure that he could hear it disappear down my throat and into my body.\n\n\"I wanted to swallow your come my sexy man. I can taste your sperm in my mouth and on my tongue. I can still feel your big cock fucking my tight throat, you pushed your big fucking dick right down deep you dirty man.\"\n\nHe let out a gasp then playfully turned me around and gently spanked me, still calling me rude names. I was naked and exposed next to him and I very much wanted him to look at my naked body. After all I had been staring at his since earlier yesterday afternoon. It was only fair. With the taste of his gorgeous sperm in my mouth, and my hands now resting on his thick, slippery cock, gently exploring it, stroking and loving it, we once more fell into a necessarily short and dreamy post-fuck sleep. I kept smiling at the filthy language we had both used when we were so turned on.\n\nAlex had set an alarm for six. He had to go to pick up his things before his flight. I was not at all sleepy, my womb was full of fresh young sperm, my mouth and jaw ached after a huge cock pounding and my brain was fried from a shattering orgasm. I thought that I could manage one more surprise for Alex, if he was in the mood for more of my body in the early morning.\n\nI went into the bathroom at about five thirty and looked at my ravaged body in the mirror. I was pretty slim, not really sagging anywhere, my boobs were perky because they were tiny and my bum was pretty tight still through all the years of training and exercise. But there were two things I didn't like. My pubic hair was thinning and some was even grey. Yuk. I also wanted to make my legs a bit smoother. My grey hair was still silky and long. I liked the look though. So, I did something a bit naughty. I shaved my legs but just decided to carry on up a little higher. Another first, but what the hell. After finishing it was time for a shower. I still smelled of sex and whilst that was naughty as hell, it is also sensual to smell divine. I could see my red bottom, gorgeous marks from an amazing fuck. Every bit of me was tingling for and because of Alex.\n\nI left the bathroom door open. I already know that if you are in my bed, you can see the shower cubicle in the mirror. Alex would have a good view of me naked and showering, which was what I wanted anyway. In the light of day, I was certain that my thinning bush would have been less than attractive. But a smooth, clean one....\n\nI heard his alarm go off and so I started humming in the shower. I noticed him stir and made sure that I wiped the steam from the glass using my boobs and freshly prepared vagina. I don't know if that was sexy or not, but what the hell.\n\nI faced the shower head and could sense that Alex was now sleepily behind me. He kissed my neck and moved my long hair to one side and caressed my face from behind, kissing anything he could reach. But I sensed he had a plan. My grey ponytail was almost black in the wet spray and I pulled it higher and tighter, so he could caress my back, and stroke my boobs whilst my hands were above my shoulders, which I love.\n\nI felt him kiss deliciously all the way down my back, with his hands keenly stroking and squeezing my little boobs. Then he did something that sent electric lightning shocks all through my body. His hands left my nipples alone and slid down my hips to gently part the cheeks of my bottom. At first be kissed, but then licked my naked bottom, right deep inside. His tongue pressed against my anus and then pushed it inside of me. I went to stop him, only because I was slightly embarrassed, but he gently squeezed my hands and pushed a little deeper. It was electric. I relaxed. It was mind-blowingly intimate, delicious and erotic.\n\nHe then slid his whole body under me, sucking and licking and then gently sliding a finger inside of my bare bottom. He moved around to my freshly tended vagina and with a gasp of delight on discovering my treat, began to devour my swollen clitoris and lick every inch of my clean lips. My hand reached down, and I pressed his head hard and deeper on to me. The sensation of skin on skin was incredible, never before had I felt that close touch. His tongue across my naked pubic area, licking, kissing, caressing. He spread my legs wide and with both hands gripping my bum cheeks, pulled me on to his tongue. I just could not stop myself. I spread myself wide over his mouth and could feel his tongue deep in my clitoris, vagina and anus over and over.\n\nI could feel myself orgasm again, a morning orgasm for me is less spiky and more like a wave on a beach. And I came in waves on his tongue. I pressed him hard on to my clitoris as I came. I wanted him to feel it throb and swell in pleasure in his mouth. It was a long and deep orgasm on his tongue. I could feel it pressed up against my pumping clitoris. Oh. My. God. My legs shook, partly giving way in surrender to this attention.\n\nAlex slid out from underneath me and again kissed my back. He pushed me slightly, so I was bent over. My legs still spread wide from the oral pleasures we just experienced. I was panting and gasping from my second heavy orgasm. I sensed that he moved away but only for a second. He returned and I felt his gorgeous big cock exploring the zone his mouth had just conquered. I felt his huge tip along my bottom and then with a wet, slippery sound I sensed my anus being explored. It was slow, deliberate and insistent. My muscles were simply too weak to resist, even if I had wanted to. But I didn't.\n\nHe had put some of my lubricating product on his cock when he had briefly disappeared. He knew my anus was receptive after all his attention and his tip nudged my entrance. I wanted it so I held my bottom for him. It was painful at first, the strong muscles of my anus resisting slightly to being stretched. I was experiencing anal sex for the first time in my life and with a big-dick man at that. I could feel my body slowly yielding to him. My rectum wasn't made for nine inches of hard penis, but it was willing to learn. He slid in right up to his big, beautiful balls. It hurt, it really did, but I did not care. I wanted this sensation so very much. The trinity of sex. He added more lubricant and suddenly the stretching sensation in my anus was replaced by a feeling of fullness and deep intimacy.\n\n\"'Alex, you have no time before you have to go. Just fuck me there. Don't stop. I've never done this, but please fuck me.\"\n\nHe needed no more encouragement. I was in the shower, pinned to the glass being fucked in my bum hard and deep by a young energetic cock. The sounds of our sex must have carried far. I was screaming in pain and pleasure being ravaged again by this gorgeous man, but now in new ways. His cock was pounding me hard and deep, so hard that my bottom cheeks were red with his thrusts.\n\nIn the shower, Alex's shouts were loud and masculine. Yes, fuck me darling. Fuck me into next week. Come for me. Fill me with your sperm again.\n\n\"I want you to come in me baby. Like this. Push deep in my tiny little bottom. Fuck me and have me.\"\n\nHe came hard, I could feel the convulsions of his swollen cock, shooting his sperm nine inches deep in my rectum. His loud shouts of orgasmic pleasure filled my bathroom. He thrust hard as he came, pushing me against the glass, owning my rectum, taking my anal virginity. A happy lady filled to the brim again with a young man's desire. But it was time to let him go. I was panting against the glass, I felt him kiss me lovingly and longingly on my shoulder. I was in such an ecstatic place I did not want this to end. He held his dick deep in me, with one hand on my well-fucked vagina, one on my much-adored boobs, panting and swearing as his climax washed over him. He kissed my neck and I tilted my head and kissed him passionately for one last time. Playfully, I had to say it.",
        "\"Throat, cunt and arse. You had me at I'm sorry to bother you.\"\n\n\"You had me the moment I saw your beautiful long legs and sexy ponytail.\"\n\nI found myself once again on the bed, recovering from our gorgeous evening and morning of lovemaking, my vagina wet still from Alex, my throat sore and aching and my gorgeously fucked bottom still pretty full of sperm, my cheeks red after being utterly ravaged. Alex was now dressed again and gone. I had stretched out on the bed naked for him to enjoy as he dressed, playing to him, for him, hoping he could find ten minutes to give me that huge cock one more time. We shared kisses, he sucked my breasts deeply as he dressed, kissed my bare boobs ceremonially and had grabbed my ankles and gently slapped my vagina with his heavy cock as we laughed together before he had to leave. Just before he put his underwear back on, I had kissed and licked that beautiful big cock one last time. I took one more look at his nine inches of perfect, delicious pleasure-giving penis. Despite the shower, I could still taste my body on it.\n\nOnce I had woken up from a dreamy sleep, I sadly realised that I didn't actually have his phone number. I knew deep down that I probably would never see him again. But there was always the hope. Why would a beautiful man in his twenties give a woman of sixty a second thought? We had known a lot about one another in a short time but had missed this simplest detail. So, that was it. Once in my lifetime. Maybe that is what he wanted. I dressed for the gym, followed by a walk in the sunshine to reflect on this incredible experience whilst still feeling him all over and inside me.\n\nI went downstairs to find the coffee pot had been placed on the middle of the table. Alex must have put it there because I don't do that. Under it was a note, written in pencil.\n\n'Helen - I'm crazy about you. Truly. I adore you. Your body is fucking incredible and this was the best sex ever, ever. I have your number, I've texted you'.\n\nI looked at my phone on the counter in the kitchen. Nothing. So, I took it to the window. Maybe it was a low signal. As I held it up, it beeped. A text.\n\nXxx\n\n \n"
    ],
    "authorname": "LucyDrees",
    "tags": [
        "older woman",
        "big cock",
        "anal sex",
        "deepthroat",
        "straight sex",
        "mature woman",
        "young man"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/helen-and-alex-and-a-moment-in-time"
}