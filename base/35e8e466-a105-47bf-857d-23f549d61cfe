{
    "title": "Hypnotizing the Babysitter Ch. 03",
    "pages": [
        "May 28th\n\nTina came rushing into my office, too eager with suppressed information to heed my warnings about the room being \"off-limits.\" The babysitter, who had just walked with her all the way from preschool, was hot on her trail in an attempt to corral the little filly, but she was running a distant second. \"It's her birthday!\" my daughter squealed. \"It's Dawn's birthday!\" And so (I learned, after a bit of pointed interrogation) it was. Number twenty-three.\n\nThe three of us wandered into the village together after I finished for the day, and Dawn took her leave from us so I could help Tina pick out the perfect gift. We met up with her again half an hour later outside the grocery store, where I had just purchased a carton of ice cream and one of those mini-cakes with a generic \"Happy Birthday\" inscribed on top. \"It's perfume!\" Tina announced loudly, waving a plastic sack. \"But you can't see it until after it's wrapped because it's a surprise!\" Dawn swore that she would certainly be surprised. She, for her part, had purchased another blouse and slacks ensemble, plus something in a bag from the nautical store.\n\nWe stopped for a carry-out pizza on the way home and rented a short cartoon movie. Tina wrapped the perfume herself (it wound up being more tape than gift paper), and Dawn ... following a minute-long ordeal unwrapping it ... played the part of surprised recipient very well. My gift to her was a small, ornately carved wooden box ... for her necklace, I told her.\n\nIt took awhile to get Tina down that night (undoubtedly due to the sugar high from the cake and ice cream), but Dawn and I were finally alone. I had packed my suitcase while Dawn had read the nightly book to my daughter and put her to bed. I was due in Amsterdam for a Saturday meeting, but the airline had cancelled the Thursday evening flight, and my office had rescheduled me for one earlier in the day. I'd have to leave the house in the morning. She came to me, hugged me, demurely accepted my tender kiss, and told me that her day had been perfect. I asked her if she was going to use the box for the necklace.\n\n\"The necklace belongs to you now, sir. Everything that was mine is now yours. I have freely given you all that I own ... all that I have ... all that I am.\"\n\nI put my arms around her. I was getting used to the weirdness, but she still surprised me. \"Don't be absurd,\" I told her gently. \"I am a great proponent of women's issues. Even if you DO take this subservient attitude with me, I refuse to accept it ... especially when it comes to your possessions.\"\n\nShe seemed to work her body further into mine, her arms around my waist. She shrugged and sighed. \"I regret to inform you, sir, that your attitude is superfluous. It simply doesn't matter to me. I belong to you now. I will continue to belong to you until you tire of me and send me away.\"\n\n\"Dawn ...\"\n\n\"And so, now the box is yours, too. But ... if you really want to give me a gift, could I request one? It's all I really want. Please, sir?\"\n\nI drew away from her enough to see her face, and I gazed at her with my sternest countenance. \"This conversation is NOT over. We will discuss this when I get back from my trip. I am NOT going to have you dictate some sort of hierarchical order in MY household and ...\"\n\nShe smiled up at me, then she lowered her face to my chest and hugged me fiercely. \"Of course, sir. I'll do anything you ask. Anything at all.\"\n\nI sighed. I was holding an enigma in my arms. \"Very well, then,\" I said levelly. \"I will grant you one birthday wish. Anything you want. What is it?\"\n\n\"I want you to let me call you Master,\" she told me simply.\n\nThe request staggered me. I sat down hard on the edge of the bed, thinking. She let go of me when I did that, of course; then she started to sit next to me in order to recapture our broken physical intimacy; but she finally just stood there before me, her gaze submissively downward, her arms at her sides, waiting. How had all this happened so quickly? Two weeks before, I was an emotional cripple over the loss of a wife through divorce; and today I was ... what ...? A master to a sex slave? At what point should I call it quits with all of this? When should I simply end this little game? But ... I hadn't solved the puzzle yet. How had such a concept as emotional slavery become so ingrained in Dawn's psyche? I had to figure this out. Perhaps just a little while longer.\n\n\"Very well,\" I told her; and she looked up at me sharply, a huge smile on her face. \"But with one restriction.\" Her bright countenance didn't fade, but she cocked her head in question. \"You may only call me that while you are naked,\" I continued. \"Is that agreed?\"\n\nIn fifteen seconds flat, every shred of clothing she wore lay in a heap on the floor, and she was on her knees at my feet. She threw her arms around my legs and put her head on my lap. \"Yes, Master. Thank you SO much, Master.\" I reached down and stroked her hair, contemplating this, when she said softly: \"I got what you wanted in town today, Master. Do you want it now? Do you want me now?\"\n\nShe couldn't see my expression. \"What did you get?\"\n\n\"You know,\" she answered softly. \"You put the suggestion in my head. I've been thinking about it all day.\"\n\nI let out a long, silent breath. \"Sure. Go get it.\"\n\nDawn sprang up and raced from the room, her breasts bouncing wildly, and she returned almost immediately with the plastic sack I had seen earlier from the nautical store in the village. I took it and pulled out the contents. Rope. Soft, nylon rope, about three-quarters of an inch thick. I soon discovered that it had been cut into four lengths of about three feet each, and the ends had been expertly melted so as not to unravel. She stood before me now, shivering slightly in anticipation, her hands held out in my direction, her wrists together.\n\nI had never been a very good Boy Scout. After studying the various parts to this very simple quandary, I dropped three of the sections of rope on the bed and began tying her up with the remaining one. Then I untied it and tried crossing her wrists first. I wrapped a couple times in one direction then the other; and I tied the whole thing off with a couple half hitches. That should hold her. But ... hold her to what? After all of that, I only had about nine inches of rope left to work with. I caught her grinning at me, and when I gave her a scowl, she broke out in laughter. Ah ... wait a minute ... I had an idea. I tied another length to the end of the rope I'd just finished with, then ordered her to lie down on her back on the bed, which she scampered to do after regaling me with another \"Yes, Master!\"\n\nThere was no place to tie a rope on that headboard, so I endeavored to slip my hand down between the mattress and wood to attempt to tie it directly to the lower frame. I couldn't seem to make it work in the given space, but I finally figured that I could loop it around the frame; then I untied the other end again and looped it through her bound wrists. That did it. No way was she getting out of that! She struggled a bit, testing it; and she beamed up at me in approval. The feet were pretty simple, and soon, her legs were bound widely spread-eagle while her wrists were together and restrained above her head.\n\nTriumphantly, I shed my clothes and went to work. I lay heavily atop her, kissing her for a long, long time, until her breathing became raspy and her hips began undulating against me. Then I moved to her breasts. By now, I knew just what she really liked ... and just what she really loved. I was still in the teasing phase, however, and when she was just getting to the point of begging, I licked my way down to her smooth nether region. Again I teased mercilessly while her hips strained up at me, then I reversed my efforts: back to her breasts again, then back to her lips. But this time, when I began kissing her, I reached down and worked my cock into her slippery passage. Now she was really getting into it, but I stopped (much to her disappointment) after only a dozen thrusts into her wet, slippery passage. And down I went again. I licked her for a couple minutes, then thrust into her while kissing her for awhile, then back down, then back up, over and over, stopping for little sessions on her nipples every time I encountered them. To my delight, I was able to keep the torture up for almost a full half hour.\n\nBoth of her orgasms were while I was licking her. After the second, I treated myself to simply fucking her ... slowly at first ... and then my thrusts into her became faster and harder ... and faster still ... and harder still ... and I exploded, driving deeply into her until she screamed hoarsely up at the ceiling while I clutched her and shivered ecstatically. I collapsed on her, drifting in afterglow, until her pleading whispers disturbed my somnambulant reverie. \"Please, Master. Take my mind now. Please.\"\n\nWith a sigh, I reached over and picked up her (my?) necklace, and I dangled it just above her face. In ten seconds, I knew that her mind was my prisoner, as well.\n\nLater, I couldn't get comfortable. Stretched out the way she was, she was taking up the whole bed. I got up and untied her; then I snuggled up to her the way I did every night now, and I drifted off to sleep.\n\n*************\n\nMay 29th\n\nAfter breakfast, I kissed my two ladies goodbye and hit the road for Boston. For some unfathomable reason, getting through the security checkpoint at Logan was very quick and completely painless. But air travel will always result in problems, and so I wasn't overly surprised to learn of a two-hour delay. Then, after boarding, Air Traffic Control held us for two more hours due to weather in the vicinity. By the time I got through customs at Heathrow, my connecting flight to Amsterdam was long gone. I found a hotel room. Daytime flights to Europe are a treat. It's much easier to go to bed earlier than normal (U.S. time) than it is to arrive in the morning, sleep-deprived from an all-nighter.\n\n***************\n\nMay 30th\n\nMy watch said it was three in the morning when I got my wake-up call at eight. There was about the normal degree of hassle getting back to the airport and through security. I finally got to my hotel room in the Dutch capital (with an \"a,\" though it's not the capitol, with an \"o\") by early evening. I tried to call Dawn, but she didn't answer. I phoned for room service and went over my presentation for the next day. Another call to Dawn before I went to bed went unanswered as well.\n\n***************\n\nMay 31st\n\nI spent the whole morning doing training, with a big presentation just after a catered lunch. The company chief exec was supposed to be the recipient of my little talk, but he'd been called away on a family emergency. As it all turned out, the whole trip was unnecessary (as is the case all too often). The decision to go with our company's advanced package had been made days before, and the marketing director and I signed a letter of agreement to make it official. I had been scheduled to go out with the CEO that evening, but now that he was gone, just about everyone wanted to get on with their interrupted weekend; and so I was free at about three o'clock.\n\nOn a whim, I got online and studied available flights home. There was one to Shannon (on the west coast of Ireland) that evening, and I could connect with a flight to Boston in the early morning. Fortunately, the gift shop in the hotel was still open, so I bought a Little Mermaid doll for Tina. In the cab, I called home again. Dawn was there this time, and halfway through the call, she started calling me Master. I asked if she was cheating, and she insisted that she had removed all her clothes while she was talking to me ... \"Isn't that okay, Master? Please?\" As long as no one else is in the room, I answered; and she giggled delightedly. She missed me terribly, she said. She needed me. She loved me. I asked her where she had been the day before when I called. \"You know,\" she answered demurely. \"You put the idea in my head. It was your suggestion. I couldn't do it here, so I had to take the bus to Portland. I hope you like it.\" I thought about that for awhile. I told that I was sure I would.\n\nIn Shannon, I got a cryptic text message from Ronald Swartz. It took me awhile to place the name. He was the president of the town bank ... I'd met him at a couple parties. He wanted me to call him, but it was too late today, I decided. I got a room and slept for about five hours before I got up and went back to the airport.\n\n******************\n\nJune 1st\n\nShannon is a relatively small international airport, and things went very smoothly. Despite six and a half hours in the air, it was still morning when we landed in Boston, thanks to the time zone changes. I turned on my phone again as the shuttle van was taking me to the long term parking lot at Logan and found another text message from Swartz. Urgent that you call me right away ... call me at home, it said. I dialed the number he'd provided when I got to my car.\n\n\"Look, Reggie ...\" he said after a brief pause. (I heard a door being closed, and I assumed he'd gone into another room for privacy. This meant that he didn't want his family to overhear.) \"You've got that Hernandez girl living with you in your home, right?\" I was shocked to realize that I'd never known her last name. To say it didn't \"fit\" would be an understatement. Teri (Dawn's cousin) certainly didn't look Hispanic; though, of course, that didn't mean anything.\n\n\"What's this all about, Ron?\" I said in a voice that was cooler than I'd intended.\n\nHe backpedaled quickly. \"I don't mean anything by that, Reggie. Honest. It's just that she tried to make two big deposits into your personal account on Saturday just before we closed. She started arguing with one of my tellers, so I took her into my office to try and straighten it out. She really knew her stuff. Started spouting state and federal banking regulations to me ... verbatim. I was just trying to protect YOU! At best, it's going to force you into an IRS audit. And ... it doesn't look good for the bank, transactions like this!\"\n\nI was silent for several long seconds. \"How much are we talking about here, Ron?\"\n\n\"She wanted to drain her personal account with us and transfer it to yours. That was a little over two thousand. But then there was a second party check for seven hundred.\"\n\nI took a breath. \"Seven hundred dollars?\"\n\n\"Seven hundred thousand, Reggie.\" He let that sink in. \"I know the check is good ... it's from a major insurance company. If SHE kept it, there wouldn't be a serious tax implication. Well, as long as she could prove it was part of an estate settlement. But in YOUR account, you'd have to claim it as income. You'd lose more than a fourth of it to taxes.\" He paused, waiting for me to comment. When I didn't, he rushed on. \"She didn't seem to care about that at all! Claimed it was your money now, taxes be damned. Started spouting off regulations that gave her the right to give the money to whomever she pleased. I finally, finally convinced her to deposit it in her own account until the check cleared. That should happen on Tuesday. I wanted to make sure you knew about all of this before that happened. Plus, like I said, it doesn't look good for the bank. I don't really know who this girl IS ... or what she wants. She's obviously not a local ... and big insurance companies HAVE been suckered into laundering schemes.\"\n\nI cleared my throat. \"Thanks, Ron. I appreciate the call. I'll handle it from here.\" It was obvious that he didn't enjoy being summarily dismissed, but he accepted that, said goodbye and hung up.\n\nI was home in another two hours. I was setting my bags down and closing the front door when I heard her on the stairs behind me, and as I turned, she was in my arms. She gasped and jerked away from me a little, but then she made a funny little noise as she nestled into me again. \"You ... you're home early!\" she accused.\n\n\"Please tell me that there isn't another man in my bed,\" I told her seriously. She laughed at that, stopped herself when she realized the sort of implication that had from my past, but she couldn't stop herself from laughing again.\n\n\"Oh, sir! Oh, gosh, sir, I missed you!\" She shifted in my arms again, straining away a little.\n\n\"What is the MATTER with you?\" I barked, grasping her by the shoulders and holding her at arm's length.\n\nShe blushed furiously and looked down, embarrassed. \"You know, sir.\"\n\nI let my mouth form a grim line. \"Show me.\"\n\nShe was wearing one of her over-sized sweatshirts, which was stained and wet. (She had dropped a pair of rubber gloves on the hardwood floor just before she hugged me, and I assumed she had been cleaning bathrooms.) Without further prompting, she grasped the lower part of the garment and pulled it over her head, and then she began fiddling with some things on her chest. They were some sort of foam rubber thingies that were stuck to her breasts, all around the nipples, and she took great care in peeling them off. When she was done, I observed that her nipples had been pierced from side to side, and bright metal rings skewered her fat tits. Another ring of the same metal was attached to each, like two links of a chain. She took a deep breath, and I heard a very faint clinking sound, so I assumed that they were made from stainless steel or some other very hard metal. It sounded like two small keys jangling on a keychain.\n\nShe studied my face, then she put the back of her hand to her mouth. \"Oh my gosh! You don't like them! They're just as I saw them in my mind, and so I thought this was what you wanted! Oh, sir!\"\n\nAlright ... please forgive me as I retreat from this scene for a little philosophical speculation. I am assuming that as each one of us reaches old age, there will be a time when we look back on our lives and try to determine which moments were the most important. Beyond any doubt, this particular instant was one of mine. And more to the point, I recognized it as such. Something deep down inside me told me that I should measure my response very, very carefully.\n\nIf you haven't already guessed it, I had never hypnotized Dawn. Oh, I had dangled the little gem in front of her face each night ... and I had watched as she dropped into deep slumber ... but I had never actually hypnotized her; never implanted any thoughts; never given her any suggestions about ANYTHING. The new clothes and hairdo, the sex, the shaved pubic area, her love for me, the anal coupling, exotic positions, the bondage ... none of it was my doing. She had thought it all up on her own. Perhaps she had visited some internet porn sites in search of favorite male fantasies and had somehow come to believe that I had theses flights of imagination, as well. But in reality, none of it had ever come from me.\n\nUnlike Dawn, I am a huge fan of psychology. I apply it to my job, and it has rarely let me down. I believe that there is an underlying reason for practically everything we do. Take my dear ex-wife, for instance. She had very low self esteem when I met her; and, loving her, I endeavored to help her improve because she WANTED to improve. I hadn't counted on the possibility that as she slimmed down and reclaimed her lost beauty, she might suddenly decide that she now had a chance to be part of what Dawn had called the \"ins.\" She can be popular now. She has a reason to believe that she can live a life that nature had previously denied her. We HAD been in love once; of that I was sure. We had laughed together, made plans together and struggled together. Oh, how we had struggled ... through my long hours of work putting her through grad school, and then HER long hours during the internship. We had been poor, busy and happy. But apparently, it had only been a start in her life ... a springboard to something else.",
        "Dawn was still a question mark. I didn't know what drove her. It was now obvious that she had always been denied the things in life every woman wants. Love, sex, intimacy, desire; this was the first time any of them had ever been within her grasp. And, since I hadn't been proactive enough to suggest these things, her subconscious had done it for me ... yet it had also given her the impression that everything was my doing. But it went much further. The submissive attitude, the need for domination and constant direction ... where had it all come from?\n\nI had always been a little bit on the conservative side when it came to body piercing. Oh, a pair of earrings is nice, I suppose; but beyond that, I saw it as a form of self-mutilation; and in the past, I think that my first reaction to seeing any form of it (lips, tongue, nose, etc) had been slight revulsion. What I was on the cusp of doing right now was putting a stop to ALL of this folderol. I really liked Dawn, and I especially liked what we were doing ... the sex, of course, but the intimacy most of all. No ... I loved this girl! Yes, by God, I loved her! And as an added benefit, she was a girl who really loved ME. (Why did I need that so badly?) But, I had been lying to her all this time ... or at the very least, withholding the truth. Now, she had done something I didn't particularly like.\n\nI still hadn't solved this riddle that was Dawn. I REALLY wanted to tell her the truth ... ALL of it. But ... should I tell her my true feelings about this right now? Would it solve anything? Would it help me understand her, or would I be using it only as an opportunity. Was it just selfishness on my part? For whatever reasons, I made a choice.\n\n\"Dawn ... um ... it's not what you think. They're ... uh ... great! I'm just concerned that you're in pain. They're really ... sexy. But it must hurt a lot.\"\n\nThe worry melted from her features. \"Oh, sir ... do you really like them? They hurt like the dickens yesterday, but there was almost no pain today ... until I hugged you. It's just that they're ... always THERE, you know? I think that's what they're really designed for ... making a woman remember something sexual ... all the time ... every second. Oh, gosh, sir ... I missed you SO much! Do you think we could ... um ... I mean ... Would you like me to ... uh ... do something for you? I could ...? I mean, I would do ... ANYTHING for you, sir!\"\n\nI laughed and grasped her shoulders again, turning her away from me so I could wrap my arms around her without fear of touching her nipples. She leaned back against me while I worked on the button of her jeans. \"I want you naked, woman. Now.\"\n\nShe giggled and bent to peel off the last of her clothing, then straightened and pushed her back into me, resting her arms on mine as they snaked around her waist. \"Now I can call you my Master again,\" she sighed. I led her upstairs and stripped out of my travel clothes, stretching out on my back in the center of the bed. She mounted me and rode me slowly while I stroked and squeezed her breasts, never actually coming into contact with the nipples or the rings. She was very turned on. After a minute or two, she picked up the pace, bouncing down on me hard. I let go of her globes and put my hands on her waist, slowing her down, forcing her to set up the cadence I wanted; and, of course, she complied immediately. Her huge mounds began an almost liquid undulation, the little rings clattering quietly, and I found the sight mesmerizing. I touched her in the places that I knew would shatter any remaining control she had, and she responded as I expected, gasping, moaning. A few minutes of inscribing circles around her clitoris with my fingertip brought on a moaning, screaming orgasm, and I was glad Tina wasn't with us, giving us the freedom to make as much noise as we wanted. When I came, it was soul-shattering.\n\nAfterward, she lay in my arms and told me about her ordeal in the tattoo/piercing parlor in Portland (which she'd found through careful research online; four-star feedback, she told me). She said that the whole experience had been excruciatingly embarrassing ... much worse than the actual pain from the piercing. She had been instructed that \"posts\" were more popular right now, but rings were recommended for first-timers because they caused less inflammation after the procedure. She had to soak her nipples in saline solution twice a day for a week, leave them open to the air as much as possible, and I wasn't supposed to suck or pull on them for at least two weeks. She was immensely proud of them, and her sense of sacrifice melted my heart.\n\nWe rested, and eventually, she fell asleep; but the travel (and my jumbled thoughts) had me wide awake; so I gently extricated myself from her and put on some clothes. I needed some sort of plan of attack to get to the bottom of things, and I decided that a cup of coffee couldn't hurt. As I passed her room, however (her old room, that is ... the one she had occupied before I demanded that she spend her nights with me), I heard a strange, slow, rhythmic beeping, and I went in to investigate. It turned out to be her cell phone, protesting that the battery was down to a one percent charge. I rummaged through her dresser until I found the charging cord, and I took it into my office and plugged it in. A half hour later, I was back in my office again with a large mug of coffee, intending to look into the insurance company that issued that mysterious check; but instead, I found myself investigating her phone. It was blinking madly, and a little exploration (with a phone I wasn't familiar with) revealed that she had five missed calls, five voicemails and two dozen unread text messages. There was only one phone number programmed into its directory: \"Work.\" While I was examining it, it rang.\n\n\"Hello?\"\n\n\"Who ...? Who IS this!? Where is Doctor Hernandez?\"\n\nThat gave me reason for pause, but I answered fairly quickly, in spite of it. \"Say ... I have an idea. Why don't we start this conversation over. You called me, so you should identify yourself first. Etiquette, and all that.\"\n\n\"You won't strong-arm ME, sir!\" the caller screamed. \"Where is Dr. Hernandez? I'll have you know that you are interfering with matters of national security!\"\n\nI laughed loudly at that as I disconnected the call. Idiot. Only politicians and screenwriters used that line. Not even the men and women at DHS say that. The phone rang again immediately.\n\n\"This is Dr. Jameson. I'm the Head of Projects for Applied Sciences in the University of California System. I want to speak to Dr. Hernandez.\" I could hear the strain in his voice.\n\n\"Alright now, Doc. Much better. I'm Reggie Torrance. Please ... call me Reggie. And I'll just call you ...\" I let the sentence hang.\n\n\"Listen to me you ...!\" \n\nAnd I hung up on him. It was almost a full minute before it rang again. \"Reggie,\" he said in a terse voice, \"I am George. May I please speak to Dawn Hernandez? She was supposed to call us several days ago, but failed to do so.\"\n\n\"Dawn isn't taking your call today, George,\" I told him very politely. \"It might have something to do with the gizmo that she invented and then you stole from her. Or, perhaps it has something to do with the way you controlled her psychologically, or the way you demanded ... and received ... sexual favors. It might have been the way you took everything you wanted from her and then kicked her out of your establishment and sent her packing across the country. Yes ... that might be the reason she wound up hopelessly depressed, severely suicidal and completely unable to function in society.\" \n\nThere was a strange sound from the other end, and for a moment, I wondered if perhaps he was having a heart attack. I found myself considering whether I would find that distressing, and I decided I would not. \"I ... I ... had no idea, I swear,\" he stammered. \"It wasn't me! I didn't do that!\" There was a pause. \"Oh, God. I didn't know ... but I should have. I was responsible. It was my project.\"\n\n\"George,\" I said genially, \"I do believe that we're getting somewhere now. Let's play twenty questions, shall we? Keep it very brief. What did she invent? And don't tell me that I won't understand. Just tell me.\"\n\nI heard his deep sigh. \"It's a module for a long-distance Martian surface explorer. You see, two dozen universities around the world are ...\"\n\n\"Yes, yes ... political budget cuts,\" I interrupted. \"Put the scientific R&D burden on the universities. I know the drill. WHAT module?\"\n\nI must have beaten him into submission. He answered automatically. \"Navigation.\"\n\n\"And you gave the assignment for that little project to ...?\" When he didn't answer right away, I prodded. \"Come on, George. You couldn't have given it to HER. There must have been a senior staff professor involved. Who is the villain in this little drama?\"\n\n\"Dr. Werner Bielman,\" he said dully. \"He isn't employed by the University System anymore. It took me about a week to realize that the module wasn't his, even though he'd already patented it. He was demanding a million dollars for it ... but he couldn't even explain simple differences between the blueprints and the hardware ... didn't even know how to turn the thing on ... and the software sequences were completely beyond him! I got our legal department involved to nullify the patent and have him fired. I only then found out about the investigations into allegations for sexual harassment from various female students and faculty members ... and the gambling debts. He fled the state. If ... if she wants to press charges of some sort, I can try to find out where he went.\"\n\n\"What she wants, George, is to be left alone.\"\n\nThis seemed to fire up his previous indignation. \"So you can have her to yourself!\" he spat. \"Who do you work for? A private lab? Beltway bandit? What do you have her doing?\"\n\n\"Actually, she's currently babysitting my four-year-old daughter.\"\n\nHe made a few sputtering sounds into the phone. \"You ... you can't be serious! Just from my conversations with her over the past few weeks, I've come to realize that Dr. Hernandez possesses one of the most acute scientific minds I've ever encountered! You can't possibly shutter such raw mental talent!\"\n\n\"Funny thing about mental talent, George ... It's been my experience that scientific minds aren't particularly acute when they're dead. And she came pretty damned close.\" I gave him awhile to let that sink in. \"Now ... tell me why she's so important to you. You already have her module.\"\n\nHe cleared his throat nervously. \"We have the device ... and even though we know it works ... we have a LOT of questions about HOW it works. It took me awhile to figure out that Doctor ... that Dawn was responsible for it. You see, when I made her appointment to Bielman, it was understood that the assignment would be in lieu of her doctoral thesis.\" \n\n\"Very smart,\" I said levelly. \"If she was the one who came up with it, you could easily convince her that the rights were to be retained by the university.\"\n\n\"No! I mean ... I guess, in a way. It was Bielman's project! But ...\" He sighed. \"Reggie, I really had no idea that he'd ... I mean, I'd heard some rumors about womanizing, but ... I mean, I didn't think that Dawn ... What I'm trying to say is that Dawn isn't very ...\"\n\n\"Attractive?\"\n\n\"I was going to say desirable. That sounds so lame. Oh, God, what have I done?\"\n\n\"What you've done, George, among other things, is provide me with a few answers. Thank you for that, anyway. Please don't attempt to contact Dawn again. If it is HER wish, she'll contact you. Goodbye.\" I disconnected the call, turned the device over, took off the back and figured out how to remove the battery. I heard a toilet flush somewhere, indicating that my babysitter was now awake, and I left the pieces of the cell phone in a heap on my desk while I went to find her.\n\nShe was coming out of the bathroom attached to our bedroom when she saw me. She'd put on a pair of shorts and a tee shirt, and I could see the outline of the rings through the material. She came to me and wrapped her arms around me, hesitating only a little as her breasts pressed into my chest. \"Oh, sir ... our ... nap was wonderful.\" She sighed. \"Sir ... do you think I'm a slut? My mother told me once that sex hurts ... but that it was a duty ... something that a wife had to do, and that's all. I didn't think any man would ever want to do it to me. But ... now ... now, it's all I seem to be able to think about. I never thought it would feel so good, or that it would be ... fun!\" She stiffened, suddenly realizing that I was not returning her hug. She pulled away quickly and stared up into my serious face. \"What is it, sir? What's wrong?\"\n\n\"We need to have a talk, Dawn. I want to discuss something important.\"\n\n\"Oh, my gosh!\" she exclaimed softly. \"It's time, isn't it?\"\n\n\"Time?\"\n\n\"You're going to send me away, aren't you? You've gotten tired of me, and you want me to leave, don't you?\" She was silent for several seconds. \"Sir ... thank you SO much for letting me love you this long!\"\n\n\"Enough!\" I barked loudly. She jumped, then lowered her gaze and stood before me, arms at her sides, silent, meek. I tried to get my thoughts in order. I knew I had all the pieces of the puzzle now, and I had to steel myself to play my part in this final act. \"Strip!\" I commanded.\n\nShe looked up, baffled. \"What?\"\n\n\"Get nude. Now. Do it.\" She rushed to do my bidding, wincing as she pulled the tee shirt over her breasts. She regained the same pose, sans clothes. \"Go down to my office,\" I commanded harshly. \"Sit in the chair in front of the desk. Go.\"\n\nShe hurried from the room. After the first two steps, she reached up with both hands and cupped her breasts, trying to keep them from bouncing and putting strain on her nipples. I watched her for a few moments, then went over and picked up the necklace and put it in my pocket. Downstairs, I pulled my executive desk chair around to face the one she was sitting in. I sat down and pushed mine until we were as close together as we could possibly be while facing each other. Her eyes were uncertain and frantic. A single tear slid down her cheek from the corner of her left eye, but she didn't reach up to wipe it off.\n\n\"Who am I to you?\" I asked sternly.\n\nShe blinked. \"Sir ... Master ... You are my Master.\"\n\n\"I will ask you questions. You will give me answers. Do you understand?\"\n\n\"Yes, Master.\"\n\n\"You have not always answered all my questions.\"\n\n\"I ... I'm sorry, Master.\"\n\n\"Who is Dr. Jameson?\"\n\nShe blinked, confused. \"Dr. Jameson? He's ... He's just a ... He's an advisor. He's in charge of school projects. Not just at my school ... for the university system.\"\n\nI nodded, satisfied. I could sense from her expression that she realized that I had already known that ... that I was just testing her. \"And what, exactly, is the device you invented? Explain it to me.\"\n\n\"It's a navigation system for a long range Martian surface vehicle,\" she answered. I made a motion with one hand, indicating that I wanted her to keep going. \"Are you familiar with ring laser gyros?\" she asked.\n\n\"Give me the short course. Explain it quickly.\"\n\nShe paused to think. \"Any three-dimensional stabilization system will have three gyroscopes going simultaneously, 90-degrees off-axis from each other. Since the early 1990's, navigation systems utilize gyros made from laser beams that are each bounced around a set of three mirrors. A beam is timed in its circuit around the mirrors ... and then later, any difference in that time is perceived as motion in that axis.\"\n\nShe leaned forward toward me, her elbows on her knees and she used her hands to gesture, seemingly oblivious to the fact that she was naked. She was really into her explanation, and she obviously forgot to call me Master. \"There are two basic errors inherent in any gyro system: initialization and precession. During initialization, a platform ... like an aircraft ... is kept parked, very still. When the gyros are up to speed and stable, at least one of them ... and possibly all three, depending on direction and attitude ... will sense motion. That's the motion of the planet spinning on its axis. To correct that 'error,' you have to enter the precise three-dimensional location of the platform. Commercial pilots enter a very exact latitude and longitude ... and then they enter their precise altitude. If you null out all the motion based on those coordinates, then any motion sensed after that will be the movement of the vehicle itself. That motion is transcribed into a mapping program and you always know exactly where you are. Make sense?\"\n\nI nodded and she went on. \"Here on earth, we have a very uniform way of defining altitude ... we base it on average, or mean, sea level. But there ARE no oceans on Mars. Instead, they use a topographical datum ... which is difficult to program into a nav system. Our earth nav computers were never meant to deal with Mars' size or rotational speed. We use the same type of Lat-Long grid for Mars, but the size of the grid squares is obviously VERY different. Also, we accept that there will be SOME inherent errors in gyros as time goes on ... that's precession. Today, we can update our systems using global positioning and correct for precession. But once again, there ARE no GPS satellites orbiting Mars.\"\n\n\"So how did you solve your problems,\" I asked.\n\n\"I did it through triple competing-yet-complimentary software arrays running simultaneously on separate processors which triangulate and average out the errors based on known terrain locations.\" \n\n\"Okay, Dr. Hernandez, you've convinced me. Now, who is Dr. Bielman?\"\n\nShe looked down inadvertently, then forced herself to meet my gaze again. \"Dr. Bielman was the man I told you about at dinner last week. Dr. Bielman was Sir. He was my last Sir.\"\n\n\"But he wasn't your FIRST Sir, was he, Dawn?\" She blinked and shook her head very slowly while I continued. \"Your first Sir was your father, wasn't he?\"\n\nShe was wide-eyed and scared. She didn't want these memories anymore. She opened her mouth, shut it again. She swallowed, then answered very softly: \"Yes, Master.\"\n\n\"And he was 'Sir' to your mother, too. Wasn't he? Your little 'problem with authority' is too well ingrained to be recent. You've lived this way for a long, long time. Plus ... it wasn't adapted ... it was learned. It was your mother who taught you how to cope, living with him. What was it like, existing with them in that home?\"\n\nShe shrugged as if her childhood hell was no big deal. \"I was ... busy. I didn't come to this country until I was seven. Almost immediately, I was put to work. The weekends were devoted to the church, beginning on Friday afternoon and going until Sunday evening. Plus Wednesday nights. I served food, did dishes, cleaned. All the other times, I worked in the hospital ... the church hospital ... doing \"volunteer work\" every day. Bed pans, laundry, washing sheets and doing floors.\"\n\n\"And your father forced you to do these things? What kind of man was he?\"\n\nShe smiled at that. \"He was devout. Atheists might use the word 'gullible.' Whatever the case, he wholeheartedly believed that it was necessary to keep me and mommy ... and all women ... in our place.\"\n\n\"And what place was that?\"\n\nShe looked up at me mildly. \"For the husband is the head of the wife, even as Christ is the head of the church: and he is the saviour of the body. Therefore as the church is subject unto Christ, so let the wives be to their own husbands in everything.\" \n\nI gawked at her, but she continued. \"Of the woman came the beginning of sin, and through her we all die.\" She took a breath. \"Let your women keep silence in the churches: for it is not permitted unto them to speak; but they are commanded to be under obedience, as also saith the law. And if they will learn any thing, let them ask their husbands at home: for it is a shame for women to speak in the church.\" She paused for a second. \"For the man is not of the woman; but the woman of the man. Neither was the man created for the woman; but the woman for the man.\" She contemplated me lightly. \"Would you like me to keep going, Master?\"",
        "I took a ragged breath and found that my hands were shaking. \"I ... I had no idea. All of this ... this 'Master' and 'Sir' stuff is the result of your Christian beliefs?\"\n\nShe laughed and shook her head, but then her eyes shifted slightly, as if the comment had elicited inspiration. She shrugged. \"I don't think I've ever really had faith, Master. Not like they all did. But, the idea has been there a long, long time. Even as a seven and eight year old ... before I began having ideas of sex and relationships, I would lie in bed and dream of my future mate. I suppose that's normal, to some extent. But while normal girls dream of teen heartthrobs, I always assumed that I would someday submit completely to someone who was chosen for me by the church elders. MY dreams ... were all of YOU, Master.\"\n\n\"ME?\"\n\nShe laughed again. \"No, not specifically of you. Of a man LIKE you. Kind. Supportive. Protective.\" She actually shivered with an over-excited thought. \"Yes ... that, most of all. Someone to protect me ... from the taunts of others ... from the harsh realities of the world ... and later, from my own horrifyingly prurient thoughts. Oh, how the idea of sex excited me!\" She shuddered again. \"I KNEW I had no faith when I moved away from the church, to Thousand Oaks. But the nightly dreams remained ... the thought of finding a kind man to submit to, like Mommy submitted to Sir ... the thought of a man who would dominate me completely, like Sir did Mommy ... and protect me.\"\n\n\"This church of yours wasn't in California?\"\n\n\"The church compound was in the desert, near Joshua Tree. I was sent to Thousand Oaks when I was fourteen. There was a big scandal in the church ... it was being investigated for various things, including violation of child labor laws and truancy requirements. The Prophet ... the head of the church ... was trying to reduce the number of adopted girls in the compound. He had taken three of them as his wives ... though they weren't married under state law, of course. I was never ... desirable to him. But, he convinced my parents that it would be best to send me away ... to live with Aunt Dorothy ... Mommy's sister.\"\n\n\"Teri's mother?\"\n\n\"Yes. That was heaven ... being in a normal home, going to normal schools. She lived alone when I arrived. Teri had already moved out ... so there were no men there ... no Sirs. I spent every day in the library ... every single day. Heaven. I missed Mommy, though.\"\n\n\"But she was the one who taught you how to be submissive ... subservient ... to always do as you are told,\" I accused. \"There probably would have been no 'Sir' if it hadn't been for her.\"\n\n\"Please don't hate her! She doesn't deserve hate! She was wonderful!\"\n\n\"But she was weak. Weak, like you.\"\n\n\"Please, Master. I loved her! I always loved her!\"\n\nI suddenly had a real problem staying in character. The fact that her sentence was in the past tense threw me. Maybe I DIDN'T have it all figured out, after all. \"She's dead? Is the life insurance payment for her?\"\n\nShe gave me a brief questioning look but answered immediately anyway. \"No, the insurance was just for him. He never even thought about insuring HER. They died together ... in Southern Mexico ... in some fighting between the military and one of the cartels. More than a hundred people died in that village. Sir and Mommy were just there ministering and doing other business for the church. That was three months ago.\"\n\n\"Before or after Bielman sent you away?\"\n\n\"Almost at the same time. Just after.\"\n\n\"Tell me the truth, Dawn ... If it had been before, would you have given the money to Bielman ... your 'Sir' at the time?\"\n\n\"I didn't KNOW about the money then, Master. I only just now found out about it. There were instructions from Sir ... from Daddy. He wanted to make sure I gave it all to the church. But the church just folded. The Prophet died two months ago, and his two sons were indicted for racketeering, drug dealing and money laundering, using the church as a base. The Federal Government confiscated all the assets. There was no church left TO give it to.\" She shifted nervously. \"But ... in answer to your question, Master: yes. If I'd had the money then ... and if he'd asked for it ... I probably would have given it to him.\"\n\n\"Why didn't you give him the necklace?\"\n\n\"I didn't have it. Mommy sent it to Aunt Dorothy in a small, unmarked package when she went to Mexico, asking her to hold it until she returned. Aunt Dorothy sent it on to me here in Maine when she found out about Mommy's death. That necklace must have been the only secret Mommy ever had from Sir. If he had known about it, I'm sure he would have made her give it to the church. The necklace let Mommy sleep ... let her dream.\"\n\n\"Last question: Where did the cell phone come from?\"\n\nI could tell she was flustered, but she answered quickly. \"A private detective tracked me down at Tod and Teri's house. HE gave it to me. He had been hired by Dr. Jameson, who had lots of questions about the module. But after you started ... wanting me, I ... I didn't care about that anymore. I didn't contact him again after I KNEW you were my Sir.\"\n\nI leaned forward and put both of my hands on Dawn's thighs. There was just one more thing to do ... one more thing that I hoped would take all of the wrong I had done to this woman and put it right. I now had to take a lie and make it the truth.\n\n\"I am going to hypnotize you, Dawn.\"\n\nShe looked into my eyes expectantly. \"Yes, Master. Of course.\"\n\n\"I am going to change you. I am going to change the way you act. I am going to change the way you ARE. I am going to change the way WE are together.\"\n\nShe blinked, and her voice cracked. \"How ... How have I displeased you, Master?\"\n\n\"You have never displeased me, my darling,\" I said gently, and watched as tears flooded her eyes. \"But when you awaken from this next trance, these changes WILL be made.\"\n\n\"Y ... yes, M ... Master.\"\n\n\"From this point on, we will be partners in life, you and me. For as long as it is your desire, I will be your Sir. But you MUST give me input ... you must advise me to the best of your ability. You must give me counsel and support, help us make the proper decisions ... together.\"\n\nShe was silent, and her eyes were wide with wonder. Tears streamed down her cheeks.\n\n\"Your mind will still be filled with sexual thoughts and cravings ... but from now on, you must discuss them with me before you act. I want to hear from your conscious self, and not just your subconscious. Do you understand that?\"\n\nShe opened her mouth to answer, but she seemingly couldn't, and she nodded emphatically.\n\n\"I love you, and if you truly want my dominance and control, I will agree to always be your Master,\" I told her. She made a strangled little sound, deep down in her throat, and she began to move toward me, her arms coming up to embrace me, but I reached up and grasped her firmly by the shoulders. She wore a stunned expression of mute ecstasy, her mouth open in a shocked smile, her eyes flowing unabated.\n\n\"Rita and I must finish a period of legal separation,\" I continued. \"And when that is over, I will command you to marry me. And then, I will command you to bear me another child. However, our children will never hear you call me 'sir' or 'master.' You will only use those terms when we are alone. In this house, they will not witness suppression or inequality. They will know only love and laughter, and learn that their potential in the world is unlimited.\" I took a deep breath. \"But know this: If you now accept me as a true Master, I never intend to let you to leave. I will hold you ... in my arms and at my side ... from this day forward. You are mine ... forever; and I am yours. Do you understand that?\"\n\nShe gave an impassioned, strangled cry and I released her from my grasp. She sprang toward me, wrapping her arms around me, burying her face in the side of my neck. I tried to figure out how to ease the pressure of those new ringlets against my chest, but I gave up and just held her while her crying went on and on and then slowly, slowly, slowly subsided. Gently, I pushed her back into her chair and reached into my pocket for the diamond necklace. With as steady a hand as I could manage, I held it before her smiling, sparkling eyes.\n\nAnd then, I hypnotized the babysitter ... for the first time.\n\nThe End"
    ],
    "authorname": "blacknight99",
    "tags": [
        "hypnosis",
        "mind control",
        "male dominant",
        "submission",
        "slave"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/hypnotizing-the-babysitter-ch-03"
}