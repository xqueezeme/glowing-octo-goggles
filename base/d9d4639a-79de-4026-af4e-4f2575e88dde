{
    "title": "The Crusader Ch. 05",
    "pages": [
        " Ch. 5 Going Home \n\nBy Woodmanone copyright October/2011\n\nThe continuing adventures of Rollie Chambers.\nConstructive comments, emails, and critiques are welcome and I appreciate you taking the time to make them.\nThanks for taking the time to read and comment on my work. Please enjoy the story.\n\n<center>********************</center>\n\nRollie Chambers waved at his friend Jacob Tully as he entered the First Squad Bar and Grill that had become their regular hang out. The two friends had not seen or talked to each other for over a month. Rollie stopped at the bar got a beer, and joined Tully in his booth.\n\nAfter greeting Rollie, Tully asked, \"How's Ted doing?\"\n\nTed Crowe was another friend and owned the First Squad Bar and Grill. He had been a patrol officer with the St. Louis Police Department and pulled the pin after 30 years as a cop. He and his wife, Donna, bought the bar, renamed it and added a kitchen. A large percentage of the First Squad's clientele were cops, retired cops, or cop groupies.\n\n\"He's pretty much healed up after those two beat the hell out of him,\" Rollie answered.\n\nRiley and Shawn Dalton had assaulted Ted and demanded protection money. Rollie and Tully had been involved in their arrest. Later the men were killed by their boss and backer, Vito Rossi. Vito had betrayed his brother Frank, who was the head of the St. Louis crime family, by enlisting the help of an out of town 'boss' in a protection racket. This caused what Frank called a blood feud between the brothers. The feud was of short duration; Vito was found with a bullet hole in his forehead only two days after Frank found out about the betrayal from Rollie. \n\n\"Donna said she was glad to get him out from under foot at home,\" Rollie continued. \"Said he was driving her nuts.\"\n\nTully laughed and motioned to Tina for another round. He watched as she set the beer down.\n\n\"Here you go handsome,\" Tina said to Tully. \"When you get done talking to Rollie stop by and see me.\"\n\n\"Tina, I don't think I'm man enough to handle you,\" Tully replied with a big grin. Everyone knew that Tina was all talk; she had a steady boyfriend at home who she loved.\n\n\"Your loss Tully. You're gonna wait too long and I'll be taken one of these days.\" Tina slapped Tully on the shoulder, nudged Rollie with her hip, and went back to the service counter at the bar.\n\n\"I haven't seen you since you left the Department,\" Rollie said with a slightly accusatory tone.\n\n\"Yeah, I'm sorry about that buddy. I know it's a clich\u00e9 but I've really been busy.\" Tully looked at his friend. \"That's no excuse; I should have least called you.\"\n\n\"Okay Sarge, I know it's hard to remember things when you get old. I forgive you but you better call Jessica or she'll come looking for you.\"\n\n\"I'll call her tomorrow,\" Tully laughed.\n\nAfter taking a big drink Rollie asked, \"So what's been going on? Why did you pull the pin? I mean you fought with the Department and made them give you your job back after losing your leg in Iraq. I thought you like teaching the new officers the correct way to shoot and tactical procedures. Why quit now?\"\n\n\"Well...I've been thinking the same way you did when you quit. The Department is being run by a bunch of brass hats that couldn't find their asses with both hands and a road map. They seem to be more concerned about their careers, politics and not pissing off the special interest groups than they are doing police work.\"\n\n\"There are still a lot of good men in the Department Tully. It might take a while but things will get back to the real cops running things.\" Rollie studied the big man across from him. \"That's what you told me when I was talking about quitting.\"\n\n\"I know, and you're right. And if I was young and idealistic I'd stay and do my part to make things better. But I've seen too much and done too much to put up with the bullshit.\" Tully grinned. \"But what made up my mind was what happened about a month ago.\" He stopped to finish his beer and waved for another round.\n\nTina brought the drinks, flirted with Tully again, and went back to the bar.\n\n\"Don't leave me hanging. What happened?\"\n\n\"Seems one of the newly promoted Captains wanted to use the range after hours. That wouldn't have been too bad but he had a lady friend with him. Apparently he thought shooting a gun would act like an aphrodisiac; again not too much of a problem, other than being after hours. The main problem was they were both drunk as skunks. It was amazing that they could even walk, much less safely shoot a weapon.\" Tully paused and laughed at the memory.\n\n\"Anyway when I confronted Captain Reece and stopped him, he was a little upset. He asked if I knew that his daddy was Colonel Reece, the new assistant Commander. He said he'd have my job for embarrassing him in front of his lady.\" Tully stopped and took a big drink of his beer.\n\n\"Well...what did you say Tully?\"\n\n\"I told him if he wanted my job he could have it. Handed him my badge and my gun and walked out.\"\n\n\"Holy shit.\"\n\n\"The next day Colonel Reece called me at home and apologized for his son. Said I should take a couple of days off and come back to work. I told him I didn't work for the Department anymore. Told him that if a piss ant like his son could get a real cop in trouble, it wasn't where I wanted to be. Then I hung up on him. Went down and put in my papers and haven't looked back.\"\n\n\"So what have you been doing that's kept you so busy?\"\n\n\"I got a new job. Actually it's a new business,\" Tully said proudly.\n\n\"You didn't waste much time,\" Rollie said, glad that his friend was working. \"Who do you work for?\" \n\n\"More like working with,\" Tully replied. \"My Captain over in the sand box just got out of the Marines. Ray Jenson and I go way back; we ate some of the same jungle and served in some of the same hell holes over the years. Anyway Ray and I are going to open a tactical training facility for police, military, and civilians; sort of like the GunSite Academy out in Arizona.\"\n\n\"Like you've been doing at the police range?\"\n\n\"Similar, but we'll go into more depth than the Department training. Ray and me are both qualified instructors and we'll probably hire a couple of other old Jarheads to work with us.\" Tully smiled and finished his beer. \"Course being one of the owners, I won't have to put in a full schedule. Normally I'll work two or three days a week unless we've got something special going on.\"\n\n\"I'm glad Tully. At least now you won't be sitting around getting old and fat on me.\" Rollie laughed and punched his friend lightly on the shoulder. \"So tell me more about this academy.\"\n\nThe two friends talked for a while longer and Rollie left for home. His lady, Jessica Talbert, was waiting for him. Rollie walked into his apartment and Jessica jumped him from behind. She put her arms around his neck and her legs around his waist.\n\n\"Glad to see me, are you?\" He said with a grin.\n\n\"I thought you were someone else,\" Jessica replied laughing. \"I was going to try out my new Kung Fu moves on them.\"\n\nRollie pulled her around so they were facing and kissed her. \"I don't know what this move is called but maybe we should practice it until we get it right.\"\n\n\"Yes, let's do that.\"\n\nAbout an hour later Rollie sat up in bed. Jessica was lying next to him and he patted her on the backside. \"You want to go out to eat or fix something and stay in?\" He asked as he walked toward the bathroom.\n\nJessica sat up, stretched, and picked up one of Rollie's shirts to wear. \"I'd rather stay here and watch you walk around in the all together.\"\n\n\"We may starve to death,\" Rollie said as he watched her slip on his shirt. \"Cause I'd rather stay and watch you too.\"\n\nAfter eating a light supper, they sat close together on the large comfortable sofa and watched TV; although the next morning neither could remember what programs they had seen. Rollie was the first to wake at 2 AM. He picked Jessica up and carried back to their bedroom. Laying down he spooned up against her, pulled a blanket over them, and went back to sleep.\n\n\"We certainly didn't get much accomplished last night,\" Jessica said when the alarm woke her and Rollie at 6.\n\n\"Oh, I don't know. We sure got those Kung Fu moves down pretty good. I told you we needed to practice until we got it right.\"\n\n\"Shucks, I'm late, I've got a big meeting this morning\" Jessica exclaimed. \"Make the coffee will you while I take a shower.\"\n\n\"Shucks? Nobody says shucks anymore.\" Rollie laughed and ducked the pillow that Jessica threw at him. \"Okay, don't get violent. I'll make the coffee.\"\n\n<center>********************</center>\n\n\"How was your meeting?\" Rollie asked as she entered their apartment. \n\nJessica didn't answer immediately. After a few seconds she said, \"Let me get changed and then I'll tell you about it. Pour me a glass of wine will you?\"\n\nRollie got her a glass of white wine, took a beer, and sat at the breakfast bar. Jessica joined him wearing a pair of jeans and a small white top. She almost grabbed the wine and took a large drink.\n\n\"So what happened at the meeting? You're all tense.\"\n\n\"Rollie, I've been offered a position as the Chief of Psychiatry.\"\n\n\"Thanks great Honey. I'm proud of you. When do you start?\"\n\n\"That's just it. They want me to start in two weeks; that doesn't give me much time. I'm to spend a month or two sort of learning the ropes and then I'll take over. Assuming they're happy with my orientation period.\"\n\n\"I don't see a problem. Do you need more time to shop for new clothes?\" Rollie asked teasing her.\n\n\"Rollie,\" Jessica said in a somber voice. \"The hospital is Northwestern Memorial in Chicago.\" Jessica watched for Rollie's reaction with concern. \n\n\"Oh.\" Then after several seconds he said, \"You're right that doesn't give you much time. I mean you have to get packed, get to Chicago, and find a place to live. Can't live in a hotel for long with the prices they get in a big city like Chicago.\" He opened his mouth to continue with his rambling.\n\n\"Rollie stop. We need to talk about this.\"\n\n\"What's to talk about? You have to take the job; it's what you've wanted for a long time.\"\n\n\"But what about us?\" Jessica paused and asked, \"Couldn't you come with me. I'm sure Chicago could use another private investigator.\"\n\n\"All of my contacts and informants are here. Those are some things you can't just rebuild in another city; not for a long time anyway.\" Rollie hung his head for a moment. \"I love you Jess but my home is here; I don't want to live anywhere else.\"\n\n\"We can still see each other a lot,\" Jessica said. \"Chicago is only about a five hour drive. Even counting security at the airport you can fly there in less than an hour.\" She took Rollie's hand. \"You could come up every two or three weeks until we see how things go. Who knows, maybe they won't be happy with my work.\"\n\nRollie squeezed her hand, smiled, and nodded; but inside he was sad and a little frightened. He knew that a relationship over a long distance seldom survived. Jessica would have meetings or commitments she couldn't get out of or he would have a case that he'd have to work on. All too often something else would come up to interfere with their time together. He knew they would both do their best to keep their relationship strong and growing but he didn't hold out much hope for them in the long run.\n\n<center>********************</center>\n\nRigazzi's is busy tonight, Rollie thought as he dug into his meal. He looked up as Tony Rigazzi, the owner of the restaurant and his good friend sat down at his table.\n\n\"So how are you holding up with Jessica gone? She's been gone what, six weeks now?\" \n\n\"Yeah, six weeks yesterday.\" Rollie looked at his friend and admitted, \"I've been better Tony. I miss her so much that it hurts sometimes.\"\n\n\"Go see her you dummy. It's not like you have a 9 to 5 job or a boss to beg for time off, go see her.\"\n\n\"I have...I've been to Chicago three times over the last six weeks. A few days, mostly a few evenings, isn't the same as being together every day.\" Rollie stared at the wall across the room for a moment. \"The first time I helped her get settled in the apartment the hospital is providing for her. The second time we got to spend two nights together; she was busy with meetings and stuff during the day; same with the third time.\"\n\n\"You need to get to work and stop feeling sorry for yourself.\" \n\nRollie smiled and nodded in agreement.\n\n\"And I've got just the job for you. See that guy at the back booth?\" Tony asked and pointed with his chin.\n\nRollie looked and saw a man about 50, with graying hair and well dressed. \"Yeah. What about him?\"\n\n\"He's got a problem you might be able to help him with.\" Tony stood up. \"C'mon I'll introduce you. He'll tell you what he wants. Maybe there's work in it for you.\"\n\nRollie stood and followed Tony. Just before they reach the gray haired man Rollie asked, \"How do you know this guy Tony? He a friend of yours?\"\n\n\"No, he's one of the new guys on the city council. Comes in here with that group a couple of times a month. He heard one of your cop buddies talking about your run in with Vito and asked me if I could introduce him to you.\"\n\nAs Rollie and Tony came to the booth, the gray haired man stood to greet them.\n\n\"Mr. Dixon, this is Rollie Chambers,\" Tony said. \"Rollie, Thomas Dixon.\"\n\n\"It's nice to meet you Rollie,\" Dixon said. \"I've heard good things about you.\"\n\n\"From who Mr. Dixon?\"\n\n\"Tony here, for one. And I guess more importantly, your old boss, Pete Mallory. He said you were the finest detective he'd ever had in his squad.\"\n\n\"Pete's my friend. He may be a little prejudice.\"\n\n\"Nevertheless, I've got a job for you if you're available. Sit down and let me tell you about it.\" It was more of an order than a request.\n\nRollie made an instant decision. He didn't like being ordered around and he didn't like Dixon. There was just something about the man that didn't set right with Rollie. Out of respect for Tony, Rollie put aside his feelings and sat down with Dixon.\n\n\"Have a drink son we'll talk about what I want done,\" Dixon said.\n\n\"No thanks, I've got one,\" Rollie answered raising his glass of beer. \"What do you think I can help you with?\"\n\n\"I want you to find my wife. She ran off a couple of weeks ago.\"\n\n\"Sorry Mr. Dixon. I don't do domestic jobs.\"\n\n\"No it's nothing like that. Julie and I are getting a divorce already but she left with a file with some papers and such that I want back. She's using them as leverage for a better settlement. Said if I don't give her what she wants, she'll go public with the file.\"\n\n\"So give her what she wants.\"\n\n\"I won't; the bitch wants a million dollars cash.\" Dixon sighed, took a pull at his martini and continued. \"I don't have that kind of money and even if I did I wouldn't give it to her. But if the information in that file of papers was to be made public it would create some serious problems. Not just for me, but for some very high ranking people in this city.\" \n\n\"I suggest you meet with her and come up with a compromise. Or get some of these high ranking people to help out with the money.\"\n\nDixon shook his head. \"It's not that simple. Most of those people don't know about the file so I can't count on them for financial support. And I don't know where Julie is, even if I wanted to compromise.\" He finished his drink and motioned to the waiter for another one. \"I should say I know where she is but I can't get to her.\" \n\n\"Why can't you talk to her if you know where she is?\"\n\n\"I sent two of my men to try to talk to her. They came back beat up pretty bad and said they never even got to see her. Said some of the men in the town took exception to them asking about Julie.\"\n\n\"Where is she?\"\n\n\"Some podunk hillbilly little town full of inter bred cretins and white trash. Apparently she grew up there and still has some family around. That's who's hiding her; her family. Place called Van Buren in southeast Missouri. Ever heard of it?\"\n\nRollie nodded his head. \"It's a small town; not much more than 1000 people living there. Right on Current River so the town gets a lot of tourist trade during the summer. What was your wife's maiden name?\"\n\n\"Dillard. Her father's James Dillard and I believe he was the one that roughed up my men. \"You really do know that backwater town. Why would you know about that little wide spot in the road?\"\n\n\"I was born and raised there.\" Rollie watched Dixon sputter and try and backpedal for a few seconds. \"Don't believe I can help you Mr. Dixon.\"\n\n\"Can't or won't?\"\n\n\"Don't see how it makes much difference,\" Rollie said as he stood up. \"The end result is the same; I'm not going to work for you.\" \n\n\"Well, take my card anyway,\" Dixon asked. \"Who knows, you might change your mind.\"\n\nRollie stuck the card in his shirt pocket, waived at Tony across the room and left for home. \"Asshole,\" he said as he got to his truck.\n\nThe light was flashing on the answering machine when Rollie walked into his living room. He pushed the button and listened to the messaged.\n\n\"Hi Honey,\" Jessica's voice said. \"Please call me when you get in. I'll be looking over reports and such until about midnight. Bye, love you.\"\n\nHe looked at the kitchen clock and saw it was only 10 PM so he dialed Jessica's apartment in Chicago.\n\n\"Hello?\"\n\n\"Hi Jess, it's me. I'm flying in tomorrow, why did you need to talk tonight?\"\n\n\"Rollie, about tomorrow...\" Jessica said in a timid voice, \"Maybe you shouldn't come. I have to fly to New York for a meeting with the Board of Directors and won't be back until Sunday afternoon. If you come to Chicago we'll only see each other for a few hours before you're scheduled to go back home.\"\n\nJessica waited for Rollie's reaction, knowing he wouldn't be pleased. He had already talked about the lack of time they had together when he came to Chicago for a visit. \n\n\"Rollie, you still there,\" she asked after several seconds of silence. \"Say something.\"\n\n\"Yeah, I'm here Jess.\" \n\n\"I'm sorry but I have to go to this meeting.\" Jessica explained with a pleading tone in her voice. Then her voice took on a more upbeat note when she said, \"I'll have a four day weekend next week. How about I fly to St. Louis and spend it with you?\"\n\nThis is just what I was afraid would happen, Rollie thought. The more she gets into this new position the less time we'd have together. \n\n\"Jess, I think we should take a break,\" Rollie said.\n\n\"No Rollie, don't think like that. We can...\"\n\n\"I know this is important to you Jess and I can't blame you. But until things settle down there's too much tension and a sort of desperation when we do get to see each other. We're trying too hard to make our time together really special instead of just enjoying each other. Once you actually get the job things may be better. I love you Jess but if we're going to have a chance, we need to put things on hold until after your orientation period.\"\n\n\"Oh Rollie, please try and understand.\"\n\n\"I do Jess. I understand, I really do. But if we continue like this I'll start to resent you and that job. So let's take a break for a while.\" Rollie could hear Jessica sigh. \"Babe this doesn't mean goodbye or that we're done, it just means we need, I need, to get my head around what's going on. And what will possibly go on in the future.\"\n\n\"Maybe you're right Rollie. It has been hectic and almost overwhelming since I got here.\" Jessica hesitated and added, \"I'd like to call you at least once a week. Would that be okay?\"\n\n\"I'd like that Jess. Call me from New York if you get a chance.\" Rollie sighed himself. \"Bye Jess, talk to you soon.\" He hung up the phone, looked out the kitchen window and said, \"Well Hell.\"\n\n<center>********************</center>\n\nRollie had cancelled his flight for Wednesday morning and Jessica had called him Thursday evening. She said she would call him again on Saturday. He received a call on Friday morning from Captain Pete Mallory, his former boss and his friend, asking Rollie to meet him for lunch at The City Dinner. ",
        "The Diner was on the south east corner of Tower Grove Park and only about five or ten minutes from Rollie's apartment. It was a refurbished old time diner that had been expanded into the building next door. The fixtures were reproductions of the tables, chairs, and counter from an old time eatery from the 1940s.\n\nPete waved at Rollie to join him at the table against the back wall. The waitress came and took their lunch order as Rollie sat down. \n\n\"How you holding up with Jessica gone?\" Pete asked after greeting Rollie.\n\n\"It's a little rough right now Pete. She's really tied up in the new job and we haven't got to spend much time together.\" Rollie took a drink of his iced tea. \"We're sort of on hold for a while; at least until she gets settled in.\" Rollie paused as the waitress brought the order and refilled the ice tea glasses. \n\n\"Not that I'm not glad to see you Pete, but what's going on? You didn't call me to talk about my love life.\"\n\nPete grinned. \"I guess I trained you as a detective too well. You're right, I've got a favor to ask.\"\n\n\"Anything you need Pete.\"\n\n\"I want you to help Thomas Dixon with his problem.\"\n\nRollie stared for a moment, surprised that Pete even knew about his meeting with Dixon. \"Why? What's so important that I help Dixon?\"\n\n\"It's a long story\"\n\n\"I've got the rest of the day open Pete.\" \n\n\"Let's finish lunch and take a walk into Tower Grove Park,\" Pete suggested. \"I can tell you the story without worrying about someone overhearing us.\"\n\nAbout 30 minutes later Pete and Rollie sat a bench overlooking one of the small lakes in the park.\n\n\"I'll ask again Pete, why should I help Dixon?\"\n\nHe told you about the file that his wife ran off with right?\" Rollie nodded. \"Well some of the information in there that will hurt a good police officer.\"\n\n\"Who?\"\n\nPete hesitated. \"Major Rod Taylor. What I'm going to tell you has to stay between us Rollie, no one else can know about it.\"\n\n\"I give you my word Pete.\"\n\n\"When Taylor was a rookie cop, that was 25 years ago, he took a bribe from a small time hood and let the guy walk on a numbers running bust. After he thought about it, he admitted what he'd done to his training officer. His Sergeant told him not to do it again but to keep quiet about it. Taylor followed the advice; he didn't want to end his career before it even got started.\" \n\nPete had been looking out over the lake and now turned toward Rollie. \"Taylor's been a good cop, good for the Department. He's not one of the brass hats you talked about and he's always stood up for the rank and file cops. There is a confidential report, written by Taylor's Sergeant, in that file of Dixon's. The statue of limitations has expired for the bribe but if that report goes public it will ruin Taylor's career. All for a mistake a young cop made 25 years ago.\"\n\n\"How did you hear about that report Pete?\"\n\n\"Dixon came to me, after you turned him down, and wanted me to send a couple of my detectives after the girl.\" I explained to him my men would have no jurisdiction outside of St. Louis.\" Mallory looked up at Rollie. \"I told him I would try to get you to change your mind.\"\n\nMajor Taylor went to bat for us during the \"Campus Rapist\" case, Rollie thought. He told the brass hats and bean counters to leave us alone. Without Taylor's help I don't think we would have caught the perp. He's stood behind and supported others too.\n\n\"Okay Pete. I call Dixon and tell him I'll take the job. The guy's an ass but I admire and like Major Taylor more than I dislike Dixon. I've got to talk to Jess Saturday evening; I'll leave Sunday morning.\"\n\n\"Thanks Rollie. Let me know if I can help with anything.\"\n\nThey walked back to the diner, got in their cars and left. When Rollie got home he dug Dixon's card out of the trash and made a call.\n\n\"Mr. Dixon, Rollie Chambers. If you still want me, I'll take the job.\"\n\n\"Good, good. I'm glad.\"\n\n\"My rate is $200 a day plus expenses. If I don't do the job you don't pay, but you have to pay the expenses. If that works for you, I'll get started Sunday.\"\n\n\"That's fine Rollie. Let me say how pleased...\" Rollie hung up while Dixon was still talking.\n\n\"I may be working for you but I don't have to like you,\" Rollie said to the phone.\n\nSaturday evening Jessica called and they talked for almost two hours. Jessica had already reluctantly agreed with Rollie that until she was established in her new position they would put things on hold for a while. They would still talk every few days but there would be no more trips until things settled down.\n\n\"While you're getting a handle on your end, I've got a case to work on. I'll be out of town for a week to ten days; maybe longer,\" Rollie told her. \"Call my cell if you need me or I'll try to call you when I get a chance.\"\n\n\"Out of town? Where are you going?\"\n\n\"Van Buren. Guess you could say I'm going home.\"\n\n\"It's unusual for a small place like that to need an investigator, isn't it?\"\n\n\"I'm working for a man here in St. Louis and the trail leads to Van Buren. Shouldn't be much of a problem and at least I'll get to spend some time where I grew up. Actually I'm looking forward to seeing the old place. I don't have any family left there but two of my best friends still live there. It'll be good to see them.\"\n\n\"I won't bother you while you're working Rollie but please call me when you can.\"\n\n\"Talk to you soon Jess. Bye.\"\n\n<center>********************</center>\n\nThe sign read:  \n\nVan Buren \n     Gateway to the Ozarks\n     Established 1830 \n    Population 1026\n\nIt had taken Rollie three and a half hours to make the drive from St. Louis that Sunday morning. As he got closer to his hometown, he felt a calm come over him; in spite of the reason for him coming back. Before he actually got to the town, on a whim, he made a sharp right turn onto a graded gravel road and followed it to the top of a wooded hill. He found the turn off to an overgrown, dirt road that was just two worn spots through the grass.    \n\nRollie followed the old dirt road he remembered from his youth along the ridge line of Watercress Hill. The road stopped near the edge of a cliff that overlooked Current River and Van Buren. He got out of his truck and walked to the edge of the almost vertical bluff and sat down. He saw several groups in canoes and inner tubes floating on the clear spring fed river and there were four or five families having picnics by the water.\n\nIt was very early summer, late May actually, and the weather was warm without the stifling humid heat that would invade the Ozarks during July and August. This is the perfect time of year to visit, Rollie thought. Wish I was here just for a visit. He shook his head and continued his thought. I know I'm going to piss some people off before this is all over.\n\nRollie sat with his legs hanging over the edge of the cliff for almost an hour thinking about his life as a boy in this little town. He reminisced about the hunting, fishing, and running the river in a john boat with his friends. He thought about all the people he'd known and wondered which ones still lived in the area. \n\n\"Time to go,\" Rollie said out loud. He walked back to his truck and retraced the drive back to the main road. Just before he came to the city limits sign, he turned off into the parking area in front of Smalley's Cabins. It wasn't like the more modern motels with the rooms in a line down a long building. \n\nInstead Smalley's rented individual cabins, unattached buildings all on their own. Basically they were small houses for travelers who need more room than most motels offered or who wanted to be isolated from other people. Most of the cabins would sleep 6 to 8 people, but the room rate was the same if you had 2 people or filled up the cabin. The place had been better than 30 years old when Rollie lived in town.\n\nThere were a couple of newer, more modern motels or lodges he could have chosen but Rollie chose Smalley's because he would be more isolated and because he had fond memories of running with the Smalley boys. But in spite of how much he loved the area he wasn't there for a vacation; he had a job to do. \n\nRollie walked into the office and tapped on a bell sitting on the counter. A tall slender woman about his own age came from the living area wiping her hands on an apron.\n\n\"Can I help you?\" She asked without looking up as she untied the apron.\n\n\"You can tell me where that no good, dog stealing, Jake Smalley is,\" Rollie answered.\n\nThe woman looked up with fire in her eyes. When she saw Rollie, she grinned. \"Jake's out stealing a huntin dog somewheres I reckon.\" Then she came around the counter and hugged Rollie. \"Rollie Chambers, as I live and breathe. Ain't seen you in what, seven or eight years? How you been?\"\n\n\"Hello Stella,\" Rollie replied returning the hug. \"Closer to ten years I think.\"\n\nStella and Rollie had been in the same classes in school until Rollie's parents sold their farm and moved to St. Louis. Who knows if we hadn't moved maybe Stella and I would have gotten together, he thought. But then again probably not; we'd always been more like buddies than romantic interests. \n\n\"Jake, quit feeding your face and get out here,\" Stella yelled back into the living area behind the office.\n\n\"What's so important you gotta interrupt my lunch?\" A large man said as he came up front to the counter. He looked and saw Rollie and Stella still in a hug watching him.\n\n\"I'll be damn. Rollie Chambers. What are you doing here?\"\n\n\"Hi Jake. Good to see you. Got a cabin for a weary traveler?\"\n\nJake came around the corner, put a bear hug on Rollie and lifted him off his feet. Rollie wasn't small at 6'2 and 200 pounds but Jake Smalley's 6'6 and 300 pound frame made Rollie look like a boy. \"Hell yes. I guess we can find a corner of the barn for you. How long you want to stay?\"\n\n\"Don't know just yet. Does the Big Spring Caf\u00e9 still have that great family style supper on Sunday nights?\" Jake nodded and Rollie said, \"I'd be pleased to have you and Stella join me for supper this evening.\"\n\nLater that evening as they waited for the fried chicken dinner to be served Stella asked, \"So what brings you back home Rollie?\"\n\n\"Let's enjoy our supper and I'll tell you later.\"\n\nFor the next hour the three friends talked about the intervening years, former friends of Rollie's and who still lived in and around Van Buren. During their conversation, Rollie asked about the Dillard's among others. He didn't ask about Julie by name.\n\n\"Ya, old James Dillard is still around,\" Jake said. \"Reckon he's too ornery to die. Those two boys of his, Jimmy and Eddie, are still runnin wild around the county. Although Sheriff Steele makes em behave around town.\" \n\n\"About a month ago, his daughter Julie came back to town,\" Stella added. \"She married some guy that was older than her and moved to St. Louis. Did you ever run into her there?\" \n\nRollie shook his head, hiding his interest in Julie Dillard.\n\n\"Anyway,\" Stella continued, \"Apparently her marriage wasn't all it was supposed to be because she's getting a divorce from what I hear.\"\n\n\"Who'd she marry?\" Rollie asked. He wanted to see how much about Julie and Dixon was common knowledge in the little town.\n\n\"Thomas Dixon. He's some kind of big cheese in city government. Personally I think Dixon just wanted a trophy wife and Julie fit the bill.\" Stella paused. \"You probably don't remember her Rollie; she's five years younger than us.\" Rollie again shook his head. \"She's a pretty little thing. I bet Julie isn't more than 5'2 or 3 but she's got a woman's body and all that long natural dark red hair hangin down her back. I can see why an older man, or a young one for that matter, would be taken with her.\"\n\n\"Trouble is Julie is sort of na\u00efve and didn't fit in with Dixon's crowd,\" Jake added. \"Course that's just the talk runnin around town.\" He smiled, a little embarrassed by the look Stella gave him. \"That's what I heard at the barber shop,\" he defended himself.\n\nRollie looked at his two friends for several seconds. These two are my closest friends here, he thought. We went to school together, played together and had each other's backs for a lot of years. I don't really feel good about misleading them.\n\n\"Julie's the reason I came back,\" Rollie admitted.\n\n\"How's that?\" Jake asked a half second before Stella could.\n\n\"I've been hired by Thomas Dixon to find her.\"\n\n\"You gonna take her back?\"\n\n\"Not my job. She's got something that belongs to Dixon and he wants it back. That's what I came for.\"\n\nJake signaled the waitress for another cup of coffee then stared at Rollie. \"You might want to be careful how you contact her. A couple of fellas came to town about two weeks ago lookin for Julie. Old man Dillard and his boys didn't take kindly to them askin about her. Beat the hell out of them and run them out of town. The Sheriff was over to Winona and it was all over 'fore he got back.\"\n\n\"I hope to talk to Mr. Dillard, explain what I want, and stop any trouble before it begins,\" Rollie said with a grim smile. \"Besides he may find out that I don't run off too easy. \n\nIt was near 8 PM and the Smalley's had to get back to the motel. Their part time help needed to get home so she could do her homework for school the next day. It was a short walk from the caf\u00e9 to the motel office where Rollie said good night and went to his cabin.\n\nEarly the next morning, Rollie was having his breakfast at the Big Spring Caf\u00e9. Sheriff Steele entered and made a beeline for Rollie's table. Rollie saw him coming and stood to greet the lawman.\n\n\"Thought you'd still be an early riser,\" Steele said as he shook hands. He motioned to the waitress for coffee and sat down.\n\n\"Good to see you Mr. Steele.\" Rollie had known the man since he was twelve; from before Steele was elected Sheriff. He'd remained Mr. Steele to Rollie even after he became Sheriff.\n\nSheriff Steele and Rollie had one run in when Rollie was 16. There was three miles of Highway 60, east of Van Buren, known as Pender's Stretch. The road was well paved, very wide, and straight as an arrow. It was a favorite place for the youngsters, and some not so young, to see how fast their cars could go. \n\nOne evening Rollie had his dad's car and decided to see how fast the old Ford was. As he topped 100 MPH, he saw red lights in the rear view mirror. Rollie was young, and maybe a little foolish, but he wasn't stupid; he pulled over to the side of the road.\n\nSheriff Steele walked up to the driver's window and motioned for Rollie to get out and follow him back to his patrol car. He didn't speak; he just motioned with his hand for Rollie to sit in the police car. Rollie smiled as he looked at Steele remembering the ass chewing he'd gotten that day. \n\nSteele's final statement was, \"What are your Dad and Mom going to think about your actions? They trust you with their car so you and your friends can go to the show or whatever and you act like any other idiot.\" After several seconds he said, \"Y'all go on home now and if I ever catch you doing something stupid like this again, well, you won't like the consequences. Now git.\"\n\nSheriff Steele never told Rollie's parents about the encounter and Rollie never gave him a chance to show his displeasure again. \n\n\"Nice to see you Rollie. Sorry to hear about your folks.\" Steele took a sip of the too hot coffee. \"Why'd you come back home?\" As Rollie started to answer, Steele continued. \"And don't bother giving me a story about wanting to get in touch with your roots or whatever. You've had a lot of years to do that and this is the first time you've come back to Van Buren.\"\n\nRollie gave Steele a small grin. \"Never could put anything over on you Mr. Steele.\"\n\n\"I'd say it's got something to do with Julie Dillard. She comes back home and a couple of weeks later two men from the city follow her. Don't know for sure but I'm pretty certain Mr. Dillard beat the hell out of them and sent them home with their tails between the legs. And now coincidentally you show up.\" Steele returned Rollie's grin. \"Thing is, I don't believe in coincidences.\"\n\n\"I'm working for Julie's husband, Thomas Dixon,\" Rollie told Steele.\n\n\"You come to take her back?\"\n\n\"No sir, fact is I think she ought to stay here. But she took something with her that Dixon wants back. That's why I'm here.\"\n\nSteele finished his coffee and stood. \"Just remember Rollie, I hear you're not a lawman anymore. Don't start trouble in my town.\" He turned and left the caf\u00e9.\n\n\"Guess that's plain enough,\" Rollie said aloud after Steele walked away.\n\n<center>********************</center>\n\nBy Thursday Rollie still hadn't found Julie. He staked out her father's place but gave it up after two days. He spent another day trying to get some answers from the townsfolk. Rollie may have been born in Van Buren, but other than a few friends he was considered an outsider now.\n\nRollie pulled his truck up to the gas pumps at Red's Sinclair Station. As he pumped gas, Red Stanton came out to see him. The station had been the first gas station in Van Buren, opened by Red's father. Rollie had worked part time for the elder Stanton for the last two years he lived in the town.\n\n\"Heard you were home,\" Red greeted Rollie as he washed the windshield. Rollie just nodded. \"Heard you were lookin for Julie Dillard?\" \n\n\"Yes sir. I'm working for her about to be ex-husband.\"\n\n\"Best be careful. Dillard and his boys won't be happy that you're askin around town for her.\"\n\n\"Can't be helped, I guess. I need to talk to her and I aim to before I leave.\"\n\nRollie and Jake spent Friday afternoon fishing and playing on the river. Later they landed and tied off Jake's boat and he returned to help Stella at the motel. Rollie walked to his truck and saw that he had company. Jimmy and Eddie Dillard were leaning on the hood of the truck.\n\n\"Howdy Jimmy, Eddie,\" Rollie said, nodding at the two men. \"Good to see you after all these years.\"\n\n\"Cut the crap Chambers,\" Jimmy the older of the brothers ordered. \"We want you to stop looking for Julie. In fact we want you to leave town and go back to where you came from.\"\n\n\"Boys, I came from here. I was born and raised here just like you.\"\n\n\"You're from the city now Chambers. You don't belong here anymore,\" Eddie replied. \"Now get in your truck and head out.\"\n\n\"Remember when we were kids and running together? I didn't like taking orders then; I don't like it anymore now.\" Rollie walked to the driver's side of his truck and stopped. \"I'm going to talk to Julie before I leave so deal with it.\"\n\nThe two Dillard's came around the front of the truck at Rollie; Eddie was carrying a wooden bat. Rollie ducked behind his door. The swing missed him but did connect with the driver's window, sending glass flying all over. Rollie stood and opened the door hard into Eddie, knocking him to the ground. \n\nJimmy rushed into the fight and just as quickly backpedaled, trying to keep his feet. The short right hand from Rollie almost knocked him down too. Eddie was on his hands and knees trying to regain his feet. Rollie took two steps and kicked Eddie arms out from under him; Eddie went down and didn't move again.\n\nTurning to face the charging Jimmy, Rollie blocked a wild haymaker. He stepped inside the punch and hit Jimmy with another short right hand. This time Jimmy did go down. Dillard tried to get up but couldn't. Rollie looked at the damage to his truck and frowned. He got Jimmy into a firemen's carry and dumped him into the bed of the pickup; Eddie joined his brother very shortly.\n\nRollie drove up the hill leading from the river to town and turned east. Three miles past the city limit sign he turned onto a gravel road and followed it to the Dillard place. The patriarch of the family, James Dillard, was sitting on the porch with his foot braced on the rail leaning back in his chair. James was over 65 and his hair was gray but he still had a strong, work hardened, lean body. His face was weather beaten and tanned the color of old leather which made his blue eyes stand out.",
        "Stopping his truck in front of the house, Rollie got out and walked to the back of the truck. He lowered the tailgate and one by one drug the Dillard boys out, letting them fall to the ground. Rollie turned back toward the porch and nodded at James.\n\n\"Mr. Dillard.\"\n\n\"Rollie. What you got there?\"\n\n\"Your boys were trying to make a point.\" Rollie looked down at the two on the ground. \"Don't think they got the job done though.\"\n\n\"What point was that?\"\n\n\"They told me to stop trying to find Julie. They also ordered me to get out of town.\"\n\n\"Damn young fools,\" James said. \"You never did take orders very good, even when you was a youngin.\" The older Dillard looked Rollie in the eye. \"I never told them to run you out of town. They was suppose to find out why you wanted to find Julie.\"\n\n\"Don't follow orders too well do they? By the way Eddie owes me a $100 for a new driver's side window.\"\n\nJames walked over to Eddie and took his wallet out of his back pocket. He took all the money and handed it to Rollie. Then he walked over and took Jimmy's wallet and repeated his actions.\n\n\"Guess you'll have to be satisfied with $85,\" James said with a little smile. \"That's all they had on them.\" The smile slipped away and James asked, \"You come to take Julie back to that no account husband of hers?\"\n\n\"No sir. I just want to talk to her.\" \n\nDillard gave him a skeptical look. \"I suppose those other two Dixon sent down here just wanted to talk to her too. When I came into the general store one of them had her by the throat. That's when I taught him not to man handle a woman. Don't think they'll make that mistake again.\"\n\n\"I heard about them. But I give you my word Mr. Dillard; I only want to talk to her. You can be with her if you like. Just set the time and place.\"\n\nDillard motioned for Rollie to follow him. As he passed his two sons on the ground he nudged first Jimmy and then Eddie with his foot. \"Y'all quit laying around and go do your chores. Danged kids today are just plain lazy.\"\n\nStepping onto the porch he pointed to a chair for Rollie and sat back in his big rocking chair. \"Tell me what's goin on Rollie and I'll decide if I'll let you see Julie.\"\n\nRollie gave Dillard a hard smile. \"Not trying to challenge you Mr. Dillard but I'm going to talk to Julie before I leave; with your help or without it, I'm going to talk to her.\"\n\nDillard nodded and said, \"What for?\"\n\n\"As you probably know Julie and her husband, Thomas Dixon, are getting a divorce.\" Dillard nodded and Rollie continued. \"Dixon said Julie took a bunch of important papers, a file folder, when she left. He wants those papers back before he'll agree to the divorce.\"\n\n\"Never had use of divorce laws, me and the missus been married nigh on to 40 years. But I understand this is a no fault state so I don't see how Dixon can stop a divorce.\"\n\n\"You're right Mr. Dillard, but Dixon's got the money and the attorneys to drag it out for years. All he wants are those papers and not to have to pay Julie a million dollars.\"\n\n\"What million dollars. Julie never said nothing about no million dollars.\"\n\n\"Dixon told me that Julie said she wants a million dollars and signed divorce papers for that file.\" Rollie paused for several seconds thinking. Dillard waited on him. \"I think maybe I've been played for a fool Mr. Dillard. I think Dixon lied to me.\"\n\n\"Julie never said nothin about no money,\" Dillard repeated. \n\n\"Would you let me talk to her?\"\n\nDillard looked at Rollie. After a little while he asked, \"You carrying?\" Rollie nodded. \"Give it to me and I'll get the girl over here.\" When Rollie hesitated, Dillard added, \"I believe you're a man of your word Rollie but it's been over 15 years since I saw you. People change and I got to protect mine.\"\n\nRollie reached behind his back, pulled his Glock from its holster and handed it to Dillard. The old man laid the pistol on an end table then he surprised Rollie by taking a cell phone out of the chest pocket of his overalls. He punched a speed dial number and waited for a few seconds.\n\n\"Come to the house. Rollie's here and I think you need to talk to him,\" Dillard said. He closed the phone and returned it to his pocket. \"She'll be here in about fifteen minutes. Want a beer while we wait?\"\n\nRollie had just finished his beer and Dillard finished his second one, when Julie walked around the house and stepped onto the porch.\n\n\"Hello Rollie,\" Julie said. \"It's been a long time. Wish I could say it was good to see you but well...you know.\"\n\nJulie Dillard Dixon had grown from the gangly, freckle faced, little red headed girl into a striking woman. She still had freckles across her nose but they were scattered and gave her face a childlike innocence. This is no country bumpkin, Rollie thought as he looked into her cornflower blue eyes. She's an intelligent, resourceful woman with a very sexy body. \n\nJulie's red hair had deepened in color to a deep auburn and hung down her back to her waist. Lot of hair for it to hang down that far, Rollie noticed. I can understand why Dixon wanted her.\n\n\"Hi Julie. You're a hard one to find,\" Rollie replied. \"Apparently your husband didn't tell me the exact truth about you leaving. Why don't you tell me your side?\"\n\n\"Well...Thomas didn't want a wife he wanted a trophy he could parade in front of his friends and business associates. Every time I tried to help or discuss important things with him, he told me to do what I do best and leave the thinking to the grownups.\"\n\n\"What did he say you did best?\"\n\n\"Look beautiful.\" Julie blushed and added, \"Those are his words, not mine.\"\n\n\"This is really none of my business, but why did you marry him?\"\n\n\"Thomas is a good looking, rich man and he can be very charming. I guess you could say he swept me off my feet. Anyway after a little over a year I told Thomas that if we weren't going to be a real married couple I wanted a divorce and wanted to go back home.\" Julie held up her finger for Rollie to wait and went into the house. She returned with three beers and handed a bottle to her father and Rollie.\n\nJulie took a big drink of her beer. \"He told me I couldn't have a divorce because it would make him look bad in front of his friends and business associates.\" Julie snorted. \"See what kind of a marriage we had?\" She paused for a few seconds. \"I told him it was a no fault state and I didn't need his permission but he said he'd tie me up in court for years.\"\n\nShe looked down for a moment and then looked at her father, \"He said he'd make things hard for my family.\" Rollie looked surprised and Julie added, \"Mama got sick two years ago and Daddy had to take out a mortgage on the farm to pay the doctor bills. Thomas said he would get the bank to foreclose and take the farm away.\" Julie stood and walked to the porch rail. \"That's when I took that file and ran home.\"\n\n\"That's when you told him you wanted a million dollars and a divorce for the file,\" Rollie stated.\n\n\"I never asked for any money,\" Julie replied angrily. \"All I wanted was out.\"\n\nRollie studied Julie for a little. He could see by her eyes that she was telling the truth. He sighed. \"I've been mislead Julie.\"\n\nAgain Julie held up her hand for Rollie to wait and went back into the house. She returned with a laptop, turned it on and set it in front of Rollie. \"Thomas wouldn't talk to me so I sent him this email.\"\n\nRollie saw that the email said exactly what Julie had told him. It told Dixon that she had the file, \"important papers\", is what she called it and that if he didn't give her the divorce she'd give the file to a local TV station. The email didn't say anything about money or a settlement, just that she wanted a divorce.\n\nJulie watched Rollie as he read her email. She could see the exact moment that Rollie found out for sure that Dixon had lied to him. Rollie's eyes got cold and hard and opened wide, his lips pressed together in a thin line, and his ears seemed to lay back a little flatter like a big cat about to attack. Julie thought I don't think I'd like to be Thomas when Rollie gets back to St. Louis.\n\nRollie's next question surprised Julie. \"What's in the file Julie? Why is Dixon so anxious that it not become public knowledge?\"\n\n\"I don't know; I haven't read it. I only know he kept it in a special hidden safe in his home office. He'd take it out once in awhile, read something, laugh, and put it away. Thomas always had a smile on his face when he walked out of his office after looking at the file.\"\n\nRollie smiled at Julie. \"How'd you get hold of it if he kept it locked away?\"\n\n\"I'm not the na\u00efve little country girl that Thomas thinks I am,\" Julie replied returning Rollie's smile. \"I was poking around in his office one day when I heard him unlocking the door. Thomas had told me never to go into his office for any reason, so I hid. The window curtains are heavy cloth and run floor to ceiling so I slid in behind them.\"\n\nJulie grinned and then laughed. \"The safe has a digital keypad for the combination and I saw the sequence as Thomas punched it in. I waited until he returned the file, locked the safe, and left the office. It was easy to open the safe; that was the night I left.\"\n\nDillard snorted with laughter and Rollie chuckled. Julie went into the house and returned with three more beers.\n\n\"You have the file with you?\" Rollie asked. \n\nJulie shook her head. \"It's someplace safe. Figured if Thomas or some of his men found me I could bargain my way out of trouble.\"\n\n\"I'll have to have the file Julie.\" \n\n\"Can't do that Rollie. If I give up the file Thomas will never give me a divorce.\"\n\n\"You've already left Dixon. Why do you have to have a divorce? Just go on with your life.\"\n\nJulie blushed, smiled and asked, \"You remember Jack Barnes?\" Rollie nodded. \"He and I used to date before I moved to St. Louis. Jack asked me to marry him but I just had to go to the big city.\" She took a long drink from her bottle. \"Since I came home, Jack and I have been seeing each other. I want to correct the mistake I made back then. Jack and I want to get married and raise a family. I can't legally do that unless I get a divorce.\"\n\nRollie thought for a little while. \"Do you trust me Julie?\"\n\nJulie looked into Rollie's eyes and then looked at her father. She turned back to Rollie and nodded.\n\n\"Give me the file. I'll take it back to Dixon and get him off your back.\" He held up his hand to stop her response. \"I'll also make sure he signs the divorce petition before he gets anything.\"\n\nIt seemed like a couple of minutes but it was only seconds before Julie nodded. \"Meet me out at the north end of Cavander Bay tomorrow morning at 8. I hid the file in that old cave that we used to play in.\" Julie looked hard at Rollie. \"I hope you can get me clear of this Rollie.\"\n\n\"I give you my word Julie. By this time Monday afternoon the divorce petition will be filed and all you'll have to do is wait for it to be final.\"\n\n<center>********************</center>\n\nCavander Bay was actually an offshoot of Current River. The river made a sweeping turn against a rock bluff and sometime in the distant past a channel was cut or opened through the bluff. A small part of the river continued along the bluff while the main body of water continued on its way south.\n\nThe \"Bay\" was a body of water about one hundred feet long and forty wide. It was up against a high bluff with natural springs flowing into the water from under the cliff. It was a great place to fish if you could put up with the cottonmouth water moccasins that were the only poisonous water snakes in America. For some reason they found the place to be irresistible; possibly because of some chemical element from the springs or the slow water compared to the river. \n\nRollie stopped his truck at the end of the old grass covered road near the north end of the \"Bay\". He started up the faint path that led to the cave that Julie had mentioned. There was no one waiting for him. \n\nHave I been played, Rollie thought? Did Julie and Mr. Dillard promise to meet me here so that Julie could run away? Rollie's questions were soon answered. Julie and Mr. Dillard looked out from behind some large boulders at the base of the cliff.\n\n\"Wanted to make sure you were by yourself,\" Dillard explained. \"I know,\" he said holding up his hand. \"You gave us your word, but like I said before people change over the years.\"\n\n\"I haven't Mr. Dillard. I'm still the same guy that admitted to driving his ATV through your crops.\" \n\nThe men smiled at the memory. Rollie had been racing his ATV against his friends on a dirt road that led around one of Dillard's fields. Trying to make up time, Rollie cut across the corner of a field. Later as the young men rode back at a slower speed, Rollie saw the damage he had done to the crops in the field. He could see the wide path of destruction that his ATV caused. That afternoon Rollie went to Dillard's house and admitted what he'd done. He worked for Mr. Dillard for a month during harvest time to pay for the damage.\n\nJulie came out of the cave toward Rollie holding a thick manila file folder held together with two large rubber bands. Just as she handed the folder to Rollie, a voice yelled to them.\n\n\"We'll take that file Chambers.\"\n\nRollie turned and saw a two men walking toward them. They were dressed much too nicely to be from the country. The smaller of the two stumbled on a tree root and swore. One on one or even one on two, Rollie was sure he could take them. The large revolvers that the men held made it an uneven fight.\n\n\"I told Dixon I'd get the folder. No need for you two to get involved,\" Rollie said. As he talked he put his hand behind him and motioned Julie and her father away.\n\n\"That's fine Chambers, but we don't work for Dixon. Our employer's name is in that folder and he doesn't want to take the chance on Dixon's good nature. Now hand me the folder.\"\n\nJulie broke for the cave and the man turned and aimed his pistol. Before he could shoot, the loud report of a rifle shot echoed from the bluff. The gunman crumpled and fell to the ground. The second man turned his pistol toward Rollie but never completed the turn. Rollie drew his .45 but from over his shoulder he heard the sharp sound that a .357 makes. The man quickly joined his companion on the ground.\n\nRollie turned and saw Dillard with a smoking pistol in his hand. Stepping out from a big oak tree, Jimmy held a .308 Winchester deer rifle. Eddie stood beside him with a double barrel shotgun. Dillard gave Rollie a grim smile.\n\n\"Damn reloads make a lot more smoke than factory loads,\" Dillard said. \"Reckon I'm gonna have to change the power I use.\" He looked up at Rollie. \"Wasn't that I didn't trust you Rollie, but you never know what'll happen up here with all these snakes.\" He pointed at two cottonmouths swimming across the water and then at the two men on the ground.\n\n\"Guess we ought to get Sheriff Steel out here,\" Dillard said. \"Don't want these two contaminating the countryside.\"\n\nRollie and the Dillard's had spent most of Saturday talking to and being questioned by Sheriff Steele. \"Hell of a mess Rollie,\" Steele said. \"Why didn't you come to me if you thought there would be trouble?\"\n\n\"Thought I might have a little trouble with Mr. Dillard but we talked things over and he agreed to let me see Julie.\" Rollie shook his head. \"I didn't plan on outsiders getting involved Mr. Steele. Would have come to you if I'd know those two were in town.\"\n\nAs he left the Sheriff's office Rollie talked to Julie. \"I'll have the divorce papers filed on Monday and they'll send you copies at your dad's place.\"\n\n\"Thank you Rollie,\" Julie said and hugged him.\n\n\"I expect you'll be more than a trophy wife for Jack.\"\n\n\"Maybe we'll name our first son after you,\" Julie teased.\n\nRollie waved goodbye and went back to Smalley's cabins. That evening Jake, Stella, and Rollie had supper together; again at the Big Spring Caf\u00e9.\n\n\"We could have gone to the steak house over to the Lodge at Kelly's Landing,\" Jake said.\n\n\"Could have, but I wanted another good home cooked meal,\" Rollie explained. \"I can go to a steak house just about anywhere but home cooking like this is something special.\"\n\n\"So you coming back to stay Rollie?\" Stella asked. \"Be nice for the old crew to be together again.\"\n\n\"It surely would girl.\" Rollie sat for a moment looking out the big picture window that overlooked Current River. \"I've enjoyed this trip even considering the reason I came. And I intend to spend more time here, but I live in St. Louis now. I'm going home.\"\n\n<center>********************</center>\n\nLate Sunday morning Rollie parked his truck in front of Thomas Dixon's house. He was admitted to the home and led to the living room where Dixon joined him very shortly.\n\n\"I see you got the file,\" Dixon said pointing to the folder in Rollie's hand. \"Let's have it.\"\n\n\"Couple of things need to be settled first Mr. Dixon.\" Rollie held onto the folder. \"First I need to be paid. Eight days makes it $1600, add in my expenses and $2000 should handle it.\"\n\nIt was evident that Dixon didn't like to be dunned for money. He frowned at Rollie but walked over to a small desk in the corner of the room. Dixon took a checkbook from the center draw, wrote a check for $2000, and handed it to Rollie.\n\n\"You said a couple of things,\" Dixon said. \"What's the other thing you want?\"\n\nRollie reached into his jacket pocket and took out the divorce petition. \"You need to sign this and let Julie go. We won't talk about you lying to me about her demanding money from you. She doesn't want anything but out. Sign the papers Mr. Dixon. I'll witness it so it will be all legal and binding.\"\n\nDixon's anger showed in his red face but he took the papers, signed them, and thrust them back at Rollie. \n\n\"Now give me the folder and get out,\" Dixon ordered.\n\nRollie tossed the folder to Dixon and turned to leave. He'd almost made it to the front door when he heard Dixon yell and come rushing through the entryway.\n\n\"There's a report missing from the folder Chambers. Where is it?\"\n\n\"I pulled the unauthorized investigation of Major Taylor. It's in a dumpster somewhere around Fredericktown.\"\n\nDixon stared at Rollie for several seconds and then smiled. \"I've got a copy of that report. I'll just put in back into the file.\" He turned to walk back into the living room.\n\n\"Speaking of copies Mr. Dixon, I made a copy of every piece of paper in that folder. If that report on Major Taylor is released, I'll see that all the other information is brought to light too,\" Rollie told him. \n\nHe walked to the door and turned. \"I don't think the people in that folder would be too happy with you if all that stuff came out in a newspaper article. Two men have already died trying to get that folder. Think before you get yourself in a hole,\" Rollie said with a threat in his voice.\n\nRollie stopped at Uncle Bill's Pancake House for a late breakfast. As he waited for his order he picked up his cell phone and made a call.\n\n\"Captain Mallory, please. Tell him it's Rollie Chambers.\" A few seconds later he said, \"Pete, that report you were worried about.\"\n\n\"Yeah?\"\n\n\"It doesn't exist anymore. Talk to you in a few days.\" Rollie closed his cell as his breakfast was brought to his table.\n\nSure glad to see home, Rollie thought as he parked his truck in his driveway. He was surprised and a little alarmed to find that his front door was unlocked. Rollie put his suitcase down, pulled his pistol, and slowly and quietly advanced to his living room.\n\n\"I wondered when you'd get back,\" Jessica said. She was sitting at the breakfast bar with a sandwich and a glass of ice tea in front of her.\n\nRollie was shocked to see her. The last time they'd talked Rollie figured it would be at least a month before they would see each other. He hadn't been looking forward to that meeting because he felt it would be the end of their relationship.",
        "\"If I knew you were here I would have been home sooner.\" Rollie stepped to Jessica, pulled her off the barstool and hugged her. He just held her, not speaking for a long time. Finally he stepped back and asked, \"What are you doing here Jess? I thought you were all tied up with the new job.\"\n\n\"There is no new job. I quit.\"\n\n\"Why? I thought that was your dream job.\"\n\n\"I thought so too,\" Jessica said with a sigh. \n\nShe pulled Rollie over to the large comfortable sofa and pushed him down onto it. Once he was situated, Jessica sat on his lap.\n\n\"They wanted me as an administrator and fundraiser. I wouldn't have time to teach or even take care of patients. That wasn't what I moved to Chicago for.\" Jessica leaned toward Rollie and kissed him. \"But I was going to quit anyway.\"\n\n\"You were? Why?\"\n\n\"Even if I could have taught, done research, and seen patients there was one thing the job didn't have that I want and need.\" Jessica gave Rollie a big grin.\n\n\"What?\" Rollie asked.\n\n\"Someone to rub my tired feet at night. Someone to take me to Rigazzi's a couple of times a month.\" Jessica's smile faded and she got serious. \"Someone to love me and let me love them.\"\n\nRollie pulled her to him and kissed her. After a minute or two he pulled back. \"What did you tell them when you quit?\"\n\n\"I told them I was going home.\"\n\nThe End---For Now."
    ],
    "authorname": "woodmanone",
    "tags": [
        "drama",
        "action/adventure"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-crusader-ch-05"
}