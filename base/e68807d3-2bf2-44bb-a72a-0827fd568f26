{
    "title": "Summer on the PCT",
    "pages": [
        " If you are looking for a story with lengthy and detailed scenes of sexual activity, this isn't for you. While it does feature some sex, most of this tale is the story of how two people came together in rather unusual circumstances. Votes and comments are always appreciated.  \n\n-----\n\nSeeing the videos and reading about the fires in California, Oregon and Washington this summer reminded me of the summer of '06 when I spent time backpacking in all three states. As I remembered my time there, I wondered how things have changed in the last decade and a half....\n\nThe PCT. The Pacific Crest Trail. A trail of over 2600 miles winds from the Mexico/California border to the Washington/Canada border. In southern California it crosses a desert before climbing into the Sierra Nevada Mountains, then on north into the Cascade Mountains and finally up to Canada.\n\nEver since I was a teenager, I had wanted to 'do the PCT.' A moderate number of people called 'Through Hikers' would do the entire distance in one summer, starting in May and finishing four to six months later. In 2005, when I was thirty, I realized if I didn't do the hike soon, I never would. I was still healthy, loved backpacking and had a job as an emergency room doctor which I could leave for an extended period of time. It was in October of that year when I first brought this subject up to Vickie, my live-in girlfriend. \n\nShe and I had been together for a couple of years. We had a comfortable relationship and enjoyed each other's company, even though we had very different hobbies and professions. She was not at all interested in the outdoors except for an occasional picnic or a short stroll in an urban park. However, she was perfectly fine with me going on extended trips while admitting she would spend the time getting together or traveling to spas with her girlfriends. She was an art historian and loved museums, indeed she worked in the biggest one in the state as a curator and historian.\n\nOnce we discussed it and she realized I was seriously planning on being gone for five months or so, she became a tiny bit more distant from me. There was nothing major, just a slight cooling of her emotions. After a few weeks we had a heart-to-heart talk about it. She said she was hurt that I would be gone for so long for what was basically an extended vacation. After our first glass of wine the talk became quite personal and deep. We discussed long term goals including marriage and children. Neither of us were ready for those, but once we put this on the table, she wondered out loud if this could actually give us an opportunity to assess our relationship. She suggested at the end of the trip if we were still committed, then we could more easily move our relationship to a more permanent status. I agreed with this and also proposed she might want to use the time to take a long-desired trip to Europe. Given her art history background, she had always wanted to do a major museum tour, something I could never see myself doing. Suddenly she was all excited and talked about getting funding for the trip from her work to make professional contacts while in Europe.\n\nBy the end of the evening and after considerable wine, we had basically agreed to spend a large part of the next year apart pursuing our dreams and reassessing things in the fall. That night we made sweet, tender love and our relationship seemed to be back on track again.\n\nPlanning for a four to six-month long hiking trip is quite a bit of work. There are several steps in the overall process. Like in so many other things, timing is key. If one starts too soon, the snows in the California Sierras will be too deep and progress will be slow. If one waits too long, then the fall snows in the Washington Cascades will prevent the completion of the trip. The start date usually is kept fluid until reports of the snowpack in the Sierras come in. Once a date is selected, one needs to mail packages of food and supplies to many little stores or post offices that are near the trail. When well planned, a hiker can get enough food to last until the next resupply stop. I would also send warm weather clothes to a location after the hot desert stretch and a fresh pair of boots to a spot near the middle of the trek. \n\nObviously, weight is a major issue. To carry a heavy pack can be brutal and slows one down considerably. There are a lot of tricks to limit the weight and some people are able to get their pack weight down to less than twenty pounds before the food and water are added. I did a lot of research into ultralight backpacking, purchased new equipment and planned my meals and meal drop-offs as the winter turned into spring.\n\nBy late April both Vickie and I were getting excited about our planned trips. She had received a grant from her job to build up some partnerships with several European museums so they could loan each other art works on a rotating basis. She was delighted to be able to go behind the scenes at some of the biggest museums in the world, including The Louvre.\n\nI was also excited to be in the final phase of my planning. Our second bedroom was filled with little piles of food I needed to sort, pack and ship right before I left. The snow pack in the Sierras was not particularly heavy which meant I would be able to leave fairly early, allowing me more time to finish the trip before the snows hit in Washington. I gave notice at work and told Vickie my start date would be May the sixth. She would stay at our place for another few weeks before heading over to Europe. We planned on vacating the apartment and moving all our things into storage.\n\nThe weekend before my departure was a little bittersweet. We were both excited for ourselves but I sensed a slight sense of sadness about our relationship and whether it would survive the half year or so of us being apart and being essentially out of communication. Due to weight restrictions, I decided not to bring a cell phone but I promised her that at my occasional side trips to pick up my food, I would make every attempt to figure out a way to get a message to her. I also gave her a rough schedule and she promised to send post cards to the same addresses as my food shipments, but we both knew any news from her could be older than four weeks by the time I got them.\n\nShe drove me to an airport hotel where we were going to spend the night before my morning flight. We had a nice dinner and a couple of glasses of wine. She tried to put on a happy face but at times she appeared wistful and sad. After dessert we strolled hand in hand back to the room where Vickie and I sat quietly together on the couch. Eventually, she turned and crawled onto my lap and began to kiss me. The kisses were tender and sweet, tinged with a bit of passion, and her caresses were urgent and clinging. I opened my eyes and saw she had tears sliding down her face, something I fully expected but still had hoped I wouldn't see. After a few minutes she pulled back and looked me right in the eye not saying anything.\n\n\"Honey, I know you're sad, and I am too, a little bit. I'm going to miss you,\" I finally said.\n\n\"Yes, but you're excited. Right?\"\n\n\"Well, yeah, of course I am. It's been a dream of mine for over half my life.\"\n\nShe didn't respond for a few seconds before she pulled herself into a hug and spoke over my shoulder, \"I'm going to miss you, you know. And I worry about how our relationship will survive.\"\n\n\"Uh, if you're looking for any kind of commitment...\"\n\n\"No! I'm not looking for a commitment, we've already discussed that. I just know five or six months apart can really strain a relationship.\"\n\n\"Well, one thing is for certain: I'll not be hanging out at any bars or looking for hookups. I'll be alone, dirty, tired and smelly for the entire trip,\" I chuckled. \"You don't need to worry about me straying.\"\n\n\"Oh, Ryan, I'm not worried about you. I'm worried about us and I'm worried about me,\" she responded. After a minute or so, she went on, \"Uh, I don't know how to bring this up, but I need to, we need to. We need to talk about...\"\n\n\"About what, Honey?\" I asked after she failed to finish her thought.\n\n\"Well, I'll come out and say it. This will be a real test of our relationship. And if we're going to test it, then we should plan on truly testing it. I think we need to agree that, if the occasion should arise, we don't have to be exclusive this summer.\"\n\nI sat there stunned. Clearly, she would have far more opportunity for sexual contact traveling around the cities of Europe than I would hiking and camping on the PCT. But I knew her pretty well by then. She had been the one early in our relationship to ask we be exclusive and she had been the one to broach the subject of living together. I had never been concerned about her being unfaithful at all. It seemed like she was offering me a hall pass but, like I said, I would be unlikely to ever be able to use it. I had even figured onesomes were going to be my sexual release for the entire time. I thought maybe she was subtly telling me she'd be the one to seek out partners and wanted to do so with a clear conscience. The more I thought about it the more I realized she had made a good suggestion. If our relationship was going to survive, it had to overcome this time apart and any sexual contacts that might occur. And, if after a summer of sex with those hot Italians or hunky Swedes she still wanted me, then I knew our relationship would be even stronger.\n\n\"Uh, sure, I guess,\" I said after a long pause. \"Just to be sure I got this right. You are saying either of us can sleep with others this summer and when we get back this fall...\"\n\n\"We don't say anything. Nothing. We'll talk about the hike, the museums, the whatevers, but nothing about our personal lives.\"\n\nWe kicked things around a bit more and I agreed to her proposal with a deep, warm kiss. Once we broke the kiss she softly giggled in my ear, \"But don't think I'm letting you get away without one final roll in the hay, Buster.\"\n\nSmiling, she leaned back and pulled her top off exposing her delicious bra-covered breasts. All right, I'll admit it. I'm a breast man. She knew how I liked them and how they excited me. They were nice and well-proportioned and, without a bra, stood proudly on her lean torso. Her fairly small areolas surrounded little nipples which stood out firmly with any stimulation. I could see them through her bra and as I started to stroke her, I could feel them bead up.\n\n\"Mmm. Nice,\" she sighed.\n\n\"I can make it nicer,\" I whispered as I reached around and unsnapped her bra. Once I slipped it from her shoulders, she arched her torso, thrusting her tempting nipples at me. I bent down and took one in my lips and began to gently lick and suck to her obvious delight. After a few minutes she leaned back and unbuttoned my shirt and pulled it off. Then when we came together her beaded nipples drew little circles on my chest as she moved around.\n\n\"Honey, this is nice, but I really want you in that bed. Now!\" I knew when to obey so I grabbed her, stood up and carried her to the bed before gently dropping her to the sheets. I undid my belt and let me pants hit the floor, leaving only my boxers, while she pulled her jeans and panties down in one big swoop. Once she scooted up in the bed, she let her legs splay apart showing me her well-groomed pussy. I could already see a faint trickle of female arousal between her lips calling out for me to taste her. Once I dropped down to her, she gently took my head and directed me to nirvana.\n\nWith tiny licks I was able to part her folds and taste her delicious nectar. She began to moan quietly particularly as I moved my tongue over her clit. The taste was divine and her scent was sweet and pungent. In no time at all she was moaning loudly, thrashing about as I attacked her clit with quick darts of my tongue and curled my finger inside her canal. With a screech she came and quickly begged me to stop.\n\n\"Too much, Honey, go easy for a few minutes. Whew. Then you'll get me.\"\n\nI lay there lightly licking her, enjoying the flavor and her murmurs of contentment. Finally, she shivered a bit and pulled me up to her. \"I want you inside me, please. And don't be shy, I need a good fucking, a really good fucking.\"\n\nI raised up and slid my cock into her. As always, she was nice and tight and well lubricated. I was able to establish a nice rhythm plunging deep and then teasing her opening as if I were going to pull completely out. I kept this up for awhile until she grabbed my flanks and pulled me to her. \"Harder, dammit, harder.\"\n\n\"Uh-uh. Gonna tease you...\"\n\n\"Oh no you're not,\" she responded and with strength I didn't know she had, she suddenly rolled me over and crawled back on top, sliding herself onto me. \"Now I'm in control,\" she said through gritted teeth. Her plunging on me became stronger and deeper until her clit was banging up against my pubic bone. She developed a light sheen of sweat as her head was bent down and she flexed her torso, driving her pelvis down again and again. I don't recall ever seeing her so driven or so dominating as she was that night. Up and down she went until her chest flushed a deep red and her face tightened into a grimace I recognized as her pre-orgasmic state. I allowed myself to catch up with her and with loud cries from her and deep groans from me we climaxed together. It was such a total body experience that I felt lightheaded, my heart was racing and my breathing came in gasps.\n\nAfter she dropped down onto me, I could feel her pulse pounding in her neck as she caught her breath. \"Am I too heavy for you?\" she asked.\n\n\"Of course not. You're like a heated blanket,\" I joked.\n\n\"Just as long as you don't call me a wet blanket,\" she responded, referring to her perspiration. A few seconds later she boosted herself up and crawled over to lie next to me. \"Whew, that was wild.\"\n\n\"Uh-huh, it was.\"\n\n\"Now, when you're on the trail and your mind starts to drift a bit, I hope it thinks about tonight. I hope it gives you enough incentive to hike faster and come home sooner.\"\n\n\"Believe me, I'll be thinking about us a lot,\" I said as I gently stroked her back. \"Say, Vickie, I want to say this. No matter what happens with us this year, I want you to know I care deeply for you. I want to thank you for being supportive of my life-long dream and I very much plan on getting together with you in the fall.\"\n\n\"That's so sweet. Thank you,\" she responded with a kiss. Soon I heard the soft, regular breathing of my sleeping girlfriend.\n\nMy flight the next morning wasn't too early so we had a chance to grab a continental breakfast in the hotel lobby. We sat there across from each other not talking very much. I know my mind was going a mile a minute and she had a somber face. She drove me over to the terminal. With all the TSA crap after 9/11, it didn't make too much sense for her to come into the terminal. She dropped me off in front of my airlines check-in area, hopped out as I got my pack and ran to me. I got a big, big hug before I whispered into her ear to take care and have fun in Europe. She didn't answer and suddenly turned away from me with a sob and ran to the car. I watched her drive out of sight before I turned into the terminal to start my adventure.\n\n-----\n\nThe little village of Campo, where the trail starts, was reached by bus from San Diego. I grabbed a room for the night and enjoyed the last night in a bed for months to come. The next morning after my last breakfast of eggs and waffles, I walked over to the five rock columns which mark the beginning of the trail. I stood there for a few seconds before a car pulled over and a middle-aged woman stuck her head out.\n\n\"You gonna hike it all?\"\n\n\"I certainly hope so.\"\n\n\"Well, good luck. How long you thinkin'?\"\n\n\"Maybe four to five months.\"\n\n\"You be careful. It's hot and dry down here. Watch for snakes.\"\n\n\"I will. Thanks,\" I replied as I shouldered the pack and took the first of God-knows-how-many steps facing me.\n\nThe first main section of the trail is indeed hot and dry. It goes over arid areas, dry mountain ridges and even a portion of the Mojave Desert before climbing up into the southern portion of the Sierra Nevada mountains. It had been a wet spring in the lowlands and word in the hiking community was that water was not a major issue, as long as one was willing to carry plenty. A gallon of water weighs eight pounds and on some sections of the trail I'd need to carry two gallons. Fortunately, I was in great shape from my training hikes and I didn't need to carry as much heavy cold weather gear which I would be picking up at one of my supply drops further along.\n\nThe days were fairly warm and I decided early on to wake up at the first hint of light and hike until midday, rest under the shade of my ground cloth strung off my pack until four pm or so and then head out again until dark. By avoiding hiking in the heat of the day, I found I didn't need as much water and could preserve my energy.\n\nAbout three days into the hike I was passed by a couple of young Germans. We chatted for a few minutes sharing bits of personal info before they took off. As they left one turned to me and said, \"Have a good hike, Erdoc.\" It was that easy to be given my trail name and for the rest of the trip various through-hikers would call me Erdoc, short for E. R. Doctor. The name was a simple two syllables combining the 'e' and the 'r' into one syllable.\n\nLate the next day I saw I was slowly closing in on a solo hiker but since I quit at nightfall, I did not meet up with them until the next morning. About fifteen minutes after I started out, I stumbled across the camp. A woman eating a cold breakfast jumped when she heard me on the trail startling both of us. I kept my distance while telling her my name and plans. It turns out she too was planning on doing the entire trail. I was impressed. Not many women do the trail and even fewer do it solo. She wasn't ready to leave so I turned to head out when she called out, \"Take care, Erdoc!\"\n\n\"Whoa. How'd you hear that? The Germans?\"\n\n\"Yeah. They called me 'Wonder Woman.' They couldn't believe a solo female was going to do the trail.\"\n\n\"Well, I'm impressed, too, Wonder Woman. See you up the trail.\"\n\nShe caught up with me that noon when I was doing my midday rest but she kept on walking. Later that day I passed her again and didn't see her until a couple more days had passed. I had planned on taking a full rest day every ten days or so, depending on the location. Some of those would be at resupply locations and some would be in the wilderness. She caught up with me on my first rest day. She looked fairly tired and asked if she could take a load off for a bit.\n\nAfter a few minutes she took off her hiking shoes, took a swig of water and we began to chat. I told her my brief bio including where I lived and worked. She laughed that she had thought my trail name was 'Urdoc' and didn't understand it, but the name 'Erdoc' made far more sense.\n\nHer name was Julie, she was about my age and came from Colorado. She was on an extended break from a small, nonprofit law firm dedicated to ecological and green issues. They had even supported her with a small grant so she could incorporate her experiences into her work.\n\nIt was around three in the afternoon when she decided to stop for the night and set up her sleeping bag some twenty feet from mine. We had dinner together and talked a bit after the sun went down, but we were both tired and hit the sack early. The next morning, she suggested I head out and she would leave a few hours later. For the next week, as we made our way north through the dry country of southern California, we would run into each other almost daily, sometimes passing one another and sometimes sharing a camp. There were several other through-hikers in the area and we'd frequently run into each other as well. On one night there were even six of us camped around a small spring where we shared stories, jokes and good times. The Germans, whose trail names were now Eins and Zwei, were part of this loose, mingling group of hikers.",
        "The last part of the southern California trail is through the western part of the Mojave Desert. This can be quite dangerous and water is a real concern. Some people will cache water jugs to be retrieved when they are hiking but it is dangerous to rely on such a system. If you think you have water waiting and someone else has taken your water, you could get yourself into real trouble. As a result, both Julie and I had previously planned on relying on the rare natural water sources along the trail.\n\nAs I approached the last camp before the desert, I saw several hikers including Julie camped out. As we ate, we kicked around how we would handle the next section of the trail. Although injuries can occur anywhere on the trail, this dry section was clearly one of the riskiest. We all decided we would go as a group, travel reasonably briskly, but not too fast, and avoid hiking in the heat of the day. We left well before sunrise and hiked in the cool desert air until it heated up to over ninety degrees. We rested a bit when it was the hottest and once it cooled off a tiny bit, we took off and hiked until after nine pm using our headlamps in the dark.\n\nWe managed to get across the driest section together and when we hit water, we all felt like we were well-seasoned trail blazers. After resting the night at the little spring, most of the group headed out but Julie indicated she wanted to wait a day before going on. I asked her if she was doing OK and she reassured me she had promised she would not kill herself out on the trail and would rather go a bit slower than to rush herself, get injured and have to bail out. I realized the wisdom of her decision and asked if it would be OK if I stayed as well. We spent most of the day huddled under a scrawny tree that was trying to survive by the tiny spring.\n\nThis time together gave us plenty of opportunity to get to know each other. I found her to have a wicked sense of humor and she could make fun of almost anything. More than once I was doubled over in laughter as she told me stories from her law school days and the practice. I too shared stories from my work, giving anonymous descriptions of some funny situations I had encountered in the ER. She was an only child of what appeared to be very reserved parents while I was one of three kids. My parents were old hippies and seemed to run a fairly loose household. I had had the full support of my family when I told them about the PCT while her parents tried to talk her out of it.\n\n\"Once they told me I shouldn't do it, well that sealed the deal. I was determined to show them I could,\" she explained to me. \"I love my folks, but they don't see much beyond their country club golf games and the martinis at the nineteenth hole.\"\n\n\"Well, my situation was a bit different. I practically had to fight my dad off from joining me. While I would have enjoyed him hiking with me, he's got a bit of arthritis and I don't see him making the full trek. We have left open the possibility of him joining me for a week or so in Oregon where the hiking is the easiest.\"\n\n\"Great. Maybe I'll meet him if you haven't gotten too far ahead of me.\"\n\n\"You never know. I kinda like your approach of taking it slow and steady. We'll probably bump into each other a lot, don't you think?\"\n\n\"Yeah, maybe. Uh, Ryan, how about tomorrow. Want to hike together a bit?\"\n\nI was certainly game for that and at four am we headed out as we wanted to get the last of the dry section behind us. For the next week as we headed slowly north, we hiked together. Usually we slept out in the open with our bags ten to twenty feet apart. We adopted the old \"skirts up and pants down\" program for bathroom duties: women go uphill and men go downhill. Hiking and camping together certainly breeds a bit of familiarity but I was always brought up to honor a woman's modesty. I always averted my eyes when she went to change clothes, not that she or I had many extras, or when she did her spit baths.\n\nThat isn't to say I was unaware of her good looks. Her face was attractive and her smile was dimpled. She sported shoulder blade-length blonde hair which was frequently tied up off her neck with a big clip-like device. She was fairly lithe (she had to be, hiking like she was) but still sported a nice pair of breasts, from what I could see. Her legs were lean and muscular. The nicest thing of all was her cute, shorts-wrapped ass I followed and stared at for hours as we hiked along.\n\nEventually we crossed Highway 58, a marker for the end of the southern desert portion of the trail. At the highway we both had supplies waiting for us and for one night we actually had a nice meal at greasy spoon, a few miles from the trail. When you are eating nothing but trail food and freeze-dried meals, anything else is a luxury, even at a greasy spoon. I took the opportunity to call my brother and asked him to tell my folks I was doing OK and to send a message to Vickie.\n\nAs we started the climb into the mountains several things became clearer. The temperature was lower and water was no longer a major issue. We frequently came upon small creeks or springs and were able to replenish easily. The downside was that the trail overall was becoming steeper in parts and more energy was needed to keep up our pace. \n\nIt was on the third day into the mountains that we came upon a small lake just off the trail. Much to our surprise Eins and Zwei were in the water swimming and splashing. When they saw us, Eins (or was it Zwei?) yelled out to us, \"It's w\u00fcndersch\u00f6n. Come in!\"\n\nAfter weeks in the desert and smelling like a pig, I knew I wanted to go swimming. I peeled off my pack and as I walked to the lakeshore Eins got out of the water on the far side of the lake and hopped up onto a granite slab. He was absolutely naked, yet it seemed totally natural and expected. I quickly stripped off my clothes and went running to the water and did a shallow dive. The water was so cold that I came up sputtering and yelling.\n\n\"Whoo-wee, damn that's cold!\" I screamed. \n\n\"Ja, but you get used to it,\" one of the Germans yelled at me.\n\n\"I sure hope so. Hey, Julie, come on in,\" I shouted to her. She looked a bit embarrassed so I added, \"We won't look, I promise.\" I turned around and dog paddled out to the middle of the lake before I heard a big splash behind me and her subsequent scream.\n\nI turned around to see her treading water, facing me and laughing. \"You guys are cruel. This water could freeze the tits off a witch!\"\n\n\"Maybe, but it's the first bath we've had in weeks. I love it!\"\n\nWe swam around a bit and though we never totally got used to the cold, it became a bit more tolerable after a few minutes. At one point, Zwei called out he had some biodegradable soap so we could actually try to clean ourselves. I swam over to their sunbathing rock and was handed the small bottle. Standing in shallow water I quickly washed my face, pits and crotch and then dunked under the water to rinse off. I turned around to Julie and offered her the bottle. She swam up to me, took the bottle and quietly requested that we guys turn away while she washed herself.\n\nAfter a few minutes she thanked Zwei and gave him the bottle before turning to swim back across the lake. I waited with the Germans until she reached the other side and, I admit, I peeked as she left the water to go to her pack. Due to our time hiking together, I had a generally good idea as to how she looked, but to see her totally nude backside as she left the water was a sight for sore eyes. She was absolutely stunning. I turned back away and let her have some time to get dressed and then I swam back over to my pack. I noticed as I got out of the water that she looked away as well. I put on my cleanest dirty shorts and crawled out onto another slab of concrete to dry off. She joined me there as we snacked on our trail mix.\n\n\"Feels nice to get a little bit clean, doesn't it?\" I asked.\n\n\"Oh, definitely,\" she answered. Then she went on, \"And thanks for looking away. I'm a tiny bit shy when it comes to things like this.\"\n\n\"Oh, no problem, but if you must know, I have to confess that I peeked a tiny bit.\"\n\n\"You rat,\" she laughed as she playfully slapped me. \"When?\"\n\n\"Just as you were getting out of the water. The vision is now burned into my brain.\"\n\n\"Well, that's where it's gonna stay,\" she laughed some more. \"Anyway, I saw you when you stripped before you jumped in, so I guess we're even.\"\n\n\"Hey, it's kinda early to knock off hiking, but I'm perfectly willing to stay here for the night. What about you?\"\n\n\"Oh, I wanted to get in another few miles, but you're right: this is just too nice to rush away from.\"\n\nWe began to set up camp when the Germans decided to head up the trail a bit more. A relaxing afternoon after the long hikes was a luxury. I dozed off for a while and when I woke up Julie was walking through a meadow looking at wild flowers. As evening came, we ate and then snuggled halfway in our bags while we watched the sun set and the stars come out. We both saw a couple of shooting stars before we decided to turn in. As I snuggled down into my bag, I realized she was wiggling her way in her bag over next to me.\n\n\"This has been the best day so far,\" she whispered.\n\n\"Yeah, nice. Good hike, wonderful swim with beautiful scenery,\" I joked, \"And really good company.\"\n\n\"I like the company,\" she whispered as she leaned over me and gave me a sweet, brief but sensual kiss. \"Good night, Ryan.\"\n\nI was surprised but was able to respond, \"Yeah, night, Julie. Sweet dreams.\"\n\nIn no time I heard her breathing regularly but I had trouble falling asleep. The kiss had been totally unexpected but it told me she had some feelings for me. Up to that point I had considered her a good hiking companion, one who was nice to look at, but I had no plans to make a move on her. Now suddenly I was wondering whether the kiss was a promise of something more or just a 'thank you' kiss for being with her.\n\nThe next morning dawned brisk and bright. We got up, had a breakfast and packed all without any comment about the kiss the night before. I kept looking at her trying to figure out what was going on but it was as if had never happened. We made our way ever higher into the mountains over the next few days and the kiss was never repeated nor discussed. Finally, I decided it was a one-off and tried to forget about it. \n\nAbout two weeks later we, or that is I, had a near-catastrophe. The snows had been melting quite a bit but at the higher elevations we had to cross several snowfields perched on hillsides. At one of them the trail was hidden and there were several small boot tracks across the snow, but no deep, reliable trough. I volunteered to walk ahead of Julie and went to stomp the snow down, making it easier and safer for her to follow me. I was about half way across when my downhill boot plunged through the soft snow, throwing me off balance. In an instant I found myself sliding headfirst down the slope. I didn't have an ice-ax to stop the slide so I stuck out one hand and dug it into the snow. This caused me to spin around so I was sliding feet first. I frantically started to dig my boots and elbows into the snow and eventually slowed myself to a stop about twenty feet from the rocks below.\n\nAbove the sound of my pounding heart I heard Julie screaming my name and yelling she was coming down to me. I turned and yelled back up to her that I was fine and she should stay where she was. There was no sense her risking a fall as well. After a minute or so I struggled up to standing and began the long trek back up the snow field. I angled my route so I could reach good-old dirt quickly and work my way up to the trail while Julie carefully finished walking across the snow.\n\nOnce we met at the trail, she launched herself into my arms sobbing with relief. \"Ryan, oh God, I thought you were going to hit the rocks!\"\n\n\"Yeah, you and me both,\" I stuttered. \"Let's sit down for a few minutes, OK?\"\n\nWe sat there for at least thirty minutes until her crying eased off and my jangled nerves settled down. Eventually she released her hold on me and we decided to have a snack before heading up the trail. For the rest of the day I was in a daze and my mind kept going back to those few seconds when I was sure I'd hit the rocks and probably die. Every once in a while, Julie would turn back to me as if to make sure I was still there.\n\nCamp that night was subdued. I think we both realized how close I had come to tragedy and how precarious things can get out on the trail. Before we crawled into our bags, she sat next to me and reached around to hold me.\n\n\"Don't you ever, ever do that again,\" she whispered in my ear.\n\n\"OK, I've crossed it off my bucket list.\"\n\n\"No, dammit, Ryan, don't make a joke about it. I was sure you were dead. And though I wouldn't want to see anything like that ever, I really don't want to see anything happen to you.\" She paused a few seconds before adding, \"You're getting to be kinda special....\"\n\n\"Yeah, you too,\" I answered as I felt her tugging my face to hers. I looked down as she raised her lips to mine. After a gentle peck she backed off a second and then came back for more. We sat there with our lips exploring and our arms wrapped around each other. After a bit I looked down and in the fading twilight I could see her with a sweet little smile on her lips.\n\n\"Thank you,\" she whispered. \"Nice.\"\n\n\"Yeah, nice. And I'm sorry I made a joke about it. I don't think I've ever been so close to, uh, death as I was today. I'm still feeling dazed.\"\n\n\"Here,\" she replied. Pull your bag next to mine. I want your arms around me when I fall asleep.\"\n\nFortunately, it wasn't too cold and I was able to keep my arms around her as she drifted off to sleep. At some point later in the evening I too drifted off.\n\nI was wakened by Julie stirring next to me as she got up to go pee. Once she came back and slipped back into her bag, she wrapped her arms around me and dropped for a kiss. It was a sweet and tender meeting of our lips that led slowly to a deeper, more erotic kiss. After a bit she broke away and said, \"Morning, Sleepyhead. Sleep OK?\"\n\n\"Umm-hmm. I did. Nice way to wake up, too.\"\n\n\"Glad you liked it.\" She paused a bit before going on, \"We've got a long day today, so we should get going. OK?\"\n\nI agreed and the spell was broken as we got up, grabbed a bite to eat and broke camp. The day was a long one as we tried to make up for the shortened day of my fall. It was quite late when we set up camp and prepared our freeze-dried meals. The weather was threatening so we each pitched our tents. It rained lightly during the night but we stayed dry without trouble. I have to admit I missed sleeping close to her. A larger tent for both of us sure would have been nice.\n\nAfter a few more days on the trail we came to another resupply stop. This was at a \"trail angel\" camp. Trail angels are people who live near the trail and hold shipped packages for the through hikers. There are frequently showers available and at this stop there was even a tiny store with all kinds of items for sale. We each picked up our packages and we decided to buy some canned stew, whole wheat bread and canned peaches for dinner. I know, I know, it doesn't sound very good, but for us it was a feast. After dinner I went over to the outdoor showers and stripped down and got thoroughly cleaned for the first time in weeks. It felt so good to be well fed and clean. In the shower I also quickly washed and rinsed two of my shirts and a pair of shorts.\n\nAs I got out of the shower Julie was coming back from the store. She told me she was window shopping and dreaming about eating another decent meal at the next trail angel camp. She went ahead and hopped into the shower and reemerged looking absolutely beautiful. Her hair, which like mine had gotten quite grimy, was full and shiny. She had put on a clean T-shirt which was in her package and I noticed immediately the absence of a bra.\n\n\"Uh, you look fabulous. Doesn't it feel great to get clean?\"\n\n\"Oh, you know it does. Look, Ryan, seriously, I want to ask you a question. We've been hiking together for quite some time and I want to know if we'll keep doing it. If so, maybe we can share some equipment and lighten our loads, maybe even get something special for the trail.\"\n\n\"Like what?\"\n\n\"Maybe a tiny can of fruit cocktail. Or how about a small plastic bottle of rum? We can add a bit to our lemonade mix or even to our hot chocolate.\"\n\n\"So, if you're asking me if we can ditch the smaller tent and one stove and take some rum and goodies with us? Absolutely. I'm all in.\"\n\n\"Oh, good. Somehow I was nervous you'd think I was being too clingy and slowing you down too much.\"\n\n\"No way. I like our pace. We should do just fine and finish in late-September or early-October and there's no reason we shouldn't treat ourselves to something nice now and then.\"\n\n\"Oh, Ryan, thank you,\" she said as she came up to me and wrapped her arms around me. \"I do like you a lot and being with you on this trip has been extra nice.\" I could feel her nipples poking me through my thin shirt.\n\n\"Yeah, sure,\" I mumbled. \"We're a team now. Erdoc and Wonder Woman.\"\n\n\"No one will think I'm Wonder Woman if I'm not doing the hike alone.\"\n\n\"Hell, I do. There just aren't that many women out here and you, you're doing great. Here, let's clean up and hit the sack. It'll be ten days before our next trail angel stop, so we need to get up early and hit the trail.\"\n\nThat night we slept out in the open as did most of the other hikers who had stopped there for the night. Our 'good-nights' were sweet, tender kisses and hugs. We got up early, ate a bit and hit the trail, leaving the rest of the sleeping hikers behind us.\n\nSeveral days later we found ourselves hiking along a high ridge in the streaming sunshine. It was getting quite warm and I was sweating more than usual. I wanted to cool off so I stopped and took off my shirt before putting my pack back on. It was some bit later when Julie turned around and saw me.\n\n\"No fair. You get to cool off and I don't.\"\n\n\"Look, Julie, if you want to slip off your T, or even more, I promise I won't stare. There's no one else around here.\"\n\n\"K, I think I will. You won't stare, promise?\"\n\n\"I promise. You stay ahead of me and it shouldn't be an issue.\"\n\nI turned around until I heard her announce it was all clear and then started to follow her up the trail. Then I saw it: Tied to the top of her pack was her shirt and sports bra. She was hiking topless right in front of me! My mind started to run wild. I kept hoping someone would come from the opposite direction and she'd be forced to turn back to me. But for the next hour no one came and my dreams of a cheap thrill were dashed. At the next rest stop she kept facing away from me as she drank her water and ate her trail food. \n\nI was half dozing when I heard her say, \"Ryan, keep your eyes closed. Promise?\"\n\n\"Uh, sure,\" I answered as I closed them. I heard her moving about and then I felt her breasts on my lower chest as she reached around and hugged me.\n\n\"Wha...?\"\n\n\"Oh, I know it must have been torturing you to follow me, knowing I was topless. And you've been such a gentleman. So, here's your reward,\" she said as she reached up for a kiss. The kiss was nice and sensual and, along with her breasts rubbing into me, seemed to create a swelling below my waist. I tried to pull away but she slipped one hand down from my back to my butt and pulled me close.\n\n\"You know, I kinda feel the same way,\" she whispered. \"Walking topless, knowing you were right behind me got me kinda excited.\"\n\n\"Well, good,\" I laughed. \"It's nice to know someone else is suffering.\"\n\n\"Umm-hmm. Now look, I'm going to back away slowly. You don't have to turn away your eyes. I want you to look at me.\"\n\nShe did exactly as promised and once she was a few feet away, she looked up at me and smiled. We all know guys are such visually stimulated creatures and to look at a time like this was so sweet, so rewarding, so fulfilling. I looked down at her chest. Her breasts were beautiful. They weren't particularly big, but they stood out nicely with slightly puffy areolas and tiny, beaded up nipples. God, she was beautiful, shirtless in the full sun, smiling at me. ",
        "\"You like?\"\n\n\"Oh, God, Julie, you're absolutely beautiful. You, out here in the open, sun-kissed and all. I think I might have died and gone to heaven.\"\n\n\"You're laying it on pretty thick, but thank you. Listen, we need to keep hiking. Mind if I keep the girls out until it cools a bit?\"\n\n\"No, not at all. Lead on.\"\n\nAn hour or so later we dropped into the trees where it was cooler and we stopped and slipped on our shirts. Her bra stayed on the pack until we hit camp that evening. The weather looked great so we left the tent in the pack and stretched out in a meadow side-by-side. There was no breeze and the rocky bluff behind us seemed to radiate heat down keeping us comfortably warm. As we lay there, her hand reached over and held mine. We talked a little bit about the day and plans for the next. However, the elephant in the room, or camp, that is, was our relationship. We were clearly becoming more comfortable with each other, her kisses were sweet and beyond compare, and on that day she had exposed herself to me, almost as if offering herself to me.\n\nI decided she was going to have to take the lead. I did not want to come off as demanding and losing her companionship as a result. Eventually our talking subsided and we lay there in companionable silence, listening to the bubbling creek nearby.\n\n\"Ryan?\"\n\n\"Umm.\"\n\n\"Do you, uh, like me?\"\n\n\"Oh, yeah, you know I do.\"\n\n\"Are you attracted to me?\"\n\n\"You know that too. Remember when you hugged me out on the trail today?\"\n\n\"But was that just hormones talkin' or something more?\"\n\n\"Listen. I find you incredibly attractive, sexy and desirable. I would love so much to...\" I paused, not wanting to put it into words.\n\n\"Then why don't you try?\"\n\n\"OK, let me explain it this way. You and I are in a situation where we need to totally rely on each other. We've combined our equipment and we need each other to finish our trip. The last thing I want to do is ruin our hiking relationship by making a pass and upsetting you so that either or both of us have to quit.\"\n\n\"Hmm. I see. What if I made a pass at you?\"\n\n\"In a way, the same thing would apply. Listen, you are a beautiful woman. You're fun. Smart. Sweet. Any guy would be lucky to end up with you. I know I would be ecstatic to sleep with you. But let's make sure that's what we want to do, OK?\"\n\n\"Give it some time?\"\n\n\"Yeah, give it some time.\"\n\n\"OK, but could I interest you in a little making out?\" she asked as she pulled herself next to me and reached over for a kiss. Our mouths met and the gentle kisses and nibbles became deeper and more urgent. I felt her hand take mine and slip it under her T-shirt up to her breast. She shivered a tiny bit as I started to tease her nipple. I did not try to take advantage of the situation and after some ten minutes or so she sighed and whispered in my ear, \"You're the sweetest guy. I needed that to feel attractive when I've been all sweaty and gross. Thank you.\"\n\n\"Mmm-hmm. Sure thing. I kinda liked it too,\" I chuckled. A few minutes later she pulled away, stretched out and was soon snoring softly.\n\nOver the rest of that section of the trail we seemed to bond together even more as hikers and as well as a couple. We would wake up to nice kisses and hold hands on wide spots in the trail. But the kisses and hugs at bedtime were the best. At the next resupply station there was again a tiny store where we could pick up our packages. There were indoor showers with truly hot water and free soap. We were in heaven. Ten days of grime washed down the drain and we were able to wash our clothes in a free washing machine out on the porch. I never figured out why the trail angels did what they did, but they were truly angels.\n\nWhen Julie was in her shower I snuck out to the store. There behind the counter were the condoms. I grabbed two dozen and the shop owner chuckled saying they were some of his best sellers. I took them out of the boxes and stowed them deep in my pack. \n\nThat evening we dined on delectable canned pork and beans with a side of canned corn. Absolutely wonderful food, if you ask me. The next morning, we headed out and approached the northern California section of the hike. We were in full summer; the days were warm to even hot and the weather held with minimal rain and wind.\n\nAbout five days out from the last resupply stop we found ourselves camped at one of the highest camps along the trail. Water was obtained from a melting snowfield and we ended up laying our sleeping bags out on a large, flat rock on a ridge. We had a glorious 360-degree view and as the sun went down the sky lit up with thousands of stars. The Milky Way seemed to be so close you could touch it. Julie and I sat there taking it all in while we sipped on her rum straight from the bottle as we held hands. Eventually she put the bottle down and turned to me.\n\n\"Kiss?\"\n\n\"Sure.\"\n\nWe kissed for a while and turned back to watch the stars. Then she dropped the bomb. \"I don't, but do you, uh, do you have anyone waiting for you at home?\"\n\n\"Maybe, maybe not,\" I answered after a few seconds. \"It's hard to describe, but I'll try. To be perfectly honest, I was living with someone when I planned this trip. She was pretty upset that I wanted to do it. We talked quite a bit and I suggested she might want to use this time to further her professional situation.\"\n\n\"So?\"\n\n\"Well, she's not outdoorsy at all. She's into art and museums. Long story short, she's taking the summer off of work and traveling through Europe visiting museums, making contacts for her job, things like that.\"\n\n\"And?\"\n\n\"Here's the funny thing. Even though I thought we were fairly close, she proposed the night before I went to the airport that we not consider ourselves exclusive for the summer.\"\n\n\"Wow.\"\n\n\"Now, I know you could think it's just a lie to get you into bed with me...\"\n\n\"No, I don't think you'd do that. You never have tried, you've even so much as turned me down.\"\n\n\"Wait. I haven't turned you down, I've merely suggested we make absolutely sure that's what we want to do, given our situation.\"\n\n\"Yeah, I know. I get it.\"\n\n\"Anyway, that's the skinny. I'm sorta attached, maybe not, and have been told I don't have to be exclusive with her. Quite honestly, I got the idea, well I don't know what idea I got, but I was really surprised.\"\n\n\"So, what are you going to do?\"\n\n\"Well, I hadn't planned on anything like this, so I never thought the question would come up. Now that you're here and I'm big-time attracted to you, well, I'm a bit torn.\"\n\n\"Now, if you ask me my opinion,\" said Julie, \"I want to let you know that, given what you've told me, well, you're going to have to make your own decision. I shouldn't try to sway you one way or the other.\"\n\n\"OK, let's be brutally honest. If I said I'd like to take you to bed right now, what would you say?\"\n\n\"You stinker! You have to ask? I'd jump your bones so fast! I've been wanting to sleep with you for days now.\"\n\n\"Even knowing what I told you?\"\n\n\"Sure. She so much as gave you a hall pass, didn't she?\"\n\n\"Yeah, I guess she did.\"\n\n\"So, let's put it this way. If you and I sleep together and at the end of the trip you go back to her and I never hear from you again, I'll remember this as the highlight of the decade. Sure, I'd be sad, but the fond memories would last a lifetime,\" she said. \"Don't get me wrong, I'm not a slut but I am attracted to you. But if this isn't meant to be for the long term, well, I'll need to get over it.\"\n\n\"Let me get this straight. You know I was living with someone, that we've decided on a long-term quasi separation and we've decided to not be exclusive during the time. And still you'd be interested in you and me...\"\n\n\"Oh, definitely. And we'll see what happens over the next few months.\"\n\n\"Uh-huh. OK, then, I have a proposal. Let's zip our bags together.\"\n\n\"I thought you'd never ask,\" she squealed as she pulled our zippers all the way down and sat about hooking our bags together. Once it was done, she snuggled over to me and slid her leg between mine. I felt her kisses on my chest as I wrapped my arms around her. I pulled her up to me and we kissed and snuggled until we both started to drift off. The last thing I heard her say was, \"Here I get this guy to agree to sleep with me and we're both so exhausted, that's all he'll do. 'Nite Ryan.\"\n\n\"G'nite, Sweetheart.\"\n\nThe next morning dawned cold and there was even a hint of frost on the tops of our bags. I was toasty warm with Julie's arms wrapped around me. As I stirred, she woke up as well. \n\n\"Brrr. It's cold,\" she said. \"Keep me warm.\"\n\nI reached down to give her a nice kiss which rapidly deepened into a most sensual event. Our lips teased as our tongues explored. I couldn't remember when I had had such a sensual kiss in the past. I felt myself get hard particularly as she rubbed up against me.\n\nFinally, she broke the kiss and murmured, \"Mmm, nice,\" as she hugged me tightly.\n\n\"Yeah, very nice.\"\n\n\"You know, as much as I'd like to continue this, I really gotta pee,\" she laughed.\n\n\"Yeah, me too. But can I get a raincheck?\"\n\n\"You bet, and I expect you to collect soon, hear me?\"\n\n\"Oh, I plan on it. Here, I'll go first and fire up the hot water.\"\n\nWe scurried around camp, ate, packed and got ready for the day just as the sun started to warm up the camp. The hike was one of the most beautiful ones of the trip. The High Sierras are unbelievable. The grey and pink granite peaks were mirrored in little lakes below. There were scattered, fluffy clouds which broke up the monotony of the deep blue sky. We saw marmots and heard the shrill cries from the picas. It was the best alpine experience of my life.\n\nAt one point over a large bare-granite crest the trail was marked by tiny cairns built of a few stacked stones. We walked side-by-side holding hands as we took in the beauty. Suddenly Julie stopped and said, \"Look, down there. Isn't that picture perfect?\"\n\nShe had pointed to a small lake hundreds of feet below us on an exposed ridge. It was surrounded by a meadow of wild flowers and on one edge was a small patch of bare soil. \n\n\"Let's go down there,\" she exclaimed.\n\n\"Julie, we'd lose altitude and then we'd have to gain it back. Let's enjoy it from here.\"\n\n\"Nope, I'll never see it again as long as I live and I want to be there. C'mon, maybe we can even take a quick dip,\" she laughed as she grabbed my hand and started to work her way down the slope. There wasn't a trail at all so we picked our way down off the crest, then further down through a lot of trees and eventually we came out into the opening. I had to admit she was right; it was picture perfect. \n\n\"Oh, don't step on the meadow, it's too pretty. Go around to the sandy area first,\" Julie told me. I agreed stomping down the flowers would have been sacrilege. We moved over to the side and approached the lake over what must have been an area recently covered with snow, but was now bare. We dumped the packs and looked around while holding hands.\n\n\"Isn't it beautiful?\" she whispered to me.\n\n\"Umm-hmm, it is.\"\n\n\"Now aren't you glad we came down here?\" she asked as she pulled off her boots.\n\n\"Yeah, I am, though I won't be too happy climbing back up to the trail.\"\n\n\"Oh, yeah. I think I know what might make it all worthwhile,\" she laughed as she pulled away from me, turned to face me and slowly reached down and grabbed the hem of her shirt. My breathing must have stopped for a second or two and my pulse pounded in my ears as she slowly pulled her top off. Her breasts were absolutely stunning. As I said, they weren't particularly big but their shape was perfect and they stood proud on her chest. I couldn't pull my eyes from her. \n\nNext she reached down and grabbed the tops of her shorts and panties and slowly, oh so slowly, pulled them down to her knees and let them drop to the ground. Her sleek torso tapered to a tight, lower belly and to a crop of hair over her slit. \n\n\"I'm going for a swim. Care to join me?\" she asked with a smile before turning to the water. I couldn't believe it. Her prior modesty had completely flown out the window and I was looking at a vision of beauty walking away from me towards the water. Her cheeks were tight and heart-shaped and not an ounce of flab was to be seen. As she approached the water she looked carefully into the clear water, walked over a few steps and then dove in.\n\nAs I started to pull off my clothes her head popped up and she was smiling and laughing. \"It's perfectly warm, you've gotta try this!\" she shouted out to me. Once I was stripped, I went over to the same outcropping and launched myself into the water.\n\nHoly shit it was cold! As I surfaced sputtering and swearing, I saw her laughing with glee.\n\n\"You rat, you dirty rotten rat!\" I shivered.\n\n\"Yeah, but it still feels nice to get wet. I'm going to sponge down a little bit.\"\n\nI offered her my supply of biodegradable soap and once I got it from the pack and re-entered the water, we stood waist deep and washed ourselves quickly. It was too cold to stay in very long and we ended up back on shore letting the warm sun dry us. I pulled out our mattresses and let them inflate before we sat facing each other. After a few minutes she looked down at her pubes and sighed, \"A girl doesn't get any chance to groom much out here, does she?\"\n\n\"Hey, if I can be so bold as to say, you look absolutely delicious just as you are.\"\n\n\"Yeah, well at least I'm of northern European stock and my hair is fairly sparse and light. But look at my legs; all hairy and icky.\"\n\n\"Look at my beard. No big deal. I'm not looking at the hair, anyway. I'm looking at you and I like what I see,\" I said as I leaned over and gave her a nice, sweet kiss. She reached her arm around my head preventing me from pulling back so we sat there kissing for some little while. She scooted closer to me, lifted her legs over mine and our kisses became deeper and more erotic. My arms slipped around her and her one arm reached around me while I felt the other hand hand slide down my belly to my stiffening cock.\n\nShe gently grabbed it and started to stroke up and down lightly as she leaned up to my ear. \"OK?\" she asked.\n\n\"Yeah, OK,\" I replied.\n\n\"You can touch me if you want.\"\n\n\"You sure?\"\n\n\"Umm-hmm, I'm sure.\" \n\nI reached down and teased her hair apart and stroked between her lips. I slipped the velvety moisture, which was pooling at the opening, up to lubricate her clit and began to move my fingers in little circles to her obvious delight. After a minute or so she reached down, moistened her own fingers with her juices and reapplied them to my knob. We both stimulated the other while we kissed deeply. Rather suddenly she started to breathe heavily and irregularly, hugged me tighter with her free hand and then, with a few gulps of air, moaned and twitched in an obvious orgasm. After a bit she looked up at me and whispered, \"That was nice, super nice.\"\n\n\"Glad you liked it.\"\n\n\"Now it's your turn,\" she said as she scooted back, leaned down and took me in her mouth. It felt sooo good as she tongued the area below the glans that I had to lean back and support myself with my elbows on the ground. She applied gentle up and down movements with her hand as her mouth concentrated on the last few inches of my cock. It had been so long for me that I found myself rushing towards an orgasm in no time at all. I patted her shoulder to warn her but she kept up her attention so I finally came with a wild throbbing of my cock. She swallowed it all, kept stroking me a bit before sitting up and smiling.\n\n\"Like it?\"\n\n\"What's not to like? Was absolutely fabulous.\"\n\n\"I think getting the first one out of the way will help us for round two. Interested?\"\n\n\"Uh, yes, I am. You?\"\n\n\"Oh, Ryan, I've wanted this for weeks now. I figured I just had to take the lead and make it happen. Now I have something here in my pack you might be interested in.\"\n\n\"What's that?\"\n\n\"Condoms.\"\n\n\"So do I! Did you carry them the whole way?\"\n\n\"No. I bought them at the angel camp before last.\"\n\n\"Funny. I got mine at the last camp.\"\n\n\"See, I knew before you did, we'd come to this.\"\n\n\"Smart lady,\" I replied as she continued to stroke my reviving cock. We kept kissing and after a few minutes my cock was firm again. She slid the condom on me, gently pushed me down onto the mattress and climbed on top. She grabbed my erect cock and rubbed the head along her folds, wetting me. Once she was satisfied, she sat up a bit and put my cock right between her lips. And with a slow satisfied sigh, she let herself down on me, impaling herself millimeter by millimeter. \n\n\"Feels so good,\" she murmured while resting there, letting our bodies relax and enjoy the sensation. \"Having myself stretched and filled like this is the height of being a sexual woman. There's something primal about it....\"\n\nShe slowly rose up until the tip of my cock was at her opening before she paused and then slowly slid back down. Over and over, she rose slowly and dropped even slower, but as time went on, I became aware her tempo was picking up. Eventually the intensity of her thrusts increased along with the tempo. She sank deeper and deeper onto me until her pubic bone and mine were rubbing together with each deep thrust. \n\nI don't think I had ever seen anything so sexy as Julie was that afternoon. The sun played on her gently swaying breasts as her head, framed by puffy clouds in the sky, was thrown back in ecstasy. Her breathing was deep and slightly irregular and as she became more excited, I noted a slight flushing of her upper chest. Her head bent down and I saw the firmly shut eyes, furrowed brow and partially open mouth of a woman nearing orgasm.\n\nIt felt almost voyeuristic watching her so I closed my eyes and pulled myself upright with her still thrusting up and down. With no visual input, my other senses took over. I could feel her soft skin and her loose hair down her back. Her breasts made little trips across my chest and her vagina had me in a tight, moist grip as I sensed intermittent spasms on my cock.\n\nHer hair smelled of fresh mountain water and along her neck was a faint whiff of residual sweat. A stronger scent of female arousal wafted up to my nose and mixed with the pungent smell of the wild flowers a few yards away.\n\nIn my ears I heard her soft sighs and moans mixing with the wet slapping sound from below. A faint breeze stirred the nearby trees and the remote screech of an eagle mixed with the shrill cry of a marmot. \n\nHer sounds of arousal intensified as her fingers on my back started to dig into my flesh. I sensed she was nearing climax and right as I was falling off the edge into the abyss of orgasm, she plunged down several more times as her body spasmed and she cried out, \"Oh God, oh God, oh God, you make me feel so...\" She sagged away from me, forcing me to hold her up. It was at that exact moment that I felt closer to another person than I ever had before. We were one being, melted together, joined head to toe and not just at the groin.\n\nI wrapped my arms around her and felt her beating heart against my chest. Her breathing calmed and she finally stirred a bit, turning her head towards me. Our lips touched in a most tender, loving kiss. She then nuzzled into my neck and I could feel her breathing on my skin as I sat there in a state of absolute awe. \n\nBy that time, I had been sexually active for over ten years. I was never one to sleep around and I generally preferred to have sex with someone I already had a connection with. Certainly, Julie and I had a connection; we'd been hiking together for weeks, talking and sharing. But this connection, this connection was somehow so much more than any I had experienced before. As I looked over her shoulder and gently rubbed her back, I realized this had been the most meaningful sexual episode of my life. The word 'love' kept coming back into my mind as I thought about our relationship. Sure, I had used the word 'love' with others, but I knew, I just knew while I had deep feelings about other women in the past and thought it might have been love, it hadn't been Love, with a capital L. This was Love: a deep aching desire to fuse with another, to be one, to share everything, to be simply together, no matter what life would throw at you.",
        "\"Was nice,\" came the whisper in my ear.\n\n\"Umm-hmm,\" I responded. A few seconds later I went on, \"Julie, I know people throw the word around too often, too early, but I want you to know that I, uh, may be falling...\"\n\n\"Uh-uh. Stop! Ry, please stop. Yes, this was phenomenal, but we need to keep it in perspective.\"\n\n\"What do ya mean?\"\n\n\"Let's make sure we don't read too much into a fantastic screw. We've been drifting together for some little while and... Well, what I mean is, uh this was great and all, but we shouldn't make too much out of it. OK?\"\n\nI was stunned and hurt. Here I had been baring my soul to her and she clearly didn't want to hear it or, at least, didn't feel the same way about me. I kept quiet for a few minutes and softly said, \"OK, let me say this. What we just had was the absolute best sex I have ever experienced and I feel closer to you right now than I ever have to anyone.\"\n\n\"OK, I'll accept that. Yeah,\" she chuckled softly, \"This was definitely in the top ten...\"\n\nI tickled her ribs a tiny bit. \"Only the top ten?\"\n\n\"OK, top five, top five...\"\n\nI tickled some more.\n\n\"OK, OK, the top two. Happy?\" \n\n\"No,\" I said as I reached down and playfully and lightly swatted her butt.\n\n\"Ouch,\" she laughed, \"Oh, alright, I'll say it was in the top one.\"\n\n\"That's better,\" I said.\n\n\"Yeah, the top one...hundred,\" she giggled.\n\nI lightly swatted her butt a couple more times as she laughed until she said, \"Scratch the 'hundred.' It truly was the best for me, too.\"\n\nWe sat there for several more minutes with me gently rubbing her back. I thought about the conversation. She had said it had been good sex and clearly, we were bonding. But something was keeping her from wanting to talk of love. In my mind I decided to avoid the 'L word,' but I wanted to make sure she understood she meant a ton to me. I kissed her a few more times and asked, \"Wanna camp here? We'll lose half a day but we can make it up later.\"\n\n\"Oh, Ry, I want to stay here forever. Yeah, let's spend the night.\"\n\nFor the rest of the afternoon we lounged around and as the air cooled in late afternoon, we slipped our newly washed clothes back on. There were some ominous clouds to the west so we pitched the tent for the night. In the tent with the bags zipped together we held each other but did not have sex again. Somehow, in my mind, I wanted that one episode outside with her to be the image burned in my memory and to try another round didn't seem to be right. Julie certainly never initiated anything beyond some lovely kisses and hugs.\n\nIt rained during the night and in the morning, we looked out to see a fine layer of sleet on the ground, almost like a mini-winter wonderland. We had hot beverages with our breakfast, packed up and made our way carefully back up to the trail. Once we were there, we both stopped and looked back down at the pond. We held hands and she squeezed mine lightly before turning silently down the trail, but not before I saw a tear trickle down her cheek.\n\nOver the next few days until we reached the next resupply spot, a tiny store about a mile off the trail, we didn't talk a whole lot. Sure, we discussed the trail, the view, where to camp and things like that. But we didn't talk about us. It almost seemed like we avoided discussing things that might complicate our relationship. I wondered if she was worried about my relationship with Vickie, and quite frankly, I was wondering about it also. When I got back, what would be waiting for me? Would Vickie want to move things further? I realized I probably didn't even want to. Would it result in an ugly breakup? Was my relationship with Julie strong enough to endure? She lived a thousand miles from me. Could we try to make things work? A million thoughts ran through my mind as we hiked. Julie appeared to be deep in thought as well. I wanted to share my dreams and questions with her, but I sensed we were not to talk about them.\n\nIn the evenings and in the sleeping bags we explored each other over and over. I learned about what turned her on and exploited it again and again. I have to say she did the same to me. We nearly ran out of condoms until we came to the next store. They had a nice garbage can so we were able to dispose of our litter consisting of food bags wrapped around spent condoms. We picked up our packages and I tried, without success, to talk with my brother to get a message out to Vickie. Honestly, I think I was glad because I didn't know what message I would send to her. After restocking and getting more condoms, Julie and I headed back out onto the trail.\n\nBy that time, we were in the northern California portion of the hike. We reached the halfway point and celebrated with a slug of rum from her tiny bottle. We both were doing well; our health was good and our feet and legs were strong. \n\nOne day Julie was hiking several hundred yards in front of me. We usually kept fairly close but sometimes one of us would pull ahead or lag behind and we'd find ourselves seemingly hiking alone. Just as she rounded a corner, she screamed a blood-curdling shriek. I ran forward to where I could see her and beyond her, not more than forty or fifty feet, was a black bear standing on her rear legs, sniffing the air. I could see two cubs scampering around behind her. \n\nThis was a serious situation and everything I had ever read came rushing back to me in an instant. I was still a bit behind Julie but I didn't want to appear to threaten the bear, so I stayed where I was and spoke in a low voice.\n\n\"Julie, just slowly back up. Keep looking at her. No, don't turn around! Don't run! I'm right here behind you, just keep inching back.\"\n\nThe bear dropped to all fours and looked at us. She started to stomp her front paws on the ground and made a sweeping motion with them. I remembered this was a defensive tactic and not an aggressive behavior. I kept talking quietly to Julie until she was in my arms. Once she was behind me, we both backed up slowly, still facing the bear. Once we were over a hundred yards from her, we turned and walked back down the trail. As our adrenaline levels dropped, the conscious awareness of how close we had come to disaster came rushing in. Julie started to sob as she held onto me and I have to admit I suddenly broke out into a cold sweat.\n\nAfter waiting nearly an hour we decided to try our luck on the trail again. I led the way and started talking loudly and singing little songs. In this way the bear would hear us and move her cubs to safety. I knew they didn't want to have anything to do with people and would only attack when feeling threatened. We never saw bears again but we made a promise to ourselves to try and walk closer together and talk more, particularly when in the woods.\n\nThat night in the tent Julie was wildly passionate. She didn't want to snuggle, she wanted raw, lusty sex which I was more than willing to provide. She pulled me on top and pulled my pelvis towards her, driving my cock into her. I pounded in and out as she moaned and cried out, begging for more, begging for it to be harder, faster and deeper. Our climaxes were deep, powerful and all-consuming. Once we were finished, I lay on top of her and asked, \"You OK? Too rough?\"\n\n\"Yeah, I'm fine. It was fine. Somehow it reinforced that we're still alive.\n\n\"Ry,\" she went on, \"I've never been so close to thinking I was going to die! If I gotta go, I gotta go, but not now! Not that I've found you. I want to spend more time with you and it would be god-awful rotten karma to die right after I found you.\"\n\nThat was the first time she even hinted at her feelings about me after our day by the pond. I was elated but decided to play it cool.\n\n\"Nah, it's not your time. Just like it wasn't mine on the snow field.\"\n\n\"But I don't want to lose this.\"\n\n\"I don't think you will. We'll be more careful and make sure...\"\n\n\"No, Sweetheart, I don't think you understand. I don't want to lose us, OK?\"\n\n\"I don't either,\" I answered as I pulled her close to me again. We stayed like that for some little bit when I drifted off. I came to with her stirring and nudging me until I slid off and over next to her. \"Sorry,\" I whispered.\n\n\"No, it felt good, but I wouldn't be able to sleep all night with you on me. Besides, you need to get the condom.\" Eventually we snuggled next to each other and fell into a deep sleep.\n\nFinally, we made it to Oregon. Although we had already passed the halfway point, there was a psychological boost knowing we were in a new state. At the first opportunity I contacted my parents to offer my dad the opportunity to join us for a bit. He declined saying he'd tweaked his knee and didn't want to slow me down. Julie and I were in peak condition by then and were able to make good time on the relatively flat trails. We knew we needed to hurry as it was getting later in the year. In June and July, the days are the longest and the weather is generally good. By August one can easily sense the shortening days and by September the weather can start to sour, particularly in the North Cascades of Washington. We hustled while we could to try and take advantage of the remaining decent weather and the longer days. \n\nWe seemed to draw closer to each other as the days went on. The sex was great and the companionship was comfortable and close. Any discussions of our relationship or our future were shot down by Julie. She kept insisting our goal was to finish and we could continue to enjoy our physical relationship in the meantime, but she absolutely would not talk about \"us.\" \n\nBy the time we hit the Columbia River at Washington we realized that with a bit of extra speed we should be able to finish by early October. This is usually well before any serious cold weather and snow hit. We relaxed by the river for one night and I talked to my brother by phone. I asked him to pass on a message to Vickie, whom I had not heard from at all for the entire summer. \n\nOnce we were over the river, we had to spend the next couple of days climbing up and up, only to lose altitude again. The North Cascades are beautiful but quite different from the Sierras. There is far more elevation change but we were in perfect shape and we were able to move along rather steadily. Seeing the snow peaked volcanos like Mt. Rainier up close was a fabulous treat. Three times in the last month we had to stop and ride out some nasty wet weather, but fortunately it didn't snow. Each time we would pass the time in the tiny tent making love, talking, singing, playing cards and, (did I mention it already?) making love. As we drew closer and closer to Canada, the trail became more rugged and more remote but we plodded on. The night before we were to hit the Canadian border, we were practically giddy with happiness. We knew we'd get up to the border and have to turn back as hikers were no longer allowed to cross over and hike down to the nearest Canadian road. As a result, we left our gear and traveled with just the clothes on our backs and food in our pockets. It felt so free not carrying the packs and we made phenomenal time. \n\nAt the border we stopped, hugged and had our lunch. Julie pulled out the rum so we had a couple of swallows to celebrate, but not too much. We didn't want to get drunk and have an injury. Finally, we turned around and went back to camp. That night we were in great spirits, feeling so proud for having finished the entire PCT, but at the same time I, and I think she, realized this was the end of a lifetime dream. In a few days we would be back to our ordinary lives; working, fighting traffic and paying bills.\n\n\"What are you thinking about?\" she asked me when I had been quiet for a few minutes.\n\n\"It's kind of sad, actually. Yeah, it was a big accomplishment, but now it's over.\"\n\n\"Umm-hmm. You're right, you know. But there is one thing I'd like to do to celebrate.\"\n\n\"What's that?\" I asked as she reached over to me, held my head in her hands and gently brought her face to mine. Our lips slowly met and teased each other. Her tongue gently probed as her hands rubbed my back. \n\nShe broke the kiss and whispered, \"Can't you figure it out?\"\n\n\"Mmm-hmm, I think I can,\" I answered as I pulled her to me. We sat there in the tiny tent, holding each other for a bit until she reached between us. Her hand drifted down and started to tease my half-erect cock. I responded by gently teasing her nipples under her top until she sighed quietly. As it was fairly cool in the tent, I knew we'd need to get into our bags soon. I pulled apart and made sure our bags were zipped together before turning to her. \"Care to join me?\"\n\n\"Oh, yeah,\" she laughed as she sat upright and peeled her top off. I was still struck by her beautiful breasts which stood proud on her chest. She looked at me with a little gleam in her eye as she rolled back and pulled her tights down. In the faint light I saw the most wonderful sight: a beautiful woman looking at me with desire in her eyes.\n\nAs I undid my shirt, she grabbed my zipper and pulled it down before pulling out my cock. \"I'm seriously into you, you know,\" she whispered.\n\n\"Thank you.\"\n\n\"Not you, Dummy, though I do like you. I was talking to this guy here,\" she said as she leaned down and gave my cock a wonderful lick from the base to the knob. After a few more licks she rolled over onto her back and slipped her legs apart. \"Make love to me, please. Nice, slow loving is what I need right now.\"\n\nAfter I slipped on the condom, I rose up over her and she guided my cock to nirvana. I began to slowly slide in and out as if I had all the time in the world. Each time I bottomed out she would give a tiny sigh of contentment and grasp my butt tightly. We kept this slow melting of our bodies going for what seemed like forever. My gentle thrusts and her tiny clasping when I retreated were repeated over and over.\n\n\"Oh, so nice,\" she whispered in my ear. \n\nI slowed down a bit and whispered back, \"Very, very nice,\" before I resumed the slow thrusting. Gradually her clasping my butt became a bit firmer and she pulled me towards her a bit more briskly until I began to increase the tempo and depth of my thrusting. She tipped her pelvis down to increase the pressure on her clit and began to breathe deeper and faster. \n\nPretty soon we had established a far faster tempo with deeper thrusts when she murmured \"Oh, yes, a bit more. Harder, please.\"\n\nI obeyed her request until finally we were pushing, writhing, grabbing, holding and grunting our desire for each other. I felt her twitching a bit under me and looked at her face to see eyes closed and head arched back. Her fingers on my butt were digging into my flesh as she held be tighter and tighter.\n\nThen it happened: With great gulps of air, she cried out, \"Oh, my God, Ry, oh my God, yes, yeesss, so gooood!\" Her orgasm triggered mine until I plunged in deeper and deeper as she cried out even more. And it was at that moment I felt it again: that sense of becoming one. Two people were fused together, like it was at our first time out by the pond in California. \n\nEventually, all good things must come to an end and I collapsed on her, our heavy breaths mingling together. For a fraction of a second I almost lost track of where I was and what was going on. I shook my head to clear my thoughts and she asked, \"You OK?\"\n\n\"Yeah, yeah I'm fine.\"\n\n\"You looked kinda weird there for a second.\"\n\n\"Yeah, it was as if I almost was losing consciousness.\"\n\n\"But you're OK now, right?\"\n\n\"Yeah, feel fine, great, in fact.\"\n\n\"Good. Can't have you passing out on me now, can we?\" she paused begore going on. \"Must have been a big one to make you almost pass out.\"\n\n\"Yeah, majorly big. Uh, am I squishing you?\"\n\n\"No, you are the perfect blanket,\" she responded as we lay there. \n\n\"And you're the perfect mattress.\"\n\nAfter a sweet period of tender kisses and soft words I slid off of her, retrieved the condom and we snuggled up together. I know it took me a long time to fall asleep as my mind was racing from one thing to another. I sensed she was also awake so I gently squeezed her hand and she returned the squeeze before pulling my hand to her chest. Somehow that little extra touch was all I needed to let my mind drift into sleep.\n\nIt took nearly a day to backtrack to an old dirt road that led down to a tourist village on the east side of the range. We were fortunate enough to hitch a ride in the back of a pickup truck down to the village. There we inquired about the bus service to take us to Wenatchee and were told the bus came only three times a week and had left earlier that day. We camped in a tiny RV park where we were able to sleep under a covered picnic gazebo. We must have showered four times in two days.\n\nOn the last night before the bus came, we wandered down to the village and ate at a nice little restaurant. The food was amazingly good and we shared two bottles of wine getting rather tipsy as a result. We walked buzzed back to the RV park and our gazebo. We lit a fire and sat there holding hands watching the flames. I knew I had so many things to say but Julie had always avoided those important conversations. I was startled to hear her clear her throat and start to talk.\n\n\"Ry, you know that tomorrow we'll go our separate ways. I, uh, I need to let you know something. Weeks ago, you wanted to tell me that you loved me and I wouldn't let you. Well, Honey, I'm gonna tell you this. I love you. I have loved you for practically the entire time we've been together. But I've been afraid to say it. I don't want to be a problem for you when you get back home. You need to go home and need to make a decision about you, about her and about me.\"\n\n\"Julie, I...\"\n\n\"No, please. Don't talk. Let me finish. Uh, I want you to know I will respect your decision, no matter what it is. As I mentioned weeks ago, if I never see you again, this trip and our relationship will be the best memory a girl could ask for. So, you go home. I'll go home. And if at some point you want to contact me, great. And if I never hear from you again, I'll be sad but I'll survive. But please, one final request.\"\n\n\"What's that?\"\n\n\"I don't want you to contact me unless you have good news. OK?\"\n\n\"OK. Sure,\" I replied, then I went on, \"Can I say something?\"\n\n\"Umm-hmm.\"\n\n\"Julie, I love you and ...\"\n\n\"Uh-uh. No more. Don't tell me anything else. I know you love me. But you need to sort things out. No ifs, no maybes, no perhapses. I want you, but I need to know that I've got all of you. Deal?\"\n\n\"Deal. I promise.\"\n\nWe sealed our little talk with a kiss and a long, lingering hug.\n\n-----\n\nThe next morning the bus picked us up and, after a slow drive during which we held hands and hardly spoke, it dropped us off at the bus station in Wenatchee. Her bus to Spokane came by only a few minutes later so I grabbed her and held her until the bus driver called out to get aboard. We parted with our hands lingering until just our fingertips touched. Then she was gone.\n\nAn hour later I was on a bus heading west back over the mountains. I smiled when we crossed the trail where Julie and I had been some twelve days earlier. Once I got into town, I grabbed a taxi to a motel near our self-storage unit. I walked over and let myself in, collected a few clothes, my computer, cell phone and charger and hooked up my car's battery before heading back to the motel. I was exhausted so I ate two cheese burgers at McDonalds before crashing.\n\nThe next morning, I slept until eleven am, let them know I'd be staying for at least one more night and had a nice brunch. Back in the room I showered, trimmed my beard down to a stylish length and flipped open my phone. I stared at Vickie's number for a couple of minutes before tapping it.\n\n\"Hello? Ryan, is that you?\"\n\n\"Uh, yeah. I'm back.\"\n\n\"Great! Did you do the whole trail?\"\n\n\"Yup, finished three days ago, got into town last night.\"",
        "\"Where are you?\"\n\n\"I'm at the motel next to the storage unit. What about you? Where are you?\"\n\n\"I'm actually in town staying at my sister's place. They're gone for two weeks and I agreed to dog sit for them. I haven't any place permanent yet.\"\n\nIt was obvious we were dancing around the issue of our personal situation so I decided to ask, \"Vik, can I come by?\"\n\n\"Sure, sure. Why don't you come right now?\"\n\nI went out, fired up my car and drove to her sister's house. After I went up the stairs, the door opened and there was Vickie. She looked great. A smile graced her face and she held her arms out to me. We came together with a warm hug before we relaxed our arms and looked at each other smiling. We gave each other a warm, quick kiss on the lips.\n\n\"Come in, come in,\" she said. \"By the way, I like your beard.\"\n\n\"Yeah, I trimmed it a few hours ago. It was quite long like a wild mountain man's beard.\"\n\n\"So, we've got a lot of catching up, don't we?\"\n\n\"Yeah,\" I answered. \"You know what I've been doing all summer. What about you?\"\n\nShe responded with a brief description of her summer. It seems she spent quite a bit of time in Italy and France before going to England. She told me briefly about her visits, making professional contacts with the museums and how she was going to be able to use those contacts to help her professional career. As she went on, she mentioned England several times and I got the idea she truly liked it there.\n\n\"Well I'm glad it turned out so well for you.\"\n\n\"Yeah, it did. And I have you to thank for triggering all this to happen. If it hadn't been for you and your crazy hike, I might never have done this myself.\"\n\nAfter a pause, I felt we needed to talk about the elephant in the room. \"Uh, so, where does this leave us, anyway?\"\n\n\"Ryan, Dear, I need to tell you something. I've, uh, I've met someone. Charles. He's a professor at Cambridge in their art history school.\"\n\n\"And...?\"\n\n\"Well, we, uh, we're thinking we want to be together long term. In fact, he's looking at positions at universities in the States. If he can find something in a larger city and I can find work in a museum there, I suspect we'll make a long-term commitment here. Otherwise I'll move over there.\"\n\n\"Wow. That's, uh, that's pretty amazing. You excited?\"\n\n\"Yes, Ryan, I, uh, I really am. You know, I've dreaded this conversation, but I think it's time I move on.\"\n\n\"Hey, Vickie, we agreed to use this time to reassess our relationship, to see what would happen. It looks like you've found someone who will be a great fit for you.\"\n\n\"So, you're not mad?\"\n\n\"Hey! How could I be mad when a great companion of mine has found someone who will make her life so much better? Vickie, I could never in a thousand years want to hold you down just because of our previous situation. It sounds like you've found a great guy and all the happiness that goes along with him. You deserve it.\"\n\n\"You're serious? You're not mad?\"\n\n\"No. Not at all.\"\n\nSuddenly she began to cry and came over to me and wrapped her arms around me. \"Ryan, you don't know how happy this makes me. I do love you, but it's been eye-opening how much more of a soulmate he is to me. We are meant for each other. You and I, well, I don't regret our time together at all and I'll look back at it with the fondest of memories. But I do need to move on. Thank you, thank you so much for understanding.\"\n\n\"Sure, but I have one request.\"\n\nShe looked at me with a hint of concern in her eyes. \"What?\"\n\n\"I insist on an invite to the wedding,\" I laughed as I reached down and gave her an extra squeeze and a kiss on her head.\n\nShe laughed, promised to include me in the invite list and dabbed her tears dry. \n\n\"You know, it's kinda ironic. I met someone, also.\"\n\n\"You did? Really?\"\n\n\"Yeah, but we made no promises, no definite plans. She knew about you and me and insisted that we needed to sort things out. Since things between us are apparently 'sorted out,' I'll get in touch with her. You know, see what happens.\"\n\n\"Well, that's neat. Clearly she likes the outdoors more than I do. What's her name?\"\n\n\"Julie.\"\n\n\"Please tell Julie I hope it works out for you two.\"\n\n\"Sure, thanks. We'll just have to wait and see.\n\n\"I should be heading out, Vickie,\" I went on, \"I've got a lot to do yet. I'll probably be pulling my things out of storage soon so it will all be yours to do with how you want. I'll pay for it through December. OK?\"\n\n\"Sure. I'm kinda in limbo until Charles' situation gets clarified. I'll hang around here until at least Christmas, then we'll see what his search turns up.\"\n\n\"OK. Well, I guess this is 'good-bye' then. Vik, I wish you all the best. You're a great lady and Charles is one hell of a lucky man.\"\n\n\"I think we've all been kinda lucky, eh?\"\n\n\"Yeah, I guess so. You take care Vik,\" I said as I hugged her one last time and gave her a soft, sweet good-bye kiss on her lips. At the car I turned and looked back at her and she waved and smiled at me as I got in the car. \n\n-----\n\nThree weeks later I walked into the Central Valley Environmental Law Group's office unannounced. There were no others in the tiny waiting room so I went right up to the receptionist desk.\n\n\"May I help you, Sir?\"\n\n\"Uh, yes, I would like to see Ms. Bingham, please.\"\n\n\"Do you have an appointment, Mr....uh...\"\n\n\"Erdoc. E-R-D-O-C. My name's Erdoc and no, I'm afraid I don't.\"\n\n\"I see. Now what would you be needing to see her for?\"\n\n\"I wanted to discuss a merger.\"\n\n\"Well, Sir, this is a an ecologically oriented firm. We don't do corporate or business law. We work on bringing polluters to justice, saving green spaces, things like that.\"\n\n\"Yes, I understand. But in this case, I think she would be interested in a merger discussion.\"\n\n\"OK, please have a seat and I'll see if she is available.\"\n\nI sat down while she dialed back into the office. I could hear a few words of her whispers. \"...merger...\" and \"...uh, a Mr. Erdoc, I think he said...\" She put the phone down and turned to me.\n\n\"Well, she'll be out in a few minutes, but I need to warn you: She doesn't do corporate law,\" she sniffed at me.\n\n\"Oh, I think she'll want to discuss this with me. I hope so, at least.\"\n\nWe waited a few minutes until the receptionist spoke up, \"What kind of name is Erdoc, anyway?\"\n\n\"Oh, it's German,\" I lied, thinking about Eins and Zwei.\n\nThen there she was. Her face was still bronzed from the five months in the outdoors and her smile was as big as ever. Her hair was tied up off her neck in some kind of an attractive twist. Her dress was professional and, quite frankly, sexy as hell as it showed her lean, tanned, muscular and shaved(!) calves. She crossed her arms over her chest and leaned on the door jamb as she addressed me.\n\n\"Mr. Erdoc, I'm Julie Bingham. How can I be of assistance?\"\n\n\"I would like to discuss a merger, if I might,\" I said as I stood up.\n\n\"Well, as Suzanne no doubt told you, we are an environmentally oriented firm and don't do corporate law,\" she grinned.\n\n\"But I wanted to discuss how two entities could join forces, pool their assets, cut common expenses and potentially produce some products in the corporate name,\" I smiled back at her.\n\n\"I see. Uh...\" she stumbled for words.\n\n\"Julie,\" Suzanne spit out, \"You know we don't do that kind of law!\"\n\n\"Yeah, I know, but Mr. Erdoc seems to have piqued my interest.\" She turned to me. \"Is your party thinking of a loose association or a more formal one?\"\n\n\"Definitely a formally licensed and witnessed association fully sanctioned by the state. You know, the whole thing.\"\n\n\"And where would the headquarters be?\"\n\n\"Oh, right here. My party is more than willing to relocate and indeed has already moved all equipment and supplies here. My party also has arranged for an independent source of income, once paperwork clears the appropriate state licensing department.\"\n\n\"Really?\"\n\n\"Really.\"\n\n\"I'll have to think about it,\" she grinned even more.\n\n\"My party is also ready to produce an earnest money payment or rather a symbol thereof.\"\n\n\"Hmm...\"\n\n\"Julie, what's going on with you? What are you two talking about?\" cried out an exasperated Suzanne.\n\n\"Oh, I think what Mr. Erdoc is proposing,\" she paused after emphasizing the last word, \"Could be quite interesting.\" She turned to me. \"So, this symbol, is it very big?\"\n\n\"No, but it's quite pretty and costly and worth every damn penny.\"\n\n\"Then the answer is 'yes, I will',\" she said as she ran to me and our arms wrapped around each other. \n\nI leaned back, looked her in the eyes and said, \"I haven't even asked you yet.\"\n\n\"Well, then, you need to get busy, Mr. Erdoc.\"\n\n\"Ms. Bingham, would you do me the honor of being my wife?\" I asked as I pulled out the ring and slipped it on her finger.\n\nShe kissed me and then answered, \"Like I said before, Mr. Erdoc, yes, I will,\" to Suzanne's squeals of surprise behind us.\n\n-----\n\nUnfortunately, it is very difficult to do the entire PCT in one summer any more. Drought and severe wildfires over the past several years have resulted in multiple parts of the trail being closed, forcing hikers to abandon the trail and obtain transportation around those areas. On other stretches of the trail, smoke has been so thick that visibility is severely limited, the views are lost and breathing the foul air can be quite hazardous. \n\nTrionyx54 - Summer 2021"
    ],
    "authorname": "Trionyx",
    "tags": [
        "summer",
        "outdoor sex",
        "oral sex",
        "girl on top",
        "hall pass",
        "missionary",
        "cowgirl",
        "romance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/summer-on-the-pct"
}