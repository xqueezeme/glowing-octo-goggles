{
    "title": "Enforcing The Pre-Nup",
    "pages": [
        ".................................................\n\nHe actually waited four days before he called. Two days longer than I thought. I listened as his smarmy voice oozed through the phone.\n\n\"Tom, Tom, please be reasonable. I'm sure we can work out an agreement we're all happy with. Why don't you come by the office, we'll sit and discuss it like reasonable men.\"\n\n\"That's a great idea, Stan. I already know what I want.\"\n\nHe hated being called Stan, insisting on Stanley. I heard his hiss, but he controlled it.\n\n\"That's just great, Tom. I do admire a reasonable man. What do you want? We'll have it ready when you come over.\"\n\n\"I want that slut daughter of yours to honor the pre-nup as written. Nothing else is acceptable. Understand me, Stan? And as for coming over, it'll be a cold day in hell before I walk back into that snake den you call a home.\"\n\nHis control and good humor disappeared.\n\n\"You low class prick! I told her you were a gold digger, but would she listen? No. Now I'm gonna have to clean up her mess, just like I did when she was in college. You'll regret this, you miserable redneck.\" \n\nHe was practically screaming by the end.\n\n\"Stan, Stan. Are you threatening me? I'm hurt, Stan. I always thought a lot of you.\"\n\nI was laying it on thick, we hated each other from the moment we met. He couldn't make coherent words for about a minute. Then he exploded.\n\n\"I'm gonna make one more try to be reasonable. One million, after taxes, and you can divorce her right after the election.\"\n\nI let a few seconds go by before I answered.\n\n\"A million bucks? Gee, Let me think about that NO! Not happening, Stanley old boy. You have a nice day, now. Gotta run. Feel free to call anytime.\"\n\nHe was still screaming when I hung up. The man was delusional. His career was gone, his 'loving' family probably destroyed and about to be vilified by everyone with an opinion. The genie was out of the bottle, and he was still trying to make deals, to 'fix' it. \n\nI immediately sent three copies of what I had recorded off to safe places. I couldn't be too careful. \n\nHe was pissing in the wind anyway. The wheels of justice were already turning, and nothing he could do now would stop them.\n\n.................................................\n\nI met her when I had to lay cable by her house. I was a subcontractor, owning my own equipment. Everyone was going to fiber optic and buried cables. They were faster, cheaper, and best of all being buried they weren't susceptible to weather. Barring earthquakes, catastrophic floods, or a homeowner who wasn't paying attention, they were practically indestructible.\n\nThe company I had contracted with had gotten permission from the state to use their right of way, for a fee of course. \n\nI was in front of a house that was the biggest in the neighborhood, in a neighborhood of multimillion dollar homes. Fenced, tall gates, paved circular drive. Expensive cars sat around haphazardly, obviously there was a party going on. I could hear the music booming through my headphones, over the sound of my Ditch Witch, a machine that digs the trench, lays the cable, and covers it in one smooth motion.\n\nIt was an April afternoon, hot for the time of year. I had my shirt off to catch some sun, trying to get a good tan before it really got hot. I didn't go to a gym or tanning beds, but doing what I did for eight to ten hours a day, five to six days a week, kept me in terrific shape. I stopped to reload my cable spool, and looked over at the house.\n\nThere was a spectacular looking brunette, standing on the balcony in the smallest bikini I had ever seen. If it hadn't been black I would have sworn she was naked. Standing may have been a generous word. She was swaying back and forth, and suddenly tumbled over the rail! I didn't believe my eyes for a moment, then I went running across the yard.\n\nI found her in the bushes under the balcony. She was scratched pretty bad. She was also knee walking drunk. Literally. I couldn't get her to her feet. When I finally picked her up, she screamed when she put her weight on her feet. I sat her back down as gently as I could. I checked her over, and her left ankle was swollen to twice as big as normal, and she moaned when I touched it. \n\nI made her as comfortable as I could, and went to the front door. I rang the bell and pounded, but no one answered. I couldn't go around the house because of the fence. I went back to her, maybe she could call someone inside the house and get them to come out. She was still so smashed she couldn't talk, and her ankle was turning purple.\n\n\"Shit, shit, shit\" I said to myself as I scooped her up. I put her in my truck, and took a second to write down the address. Fifteen minutes later I was carrying her through the emergency room doors.\n\nI put her down gently and went to the desk. They had watched me walk in.\n\n\"What's wrong with her?\" The nurse at the desk asked, already shoving a clipboard at me.\n\n\"She fell off a balcony. I think she broke an ankle, and I'm pretty sure she's drunk.\"\n\nAnother nurse went off to check her while the other shoved the clipboard at me.\n\n\"Her name here. Your name there. Type of insurance. Relationship to each other. Medical history. It's pretty self explanatory.\"\n\nI shoved it back.\n\n\"I don't know her name, and I'm not giving you mine. I saw her fall off the balcony at a house I was working in front off. There was no one home, she was in obvious distress, so I brought her here. I can give you the address. She'll tell you who she is and who to call when she sobers up, I'm sure.\"\n\nI lied about the party, and I don't know why. Probably to make the story sound better and get her taken care of more quickly.\n\nThe desk nurse frowned, and tried to talk me into signing.\n\n\"Not gonna happen, lady. I don't mind helping her, but I won't be responsible for her. Judging by her house her family has a few coins. You shouldn't have a problem getting paid. Now, you gonna treat her, or what?\"\n\nShe grumbled, but really didn't have a choice. I sat with her until they took her back, then split. Last thing I wanted was to be a designated sitter to some little rich bitch.\n\nI got back to my equipment and looked up her driveway. All the cars were gone, and a small Mercedes was pulled to the front. It was too late to get anymore work done, so I pulled my machine up onto my trailer. I wrestled with it for a bit, but decided someone needed to know.\n\nI walked up the driveway and knocked on the door. A really attractive woman who resembled the girl opened the door. I assumed it was an older sister. I found out quickly it was her mother, forty two at the time, she looked early thirties.\n\nHer eyes were cool.\n\n\"Can I help you?\"\n\n\"No ma'am, but you can help someone else. I was working in front of your house earlier today, and saw a woman fall off your balcony. I think she hurt her ankle pretty bad, and I took her to the ER at Methodist. I felt like someone needed to know. She was, er, too hurt to think straight.\"\n\n\"Oh my God!\" she burst out, running to her car. She peeled out of the drive, leaving me standing there with the door to her house standing wide open.\n\n\"Rich folks are a strange bunch\" I thought, as I pulled her door closed, making sure it was locked.\n\nI had lost half a day and was on a schedule, so I was there bright and early Saturday, and worked twelve hours, finishing my portion of the job. I glanced at the house several times, debating whether to check on the girl, but there were no cars in the drive, so I left.\n\n................................................\n\nFive weeks went by and I had pretty much forgotten about it when someone knocked on my door. There were two women standing there, one on crutches. I didn't make the connection. I ran my business out of my home, so I thought maybe they were potential customers.\n\n\"Can I help you ladies with something?\"\n\nThe older one smiled and said in a light voice.\n\n\"Yes, you can invite us in and let us thank you.\"\n\nI moved out of the door and motioned them in.\n\n\"Thank me for what?\"\n\nThe younger one actually laughed.\n\n\"He doesn't remember us, Mom. I would think watching me fall would have made a bigger impact on you.\"\n\nRecognition came to me.\n\n\"Balcony girl!\"\n\nShe smiled. \"In the flesh. And my name is Eve. This is my Mom, Greta. We came by to thank you for helping me.\"\n\nI sat them down and got them both a soft drink.\n\n\"You're welcome. How's the ankle?\"\n\n\"Mending. I broke it in two places. My tennis days are over, I'm afraid. Good thing I was so drunk when I fell or I would have gotten hurt a lot worse.\n\nHer mother drew in a sharp breath.\n\n\"Relax mother, it's the truth and you both know it.\"\n\nShe turned back to me.\n\n\"I wanted to come by earlier, but between my ankle and the counseling I was taking, I didn't have an opportunity. I wanted to thank you for helping me, and making me realize where my life was headed.\"\n\nHer mother looked uncomfortable.\n\n\"Eve, I really don't think you should burden Mr. Yount with details of your life. Maybe.....\"\n\nShe overrode her mother.\n\n\"No, mom, I want to tell him.\"\n\nShe looked back at me.\n\n\"You helping me gave me a wakeup call. There were over thirty people in my house when I fell, and not one came looking for me. Mom ran them all out when she got home. She didn't know I was hurt until you knocked on our door.\"\n\n\"When they treated me at the hospital, besides a broken ankle, I had a concussion, a blood alcohol lever of .17, just under poisoning levels, and they found a mild STD.\"\n\n\"When I came to my senses, in a hospital room, I had no idea how I got there, what was wrong with me, or how long I had been there. Mom came in a little later, she had been there for hours, and was filling out forms when I woke.\"\n\nShe stopped. \n\n\"Mom didn't want me to tell you these things, but it was important to me you should know. I wanted you to understand the woman I had become. I couldn't move for ten days because I was in traction, and it gave me a lot of time to think. I went into some serious counseling, just short of a rehab program. I learned a lot about myself, things I didn't want to learn. I'm trying to change, be a better person, and it took the kindness of a stranger to set me on that path. That, sir, is what I wanted to thank you for.\"\n\nI looked at the women, they sat there like they expected me to say something.\n\n\"All I can say is you're welcome. Anyone would have done the same. And I'm glad you've decided to be a better person, we could all use a few more of those. Just out of curiosity, how did you find me? I didn't give anyone any information at the hospital, and your mom and I never exchanged names.\"\n\nFor the first time she giggled.\n\n\"I was wearing your shirt, remember? Something else I need to thank you for. That bikini didn't conceal a lot, now did it?\"\n\nNot much at all, as a matter of fact. A thong bottom, and every time I moved her one or both breasts popped free of the top. I had a clean shirt with my company logo and contact information in one of the storage boxes on my trailer. T shirts are walking billboards, and I did get several jobs because of them. For that reason I always carried three or four to give away. I got a 3X out and slid her into it. It went well down her thighs, and preserved her modesty.\n\nI grinned.\n\n\"Yeah, I forgot about that. You're welcome.\"\n\nHer smile got even wider.\n\n\"It's become my favorite sleeping attire.\"\n\nShe and her mother stood.\n\n\"Well, we won't keep you. Thanks again.\"\n\nShe was almost at the door when she stopped.\n\n\"Oh yes, I almost forgot. My dad wants you to have dinner with us Saturday. Seven sharp. I'm sure you remember where the house is.\"\n\nThey were both shocked when I declined.\n\n\"I'm sorry ladies, I have a commitment Saturday evening I just can't break. But thank you for the offer.\"\n\nBoth stood with their mouths open in shock. Finally Greta spoke.\n\n\"Do you know who my husband is?\"\n\n\"No ma'am, I don't even know your last name.\"\n\nEve actually giggled.\n\n\"It's Wallace. My dad's name is Stanley Wallace, as in Stanley Wallace, Speaker of the State House. Sure you won't reconsider?\"\n\n\"As gracious as the invitation is, what I have to do is time sensitive, and can't be postponed. Perhaps another time, with a bit more advance notice.\"\n\nGreta stood in shock. Eve was laughing.\n\n\"Mom, can I tell dad? He's not going to be happy. He doesn't take disappointment well.\"\n\nEve took my hand.\n\n\"Thanks again for everything. Maybe we can have dinner another time. I find you fascinating. I'll give you plenty of advance notice, I promise. Bye now.\"\n\nBefore I could react she leaned in and kissed my cheek, and hopped into the car. I watched them drive away, thinking how strange it all was. I still had her scent on my cheek.\n\nIt smelled great.\n\n................................................\n\nI was rattling round in the garage, loading what I needed for where I was going, when a convertible Mustang pulled in the drive. The door swung opened, and I heard her.\n\n\"Can I get a little help?\"\n\nIt was Eve. I helped her out, and gave her the crutches.\n\n\"I apologize, I don't want to make you late for your date. I meant to be here sooner, but got delayed. I'd like to try again. Would you join my parents and I for lunch next Saturday? Please?\"\n\nWhat could it hurt?\n\n\"I accept your invitation. Tell me a time and I'll be there. And for clarification, I don't have a date tonight. I said I had to do something time sensitive.\"\n\nShe sat and watched me load up while we talked.\n\n\"This time sensitive thing, can I come along?\"\n\nI looked at her, thinking.\n\n\"I don't think so. I don't think you'd enjoy it. Then I would be obligated to keep you entertained and then I wouldn't enjoy it.\"\n\n\"Please?\"\n\nI knew I was making a mistake.\n\n\"All right. We'll most likely be out all night. Still wanna come?\"\n\nThere was a glint in her eye.\n\n\"You're not gonna hurt me, are you? Then yes, I would love to accompany you.\"\n\nShe made it sound like we were going to the opera.\n\n\"Call your mom. Tell her you won't be home until much later.\"\n\nShe seemed surprised.\n\n\"I'm 22 years old! I don't need to call and get permission.\"\n\n\"I don't expect you do. I was thinking more on the line of being thoughtful, so she wouldn't worry.\"\n\nIt looked like the concept was foreign to her, but she called.\n\n\"Mom, hi. I'm with Mr. Yount. I'll be with him most of the night. Didn't want you to worry. What? All right.\"\n\nShe handed the phone to me.\n\n\"Thank you Mr. Yount. I think this has been the first time she called me about her plans since she was sixteen. Where are you taking her?\"\n\n\"I'm not going to spoil the surprise. Suffice to say it's quiet, off the beaten path, and completely safe.\"\n\n\"Well, try to have a good time. My daughter can be...distracting, at times.\"\n\nI stopped at a Walmart on the way out of town.\n\n\"I need to pick a few things up. I won't be long.\"\n\nBack in fifteen minutes, I tossed the bags in the back of the truck.\n\nIt took almost an hour to get there. The city lights long behind us, it seemed to magnify the stars. I turned up a driveway and stopped in front of a typical farm house of the area. White board, black shutters.\n\nAn older man, slender and spry for his age, came to the door.\n\n\"Hi, Uncle John, just checking in. Anybody else here yet? Are you coming up?\"\n\n\"Ron and Cassie and the young'uns, Bob came. Junie couldn't make it. Fred, Celeste, their kids. Most of the gang is up there already. No, I'm staying in, getting too old for this.\"\n\nI couldn't help it. I had noticed her car, parked discretely in back.\n\n\"Too old? Or maybe got a better offer?\"\n\nI raised my voice.\n\n\"How are you tonight, Marie?\"\n\nA voice came from inside the house.\n\n\"Fair to middlin', Tommy. Now why don't you go on up and stop teasing your uncle. We got unfinished business.\"\n\nUncle John stood there blushing, and I told him to have a GOOD night, and climbed back into the truck before he started asking about my own companion.\n\nWe drove up the hill, stopping at the edge of a large meadow. Two fires were burning, I could smell a grill going, and eight kids were roaming around the tents that were set up.\n\n\"What are we doing here?\" Eve asked.\n\n\"We came here to see a show, but it doesn't start for a few hours. Come on, I'll introduce you.\"\n\nEveryone was curious about her. I had never brought a woman before, and you could see the speculation in their eyes.\n\nCeleste fussed at me, saying we almost missed dinner. Soon we had a plate of burgers, potato salad, and baked beans in front of us. I was surprised to see Eve clean her plate. They got into a conversation about fashion and beauty products, and I took this as a sign to leave them alone. Let the interrogation begin.\n\nI had warned everyone not to tell her what we were all doing here. I could tell it frustrated her no end. She was apparently used to getting what she wanted, when she wanted.\n\nAfter about two hours Ron called out.\n\n\"Almost time, folks. Get ready.\"\n\nI freaked Eve out, telling her to take off her clothes.\n\n\"What!?\"\n\nCeleste laughed. I had given her the bags I had picked up at Walmart.\n\n\"Come on honey, let's get into my tent so you can change.\"\n\nIt was the last week of May, and it was chilly up where we were. Eve was way under dressed in her thin tee and jeans. She had been staying close to the fire.\n\nI had bought her two sweat suits and a pair of thick socks, guessing her to be a medium.\n\nWhile she was changing I put the air mattress and sleeping bag on my platform. Over the years, we found it easier and much more comfortable to use the raised platforms, it really eased neck strain. Celeste brought her to me.\n\n\"All ready now. I'm sure she appreciated your foresight.\"\n\nShe was dressed a sweat suit, hair back in a ponytail. I never saw baggy clothes look so good.\n\n\"If you don't tell me what's going on I'm going to explode. This isn't some sort of cult is it?\"\n\nI grinned.\n\n\"That's right, we're all star worshippers. Now lie down, nothing bad will happen. Just watch.\"\n\nShe was still nervous, and lay on the mattress as far away from me as she could. We lay there for about fifteen minutes before she became impatient.\n\n\"How long are we going to lie here?\"\n\n\"Most of the night. Now hush, you said you wanted to come, so be still. The show should start any minute.\"\n\nSure enough, five minutes later, a vivid meteor swept across the sky.\n\n\"Did you see that?\" she asked in a little girl voice.\n\n\"Yes. It's the aquarid meteor storm. If we're lucky we'll see three or four dozen.\"\n\nThat's why we were there. We were far enough away from the city to eliminate light pollution. We were an informal astronomy club, meeting when times were right to stargaze. Mostly family.\n\nIt had gotten cooler.\n\n\"Time to slip into the bag. Don't worry, you're safe from me.\"\n\nShe slipped in, with a little snicker. Snuggling against me she whispered.\n\n\"Yes, but who's going to keep you safe from me?\"\n\nIt was distracting having her lie there, rubbing that amazing body against me. I was about to give up when I felt a tug on the bag. It was Amy, six year old daughter of Fred and Celeste.\n\n\"Uncle Tommy, can I get in with you? Bobby and Jimmy are acting up, and I can't sleep.\"\n\nI tousled her hair.\n\n\"It's fine with me, baby, but I have a guest. If she says it's okay, climb in.\"\n\nShe gave her best baby voice when she asked.\n\n\"Please, Miss Eve? I don't wiggle much, and I won't make any noise.\"\n\nEve's heart melted, of course, and pulled her between us. She snuggled down and was asleep almost instantly. Soon Eve went out. \n\nThe sun rising woke me up. I looked over, and Eve and Amy were snuggled together, her little head nesting on Eve's shoulder.\n\nCeleste was standing there grinning, holding a camera. She put her hands to her lips.",
        "I slipped out of the bag quietly and followed her back to the picnic table. Some of the others were up fixing breakfast.\n\nShe scrolled through the pictures she had taken, stopping at the one she liked best. \n\n\"Here's what you're gonna look like as a family man. Cute, huh?\"\n\nWe were all snuggled together. Eve was in my arms, and Amy was on top of us, her cheek resting just below Eve's chin. It was cute.\n\nI used the Portajohn we kept there, and took a quick shower in the makeshift bathhouse we had built. Four fifty five gallon drums fiberglassed together, heated by gas. You were allowed twenty gallons, fresh water being pumped from a nearby spring.\n\nWhen I was dressed I went back to the tables. Eve was up, and Amy was sitting on her lap. Amy was the youngest of four, the only girl, and had to fight for attention.\n\nI showed her the bathhouse and explained it to her, giving her a fresh sweat suit.\n\n\"Sorry, I didn't shop for undies\" I said grinning at her.\n\nNot to be out done, she grinned back.\n\n\"That's all right, I kind of like going commando.\"\n\nAmy didn't understand any of what we said, and surprised us all by wanting to shower with Eve. She came out giggling. Her mom asked her what she was laughing about. She had to lean close for the answer.\n\n\"Me and Miss Eve are going commando! We don't have panties on!\"\n\nShe said it loud enough for a few to hear, and Eve glowed for a few minutes. She busied herself brushing Amy's hair.\n\nBreakfast was soon served, and we ate as a group, familiar with each other after years of shared experiences.\n\nEve told them how we met, omitting the drunken party part, saying she slipped and fell off her balcony while I happened to be working there. By the time she was done you would have thought I did the ankle surgery by myself.\n\nAmy was smitten with hero worship. She was about as subtle as a six year old could be when she came out with what was on her mind.\n\n\"You know, if you and Uncle Tommy got married, You'd be my aunt. How cool will that be?\"\n\nEve let her down gently.\n\n\"It would be very cool, sweetie. I might just marry him to get to spend time with you. But he has to ask me first, and we're not that far along in our relationship. But, he's already passed the sleeping together test. He doesn't snore and he doesn't hog the blankets, unlike someone else in the sleeping bag last night.\"\n\nAmy puffed up.\n\n\"Do not snore!\"\n\nEve was right back at her.\n\n\"Do too!\"\n\n\"Do not!\"\n\n\"Yes you do baby. You snore like a fat puppy. It's the cutest sound in the world.\"\n\nThat mollified her somewhat, especially when she told her she could call her Aunt Eve.\n\n\"Will you come back and watch the stars and sleep with us again, Aunt Eve?\"\n\nShe looked at me.\n\n\"I'd love to, sweetie, but that's up to Uncle Tommy. If he says I can, I will.\"\n\nAmy came up to me and tugged my beard. Since she was two years old if she wanted my attention and I was ignoring her, she would tug with her little hands until I gave her my attention.\n\n\"Say Aunt Eve can come back next time. Please Uncle Tommy?\"\n\nI looked at Eve, she seemed anxious somehow.\n\n\"If she says yes when I ask her, I'd love it.\"\n\nAmy, Celeste, and Eve were smiling like it was a done deal. I made a mental note to reel my sister in law in. She seemed to take it as a personal affront that I remained unmarried.\n\n.................................................\n\nShe took another shower when we got to my house. She came out dressed in the jeans and tee shirt she had on yesterday, hair and makeup perfect.\n\nShe saw me frowning.\n\n\"What?\"\n\n\"Nothing. Not my business.\"\n\nShe eyed me.\n\n\"You've got my interest piqued now. Say what's on your mind.\"\n\nI sighed.\n\n\"You're a really, really attractive woman. Why do you wear so much makeup and hide that beautiful face?\"\n\nWell, I said it, now for the fallout.\n\nSurprisingly, she seemed to have tears in her eyes. Before I could move I was the recipient of a very nice kiss.\n\n\"That's one of the sweetest things a man has ever said to me. Thank you.\"\n\nAll I could fumble out was \"you're welcome\" as she hobbled out to her car. I helped her get situated.\n\n\"This cast comes off next week, then a month of physical therapy and I'm supposed to be good as new. Thank you for last night, it was one of the most memorable experiences I've ever had. I'd love to go again, if you want me to. After all, we owe a six year old a new aunt. Wouldn't want to disappoint, now would we?\"\n\nShe took my phone and punched in her number, told me to call, and swept off.\n\nI thought about her all week, but didn't call. We lived in different worlds. \n\nI went on the internet and did a little research. Besides her dad being a big time politician, they were rich. She had a trust fund for an undisclosed amount from her maternal grandfather, and the family wealth was estimated just below fifty million. Way out of my league. It was too bad, I really liked her.\n\nI got a pretty sharp call Thursday evening.\n\n\"Why haven't you called me? Never mind, I'm just reminding you of lunch Saturday. One, sharp. My dad hates to wait.\"\n\nShe hung up before I could reply.\n\nI thought about driving my work truck, but opted to drive my car instead. It was an MG midget, a small British sports car, based on the old Austin Healy designs. It wasn't worth a lot, but I liked it. It took me four years to totally restore it. For a small engine, rated just over fifty horsepower, it was surprisingly fast and very agile. I had never driven it in the rain.\n\nEve was waiting for me at the door.\n\n\"Nice car? Yours? Oh and you clean up very well.\"\n\nI had gone to my barber that morning. I called her a barber, but my sister in law Celeste is a very successful stylist. When she heard who I was going to dine with, she threatened to come over with her battery operated hedge shears if I didn't come in for a trim. She fussed over me for forty five minutes before saying she had done the best she could with what she had to work with.\n\n\"Honey, you need to lose that beard, it makes you look thirty seven, not twenty seven.\"\n\nA very nice button up shirt, casual slacks, new docksiders. It was about as dressed up as I wanted to get.\n\n................................................\n\nShe met me at the door. I reached in my car for the bouquet of flowers.\n\n\"Ooh, you shouldn't have.\"\n\nShe was reaching for the flowers when I told her they were for her mother. Her smile became cool again. I let it sit on her face for a second before I pulled out the other bouquet.\n\n\"This one is yours.\"\n\nShe was all smiles again. Leaning in, she whispered in my ear.\n\n\"They're lovely, thank you. If you can be that thoughtful, maybe you can be trained on how to use a phone. It's simple really, if you can read. You go to contacts until you reach Eve, and hit the button. It even dials for you. I find modern technology very useful, wouldn't you agree?\"\n\nBefore I could frame a suitable response we were through the door. Her mom and dad were waiting in the foyer. I think the gift of flowers was unexpected, and she seemed genuinely happy to get them.\n\nWell, there he was in the flesh. At six four, he towered over my five eleven. He was in pretty good shape, using his home gym and his membership at the capitol religiously. We looked at each other and the room got smaller. We were two alpha dogs, circling, looking for an opportunity to go for the throat. It surprised me, I usually didn't react this way.\n\nHe was infamous for trying to intimidate people by sheer size and strength, and his bone crushing handshakes were near legendary. I knew what was coming when he reached his hand out. You get a pretty good grip and a set of muscles manhandling equipment and picking up two hundred fifty pound rolls of cable. He tried to squeeze and I squeezed back just a bit harder. It caught him totally by surprise. I saw his eyes widen a bit before they became narrow with anger.\n\nEve and Gretta were expecting me to react like everyone else did and rub my hand, but I simply let go and continued with the small talk.\n\nThey looked at him and he just shrugged. Later I learned he told them he had gone easy on me for Eve.\n\nThe lunch was delicious, and I minded my manners. He didn't stay long, citing pressing state business. He did thank me for helping his daughter, and I think he actually meant it.\n\nIt was like sunshine after a cloud when he left.\n\n\"I know he's a bit much when you first meet him, but he really is a good man.\"\n\nGreta said it like she was used to apologizing for him.\n\n\"Nonsense! I found him most interesting.\"\n\nThey looked at me like I had just had a stroke and couldn't form coherent words. Then Greta smiled.\n\n\"Interesting. What an apt decision.\"\n\nThey took me on a tour of the house. Seven bedrooms, large pool house and a heated pool an Olympian would have been proud to train in, a grounds keeping crew, a maid and cook. So this is how rich folk lived.\n\nI thanked the cook for an excellent lunch when they showed me the kitchen. I don't think she got compliments often.\n\nEve had made a slide show out of the photos Celeste made. There was even one or two of the meteors. She stopped on the one of all of us snuggled together. Greta looked at her pointedly.\n\n\"Such a nice picture. I hope in the not too distant future I get an opportunity to enjoy some grand children.\"\n\nEve laughed and kissed her cheek.\n\n\"Relax mom, I'm only twenty two. I have to find a man I like well enough to have children with first. Don't turn me into a brood mare just yet.\"\n\nWe had a pleasant afternoon. Just as I was leaving Greta sent her to get some of the dessert we enjoyed at lunch for later.\n\nAs soon as she was out of earshot Greta started talking.\n\n\"I want to thank you again for saving my baby, in more ways than one. The fact that a stranger took care of her while her good time friends continued to party wasn't lost on her. She told me she had the best time in her life when you took her to look at the meteors.\"\n\n\"Tommy, I want you to be careful around her. Not to be impolite, but you come from different worlds. I don't want either of you to get hurt.\"\n\nBefore I could answer Eve was back. She insisted I take her for a ride in my car, so we spent a pleasant couple of hours just drifting around. She had me stop in an empty parking lot just before we returned.\n\n\"Why are we stopping here?\" I asked.\n\n\"So I can do this\" She replied, shoving her tongue down my throat.\n\nMy high mindedness and good intentions went right out the window. We kissed for about ten minutes before she pulled back.\n\n\"Hon, we have to stop or get naked, and I don't think my dad would want to see his daughter arrested in a school parking lot for being naked and performing lewd acts. Time to go home.\"\n\n..................................................\n\nI think they should install eyelids on phones so we can sometimes out stare them. I lasted until Tuesday before I called. She picked it up on the first ring.\n\n\"I was giving you one more day. You just beat the deadline. Wanna do something tonight?\"\n\n\"Sorry Eve, I have to work tomorrow. Just wanted to hear your voice and say hi.\"\n\n\"Are you at home? Not going back out?\"\n\n\"Yes, and no. I'm in for the night.\"\n\nShe hung up on me. Well, so much for pleasant conversation.\n\nI redialed but it went to message.\n\nTwenty five minutes later her car pulled into the drive. I helped her out, and carried the ice cream she had brought in. I helped her to the couch. For someone about to be all better she sure was helpless.\n\n\"What are you doing?\"\n\nShe smiled that killer smile.\n\n\"You're not going out, ergo I have to come to you. Now give me the remote and scoop the ice cream. And since I had to come out here, I get to pick the movie.\"\n\nShe pulled up a chick flick on Netflix, \"Under the Tuscan Sun\", which I actually enjoyed. I had to get her a drink and another bowl of ice cream, then I had to help her to the bathroom. I hated pausing movies, since I lived alone I had gotten out of the habit. But the company was well worth the interruptions.\n\nShe was misty eyed by the end, snuggled to my shoulder, her hand gripped firmly in mine.\n\nWe sat and talked afterwards. She had just graduated college with a degree in art. I shocked her by showing her my prints of Starry Night and Sunflowers. What can I say, I liked Van Gogh.\n\n\"A Van Gogh fan, I would never have guessed. Anybody else catch your eye?\"\n\n\"Well, I really like Monet, and Manet, but not as much. I'm not to keen on Dali and Picasso, or surrealists. And I like a lot of American artists. The Wyeths, all of them, Whistler, Georgia O'Keeffe, and Rockwell when I want something feel good. Oh, I also like Rodin and Remington sculptures.\"\n\nShe sat there with her mouth hanging open.\n\n\"Wow.\"\n\nWe discussed art, among other things, until midnight. As she left she asked if I had a good suit.\n\n\"Good, wear it Friday. We're going somewhere special.\"\n\nI think she felt me tighten up.\n\n\"Sorry, that came out all wrong. If you're not busy, the art museum in the capital is having a small event. I don't know if you heard, but there's a traveling exhibit of Monet works touring the country. The grand opening is Saturday. It's a preview, for sponsors and invited guests. Our family is always represented, and this year it's my turn. It would be nice to go with someone who actually understood what I was talking about. Please come with me.\"\n\nI was a sucker for saying yes, and she knew it.\n\n\"Next time we date, you pick. If you can top our last one, I will be suitably amazed.\"\n\nBefore I could respond, she gave me one more kiss and was gone.\n\nI called Celeste, and she called Eve, so I was able to get a nice, presentable suit for Friday night. She insisted we take my car. It was my first instance of valet parking, and I'm sure it showed.\n\n\"Don't worry, they won't get a scratch on it when they joyride.\" She said, then laughed at my reaction.\n\n\"Your car will be well taken care of. These people are professionals. Now, let's mingle.\"\n\nI recognized a lot of the people, shakers and movers in our state, and was surprised most of them were pleasant companions.\n\nShe introduced me to a woman in her late fifties and we got into a discussion over whether Van Gogh really committed suicide or if he was in fact shot accidentally by a group of teen boys who had been tormenting him at the time. A few minutes went by and I noticed Eve was gone. I felt guilty for ignoring her, and looking around the room, found her in deep conversation with two men our age. \n\nShe caught my eye and I think she saw the flash of jealousy. She had a hard time controlling her smile when she rejoined my side.\n\n\"Who were you talking to?\"\n\nHer smile got a little wider.\n\n\"Nobody, darling, just an ex boyfriend or two. Tell me, did you like Vivian?\"\n\nTrying to cover my jealousy, I answered\n\n\"She's a very sharp woman, and she looks familiar somehow. Is she married to someone in the public eye?\"\n\nBy now she was grinning.\n\n\"No, but her husband is. She's the Chief Justice of the State Supreme Court. I hear she was a terror in her day as an attorney. When a lawyer gets to argue in front of her they're both honored and scared, she has a reputation for being brutal.\"\n\n\"Wow. I thought she was just a nice lady. She's sweet.\"\n\nI felt a tug on my arm and turned. It was Vivian.\n\nShe was a small woman, and she pulled me down, surprising everyone by kissing my cheek.\n\n\"Thank you, Tommy, I've been called a lot of things over my career, and that was one of the nicest.\"\n\nShe looked over at Eve.\n\n\"Eve my darling, I insist you and this nice young man join my husband and I for dinner in the near future.\"\n\nShe turned and gave me a card.\n\n\"Here, just in case she forgets my number.\"\n\nFlashes had been going off randomly as photographers got shots for the papers and state magazines.\n\nEve was floored. It was all she talked about on the way home.\n\n\"Dad is gonna have a fit. He's been trying to get some private time with her for ages. You must have made quite an impression.\"\n\n.................................................\n\nWe were on the cover of the art and social sections of the Sunday papers across the state.\n\nThe art section identified me as a local critic, based on a flippant remark Vivian had made to a reporter about what a discerning eye I had. They had captured the kiss she had given me, and several shots of Eve and I in groups and separately.\n\nThe society page had one of us together and several of us in groups of important people. They did identify me correctly as a local businessman, and speculated on our relationship.\n\nEve and my family found the whole thing vastly amusing. Eve told Celeste that if anybody asked she would identify me as her boyfriend. It made me smile.\n\nWe started spending a lot of time together, she was at my house two or three times a week, and we went out every weekend. I was falling in love, and fighting it tooth and nail. Our worlds were just too different. It would never work. Still, I never tried to break it off.\n\nCeleste and Eve had become friends, to the point where when she wanted to take Amy on a date with us she agreed. I was the last to know, as usual.\n\nIt was my turn to pick where we were going, and the state symphony was in town. I had told her, and she told me not to worry about tickets, her family were patrons, and one of the perks was free tickets.\n\nEve picked up Amy and Celeste up the day before and they took Amy shopping for a dress. Celeste said later it made her uncomfortable at first, she had never entered many of the shops they went to. Amy loved being the center of attention. She flounced and twirled, and wheedled, and ended up with three dresses instead of one. Eve refused to let Celeste pay for anything, reminding her it was her treat. They lunched at a really nice tea room Eve frequented. Amy was awed.\n\nShe hadn't told me who was going with us, just that it was someone dear to her.\n\nCeleste and Amy showed up giggling an hour before we were due to leave. Eve immediately rushed Amy into the guest room, leaving Celeste with me.\n\n\"Has she told you yet?\" She was smiling that smile again.\n\n\"Has who told me what?\" I replied, trying to get my tie straight. She came over and helped me.\n\n\"Eve. Has she told you she loves you yet?\"\n\nI'm glad she was handling my tie, I would have strangled myself.\n\n\"No, and I think you got it wrong.\"\n\n\"Bullshit\" she snorted, smoothing my tie.\n\n\"She's in love with you, you're in love with her. Don't try to argue, I see the way you look at her. She's perfect. Beautiful, rich, and in love with you, it just doesn't get any better.\"\n\nShe saw the look in my eye.\n\n\"That's just it. She's way out of my league. All I could ever offer her is me, and at best a lower middle class lifestyle. She'd get bored pretty quick. No, even if I did love her, it's doomed from the start.\"\n\nEve and Amy swept in at that moment. Eve looked stunning, the knee length, standard little black dress and simple pearls. Amy was almost a miniature version, her simple little smock highlighted by a sash and a little gold locket.\n\nThey both twirled for us while Celeste took photos.\n\n\"How do we look, Uncle Tommy? Aunt Eve said we'd be the two hottest girls at the concert. Do you think so?\"\n\nI scooped her up.\n\n\"Your Aunt Eve is correct, as usual. Now, shall we go?\"\n\nAfter kisses and hugs, Celeste went back home, telling me to bring her back after lunch tomorrow. She had a tear in her eye.\n\n\"You guys look so perfect together. I can't wait to see how beautiful your children will be. Have a good night.\"\n\nWith a final admonition to Amy to behave, she was off.\n\nHeads turned when we entered the hall. They should, I was with two beauties. Amy insisted on walking between us, holding both our hands.\n\nWe didn't have to worry about Amy. I was afraid she would get bored and restless. She sat, enthralled by the music. We were front row center, and the maestro noticed her. During an intermission, knowing who she was, he came and chatted with Eve. Turning to Amy he asked if she was enjoying the evening.",
        "\"Very much, sir. It's great! Can I have your autograph?\"\n\nThis pleased him no end. After the intermission, he talked about the pieces they would be performing next, and singled Amy out. The crew put a spotlight on us.\n\n\"Ladies and gentlemen, here is the future of classical music. This is Miss Amy Yount, and her parents. Amy, this next piece is dedicated to you.\"\n\nShe got a round of applause, and became a dedicated fan of classical music for the rest of her life. It got even better after the concert, when Eve took her back stage to meet the musicians. Most everyone signed a poster of the orchestra for her, and they gave her two cds. She insisted we play them as we drove. She was asleep before we got home. I carried her into the guest room, and Eve got her into her pajamas. She roused enough to insist we both kiss her goodnight.\n\nEve excused herself, and Amy, with the directness of youth, started asking questions.\n\n\"Are you in love with Aunt Eve?\"\n\nI tousled her hair. I did that a lot when she was around. \n\n\"I'll tell you if you can keep a secret. I am.\"\n\nShe giggled.\n\n\"I don't think it's a secret. Mom keeps telling me she'll be my real aunt pretty soon. That makes me very happy. Tell Aunt Eve I love her too.\"\n\nShe was asleep again before I had the lights off.\n\n..................................................\n\nThat was the first night we made love. When I came out of the guest room I couldn't find Eve. Her car was still in the drive, so I knew she hadn't left. I called out, softly. Her answer came from my bedroom.\n\n\"Shhh. You'll wake Amy. Come to bed, honey.\"\n\nShe was standing by the bed, in a gown that was both sexy and demure.\n\n\"Come on. I'm tired, and don't want to drive home. I've slept with you before, remember? And I promised Amy we'd have breakfast together.\"\n\nI knew if we lay down together we would make love. I knew it would never last, and I could see heartbreak ahead.\n\n\"Which side do you want?\"\n\nShe snuggled up to me. What started out as a simple goodnight kiss became intense pretty quickly. She was tugging my sweat pants down at the same time I was trying to lift her gown off. Because of Amy, we didn't get loud or out of control. I was glad, because we made slow, sensuous love instead of having hard steamy sex.\n\nIt was beautiful beyond words. I kissed her from her forehead to her knees. Her lean body responded well. When I spent time kissing her smooth mound she shivered, and when I moved lower she let out a soft moan. I let my tongue wander everywhere before concentrating on her swollen clit. She was gasping into her pillow as she came. She wanted to return the attention, but I had to have her.\n\nI entered slowly, as we adapted to each other. It was straight missionary sex, getting faster and faster as our passion built, until I was slamming into her as she moaned and wrapped those long legs around me. I swallowed a roar while she screamed into her pillow. I collapsed beside her, exhausted.\n\nWe cuddled for a moment before she got up and used the bathroom to clean up a bit. She had her gown back on when she came out.\n\n\"Put your bottoms on.\"\n\n\"Why?\"\n\nShe looked at me, smiling.\n\n\"Because more than likely a little girl is going to wake before us, and the first thing she's going to do is come in here. Now, get dressed.\"\n\nAs we lay together, just before I went to sleep, she whispered in my ear.\n\n\"So, this is what married with children sex is like. I could get used to this, although an occasional trip to grandparents would be a must. I want three, honey. Goodnight.\"\n\n...............................................\n\nI woke up feeling disappointed for some reason. Then I realized I was alone. I didn't like it.\n\nI wandered into the kitchen. There was a note on the table.\n\n\"Good morning, sleepy head. You missed breakfast. Your girls had some errands to run. Amy is staying again tonight and we had to pick up a few things. Meet us at mom's, three o'clock. Love you.\"\n\nI did some preventative maintenance on my equipment, cleaned the kitchen, mowed the lawn. Finally, I cleaned up and made the drive.\n\nThey were in the pool. Amy, Eve, and even Greta had on matching bathing suits, a simple one piece, all in yellow. They were obviously new.\n\nAmy clambered out of the pool and gave me a big hug, soaking me. Eve followed, soaking me even more.\n\n\"You were going to end up wet anyway. Your suit is in the pool house, hurry up!\"\n\nSo I changed, and we played in the pool until dinnertime. Eve and I linked hands and threw Amy as far as we could, hearing her laughter until she hit the water. Amy insisted we do the same for Greta. I think it was the first time I ever heard her laugh.\n\nAmy was so worn out she had to have a nap before dinner. Eve put her in her old room.\n\nShe came back with a surprise announcement.\n\n\"Sorry, but you get to spend the night alone. Mom, Amy, and I are having a pajama party, She's sleeping here tonight. Celeste knows. Now, do you want dinner, or would you rather go home and see how loud I can get?\"\n\nWe tried our best to pound each other into mush, and we pretty well succeeded. She was vocal, not ashamed to tell me what she wanted. We started out with oral, and then went into so many positions I couldn't keep track of them all. We fell back, sweaty and exhausted.\n\n\"I have to go now, love. Amy and Mom are expecting me. I can think of nothing I want to do more than stay in your arms, but we have the rest of our life to do that. I'll see you tomorrow, collect us about one.\"\n\nI lay back as she showered and left. My house never felt so empty.\n\n................................................\n\nSo we became an official couple. Eve spent more and more time with me, and moved clothes until we had to put some in the spare bedroom. I woke up one day and realized she had been there three weeks without going home once. I asked her about it. She kissed me.\n\n\"I am home, silly.\"\n\nWe lived together for another month or two before we had our first serious discussion about our future.\n\nAmy had become a surrogate daughter, spending about one weekend every three weeks. I watched them bond. One night after Amy was in bed and she was snuggled up to me on the couch, she turned to me.\n\n\"I want a baby.\"\n\n\"What?\"\n\nShe stirred.\n\n\"I'm sorry, that came out wrong. I want to have your baby, our baby. We love each other. It's time for us to make future plans.\"\n\nThis was the talk I was dreading.\n\n\"I love you too. More than I can say. But we're so different, You walk through doors I could never open. You have more money than I'll ever make. Sooner or later you would miss your old world, then where would we be? In a bitter fight that I'd lose over my children. I don't think you'll be satisfied with me.\"\n\nI wasn't expecting her response. \n\nShe slapped me so hard I fell off the couch. She rushed into our bedroom. She came out dressed in one of her 'mommy' gowns and went into Amy's room. They were both gone when I got up.\n\nA little after noon she came back. I came out to meet her. She slapped me again, just as hard.\n\n\"You asshole! I love you and this is what you think? I'm just a shallow rich girl out for a lark? Damn you straight to hell, Tommy Yount! I'm going back to Mom's for awhile. Think about what you want, and just so you know, if I had known you felt like this I would have given every dime away to keep you. I never thought I'd say this to you, but you're a fucking idiot.\"\n\nShe jumped back into her car and I didn't see her for three weeks.\n\nTalk about a backlash! I was an instant asshole to my family, her family, and all our friends. Amy refused to speak to me.\n\nIt isn't often a supreme court justice calls you to advise you on your love life. I know now how she earned her reputation.\n\n\"In simple legal terms there is no law against being a dumbass, but I'm looking for a loophole, so I can sentence you to make it up to her. The poor girl came to me trying to get me to help her get rid of her wealth so she could be with you. I've always respected you Tommy. You're honest, forthright, a fine young man. Don't make me think less of you because you won't listen to your heart. Go to her! She'll take you back in an instant. Please, Tommy.\"\n\nI thought about it for a few days. Then I did some shopping and made some plans.\n\nI called Greta and asked if I could come by. She wasn't happy.\n\n\"Are you sure you want to see her? You know my husband hates you, but even he isn't happy about the breakup. She's just now stopped crying. I warned you not to hurt her, but you didn't listen. You made her fall in love with you anyway. I was so proud of her, and was getting used to the idea of grandchildren in the near future.\"\n\nI begged, I pleaded, and finally convinced her.\n\nShe got Eve to answer the door when I came over. She wasn't expecting me, and she paled when she saw me on my knees.\n\n\"I'm here to beg you back into my life. I'll do anything. Please give me another chance. Every resource I'll ever have from this moment on will be used to make sure you have a happy life. Please Eve, forgive me. Oh, and if you do, will you marry me?\"\n\nI held out the ring, not daring to look up. After a few seconds I couldn't stand the suspense and did look up. She wasn't there. Well, I had given it my best. Greta caught me before I got to the truck.\n\n\"Vivian was right, you are a dumbass. Get in the house right this second. I have an hysterical daughter on my hands, and you're going to fix it.\"\n\nShe tried to look stern, but a smile leaked out.\n\nWhen I entered she was in the foyer, and pounced on me so hard we both fell. She was trying to kiss me and talk at the same time.\n\n\"I love-kiss-marry-kiss-ring-kiss-now!\"\n\nI pulled it back out of my pocket. She slipped it on and looked at me.\n\n\"I'm making you a promise in front of my mom and God. This ring will never leave my finger while I live. Never.\"\n\n.................................................\n\nHer Dad was furious.\n\n\"I forbid this! He's a low class gold digger, all he wants is your money. You are not to marry him, is that clear?\"\n\nIf he expected her to roll over he was badly mistaken. I wasn't there but Greta told me about it later.\n\n\"It's not up to you. I'm of age and not dependent on you. You don't have to love him as long as I do. Be warned, if you try to coerce him in any way, or try scaring him, I'll be gone whether I marry him or not. And if I go, so does your campaign money.\"\n\nI didn't know for a long time, but he always got a sizable donation, and even a loan or two from her trust fund during election time. The money would be hard to make up if it was gone. She didn't actually gain control of the money until she was twenty five, but she did meet regularly with her financial advisers, and they were very sensitive to her wishes, partly to keep the money with them when she gained full control. Her grandfather had wisely kept her father away from any access to the trust.\n\nHe wouldn't let it go, and tried everything he could to break us up. It was hard because all I ever did was go to work and come home to Eve.\n\nWhen he tried to set me up with a woman at a company picnic one of my employers held, it was the last straw. It was so obvious it was pathetic. No one knew who she was, no one knew who invited her, and when she started following me around I lost it.\n\nEve couldn't come, she worked with several charities and was at a budget retreat.\n\nI got a friend who was filming his kids to get a few good shots of her. She was dressed sexily, but conservatively. She made it a point to be near me, brushing up against me slightly at every opportunity. I acted like I was interested, and proposed we slip into a secluded gazebo for 'conversation'. She had her breasts out before we sat down. I hit the video app on my phone.\n\n\"I'm sure you've got somebody recording this, so you don't mind if I do it too, do you?\"\n\nI motioned to my friend, who had come out of the trees with his camera.\n\n\"A second opinion.\"\n\nShe looked frightened.\n\n\"Now, shove your tits back into that excuse you have for a top and listen to me. You tell good ol' Stan this shit has officially stopped being funny. I'm not fucking around anymore. Ask him how it would look if the press found out he was using hookers to seduce me to block my marriage to his daughter. If he's willing to do that, what's he done in the past when he wanted something to happen? I don't have a lot, but I'll make it my business to try and find out. Take that message to him.\"\n\nShe denied everything, of course, then blustered she would tell Eve I tried to seduce her if I didn't keep quiet.\n\n\"If you didn't know her dad, how did you know her name? If I were you, I'd quit while I was losing, go back to Stan and say it didn't work. Bye now.\"\n\nI showed Eve the video, including the tag number of the car she was driving. It was traced back to a rental company. The woman was traced back to an escort service.\n\nA few discrete phone calls later we had the owner of the escort service she worked for. Apparently she and Stan had a history. When I told Eve she went ballistic.\n\nHe was in the capitol at work when he got the call.\n\n\"You miserable asshole! Fuck you! You are not invited to the wedding or the reception. Don't call, don't come to see me. If you're very lucky, I'll send you a picture of your grandchildren every year or so. And you better start networking, your campaign money well just dried up. Maybe I'll call the local papers and talk about what a loving father you are, maybe play a little video for them.\"\n\nIt shook him pretty bad. It took three weeks of apologizing to calm her down. And it increased his hatred of me.\n\nHe insisted strongly on a prenupt, and for once I agreed with him. Eve had a fit.\n\n\"We don't need this! We're going to be together forever. I know you wouldn't hurt me.\"\n\nI talked her into it.\n\n\"It's just a piece of paper, honey. We'll never use it, and it will make everyone more comfortable. More importantly to me, it'll send a strong message that I love you, not your money.\"\n\nHer dad had his lawyers draw it up and sent it to the lawyer I used for business. I liked him and he had agreed to act for me. He called me when he got it.\n\n\"Have you read it?\"\n\n\"No. Just tell me what it says.\"\n\nHe sighed.\n\n\"Well, it's thirty pages long. Basically it says if you guys split up, she gets everything. All her money, your business, sole custody of any children you may have. And that's just the high points. What would you like me to do?\"\n\nI drove over and looked at it, made a copy and sent it back. I had written in thick black marker.\n\n\"NO WAY IN HELL!\"\n\nI showed it to Eve and she couldn't even speak for a few minutes. When she calmed down she asked me if I seriously thought she had approved it.\n\nI laughed.\n\n\"Not a snowballs chance in hell.\"\n\nEve said she would have another lawyer draw one up. Tensions, already high between her father and I, were threatening to boil over.\n\nI decided to put the whole thing to rest when I wrote my own prenupt. It was less than one page. I had my lawyer couch it in legalese, and presented it during lunch with her parents. Eve had already seen it.\n\nThe gist went like this:\n\n\"If the marriage should fail for nonsexual reasons, each party will leave with what they brought into it, dividing anything accumulated together fifty fifty.\n\nIf children are present, arbitration will be required to ensure custody will be fair to all. The parties must agree to the decree of the arbitrator without recourse to litigation.\n\nIf the parties split due to infidelity, the offending party will immediately surrender all rights to any children, possessions or wealth brought into the marriage, unless they choose the following alternative. The infidelity must be documented in a manner that is irrefutable.\n\nIf the offending party will admit the infidelity and apologize in a public manner decreed by the offended party, the prior agreement will be in force.\"\n\nGreta thought it was cute. Stan went ballistic, but it was too late, it had already been signed and recorded.\n\n.................................................\n\nWithout a doubt it was the biggest wedding the town had ever seen. We had to hold it in the citizens center because we couldn't find a church big enough. Five hundred guests. About forty were mine, mostly family. Eve was responsible for about eighty. The rest were political cronies of her dad. Greta told me later it cost about about two hundred thousand.\n\nCeleste was a bridesmaid, Amy was flower girl. Vivian helped officiate the service. \n\nWe went to Cancun for three weeks, came back tanned and tired.\n\nI thought she was going to kill me. We would do some activity like scuba diving or horseback riding, and she would look at her ring. Within thirty minutes we were in our suite, in a secluded cove, the jungle, or any secluded room we could find, banging like bunnies.\n\nWhen the prenupt came up, we had a long serious talk about her money.\n\nI surprised her by acknowledging I would never have the money she did, and while I wasn't adverse to using the money once in a while for vacations, education, and lifestyle improvements, I didn't want to depend on it.\n\nWhat I didn't want and refused to do was give up my business. I still intended to work, being proud I had been able to open and operate a successful business at my age.\n\nI gave up my little two bedroom house, renting it to a cousin. Our wedding present from her parents was the money for a new one. Her dad had already picked it out, three doors down from their house. He was outraged when we refused.\n\nIt was even bigger than his, eight bedrooms, media room, so on.\n\nEve liked it, but wasn't in love with it. The fact that her father hand picked it wasn't lost on her. We found a nice little plot of land about twenty minutes away, and I let Eve pick out what she wanted.\n\nThe land sloped a bit, and she worked with the builders constantly. Four bedrooms upstairs, with a full basement. Mostly brick and stone, with two fireplaces. She went over every detail with me to make sure I agreed.\n\nShe took great pains over the basement. It would be the domain of our children, a combination playroom/entertainment center. She had already planned the birthday and slumber parties.\n\nThis led to a long discussion about children.\n\n\"How many do you want?\" she asked.\n\n\"As many as we can love\" was my answer.\n\nI must have got it right judging by her smile.\n\n\"I don't think I can physically produce that many. How about starting at three and going from there?\"\n\nShe wanted to get pregnant right away, but I convinced her to wait.\n\n\"Let's enjoy each other for awhile first, honey. You and I both know when we have kids the focus will shift. It will be all about them, what we want will always come last. That's how it should be, and I don't have a problem with it. But, for a little while, I want to be selfish and keep you to myself.\"\n\nAgain, I must have said the right thing, judging by the loving I got that night.\n\nEve usually took the lead when we made love. I was no virgin, but she was far more experienced than I. We had a long talk about it, just after we got engaged.\n\nTo her credit, she brought it up.\n\n\"I need you to know everything. You saw me at my worst the first day you met me. I was a rebellious, spoiled little wild child. Mom was great, but she was never really forceful. You know what my dad is like.\"\n\n\"I did many things I'm now ashamed of. I don't really want to talk about it, but I will if you need to know. Suffice to say, I wasn't a very nice person.You know I had an STD, and I'm ashamed to say it wasn't the first. I don't know how I dodged AIDS or Hepatitis. Luckily, I was afraid of drugs, and used alcohol as my crutch.\"\n\n\"Falling of the balcony was my turning point. I was immobilized in that hospital bed, and I had plenty of time to think. Even if you hadn't rescued me, I like to think I would have changed anyway. Meeting you and your family opened my eyes to the way the real world worked, not my fantasy 'party' lifestyle. I wanted that, then I realized I wanted you.\"",
        "\"Of all my party friends, I only keep in contact with about five, all girl friends from college. I could care less about the rest. It shames me to say it, but I've had sex with a lot of guys. But I've only had one lover, you. I promise you, I'll never go back to the way I was. What I want with you is far too valuable to ever risk.\"\n\nThere was a lot of sniffling during her little speech, and I could tell it took a lot out of her to make it. I hugged her tightly.\n\n\"Honey, the past is the past, and there's nothing we can do about it. I didn't know you then, I can only base my feelings for you on what you've done since we got together. I wake up every morning with you beside me and savor it, thinking how lucky I am. So no, I don't need to hear details. It wouldn't matter or change you from who you are now. That will always be enough for me.\"\n\nAnd it was, for three years.\n\n..................................................\n\nHer Dad was filled with burning ambition. He had done two terms as Speaker of the House, and had set his sights on the governorship. He and his committee had spent three years laying the foundation. The week before he announced, he had Eve and I over for dinner. He told us his plans, saying he needed the support of all his family. He was looking directly at me.\n\nAlthough I didn't like him personally, he was a good politician and had orchestrated several pieces of legislation that I liked, including one that actually benefited small businesses.\n\n\"If you're directing that at me, Stanley, I have no problem supporting you.\"\n\nHe beamed.\n\n\"Good, good. I need you to know you two will have to appear with me from time to time. The committee may even asked you do a commercial or two. Think you can handle that?\"\n\nI felt Eve lock down on my hand. I shrugged. I hated the bastard, thought he was a slimy son of a bitch, but I loved his daughter.\n\n\"Sure, as long as it's not too time consuming.\"\n\nHe rushed to reassure me.\n\n\"One or two days at the most, I promise.\"\n\nShe seemed on edge as we drove home, holding my hand like it was a lifeline. Something felt odd, but I couldn't place it.\n\n\"Thank you, honey, for helping my dad. But promise me you won't let politics seduce you. I don't think I could stand it.\"\n\nI couldn't understand her intensity, but tried to reassure her.\n\n\"No worries, babe. My volunteer work opened my eyes enough to realize I could never be a politician. You have to trade so much of yourself away there's nothing left of you at the end of the day. Not a lifestyle I could enjoy.\"\n\n.................................................\n\nMy career as a member of various committees began by accident. Eve served on a few to keep herself busy, but I usually kept away from that part of her life. I even resented it from time to time when it took time away from us. But they were all good causes that she believed in, so I kept my grumbling to a minimum.\n\nThis one came looking for me, and I couldn't turn my back. My first cousin had a daughter that had contracted scarlet fever when she was young. Her temperature rose to one hundred and nine, giving her a fever induced heat stroke.\n\nIt left her mentally challenged. Her mind never developed past that of an eight year old. She could do most mundane things, but she would never be able to support herself and lead a full life. Her parents were devoted to her.\n\nThe state had a program that had been in operation for several years. It was a social center/workplace for the adult handicapped. Anyone over school age that could function in a social setting could participate. Vans were supplied for transportation. Local companies would subcontract work, packing simple boxes, folding t shirts, one paper tube manufacturer had them punch holes in the end of tubes. They each drew a check at the end of the month, usually just above or below a hundred dollars. It gave them a sense of pride to be contributing to society and earning their own money.\n\nThe federal grant was up, and the state refused to pick up the program, reneging on the promise of the previous administration. We had a month to come up with enough money to operate until funding could be secured.\n\nThe fallout would be catastrophic for the families. Parents would have to quit jobs to provide care, incomes would decrease, houses could be lost.\n\nI was asked to attend the organizational meeting because of my connection to politics via my father in law. They were sadly mistaken. I deliberately distanced myself, never having been interested in politics to begin with.\n\nIt became pretty obvious there were no natural leaders in the group, most were in a mild panic.\n\nFinally my cousin asked me to say a few words.\n\nI took the podium. \n\n\"Look, the first thing we have to do is calm down. Yes, it's a terrible problem, but panicking will get us nowhere. As I see it, the first thing we need to do is to come up with enough operating money to last another month. That will give us time to appeal to the ones in power and the public. You need a spokesperson, a planning committee, and some direction.\n\n\"Now, anybody got any ideas how to come up with operational money?\"\n\nVarious fundraisers were discussed and considered. Tentative plans were formed.\n\nThe debate got a bit heated when over the chairmanship. Our group were composed of two small counties, tied together by districts. Both counties felt one of their own should be the leader.\n\n\"Why not have co-chairs, one from each county? That way each could handle their own, and meet once a week with the committee to review progress and entertain suggestions.\"\n\nThis was quickly agreed on. The committee was formed, three people from each county. A local businessman was proposed[read lobbied]and accepted from the other county. Then I got blindsided.\n\n\"By unanimous decision, we have only one choice for us. Tommy Yount\"\n\nThere was a lot of applause.\n\nI hesitated briefly, but accepted.\n\nThe other chair made a speech, making promises without thoughts of how to make them come true. I took a totally different approach.\n\n\"This is going to be hard. The politicians have made their minds up and they're going to be difficult to sway. Our work is going to be cut out for us.\"\n\n\"One thing I do know. Each of his has some kind of talent that will help us, and knows someone else who can do the same. We need to find and exploit those talents. We need researchers to look for loopholes in the old grants or the possibility of new ones. We need to work the politicians on the local level for some stopgap money. We have to prepare to work on the state and federal levels. If we can't get them to commit we need to find out why, and make that available to the media. One thing a politician hates more than anything is adverse publicity.\"\n\nOur first appeal was to our county commissioners. We figured out what it cost to run the program for a month and asked for a one time grant of thirty five hundred. I had talked to one of the local radio personalities to see if he could help with a fundraiser. He not only agreed to help but put me in touch with their news department.\n\nWe made sure we were on the agenda, and showed up in force. Parents, siblings, friends, and of course all the adult challenged showed up, overflowing the meeting room. I had met with the county commissioners two days before to give them information, facts and figures that would warrant keeping the program going. They assured me we would probably get the money. When the time came, I made the request, stating our position as concisely as possible, citing facts and figures that showed that discontinuing the program would actually cost the government five times the amount in other costs.\n\nWhat surprised me was the amount of media attention it generated. My radio friends were there, but there was also journalists from two local papers, and a TV news crew that had been tipped off by my DJ friend.\n\nWe made the eleven o'clock news and the morning programs. The response numbers were huge, guaranteeing follow up interviews and other news crews.\n\nWe all got a surprise when the senior commissioner responded to out plea.\n\n\"We appreciate you bringing this to our attention. All residents of this county deserve respect. This is a worthy program that should have never faced termination. Our state government did a woeful job in not giving the parents and caretakers warning or time to prepare.\"\n\n\"That being said, we intend to give you all the help we can. Unfortunately, we can't honor your request for thirty five hundred dollars. Sorry.\"\n\nThere was a collective gasp in the room. The commissioner, all of them actually, were grinning.\n\n\"We feel the amount is too low. Instead, we feel five thousand is an acceptable amount. Use the money wisely. Hopefully our neighboring county will feel as generous.\"\n\nThe room echoed with the applause, while I stood there in the glare of the TV lights. We made sure at the end of the meeting every one of our group shook the hand of every commissioner and thanked them. One of the challenged, a woman in her middle age with a mongoloid face, cried and hugged every one, thanking them in her halting speech. The media ate it up.\n\nThe project took on a life of it's own. People we didn't know were calling offering monetary support and volunteering time. I gave an exclusive interview with the radio station to thank them, going over the progress we were making and talking about the help we were getting. It turned into a three day a week update.\n\nMy first brush with politics was a walk in the park. When we got to the other county commission it was a whole different ball game. The head Republican and the head Democrat, besides differing politically, hated each others guts personally.\n\nThe Republican, a florid faced blond giant, slammed his hand on the table during our meetings.\n\n\"No! We don't have the money for this. The feds and the state screwed this up, let them fix it.\"\n\nThe Democrat, a small man with a dark complexion and thick black hair, came right back.\n\n\"Can it, Jim! It doesn't matter at this point who's responsible. The media is all over this thing. These people we're going to see Thursday are all locals. Besides doing the right thing, if you tell them no it'll amount to political suicide. So we may have to give up a project or two, this is more important. Tell you what, we'll take a vote right now, and I tell you now, I'll make it my mission for the public to know how we voted, and who voted no. Want to take that chance with your political career?\"\n\nThey squabbled for a bit, but in the end it was never in question. The vote was unanimous. The one thing the Democrat insisted on was that the junior Democratic commissioner, who was facing an election battle, be allowed to present the money.\n\nThe night of the meeting the room was again packed, except this time there were three TV crews, six newspapers, and four radio stations being represented. The crowd knew well of the relationship of some of the commissioners, and many expected[hoped]there would be fireworks.\n\nIt was exactly the opposite. There was a sense of calm. They saved us until last. My counterpart couldn't be there, so I did the speech.\n\nIt was agreed, that when it became time to award the money, the Republican would introduce the junior Democratic commissioner, in a show of harmony.\n\nThat wasn't what happened.\n\nThe senior Republican stood.\n\n\"This is a very good cause, a viable program that does a great service to the community. We're aware of our sister county going above and beyond. We feel that we, too, should give more help than asked for. My esteemed colleague was going to announce the grant, but just a bit ago we had a bit of a conference. We were going to give your organization seventy five hundred, but the esteemed senior Democrat did a small poll, and we decided to give you ten thousand instead, mostly due to the kindness of our Democratic members. I'm sure they'll be glad to field any questions. As Republicans and human beings, we are happy to follow their lead.\"\n\nHe slammed his gavel down. \"Meeting adjourned.\" He smiled as he left, watching his competition give statements to the press.\n\n.................................................\n\nOne afternoon I came home from work to find four guys waiting for me in my living room. Eve kissed me and introduced them as new volunteers.\n\n\"Listen to them, honey, they could be a lot of help.\"\n\nThey were all political science majors working on a master's degree. The leader, Thad Emerson, gave me their pitch.\n\n\"I'm not going to lie to you, we're going to use this as part of our school work. It's going to be in our thesis work, kind of a David vs Goliath battle, a grass roots organization against the political establishment in the technological age. We've already got some stuff worked up we believe can help you, if you'll have us. Where's your headquarters?\"\n\nEve, who had been listening quietly laughed and pointed at our kitchen table.\n\n\"There you go.\"\n\nThad was shocked.\n\n\"You don't have an office? How do you get anything done? Never mind, do you have a list of your members and what they do?\"\n\nHe turned and pointed at one of his friends.\n\n\"Billy, get on that. We're going to need an office and a conference room. Phones, computers, copiers, anything you else you think we might need.\"\n\nHe pointed at the other two.\n\n\"Jerry, you research grant history and see if anything else is out there. Eve told me they have a few locals on it, touch base and see what they've got. Zane, go through their history and see which state and federal politicians are for, against, or undecided. Find anything you can. And particularly, who's up for reelection.\"\n\n\"What are you going to do?\" I asked.\n\nHe grinned. \n\n\"Stick like glue to you. If your group approves, I'm your new campaign manager. It's not a traditional campaign, you're not running for office. But you are trying to sway public opinion, and I'm a damn good speech writer. Are we in?\"\n\nI shook all their hands, and my core group was formed. They were all on individual studies, so their time was their own.\n\nIt was the one of the best decisions I ever made, and I got four lifelong friends out of it.\n\nIn forty eight hours we had a committee headquarters, the offices of a defunct textile mill. The owner gave us the space free but we had to pay for the power. I was a little concerned about that, but Thad convinced me it was necessary.\n\nSoon we looked like a regular office, people working phones and computers. it was bevy of activity from early in the morning until late at night. Thad asked me if we were coordinating with the other committees.\n\n\"What other committees?\"\n\nHe was shocked.\n\n\"Surely others have organized. After all, this is a state wide problem. We need to coordinate our efforts, present a united front. The more people, the more potential voters. The more voters, the more leverage we have with politicians. Those state boys aren't gonna be as easy or as eager as the locals. Never mind, we'll look into it.\"\n\nIn a week his technowizard had the names and addresses of the people affected by the loss of the grant. We had a fourth class mailing permit now, and mass mailings to all registered voters were going out regularly, in addition to internet contact. Mostly updates and pleas urging them to contact their representatives at both state and federal levels and voice their approval for the program to continue. We never asked for money.\n\nThere was a bit of an argument over it. We could use every dime we got, but it made me feel too much like a real politician. Thad got around that by posting our finances on the blog they had created, updated weekly. Every one interested could see at a glance where we were.\n\nSoon unsolicited donations were coming in, some of them quite large. Several of our members were lawyers, and they drew up papers listing us as a nonprofit watchdog group, with a four person committee formed to track the money.\n\nSoon we were getting requests from across the state to help them form groups, and Thad and I were crisscrossing the state, giving advice. People started showing up at our public meetings and conferences to watch us operate. Ninety percent of the state counties were operating their own groups, but we operated as a state alliance. We split the state into four sections and they each elected a representative to meet and coordinate state activities. I was voted president, only one person objected, my counterpart from our group. He got three percent of the vote. It caused a rift that kept getting wider.\n\nWe placated him somewhat by giving him the seat for our part of the state, with me remaining in charge. It worked out well because that way the committee could never be deadlocked. If the vote was tied, I cast the deciding vote. Otherwise I didn't have to vote.\n\nThings got a little tense on the home front when we discovered Stanley was one of the biggest opponents to renewing the grant. He tried to talk me into toning down a little, when we posted a list of all the state and federal politicians who were for and against renewing.\n\nI was even asked about it in one of my interviews.\n\n\"How do you feel about your father in law opposing this?\"\n\nI had worked with Thad, knowing the question was coming.\n\n\"I have great respect for my father in law. The beauty of our form of government is we can agree or disagree without rancor. He's done many good things for the state in his tenure. It's just in this case I think he doesn't have all the information he needs to understand the situation fully. But either way, he can't help but follow his belief in what is right for the state. And I respect him for it.\" \n\nGreat job of walking a tightrope, huh?\n\nIn the end, we lost the grant, but got two new federal and one state grant that more than doubled the funds the programs had gotten previously.\n\nStanley was a gracious loser in public, actually supporting the approval of the state grant. His quote about my role?\n\n\"I'm happy, and glad he's not the least bit interested in politics. He's too good at it. He did a great thing, a service to the state, and we're all appreciative of his efforts.\"\n\nPrivately he held a grudge.\n\n................................................\n\nThis episode led to me serving on various committees on state and local levels. Both parties approached me, urging me to run for county commissioner, training ground for bigger things. Both were surprised to find out I was a registered Independent.\n\nBut if it was a cause I believed in I would help, but never more than one at a time. I almost burnt out crisscrossing the state on the first one, and deeply resented the time it took away from Eve.\n\nVivian and I had become fairly close. She found out early she couldn't have children, and adopted us, me in particular. She was the one who started recommending me for committees.\n\n\"You'll do a good job, and you'll follow your conscience, something rare these days. It's why you'll never be a good politician, and I love you for it.\"\n\nStanley, of course, resented it, and tried to get me to influence her. It pissed him off when I laughed and refused.\n\nThe capitol had a big Christmas parade every year, and this year she was the Grand Marshall. Eve and I brought Amy, now nine, to watch it. We were her house guests, and Amy, being Amy, soon had her charmed. It was no surprise to me when Amy wound up in the convertible with her, waving to the crowd as they sat up high. Fred, Celeste, and the rest of my family teased her unmercifully later, but they were proud. The announcers tentatively identified her as a granddaughter. Nobody bothered to correct them.\n\nThere was a picture on the front page of our local paper, identifying her as a local. Her classmates were awed, even more so when Vivian made an appearance at her school for career day, at her invitation. It was unannounced deliberately, so it wouldn't disrupt the school.",
        "Things were heating up in the election. There was still ten months to go, but preliminary polls showed Stanley ahead slightly, but close enough to cause concern. He had a pretty good flow of contributions, and was flooding the media with print ads and commercials.\n\nMy business had grown considerably. I suspected at times it was because of my political connections, but I couldn't help who I married into. If any of my customers hinted at bigger contracts in return for my supposed influence, I tried to drop them. I did an excellent job for a reasonable price, so as soon as they figured it out they stopped. I now had four crews working in different locations, so I rarely laid cable anymore unless it was an emergency. I managed and supervised mostly.\n\nEve was proud of my success, and was pushing me to start a family. I surprised her one day by calling her into the bathroom.\n\n\"Watch\" I said, as I flushed her birth control down the toilet.\n\nShe cried for two hours, then went on the internet, looking up popular baby names. The loving I got that night was extra good.\n\n.................................................\n\nThree months later Eve met me at the door, tears streaming down her face. I thought someone was hurt. I held her, trying to get her to tell me what was wrong.\n\nShe finally held something she had in her hand up. \"Test-sob-positive-baby-sob.\"\n\nI went to my knees, dragging her with me. We were gonna have a baby! Soon I was crying as hard as she was. It took us ten minutes before we were able to get up and go inside.\n\nShe had her mother go with her the next day to the doctor. When he verified it, she and Greta went straight to Celeste's shop and told her. Work came to a standstill. Soon the whole family knew, and we ended up having a cookout in the meadow to celebrate.\n\nI think Amy was happier than anyone. She was just past ten, and she told us pointblank if we ever used anyone else to babysit when she got older, she would never speak to us again. Eve told her she was hired. Even wrote up a little contract and signed it. She framed it and hung it on her bedroom wall.\n\n................................................\n\nI did a commercial for Stanley. It was one of the most effective for him to date.\n\nIt was me, in work clothes, running my Ditch Witch. I cut it off, and looked into the camera. There were about a dozen of his political posters behind me.\n\n\"Stanley Wallace?\" I said, in a serious voice, \"Yes, I'm voting for him. His programs for small business owners like me puts him well in front of his competition. He understands we're the backbone of this country, if we go, so goes the state.\"\n\nI adlibbed the next part, thinking they would edit it out, but they liked it so much they left it in. Said it humanized him a bit more.\n\n\"Besides, he's my father in law. My wife would kill me if I didn't vote for him.\"\n\nHe won his primary easily. His opponent did even better, garnering almost a hundred and fifty thousand more votes than Stanley. His team was worried, if he could generate that kind of numbers in a primary, he might actually win come November.\n\nHe stepped up his advertising, until one of his commercials aired at least once an hour on all the local channels. His opponent was single, having divorced years ago and never remarrying. His team pushed this difference, portraying Stanley as a staunch family man. Greta, Eve, and I were dragged along on countless appearances, to reinforce the image. It got pretty old pretty quick.\n\nI cut back, despite his displeasure. I wasn't running for office, and had a business to take care of. Eve came home with me for a few days, then her dad called and she rejoined him on the campaign trail, over my objections.\n\nShe called every night at first, then it would be every few days. He was concentrating on the western part of the state, his weakest area. I would see them on television, and both Eve and Greta were getting thinner, paler, and their smiles were as fake as you could get.\n\nI put my foot down. It was six weeks before the election, and his opponent was ahead by four points. He was going wide open, I don't think he slept more than three hours a night, and expected the same from everyone around him. Eve was six months along, and the pace was getting to her.\n\nI went to the town he was speaking in, unannounced, and tried to take Eve home.\n\n\"Enough is enough, honey. You look worn down, and I'm afraid it's not good for the baby. Your dad either wins or he doesn't, at this point I don't care. Let's go home, I'll build a fire and we'll snuggle. I'll run you a bubble bath, light some candles, rub lotion into that sexy baby bump. We'll love on each other for awhile and sleep ten hours straight. Okay?\"\n\nShe was snuggling to me, hanging on to me like I was a life preserver on a sinking ship. I was shocked when she refused.\n\n\"I can't, honey. I promised daddy I'd stay with him until the election. It's only a few more weeks, then it'll all be over. I'll be home, we'll be fine, it'll all be over.\"\n\nI didn't like hearing that at all, and I really didn't like the look in her eyes. They were the eyes of a trapped animal.\n\n\"Listen to me carefully, Eve. I don't like the way you're looking, I don't like the way you're acting. You seem to be hiding something. Look me in the eye, tell me what's going on.\"\n\nShe held me tighter and wouldn't look at me. Greta came in, alerted by one of the flunkies I guess, saw us together and paled. I took that to be a bad thing.\n\n\"Greta, please, talk some sense into your daughter. Look at her, she doesn't look well, I'm afraid for the baby. Tell her to come on home with me. Think of your granddaughter.\"\n\nYes, it was a girl.\n\nI was more than surprised when she supported Eve on staying.\n\n\"Please, Tommy. It's just a few more weeks. I'll make sure she gets her rest, takes her vitamins. It'll be over soon, and we can get back to our lives.\"\n\nI wasn't going for it.\n\n\"No. If he wins, in two years he'll be gearing up for reelection. If he loses, He'll start planning his comeback now. Either way, we lose. We're going home, NOW. Come on Eve, let's get you packed.\"\n\nShe looked at her mom in a panic. They were about to say something when Stanley came into the suite with his entourage, including his security detail.\n\n\"Tommy, boy, what's this I hear about taking Evie home? It just isn't possible right now. Demographic show many women identify with her, especially as she's in the family way. Be reasonable. Run along home, or better yet, stay with us. Your crews can look after themselves for a few weeks.\"\n\nI couldn't believe the gall of the man.\n\n\"Not no, Stan[did I mention he hates being called that?], but hell no. There's not an office in the world that's worth the health of my wife and child. We'll be leaving shortly. End of discussion.\"\n\nInstead of answering, he motioned everyone out except his security people. Four guys, two pretty big, all ex military. As they were leaving I heard Eve whisper \"Please, daddy, don't...\" as they shut the door. The look on his face when he turned was not pleasant.\n\n\"Listen asshole, I'm not about to let some redneck fuck up this campaign, even if my daughter was stupid enough to marry him. I need to win. I've made a lot of promises to a lot of people that I need to prove up on. Think about it, it could be a sweet life. I'll appoint you to some position or another, with a great salary and a lot of perks.\"\n\nI couldn't believe what I was hearing.\n\n\"Listen to me closely, Stan. I don't give a fuck whether you win this election or not. It's not worth my wife and child being endangered. I'm going home and taking her with me, and I don't want to hear you say shit about it. Don't push me on this, I'd hate to go to the press and tell them the great Stanley Wallace wants to be Governor so bad he's willing to risk the health of his only child and first granddaughter. That would go over well with Marge in Nowheresville.\"\n\nThen it became surreal.\n\n\"Greta, Eve, out. I need to explain the facts of life to this hick.\"\n\nThey were both crying, begging him to leave it alone, but the two smallest security guys took their arms firmly and led them out. Eve had the wildeyed look of a trapped animal.\n\n\"Please, honey, please. Remember I love you. Please...\" She was still begging when they shut the door.\n\nI hadn't stood idly while this was going on, going after her immediately. The two biggest goons locked down on me. I think I surprised one when I turned and headbutted him. He staggered back, and the other one simply buried his fist in my stomach.\n\nI wasn't a fighter, wasn't trained in martial arts, but I was a husband enraged. Even out of breath, on the ground, I tried to fight back. The guy I head butted kicked kicked me in the balls, hard. It knocked me out.\n\n................................................\n\nI came to, strapped into a chair. Stanley pulled another chair in front of me, lifting my head and slapping me, hard.\n\n\"Good, you're awake. You don't know how long I've wanted to do that. I despise you. I had big plans for Eve, getting her married to just the right man, make us all happy. Then here comes Joe Redneck, and screws it all up. But, you have a chance to save everything. Being a redneck brings in a certain vote.\"\n\nHe slapped me again, grinning.\n\n\"Damn, I could do that all day and enjoy it. All right, now that I've got your attention, here's how it's going to be. Tomorrow, and for the rest of the campaign, you're going to be on every podium with me, smiling and waving to the crowd. Understand? If you do, then when it's over you can go back to your petty little life. Not with Eve, of course, but if you're good I'll allow visitation for your child, occasionally.\"\n\nHe was grinning like mad, enjoying this tremendously. My rage was beyond description.\n\n\"Fuck you Stan. When this gets out, you're done. Kidnap? Assault? Kiss the governorship goodbye, asshole.\"\n\nHe actually laughed.\n\n\"You won't tell. I have a little leverage, insurance if you will. Watch this.\"\n\nHe held up his phone, showing a video clip, one that destroyed my world.\n\nIt was Eve, in a room somewhere. You could hear Stan in the background. She was naked, her pregnant belly plain to see.\n\n\"Here she is, as promised, ready to serve. So, can I count on your support? The camera angled, to show a man in his late fifties, naked, erect, and grinning.\"\n\n\"If she's as good as she was last time, I'm in. Come over here baby, remind me why I like your Dad so much.\"\n\nEve was pushed to her knees, while the camera zoomed in on her face. Tears were streaming down her face and she was mouthing \"No\" over and over again. He cut off the phone.\n\n\"You don't need to see the rest, you know what happens. Here is how it's going to work. Nobody needs to see this, nobody needs to know just what a whore your wife is. Think about the baby, it may actually be yours. So, if you want me to keep it buried, you be up on that podium with me tomorrow, smiling and waving. When I win, you can go back home. Eve might actually want to go back with you. I don't care, I'll be done with her, at least until the next election. Understand. Just so you know, buck me on this and I'll tip the cops off about the kiddie porn you have on your computer, put there by my people, and make sure you never get to see your child.\"\n\nMy eyes had bulged out, my face was flushed, my heart was going a mile a minute. I never knew rage and heartbreak like I did now. Then, an icy calm came over me. I wasn't going to kill him, I was going to destroy him. He'd never hold a public office again. Maybe even end up in jail. One thing for sure, I was done with the whole family. Nothing mattered anymore except revenge.\n\nStan's eyes narrowed. He slapped me again.\n\n\"You're thinking about doing something stupid, I can see it in your eyes. Think about it, I'd hate for Eve to end up in an accident, maybe die or lose the baby.\"\n\nGod, how I wanted to kill him then. I took great pleasure in imagining beating him to death, slowly, savoring every blow.\n\n\"If you do end up doing something stupid, I have a lot of video, video you don't ever want your family to see, that will someway find it's way on tho the internet. I'll of course be devastated, bemaoning the fact that you led her into such an aberrant lifestyle, and promise to stand by her while she's rehabilitated. Face it, you're only option is to go along. It'll be over soon, and I'll still find you some cushy job, far away from me and out of the public eye.\"\n\nThen he made his mistake.\n\n\"Oh, one more thing.\"\n\nHe slammed a fist into my ribs. We all heard it snap. Pain like I never knew washed over me.\n\n\"Damn that felt good.\"\n\nI was slumped down, trying to breathe.\n\n...............................................\n\nThey let me hang, strapped to the chair, for what seemed like hours, but it was probably only ten minutes.\n\nOne of the security guards finally noticed my gasps for breath, and the blood foaming on my lips. The rib had punctured a lung. I was literally drowning in my own blood. Still took them twenty minutes to decide to call the EMTs.\n\nThey took the time to bruise me up pretty good, then dropped me at the bottom of the stairway in the hotel.\n\nI was put into intensive care after the operation, kept sedated. I finally woke up, and the doctor and nurses were very constrained around me.\n\nThe doctor tried to explain my injuries.\n\n\"When you fell down the stairs....\"\n\n\"Bullshit, Doc! If you're any kind of doctor at all, you can tell I was beaten. I expect to have you testify in the trial...\"\n\nThe doctor wouldn't look me in the eye.\n\n\"As I said, your fall down the stairs did a lot of damage. We have you in a light cast, and the splint on your broken finger should let it heal just fine. Just follow the nurse's instructions and you'll be fine in a month. We're going to keep you for a few days, just to insure the healing process. Is there anything we can get you, just buzz.\"\n\nI was starting to get really angry.\n\n\"I need my cell phone back. I need to make a few calls. And where are my clothes?\"\n\nHr reached up and adjusted my IV.\n\n\"Now, now. Remember to remain calm.\"\n\nI was doing my best to try to scream for help when I passed out.\n\nI was kept drugged for six days. I remember people coming in and out, and barely being awake long enough to be fed by a nurse.\n\nOn the seventh day I opened my eyes, thinking clearly for the first time. There was a young nurse watching me. She looked familiar somehow.\n\n\"You don't remember me, do you?\"\n\nI looked at her as she fiddled with my IV, scared to death she was putting me back to sleep. She leaned down close to my ear and whispered.\n\n\"It's pure saline. It should flush the drugs out of your system in a couple of days. I've met you before, you helped my handicapped sister keep her job. If she hadn't, my mom would have had to quit her job, and we would have lost our house. Now, is there anything I can do for you that won't be traced back to me? They have guards posted outside, and we're checked before and after we come into the room. I don't know what's going on, but I feel like it isn't strictly legal.\"\n\nI shook my head, trying to clear it. Suddenly I knew what to do. I repeated the same number to her over and over, until I felt she had committed it to memory.\n\n\"Call this woman. Don't do it from your phone, borrow one. Tell her where I am, what's happening, and tell her to come get me, as fast as she can. Tell her to bring Jerry, she'll know what I mean. Don't give her your name, and I'll keep you out of it. But hurry! Do it as soon as you can.\"\n\n................................................\n\nEighteen hours later I heard a commotion outside my room, a couple of shouts, as few grunts, and the door was swept open. A man I had worked on a committee with last year walked through the door, followed by Vivian. The doctor was with me, desperately turning the valve on my IV drip. I had acted confused and unresponsive, keeping up the pretense. I looked up and grinned.\n\n\"Give it up, Doc. I'm wide awake. Hello Vivian, you have no idea how happy I am to see you. I need a blood test, right away. I have no idea what they've been putting into my system. Oh, and have Jerry arrest everyone you see, would you? You'll do that, won't you Jerry?\"\n\nJerry, head of the State Bureau of Investigation, said he'd like to do that very thing, but right now he was holding everyone for questioning while he sorted it out.\n\nI found out I was in a private clinic, mostly for people who wanted to lose weight. They seized everything. Jerry explained to everyone that they were looking at kidnapping, assault, reckless endangerment of life due to the drug cocktail I had been living on, and as many smaller charges he could think of. The doctor demanded a lawyer. His face paled and he lost most of his bluster when he was told that due to the political nature of the case, it was being handled under Homeland Security guidelines, and that meant no contact with the outside world. He also told everyone that the first to make a deal would be the big winner in the plea down dance.\n\nOne of the nurses, realizing what she was facing, cut a deal and sang like a bird.\n\nJerry put them all into seclusion, no contact at all with the outside world, while he sorted out the charges. Vivian was enraged.\n\n\"I always knew he was a shifty bastard! I'm gonna enjoy watching his world collapse. We need to get Eve and get you safe.\"\n\n\"I'm afraid the apple doesn't fall from the tree, Vivian.\"\n\nAnd then it hit me. The physical pain and uncertainty of my future had pushed the emotional pain to the rear, but now it surged forward.\n\nEve, the love of my life, my future, was no more. Maybe she never was, but like Stanley, was clever enough to keep it hidden all these years. Either way, she was gone for good.\n\nSo for thirty minutes Vivian held and rocked me while I screamed in pain and cried like a baby. She sent every one but Jerry out of the room while I told what I had learned, and the video I had seen.\n\nWhen I was spent, Vivian held my head between her hands, looking into my eyes.\n\n\"I've known Eve for a long time, Tommy. She loves you, no one is that good an actress. Something is terribly wrong, I can feel it. Have you listened to her explanation? Has she said she doesn't love you?\"\n\nWhen I told her I hadn't had a chance to talk to her, and didn't know what I would say if I did, she begged me to reserve judgement until we talked.\n\n\"I don't know if I can\" I told her, \"even if we do talk, I can't get that video out of my head. What could she possibly say to justify that?\"\n\n\"I don't know, honey. We need to see her, and you need to promise to listen. Will you?\"\n\nAfter a few minutes of soul searching, I agreed I would. If nothing else, to make sure the marriage was really dead.\n\n...............................................\n\nWe needed to act quickly. Stan didn't know I was free, and I'm sure he had someone reporting on me at regular intervals. Jerry took my complaint, to give him a legal reason to investigate him. At the very least he could be charged with kidnapping, aggravated assault, and attempted blackmail.\n\nWhen I told him about the threat of kiddie porn on my computer, he immediately sent someone to collect it.\n\nBecause of the kidnap, the FBI was called in. They agreed to let the SBI take the lead, then add the federal charges when he was in custody.\n\nBeing drugged and confined to bed actually helped my rib heal, so I could move fairly well, as long as I didn't try to go fast or bump anything.\n\n\"We need to seize that cellphone, and as many of his campaign computers as we can. Can you tell me how many were aware of what's going on?\"\n\nI had no idea.\n\n\"His security detail for sure. Beyond that, I have no idea. Talk to his wife and daughter.\"",
        "Jerry was all business. Stan had a bad reputation with law enforcement.\n\nThey brainstormed. Vivian came up with the plan.\n\nStan put his cell phone in a briefcase one of his security detail carried while he made speeches, so it wouldn't be a distraction.\n\nHe had a rally with state workers to attend tomorrow. I would appear to frighten him, and they would serve Stan and his crew, confiscating all cellphones. They wouldn't arrest him, just say he was under investigation, hoping he would panic and do something stupid.\n\nI was driven to the rally the next day. I was rolled in in a wheelchair, I was pretty sore, but had brought a cane, because I wanted to be on my feet when I confronted him.\n\nThey kept me in seclusion until the speech was over and the question and answer session began. There was nothing spontaneous about them, they were all preapproved, and he had just the right answers. They wheeled me out at the very end. The press had already started packing up.\n\nI stood, and the SBI agents cleared a path. I hobbled right to the edge of the platform.\n\n\"I've got a question, you sonofabitch\" I screamed, even though it made my rib feel like hell.\n\n\"Where the hell is my wife? Out servicing political allies? Who's she blowing for you today?\"\n\nHe actually went pale, then turned to leave the platform. He was met by eight SBI agents, with warrants.\n\nThe press was having a field day, screaming questions, demanding answers. I think Stanley knew right then his political career was over, but was too delusional and obsessive to recognize it. \n\nI was pretty much unnoticed until the guy with the briefcase made a dash for freedom, running across the stage and jumping into the crowd.\n\nBad luck for him, he ran right at me. I held the cane like a bat, waiting. He saw me at the last second and tried to veer off. It was the one who kicked me in the balls.\n\nI caught him across the forearm. Everyone close heard the snap of the bone, and he dropped the case. Despite an obviously broken arm, he tried to pick up up. I hooked him around the neck and pulled, a really bad idea, because it propelled him right into me, and down we went, him on top of me. I got to relive the joy of a breaking rib all over again. Pain took over and all I could do was lie there.\n\nThe agents had gotten to us by them and they seized him and the case, and helped me back into the wheelchair. There's always an ambulance or two at these big rallies, so they were quick to come.\n\nNot as quick as a reporter though. He shoved a microphone into my face and asked what happened.\n\n\"Stanley Wallace happened\" I gasped out. \n\n\"He did this to me.\"\n\nThe cops pulled him out of the way, making room for the ambulance. Someone had identified me, and one of the crowd yelled out a question as the painkillers took the hurt away.\n\n\"Mr. Yount! Do you still support Stanley Wallace?\"\n\n\"Not no, but hell no! The man is a snake, who'll do anything to get elected. He'd ass rape his grandmother on network TV if he thought it would get the pervert vote out. Since she's dead, he'd dig her up and do it if it got him the necromancer vote.\"\n\nAll right, that was a little over the top, and I should have said sodomize, but I was going for effect.\n\n...............................................\n\nJerry gave a statement for the press from the rally stage.\n\n\"At this time, Speaker Wallace is being investigated for possible campaign violations, aggravated assault, communicating threats, and kidnapping. The FBI has graciously allowed us to lead the investigation, and we will work closely together, releasing any new information as it becomes available. That is all I can say at this time. Thank you.\"\n\nThe press had a field day. There was video and photos of him being led away. My confrontation with his security man was on youtube, and had two million hits in five days. The networks, especially Fox, practically kept it in the public eye twenty four hours a day.\n\nStanley went into seclusion, saying the charges were false, fabricated by his political enemies and a bitter ex son in law, because his daughter was divorcing him for abuse and mental cruelty. He continued to run ads until the stations pulled them.\n\nIn four days, he went from neck and neck to almost zero chance of winning. The analysts were predicting a landslide victory for his opponent.\n\nI was in protective custody. My brother Fred was a county deputy, and the SBI asked the sheriff to loan him out for security purposes, because he'd know who was supposed to be around.\n\nHis whole family, Celeste, the boys, and Amy moved into my house. Vivian was there as often as she could. She and Amy hovered over me.\n\nOnce Amy caught me holding our wedding picture and crying. She spoke to me and I didn't acknowledge her. She was eleven now, starting to look more like Celeste every day. I felt her hands on my cheeks, pulling me around. I had long since shaven off my beard, but the gesture was the same.\n\n\"I know Aunt Eve didn't do those things. And deep down, you do too. She'll come home, you'll see. Nothing could keep her from you. Believe, Uncle Tommy, please believe.\"\n\n..................................................\n\nThey found the kiddie porn on my computer, and the feds loaned Jerry a couple of experts who chased the porn through three continents and eleven countries, before the trail ended in the state capital.\n\nThe computers and the cellphones yielded a lot of interesting information. Seems Stan was blackmailing a few supporters with hidden video of them in compromising positions, going back years. Other than the clip he showed me, there were no more shots of Eve. There were, however, clips of Greta with six different men. In each case she looked drugged or terrified.\n\nIt was too late for his party to salvage the election, so they denounced him and withdrew support a week before the election.\n\nHe was arrested shortly after that as he tried to leave the country. His campaign accountant, after realizing he was looking at fifty years, cut a deal and sang like a diva. The same was true for two of his security detail and the campaign manager. In fact, so many wanted to cut deals Jerry stopped offering them.\n\nAn assistant had a bargaining chip. She knew where Eve and Greta were.\n\n...............................................\n\nIt had been over two weeks since I had been attacked. Jerry had every one available looking for them, but could find no trail at all. They were in a private rehab facility two states away.\n\nVivian told me, and even though she begged me not to, I went with them when they went to pick them up for questioning. Since they were out of state, the FBI took the lead. \n\nThey showed up with warrants and four teams, plus Jerry and part of his team. He was there as guests, and to take them into custody for questioning, to see if extradition was necessary..\n\nThey showed up unexpectedly. The director met them, invited them into his office. He said he had nothing to hide, and they would be free to look anywhere they wanted, but for liability purposes he wanted the company attorney present to look at the warrants and watch.\n\nThe agent in charge was polite, but had been on the job long enough to recognize stall tactics.\n\nHe turned to his crew.\n\n\"Start now. Detain anyone who tries to hinder you. I'll wait here with the good director for his lawyer.\"\n\nI was outside, waiting with Vivian, because she insisted on coming. When the press stated speculating just how much I may have been involved, in a rare and controversial move she held a press conference.\n\n\"Tommy Yount, in my opinion as well as all who have come to know him, is a decent, moral person. I have come to consider him and his wife as surrogate children. My husband and I have enjoyed the friendship of he and his wife for years. I stand behind the belief that he will be vindicated and cleared of any hint of wrongdoing in this affair. Thank you.\"\n\nI had served with her on two committees, and often escorted her to various functions if her husband, a lawyer with a very successful private practice, was unavailable. He introduced me to golf, and laughed when I became addicted. He was counsel of record for me in this mess.\n\nWhen one tabloid speculated that we were all involved in some kind of high powered swinging group, he buried the paper under so many lawsuits they made a full retraction, after giving a hefty donation to his pride and joy. the LLI. Local Lawyer Involvement, a nonprofit group from all branches of law that took cases pro bono, gave free advice on everything from wills to divorces, and generally educated the public about the law and their roles in it. They even helped clean parks and worked in soup kitchens. It had become so popular there was a branch in every large town in the state. I was on the founding committee, brought on for a lay perspective, and because John liked me. Every out of town meeting ended in a round of golf, usually. \n\nVivian spotted them. Two ambulances with the clinic logo, exiting quietly from a service lot. She immediately called Jerry, and the FBI had them stopped before they had traveled a mile. Greta was in one, Eve in the other. The director was arrested immediately, and the clinic records and computers seized.\n\nThey had been there since the day after he nearly killed me, secluded and sedated the whole time. The director was charged later, among other things, with reckless medical endangerment of a pregnant woman and her unborn child, a felony in that state.\n\nThey were brought around slowly, monitored closely. I went in to see her while she was still out.\n\nI leaned on my cane, watching her as she slept. She was pale, and thin. Her hair appeared lifeless. A memory of her, hair flying and eyes flashing, as she danced around the kitchen, singing to the baby flashed through my head.\n\nI looked at her pregnant stomach, now seven months along, and wondered if the child was going to be all right, and if it was mine. I didn't speak, didn't try to touch her, knowing I would break down completely if I did. As it was, the tears made it hard for me to see.\n\nI checked on Greta. I had always liked her, the quiet smile she would get watching us together, the tears she shed when we gave her the tee shirt that said 'I'm Too Hot To Be A Grandmother!', Eve's way of telling her we were finally giving her that grandchild she wanted. Even in her sleep she looked haunted. I wondered now what kind of secret life she must have led all these years.\n\n................................................\n\nThe story got bigger and bigger. In the end, besides Stanley, three of his security detail, his accountant, his campaign manager, both doctors and assorted nurses, the head of the party, two state representatives, one federal congressman, three judges, five lawyers, ten call girls, and thirteen businessmen got indited.\n\nJerry was like an avenging angel, wreaking havoc among the sinners. Every time somebody got arrested, he implicated someone else. The Wall Street Journal called it the biggest political scandal of the twenty first century. Countless editorials were written crying out for an end to career politicians, urging the strongest punishment possible for all guilty parties.\n\nGreta and Eve were deposed, with Vivian present. After it was over she came out, fussed over Amy for a bit, and took me for a walk.\n\nShe handed me a transcript.\n\n\"I can't bear to tell you, so you'll just have to read it.\"\n\nGreta had been abused and was almost a slave to Stanley almost from the time they married. Some of the things he had forced her to do made me so sick I actually threw up. He only let her have Eve because he needed a family image. He kept them under control with constant psychological conditioning and careful use of drugs.\n\nThe first time he used Eve as a sexual favor she was just over sixteen. He sacrificed her virginity to a sixty four year old man for political gain. The statute of limitations had expired, but his reputation was ruined. At seventy five he found himself divorced, broke, and shunned. \n\nAlong about then is when she started rebelling and getting into drugs and alcohol. He couldn't exactly make it public and face scrutiny, so he more or less had people clean up her messes and keep it out of the press.\n\nShe thought she had pulled away from him when she got to college, but he pulled her back in at twenty, through force and blackmail. He routinely filmed her and Greta, for leverage against the men he set them up with. His fixation for recording things hastened his downfall. There was evidence of corruption all the way back to the beginning of his career.\n\nShe had finally broken free when she met me, telling him if she lost me she had nothing to lose. She included Greta in the deal, and for almost four years both their lives had been normal as it was supposed to be.\n\nShe really didn't want to campaign for him, but went along t protect her mom. They were fine as long as I was there, but when I went home he systematically drugged them, reasserting his will.\n\nThey fought, but in the end he had control.\n\nIt all came apart when I came to take her home. If he had let her go, she would have taken her mother with her, and rumors would start.\n\nThere was a recording of him, his campaign manager, and two of his security team discussing letting them go, using the first time pregnancy and a worried mother as reasons, maybe filming them at home, cheering him on. The campaign manager killed that idea, reminding Stan he had made promises he needed to keep to secure support.\n\nAt that moment, I think I hated the campaign manager even more than Stanley.\n\nEve recovered enough to start asking for me. I was still terribly hurt and bitterly angry, and refused. Vivian begged me.\n\n\"She needs you. You were her anchor, her comfort, her vindication that she was a good person that was loved just for being her, with no agenda. Please, Tommy. For me, please.\"\n\nI hugged her.\n\n\"You've been a surrogate mother for me. You know my parents died in an accident when I was in my late teens, and my feelings for you made me realize what I missed. Do you know we had decided to name the child Vivian Greta, for her mother and 'mine'?\"\n\nVivian had tears in her eyes.\n\n\"I can't Vivian, not right now. If she needed me so badly, why didn't she stay home? Didn't she realized that anything he had on her would hurt him far worse than her if anything came out? What could have made her do it?\"\n\nVivian slapped me.\n\n\"You! That's what made her do it. She couldn't take the chance that you would leave her if you found out. I know, it doesn't really make sense to us, but you have to remember, she wasn't thinking clearly, the mental and physical abuse, the drugs, the shame, made her desperate to keep it from you. You're her world, Tommy, the only good thing that's happened in her life since she was born.\"\n\nShe could see in her eyes she was losing.\n\n\"At least think about the baby. That's your child she's carrying! Doesn't she deserve a good life?\"\n\nThe pain was clear in my voice.\n\n\"What about me? Do I deserve any of this? And I do think about the baby. What if it's not mine? Worse, what if it is mine? You know I'll get custody. I don't think a judge alive would let her raise a child alone with her history.\"\n\nVivian grabbed my arm so hard it left a bruise.\n\n\"Don't ever say anything like that where she could hear it. That baby and the hope that you may forgive her is all that's keeping her alive. Please Tommy. I've never asked you for anything again. Please.\"\n\nCeleste came to me later that day.\n\n\"I'm going to see her. I want her to look me in the eye and tell me why she betrayed you. Maybe it'll ease the pain for both of us. Amy is begging to see her, but I won't let her, not yet. I'll call you later.\"\n\n..................................................\n\nCeleste talked to her, and Greta. She never said a whole lot about what they talked about, but she did say her psychiatrist wanted to talk to me. In fact, she said, she was almost begging. Celeste, Amy, and Vivian ganged up on me, badgering me for three days before I agreed. I think I surprised them all by laying down some ground rules.\n\n\"This is not about me. If I get the least sense of an agenda, or if she tries to steer me in a direction I don't want to go, the conversation is over. I reserve to refuse to answer any questions, but will not give her the same courtesy. If she refuses to answer, the conversation is over. Make it clear to her, and if she still wants to talk, I leave, and there will be no second chance. And make this really plain to her. She is to bear no message from Eve. None.\"\n\nIt took the doctor two days before she decided to agree to my terms. I think it shocked her when I refused to go to her office and made her come to my house.\n\nI made sure we were alone. I didn't offer her refreshments. I just had her sit on the couch.\n\n\"Well?\"\n\n\"First Tommy, thank you for seeing me. You have a lovely home.\"\n\n\"Thank you. And it's Mr. Yount. You're not my friend, you're not my doctor, you're a salesman, here to sell me something I probably don't want. So, let's keep it formal. I'll make it easy for you. What do you want?\"\n\nShe reddened. I had pretty much blocked her normal course of action, so she had to think on the fly, trying to tell me what she needed from me without angering me. It took her a few minutes to decide how to proceed.\n\n\"I'll come right to the point. Eve is not holding up very well. We've gotten the drugs out of her system, but she's not improving. She needs you. I've spent a good bit of time with her. You're her rock, her vindication that she was a good person and deserved happiness. By taking that away, you're destroying her. If it weren't for the baby, I'm afraid she'd be suicidal. Please, you don't have to talk about the future, you don't have to commit to anything, just be there. She needs you, Tom, er Mr. Yount.\"\n\nShe waited expectantly.\n\n\"Let me ask you something, doctor, since we're talking about your patient, am I covered by confidentiality rules? Can you discuss anything I've said or will say today with anyone?\"\n\nShe agreed that the conversation was covered. I could see the shock on her face when I went off.\n\n\"You know what doctor? I'm tired of being told what to do to ease Eves' pain, what I need to do to get her better. You know what else, doc? Fuck her! I'm sick to death about people telling me to help her.\"\n\n\"Did I wreck the marriage? Is there a film of me out there somewhere performing oral sex with someone just to help her dad win an election? Did I get her nearly beaten to death, then drugged and hidden away? She's in a guarded facility that keeps the real world away. I'm forced to deal with the nut jobs, the tabloids, the looks and whispers when I walk down the street. Walk a mile in my shoes, doctor, and then ask me to be compassionate. This conversation is over. Goodbye doctor. Have a nice life.\"\n\nI didn't slam the door in her face, but it was pretty close.\n\nI felt a little bad about it later. She had been drugged and confined against her will, but man. did it feel good to vent. Maybe I needed to check into therapy myself.\n\n...............................................\n\nI had not been idle during this time. My lawyer came to me.\n\n\"Time to protect your assets. Remember that prenupt we made up, just for fun? Well, it might have been a joke, but that doesn't make it any less legal.\"\n\nI remembered. I didn't want the money, but it was a way to make her admit she had betrayed me. He froze all her assets, citing the prenupt. I reminded him to tell her all she had to do was admit her adultery and she got it all back. But it had to be dome publicly, in a manner of my choosing. She refused.\n\nGreta was out of the hospital, but was in seclusion at a high end clinic specializing in trauma and abuse cases. She wasn't restricted to the grounds, although they discouraged leaving the facility.",
        "There was a knock at my door, and when I answered it I found her, on her knees.\n\n\"Greta! What are you doing?\"\n\n\"I'm begging, Tommy. You have to go see her. She's stopped eating, they're feeding her through tubes. They're worried about the baby. I'm a broken woman, Tommy. I have nothing, no self respect, no future, and now I'm about to lose my family. I'll do anything, do you understand? Anything, to save my daughter and grandchild. Please Tommy. Please!\"\n\nI helped her up and brought her inside.\n\n\"You're not alone Greta. I've always admired you, and always thought you'd be a perfect grandmother. Vivian cares for you a lot, whether she says anything or not. I read your statement. None of what happened to you was your fault. It broke my heart. I'll always be here for you. Anything you need.\"\n\n\"I need you to save my daughter, and your wife and child. Please, I'll go with you.\"\n\nThe pain was just too much. I crumbled, mentally. The health of my child was at risk, as well as that of the woman I loved. I hustled her into the car.\n\n................................................\n\nShe looked like a ghost. Pale, so thin she looked skeletal. Her eight month belly looked abnormally huge compared to the rest of her.\n\nShe had been lightly sedated and her arms restrained so she couldn't pull the IVs or feeding tubes out. I didn't think it was possible for my heart to ache anymore, but I was wrong.\n\nGreta told me a lot on the way over.\n\n\"I know how it looks, Tommy, but she never betrayed you. The film clip you saw was the only time she ever came close. She was forced, but in the end she couldn't do it. She was restrained, and when he tried to force his penis into her mouth she moved, and bit him on the thigh so deep he had to have seven stitches. Stanley would have beaten her if I hadn't intervened. He still used the clip to keep her in line.\"\n\nShe hung her head in shame.\n\n\"I told him I'd substitute for her. I had to perform oral sex on him three days later, but it kept her safe.\"\n\nShe was crying quietly. I just held her hand, and thought of ways to make Stanleys' life hell on earth every day until he died.\n\nI couldn't help it. The tears started, and I pulled a chair up and held her hand with one hand, stroking her hair and cheek with the other. The doctors decided to let her awaken, to see if me being there would bring her around.\n\nShe came to her senses quietly. Greta held one hand, I had the other, but had dozed off. I woke when she tighten her grip, trying to make sure I was really there.\n\nThe tears started falling.\n\nShe was trying to talk around her feeding tube. One of the nurses removed it gently.\n\nHer voice was a croak.\n\n\"Tommy? Tommy! I need...\"\n\nI put my fingers in her lips, and brushed her hair back out of her face.\n\n\"You don't need to do anything but get well. You'll need your strength, we'll soon be chasing our daughter around, and you need to be able to keep up. If you promise not to do anything silly, I'll take these restraints off. I have an urgent need to hug you.\"\n\nShe was crying. Greta was crying. The two nurses were misty eyed. They helped remove the restraints. She was so weak she had to be helped, but she ended up in my lap, holding tightly, still crying. I held her for two hours, only putting her back in bed when dinner arrived.\n\nSoup. Mashed potatoes and pureed vegetables, with gelatin for dessert. It looked like baby food.\n\nI actually fed her, promising her a kiss for every bite she took, She did her best to clean the plate.\n\nI had a rocking chair brought into the room, and after dinner I held and rocked her, giving her every kiss I promised, and a few extra. Every time she tried to talk about what happened I stopped her, saying we would talk about it when she had her strength back. She did manage to get one thing out.\n\n\"I never cheated on you, Tommy, never. That's why I wouldn't honor the prenupt, even though the evidence was pretty damning.\"\n\nShe ate everything placed in front of her. If I had to leave she would become very agitated. I got into the habit of making sure Celeste, Greta, or Vivian was there.\n\nShe had just about stopped crying when we let Amy see her. There wasn't a dry eye in the room for two hours, and that included me.\n\nThey hugged fiercely.\n\n\"Aunt Eve, I thought we lost you! Don't ever do that again, ever! I love you, Aunt Eve\" \n\nEve actually reassured her.\n\n\"Baby, baby, I'm right here. And I'll never be far from you, or the rest of the family, ever again. I promise. Please stop crying, I've seen enough tears.\"\n\nShe held her hand and chattered for almost two hours, discussing everything from baby names to boys. I took that as a sign to leave them alone. I took Greta and Vivian to the coffee house down the street. They gave me an update.\n\n\"The grand jury is in. Stanley will die in prison if convicted of half the charges. He'll be surrounded by a lot of friends, though I doubt they view him as such right about now. Our lawyers have gotten the district attorneys to take our testimony behind closed doors, because we're the victims. I'd do it on network television if I thought it would get him another year, but we have to think about Eve. Are you going to testify?\"\n\nI reached out and took Greta's hand.\n\n\"Yes, as loudly as possible. I want that bastard fried.\"\n\nThe baby came two weeks early. As it happened, her water broke as we were leaving the hospital. she tightened her grip on my hand.\n\n\"Turn around, Tommy.\"\n\nI didn't understand.\n\n\"Did you forget something?\"\n\n\"Yes, I forgot I'm having a baby. She's coming honey, Now!\"\n\nI totally freaked out, picking her up her and rushing back through the doors.\n\n\"THE BABY IS COMING! HELP! THE BABY IS COMING!\"\n\nThe duty nurse had seen it all.\n\n\"Put her in this wheelchair, Paul Revere, and let us do our job. You might as well come along. It doesn't look like she's going wait long. Let's get you suited up.\"\n\nShe held my hand the whole time, yelling and screaming. She was in labor for less than three hours.\n\nVivian Greta Yount came into the world at 1:55 p.m. with a lusty scream. Her vocal ability was proven often over the years, she was the loudest child I had ever seen.\n\nThey let me cut the cord,then took her, cleaned her, and handed her back to me. I had the great honor of placing my daughter on my wife's breast, and she soon found her nipple. Eve just looked on in wonder, before looking up at me.\n\nAt that precise moment in time, I knew we were going to be just fine. I stroked her hair.\n\n\"You owe me two more, but I think we need to wait at least two years for the next one, all right?\"\n\nShe couldn't speak, but her eyes spoke volumes.\n\nMy whole family was in the waiting room, along with Greta, Vivian[her husband came two hours later]and surprisingly, Jerry.\n\nThey all trooped to the nursery, and oohed and ahhed over her while I stood, bursting with pride.\n\nThe women went into the room at feeding time. Greta got to hold her first, followed by Vivian, then Celeste, then Amy. They had to almost pry her away from Amy, she really didn't want to let go.\n\n.................................................\n\nEve was in therapy, alone and with me for almost two years. She still sees her every three months.\n\nIt wasn't all sunshine and roses, we were really uncomfortable around each other for a long time. When things would get tense, we developed a habit of going into the baby's room. We usually left holding hands. And we vowed, almost every day, to always talk, and trust each other completely.\n\nWe didn't make love until Vivian was almost seven months old. It was slow, tentative, like we were afraid the other would shatter. But it was beautiful, and very satisfying. Soon our intimacies grew in intensity, and we were almost back to where we were.\n\nGreta was in therapy a long time also. In a shrewd move, she had kept her money separate. Stanley was fine with this, thinking if things went south her money would save him. It didn't quite work out that way.\n\nA year later, she started seeing Jerry, six months later he moved in, eight months later they married.\n\nVivian and John were very active in her 'granddaughter's' life, becoming her godparents. So it came to pass her grandmother were the Chief Justice of the State Supreme Court, and her grandfather on the other side was the Director of the State Bureau of Investigation. Talk about connected.\n\nFred put his twenty years in with the sheriffs' department and retired. I made him a full partner, and he runs the business for us now.\n\nI had a new job.\n\n.................................................\n\nThe political fall out from the scandal was enormous, going on for a long time as new information came out, damaging both parties. Jerry proved to be a bulldog, never giving up once he hit a scent. \n\nThere were several emergency elections the next few years. They appointed a political flunky to take Stan's seat, and he was so inept when the term was up he didn't even get a nod from his party.\n\nThe election was pretty well contested, due to the addition of an independent candidate. Me.\n\nI was interviewed at the beginning of the primary season. I had no idea why.\n\n\"You know, the American Revolution was fought in part for financial reasons. Taxation without representation, career politicians, etc. The Constitution was pretty much written to discourage career politicians. You were supposed to come off the plantation or ship, out of the shop, do the best you could, and go back home, leaving it for the next guy. Now, unless you do something monumentally stupid like Stanley Wallace and his cronies, you have over a ninety per cent probability of being reelected. The system is broken again, and I don't see a way to fix it.\"\n\nThe interviewer was intrigued.\n\n\"So you're saying in a perfect world there would be no career politicians?\"\n\n\"I doubt it would be a perfect world, but I bet it would be a lot better.\"\n\nHe wouldn't let it go.\n\n\"So, in a world like that, you'd run for office?\"\n\nI laughed.\n\n\"Maybe. But I'd be the worlds worst politician. I'm too honest.\"\n\nI made a major mistake, thinking that people wouldn't read it, or if they did, they wouldn't take it seriously.\n\nWrong.\n\nPeople I never heard of were calling me, asking if I would run. I steadfastly refused. Then one day, out of the blue, my old political team showed up.\n\nBilly Grant, Zane Williams, Jerry Smith, and of course Thad Emerson. To say I was surprised was putting it mildly. I looked at their grins and had a bad feeling.\n\n\"Hi boys, long time, no see. What's up?\"\n\nThad grinned.\n\n\"You are, baby. How'd you like to be a state representative?\"\n\nI hugged them all and invited them in. We caught up.\n\nBilly was a political science teacher at a small University two states over. Zane and Jerry ran a think tank that analyzed election prospects of various candidates, mostly for their parties. Their track record was ninety three percent. Most of their failures were due to scandals and undisclosed information by the candidate in question. They researched and bought a small investigation service, strictly for in house use.\n\nThad was a political consultant who often used his friends for support. He had successfully managed the campaigns of five state officials, three U.S. Senators, and two congressmen. He had also managed the campaign for several mayors in major cities. His record was eleven and three.\n\nEve greeted them warmly, remembering better days. They loved the baby. Billy had two, Zane one. Thad was divorced, no children. Jerry was gay, and didn't have a permanent partner.\n\n\"About what you asked earlier? Not no, but hell no. Why on earth would I want back into that world after what it put us through?\"\n\nThey had apparently thought this out.\n\n\"Because it gives you a chance to show people how to do it right. This is a golden opportunity to give the government back to the people. Don't say no right away, talk it over together, and with your closest friends. See what they think. What have you got to lose?\"\n\nI had thought it out, too.\n\n\"Sleep. Peace of mind. You guys no doubt read about what we went through. You weren't here, so you really have no idea what it was like.\"\n\nI turned to Eve.\n\n\"Surely you don't think this is a good idea?\"\n\nShe looked deeply into my eyes.\n\n\"I think it's an excellent idea. What kind of world would this be for our children if somebody doesn't take a stand, show them there were decent people trying to make their future better? It would do me a world of good personally, sort of an atonement for past mistakes. Balance the books for my family, so to speak.\"\n\nI never in my wildest dreams thought I would ever have this conversation. After a couple of hours, they talked me into asking around.\n\nVivian was all for it. So did John, and Greta and Jerry. My family, especially Celeste, thought it was an excellent idea.\n\nThad and the group came over three weeks later.\n\n\"We have to form a party.\"\n\n\"Why?\" I asked.\n\n\"Why can't I just run as an independent?\"\n\nJerry laid it out for me.\n\n\"It would send the wrong message. Even with the grant fight, you were a part of a group of like minded individuals. You need to give them something to believe in, to draw them out. You'd come off as a bitter loner without it. And you'd have no chance.\"\n\nEve listened with interest. Sometimes I forget how smart, or how politically savvy she was.\n\n\"They're right. I've been thinking, and I have some suggestions.\" She said.\n\nWe were all ears.\n\n\"Your basic premise in the interview was that career politicians were a bad idea. Build on that. Push the idea that a man should have one shot at doing the right thing, before making way for someone with fresh ideas. Build on that.\"\n\nShe sighed.\n\n\"Besides, I don't think I could stand the thought of being a politicians' wife for more than one term.\"\n\nSo we took her idea and ran with it, forming the One Chance Party.\n\nBill started a viral campaign, broadcasting bits and pieces of our theory, before launching a website.\n\nThe premise was really simple. If you were a politician at the state level and above and a member, you had to pledge to serve only one term. If you were a voting member, you had to pledge not to support any candidate who runs more than once. That simple. Serve with pride and integrity, leave with dignity and honor. It became our motto.\n\nOf course it was funded with Eve's money. It was just a grassroots movement, not formally registered, with no candidate running, so we were able to spend as much as we wanted.\n\nAfter a month, with twenty five thousand signatures, the minimum for establishing a party, we went public and registered, announcing my candidacy for the office of state senator in the ninth district. It caught the political establishment by surprise, and they scrambled to block it, but thanks to Thad's group and the LLI, with John at point, they couldn't. In light of the federal scandal over the Tea Party, they didn't try very hard, considering us a nuisance.\n\nOur lawyers kept us in line, being scrupulously attentive to detail.\n\nThe seed money was ours, but soon we had donations coming in. It was explained to everyone who wanted to donate that any amount over one hundred dollars would be posted on our site, so anyone could see at a glance who our supporters were.\n\nGreta, Vivian and John gave the largest legally allowable donation possible. Amy was one of our first donors, giving twenty five dollars from her babysitting money, through Celeste.\n\nBecause I was registered, I was able to attend and participate in any debate. I was always third, but used it to my advantage. During the first debate I kept pretty quiet, until the Republican pushed me, wanting to know what I would do about certain state problems.\n\n\"Probably very little, at first. I plan on taking the first year to learn. After that, I'll probably make a lot of noise.\"\n\nIn a later debate I challenged them on their party records.\n\n\"Sir\" I said, addressing my Republican opponent. \"Last year, your party voted the straight ticket eight times out of ten, nationally and locally. Do you agree with that statement?\"\n\nHe had to, because it was public knowledge. The Democrat snickered. I turned to him.\n\n\"And you sir, your party voted the straight ticket nine times out of ten, also verifiable? Do you agree with this statement?\"\n\nHe had to admit it.\n\n\"Then sirs, I need to ask. If you were both working for your parties, who was working for the American people?\"\n\nWhen they weren't able to give an answer, the applause brought the debate to a standstill.\n\n.................................................\n\nThe party was growing by leaps and bounds. Other states started their own branches. We made absolutely sure they agreed to the tenets of our party.\n\nI was campaigning, doing radio and television ads in limited number. Thad had picked a key phrase from my last debate. He flooded billboards with it.\n\n\"Who's working fr the American people? Call your representatives in government and ask them. If you don't like their answers, go to One Chance Party.com.\"\n\nThe hits were amazing, and our numbers grew.\n\nEve and Greta stood by me during the campaign. They were worried about it at first, but I insisted. By now most details of their past had leaked out.\n\n\"They need to see you, let everyone know while you may regret your past, you're looking towards the future. It might hurt me, but I'm not ashamed of either one of you, and I'm really going to need you by my side.\"\n\nGreta was invaluable, her insights dead on. She hadn't been a political wife all those years, even in the situation she was forced into, without learning a few things.\n\nVivian and Jerry had to stay away, for obvious reasons. Didn't stop them to appearing during dinners, and giving us support.\n\nI made it clear to the press right away that the past was just that, the past. Anyone who made comments or asked questions any way ended up at the bottom of the list when question time came. They got the point and stopped pretty quick.\n\nAmy was in junior high now, and they held a mock election. When she found out the One Chance Party had been excluded, she went all the way to the school board in protest, where it caught the interest of the local reporters.\n\nThe school was forced to allow the party, and Amy ran. She won, getting sixty per cent of the vote. The advertising was priceless to us.\n\nIn the end, I won, being declared the winner before seventy five per cent of the precincts were in. In the end, I got eighty thousand more votes than the registered members of my party. The national media gave us a lot of attention.\n\nYou may remember my term, I certainly got a lot of attention, exposing waste, and graft, refusing to make deals if it wasn't in the best interests of my district and state. When it was over I did indeed return home, despite pleas from all over the state. I refused, graciously. In my farewell speech I thanked everyone who believed in me, and reminded them of the promise I made at the start.\n\nOur little party was nationwide, an established third party. One state got discredited after allowing two state and two federal candidates to run again, using the party banner.\n\nThe billboards went up all over that state, showing the candidates with the word LIAR over every face, urging people to go to the website and view the pledge forms with their signatures. They all lost, Two rejoined their old parties, and two disappeared from public life.\n\nWas our system of government better because of it? History will have to be the judge. ..................................................\n\nAfter I left office, I made a trip the a medium security prison downstate.I was really surprised to see he put me on the visitors log.\n\nHe was thinner, most of his hair was gone, and what was left was almost white. I knew he had gotten beaten up a few times, his tough on crime stance was widely known. There were probably inmates in every prison in the system who had a few years added to their sentence because of his policies.",
        "He shuffled over and sat. I saw the mark on his cheek and knew what it meant. Seems he and a lifer had developed a relationship. Three years and they were still a couple.\n\n\"Come to gloat, finally\" he sneered, but it had no real anger in it.\n\n\"No. If I never see you again it will be too soon. You're the lowest of the low in my opinion. I used to wish you'd die, but after I thought about it I'm glad you'll be here the rest of your life. I hope you have a lot of years left.\"\n\nI sighed.\n\n\"Your wife and daughter sent me. They wanted me to show you something.\"\n\nI pulled out a photo of Greta and Jerry, taken on the beach during their second anniversary cruise. Even at her age, she looked damn fine in a bikini.\n\n\"This could have been you, asshole, if you had shown her the least amount of love.\" \n\nHe didn't even flinch, but his eyes tightened.\n\n\"This\" I held up a five by seven, \"is your first granddaughter, Vivian.\"\n\nIt was a picture of her third birthday. She was on Eve's lap, trying to smear birthday cake on her mothers' face. They were both laughing. She was over four now.\n\nI held up another, of a small boy, just before he turned two, sleeping in my lap.\n\nThis is your grandson Thomas Yount 2. We call him Deuce.\"\n\nI held up another a formal picture of Eve with the kids, her seven month bulge showing. I handed him a sonogram.\n\n\"And this is your second granddaughter, Amy Celeste. Eve wanted you to see these, to know that despite what you did to her and her Mom that they ended up happy, normal, supported and cherished by good men. She wanted you to know what you could have had, had you been a decent human being.\"\n\nI got up to leave. I had honored her request, and I wasn't staying a minute longer. I was walking away when I heard something. I looked around. He was still sitting at the table crying. He looked up and in a broken voice begged me to leave the photos and the sonogram of the kids.\n\nI started to refuse, but decided it would cause him even more pain, reminding him of what could have been. \n\nWhen he died seven years later, his cell wall was covered with every photo I sent him.\n\nEve was informed of his death and refused to claim the body or go to his cremation. I have no idea what they did with the ashes.\n\n................................................\n\nI don't know what to tell you about this one, I have no idea where it came from, although I did reread the Lazy Lemon Sun series right before I started. I bow to that fine writer and his influence.\n\nAs always, thanks for reading. Comment if you want, vote if you think it was worth it.\n\nQ "
    ],
    "authorname": "qhml1",
    "tags": [],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/enforcing-the-pre-nup"
}