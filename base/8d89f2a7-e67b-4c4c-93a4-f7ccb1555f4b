{
    "title": "Secret Smiles and Three Little Words Pt. 18",
    "pages": [
        "Chapter 21* \n\nMaking their way back downstairs, Alex's body was on fire. She would have to address this soon. Her body ached for Gavin's touch. His lips. His fingers, and hopefully...his cock! Guiding Alex into a large room on the first floor they found a woman in what appeared to be a set of stocks. Alex was reminded of the old days, where the Puritans would put people in stocks as punishment. Their head through a hole in the center block of wood, their wrists as well. \n\nThis woman was similarly bound. She was completely upright though. Her head sticking through the center hole of the stocks. Her hands next to her head through smaller holes. Her bare feet stood on blocks of wood several inches off the floor. Her ankles bound to the metal supports of the block. She was completely immobilized. \n\nNow Alex knew it was a woman by her body as she was completely naked. But her head was completely covered in a leather hood, hiding her identity. It had no holes for eyes but her mouth was open to allow breathing, and the occasional cock to be inserted Alex guessed. \n\nThe woman's chin rested on the block stretching her neck out. Alex thought it looked rather uncomfortable being stretched out like that, and to be held there for any length of time would be tiring. \n\nGavin guided her to chairs that were set up for those who wished to view the show the woman was obviously going to be a part of. The only thing that was unknown was who was going to use the woman. \n\nAlex's eyes were brought off to the side as Alysia walked in. The jealousy washed back over her as she watched her walk to the woman bound. Alex wondered what that woman had Gavin do as her sub. More importantly, how did this woman convince him to succumb to her wishes? Could Alex use a similar approach to get her wish with him? Alysia bowed to the crowd as they tamped their hands on the arms of the chairs in applause. She winked in Gavin's direction and Alex clutched Gavin's hand tightly causing Gavin to grin. \n\n\"Easy now,\" he smiled. \"You have me, she does not.\" Alex said nothing because anything said now would be said in a disrespectful snarl because of the way Alysia was looking at Gavin causing the anger to well in her. \n\n\"Good evening friends,\" Alysia called out as she stood next to her unknown woman. \"This here is Erin.\" Alysia said patting the woman's bare bottom softy. \"Erin is one of my new toys. Not a sub, but a toy.\" Alex furrowed her brow. A toy? Was that a step above, or a step below a pet? \n\n\"Erin, likes to be played with,\" Alysia explained. She stroked the backside of the bound woman. \"She likes to be touched. She likes to be used!\" This brought an approving murmur from those gathered in the seats. \n\n\"So, tonight, instead of me being allowed to play with this delicious toy, all by myself,\" Alysia said running her fingers over the woman's nipples. \"Anyone here can. So feel free to come up and sample the wares.\" Alysia moved to the side and allowed the guests access. \n\nMany of the people sitting got up and moved closer. They moved around the bound woman in a circle. Touching her skin. Her fingers. Her breasts. Smacking her backside causing the sound to bounce off the walls. \n\nOne man cupped her sex and slid a finger in and Erin raised up on her toes at the intrusion. He probed her roughly. He pulled is finger out and sniffed it with a smile. The group orbited her, moving about her taking full stock. They then slowly wandered back to their seats. \n\nAlysia came back with a smile. She stroked Erin's backside and whispered to her. Alex read her lips easily. 'Good girl'. Alysia motioned to a man off to the side and he came over to her quickly. Together they went to the sides of the rack and pulled a pin on each side. Erin's body was then bent over at the waist. Her face still covered and locked in the stocks but now she was bent over. \n\nAlysia dismissed the man and Alex looked to Gavin. \n\n\"Her sub,\" he answered her silent question. Alex nodded and looked back at the man at the side of the room. He was dressed in leather chaps. His butt cheeks hanging out. His studded leather collar a solid proclamation. His chest bare and strong. His short spiky hair showed his youth. He was college age at best. \n\n\"Now, I haven't had the pleasure myself,\" Alysia said to the group. \"But I hear she sucks cock really well! Anyone interested in trying?\" Alysia looked to Gavin immediately and Alex fought the urge to get up, walk over and punch her square in the nose. Red being Alysia's favorite color, then let the red flow from fucking bitch's nose! \n\nAlex laughed inwardly at her inner kitten. Not much better than Candy! \n\nA man stood and moved over to Alysia and she smiled at him and waved him to Erin with a sweep of her arm. The man pulled his zipper down and reached in and pulled his cock out. It wasn't overly long, Alex noted, but it was thick. \n\nThe man moved up to Erin's covered head and pushed his cock into her mouth without warning. Erin greedily accepted this unknown cock into her mouth and Alex thought about that. Would that be hot? To have a man's cock, that you didn't know nor could you see, shoved into your mouth like that? Alex weighed the idea and found it somewhat erotic to her, Gavin's absolute would never allow that to happen though so she dismissed it as a fantasy. \n\nThe man shoved his cock in and out of her mouth roughly as Erin was unable to move. Alex could hear her gag from time to time. Her mouth stretched to take in the girth of the man at her face. Alex shifted in her seat as she body warmed again from the sight before her. The sudden desire to have Gavin's cock in her mouth began to overwhelm her. \n\nShe wanted the taste of him. His cologne, his body wash. His personal flavor of sweat and essence. She wanted to wrap her tongue around the head of his cock. To take him deep into her throat. To gag as Erin was on the cock in her mouth. Alex finally had to force the thought from her head or she would do it. Right here in front of everybody and she knew Gavin would not approve. Not the reserved Gavin. Not Gavin the Dom. \n\nThe man erupted with a grunt, his seed spilling from his cock into Erin's mouth who let it in enter but then let it fall out. She didn't swallow any of it. She thought back to the shower in Chicago. While she sucked Gavin, Elizabeth demanded that she swallow Gavin's cum, to not waste any. Erin didn't do that, then again, the man wasn't her Dom. Perhaps it wasn't allowed. Something to ask her Dom later. \n\nHer Dom. Her Dom, she repeated in her head. That made her smile. No longer the pet. Now the sub. Officially. Completely. Now Gavin's absolutes were hers. She was absolutely Gavin's! That made her giddy all over again. \n\nAlysia returned. This time with something in her hand. It had a black handle and a red tip. The red part was about three inches in length. Alysia ran her hand over Erin's body. The woman shivered with pleasure. \n\nAlysia moved the toy close to Erin's ass and just when Alex was about to ask what the toy was, a crackle of electricity filled the air drawing Alex's eyes back to the show with a snap. \n\nAlex watched as Alysia moved the toy to the other cheek, again a snap of electricity rang out. \n\n\"It's called an electro toy,\" Gavin whispered to her in her ear. His hot breath causing her to shiver and smile. He smiled at her response. \"It delivers an electric shock, variable, at the discretion of the Dom. From a mild tickle like a nine volt battery on the tongue to a sharp shock. Like an electric fence. Not enough to damage, but enough to get your attention!\" \n\nAlex nodded. God she loved her Dom! He could read her like a book and knew she had questions without them being asked. \n\nAlex watched Alysia slowly move around Erin. She moved quietly. Obviously trying to keep her next location of the toy a secret. Letting the shock of the toy let Erin know where it was by surprise. Alex watched Alysia put it to Erin's nipple and it caused the woman to yelp. This brought a smile to Alysia's face. She moved the toy to the other side and it snapped the other nipple. \n\n\"Can you tell which setting it's on?\" Alex asked about the toy. \n\n\"Yes,\" Gavin nodded. \"By sound. It's on its highest setting. It's a sharp bite.\" Alex nodded. \n\n\"Have you used it?\" Alex whispered. \n\n\"I've used them all,\" Gavin said unemotionally. He then turned to her and shrugged. \"There hasn't been much I haven't tried. That's not bragging, I've been doing this a while.\" \n\n\"I know,\" Alex smiled. Gavin was beyond braggadocios behavior. Confident yes. But not arrogant. \n\nAlysia continued to play with Erin. Moving down her body to her sex. Letting a jolt go there as well and Alex cringed at the idea. Maybe not there, Alex decided. That would be too much! \n\nAlysia moved to Erin's feet. Alex shook her head slightly. Yeah, she said inwardly. Absolutely not! The sharp crackle at Erin's foot caused the woman to call out sharply. \n\n\"Hmm,\" Gavin smiled looking at Erin and Alysia. \n\n\"What?\" Alex asked him as they watched the show. \n\n\"A definite red,\" Gavin shrugged. \"I'm surprised. I was beginning to think nothing was off limits for you.\" \n\n\"Nothing is off limits to you,\" Alex said shaking her head that he would think that. \"But that? Not too sure I would like that at all. Not on my feet anyway.\" \n\nAlysia moved away from Erin after stroking her body with her fingers. \n\n\"As you can see,\" Alysia smiled. \"Erin is very receptive and her body is delicious. Would anyone like to play with her?\" Alysia asked the crowd but she was looking directly at Alex as she said it. Her eyes inviting her specifically. \n\nNobody stood to go over. \n\n\"How about it Alexandria?\" Alysia asked her. \"Wanna play?\" Alex looked to Gavin who looked at her with a cocked eyebrow. \n\n\"It would please me,\" Gavin told her questioning eyes. \n\n\"Your absolute?\" Alex asked him a bit miffed that he would share her. \n\n\"She is not going to use you,\" Gavin explained. \"You are going to use her. You would be the Dom.\" Alex looked back as Alysia smiled. Alex looked back to him with a firm jaw. \n\n\"You are desperate for me to decide on my Switch?\" Alex asked him hard. \n\n\"No,\" Gavin said back sharply. \"And you are about to get a consequence for your fucking tone.\" \n\n\"I'm sorry sir,\" Alex said lowering her eyes. \n\n\"Alexandria,\" Gavin said after a deep exhale. \"I want you to play.\" \n\n\"Yes Sir,\" Alex said standing up immediately. Alysia's smile beamed. \n\n\"Alexandria,\" Gavin said to her, stopping her. \"Change roles. Embrace it. You are the Dom. You have a very specific duty. You have to be the Dominant. You cannot have two submissives. One has to take control. Erin is a true submissive, not a Switch like you. She won't lead you, you have to lead her. Know your role here, you are the protector. You are the disciplinarian.\" \n\n\"Yes sir,\" Alex said to him understanding what he was getting at. \"As you wish, but only because you desire it.\" \n\n\"That...is twenty,\" Gavin told her pointing out her insolence. \n\n\"Yes sir,\" Alex frowned. That wasn't supposed to happen. First day as the only sub and she fucks it up, she growled inwardly. \n\nAlex walked up slowly trying to hide her apprehension while Alysia stood waiting. \n\n\"I'm not pushing Gavin's agenda,\" Alysia whispered to her. \"I'm just really interested to see how you would work here. Being a novice and all,\" Alysia explained. \"I find it very intriguing that a novice is both a sub and a Dom. I want to see how you work, how your mind works. I want to learn from you. An experiment, if you will.\" \n\n\"Gavin is so sure I want this,\" Alex frowned explaining her apprehension. \"I like new things, but I only want him.\" \n\n\"Don't worry sweetheart,\" Alysia said with a soft hand to her face. \"This doesn't change that, just go with what you feel. Erin is very receptive and has a high pain tolerance. If there is any doubt, look to me and I will nod if she can handle it.\" \n\n\"Thank you Mistress,\" Alex said for the guidance. \n\n\"Enjoy yourself,\" Alysia pushed. \"That is what this lifestyle is about. Enjoyment.\" \n\n\"Yes Mistress,\" Alex nodded. \n\nShe left Alysia and went to Erin. Alex stood there for a moment in front of her. Thinking of what to do and how to do it. She looked over her shoulder to her own Dom. He sat with his legs draped one over the other. His arm laid across the back of the chair next to him as he watched with his head propped up by his hand. She couldn't read him. His eyes were focused on her. \n\n\"Good evening Erin,\" Alex said coming to her. \"My name is Alexandria.\" \n\n\"Good evening, Mistress,\" Erin responded from beneath her hood. Alex began to circle the woman. Moving to stand behind her. \n\n\"Before I play with you,\" Alex said to her. \"I want you to know, I'm not a Mistress.\" \n\n\"I understand,\" Erin replied. \n\n\"My Dom believes me to be a Switch,\" Alex told her. The crowd in the room watched with interest. Alex could feel their eyes on her as she looked to Gavin but he had his poker face on. Nothing showing to lead her one way or the other. \n\n\"I understand,\" came the reply. \n\n\"For now,\" Alex smiled. She would start at the beginning she decided. Like Gavin did with her. \"I wish to play with you, with your permission. Do you consent to my control for tonight?\" \n\nAlex didn't know how to approach this. She was winging it. She didn't know if she would cross some line at some point. She knew Gavin asked for her permission that first night. She gave it, then he started. She figured that was a good place to start. \n\n\"Yes Alexandria,\" Erin said formally. \"I wish for you to play with me.\" \n\n\"Good,\" Alex smiled. \"You look beautiful and I'm very anxious to play with you.\" \n\n\"Thank you, Alexandria,\" Erin said. \n\n\"For now,\" Alex said noting a tick of disproval from Gavin by his tight lips. \"Call me Mistress as that is the role I'm assuming.\" \n\n\"Yes Mistress,\" Erin said. \n\nAlex began by touching the skin of the bound submissive. Her fingers gently spreading across her skin. Moving down her back to her firm backside. The woman was very fit Alex noted. Athletic. \n\n\"Erin,\" Alex began again. \"I am a novice at this, so for tonight and only with me, we will be using safe words. I don't know what your rules are for you Master, but as I'm a guest and new, we will use them.\" \n\n\"Yes Mistress,\" Erin whispered. \n\n\"My overall concern is your safety and our pleasure,\" Alex said moving her fingers to brush them across Erin's nipples and they responded immediately. \n\n\"Yes Mistress,\" Erin smiled. \"Thank you.\" \n\nAlex then went through her own safe words with Gavin. Red, yellow and green were explained. Erin whispered that she understood. \n\n\"Good,\" Alex smiled. \"Then we begin. I am going to put you back upright. I want to see you.\" \n\n\"Yes Mistress,\" Alex looked to Gavin before moving to the front of Erin. He smiled at her reassuringly. She was on the right track anyway. Judging by Gavin's smile. \n\n\"Mistress Alysia,\" Alex said to her. \"May I borrow your sub for a moment?\" \n\n\"Absolutely,\" Alysia smiled from her spot next to Gavin. \n\nAlex hadn't realized she was sitting with him until she looked. Alex looked to the man to the side and he came to her. Alex could see his frown. His eyes spoke of disrespect. He ambled over instead of his fast walk when Alysia needed him. Know your role, Gavin's command of her echoed in her mind. Her anger flared slightly. He came to her but it was on his own time. \n\nAlex stared at him. The fire in her eyes was evident but he paid no mind to it. \n\n\"Yes?\" he asked. \"What do you want?\" \n\nAlex took hold of the loop on his collar for his chain and gave it a yank pulling him down to her level. \n\n\"For you to behave properly for starters! To show me the respect your Mistress would demand from you!\" Alex barked at him. \"To address me properly.\" \n\n\"Yes,\" the man whispered from his bent position. \"Alexandria.\" She tightened her grip on the man's collar. \n\n\"You don't get that privilege,\" Alex warned him. \"To address me by name.\" \n\n\"Yes...Mistress,\" he lowered his eyes for the first time. \n\n\"Alexandria,\" Alysia's angered voice caused Alex to tense. Perhaps she took this too far. \"Feel free to punish him for his disrespect! Know that I will also have him properly dealt with for this embarrassment!\" \n\n\"Help me move her upright,\" Alex said to him staring at him as he slumped slightly. \n\n\"Yes Mistress,\" he said immediately. \n\nThey moved to Erin and pulled the pins, they then lifted her upright and replaced the pins locking the stocks in place. \n\nThe man stood nearby waiting for Alex's next command. She moved to him and stood there. \n\n\"Kneel for now,\" Alex told him firmly. \"I will deal with you after I have played with Erin. I hope, for your sake, her pleasure placates my anger.\" \n\n\"Yes Mistress,\" he whispered as he knelt. Alex stole a peek at Gavin and he winked at her, his smile let her know she was doing well. This also told her she had assumed the proper demeanor and attitude. It relieved some of the butterflies of inexperience. \n\nAlex moved to Erin and kept her back to the group. She let out a deep exhale. She hadn't realized her heart had sped up and her breathing did as well. \n\n\"I'm sorry Erin,\" Alex said to the woman. \"For the distraction. You now have my undivided attention.\" \n\n\"Yes Mistress,\" Erin let a little smile cross her face. \n\nErin had only been able to imagine what was happening near her. Her eyes covered kept the incident from view, but her ears heard it all, the tone. The words. It all screamed this 'novice' was in complete control. She instantly respected that. \n\n\"Now,\" Alex smiled. \"What to do to you?\" Alex moved to a table of toys. \n\n\"Do you like wax?\" Alex asked seeing the candles. \n\n\"Yes Mistress,\" Erin replied with a tint of excitement in her voice. \n\n\"By your voice, I can tell you more than 'like' it,\" Alex smiled. \"I love it as well.\" She lit the candle and brought it to Erin. Alex looked to Gavin as she moved to the front of Erin, Gavin seemed pleased as he leaned into Alysia as she whispered in his ear. Gavin nodded as Alysia turned her eyes back to Alex. She nodded to Alex approvingly. \n\nAlex watched the liquid at the top of the candle. Its puddle forming as she turned it slightly allowing the flame to melt the wax. She had seen Angelo do this upstairs. She decided to do the things she had seen or experienced. \n\n\"Erin,\" Alex said as she seemed satisfied with the puddle. \"Remember our safe words.\" \n\n\"Yes Mistress,\" was the reply. \n\nAlex moved closer to Erin, but before she began with Erin, she turned the candle and let a small dribble fall to the back of her hand. She wanted to get the distance right. Not too close to burn, but close enough to get her aim right. After a couple of trial runs on her hand she moved to Erin. \n\n\"Ready?\" Alex asked her. \n\n\"Yes Mistress,\" Erin smiled. \n\n\"Good girl,\" Alex smiled, this in turn brought a brighter smile from Erin. \n\nAlex held the candle above Erin's nipple and let a small dribble come out, splashing on her breast causing Erin to gasp and suck in a breath as the sharp pain radiated. Alex frowned as her aim was off, she moved slightly and tilted again. This time hitting closer to the nipple, but not on. Alex again adjusted and the third dribble found its mark. \n\nAlex then moved to the other nipple and waited for the candle to puddle again, once it had a sufficient amount. \n\n\"Talk to me Erin,\" Alex encouraged as she watch the puddle grow. \n\n\"Green, Mistress,\" Erin responded. \n\n\"Good,\" Alex smiled. \"Here we go.\" \n\nAlex felt compelled to warn the sub, she couldn't see and this was something she wanted her to know about. While Alysia intentionally moved about with the electro toy in stealth, Alex decided not to do that. Apprising Erin of her every move. \n\nHer aim was better this time, hitting her mark on the first attempt. Erin gasped and let her smile beam as Alex hit her mark. ",
        "Alex went back to the other breast and dropped some more there. Then finished with another drop on the other breast. When she was satisfied she had them properly coated she blew out the candle, intentionally close to the coated nipples causing a wave of goosebumps to flood Erin's body from the sensations of her breath across the wax. Alex smiled wickedly at the response as she moved by Erin to the table to set the candle down. \n\nShe looked at the kneeling sub as she came back. He was still there, head down. Waiting. Alex frowned at him. \n\nMoving back to Erin she brushed her fingers across her open breasts, avoiding the waxed areas for the moment. \n\n\"Your skin is so perfect,\" Alex whispered. \n\n\"It belongs to you,\" Erin smiled. \"And your magnificent touch!\" \n\nAlex moved to the wax and carefully peeled it from Erin. Her nipples encased in wax protruding outward. Once Alex had removed the wax she smiled. She brought her tongue in and carefully traced the outer areola first causing Erin to shake with the feel of her wet tongue on her sensitive skin. Alex grinned. \n\nGently pulling the nipple in between her teeth caused Erin to convulse slightly. Alex held it between her teeth with a gentle pressure as she let her tongue flick the end causing Erin to shake visibly with every brush of tongue on nipple. \n\nAlex let her hand come up to the other nipple and pulled gently on it with her fingers. Pulling it outward then twisting it slightly between her thumb and forefinger. This caused Erin's legs to shake. Something Alex took pride in. \n\n\"Absolutely delicious,\" Alex praised as she released the nipple. She moved her hand down Erin's stomach to her soft sex and cupped it gently. She found it nearly dripping. \n\n\"Oh my!\" Alex marveled. \"You do like this!\" \n\n\"It's your touch,\" Erin smiled. \n\n\"Sweet,\" Alex smiled at the compliment. \n\nAlex carefully pushed a finger in Erin and she gasped as did Alex at the ease in which her finger penetrated. The wetness of Erin's pussy allowing it. Alex backed off and found her clit. Staring at Erin's mouth she smiled when Erin bit her lip. That must be a universal sign of enjoyment Alex mused. \n\nRubbing Erin's clit made the woman's legs shake as she stood on her blocks. Alex inserted her fingers back in causing a satisfied gasp. First one finger then two. Resting her palm against the stiffened clit she left the pressure from her palm there and just moved her fingers. \n\n\"May I cum Mistress?\" Erin asked after a few minutes. \n\n\"Not yet,\" Alex smiled with a devilish grin. She decided to use a little Gavin. The whimper made her smile grow. She liked that. That power. \"I take it you want to cum?\" \n\n\"Yes Mistress,\" Erin said with a slight plead in her voice. \n\n\"Well,\" Alex laughed. \"We are entertaining the crowd. Let's let them decide.\" Alex looked over her shoulder. \"Should we let the beautiful Erin cum?\" Alex asked. There was a giggle from the group behind her as they looked to one another. \n\n\"No,\" was the universal answer. \n\n\"Hmm,\" Alex smiled turning back to Erin. \"It seems they want to see you in some duress!\" \n\n\"Yes Mistress,\" Erin said as she gritted her teeth. \n\nAlex pushed her fingers faster, Erin's body began pushing her juices out. She watched the woman struggle with holding her orgasm at bay. \n\n\"Please Mistress!\" Erin finally broke her silence. \n\n\"No,\" Alex said firmly. \"Do not disappoint me.\" \n\n\"No Mistress,\" Erin gasped. \"I only want to please you!\" \n\n\"Good,\" Alex smiled. \n\nShe felt the surge of power filter through her. It was empowering to have this control. She felt powerful! She was relishing in it. She could see Erin's legs shake and that made Alex bite her own lip. She could tell by the way Erin shook, the way her teeth dug into her lip, she was super close. \n\n\"Well Ladies and Gentlemen?\" Alex asked the crowd. \n\n\"NO!\" Was the cry, mixed with laughter. \n\n\"Oh my,\" Alex smiled shaking her head as Erin's gasp of disappointment escaped. \"It seems they wish to prolong your pleasurable torture!\" \n\n\"Yes Mistress!\" Erin said, her voice cracking under the strain. \n\nAlex slowed her fingers to help Erin out. She didn't know how long Erin could hold out, or what she would do if Erin came before the crowd was ready. \n\n\"How about now?\" Alex smiled never taking her eyes of Erin's shaking body. This woman was so close she knew she was going to explode. \n\n\"NO!\" Came the cry. \n\n\"Sadistic bunch,\" Alex laughed which brought laugher from the crowd. \n\nShe brought her free hand up and ran her fingers over Erin's lips. Erin captured her finger in her mouth and suckled it. This brought Alex to full smile. She leaned up and into Erin's ear standing on her toes. \n\n\"Cum for me Beautiful,\" Alex took the crowd out of it. She knew this girl was going to erupt no matter what the crowd wanted. And Alex wanted to reward her for her obedience. \n\nErin's mouth opened as her body froze in a powerful orgasm that caused Alex's hand to wet and her fingers to squish as the cum slid around her fingers causing the already lubricated sex to become slippery with cum. Alex relished the ease of the orgasm as Erin called out, her voice showing the ultimate release of pleasure. \n\nThe crowd behind them gently rapped their palms on the arms of their chairs showing their approval of the scene. Alex took it as a round of applause. \n\n\"Thank you Mistress!\" Erin said finally, once she came down and was able to speak. Alex brought her sopping fingers to Erin's mouth and inserted them into Erin's mouth as she struggled to regain her breathing from her erotic high. Erin sucked greedily, Alex quickly pulled her fingers out and then planted a kiss on Erin and allowed her tongue to invade Erin's mouth who accepted Alex's invasion with a breathy sigh. \n\n\"You taste delicious,\" Alex whispered against her lips. \n\n\"Thank you,\" Erin gasped as she tried to reel in her breath. \n\nAlex moved back to the table, she smiled when she saw it. A wand massager. She picked it up and flipped it from hand to hand as she made her way back. She looked to Gavin who was sitting very complacent, watching her work. His smile was soft and admiring. Proud and dare she say, loving? \n\nAlex moved back to the front of Erin and smiled as she turned it on, the sound filled Erin's ears and she matched Alex's smile. \n\n\"Oh no,\" Alex smiled. \"I'm not done with you just yet...Angelo manages to give Maria over a hundred orgasms in one session, I may not be that talented but I would never let you off with just one measly orgasm!\" \n\n\"I won't stop until your body is exhausted,\" Alex whispered in her ear. Erin gasped. \n\nAlex pressed the wand to Erin and the sub grunted with pleasure. Erin was still tingling from her first orgasm so it didn't take much for her to reach that plateau again. \n\n\"May I cum Mistress?\" Erin asked before she did. \n\n\"Please,\" Alex smiled. \"Cum as you need!\" \n\n\"Thank you!\" Erin called out in the midst of her orgasm. Her legs shaking, her toes pushing her body against the stocks causing them to dig into her shoulders. Alex heard the splash of water and she looked down to see a puddle under Erin. \n\n\"Oh my,\" Alex marveled. \"Are you going to make a mess!\" \n\n\"I'm sorry Mistress!\" Erin called out as her body continued on its upward high of another building orgasm. Alex took hold of Erin's nipples and sucked gently causing Erin's body to convulse repeatedly against the restraints as if she was trying to get out. Alex loved it. She moved to the other side just as the sound of a trickle of fluid hit the floor again. \n\nAlex could feel the heat between her own legs, her panties dampening with her excitement. She hated the fact that Gavin was right. She would have to admit it, she liked this. She liked this a lot! Her panties would give it away if she tried to deny it when he asked her. And he would ask her. \n\nBy her eighth orgasm Erin was exhausted. Her body hung as her feet barely kept on the blocks. Alex recognized this and backed off with the wand. \n\n\"Such a good girl!\" Alex praised. \n\n\"Thank you Mistress!\" Erin said under heavy breath as her lungs needed replenished. \n\nAlex put the toy up and came back to her. \n\n\"With your permission?\" Alex asked Alysia indicating she would like to release Erin. Alysia smiled and nodded. Alex undid the stocks and moved the slats back to release Erin, who stepped down cautiously, her legs wobbly. Alex put her hands on her face and steadied her. \n\n\"Thank you,\" Alex smiled as she kissed the girl. \n\n\"No, thank you!\" Erin returned. Erin pulled her hood off and Alex saw her for the first time fully. \n\n\"Wow,\" Erin smiled. \"You even more stunning than your voice!\" Alex kissed her on the lips, allowing their tongues to dance. \n\n\"You make a very good Dom!\" Erin whispered in her ear as they embraced. Alex stroked her cheek in appreciation. \n\n\"I'm not done yet,\" Alex frowned looking at the man kneeling. \"Assume the position.\" Alex said with a nod to Erin. Erin bowed her head and assumed the submissive position next to the man. \n\n\"You,\" Alex said her tone hard. The man looked up at her and Alex nodded with her head that he should replace Erin in the stocks. He looked to Alysia. \n\n\"Don't you fucking look at me!\" Alysia raged suddenly, her voice filling the room. \"You have embarrassed me enough for one night!\" \n\nThe man stood and bowed his head then placed his chin in the stocks as Alex closed it around him. Alex went back to the table with a specific toy in mind. She picked it up and came back around to him. \n\n\"Now,\" Alex smiled a fake smile. \"Lucky for you, Erin pleased me a great deal.\" \n\n\"Yes Mistress,\" the man said softly. \n\n\"But,\" Alex continued. \"I saw a smirk as Alysia used this earlier on Erin. Not a smirk of pleasure as to enjoy. But a smirk that reeked of pleasure at someone else in pain.\" The man nodded at her. \n\n\"Don't fucking nod at me!\" Alex barked. \n\n\"I'm sorry Mistress!\" \n\nIt was all Gavin could do to keep from falling out of his chair in laughter as Alex barked at him. Alysia slapped at him as he struggled. Gavin straightened up and swallowed the laughter. \n\n\"Have you ever had this used on you?\" Alex asked him unaware of Gavin's enjoyment. \n\n\"No, Mistress,\" he replied. Alex smiled at the tick of apprehension in his voice. \n\n\"Well,\" Alex shrugged. \"Then it's time!\" Alex turned the electro toy on and watched his body tense. \n\nAlex brought it slowly to the man's side, the crackle of discharge caused him to cry out. \n\n\"Seriously?\" Alex scoffed. \n\n\"I'm sorry Mistress!\" the man immediately said. \n\n\"Humph,\" Alex frowned. She moved to his abs and let another bolt out causing him to wince and hiss. She moved up to his nipples and let another charge go this caused him to call out again. \n\n\"Erin handled this a lot better than you,\" Alex pointed out with disappointment. \n\n\"I'm sorry Mistress!\" he said again. \n\n\"So you keep saying but are not changing,\" Alex said as she moved around him to stand behind him. Another snap on his buttocks caused him to shake. One cheek, then the other, but only because they were out and available. \n\nAlex shut the toy off as she stood in front of him. \n\n\"I would say it is a good thing you have pants on,\" Alex frowned. The threat need not to be explained. If readily available she would have used it on his cock and balls. \n\n\"Thank you Mistress,\" he whispered. \n\nAlysia looked to Gavin with a broad smile. \n\n\"Kitty has claws!\" Alysia teased at Alex's comment. This caused Gavin to laugh out loud. That she did, he smiled. Alex went to release the man from the stocks. \n\n\"Alexandria,\" Alysia stopped her. \"If you would, please, leave him where he is!\" \n\n\"As you wish, Mistress,\" Alex said bowing her head to her. \n\nAlysia came to her and lifted her head with her fingers under her chin. \n\n\"Absolutely breathtaking,\" Alysia whispered as she kissed Alex's lips. \"I apologize for my sub.\" \n\n\"No apology necessary Mistress,\" Alex smiled. \"I thank you for letting me play with your toys.\" \n\n\"You handled it all so well,\" Alysia smiled holding her face by her chin. \"Much beyond your experience level. It shows me, even at a novice, you are a natural!\" \n\n\"Thank you Mistress,\" Alex smiled. \"Was my Master pleased?\" \n\n\"I know for a fact, he was,\" she assured her. \n\nAlysia released her and stood to the side to allow Alex to return to her chair. Gavin led the group with a tamping of his hand on the arm of his chair in applause for her effort. There were approving murmurs from the group as she took her seat next to Gavin."
    ],
    "authorname": "CJT",
    "tags": [
        "stocks",
        "wand dildo",
        "wax",
        "electro toy",
        "fingering"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-18"
}