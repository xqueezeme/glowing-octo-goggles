{
    "title": "Two Hundred Dollars Ch. 14",
    "pages": [
        "Reader's note: Laura makes a reference to the \"L.C.B.O.\" In the province of Ontario, the sale of alcohol is regulated by the Liquor Control Board of Ontario. Until recently, LCBO stores were the only places in the province where a person could purchase non-beer alcohol products. They are still the main source for consumers and carry the largest variety of products.\n\n*\n\nThe Halloween party, and its orgasmic aftermath, had left Kent's inner beast satiated. Even when Bailey had come by the following day to pay off three more dollars, he hadn't felt any relentless surges from down below.\n\nThat, of course, had taken place twenty fours later, and involved a deeply thoughtful Bailey, pondering the nature of her friendship with Laura.\n\nKent had spent the following day dwelling on the same issue, mindful of the fact he didn't really know what went on between girls, but trying to make sure he didn't step on any toes.\n\nFor one thing, he didn't want to ruin what he had. Even if it cost him some money, it still counted as the most interesting sexual encounter of his life -- and it showed no signs of stopping.\n\nI wonder what happens when we run out of debt?\n\nHe brushed that aside. However long it lasted, it wouldn't improve anything to lament its end in anticipation. Better, Kent decided, to live in the moment.\n\nStaying up late for the Halloween party on Wednesday had made Thursday pass like a dream, even if it had included the delivery of thirty spankings.\n\nAnd then she'd tried to sneak in that 'gift', Kent mentally shook his head and twisted his lips, as if I'd fall for that. We have rules, and I'm not letting her pay me extra.\n\nIn a way, he felt for Bailey. He sympathized at a visceral level with her desire to solve her own problems, deal with her own debts and refuse help. But, like it or not, Kent had accepted payment for those two dollars. Laura had paid them off and Bailey just had to accept that. The bad blood, however, remained between the two girls, and he didn't see that he had any right to force them to accept anything.\n\nOn the other hand, Kent had another obligation in this whole affair, and that pertained to enforcing the rules they had made. Bailey expected him to keep her honest, even when violating their regulations might work out in her favour. He had a duty to catch her.\n\nHe sighed. With midterms over, labs had returned, and that would consume the next three hours of his early evening.\n\n=============================\n\n\"So?\" Laura looked through the steam of her tea at Bailey. \"What happened last night?\"\n\nBailey looked around her friend's kitchen and stalled to try a sip of her own tea. Finding it too hot, she put it back down on the floral, country kitchen style table cloth.\n\n\"We did three more dollars,\" Bailey kept her voice low, unsure of the location of Laura's parents.\n\n\"Mom's doing laundry,\" Laura assured her. \"It's fine. Now, what happened?\"\n\n\"Nothing,\" Bailey said. \"Just the... y'know... usual.\"\n\n\"That's it? No, extra fun?\"\n\nBailey hesitated, pulling her lips back off her teeth to suck in a breath.\n\n\"We talked a bit,\" she admitted.\n\n\"About?\"\n\n\"This and that,\" Bailey stalled. \"Him and me. And you.\"\n\n\"Me?\" Laura sounded touched.\n\n\"Yeah, you're my best friend, right?\" Bailey confirmed without meeting Laura's eyes.\n\n\"Right,\" Laura agreed.\n\n\"I don't want this to come between us,\" Bailey said. \"I don't want you to feel like you have to do it, or like you're excluded.\"\n\nLaura gulped and took a moment to collect her thoughts.\n\n\"I've never felt like I had to do anything, alright?\" she reached out and put her hands over Bailey's on her tea cup. \"Alright?\"\n\nBailey nodded.\n\n\"Okay,\" Laura withdrew her hands. She took a deep breath, relaxed her shoulders to show that she'd resolved the issue, and added in a calmer voice, \"Was that all?\"\n\nAfter a short grumble, Bailey blew out a breath from her mouth, upwards into her hair.\n\n\"I did thirty over top, okay?\"\n\n\"Okay,\" Laura cued Bailey to go on.\n\n\"Then I offered him, y'know, some free ones,\" Bailey frowned in memory and felt her breath catch in her throat.\n\n\"Free ones?\"\n\n\"Yeah, I pulled down my pants and everything,\" her chin ticked up and she gulped.\n\n\"And then?\"\n\n\"He said, 'no',\" Bailey enunciated. \"Just turned down my gift, with my butt sticking out at him.\"\n\nLaura raised her eyebrows and stared at Bailey, an expectant look on her face.\n\nBailey took a few deep breaths and settled herself down, part of her wishing she hadn't told Laura this part, but she had no one else with whom to share her embarrassment.\n\n\"How many 'free ones' did you offer him?\" Laura said slowly, her eyes narrowing.\n\n\"Does it matter?\" Bailey's eyes twisted aside.\n\n\"How many?\"\n\n\"I guess,\" Bailey rolled her eyes to the ceiling as her voice drawled. \"I guess I offered eight. You know. As a gift.\"\n\nLaura's lips turned, a dubious expression on her face.\n\n\"Eight,\" she confirmed.\n\n\"Eight,\" Bailey shrugged.\n\nSurveying her friend, Laura stood up from the table and walked toward the back of the house.\n\n\"Hey, Mom?\" she called down the stairs.\n\nAfter a muffled reply, she went on, \"Bailey and I are going out for a walk. We'll be back in an hour or two.\"\n\n\"Where are we actually going?\" Bailey asked, bewildered.\n\n\"L.C.B.O.,\" Laura said. \"And it's a bit of a walk, so let's get going.\"\n\n\"We need liquor?\" Bailey wondered aloud as she donned her jacket.\n\n\"I'm buying this time,\" Laura said, \"but I'll need to leave it at your place.\"\n\nBailey groaned as she slipped into her boots, \"So I have to drink that creamy crap you like?\"\n\n\"Look,\" Laura fixed her beret smartly on her head, \"I promise I won't buy the one with your name on the bottle.\"\n\n\"Thanks,\" Bailey rolled her eyes.\n\n=============================\n\nKent hadn't worried himself much on the subject of Bailey. Thursday's spankings had seemed so distracted, Bailey had thrown him off. He's expected some kind of talk about the various orgasmic encounters the two of them had had, but Bailey had clearly put those aside in favour of her concerns about Laura.\n\nSo when the apartment door opened and he heard the two girls careening down the stairs so noisily, he felt a shock go through his body.\n\nAm I in the mood to spank them? he wondered honestly, although if they're together, I suppose things are alright. Although, really, I shouldn't expect they want a spanking every time I see them.\n\nThe last few months had done a lot to warp his sense of normalcy.\n\nHearing Laura's voice came as a comfort, for he could deal better with Bailey and Laura than just Bailey alone.\n\nOn the other hand, they sounded excessively giggly, all things considered.\n\nThat's a good sign, if I'm looking to spank someone.\n\nBailey popped into his doorway first, leaning up against the right side of the door frame.\n\n\"Hey, Kent,\" she smiled, her cheeks rosy red. She'd left her winter boots at the door, but still wore her beige jacket over her jeans and a white, woolen cap on her head.\n\nLaura appeared next in beige khaki pants, matching jacket, pastel orange scarf and a dark beret.\n\n\"Hell-ooo,\" she said. Then she whispered, far too loudly, to Bailey, \"Is the other guy here?\"\n\n\"No, Carson's out,\" Kent assured her. \"Have you two been drinking a bit?\"\n\n\"Just a little,\" Laura drew out a bottle from behind her back and tried to hold it up to the ceiling light fixture, but the bottle proved too opaque.\n\n\"We're not drunk,\" Bailey added, then turned to Laura, \"he won't do it if he thinks we're drunk.\"\n\nKent raised an eyebrow and glared at them, \"You need to be aware of what you're doing.\"\n\nHis heart, however, did not invest itself in his protest, and they could tell.\n\n\"We know what we're doing,\" Bailey enunciated as she moved toward Kent, \"And we decided ahead of time anyway.\"\n\n\"Mostly,\" Laura added.\n\n\"Mostly?\" Bailey turned around to ask.\n\nLaura shrugged out of her jacket, revealing a thick, off-white, cotton sweater, \"Well, you know. Not every detail.\"\n\n\"Did you just duh-TAIL?\" Bailey asked, ditching her own jacket.\n\n\"That's how you say it,\" Laura replied.\n\n\"It's DEE-tail,\" Bailey stared at the ceiling in exasperation, then looked at Kent, \"Foreigners, eh?\"\n\nShe twisted around and fell into Kent's lap. \"You're behind us by a couple drinks, and it's weird if you don't catch up.\"\n\n\"This one's on me,\" Laura said and foraged in his closet. \"There we are!\"\n\nShe took a shot glass and filled it until only surface tension held the creamy liqueur in place. \"Quick, quick!\" she told Kent.\n\n\"Jesus!\" Kent cursed, trying to take the glass while Bailey squirmed.\n\n\"Blasphemy!\" Bailey cried out, before Laura could do more than glare.\n\nKent took the glass and downed it quickly, spilling a few drops across the thighs of Bailey's jeans.\n\n\"Attaboy,\" Bailey said. \"Pour him another.\"\n\n\"I don't need to be drunk,\" Kent pointed out.\n\n\"He really doesn't,\" Bailey agreed.\n\n\"Yes, he does,\" Laura assured them both, \"he definitely, definitely does.\"\n\nWhen he got his second shot down, Laura took the shot glass away.\n\n\"We should get a bottle of wine next time,\" Laura said.\n\n\"You could have bought a bottle of wine this time,\" Bailey pointed out.\n\n\"You just bought this?\" Kent asked.\n\n\"On the way here,\" Laura nodded. \"Wait, are you allowed to drink while you're walking around the street?\"\n\n\"No,\" Kent and Bailey replied in unison.\n\nLaura's eyes widened, \"Jees-\"\n\nKent and Bailey stared at her, leaning forward with widened eyes.\n\n\"That was close,\" Bailey observed.\n\n\"Closest I've ever seen,\" Kent agreed.\n\n\"Anyway,\" Laura shrugged, \"We got away with it, right?\"\n\nShe set the bottle down and dimmed the lights.\n\n\"Can we get some music or something?\" she asked Kent.\n\n\"Sure,\" he replied, just starting to feel the alcohol's easy sway get into him as he spun in his chair, Bailey still in his lap.\n\nUnable to get to his mouse with her blocking the right side of his body, he tapped her gently on her cheek to get her to move. She gave a polite, mousy squeak and surrendered her place. A moment later, the deep, gentle beats of Sade came echoing through his speakers.\n\n\"Ni-ice,\" Bailey complimented as she leaned against his desk and closed her eyes.\n\nLaura walked past her and sat on the bed, extending her legs to the floor. Bailey looked over at her, then back at Kent.\n\n\"She's really looking forward to this,\" Bailey faked a whisper in Kent's direction.\n\n\"Shut up,\" Laura protested.\n\n\"So you've resolved all your problems?\" Kent asked. \"I don't want to come between you.\"\n\nLaura giggled, possibly because he'd used the word 'come' but Kent raised an eyebrow anyway.\n\n\"Almost all our problems,\" Laura said, \"But we can get to that later.\"\n\nBailey gave Laura a discerning Detective's Glare, but Laura defended herself by maintaining a neutral, innocent expression.\n\n\"So you don't feel like you have to be here?\" Kent clarified.\n\nLaura nodded, \"I'm here to help and I'm fine with that. That's all.\"\n\nKent looked at Laura, then at Bailey. They had disagreed there, and some point of contention still hung between them. If Kent read it properly, Laura had declared the existence of a problem and Bailey had glared at her in confusion.\n\nBailey doesn't know what Laura means, but Laura remains completely self-assured.\n\nKent put his hands behind his head and leaned back.\n\nDo I need to do anything about this?\n\nSo far, with great success, his policy of waiting everyone out had done wonders.\n\nRule number one, he tried enumerating his internal constitution, has always been to make sure everyone consents to whatever we do.\n\nRule number two, he had just realized, is that I'm better off letting things play out when I don't understand the girls.\n\nHe had learned that the friendship between them ran older and deeper than his involvement. As such, Kent felt a bit of responsibility to make sure he didn't ruin that relationship, and he intended to carry out that duty of care by mostly minding his own business.\n\nThe fact that they both came here, yet again, implies things are fine.\n\n\"So let's see,\" Laura clicked her tongue and looked at he ceiling. \"It's ten spankings over top of my pants?\"\n\n\"For one dollar,\" Kent agreed.\n\nLaura leaned back with her palms on the bed, thrusting her chest outward.\n\n\"And five on a bare butt,\" she sang out, \"and four with panties off.\"\n\nKent laughed, but Laura turned to face him again and locked her eyes on his.\n\n\"What else?\" she asked.\n\n\"What else?\" he echoed.\n\n\"I just remembered that Bailey was thinking of offering something last time,\" she said. \"What was it?\"\n\nBailey stifled a giggle before stuttering out one word, \"Inspection.\"\n\n\"What?\" Laura asked.\n\n\"You take your pants and panties down,\" Bailey moved away from the desk and mimed the actions, wiggling her butt toward Kent, \"and let him see you. Then you pull 'em back up, he spanks you, and you let him look again after.\"\n\n\"Inspection,\" Laura repeated, her eyes widening as she, too, had to hold back a giggle.\n\n\"And?\" Kent drawled out, letting his voice trail off to remind Bailey to continue.\n\n\"Oh, right,\" Bailey added. \"He gets to say how you pose for that part...\"\n\nBailey turned on Kent, rolling her eyes, \"Pardon me for forgetting.\"\n\nKent nodded in satisfaction.\n\n\"And I would do this why?\" Laura asked.\n\n\"It's only eight spankings that way,\" Bailey said.\n\nLaura nodded thoughtfully and looked back and forth a few times between Kent and Bailey.\n\n\"You didn't mention that,\" she finally accused Bailey.\n\nBailey shrugged, \"That wasn't our plan. Two each, remember?\"\n\n\"We can make a new plan.\"\n\nThere's a plan? Kent wondered, barely holding the words inside, which had become difficult with the alcohol. Alcohol had a reputation for making inside words come out. Of course there's a plan. Duh.\n\nBailey took Laura by the hand and dragged her past Kent into the hallway where the two girls briefly conferred in hushed whispers.\n\n\"Yeah,\" Laura assured Bailey, her voice just loud enough for Kent to make out that one word before she went back to murmuring.\n\nThey returned to the room, Bailey closing the door, and made their marks on the board, three each.\n\n\"Six dollars tonight,\" Kent confirmed.\n\n\"Alright,\" Bailey said. \"The first one, since Laura is so excited, is going to be a set of eight.\"\n\nLaura gulped, and looked at Bailey, \"So he tells us how...?\"\n\n\"Uh, huh.\"\n\nThey both turned to look at Kent, still sitting in his rotating chair.\n\nA lot of pressure all of a sudden, he noted, and felt his brain congeal, stilling his thoughts. I need a moment to work this out.\n\n\"We're doing this at the same time?\" he stalled.\n\n\"Yes,\" Laura piped up immediately.\n\n\"Alright,\" Kent said, pointing to the floor in front of him. \"Side by side, hands on your knees.\"\n\nHis heart jumped as he realized events had begun to unfold. The two girls looked at each other and turned their backs, unbuckling their belts and pants.\n\n\"Pants and panties all at once?\" Laura, on the right, asked.\n\n\"Yeah,\" Bailey said. \"On three.\"\n\nBoth girls grabbed the waistbands of their pants.\n\n\"One, two,\" Bailey inhaled deeply, \"and three.\"\n\nWith swift motions, jean, khakis and panties went down and Kent found himself looking at their bare asses. They put their hands on their knees, as he'd requested.\n\n\"How long do we do this?\" Laura asked.\n\n\"Long as it takes,\" Bailey replied. \"When I did it for him before, it was so he could see where I was red from the spankings the day before.\"\n\nShe looked over her shoulder and asked, \"Am I?\"\n\nKent rolled his chair forward and reached out to touch Bailey's right cheek with his fingertips. \"On the lower part, here, mostly, but the left side, too.\"\n\nHer body shivered in his hand and she pushed her hips back a little farther, pressing her flesh toward him.\n\n\"Should be,\" Bailey quipped, turning her head away. \"Thirty spankings.\"\n\n\"Not me, though,\" Laura pouted a bit.\n\nKent took a hold of her right hip while still holding Bailey's left, and gently pushed them together until their hips touched, flesh to flesh.\n\n\"Better?\" Bailey scolded.\n\n\"Yes, thank you,\" he replied politely. \"And no, Laura, there's no redness in your cheeks.\"\n\nKent watched as she squeezed her cheeks together, muscles clenching and thighs flexing in anticipation.\n\n\"Alright, that's good,\" he said. \"Now you two make your own decisions.\"\n\nThe girls pulled up their pants and fastened them back on.\n\n\"Will he really be able to see a difference with just eight spankings?\" Laura asked as she did up her belt.\n\n\"If you want a difference,\" Kent warned, \"I can make that happen.\"\n\n\"Me first,\" Bailey said, her voice clear and urgent, \"Over your lap.\"\n\nKent nodded and shifted himself to the bed as Laura took over his chair, folding her hands in her lap and sucking in her lips in anticipation. Bailey crawled over Kent and arched her back, even more than seemed normal.\n\n\"Right now,\" Kent said, his right hand rolling circles over her denim covered cheeks, squeezed at the lowest parts of her ass, \"You're red here and here.\"\n\n\"Yeah, my seat,\" Bailey rolled her eyes. \"You gonna make it redder?\"\n\n\"Yes.\"\n\nBailey inhaled deeply and buried her face in the pillow under her folded arms.\n\nI know what you want, Kent thought, gripping the lowest part of her right cheek where it met her thigh, you don't want to show off to me. You want to show up Laura.\n\nThe best part about the right side, the reddest part of her rear from the day before, lay in its location. Because she liked her spankings over his lap, he sometimes had trouble striking her left cheek. But this position put the right cheek, situated farther away, right in his wheelhouse.\n\nHe raised his hand in the air, felt Bailey tense beneath him, and landed his first strike.\n\n=============================\n\n\"One,\" Bailey said, hearing the pillow muffle her voice. She turned her head toward Laura, made eye contact, and said again, \"One.\"\n\nKent had struck the lowest part of her right cheek, the sorest, reddest part of her body.\n\nThat matters, she let her gaze wander wistfully across Laura's face, I'm going to have more to show for this than you. I'm going to make sure he goes after that.\n\nThe second strike landed, stinging her flesh even through the denim.\n\nWith a theatrical sigh, she replied, \"Two.\"\n\nTwo more strikes landed in rapid succession, pounded on the same spot.\n\n\"Three, four,\" she suppressed a groan and sang out the numbers as casually as possible.\n\nThis is going to be hard.\n\nShe hid her face in her arms again. Letting Laura see any difficulty on her part would ruin the whole effect she wanted. Instead, she arched her back harder and twisted her hips upward.\n\nA fifth spanking bounced off her right cheek.\n\n\"Fi-ive,\" she sang into the pillow, making sure her voice carried.\n\nI do not want to do any extras this time.\n\nKent slapped her twice more and she lifted her head as a low moan forced itself from her throat.\n\n\"Six, seven,\" she said. \"Damn it.\"\n\nShe turned her head to look at Laura, primly sitting upright in Kent's chair, her hands clamped together and jammed into her lap in what appeared to be wide-eyed fear.\n\nIs she scared of getting spanked now? That's not likely. So what...\n\nLaura, unaware of Bailey's eyes, kept her own eyes locked on Bailey's rear. Bailey saw the glistening of Laura's brow and realized something else had happened. In her lap, Laura's clenched fists twitched.",
        "Oh, dear. She's not afraid at all.\n\nDistracted, she didn't sense the eighth spanking coming and it took her by surprise, forcing an entirely unwelcome yelp before she even felt the sting.\n\n\"Eight,\" she chirped.\n\nHer body relaxed then, and she looked back at Laura, still sweating in Kent's chair.\n\nIs she quietly having orgasms during this whole thing?\n\nBailey turned back to Kent, \"Should we do the inspection now, or after?\"\n\nKent laid his hand on her right cheek and squeezed, \"Isn't that up to you?\"\n\nShe shook her head in response. \"We choose how the spankings go. You choose how we pose.\"\n\n\"Fair enough,\" he gave her a last squeeze and then a gentle pat on the rear, \"we'll do it after. Together.\"\n\nBailey wiggled in his grip to shake him off and stood up.\n\n\"How do you want yours?\" she asked Laura.\n\nLaura inhaled, coming to her senses, and stood up.\n\n\"I think, um,\" she trailed off, looking around the room. \"Kent's way. But-\"\n\nKent waited patiently while Laura examined his room with an uncertain frustration. The room didn't have the size to merit a lengthy search for whatever she wanted, so Bailey didn't understand why she kept scanning the small space. Finally, Laura opened his closet and found what she wanted.\n\n\"A stepping stool?\" Kent asked. \"That's not even mine.\"\n\n\"Why's it here?\" Bailey asked.\n\n\"Some short person forgot it?\" he offered.\n\n\"Well, some short person needs it now,\" Laura carried the plastic prop to the bed and dropped it at Kent's feet. \"Out of the way, boy.\"\n\nKent obliged and watched as Laura stepped up onto the stool and leaned out over the bed. She locked her knees straight and then brought her upper body all the way down to the bed.\n\nWell, Bailey thought, both eyebrows raising in appreciation, I wish I'd come up with that.\n\nLaura stood a bit shorter than Bailey, but cranking the floor up by twenty centimetres did wonders for the shape of her friend's cheeks, which she'd perched well above the height the bed.\n\n\"Good?\" Laura turned to Kent.\n\n\"Great,\" he complimented her with clear sincerity.\n\nBailey bristled, wishing she'd gone second, and carefully took a seat in the chair so she could face Kent in his place at Laura's left side. Even if Laura had turned her game up a little, she could still enjoy watching her get spanked.\n\n\"So...\" Laura trailed off.\n\n\"So?\" Kent asked.\n\n\"You'll really be able to see a difference,\" Laura asked, \"when you, uh, inspect us.\"\n\n\"Don't worry,\" Bailey said, meeting Kent's eyes, \"he'll make sure.\"\n\nThat's a warning Kent, she thought, we're both expecting you to go just as hard with her as you did with me.\n\n\"Here it comes,\" Kent taunted.\n\n\"Mm,\" Laura replied.\n\nHe placed his hand on her left check, deciding that she and Bailey ought to be symmetrical rather than matching. Since Laura had chosen to stand up, she'd made it a lot easier for Kent to go at whichever part of her ass he wanted. And the way she'd perched herself so high exposed absolutely everything.\n\n=============================\n\nKent understood this part of the game. Whatever else went on between the two girls, he knew exactly what Laura wanted. He smiled, realizing that the competition had already begun between the two of them and they'd only started one set of spankings.\n\nHe pulled his hand back and struck the lowest part of Laura's left cheek. A satisfying crack, higher pitched than Bailey's denim provided, echoed around the room.\n\n\"Ooh,\" Laura winced. \"Nine. Is that harder than before?\"\n\n\"It's as hard as I went on Bailey,\" Kent kept his tone neutral and waited.\n\nLaura looked back at him and gulped before turning away.\n\n\"Well,\" she said, \"Go on, then.\"\n\nHe had no intention of letting up, but if she wanted to stop, she knew to say so.\n\nKent whacked her again, hammering on the same spot.\n\n\"Ten,\" Laura spoke to the wall.\n\nOn the third strike, he watched her knees bend as she called out, \"Eleven.\"\n\nKent glanced over at Bailey, but found her eyes locked on Laura's ass while she held her thighs clenched together.\n\nHe struck again and heard Laura moan, her arms stretching out to the corners of the bed.\n\n\"Oh, dear,\" Laura said slowly. \"What's that? Twelve?\"\n\n\"Half way,\" Kent said. \"Are you going to make it?\"\n\n\"I'm fine,\" she quipped quickly.\n\n\"Because you made three marks on the board,\" Kent reminded her. \"It's early.\"\n\nTaunting them remained a favourite sport.\n\n\"Keep going.\"\n\nHe gave her two shots in a row, slapping the left cheek hard and giving her no time to breathe between strikes.\n\n\"Thirteen and fourteen,\" Laura gasped.\n\nKent smiled as he looked at Bailey, and this time their eyes met. She smiled back and gave a little chin tick in the direction of her friend's cheeks, as if to say, \"Finish her off.\"\n\nHe nodded and slapped her twice more, making the last one harder than any of the others.\n\n\"Oh, god!\", Laura cried out. \"Fifteen and sixteen.\"\n\nShe rose up on her hands, still bent over, and panted. Turning around, she sat down tenderly and looked at Kent.\n\n\"You would think,\" she said and took a deep breath, \"I'd be used to it by now.\"\n\n\"Now the end part,\" Bailey looked at Kent expectantly but didn't rise from her chair.\n\n\"Right,\" Kent stroked his chin and starting imagining how he could arrange them.\n\nThe key here is that, when I did this last time, I massaged Bailey's butt where I'd smacked her hardest. She's probably expecting that again, maybe even assuming it's part of the whole deal.\n\n\"Alright,\" he made his decision and pointed to the bed. \"Laura here on the right, Bailey over here on the left. Lie on your stomachs.\"\n\nPart of him had wanted to get them into nicer doggie-style positions, maybe with their legs spread so he could get a good look at them, but he'd decided to save that for later.\n\nI can find a way to see their pussies later if I really need to.\n\nOnce both girls had lain down, he crawled over Laura and knelt between them, sitting on his heels. Bailey had to squish over against the wall on the small bed but she made just enough room.\n\n\"Whenever you're ready,\" he said.\n\nThe girls looked at each other, shared a brief nod, and reached under their bodies to undo their pants. With some awkward wiggling and hip raising, they got their pants and panties off. He set his right hand on Laura's cheek and his left on Bailey's. He'd positioned them this way on purpose, so that their reddest cheeks would be closest.\n\n\"Can you see it?\" Laura asked, a touch of eagerness in her voice.\n\n\"Right here,\" he said, squeezing her left cheek hard, eliciting a moan of pleasure of pain.\n\nHe squeezed Bailey's cheek, too. She didn't need to ask how she looked.\n\nA curious effect then came to his attention and he had to evaluate the situation before him.\n\nBailey is wearing tight denim, he noted, while Laura is wearing a loose pair of khaki pants. They still look pretty good on her ass, but they definitely give her more room to move around.\n\nDespite this, however, he could easily see the difference in their poses.\n\nLaura has her thighs clamped as tightly together as she can manage. Bailey, though, is straining as hard as she can to spread her legs apart, even though the wall is in her way.\n\nSo while he kept his right hand on Laura's cheek, sinking his fingers in with a deep massage, the left hand on Bailey's cheek he let... wander.\n\nHow daring is she feeling right now?\n\nHis index finger came around the inside of her cheek, sliding down toward her thigh and under. Laura let out a moan of pleasure, enjoying the massage. But when his fingers just grazed Bailey's short hairs, she let out a moan of an entirely different calibre, her back arching and her legs straining so hard against her jeans that the denim creaked.\n\nEncouraged, two of his fingers wandered across her hair to touch the cleavage of lips, feeling a moistness leaking out.\n\nBailey let out a wistful sigh and, with obvious regret, gently closed her legs against his touch. He returned to his massage, working both girls over the same way.\n\n\"This is the inspection?\" Laura's voice had gone soft.\n\n\"It was the last time,\" Bailey sounded tranquil as well, squirming lightly in his grip.\n\n\"How long does he get to grope us?\" Laura added, as if Kent couldn't hear her.\n\nBailey shrugged, clearly enjoying her half of the 'inspection'.\n\nI think this just turned into a spa for them.\n\nKent didn't mind. It became another opportunity to compare their butts, watching the way their muscles worked as they squirmed under his grip.\n\nBailey doesn't want to come yet, not while Laura is around at least. Maybe later.\n\n\"We still have more to do,\" Laura said.\n\n\"Yeah,\" Bailey agreed. \"Alright, Kent. That's enough.\"\n\nWith some regret, Kent gave up his hold on their cheeks, patted both of them gently and dismounted from the bed. As he sat his chair, Laura started working on her pants, carefully keeping the front of her body faced down and hidden while she pulled everything back into position.\n\nBailey waited until Laura sat up before she even moved. Without making eye contact with either of them, she rolled over on her back, swung her legs over the edge of the bed, planted her feet on the ground, and only then whipped her pants back into place.\n\nShe let me see her on purpose, Kent thought, one-upping Laura for sure, almost mocking her friend's shyness.\n\nOut of the corner of his eye, Kent saw that Laura had clearly seen Bailey as well, and he noted the touch of envy in the other girl.\n\nIt won't take much longer for Laura to dare some similar act, he knew instantly, and Bailey only did that because Laura got up on the stool.\n\n\"Okay,\" Laura admitted, facing Kent while rubbing her cheek, \"I definitely agree that you can make my butt look different with just eight spankings.\"\n\n\"As if there was any doubt,\" Bailey rolled her eyes and swept her short, reddish hair back over her ears.\n\n\"Proof of concept,\" Kent said. \"Although it really depends on the rest of your plans.\"\n\n\"The rest of our plans?\" Laura asked.\n\n\"He mean,\" Bailey explained, \"it only really makes sense to do an inspection if we weren't going to take off our pants at some point.\"\n\n\"Yeah,\" Kent agreed, his eyes narrowing dramatically on Laura, \"Bailey uses it when she's only doing over-the-pants type stuff that day. But if you were doing that, I suspect you'd have done all three dollars over top of your pants, and done the inspection at the very end.\"\n\n\"Oh, right,\" Laura nodded, her eyes glazing over in thought. \"We could do that. I'll remember next time.\"\n\nBailey waited a moment before nudging Laura. \"Are we ready for the next round?\"\n\nLaura shook herself and nodded, then faced Bailey and let out a little giggle.\n\n\"Go ahead,\" Bailey told her, raising her arms in the air.\n\nLaura knelt down in front of Bailey, fought with the button on her jeans for a moment before getting it undone, then forced the waistband down over her hips, and finally let her pants fall to the floor in a pile of denim. Bailey, now wearing only her blue, athletic pair of panties, kicked aside her jeans as Laura stood up.\n\nThe khakis came off much more easily since Laura didn't like her clothing that tight. A moment later, two girls in their panties turned to face him.\n\n\"You should know,\" Bailey faked a whisper to Kent, \"she didn't have to change underwear before we came.\"\n\n\"You're suggesting this lacy white thing she's wearing,\" Kent replied, \"isn't normal women's wear?\"\n\n\"I'm saying, she's started dressing to be spanked all the time.\"\n\nLaura smacked Bailey on the shoulder, eliciting another awkward giggle between the two of them.\n\n\"Alright,\" Bailey said. \"You go first this time.\"\n\n\"Five, right?\" Laura confirmed, directing her question at the ceiling.\n\nHer left hand traced over the red spot on her rear.\n\n\"Okay, okay,\" she breathed, her brow furrowing in concentration. \"Okay, got it.\"\n\nShe took Kent by the hand and stood him up, then pulled him across the room and settled him in with his back to his dresser.\n\n\"Hold me up,\" she said, \"Like before.\"\n\nLike before, Kent knew exactly what she meant, she wants it the way we did it at the Halloween party.\n\nThe difference, this time, lay in her courage. As she bent over his left arm, she put her breast directly into his hand, discarding the coyness with which they'd reached that point on the last occasion.\n\nShe's not wearing a bra under there.\n\nThe thickness of the sweater had hidden her lack of undergarment, but he felt it now very clearly in the soft, liquid way her breast moved under his hand. He met Bailey's eyes over Laura's back and saw a smile on his roommate's face. She nodded to him and made a claw-like motion with one of her hands.\n\n'Squeeze,' she mouthed to him emphatically, adding a wink.\n\nThey talked about this? This was part of 'the plan'? It must have been.\n\nExperimentally, he shifted his grip on Laura's breast, gently rolling it around in his hand, feeling for her nipple. He gave her a good squeeze, drawing a moan from her throat, and laid his right hand on her farther, right cheek -- the only one on which he could get a good spanking angle.\n\n\"Ready?\" he asked.\n\n\"Uh-huh,\" she breathed shakily.\n\nTiming is everything here. What exactly would make her feel the most here?\n\nHe swung his hand back and, just before it came crashing down, he tightened his grip on her breast. That squeeze, done just right, surprised her into tensing up her entire body in surprise, which meant the spanking landed on a tightly wound muscle.\n\nLaura groaned, \"Seventeen.\"\n\nThat's it, Kent thought, now she knows what's coming. If she doesn't want to tense up when I grab her tit, she won't do it for the next one. But if that's what she wants, I'll keep doing it that way.\n\nThe right hand swung back, the left squeezed, a girl's body tensed up entirely voluntarily, and a swat landed on a fresh, pale piece of ass cheek.\n\n\"Eightee-een,\" Laura moaned.\n\nOn the other side of Laura, Bailey smiled cheerfully, nodding to Kent and egging him on.\n\nHe continued extracting his dollar from Laura's cheek, spreading the red around instead of focusing it too much. Kent didn't want to wear her out, and he knew they had another set to go.\n\n\"Nineteen,\" Laura said softly when the next one landed.\n\nHer nipple had hardened enough, given his stimulation, that he could feel it through the material of her sweater. Turning his hand a bit, he managed to capture it between his thumb and forefinger.\n\n\"Oh-\" Laura managed to squeak when he squeezed it, given her just a fraction of a second before he struck her cheek again.\n\n\"Twenty,\" she chirped.\n\nKent had her nipple then, and rolled it gently, giving her a little twist. Laura panted in his grip, threatening to hyperventilate. He released her for a just a moment, and she sighed in relaxation before he squeezed her entire breast again, delivering a simultaneous slap to the lowest part of her right cheek.\n\n\"Oh!\" she cried out. \"Twenty-one.\"\n\nShe stood up immediately, only to have a regretful look come over her face as she looked down at his hand.\n\nShe wanted more of that, Kent thought with chagrin, at least the tit-squeezing part. So did I, but the moment's lost now.\n\n\"My turn, my turn!\" Bailey hopped up.\n\n\"And what do you want?\" he asked.\n\nShe sat on the bed and looked at him, \"Remember the offer Laura made?\"\n\n\"Which one?\"\n\n\"Two extra spankings,\" Bailey clarified, \"But she tells you which side to do it on?\"\n\n\"I remember,\" Kent nodded.\n\nBailey looked at the floor, her teeth clicked against each other twice in thought, and she shook her head.\n\n\"No,\" she said, still looking downward thoughtfully. \"No. I owed you two hundred bucks, right?\"\n\nKent nodded.\n\n\"And this whole 'offering my butt' thing was my idea,\" she added, now looking at Laura. \"So if you want to spank the sorest part, that's... well, that's only fair, right? I have to pay off my debt.\"\n\nLaura's lips twisted slightly and she sighed.\n\nWithout waiting for anything else from Laura, Bailey turned around, stepped up on the stool and bent over the bed until her breasts touched the bedsheets.\n\nShe, at least, is wearing a bra, Kent noted the perkiness of her breasts as she leaned over. But wow, look at what she's offered.\n\nWith her back arched and her legs up so high, the muscles of her rear had stretched and tensed. He could clearly see, even in the room's dim light, the two reddest parts of her ass. The left still bore the marks of the thirty spankings she'd taken the night before, but the right glowed freshly red with today's efforts.\n\nAnd she just basically told you that she wants five more, right there.\n\nKent checked his peripherals, noted that Laura watched with wide-eyed shock bordering on horror.\n\nThe stool, though, is brilliant. It's even better with a naked ass than a-\n\n\"Too bad we don't have a second stool,\" Bailey said, moving her feet to the edges. \"We could put them farther apart.\"\n\nOh, god, she's killing me.\n\nHe took his spot to her left and laid his right hand on her right cheek.\n\n\"You ready?\"\n\n\"Another day,\" she quipped, \"another dollar.\"\n\nEgging me on.\n\nHe struck without hesitation, slapping at her cheek just above the reddest part.\n\nDoes she want that one spot to hurt even more? Or should I make the spot bigger?\n\n\"Yes,\" Bailey hissed, and followed with a moaned, \"-two.\"\n\nAlright, then.\n\nHe moved his hand lower and slapped her again.\n\n\"Twenty-three.\"\n\nHard and fast, is that it?\n\nKent delivered two more hard cracks off her ass.\n\n\"Oh, god,\" Bailey shivered. \"Twenty-four and twenty-five.\"\n\n\"Last one,\" he warned.\n\nShe pushed her cheeks out at him, waiting, and he delivered a final sharp strike.\n\n\"Twenty-fix,\" she breathed, and rolled onto the bed on her back. Her hands went to her panties, pressing down on her lips as she moaned.\n\nKent watched her body heave, wondering if she planned to make herself come.\n\nWould she really masturbate right in front of us? Maybe. Both girls obviously have a bit of exhibitionism in them.\n\nAfter a few gasps, however, Bailey got herself under control.\n\n\"You two need a minute?\" Laura let out another giggle.\n\n\"I'm fine,\" Bailey admonished her friend with a glare, not altogether convincing given the heavy blush running through her entire face.\n\nBailey rolled out of bed gingerly, then sat back down, carefully supporting her body on the least abused part of her cheeks, leaving the lower, reddened parts hanging over the edge. She crossed her ankles and faced Laura.\n\nKent looked back and forth between them, wondering what they had planned next, but the girls only looked at each other. When he shifted his stance, nursing an uncomfortable erection, it broke the spell. Laura stood up and drew him over the to chair, bade him to sit. She then dropped down in his lap.\n\n\"Oh?\" she blurted out, then wiggled in his lap.\n\nThe tip of his erection, through his pants, poked directly between her legs. She moved her body around a bit until the bulge settled against her a bit less intrusively.\n\n\"Well,\" she sighed, then inhaled and looked at him. \"Okay, let's put that aside a moment.\"\n\n\"Put what aside?\" Bailey chided her.\n\nLaura frowned, clearly having trouble deciding how she wanted to describe her situation. Instead of speaking, she just twisted her ass in his lap, causing Kent to groan.\n\n\"That,\" Laura said with a roll of her eyes.\n\nKent put his arms around her, interlacing his fingers around her bare hip, half under her sweater.",
        "\"Kent,\" she said. \"Bailey has a problem.\"\n\n\"Besides a debt of one hundred forty dollars?\"\n\n\"Yes,\" Laura went on. \"And because Bailey has a problem, I have a problem.\"\n\nBailey peered at Laura, who rolled her eyes and looked at the ceiling.\n\n\"And because Bailey and I have a problem,\" Laura concluded, \"you have a problem.\"\n\n\"I'd rather hoped to be a solution,\" Kent said. \"At least for the debt part.\"\n\n\"It's about the friendship part,\" Laura said. \"Which we shouldn't damage with the debt-paying part.\"\n\nKent considered this before speaking, and only chose to speak after a long delay of confused glaring between the girls.\n\n\"You're helping her pay her debt,\" Kent said. \"So that's good. But I don't want for this to somehow come between you.\"\n\nLaura looked over at Kent in surprise. \"Exactly!\"\n\nKent felt himself jump at her enthusiasm. With a last little grind, she hopped up and walked over to the whiteboard. She took the marker and looked back at Bailey, then at Kent. She closed her eyes, took a deep breath, gritted her teeth thoughtfully and finally let out a sigh.\n\nOpening her eyes, she shook her head. \"Gotta do whatcha gotta do.\"<br >She uncapped the marker and, instead of making extra tick marks, drew an extra box beside the one already there. With a last deep breath, she wrote in the box, \"$2\".\n\nLaura then returned to Kent and dropped her panties clad cheeks down in his lap.\n\n\"What?\" Kent asked, looking at her, but she only looked at Bailey, who appeared equally confused. \"You want me to give you money so you can have your own debt?\"\n\n\"No,\" Laura said, looking at Bailey. \"Not that.\""
    ],
    "authorname": "xtorch",
    "tags": [
        "spank",
        "spanking",
        "stripping",
        "nudity",
        "panties",
        "friends",
        "exhibition",
        "posing",
        "competition",
        "debt"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/two-hundred-dollars-ch-14"
}