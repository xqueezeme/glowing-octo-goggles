{
    "title": "The Infinite Bk. 03 Ch. 05",
    "pages": [
        "Score\n\nEvery week, Noah and the other cadets were put through the revelry exercise, and each time, a different class would take place in the slums. Word of Noah's agility had reached the teachers, so he was always picked to be a runner, and unlike in Sir Kiev's class, he and his fellow cadets were armed. He spent the frosty mornings and dark afternoons running among the shacks and dodging his pursuers. He had maintained his winning streak so far, but the margin was shrinking. The cadets became more accustomed to the environment and tactics with each passing week.\n\nToday had been his archery class, and his usual bad luck with arrows had decided to rear its ugly head. Just like the academy's spears, the arrows had blunt ends, but the pain of being shot was on par with a paintball, and he had already accumulated several bruises by the time class ended. He was glad to finally return to the academy, more so when he reached the bathhouse. He wanted badly to soak his bruises and head to dinner, but he was stopped before he could reach the door.\n\nFive cadets clustered in front of him, three he recognized from the barracks and two from the mid-level dorms. All five of them had nervous looks, sheepish.\n\n\"Hey, Noah, we hear you're a pretty sneaky guy,\" the apparent leader said.\n\nNoah was hesitant to reply. \"In what regards precisely?\"\n\n\"The runner drill, you're uncatchable. Everyone knows it,\" one claimed.\n\n\"That's why we need your help with something.\"\n\n\"Something that can only be spoken of quietly? That should be your first clue not to ask.\"\n\n\"Listen, we have a golden opportunity, something that might interest you. You know that closet around the corner from the women's baths?\"\n\n\"I think I know where you're going with this...\"\n\n\"The back wall isn't actually a wall. It's a door leading to a hidden passage that runs behind the bathhouse wall. Some of the stones in the wall of the women's bath aren't actually stones. Supposedly, they're special windows that you can look through if you're behind them. We're about to give it a shot. We figured you could help us out.\"\n\n\"Thanks for the offer, but I'm going to pass. You guys have fun.\"\n\nThey seemed disheartened, and one of them even got defensive. \"You're not going to rat us out, are you?\"\n\n\"I don't care personally or morally enough to do that. Now, if you don't mind, I have some bruises that are crying for hot water.\"\n\nThey scurried off, and Noah made his way to the men's baths, but his hand stopped before he could open the door. An idea had just popped into his mind. True, ratting on them wouldn't be very entertaining, but sabotaging them would be. He usually abstained from these things, but he couldn't ignore such an easy justification. He cast his invisibility and went after the five cadets, finding them in the aforementioned closet. To his surprise, the passage did exist. The sidewalls of the closet were stone and brick, just like the rest of the academy, but the back wall was wood, and they had busted through into a hidden compartment that ran the length of the women's bath.\n\nHe could hear them in the dark, whispering and complaining that they couldn't see anything. Standing outside, Noah reached into a pouch on his belt and pulled out a small book. He flipped it open to a particular page, where a snakeskin had been glued to the paper. It belonged to the blue viper, a snake commonly found further out west and known for its loud warnings, extreme aggression, and horrifying venom. It was the perfect field test. He summoned an illusionary serpent with the skin and piloted it into the hidden passage. Getting it to hiss like a real snake was the tricky part, but the five cadets got a bigger thrill than they expected.\n\nMeanwhile, in the women's bath, Alexis had just gotten comfortable and was lucky enough to be joined by Sophia.\n\n\"I heard we're having fish stew tonight,\" said Alexis.\n\n\"Ugh, I hate fish stew. Either it tastes terrible, or it's nothing but bones.\"\n\n\"I know, right? How do they mess up fish that bad? They only use maybe four ingredients, and it somehow tastes the exact opposite of fish.\"\n\n\"It's not even fish. It's like boar testicles soaking in goblin blood.\"\n\n\"It's mushy barnacles seasoned with the tears of children.\"\n\n\"It was probably concocted as a way to torture prisoners.\"\n\n\"I bet that stew was mentioned in someone's suicide note.\"\n\n\"Marauders eat it before a raid to kill their conscience. It's... Wait, did you hear that?\" Alexis asked.\n\n\"Hear what?\"\n\n\"I thought I heard a noise. It was coming from--\"\n\nTHUMP!\n\nBoth of them heard it, coming from the nearby wall. It was followed by a third and fourth and even the sounds of muffled voices. As it continued, the other women in the baths began to notice, especially when the voices turned into outright screaming and the wall itself began to shake. Many instinctively grabbed towels to cover themselves, a wise choice, as the wall finally crumbled from a poorly-executed spell and the five cadets tumbled in.\n\nOne of them, Cadet Higgins, looked up and found himself the recipient of countless angry glares. \"There uh... there was a snake...\" he stuttered.\n\n----------\n\nAutumn had progressed around the academy, and this morning was more than a little frosty, making it unpleasant for the cadets who had to stand at attention. Normally, they'd be running laps, and at that moment, many wished it was just a typical day. The entire academy was observing the five cadets, tied shirtless to logs staked into the ground. They could be seen shivering from both the cold and their fear.\n\nWith sunlight now a valuable commodity, Commandant Ford didn't waste any time. \"You five cadets have been found guilty of the crime of voyeurism, as well as damaging academy property. You have shamed yourselves, your families, and this institution, and will each be punished with fifteen lashes. Be grateful I don't expel you after. Sir Kiev, if you would please...\"\n\nSir Kiev stepped forward with a bucket of water and moved behind the first cadet, crying and begging for mercy. He reached into the water and pulled out a leather whip, soaked for an extra sharp strike. He swung the cord, and everyone winced. CRACK! The young man's back was slashed to the sound of his anguished cries. The second strike came before he could catch his breath, once more causing all of the cadets watching to tense up.\n\nThird, fourth, fifth, they came and raised the volume of the cadet's shouts, only to drop as he lost the strength to react. After the fifteenth, Sir Kiev handed out the punishment to the next cadet, and so on to the rest. Higgins, or rather \"Piggins\" as many called him, released a fitting squeal when he was struck. Eventually, the whip was put away, and the five cadets were untied now with bloody backs. Their wounds were covered to prevent infection, but they were denied healing magic or potions, as well as exemption from classes.\n\nThe rest of the cadets were more than happy to be able to finally head to the mess hall, even though most of them had lost their appetites. Throughout breakfast, everyone was either extra talkative or extra quiet. The five cadets, still recovering from their wounds, ate together in an isolated corner of the mess hall, as no one wanted to be associated with them. Today, everyone had something on their mind, including Alexis.\n\n\"Hey, Noah, you have that weird magic that lets you... disappear, right?\" It was rare to see her nervous like this.\n\n\"I become invisible, but yes.\"\n\n\"You haven't ever...\"\n\n\"Committed the crime of voyeurism? No, I haven't.\" He answered nonchalantly and continued to eat, but it didn't quite put her at ease.\n\n\"I have a hard time believing any man with that ability wouldn't... use it for that.\"\n\nNoah glanced at her as though looking over the rims of a pair of glasses. \"Alexis, I don't need to spy. If I want to see the women here naked, I can just get them naked. Though we'd have to do in their rooms, as I certainly couldn't take them back to the barracks.\"\n\n\"Good God,\" she groaned.\n\n\"Hey, you asked. But maybe you're right; maybe I am wasting my talent. Thanks for giving me the idea.\"\n\n\"All right, sorry for asking.\"\n\n\"No, I'm serious. Leave a chair out for me where I'll have the best view of everyone.\"\n\nBefore she could tell him off, Sir Kiev entered the hall. \"Cadets, stand at attention for the commandant!\"\n\n'What now?' Noah and the others thought as they got to their feet. They stood with perfect posture as Commandant Ford appeared from behind Kiev. He began walking through the hall, silently scrutinizing the cadets.\n\n\"Considering what you all witnessed outside, I had considered postponing this announcement for another day when your minds were clear. However, perhaps now is the best time to speak to you about honor. You have all made it through the summer months, which is no small feat. If it was, then I would not be doing my job. I see you carry your weapons proudly and understand the burdens of skill they demand. Think of your weapons as your rewards, for now that each of you is armed and somewhat capable, you are entitled to a special privilege: dueling.\n\nFor those of you who don't know, every member of the knighthood is inducted into the dueling registry. It is an archive of official battles that is available to the public, meaning that anyone, commoner or noble, can find out how many victories or defeats you've experienced. It will be the foundation of your reputation as a knight.\n\nDueling may be used to settle disputes of honor and insult, which will also be recorded. Losing as the challenger is far worse than losing as the challenged, so think carefully before issuing one. Along with losing prestige, defeated challengers must fulfill one request of the winner, agreed upon by both parties before the match, but the standard challenger payment is a silver coin.\n\nAs cadets, you can only wager what physically belongs to you on academy grounds, so no demands of land or family favors, nor can you challenge another cadet simply because they have something you want. All duels must be officiated by an impartial knight one rank above yourselves. We teachers will fulfill that role and provide you with the rest of the rules. You can only duel in the hours before dinner, and challenges cannot be made during your lessons. Once challenged, participation is mandatory. To declare a duel is a decision that can affect the livelihoods of the participants and their families. Do not be hasty in how you wield this power. Good day.\"\n\nHe departed, and the cadets returned to their seats, briefly silent until several linked together into a gossiping hivemind. Rather than sitting back at his table, Gideon remained standing. He strolled over to a group of nobles and pointed at one, whom Noah recognized from his sword class as Sorn Highroar. \"You, I challenge you to a duel. We'll fight today.\"\n\n\"I don't even know who you are!\" the young man replied.\n\n\"Just call me Gideon.\" He then glared at the other nobles. \"After him, the rest of you are next.\"\n\nNow that the ice was broken, a few other cadets started to get up and cross the room to begin issuing challenges. Only the challenged could make winning requests, but the honor and boost to one's standing were worth the risk for many.\n\nNoah turned to Alexis. \"I had a feeling they'd implement something like this. Hopefully, things don't get too bloody from here on out.\" Alexis didn't respond, staring down at her own balled fists before getting to her feet. \"I suggest you sit back down.\"\n\nHe said it gently, but she still turned to him with a harsh glare. \"Excuse me?\" she asked without her teeth parting.\n\n\"You want to go after that prince, right? I'm sure you have your reasons, but think about what you could win versus what you could lose if you challenge him. Dueling is going to create ripples in everything here at the academy. You should study the flow before you dive in. Take your time and wait for your moment.\"\n\nOnce breakfast was over, Noah brought his empty tray and dishes back to the kitchen, but when he turned around, he found himself face to face with Prince Seraph.\n\n\"Cadet Noah, I challenge you to a duel. I'm going to prove to everyone that I'm the better warrior!\"\n\nNumerous challenges had already been made, but it was Seraph's that drew all the cadets' attention in the mess hall. Their eyes were on Noah, awaiting his response.\n\n\"No.\"\n\nHe put his tray down and walked away. Seraph stormed over and grabbed him by the shoulder. \"You don't get to say no! You've been challenged, and you will fight!\"\n\nNoah brushed his hand away. \"Sorry, but I have things to do. Go play with someone else.\"\n\nThe surrounding cadets exchanged looks of confusion and disgust as Noah continued walking.\n\n\"You can't just walk away!\"\n\n\"And yet I am, isn't that strange? Some evil spell must be at work here, moving my legs when all reason says I should be standing still!\"\n\n\"Coward! You have no honor!\"\n\n\"You're right, I don't, but good for you for figuring it out. Really, amazing deduction skills. Isn't that right, folks? Come on, let's all give Prince Seraph a round of applause!\" He began loudly clapping his hands while heading for the door. \"So incredible! So brilliant! You really are the greatest!\"\n\nHe passed through the mess hall doors, and Seraph chased after him, only to find an empty corridor. Having watched the exchange, Alexis heard a malicious voice behind her.\n\n\"My, my, your friend has no honor whatsoever.\" She spun around to face Prince Galvin, smirking just like every other time they met. Behind him was Sophia, carrying hers and his bags like a proper servant, much to Alexis's anger. \"I had heard such stories about how he went head to head with Lady Zodiac, but it seems it was just a fluke, or more likely, a cheat.\"\n\n\"You would know all about cheating, wouldn't you? When was the last time you ever won something honestly? Without your mother helping you?\" she hissed.\n\n\"Oh, are you trying to bait me into challenging you to a duel? That's just the kind of thing I would expect you to do. You're always so violent and brutish.\"\n\n\"You insult my friend and then accuse me of--!\"\n\nHe laughed her off. \"Take it easy; you're making a scene. I just wanted to let you know that if you want to challenge me, I'm ready whenever you are.\" He then stepped closer so that only she would hear him, close enough that Alexis was sorely tempted to spit in his face. \"But whatever you do to me, I'll do to her, ten times worse.\"\n\nAlexis's stomach was twisted into knots, and her chest was filling with mud, but her hands burned with the flames of her rage, unsure of whether they wanted to beat him to death, strangle the life from him, or gouge out his eyes. She looked at Sophia, saw her hopelessness, and almost gave in to her bloodlust, but her love shook her head, warning her to stop. Alexis gritted her teeth, feeling like she was going to retch, and with all her strength, she turned around and walked away.\n\n'I'm so sorry, Sophia. This is all my fault.'\n\n----------\n\nShield class. It was the most hated part of the week for many, while others found it somewhat comforting. When they weren't studying techniques, all the cadets had to work together to dig a giant pit, with each class taking turns expanding it. The rules were that the depth and diameter had to always be the same and that they could use nothing but their shields to dig with. They were shaped like shovelheads, with a strong handle and a leather arm strap.\n\nEvery cadet would have to punch the bottom or the sides of the pit to break up the hard clay with the tip of their shield, pile on the dirt, and then carry it out to be dumped onto the growing pile. After months of digging, it could hold as much water as an Olympic swimming pool. Luckily, they enjoyed the seasonal butter zone, where the summer sun no longer baked their backs, but nights weren't cold enough to freeze the ground.\n\nIt was filthy, sweaty, exhausting, and painful work, and everyone fought to ignore the fact that they'd just end up filling the pit back in at the end of the year. To distract themselves, the cadets would gossip whenever they could, and of course, the main subject was Noah's refusal to duel the prince. However, watching over them was Sir Kiev, making sure no one slacked off. He was quick to yell at anyone talking or resting too much.\n\nNoah had found a way to avoid his wrath and was taking a break while his clone did his job for him. Since it was only an illusion, it couldn't actually break up the earth or carry it, but it could convincingly mimic the movements and sounds. Every now and then, he'd work for real and haul up some dirt for the sake of appearances. He sat in the shade, invisible, trying to meditate while everyone else worked. Meditation helped restore his mana.\n\n\"All right, that's enough digging for now. Back to training,\" Kiev barked.\n\nThis was his typical lesson plan. He'd have the cadets dig until they were sore and exhausted, then pair off and pit them against each other, with and without shields. They'd stand in circles ten feet in diameter and fight just like in the enrollment brawl, trying to knock each other out of the ring. If they were barehanded, they'd duke it out with punches and kicks, using the styles and moves that Kiev taught them. If they had shields, they'd take turns slamming into each other's defenses, trying to force their opponent back rather than cause harm. What had initially been so easy at the start of the year was now taking more and more effort as the cadets figured out their footing and how to properly brace themselves.\n\nLike everyone else, Noah was happy to arrive at the bathhouse after class, but it was not as peaceful as he hoped it would be.\n\n\"What are you doing, turning down a challenge from the prince?!\"\n\n\"Ungrateful bastard, I'd give my right arm for the opportunity! The challenger payment is too good to ignore!\"\n\n\"This is going to make us all in the barracks look bad!\"\n\nThe complaining came from the three Thuln brothers, stupid and noisy as always. They were usually easy to avoid since they could be heard from a mile away, but now they had Noah cornered and were bombarding him with their full-volume gripes. He ignored them, never even making eye contact as he changed out of his uniform and headed into one of the baths.\n\nAll around him, cadets were talking about duels, and few people were paying any attention to Noah, at least beyond shooting him dirty looks. That changed when Seraph entered and spotted him.\n\n\"You! You owe me a duel! I'm not going to stop until I've beaten you.\"\n\nNoah sighed. \"Look, Prince, maybe a bathhouse isn't the best place to challenge men to swordfight.\" The room's acoustics worked to Noah's advantage, and in seconds, loud snickering was bouncing off the walls from countless cadets.\n\n\"You think you're so smart? You're nothing more than a court jester but without the backbone,\" Seraph growled.\n\n\"You want to be the greatest warrior? Fine, I hereby acknowledge you as the greatest warrior. You are superior to me in every way, oh mighty prince. May no one ever again question your supremacy. If you write it down, I'll even sign it. Are you happy now? Everyone here is a witness to your eternal glory.\"\n\n\"Don't you patronize me! I'm going to grind you into the dirt!\"\n\n\"No, you're not.\" Noah stood up and grabbed a towel. \"I'm not interested in being a prop for you to indulge your ego. If you want to fight someone, go stomp on the Thuln brothers.\"\n\nAfter his trip to the bathhouse, he met Alexis for lunch, only to find her in a sour mood.\n\n\"Why didn't you accept the challenge?\" she asked coldly.\n\n\"Not you too.\"\n\n\"There is no honor in running from a fight.\"\n\n\"Honor doesn't pay your debts, fill your belly, or keep you warm at night. That shit just gets you killed.\"",
        "Alexis sighed angrily. \"Did you miss the part where the commandant said that participation in a duel is mandatory?\"\n\n\"No, but I must have missed what the actual punishment is. The way I see it, until I'm actually face-to-face with a figure of authority and personally handed an ultimatum to duel, I don't have to do it. I'm still waiting to hear what the consequences are, and a loss of my honor doesn't really cut it.\"\n\n\"I thought you were better than that.\"\n\n\"Well, I'm not, and for someone who so vehemently opposes living as a noble, you sure care a lot about how people think of you.\"\n\n\"That's because I'm joining the knighthood to make things better, to change the system on the inside, and I can't do that as an outcast! I want to be a hero to the people, like Lady Zodiac.\"\n\n\"Lady Zodiac didn't kill that ogre tribe or rescue that boat full of slaves. Historians will never know that a disobedient girl, an outcast, stole a family antique and got people killed to fulfill her own definition of justice. So tell me something, what was more important back then? Honor or results? Believe me when I say that sometimes an outcast willing to dirty their hands can get more done than a hero who worries about opinions.\"\n\nAlexis shifted through several expressions, each befitting of a rejected response before she could even speak it. She finally took a deep, exhausted breath. \"Why did you even come to the academy? To the knighthood?\"\n\n\"The same reason you did, as the means to an end.\"\n\nAfter lunch, Noah's next class was history, the history of Uther and the surrounding countries. Unfortunately, these lands passed through the possession of so many ethnic groups and city-states that getting a clear, consistent record was difficult. It was no surprise that the line between history and mythology was almost nonexistent. Many archives were written by elves who had not witnessed the actual events but simply recorded the rumors and stories they heard. Still, Noah found it fascinating.\n\n\"Under the rule of King Jord III, the dwarven nation of Vandheim expanded northwards, often coming into conflict with the human-descended beastmen tribes who lived in the Ashok Mountains. It was in year 278 of the Second Dynasty that a peace treaty was struck between Vandheim and the various tribes, known as the Tiefedel Offemmil, otherwise known as the Pact of the Deep Gem and Open Sky, in which everything on the ground belonged to the beastmen, and everything below the ground belonged to the dwarves. Now, in this war...\"\n\nThe professor, an old man with a long white beard, continued to talk, with Noah being the only cadet paying attention, though he was glad to get out of class when it finally ended. Usually, he'd go to the library after his final class and continue his research, but today, he went out to the training fields, where the first rounds of duels were happening. Most of the other cadets had the same idea and gathered to watch the fights. Many teachers were present to officiate the matches and looked upon the pairs of duelists in the cleared fields. Noah spotted Valia presiding over Gideon and Sorn, and she was explaining the rules.\n\n\"The fighting will not begin until I say so, and should I give the order, you will disengage, and it will end. This is not a fight to the death, and should your opponent surrender, any attacks will be regarded as unwarranted assaults and get you kicked out of the academy and possibly even arrested for murder. You are each free to use one academy weapon and any low-level spells, so long as they do not kill your opponent, damage the academy, or injure any spectators. If you continue to use a spell that I have banned, you will be disqualified. Have you settled on a challenger's payment?\"\n\n\"The silver coin, I guess. He doesn't have anything else I want,\" said Sorn, holding a staff. Technically, it was an academy spear, meaning it didn't have a blade. Gideon instead had a glass sword.\n\n\"Very well, take your positions.\" Gideon and Sorn faced each other, twenty feet apart with their weapons ready. Valia raised her hand. \"Now, begin!\"\n\nGideon made the first move, and to everyone's surprise, he threw his sword aside and charged towards Sorn to fight barehanded. He jumped, a well-practiced move, and swung at Sorn with a wide kick. Sorn tried to block with his spear, something Noah already knew was a mistake after fighting Gideon on enrollment day. Gideon's leg broke through Sorn's defense like a wrecking ball, possessing a strength that the shield lessons had yet to prepare the cadets for. Sorn was knocked to the ground but rolled back onto his feet and swung at Gideon. He spun his staff around his hands from side to side to widen his defense and boost his speed with the building momentum.\n\nHis lunges, fast but repetitive, failed to land any hits on Gideon. He managed to sidestep out of the way each time, then closed in and stopped Sorn's staff with his leg like a proverbial monkey wrench. He forced the spear out of the way and connected with a solid punch to Sorn's chin, sending him sprawling back. Gideon didn't give him any time to rest and closed the distance to bombard Sorn with concussive blows. When Sorn finally fell to the ground, Valia gave the announcement.\n\n\"That's enough! The winner of the duel is Cadet Gideon!\"\n\nGideon didn't seem very enthusiastic about his victory, while Sorn, beaten and bloody, had to be carried to the infirmary. Several of the spectating nobles looked uneasy, as they were next on the chopping block. Having all been challenged, one was forced out of the herd, like a decoy to distract a predator.\n\n\"And you are?\" Valia asked.\n\n\"C-cadet M-Michaelson!\" he stuttered fearfully. \"I was challenged as well.\"\n\n\"Then you're up next. And Cadet Gideon?\" Gideon turned to her. \"If you don't want to use a weapon, fine, but if I ever see you throw your sword away like that again, I'll tan your hide.\"\n\n\"Yes, ma'am.\"\n\nThe second duel started and ended even faster than the first. Gideon's moves were quick and powerful, showing years of training and experience. These were the techniques of someone who had taken numerous lives with his bare hands. The third duel went the same, ending with a broken arm. Gideon was on a winning streak, and it was all going on the record.\n\nNoah spotted Alexis going at it in another field with Ken Rilgis, one of the cadets from his sword class. They were doing surprisingly well, considering they were using glass blades. There was hesitation in every move, both fighters checking, double-checking, and triple-checking their grips before they engaged. They maintained their distance from each other, attacking only with the very tips of their blades so that even if they broke, the loss would be minimized, and they could continue the fight. Many other duelists were using the same strategy, as while the glass sword was the most common weapon in the academy, it was the hardest to use.\n\nSecond in difficulty were the bows. When the duel began, it became a race between the archer drawing, nocking, and shooting an arrow, and the melee cadet charging with their close-range weapon. An impact to the head or chest would end the duel. Noah watched the archers bounce around, trying to stay out of their opponents' range while they desperately shot their arrows.\n\nLike arrows, spells were also flying back and forth from the cadets specializing in magic. They were all nonlethal and low-tier, but they had their uses. He spotted one girl shooting balls of water from her hand like they were water balloons, and while they couldn't inflict harm, getting hit in the face made for an excellent distraction. Other mages used similar spells of their elements, such as launching blasts of soil that would blind and discombobulate, or small charges of lighting that shocked like tasers. A low-level fire spell wasn't enough to set someone ablaze or cause severe burns, but eyebrows were a frequent casualty.\n\nAs the duels continued, more and more cadets began challenging each other. Watching these gladiators raise their scores made the bystanders crave their own dose of adrenaline. Soon, it became not a matter of honor but raising one's points. That changed with a flash of light and a cry of pain. Noah caught it just barely in his peripheral vision and heard the shocked mutterings of the onlookers, as well as Sir Brume yelling.\n\n\"What were you thinking, using an attack like that?! Only low-level spells are allowed!\"\n\nSeraph was the cause, standing with his hand outstretched and a smirk on his face. On the other side of the ring, a cadet lay sprawled out like roadkill, barely breathing.\n\n\"That was low-level for me. It's not my fault that I'm surrounded by weak little rats. Maybe this academy needs to be more selective in who it lets in.\"\n\nNoah didn't need to see the attack to know what happened. By the look of the cadet, he had been hit with a blast of holy energy. Noah had experienced it before and had no desire to get a second dose. It created a burning sensation like being in a microwave oven, attacking pain receptors without damaging the body while also depleting the victim's mana. It was no surprise the cadet was knocked out cold.\n\n'That ought to shut up the Thuln brothers.'\n\n\"So, who's next? Someone give me a real fight!\" There were too many people around for Noah to use his invisibility, and he was spotted. \"You! You finally manned up! How much longer were you going to make me wait? Sir Brume, I challenge Cadet Noah to a duel.\"\n\nAll eyes turned to Noah. 'Ugh, I should have just gone to the library.' \"Do you really have nothing better to do than bother me? Go read a goddamn book for a change.\"\n\n\"You will not speak blasphemy in my presence! Answer the duel!\" Other duels were paused, participants and spectators alike drawn to the raised voices.\n\n\"Cadet Noah, a challenge has been made. You must fight, or you will be expelled from the academy,\" said Sir Brume.\n\n\"Very well, I answer the challenge. However, under the proxy clause of the aristocrats' rules of dueling, I can have someone stand in for me and fight on my behalf.\"\n\nImmediate confusion, he could see it on everyone's faces. Since when was this a rule? They were right to be skeptical, as it was a bluff. He had no idea if such a rule existed, but it was something the instructors would have to look up before they could allow the match. At the very least, it could buy him another day.\n\n\"No, I don't accept that! I want to fight you and you only!\"\n\n\"He has a point, Cadet Noah. While it is true that members of nobility can use proxies, cadets, even of the knighthood, cannot.\"\n\n\"I'm not nobility, but he is, so he has the right to battle by proxy. As a fellow cadet, it's only fair that I have that same right if I duel him. Instead of that privilege being revoked, I simply want it to be shared.\"\n\nIt was enough to leave Sir Brume silent in thought.\n\n\"This is bullshit! He has to fight me himself!\"\n\n\"If my proxy wins, they get the credit, but if they lose, I take the demerit. Either way, a fight is had, and the duel registry gets a new entry.\"\n\nBefore Brume could respond, the evening horn was blown. It was time for dinner.\n\n\"We'll settle this matter later. All current duels are suspended until tomorrow!\" he hollered to the cadets. Noah had kicked the can down the road once again.\n\nThe crowds were dispersed, and Seraph just narrowly bottled his rage. The cadets and staff migrated to the mess hall, and once again, Noah was subjected to the sour expression on Alexis's face.\n\n\"Please tell me I misheard you back there. Battle by proxy?\"\n\n\"A noble society couldn't allow dueling without some way to weasel out of fights. Your family must have done stuff like this plenty of times.\"\n\n\"That's the problem! Of all the shameless things...!\"\n\n\"Are you interested or not?\"\n\nThe wind left her sails. \"Excuse me?\"\n\n\"I know that you want to break Galvin's nose, but would you settle for knocking Seraph off his mental throne? If you win, all the prestige is yours, and if you lose, I'm the only one to suffer the consequences. When will an opportunity like this come again?\"\n\n\"You can't be serious. Are you asking me to fight your battle for you?\"\n\n\"No, I'm offering you the chance to call dibs. Seraph blasting that other cadet will probably thin the list, but I'm sure there are plenty others who want to fight him. After giving me such a hard time, hopefully at least one of the Thuln brothers will have the guts to put his money where his mouth is. I'm not asking you to fight, I don't expect you to fight, and you are not obligated to fight. I'm simply giving you an opportunity.\"\n\n\"Even if it can happen between nobility, what makes you think they'll let it happen here? We're all combatants, so there is no excuse for us not to fight.\"\n\n\"True, the academy probably omitted that rule, but if I show up tomorrow with a proxy all ready to go, that may be enough to sway them. Once there is precedence, it could become official, and others will start doing it. Think of it as me adding a twist to the game. So, do you want to fight him or not? I'll even let you make the winning request.\"\n\nShe rolled her head and sighed. \"You can keep the request. Just having it on record is enough for me. I'll do it.\"\n\nThat night, everyone in the barracks seemed to be in the mood to bitch at Noah. First, he refused a duel, and now he was trying to use a proxy? It was downright shameful. That said, their voices were nothing he couldn't drown out. He just kept reading, and when someone tried to take the book from his hands, a punch to the balls or a jab to the throat taught them the error of their ways and scared everyone else off.\n\n\"Let me be your proxy.\" The suggestion came from Gideon.\n\n\"Excuse me?\"\n\n\"Unlike you, I never turn down a challenge or run away from a fight, and I don't like the idea of being used to help you escape your responsibilities, but I do like the idea of taking a crack at the prince.\"\n\n\"Sorry, but the position has been filled. Don't get me wrong, I appreciate your willingness. If you're interested, you can be my proxy the next time I get challenged.\"\n\nGideon groaned in annoyance. \"Damn.\"\n\n\"Just challenge the prince yourself.\"\n\n\"I can't afford the challenger payment. I don't have to worry about losing to those noble kids, but with the prince... even I have to hedge my bets.\"\n\n\"Is there a reason why you immediately went after them?\"\n\n\"It's common sense to hate the nobles, is it not?\"\n\nNoah shrugged. \"Fair enough.\"\n\nThe next evening, all the cadets gathered at the dueling field to watch the fight. Noah arrived with Alexis beside him, while on the other side of the ring stood Seraph. Sir Brume was mediating as before.\n\n\"I have decided to allow the proxy battle. Cadet Noah, who will be standing in?\"\n\n\"I am Cadet Alexis Veres, sir, and I shall fight this battle on Cadet Noah's behalf.\"\n\n\"You're really going to hide behind a woman? Pathetic! Cowards like you don't belong in this academy!\" Seraph scoffed.\n\nAlexis looked to Noah and found him unperturbed by the taunt.\n\n\"And the challenger payment?\"\n\n\"If Alexis wins, I get Seraph's room for the rest of the year, and he takes my place in the barracks.\"\n\n\"It's not up to you. You lost your right to decide the challenger payment when you picked a proxy,\" said Seraph.\n\n\"This is correct. The challenged cannot demand victory payment if they do not fight their own battle. However, the proxy can,\" said Brume.\n\n\"Then that is my request as well. If I win, you give Noah what he wants. Beating the ego out of you is all the reward I need.\"\n\n\"You always were an unrepentant bitch. You can't go after my brother, so you decide to be a pain in my ass.\"\n\n\"And you can't go after Lady Zodiac, so you decide to be a pain in mine,\" Noah said, further irritating the prince.\n\n\"That is enough, all of you. Cadet Veres, Cadet Albion, take your positions.\"\n\nAlexis and Seraph faced each other, and before the match could begin, Noah held out an academy bow and a quiver of arrows to Alexis.\n\n\"Here, take it. It'll serve you better than that sword.\"\n\n\"I don't need your help, and I certainly don't need a bow. I told you, as long as I'm here, I'll devote myself to the blade.\"\n\n\"I've seen how hard you practice your swordplay. You swing for hours until your hands bleed, all so you can use the basics of Lady Zodiac's style. I admire your determination, but the bow is where your talent and skill really lie. Stop holding yourself back.\"\n\n\"Just go stand over there and look pretty,\" she said.\n\nNoah stepped back, and Sir Brume raised his hand. \"Now, begin!\"\n\nAlexis and Seraph charged towards each other with their battle cries, and their blades met in a great collision. Neither blade broke or even chipped despite the force, truly putting the protective enchantments to the test. Again and again, they lunged for each other, and their attacks canceled out, the two combatants raising their speed with every exchange. At the moment, they appeared to be on equal ground. Alexis was fighting remarkably well, displaying the muscle memory accrued from countless hours of training. She probably studied harder than anyone else at the academy when it came to the sword, though that could only get her so far.\n\nSeraph's ego, while annoying, wasn't entirely unwarranted. His stance and moves showed an overabundance of talent, and try as Alexis might, she was slowly being pushed back. Noah had seen first-hand how well she fought against physically stronger opponents, but blood-drunk ogres were a far cry from the skilled prince. He watched closely, studying all of Seraph's movements. It was quite likely he'd end up fighting the prince one day, so he had to collect all the information he could and plan countermeasures. Hopefully, Alexis would last long enough for his weaknesses to be revealed.\n\nShe altered her strategy, backing off out of his range and trying to flank him. She was fast and light on her feet, bouncing around like a king across a checkerboard. Seraph would turn back and forth to fend her off, narrowly blocking and avoiding swings from outside his peripheral vision. The glass swords were just sharp enough to break the skin, and if she could draw first blood, victory would be hers.\n\n'So close! Just a little more!' she thought.\n\nThose thoughts were forcefully ended as a gold radiance shrouded Seraph. Alexis remembered seeing it when he went mad against Lady Zodiac. It was full-body monk and paladin magic, augmenting all of his abilities. This was precisely what Noah had been concerned with, and his concerns proved correct. Seraph closed the distance with Alexis and struck her with the back of his hand. She was knocked through the air and hit the ground like a crash test dummy. Everyone watching was left in stunned silence.\n\n\"Now you finally know your place,\" Seraph laughed. \"I have been blessed by the Light, chosen by God, and a back-talking quim like yourself can never overcome that!\"\n\n\"That's enough! This duel is--\"\n\n\"No!\" Alexis shouted, cutting off Sir Brume. She slowly got to her feet with blood trickling from her mouth and her cheek beginning to swell and discolor. \"I'm not done yet.\"\n\n'Attagirl,' Noah thought.\n\nShe picked up her sword and charged. Her speed and steadiness were remarkable, and she unleashed a hurricane of slashes on Seraph. Alight with mana, he dodged all of her attacks as if they were coming in slow motion. He sidestepped each one with ease, not even needing to block. Still, Alexis maintained her composure. She was determined, but not blinded by rage like she was when she faced Galvin, and finally, her sword met his, because she had aimed for it.\n\nShe continued her barrage, focusing all of her attacks on Seraph's sword rather than Seraph himself. Since they were using glass blades, breaking was expected and wouldn't usually end the duel, but if she snapped it at the hilt, that was another matter. Even though she couldn't best Seraph in his current condition, she refused to let victory float beyond her reach.",
        "CRACK!\n\nEveryone heard it, and so too did Alexis hear their shocked gasps, for it was her sword that had broken. Seraph interrupted her barrage with a downward swing, like an executioner, and her sword snapped like pencil lead. Her guard had been perfect, just as Lady Zodiac had taught her, but the enchanted glass simply could not withstand the force of Seraph's attack. The combination of monk and warrior magic proved too much.\n\nShe staggered back, all she could do. Blood, Alexis felt its heat on her skin as it dampened the sleeve of her uniform. Then, searing pain, as though she had been branded. She hadn't been able to dodge the swing completely, and while the damage was shallow, Seraph's blade had sheered a layer of flesh off her shoulder like a butcher's knife.\n\n\"That's it, I'm calling it. The victor is--\"\n\n\"No, not yet!\" Alexis shouted, clutching her wounded shoulder.\n\n\"Cadet Veres, you've been injured, and your sword...\"\n\n\"As long as I'm standing, this duel will continue!\"\n\n\"Alexis,\" Noah said.\n\n\"You stay out of this!\"\n\nBefore she could react, Seraph abandoned his sword and grabbed her in a bear hug. \"Then I just have to make sure you can't stand!\"\n\nHe squeezed her tight, drawing a cry of agony. Was he really planning on breaking her spine?\n\n\"Cadet Albion, that is enough!\"\n\n\"You heard her; she hasn't quit yet! Let's see how long she can last!\"\n\nHe squeezed even tighter, and Alexis began coughing up blood.\n\n\"Stop, now! I'm warning you!\" Brume thundered. Seraph ignored him and continued crushing her.\n\nNoah cast both of his spells and drew his sword. Knowing Alexis, she'd be pissed if he intervened, but things had spiraled out of control. Then, before he could enter the ring, a voice echoed.\n\n\"The match is over! Cadet Albion, you are disqualified!\" Valia stepped forward with her sword pointed at Seraph. \"Let her go, or I'll take your arms!\"\n\nSeraph reluctantly dropped her to the ground. \"This is ridiculous! You can't disqualify me for being stronger!\"\n\n\"You're disqualified for disobeying orders and trying to inflict unnecessary harm on your opponent. Your conduct is disgraceful.\"\n\nWhile they argued, a healer examined Alexis with Noah at her side. Alexis's breathing was pained but steady, and while she was unconscious, a pinch to a nerve cluster in her leg drew a twitch, so she wasn't paralyzed.\n\n\"You proud, beautiful, majestic idiot,\" he said with a sigh while wiping the blood off her chin. \"This right here is precisely the reason why I wanted to avoid fighting in the first place.\" As she was lifted onto a stretcher, Noah stood up and turned to Seraph. \"You were disqualified, so Alexis wins by default, meaning the challenger payment still has to be fulfilled. I expect you to clear your possessions out of my room before dinner. You'll be enjoying life in the barracks from now on.\"\n\n\"Have you lost your fucking mind?!\" Seraph shouted.\n\n\"Cadet Noah!\" Valia shouted with equal outrage.\n\n\"Don't you raise your voices to me.\" Noah's words, calm and unshaking, were frosted with killing intent, chilling the air like a winter gale. Even Valia felt her fight-or-flight instincts firing up, and when he spoke, he addressed everyone. \"You chose to make this duel happen. Alexis chose to take my place to earn prestige. The academy chose to implement this ridiculous system. These are the consequences of your choices, not mine, and you will suffer them. If you people insist on making me play this game, I will hold you to the same rules you hold me.\" He turned to leave and then stopped. \"Keep this in mind, Prince. The only reason why you're not on that stretcher is that I don't consider you worth my time.\"\n\n----------\n\nAlexis slowly opened her eyes and groaned in pain. She recognized the ceiling over her, and, more importantly, the tear-streaked face at her side.\n\n\"Hey,\" Sophia said with a relieved smile as she clutched Alexis's hand. She was lying in a bed in the infirmary. It was empty, as all the other healers were giving duelists first aid out in the training fields.\n\n\"Hey,\" Alexis replied. She coughed a few times and groaned once more.\n\n\"Don't move around. We mended your broken ribs, but the area should still be very tender.\"\n\n\"It is, it really is,\" she huffed.\n\n\"Well you took it like a champ.\" Alexis turned, seeing Noah sitting beside her. \"Glad to have you back,\" he said.\n\nShe smiled. \"Glad to be back. What happened to the match?\"\n\n\"Seraph was disqualified, and you won by default, so it looks like I'm moving out of the barracks. I figured I owed you enough to at least be here when you woke up.\"\n\n\"What a wonderful friend you are. Bastard...\" she said with a chuckle. She winced in pain, and her smile then faded. \"Won by default... disgraceful. I wish they had just declared Seraph the winner. At least there is honor in an honest loss.\"\n\n\"To be fair, honor is the reason why you're here in the first place.\"\n\nShe groaned, refusing to admit he was right. \"Sophia, this is my friend, Noah. Noah, this is my cousin, Sophia.\"\n\n\"We've met. I guess this explains why you still hold such a grudge against Galvin.\"\n\n\"My father tried to marry me off to him, but let's just say I thoroughly burned that bridge. It was the final straw in a list of rebellious acts. The Rosege family is a lower branch of the Veres family, so Sophia was chosen to take my place when I refused. I've been trying to find a way to stop it, but I have no authority or leverage left in the family.\"\n\n\"We're hoping that the knighthood will give me a way out. I have to do everything I can to make myself valuable, so I can go to the front lines and escape Galvin.\" Sophia, her blue eyes seeing the future that awaited her, spoke with a brave face. Noah admired it, the skilled mimicry. She had learned how to force a smile. She knew that someone as possessive as Galvin would surely pull whatever strings he could to keep her under his thumb forever.\n\n\"I thought that at least beating his brother in a duel might make him shudder a bit.\"\n\n\"A noble sentiment, but you bit off more than you could chew.\"\n\n\"For you to shake your finger with such dirty hands...\"\n\n\"My hands are clean, but I know something that might ease your suffering. Sophia, there is a spot I need you to apply your healing energy to Alexis.\" He put his finger to the indent between his nose and forehead. \"Right here, two inches deep. You need to channel your power into the center of her brain.\"\n\nThe command left them both stunned in confusion.\n\n\"Into her brain? I don't understand. How will that heal her?\"\n\n\"It won't heal her, just alleviate the pain. That spot is the brain's pleasure center, the part of your body that causes numbness after injury. It's probably depleted from your battle, but stimulation with holy energy should get it working even better than normal.\"\n\nMedical knowledge in Uther had yet to include the functions of the brain, and it was merely speculated that it was what housed the soul. However, Alexis decided to trust him. \"Do it. For some reason, he knows about this stuff.\"\n\n\"Very well. Alexis, tell me if you feel better.\" She put her finger between Alexis's eyes and sent a rush of mana into the gray matter of her brain. Alexis shivered, her breathing slowed, and a hum of bliss was heard as if she had just received a dose of morphine.\n\n\"That's amazing. I don't want this to end,\" Alexis mumbled.\n\n\"Where did you learn this?\" Sophia asked in amazement.\n\n\"It was a trick I picked up as an adventurer. You can use it when you're tending to the wounded and even the ill.\" It was a hypothesis he came up with when he caught the springburn sickness in Clive. He had learned that the diseases of this world were often immune to the effects of holy energy unless they were magic-based. Healers could do little to alleviate the suffering of the sick, so they didn't bother trying. \"It will also help improve someone's mood and make them feel happy.\"\n\n\"Thank you, this will help so many people.\"\n\n\"Ah, good to see you're awake.\" They all turned as Valia entered the infirmary and approached the bed.\n\n\"Lady Zodiac!\" Alexis and Sophia exclaimed in awe. Even after months in the academy, they hadn't gotten used to being around their idol.\n\n\"I'm guessing you're here to do some scolding and praising,\" said Noah. \"I'm rather curious as to which side you're leaning farther to.\"\n\n\"I'm here to check up on my student. That was a rough battle, but you displayed your skills beautifully.\" Normally, praise from Valia would fill Alexis with joy, but her wounded pride throbbed painfully.\n\n\"I still lost. To call my fight anything other than a failure would be a lie. Were that not an academy duel, I would be dead.\"\n\n\"That's not fear talking; it's anger,\" said Noah. \"Someone as reckless as you didn't get to this point without some close encounters. You probably would have died a hundred times by now if not for one thing or another saving you. This is something you should be used to.\"\n\n\"This is different.\"\n\n\"No, it isn't. Your life is no more fragile than it was yesterday or will be tomorrow.\"\n\n\"Cadet Noah, Cadet Rosege, would you mind giving us a minute alone?\" Valia asked.\n\n\"As you wish,\" Noah said as he stood up.\n\n\"Don't go too far. I want to speak with you after.\"\n\nSophia seemed more reluctant to leave Alexis's side, but she followed him when Noah moved to the door. Out in the hallway, she spoke in a soft voice. \"Cadet Noah, wait.\"\n\nHe turned to her. \"What is it?\"\n\n\"Please, don't ever let her do something so reckless again.\"\n\n\"I simply offered her a choice. Knowing her, she was inevitably going to pick a fight with Seraph. At least this way, my reputation takes the hit instead of hers.\"\n\n\"I'm begging you, don't tempt her. Sometimes it seems like she is at war with the world, and I don't want her fighting your battles on top of it.\"\n\n\"You truly care about her, don't you?\"\n\nSophia spoke with a trembling voice. \"We grew up together. For as long as I can remember, we had this dream that she would be the fighter, making the world better, and I would be the healer, keeping her going. She pushes herself so far, risks her life with no hesitancy. I've mended so many of her cuts and bruises throughout our childhood, I thought I was used to it, but the state she was in when she was brought to the infirmary... I don't ever want to see her like that again.\"\n\n\"I imagine you don't. Well, I can't promise you that she won't do something stupid on her own, but I'll abide by your wishes. No more proxy battles or anything of the sort. I won't let her get hurt for my sake.\"\n\n\"Thank you very much!\" she said with a sharp bow.\n\nBack inside the infirmary, Valia took a seat in the chair beside Alexis's bed, causing Alexis's heart to beat rapidly. Alone with Valia Zodiac, the woman she so admired, it was a dream come true, a sinful dream. Alexis loved Sophia, lusted for her, wanted to spend her life with her, but whenever she looked at Valia, her heart would whisper 'but what if' and the fantasies would bloom.\n\n\"I wouldn't word it the way Cadet Noah would, but he is right. I look at you, and I see someone with something to prove. In that duel, I saw a girl who confuses anger with courage and is struggling to keep it all contained.\"\n\n\"Not... struggling.\"\n\n\"How much blood would you have spilled before surrendering? How many bones would have been broken? These are academy duels, meant to teach you to answer challenges and fight for honor, not something worth getting killed over. Pride like that doesn't come without a deep rage. What is it?\"\n\nAlexis took a deep breath. \"I wouldn't be here if not for you. Most of the women in this academy wouldn't be here if not for you, and I don't mean because you're a teacher. You fought for this country for decades, helped open up the knighthood for us, gave us the chance to prove ourselves. How did you do it for so long? How are we supposed to do it when we're surrounded by so much hatred?\"\n\nValia gave a sad chuckle. \"It is difficult, certainly doesn't get easier. I learned a long time ago to pick my battles. You can't convince everyone, can't argue or thrash your way to victory against those who won't change their minds. Instead of wasting your energy fighting them or shouting over them, you need to outnumber them, outshine them. Be someone others will want to look to, not someone they have to hear.\"\n\nThe answer didn't satisfy Alexis. If anything, a tear of frustration rolled down her bruised cheek. \"All my life, I pushed myself, never quitting, never cutting myself any slack. I always told myself that Valia Zodiac would never give up. That she would keep fighting, no matter how bad things got. Was I wrong all this time?\"\n\n\"You're neither right nor wrong, just young. Take it from an elf; finding the battles worth fighting for and choosing the moments to walk away takes a lifetime to learn. If you believe in something, fight for it, not to make yourself feel better, but make things better for others. Don't waste your effort on petty arguments just to stroke your ego. You don't have to win every time, just when it matters.\" She put her hand on Alexis's shoulder. \"Get some rest. I know there is more fight in you.\" She left the infirmary and found Noah sitting alone on one of the benches. \"Did Rosege go back out to the dueling field?\" she asked.\n\n\"Not willingly. Another healer had to come and drag her away.\"\n\nValia took a seat on a bench on the other side of the corridor, facing Noah. \"That was a dangerous game you played. You almost got your friend killed.\"\n\n\"I'm playing the same game everyone else is playing. All I did was give Alexis my turn. You hand these cadets weapons and pit them against each other for fame and fortune, and I got to tell you, this kind of environment doesn't foster that strong sense of comradery you told me about.\"\n\n\"You were supposed to face Seraph on your own. Deal with it yourself. Instead, you shirked your responsibility, and your friend got hurt.\"\n\n\"Dealing with the prince is not my responsibility. I'm here to be a knight, not a punching bag. His ego is his own problem. You want me to fight for the prosperity and people of Uther? Fine. I'll kill as many people as I'm ordered, raze any village, and erect a mountain of skulls with the Uther flag planted on top, and you won't hear any complaints. You want me to engage in childish squabbles all for the sake of bragging rights? Sorry, but I have better things to do with my time.\"\n\n\"You don't get to make that choice. You can't just walk away from a battle or say you refuse to participate. You have to fight when challenged.\"\n\n\"Oh just stop it. Don't berate me with blanket statements and short-sighted narratives when you know they are nonsense. You may live among humans, but that doesn't mean you have to think like they do.\"\n\nThis time, it was Valia's turn to flash her killing intent. \"One more word out of you, and I'll have you thrown in stocks.\"\n\nNoah sighed and let his eyes wander the corridor before settling them back on Valia. \"I heard what you said to Alexis, about the battles that matter. You tell her all that and then lecture me about not giving it my all in a mock fight or not indulging the prince's bloodlust. Either you were lying to her, or you've been lying to me.\"\n\n\"You need to stop pretending that you know me. I am your teacher, and you're just a child who's too full of himself. Everything I do, I do for the kingdom and its people. It's my job to train you to be an honorable knight. Your laziness doesn't trounce that.\"\n\n\"I know you care about those who serve under you, I know you care about the citizens, I know you care about the prosperity of the nation, and I know you care about swordplay. I also know you're smart enough not to care about this academy duel nonsense. I know what it looks like when someone dumbs down to cater to those who are less intelligent. What I don't know is why you chose to go from hero to has-been.\n\nIf you wanted to train others in the art of the sword, you could have opened your own school, and warriors from all over the globe would travel to study under you. Don't get me wrong, it's a great honor to know you and learn from you. I simply find it hypocritical that you're doing the same thing I did in our mock fight: holding back. You have the wisdom and experience that none of these mortal teachers could ever achieve, so stop acting like them. Stop pretending that this shit matters. It's not worth the effort.\"\n\n\"So you want special treatment? You want me to exempt you from anything you find tedious?\"\n\n\"As nice as that would be, I'd settle for you dropping the fa\u00e7ade when we speak like this.\"\n\nValia's brow furrowed, and she looked away. She took a deep breath and got to her feet. \"I don't know if the challenger payment will be honored. I suggest you go speak with the commandant.\" Those were her last words before leaving.\n\nAfter bidding farewell to Alexis, Noah took Valia's advice and went to the commandant's office, where he and Seraph were loudly arguing.\n\n\"As prince, I order you to nullify the challenger payment!\"\n\n\"You stand here as a cadet, not a prince! You will abide by my rules.\"\n\n\"Gentlemen,\" Noah said, stepping through the open door.\n\nThe two men turned to him, equally angry. It seemed Seraph had forgotten about Noah's warning because the shouting was immediate.\n\n\"You! You cheated me!\"\n\nNoah ignored him. \"Commandant Ford, I am Cadet Noah, pleased to meet you. Would it be better if I waited inside?\"\n\n\"I was just about to summon you. Now I won't have to say this twice. Sit down.\" Noah and Seraph each took a seat in front of Ford. The commandant took a deep breath. \"I have decided that the duel shall not be recorded in the registry, but the challenger payment will be honored. Seraph, your loss will not be counted against you, but your dishonorable behavior cannot be tolerated. You have lost your dorm and will be residing in the barracks from now on. Each of you, retrieve your possessions and leave your keys on the beds.\"\n\n\"This is ridiculous,\" Seraph muttered.\n\n\"Cadet Noah, understand that this is his punishment, not your reward. You took advantage of a rule you aren't supposed to have. As penance, you'll be running double laps for a month.\"\n\n\"Yes sir, I understand.\"\n\n\"Now, both of you, get out of my sight and stay away from each other. I don't want to hear either of your names for the rest of the year.\"\n\nThey were both dismissed and left the commandant's office. \"This isn't over,\" Seraph said once they were out of earshot.\n\n\"It's something that should never have even started. Just give it up already. Move on with your life and stop bothering me.\"\n\n\"You think you can take my room and I'll just lie down and let it happen? They say I was disqualified, but I know I won!\"\n\n\"Fine, you won, whatever. It's not a matter of winning or losing; it's simply a fact that picking a fight with me cost you your room, and if you pick another fight with me, it'll cost you something else. Is a spat with me even worth it if your victories pay such a heavy price? Win or lose, a dog that attacks a porcupine will get a nose full of quills.\"\n\n\"I swear I'll kill you someday.\"\n\nNoah didn't bother replying and simply split away the first chance he had. He had to go get his things. Many cadets were recuperating from duels or daily training in the barracks, and all of them gave Noah the stink eye when he arrived. For him to use a woman as a duel proxy and win on a technicality, it was nothing but repulsive to them. He could hear them grumbling as he emptied his trunk, and they even hurled insults his way, but he didn't so much as give them a glance. Now that he was moving out of the barracks, he no longer had to be friendly with them.\n\n\"I told you I didn't like you running from your battles, but cheating your way up to the noble dorms? Is that really how you do things?\" The words came from Gideon, his now-former neighbor.",
        "\"Yes, that is EXACTLY how I do things. Don't take it personally, though. I did it because I need a place where I can study and work in peace, and it's rather difficult to do here in the barracks. However, I will apologize for sticking you with the prince.\" He unhooked the key to his trunk from his belt and tossed it onto the bed. \"Do try not to kill each other.\"\n\nThat evening, with Alexis still in the infirmary, Noah ate in the mess hall with his rucksack of meager possessions keeping him company, and after, he made his way to the dorms of the upper nobles. The difference between the barracks and the dorm buildings was like night and day. The walls were plastered and painted, the floors were carpeted, and the candles were scented. The main hallway was decorated with busts and portraits of past great knights, or heads of families who had made significant donations to the academy.\n\nPassing through the illuminated hall, he entered a common room centered around a large fireplace, over which a wyvern's head had been mounted as a trophy. The room was occupied by cadets relaxing on expensive furniture and enjoying snacks and teas that were beyond the reach of the lower-ranked cadets. Upon Noah's arrival, the aura of slothful frivolity came to a sudden halt.\n\n\"Cheating commoner,\" many of the cadets, men and women alike, muttered. Several of them even got up and approached like a pack of wolves, led by Galvin.\n\n\"Don't expect a warm welcome here, coward,\" he said coldly.\n\nNoah looked around at the angry faces and huffed. \"I never did. In fact, this right here is exactly the reaction I imagined I'd get. I had a feeling you'd pull this ganging-up schtick, trying to make yourselves look intimidating, but I have faith that you're smart enough not to go picking a fight with me. You're just bluffing right now to save face.\"\n\n\"You think you can beat all of us?\" It was one of the cadets, Mark Saveat. Noah recognized him from when the princes caused trouble at the Knight's Sheath. All of them were itching to grab their weapons.\n\n\"I don't need to beat all you. I just need to wound some of you.\" He drew his glass sword with lightning speed, faster than all the other cadets thought possible, and before they could react, it was pointed at Galvin's throat. No one dared move. \"Imagine what would happen if a commotion was caused and the commandant had to come here and find a good number of you dripping blood, needing care at the infirmary. Imagine his fury.\" He pointed the blade at Mark's throat. \"Who do you think he would blame for instigating the mess? Me? I'm just the cheating commoner who had to defend himself when he was ganged up on by the noble cadets.\" He started moving his sword along from throat to throat as though counting them. \"But you, anyone he finds injured is marked as an attacker. I'll get a slap on the wrist, and you'll get the whip.\"\n\nThey all seemed to get his point, so he put his sword away. \"Good. Now that we've established that violence is a very, very bad idea, let's move on. I want nothing to do with any of you, and it seems none of you want anything to do with me, so I propose our relationship be one of silent loathing and indifference. We don't talk to each other, interfere with each other, or antagonize each other. I simply stay in my room, undisturbed and out of the way, and when we cross paths, we each act like the other doesn't exist. Good? Good. Now, if you'll excuse me, I'm going to go find my dorm room. I bid you all goodnight.\"\n\nHe didn't acknowledge any responses and simply left the room and roamed the corridors. He checked the family name of each room and finally came to the door marked Albion. It was unlocked, and upon opening it, there was no foul stench indicating a nasty surprise left as vengeance. The dorm was bigger than he anticipated, like a midsize apartment, with its own lounge, dining area, and lavatory. The bed and sheets were top quality, better than anything else he had slept on since coming to this world, and wide enough for him to stretch.\n\nNoah set his bag down on the mahogany desk, equipped with stationery, and lit an oil lamp. As was his routine with every new dwelling, he checked it from top to bottom, looking for any means someone might have to spy on him or even attack him. He also checked for booby traps and hidden spells and went to work setting up several of his own. He wasn't welcome here, so he had to make sure everything from his ring to his notes were kept safe.\n\nFinally, he fell back onto his bed and released a sigh of contentment. Pitting angsty teenagers against each other was exhausting, but now, he had a private place to experiment with magic. While this went on, things were tense in the barracks. Sitting on their respective cots, Seraph and Gideon glared at each other while all the other cadets wisely kept their distance and their mouths shut. Now having to deal with the berserker prince in the barracks, many cadets cursed Noah.\n\n\"I think it's safe to say you and I aren't going to get along,\" said Seraph.\n\n\"That sounds about right,\" Gideon replied.\n\nPlease comment! Tell me your thoughts!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "fantasy",
        "adventure",
        "action",
        "isekai"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-infinite-bk-03-ch-05"
}