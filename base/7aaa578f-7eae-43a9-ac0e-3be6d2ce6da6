{
    "title": "Awakening Ch. 10",
    "pages": [
        "She stepped out of the tent with a towel wrapped around her body, a bar of soap in one hand and a small bottle of shampoo in her other hand. She stepped across the rough ground to me and without a word stood in front of me waiting, a little smile on her face. She stood waiting until I stood up. She took my hand and led me off into the woods and down the hill towards the lake. It was dark out, except for the nearly full moon shining down on us. She led me to the edge of the lake and stopped. Letting go of my hand, she unhooked the towel from itself, letting it fall to the shoreline around her feet. She set down the shampoo on her towel and then waded into the lake, completely naked. She waded out about knee deep and then turned to face me.\n\nUsing one hand she scooped water up and drizzled it across her body. She dipped her hand into the water over and over, raining it down on her body as she stood and grinned at me, knowing how much it was teasing me. With her body wet, she started to rub the bar of soap around her body, lathering up her big soft tits. She motioned for me to join her, and in moments I was pulling off my clothes, stripping on the shore until I was as naked as she was. I waded out to her and she handed me the bar of soap. She reached for my hand and waded deeper, stepping backwards and drawing me with her.\n\nShe stopped when the water was lapping around her thighs, nearly touching her pussy. She waited for me to start rubbing her all over her body, lathering over her breasts again and then down her body until she was all soapy. She stepped back and dipped down into the lake to rinse off. She stood again and stepped to me, taking the soap from me. She began to rub it all over me. I enjoyed her hands, rubbing on my chest and then lower until both soapy hands were stroking my hard dick.\n\nShe held me in one hand and turned around, bending over and guiding me towards her pussy. I slid my hands up her body, cupping each big breast as I pressed my head between her lips. \"Ohhhhhh damn,\" I groaned as I pressed into her, sinking slowly into her wet depths. I felt my head press to her cervix, bumping gently against the end of her vagina. I started to slide in and out of her, driving slowly in and out of her depths, the lake making ripples around our legs as I pumped my hips back and forth.\n\n\"Oh fuck,\" she moaned in front of me, as I squeezed her tits, using them as handles as I pumped harder into her. In and out I drove, stroking my engorged head along her vaginal walls and that sensitive spot just a little ways inside her. \"Oh god. Gonna come,\" she moaned loudly as I pumped my hips in and out, working myself towards the same point quickly.\n\n\"OH FUCK!\" she squealed loudly, her voice echoing across the dark quiet lake.\n\n\"AHHHHHH!\" I gasped as my body bucked hard into her pussy as it spasmed around me, her whole body shuddering and trembling. I felt gush after gush flow into her as we climaxed together.\n\nI lay in the bed, panting, her bare back pressed to my chest and my thighs against hers. I could feel my cock twitching inside her still spasming pussy as she lay against me, panting as hard as I was. \"Thank you,\" she whispered quietly as my cock softened inside her.\n\n\"You did that on purpose, didn't you?\"\n\n\"Me?\" Amanda asked innocently.\n\n\"Yeah. I think you did.\"\n\n\"Okay. I did. I'm enjoying how it feels to be with you and also how it feels inside when we're doing things, you know, out there.\"\n\n\"I have noticed a penchant for being outside in our little encounters. You like having sex outside?\"\n\n\"I've always wanted to, but my husband wasn't interested, and then it was too late to try and convince him,\" she said quietly.\n\n\"You want to? For real some time?\" I whispered as I gently massaged the breast I still had in my hand.\n\n\"I'd love to, but I think I'd be way to nervous to really enjoy it,\" she whispered back. \"So, for now, these little encounters will do.\"\n\n\"We'll see,\" I answered, liking her more every time we had one of these little events.\n\nI closed my eyes and drifted off back to sleep.\n\nIt felt good to wake up next to a woman again. It had been a long time, well except for one night in the hospital, but that felt very different than this. Waking up next to Amanda was...comfortable. I doubted that my daughter would appreciate the relationship Amanda and I were having. But she had to have some idea that we were going to be doing this. I won't say sleeping together because it's so much more than that.\n\nI lay there, holding her, feeling her gentle breathing, amazed that it wasn't happening again. Maybe it was because she was asleep, maybe it was something else, but either way, it felt good to hold her and not have THAT happen. It was almost another half hour before she woke up, and again, it still didn't happen. We got out of bed, holding hands to test my theory that it's because we were still in physical contact that we weren't having an episode. We finished taking off what little we wore to bed and then showered together, still holding hands or other body parts.\n\nWe got all the way through showering and breakfast without it happening. I hoped that we'd get through the trip to the hospital as well, though I had less confidence in that. I wondered if Bonnie would intentionally make it happen.\n\nThe two hour ride to the hospital went smoothly, as did my hobbling down to the physical therapy department, thanks to a pair of brown cotton gloves Amanda was wearing. Not that either of us were adverse to having sex again, but that we weren't sure we wanted to have it in the middle of the hospital corridor. Bonnie greeted us almost as soon as I sat in the waiting room, coming to get me wearing a pair of heavy purple latex gloves.\n\n\"Learning, huh?\" I asked as she walked with me back into one of the rooms.\n\n\"As much as I loved what happened...um...my husband wasn't so thrilled.\"\n\n\"He found out?\"\n\n\"About you? No. I didn't tell him we had sex. But I kinda let it slip that when I touched you, I had that...um...dream. And he kept poking at me until I told him what it was. He wasn't expecting to find out that I'm bisexual.\"\n\n\"That could be a shock. But you know. If you wanted to, you could take your friend home, and both of you could play with her,\" I said quietly as she helped me settle on the small bench.\n\n\"I don't know how well that'd work,\" she said softly, looking up as Tracy, the target of her desires, walked in. \"We're going to work on some range of motion exercises,\" Bonnie said more loudly. \"Lay back. Now you can have your friend help you do these at home if you want. You need to do them at least four times a day.\"\n\n\"Okay,\" I answered with a grunt as she lifted my leg and holding it straight, pressed it up and back.\n\n\"Feel it stretch here?\" she asked, stroking the back of my thigh through my wind pants that's I'd put on that morning.\n\n\"Uh huh,\" I grunted, feeling it burn a little.\n\n\"Not too hard but hold for ten seconds and then release,\" she said, lowering my leg down. \"We need to do that about ten times for ten seconds on each leg,\" she said as Tracy stepped closer, reaching out for Bonnie's shoulder as she knelt down next to me.\n\n She stood completely naked, looking at herself in the mirror, cupping her big soft tits and lifting each one. It was late, everyone else was gone, so she wasn't worried. It had been a long day and she wanted to loosen up before going home, knowing that her husband didn't love it when she did this. She wasn't sure why, but he didn't, so that meant she had to find other places to do it.\n\nShe bent herself over, reaching for the floor and pressing her hands to the rubberized mat. It felt good to stretch herself this way. She held her hands to the floor and walked her feet apart, one small step at a time until her legs were spread so far apart that her bare pussy nearly touched the mat. She leaned her body forward, pressing her tits to the floor, feeling the cool rubber press against them as she stretched her arms out in front of her. She closed her eyes and let the stress of the day flow out of her. She slid her feet together, laying stretched towards the mirror, her eyes still closed. She rolled herself onto her back, lifting and spreading her legs in the air. She still didn't understand why her husband didn't love this. She thought he would.\n\nWithout opening her eyes, she moved her hands to her huge double D tits and squeezed both soft mounds, letting her fingers and palms slide up her smooth soft skin until her nipples were pinched between her palms and fingers. \"Oh yes,\" she moaned softly, feeling the tingle caused by the pressure. She released the pressure after several more seconds, feeling the tingle race through her body as it demanded she touch herself between her legs. She slid both hands down, reaching between her legs and grasping her inner thighs. She pulled and stretched her legs, spreading herself wide, knowing that her pussy lips were also being spread wide. She thought about her husband and wished he were here to push his dick into her, something that he seemed much less inclined to do these days.\n\n\"OH FUCK!\" she cried in surprise at the touch of another set of hands on her thighs. Her eyes flashed open to see Bonnie kneeling between her legs, as naked as she was, with a man standing behind her, his cock jutting out towards her, big and fat and long. Her eyes stared at him, or more correctly his dick.\n\n\"Relax. It's okay,\" Bonnie whispered reassuringly, bending over and lowering her face to her pussy.\n\nShe couldn't take her eyes off his cock as he stood there, waiting, patiently, but for what? His cock was longer and bigger than her husband's by quite a bit. And it bounced slightly with his heartbeat, almost as if it were waiting for something. \"Oh fuck,\" she moaned as Bonnie licked her tongue up her slit, teasing between her full protruding inner lips, her tongue sending tingles through her body as she found her clit. \"Oh God yes,\" she moaned, feeling like this was exactly what she needed.\n\nUp and down Bonnie's tongue went while she stared at the man behind her, stared at his dick. He suddenly moved, stepping around Bonnie to kneel down next to her, his dick now only a few feet from her face. He leaned over her, his dick pointing towards her face as he crawled over her head. She reached out and grasped it with both hands, feeling his hardness. Her hands could barely reach all the way around it, it was so fat, and even with both hands grasping it, she couldn't cover all of it. It was indeed so much bigger than her husband's. He lowered himself down lower, allowing her to guide his engorged mushroom head to her face and her waiting mouth. She'd sucked her husband before, but she was still surprised at how little of him she could get into her mouth and how wide she had to open to contain it.\n\nShe licked and sucked his cock while Bonnie licked her pussy, her tongue making her want his cock more with each passing second. She wanted to feel this big cock in her pussy, she wanted to feel it stroking in and out of her. She gently pushed on his body, trying to push him up, but he stayed over her face, pumping his hips slightly, working his cock in and out of her wet mouth. She pushed more firmly, forcing him up and out. \"Fuck me,\" she said as his cock pulled from her face. \"Put this in me and fuck me!\"\n\nHe lay down on the mat next to her, Bonnie pulling her face from between her legs so she could move. She rolled on her side and let him move behind her, his big fat cock sliding between her thighs. She lifted her right leg, sticking it into the air and allowing him access to her wet pussy. She felt more than saw him move closer to her, Bonnie's hand around his cock, guiding him to her pussy, aiming him for the one place no other man has ever been but her husband. She watched in the mirror as Bonnie guided him to her waiting opening. His head touched her wet lips and rubbed back and forth along her slit, the tip of his head bouncing over her clit and sending little jolts through her whole body. She lay back as much as she could and let it happen, let the sensation of him slowly filling her vagina wash over her. She moaned in appreciation as she felt stretched, his cock spreading her depths more than ever before.\n\nIn and out he started to stroke, but that wasn't all. She felt one hand move to her chest and squeeze the front of her big tit, squeezing her soft flesh hard, squeezing her areola and rock hard nipple equally hard. She cried out in pain and pleasure at the same time before her cry was muffled. She opened her eyes and saw Bonnie looking down at her lustfully, her pussy pressed to her lips, her hips rocking gently on her face to grind her pussy into her face.\n\n\"Oh, fuck yes. Lick my pussy,\" Bonnie moaned loudly over her.\n\nIn and out his cock slid, making her whole body seem to tingle and shudder. It was like nothing she'd ever felt before, his cock hit places deep inside her that nothing had ever touched. She could feel his hard mushroom head banging her cervix with each stroke sending more jolts of electricity through her. She didn't know how much longer she could take the incredible overload of sensations when it finally overwhelmed her. Her whole body shuddered and shook as he continued to drive into her spasming pussy. She tried to cry out in pleasure, only to be muffled by the pussy on her face. She reached up and pulled Bonnie down towards her more, pressing her wet pussy to her face as she tried to stick her tongue into her depths. She'd never licked a pussy before, and other than her own, hadn't ever tasted another woman. But right now, she wanted it. She wanted all of it. She wanted to feel Bonnie climax on her face. She wanted to feel cum on her face and inside her at the same time.\n\n\"Oh fuck,\" he groaned as his body pushed hard into her. His whole body went rigid for several seconds, his cock seeming to grow even fatter in the moments before his body spasmed. He jerked hard and she could feel his cum flowing into her in strong surges, one each time his body jerked.\n\nBonnie cried out in pleasure as Tracy sucked her clit into her mouth, wanting to feel her cum leaking on her face as she took the guy's load into her. Her own climax seemed to go forever, her desire, her need for more seeming to never end. Finally, Bonnie pulled off her face, falling to her hands and knees as she crawled off her face. She lay and closed her eyes as the guy's dick slowly started to soften in her. God, it felt so damn good. She never wanted it to stop, but she knew it would. She knew that the afterglow of such an orgasm would only last so long.\n\nI lay on my side, my pants and shorts down to my knees while I lay next to Tracy, who lay on the mat next to me, completely naked. I still gripped her right tit, holding it gently while we both panted for breath. I looked to Bonnie, sitting half naked, nothing on below her waist, her back against one of the mirrored walls, panting.\n\n\"Oh fuck,\" she groaned after several seconds.\n\n\"What the hell happened?\" Tracy mumbled softly, tilting her head back to look at Bonnie.\n\n\"Scott happened,\" she answered, bringing a look of confusion to Tracy's face. \"Remember that guy that I told you about? The one that made people see their sexual fantasies by touching them?\"\n\n\"Yeah?\"\n\n\"Well. That's him. But it looks to me like it isn't just seeing them any longer.\"\n\n\"We actually fucked?\" she asked, pushing herself up to look at me. \"We really fucked? You and me?\"\n\n\"Yeah. We did,\" I answered, still trying to catch my breath. I didn't have time to warn you not to touch me.\"\n\nShe looked at Bonnie, almost desperately. \"We...I mean you and I... did we really? Tell me we didn't really do that!\"\n\n\"Have sex too? Oh yeah. I can tell you that the climax you gave me with your tongue was anything but fake,\" Bonnie answered.\n\n\"No. It wasn't fake. This thing. This...whatever, seems to have changed in the last day or two. Now it's taking longer and whoever it is, and I actually have something resembling whatever the dream is.\"\n\n\"Does what's her name know? The neurologist?\" Bonnie asked.\n\n\"Not yet. I'm going to see her when we're done here.\"\n\nBonnie laughed. \"Yeah. I'd like to say we're done, but we still have to do most of your therapy.\"\n\n\"Well, let's do it while this is all fresh. If we keep touching, it doesn't seem like it'll happen again.\"\n\nBonnie crawled over and reached for my leg. \"Okay, then let's do this.\"\n\n\"Of course, if you do keep touching me, you're going to feel a serious need to have sex.\"\n\n\"Well, I'll worry about that. Come on. Let's get you up again,\" she said helping me up off the floor. She helped me pull my shorts and pants back in place and then started the next exercise with me.\n\nTracy lay on the floor while we worked, still completely naked, her hands on her face, trying not to watch us, Bonnie still half naked. Long before we finished with all the exercises, Bonnie had my pants pulled down and was bent over in front of me, sliding my cock into her pussy. I couldn't stroke long, hell for that matter I couldn't stand all that long, but it was long enough for her to climax on my cock before I had to sit on the mat and rest.\n\n\"Come on. Let's get you dressed,\" Bonnie panted as she crawled over to me. She helped me up and pulled my shorts and pants into place once again before finding her own shorts and pulling them on. \"Tracy. I'll be back.\"\n\n\"Yeah,\" Tracy said, still laying on the floor, clearly upset by what happened.\n\nBonnie led me out of the room, closing the door behind her to give Tracy her privacy. \"She going to be okay?\" I asked with honest concern.\n\n\"I think so. We'll talk. We're pretty good friends, so I think it'll be okay.\"\n\n\"She just didn't know you wanted to be that good of friends?\"\n\n\"I think she's more upset about what she did with you than with me. But don't worry. I'm going to get it all sorted out with her.\"\n\n\"I think I need to ask to have my therapy moved someplace closer. It's a two hour drive each way.\"\n\nShe nodded. \"I understand. Today didn't help much either, did it?\"\n\n\"Not much,\" I admitted.\n\nShe led me out to the waiting room and let Amanda take over for her before stepping to me and giving me a hug. \"Just come back soon, okay?\" she whispered in my ear before pulling away and walking out of the waiting room.\n\n\"Everything okay?\" Amanda asked as she led me out toward the bank of elevators.\n\n\"Yeah. Something happened with one of her co-workers.\" I said quietly as we waited for the elevator.\n\n\"What I think happened?\"\n\n\"Oh yeah. Every bit and then some.\" I nodded. She nodded in understanding as we stepped into the empty elevator car. The doors closed on us and started up to the 4th floor. \"Three way sex. And it was a first for her friend in multiple ways.\"\n\n\"She was a virgin?\"\n\n\"Uh uh. She was still true to her husband, even though he was ignoring her and probably cheating on her. But she hadn't ever done it with a woman before either and she made Bonnie climax on her face.\"\n\n\"Ohhhhh. That could be a shock,\" Amanda agreed as the car slowed and stopped. We walked out and down to the door marked neurology center. \"Hi. I'm here to see Andria?\"\n\n\"Ahh. Doctor Fleck said to take you right back to the lab,\" the little receptionist said as she got up from behind the desk. \"This way.\"\n\nAmanda and I followed along, the young lady guiding me to the lab I'd been in once before. We found chairs and then the receptionist disappeared again, letting us know that Andria would be in shortly.\n\n\"Scott!\" Andria said as she walked in a few minutes later. \"How are you doing?\"\n\n\"Alright I guess,\" I answered.\n\n\"And this is?\" Andria asked, holding a hand out to Amanda in greeting.\n\n\"This is Amanda, my daughter's mother-in-law. You met her down in the room once.\"\n\n\"Oh yes. I remember now. It is okay to discuss this with her here?\"",
        "\"If you're asking if she knows what's going on? Oh yeah. She and I have had any number of encounters.\"\n\n\"So tell me, how are they doing? Getting any less intense?\"\n\n\"No. Actually, if anything, it's worse. It's moved from a few quick seconds of thought to being slower and involving actual physical actions.\"\n\n\"By physical actions, you mean...\"\n\n\"Sex? Oh yeah. I just came from therapy where I had a three way encounter with two of the therapists down there. And yes, the three of us undressed and had sex, right there in the therapy room.\"\n\n\"And if someone were to touch you, say in the living room of your house?'\n\n\"Wherever and whenever,\" I said with a frown. \"Have you made any progress on figuring this out?\"\n\n\"Well. No actually. But I think I have medication that might slow it down a bit. It's actually something we use for some forms of schizophrenia. It can suppress some of the effects, I think. I'll be honest, I'm just guessing. I've never come across anything like this before.\"\n\n\"Okay. So, what are the side effects of this drug?\"\n\n\"Not good. But let's first see if it'll work. We'd give you a dose of the drug intravenously so it works faster, and then I'd like to do another PET scan while you're having an episode. See if it dampens the effects at all. You don't mind, do you? I mean having it happen on purpose?\"\n\n\"Yeah. Fine I guess. Amanda could touch me. We've been through this a few times.\"\n\n\"You're sure? I mean if it happens like you say, she'd be having a physical relation with you right in front of a whole bunch of people.\"\n\n\"Scott. I'm not sure I'm ready for that,\" Amanda whispered.\n\n\"That's fine.\" I nodded. \"Yeah, whoever you want then.\"\n\nAndria left and came back a few moments later with a syringe and gave me a shot. Then she got a wheel chair and helped me into it. It didn't take long to get down to the PET lab and get me situated on the little table. It motored into the machine and they started taking their measurements, the table moving in tiny increments as it scanned me.\n\n I looked at myself in the mirror, proud of how well I still looked. It had been a long time since we got married. While it had never been a bed of roses, I was anxious about this particular anniversary. He said we'd gotten boring in bed, that sex wasn't all that much fun with me any more because it had gotten all too predictable. Well, this time that wouldn't be a complaint. I'd spent weeks planning this. When he stepped in the door, he wouldn't be able to miss the trail of rose pedals from the door to the bedroom. I lit the last of the candles around the room and then turned the lights out. Now the candles on the staircase and the bedroom were the only lights in the house.\n\nI looked at myself in the mirror one more time, the flickering light seeming to make my slightly oiled body glisten, my pussy framed by the sheer black stockings and garter belt, my first time shaved pussy slick and glistening. I cupped each breast for a moment, my C cup tits sticking out of the framework type bra, which did nothing to hold them or cover them, but made a nice picture frame for them. I stroked my nipples, making them harden and my pussy to start to tingle. I was nervous. I'd never done anything remotely like this, so I was quite scared.\n\nI stepped to the bed and crawled onto it. I laid back on it, stuck my arms and legs out to test how comfortable I would be, and then adjusted the pillow, knowing that once I finished my preparations I wouldn't be able to. I sat up and reached for the soft white cord I'd spent so much time tying to just the right length, the loop on each one loose for the moment. I slipped one loop over each foot and pulled them snug. Not so tight that it would hurt, but snug enough that I could only move a little. I couldn't pull my legs together, I'd be spread eagle, completely exposed and at his mercy. I took a deep breath and tried to move my legs, satisfied I could move them enough for the moment. I checked my watch again; it wouldn't be long now.\n\nI knew once I put my hands in the loops and pulled, I'd be screwed. I planned on leaving one loose until the last moment, only pulling it tight when I heard him walk up the stairs. So I waited. Nervous. Anxious. Scared even. But determined. If he wanted me to be something more, something different, something unpredictable, I could be that. I loved him enough to try to give him what he wants. I saw this on the computer downstairs. He'd been looking at a video of something like this. Not rough sex, but definitely in control, his *woman* completely at his mercy. If that's what he found interesting, then that's what I could do for him.\n\nI heard the front door open. It was time. I quickly slipped the eye blinders on and lay back. I put my left hand into the loop and snugged it down. It took a little work, but wormed my hand into the right hand loop, ready to pull it tight. I heard his feet on the stairs. It was time. I tugged the loop. I was captured, at his mercy. I couldn't even scratch my own nose.\n\nI heard the intake of breath as he stepped into the room, a short gasp followed by silence. I wondered what he was thinking. Then I heard the sound of his belt. Then cloth sliding in the otherwise silent room. Shoes dropping to the floor followed by pants being pulled off. Then I waited, not at all sure what was happening.\n\n\"Oh God,\" I gasped in surprise as a wet kiss touched my freshly shaved mound. He certainly noticed that. He kissed slowly around my mound, teasing me and then kissing down around my pussy. His lips teased my lips, making me even wetter for him. I felt his fingers, touching, stroking and then separating my inner lips. He spread me apart, exposing my pink depths to his view and then to his tongue as he slowly licked my slit, sliding his tongue up and down my wetness. His tongue found my clit and flicked over it, making me squirm and wiggle under his attentions. \"Ohhhhhhh God,\" I moaned loudly as he teased me, driving me crazy. He could so easily make me climax. All he needed to do was to leave his tongue there for a few more moments, but he pulled away. He must have known how close I was, how badly my body wanted it, but then I guess that's what control is about. His lips and tongue left my pussy. I could feel him moving on the bed, being careful not to touch me until I felt his lips on my right nipple. He teased it and licked it, making me want his cock, making me so damn horny for him that I was about to scream.\n\n\"Oh, please fuck me. God I'm so ready. Please fuck me,\" I moaned loudly. He pulled his face from my tit and I felt nothing, only the bed moving slightly before... before his engorged head found my lips. \"Oh yesssssss!\" I hissed softly as his cock head spread my pussy lips, pressing to the entrance of my vagina, pressing slowly into me. I could feel my body stretching around him, expanding to accept him while he pushed deeper, my clit sliding along his fat shaft. \"Oh fuck yes,\" I moaned as he started to slide in and out of me. My pussy was on fire, little jolts of electricity racing from my clit as it slid along his hard shaft. God I was going to come so fucking hard!\n\n\"OH SHIT!\" I squealed loudly as he gently bit my nipple, something he'd never done before. But it didn't matter. The pain was as much pleasure as hurt. My whole body seemed to be on fire as I shuddered and trembled. I could feel my pussy clenching around his fat shaft as he continued to stroke into me. I rolled my hips in time with his strokes, trying to coax him deeper, trying to push my own orgasm even higher.\n\nThen I felt it. The first surge of his cum. I felt it push deep into me, flowing powerfully into me. One, two, three powerful squirts as he held himself as deep in me as he could. I lay there panting, waiting. I could feel the sweat drip off his body onto mine as he held himself inside me, his cock slowly shrinking and softening. I waited for what was next. I didn't know what was next, all I could do was wait. I felt his kiss on my tits, each nipple one kiss, almost like a goodbye kiss. The bed moved and then it was silence.\n\nI waited. I could feel his cum leaking from my pussy while I waited. Slowly time passed. It seemed like hours before I heard anything again, but I was sure it wasn't hours. I heard footsteps on the stairs and then the bedroom door open, the telltale squeak of the hinges giving it away.\n\n\"What the fuck?\" I heard him swear in surprise. The bed moved and then light, bright light practically blinded me as he ripped off the blinders. \"What the fuck are you thinking?\" he asked angrily, working to pull the knots on the rope on my right hand loose. He freed it and then leaned over, pulling the knots on the other side.\n\n\"It was your anniversary present,\" I whispered hoarsely, unsure of why he was angry.\n\n\"Why the hell would you think I wanted this?\" he snapped as he pushed off the bed, leaving my feet tied with my legs spread.\n\n\"On the computer downstairs. You were watching videos of this,\" I said a little defensively, wondering why he was angry at me for doing what I thought he wanted.\n\n\"Porn? You thought I was watching porn of this kind of shit?\" he asked as he paced the floor near the foot of the bed. \"Devon! Devon's been watching porn on my computer! DEVON!\" he shouted.\n\n\"Why would Devon be here?\" I asked in shock, having no idea that our son was even supposed to be home. He was supposed to be at school a thousand miles away.\n\n\"He was coming home today. Didn't he tell you?\"\n\n\"No,\" I whispered as I reached for the loops around my ankles. \"He didn't.\"\n\n\"Well, I'm not surprised. They threw him out of school. It's a damn good thing he isn't home yet. Imagine what he'd think if he saw you like this? His own mother? I really don't know what you were thinking,\" he said angrily as I slid off the bed and padded to the bathroom, feeling cum leaking down my thighs. Cum from my own son.\n\n\"Oh damn.\" I heard from the woman that was sitting on my dick. I couldn't see her, but I didn't need to. I knew intimately exactly how she looked. Forty-two, C cup tits, dishwater blonde hair everywhere except her shaved mound, a significant amount of inner labia exposed between full round outer lips. Yes, very good looking. I could still feel my cock occasionally twitching inside her as she sat astride me and the narrow bed.\n\n\"Well, that didn't work, did it?\" Andria said as the bed started to motor out. \"I see what you mean about getting physical. That was almost ten minutes instead of the few seconds it used to take. I wonder if that means it's fading or getting stronger?\"\n\n\"I don't know.\" I said as they unstrapped my head and allowed me to tilt it to see the woman on my lap. Yes, she was exactly as I expected, except naked. She would look really good in that little black outfit.\n\n\"Did you see...I mean... Do you know...\" she stammered.\n\n\"What happened? Yes,\" I answered her, looking down at her hands. She followed my gaze and held her hands out, a weak smile reaching her lips for a few seconds.\n\n\"It didn't work,\" she said softly.\n\n\"He was an idiot,\" I said quietly.\n\nShe nodded as she climbed from my softening cock. \"I know.\" She stood next to the bed and dressed, while Andria helped me off the bed and then helped steady me as I pulled my pants and shorts up.\n\n\"Sorry. I hoped that'd work,\" she said with a disappointed look.\n\n\"Didn't seem to have any effect,\" I said with a frown. \"I think it's time to go home. Call me if you think you have any other great ideas.\"\n\n\"Wait. I don't understand why you're upset,\" she said curiously. \"I mean it didn't work, but that doesn't mean we won't keep trying.\"\n\nI dropped into the chair and then reached my hand to the woman I'd just had sex with. \"I'm sorry,\" I whispered as I held her hand and squeezed it.\n\n\"Me too,\" she said before leaving the room.\n\nAndria looked at me curiously again.\n\n\"I just experienced the most embarrassing event in her entire life. Something I think she hoped she'd gotten past, something she didn't need to or want to remember.\"\n\n\"Sexual?\"\n\n\"Yeah. And no. I'm not saying more about it. Look. In addition to these being longer, slower, more physical, they also leave behind a significant emotional imprint. I FEEL her embarrassment. I felt her excitement, her hope for what it was, and her disappointment when it all went wrong. I know her single most deepest, darkest secret that she's never told anyone. And I have it burned int my mind now. I haven't just been told it, I lived it with her.\"\n\n\"Oh my God,\" Andria whispered. \"I'm sorry. I didn't think of that. That it would leave behind anything.\"\n\n\"Andria. I can close my eyes and SEE myself looking at myself in the mirror, every inch of my, I mean her, naked body. What she wore, how she felt, how she touched herself and what happened. It's all as if I WAS HER! I remember it as if I WAS HER!\"\n\n\"Okay. This is... I don't know what to say. I'm sorry. We'll find another way to work on this.\"\n\n\"Okay. Thanks,\" I said softly as she patted my shoulder.\n\n\"Let's get you back home.\"\n\nWe stopped at a Wendy's for lunch, driving through to avoid any issues, and then made the long drive home. Amanda told me that my son Robert and his wife were going to come for dinner. She said I looked tired and sent me off to bed for a nap.\n\nNan walked out of the house onto the patio, feeling quite sexy in the new little bikini she'd bought. She knew that Rob would love it when he saw it. Too bad that wasn't going to be today. She couldn't stay in the hot tub too long before having to go in and start getting things ready for her best friend Steph and her husband to come over for dinner. She slipped into the swirling hot water and lay back to let it tease and relax her body. She let her hands cup and squeeze her big tits, feeling little tingles race from her nipples through her body. She looked around to see who might be watching. Other than the neighbors, there wasn't anyone that could see, and she doubted any of them were home. Even if they were, what could they see as long as she was in the water? She untied the top of her bikini and pulled it off, laying it on the edge of the tub. She smiled to herself and lay back again, letting her fingers tease her nipples, the sensations slowly turning herself on. She let her fingers slide down her stomach to her thighs and then stroked between them to her wet pussy. \"Ohhhh damn,\" she moaned. Her fingers untied the bikini bottom and tossed it onto the edge of the tub with her top, the pair slipping off to the concrete patio. \"I'll get them later,\" she groaned as she started to stroke her pussy, easing her fingers between her lips to stroke slowly across her clit. She lay there, slowly teasing herself toward her coming climax.\n\n\"Well. Hello!\" She heard, startling her from her self-induced pleasure.\n\n\"Greg! What are you doing here?\" Nan asked, quickly crossing her arms over her big tits under the water.\n\n\"Well, I was supposed to be here for dinner. I'm just a little early,\" he answered stepping closer to the tub. \"But maybe it's a fortunate coincidence.\"\n\n\"Coincidence?\" Nan asked.\n\n\"That I'm early, and you're...naked.\"\n\n\"I'm not,\" she protested.\n\nHe grinned and bent to pick up the bikini off the concrete. He held it up and smiled at her. \"You sure about that? I mean, if this isn't yours, then I'll just wait here for you to get out and we can head back into the house.\"\n\n\"I don't think that'll work.\"\n\n\"No?\"\n\n\"Not unless you want to toss me that bikini.\"\n\n\"I don't think I'd prefer to do that. But I might be inclined to join you.\"\n\n\"You don't have a suit.\"\n\n\"Neither do you,\" he said with a grin. He pulled his shirt off and tossed it aside. His shoes came next and then his slacks. He was standing in only his boxer briefs, his boner incredibly obvious to her. She waited for him to push his underwear off, staring at the bulge. He grinned at her, and pushed his underwear off, freeing his rock hard cock. He stepped into the tub, sitting on the edge so his cock stuck out at her face. He wrapped his hand around his dick and started to stroke it.\n\n\"What are you doing?\" she asked breathlessly.\n\n\"Catching up to you. That is what you were doing out here, wasn't it?\"\n\n\"Maybe,\" she answered, staring at his cock.\n\n\"Wanna join me?\" he asked, still stroking his cock slowly.\n\n\"Join you?\"\n\n\"Sure. Stand up.\"\n\n\"Stand up?\"\n\nHe let go of his dick and stepped to the middle of the tub, his dick sticking out right at her face. He held his hands out for her. She hesitantly moved her hands from across her breasts and reached for his hands. Slowly she stood up, exposing her huge tits to his eyes. \"I've always liked how these look in a dress. They look even better this way,\" he said softly, letting go of her hands. He reached out and gently cupped both soft tits. \"They're fantastic,\" he whispered as he gently cupped them, stroking his thumbs across her nipples. She closed her eyes for a moment and let the sensations flow over her. She felt him let go of one breast and his fingers slide down her firm stomach.\n\n\"OH my God,\" she gasped as he slid his fingers between her legs. She stared at him, but he couldn't quite understand the look. Surprise was certainly there, but also, fear? Excitement? Permission?\" She stepped back, and he followed. She lifted herself onto the edge of the tub and sat there, spreading her legs, giving his fingers even more access. He slid them up and down her slit as he leaned his face to her chest, sucking one of her rock hard nipples into his mouth. He teased over and around her hard nipple with his tongue, drawing a long deep moan from her. He wanted her and he knew she did as well.\n\nHe stepped out of the tub and helped her swivel around until he could lift her off the edge. He drew her back to one of the two lounge chairs and sat on it. He lay back while drawing her to him. She crawled onto the chair, walking her knees up his body until his cock was below her wet pussy. She spread her knees slightly, lowering her pussy to his cock. He felt her wet lips spread around him as she rocked her hips, grinding her clit into his hard shaft. Back and forth she moved, sliding herself along him, his head disappearing between her lips with each stroke.\n\n\"Oh God,\" she moaned. \"I want to feel you inside me.\"\n\n\"Then do it,\" I answered her.\n\nShe grinned at me and lifted herself up. Her fingers lifted my head up and I felt her press it between her lips. She closed her eyes in enjoyment as she lowered herself down my already slickened dick, stretching and filling her as she settled on me. She leaned herself towards me, using one hand to hold herself up and the other to guide one of her big soft tits to my mouth. I sucked her nipple into my mouth as she started to pump her hips up and down, stroking my cock with her wet pussy. Up and down she bounced, moaning and gasping loudly. \n\n\"NAN! What the fuck are you doing?\" Rob almost shouted as he stood inside the doorway to the room, seeing his wife practically laying on top of his dad, completely naked, one tit pressed to his mouth and her pussy pumping up and down his shaft. He stepped over to her and reached out to grab her arm as Amanda, following behind, reached out to grab him.\n\n \"What the fuck are you doing?\"\n\n\"Looks to me like she's getting fucked,\" Steph said from behind him. She stepped next to him and wrapped her arms around him, slowly moving around in front of him, putting herself between him and his wife. \"I think it sounds like a really good idea. I wouldn't mind getting fucked,\" she said.\n\n\"You wouldn't?\"\n\n\"Uh uh,\" Steph said with a grin, moving her hands to the front of his shirt. She started to undo the button of his shirt as he watched his wife pump her hips up and down Greg's hard cock and saw him suck one of his wife's huge tits. Steph soon had his shirt undone and was pushing it off his shoulders, drawing his attention back to her. The smile never left his face as she continued to undress him, seemingly unconcerned about her husband getting fucked only feet away. He looked at Steph as she pulled the small dress she had on up and off and then quickly discarded her bra and panties. With nothing but her high heels still on, she stepped over to the chair, bending over so she could look down at her husband's face. She twisted to look at him behind her. \"So? You gonna fuck my pussy, or wait for your wife to get done and fuck her?\"",
        "He stepped behind her and rubbed his cock head up and down her slit before pushing easily into her wet depths. \"Oh damn,\" he groaned as he pushed deep into her pussy.\n\nSteph grinned down at me as Nan pulled her tit from me, pushing herself upright. Her motions now made her bounce on me, her big tits flying up and down wildly as she pounded down on me. \"Does she feel good?\" Steph asked me, looking down and grinning at me. \"Are you going to come in her? Do you want to fill her with your hot juice?\"\n\n\"Oh God yes. So close,\" I groaned as Nan started to climax around my cock, her pussy squeezing and pulsing around me as she cried out. Steph lowered her face to mine and gently kissed me, wetly at first and then with more eagerness. Her kiss grew more and more erotic and needful as Rob pounded into her. I closed my eyes and enjoyed the sensations of my wife kissing me while her best friend bounced wildly on my cock. I could feel my orgasm slowly building, my body seeming to be eager to fill the pussy on me. \n\nI opened my eyes to look at my wife, wildly swinging tits, my eyes having trouble focusing for a moment. Each big soft tit swung wildly below her as she pushed herself up from my face, the kiss now broken. I shook my head in confusion for a moment before looking down at Nan, bouncing wildly on my cock, her tits bouncing and flying wildly. She cried out in pleasure, \"OH FUCK YES!\" as her orgasm intensified even more. My body, unable to hold back any longer spasmed and I could feel a gush of cum lance up into Nan's pussy. I looked at her sexy body as she cried out again, my body pumping shot after shot into her.\n\nI lay there panting, my eyes traveling to Amanda's body, her tits swinging back and forth while Rob pounded into her. I could tell from her face that she was about to climax, her eyes closed and her whole body trembling slightly. \"UHHHHHH FUCK!\" she gasped as her body stiffened. She pulled off his cock and turned to face him, squatting down in front of him. She grabbed his cock with both hands and began to frantically stroke him while she periodically trembled.\n\n\"SHIT!\" he grunted as his body jerked, a huge gush of cum spurting onto her face and tits. Half a dozen times he shot cum onto Amanda's face and tits. He stood there panting, looking down at Amanda in confusion, and then at his wife, sitting astride me, my cock shrinking inside her. She was also starting to look around, realizing she was naked, though realizing what we'd just done would take a few more seconds. She was also focusing on her husband, who was looking down at a naked Amanda, his cum dripping off her tits as she wiped her face with one hand.\n\n\"What the fuck happened?\" Rob asked, looking back at his wife again as she looked down at herself, realizing exactly where my cock was and how naked she was. She looked around and found her dress on the bed behind her and grabbed it, covering her tits and trying to push it down between her legs where my dick was still stuffed in her.\n\n\"What the fuck did I do?\" she asked, mostly to herself. \"Jesus Dad! Did I just fuck you?\"\n\nI took a breath and nodded. \"It wasn't your fault,\" I said.\n\n\"Jesus Nan! What the fuck did you do? Fuck my dad?\" Rob asked, almost shouting.\n\n\"Yeah? Well, that isn't mayonnaise all over Amanda's tits, is it?\" she snapped back before looking down at me again. \"You don't look surprised. What the fuck is going on?\"\n\n\"Is this that thing that sis talked about, how when she touched you, she remembered things that...she remembered sex things?\" Rob asked, still standing in front of Amanda, looking down at her and then back at me. \"Is this that?\"\n\n\"Yeah. Pretty much.\" I nodded in answer.\n\n\"Jesus Dad. This was...this wasn't just in my mind. I had sex. I mean I think I had sex.\"\n\n\"You did,\" Amanda said softly. \"You most certainly fucked me while your wife fucked your dad.\"\n\n\"But why? How?\" Rob asked, not fully understanding yet.\n\n\"They're still trying to figure it all out, but my guess is that Nan touched your dad to wake him up. Skin to skin seems to be the primary trigger. Then when you came in and saw what she was doing, you reached out to grab her while I was trying to stop you. All of us became connected and melded into that one situation,\" Amanda said quietly.\n\n\"And this happens every time dad touches someone?\"\n\n\"It's worse than that. It's changing. It was just mental at first. It was all happening in our minds. I'd touch someone and share the memory or fantasy or whatever it is in just a few seconds. But it's been changing. Now it's taking longer and it's more physical.\"\n\n\"More physical?\" Nan asked. \"Is that what you call fucking your daughter-in-law?\"\n\n\"Hey! Stop this right now!\" Amanda snapped. \"He didn't fuck you. YOU fucked HIM. It was your fantasy. It was a fantasy, wasn't it? Not a memory?\"\n\nNan looked back and forth between Amanda and Rob for a few seconds.\n\n\"Oh Jesus. Really?\" Rob finally said, shaking his head and turning to walk across the room. He leaned on the wall for a few moments and then turned around. \"So, you and Greg... You two actually fucked behind my back?\"\n\n\"It just happened once. It was an accident. It wasn't supposed to happen.\"\n\n\"What wasn't, you seducing him?\"\n\n\"Hey, hold it!\" I snapped. \" I live these. I not only feel it all, but it's all burned into my memory because I live it. And she did NOT seduce him. It was the other way around.\"\n\n\"Oh shit. Seriously? You let Greg seduce you into fucking? Does Steph know?\"\n\n\"Yeah. She does,\" Nan answered quietly. \"She kind of walked in on us doing it.\"\n\n\"And she stopped it?\" Rob asked.\n\n\"No. She didn't. She...um...she joined us,\" she almost whispered.\n\n\"She joined you?\"\n\n\"She um... she got undressed and made him lick her pussy while I was on him,\" she whispered. \"I guess it wasn't the first time she caught him with another woman.\"\n\n\"Jesus. That bastard!\" Rob swore.\n\n\"She said that if you ever found out that it'd to be your turn. She'd come over and you could have her the way he had me. Then it would be all even.\"\n\nRob looked stunned. \"She said what!?\"\n\n\"She said that if you found out that you'd get to fuck her. Kind of payback. Not that it'll undo what Greg did, but it'd at least even things out. He had me once, you get her for the whole day. And no, I'm not allowed to object,\" she said. \"That's why I didn't tell you. As long as you didn't know, I didn't have to deal with watching you fuck her.\"\n\n\"Watching me?\"\n\nShe nodded. \"The price I'm paying for fucking Greg. Watching you fuck her.\"\n\n\"Well, that sounds reasonable,\" Amanda said quietly. \"A lot better than divorce court. Trust me, I know.\"\n\n\"Divorce court?\" Nan asked before looking at Rob. \"It was an accident. I didn't mean for it to happen.\"\n\n\"But it did! Just like this did.\" My son snapped quickly.\n\n\"Yeah. That's right. Just like this did. And in this you quite happily fucked Steph, or Amanda, or whoever. So go tell Steph that you know and fuck her silly and then we'll be done with it all.\"\n\n\"When? When was it?\" he asked.\n\n\"Almost two years ago. I bought a bikini to surprise you and wore it out in the hot tub. I got kinda turned on thinking about how it'd tease you and then, well, I took it off and was pleasuring myself, and Greg showed up. I didn't invite him in, he kind of invited himself and well... things happened that shouldn't have.\"\n\n\"Sometimes they do. So why don't you two go to the living room and talk this out. Okay?\" Amanda said as she stood up. \"I need to clean up a little and then dinner's on the table.\"\n\nShe reached for Nan's arm and coaxed her off me, her motion giving me a quick glimpse of her pussy, which is exactly how I remember it from her memory, except now it had a little more hair around it.\n\nAmanda helped me off the bed and into the bathroom. \"What's wrong?\" she asked quietly as she washed my dick and balls.\n\n\"When you kissed me. I came out of it. I saw Nan fucking me, not Greg, but me. I saw Rob fucking you, not Steph. I knew it was you.\"\n\n\"That's different,\" she said. \"Another change?\"\n\n\"Maybe a good one?\"\n\n\"Okay. So what do we do about it?\"\n\nI felt a little excited. It was the first thing outside myself that switched it off, at least for me. I want to try it with someone and have you kiss me.\"\n\n\"And if it doesn't help? It might just pull me in too,\"\n\n\"But if it doesn't,\" I said hopefully.\n\n\"We'll try it when we can,\" she said with a nod.\n\nBy the time we got out of the bathroom the kids were dressed again, and while neither looked happy, they weren't fighting either.\n\n\"You know Dad. This...um...thing could be really complicated.\" My son suggested.\n\n\"Tell me about it.\"\n\n\"But you're staying here with Amanda. Doesn't it happen with her too?\" Nan asked.\n\nAmanda blushed brightly. \"It does. I've just accepted that it will, and we'll move on from there.\"\n\n\"But...then you two are...um...\" Rob started to say.\n\n\"Fucking? Oh yeah. I'm getting my fill of all the sex I haven't had for the last so many years, so I'm not complaining. Besides. I like your dad. He's sweet and caring and is honestly concerned about how this affects me.\"\n\n\"So, you two are good with this happening between you? I mean, really okay with it?\" Nan asked as Amanda set dinner on the table.\n\n\"I am,\" I nodded. \"Amanda has a very pleasant fantasy life. Nothing too over the top, and actually pretty romantic,\" I said with a little smile. \"And since I feel every bit of what she's feeling, it makes the rest of our time very pleasant.\"\n\n\"Romantic?\" Nan asked. \"Like in... sweet night walks and things?\"\n\n\"And things,\" I said with a little bigger smile. \"You'd be surprised how romantic a walk along a river bank can be.\"\n\n\"Or taking a bath together in a lake?\" Amanda added as she sat down next to me at the table.\n\nNan thought about it a minute. \"That does sound romantic. I wish we'd do more romantic stuff like that.\"\n\n\"You could,\" I told her. \"Just takes effort.\"\n\n\"What do you consider a romantic walk?\" Nan asked me. \"Describe it for me.\"\n\n\"Oh. I don't know that I could. It's just a feeling. How things progress. I mean a walk along a river trail could be romantic or it could just be lustful. Depends on the attitude of both parties.\"\n\n\"Can you stop it?\" Rob asked. \"This thing that happens?\"\n\n\"Well, I could at first. I actually tried a few times and was able to. Sometimes I also was able to steer it a little. I got into one that was distinctly uncomfortable and I realized that I was actually pushing towards something I could handle.\"\n\n\"So, you can make this stop?\" he asked.\n\n\"I wish. No, I can't. And since things have gotten more....um...physical, I'm finding I can steer it somewhat, usually by accident, but to a lesser extent.\"\n\n\"So you could have stopped Nan from doing what she did? From having sex with you?\" he asked, putting the fork down and looking pointedly at me.\n\n\"Trust me. I not only couldn't, but I also didn't even realize it was me. I was part of it. I was feeling HER, I was feeling what she was feeling in the hot tub. I was feeling her sexual excitement, her arousal. She was turned on thinking about you taking that bikini off with you in the hot tub. I was feeling her sexual excitement. I felt her hesitation, her nervousness as Greg started to undress and join her in the tub. I felt how trapped she felt. But I also felt that melt away, not because she was interested in fucking Greg, but because she was so sexually excited, and he played right into it. I didn't start to shift out of her into the Greg persona until he was sucking her nipples. I don't know how to describe it. I flowed into him as her lust for him grew with his attentions.\"\n\n\"So this is Greg's fault?\"\n\n\"As much as yours,\" I answered. \"If you spent a little more time romancing your wife, she might not have responded to his seduction so easily.\"\n\n\"What? You're saying it's my fault that Nan was easily seduced. Seems to me that it's her problem.\"\n\nI sighed heavily. \"Son. If this has taught me anything, it's that women are incredibly complicated. But there are some universal truths. I've been inside so many women's head, inside their dreams, their fantasies. I'm an engineer. I analyze and evaluate for a living. There's a common thread in all of these encounters. That common thread is that they want to be romanced, they want to be led, seduced, and teased. Oh sure, there are times when wham bam thank you ma'am is what they want or even start. But for the most part, they want to be loved in the way that makes them feel special. Sometimes men like us, we forget that they want to be romanced.\"\n\n\"Forget?\"\n\nI chuckled. \"There were times when your mother got quite upset with me because I'd forgotten that a little romance was important. Usually, she'd remind me of the day we met, and how that turned out. Yes, romance, seduction, love and sex all go hand in hand, at least for a woman.\"\n\n\"Amanda,\" Nan asked, setting her fork aside. \"Do you feel...um...do you sorta feel the need to have sex again, like I mean, really need to have sex?\"\n\nAmanda chuckled her soft feminine chuckle that I was coming to love to hear. \"It's something of a side effect. And yes, my pussy is sopping wet thinking about getting fucked again,\" she said bluntly.\n\n\"God it's almost like I can't hold back. I feel like I'm going to go crazy if I don't get my pussy filled. I NEED to have him again,\" she groaned as she pushed her hands into her lap.\n\n\"I think maybe you better take your husband into the bedroom for a few minutes,\" Amanda said softly. \"But I know exactly what you mean. I have an overwhelming desire at the moment, and it's not for Scott's cock, but for your husband's!\"\n\nNan pushed herself up from the chair and stood up. I expected her to grab her husband's hand and pull him off to the bedroom, but instead she stepped around the table, pushed my chair back from the table and sat on my lap. \"God, I wanna be fucked by you soooo bad right now. My pussy is leaking so much it's gotta be making a wet spot on the back of my dress.\"\n\n\"NAN!\" my son said loudly.\n\nShe turned her head to look at him. \"Fuck Amanda again! I don't care!\" she said before turning back to me. She leaned her face towards mine as she wrapped her arms around my neck. \"Fuck me!\" she whispered before she pressed her lips to mine in an urgent, wet kiss.\n\nI held her arm in mine as we walked along the winding flagstone path, her high heels in her hand so she wouldn't trip on the gaps between the stones. \"These are going to ruin my stockings,\" she said as she walked across the warm stones with me, clearly in no hurry to get anywhere as the sun drifted toward the hilltops in the distance.\n\n\"I could solve that,\" I said, only partly joking, my eyes never really leaving her.\n\n\"Oh you could, could you?\" she asked with a crooked little smile coming to her sexy lips.\n\n\"Well, not without your permission of course,\" I answered quickly, not wanting her to think I was some kind of a letch.\n\n\"Sarah said you were a gentleman. Offering to take my stockings off doesn't sound too gentlemanly, now does it? That is what you were offering, wasn't it? To take them off for me?\"\n\n\"I...um...you see... I think...um...\"\n\n\"Cat got your tongue?\" she asked with that smile growing even wider, her eyebrows rising slightly.\n\n\"I'm sorry. I didn't mean to imply that I should...um...be putting my hands under your dress,\" I answered awkwardly.\n\n\"Oh? You don't want to put your hands under my dress?\" she asked, knowing full well that she had just successfully trapped me.\n\nI was silent for at least half a dozen steps before answering. \"Lilly. There is nothing I would love more than sliding my hands up your legs under your dress and sliding your stockings off for you. Just the touch of your bare arm in mine is almost intoxicating. I can only imagine how much more so feeling your soft legs in my hands would be,\" I said quietly, doing my best to recover from my awkward stumble. Smooth is not my middle name, but I felt pretty good about that response.\n\nHer smile grew wider and then turned into a giggle for several long seconds before she stopped in the middle of the path and turned to face me. \"Well, since you are being so gallant and noble, you may proceed. But do be careful of where you let your hands wander and just exactly what it is your sliding down my legs.\"\n\nI released her arm and knelt in front of her, looking up at her smiling face. The backless white dress hung around her large breasts, each large mound nearly at eye level as I knelt in front of her, hidden from view by only a thin layer of cloth that didn't quite hide the fact that her nipples were as rigid as the dick in my pants. I reached for her hips and gently slid my hands down each side of her, letting my hands slide down the thin dress's material until my hands touched her stocking covered legs, my left hand touching several inches above her right knee while my right had to move several inches below her left knee because of the angled hem of the summer dress. I lowered my butt to my feet, settling myself lower and back slightly, but providing a place for her to rest a foot on my lap. I moved both hands to her left ankle and gently coaxed her foot to rest on my right leg.\n\nI slid my hands up her creamy white leg, encased in the slick nylon stocking, feeling for the lacy top I expected. My fingers slid higher and higher on her leg, still not reaching the top of her stocking. I continued to slide my fingers up, nearly touching her crotch with my left fingers before I felt the bare skin of her thigh. I looked up at her in confusion, that grin on her face telling me she'd once again turned the game around on me. \"You do know what to do with a garter belt, don't you?\" she asked almost condescendingly before letting the smile return to her lips.\n\n\"I do indeed, so long as you don't mind my hands seeking out the clips.\"\n\n\"I think that I can tolerate that, so long as you are discreet about it,\" she said with an artificial air of superiority. I let my right hand slide around the top of the stocking toward her butt, finding her nearly bare butt cheek in my hand in moments. I watched her close her eyes as I stroked her soft smooth skin, searching for the clip that my palm had already located. I equally let my left hand slide up her thigh right against her crotch, gently stroking my fingers back and forth across the slick material of her panties.\n\n\"When Sarah suggested that she had a date for me tonight, I had little expectation of anything promising, but the touch of your hands is quite exhilarating, though far from gentlemanly. You did promise to take off my stockings, after all, not molest my bare ass and pussy.\"\n\n\"My apologies,\" I whispered, sliding my fingers back to the clasp. As good as I thought I was with bra straps, this was a different animal. I eventually ended up trying to work the little rubber catch out of the metal loop with both hands, my right around the outside of her thigh and my left looped around between her legs, my wrist rubbing against her panty covered pussy as I worked. I finally got the catch apart and slid my hands around to the front one, which unfastened much easier for me. I slowly started to roll her stocking down, coaxing it to roll into a doughnut as I teased it down her legs, stroking her thigh and then her calf. She lifted her foot from my lap, resting both hands on my shoulders to balance herself as she stood on one foot.\n\nI pulled the stocking off her foot and set it aside as she moved her foot from my lap. She lifted her other foot and rested it on my lap, not this time on my leg, but right on the massive bulge in my pants. I once again slid my hands up her leg, feeling the softness of her thigh and the heat of her pussy as I let my right hand gently stroke between her legs. For a few moments before sliding my hand around to undo the clasp resting just below her bare ass cheek. I rolled the stocking down as I had the first, her foot gently massaging my hard-on through my pants until I had the stocking down to her ankle. She lifted her foot and allowed me to slide the stocking off her foot and then she set it back again right on my hard-on.",
        "\"It seems to me someone has become quite excited,\" she said softly before removing her foot from my lap and stepping back, ending any chance for me to do anything else under her dress. She held her hands out for me and helped me to stand, her stockings now in my hand. She took them from me and held them up between us. \"Now, what should we do with these? I have no pockets and my purse is in the car. Whatever shall I do with them? Ohhhhhh. I know. You have pockets. Why don't I just slip them into your pockets?\"\n\nWithout waiting for an answer, she stepped closer and held her shoes up for me to see. \"Why don't you hold these for me for a moment?\" she whispered with a mischievous looking grin.\n\n\"Uh. Sure,\" I agreed quickly, more nervous than I had any right to be. I took the shoes and held them as she slowly stroked a finger down the front of my button down shirt. She slid her hand across my crotch, stroking her fingers across my hard-on.\n\n\"It seems to me you already have something in your pocket. Maybe there isn't room for these?\" she asked softly. \"But maybe there is anyway,\" she added a few moments later. She stepped around me and stepped herself against my back, her big soft tits pressing against my back as her hands slid around my hips. She eased one hand into each of my front pockets, pushing the stockings into each one as before using her fingers to gently tease my dick through the pocket material. \"Hmmmm. That isn't in your pocket after all. If that's what I think it is, it would seem to be in a very uncomfortable position,\" she whispered practically into my ear. \"I'd think you'd like that in a more comfortable position.\"\n\n\"Uh. Usually.\"\n\n\"You can fix it if you want...\" she whispered. \"Or I could. Unless you're bashful. You're not bashful, are you? From the way you touched me under my dress, I don't think you're bashful.\"\n\n\"Maybe a little,\" I whispered back, looking up and down the pathway to see that we were still alone. It was a public park, but this particular pathway that ran along the brook was much more heavily used by the morning runners in the summer months, not so much in the warmer evenings.\n\nI felt her press herself even more tightly to me as she slipped her hands out of my pockets. She reached for my belt with her left hand and pulled it out from my waist as far as it would go, creating a gap for her right hand to slip into the top of my pants. I felt her fingers work the shirttail out of the way and then work her fingers into the waistband of my briefs. I felt her draw in a breath as her finger touched my hard shaft, slowly stroking down towards the base so she could press the whole of her palm against it. She slowly teased her hand up, this time letting her fingers slide up each side of it, angling it slightly along my body, removing the uncomfortable bend that was preventing it from growing fully. With it now straight, she pressed her hand down again, this time stroking its length with her fingers, before stroking up again. She worked her fingers its full length, pausing at the tip, letting her fingers not only feel around it but also smear the pre-cum leaking from it around my head.\n\nI almost groaned in disappointment as she withdrew her hand from my pants.\n\n\"Nicely shaped head. I don't believe I've ever enjoyed a circumcised dick,\" she whispered before she let go of me, pulling her body back from mine. \"I might want to see it, depending on how things go,\" she said as she started to slowly walk away. I turned and took several large steps to catch up. She slid her arm into mine again and pressed herself more tightly to my arm than she had before. \"That's a beautiful sunset,\" she said softly, looking off to the orange ball of the sun sliding behind the distant hills.\n\n\"It is. But not nearly as beautiful as you. Not even a fraction so,\" I whispered, looking at her rather than the sunset. Her auburn blonde hair cascaded around her shoulders and part way down her bare back, her face, neck and exposed cleavage were speckled with little red dots that I was dying to explore.\n\n\"You think I'm beautiful?\"\n\n\"When I asked James if you were good looking, he shrugged and said not bad. I'm going to have to seriously adjust his perception of what good looking is, because you are absolutely stunning. Your beauty makes the sunset seem almost anti-climatic.\"\n\n\"Ohhhhhh now that is a good line. Have you used that one before?\" she asked, squeezing my arm.\n\n\"Truly, I've never said that before. Never felt that before. You are incredible looking. I'd like to take a lifetime exploring each and every freckle on your body, no matter where they may be.\"\n\n\"You would, would you? That sounds awfully serious for a first date. A blind first date at that. I mean we haven't even exchanged phone numbers, let along anything more meaningful, like bodily fluids.\"\n\n\"I can remedy that,\" I said as I coaxed her off the flagstone path towards a massive willow tree. I pushed us through the curtain of branches nearly touching the ground, into the space beyond. There, under the tree was an old wooden bench, made of a single massive cedar log that had been cut in half. The surface was worn smooth from years of butts rubbing on it, but at that moment I wasn't interested in sitting. I turned her to face me and lowered my face to hers, pressing my lips softly against hers. She eagerly returned the kiss in the gloom, pressing her body to mine as she wrapped her arms around me.\n\nWe stood and kissed for long minutes, each of us teasing the other's tongues and her sucking on my lower lip several times while we caught our breath. \"I really meant it. I'd love to see just how far those freckles go,\" I whispered during a break in our long embrace.\n\n\"Then why don't you?\"\n\nWith a smile, I moved my hands to the back of her neck where I fumbled with the catch on the chain that held the top of the dress in place. I could almost feel her impatience before I finally worked out how the clasp worked and unfastened it. I let go of the chain and she stepped back from me, letting the top of the dress fall down, exposing her breasts, each so much larger than I had imagined them. Each large soft mound was more than large enough that I doubted I'd be able to contain all if its soft expanse, even using both hands. I stepped to her, reaching out for her hips. I held her, turning her slightly and bending down to gently plant a kiss on one of her rock hard nipples. I heard her gasp softly as I closed my lips around the hard protrusion and teased it with my lips. I felt her hands move to my pants, undoing the belt and then the snap and zipper. My slacks fell to my ankles as I kissed my way to her other huge soft breast, teasing its nipple as well.\n\nI felt my briefs being pushed down and my cock sticking out hard as she wrapped both hands around it, slowly stroking it, her fingers barely able to wrap all the way around my shaft. I slid my hand down, pushing her dress down over her hips until it fell to the ground around her feet. But I wasn't done. I slid my hands back up, finding the strap of the garter belt and removing it from around her, all the while kissing and teasing her sexy huge breasts. The last was her panties. I pushed them down as far as I could, pushing them down her thighs.\n\nShe pulled my head from her chest, pulling me up to look at me. \"Scott,\" she whispered. \"I've never...I mean....I've never...\" she stammered, unsure of herself in my eyes for the first time.\n\nI could see the hesitancy in her eyes, hear it in her voice. I smiled and leaned down to kiss her. I stepped to the bench, holding her hand and pulling her with me. I sat on the bench and then pushed her panties down until she could step out of them, leaving her completely naked. I pulled her to me, sitting her on my lap, her legs both over my right leg and my dick sticking up between her legs. I leaned my face back to hers and kissed her cheek. \"We don't have to then,\" I whispered back, feeling somewhat disappointed, but not wanting her to see it or feel pressured to do something she didn't want to.\n\nI lowered my head to her chest and sucked a nipple into my mouth again as I stroked my fingers along her thigh. She spread her legs apart, allowing me to slip my fingers between her legs and stroke her hairless pussy. Her big fat pussy lips were round and full, and I could barely feel any inner lip protruding as I worked my finger between them. It only took a few strokes before I was rubbing her clit, spreading her juices up across it and stroking it gently. As I worked it, she had one hand around my back, holding on to me, her other stroking my dick.\n\nShe breathed raggedly, her excitement growing by the seconds as I coaxed her towards climax. Up and down I stroked my finger, teasing her clit and lips, my tongue and lips on her nipple seeming to just hurry things along. \"Oh God,\" she groaned softly. \"You're going to make me climax.\"\n\n\"Good,\" I whispered, letting go of her breast and straightening so I could see her face. I watched her close her eyes as my finger pushed her right to the edge. I knew she was there, almost ready to fall off the edge when she shifted herself. She opened her eyes and looked down at my dick in her hand.\n\n\"I've never climaxed with a dick in me,\" she whispered before lifting herself up. She pushed it back, trying to find the right spot, rubbing me around her lips as she searched for just the right position. Then it was there, her pussy spreading around my mushroom head. I felt her slowly settle down, pressure on my head building until I slipped inside her. She moaned in pleasure as she slowly sank down on me, her vaginal tunnel expanding around me as she sank lower and lower.\n\n\"Oh God,\" I groaned as she settled back on my lap, my cock now fully embedded into her. I started stroking her clit again, coaxing her climax back towards where it had been. I felt her shudder slightly, her legs first then her vagina. She wrapped her arms around my head and pulled me towards her big tits, gasping and moaning softly as she climaxed around my cock.\n\n\"Fuck me,\" she whispered as her climax faded away. \"Fuck me until you come. I want to feel it happen inside me,\" she whispered.\n\n\"You sure?\"\n\nShe looked at me longingly. \"I'm sure.\"\n\nI coaxed her to stand up and then lay her on the bench with her butt at one end. I lifted and spread her legs, looking down at the sexiest body I'd ever seen. It only took me a moment to get my dick back into her, but then, I took my time, wanting to make it as good for her as I could. I rested her feet on my shoulders as I stroked in and out of her, leaning over her and holding myself up over her. I stroked harder into her, slapping out bodies together and driving the base of my cock into her clit with each stroke into her. In and out I stroked, driving harder into her as my own climax raced toward completion.\n\n\"FUCK!\" she squealed when she felt my cock surge a gush of cum into her. Her whole body seemed to jerk and twitch in time with mine, my spurting cum adding just the right sensations to her renewed climax. \"Oh God Scott. I know it sounds corny, almost stupid, but I think I could easily love you.\"\n\n\"I know I could too,\" I said breathlessly. \"I could spend the rest of my life looking at and loving you.\" \n\n\"Oh my God,\" Nan moaned as she lay on the table in front of me, once again naked, my cock pumping and twitching inside her as I filled her with my cum once again. I looked up and down her body and then looked around to see Amanda bouncing up and down on my son's cock as he sat in a chair in the living room.\n\n\"Dad?\" Nan whispered.\n\n\"Yeah?\"\n\n\"Was that the first time? I mean, the first time you met Lilly? Rob's mom?\"\n\n\"Yeah,\" I said, pulling from her and sitting down hard, trying to hold back tears. \"God, I miss her,\" I said quietly before I got up. I pulled my pants up to my thighs and walked to the bedroom. I flopped face first on Amanda's bed and cried almost as hard as I did the first night she was gone."
    ],
    "authorname": "m_storyman_x",
    "tags": [
        "dreams",
        "bisexual",
        "incest"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/awakening-ch-10-1"
}