{
    "title": "Homecoming Ch. 03",
    "pages": [
        "I am trying to get these chapters out as fast as possible without letting the quality suffer. I'll probably reread this and wince as a result of my rushed efforts. However, as always, I appreciate all comments\u2014good and bad. To those of you who have been leaving comments, thank you so much for taking the time to do so. Hopefully this time-hopping won't get too distracting, but I keep wanting to find out what's going to happen to Daniel next. This story is tearing me in two directions.\n\nChapter 3 \n\nSte-Mere-Eglise, France, June 6, 1944\n\nAs the eye of the storm passed over her, Claudette Renault studied the face of Daniel Carven\u2014the young man who had managed to save her life, even though he'd been unable to save her husband's life from the violent invasion of their home. The American soldier, not more than five years past the boy he'd once been, was almost too handsome to be a character in the horrific play unfolding before her eyes. \n\n\"He's as beautiful as my Claire.\" The farmwoman murmured aloud, breaching the staid silence of the empty stone cottage.\n\nClaudette still spoke of her daughter in the present-tense, because as far as she was concerned, Claire was still alive. Unless Claudette heard otherwise or saw her lifeless body with her own eyes, Claire Renault\u2014the virtual twin of the young man who now lay at the woman's feet\u2014was still alive; and, in an inexplicable leap of faith, Madame Renault knew that saving this man would some how keep her daughter alive. \n\nClaire was a patriot in the French Resistance. Like this young soldier, her daughter was somewhere endangering her life for the lives of strangers. Without Claire, Claudette would be the last living member of her family\u2014she would be lost. \n\nThe mother choked back the heart-wrenching sobs of grief that churned their way up through her windpipe. Greedy claws of sorrow tore at her throat and demanded vocalization. She bit her lip to stifle the flood of emotions. \n\nThere would be time enough for the luxury of grief. Grief for the loss of her true love, her husband of almost twenty-five years, would have to wait. For the past five years, she and her husband had learned to live with the sacrifice of unexpressed pain and loss. Their Claire was the reason they'd refused to succumb to sorrow's seductive embrace\u2014as long as she lived, hope lived. \n\nClaudette set to work on the daunting task before her\u2014a karmic exchange: the life of one savior for that of another. Claudette's family would survive because he would survive.\n\nAfter whispering a reverent pray over the body of her fallen beloved husband and covering him with their daughter's baby quilt, the sturdy-framed woman took inventory of Daniel's injuries and assessed how she would manage to get him off the cold flagstones and save his leg. Other than the bleeding, his injuries were grave but not necessarily fatal. As she worked, her gaze touched upon the serene expression on his olive-toned features. \n\n\"Thank God for whatever merciful visions are visiting him,\" Claudette mused and she lovingly reached down to brush a curling lock of hair from his fevered brow. \n\n\"His hair is raven, just like her Claire's,\" Claudette marveled.\n\nShaking off another impending spike of grief threatening to overtake her, Claudette prayed that Daniel could consciously summon whatever place he now lingered in this unconscious state. Agony was coming to claim him soon enough. \n\n\"Monsieur, you must wake up,\" Claudette prodded, waiving a cloth damped with strong aromatic spirits under Daniel's nose.\n\nThe dream of Lula and their first kiss was violently wrenched from Daniel's mind's eye as the spirits started to take effect. Abruptly, he was slammed back into consciousness. Blankets of pain smothered him even as he opened his mouth to release a scream\u2014a scream he quickly swallowed once he remember where he was. \n\nIt was all plummeting back to him: D-Day, the soldiers, the farmers, his leg. \n\nOh God! This was not his home. He was not with Lu. \n\nHe was here\u2014back in the farmhouse, on a cold stone floor. His leg was shattered. He was probably bleeding to death.\n\nClaudette's heart ripped at the sight of the man forcing his way back into the conscious world. Judging by the misshapen form hidden by the blood-soaked pant leg of his fatigues, the boy was lucky to have a leg even if it was more than likely fractured.\n\n\"Monsieur, you must stay awake.\" The farmwoman continued in more than passable English, \"You are bleeding...very much. Je dois...I must stop the blood. Then I fix the leg, until I get help for you.\" Claudette's instructions were accompanied by pantomiming her intentions so that the man could understand clearly what lie ahead.\n\n\"There are more of you...non?\" Claudette inquired, hoping to confirm what her contacts in the Resistance had told her, even if they couldn't give her news about her Claire.\n\nDaniel could only grimace and nod in reply.\n\nThis young soldier was only part of a massive invasion taking place in Normandy! \n\nThe beginning of the end of France's struggle for liberation was at hand, and Claudette had been thrust into the middle of it, which is exactly where she wanted to be; but she'd always envisioned this moment standing side-by-side with her husband. She afforded another forlorn glance in the direction of the dead man's body beneath their child's blanket. She would welcome grief's embrace later\u2014there was work to be done. \n\nShe knew that this soldier's appearance meant the appearance of other Allied troops\u2014 hopefully not as untimely as this young man's entrance into France had been. There would be medicine and help. She would tend to his immediate needs and bring him the help he needed. \n\nClaudette winced in sympathy for the soldier as she cut open the leg of his trousers to reveal the bruised, swollen and bloodied flesh of his leg. She glanced momentarily up at the young man to make sure he was still with her. He smiled weakly in reply\u2014stoic. \n\nEven when she applied the tourniquet and then set herself to the excruciating task of splinting the leg so she could move him from the floor to her bed, Daniel merely nodded in silence. His silent meditation was only occasionally punctuated with sharp intakes of breath through gritted teeth as the middle-aged woman gingerly manipulated flesh and bone back into place. From the deft way she administered aid, Daniel could tell that this wasn't her first time at the rodeo\u2014she'd done this many times before.\n\nWith the tourniquet and splint in place, Claudette used the last of her adrenaline to half-carry, half-drag Daniel the last few yards from the doorway to her bed. She took great pains to make sure that the soldier didn't put any weight on his injured leg. Only after an uncomfortable jostling of bedcovers, pillows and blankets to ensure his comfort and keep him warm so as to ward off shock, did Claudette prepare to journey out into the early morning chaos in search of help. \n\nPulling a worn knitted shawl over her shoulders, she turned to Daniel to address him once more before leaving.\n\n\"You must loosen the binding every dix minutes...every 10 minutes\" Claudette pointed to his watch and held up her hands, wiggling ten plump fingers before continuing, \"loosen the binding, and if blood still comes, tighten it again just so...not too much.\"\n\n\"Je comprends,\" Daniel nodded in acknowledgement, \"Je parle un peu Fran\u00e7ais,\" he continued, confirming Claudette's suspicions that the boy could understand her in either language.\n\n\"Bon... Je rechercherai vos camarades et apporterai l'aide,\" Claudette advised, reassuring Daniel that she would return with the \"Calvary.\" \n\n\"Mais...you must stay awake. You must check the binding.\" The woman admonished and pointed at his splinted leg, adamant that these instructions be followed to the letter.\n\n\"Je promets.\" Daniel promised and gave her the \"thumbs-up\" to indicate his understanding.\n\nWith this assurance, the Frenchwoman closed the heavy wooden front door and locked it behind her. Daniel was left in silence and solitude. The presence of the two dead German soldiers in the next room was pushed out of his mind as he forced himself to think of his future. \n\nDaniel sat up in the ornate wooden bed, one of the few pieces of furniture in this sparse chamber. Watching the sunrise over the bucolic view of the apple orchards outside the bedroom window, the throbbing pain in his leg was momentarily forgotten. He knew that his consciousness was the tightrope that kept him from toppling into death from blood loss on one side and amputation of his leg on the other. \n\nHe would stay awake. Staying awake meant staying alive. Staying alive meant seeing her again. \n\nHe would taste her sweet lips and feel her lean, smooth body beneath his again. This time, he would tell her the things he should have said the night before he'd pulled himself away from the her heat and the silken embrace of her arms to head for the train station and board the train that would take him away from her.\n\nThese thoughts kept him awake as he waited in silence for help to arrive.\n\nRaleigh, North Carolina\u2014 June 30, 1941\n\nThe kiss, unsure and awkward at first, grew in intensity when Daniel's resolve to indulge in this forbidden fruit was emboldened by exceeded expectations.\n\nHer lips were sweeter, softer, than he'd imagined when he'd watched her on the banks of the pond. \n\nDaniel had expected resistance. Hell, he'd expected a lighting bolt to strike him down where he stood. Neither came; his moment of abandon stretched into an eternity as he wrapped his arms around Lula's waist, pulling her body closer to his own\u2014he needed to be closer. \n\nHe needed to be inside her. \n\nDaniel could not imagine it humanly possible to be as close to her as his body required. Not even making love to her would satisfy this need, even though his intentions were naked and evident by his growing physical arousal. His body literally ached for hers\u2014consequences be damned. \n\nLula's body responded to Daniel's sensual onslaught in kind. Her initial confusion and denial evaporated as Daniel's mouth claimed hers with a fierceness that surpassed her own unclaimed desires for him. The intensity of his embrace deepened and Lu's lips parted to accept the welcome pressure of his tongue demanding entrance.\n\nThe kiss deepened still and Lula groaned in involuntary response to her aching need for more of him. Her groans sent Daniel over the edge with dizzying velocity. The last barrier\u2014his moral resolve\u2014shattered and his hands moved down, past the small of Lu's back and cupped the smooth, round, muscular perfection of her buttocks. \n\nHe pulled her closer still, crushing her groin against his own growing desire. His chest met contact with the stiffing peaks of her nipples beneath her thin cotton night shirt and he let loose a primal growl\u2014frustration from his unfulfilled need to consume her.\n\n\"Oh...God Lu, forgive me,\" Daniel whispered in a breathless plea even as he feathered her forehead and eye-lids with a soft trail of kisses\u2014each contact of his lips intending to savor the taste of her.\n\nPulling away to drink in her dark, honey-hued eyes, he saw the same need in her that tormented his own body. Given to reckless abandon, they were at risk of devouring each other with primal ferocity. \n\nWhere had this come from? Where was the girl he had once considered his sister? \n\nDaniel's voice of restraint reappeared, fighting to take root; but the animal instinct in him was stronger and screamed for release\u2014demanded acknowledgment and homage. The primeval part of him realized that she had always been his and she would always be his. He intended to claim her as his and end this struggle for both of them.\n\nLu was drunk with desire, senseless from passion. She'd always been a creature of instinct and impulse, even more so than this stalwart, stoic man who now captured her in an iron embrace. She had no desire to be released from his efforts at seduction.  \n\nDaniel was a man possessed. Lu was happy to be the object of that possession. As a reassurance of her desires, Lula wrapped her arms around Daniel's neck in silent insistence of his lips once more. \n\nAcknowledging Lula's encouragement, Daniel bent down and scooped her up in his arms. He turned and strode purposefully to Lu's bed, a mocking illusion of their childhood with its white chenille bedspread and stuffed animals. Lula continued her seduction by gently nuzzling his neck and pulling him into more hungry kisses. As an added torment, she began nipping gently at his lips before pressing her mouth against his and persuading him to grant her tongue access to him. They both groaned in resolve of the line that had been crossed and long forgotten. \n\nDaniel had not thought it possible to want Lu more than he had earlier that day, but here he stood, his stiffing cock pressed achingly against the fabric of his jeans. His eyes stung from unshed tears of frustration. With every taste of her lips, his manhood twitched and throbbed in painful anticipation of claiming what he now considered his. \n\nThe two held each other with their eyes as Daniel reluctantly loosened his grip on Lula in order to place her on the bed. His calloused hands captured her face and he wordlessly explored every line, fold, and crease that graced her features. His thumb traced the ridge of her nose and brushed against her cheek-bone\u2014more of an inheritance from her father's chiseled features than her mother's soft beauty. \n\nHer face\u2014a study in contrast\u2014was at once intoxicating in its beauty and sobering in its intensity. He'd never noticed the features in Lula that others had considered \"exotic.\" But now, in the dimmed bedroom light, he could clearly see that her enchantment reached beyond the lithe body that had captured his own earlier that day.\n\nHer full soft lips; her smooth cinnamon skin; her high regal cheek-bones; her honey-colored eyes flecked with red-gold\u2014all crowned by a tousled mane of dark brown and copper coils that framed her face. She was beautiful. She was his. \n\nDaniel continued his navigation of this new creature beneath his straddling form. His hands traveled from her face to her body, reverently committing every peak, valley, curve and smooth straight of flesh to memory. The lush globes of he'd imagined earlier to be topped with licorice gumdrops, tasted even sweeter as he took one nipple and then the other in his mouth, dampening her cotton shirt. \n\nLu's soft moans were pulled from her throat with every suckle, and she arched her back to meet the thirsty desires of the man tormenting her body with promises of pleasure that exceed anything she'd experienced at her own hand. She'd always known she'd save herself for this; but she'd never imagined that Daniel would be the one to whom she would give her body. She was desperate to feel him inside her\u2014her body was in physical pain for want of him.\n\n\"Danny,\" Lula whispered through hitched breaths, her eyes cloaked with unguarded desire, \"Danny...please...I can't take much more of this...I need...\"\n\nDaniel didn't let her finish before his hands slid down to her thighs, gripped the bottom of her nightshirt and pulled the material up, just past the her waist. He smiled at his good fortune\u2014she wore nothing underneath.\n\nLula sucked in another ragged breath of air before attempting to re-plead her case for release, \"Please...Danny...I ...I want.\" Daniel's possession of her body overtook her completely before she was able to fully vocalize her request.\n\nDaniel was mesmerized by the sight of her; his self-control was obliterated as his gaze fell upon her body and his hands reached beneath the fabric of her nightshirt, now scrunched up around her waist, to lovingly cup her breasts. He tore himself away from his trance long enough to steal a glance at Lu's face through heavy-lidded eyes, clouded with what Lula now recognized was passion\u2014not anger. The intensity of his stare silenced her pleas. Whatever desires she requested he would grant and exceed. \n\nSensing her understanding of his intentions, Daniel slipped back into his trance; he lowered his head and pressed his lips against the flesh between her breasts. Working his way down, he continued to pay homage to her body with a path of white-hot kisses traversing the length of her. He paused only briefly to dip his tongue into the shallow pool of her navel before nipping at the tender flesh just above the soft triangle of curls guarding her entrance. \n\nAs he worked, his thumbs continued to tease and pull at the already stiff peaks of her nipples, rolling the precious pebbles between his thumb and forefingers. His soft torture of her body took a toll on his own; he feared that the slightest touch of her naked flesh against his would push him over the precipice. But before he succumbed to his own needs, Daniel wanted to give Lu a taste of the pleasure he intended to visit upon her when he claim her body fully\u2014completely.\n\nWhatever Lu had had in mind regarding this encounter had suddenly taken an entirely different turn as she lifted her head to watch Daniel continue his meticulous worship of her body. Still clothed, she felt as though neither of them could be more revealed than they were now. Daniel, his head poised keenly above the entrance of the place only her hand had intimate knowledge of, paused only a moment before delving deeper into her. She afforded herself only the sound of her own ragged breathing, petrified to break the spell that held them captive.\n\nDaniel's mouth scorched her earth as he continued his assault on her senses and increased the ferocity of his ministrations. His tongue traced the delicate folds of her opening before plunging into her. Lu gasped in response and lifted her hips to accommodate his thirst. Daniel was grateful for her participation and rewarded her with another deeper thrust of his tongue before sliding up to the sensuous nub of her womanhood. There, he teased and prodded, paying excruciating attention to the hardening nipple of flesh between her folds, now coated with her juices. The taste was exquisite, as if every part of her body had been created to please every sense he possessed\u2014he savored her as a thirsty man would savor his first sip of water.\n\nAs Daniel's mouth assaulted her, Lu's body began to buck involuntarily rejecting the agony of ecstasies he visited upon her. With every thrust of his tongue and gentle nibble, Lu squeezed her eyes shut a little tighter. She bit her lip to stave off the screams growing in her chest. A familiar warming in the pit of her stomach began to grow in intensity as Daniel continued to sample her flavors and explore each delicate petal beneath her mantel. She rode his tongue, clinging to a thin thread of sanity by gripping handfuls of his thick coal-black hair, now damp from the perspiration of his efforts and the stifling summer heat.\n\n\"Lu...look at me\" Daniel's demanded in a soft drawl as he looked up from his feast, the silver in his eyes betraying how lost in her he'd become.\n\n\"Baby...look at me. I want you to watch me taste you,\" he urged further, his voice was thick with lust, \"I want you to see how good you taste...how sweet...how much I...\" he trailed off without finishing his demands. If words existed that described the raw emotions now raging through his body and tormenting his aching need, Daniel was want to find them. \n\nAt a lost for any verbal expression of his wants, Daniel improvised, telegraphing his intentions by torturing her slit with his hungry tongue and greedily devouring her juices as quickly as she produced them. Lu mewled in response, painfully twisting the handfuls of his hair still in her grasp. The pleasure he was giving her teetered close to the brink of pain and she feared the unknown depths of ecstasy facing her as Daniel's ruthless assault threatened to push her past any boundaries of pleasure she'd ever given herself.",
        "Lu blinked back tears as she gazed down at this strange new lover, \"Danny...Oh God...I'm going to...shit... I'm coming,\" she managed to hiss through clenched teeth, the sound of her own voice alien and frightening. Indeed, she was frightened of this force of nature possessing the two of them. \n\nImpossibly, a part of her wanted this to stop, so convinced she was that she could not possibly survive the wave poised to crash down on her. Involuntarily, her body undertook a belated struggle to put the genie back in its bottle. She'd not known she'd had this tempest bottled up inside her. She'd never imagined Daniel was capable of releasing it. \n\nHis attentions were fearless, wanton and reckless. His hands deftly working her body, sliding down to her hips to hold his prize captive. He would finish. \n\nShe was afraid of what would happen if he was allowed to finish.\n\nAs if sensing her struggle, Daniel let his hands slip down between the hot flesh of Lu's dampened thighs and to the edges of her clit, now dripping with her honey. With one hand he used his fingers to gently spread her open, revealing the glistening soft pink flesh of her petals crowned with contrasting rims of warm brown. His mouth feasted anew, relishing in the earthy scent of her. With his other hand, Daniel inserted one finger and then a second into her, gently warning her that her resistance was too little, too late. \n\nLu rewarded his efforts by rhythmically matching each thrust of his fingers with a thrust of her own hips. Daniel's cock, now a throbbing mass of nerve-endings screaming for her warmth and his release, twitched in defiant protest of his neglect\u2014yearning to replace the fingers now manipulating her body with the deftness of a virtuoso. His needs would have to wait.\n\nHe would not allow her to rob him of the heart-stopping vision of her succumbing to this pleasure. He had been left dumb-struck this afternoon and he selfishly wanted to be the cause of the pleasure that gave rise to this vision. He wanted his hands to be the hands that made her writhe in pleasure like a marionette on invisible strings. He wanted his mouth to be the thief that snatched the screams of ecstasy from her throat. He would not be disappointed. \n\nThe inevitable wave came crashing down on Lu as her body gave up one last Herculean jolt before surrendering to him. Her back arched gracefully, overtaken by an orgasmic ecstasy she'd never known was possible. She blinked back a fresh wave of tears and opened her mouth in a soundless scream.\n\nMercilessly, Daniel refused to release her\u2014opting instead to bury his face deeper between her thighs and devour the fruits of his labor before crawling back up the length of her and collapsing on top of Lu's spent form, now slick from exertion. For a moment, they lay there in silence, shocked by the actions of the two strangers that had taken possession of their bodies. \n\nIt was the sound of Mamma Corning's voice that jolted them out of their reverie.\n\n\"Lula....Daniel? What in God's name is all that racket? You two fighting again?\" the irritation evident in the elder Corning's voice.\n\nThe floorboards beneath her bare feet creaked in protest with each step she took towards her daughter's bedroom. By the sound of it, she was only three doors away from Lu's bedroom and would be upon them in a matter of seconds. \n\nReality, with its icy sobriety, had returned. "
    ],
    "authorname": "Frinkles",
    "tags": [
        "interracial drama",
        "world war ii",
        "south",
        "interracial romance",
        "historical",
        "interracial historical"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/homecoming-ch-03-2"
}