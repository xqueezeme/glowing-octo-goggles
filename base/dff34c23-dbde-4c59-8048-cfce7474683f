{
    "title": "Getting Over Edie Ch. 04",
    "pages": [
        "Author's Note: Well here it is! Thanks a million times for your patience. Life's been a jumble but I'm slowly sorting it out and getting back to what really matters. So here's Number 4. Happy Reading. Five is on the way. ~n4m. \n\n********\n\nIt sucks to start your life over. Whenever a relationship ends, it seems we finally notice just how much we alter ourselves and aspects of our lives to suit the needs of our partners. When I was dating, I was constantly aware of things: not leaving the toilet seat up or remembering to put my dirty underwear in the hamper instead of leaving it on the floor. \n\nDating is an endless series of dates to remember like anniversaries and birthdays, and promises to keep. A good friend once told me that being in a relationship is a full-time job, and it's completely true. There's a lot of hard work that goes into dating in order to receive a payoff, be it marriage, kids, or whatever.\n\nIf dating is a full-time job, then I guess I'm back to the application process. I am excited about the process of cleaning up my life. I feel like I've been in a funk for so long I've forgotten how it feels to just let shit go and relax. \n\nSure, I still think about E. That's not going to change for a while. But there isn't that longing, aching feeling in the pit of my stomach whenever I think about not being with her. It's weird; whenever heartbreak happens, people always reassure you that the pain will eventually stop. \n\nThat's exactly what you don't want to hear when you're in the thick of things. Most of the time that advice was dispensed when I didn't want to hear it. And I thought it was complete bullshit...until it wasn't. For some people it's gradual; the pain ebbs away slowly, a little piece disappearing daily. For me, it was a little different. I can't explain it; it just happened. \n\nI woke up one morning and...nothing. No pain. It was like the burden of my breakup was finally lifted off my shoulders. It was oddly relieving\u2014and kind of itchy. \n\nIt's all a part of the cleansing process, the art of removing unwanted and toxic elements from my life. Alcohol was the first part, next came the cleansing purge, and then the physical improvement followed soon after. \n\nMaybe it's the lovely weather, but I'm feeling brand new. Waking up and going about my day doesn't feel like a herculean task. I'm hoping this good feeling will last. \n\n********\n\n\"Oh my gosh! I read your blog all the time. You are Grady Kade, right? The Go-To Guy?\"\n\n\"Yeah, that's me\" Grady replied. He sipped on his iced pomegranate green tea and eyed the perky brunette woman hovering above him. \n\nShe smiled before sliding into the chair across from him. \"Oh my gosh, I knew it! I was talking to my friend Christine over there and I said 'that has to be him!' Can I just say that your picture does not do you justice? You are so hot in person!\" \n\nShe giggled before covering her mouth. \"Oh my gosh I can't believe I said that. Christine tells me all the time to think before I open my mouth.\" She turned to her left. \"Hey Christine!\" she shouted brightly. \"It IS him!\" \n\nAlthough Grady cringed at her intrusiveness he couldn't help but smile at her bubbly infectiousness. \"Well, it's nice to meet you...\"\n\nThe brunette's hazel eyes widened. \"Oh my gosh, I totally forgot to introduce myself. My name is Brea. Brea McEntire. I've read all of your writing.\"\n\n\"Uh, well thanks Brea. And it is nice to meet you, but I'm actually kind of meeting someone and they should be here soon...\"\n\n\"Oh no, I've imposed. Oh my gosh I'm so sorry. Christine says I have a habit of butting in where I don't belong.\" She jabbed a thumb in the direction of another brunette who was throwing Grady a pitying look and trying to bring her overly nosey friend back to their table. \n\nGrady shrugged. \"It's cool. Nice to meet you Brea.\"\n\nBrea giggled once more. \"You are just so awesome in person. I can't wait to tell everyone I actually met you. My boyfriend hates how much I talk about you. He says that you're gay and the E in your story is really a dude. But he's an idiot.\" \n\n\"Sounds like it.\" \n\nShe giggled once more, and Grady smiled as well. \n\n\"Alright I've kept you long enough. It was nice to meet you and good luck with the rest of the article. You are so brave, you know. And any girl would be lucky to have you.\" She shot him a huge smile before returning to her table, her friend Christine shooting her a disapproving look. \n\nWith a chuckle Grady returned to his drink. Life was...well it was vastly improving. Starting a blog was a great idea. Within a month, he'd already had over 2 million hits and at least 100,000 followers. It was a weird thing, to be so linked in with an eager audience. People were actually interested in what he had to say. \n\nPeople were curious about his activities, and Nell encouraged his indulgence. He found himself being recognized in the most mundane of places, like coffee shops and even the men's locker room at his gym. \n\nIt was definitely an awkward moment, having a grown man nearly nude and in tears, talking about how his fianc\u00e9e left him at the altar and how Grady's situation helped him get through his own. \n\nIt was an ordeal, but it made him realize just how important his story was not only to his recovery, but to other people as well. What a refreshing, yet absolutely daunting notion. He scribbled a few sentences in his notebook. \n\n\"Writing the next great American blog entry?\" \n\nGrady looked up to see Tony grinning down at him. \n\n\"Something like that,\" he said with a smile. \"Hey man. You're late.\" \n\nTony nodded sheepishly as he took the seat opposite Grady. \"Yeah, sorry about that.\"\n\n\"It's all good man. So what have you been up to? Feel like it's been a minute since I've seen you.\" \n\n\"Since the night at the Ballroom. The Love in Chains gig.\" Tony shook off his black motorcycle jacket and red scarf. \n\nGrady nodded. \"You know I'm not mad at you for that, right?\" \n\n\"Dude, I know.\" \n\n\"Good. I was hoping that wasn't the reason why you were MIA.\" \n\nTony shook his head. \"Not at all. I don't know man. I figured with all that shit, with seeing Edie that night you just wanted a break from everything. I thought you needed some space.\" \n\n\"I appreciate that, dude. But I think I've had enough of taking a break. Besides, it's been nearly five weeks since the Love in Chains show. Don't you think that was enough time? Why the hell would you leave me alone with Benny for so long?\"\n\nTony laughed. \"Alright, alright. I was a total asshole. But to be honest I've been really busy with work. Been doing studio sessions with Love in Chains. Figured you didn't want to be around all that.\" \n\n\"Was...was she there?\" \n\nTony's brown eyes studied his best friend. \"Do you really want to know the answer to that?\" Grady pondered the question for a moment before shaking his head. \"No, I guess not.\" He took a generous sip of tea. \"How's the group?\" \n\n\"Not bad. There's raw talent, especially in Dax and Stevie. Dylan's a major fucking tool. Pretentious little shit.\" They both laughed. \"So I see you've made some changes. Not covered in a cloud of cigarette smoke anymore.\" \n\nGrady nodded. He was grateful that Tony didn't go into any more detail about Dylan. \"Yeah, I quit smoking again. For good this time.\" \n\n\"Good for you man.\" He studied Grady once more. \n\n\"You seem different.\" \n\n\"Bad different?\" \n\nTony shook his head. \"Nah. It's definitely good. You're not old Grady, but you're definitely not this Grady we've been stuck with for a while.\" \n\n\"I suppose there was a compliment hidden in there somewhere.\" \n\n\"You know what I mean. There's something positive in you, man. I'm digging it. I suppose it has to do with your newfound popularity.\" \n\n\"Yeah, I just had to deal with some of my fan club earlier. It's nice; a little weird, but nice.\"\n\n\"You really are helping people, you know that.\" \n\nTony shredded a piece of napkin between his fingers, his kind eyes studying the changed man sitting across from him.\n\nGrady nodded. \"I know. This is definitely bigger than me now.\"\n\n\"Kind of a daunting thought, isn't it?\" \n\n\"I try not to think about it too much. I just write, man. Just live and write.\" \n\n\"Dude...who are you and what happened to the automaton that was my best friend?\" \n\nThey both laughed. \"I'm still here man,\" Grady responded. \"I promise. I'm just trying new shit. What's that saying\u2014'Crazy is doing the same thing over and over again and expecting different results.' I think my stay in Crazytown has been long over. It's time for a change.\" \n\n\"Preach it sister!\" Tony exclaimed. He shot Grady a sheepish look. \"Sorry. I've been watching those damn Madea movies lately. Gemma really likes them.\" \n\n\"Gemma, huh?\" Grady cocked his eyebrow. \n\nTony rolled his eyes. \"Yes Gemma. We worked stuff out; at least we're working on it.\" He paused for a brief moment as if he were unsure how to continue; Grady could see that whatever was on his mind was bound to be really heavy. \"She's got a kid, dude.\" \n\nThat caught Grady off-guard. \"Whoa.\"\n\n\"Yeah...that was my initial reaction when she told me. She was so standoffish because she was afraid, I guess. From what I gathered, things didn't end so well with the father. She's definitely been hurt before. \"\n\n\"Shit, haven't we all? Join the club.\" \n\nTony chuckled. \"True story. She was also concerned because of my job that I wouldn't have time for her. It was some sort of preemptive strike, cutting ties before I could. It was bullshit, and I told her so. I like her, man. A lot. So I want to at least give it a go.\" \n\n\"Wow,\" Grady said. \"That's some real talk right there. Never really heard that from you before, at least about a girl.\" \n\nTony shrugged, a small smile danced playfully on his lips. \"Yeah well I've never had these feelings about a girl before. It's nice, knowing someone else gives a damn about you.\" He glanced up at his best friend. \"You good, man?\" \n\nGrady nodded as he drained the rest of his tea. \"I'm fine. It's not going to kill me, listening to other people's stories. I'm happy for you, and Gemma. You're right; there's nothing like that feeling. If nothing else goes right, you'll always remember the way you felt in the beginning.\" He smiled to himself as he allowed a brief trip down memory lane. \n\nWhile he didn't want to dwell too much on Edie and the past, it was nice to recall the earlier times. It was all he allowed himself to do. Just a brief glimpse; nothing more. For the most part he was determined to keep looking forward. \n\nTony gazed at his friend with something akin to admiration. \"I'm proud of you man.\"\n\n\"Ah, c'mon man. Let's not make this into a Hallmark moment.\" He tossed a stray sugar packet at Tony's head, which he swiftly ducked. \"I'm not trying to hug it out or anything. This is strictly a catch-up session.\" \n\n\"Speaking of catching up, I'm having a party at my place tomorrow. You should come. Fair warning\u2014some of the artists I work with are attending. There's a chance she could be there.\" His look was wary as he eyed him from across the table. \n\n\"It's all good, dude. I'm a big boy. I can handle it.\" Grady checked his watch. \"Well, my lunch break is almost over. I should probably get back to work. Thanks for meeting me.\" \n\nTony shrugged. \"No problem. And tell Benny to bring his ass tomorrow. I know for a fact he ain't doing shit.\" \n\n\"Yeah about that...what the hell is going on with him?\"\n\n\"You haven't seen him lately?\" Tony asked. \n\n\"Well we work out four days a week together but he's been ultra-secretive lately. I know something's going on and I keep meaning to figure out what it is but I've been so busy with shit I haven't had the time to play detective.\" \n\n\"Yeah...it's been bugging the hell out of me. He's up to something.\" \n\nGrady nodded. \"Most definitely. But whatever it is, we'll figure it out soon enough. You know his bitch ass could never keep a secret.\" \n\nTony chuckled his agreement. \"True story. Well I'll let you get back to work. I'll see you tomorrow at ten, okay?\"\n\nThe two men rose simultaneously. Tony glanced at Grady, sizing him up. \"Man, you have been working out with Benny. You look good.\" \n\n\"Why Mr. Cho, are you trying to seduce me?\" \n\n\"Jesus, now I definitely know you've been hanging out with Benny too long\" Tony said with a grin. \n\n\"I'm just saying all your hard work is paying off.\" \n\nGrady smiled. \"Thanks man. I'm feeling really good.\" And it was true. He was down thirty-five pounds and was feeling like a champ. With Benny's guidance and pushy, no-nonsense attitude in the gym he was massing and cutting like a pro. He wanted to keep his bulk and muscle but lose the flab and Benny was just the trainer to help him out. \n\nBy cutting out cigarettes and eating better, he was able to shape up his midsection, which had previously resembled a spare tire. He looked good, and felt even better. \n\nTony gave him a quick fist bump as they exited the coffee shop. \"Tomorrow night at ten\" he reminded him. \n\nGrady nodded. \"Got it dude. See you then.\"\n\n\"Later, big guy.\" Tony signaled for a taxi as Grady started off for his office building. Grady put on his headphones while he walked, letting the sounds of Frank Ocean guide him the few blocks back to his job. His head bobbed along to the music, his steps falling into the beat of the song. \n\nHe felt good, truly; the weather was steadily improving. The bitter cold of the January and February months were slowly fading away to pleasant coolness. It was a sure sign that spring was fast approaching. \n\nShoving his hands deeper into the pockets of his grey military jacket, he quickened his pace. His lunch ran a little longer than he intended. He had a staff meeting in about twenty minutes and his lateness would surely earn him a disapproving glare from Nell. \n\nNo matter how impressed she was with his current success he was sure it wouldn't save him from a good bitching out by his hard-nosed boss. \n\nTwo and a half songs later he reached his office. As he reached for the glass double doors he noticed a figure standing inside the lobby. \"Arden?\" he questioned, making a beeline for her. \n\nArden looked up from her cell phone. Her wide brown eyes lit up at the sight of him. \"Grady, hey!\" She shoved her phone into a large yellow purse on her arm before walking towards him. \n\n\"Hey there,\" he said in response. \"What are you doing here?\" \n\nShe slung her purse over her shoulder. \"My friend Lindsay works in the building. I'm meeting her for lunch.\" \n\n\"Oh, cool.\" For a brief moment he had a wild thought she was here to see him. He wondered where that came from. \n\n\"Yeah. It's funny. I've been here maybe four or five times and I never realized this was the same building that EDGE magazine was in.\" \n\n\"Small world, isn't it?\" \n\nShe nodded. \"Indeed. You look really good,\" she said. Grady glanced down at his typical work outfit: casual black slacks and a light blue collared shirt underneath a thin navy blue sweater. \n\n\"Thanks. Those gym sessions with Benny are really paying off.\"\n\n\"Definitely.\" \n\nHe grinned. He'd be lying if he said he wasn't happy to see her. Since that time in the gym, he'd run into her a few times around the city but they were both usually rushing off somewhere that their interactions were reduced to a quick but friendly greeting and a casual wave. \n\nGrady had to admit, she definitely grew on him. He was interested in finding out more about her, but didn't exactly know how to approach things. She was dressed up, a change from her normal workout gear and dance clothes. Dark wash jeans tucked into tall black stiletto boots, and a yellow tunic under a black leather jacket. \n\nHer dark chestnut hair was partially hidden under a slouchy knit beret colored a shockingly bright shade of yellow. She certainly enjoyed her sunny colors. \n\nHe found himself really studying her, and that kind of alarmed him. He needed to make a fast exit before he opened his mouth and said something unbelievably stupid. \"Well, I suppose I'd better get back to work\" he said. \n\nArden grinned. \"That's right. The minions of the Grady Kade fan club are expecting some stellar piece of profound-ness and we don't want to be disappointed.\"\n\nHe cocked an eyebrow in surprise. \"We? Are you telling me you're a fan of my column?\" \n\n\"I may or may not check your blog every day for updates,\" she replied, trying to keep her voice nonchalant. She shrugged casually. \"Maybe I stalk you online. No big deal.\"\n\nHis smile was slow and easy. \"Should I be worried?\"\n\n\"I don't know. It's not like I know where you live. Or do I?\" she added mysteriously. They both laughed. Grady was going to be super late for his meeting but for some reason he didn't mind. \"Hey, so I have to ask. Are you going to Tony's party tomorrow night?\" \n\nArden nodded, flipping her dark hair over her shoulder. \"Yeah, I'll be there. Love in Chains has to make an appearance and Stevie wants me to tag along so she doesn't strangle Dylan and toss him out a window or something. I'll probably end up playing referee all fucking night.\" Her gaze met his. \"Will you be there?\" \n\n\"I was thinking about it.\"\n\n\"Well you should go. I'll be totally bored and probably ready to pull my hair out in frustration. I'll need someone to take out my misplaced aggression on.\" \n\n\"I take it that'll be me?\" \n\nShe let out a small chuckle. \"What can I say? You're my favorite punching bag.\" Their eyes met once more and there was an unmistakable sizzle. \n\nWhoa, Grady thought. Where the hell did that come from?\n\nHe cleared his throat. \"I, uh, should probably get going. I'm already late as shit for a staff meeting. My editor is going to kill me. I guess I'll see you tomorrow?\"\n\nShe gave him a short nod. \"Sounds like a plan.\" She reached out, her fingers squeezing his biceps lightly. \"I meant what I said. You do look really good.\" She shot him a small smile and turned, heading out the glass doors, leaving Grady positively puzzled. \n\nAs he rode the elevator up to EDGE's floor, his mind kept coming back to the first time they met at Silver Gym. Benny was sure she had a crush on him, but Grady was too focused on not passing out from exhaustion to bother with Benny and his bullshit. \n\nBut now, after so many chance encounters and what he could only describe as \"THE LOOK\" he was starting to suspect that Benny wasn't so completely full of shit after all. \n\nHe should have been shocked; after all, this was the same woman who was extremely irritating, to the point where strangulation was a strong, considerable option. They weren't very friendly to each other, but he could not deny the slight shift in their behavior. \n\nThat night at Spagnoli's she was an attentive ear and the kick in the ass he needed to shift into gear. He thought they forged a somewhat pleasant acquaintance. Was it really possible she was feeling him? \n\nThe elevator dinged loudly, signaling his stop. Grady tried to push thoughts of Arden from his mind and shift his focus to the task at hand. He was nearly ten minutes late to the staff meeting. Nell was going to kill him. \n\n********\n\nGrady was running late...as usual. The digital clock on his cable box blinked 10:45 at him in an almost snobbish manner, chiding him for his lack of time management skills. It wasn't his fault; he was swamped with work stuff, editing his new blog entry, drawing the outline for his article, not to mention paying penance to Nell for being late to yesterday's meeting. \n\nAfter work, he headed to the gym for his normal session and by the time he finally got home and into the shower it was already after ten. \n\nHe justified his lateness, reasoning that no one showed up to a party on time. And since it was just Tony, who was well aware of his downfall, it wasn't that big of a deal. He stood in front of his closet, trying to decide what to wear. Normally clothes weren't a big deal; while he took care in his appearance, he wasn't a diva. ",
        "But tonight was different. \n\nHE was different. It was a debut of sorts, and a small part of him wasn't ashamed to admit that seeing Edie seeing him this way was going to be a bit of a thrill. \n\nBlindly, he reached into the recesses of his closet, pulling out the closest pair of jeans. He paired them with a navy and green striped v-neck shirt before pulling on a simple black blazer. Grady shook out his curls. They were getting out of control. His hair was erupting all over his head. It was almost time for a haircut. \n\nFifteen minutes later he was fully dressed and heading out the door, game face included. No drama tonight, he silently reminded himself as he hailed a cab. As he slid inside, his phone chirped with a text message from Tony. \"Where the hell are you?\" \n\nHe quickly typed back. \"On my way now. Got caught up, as usual. Be there soon.\"\n\nGrady sat back, his gaze idly watching the lights of the city stream by. His mind was nowhere in particular, thoughts of mundane proportions floating through his head. He tried to keep his mind neutral to avoid an inevitable slide to what would occur tonight. Would she be there? How would she look? Was he supposed to care? \n\nNo, he wasn't going to backslide into neurotic territory. He'd been doing well for the past month. Edie and his obsessive thought process were not going to ruin five weeks of hard work. \n\nGrady drew in a slow, steady breath before exhaling deeply. Everything was going to be okay. \n\nThis was all just another test. \n\nLess than ten minutes later he arrived at Tony's apartment. He quickly paid the cabbie and scrambled from the car. \"Hey there Tyson,\" he said, greeting Tony's doorman. The older man smiled and tipped his hat to Grady as he held open the lobby door. \"Good evening, Grady. Loved last week's blog.\" \n\nGrady grinned. \"Tyson I didn't know you read my stuff.\" \n\nTyson smiled, his coal black eyes shining brightly in his tanned face. \"Just started checking it out last week. My granddaughter is a huge fan. She's got a bit of a crush on you.\" \n\n\"Well tell her I said hello, then.\" He gave Tyson a playful salute before stepping inside the lobby. Grady tapped his foot impatiently while waiting for the elevator; he wasn't sure why he was so jittery, but just chalked it up to nerves. \n\nHe was kind of excited for people to see how much he changed. He looked good, and he felt even better. It'd been awhile since he could say something like that. \n\nGrady stepped out and headed towards Tony's apartment. He could hear the music thumping through the walls. Before he could knock, the door to the apartment flew open and he collided with Benny. \"Whoa there big guy,\" Benny said. \n\n\"Whoa yourself,\" Grady replied. \"Where the hell are you heading to in such a rush?\" \n\n\"Uh...nowhere\" Benny said quickly, closing the front door behind him. Grady noticed the guilty look on his face. Benny Silver was clearly up to something. \"Gotta get some cigarettes. I'll, uh, be right back.\" \n\nHe pushed past, but not before Grady noticed the reddish mark on his neck. It almost looked like\u2014 \n\n\"Is that a hickey?\" \n\nBenny let out a nervously high chuckle. \"What? Man, come on...what? Man...\" \n\nGrady shook his head. \"Dude you are the worst fucking liar ever. You're going to have to eventually tell us what you're doing. Or should I say who.\" \n\nBenny rolled his eyes. \"You're so fucking clever. Glad to see your shitty sense of humor has returned.\"\n\n\"Whatever. Don't turn this around on me.\" Grady tilted in head in the direction of Tony's apartment. \"Wait a minute. Is she in there?\"\n\n\"Man, what are you...man shut up.\" He punched Grady in the arm. \n\nGrady had never seen his friend look so ruffled. Benny was normally the one who talked shit, the guy who always had a damn joke at someone else's expense. But here he was, looking like a kid whose mother just caught him with his hand in the cookie jar. \"She IS in there. Who is it?\"\n\n\"Listen, you need to stop worrying about me. I'd be more concerned about what's behind that door for you.\"\n\n\"What are talking about?\" \n\nBenny glanced at Grady, his normal swagger returning. \"There's a hot ass chick in there asking about you every five minutes,\" he said with a smirk. \"And no, it's not who you think. Now I'm gonna go get cigarettes. Be back in a bit.\" \n\n\"Yeah yeah yeah. Hurry back. I'm sure your girlfriend is just dying to give you another hickey, because apparently we've time traveled back to high school where hickeys are in fashion.\" \n\n\"Asshole. We'll see if you're laughing in an hour or so.\" He gave Grady the finger as he headed down the hallway. \n\nRolling his eyes, Grady headed inside. The place was crowded with Tony's coworkers and various bands represented on the label. Grady glanced around the spacious living room, pretending as if he wasn't searching for her. \n\nShaking those thoughts from her mind, he instead turned his focus to locating Tony. Walking through groups of people, he finally spotted him chatting with a tall blonde woman with a haircut that could only be described as 'mullet couture'. \n\n\"Hey man,\" Tony said with a wave. \"Glad to see you finally showed up.\"\n\n\"You know me, always on Princess Time.\" \n\nTony laughed. \"How could I forget? Grady this is Luna Phelps. She's in charge of marketing at Roqued Records. Luna, this is my friend Grady Kade.\"\n\nThe blonde extended her hand and Grady shook it firmly. \"Nice to meet you.\" \n\n\"Grady writes for EDGE magazine,\" Tony added. Luna shot him a look. \"The women's magazine?\"\n\n\"The very same.\" \n\nShe glanced at him before shrugging. \"Pity. You were kind of cute, in that whitebread kind of way.\" \n\n\"Excuse me?\" \n\nTony tried to keep from smiling. \"Luna, he isn't gay.\"\n\n\"You know, this is the second time I've been called gay this week. Not sure if I'm offended or flattered by it at this point.\" \n\nLuna shot him a sheepish grin, her bright red lips parting to reveal blindingly white teeth. \n\n\"Sorry about that. I just assumed from the hair and the clothes that you were a friend of Dorothy.\" \n\n\"It's cool. And I'm very much straight. I just write 'The Go-To Guy' column.\"\n\n\"Oh really? My one friend is completely obsessed with your blog. You're definitely not what I envisioned as The Go-To Guy.\" \n\n\"What did you have in mind?\" \n\nLuna shrugged. \"To be honest, I didn't think you were really a guy at all. Half the time all those 'male perspectives' are written by women.\"\n\nGrady nodded. \"Yeah I know what you mean. But no, it's me. I promise.\" \n\nLuna grinned. She really was attractive, save for that ridiculous haircut. \"I'll have to let her know.\" She winked slyly at Grady before sauntering off. \n\nTony shook his head. \"Your fan club is random and strange.\"\n\n\"I don't even know what to say, man. I mean my column was always pretty popular but now its reachability is spreading.\" \n\n\"Isn't that a good thing?\" Tony asked. \n\n\"I suppose,\" Grady said with a shrug. \"Oh, I completely forgot; as I was coming in, I ran into Benny...\" \n\n\"Wait, Benny's here?\" Tony interrupted. \"I didn't even know.\" He craned his neck, glancing around at the partygoers.\n\n\"Well he went out for cigs.\"\n\nTony raised a dark eyebrow in surprise. \"Benny doesn't even smoke.\" \n\nGrady nodded, a hint of amusement in his eyes. \"I know. But the best part: ol' dude's got a hickey the size of Michigan on his neck.\"\n\n\"What?\" Tony sputtered, nearly choking on his beer. \"A hickey? What is he, twelve?\"\n\n\"That's what I said too!\" Grady replied, his grin wide. \"He practically ran down the hallway when I tried to question him about it, but not before he said to watch out. Apparently there's some hot girl in here who's been asking about me.\"\n\n\"I wonder who this chick is. And why the hell didn't announce he was here, that douche.\"\n\n\"I don't know. Gia isn't lurking around here, is she?\"\n\nTony grinned. \"Not as far as I can tell. And as for the girl asking about you, I can only guess who that is.\" His grin was smug and completely know-it-all. Grady was half-tempted to knock his beer out of his hand. \n\n\"Well who is it?\" His heart began to thump loudly. \"It isn't...?\" \n\nTony shook his head. \"I thought you weren't going there tonight?\"\n\nGrady dodged that question with a wave of his hand. \"I'm just asking, is all. Who is it?\"\n\n\"Oh! You're finally here,\" a voice said behind him. Grady turned, steeling himself for whoever it was. \n\n\"Hey Arden,\" he said. His shoulder relaxed and he smiled, genuinely happy to see her. \n\nArden grinned. \"Tony told me all about your Princess Time. It's nice to hear that there are some men who take longer to get ready than most women.\" \n\n\"I like to look my best,\" he said. She rolled her eyes, but continued to smile. \n\n\"Well you look alright.\"\n\n\"Just alright?\" \n\n\"Fishing for compliments? What am I, your personal confidence booster?\" \n\n\"You, be nice? What is this, Opposite World?\" Grady glanced around the room in mock confusion.\n\nShe giggled. \"Shut up. I can be nice, you asshole.\"\n\n\"You do realize that statement was a perfect example of how not nice you really are.\" \n\n\"The only thing I realize is that I'm awesome and you sir, are just jealous of my boogie.\" \n\nGrady glanced out of the corner of his eye at Tony, who was watching the exchange between the two of them, a curious expression on his face. \n\n\"In the midst of stroking your own ginormous ego, you didn't even tell me how nice I look.\"\n\nHe gave her the once over, taking in her violet cocktail dress. It was short and strapless, cinching tightly at her bust and waist. Black tulle fanned out on the bottom, giving the dress an almost tutu-like appearance. \n\nHer gold accessories and shoes complimented her rich, dark chocolate skin perfectly. Her hair was pinned by a large gold butterfly, sweeping big, thick curls to the side, leaving her right earlobe bare. \n\nYes, she looked good, fucking amazing actually. \n\nBut he wasn't about to tell her that bit of information. \n\n\"Ehh, you look okay.\" Grady could have sworn he saw a flicker of disappointment in her wide eyes before she snorted and waved her hand at his comment. \n\n\"Whatever. I look awesome.\" She turned her attention to Tony. \"Thanks again for inviting me.\" \n\nTony grinned. \"No problem. Any friend of Gemma's is a friend of mine. Besides, I know someone else who'd be disappointed if he didn't see you.\" He elbowed Grady in the ribs for emphasis. \"Right buddy?\"\n\nGrady shot him the look of death, but Tony continued to smile as if he didn't see. \"Well anyway, I should go mingle and pretend not to notice the abundance of people tramping through my home. I'll check back later to make sure there isn't bloodshed on my brand new carpet. You two play nice.\" \n\nGrady shot a scowling look at Tony's back before turning his gaze to Arden. \"Do you want a drink?\"\n\nShe shook her head. \"No thanks. I've got to stay booze-free tonight. I have a performance coming up next week.\" \n\n\"Performance? Really?\"\n\nArden nodded. \"Yeah. At the end of every session we do a showcase of the best pieces we worked on throughout the class.\"\n\n\"That's kind of cool. So you're going to be dancing?\"\n\n\"Thanks, and yes. My class will be doing two choreographed numbers and I'll be performing a piece of my own.\" She was hesitant for a moment before glancing up at him. \"Would you like to come?\"\n\nNow that caught him off guard. \"Oh, I...\"\n\n\"Shit, never mind. It's so last minute. You probably have something to do.\" \n\n\"No, I don't. I'd love to come.\"\n\nHer smile was so genuine, Grady was actually glad he said yes. \"That's awesome. I don't care what they say about you, you're alright Grady Kade.\" \n\n\"Don't let that secret get out. It'll ruin my tough guy reputation.\" \n\n\"I think the Shirley Temple hair you're rocking is killing that particular reputation.\" \n\nGrady ran his fingers through his hair. \"Hey don't knock the curls, woman. They are awesome.\" \n\n\"For a six year old. If you start tap-dancing and singing 'The Good Ship Lollipop' I might crack a rib from laughing.\" \n\nHe grinned. \"I've actually been thinking about cutting it.\" \n\n\"Really now? I think it'd be weird to see you with short hair.\"\n\n\"Weird?\"\n\nArden shrugged. \"Not a bad weird by any means. Just different.\" \n\n\"Well I'll take that under advisement. So, how's the babysitting going?\"\n\n\"So far so good. It's been pretty easy, seeing as how Dylan isn't here yet and I haven't seen Stevie for a while now.\"\n\nA wild thought suddenly came to him. \"Hmm.\"\n\n\"What?\"\n\n\"I just had this crazy moment of clarity. You just said Stevie's been MIA for a while now, right? Well apparently Tony had no idea that Benny was even here. I ran into him when I showed up and he had a giant ass hickey on his neck.\" \n\nArden shot him a look. \"Wait...you don't think.\" She paused before scoffing. \"No. No, I don't believe that. Stevie would never...\"\n\n\"Ahh but they already have, remember? The night we first met.\"\n\nShe was silent for a minute, letting his words sink in. \"That little skank\" she said, shaking her head. \n\n\"Which one\" Grady joked. \n\nArden rolled her eyes. \"Very funny.\"\n\nHe jostled her. \"Come on, Arden. You have to admit it's pretty damn hilarious. I mean, they're complete opposites.\"\n\n\"It's just so...random, I don't know.\" She was quiet for a minute, her mind seemingly lost in thought. \"You know now that you mention it, Stevie has been acting a little off. I thought it was shit to do with the band. It totally makes sense now.\" She made a face. \"Eww.\"\n\n\"I'm inclined to agree,\" Grady said. \n\n\"Stevie and that meathead...so weird\" she said with a shudder. \"But Tony and Gemma are freaking adorable.\" \n\nGrady nodded. \"Yeah they definitely are.\" His blue eyes scanned the room for Tony, spotting him chatting with a guy sporting serious ink on his arms. Gemma was at his side, her hand resting in the crook of his arm. \"I had no idea Gemma had a kid.\"\n\n\"Oh yeah. Milo. He's five years old and a total sweetheart. I'm actually glad she finally talked to Tony about him.\" \n\n\"Really?\"\n\n\"Yeah. Gemma's been in a really shitty situation Milo's dad is a little tough to deal with, and I think Tony's the right guy to remind her that good things can happen.\" Grady noticed the slight break in her voice. He also noticed that she wasn't meeting his gaze. \n\n\"Hey, are you alright?\" \n\nArden shook out her shoulders. \"Ahh, I'm good. Just feeling nostalgic, I suppose.\" \n\n\"Yeah, I know what you mean...\"\n\nShe paused for a moment before speaking. \"Were you...were you expecting Edie to be here?\" \n\n\"To be completely honest, I really don't know what I was expecting. I guess.\" He sighed. \"I don't know. Part of me wants to see her because I want her to see how I'm doing without her. The rest of me would rather avoid her for a lot longer.\"\n\n\"You know you don't need validation from her, right? You're doing a great job, Grady...\" She stopped herself. \"I'm sorry. I'm doing it again, overstepping.\" \n\n\"No, no, no\" he said quickly. \"You're fine. I just...I guess I'm just a little wound up. Maybe I am more affected by this situation than I realize.\" \n\n\"I think you're fine. Sometimes we hype shit up in our heads but in reality, things aren't always what they seem.\" She touched his arm, her fingertips lightly grazing the soft material of his blazer before reaching down to give his hand a slight squeeze.  \n\nGrady was sure it was more out of reassurance than flirting, but he couldn't help the shiver that ran down his spine. Despite his initial misgivings, he was now convinced that something was amiss. \n\nStevie sidled up to them, her eyes darting around the room. Grady tried to scan her discreetly, looking for hickeys but couldn't find any visible marks. He'd never really paid attention to her before, but she was actually kind of pretty; darkly gorgeous, to be exact. \n\nHer short black hair was styled in a feathery fauxhawk, short on the sides and long on top. She was dressed in black combat boots, dark skinny jeans, and a long, tight black tank top. \n\n\"Hey pumpkin,\" Arden said. \"Is everything okay?\" \n\nStevie rolled her eyes. \"You're not going to baby me all night, are you?\" \n\n\"No. You just look a little ruffled. Dylan giving you shit?\" \n\nStevie shook her head. \"He's not even here yet, thank fuck. Probably being held up by that plastic twat he calls a fuck buddy.\" She winced as Arden jabbed her in the ribs with her elbow, her head cocked in Grady's direction. \"Fuck, sorry dude. I forgot she was your ex.\" \n\nGrady shook his head, his corkscrew curls falling into his eyes. \"No it's cool. No need to censor yourself around me. I definitely know firsthand how Edie can be.\"\n\nStevie shrugged. \"Yeah well whatever the case, he isn't here yet and my nerves can finally be at rest. He's annoying the shit out of me; Dax couldn't care less, he's just about the music and getting this album together. Meanwhile I'm the one stuck with Dylan and his fucking ego.\"\n\nArden's gaze traveled beyond their little trio as Benny entered the main room, his eyes darting around as if looking for someone. She watched as he scanned the crowd before his gaze landed on Stevie. He grinned lasciviously and started over before he stopped suddenly when he noticed Arden watching him. \n\nShe smiled and shook her head as he stood still, trying to decide what to do. Arden turned back to Stevie. \"Don't be alarmed, but I think someone's looking for you.\" \n\n\"What are you talking about?\" Stevie asked. \n\n\"There's a guido standing about eight feet away, looking incredibly lost.\"\n\nGrady scanned the room. \"Benny's back?\" \n\nArden nodded. \"Yup. And it looks like he was going to come over until he saw us standing here.\"\n\n\"Why the fuck would he come over here?\" \n\nArden shot Stevie a knowing look. \"I have NO idea why he would come over. But the look he had on his face earlier, he seemed very determined to make out with someone, and I'm sure that person wasn't Grady.\"\n\nGrady stifled a chuckle as Stevie shot Arden a dirty look. \"What are you implying?\"\n\n\"I'm not implying anything,\" Arden replied, shrugging her shoulders nonchalantly. \"I'm just saying boy was looking all eager until he saw me standing over here.\"\n\nStevie rolled her eyes. \"Whatever. I'm gonna go to the bathroom. If Dylan shows up, let me know.\" She turned sharply on her heel and stalked off. \n\nBoth Grady and Arden watched as she walked past Benny, who waited a beat before following her out of the room.\n\nArden chuckled. \"Oh god I think you may be right. They are definitely doing something together.\"\n\n\"It's so weird; I've never seen Benny this ridiculous about a girl before. Normally he's the one who sits back and lets them come to him.\"\n\n\"Yeah, well maybe he actually likes someone this time.\" She glanced up at him. \"You think we should call them on it?\"\n\nGrady shook his head. \"Nah, let them have their fun. I don't want to bust their balls so early in the game.\"\n\n\"Maybe you're right. It's kind of nice to have a secret like that, I suppose.\"\n\n\"Like...secret lovers?\" \n\n\"Clandestine affairs, notes left in brick walls, lots of longing looks standing on cliffs overlooking frothy grey oceans....you know, Secret Lovers.\" She sang that last part, her voice cracking loudly.\n\nGrady smiled, shaking his head. \"Dude, you are so strange.\" \n\nArden smiled as well. \"You have no idea.\"\n\nThe next hour was spent schmoozing and boozing with the various and plentiful partygoers. Grady had to admit, he was having a pretty decent time. The music was great, the drinks were amazing, and Tony's industry friends were good company. \n\nEvery so often he would catch Arden's eye from across the room and they shared a small smile. Okay, there was definitely something there. She caught his eye again and made a funny face. He chuckled into his beer, sputtering slightly which made her giggle. \n\nGrady turned his focus back to the discussion he was having with a group of Tony's coworkers about books when he heard a loud noise across the room. ",
        "\"What the fuck, dude?\" The loud exclamation made both Arden and Grady look up. \n\nIt was Stevie, standing at the front entrance. \n\nShe looked positively pissed off. Arden caught his eye and nodded towards the door. Excusing himself, he joined with Arden as she made her way to Stevie, who was still fuming. \n\n\"Stevie what's wrong?\" \n\nStevie gestured towards the doorway, where Dylan was currently leaning awkwardly. He looked hammered. Stevie rolled her eyes in disgust. \n\n\"Come on man. Are you fucking kidding me right now? Look at you!\" \n\nDylan glanced at his bandmate, the drunken and drugged haze making it hard for him to concentrate. \"What is your problem?\" he asked, his voice gruff. \"Why are you yelling?\"\n\nStevie gritted her teeth. \"We're supposed to be mingling with these people. They're trying to promote our music, and here you are, hours late and fucked up beyond belief. What the fuck did you expect me to say?\" \n\nDylan waved her explanation away, before slipping his black Wayfarer sunglasses over his eyes. \n\nStevie looked ready to snatch him up by the scruff of his collar, but luckily Dax got there first. \"Chill girl,\" Dax said calmly, his light green eyes settling on Stevie. \"I got this.\" Ever the peacemaker, Dax shifted Dylan so that the bulk of his wiry frame was resting on him. \n\n\"I'll take him outside to get some air.\" He casually walked Dylan across the room, ignoring the curious stares of the party guests to the balcony on the opposite wall. \n\nStevie whipped around to face Arden, her dark features scrunched in a scowl. \"This is fucking bullshit. We're supposed to be making a good impression on these people and he's ass wasted.\"\n\n\"Pretty sure he's also coked out of his mind too,\" Arden said offhandedly. \n\n\"Not helping,\" Stevie said. \n\n\"Come on pumpkin. I'm sure no one even noticed how fucked up he was. Look, no one's even paying attention now.\" \n\nShe was right; As Grady scanned the room he noticed people were back to their original positions, talking and behaving as if Dylan's immature ass didn't make a damn scene. \n\nStevie sighed. \"I guess so. I just don't need this shit right now.\" She pinched the bridge of her nose between her thumb and forefinger. \"He's so fucking stupid. I mean he always was, but now that he's dating that twit...\" The rest of her sentence died on her lips as Edie sauntered into Tony's apartment. \n\nGrady felt his heart quicken at the sight of her. \n\nIt wasn't how he expected; he thought when he'd see her again that his stomach would lurch and he would feel like he was going to throw up. But this, this wasn't dramatic at all. She did look pretty good, albeit a little drunk and maybe a little more than that, but no worse for wear. \n\nShe was wearing a bright green and silver cocktail dress with matching shoes. Her caramel colored skin was tan and shimmering, and her dark hair was tousled carelessly in loose beach waves. \n\nStevie rolled her eyes, barely concealing her dislike. \"Of course. Of fucking course. What the hell are you doing here?\"\n\n\"I'm here to support my boyfriend and his artistic creativity,\" Edie replied snidely. \n\nArden gulped audibly as Stevie's looks morphed murderously. \"Come again? His 'artistic creativity'? That motherfucker can barely string two complete sentences together and suddenly he's the fucking genius behind this whole thing? Get the fuck OUT of here with that bullshit. Whatever shit you snorted in the cab must be really fucking good if you think that piece of shit has any creativeness in him.\" \n\nEdie shooed away her comments with an impatient wave of her hand, which only seemed to enrage Stevie more. \"I don't have time for this,\" she snapped, her accent thickening. \"Where is Dylan?\"\n\nArden pointed in the direction of the balcony. \"He's outside getting some air, although I'm hoping Dax was smart and just pushed him over the edge. I doubt anyone but you would miss him.\"\n\nEdie pretended to ignore that as well, starting for the balcony when Grady suddenly spoke. \"So you're going to pretend like you don't see me here.\" \n\nShe eyed him warily. \"What?\" \n\nThe look on his face was incredulous. \"What? Really? That's all you have to say is 'what'?\"\n\nEdie rolled her eyes. \"I'm sorry, I don't speak to the press without my publicist present. Excuse me, I have to go find my boyfriend.\" With an expert turn on her heel, she sauntered past them, leaving Grady positively shocked.\n\nStevie was the first to speak. \"What the fuck did you see in that hellbeast? Does her pussy shoot out gold bars?\" \n\nGrady should have been pissed; her brush-off was ignorant and ridiculous. Shaking his head, he turned his gaze to Arden. \"I have to get the fuck out of here.\" \n\nArden nodded understandingly. \"It's cool. I need to leave too. I've got an early rehearsal tomorrow. Can we walk out together?\" \n\nHe shrugged casually. \"Whatever. I just know if I stay here any longer I'm gonna wind up saying some ignorant shit and I don't want to cause another scene.\"\n\n\"I hear you.\" Arden glanced at Stevie. \"Are you going to be okay to get home?\" \n\n\"Yeah,\" Stevie replied. \"I'll leave with Gemma. If she's staying with Tony though, I'm sure Dax wouldn't mind giving me a ride home. I'll see you later.\" She gave Arden a quick hug. \n\nArden turned back to Grady. \"Are you ready to go?\"\n\n\"Fuck yes. I'll tell Tony goodbye some other time.\" He headed out the door, with Arden close on his heels. They were silent as they rode the elevator down. It was only when they were outside did Grady finally speak. \n\n\"What the fuck was that?\" \n\nArden shook her head. \"I honestly don't know.\" She stretched out her arm, hailing a cab from the busy street. \"Wanna share? We don't live too far from one another.\" \n\nGrady nodded, opening the car door and stepping aside so she could get in. He slid in after her, shutting the door with a forcefully. He listened as Arden gave the driver her address, but his mind was still reeling. So this is how she wanted to play the game, he thought irritably. \"Fuck her,\" he cursed aloud. \n\n\"Don't worry about it, Grady\" Arden replied. \"Who knows what she was fucked up on.\" \n\nHe shook his head. \"I'd liked to say that was the result of a really good coke high, but sadly I'm pretty sure that's just naturally Edie.\" \n\n\"You think maybe she's seen your stuff?\"\n\nGrady scoffed. \"I have no doubt she did, given her shitty reaction.\" He was quiet for a moment. \n\nHe couldn't really fault her for being upset; after all, this was her story too. And he knew from the moment he told Nell to run the first article that Edie's reaction wouldn't be in favor of the idea. Well he didn't give two shits. It was thrilling and completely satisfactory to piss her off. \n\nSo why didn't he feel like celebrating?\n\nHe felt the tips of Arden's fingers brush the top of his hand. When he glanced down he realized she was just picking up her gold metallic clutch. His heartbeat, which jumped slightly, returned to normal. Well that was odd, he thought. \n\n\"Are you okay?\" He looked up. She was gazing at him, unsure how to read him. \n\nHe shrugged. \"It's whatever. I guess I'm still trying to process what exactly happened.\"\n\n\"I hear you. I should probably text Stevie and see if things are alright.\" She opened her clutch, shifting some stuff around before exclaiming loudly. \"Fuck! I think I left my phone.\" \n\n\"Where, at Tony's?\" \n\nShe shook her head. \"No...at least I don't think so. Oh wait. I think it's at the dance studio. I changed over there before going to Tony's. It must still be in my classrooom.\" \n\n\"Well do you want me to come with you to get it?\"\n\n\"No you don't have to do that.\"\n\n\"I don't mind. Besides, it's late as shit and you shouldn't be walking these streets alone at this hour. Especially with the way you look.\"\n\nShe smiled, her wide grin lighting up her face. \n\n\"Oh yeah? And how do I look?\"\n\n\"Like an expensive escort.\" His grin was sly as she slapped him playfully on the arm. \n\n\"I look fucking awesome. Admit it. Go on and say it. Say 'Arden, you look fucking sexy'.\" \n\nGrady rolled his eyes dramatically but complied. \n\n\"Arden, you look fucking sexy.\" \n\nShe grinned. \"Now was that so hard?\"\n\nHis eyes lowered as the tip of her pink tongue peeked out from between her full lips, wetting them slightly. \n\nHe shifted. When the hell did the simple act of licking one's lips become soft-core? Maybe it was the alcohol, or maybe it was the fact that he was in close proximity with an actual, warm-bodied female but he was definitely feeling some kind of way. He tried to play it cool as Arden informed the driver that they were headed for a different location. \n\nIt took them another ten full minutes of a silent cab ride before they reached Madam Dauphin's Dance Studio. Arden took out a jumble of keys from her clutch, shifting through a few before finding the right one for the lock. She opened the door and stepped inside, with Grady right behind. \n\n\"It's just down the hall here, my classroom\" she said reassuringly. They walked brusquely down the darkened corridor before turning sharply to the left. Arden unlocked another door, this time a large wooden one. \n\nGrady looked around. The dark room was large, with a panel of giant windows on the wall facing the door. The bright moonlight shone through, illuminating the room slightly. On the adjacent wall a broad mirror spanned the expanse, with a wood ballet barre in front. \n\nA wall of cubbyholes faced the mirror on the opposite wall. Arden flitted over to the cubbyholes, searching quickly until she remarked \"Aha!\" and held up her phone triumphantly. \"Thank god!\" she exclaimed. \"I'd feel totally lost without my baby.\"\n\n\"I hear you.\" \n\nShe stepped out of her heels, placing them in the cubbyhole and taking out a pair of simple black ballet shoes. \"I'm sorry, but my feet were killing me. I love heels, but I'm definitely more comfortable wearing flats.\" \n\nHe smiled. \"You look great in heels.\" \n\nShe returned the smile. \"Thanks. But I could never do this in heels.\" Turning her feet out into first position, she balanced gracefully onto her toes before completing a small waltz step. \n\nGrady whistled. \"Very nice.\" He clapped dramatically, which made her grin. \"Show me more of what you got, Finch.\" \n\n\"I don't give it away for free. That's what the show tomorrow is for.\" \n\n\"Well give me a preview.\" \n\nShe curtsied, her feet still en pointe. \"As you wish.\" She began a series of dance steps. Grady watched intently, his eyes never leaving her body. She twisted, flexing taut muscles. Her limbs and her movement was strong, yet she maintained a feminine grace and fluidity that was nothing short of sexy. \n\nYes, sexy. When she executed a series of pirouettes her clip flew from her hair, releasing her ponytail. She became a whirl of purple and tangled curls. \n\nHe was fascinated. She oozed confidence but it wasn't her normal cocky demeanor. This was smoldering. He felt inexplicably drawn. Grady could feel something stirring deep down, something he never thought he'd feel again. \n\nGrady Kade was turned on. \n\nArden ended her demonstration with a large leap, coming to stand a few steps in front of him. She panted slightly, a large grin on her face. Her limbs glistened with the result of her impromptu exercise. She felt the rush and excitement of her performance. \"Well, what did you think?\"\n\nShe noticed something was slightly off in his gaze. His vividly blue eyes were positively glowing in the dim light of the room. She couldn't read his look. It hovered between uncomfortable and something she couldn't place. \n\nArden stepped forward. \"Are you okay?\" she asked, wondering silently why she sounded so timid.\n\n\"I...wow. You're fucking amazing,\" he finally said. \n\n\"Aww, thanks. It was nothing, really.\" \n\nGrady shook his head, the same dazed look on his face. \"No it was definitely something. The way you move...you're...you're beautiful.\" \n\nIt was as if he were really seeing her for the first time. And to be honest, it probably was a first. He supposed he never really paid too much attention because after all, she was probably the most obnoxious person he'd ever met. \n\nBut here, in the dim light of a room that still carried a faint aroma of sweat and shoe leather, she fucking radiated beauty. \n\nThe bitter dark chocolate skin glowed from a fine sheen of sweat now covering her body. Her chest was heaving slightly, her chestnut hair sitting wildly about her shoulders. She glanced up at him with those wide brown eyes and something inside him snapped. \n\nGrady went in for the kill, closing the gap between them. His hand reached out, snaking around her waist and pulled her close. She was tall; he liked that, the top of her head brushing his chin. He tilted her chin, forcing her to look at him. He wasn't sure what she was thinking, but he could see the dim flame of want in her eyes. \n\nThat was all the go-ahead he needed. \n\nHis lips connected with hers, so lightly it almost didn't feel real. She sighed softly, the warmth of her breath urging him forward. He brought her closer, pinning her body between his arms. The kiss deepened. It was as if he was no longer in control. He thought he would have been rusty, but soon discovered his body knew exactly what to do. \n\nArden was eager too. At first caught off guard, she quickly regained her wits. Grady felt her sink deeper into the kiss, her lips and body relaxing and allowing him entrance, which he eagerly took advantage off. He nibbled her plump bottom lip and she moaned, pulling him closer. \n\nHer hands sought the cornsilk softness of his curls, her fingers weaving a path before tightening almost painfully in his locks. \n\nGrady was on overload. He couldn't think. All his body could process was more. More tongue, more touch, more skin, more of her. Something was brewing inside him. His head filled with naughty visions of all the things he wanted to do, none of them involving clothes, but all them involving at least two full hours of exploration time. \n\nHe kissed her frantically, their tongues battling one another. She gave as much as he did, and that excited him. He was scared where this may lead but part of him was begging for the opportunity to go, to taste what lay beneath that cocky Arden demeanor. She would be a wild ride, for sure. Almost as wild as...\n\nEdie. \n\nThat thought stopped him cold, as if a deep frost had fallen on the moment. Gently, he detached himself from her and tried to ignore the look of confusion tinged with hurt on her face. \n\nWhat was there to say? He was afraid to look at her; the chemistry between them was too palpable to ignore. It pulsed loudly in the darkness of the dance studio, ringing loudly in their ears. \n\nThey both wanted more than was offered, but the uncertainty of the after proved too much to handle. \n\nGrady ran a hand through his hair and was surprised to see that he was shaking. He dared to sneak a peek at her and saw the torment on her face. She was torn, just as he was. The whole situation was confusing. He needed to get the hell out of there, before he did something he desperately wanted but would regret. \n\n\"I should go,\" he rasped as he finally found his voice. \n\nArden nodded vigorously. \"Yeah.\" Her voice was barely above a whisper. \n\nAs he turned to leave, she tried to speak again but he stopped her. \"Let's not, okay. Just...let me go.\" \n\nHe slinked out the door, practically ran down the corridor and out onto the sidewalk. He took a long deep breath and tried to stop his mind from overheating. \n\nWhat the fuck just happened?\n\n********\n\nDon't you just love when life throws a monkey wrench into your plans? Dear Readers, something has happened that is bound to have serious consequences. \n\nI didn't see this coming, not at all. And now I'm stuck here, in this giant fork in the road, wondering what my next course of action will be. Should I continue down my original path, trudging along and enjoying my stroll down Ignorance Lane or do I Man Up and take the road few would dare to travel? \n\nThat road is downright terrifying and will undoubtedly keep me on my toes but there's a possibility it will lead me somewhere I did not want to be. Or maybe, just maybe it will turn out to be the right road all along.\n\nDecisions, decisions...\n\nI have really landed myself in the shit this time. "
    ],
    "authorname": "nerd4music",
    "tags": [
        "romance novella",
        "interracial novella"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/getting-over-edie-ch-04"
}