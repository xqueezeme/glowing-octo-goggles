{
    "title": "The Therapist Ch. 01",
    "pages": [
        "Curtis Reed, a 32 years old consultant, had been divorced for 2 years. The separation had been difficult; despite the couple's constant arguing that had pushed them apart, Curtis had kept strong feelings for his ex wife. A few months after the divorce, he began dating again, and had a few short-lived relationships. But really moving on from his ex-wife Karen seemed impossible to him.\n\nTo help rebuild his life, Curtis had begun to see doctor Parker, a psychologist, about 6 months earlier. Dr Parker was a 38 years old brunette; her tight skirts and slim fitted shirts, tied hair and large glasses gave her a somewhat conservative and severe look, that contrasted with her natural warmth. Curtis found her very attractive, but knew better than to try anything with his therapist. She had made him talk through his feelings and understand better the reasons why he couldn't seem to let go of his old life, providing him enough clarity to continue moving forward.\n\nAs he continued to see her twice a week, Curtis had always kept her updated on his relationships, but even when he explained how things had gone wrong with them, Dr Parker felt there was something missing. She could tell he was leaving out an important part of why things didn't go well with his partners. She figured it had to be something that he had enjoyed in his marriage, but couldn't seem to find with other women, something significant that he always seemed to avoid during their sessions...\n\nRelying on the solid trust they had built over the past 6 months, Dr Parker eventually decided to venture her educated guess at the beginning of one of their therapy sessions:\n\n\"Curtis, there is an important aspect of your relationships that you've never brought up. You've been very open with me about a lot of things, yet somehow you've always seemed to avoid this particular subject.\"\n\n\"What do you mean, doctor?\"\n\n\"From the things you've told me, it's a little difficult to really understand why things often seem to end abruptly in your recent relationships, compared to your marriage. You seem to have found most of the qualities you were looking for in the women you dated, there was no major incident, and yet it never quite worked out with any of them. This leads me to think that the subject you've been avoiding must have played a significant role.\" She paused, giving her patient a moment to process. \"So today, let's talk about your sex life.\"\n\n\"Oh... that. I don't know, doctor.\"\n\nIt was obvious this wasn't a topic Curtis was comfortable talking about.\n\n\"I know it's never easy talking about your intimate life. But if we want to get to the bottom of your issues, we have to talk about it at some point. And by now, you know well enough that there is no judgment here, I only want to help you. Whatever may come up during the session, I won't be shocked or upset. This is a safe place.\"\n\n\"Alright,\" Curtis replied, nodding.\n\n\"Were you satisfied with your intimate life with Karen?\"\n\n\"Yeah. I had... managed to find my balance.\"\n\n\"And what about the other women you've dated after your separation?\"\n\n\"It was... alright, I guess. Most of them were very attractive, and we had sex very often.\"\n\nDr Parker nodded, and said:\n\n\"But it sounds like something was missing.\"\n\n\"Yeah, you could say that, I suppose,\" Curtis replied, avoiding eye contact.\n\n\"Were there some things they wanted to do that made you uncomfortable?\"\n\n\"Not really, no.\"\n\n\"Maybe the other way around then? Were there some things you would have liked to do with them, but that they didn't want to do?\"\n\n\"Kind of, I guess.\"\n\nCurtis knew where Dr Parker was trying to get, but he was purposefully avoiding offering the answer she was looking for. The doctor knew she had to push through his reluctance, and asked:\n\n\"Was there something in your intimate life that you enjoyed with Karen, but couldn't find with your other partners?\"\n\n\"Sort of...\"\n\n\"Tell me about it,\" she said, in a voice that sounded equally benevolent and assertive.\n\nCurtis blushed slightly.\n\n\"Okay. It wasn't exactly... something that I did with Karen. More like, um, something on the side.\"\n\nHe let out a soft chuckle, trying to deflect his embarrassment. Keeping a neutral expression, Dr Parker asked:\n\n\"Did you sleep with other women while you were with her?\"\n\n\"No, it didn't go that far.\" He paused. He didn't want to, but he knew he had to tell her. \"It's, um... There's one thing that I like to do, that my wife wasn't into, and I'd found someone else who was willing. But after my divorce, I stopped seeing that person. And I don't want to be that sort of guy anymore, but the women I've been with since don't share this... fantasy. This has left me quite frustrated.\"\n\n\"I can understand that. Is that why you couldn't stay with them?\"\n\n\"It's not the only reason, but it did play a part, yeah.\"\n\nDr Parker nodded. She took a moment to think, then asked:\n\n\"Tell me, then. What is that fantasy?\"\n\nCurtis' face turned scarlet. Only a few minutes into the session, his therapist had cornered him.\n\n\"It's, you know... kinda silly and embarrassing. I'm not sure I should say.\"\n\n\"I already told you, Curtis, there's no judgment. Besides, what fantasy isn't embarrassing? Whatever it is, it's okay.\"\n\nCurtis could always tell her to change the subject, but he understood that they wouldn't be able to go any further if he did, and he wanted to continue those sessions. Both because he felt they helped him, but also, deep down, because he just wanted to continue seeing Dr Parker... He took a deep breath.\n\n\"I, um... I like to be watched when I... touch myself.\"\n\nSo far, Dr Parker had kept a perfectly neutral expression. But this revelation ostensibly hit her, as if it somehow resonated with her. She quickly regained her composure, and luckily, her patient had been looking at the floor when he spoke, and didn't see her reaction.\n\n\"Okay,\" the doctor said with slow nod and a benevolent smile. \"You said there was a woman that you used to fulfill this fantasy with, back when you were married? Tell me about it.\"\n\n\"Yeah, it was...\"\n\n~ Three years earlier... ~\n\nMy wife Karen's sister, Alice, was staying with us for a few days. She didn't live far from us, and her house was undergoing a fumigation process, so we welcomed her. It was the weekend and Karen had gone out shopping. Alice was also out, and I had the house to myself for what I thought would be a few hours.\n\nA little confession. When I'm alone in the house, I like to strip naked. I don't consider myself a naturist, it's just that... the feeling that anyone could walk in and see me, it makes me... horny. I've never really told my wife about it, I guess I'm entitled to my little kinks.\n\nI threw away my clothes in the bedroom and went to the living room. I could already feel my arousal grow. I walked past the large mirror that we have in the living room, and looked at my reflection. I was already hard. I grabbed my penis and balls as I stood in front of the mirror.\n\nThat wasn't the first time I was doing this. I'd always had this fantasy of having someone watch me at my most vulnerable moment. Looking at my reflection as I touched myself somewhat satisfied this desire; it made me feel so naughty. I began to squeeze my balls and stroke my erection. I spat on it to make it more slippery, and soon I was sliding my hand up and down, making loud wet sounds that echoed in the room.\n\nI closed my eyes, and slipped into the fantasy of having several women standing around me, watching me masturbate. I called upon the image of the first few that came to my mind. Karen, of course. But I knew watching me wasn't really her thing. Then Frances and Laura, the two hottest women at my agency. Then, Alice sprang into my mind. Imagining my wife's sister, standing in front of me, watching me stroke myself, it made me so horny that I began to moan. Focusing on that image of her, I said out loud:\n\n\"Oh, Alice... You like to watch me masturbate... You like to see me stroke that big cock and play with my balls...\"\n\n\"Actually, I think I do...\"\n\nI suddenly froze. That voice was not part of my imagination, it came from behind me. And I recognized it. I wasn't alone in the house anymore. There I was, standing naked in the middle of my living room, my cock and balls in my hands in front of a giant mirror, far away from anything I could possibly use to cover myself.\n\nI opened my eyes. Looking into the mirror, I saw Alice's reflection. She was standing at the entrance to the living room, behind me. From there, she could see both my back, and my front in the reflection. She had a wicked smile on her face. I had been caught red handed. She had even heard me call out her name. There was no point in trying to deny anything.\n\n\"H-how long have you been...\" I stuttered.\n\n\"Long enough,\" she replied as she entered the room and walked towards me, still wearing that disarming smile. \"But, don't stop on my account,\" she added, teasingly biting the tip of her thumb.\n\nI didn't understand what was happening. Why was she still here, why was she smiling like that? Why didn't she apologize for walking in on me? But... I'd just been calling out her name while I was touching myself... calling out my sister in law's name. Maybe I should be the one apologizing...\n\n\"I'm... I'm so sorry...\" I muttered.\n\n\"Turn around and face me.\"\n\nAwkwardly hiding my manhood, I turned towards my sister in law. She was standing less than six feet away from me. Looking at me at my most vulnerable, she bit her lower lip, then said:\n\n\"I want you to continue what you were doing.\"\n\n\"What?\"\n\n\"A moment ago, you seemed to enjoy the idea of me watching you,\" she said, chuckling.\n\nI was still frozen in place, unsure what to do. Alice said:\n\n\"Okay, just remove your hands. Let me look at you.\"\n\nDefeated, I let my arms fall to my sides. My pulsing erection, glistening in my precum and saliva, sprang up before my sister in law. She watched it throb for a few seconds, with an equally mischievous and delighted smile.\n\n\"Hmm... not bad,\" she said, chuckling.\n\nI'd always found Alice to be a very attractive woman. Tall, thin, blonde and beautiful, she looked a lot like my wife, maybe even hotter. Or perhaps that was just the good old sister in law fantasy speaking. We had a good relationship and enjoyed spending time with each other, but it was mostly in Karen's presence. There'd actually been only a very few occasions where it was just the two of us. But from what I knew of her, I would have never imagined this would be her reaction if she caught me masturbating. I figured she would have simply walked away, at most catching a glimpse... Not facing me like she was, and taking advantage of my embarrassment.\n\n\"So let me get this straight,\" she said. \"You were just masturbating.\"\n\nI coyly nodded.\n\n\"And you were imagining me watching you.\"\n\nThere was no point trying to deny it. Again, I nodded.\n\n\"So, that's you fantasy. To imagine your sister in law watching you masturbate,\" she said, teasingly biting her index. \"That's what makes you so hard.\"\n\nI had never felt so vulnerable as I was right now. Naked and erect, standing in front my fully dressed sister in law while she stared me down with her sly smile, knowing about my fantasy. Despite my utter shame, there was another feeling that was quickly taking over me. I had never felt so turned on in my life. This situation was pressing all the right buttons. Hell, it was pretty much what I'd been fantasizing about moments before! As I looked into her eyes, I realized I wanted her to stare. I wanted her to see my pulsing hard cock. I wanted to do what she told me.\n\nAnd it seemed she was on the same page.\n\n\"Grab your cock with your right hand.\"\n\nI eagerly obeyed, and waited for her next instructions.\n\n\"Now, spit on it. I noticed you liked to do that.\"\n\nI hesitated for a moment, then gathered some saliva in my mouth, and dropped it on my erection.\n\n\"Now stroke, slowly.\"\n\nWas I really going to do that? To masturbate in front of my sister in law?\n\nI couldn't help myself. I began sliding my hand up and down my shaft, making loud wet noises.\n\n\"Play with your balls with your other hand.\"\n\nI cupped them with my free hand, and began to gently squeezed them, as I continued to look into my sister in law's eyes.\n\n\"Tell me, Curtis, when was the last time you came?\"\n\n\"Um... Three days ago.\"\n\n\"Your balls must be pretty full,\" she said. Her impish smile was only growing wider, it was obvious she enjoyed the control she had taken over me. \"You were eager to empty them a moment ago, right?\"\n\n\"Yes...\"\n\n\"Do you still want to do that, now that I'm here?\"\n\n\"Y-yes...\"\n\n\"Come closer.\"\n\nI obeyed. I was completely submitting to her, and I had never felt so aroused. There I was, in my own house, stroking my cock and squeezing my balls 3 feet away from my fully clothed sister in law, who was standing with her arms crossed and a wicked smile.\n\n\"Spit on your cock again. Now, remove your hand from your balls and stroke faster. I want to see your balls bounce back and forth.\"\n\nI did as she instructed. The wet sounds of my hand sliding up and down filled the room. I felt my climax was starting to build up, when Alice said:\n\n\"Don't come yet. When you're almost there, I want you to stop.\"\n\nNo more than a couple of seconds later, I had to remove my hand. Alice watched my glistening erection throb, as a large drop of precum oozed from the tip and landed on the floor. I had never taken part in such a crude display before. Not with my wife, not with anyone. I was on the edge of my orgasm, my cock throbbing with anticipation, waiting for my sister in law to allow me come.\n\n\"Again. Stroke it fast and stop before you come.\"\n\nI edged myself once more, and removed my hand. While I managed to stop before reaching my orgasm, a small drop of sperm oozed out of my penis and landed on the floor.\n\n\"Did I tell you to ejaculate?\" Alice asked.\n\n\"N-no...\"\n\n\"Grab your cock and balls, and stay still.\"\n\nI obeyed.\n\n\"Now, if you want to come, you have to ask for my permission.\"\n\n\"Alice... Can I come now?\"\n\n\"You'll have to do better than that.\"\n\nI would have said just about anything to be granted my climax.\n\n\"Alice, please, may you allow me to have an orgasm?\"\n\nShe nodded and said:\n\n\"Alright. But here's what you're going to do. As soon as you begin ejaculating, you will remove your hands entirely. I want to watch your cock throb when you come.\"\n\n\"Yes...\"\n\n\"Now, stroke yourself. Slowly. Keep this pace until the end.\"\n\nLooking into my sister in law's eyes, I resumed stroking my erection and massaging my balls, as slowly as I could. I felt my climax start to build up again. Suddenly, I knew I had crossed the point of no return, and began to grunt. Looking at Alice, I removed my hands.\n\nHere eyes were glued to my erection as I began ejaculating. Having reached my climax, I felt my muscles contracting uncontrollably, and my cock began throbbing as it shot one rope of semen after the other. Breaking eye contact with my sister in law, I looked down to see my thick gushes land on the floor, forming long white lines. It took every bit of willpower I had to not stroke my cock. It would have felt so good to touch it... but somehow, following Alice's instructions felt even better. Obediently, I just let my cock pulsate, shooting out more and more of my sperm as I groaned with abandon, offering Alice a perfect view of this most intimate display.\n\n\"Now, you can stroke it again. And make sure to squeeze every last drop.\"\n\nI rushed to seize my shaft and resumed pumping it at a blurring speed. It almost felt like a second, more powerful orgasm was taking over as I finished draining myself in front of my sister in law. It was the most intense pleasure I had ever experienced.\n\nWhen my orgasm subsided, I continued squeezing my slowly deflating penis, drawing out the last drops of semen. Slowly coming to my senses, I realized I had just experienced my biggest fantasy, and it had been as amazing as I had imagined.\n\n~ Back in Dr Parker's office... ~\n\n\"And... that's how it started,\" Curtis said. \"We both knew it wouldn't stop there. She had obviously enjoyed it a lot too.\"\n\nDr Parker did her best to hide how much Curtis' story was resonating with her own fantasies, and thankfully, her patient was too caught up in his own retelling to notice how his therapist's breathing had been growing deeper.\n\n\"How did things go from there?\"\n\n\"Well, she made me promise that...\" Curtis chuckled, embarrassed. \"She made me promise to always ask for her permission to masturbate. And whenever possible, I would have to do it in her presence.\" He paused. \"We developed that strange dual relationship over time. Whenever we were with Karen or other people, we would just be regular friendly in-laws. But when it was just the two of us... well, actually, we'd even written some sort of... contract.\" He chuckled nervously again.\n\n\"Do you still have this contract?\"\n\n\"Um... Yeah.\"\n\n\"Can I see it?\"\n\nCurtis gulped, then took a deep breath.\n\n\"Alright...\"\n\nHe reached for his phone, and browsed through some files, then hesitantly handed Dr Parker the device, with the document open. She read out loud.\n\n\"This is a sexual contract binding Curtis Reed to Alice Miller.\n\nI, Curtis Reed, consent to the following rules:\n\nI must always ask for her permission when I wish to masturbate,\n\nOutside of marital intercourse, I am not allowed to have an orgasm without her explicit permission,\n\nUnless specifically authorized, I will only masturbate in her presence and follow any instructions she may give me,\n\nI will let her take pictures of videos of me at her discretion.\n\nWhen alone with her, I will immediately strip naked whenever she snaps her fingers.\n\nSigned, Curtis Reed and Alice Miller.\"\n\nDr Parker read it silently one more time, then gave the phone back to her patient.\n\n\"I see. How long did this go on?\"\n\n\"Until Karen and me got separated So, about a year. After that, I never saw Alice again.\"\n\n\"You had become attached to this pattern with her, and it's difficult for you to live without this now.\"\n\n\"Yeah...\"\n\n\"I understand.\" Dr Parker leaned forward, resting her elbow on her desk and joining her hands. \"Let's talk a little about what specifically makes you sexually aroused in this kind of situation. Stop me if I'm wrong. You like the vulnerability. The asymmetrical relationship. The submission. The forbidden intimacy.\"\n\nCurtis nodded at each statement. Dr Parker continued.\n\n\"You enjoy giving another woman power over your most intimate bodily functions, over your pleasure.\"\n\n\"Yes...\"\n\n\"Did you always respect the contract that you had with her?\"\n\n\"Yes.\"\n\n\"So you really never masturbated without telling her?\"\n\n\"No.\"\n\n\"Why?\"\n\n\"Because it... it feels so much better when I do it with her permission. I... like being told when I can masturbate, and how.\"\n\n\"Did Alice make you edge? Did she sometimes make you stop without granting you an orgasm?\"\n\n\"Um... Yes. At times she could do that several times in a row.\"\n\n\"I see,\" Dr Parker said, nodding.\n\nCurtis hadn't realized how the conversation had progressively taken a sharp turn. This was no longer about his feelings and emotions; she was asking about practical details. And, having moved on from his initial reluctance, he was now willing to answer any question she would ask.\n\n\"What was the most intense orgasm you ever experienced?\"\n\n\"It was with Alice... probably that first time I just told you about.\"\n\n\"So masturbating in front of her gave you more pleasure than, say, having sex with your wife?\"\n\n\"Y-yes...\"\n\n\"Now that you don't see Alice anymore, do you still masturbate?\"\n\n\"Well, yes...\"\n\n\"How often?\"\n\n\"Um, about... every day, or every couple of days.\"\n\n\"When was your last orgasm, Curtis?\"",
        "\"It was... about a week ago.\"\n\n\"But you masturbated since.\"\n\nHe nodded.\n\n\"So, you've been edging yourself. Are you doing this to make your orgasms more intense? To see if you can give yourself as much pleasure as you had with Alice?\"\n\n\"Yeah...\"\n\n\"But it doesn't work, does it? On your own, you can't reach the pleasure you experienced when a woman instructed you to masturbate. The pleasure of obeying her. The pleasure of having a woman's permission.\"\n\nCurtis slowly nodded at each of her statements. He'd now become aware of the shift in the tone of their exchange. He recalled the doctor's words from a few minutes earlier, and realized how much his current situation was similar to the relationship he had with Alice: the vulnerability, the asymmetrical relationship, the submission, the forbidden intimacy...\n\nHe realized how aroused he actually was at that moment. And he knew he could not hide it to Dr Parker. Not after he'd laid his deepest fantasies and emotions at her feet.\n\nSilence filled the room for a moment as both patient and therapist processed the situation they now found themselves in. Eventually, Dr Parker looked towards Curtis' crotch and said, flatly:\n\n\"I can see that you have become erect.\"\n\nCurtis looked down, there was no hiding the bulge in his pants. She asked:\n\n\"Is it because of those memories you recalled? Or is it because you enjoyed confessing your fantasy to me?\"\n\nCurtis blushed. Throughout this whole exchange, while his voice had become increasingly shaky, Dr Parker he remained calm and assertive, reinforcing the dominant position she had now gained. The patient replied:\n\n\"I guess... a little bit of both.\"\n\nShe gave her patient a moment to process the implications of his admission. When he realized he had just confessed that she aroused him, she daringly asked:\n\n\"On a scale of one to ten, how much would you like to masturbate in front of me right now?\"\n\nHe looked down.\n\n\"I'd say... about nine...\"\n\nLeaning slightly back on her chair, Dr Parker said:\n\n\"Stand up, and remove your clothes, Curtis.\"\n\n\"Yes, doctor...\"\n\nThat was it, he realized. His therapist had completely taken over the role of Alice. He had needed this so bad, he was ready to do anything she told him. Curtis promptly tossed aside his shoes and socks, undid his shirt, and pulled down his pants and underwear. Within moments, he stood entirely naked in front of his therapist, fully erect. She looked at his pulsing member.\n\n\"Come stand next to me,\" she said.\n\nCurtis walked, his erection awkwardly swinging left and right, until he stood about three feet from his therapist.\n\n\"Closer.\"\n\nHe took one more step. His pulsing erection was now inches from Dr Parker's face. She looked at it from behind her glasses.\n\n\"When was the last time you stood naked in front of a fully clothed woman?\" she asked with a confident tone.\n\n\"It was with Alice. Two years ago.\"\n\n\"Did you miss this feeling?\"\n\n\"Yes...\"\n\n\"Are you fully erect, Curtis?\"\n\n\"Yes, doctor.\"\n\nDr Parker suddenly cupped his balls, surprising him.\n\n\"You've been edging for a week,\" she said as she squeezed gently. \"These must be very full.\"\n\n\"Yes...\"\n\n\"And you must be very eager to empty them.\"\n\n\"Yes, doctor...\"\n\nShe let go of his balls, and said:\n\n\"Spit on your penis.\"\n\nJust as he used to do with Alice, he gathered some saliva in his mouth, that he dropped then dropped on his erection.\n\n\"Again. One more time.\"\n\nDr Parker looked at the glistening penis inches from her face, as some of Curtis' saliva glided down and formed an elongated drop that eventually fell on the floor.\n\n\"Grab your penis. Tightly.\"\n\nCurtis wrapped his fingers around his member.\n\n\"Stroke it, slowly.\"\n\nHe obeyed. He couldn't believe he was masturbating right in front of his therapist's face. The situation had shifted so subtly at first that he never saw this coming; half an hour earlier, he had never even brought up his sex life with her. And now, after making him confess his most intimate fantasy, Dr Parker was making him enact it with her. She watched him masturbate for almost a minute, then said, with a calm tone:\n\n\"I know how full your are, and how bad you need to relieve yourself. I want you to think about how easy it would be for your to ejaculate all over my face right now. You could cover me with your semen in an instant.\" She paused. \"But you're not going to. Because you haven't been allowed to come. Isn't that right?\"\n\n\"Yes...\"\n\nCurtis looked at his therapist's beautiful face. She was wearing minimal but carefully done makeup, bringing out the oultine of her eyes. Her hair was firmly tied back. Her glasses perfectly clean. He thought about how easy it would be to make a mass of her. He imagined his therapist's face covered in his semen. He could do it if he wanted, she wouldn't be able to evade it, it would be so easy to come all over her face, it would feel so good...\n\nBut she hadn't given him permission to come. And more than anything, he wanted to obey. So he continued to stroke slowly, careful not to cross the edge.\n\n\"Accelerate and continue to masturbate until you reach the edge. Stop right before you come.\"\n\nCurtis increased his pace, and within seconds, felt he was nearing the point of no return, and removed his hand. Dr Parker looked at his pulsing member, seconds away from splashing his thick semen all over her face, and waited for almost a minute.\n\n\"Again,\" she eventually said.\n\nCurtis once again masturbated to the limit of his climax and stopped.\n\n\"Again.\"\n\nHe couldn't take anymore. He touched himself for only a couple of seconds before stopping. Dr Parker watched a thick drop of precum oozing out of his member and falling on the floor.\n\n\"Now, clean yourself and the floor,\" she said, handing Curtis a box of tissues.\n\nNoticing his dumbfounded expression, Dr Parker added:\n\n\"You will not have an orgasm today, Curtis.\"\n\nHe took the tissues, stepped back, and obediently cleaned his glistening member. Then he kneeled before his therapist, who was still sitting in her chair with her legs crossed, and proceeded to wipe the small puddle of saliva and precum he had dropped at his feet.\n\nOnce he was done, he stood up and waited for his therapist to say something.\n\n\"Starting tonight, you will masturbate every morning, every lunch break and every evening, stopping just before reaching your climax, until our next session. You are forbidden to have an orgasm. You can get dressed now.\"\n\nOnce he got his clothes back on, Dr Parker said:\n\n\"One way or another, you need to fulfill this fantasy. There's no way around it. I will help you with it for now, it's my job to help you find the necessary balance in your life.\"\n\n\"But do you... enjoy doing this? I mean, you seem... experienced.\"\n\nShe smiled.\n\n\"That's a personal question, Curtis.\"\n\n~ Four days later ~\n\nIt was now time for Curtis' next appointment with his therapist. Dr Parker invited him in her office.\n\n\"You can undress,\" said Dr Parker as she sat on her chair.\n\nCurtis didn't expect her to open with this, but promptly obeyed.\n\n\"Have you followed my instructions, Curtis? Did you masturbate and edge every morning, lunch break and evening?\" she asked as he was undressing.\n\n\"Yes, doctor.\"\n\n\"Come closer. Show me how your penis grows erect, without you touching it.\"\n\nCurtis stood next to the doctor as he had last time. Inches from her face, his penis began to grow and harden, soon reaching its full size. Dr Parker looked at the throbbing member.\n\n\"Good. On a scale of one to ten, how much do you need to have an orgasm, Curtis?\"\n\n\"Ten... For the last few days, it all I've been able to think about. I'm... hard all the time.\"\n\n\"And why didn't you grant yourself this orgasm?\"\n\n\"Because you forbade me to come.\"\n\nDr Parker looked into her patient's eyes, and said:\n\n\"But you could have done it anyway if you wanted. I wasn't there to stop you. So, again, why did you not let yourself come even though you needed it so desperately?\"\n\n\"I... didn't want to disobey you.\"\n\n\"Because the pleasure you get from obeying me is greater than the pleasure you could get on your own?\"\n\n\"Yes...\"\n\n\"Because you desperately need someone to control your pleasure?\"\n\n\"Y-yes...\"\n\n\"I see.\"\n\nDr Parker turned her office chair to face Curtis, then laid back and crossed her legs, in a way that made her look both relaxed and dominant at the same time.\n\n\"Get on your knees.\"\n\nCurtis did as instructed, kneeling at his therapist's feet. Once he was in position, Dr Parker said:\n\n\"Are you ready to obey?\"\n\n\"Yes.\"\n\n\"You will masturbate at the pace I tell you. When I allow it, you will ejaculate on the floor. After that, you will lick the floor clean of your semen.\"\n\n\"Y-yes, doctor.\"\n\n\"Remember, you are forbidden to come until I say otherwise. Now, grab your penis. Hold it tightly.\"\n\nOn his knees before his therapist, with his erection in his hand, Curtis was waiting for her next instructions.\n\n\"Stroke it slowly.\"\n\nHe began to masturbate.\n\n\"Slower. Slower. Yes, like this. Maintain that pace.\"\n\nCurtis looked at his member. With each stroke, he drew out a bit of precum, that began to form a large drop at the tip of his penis. After a few strokes, the elastic fluid slowly dropped to the floor at Dr Parker's feet.\n\n\"Look into my eyes, Curtis.\"\n\nDr Parker watched her patient masturbate as slowly as he could for a couple of minutes. The room was silent apart from Curtis' heavy breathing. She could see his body slowly begin to tense up as his pleasure built up. Dr Curtis knew exactly the signs that would indicate Curtis was about to come, and she was watching out for them.\n\nAfter so many days of edging, Curtis was desperate to come. She could see the need, the burning desire in his eyes.\n\n\"I will now count down. You will have an orgasm when I reach zero. Ten... Nine... Eight...\"\n\nCurtis maintained eye contact, hangin on to her lips. He was so close... She continued counting down slowly:\n\n\"Seven... Six... Five... Four...\"\n\nCurtis slowed down even more, trying to keep his climax at bay until the end of the countdown.\n\n\"Three... Two... One...\"\n\nCurtis contracted his abdomen and locked his breathing. Dr Parker knew he was at the point of no return, and ordered:\n\n\"Let go of your penis, rest your hands on the floor behind you and lean back on them.\"\n\nOne more stroke and Curtis would have already been coming. As he let go of his member against all of his instincts, he could feel the unstoppable pleasure building up inside him. He leaned back as instructed, arching his back in the process.\n\n\"Lift your crotch.\"\n\nPushing on his thighs, Curtis raised his crotch, sticking out his erection as his climax continued to slowly build up. The throbbing member was pointing upwards.\n\n\"Remain perfectly still. I know you can feel your orgasm building up.\"\n\nShe looked at her patient, standing on his knees and fists at her feet, one word away from orgasm. With a smile, she said:\n\n\"Zero. You may come now.\"\n\nCurtis stopped trying to push back his climax, and let the pleasure flow through his entire body. With a loud groan, he stuck his crotch out as much as he could and began ejaculating.\n\nDr Parker watched her patient's penis throb wildly as it shot rope after rope of thick semen. The hot fluid flew upward in a curved trajectory, before landing inches from her feet. Curtis was groaning and moaning.\n\nBetween the edging and the satisfaction of once again obeying a woman's instructions, Curtis had never felt so much pleasure, despite the frustration of being forbidden to touch himself at the most critical moment. Even his sister in law had never managed to grant him such a powerful orgasm. He struggled to maintain eye contact with Dr Parker as he emptied his balls before her. He felt his erection pulsing, uncontrollably gushing his white fluid at his therapist's feet. His ejaculation seemed never ending. Pleasure continued to course through his veins with each spasm, with each new burst of semen. When she saw his orgasm begin to fade, Dr Parker said:\n\n\"Now, resume stroking and draw out any remaining semen.\"\n\nCurtis immediately leaned forward and grabbed his sensitive member. Holding it tightly, he pumped out the last remaining drops of sperm, while prolonging his exhausting climax. With an expression of both submission and relief, he continued to look into his therapist's eyes as he finished draining himself empty.\n\n\"Is your orgasm over, Curtis?\"\n\n\"Y-yes, doctor.\"\n\n\"Release your penis. You may now look down.\"\n\nCurtis looked at the floor. He had never ejaculated so much. Thick white strings of semen were laid out all over the place, up to 15 inches before him. And he knew what was coming next...\n\n\"Now, you will lick the floor clean, and you will swallow every last drop of your semen.\"\n\n\"Yes...\"\n\nCurtis placed his hands on the floor in front of him, and leaned forward until his face was right above the thickest puddle of his semen. Apart from the mess he had just made, the floor was immaculate. He extended his tongue and began licking the product of his orgasm at his therapist's feet.\n\nHe had already tasted it before, but this was the first time he was actually swallowing the entirety of his load. And it happened to be the biggest ejaculation he had ever had... He felt the hot, salty fluid glide down his throat every time he swallowed. Once he was done with the puddle before him, he moved on to the white lines, licking them off one after the other, moving closer and closer to Dr Parker. When he had finished licking the floor clean, he sat up, on his knees, at his therapist's feet.\n\n\"From now on, you will always eat the entirety of your semen whenever you ejaculate.\"\n\n\"Y-yes, doctor.\"\n\n\"Knowing that, will you continue to obey me?\"\n\n\"Yes.\"\n\n\"Now, I guess we have a contract to draft...\""
    ],
    "authorname": "Tribad",
    "tags": [
        "confession",
        "contract",
        "control",
        "cum eating",
        "cum swallowing",
        "male masturbation",
        "office",
        "submissive",
        "therapist"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-therapist-ch-01-1"
}