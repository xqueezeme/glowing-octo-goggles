{
    "title": "Badge of Betrayal",
    "pages": [
        "\"Seventeen-Twenty-Five from dispatch,\" squawked the radio. Liz Harrison, our lead dispatcher, was working the day shift in the communication center. I always loved it when Liz was working dispatch, instead of stuck in her office supervising. Liz had a silky, smoky voice that would make any 1-900 phone sex girl envious.\n\n I keyed the button on my lapel mike for my portable radio, rather than reaching to grab the hand mike from my cruiser's Motorola console radio.\n\n \"Dispatch, Twenty-Five, go,\" I replied.\n\n \"Twenty-Five, be advised that we have a report of a possible kidnapping that occurred at 685 Front Street in Red River Falls. Caller indicates a 7 year old girl was taken from that residence by a non-custodial father and female acquaintance. Caller believes that both subjects may be armed and dangerous. Vehicle is described as a Maroon 1998 Plymouth Voyager; Choctaw County plates Victor, David, Adam, Six, Four, Lincoln. All personnel are urged to use extreme caution when approaching subjects. Make your own case. Mason County clear at fourteen-thirty-seven.\"\n\n Damn! A kidnapping right here in Mason County! Currently, I was patrolling in the southern part of the county and I needed to know if I had an opportunity to position myself between the suspects and their most likely route of egress from the scene of the abduction.\n\n \"Dispatch, Twenty-Five acknowledges. Any intel on what direction they might be headed?\" I queried.\n\n \"Negative, Twenty-Five. Stand by for additional information. Statewide Amber Alert is now in effect. Subject information is being sent via the 'net at this time.\"\n\n \"Dispatch, Twenty-Five. Good copy,\" I replied.\n\n My name is Sean Patrick Quinn, Jr. But all of my friends, co-workers and most of my family call me Patrick instead. I never cared for Junior much, mostly because me and my old man never saw eye to eye. I was a Deputy Sheriff for the Mason County Sheriff's Department. I was on a fairly routine patrol that hot, sunny August afternoon when the Amber Alert came in over my radio. My current shift schedule had me working one of the day cars from 0700 to 1530. I worked a fairly regular schedule of six days on and 3 days off. I didn't mind the extra work day, compared to a normal 40-hour week and I definitely enjoyed the benefit of having a three-day weekend at the end of every tour. \n\n I was patrolling along County Road Y-29, which is basically a lonely stretch of black top about 15 miles south of Red River Falls, that branches off US Highway 120 and heads westward towards endless miles of open range dotted with a few farms and hundreds of thousands of acres of sheep and cattle ranches. Mason County is big and sparsely populated, save for the city of Red River Falls, and covers nearly 2,700 square miles of territory.\n\n I pulled my cruiser, a 2012 Ford Crown Victoria Police Interceptor, over to the shoulder of the two-lane blacktop. I glanced at the message that popped up on my Panasonic Quick Book laptop computer that was hard-mounted right above my radio console and the controls for my emergency lights and siren. The laptop definitely made for some cramped quarters, but the information that I could obtain instantly about drivers, licenses, wants and warrants, as well as general criminal background checks provided me with an invaluable tool. I can sacrifice a bit of comfort for essential information.\n\n Sure enough, the Amber Alert message was there, along with some additional information. The message reported the same vehicle, a 1998 Maroon Plymouth Voyager, license plate VDA 64L, registered to one William Raymond Jackson, D.O.B. 6/19/80, Caucasian, age 33, six feet, 2 inches tall, 220 pounds. Hmm. Big bastard! Brown hair, brown eyes, male-pattern baldness with a full beard that was at least as long as his own neck. Everybody loves \"Duck Dynasty\", right?\n\n I thought, 'Really? William Raymond Jackson? BILLY RAY???'\n\n Jeez! Even the guy's name made him sound like a criminal! Or a country singer, one of the two.\n\n At any rate, the guy had a rap sheet a mile long. Two drunk driving convictions, driving while\n\n barred (no license), simple assault, misdemeanor assault, aggravated assaul, fifth degree theft by\n\n check (Who the hell still writes checks?), 2nd degree theft, (Now that's more like it...), possession of stolen property, 4 counts of possession of a controlled substance, multiple citations for public intoxication, resisting arrest and FINALLY.....one charge of public urination, which occurred within 500 feet of a school or daycare center and resulted in mandatory registration as a sex offender for indecent exposure. Wow! This guy was a definitely one of society's finer sophisticates. No wonder he would never have custody of his child, which the alert said was a 7-year old girl. The subject currently had outstanding warrants issued within the last 72 hours for possession of a controlled substance, intent to deliver and unlawful manufacture of a controlled substance. Meth. Federal charges and no parole if convicted.\n\n Great, I thought, just what I needed to deal with at the end of my shift - a goddamned meth head. The Amber Alert also stated that the subject's last known residence was in Cherokee Flats, the far southeast corner of the state in Choctaw County and a two-hour drive or more at normal highway speed.\n\n The Amber Alert was issued at 1439. My watch currently read 1446.\n\n \"Dispatch, Twenty-Five,\" I radioed.\n\n \"Twenty-Five, go for dispatch,\" came the reply.\n\n \"Dispatch, what time was the abduction reported?\"\n\n \"Twenty-Five, time of call on this was 1432.\"\n\n Damn! Fourteen minutes ago! Considering the time it would take them to get out of Red River Falls, which was a sizable town of almost 30,000 people, he would quickly be approaching the intersection of Y-29 and US 120, if he were traveling close to the speed limit. If he was really hauling ass, he might even be south of me already.\n\n \"Good copy, dispatch.\"\n\n I punched the accelerator on the big Crown Vic and headed east on Y-29 toward US 120. The big V-8 engine roared to life and the posit traction rear wheels bore down on both gravel and pavement and left a nice pair of black strips on the roadway once both rear wheels finally found asphalt.\n\n I didn't hit my emergency lights or siren just yet. My cruiser is a fully marked car with emergency strobes in my grill, wig-wag headlights and tail lights and a full light bar on the roof. Some officers prefer a semi-marked or unmarked car. I don't. I like people to KNOW that I'm a law enforcement officer when they see me. And I absolutely detest the word cop!\n\n However, I did bring the cruiser up to good speed and I was soon hitting 100 mph. I figured that ought to close the distance fairly quickly between my perfectly honed cruiser and an aging mini-van.\n\n About 3 minutes later, I was near the intersection of Y-29 and US 120. I brought the cruiser to a halt at the intersection and looked both right and left. There was absolutely no traffic coming in either direction. US 120 south from this point was an almost entirely straight stretch of road for five miles before it slightly dog-legged east towards the bluffs along the river.\n\n I decided to turn right and follow 120 south where I looked for a place to stage and where I had good visibility of the highway for at least 2 to 3 miles, both north and south. If the kidnapper was going to take the child back to Cherokee Flats, this is where he would most likely be heading. US 120 is the old highway linking Cherokee Flats and Red River Falls. Interstate 60 is about 5 miles east of here and almost exclusively follows the general contours of the river.\n\n The most likely avenue of approach was going to be Hwy 120. The abductor probably knew that the State Patrol would be crawling all over the interstate. Drivers with their cell phones were almost certainly getting text messages by now sent out through the statewide Amber Alert system.\n\n I pulled in and parked my cruiser next to a long-abandoned gas station and service center on the east side of the road. Just to the south of my position was a car graveyard with several hundred cars rusting away as they baked under the heat of the sun in clear skies on the upper plains. The extra cars would help my cruiser blend in, to a certain degree, and wouldn't give away my position too quickly, even though I was partially hidden by the gas station. All of a sudden I was starting to regret my insistence on being assigned a fully marked cruiser.\n\n I glanced at my watch again. 1451. Nineteen minutes since the kidnapping. If my hunch was correct, they would be by nearly any minute now, provided they hadn't made a jailbreak run and provided they were even headed back to Cherokee Flats in the first place. The Amber Alert carried no information about the female accomplice reported to be accompanying the abductor. That worried me. It wouldn't be until later that I found out why.\n\n I immediately did a quick check of my equipment, concerned that I might be in a real scrape soon. There were six deputies currently on duty in the county at this time, plus six municipal officers currently patrolling in Red River Falls that I could call for backup if I needed. But that backup would definitely take a while to get here. It could easily become \"John Wayne time\" well before that. And I had absolutely no idea if any State Troopers were in the area or not. My gut told me they were most likely all over on the interstate.\n\n I reached down with my right hand and gently tapped my new sidearm, a shiny nickel-plated Smith and Wesson .40 caliber semi-automatic. I glanced to my right and made sure that my Mossberg 500 Persuader 12-gauge tactical shotgun was secured in its place across the plexi-glass barrier separating the front of the cruiser from the back seat. Secured in the trunk of the big Crown Vic was my Bushmaster .223 caliber AR-15 assault rifle, but the likelihood of that being much use in this situation was slim. That was just in case I found myself in deep shit with multiple armed subjects.\n\n My left hand also subconsciously thumbed at the X26C Taser holstered on the left side of my belt. More than likely, my sidearm would be the first line of defense, as I would have to be able to identify where the little girl was. I quickly checked my belt to make sure all four of my extra magazines were there. With twelve rounds already loaded, that gave me sixty rounds I could put down range fairly quickly.......if I had to. As always, I whispered a silent prayer that it wouldn't come to that.\n\n The corner of my right eye detected movement as I glanced up from the Quick Book. To the north there appeared a vehicle heading towards me. It was still about 2 miles away. I couldn't judge the speed initially, but it didn't appear to be traveling at an overly high rate of speed. US Highway 120 is normally 65 mph anyway. My Decatur Genesis radar gun started tracking them when they were about a mile away and registered only 71 mph. Speeding, yes, but just barely even enough to catch most officers' attention. Most of my colleagues might write a warning for that on a slow day, but won't write a ticket unless they clock you going at least ten miles an hour over the limit.\n\n When the vehicle was about a half mile away, the unmistakable form of an older Chrysler-brand mini-van began to take shape through the heat mirages radiating up from the hot August asphalt. Dark in appearance, the color became evident as it neared the abandoned gas station - maroon. My stomach sank and my heart kicked into high gear. It was show time.\n\n As the mini-van passed, the heavily bearded driver was clutching the steering wheel with both hands and his gaze was focused intently in the direction he was driving. It appeared that my attempts at camouflaging my cruiser in with the background of the salvage yard had worked.\n\n My palms started to sweat as I gripped the steering wheel and my breathing picked up in rate and intensity also. I shifted into gear and pulled out of the gas station and followed the mini-van south onto Hwy 120. I didn't throw on my emergency flashers just yet. I picked up speed to about 80 mph initially to close the distance. I backed off as I got close enough to the van to read the plates -- VDA 64L. Bingo!\n\n The van was in horrible condition. I had noticed that there were no hub caps on the driver's side of the vehicle and the body of the van had considerable rust over both wheel wells. The windshield was noticeably cracked across the entire width. Through the vents of my cruiser's air conditioning, I could smell the choking odor of burning motor oil. I knew that if the mini-van started to flee, it wouldn't be a very long chase before the van suffered catastrophic mechanical failure.\n\n I could see the driver in his door's rear view mirror as he clearly and unmistakably mouthed the words, \"Oh, shit!\" The sliding door windows and all of the rear windows were darkly tinted and I absolutely could not make out if any, or how many, individuals were in the vehicle with him. Tinted windows might look cool on your car, but they are a nightmare for law enforcement, especially at night.\n\n \"Dispatch, Seventeen-Twenty-Five!\" I shouted into my lapel mic.\n\n \"Twenty-Five, go ahead for dispatch,\" she replied calmly.\n\n \"Dispatch, I have eyes on the suspect's vehicle! Subject is southbound on US 120, just passing mile marker one-zero-five! License plate confirmed Victor, David, Adam, Six, Four Lincoln! Request all units proceed to my location now!\" I was getting so excited I was nearly out of breath and I hadn't really done anything yet.\n\n \"Good copy, Seventeen-Twenty-Five. Understand you have eyes on the subject. Stand by for further.\" Now all Liz had to do was call in the cavalry.\n\n \"Attention all units and personnel -- be advised Seventeen-Twenty-Five has located the subject and has eyes on at this time. Subject is traveling southbound on Highway 120 and is south of mile marker one-zero-five. Officer in pursuit requests immediate assistance.\" Even in a crisis, Liz's voice never cracked or changed in tone or pitch at all. She still sounds like a sex kitten, even when I'm amped up and feel like I'm about to shit my pants. I wondered if the Earps felt this way as they took their infamous walk to meet Ike Clanton and Curly Bill Brocius at the O.K. Corral.\n\n \"Seventeen-Twenty-Five from Seventeen-Twenty-One!\" It was Danny Larson, my friend and fellow Deputy.\n\n \"Yeah, go Danny,\" I radioed back. Personal names are generally prohibited in radio traffic, but I was too excited to care. Apparently, so was Danny.\n\n \"Pat, I'm hauling butt as fast as I can, just south of the GM dealership. If you can get 'em stopped soon, I'll be there in about twelve to fourteen minutes!\"\n\n Shit! Arenson Chevrolet was a large dealership on the south side of Red River Falls, part of the \"Auto Mile\" of numerous new and used car dealerships along that stretch. Even at full speed, he was still almost 20 miles away.\n\n \"Seventeen-Twenty-Five, this is State Patrol Two-One-Seven. I'm just exiting I-60 at marker seventy-seven.\"\n\n The mini-van and I were just passing mile marker 100. Danny was still twenty miles away and the Trooper was almost 30 miles away when you included the distance between the interstate and Highway 120. Other deputies and troopers were calling in as well, but none were closer. Red River Falls Police Department was sending three of their officers as well. But no matter how you looked at it, I was gonna be all alone for the next 10 minutes at least.\n\n All I could muster to say was, \"Good copy, 17-21 and 2-1-7.\"\n\n The driver of the mini-van was still looking nervously back and forth into the rear view mirror, keeping an eye on me and the road in front of him. I was still a good thirty feet behind the van. He knew I was there and it was just a matter of time. Somewhere in that van, there was a little seven year old girl who had been taken violently from her mother. But what scared me the most was not knowing who else was in there besides the driver. The van started slowing down, indicating he was possibly going to stop. I had no choice now.\n\n I reached down and clicked the button on the console and turned on my emergency flashers. I also turned the knob control on my Federal siren console and activated a long wail from the siren letting him know that I was on his ass.\n\n The mini-van pulled over to the side of the road but did not pull completely onto the wide shoulder. I was still a good 30 to 35 feet behind when the decrepit mini-van finally ground to a halt. Having half the vehicle on the shoulder and half on the pavement was an indication that he may have intentions to flee once I step out of the vehicle. I wasn't gonna give him the chance.\n\n I grabbed my Motorola radio's handset and keyed the button for my cruiser's public address system.\n\n \"Driver! Pull your vehicle completely off the road and onto the gravel shoulder! Pull your vehicle completely off the road now!\"\n\n I could see the driver take a deep breath, put the mini-van back in gear and he slowly inched forward and pulled his vehicle off to the shoulder.\n\n \"Driver! At this time, shut off the engine of your vehicle! Slowly remove the keys from the ignition and drop the keys out the driver's window and onto the ground!\"\n\n I saw the brake lights of the mini-van turn off and the driver dropped a set of keys out of his window and onto the ground. He was still watching me in the rear view mirror, but he was clearly mouthing instructions to someone else in the vehicle.\n\n With the van shut off, I slowly pulled my vehicle forward and slightly angled it, placing the front left wheel onto the pavement. This would allow me to still keep most of my cruiser between me and the mini-van when I exited the vehicle.\n\n I drew my Smith and Wesson and flipped the safety off, making sure that my finger stayed off the trigger to prevent an accidental discharge of the weapon. I slowly but methodically exited the cruiser and immediately drew my weapon down on the vehicle. My heart was pounding and I could hear the steady drum beat of my pulse in both ears. I gripped my sidearm with my right hand and used my left hand to operate the hand mike.\n\n \"Driver! At this time, you and all occupants of the vehicle must exit from the driver's side only! I say again, you and all occupants of the vehicle must exit from the driver's side only! As you are exiting, keep all hands where I can plainly see them! Once you have exited the vehicle, stand with your back towards me and with both hands in the air!\"\n\n The driver's door slowly opened and the bearded meth head slowly emerged. I could tell he was still talking with someone. Damn those fucking tinted windows! He stood with the door opened and turned to face away from me with both hands in the air. He wore a ragged charcoal wife-beater t-shirt, blue jeans that were so dirty-and grease stained that you would almost never guess their original color and a pair of tennis shoes with holes worn through both toe ends and heels.\n\n \"Driver! I say again! You and all occupants must exit from the driver's side......\"\n\n I never finished my command as the back window of the mini-van exploded from the shotgun blast. My windshield was immediately peppered with heavy buck shot from the 12-gauge and a significant chunk of my emergency light bar on the roof was blown to pieces, as well. I immediately felt a sharp pain in the side of my hip and a heavy \"slap to the right side of my rib cage as that big shotgun released its anger and fury. The air rushed from my lungs as though I had just gotten tackled by an entire NFL defensive line.",
        "I instinctively dropped to my knee to let my cruiser absorb most of the blasts as the unknown female inside the van racked and fired the shotgun again and again. Just around the front corner of my cruiser, I could see the bearded meth head clumsily reach in the front of his pants as he let out an intense howl as he bum rushed my car. He finally retrieved the giant Taurus .44 magnum revolver he had been groping for and aimed wildly in my direction as he ran. He tried firing the big hand cannon but it took him a second to realize he hadn't thumbed the safety to the off position. As he did so he stopped briefly. At the same moment the twelve-gauge had run out of ammo.\n\n I leaned left around my door and immediately released a quick double tap from my big .40 cal Smith and Wesson, catching the giant meth head center mass in his chest. \n\n To my horror, he kept coming toward me, raising the big Taurus and firing one of the massive slugs that slammed right into the breast plate of my GH Armor Systems protective ballistic vest. The impact of the slug literally threw me back eight feet and right onto my ass. Amazingly, I didn't drop my weapon and I released another quick double-tap that caught the bastard right in the throat and forehead, respectively. The bearded son of a bitch literally fell dead at the front of my cruiser, his head bouncing hard off the heavy push bumper mounted in front of the grill.\n\n I literally couldn't breathe, first from the shock of the shotgun blast and then the follow-up from the .44 slug that would have ended my life, if not for my top-of-the-line body armor.\n\n I struggled to get back to my feet quickly while furiously trying to will my lungs to draw in air. Just as I was drawing down on the mini-van, I realized I was staring down the barrel of that 12 gauge that was being wielded from the back seat of the mini-van by a scrawny, blonde, anorexic-looking meth-head woman who was screaming like a banshee through her rotten meth teeth. I still couldn't see the little seven year old girl.\n\n I had no choice but to fire.\n\n I let loose another double tap from my Smith and Wesson just as another blast spewed forth from her shotgun. The rear passenger side window of the van shattered and I had no idea if I hit anyone. The screaming had stopped.\n\n Suddenly, my entire right side felt like it was on fire and I could no longer use my right arm. My knees buckled and then gave out on me completely as I collapsed onto the pavement. A few seconds later, the taste of blood began to fill my mouth and I knew that I was critically injured.\n\n As I lay on the hot asphalt highway groping for my sidearm that I had dropped, I could see a bloody, scrawny arm reach down from the driver's seat of the van and grab the keys that lay on the ground there. The arm slowly picked up the keys and closed the door. After what seemed like minutes, the mini-van came to life and clumsily chugged back down the highway. By the time I finally retrieved my weapon, the van was gone.\n\n There didn't seem to be a part of me that didn't hurt. I didn't know where all I had been hit by the shotgun blasts. My body armor did the best it could, but it wasn't completely effective as one of the big shotgun pellets entered my chest wall just under my armpit.\n\n With my left hand, I was able to press and key the lapel mike from my portable radio.\n\n \"Dis......patch......seventeen......twenty-five. Officer......down. Need......assistance......and...ambulance......\"\n\n The last thing I remember was the approaching sound of distant sirens. And then everything faded to black.\n\n EIGHT DAYS LATER\n\n \"Patrick? Patrick.....\" I could hear a man's voice calling to me from somewhere in the darkness, but I had no idea who it was or where it was coming from. I struggled to find the source of the voice but couldn't find my way through the inky vacuum of nothingness. I was somewhere and, yet, nowhere at the same time. \n\n \"Patrick!\" the voice called again, but louder this time. \"Patrick, open your eyes!\"\n\n I started to see a faint glimmer of light. It was fuzzy and blurry at first but then began to shutter like a strobe light, only at a slower pace.\n\n \"That's it, Patrick! Keep on coming! That's it! That's it! Open your eyes, Patrick! Open 'em up!\"\n\n The light was bright, but not overly so. Soon my eyes were opened fully and the face of a man took shape. A good-looking man he was probably around my age with sandy blonde hair, blue eyes and a patch of hair just under his bottom lip. He was dressed in light blue medical scrubs and encumbered in a white cotton lab coat. The name embroidered in emerald thread above the right breast pocket read \"Dr. Nathan Slattery\".\n\n \"Yes! That's it! Welcome back, Patrick!\" The room erupted in applause and I realized that I was surrounded by a roomful of people.\n\n \"Patrick? Can you hear me okay?\" the doctor asked. How could I not? He was talking overly loud like he was trying to make a kindergartner comprehend theoretical physics.\n\n I nodded my head and tried to answer, but my throat was burning and I couldn't quite make the sound.\n\n \"It's okay, Patrick. Don't try to talk, just listen for now. The reason you're having trouble speaking is that you've had a breathing tube in your airway and have been on a mechanical ventilator for the last week. We just took the tube out and it can irritate your vocal cords and throat. You'll be sore for a few days and it will take a while for the swelling in your vocal cords to subside. You'll be hoarse for a day or two, as well,\" he explained. \"My name is Nate Slattery, Patrick. I was the trauma surgeon who operated on you. The rest of the people in the room right now are the team of doctors, nurses and other medical personnel who have been taking care of you.\"\n\n I looked around the room with my eyes and could only slightly turn my head to either side. My neck was stiff as hell.\n\n \"You're going to be stiff and sore for a while, Patrick,\" Dr Slattery went on. \"You've basically been lying in the same position for a week without moving. We're going to gradually work with you to help you get back on your feet, okay?\"\n\n I nodded slightly mouthed an \"okay\".\n\n \"Great! I'm going to let you get back to resting again, Patrick. We're going to keep a close eye on things for another 48 hours, especially your breathing. If you seem to struggle with the breathing some more, we may have to put you back on a ventilator again. We don't want to, so hopefully you'll continue to get stronger and breathe more on your own,\" Dr Slattery finished.\n\n As I looked to the right and left of my hospital bed I could see numerous heart monitors and IV pumps pushing fluids into my body. It looked as if I had tubes coming out of me everywhere but I was too tired to take much more in and my eye lids were quickly becoming heavier and heavier.\n\n \"You get some rest now, Patrick. I'll be back later in the day to check on you during my afternoon rounds. But before I go, I just want to say what a pleasure it has been to meet you and be able to help care for you. I know a hero when I see one, sir, and you are the real deal,\" he said with a wide smile.\n\n As he said those last words, the room once again filled with applause and then one by one, everyone exited my intensive care suite until there was only one nurse who busily fussed over each and every monitor and checked all of my IV solutions to make sure everything was running smoothly. And then I couldn't stay awake any longer and faded back to sleep.\n\n I must have slept the rest of the day and night again because I don't remember Dr Slattery checking on me again. When I awoke, there was a fairly bright ray of sunshine beaming into the room.\n\n A lone nurse, dressed in a royal blue set of scrubs, was intently checking all of my monitors and IVs again and making her notes on a handheld computer charting system of some sort. She caught me looking at her as she was charting my latest set of vitals.\n\n \"Good morning!\" she chimed with a gorgeous smile. She was young, probably in her early 20's and definitely no older than 25. Her pin straight, sandy hair was pulled back into a single pony tail. Her face was sort of round, with dimpled cheeks and set of very full lips. There wasn't a single tooth in her smile that was crooked or out of place.\n\n Her eyes seemed huge and were undoubtedly the most beautiful I had ever seen. The color was an amazing aquamarine; the kind you wouldn't think could be real. Overall, she was the very dream of the nurse you always fantasize about having if you were hurt or sick.\n\n She bent down towards me and leaned on the handrail of my hospital bed. The view down the front of her scrub shirt revealed some of the most spectacular cleavage I had ever seen. I hoped and prayed right there that it wasn't just the heavy pain medications I was on that were clouding my judgment and that her chest would look just as amazing if and when I ever was off the narcotics.\n\n \"How are you feeling?\" she asked with a caring smile.\n\n \"I dunno. Okay, I think,\" I croaked in a rusty voice. I examined the two IV lines that were running into my left hand and left arm.\n\n \"Well, at least you're talking again. How is your pain, on a scale of 1 to 10?\" she quizzed.\n\n I really didn't feel anything when she asked. But when I tried to move my right arm a shot of searing pain burst up through the entire limb and up into my neck to where I could literally feel the pain in my right ear.\n\n \"Fuck, that hurt!\" It was the most intense pain I had ever experienced. Immediately my eyes began to fill with tears and I was almost on the verge of crying from pain, which I hadn't done since I was a child.\n\n \"Here, let me put a pillow under your arm. That might help,\" she said as she grabbed a pillow from a linen cart just outside my ICU room. She gently lifted my right arm and I braced for another shot of searing pain. But she did it so gently, that I barely noticed a thing. It seemed as though her very touch could alleviate pain. She ever so gently took my right hand in hers and asked, \"Can you wiggle your fingers for me?\"\n\n I followed her command and moved my fingers somewhat. The simple task caused pain throughout my arm, but it was tolerable.\n\n \"Good! That's definitely an encouraging sign!\"\n\n She lay my hand gently back on the pillow and I was slightly disappointed that she had let go. The very touch of her hand was exquisite and incredibly comforting.\n\n She returned to my bedside and once again leaned in towards me. Again the sight of her beautiful cleavage was good medicine in itself. But even in my near hallucinogenic state, I mustered the will to not stare too long.\n\n \"Doctor Slattery says that he expects your right arm to heal completely. Doctor Sloan was the surgeon who operated on that and Doctor Slattery was very impressed with how well it turned out,\" my nurse explained.\n\n \"What....happened?\" I creaked. Her face lost all expression.\n\n \"Doctor Slattery said that you were hit by at least two shotgun blasts. They pulled six large lead pellets out of your right arm, one from your right lung and four more pellets from your right hip and thigh. One of the pellets penetrated your right lung so far that it nicked your pulmonary artery. One of them in your leg punctured your right femoral artery. Pretty much everyone is amazed that you're still alive, Mr. Quinn,\" she finished.\n\n \"Wow...\" was all I had the energy to whisper.\n\n She placed her hand gently on my left bicep and squeezed ever so slightly. \"You're a real fighter, Mr. Quinn. And you're a true hero -- especially to me. The whole state is talking about you and you even made national news,\" she said with that angelic smile.\n\n I was intrigued to know what all happened. I had no immediate recollection of the event itself. All I knew is that I was hurt and hurt bad. But I was too weak at this point to press for much more.\n\n \"I'm going to go finish my charting,\" she said. \"But I will be right outside your room. I have two patients that I'm taking care of and your rooms are side by side. So I promise I will never be too far away. In the meantime,\" she said as she grabbed what looked like a large TV remote, \"you can press the large red button on here if you need anything -- anything at all. And,\" she continued, \"if you feel up to it, you're more than welcome to watch some TV. The TV controls are on the same pad as your nurse call button. But try not to stay awake too long. You need rest and lots of it. You still have a long way to go.\"\n\n I nodded my understanding as my throat was still too sore to do much talking. Again, she leaned in and gave my left arm a gentle and comforting caress. As I looked at her angelic face and deep aquamarine eyes, I could see tears forming.\n\n \"You have no idea how much it means for me to be able to take care of you, Mr. Quinn. Get some rest. And call if you need anything, anything at all.\" She opened the sliding door to my ICU suite and left for her desk.\n\n I hadn't even asked her name. Fortunately, I saw a large dry erase board near the foot of my bed that listed today's date, the room I was in and the name of my physician and my nurse. Her name was Shannon. Nurse Shannon Sullivan. Irish, just like me. How lucky could I get!\n\n I was tired and groggy, but not quite sleepy. I felt alone, incredibly alone and I missed Shannon already, even though she was only a few feet away. I looked down at the remote and decided to flip on the TV for a bit. The clock in my room told me that it was almost twelve, so I decided to watch a bit of the noon news and see what was happening in the world.\n\n The television was already set to one of the local channels in Red River Falls and the end credits for a soap opera were rolling and the news was next.\n\n The noon news started and a very young male and female anchor sat at a black glossy desk. Our local station, KRFV channel 5, was a typical entry level broadcast job. Most of the anchors and reporters were straight out of college and didn't stick around long. Many of them yearned for better jobs, once they got done cutting their teeth in Red River Falls. A number of KRFV alumni could be seen at TV stations in the Twin Cities, Omaha, Kansas City, Denver, Cheyenne, Billings, Des Moines and many other larger cities throughout the upper Midwest, Great Plains and Rocky Mountain states.\n\n Female anchor: \"Good day and welcome to Channel 5 News at Noon. I'm Heather Gilchrist.\"\n\n Male anchor: \"And I'm Dave Conroy. We begin our broadcast with some exciting news coming out of Holy Family Regional Medical Center in Red River Falls. Doctors and hospital staff say that the local law enforcement officer who was involved in bringing an attempted kidnapping to a halt has successfully come out of his medically-induced coma and is now awake, talking and breathing on his own.\"\n\n Female anchor: \"You'll remember that Mason County Deputy Sheriff Sean Patrick Quinn was the first officer to respond to the Amber Alert over one week ago when he spotted the van that was used in the attempted abduction of seven year old Bridget Sullivan.\" The television cut away and started showing video of the crime scene, including my police cruiser, which looked like it had been driven through every single level of Hell. \"Deputy Quinn pulled over the mini-van and was immediately ambushed by the driver, 33 year old William Raymond Jackson, and his female accomplice, 31 year old Kimberly Amber Trenton. Both suspects were from Cherokee Flats.\"\n\n Male anchor: \"Jackson was Sullivan's non-custodial father. Sullivan's mother has had a restraining order against Jackson and a judge permanently terminated his parental rights nearly six years ago. Authorities believe that Jackson, who was recently indicted for a series of federal drug charges, may have kidnapped Sullivan to use her as a shield as he and Trenton attempted to escape justice and flee to Mexico.\"\n\n Female anchor: \"As Deputy Quinn pulled the vehicle over, he was ambushed by both suspects and shot several times with a 12-gauge shotgun and a large-caliber handgun. Quinn was able to return fire, killing Jackson at the scene, and mortally wounding Trenton. Trenton attempted to flee the scene, but was found unconscious behind the wheel of the mini-van, which came to rest in a shallow ditch alongside US Highway 120 about a mile from the shooting. The van was located by a State Trooper who had been called in to assist. Trenton had been shot twice in the abdomen by Deputy Quinn. Attempts to revive Trenton were unsuccessful and she was declared dead at the scene.\"\n\n Male anchor: \"Bridget Sullivan was found with her arms and legs duct-taped and lying on the floor of the mini-van between the front and middle seats. She was unharmed through it all and was eventually released back to her mother, Shannon Sullivan, who works as a nurse at Holy Family. A Red River Falls Fire Department ambulance, which was returning from a patient transfer to the Twin Cities, was in the area at the time of the incident and paramedics were able to render emergency care, which doctors at Holy Family credit with saving Quinn's life.\" The video ended and the camera returned to the two anchors in the studio.\n\n Female anchor: \"All week long family, supporters and friends of Deputy Quinn have held vigil at Holy Family, awaiting good news, which finally came today. Doctors at Holy Family have upgraded Deputy Quinn's condition to critical but stable, meaning he is still under the highest level of care but continues to make improvements. News Channel 5 will bring you the latest updates in this story as they occur.\"\n\n The news continued with a local story about a bank teller in Red River Falls accused of embezzlement. I didn't really care and thumbed the button to click off the TV. The images of the scene of the shooting played over in my mind and my memory of the incident began flooding back into my brain. I was amazed at the video images of the large pool of blood -- my blood -- on the ground next to the open driver's door of my cruiser. My once proud vehicle was so shot to pieces from the repeated close range blasts of that shotgun that it almost looked like it had been driven high speed through a cloud of dragon flies.\n\n There was no way to explain why I was still here. I almost felt guilty about it, knowing that there were people in the world who had succumbed to less severe injuries. All I could do was try to be thankful that I had survived for my wife and boys. But most of all, I thanked God that the little girl, Bridget, had made it out alive. I had shot wildly and blindly. But it appeared that my aim had been true and I had somehow managed to neutralize both suspects.\n\n It suddenly dawned on me that since waking up the day before, I had yet to see my wife Clarissa or my two boys, Nicholas and Jacob.\n\n Reaching down, I thumbed the nurse call button. Shannon appeared at my side instantly, her ample cleavage bounding as she rushed into the room.\n\n \"Are you okay? Is something wrong or do you need something?\" she asked excitedly.\n\n In a very raspy voice I managed, \"Where....is my... family?\"\n\n The excited and worried look on Shannon's face turned to one of reservation and concern. \n\n \"Well,\" she started, \"Mrs. Quinn decided that for now you need your rest and she will come see you when you are feeling more up to having visitors...\" she said kind of nervously.\n\n \"I....don't understand...\" I said, searching for something to convey my bewilderment. How in the world could my wife not be there at my side when I needed her most? Suddenly, I felt a new pain -- one of anger, hurt and resentment.\n\n Shannon again took my left hand and held it tightly with both of hers. \"I...I think Mrs. Quinn just wants you to heal and get better.\" I detected a lie, not a vicious one, but one of trying to compensate for my wife's inaction and distance. \"And besides,\" she went on, \"I don't think she wanted your boys to see you like this. I think she wants them to see you when you're doing better,\" she finished with a little more hope in her voice.",
        "I gave Shannon's hands a slight squeeze with my left hand and managed to give her a slight smile, even though I know she could see the hurt and disappointment. I looked away, but not before seeing the sympathetic and disappointed look on her own face.\n\n \"But if it makes you feel better,\" she said hopefully, \"I just received word from Doctor Slattery. As long as your latest labs come back okay this afternoon, you will be moved out of intensive care and to a room on the Med/Surg floor!\"\n\n I mustered a smile again and said, \"Thank...you.\"\n\n \"Get some rest, Mr. Quinn. I'll be right here if you need anything.\" She turned to go, but I continued to hold on to her hand. For one, it just felt good. And two, I wanted to tell her something. \"Yes, Mr. Quinn? Is there something else?\"\n\n \"Don't....call me...Mister Quinn. Call me....Patrick. Please,\" I managed with no small effort.\n\n Shannon gave me another heartwarming smile, squeezed my hand again and said, \"Okay, Patrick. Get some rest now.\"\n\n My blood work that afternoon came back showing steady improvement. I still had a couple of infections to fight off, one in my right leg and another in my right arm. But so far, I was still able to remain free of pneumonia, which was a big fear considering my lung injuries.\n\n I still had a chest tube in my right lung, which caused no small amount of discomfort. But the thing that really had me upset the most was the damned urinary catheter they had shoved up my dick. There was just something really humiliating and emasculating about it, although I can't really say why. I guess there are just some things a man needs to be able to do for himself. And one of those things is being able to hold his own dick to take a piss.\n\n Shannon told me that I wouldn't be moved out of intensive care until early the next morning, which she said she was happy about because she would get to take care of me for a few hours longer. I would come to find out that Shannon fought tooth-and-nail for the right to be able to take care of me and insisted on working extra shifts so she could be there for me every day. In total, the surgery that I had after I was brought to the hospital lasted for 16 hours and involved a total of 36 personnel, including 9 doctors who assisted Doctor Slattery.\n\n Shannon's nursing shift ended that night at 7 pm. She knew that I would most likely be in another room by the time she arrived for her next shift the following morning as they would probably try to move me before breakfast. Shannon entered my ICU suite at six o'clock that evening and brought in a small cart with a bowl of soapy water and numerous wash cloths and towels.\n\n \"Since you're feeling a little better, I thought I would send you off to your new room with a bath and a fresh set of linens,\" she said.\n\n I had gained a little more strength throughout the day and my throat didn't hurt quite so much, mostly because Shannon had been allowing me to drink some water and juice through a straw instead of receiving all of my fluids through my IVs.\n\n \"You mean, like a sponge bath or something?\" I asked.\n\n \"More or less,\" she replied. \"We don't really use sponges, just rags and towels. I promise to be careful around the bandages to your right arm and leg, though, and especially around your chest tube. Depending on how your chest x-ray looks tomorrow, that might get to come out, too!\"\n\n Shannon was about to help me take off the light gown covering my upper body, as well as the sheet that was covering me from the waist down. It made me kind of nervous because it would pretty much expose me in all of my not-so-much glory and I was extremely self-conscious of the catheter - and also because of the fact that I certainly didn't have the biggest dick in the world, either. I wasn't small by any means, probably on the high end of average.\n\n I also had a pair of testicles that I was extremely self-conscious of, as well. Not because they were small and shriveled, either, quite the contrary. My balls were huge and they damned near hung halfway between my crotch and my knees. I guess I had always been self-conscious of them because the first girl I ever showed my package to was Kathy Steenson back in high school. Kathy wanted the privilege of being the first girl to ever give me a blow job. Instead of getting to know the pleasures of blowing a nut in a girl's mouth for the first time, Kathy was grossed out by what she described as my \"hairy, freaky old man balls\". Needless to say, Kathy Steenson didn't want to date me anymore after that so it wasn't until I got to college before I got my first blowjob. And I insisted on that being in the dark to avoid the shame and disappointment of a similar experience.\n\n And I really liked Shannon and didn't want to embarrass myself in front of her, either.\n\n \"Uh, Shannon?\"\n\n \"Yes, Patrick?\" she replied while prepping for my bath. \n\n \"Do you, um, have a towel I could use to maybe.....cover up with a bit?\"\n\n Shannon stopped for a moment before saying, \"Well, Patrick, it is important that I do my very best to try and get you nice and clean. So I'm going to need to wash everything. You're doing such a great job of fighting off those infections and we don't want you to get hit with another bug while you're on the mend,\" she explained.\n\n \"Oh, I guess you're right,\" I said. \"I suppose it isn't like you haven't seen everything already anyway, either,\" I replied sheepishly.\n\n Shannon said nothing and turned away briefly, but not before I caught her smiling to herself knowingly. But she remained professional anyway.\n\n Shannon slipped the thin gown off me and pulled the bed sheet above my waist as she was going to start the bath from my head and work her way down. She had put a \"Do Not Enter\" sign on the sliding door and had closed the interior curtains around my bed. She soaked one of the rags in the warm, soapy water and started around my left ear and neck and proceeded to wipe down my upper body. The warm, soapy water had a soothing effect and I began to feel very refreshed. She helped me sit up for the first time in over a week and gently washed my back. She was very tender and caring, particularly when washing around my incision sites, wounds and my chest tube. It took her about 15 minutes to finish the first half of the bath.\n\n \"Okay now, Patrick. We're finished with your upper body. Now we're going to wash from the waist down. I'll start with your feet.\"\n\n She took the warm, soapy cloth and washed the bottom of my feet, working the rag in between each of my toes. Shannon seemed to have a slight smile of contentment on her face. Not a smile of prurience, but one of a dedicated nurse who truly enjoyed taking care of her patients.\n\n Shannon worked her way up my legs, washing and massaging my leg muscles as she did. I didn't realize how stiff and cramped I was all over. After all, I had been lying nearly motionless in the same bed for over a week prior to yesterday morning.\n\n She eventually worked her way up to my thighs, again being careful of the gunshot wounds to my right leg. But it was when she gently started to wash my groin that things got interesting. Shannon lifted each leg up and washed right up to the bottom of my buttocks. She gently washed my groin and then very tenderly lifted up my scrotum and testicles. The sensation of her washing my private area, especially with a very soft and wet cloth, was exquisite. Without warning, Mother Nature started taking her effect and I could feel the rapid onset of an erection.\n\n Normally, it wouldn't be a huge deal. But when you have a rubber hose the size of a pencil running into your dick, hardons become a problem. It was uncomfortable and I was afraid it was going to hurt soon.\n\n \"Um, Shannon, I think I need you to stop,\" I said. I started to tense up all over.\n\n \"It's okay, Patrick. I'm just about finished.\"\n\n Fortunately, in a way, the discomfort from the catheter prevented me from becoming fully erect. But when Shannon took my semi-erect penis in her hand and began to gingerly wash me, I had to try very hard to stifle a sigh of sexual longing.\n\n \"There now,\" Shannon said with satisfaction. \"You're all nice and squeaky clean!\"\n\n Shannon retrieved a nursing assistant named Bonnie to come in and help her change the sheets, which is no easy task when there is still someone lying in the bed. When they were finished, Shannon's shift was nearly over. She would give report to her replacement and then she would be free to head home to her daughter. Shannon returned after her report to say goodbye and good night. Again, there were fresh tears in her eyes.\n\n \"I want you to know how special it has been for me to be able to help take care of you, Patrick. Having this opportunity meant a lot to me. I feel like I owe you so much for getting my daughter back to me,\" she said on the verge of crying.\n\n \"Thank you for taking good care of me,\" I replied hoarsely.\n\n \"I'll be down to check on you in your new room to make sure they are taking good care of you,\" she went on, trying to hide her tears. \"I gotta make sure my friends down on Med/Surg are keeping a close watch on you.\"\n\n \"I'm sure they will,\" I replied.\n\n \"Good night, Patrick. Rest well.\" Shannon turned, opened the curtains again and then the sliding glass door to my suite. She paused at the door and turned to give me one last look, gave me another beautiful smile, although sadder this time, and then left the intensive care unit.\n\n I was awakened at 0600 when several nurses arrived, along with my overnight nurse Tina, who then took me to my new room on the Med/Surg floor, which stands for \"medical/surgical\". It is the floors that patients are often admitted to who have medical illnesses they are being treated for or who are recovering from surgery.\n\n My nurse on this floor was actually a male named Brian who was cool as hell. He was aided by a nursing assistant named Cherie who carried out a lot of the routine check ups such as my vital signs and temperature.\n\n About 10 o'clock that morning, my wife Clarissa finally showed up to visit me, although she did not bring the boys.\n\n I told her how great it was to see her and how much I missed her. I asked her why she hadn't been up to see me before now.\n\n \"What do you mean?\" she asked, rather angrily. \"I spent most of the first week up there! I waited forever while you were in surgery for over 16 hours! And you think I've been ignoring you?\"\n\n \"Well, no,\" I said. \"But I woke up two days ago and haven't seen you until now. I was just kind of getting lonely and wondering where you were. That's all.\"\n\n \"No one has been ignoring you, Patrick. And I sure as hell wasn't about to let the boys come up here and see you while you were in this condition,\" Clarissa said as she tried to make herself more comfortable. \"Besides, you were in the intensive care unit. The boys and I have all been fighting allergies and stuff and I didn't want to take a chance that we might be coming down with something.\"\n\n I was still too weak to put up much of an argument. We spent an hour with the docs visiting about what my prognosis was. Dr Slattery and Dr Morganstern, the hospitalist who would be overseeing my care from now on, talked with my wife and I about the future of my care and how soon I might be able to go home. The good news was that I was making progress and Dr Morganstern thought I might be able to leave in about another 4 to 6 weeks. The bad news was, at least to me, is that I would be stuck in a hospital for over another month. It felt like a prison sentence.\n\n After about two hours, Clarissa said she needed to be getting back home and would be back to see me tomorrow.\n\n \"Really? You're leaving already? You haven't been here that long,\" I pleaded.\n\n \"Well, Patrick, I've been here for over two hours. I've gotta head home, clean house and get ready for the boys to come home from school. They're gonna be starving. Plus, I have to feed the horses, the calves and the rest of the animals. I can't stay here forever,\" she said as she put on her jacket.\n\n I couldn't understand why Clarissa would be acting so distant and reserved. I figured she would be ecstatic to see her husband doing better. Instead, she acted more like a regular visitor instead of my wife.\n\n \"Yeah, okay,\" I said, defeated. \"Be sure to tell the boys that I love them and can't wait to see them. Maybe you can bring them by tomorrow? I don't think I can handle not seeing them for one more day.\"\n\n \"Well, you've already gone well over a week without seeing them. One more day or two isn't going to hurt. We've got to think about them and how this is all affecting them, too, you know. I'll see you tomorrow.\" Clarissa walked over, gave me a quick kiss on the forehead and left the room. And just like that, she was gone.\n\n I started breathing quicker, my chest swelled with pain, and I was afraid I was going to burst out in hysterical crying right there. My heart rate shot up and soon my nurse Brian was in the room to see if I was okay.\n\n \"Yeah, yeah,\" I assured him. \"I'm okay. Just really missing my kids right now,\" I told him, trying to hide being suddenly and overwhelmingly pissed at my wife.\n\n I couldn't believe that Clarissa was so cold and distant. I know that if she had been sick or injured, wild horses wouldn't have been able to drag me from her side. She and I have had our ups and down over the years, particularly ever since I got hired at the Sheriff's Department a couple of years ago. The move for me from Red River Falls PD to the Sheriff's Department had been a good one for us since it allowed us to move from Red River Falls out into the county where we purchased a small ten acre ranchette.\n\n Clarissa had been diagnosed with a low testosterone disorder, which greatly affected our intimacy. She could have chosen to take her doctor's advice and accept a prescription for a medication which would almost certainly take care of the problem. Instead, my wife always opted for herbal remedies that she insisted were healthier for her but did little or nothing to help her condition. After a great many arguments on the subject, I decided that any sex with Clarissa, no matter how infrequent, was as good as it was going to get for me. It wasn't worth me risking my boys growing up in two households to get a divorce. So we just continued on, Clarissa doing her thing and me wallowing in my celibacy. I don't even need all of the fingers on one hand to count the number of times we have had sex in the last year.\n\n The only bright spot occurred almost two years ago, shortly after I became a deputy. Things were pretty rough between me and Clarissa. My mother-in-law Caroline was going through a rough patch herself with her third divorce at the time. While helping me out at our acreage one day, Caroline sensed an opportunity and proceeded to give me the most amazing blow job I had ever received. It was the kind of blow job where my testicles ached for a few hours afterward due to the ferocity with which I had blown my load in my mother-in-law's mouth! Things only escalated from there over the next month or so when I helped Caroline out at her small acreage that she was preparing to leave following the divorce. Whether it was in the horse stalls in the barn, her living room, her enormous king size bed -- Caroline and I fucked every which way you can imagine and then some. It was the most amazing and fulfilling series of sexual encounters in my life.\n\n And as quick as the trysts had started, they ended just as fast. Caroline met a man and eventually moved to the Twin Cities and we saw her less and less. I still think about her often, though, and the mind movies of our sexual encounters still produce an instant and raging erection. On the extremely rare occasions when Clarissa and I do actually have sex, I'm almost ashamed to say that I spend most of the session thinking about her mother. Almost ashamed.\n\n The whole affair caused me a small amount of guilt. I'm not that big of a pig that I felt no remorse over stepping out on my marriage briefly. But that guilt has steadily faded over the last year each time I have been rejected and refused by my own wife. And the guilt has been replaced by an increasing sense of anger, jealousy and confusion. I always told myself that if I didn't know better, I would think she was having an affair.\n\n I didn't think it was possible because Clarissa was a stay-at-home Mom. Until this year, she had been homeschooling both of our boys. But now that both were getting older, they decided they would like to be with their friends in public school. I detest the nearly 1 hour bus ride they endure daily each way to get to school in Red River Falls, but the boys seem happy. And that's what is most important to me and their Mom.\n\n The following day Brian gave me the excellent news that he would be in shortly to remove my urinary catheter. I was almost ecstatic. It didn't even bother me that he was going to have to hold my penis with his own hands to do it, either. I was just glad that they were going to take that damned tube out of my dick!\n\n Clarissa didn't show up that day until almost supper time. I tried calling the house several times but got no answer. But when she did arrive, she had the best medicine - she had brought the boys with her.\n\n Nick and Jake both shouted \"Dad!\" and rushed to my side. Clarissa admonished and cautioned them to be careful as I still had injuries that were slowly healing. The boys both hugged me on the left side of my body and were very careful about the remaining IV in my left arm and my chest tube. With luck, the chest tube would be getting removed the following day.\n\n The boys talked pretty much endlessly for two hours straight, telling me all about their friends, school, sports and what they thought of my whole experience. They told me that all of their friends thought I was a hero and thought it was so cool that I had shot and killed two very bad people. That got to me a bit. Even though I was very glad that little Bridget was okay, I still hadn't been able to wrap my head around the fact that I had taken the lives of two people. Even still, it made me happy to know that my boys were proud of me. I couldn't help but be glad to sense that my experience had even given my sons a little bit of gravitas of their own, especially for Nick who was my oldest and who was now navigating the social minefields inherent in junior high school - especially since he was basically a new kid in school, despite living in or near Red River Falls his entire life. Even though homeschooling is becoming more and more prevalent, especially in Mason County, there is still a bit of a social stigma to being a home school kid. Anything to help deflect the attention of a bully away from my kids was a good thing. And if the cause of that was me shit canning a couple of meth heads, then so be it.\n\n At precisely 7 pm Clarissa said, \"Okay, boys. It's time to head home. Tell Dad good night and you'll see him again soon.\" The boys both whined their displeasure and asked if they could stay a bit longer, to which my wife adamantly said, \"No! Grab your stuff so we can go. It's still a school night and you both have homework.\"\n\n I hugged both boys tightly with my one good arm and told them to come see me soon. Before she left Clarissa turned to me and said, \"Do you need anything before I come back again?\"\n\n \"Well,\" I said with a slight smirk on my face, \"they did take my catheter out today. Maybe you could sneak back in later after visiting hours and we can fool around a bit.\"\n\n \"Oh, God, you're pathetic,\" she said rather loud and with some hidden contempt. \"Is that all you ever think about? Even when you're near death? The answer is no, I won't be coming back later tonight. But if you really need something, I can bring it tomorrow or whenever.\"\n\n \"Okay, okay. Jeez. Keep your voice down.\" I figured everyone out in the hall probably heard her. \"If you want to bring me something then get me some decent toothpaste and a toothbrush. All these pain meds make me sleep so much that my mouth tastes like a urinal and I have constant morning breath.\"",
        "\"Wow. Thanks for the disgusting play-by-play. I'll stop by the supermarket on the way home and bring you one tomorrow. For now,\" she said leaning over, \"I'll say good night with a kiss on your forehead.\"\n\n I tried to maneuver for a real kiss, but I wasn't fast enough lying there in my bed. And just like that, she was gone.\n\n I didn't have much time for self pity, thank God, because no sooner had Clarissa and the boys left when I was greeted with a surprise.\n\n \"Hey, stranger! You're looking better already!\" Shannon appeared in my doorway. Boy, was she a sight for some ridiculously sore eyes!\n\n \"Hi, there,\" I said. \"To what do I owe the surprise?\"\n\n \"I told you that I was gonna come back and check on you regularly. I gotta make sure my buddy Brian is taking good care of my hero!\" she said with her million dollar smile.\n\n I couldn't help but become sheepish. \"Ah, I'm no hero,\" was all I could come up with.\n\n \"Um, hello!\" Shannon retorted as she put down her backpack and plopped into the chair next to my bed. \"You're only the man who saved my daughter's life and single-handedly made sure that no harm will ever come to her again.\"\n\n Suddenly, Brian appeared in the doorway looking worried and nervous. \"Everything alright?\" he asked as he made a beeline towards my heart monitor. \"Your heart rate just went from about 70 to 130 just a minute ago.\"\n\n I could feel my face turn bright red and I could barely catch my breath. Shannon just looked away from me, blushing herself, and smiling. Brian just stood there, trying to make sense of a suddenly awkward moment.\n\n \"Uh,\" he muttered, \"I guess it, uh, looks like, um, everything is okay. So, I guess I'll, uh, head back to my station. Hit the button if you, uh, need anything, okay?\"\n\n I nodded and Brian sheepishly made his exit from my room. Shannon still smiled and looked down at the floor while I groped with something to say that would hopefully not sound too stupid.\n\n \"Sorry,\" I nearly whispered from embarrassment. \"I guess you caught me off guard when you showed up like that. Must've startled me or something,\" I said trying to find some confidence.\n\n \"Right, right,\" Shannon said nodding while trying to find her own courage to look me in the face again. \"I can be pretty scary sometimes,\" she said giggling. \n\n God, she was cute when she laughed! I was totally busted and my obvious attraction to her was now completely exposed. And she knew it. Even the appearance of my own wife couldn't so much as cause my heart to skip a beat. But when Shannon showed up, my heart started racing like a Thoroughbred.\n\n \"So listen,\" Shannon said, forcing the conversation along. \"I have a favor to ask.\"\n\n \"Yeah?\" I was all ears.\n\n \"I was wondering if it would be all right to bring my little girl by some evening to say hello. She has been dying to meet her hero -- her words, not mine -- and I promised that I would talk to you to see if you would mind having a little visitor,\" she asked with anticipation.\n\n I was dumbfounded by her even asking and blurted out, \"Of, course! I would love to see her. I've been dying to meet her and get my own eyes on her to make sure she is okay. The last couple of nights since I've been out of intensive care I keep having these weird, freaky nightmares and each of them involve something bad happening to your daughter.\"\n\n \"Oh, my God!\" Shannon said putting her hand on my shoulder. \"That's awful! I'm sure you probably have post-traumatic stress from all of this. And the narcotic pain meds you've been getting can make it worse.\"\n\n It was true. Since I woke up a few days ago, my sleep has been torturous with the repeated images of everything that happened along that highway. I was starting to relive it in my dreams and it was consuming my thoughts a lot of the time that I was awake, especially when I was alone.\n\n We visited for a few more minutes before Shannon had to get home to her daughter. She said she would check on me again after her shift tomorrow and that she would bring Bridget by soon. I told her I would enjoy that very much and eagerly looked forward to the visit.\n\n The next week went by a little quicker. They took me to the surgical suite to remove the chest tube that had been sticking out of the right side of my rib cage. The side of my chest was still quite sore, but it felt great not to have that giant tube tying me down like some sort of umbilical cord.\n\n My day nurse, Brian, and his nurse assistant, Cherie, were getting me out of bed and actually taking me for 20 to 30 minute walks up and down the hallway of my hospital floor. I still had difficulty moving my right arm but was at least able to bear weight on the right leg and walk slowly. I was getting better at moving my fingers on my right hand and by the end of the week had actually been able to drink a small glass of juice using my right hand. A big accomplishment, considering that my right arm had taken the brunt of two shotgun blasts.\n\n Clarissa and the boys had visited several times, but never for two days in a row. It was really starting to piss me off. I could sense that the boys were having trouble with it, too, and repeatedly asked their mom if they could come see me every day. Clarissa always responded, \"we'll see\" but had yet to show two days in a row.\n\n Shannon had several days off from work, but on that Sunday evening at the end of my 3rd week in the hospital, she had surprised me with a special visitor.\n\n \"Knock, knock,\" I heard as they entered the room. I had been watching a news program on the TV at the time and looked over at the door to see Shannon and her daughter standing there. The sight of the two of them together was a sight to behold and the first thought that came to mind was that they could easily win a mother-daughter look-alike contest.\n\n \"Well, hello there!\" I said, smiling and doing my best to seem charming.\n\n \"Bridget? This is Patrick. He's the man who helped you the day you were taken from me,\" Shannon explained.\n\n I expected Bridget to be a shell-shocked little girl who was still struggling greatly to come to grips with a terrifying and horrifying experience. What I found instead was an incredibly well-adjusted, intelligent and precocious little young lady.\n\n \"Hi, Patrick! It is very nice to meet you!\" she said with a huge smile. I sat up on the edge of my bed to make myself a little more presentable.\n\n \"Well, hello Bridget. It is very, very nice to meet you, too,\" I said returning her smile. She was very bubbly and personable, even from the beginning and not at all reserved like you would expect most little girls to naturally be around strangers.\n\n \"I have something for you,\" Bridget said brightly. \"I made a picture for you. Can I give it to you?\"\n\n \"Oh, my goodness! I can't wait to see it!\"\n\n Bridget presented me with a colorful drawing of me with my green sheriff cowboy hat and a big star badge on the shirt. In the drawing I was holding hands with a little girl wearing the same color of shirt and pants as Bridget.\n\n \"It's a picture of you and me, Patrick. You can put it on the wall in here so you can see it all the time,\" she said proudly.\n\n \"Absolutely! I want it to be the first thing I see when I wake up in the morning. Thank you very, very much Bridget. You are a very talented artist,\" I said overly complimentary. Bridget soaked it up.\n\n We spent the next half-hour or so visiting before my weekend nurse, Tonya, came in to inform me that it was time for my evening walk. Shannon was about to get Bridget and herself ready to go home for the night, but I spoke up before they could go.\n\n \"Bridget? It is time for me to get my exercise in for tonight. Usually, I use a cane or a walker to help me walk. But I think I can walk pretty well if I have someone's hand to hold. Would you like to take me for a walk tonight?\"\n\n Bridget literally beamed ear to ear. \"Sure, Patrick! I'll take you for a walk and I won't let you fall down even once!\" she exclaimed with determination. \n\n \"Whew!\" I said, pretending to wipe my brow. \"That's a big load off my mind! Now I won't be quite so nervous.\"\n\n Tonya led us out into the hallway. I kept my left hand on the rail of the hallway and held Bridget's hand with my right.\n\n \"Don't hold Patrick's hand too tight, Bridget. That's the arm that got hurt very badly,\" Shannon cautioned her eager daughter.\n\n \"I won't, Mom. I promise,\" came the chipper reply.\n\n We walked and visited for about 20 minutes or so, making several trips up and down the hall. Bridget looked as pleased as can be to be helping a grownup, as she put it. She felt very important. I couldn't get over how well-adjusted she seemed to be and wondered where the natural courage and strength came from in someone so young.\n\n Shannon either walked behind us at times or stopped to visit with friends and colleagues on the Med/Surg floor. She kept a steady eye on us the entire time, occasionally smiling at me. I figured she was a tiger mom keeping close watch on her cub, but I couldn't also help but sense that she was keeping a close eye on me and my nurse, Tonya, to make sure I was being taken care of, too. I surmised that once you were a patient of any nurse, you were always looked upon as that nurse's patient, no matter the time or place. Kind of like the way your favorite grade school teacher is always going to be your teacher, no matter what.\n\n I was pretty wiped out by the end of our walk, but even my nurse Tonya was impressed by how well I did. I gave all the credit for my progress to Bridget, which she eagerly accepted. I returned to my room tired, but grateful to have had the company. As Tonya helped me back into my bed, I wished that the walk could have lasted a little longer.\n\n \"Well, pumpkin,\" Shannon said, running her fingers through Bridget's hair, \"we better get back home and let Patrick get some rest. You did a very good job helping him tonight. I'm very proud of you,\" she said, smiling at me.\n\n \"I'll come back another time and walk with you again, Patrick, and help you get better some more,\" Bridget said very seriously.\n\n \"That would be fantastic. I can't wait,\" I replied. And with that, Bridget proceeded to give me the biggest and tightest hug that I can ever remember receiving from a small child, even when my boys were little.\n\n A very sentimental look came over Shannon's face and her eyes started to glisten with tears. She mouthed the words 'thank you' to me and I returned them as well.\n\n \"I work 7 am to 7 pm tomorrow. I'll try and sneak in when I get a chance, okay?\" Shannon said as she got ready to leave.\n\n \"I'd enjoy that.\"\n\n \"Okay,\" she said. \"I'll see you tomorrow.\" Bridget smiled and waved as they left the room and Shannon gave me one last glance.\n\n I settled back into bed and flipped on the TV to try and make myself groggy so I could get back to sleep. But all I could think about was walking with Bridget and how peaceful and at home I felt in the presence of her and her mother. I wasn't sure what it was that made me feel that way but they had both charmed their way into my life and I was sure that I was going to be a part of theirs in some small way from this day forward.\n\n I was in such a good mood at that point that it wasn't until later that I realized I wasn't even angry about the fact that Clarissa hadn't come to see me that day. Although, spending time with little Bridget made me miss my boys and I was suddenly angry that I hadn't gotten to see them today. It was a Sunday and Clarissa should have taken them to Mass today at St Matthew's. The church was only about 8 blocks from the hospital and there would have been no real reason not to stop by on the way home from Mass.\n\n I picked up the phone and called our house so I could at least talk to the boys for a while. My son Nick picked up the phone and we chatted for about 20 minutes or so. He then let me speak to my youngest son, Jacob, who still isn't much of a conversationalist on the phone yet. When I finished speaking to Jacob, he put his brother back on the phone.\n\n \"Is your mom handy?\" I asked Nick.\n\n \"She's here but she's on the computer right now. She told me not to bug her until she's done,\" Nick explained.\n\n \"How long until she's off the computer?\" I queried.\n\n Nick paused a while. \"I dunno,\" he said. \"She's been in there for a couple of hours.\"\n\n \"Can you tell her that I called and would like to talk to her?\"\n\n \"Okay,\" he said. Nick put down the phone for a bit. About three minutes later he returned and said, \"Mom said she's busy and that I'm supposed to talk to you. She said she'll see you tomorrow.\"\n\n I could feel the blood rushing to my face as my anger started to build again. I was getting tired of being treated this way and we were going to have a serious come-to-Jesus meeting if it continued.\n\n I said my goodbyes to Nick and Jake and hung up the phone. Instead of going to sleep, I spent much of the rest of the night flipping through channels on the TV and trying to formulate my thoughts and the words I was going to have with Clarissa the next time she came to see me at the hospital.\n\n I finally fell asleep about 3 or 4 in the morning, after several mild admonitions from my nurse about how I should be sleeping instead of watching TV. I threw a couple of lame excuses her way but I think she could tell that something was bothering me. But she was kind enough to let it go and not press me about it.\n\n I slept for a few hours and was greeted by Brian entering my room around 10 o'clock telling me I had a visitor. To my great surprise, it was my boss, William \"Bud\" Roberts, Sheriff of Mason County. Bud and I had been fellow officers years ago at Red River Falls PD. A few years after he became Sheriff, Bud invited me to apply for a job as a Deputy, which he told me would enable Clarissa and I to move out of Red River Falls and onto an acreage, which we had always wanted.\n\n \"By God, there's the hero!\" Bud bellowed as he came into my room.\n\n \"Bud! I'll be damned! You're a sight for sore eyes, even as ugly as you are!\" I joked.\n\n \"Yeah, well, we can't all look as pretty on TV as you do, superstar,\" he said slapping me on the left shoulder. Bud was an imposing man in personality. He was generally about my size but had always had a definite political streak in him, which he probably needed in order to be elected Sheriff. Bud was about 16 years older than me, in generally good shape for his age with a slightly heavier-than-normal runner's build and just a hint of a gut to show his 53 years of age. His salt-and-pepper hair was immaculately coiffed with a perfect part on the left side and combed to a razor's edge across the top of his forehead. He looked more like a TV anchorman than a Sheriff, especially since he preferred to wear a suit-and-tie with his badge on his belt and a mini badge pin on his right lapel and an American flag pin on his left lapel. Bud got serious for a moment and a look of concern crept across his face.\n\n \"How are things going for you in here?\" he asked.\n\n I let out a long breath. \"Well, things in here are progressing fairly well. I'm going to start the physical therapy on my arm tomorrow. I've already got considerable range of motion back in my arm that they thought wouldn't appear for several weeks or even months yet. So,\" I continued, \"I still have hopes of being out of here in a couple of weeks.\"\n\n \"I'm glad to hear that,\" Bud said, smiling. \"I want you to know how proud of you we all are over at the law center. Everyone has been praying for you and pulling for you. Hell, the whole Sheriff's office has looked like a damned greenhouse the last few weeks with all of the flowers and plants people have dropped off.\"\n\n \"Unlike my hospital room?\" I said, gesturing all around me and chuckling. My hospital room itself looked like a small flower shop with all the well-wishes.\n\n Bud and I spent the next 45 minutes chatting and updating me on the status of the investigation. He told me that the Department of Criminal Investigation had cleared me in the investigation and declared that the shooting was legal. There was some question on my tactics during the initial phase of the investigation, but the video from my cruiser's dash camera showed that the mini-van had begun to slow down, indicating that the driver and his associate were looking for a fight. As such, I had no choice to but engage at that point.\n\n As far as shooting the woman, it was declared to be a \"clean\" shoot also. Even though I couldn't identify Bridget's location at the time, there was no way not to expect me to defend myself against a strung-out meth head wielding a 12-gauge shotgun. I did my best to identify my target and the results were self-explanatory and better than anyone could have hoped for.\n\n Bud and I talked for a little while longer and he informed me that I had been officially on my 30-day mandatory leave since the shooting. All of that and more would be eaten up during my hospitalization. I was still entitled to full pay and benefits, though.\n\n \"Is there anything else you need me to take care of while you're in here?\" Bud asked as he was getting ready to leave. I told him I couldn't think of anything. Before he left, he paused and asked one more question. \"How is your family doing through all of this?\"\n\n I leaned back in my bed and let out a slow, long breath. \"The boys are doing okay. They are excited about coming to see me and can't understand why they don't get to come more often.\"\n\n \"And Clarissa?\" he prodded.\n\n \"Clarissa.....Clarissa and I aren't holding up as well,\" I finally admitted. It felt good to tell somebody and get it out in the open.\n\n Bud sat back down and pulled his chair closer to my bedside. \"Go on,\" he said.\n\n I told Bud about all the emotional distance and frustration, the snide remarks and veiled ridicule and the total disinterest in me since the shooting. I ended up venting for almost another 45 minutes. Bud sat there quietly, listening intently and taking it all in. When I finally finished unloading, he looked down before speaking.\n\n \"You know,\" he began slowly, \"it isn't easy being the wife of a law enforcement officer, no matter where you work. I know it's really tough for you right now with everything your job has put you through. But you also have to understand what Clarissa went through, too. All of a sudden she was faced with the very real possibility of being a widow and raising two boys on her own and trying to run a small farm, put food on the table...I could go on and on. I'm sure the whole experience just scared the hell out of her, Pat.\"\n\n I kind of bowed my head in shame. I knew Bud had a point, but I also couldn't help but think there was more to it. Much more.\n\n \"I hear ya, Bud, I really do. But there are just some things that don't really mesh anymore - things that go back to before the shooting, even. Things just haven't been right for a long time now and I just don't know what to do about it.\"\n\n Bud stood up from his chair and stood at my bedside for a few moments before answering.\n\n \"I'm no relationship expert, God knows that,\" he said sternly. \"As I said before, it's a pretty damned tough job being the wife of a cop, no matter where you work, big city or small.\" He put his hand on my left shoulder, got very intense and serious and said, \"As much as you are gonna hate what I'm about to say, I'm gonna say it anyway. Some women just aren't cut out to be the wife of a cop. And that's nobody's fault, either.\"\n\n I was stung by the words, even though there was a lot of truth behind them. If things were this bad between Clarissa and I now, especially when I needed her the most, how bad would things get once I was out of the hospital and back on my feet.\n\n \"You know,\" Bud said turning at the doorway, \"Floyd Franklin put in his retirement packet last week. I hadn't had a chance to tell you before now. With your resume, education and background, I think you should apply for his position when you're back on your feet.\"",
        "Floyd Franklin retired? Jesus! Floyd was a Captain and Chief Deputy. He had been second-in-command after the Sheriff and, yet, was a non-political position in the department. It would mean straight day hours, Monday-thru-Friday and would eliminate patrolling altogether. For Clarissa, it would mean not having to worry about me doing car stops and chasing bad guys like I was doing as a Deputy.\n\n \"Wow! I mean, yeah, Bud. I'll definitely consider it!\" The thought of being Captain and Chief Deputy left me with hope that I could give Clarissa some good news and maybe start to thaw the ice a little with her.\n\n \"Sounds good, Pat. You take care and I'll stop to see you again real soon, okay?\" He patted me on the chest one last time and left.\n\n The next few weeks were the toughest as I began daily physical therapy sessions for about 6 hours a day. They were painful and exhausting but totally worth it. I made tremendous strides, helped by the fact that I had always been in good shape and exercised regularly at our own gym in the law enforcement center our department shared with Red River Falls PD. Soon, I had regained about 60 percent strength in my right arm and I was walking normally and even jogging on the treadmill for about 20 minutes at a time. I wasn't breaking any speed records, but I was definitely far ahead of the pace that my medical team had figured shortly after the shooting.\n\n Clarissa continued to piss me off with her sporadic visits. Too often, she wouldn't bring the boys for one reason or another and I was only getting to see them 2 or 3 times a week. I prayed like hell that I would finally get the word to be discharged so I could go home and spend time with my boys and get to the bottom of why my marriage seemed to be sinking like a damned rock.\n\n Shannon, however, became a life saver. She still stopped in to see me almost every night when her shift in the ICU ended and she brought Bridget in to see me at least twice a week when Shannon wasn't working. Other than my boys, I almost looked forward to seeing Shannon and Bridget more than Clarissa. At least their visits never ended with a stupid, pointless argument.\n\n Finally, Dr Slattery gave me the news that I had been waiting to hear -- I was finally going to get to go home. It was a Friday afternoon and I would be discharged the following morning.\n\n I couldn't wait to give Clarissa, Nick and Jake the good news. When they arrived after school was out, the boys were ecstatic. Clarissa? Not so much.\n\n \"Oh, crap!\" Clarissa said after getting the news.\n\n \"Why? I figured you'd be happy,\" I said.\n\n \"The house is a total disaster right now, Patrick. I have a million things to do before you come home, clothes to clean, groceries to pick up. I thought they were going to give us a better idea of when you were ready to leave,\" she said frustrated.\n\n \"Who gives a shit what the house looks like? I couldn't care less! I'm just thrilled to finally get to come home to my family!\"\n\n Clarissa let out a long sigh. \"Boys, why don't you two give me and your dad a minute and go hang out in the waiting room and watch TV?\"\n\n \"Sure, Mom,\" Nick said dejectedly. Both boys were old enough and smart enough to know when an argument was coming.\n\n Clarissa stood in front of me with her arms folded while I sat on the edge of the bed. \"Is there any possibility they can discharge you tomorrow afternoon or Sunday?\" she asked point blank.\n\n I was stunned and actually had to blink my eyes a couple of times. \"What the fuck is wrong with you?\" I demanded. \"Why in the hell are you not looking forward to me coming home? Why are you so interested in keeping me here? What the fuck is going on?\"\n\n Clarissa's shell started to crack and I saw tears forming in her eyes. \"You know, life doesn't just stop because you're in the hospital, Patrick!\" she stormed. \"There are chores to do on the farm, boys to take care of, meals to fix, bills to get paid! And every time I come visit you there is always some sexually-charged remark from you about getting it on right here and right now, as if that is the only thing you care about! Have you ever stopped to consider what it has been like for me the past seven weeks? Do you know or care how it has been for the boys?\"\n\n \"No, I don't,\" I replied in a sarcastic tone. \"I guess that is probably because I only ever see you and the boys a couple of times a week since I got in here. I have friends that stop to see me more than my own family does. And have you forgotten how the fuck I actually GOT here, Clarissa? Oh, that's right! I almost got my ass shot off protecting a little girl!\"\n\n Shannon just stood there shaking her head, tears streaming down her face. \"Yes, Patrick\" she said, sniffing. \"I know how you got here. We all know how you got here. That's all the boys and I have been hearing about for the last seven weeks. I don't need you to remind me of that every day, Patrick.\"\n\n \"Impossible,\" I said coolly. \"You're only here a couple of times a week. So I can't remind you every day,\" I said sarcastically.\n\n \"Fine. Fine,\" she said grabbing her purse. \"Just let me know when you'll be coming home.\"\n\n \"I already told you,\" I said, pissed. Clarissa turned and started walking out of my room. \"I'll be home tomorrow morning. Come hell or high water, I'm getting the fuck out of here tomorrow morning. If you're not here, I'll call somebody else to bring me home,\" I called out after her as she left.\n\n I knew she could still hear me but she said nothing. In my room, I sat alone on the bed and just hung my head in defeat. I had come all the way back from death's door. And now, as badly as I wanted to leave this hospital, I was beginning to dread the idea of going home. Those two fucked up meth heads nearly took my life. It appeared the whole ordeal was going to take my marriage and there was nothing I could do to stop it.\n\n Only moments after Clarissa left, a shadow appeared in the doorway. I looked up and saw Shannon's angelic form in the threshold.\n\n \"I'm so sorry, Patrick. I didn't mean to eavesdrop or anything, but...\" her voice trailed off.\n\n I couldn't help but smile. \"Don't worry. You did nothing wrong,\" I assured her. \"Just a lot of stress over the last couple of months is starting to boil over. Do you wanna sit down or anything?\" I asked as I stood up.\n\n \"Um, no, I probably should get going home. Just wanted to stop and say hi before I pick up Bridget from my Mom and Dad's place,\" she said, finally managing a smile.\n\n I quickly filled an awkward gap. \"Hey! Did you hear the good news? I'm finally getting out of here tomorrow.\"\n\n She gasped. \"Oh, my God! That is so amazing! When? I wanna make sure Bridget is here to see you off!\"\n\n \"Some time tomorrow morning, maybe around ten or so. At least that's what Dr Slattery said this morning.\"\n\n \"Wow! Finally getting to fly the coop. I'm sure your boys will be so happy to have their dad back home,\" she said.\n\n \"Yeah, I can't wait. Gonna be great to ride horses again, get back to work. Of course, I still have a lot of physical therapy yet. But the Sheriff said I could come back on light duty when I'm ready,\" I said anxiously.\n\n \"I'm so happy for you, Patrick. I am so incredibly happy,\" she said. I could see her eyes start to glisten as tears of happiness started to well up. What the hell is it with me making women cry these days? \"Well, I'm sure you've gotta get ready for your big day tomorrow. I better go pick up my little munchkin.\"\n\n Shannon put down her jacket and reached out to hug me. Her body seemed to melt into mine as we embraced and I can't remember the last time hugging someone felt so good. The warmth of her body and the scents of her hair and light perfume created a haze of bliss for me that I didn't want to end. We held each other tight for what seemed like an incredibly long time, each of us not wanting to let the other one go. It came to the point where it started to feel awkward to keep hugging and, yet, it would have felt more awkward and uncomfortable to let go.\n\n I cocked my head slightly to the side so I could whisper in her ear. \"Thank you, Shannon. For everything. I wouldn't have made it through this without you.\"\n\n Shannon returned the sentiment by whispering in my own ear, \"No. Thank YOU, Patrick. You saved my little girl. I owe you a debt I can never repay in my life time.\"\n\n The feel of her breath against the skin of my neck and ear was electric and shot up and down my spine, literally standing my hair on end. I gave her one last squeeze to hold her tighter, which only made her cling to me tighter, too.\n\n We both sensed it was time and simultaneously eased our embrace. As we slowly pulled away from each other, Shannon gently cupped my face in her hands and kissed me gently on my left cheek.\n\n \"Good bye and good night, Patrick. I'll see you in the morning.\"\n\n She left the room but the scent of her was a presence there long after she was gone. I could barely concentrate the rest of the evening as I packed up my few belongings that I had with me. I at least had set of black Minnesota Vikings sweats that I could wear when I left in the morning. And as much as I should have been anticipating the moment tomorrow when I got to leave, all I could think about was Shannon. Anticipation gripped me the rest of the night and very little sleep came my way.\n\n At 9:30 the next morning, I was greeted by the entire nursing staff of my floor that was there along with a wheelchair. Brian, my steadfast nurse for the past umpteen weeks, was there to chauffeur me from my room to the front of the hospital.\n\n As we made our way down to the cavernous lobby and main entrance to the hospital, I was stunned to see several hundred well-wishers there to see me off. My entire medical team was there as was the entire Mason County Sheriff's Department and Red River Falls Police Department, save for those who were actually on duty. A parade of police cruisers from both departments, as well as two fire trucks from Red River Falls Fire Department, was there to escort me to the city limits. Sheriff Bud Roberts was waiting with his department-issued Chevy Suburban, along with Clarissa, Nick and Jake, to take me home.\n\n Waiting near the Suburban were Shannon and Bridget. I stood from my wheelchair and picked up Bridget for one last big hug, while dozens of photographers and videographers from the local media captured the moment.\n\n Bud, of course, shook my hand and was all smiles for the camera. Clarissa did her best to play the part, too, but Nick and Jake actually were genuinely happy to see me. Clarissa immediately turned and climbed in the front passenger seat next to Bud while I took the back seat with my boys taking a spot on either side of me.\n\n The cavalcade of police and fire trucks, with lights flashing and sirens blaring, took off from the hospital with well-wishers lining both sides of the lane extending from the main entrance all the way to Enterprise Avenue, the main drag that follows US Highway 120 through Red River Falls.\n\n I looked over my shoulder, happy to have Holy Family Regional Medical Center getting smaller in my sight. We turned right on US Highway 120 and headed south towards the direction of home.\n\n Even away from the hospital there were still small groups of well-wishers holding signs, flags and banners. I was overwhelmed with emotion by the outpouring of support. Nick and Jake did their best to point out each and every one of them so I wouldn't miss a thing. As we approached the high school campus on the south side of Red River Falls, the police cars and fire trucks peeled off into the parking lot and Bud continued onward towards home.\n\n \"Well, how does the hero feel today?\" Bud asked, looking at me in his rearview mirror.\n\n \"Better than I deserve,\" I smiled back. \"I can't thank you enough for everything, Bud. I really appreciate you bringing my family to me today.\"\n\n \"Oh, there was nothing to it, Pat. It was the least I could do.\" He smiled at Clarissa, who smiled back, and then returned his gaze to the road. \"What did you think about all the people who turned out? That was really something, wasn't it?\"\n\n \"Unbelievable,\" I replied. \"How in the world did everyone know I was getting out today? That's the part I can't figure out. I know word travels fast, but not THAT fast.\"\n\n \"It was on the website, Dad,\" Nick replied.\n\n \"You know,\" Jake answered. \"The one they set up for you.\"\n\n I was puzzled. I knew nothing about any website.\n\n \"It's called 'Caring Bridge',\" Nick informed me. \"They set it up to tell everybody how you were doing after you got hurt.\"\n\n \"Did you set that up, Clarissa?\" I asked.\n\n \"No, Danny Larson and some of the others did,\" she answered.\n\n \"There's even a Facebook page, Dad!\" Jake said proudly. \"You got over 100,000 'likes' and over 10,000 comments from people!\"\n\n Wow! Well, this is the internet age. I wasn't sure how I felt about total strangers knowing about my medical progress, but I was genuinely warmed and touched by the outpouring of care and concern.\n\n About ten miles south of Red River Falls Bud turned the big SUV west onto Rattlesnake Road, the gravel road our acreage was on. The scenery all looked intimately familiar and I anticipated the next hill and our small farm that lay just beyond. The sight of our house was like seeing an old friend for the first time in ages. Even the older outbuildings and hay shed were welcome sights.\n\n Bud pulled the Suburban up to the old outbuilding with sliding doors that currently served as our garage. It was almost 80 years old but still had good bones and kept the snow off our vehicles in the winter.\n\n We all made our exits from the vehicle. With the boys on each side of me, I made the short walk over to the edge of the horse corral I had built and clicked my tongue several times to summon our horses to the fence. My trusty friend and favorite horse, Blackjack, made his way over to me and started to nuzzle my cheek with his nose. He gave me a few good sniffs, just to make sure I was who he thought I was. When he was satisfied, he lowered his head as usual to let me give him a good scratching of his ears, which he loved so much. With luck, my rehabilitation would continue to go well and I could still get a fair amount of horseback riding in before winter arrived with all of its frigid fury.\n\n The boys and I spent about 10 minutes or so petting the horses before heading back up to the house.\n\n Our farmhouse was over 80 years old, too, but still in great shape. The only major change we had to make in the few years we had lived there was replacing the old boiler with a new and more efficient one. With five bedrooms there was more than enough room for all of us and our respective hobbies.\n\n \"Well,\" Bud started, \"I guess it is about time for me to head back home. I promised my wife I'd take her our for a nice lunch today. I'm sure you all could use the time to get settled back in.\"\n\n \"Thanks a lot, Bud,\" I said extending my hand. Bud gripped it firmly. \"I really appreciate everything.\"\n\n \"No, Patrick. I appreciate everything YOU have done. Don't feel like you have to rush back too soon. Just focus on the rest of your rehab and getting yourself back to 100 percent. The job will take care of itself in the meantime.\"\n\n \"Be sure to tell Margo I said hello and that we missed her today,\" I said as Bud turned to go. Margo was short for Margolene. She and Bud had been married almost 25 years.\n\n \"Uh, yeah, I'll do that Patrick. She wanted me to tell you how happy she is for all of you and she'll see you real soon. She had an appointment today she couldn't miss. Otherwise she would have been there.\"\n\n I didn't press for information and Bud left without much fanfare.\n\n \"Well, I'm gonna go start getting our own lunch ready,\" Clarissa said and disappeared into the kitchen.\n\n I took it easy the rest of the weekend, since I knew I had a full week of rehab ahead of me and it would only get more and more intense as it went on. I had at least another month of it ahead of me before I could get back to work full time, and even that was an optimistic schedule. But I had beaten the odds so far and I was determined to this time, as well.\n\n Clarissa and I were cordial with one another, but otherwise it was business as usual. I tried to initiate lovemaking several times but it was a barrage of excuses as always. She was either having a bad day with her low testosterone symptoms and just wasn't feeling like it, was tired from a new volunteer project she had started with the Red River nature trails committee, or she was afraid that I might get hurt because of my injuries. I had to chuckle at the last excuse.\n\n The resentment continued to build along with the tension between us. At one point, I got snippy and pissy with her over the lack of action in the bedroom again and told her I was sick of all the excuses.\n\n \"Well, I'm soooo sorry that you feel your sexual WANTS seem to outweigh, in your mind, my overall physical health needs,\" she said emphatically.\n\n I was getting tired of her shoving her ongoing low testosterone problems in my face all the time, a problem she could easily have corrected with a prescription from her doctor but chose to treat herself with \"herbal\" and \"natural\" remedies, which did nothing. She also said that there were plenty of couples out there who were married and didn't have sex that often because their focus was on their lives, jobs and kids and there wasn't anything wrong with that.\n\n I said, \"Clarissa, there are a helluva lot of couples out there who have sex MORE than we do who STILL get divorced because of a lack of sex in their marriage!\"\n\n \"Well, I guess you have a decision to make then,\" she said and stormed off to our room.\n\n The only outlet I had, besides an occasional sneak peak at some porn and jerking off in the shower, was going to my daily workout and physical therapy. At least getting a good workout took some of the edge and stress off.\n\n After I had been home for a month I was allowed to go back to work on light duty, which meant being a paper pusher and assisting some of the other Deputies with their reports. I had physical therapy now three days a week for two hours in the morning and then spent the rest of the day at the Sheriff's Office.\n\n Along with several other Deputies in the department and several outside candidates, I ended up submitting my packet to be considered for the Captain and Chief Deputy position that had been vacated by Floyd Franklin. The packets were reviewed by a committee of personnel from various departments around the county and the city. I knew that my college degrees in criminal justice and psychology, as well as my military service, would make me a formidable candidate. Having saved Bridget wasn't going to hurt me, either.\n\n The committee took two weeks to consider all the applications, during which each candidate had to sit in front of the committee to answer a battery of questions during a panel interview. Some of the questions were tough and pointed, others were kind of laughable. Sometimes, when you bring in personnel who have zero law enforcement experience to interview an actual law enforcement officer, some of the questions you get are clearly based on what that individual has seen on TV and in movies. But they all meant well and did their very best to choose a candidate.\n\n In the end, the selection committee selected who they believed was the best candidate and submitted the name to Sheriff Roberts who made the final decision.\n\n I was working on organizing some old reports on a Monday after I had gotten to work following rehab. I was just getting settled into a day's worth of boring and mind-numbing work when Bud came out of his office.\n\n \"Hey, Pat. What're you working on?\" Bud asked.\n\n I let out a long sigh and gave Bud a weak smile. \"Just taking some of these old hand-written reports and entering them digitally into the new system.\"",
        "Bud winced. He knew the work was brutal and hated having to make Deputies spend part of their time each month getting it caught up. Even though these crime and incident reports were so old, the state mandated that all records going back 15 years had to be entered into the state database. This sucked because all of the neighboring states only mandated 10 years and the national standard was only seven. Any unresolved felony cases, no matter how old, were also required to be updated and entered digitally into the state database. No one had even begun to touch that stack of cold case files, which also entailed re-establishing chain of custody for any evidence gathered in those cases.\n\n \"Well, why don't you take a break and step into my office for a bit,\" Bud offered.\n\n I welcomed the break from the blinding paper and computer work and said, \"Gladly!\"\n\n I followed Bud the few short steps down the hall to his office and seated myself in one of two short-backed leather swivel chairs in front of his large oak desk. A large computer desk sat directly behind Bud's executive leather chair and looked comically large as Bud preferred to use a laptop computer instead of a desktop.\n\n Bud had, like any good Sheriff or Police Chief, numerous pictures, plaques and awards plastering his walls that highlighted his nearly 30 year career in law enforcement. Like me, Bud's career had begun with the Red River Falls Police Department where he had served for over 18 years, rising to the rank of Lieutenant, before winning his first term as Sheriff. Bud had won three of those terms, so far, and wasn't even facing a challenge from anyone in next year's election.\n\n \"Pat, as you know, the committee has assisted me over the past few weeks by reviewing the applications and conducting interviews for the position of Captain and Chief Deputy Sheriff,\" Bud began. \"I have in my hand their report and recommendation of the individual they would like to see appointed to that position.\"\n\n Bud handed me a vanilla folder containing the report. I opened the folder and scanned the cover letter that sat on top of the stack of evaluations for each candidate. I quickly shifted my focus to the last paragraph of the letter:\n\n Therefore, the Selection Committee has made the decision to recommend Deputy Sheriff Sean Patrick Quinn to fill the vacant position of Captain and Chief Deputy of the Mason County Sheriff's Department. The committee trusts that Sheriff William Roberts will give all due concern and consideration to this recommendation and will make final appointment to the position based on the information contained in this report. The committee members would like to extend their thanks to the Sheriff, his department and to the Mason County Board of Supervisors for seeking our helping in fulfilling this essential task.\n\n Respectfully submitted,\n\n R. Holland Steele,\n\n Director, Red River Falls Public Works\n\n Selection Committee Chair\n\n Wow. I couldn't believe it. I had felt fairly confident going into the process that I would make a strong candidate but I knew there were other Deputies, as well as members of the Red River Falls PD, who had applied for the position and would have made good Captains, as well. One of those candidates was Pete Sturgeon, a current Captain on the Red River Falls PD, who I knew would probably not take the news well. Pete knew that Bud and I had been friends going all the way back to our days on the Red River Falls PD, too.\n\n Bud reached his hand across the table. \"Congratulations, Captain. I'm proud to say this was a recommendation that wasn't difficult to accept.\"\n\n I gripped the Sheriff's hand firmly in reply. \"Thank you, Sheriff. I won't let you down.\"\n\n We chatted for a few more minutes and he told me that the formal announcement of my promotion would take place that afternoon around 14:30 as the day shift was ending and the Deputies from the night shift would be arriving for work.\n\n \"Now,\" Bud said, \"I would imagine that someone's wife and kids would love to hear this news.\"\n\n \"I can't wait to tell them,\" I said grinning stupidly. I hadn't been this giddy since the day I got married.\n\n \"Just so you know,\" Bud cautioned, \"if you think your days of doing paperwork are over, think again. There's a lot more of that which comes with the job. You're going to be the direct supervisor to all of the Lieutenants and Deputies, as well as the tactical officer for the Narcotics Task Force and Special Operations Group. You'll also be handling the preparation of warrants and occasionally serving warrants, too.\"\n\n \"I know, I know. But the chance to keep normal hours and be home for dinner almost every night is worth it,\" I said.\n\n \"Congratulations, Patrick. I look forward to working with you even more closely,\" Bud said as he waved me out of his office.\n\n Captain Pat Quinn. Chief Deputy Pat Quinn. I kept saying them over and over in my mind, hoping that soon it would sound normal. I guess a lot of things take some time in getting used to. I decided I needed to keep my focus and returned to my desk to continue digitizing reports. The next thing I knew, Bud was by my side again and pulled up a chair.\n\n \"One more thing, Pat,\" he said looking intent. \"I forgot to tell you that I'm going to be sending you to a two-week training course in Minneapolis. It is an Executive Law Enforcement Officer Professional Development and Leaders Initiative Course. It gets put on by the Federal Law Enforcement Academy. Instead of sending everybody to Georgia all the time, they're doing outreach classes around the country. They just finished one in Cheyenne and they'll be holding the next one in the Twin Cities in about two weeks. It'll be a good way for you to get your feet wet at the next level.\"\n\n \"Wow. Sounds intense,\" I said as Bud stood back up.\n\n \"It's not. It is tough from an intellectual and educational standpoint. But the course is almost entirely classroom oriented with a few table-top exercises thrown in for fun,\" Bud explained.\n\n \"Oh, goody,\" I said dryly. \"Death by Power Point.\"\n\n Bud patted me on my left shoulder. \"Welcome to the next level Pat,\" he chuckled as he walked away. \"I just wanted to let you know so you can give the family a heads up that you're gonna be gone for a couple of weeks. But the hotel and the meals are on us! And if it makes you feel any better, I'll be there going through it with you!\"\n\n \"Not really,\" I chuckled.\n\n I returned to my computer. A promotion and an out-of-town training conference, I thought. Maybe the two-week separation would do me and Clarissa some good and give us both some time to think.\n\n At shift change that afternoon Sheriff Roberts called all of the Deputies and staff members into the briefing room to announce my promotion to Captain and Chief Deputy. He kept it short and sweet and asked everyone to give me a round of applause. Everyone clapped but I couldn't help but notice that the applause was more tepid than I was expecting. I knew several of the Deputies had also applied for the position, so I chalked up the response to a few of them being a little butt-hurt over my selection. I wasn't going to let it get me down and, at 1600, I hopped in my truck and headed home.\n\n Clarissa was helping the boys with their homework when I walked into the house and dinner was in the oven.\n\n \"How was work?\" Clarissa asked.\n\n \"Interesting,\" I replied cryptically.\n\n \"Oh? How so? I thought they had you going blind on old paperwork,\" she said, puzzled.\n\n \"Yeah, I was. But there was a development just before noon.\"\n\n \"Are you going to tell me?\" she begged. \"Or are you going to just play twenty questions?\"\n\n I draped my jacket on the back of one of the dining room chairs before answering. \"The selection committee gave their recommendation to Bud for the Captain and Chief Deputy position. Bud accepted their recommendation and subsequently offered me the position.\"\n\n \"What?\" Clarissa asked, completely startled. \"Chief Deputy? That's like number two in the department, right?\"\n\n \"Yes, it is.\"\n\n \"So, it is the Sheriff, and then you, right?\" she said, trying to figure something out in her head.\n\n \"Yes, it is,\" I said slowly, trying to see where she was going with this. \"Are you not happy about this or something?\"\n\n \"No, it's not that. It's just...I guess....wow!\" was all she could stutter.\n\n \"Do I at least get a hug for my promotion?\" I asked with my arms outstretched.\n\n \"Uh, yeah. I'm sorry. It's just....such a.....surprise,\" Clarissa said as she embraced me. I had been hoping for the same sparks I got from hugging Shannon, but Clarissa pulled away too quickly. She then stood there with a closed-off posture with her arms folded.\n\n \"Well, I just want you to know there are going to be some changes,\" I started to explain. \"My work day will resemble more office-hours than what I had previously. My general work day follows county business and runs from 8 am to 4 pm, same as the courthouse. However, with my new duties, there will probably times I will need to be in earlier and stay later. I'll get comp time, of course, but there will also be a lot more meetings, including weekends.\"\n\n \"Will you mostly know ahead of time?\" Clarissa asked?\n\n \"For the most part. But you just never know. There will also be some out-of-town travel occasionally around the state and elsewhere, beginning with a leadership training seminar that I will be gone two weeks for at the beginning of November.\"\n\n \"Like how often?\" she wanted to know.\n\n \"Hard to say,\" I said grabbing a soda from the fridge. \"I would imagine that some parts of the job will be routine in a lot of ways and I'll get the hang of things as time goes by.\"\n\n Clarissa got quiet. \"What about the dangerous stuff?\" she asked.\n\n I let out a sigh and said, \"Well, for the most part that is done. Obviously, I won't be patrolling anymore, so that rules out car stops and chases. But part of my duties will be to serve as the executive officer in charge of the narcotics task force and special operations group.\"\n\n \"So, you'll still be kicking down doors and busting crack and meth houses,\" she said getting defensive.\n\n \"Not exactly,\" I tried to reassure her. \"As the officer-in-charge my responsibilities will be more along the lines of tactical planning and oversight. Sure, I'll still dress and look the part, just in case things go to shit all of a sudden. But for the most part I won't be the sharp end of the stick anymore.\"\n\n \"Good,\" she said, seemingly soothed. \"So will there be a decent pay increase with your new position?\"\n\n I chuckled and nearly choked as she asked me the question while taking a swig of my cola. \"You sure get down to the point, don't you,\" I said, wiping my chin.\n\n \"Well, I would think there'd be a bump in pay, isn't there? After all, you're going to have a lot more responsibilities and such. They'd better pay you more!\"\n\n \"Easy, easy,\" I said calmingly. \"My salary as a patrol Deputy, as you know, was a little over $55,000 a year. The salary of Chief Deputy is $89,000 a year.\"\n\n \"Oh, my God!\" Clarissa exclaimed. \"I was expecting a bump in pay, but not a $34,000 bump in pay!\"\n\n \"Well, you gotta understand that I was selected and promoted over the Sergeants and Lieutenants on the department. That's two pay bumps right there.\"\n\n We all sat down together for dinner about an hour later and chatted more about my new position and duties. For the first time in a long while, the atmosphere in our house was genuinely warm. I didn't get any celebratory sex that night but when she came to bed, Clarissa actually did snuggle up next to me and gave me a kiss goodnight, which was more than I had gotten in the weeks since I had been home from the hospital.\n\n I didn't push things much over the next week or so, but I did start to get a little anxious in the days leading up to the law enforcement conference in the Twin Cities. I brought home flowers for Clarissa, which she accepted with a smile. But at least she didn't throw me any snide remarks about it being an open gesture expecting sex, which was what usually happened when I brought home flowers. Over the last year or more any traditional romantic gestures were taken by Clarissa as an expectation of sex and she had begun to resent them. I had always thought that women appreciated little gifts, flowers and other tokens of affection but Clarissa always assumed there were strings attached.\n\n Finally, it was the night before I was to leave for the conference. I couldn't take it anymore. It had been over five months at that point since Clarissa and I had made love. I was afraid if I left for the conference without at least one last moment of true physical connection and emotional bonding that Clarissa and I were done for.\n\n I had been packing my clothes when Clarissa came into the bedroom looking for something in her hope chest. I slowly walked up behind her and wrapped my arms around her waist and hugged her from behind. She didn't withdraw, but simply placed her hands and arms on my own and accepted the embrace. I kissed her gently on her ear. Clarissa turned around and hugged me with her head on my chest.\n\n \"I want to make love to you before I leave, Clarissa,\" I whispered.\n\n \"Patrick, please. Please don't,\" she said pulling away from me.\n\n I stood there deflated. I was out of options and out of patience.\n\n \"What?\" I demanded. \"What is the problem?\"\n\n Clarissa sat down on the edge of the bed, arms folded and looking away from me.\n\n \"What do you expect from me, Clarissa?\" I said even louder. \"What has happened over the last few years that all of a sudden you find me absolutely repulsive?\"\n\n \"I should ask you the same thing, Patrick!\" she retorted. \"What exactly do YOU expect from ME? It's like you expect me to stay home, cook and clean, take care of the boys and be at your sexual beck and call all the time!\"\n\n \"You know,\" I said forcing myself to calm down, \"if we had sex an average of once a month, I might just consider your point. And that's a pretty big might.\"\n\n \"You're not the only one who has been affected by everything the last few months, you know,\" Clarissa said desperately looking for a point to make. \"This whole thing has affected me, too! Do you know what it has been like for me? Do you know what it has been like almost being a widow before I'm even in my mid-thirties? Having to consider the possibility of being alone for the rest of my life? With two boys to raise on my own?\"\n\n \"Don't use the boys as an excuse for this, Clare!\" I hissed. \"We are talking about problems that have been ongoing for the last couple of years! This isn't just something that occurred with the shooting and you damned well know it!\"\n\n \"Oh, I'm sooooo sorry,\" Clarissa moaned, overly dramatic. \"I'm sooooo sorry that my health needs don't seem to take precedent over your need to get LAID,\" she said gesturing grandly to make her point. \"Did you ever stop to think about what was best for ME?\"\n\n \"Yes, yes I have. And what is best for you would be to talk to your doctor and get a prescription to FIX the problem. There is no shame in getting treatment for a medical condition, Clarissa,\" I tried to reason.\n\n \"The last thing I want to do is pump my body full of drugs and chemicals, Patrick,\" she said. \"You know how those things affect my body.\"\n\n <br> I shook my head. \"Sounds like an excuse. And I'm tired of making excuses for you and I'm tired begging and pleading for something that should be a normal and regular part of our marriage. If you truly gave a shit about me, Clarissa,\" I said resuming my packing, \"you'd do something about this instead of just make excuses.\"\n\n \"And if you gave a shit about me,\" she shot back, \"you'd want what is best and natural for me and not want me to do something that I'm not comfortable with. All you're thinking of is yourself and what you want!\"\n\n I was tired of it all. I decided right then and there that I was going to take the two weeks I would be away in the Twin Cities to figure out what I was going to do, what my next move would be when I came home. If this is what my life was going to be like, then I wanted no part of it. Being on an acreage out in the country wasn't worth being miserable for the rest of my life and losing the acreage was almost a certainty if it came down to getting a divorce. Suddenly, the thought of that didn't scare me. It should have but it didn't. The idea actually had a calming effect on me once I accepted it.\n\n Clarissa noticed that I hadn't said anything for a few minutes as I ignored her and continued to pack. Finally, the sound of silence became too much for her and she had to ask.\n\n \"What, Patrick? What do you want from me?\" she queried.\n\n I stopped packing, stood up straight and let out a long sigh.\n\n \"I'll tell you what I want, Clarissa,\" I said sitting next to her. \"I want a wife that wants me to be an equal part of the marriage. I want a wife who is willing to receive affection from me and give it in return. I want a wife who will accept romantic gestures from me and not automatically attach some ulterior motive to it. I want a wife whose skin doesn't crawl when I want to touch her. I want a wife who doesn't arbitrarily refuse me ninety-nine percent of the time when I want to make love to her, because I love her, and because after almost 15 years of marriage I still find her as beautiful and as sexy as the day I first met her. What I want is to have my wife back, the woman I fell in love with, not the shell of a human being that has no ability to give or receive love to her husband. All you are to me anymore is just a ghost of the woman I fell in love with. I keep hoping she will return, but that hope dies a little more every single day.\"\n\n I stood up, closed my suitcase and set it near the door to the bedroom. I proceeded to hang up three clothes bags containing my three suits as well as two complete sets of uniform on the hook behind the door. Clarissa sat there with tears in her eyes and said nothing. I had hoped she would at least say something but I got crickets in return.\n\n \"You'll have the bed to yourself for the next couple of weeks anyway,\" I said softly, \"so you might as well have it to yourself tonight.\" Clarissa just sat there sobbing now.\n\n I grabbed a few blankets from the hall closet and a spare pillow and made my way downstairs to the living room where I made myself as comfortable as I could on the couch.\n\n My alarm went off precisely at 4:30 the next morning. The conference wasn't scheduled to start until 10:00 so I had plenty of time to grab a shower, dress and leave for the conference. I opted to shower in the main bathroom rather than the master bath so I wouldn't wake Clarissa.\n\n When I finished showering I dressed in a pair of khaki dress slacks, dress shirt, tie and a tan western style blazer that I had purchased. I opted for a pair of brown leather Tony Lama square-toed boots that I had treated myself to shortly after my promotion. Now that I was Captain and Chief Deputy Bud had insisted that I wear suits to work rather than a typical duty uniform.\n\n I finished loading my clothes in my vehicle and went back in the house to gently give each of the boys a quick smooch on the head. They were both still sleeping soundly at this hour and I didn't want to wake them to say goodbye. I had promised each of them the night before that I would call them the first night and regularly while I was gone.\n\n My new work ride, since becoming Captain, was a 2013 metallic silver unmarked Ford Crown Victoria. It still had the basic Police Interceptor package -- shocks, brakes, V-8 engine and other refinements -- but lacked the large radio and light console as well as the Quick Book computer. As I was getting ready to leave, I noticed Clarissa standing at the front door still dressed in her pajamas and a robe. I reached for the door and was about to get back out of the car but I was struck by a feeling that I shouldn't. Only one of two things was going to happen -- either I would make a fool of myself and try to make up for the night before or she would simply give me a thread of hope to falsely cling to while I was gone."
    ],
    "authorname": "soldierboy50401",
    "tags": [
        "cheating",
        "infidelity",
        "betrayal",
        "wife",
        "regret",
        "retribution",
        "revenge",
        "mother-in-law",
        "cuckold",
        "threesome"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/badge-of-betrayal"
}