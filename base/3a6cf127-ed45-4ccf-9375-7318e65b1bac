{
    "title": "It's Complicated",
    "pages": [
        "I saw her walk in, I'm sure everyone in the restaurant did, it's hard to miss a tall, beautiful, stylishly dressed woman with flaming red hair. She was talking to the hostess and scanning the room. I was doing my best not to stare at her and failing miserably. When she saw me, I could feel myself blush, she smiled, said something to the hostess and headed in my direction. I looked around to see who was behind me only to realize I was sitting in the back corner of the restaurant; she was here to see me. I just watched as the goddess floated up to my table and asked if she could join me. She sat down before I could answer. \n\n\"Um, I'm sorry, do we know each other,\" I was trying to remember how to breathe. \n\n\"Hi, I'm Carla,\" she put her hand out to shake mine. \n\n\"Yeah, uh, I'm Michael, um, Mike,\" I shook her hand, her grip was firm, her long, perfectly manicured fingers wrapped around my hand, the pink on her nails the perfect contrast to her hair, the softness of her skin sent tingles up my arm and I was pretty sure she rubbed the back of my hand with her thumb. I held on to her hand too long for a handshake and just long enough to get even more uncomfortable if that was possible. \"So, what can I do for you, Carla, you were obviously looking for me,\" I fought to regain some sense of composure? \n\n\"Yeah, about that,\" she paused and stole one of my fries,\" look, I now this is weird and maybe out of line, but I've seen you every day, twice a day for the past week; you stop outside Tanners, the dress store where I work, and look at that pink dress in the window like it was a puppy, well, I think you're kind of cute and I was hoping one day you'd actually come in the store and maybe I could meet you, but you never did, \" she was rambling, she was as nervous as I was which made me smile,\" shit,\" she paused,\" Listen, it's going on the discount rack tomorrow. I guessed you're an eight, maybe a ten, so I put one of each in the back in case you wanted to come try one on, that's it; and I wanted to meet you,\" a subtle blush caressed her cheeks and she smiled a sheepish smile,\" so, is that too weird?\" \n\nI couldn't tell you what it was about that dress, it was a simple vintage button up dress, pink with darker pink flowers, mid length, probably a cotton blend, it had pearl buttons up the front and a scoop neck with cap sleeves and I was jonesing for it hard. \n\nI had been cross dressing since I was five or six, starting with my mom's slips, which I wore as dresses or nightgowns, gravitating to stealing my sister's panties and then a few of her dresses. When I got to college nothing for a while except a random dalliance when someone's panties got mixed in with my laundry or the one time my girlfriend convinced me to dress in drag for her sorority costume party, it hadn't taken much convincing and I had enjoyed it more than I ever let her know. It had never been a sex thing for me, just something I enjoyed and that had helped me relax. I had kept the 'costume' and wig, when I graduated and moved across the country for my new job, found dressing again to cope with the stress of starting a new life. \n\nThe internet was my fix, I had bought panties, simple cotton bikinis, and some bras, none of which fit quite right, a handful of dresses, some skirts and tops and a few nightgowns, the dress Carla was talking about was becoming an obsession that I didn't know how to handle; I was sure they would have me arrested if I went in and asked about it, much less asked to try it on. \n\n\"You would let me do that,\" I asked incredulously? \n\n\"Sure, why not? We have guys come in all the time, some pretend to be buying stuff for their girlfriends, others aren't shy about it at all and I work on commission, so,\" she smiled at me and winked, stealing a sip of my water. \n\n\"I never thought, I mean I'd be too embarrassed,\" it occurred to me I had just admitted my greatest secret to a total stranger and she hadn't looked at me like I had two heads, in fact, she had acted like it was completely normal. \n\n\"Let's do this then, I'm closing tonight. You come in after work and we'll use one of the private fitting rooms. I'll measure you to make sure of your sizes and I'll even pick out a few things for you to try on. It will be fun. If you buy something great, if not, at least we get to visit a little, it can be like a first date\" she smiled at me. \n\n\"First date, huh,\" I smiled back,\" Are you always this aggressive with your sales,\" I snatched the fry she was trying to steal from her fingers,\" and if you're hungry, I'd be happy to buy you lunch.\" \n\n\"Actually, no, I can't believe I followed you down here. Normally, I'd never do something like this, I just wanted to meet you and thought when the dress was taken out of the window, you'd never stop by,\" she blushed again, this time her face was beet red,\" and I'm not really hungry,\" she stole another fry, \"I just nibble when I'm nervous.\" \n\n\"You wanted to meet me, why, I'm nothing special.\" \n\n\"You kinda are, I mean you're really cute, tall, thin, blonde hair, blue eyes and a nice smile, and you like dresses which makes you interesting, or at least someone I can talk about my work with,\" she let out a little laugh and I was pretty sure I fell in love with her on the spot. \n\n\"And why would a gorgeous woman like you be nervous, you must have guys fighting over you all the time?\" \n\n\"It's harder than you think, a lot of guys are afraid, or just after the superficial stuff, when things get real, they run as fast as they can. It's just so, so complicated. I know I'm pretty but sometimes that can be the loneliest thing in the world,\" I could see the tears welling up behind her crystal green eyes. \n\n\"You really think I'm cute, not handsome or striking or gallant or debonair, but cute,\" I emphasized the word cute which got the laugh I was looking for. \n\n\"Could be worse, I could have said pretty, she giggled and the tears that had been coming disappeared, it was my turn to blush a little, I would have taken pretty in a heartbeat. \n\nWe talked for a bit longer and I walked her back to her store agreeing to stop by after work for a session of dress up, the rest of my afternoon was spent trying to focus on my work while I held a heated debate with myself about whether it was the dress up of seeing Carla that had me more excited. \n\nIt was almost as if he knew I had something planned; at 4:30, Steve, the senior analyst on my team, dropped the Mc Phearson file on my desk, four inches of pure chaos,\" Bill wants this ASAP, you don't mind do you,\" he turned to leave, not really waiting for my answer,\" Just put it on my desk when you're done.\" Steve had a habit of dumping stuff on me and the other junior analysts, we were pretty sure he was taking the credit for what we did, but couldn't prove it and none of us had managed the courage to call him on it, and that snarky smile, I swore, one day I was going to see it wiped off his smug face. It was 7:30 before I finally quit for the night, stuffing my computer and Mc Phearson into my briefcase, I headed out the door almost forgetting about Carla and our 'date.' \n\nThe dress was not in the window when I got to Tanners, replaced by an equally cute sundress, white with lavender butterflies flowing up from the hem, I could see Carla busying herself with straightening some of the internal displays and refolding a few items that probably didn't need it, I took a deep breath and opened the door, taking my first venture into uncharted territory,\" Hey, I got tied up at work, it looks like you're closing, should we do this another time,\" it was a tossup as to whether or not I wanted her answer to be yes or no? \n\n\"I thought for a while you weren't coming,\" she sighed heavily as a look of sadness lifted from her face, \"and It's Tanner policy that we have to stay as late as necessary if a customer is in the store, I do get to lock the door at eight, so this is actually better, nobody else will be here,\" she gave me a wry smile. \n\n\"You know, I've never actually done this, I mean gone into a store and tried stuff on. I've bought some things online and stuff, um, so how does this work,\" I could feel my face turning red and a warm flush rose from my neck? \n\nCarla took my hands in hers,\" first, you need to relax, this is no big deal,\" her green eyes and easy smile were helping,\" Like I said at lunch, we have guys in here all the time, it's more common than you think; men wearing dresses, I mean. Second, you trust me, you're in good hands, I picked a few things out I think you might look good in and you can look around and see if there's anything else you like and then we take it all in the back and you play dress up for a while, I'll give you my honest opinion and you decide what you want to do from there. Sound like a deal,\" she smiled and squeezed my hands? \n\n\"Like that sundress in the window, with the butterflies,\" I started to relax? \n\n\"Oh, you like that one, do you, \"I nodded,\" great, it is really cute. Now I do need to take your measurements, so I know for sure what your sizes are. This can be a little, um, intimate, I guess is a good word, you'll need to strip to your underwear so I can do it right,\" she dropped my right hand and squeezed my left, leading me to the back of the store to the private dressing areas. \n\n\"I think you just want to see me almost naked,\" I laughed. \n\n\"Maybe a little of that, too,\" she came right back,\" but really, it does help get the sizing right, and there's complimentary wine, if you'd like.\" \n\n\"That would be nice,\" I kicked my shoes off and started to unbutton my shirt,\" what the hell am I doing,\" the thought screamed from the back of my head. I ignored it and laid my shirt over the back of a chair. \n\nCarla measured my neck, my shoulders, my arms, my chest, in three places, my waist and hips, my inseam, doing her best to pretend to ignore the very obvious bulge my panties were failing to hide, she even got my shoe size, writing it all down in a small notebook, I finished my first glass of wine while she was taking the measurements, hoping I didn't squirt all over her while she worked. \"There, that wasn't so difficult now was it,\" she draped the tape around her shoulders and looked at my lean runners body,\" Interesting, we're almost the same size, you may even fit into a six, are you ready to try some things on?\" \n\nThe first thing she brought me was a heavily padded push up bra,\" this will help the clothes hang properly and give you a better idea of how they really look,\" her demeanor was so matter of fact, I didn't even pause. \n\nI took the bra and gave it a quick once over,\"36 a,\" I thought to myself, \"no wonder none of the ones I had bought online fit, they were all way too big,\" I slipped it on and Carla showed me how to adjust what little chest I did have into the bra and helped me fasten it behind my back, it was actually comfortable and while I didn't fill it up, the ample padding gave me a very nice feminine figure. \n\nCarla brought me a second glass of wine and the pink dress I had been fantasizing about, I could barely contain my excitement, I slipped it on, Carla helped me button it up, it fit very snug against my body and I found I liked that very much,\" Um Carla,\" I could feel my face turning bright red,\" I kind of have a problem, this usually doesn't happen to me when I dress, but I, well I don't want to ruin the dress, I am so embarrassed,\" I started unbuttoning the dress and turning away so she couldn't see my now raging erection. \n\n\"Oh my,\" she laughed, \"I wasn't expecting that.\" \n\n\"Me either, I swear, this never happens, maybe I should just leave,\" I felt so humiliated. I handed her the dress and reached for my clothes. \n\nCarla put her hand on my arm,\" or, there's a bathroom over there, you could, I guess, take care of things and we could continue, I mean if you want to, it's up to you,\" there was an almost hunger in her eyes and a sadness behind it, I got the feeling that her dressing me up was important to her, maybe as much as it was to me. I went to the bathroom and it didn't take long before I covered the tissue in my left hand with warm sticky goo. \n\n\"Well, that was definitely a first,\" I joked about what I had just done, Carla just smiled and handed me the dress, acting like nothing out of the ordinary had happened. I was quickly comfortable again and put the pink dress back on, relishing the feeling of the delicate fabric over my body and enjoying the feel of the dress as it flowed around my legs, doing a little spin as I admired myself in the mirror. It was a wonderful feeling. \n\nThe sundress from the front window was next and I liked it even more than the pink one, my keep pile had begun. The next three hours were magic, Carla brought me outfit after outfit, dresses, skirts, pants, shorts and tops, pantsuits, even shoes, some I loved, some we both laughed about and others Carla tried to talk me into, sometimes she won, sometimes not. When she rang me up, even with her employee discount, I had spent well over a thousand dollars and had loved every minute of it. \n\nI walked Carla to her car, \"I saw you, taking mental notes while I was trying on my new clothes, Carla, what is really going on, why are you doing this for me?\" \n\n\"It's complicated,\" she looked away from me,\" mostly because I find you very attractive and I like you, maybe more than I should considering we just met. \n\n\"It's more than that, the way you watched me tonight, please explain it to me, maybe over dinner tomorrow night.\" \n\n\"I'd like that,\" she gave me a soft smile \n\n\"You know, I really had fun tonight, maybe the best first date ever,\" I laughed. \n\n\"It was really fun, I'm glad you enjoyed it and you got some really cute outfits, too. I hope you enjoy them; plus, there was that bonus,\" It was her turn to laugh. \n\nI could feel my face turning crimson, realizing that little incident would be brought up for as long as I knew Carla, and possibly longer. Her green eyes, that sweet smile, \"Carla, can I kiss you goodnight,\" I asked before I knew what I was saying? \n\n\"I'd like that, too, but remember, I warned you, it's complicated.\" \n\n\"You are smart, funny, and the most beautiful woman I have ever seen, I'll take my chances,\" I leaned in and met her lips with mine. It was soft and gentle at first, quickly becoming raw and passionate as I dropped my bags an pulled her close, her lips parted and our tongues began to dance, chasing each other around her mouth and then mine as my hands began to explore her back. I could feel her muscular body beneath her blouse, sliding my hand down, past her belt and onto the delicate linen of her pants; she stopped me when I got to her ass, gently pulling the invader back above her waist,\" Not yet,\" she whispered in my ear as she pulled away. \n\n\"Wow, that was something,\" I tried to catch my breath. \n\n\"I told you I liked you,\" she smiled at me. \n\n\"So, seven? And I'll need your address,\" she wrote it down for me. \n\n\"See you at seven and don't be late,\" she gave me another quick kiss and climbed into her car. I stood there mesmerized as I watched her drive away, the magnetism we shared, the raw primal attraction was almost too much, I picked up my bags and smiled all the way home. \n\nSaturday morning found me in an exceptionally good mood, I took a quick shower and made myself a cup of coffee, returning to my room to get dressed, I started to put away the new clothes I had gotten the night before, quickly deciding that the stuff I had bought online just wasn't going to make the cut anymore. I cleared out a section of my closet, hanging the new outfits with care and placing my new shoes on the shelf above. When I found the bras at the bottom of the bag, I chose the pink one and slipped it on, adjusting myself as Carla had showed me, deciding on the pink dress that had started the whole adventure and adding a pair of sandals to complete the look. I slipped on my wig, brushed it out and spent a few minutes admiring myself in the mirror before I moved to my office and started to tackle Mc Phearson. \n\nI completed my analysis and was putting the finishing touches on my proposal when I realized that it was already five o'clock and I still hadn't even looked up Carla's address in Google Maps to figure out how much time I needed to get there. A quick search told me it was only about thirty minutes away, I relaxed a bit, reread my proposal, it was possibly the best work I had done for Carter-Bergman since I had been hired and it pissed me off a little that Steve was going to take the credit, again. I decided to take another shower to get Steve out of my head and, well, just in case. \n\nI shaved twice and combed my hair into a fairly androgynous look, slipped into a clean pair of panties, I had chosen a pink pair with the lace trim and a satin bow in front, the bra I had been wearing earlier actually matched them. I chose my new linen slacks with the high waist and thin belt, a matching blouse, and a pair of low heels to complete the ensemble. Dropping my wallet and keys into the small purse Carla had suggested and full of trepidation, I locked the door behind me and hoped Carla approved. It would be the first time, except for the party in college, I had ever left the house in women's clothes. \n\nTo say Carla approved would be an understatement, she absolutely glowed when she saw me,\" I like what you chose,\" she kissed me sweetly,\" but, um, can I make a suggestion,' she kind of winced. \n\n\"Sure, you are my fashion expert,\" I smiled at her. \n\n\"Well, it's not the clothes, it's um, your friend, he kind of messes up the look. If you'll push your bits up inside and tuck him back between your legs, it will make him not so obvious. Pull your panties up tight and it will help keep him in place,\" her wince became a grimace, \"that's not too personal, is it?\" \n\n\"Considering what happened last night, I think we are way past worrying about the delicacies of you giving me suggestions,\" I laughed, pulled her close and kissed her again, stopping only when the urges in my groin suggested following her suggestion might be becoming an issue. \n\n\"So, you would be open to more?\" \n\nI had turned away and slid my hand down my slacks, finding that what she described was actually easy and that, as she suggested, my panties held everything in place pretty well, \"Depends on what you have in mind, except one time in college, I've never even considered leaving my house dressed and here I am going out with a beautiful woman while wearing girls clothes.\" \n\n\"Well, this beautiful woman likes it,\" the way she smiled at me was intoxicating, I didn't think there was anything she could ask me to do that I would say no to,\" have you ever worn a wig or makeup?\" \n\n\"That one time in college, my girlfriend made me up like in drag for a costume party, it was actually a lot of fun.\" \n\n\"I was thinking more subtle than what most people consider drag, but if you're ok with it, \"she left the question unasked and I agreed anyway. When she was done, the transformation was amazing, I was actually pretty, I would have tried to get in my pants, I laughed out loud at the thought. \n\n\"Can you teach me how to do that,\" I asked excitedly? \n\n\"I'd love to, maybe tomorrow we can go shopping and get you your own wig and makeup, maybe even some breast forms, if you'd like?\" \n\nI thought about telling her I already had a wig, but mine was a dead cat compared to the one she was letting me use, my new hair flowed down around my shoulders, framing my face perfectly, the blonde color matched mine but with subtle strawberry highlights, my eyeshadow made my blue eyes pop, the base and rouge she applied gave my face a decidedly feminine appearance, the pink lip stick was the absolutely perfect finishing touch. Carla gave me the tube and I dropped it in my purse. \n\n\"So, where is my new girlfriend taking me to dinner, \"she put her hands on my shoulders and smiled at me in the mirror. ",
        "\"I was thinking that new seafood restaurant down at the wharf,\" I smiled up at her, placing my hands gently on top of hers,\" and thank you for all of this. If you had asked me yesterday morning, I would have told you there was no way this could ever happen.\" \n\n\"I'm glad you approve, I think you're beautiful,\" Carla used her finger to draw my hair behind my ear, leaning down and kissing me sweetly on my cheek,\" but we better go before I ruin all our hard work by ravaging you,\" she smiled and turned toward the door. \n\n\"If that's an option, \" I smiled into the mirror? \n\n\"Micki,\" she gave me a new name on the spot,\" I was teasing, I mean you are beautiful, but the ravaging part is going to have to wait until we know each other a little better, besides, that's where it gets complicated. Now let's go, I'm starving.\" \n\n\"Micki, huh, I like it, and you keep telling me things are complicated, I'm taking the most beautiful woman I have ever met to dinner, I'm almost as pretty as she is, I like it, and so does she, how can it get more complicated than that?\" \n\n\"Right now, let's just enjoy tonight, I promise I'll explain everything but, for tonight, let's just go have a good time and get to know each other a little better, ok?\" \n\n\"Just two girls on the town, deal,\" I stood up and slipped my hand into hers. \n\nDinner was amazing, the hostess sat us at a table right by the window overlooking the marina, Carla and I watched the lights of the boats coming and going, shared a bottle of wine, or two, talked and laughed, she shared her story with me, and I told her mine, she seemed particularly interested in how I started dressing and how it had progressed. \n\nCarla was an only child, a preachers kid from the Midwest, she had a huge fight with her parents over something she really didn't want to talk about, they had stopped paying for her college and she had moved to the city to start over. She had played soccer and a few other sports growing up, which explained the muscular physique I had felt last night as we made out, and did her best to stay active. Tanners was supposed to be a stop gap until she found something better, but they treated her really well, she liked selling the clothes, and I could testify that she was good at it. She had been there six months and wasn't planning on leaving anytime soon. \n\nI told her all about growing up in a small town in Texas, I had been in the band and ran track, gone to a local college to get a business degree and then an MBA at The University in Austin, that got me the job I had now, I knew all about being separated from family, even though I could still go home to mine. I didn't dwell on that part as her wounds were obviously still very sore. I told her about discovering my mom's slips and how wonderful they felt when I put them on, about stealing things from my sister and about the time in college my girlfriend had dressed me up in her clothes for a party, she was particularly interested in details about that so I told her how much I had enjoyed it and how when I found out it had all been a big joke, I had broken up with her and kept the clothes anyway. I finished with how, when I moved here, I had returned to the comfort of dressing to deal with the stress,\" Honestly Carla, since you tacked me down yesterday, this has been the best two days of my entire life,\" I reached across the table and took her hand,\" thank you for everything.\" \n\n\"'But' I can feel it, there's a 'but' coming isn't there?\" \n\n\"Yes, but it's probably not what you think,\" I smiled weakly,\" I really need to go to the bathroom and I'm not exactly sure what to do about that.\" \n\nCarla laughed out loud,\" well, then let me show you,\" we got up and made our way across the restaurant, I scanned the room and couldn't help but notice the way people were looking at us, at me, most were pretending not to look, the guys were doing their best not to stare while their dates gave them dirty looks,\" Kinda fun, isn't it, the way they are looking at you, you're a hottie, I told you that,\" Carla giggled as we turned left into the ladies room,\" just pick a stall and do your business like you belong here, and um, be sure to sit.\" I did what she said, tucked my stuff back where she had told me to and even touched up my lipstick a little. The walk back to the table was even more fun because I knew what was happening and I could play it a little. I was discovering a kind of confidence I had never known existed and it was awesome, I felt like I owned the room. \n\nWe ordered dessert and coffee, laughing at all the mini dramas that had erupted around the restaurant since our trip to the ladies room, some of them had gotten pretty heated and some of the guys were still stealing glances at Carla and me. I paid the bill and my mind raced with thoughts of how fast things were happening, how wonderful it felt to be with Carla, and what I hoped was next as we took a walk along the waterfront, out to the end of the pier and back, all without a word, Carla's hand in mine, the sea breeze in our hair and the smell of the ocean filling our senses under a cloudless sky, when we got back to the boardwalk, I stopped, pulled Carla close to me and kissed her deeply, wrapping my arms around her and enjoying the closeness, this time she moaned when I grabbed her butt, \"What's so complicated about this, Carla? This is nothing but simple, it's good, no, it's perfect, and I don't want it to end.\" \n\n\"Ok, you win,\" Carla looked down as she took my hand and led me across the boardwalk to a small patio bar,\" but I'm going to need some reinforcements for this, and remember, I warned you.\" \n\nWe grabbed a table on the patio away from the music and the raucous crowd, I ordered us two glasses of wine and Carla asked for a shot of Tequila, \"Are you sure you want to do this now, tonight has been so perfect,\" I could see she felt that whatever she had to share was going to change things and she wasn't convinced it was going to be a good thing. \n\n\"Carla, I can't imagine anything you can tell me that will change how I feel about you right now.\" \n\n\"I know you can't imagine, and that's the problem,\" the waitress showed up with our drinks and Carla downed the Tequila without hesitation. I reached for her hand and she pulled it away from me. \n\n\"Carla, if this makes you that uncomfortable, you don't ever have to tell me,\" I reached for her hand again. \n\n\"But I do have to tell you because it would be unfair to go any further if I don't. You need to know,\" she reached into her purse and pulled out her wallet, sliding a Missouri driver's license across the table. I picked it up; Carl Evers, he was obviously Carla's twin. \n\nI'm so sorry Carla, when you said you didn't have any brothers or sisters, I had no Idea you had lost your brother, and he looks like your twin, you must have been devastated. I can't imagine what I would do if I lost Lucy,\" I slid the license back across the table. \n\n\"You're not getting it Micki, that's not my brother, I never had a brother, that's me, four years ago; Mike, I was born Carl, I'm trans, I have a cock just like you,\" she was devastated and I had no idea how to process what I had just heard. \n\nI sat there in silence for a few minutes, sipping on my wine, letting what Carla had told me sink in, \"And that's what you and your parents fought about?\" \n\nShe nodded,\" When I turned eighteen,\" she paused, \"I had been in therapy for a long time, my parents thought a good Christian counselor would 'heal' me. What they didn't know is that my therapist was a real Christian, not a fake one like them, she understood and listened and got me in touch with the right doctors, when I turned eighteen, I started hormone therapy, it was almost two years before my parents figured it out, my mom and her sisters are not very big up top, so it was not too hard to hide what was happening. When I told them, I was going to have surgery to fix my face and why, all hell broke loose and they kicked me out. The irony is, I had the surgery anyway and their fucking insurance paid for it,\" It felt strange to hear Carla cuss. \n\nThe pain on her face was intense and I could see the tears welling behind her beautiful green eyes, part of me wanted to hold her and let her cry, part of me wanted to run and part of me was so confused, it didn't know what to do. My heart won and I got up and walked around the table to Carla, taking her hands I helped her up and wrapped her in my arms letting her cry on my shoulder until the sobbing turned to gentle sniffles and I felt her body relax. \n\n\"I think we should go to the ladies' room,\" I looked into her eyes, considering my next words carefully realizing they were true,\" I think I can date a trans woman, but I draw the line at racoons,\" she smiled at me and I kissed her. Carla washed her face, put her mascara and eye liner back on, and redid her lipstick, even without all her makeup, she was still stunning. \n\n\"Is everything alright, miss, the manager wanted me to ask,\" the waitress was looking at Carla? \n\n\"Yes, thank you for asking, I just got a little emotional is all, my girlfriend is helping me through some stuff,\" the waitress nodded and turned to leave. Carla picked up her wine and took a sip,\" Micki, are you sure about this?\" \n\n\"I'm sure I like it when you call me Micki, and that you're smart and funny and beautiful and I feel like I can take on the world when I'm with you, and if your cock is like mine, then it's not really 'that' big a deal anyway, is it,\" I laughed. \n\n\"Don't fool yourself, I liked what I saw last night,\" she grinned a huge grin and took another sip of wine. \n\n\"So, how does this work anyway, you're a woman, a gorgeous woman, but a woman - with a cock, and you obviously like guys, because you told me you so yesterday, and yet you dress me up like a girl and make out with me and tell me how hot I am and then tell me you like my cock, but I look like a girl; I am very confused.\" \n\n\"I told you it was complicated,\" we both laughed. \n\n\"That you did,\" I smiled at her,\" seriously though, how do you see this playing out, perfect world scenario, what is it that Carla is looking for?\" \n\n\"Do you truly want to know,\" she leaned forward and put her hands on mine,\" Mike, Micki, do you really want to know,\" I nodded? \n\nCarla took a deep breath,\" Pretty Woman,\" she locked her eyes on mine, \"I want the fairy tale, I want it all, I want someone to love me for who I am, someone to take care of me so I can love and take care of them, I want a family and maybe someday for my parents to understand so they can see their grandkids. I want Carl to be so far behind me that no one knows he was ever a thing; I want to be who I was always supposed to be. What about you, what does Mike want,\" she paused and finished her glass of wine,\" and what does Micki want?\" \n\n\"Micki, I really don't know, she only showed up today, so it's going to take some time to figure out who she really is. I know I like this part of me, I like it a lot, so I don't see it going away, but how far it's going to go and what it really means; I think I want someone that understands to help me figure that out, and maybe have some fun with it along the way. As for Mike, I want what you described, I want a partner, a family, and yeah, if this works between you and me, I'd hope that your parents would be a part of that,\" I waved at the waitress and ordered two more glasses of wine, she offered a bottle and I winked at Carla and accepted,\" I think that's what most people want, what you describe. I guess the real question is do we, you, me, Micki, hell, even Carl, do we want to see if it can work for us. As for that little detail you were so afraid of, yeah, that's going to take some figuring out and some discussion, but right here, right now, I want to be here with you and drink some wine and flirt with you and maybe, if I'm lucky, when I get you back to our house, we can figure out how to fuck like rabbits until the sun comes up,\" Carla tried not to smile, but the way she blushed told me she was hoping for the same thing. \n\nThe waitress came back with the bottle of wine and poured two glasses, I paid her and left her a very generous tip, Carla just smiled at me as she picked up her glass and sipped her wine, her foot found my ankle and started rubbing up and down my calf, slowly moving further up my leg and past my knee, sliding up my thigh until she was massaging my crotch with her toes. \n\n\"Be careful, these pants are linen, they'll stain.\" \n\n\"Carla,\" I recognized the voice immediately! The look on Carla's face told me she did too, her foot left my crotch, she looked at me, mouthing, \"I am so sorry,\" as Steve walked up to the table. Steve was already a little tipsy and that made him an ever bigger jerk than normal, \"Carla, I have been trying to get ahold of you all week, I changed my mind and I would love to ass fuck you all night, that's what you like, right?\" he looked at me,\" and who is your friend? Maybe the three of us can go somewhere, now that I know you like girls, too, it could really be fun,\" he pretended to get serious,\" you know she's not really a she, don't you, she's told you she has a cock, right,\" he was enjoying tormenting her. \n\n\"Steve, just leave her alone. If you want to be mad at me, that's fine, but leave her alone!\" \n\n\"So, you're Steve,\" I leaned forward, \"I've heard about you and your tiny little pecker,\" His face turned bright red and he started to bluster, I had hit a nerve, a big one, and that told me I had guessed right,\" yes I know Carla is trans and you know what it means, don't you, It means she is more man than you'll ever be and more woman than you'll ever have, and tonight, when we get home, she's going to fuck me with that cock of hers and she's going to eat my luscious pussy, but I guess you don't know anything about actually being with a woman, now do you? Now run along little boy, I've got all the man I want,\" I dangled my pinky finger in front of me and shooed him away with the back of my hand. He tripped over a chair as he tried to get away. \n\n\"How do you know that jerk, he's the biggest ass I have ever met,\" I looked at Carla? \n\n\"First, that was fucking, and I do mean F.U.C.K.I.N.G. beautiful,\" we both laughed out loud,\" second, I went out with him a few weeks ago, he was all over me from the minute I got in his car. I had to keep pushing his hands off me. Dinner was ok, but all he did was brag about what a big shot he was at work, some kind of director or something. He even bragged about how he was going to get promoted soon because he had this stupid junior analysist that did really good work that he got to take credit for, said he had already set it up to fire the poor guy so nobody would be able to find out. After dinner, he surprised me when I got back in the car and slid his hand all the way up my skirt and well, you saw what that did,\" I could feel my face turning red,\" Micki, what's wrong? He's gone, you don't need to be mad at him, he's just a jerk.\" \n\n\"I'm that guy, I work with Steve.\" \n\n\"Oh, shit. What are you going to do?\" \n\n\"Not sure, but you are probably going to be driving me home,\" I took a huge swallow of wine and refilled my glass. \n\nI actually felt better than I thought I would when I woke up Sunday morning, I had earned the hangover and was almost prepared to deal with that, what I didn't expect, was to wake up in a strange bed. I rolled over and whoever had been next to me, Carla, I hoped, had already gotten up. I crawled out of bed and made my way to the bathroom, finding a towel and a washcloth on the vanity, I turned on the shower, grabbed the washcloth and stepped into the stream of hot water. I tried to remember what had happened last night, I got as far as finishing the bottle of wine by myself and Carla helping me into the car, there was some crying and some yelling and some cussing, but that was it. \n\n\"Well, that was supposed to be my shower, but since you beat me to it, I guess I can wait,' I pulled back the curtain to see her standing there in a very short robe, loosely tied around her body, exposing most of her breasts with just the tip of a penis hanging below the bottom hem and a very seductive grin on her face. \n\n\"You could join me,\" I smiled, \"but only if you let me have some of that coffee.\" \n\nCarla handed me the cup and dropped her robe, stepping toward the tub,\" are you sure about this,\" she asked. \n\n\"I don't know yet, I'll let you know when I come back from the dead,\" I drained her coffee and handed the cup back to her. She set it on the vanity and joined me in the shower. Stepping up behind me, she squirted a huge amount of shampoo in her hands and started to wash my hair, using the excess, she worked her way down my body, gently scrubbing and massaging and exploring every nook and cranny she could find; down my back and up my sides, around to my chest where she spent a few minutes paying with my nipples, I could feel myself starting to get hard. \n\nDown my thighs to my feet, she washed every inch of my naked form, saving the best for last, her hands found their way around my waist to my crotch,\" turn around,\" she whispered,\" I want to see.\" I turned slowly, our eyes met and we kissed passionately under the steaming hot water, her hands never left my crotch settling on my cock and gently moving up and down its length, \"You asked me last night what I want, there is something else I want, something I didn't tell you about, something I was saving until I was sure,\" I was starting to moan. \n\n\"You're sure now,\" she nodded? \n\n\"Whatever it is, it's yours,\" I kissed her again. \n\nShe held the kiss as long as she could as she turned around and leaned against the wall of the shower,\" I want to give myself to you, if you want me, that is,\" she arched her back pulling her cheeks apart, showing me what she wanted me to do. \n\nI was mesmerized by what was before me, the long red hair wet and cascading down her back, the small waist and luscious full hips and the pulsing rose between her cheeks. I put my hands on her hips and she moaned, sliding them first up her back to her shoulders and then back down again, I reached around and tried to fondle her cock,\" Uh, Uh, he doesn't get to play, He's in permanent time out,\" Carla pushed my hands away,\" I'm your girlfriend now, remember,\" she emphasized the word girl,\" make me feel like it, please,\" and so I did, returning my hands to her ass, I traced my fingers down her crack and around her hole, using the lather from the shampoo, I lubricated her hole, she eagerly accepted first one finger and then two, moaning louder and louder as I added the third and started to finger fuck her. \n\n\" Ohh, Mike, that feels so good, but you know what I really want,\" I had never even tought about what I was about to do, but with Carla, it suddenly seemed so natural, I pressed my cock against her sphincter and started to push gently, my head slipped past the resistance and she clenched, \"My god yes,\" then more and more, deeper and deeper, listening to Carla moan and beg me to go further, until I as completely inside her, my balls slapped against her as I found my rhythm, pumping harder and harder, faster and faster as I got closer and closer. \n\n\"Oh, my god, oh my god, yes, Micki, yes,\" Carla repeated over and over until she clamped down as hard as she could gripping my member like a vice, spasms ripped through her body as she let out a muffled scream, I could feel the tremors rippling through her body as she relaxed allowing me to explode deep inside her. \n\n\"Holy shit, Carla, that was amazing, I have never in my life,\" I wrapped my arms around her relishing the feeling of her naked body against mine as I slowly softened inside her. \n\n\"Not bad for your first time,\" she pulled away from me and turned around in the shower, wrapping her arms around me and kissing me hard, \"and for what it's worth, I already took a shower, I just wanted you,\" she smiled at me and kissed me again,\" let's go get some breakfast and then maybe we can see what else you'd like to do for the first time.\" ",
        "Carla let me borrow some of her clothes and helped me with my makeup, I opted to not wear the wig, instead styling my own hair in a more feminine style, It actually looked nice,\" you are going to grow that out,\" Carla half asked and half told me.\" I like long hair,\" she kissed me on the cheek. \n\nBreakfast was at a small diner not too far from her house, we chatted about how much fun we'd had last night, until Steve showed up and then laughed about how I had completely owned him, both holding out our pinky fingers, I'm sure the other people in the restaurant thought we were crazy. The salon Carla used was in the same shopping center, while I kept my hair longer than most guys, there wasn't enough for a man-bun, the stylist made some suggestions and cleaned it up a bit, giving me bangs and even adding some subtle highlights. The result was a very cute cut that could be feminine, or if I combed it right, androgynous, in other words, perfect. I had never had a manicure or a pedicure before, enjoying both immensely and choosing a soft pink for my nails to match Carla's. When they were done, even without makeup, I was either a slightly masculine woman or a very feminine man. I chalked it the whole makeover up as one more thing Carla had introduced me to that I hoped to enjoy many more times. \n\n\"So, your, um, friend, he doesn't work at all anymore,\" I asked as we headed back to the car. \n\n\"He might if I let him, but I don't like it anymore, I mean, it feels good, but it feels wrong, girls don't do that.\" \n\n\"Sometimes they do, I had a roommate in college whose girlfriend used a strap-on on him, he said it was pretty intense.\" \n\n\"So, you're saying you want me to fuck you like you did me this morning?\" \n\n\"I don't know, I'm just trying to get a feel for the rules, I guess, but from the way you enjoyed it, I wouldn't say it was out of the question, I don't think I've ever even heard of someone having an orgasm like you had, and that kind of excites me. To be honest, if somethings going to go in me back there, I think I'd prefer it be you than some toy, but as long as you're involved, I think I'd be willing to try it either way.\" \n\n\"We'll see, but don't get your hopes up, he's going away as soon as I can afford the surgery anyway. Then you can please me in all kinds of ways,\" she smiled a big smile,\" and I'd like that a lot.\" \n\n\"I'd like that, too,\" I smiled thinking about the long-term implications of what Carla had just said and wondering if this girl I had just met might truly be 'the one,' so where to next?\" \n\nCarla pulled out her phone, \"let me see if she's ready for us, I think you're going to enjoy this, too,\" she dialed a number,' Hi, it's me, are you ready? We can be there in about fifteen minutes. Great, we're on our way.\" Carla directed me into a residential neighborhood to a big two story house in a cul-de-sac, the woman that answered the door was Francine, she was Carla's Mary K consultant and was going to be giving me a crash course in what my colors were and how to properly apply my makeup, we talked about when it was appropriate to go heavier and when it was best to stay light, she even had suggestions for how a few light touches here and there could be beneficial in 'guy mode.' I bought everything she suggested and with her expert assistance, had completely done my own makeup twice before we left. \n\n\"Micki, you're lucky, you know, your beard is not very heavy and you shouldn't have too much of an issue with it showing through but, if you are even thinking about going down the same path as Carla, I'd suggest electrolysis anyway,\" she smiled and gave me a big hug,\" you are beautiful, by the way,\" I certainly felt that way and from the look on Carla's face, she agreed. \n\nFrancine was right, none the men in my family had much body hair and me being blonde enhanced that effect, my beard was light and spotty I only needed to shave twice a week at the most, the hair on my arms and legs was almost unnoticeable; I had shaved my legs this morning anyway, Carla had even helped. I had been shaving the small tuft of hair on my chest for years. \n\n\"Grab us a table,\" I put my hand on Carla's arm as we entered the restaurant,\" I need to make a pit stop. \n\n\"Ok, but hurry, I'm hungry, and lunch is my treat,\" the look on her face reminded me of the way my dad looked at me when he took the training wheels off my bike and I rode it by myself for the first time, great affection mixed with a large amount of pride, Carla's little girl was becoming a woman. I smiled at how it made me feel. The two ladies in the rest room smiled friendly smiles as I entered, choosing a stall and taking care of business, I washed my hands and decided to refresh my lipstick, not because it needed it, but because I wanted to watch myself do it in the mirror, it all felt so natural. \n\nCarla had gotten us a booth along the window, \"Having fun, yet,\" she joked as I slid in across from her. \n\n\"Absolutely, thank you for this, all of it, last night was wonderful; this morning has been magic, I'm not sure what I'm going to do about work tomorrow,\" I laughed. \n\n\"You really need to stop thanking me, I'm having as much fun as you are, it reminds me of when I got to where I could try to really be me for the first time, I remember the nerves, the excitement and then when it clicked, wow,\" she mimicked an explosion with her hands.\" Do you think they would object to Micki showing up every now and then, some companies are pretty accepting these days,\" Carla raised an eyebrow and cocked her head to one side? \n\nWhat I had thought was a joke was now an issue, what ifI could dress at work? How far could I go and what if Micki became the new normal,\" I, I don't know,\" I could feel my brow furrow. \n\n\"Did I say something wrong,\" Carla reached across the table for my hand? \n\n\"No, I just have been so caught up in the moment, ever since I met you at Tanners, it has all been about the 'right now,' immediate gratification, I never stopped to think about going back to the real world.\" \n\n\"Who's to say the 'right now' isn't the real world? Are you happy? Are you having a good time? Are you comfortable? Do you like who you see when you look in the mirror?\" \n\n\"Yes, to all of that and I love who I see in the mirror, but I also like being Mike,\" I paused,\" and you want a boyfriend, right, not a girlfriend?\" \n\nCarla laughed,\" But this isn't about me, it's about you, it's about you being true to who you are,\" she took a sip of water,\" I know a little bit about that, remember,\" her smile was so disarming,\" and Mike or Micki, I don't care, it's the person inside all of it that I fell in love with last night. When you stood up to Steve and told him to stuff it, I knew then that I had found my fairy tale, that's why I let you have me this morning,\" she picked up her menu and hid behind it. \n\nI sat in silence for a few minutes, letting it grow, soaking up what Carla had said, letting her words sink in, I could feel the tension building across the table, \"Simmons, Michael Travis Simmons,\" I finally said, \"If you're going to be my girlfriend, you should at least know my full name.\" \n\nThe menu came down slowly, a weak smile was overshadowed by the anxiety and fear in her beautiful green eyes \"Are you sure, I will understand if you say no, really, are you sure you want someone like me, are you sure you want a...\" she couldn't finish the question. \n\nI thought about everything that had happened, how it had felt when I met her, how it had felt when she told me her secret, how it had felt when I had protected her from Steve, and how it had felt when she had let me take her, there was nothing bad or wrong about any of it. \n\n\"Carla, yes, I want you, who or whatever you are\" I winked and picked up my menu,\" and, to be honest, I fell in love with you when you walked into the diner last Friday and started stealing my fries, and you did warn me it was complicated.\" \n\nThe anxiety and fear vanished from Carla's eyes, we ate a quick lunch and went back to her house, leaving a trail of clothes from the front door to her bedroom, falling onto the bed and into each other's arms, our passion surged, Carla's hands went straight to my crotch while mine explored the wonders of her beautiful body, sliding up and down her long arms and across her back, sliding down and caressing and then grabbing her perfect ass as I kissed her full lips, sharing moans of growing sexual tension with her. Carla pulled away, reached into the nightstand and produced a bottle of lube, I rolled onto my back as she slathered my cock with the slick liquid, \"now your turn,\" she handed me the bottle and got on all fours showing me her rose, coating my fingers I began to spread the lube around her hole before slowly pressing my fingers into her aching desire, one, then two, then three, my fingers slid easily in and out of her as her moaning grew. I tried to turn her on her back, but she resisted,\" I don't want you to see me like that,\" she protested. \n\n\"Carla, I love you, all of you and I want to kiss you and see your face while I make love to you, I want to fondle your breasts and suck on them while I fuck you, he's only one small part of you and I love him, too, I want you all.\" \n\nShe slowly rolled over spreading her legs and pulling them up to her shoulders, trying to hide her full erect cock with her hands. I leaned down and kissed her sweetly as I positioned myself at her gate, sliding slowly inside her as she relaxed. \n\nI started to move in and out, slowly at first , then faster and more aggressively, watching her tits bounce up and down with each thrust and feeling her cock against my stomach, she wrapped her legs around my waist and clenched her ass as she began to shudder, her own warm juice covered her stomach and breasts and I erupted deep inside her. \n\nCarla relaxed her legs and I fell on top of her burying my tongue deep in her mouth, kissing her passionately, slowly moving my attention to her ear and then to her neck, I left a trail of kisses along her collar bone and into the valley between her breasts. I took my time exploring them both, noticing that they were completely natural, her hormone therapy had done a good job, kissing and suckling one while my fingers teased and pinched the nipple of the other, I took turns, alternating my attention from one glorious mound to the other until I could hear Carla starting to moan again, then ever so delicately, ever so slowly, I moved down her stomach. \n\n\"Micki, please,\" I heard the faint protest but I couldn't , wouldn't stop, the salty tastes of her release showed me the way to the prize I was looking for, across her stomach to her belly button, I stopped and played with it for a few moments, teasing it with my tongue and then kissing my way past her waist to the base of her cock, I could feel her hard against my cheek and I stopped, looking up at Carla, I could see it in her eyes, the mixed emotions, but mostly the fear, I kissed the base of her cock just above her balls, and then the tip, gently licking the precum seeping from her member as I laid it gently on her stomach,\" Ok,\" I said, raising above her and looking down at her extraordinary beauty,\" He's really quite nice,\" I reached out and touched 'him,' \"but I understand.\" \n\nCarla opened her legs, \"she's really nice, too, and she's hungry,\" Carla laughed as she pushed me onto my back and climbed on top of me, I watched as she lowered herself onto my throbbing erection, reaching up and fondling her perfect breasts as she lifted herself and then thrust me deeper and deeper into her aching hunger, I could feel her shudder as surges of her orgasm coursed through her body, I was not far behind and soon filled her with another load of my juice, she collapsed on top of me resting her head on my shoulder,\" I do love you Micki, I really do.\" \n\n\"Then let me help you,\" I could feel her erection between us,\" let me please you again, when 'he' is gone, I will gladly eat your pussy, but for now, 'he' is here. I've never done it before but let me at least try, I do know what it feels like to be in that condition, after all.\" \n\nCarla lifted up and looked down at me, I could see the reservations in her face, \"it's not going to change how I feel about you, I promise, if anything it will make us closer,\" she rolled over on her back and closed her eyes. \n\n'He' was not too big but not small either, about average with a nice full head and a slight curve, I considered him closely as I tried to figure out how to do what I had promised, I positioned myself so 'he' was right in front of me and took 'him' in my hand, it felt familiar but different, leaning forward, I licked the tip as I had before and this time I swirled my tongue around the bulge. Being careful of my teeth, I slowly slid 'him' in my mouth and, using my tongue, guided 'him' deeper and deeper. \n\nFocusing on the slight musky taste and the feeling of fullness, I soon found I had 'him' completely in my mouth and decided that I was enjoying the feeling. Cupping Carla's balls in my hand, I started to move up and down on the now slippery shaft, thinking about what the girls I had enjoyed had done to me and doing my best to imitate them. When Carla started moaning and fondling my cock, I knew I was on the right track and got a little more aggressive, pumping 'him' in and out of my mouth faster and faster. Carla surprised me when she came, there was not much, but I recognized the clench and then the release, followed by a small shudder and a sigh, the salty taste in my mouth told me I had achieved what I had set out to do. \n\n\"Thank you, that was actually nice,\" Carla smiled at me,\" now lay back and let me show you how a real woman takes care of that,\" I readily obliged. \n\nMy god, I thought Carla's ass was heaven, what she did to me with her mouth was almost indescribable, using her tongue and lips she kissed and caressed and sucked, using her hands to massage my balls while she held me deep in her throat and then using them to stroke my slippery shaft as she took one aching orb and then the other in her mouth, Carla brought me to the brink time and time again as I moaned loudly, begging her to let me finish and hoping that she would continue to torture me with the pleasure she was giving me. Then it happened, I was so focused on her mouth I didn't notice her putting the lube on her fingers, the cool liquid felt nice in my crack as she reached for her goal, first one finger and then two slipped inside me, she bent them forward, finding that spot and pressing gently as she drove my aching cock deep into her throat, I'm pretty sure the neighbors heard my scream as I convulsed and shook under the power of the most incredible orgasm I had ever experienced. \n\nCarla brought her lips to mine, sharing just a taste of her reward with my eager mouth,\" Please, no, leave them there,\" I whispered as she started to pull her fingers from my hole,\" it feels so good.\" \n\nCarla started moving them in and out,\" so you like this, don't you?\" \n\n\"Yes, very much, it feels so good, I understand why you like it so much,\" she kept thrusting her fingers into me faster and harder. \n\n\"Do you want more? I can give you more if you want it.\" \n\n\"Yes please, \"I practically begged. \n\nCarla pulled her fingers from my hole and rolled over to the side of the bed, returning with a huge dildo, it had to be at least eight inches long and half again as thick as my own cock. I watched eagerly as she spread lube all over the shaft, \"Are you ready,\" she asked? I just nodded opening my legs as far as I could in anticipation of what was to come. \n\nIt was amazing, the dildo stretched me open as she worked it deeper and deeper inside me, taking her time to not go too far too fast, it hurt a little at first, but the pain quickly turned to pleasure and I could feel something rising from deep inside me, similar to what it felt like when I got excited and hard but different, this was an energy, almost a warmth that was spreading down my legs and up through my body and out int my arms, Carla worked the massive dong in and out slowly driving it deeper and deeper until I could feel it base against my cheeks. \n\n\"That's my girl,\" Carla kissed me,\" do you like that? It feels good doesn't it?\" \n\n\"Oh, god yes,\" I muttered as she started moving it in and out, fucking my aching hole with a growing fierceness, periodically thrusting it as deep as it would go and getting a muffled scream in return. The energy, the warmness I was feeling was changing, becoming more and more intense, I could feel it surging through my body, getting stronger until it was almost unbearable, I reached for my cock, wanting to bring the coming orgasm faster only to have Carla slap my hand away, rebuking my efforts. \n\n\"Girls don't do that, remember, you're just going to have to wait,\" she continued pumping me with the toy. Finally, my body could take no more and a series of spasms spread from my aching ass through my torso, arms and legs, I couldn't stop shaking, I had thought the orgasm from Carla's blow job was intense , when the tremors and aftershocks this one left subsided, I couldn't move. \n\nCarla laid next to me holding me close and leaving her toy deep inside me, allowing me to enjoy the fullness as she ran her fingers over my sweaty body and smothered me in a million small gentle kisses. We lay together for a while, kissing and caressing each other before we took a shower. I got to fuck her one more time as we showered, I fixed my hair and did my makeup as she fixed me a very nice dinner, we mostly just smiled at each other eating in silence as thoughts of our afternoon floated through our minds. \n\nCarla loaned me a skirt and top to wear home, kissing me hard as I got in my car,\" I think you should move in with me,\" she leaned in my window and kissed me one more time,\" think about it, ok,\" and I promised I would? \n\nAll the way home, I thought about the weekend, what had started when we met Friday afternoon and how quickly it had become the passionate afternoon of mind-blowing sex, and then the idea of moving in with Carla, which both excited me and terrified me at the same time. \n\n\"Excuse me, miss,\" my next-door neighbor Joe and I had bumped into each other on the stairs, he had no idea who I was. I looked back when I got to the landing and caught him taking one more look, the hungry smile he gave me sent a small tingle up my spine, from his position, I was pretty sure he could see my panties up my skirt. I smiled to myself as I unlocked my door. It had been a long weekend, even though I had already had three showers today, I opted to soak in a hot tub to think things through, I wasn't sure what I was going to do about work in the morning, what was I going to wear, would it be Mike or Micki that showed up, and then there was the whole Steve issue to deal with. Whatever happened, tomorrow was going to be interesting. By the time I crawled in bed, I was completely worn out, emotionally, and physically; I slept like a baby. \n\nMonday morning found me refreshed and ready to face whatever came, I was sore from my tryst with Carla, her toy had literally gone places I had never thought would ever be explored, the dull ache in my hips and butt would remind me of that wonderful experience all day. I made myself a cup of coffee and pulled the Mc Phearson file out of my briefcase, looking it over one more time and reviewing my analysis and proposal to make sure I hadn't missed anything too obvious. Happy with what I had done, I rinsed my coffee cup, put the papers back in my briefcase and went to get dressed. \n\nI found that I could just tousle my hair to get the effect the hairdresser had intended, choosing light makeup, a little eyeliner but no mascara or lipstick, leant me toward putting on one of my bras, and It became obvious that Micki was winning. Deciding I should at least try to be a little discreet, I put on my standard dark grey pinstripe suit, slipped on my low heels, grabbed my briefcase, dropped my lipstick and mascara in my purse just in case and hung it on my shoulder, and headed out the door. ",
        "\"Morning Mike,\" it was Joe, he did a serious double take as we passed in the hall,\" Hey, wait a minute,\" it had clicked,\" damn, was that you on the stairs last night?\" \n\n\"See you later, Joe,\" I just kept going, a huge smile on my face, letting him think whatever he wanted about the situation. \n\nThe walk to my office was fifteen minutes, twenty if I stopped at the deli for a second cup of coffee, which I did, the lady behind the counter complimented me on the new look and I gave all the credit to the gorgeous redhead that had joined me for lunch on Friday. She smiled, \"Good for you, a man needs a good woman,\" I paid for the coffee and had to fight the urge to skip the last two blocks to my building. \n\nI got a double take from the security guard, but he smiled, so no harm no fowl, I hit the button for my floor when a voice I recognized hollered, \"Hold that elevator please.\" \n\nIt took Bill a few seconds, \"Mike, Mike Simmons, right?\" \n\n\"Good morning Bill, how was your weekend?\" \n\n'Actually, pretty great, the kids came up with the grandkids,\" there was a brief pause,\" new look, I see?\" \n\n\"Yeah, new girlfriend, she likes it, so I'm going with it for now, the mani-pedi was actually nice,\" I showed him my nails, and it hit me; I had my chance,\" by the way,\" I reached into my briefcase,\" Steve said you wanted this asap,\" and I handed him the papers. \n\n\"This is Mc Phearson. What the hell are you doing with Mc Phearson,\" he didn't look happy? \n\n\"Steve dropped it on my desk Friday and said you wanted it as soon as possible, so I worked late Friday and over the weekend to get the file organized, it was a real mess, and to do a quick 'A and P'. There's some opportunity there.\" \n\n\"Steve gave 'you' Mc Phearson? Can you follow me to my office for a minute, I think we need to have a chat,\" the way he emphasized 'Steve' and 'you' told me I had hit a nerve? \n\nI sat quietly as Bill looked over the file and read my 'A and P', \"This is your work, you did this over one weekend,\" he looked worried? \n\n\"Well, I actually had a date Saturday night, so I finished it before I went out and reviewed it again this morning. Is there a problem?\" \n\n\"Has Steve done this before, dropping files on you like that?\" \n\n\"It's kind of standard operating procedure, I thought that was the way the company worked.\" \n\n\"And what other projects has he given you, do you happen to remember?\" \n\n\"Um, there was Bellows, First Equity, Masters and Smith, Franklin, a few others. Since I'm so new, Steve reviews them before they get submitted, I'll admit I'd like a little more feedback, but I'm enjoying the work, so I just go with it.\" \n\nBill rocked back in his chair, \"Can you do me favor and see if you can find copies of any of the reports you did and forward them to me as soon as you can? If they've got a date stamp, that would be helpful.\" \n\n\"Sure, I keep them all in a folder in my company share, I'll just give you access, if that's ok?\" \n\n\"That would be perfect and one more thing, Let's not let Steve know we talked OK,\" he handed Mc Phearson back to me. \n\n\"Sounds good, is there some kind of problem?\" \n\n\"Possibly, I want you to drop that on Steve's desk and then take a sick day. When you get back tomorrow, come straight up here to see me, got it?\" \n\nI nodded my acknowledgement and got up to leave. \n\n\"And Mike, the new look is fine, check with H.R. though if you plan on going much further, I like the haircut,\" he smiled,\" I'll see you tomorrow.\" \n\n\"You're late,\" Steve was waiting at my desk when I got there, the look on his face told me he absolutely did not approve of my new look, but it also told me he didn't connect me with Saturday night,\" and I told you Bill wanted Mc Phearson as soon as possible, that mean it should have been on his desk,\" he made a very dramatic display of looking at his watch,\" fifteen minutes ago. \n\nI handed him the paperwork and apologized, assuring him it would never happen again. \n\n\"You're damn right it won't,\" I knew what he meant but he had no idea why I agreed with him. I just smiled as he stormed away from my desk toward the elevators. \n\nIt only took a few minutes to find my share and to give Bill access, my IM pinged,\" Thanks, now get out of here,\" it was Bill. \n\nI closed my laptop, put it back in my briefcase and headed to the elevators, passing Carol from H.R. and a security guard in the hall, realizing what was happening I kept walking when they didn't recognize me, out the front door and down the street to the diner to wait until Tanners opened and I could see Carla again. The call to H.R. for the sick day was next, I left a message for Carol, who was probably looking for me somewhere in the building, letting her know I should be in tomorrow if I felt better and asking her to call me if there was anything else she needed. \n\nI dropped my phone back in my purse, smiled at myself and headed for the bathroom, finished my makeup, touching up my base, adding the mascara and pink lipstick that matched my nails, took off my tie, and unbuttoned my shirt a little, putting the collar outside my jacket,\" sometimes girls need a good woman, too,\" the lady that ran the diner smiled at me as she filled up my coffee, \"very pretty.\" \n\nCarla was already busy with a customer when I walked in, her associate Bruce, met me half way across the floor,\" I'm thinking that suit is just a bit too masculine for someone as beautiful as you, would you like to look at some other options,\" he was very smooth and also obviously very gay. I caught Carla's eye, she waved and gave me a big smile, quickly returning her full attention to her customer. \n\n\"Actually, yes, I think I'd like that,\" I followed him across the showroom. \n\nI spent almost an hour, trying on different suits and flirting with Bruce before Carla finally came and saved me, \"Girl,\" Bruce looked at Carla, \"your new girlfriend is a hottie, but she is wearing me out,\" we all laughed, I thanked him for his help and asked him to hold a few of the suits for me if he could, He said he would absolutely do that, but just for me, and then winked at me. So that Carla could see it. \n\nI explained to Carla what had happened this morning and let her know that I would probably find out in the morning if I even had a job and that I had no idea what was going to happen to Steve but, from Bill's reaction, would be surprised if he made it to the end of the day now that his little scheme had been exposed. She grabbed my hand and practically dragged me to the back of the store, wrapped her arms around me and kissed me like we hadn't seen each other in months. I slid my arms around her waist and buried myself in the passion of the moment. \n\n\"OK, lovebirds, break it up,\" it was Bruce, \"listen, get out of here. Carla, I'll cover for you and if the boss says anything, I'll tell him to fuck off, now shoo,\" he laughed out loud and Carla grinned from ear to ear. \n\n\"Micki, this is Bruce Tanner, he owns the store,\" now that I was in on the joke, I laughed too. \n\nCarla grabbed her purse, I grabbed her hand, fifteen minutes later, we were naked in my apartment, buried in each other as deep as we could go in as many ways as we could find. We literally made love non-stop all morning, Carla had decided it was ok for me to suck on her 'clit' and got tired enough of my pleading that she fucked me once just to get me to shut up, I was pretty sure she enjoyed it and I knew that I did, but didn't want to push my luck by asking for a repeat performance, just yet. \n\nCarla took back the skirt and top I had borrowed to get home and I chose the sundress with the lavender flowers and some sandals; we both took a few minutes to fix our makeup and headed out to lunch. The diner where we had met was my go-to and Carla was fine with that, we waved at Bruce as we walked by and the lady at the diner just smiled and showed us to our table. \n\n\"You know, I tried to call you last night and then again this morning,\" Carla looked at me a little sideways,\" I was worried until you came into the shop.\" \n\nI had officially discovered one downsides of carrying a purse, if you leave your phone on vibrate, you can miss a lot of calls, I pulled out my phone and sure enough, there was a missed call last night and one from the same number this morning. After adding Carla's name to her number I counted twenty fivecalls since I had called Carol about taking the day off, most of them from the same number and a few that looked like they were from the company exchange, it looked like Carol had called me back, and one I didn't recognize at all. I switched to voice mail, deciding to save the two from Carla for later and started listening to messages to see what I had missed. Steve was furious, so much so that he had called me twenty times to vent his rage, leaving six messages in the process, some of which were very intense, I'm not sure some of the things he threatened were even possible. Carol had indeed called me back, once to insist that I contact her as soon as I got back into the office, before I did absolutely anything else and once to tell me to ignore that message and just get better. Bill had called to thank me, letting me know he would explain in the morning and telling me to enjoy my sick day, and an Agent French, from the F.B.I. wanted to talk to me, something about Steve. I called agent French and it turned out he was just leaving Carter-Bergman, I told him where I was and a few minutes later a big man that needed a better suit walked in the door, the lady that ran the diner pointed me out, he looked, said something to her, looked again, shook his head and headed over. \n\n\"Jim, Jim French, FBI, you're Michael Simmons?\" \n\n\"I am,\" I pulled out my driver's license and showed it to him,\" this is my girlfriend Carla Evers,\" I motioned to Carla,\" how can I help you?\" \n\n\"Based on what we already know, this should only take a few minutes, may I,\" he started to sit down and pulled out a small recorder, setting it on the table between us. \n\n\"Please do, your message said you had some questions about Steve, what would you like to know?\" \n\nHe was right, it didn't take long, I had known Steve for only six months, we worked together and that was about it. I had seen him once outside the office, Saturday night when he had made inappropriate comments to Carla and I had run him off, Steve had been a little drunk, so nothing came of it. I suspected he was stealing my work and taking credit for it but never had a way to prove it, I told him about running into Bill on the elevator this morning and about our conversation in his office. Not much else to tell, Steve was an unapologetic ass, a jerk of the highest order, other than that, I didn't know much. \n\nI showed him the messages and offered to forward them to him, he had to show me how to do it and said it would be very helpful in the investigation, Agent French thanked us for our time and got up to leave,\" off the record,\" he looked at me and then at Carla, \"you - and your boyfriend here - are fucking gorgeous,\" I'm not sure who blushed more, Agent French, me, or Carla. \n\nCarla and I spent the afternoon wandering around downtown, ducking in and out of shops, window shopping and people watching, talking about the past few days, and stealing kisses when the mood struck, which it seemed to do often, we ended up in a small park not too far from the diner and sat quietly, watching as the sun set and the lights of the city came to life, talking about how curious and wonderful the transformation was, noting how a place, or a person, could be so much of one thing and then without much effort, something completely different, all the while having the same essence, the same soul. We made our way back to my apartment, stopping only to grab some hotdogs from a street vendor and listen to a street musician doing an excellent rendition of Ziggy Marley's 'Changes,' I dropped a twenty in his guitar case and wrapped my arms around Carla thinking about the message of the lyrics, singing 'You can find religion in the freedom you choose' in my head all the way back to the apartment. \n\nCarla and I took our time making love, exploring each other as if it were the first time, relishing each discovery and exploring its depths as the ebb and flow of our passion made the air in the room thick with anticipation, I made Carla the sole focus of the evening, allowing her to kiss and caress me but never letting her take a dominant role in our love making, this was all about letting my girl know just how much I wanted her, showing her just how much her feelings, her pleasure meant to me. I suckled at her breasts as I my hands explored her delicate skin, venturing across her stomach and up and down her thighs around her hips, cupping and then squeezing her luscious ass, taking a moment to trace a line along her crack to gently acknowledge her rose, I teased and sucked her 'clit,' eagerly accepting the reward I received before I climbed between her legs, claiming her womanhood as mine again and again; I would come inside her three times before Carla begged me to stop and I was completely spent, she offered to reciprocate, but the moment was too perfect to disturb, as I softened and slid from her ass, I laid my head on her shoulder and wrapped my arm around her,\" I love you Carla,\" I whispered.\" \n\n\"I love you, too, Micki,\" we were asleep before we knew it. \n\nTuesday morning found us in a delicate embrace, Carla's head was on my shoulder, her fingers tracing designs on my chest and our legs tangled in the sheets, her breasts rose and fell against my side as she breathed and I could feel her 'clit' large and full against my thigh,\" good morning, her sweet voice kissed my ears,\" thank you for last night, that was very special,\" she looked up at me and I reached down to find her waiting lips, \"so do I get a turn now,\" her hand slid down to my morning wood, standing proud between my legs? \n\n\"I'd like that,\" she hadn't waited for my answer, her lips and tongue had already started to work on my erection as the words left my lips,\" but we don't have a lot of time,\" I closed my eyes and relished the feeling of my cock in her beautiful mouth. When she started to probe my ass, I reached for the lube and handed it to her, her fingers were soon thrusting inside me, searching for the spot we both wanted her to find, when she found it and pressed, I erupted down her throat,\" you don't have to, Carla,\" I offered a weak protest as she climbed between my legs and pushed my knees toward my shoulders, slathering lube on 'him.' \n\n\"But, this time, I want to,\" she smiled at me and pushed her cock inside me. \n\nWe took turns rinsing off in the shower to avoid any more temptation, I stripped the sheets from the bed and made coffee while Carla got dressed, she could wear the same outfit she had worn yesterday, since she had only worn it for about two hours before it found the chair off to the side of my room, I opted for a very feminine and very professional pantsuit I had bought from Carla Friday night and a pair of low heels, today Micki was going to work, I figured that whatever happened yesterday meant today was a whole new game and I should start it as who I really wanted to be. \n\nI talked to Carla about it over breakfast and she described the process, therapy was important to make sure it was more than just a passing phase, then hormones and last would be the surgery, if I wanted to go that far, she suggested strongly that I take some time off and go home to talk to my family before I did anything, reminding me that Mike or Micki, she loved me anyway. \n\nBill wasn't too surprised at my outfit but reminded me to talk to H.R. before I went any further, I told him Carol was my next stop. Steve and a few others had been fired, some of them, including Steve had even been arrested. It was clear that I had no knowledge of their scheme to defraud the company and its clients, but there was going to be an investigation. \n\nSince it was my analysis they stole, I was going to be on administrative leave for a while until everything settled down, my entire department was being disbanded, me and a couple of other junior analysts that had shown promise were being transferred to other departments and more were being let go with severance, I was going to be reporting directly to Mark Fletcher, one of the companies partners, as a special assistant, evidently, even with my limited experience, my analysis was excellent and Mark wanted to mentor me personally, it also came with a raise in pay, but I would find out more about that later. I was informed I was having lunch with mark at his club at 11:30 sharp, there would be a car for me outside the lobby of my apartment at 11. \n\nCarol, laughed when she saw me,\" I walked right past you in the hall yesterday and didn't even know it, you look awesome,\" she motioned to the chair opposite hers,\" so, Bill filled me in and obviously you are not the one being let go but there will be some paperwork for your new position, and,\" she slipped a packet of papers across the table,\" since you are now past your six months' probation, it comes with benefits, junior executives get stock options, there's the 401k, which the company matches, and, you are eligible for full medical and all that stuff. Take your time reviewing this, it all takes effect today, but you'll want to look it over to decide what options you want to elect,\" she took a breath,\" and so you know, the medical covers gender issues, too.\" \n\nI smiled and took the packet,\" thanks Carol, so I was really going to get fired yesterday?\" \n\n\"I'm afraid so, I probably shouldn't say this but, Steve had spun a pretty damaging story about you, pretty much blaming you for us losing the customers he and his partners cheated, this whole thing is surreal the way it played out, so is it still going to be Mike,\" she asked intentionally changing the subject? \n\n\"For now, I think so. According to Bill I'm going on administrative leave for a while, until the investigation is over, I think I'm going to go see my parents and my sister, introduce them to my new girlfriend, figure this whole thing out,\" I pointed to myself, \"So, is there anything I need to do right now; before I go home to see my parents, I mean?\" \n\n\"No, you have forty-five days to make your option selections and everything goes into effect today, so, go see your family, and I'll let you know when you need to come back, and before I forget,\" she slid an envelope across the table,\" this is your new salary, Mr. Fletcher was very impressed with your work, to say the least. I think you're going to be very happy with your new deal.\" \n\nI picked up the envelope, afraid to open it and turned to leave, \"thanks for everything Carol, I'll keep in touch and, if anything urgent comes up, you have my number, right?\" \n\n\"That I do, and one more thing, where did you get that pantsuit, it is beautiful and looks amazing on you?\" \n\n\"I do most of my shopping at Tanners, just down the street, ask for Carla and tell her Micki sent you, she'll take good care of you,\" I smiled and walked out of her office. \n\n\"Micki, huh,\" she smiled at me as she wrote 'Tanners' and 'Clara' on a post it? \n\nThe Cadillac showed up at exactly 11, the chauffeur got out and opened the back door and I climbed in, exactly thirty minutes later, we arrived at Briarstone Country Club, a nervous man with wireframe glasses opened my door,\"Mr. Fletcher is waiting for you, this way please,\" I got out of the car and followed. \n\nMark was younger than I expected, I had read about him in the orientation when I first started, a Harvard Business School whiz Kid and somewhat of a maverick, he had come on board and literally saved Carter-Bergman from bankruptcy, he was a full partner in less than five years,\" Not what I expected but, Ok, have a seat,\" he motioned me to a chair. He ordered my lunch for me and without much ceremony, started reviewing the detail of every proposal I had done, it turns out there were eleven of them worthy of his attention. ",
        "I had to explain or defend my conclusions on the fly without a chance to review any of the information. I amazed myself with my ability to recall the details. There was no judgement in Mark's questions, he simply wanted to understand how I thought, how I worked and what made me tick. After an hour of intense grilling, he motioned to our waiter and lunch was served, \"so, this is a new look for you, I take it?\" \n\n\"Yes, it is, will it be a problem?\" \n\n\"Miss. Simmons,\" I liked the sound of that, \"you just spent the better part of an hour defending decisions you made months ago with no references, and doing a dammed good job of it, I don't suggest you show up naked, but I think you and I are going to work quite well together, now tell me a little about who you really are.\" \n\nIt was after seven when his car dropped me off at my apartment, it was the most insanely intense and sometimes awkward job interview I could ever imagine, and I had nailed it. \n\nI spent the next few days moving in with Carla and convincing her to come home with me to meet my family, I looked over the benefits options and make my selections, adding Carla Evers as my partner, she cried when I told her that 'our' new insurance covered transition. \n\nThe trip to my parents was nerve wracking, explaining what was going on with my job, introducing Carla as more than just another girlfriend, letting my parents know we were living together, getting over the nervousness of having sex in my parents' house, and ultimately disclosing the true elephant in the room, introducing Micki. Carla and I decided to leave her condition out of the discussion since she was going to be fully transitioned much sooner than we had ever anticipated, and it occurred to me, I still hadn't opened that envelope. \n\n\"OK, out with it you two, what is making you so nuts, what is this big secret you whisper about and are so nervous to tell me us, Carla, are you expecting\" my mother finally called us out at dinner on day number four, she had always been perceptive, it was hard to decide if the way Carla blushed at the suggestion or her the way she tried to stifle a giggle was more endearing? \n\n\"It might be easier to just show you, I looked nervously at her and then my father and then at Lucy,\" I got up from the table,\" I'll be right back,\" the obvious choice was the pink dress, I did my makeup, fixed my hair, double checked the mirror, and went to face my parents. \n\n\"I knew it,\" Lucy screamed when I walked back into the room,\" you used to steal my panties and wear my dresses all the time, you little shit, I could just never prove it, go on, admit it.\" \n\n\"Busted,\" I couldn't help but laugh. \n\nThe look on my father's face was a different story, he let out a big sigh and looked at my mother, I could tell it was not what he wanted to hear,\" Is this just the clothes or is it going to go further,\" he looked back at me? \n\n\"To be honest dad, I really don't know, I am getting a therapist to help me figure that out.\" \n\n\"And you're alright with this, Carla?\" \n\n\"Mr. Simmons, I love Micki, I don't care what he, or she,\" Carla added some extra emphasis on the 'she,' \"wears, he's a good person, honest, you did a good job raising him and you should proud, I'm all in for whatever he decides.\" \n\n\"Well, I'm glad he's got you on his side, then. This is not going to be an easy road, a lot of people don't think this kind of stuff is right, some of them in your own family, Mike, you know that, right?\" \n\n\"I know, dad, and If I could even explain it to them, I would, I can't even explain it to myself, I just know it's right for me.\" \n\nMy mom got up from the table returning a few minutes later with a small photo album, there were pictures of two little girls, they almost looked like twins, matching dresses, curls and pig tails and they looked so happy, \"That's you and Lucy, I took these when you were little, maybe three, you were too young to remember, it was for Easter one year and you wanted to be pretty like me and Lucy, so I dressed you up and your dad took these pictures, it caused quite a stink in the family for a while, but,\" she paused,\" I guess I've always really known, If it makes you as happy now as it did back then, I'm your mom, I love you regardless, all I want is for you to be happy.\" \n\nWe talked about it all night, Carla just sat with me and held my hand as I did my best to explain what was going on, the woman I loved supported me, my job supported me which surprised my father, and people I met on the street complimented me on how attractive I was, men flirted with me openly, I just needed my family to support me. Lucy was all over it, even making jokes about how I needed bigger boobs, my mom mostly listened, trying to fully accept that her little boy just might be becoming her little girl. My dad pushed me at every turn, challenging everything I said and making me defend this choice and explain that decision, finally, he sat back,\" Michael, or what is it that Carla called you, Micki, you've answered everything I could throw at you and I've got nothing left, if this is what you want, and it seems to be, like your mom said, you're my son,\" her grinned and shook his head, \"I love you and I just want you to be happy, so you have my blessing.\" \n\nLucy just hugged me and warned me to stay the hell out of her closet, we both laughed. \n\nThe next three days were much more relaxed, my family got full immersion into the Micki experience and by the time Carla and I left, even my dad was calling me Micki. Our last night at home, I took everyone out to dinner, checking my account balance just to be sure, since I had spent a lot of money on Micki over the past few weeks, I openly gasped, the last deposit was four times what I expected, and I had expected a raise. \n\n\"Micki, what's wrong,\" Carla put her hand on my arm? \n\n\"I'm not sure,\" I dug the envelope out of my purse and handed it to her,\" can you open this for me, I've been too nervous to look?\" \n\n\"Sure,\" she ripped the envelope open,\" it says $250,000,\" Carla whispered in my ear,\" what does that mean?\" \n\n\"It's my new salary,\" I whispered back,\" Carol called me a junior executive, but I thought it was just a title,\" Carla let out a little squeal and squeezed my arm, \"Ow,\" I laughed. \n\n\"What's going on back there, what are you two whispering about, no more surprises, I hope,\" my dad was watching us in the rear-view mirror. \n\n\"No, we were just thinking, there's a lot to celebrate, I mean me and Carla, my jobs going great, we haven't seen each other in months, why don't we go to that steak house you're always bragging about, Del Monaco's, right?\" \n\n\"Micki, that's not cheap, I think The Roadhouse is just fine.\" \n\n\"Dad, like I said, my job is doing really well, in fact, in all the commotion, I forgot to tell you guys I got promoted, I think I can handle it this once.\" \n\nIt was everything my dad had ever said it was, the steaks were beyond perfection, the service was outstanding, the wine the sommelier recommended was amazing, and when the dessert cart came by, as stuffed as we all were, we couldn't resist but indulge. The waiter tried to present my dad the check, \"My little girl over there is treating tonight,\" I smiled at my dad and reached for the check, the last time I had made a purchase this large, it had filled up my closet, my phone rang and I told the bank, \"yes, I'm in Texas, yes, I'm taking my family to dinner at Del Monaco's,\" my dad raised his eyebrow and I just laughed. Life was good. \n\nThe next year or so was a whirlwind of change, with a proper mentor, I was even better at my job than anyone had imagined, I got promoted again and again and was put in charge of the entire Analysis and Proposal division, Carla had her surgery and I truly enjoyed every second of taking her virginity and eating her delicious pussy for the first time. \n\nIt took six months of therapy, but I started my hormone therapy and Micki became official, the conversation with my parents went much better than I thought it would, especially when Carla and I promised that we were planning on adopting, the only hiccup was Lucy's wedding, I was a brides maid and uncle Frank, my dad's brother tried to make a scene, the entire audience applauded when my dad threw him out on his ass. \n\nAlmost a year later, not quite to the day, Carla and I got married, it was a small ceremony with just family and a few close friends, the boobs Lucy had teased me about were making a very obvious appearance and filled out my dress nicely, I had my brides room and Carla had hers, the butterflies in my stomach were enormous. \n\nOne small cloud of doubt ran through the back of my mind, I had gone to Kansas City on business and had a long talk with her parents, it had been a chilly reception, to say the least. I did my best to get them to understand what it would mean to Carla, to us, for them to be there, for her dad to walk her down the aisle, we cried and they prayed over me and we cried some more, I described what a wonderful person their daughter was, how loving and supportive she was and what a good heart she had, I didn't hold anything back. \n\n\"You may not like her lifestyle but it's not like she had a choice in who she really is. When I told my parents, they said they knew it since I was little, my mom even had pictures of me. Think about it, please, pray about it, but remember, nothing will change the fact that she is your daughter and not having you in her life hurts her more than you know. Aren't we all sinners,\" I finally asked? We prayed together one more time. When I left, they agreed to pray about it some more. I left the wedding invitation on the table, knowing I had done all I could. \n\nMy dad knocked on my door,\" sweetheart, there's someone here to see you,\" he opened the door and Carla's parents stood behind him. \n\nI stood up and moved to the door, hugging them both fiercely. I knocked on Carla's door, \"Honey, can I come in?\" \n\n\"It's bad luck to see each other in our dresses before the wedding, don't you know that,\" I could hear the laughter in her voice. \n\n\"There's something that we need to take care of before it's too late, I'm coming in, ok?\" \n\nI opened to door, stopping in the doorway blocking her view.\" I just think it would be better if my dad didn't walk us both down the aisle, it's been bothering me for a while and I just could never say anything until now,\" I knew Carla would kill me later for the trick I was playing on her, but it would be worth it. \n\n\"So, we get some stranger off the street to walk me down, How could you do this to me, and today, now,\" I could see her starting to break,\" It's not like my dad will ever be here,\" she started to cry. \n\n\"Carla, it's not like that, look,\" I stepped to the side letting her parents into the room as she lifted her tear stained eyes. \n\n\"I'd be honored, if you'll let me,\" her father was openly crying,\" my god you are so beautiful, how could I not see, how could I be so blind?\" Carla's mom pushed past everyone and wrapped her arms around her daughter. \n\n\"Dad, I think you might want to let everyone know we're going to be a little late getting started,\" he nodded as he fought back his own tears. The words were barely out of my mouth when I was pulled into the group hug. \n\nIt took thirty minutes of crying and another thirty of fixing our makeup before we were composed enough to start, Carla and I had flipped a coin, and I was older, and technically still the groom, so I got to go first, I never told Carla that I had rigged the coin toss so I could watch her walk down the aisle, and besides, she deserved that honor. \n\nCarla's mom, Grace went first, then my mom. The organist started the processional and I looked at my dad, he slipped his arm in mine and we started the walk, I could hear Hank, reassuring his daughter behind me and I knew everything was going to be fine, what I didn't expect was my own reaction when I saw Carla walking toward me, I had seen her dress but I hadn't really 'seen' it, she was stunning, her red hair hung loose around her bare shoulders, the lace bodice ended in a choker around her neck, the simple lace and satin gown clung to her body like it was painted on but without revealing too much of the delights underneath, breaking just above her ankles, it flowed into a long train decorated with pink and purple flowers, she wore fingerless lace gloves that ended just below her elbows, a single spray of angels breath was woven into her hair, if not for my dad, I would have collapsed when she smiled at me. \n\n\"Who gives these women,\" the pastor started. \n\n\"We do,\" do my dad and Hank said almost in unison. \n\nWhen Carla slipped the ring on my finger and I on hers, I knew my life was what it was meant to be, \"You may both kiss your bride,\" the pastor said and I pulled Carla close, kissing the sweet lips of my wife for the first time. \n\nThe reception was wonderful, Carla and I danced, then I danced with my dad while she danced with hers, I couldn't remember ever seeing her this happy and knew that it would be a stretch for me to find a moment in time where I had been happier, as well. \n\nToward the end of the evening, Hank pulled me aside, \"Thank you, thank you for everything,\" he hugged me, motioning to a table away from the crowd. \n\n\"No, thank you,\" I smiled, \"I have to tell you something, I never prayed as much as I have in the last few months, hoping that you and Grace would come,\" I could feel a tear starting to build in the corner of my eye,\" when you showed up, It, well, It means so much to both of us, especially to Carla, that you are here.\" \n\n\"God does work in mysterious ways,\" Hank smiled as he took his handkerchief and wiped the tear from my cheek, \"I have to admit, I did a lot more praying, too; and reading about what it means to be transgender. You helped me realize I had lost my way a bit. I changed some things at my church, I spend a lot more time talking to my congregation about love and acceptance and a lot less about hellfire and damnation, \" he looked down at his feet,\" The Bible doesn't talk much about you and Carla, but it says a lot about judging others and casting the first stone. What you said about us all being sinners really hit home. Give Grace and me some time, but you can count on us going forward, it just may be a little awkward for a while.\" \n\n\"Hank, I couldn't ask for anything more,\" I gave him a big hug. \n\n\" If the DJ is going to be playing for a little longer, would you give your father-in-law the honor of another dance,\" he took my hands in his? \n\n\"My pleasure,\" I caught Carla's eye as Hank spun me around the floor, she was talking to her mom and was absolutely glowing. \n\nFive years later, I left the Carter-Bergman to start my own firm with Bill and Mark's blessings and a serious startup investment, I am making more than enough to support my growing family and dinner at Del Monaco's is no longer reserved for only the most special occasions, I had my surgery, and with Carla's help decided that when it comes to orgasms, girls win, hands down. \n\nCarla and I adopted a set of twins, two boys, Travis and Henry, as precocious and rambunctious as they can be, neither appear to have any inclination to follow in their mothers' footsteps and that's perfectly fine with us, we couldn't love them more. We moved to Texas to be close to my family, and to raise the boys close to their cousins. With the arrival of their grandchildren, Grace and Hank seem to have come to grips with having a daughter instead of a son, and a daughter-in law; they come to see the boys as often as they can and are spoiling them rotten, my parents aren't shy about doing their share in that department either. Saturdays are in the park, Lucy and her husband Tom, Carla, and me, watching our children run and play. \n\nWhen someone asks me about my family, I just smile and say, \"Well, it's complicated.\""
    ],
    "authorname": "ShelbyDawn57",
    "tags": [
        "transsexual",
        "transgender",
        "trans",
        "tranny"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/its-complicated-6"
}