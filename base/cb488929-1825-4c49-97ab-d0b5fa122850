{
    "title": "Voyeur gets Voyeured Ch. 13",
    "pages": [
        "After dropping Priya off at her house next door, Donna and I showered and crawled into bed, I laid there, wide awake for a while looking at the ceiling. It occurred to me that I had forgotten to remove Jacob's surveillance camera from the ceiling fan. I glanced up at it as I thought, 'Oh well, fuck it. I'll get it tomorrow'. I knew the camera was infrared so, I raised my middle finger to the camera. \n\nApparently, Donna was lying there awake too and she saw me 'flying the bird' at the ceiling. She looked up at the fan and said, \"You didn't remove the camera, did you?\" I shook my head. \n\n\"Sorry Babe, I totally forgot,\" I said. \"I'll get it tomorrow.\" She kissed my nipple. I fell asleep staring up at the fan. \n\nI came awake in the night to a vibration on the mattress. At first, I thought maybe Donna was masturbating although I couldn't image why. She knew I was always available to take care of her carnal needs. Then I realized that the vibrations were short in duration and not a rhythm consistent with masturbation. It was more of a quick shudder than a vibration. The vibration started and stopped again and started and stopped and I knew what it was. Donna was crying as she lay there on her side faced away from me. \n\nI didn't attempt to comfort her. I laid there silent and listened. I told myself that I had no clue why Donna was sad and crying, but I was lying to myself. I did have a clue. \n\nThe next morning, Donna seemed fine. We made love with our usual passion even though Donna seemed distracted at times. She had a huge orgasm and I followed hers with my own a minute or two later. We laid there for a while. She was on her back looking up at the ceiling fan, probably thinking about Jacob watching the recording. I was fondling her breasts which were getting bigger after the titty-fairy paid a visit. They were big enough before but I love big tits. I chuckled to myself with that thought, 'I love tits in general. Any size and any shape,' and that thought brought a mental flash of Priya's torpedo tits, my favorite. A smile formed on my face. \n\nDonna saw the smile and said, \"What are you thinking, right now?\" I just shook my head and pulled myself over her and kissed her closest nipple.\" She giggled and insisted that I answer her question. \n\nI smiled again as the vision of Priya's tits flashed through my brain. I lied, \"I was just thinking about how much bigger your tits will get.\" She laughed and cupped her breasts in her palms and jiggled them around. I chuckled and pushed my lips firmly to the closest nipple and Donna groaned from the attack. She would normally have been aroused and insisting on another round but she rolled out of bed and quickly shuffled to the bathroom with her hand shoved between her thighs so she wouldn't leak cum from her pussy. \n\nI laid back in the bed and reluctantly processed the changes I was noticing in Donna. I dredged up all the odd incidents and my analytical brain attempted to piece together a plausible explanation. In the end I came up with hormones. I had no first-hand experiences with pregnant women and the changes they endure, so I wasn't completely sure that I had the answer, but I wrote it all off as hormones and that soothed my concerns. \n\nIf I looked closely, I could tell there was a baby-bump there. With clothes on even I couldn't tell. She continued to work nights at the Inn Restaurant, in spite of my badgering her to quit. She said that she enjoyed it and would stop when the baby made it too uncomfortable. I gave up trying to change her mind. \n\nShe left every afternoon around 3:30 PM and got home around 10:30 PM. I spent the afternoons preparing for winter by carrying most of the deck chairs and tables to the basement and I had a guy come and pull my boat out for storage before the water in the lake got too low. I lifted the docks with winches until the legs were out of the water. Ice flow would rip them off if I didn't. \n\nOur wedding was ten days away. I was ready and I assumed that Donna's preparations were ready too. I hadn't seen her working on anything lately but she said everything was ready whenever I asked her. She prepared for work that afternoon like always and she came and pushed herself to me and stretched up for a kiss like always and said she should be home at the usual time and she was gone. \n\nFive minutes later my doorbell rang and Jacob was standing in my breezeway when I opened the door. He had a sheepish look on his face and his laptop in his hand. I smiled at him and said, \"Are you here to show me some more hot recordings of Donna and me?\" He just shook his head. I smiled and continued, \"You're going to remove the camera that you put back in my ceiling fan, right?\" \n\nJacob said, \"I can, but you need to see this.\" He walked past me into the house and I followed him to the dining table. He opened his laptop, inserted a thumb drive and pushed a couple keys. The familiar four blank rectangles appeared on the screen. They were all black. Jacob sat down and I pulled a chair over beside him and did the same. He pressed a key and the top left frame came alive. He put it on full screen and it was a bird's eye view of Donna pulling a stepladder across the floor of Priya's living room. She adjusted the legs and stepped up to the second rung. Her face got larger on the screen as she got closer to the camera. She was wearing clothes that she dressed in to go to work. She donned her period style costume at work and then changed back to her casual clothes at the end of her shift. Her arms came up and were out of sight from the camera and then the screen went black again. Jacob said, \"She found the camera and removed it.\" \n\nI looked at Jacob and said, \"So. She knew it was there from the videos she saw of Divi's party with Eddie. You should never have put it there in the first place. You promised me that you wouldn't.\" \n\nJacob dropped his eyes from my stern gaze and said, \"I know. I know. I'm a pervert. What can I say? That's not what I wanted to show you, Jack.\" I motioned for him to continue and without looking at me he hit another key and the top right frame burst to life. I wasn't familiar with the room but it was another bird's eye view above a king size bed; probably installed in a ceiling fan again. The camera must have been motion activated because within a few seconds two clothed bodies climbed into the middle of the bed. One was Priya and the other was Donna. They were on their knees sitting on their feet furiously kissing each other. Donna was in the same clothes as the video of her removing the camera. I looked at the time and date on the bottom of the screen. It read 4:36 PM, yesterday. \n\nI was thunderstruck as I kept looking at the time scroll by on the screen. She should have been at work by then. Jacob brought me back to reality when he said, \"That's Priya's bedroom, Jack. I just happened to be scrolling through the recordings and found this. I went back and found out that Donna has been spending every afternoon and evening with Priya since she got back from taking Divi to college. The recordings are pretty fucking hot.\" \n\nBlood was pounding in my ears. My world was coming unraveled again. It felt like my lungs had lodged in my throat and all I could squeak out was, \"Show me.\" He did and there were long recordings of Priya and Donna on Priya's bed under the camera's constant watch. Each one started with them stripping each other naked while in a furious, gasping embrace. Then they were in each other's arms or in various sixty-nine positions or in scissor action with their pussy's grinding on the other. The last one I could bear to watch was them fucking a double ended dildo which they combined with their scissor action. \n\nI had loved that Donna liked lesbian sex. I knew that she and her sister engaged in lesbian sex frequently and I thoroughly enjoyed being part of that. This was different. It felt different. First of all, Donna was lying to me about going to work. Second, all Donna had to say was that she wanted a three-way with Priya and I would have been as excited about it as she apparently was. Third, this explained a lot about her recent changes and hormones be damned. \n\nI said, \"That's enough Jacob. I get the picture.\" \n\nJacob excitedly said, \"Wait there is one more from two days ago.\" He called it up from the menu and it started pretty much the same as the others and then Sylvia appeared, already stripped naked and she joined Donna and Priya. Sylvia really added some heat to the video. Jacob stopped the application and pulled out the thumb drive and handed it to me. I was numb and didn't respond. Jacob put the drive on the dining room table and closed his laptop. Jacob got up from his chair and said, \"I'm sorry man. I enjoy hot lesbian sex as much as the next guy but you're getting married to one of them in a few days and I don't think this bodes well for a happy marriage. Donna may like dick, but she loves pussy.\" He was gone before I realized he was leaving. \n\nI sat there at the dining room table fingering the thumb drive for a long time going through everything in my mind. I got up and grabbed my cell phone and pulled out the wedding folder that Donna had started. I called the function hall and asked about the booking for the hall on our wedding day and the woman who answered the phone was loudly flipping through pages and finally said, \"I'm sorry sir. That booking has been canceled. It was canceled a week ago.\" I hung up without another word. I called the pastor at the church and the bakery and they said the same thing. I took a pen from the kitchen counter and wrote 'CANCELLED' and the date on all three of the confirmed reservations and wedding cake order and left them on the kitchen counter along with the thumb drive. If she came home while I was gone, I wanted her to know that I know. \n\nI pulled my car out of the garage. There was one other thing that was bugging me about all this. There was no way Donna would drive out of this dead-end road and then return to drive past my house to Priya's house if she was trying to hide her trysts from me. I drove out like I was normally leaving the community. Several other dirt roads branched off from the primary dirt road. I turned left at the first one. Most of the houses along this road were just camps and had been vacant since Labor Day. I wasn't expecting to see any cars parked in any of these driveways but as I rounded a corner, there was Donna's car parked alongside Sylvia's car. From there, it was a short walk through the woods to Priya's house. \n\nI drove out to the paved roads in a fog. I stopped at the Inn Restaurant and didn't even remember the drive. Time had stopped. I sat down in the waiting area of the restaurant, afraid of what I'd find there. My mind was blank. One of Donna friends saw me sitting there and was about to ask if I had a reservation but then she recognized me and said, \"Jack. Are you alright? You look terrible.\" I asked to speak to Donna and got the answer that I expected and feared. \n\n\"Donna gave her notice two weeks ago, Jack. You didn't know?\" I stood and headed for the front door without answering her question. She loudly spoke, \"Jack. Are you okay?\" I couldn't think of any other way to disprove what I already knew was true, other than to not find her at Priya's house so I drove there. I parked in my garage and walked down the road to Priya's front door. I rang the doorbell and then thought that I shouldn't have, but I was dying and I just wanted to be put out of my misery. \n\nMinutes passed before the inner door slowly pulled open. Priya was standing there in a robe. She was trying to appear nonchalant but her face was flushed with sexual heat. I'd seen that many times before. I said, \"Is Donna here?\" Priya bowed her head and looked at her fingers. She didn't answer before I continued, \"Donna and Sylvia are here aren't they?\" She looked back up at me with tears in her eyes and just nodded. I nodded too and staggered back from her screen door. \n\nPriya said, \"I'm sorry Jack. I'm really sorry.\" I just nodded as I turned to leave. Priya yelled, \"Jack? Come join us.\" I didn't provide any response and I returned to my house as devastated as I had been when Anna died and just like it took me three years to discovered then, my reaction now was to get away. I wrote my phone number on a sticky-note and went next door and gave it to Jacob with directions not to provide it to anyone, ever. \n\nJacob looked at the note and said, \"Jack, this is your cell phone number. Everyone has it.\" I just shook my head. I wasn't thinking clearly. I told him I'd get a burner phone and be in touch but I had to get away. He teared up and nodded and we man-hugged. \n\nI was half way through packing a suitcase when Donna came crashing into the house yelling, \"Jack. Jack?\" She swept through the kitchen and stopped there for a moment before continuing into the living room. She found me in the bedroom closet pulling clothes off hangers. She stopped when she saw what I was doing and then she eased into the room. Her clothes were all askew. She had obviously dressed quickly. She was holding the papers from the kitchen counter but she wasn't looking at them. She was breathing heavily from either the run home or the sex she had been engaged in when I rang Priya's doorbell. It was probably both. \n\nShe lifted the papers in her hand and flipped through them and then she burst into tears as she sobbed through her explanation. \"I'm really sorry Jack. I didn't want you to find out this way. Priya told me I had to tell you. I just couldn't bear to hurt you. I love you Jack, but I can't marry you. I'm so sorry.\" I kept right on packing as she apologized. She tried to press herself to me but I pushed her back and she sobbed harder. \"You're just gonna leave without saying anything?\" I just glared at her and didn't respond as I moved past her to my bureau. Then she hit me with the big guns, \"What about your child?\" That stopped me dead in my tracks. \n\nI looked at her, as she wiped tears from her eyes. I said, \"This was always just about getting pregnant, wasn't it?\" \n\nDonna sulked and nodded as she said, \"It started out that way, but then I fell in love with you. Sylvia and I have always preferred attractive women over men. We grew up thinking that it was wrong and at some point, we immersed ourselves in men hoping that we could change. Sylvia fucked anything with a dick and I wasn't much better. Nothing changed but we came to like sex with men too. So, we labeled ourselves as bi-sexual and that had a better feel to it. I was genuinely ecstatic when you proposed. I thought maybe I could have it all: A husband that I loved with our child and my sister and the money. Then I saw Priya and I was in lust and then that night when she and Divi joined us. After that I couldn't, I can't, get enough of her. She was all I thought about and she feels the same way about me. She said she'd been fighting the urges for quite awhile but Divi seduced her earlier this summer and she was hooked.\" \n\nShe stopped talking and moved toward me. She pressed herself to me but I couldn't bring myself to bend down to allow her to kiss me. She stretched up on her toes and kissed me on the chin. I pulled that away from her too. With her face pressed to my chest and her arms around my back, she said, \"I'd still love to have it all Jack. You and me and our baby and Sylvia and Priya and probably even Divi. We've discussed this amongst us girls but we haven't talked with Divi. Priya confessed that she has been in love with you all summer but her own hang-ups kept you two apart.\" That statement rang true. \n\nI was too hurt to hear and process what she was saying. I pulled away from her and pushed my socks and underwear, that I never wore, into my suitcase. I was on automatic. I closed the suitcase and snapped it shut. Donna was frantic. Again, she said, \"I love you Jack. I love the man you are. I love your sense of humor. I love your cock.\" I smiled to myself, she was using all the ammo. She continued, \"Give it a chance. Please. We could all fit comfortably in my house. It would be tight here or at Priya's but if that's what you want, we'll make it work. Please Jack. I'd hate to lose you. Please. Give me a chance. Give us a chance.\" \n\nI was softening a little but I was hurt too badly to just say, 'What the fuck, let's give it a go.' I wanted to hurt her back and when I picked up the suitcase and headed for the garage, she shrieked out, \"NO. PLEASE JACK. DON'T GO.\" She chased after me to the garage and tried to stop me from opening the rear door all the while pleading with me not to go. I eased her away from the door and put my bag on the backseat. I moved to the driver's door and she planted herself to block me. I moved her away to the side and reached for the door handle. \n\nBefore I could pull the door open, another hand came out of nowhere and rested on mine. I turned to see Priya standing beside me. Donna was screeching, \"Priya please make him stop. He can't go. Not like this. We have to talk this out.\" \n\nPriya looked up at me. She must have recognized the resolve on my face as she said, \"Jack. I know you're angry. I understand why. We should have had the conversation that we need to have before you found out this way. I can't even imagine what kind of pain you're feeling. When Naveen told me he wanted a divorce, I wasn't really in love with him anymore so it wasn't all that big a deal. I know the kind of love you and Donna have had. I know how hard it must have been to love her after Anna. I want you to know that I love you too, and so does Divi.\" She stopped talking and smiled as she continued, \"Sylvia? Well, she loves your cock but that's all Sylvia can offer to a relationship.\" I couldn't help it. As stern an image as I wanted to project, I laughed. \n\nDonna's sobbing morphed into a smile when I laughed. Priya stretched up and kissed me and whispered, \"Stay. Love us all like you've loved Donna. Like you loved Anna.\" That was it for me. I burst out crying and collapsed down the driver's door and sat on the garage floor with my face buried in my arms and knees. Priya came down with me and cradled my head to her chest. Donna came down to the floor too and did the same. I cried like a baby. I hadn't cried like that since I had curled up in the corner of my bedroom in much the same position I was in now when my mind finished processing the fact that Anna had died in her sleep, and that was where I was in my mind at that moment. \n\nDonna and Priya were both crying as they held me. Sylvia casually strode into the garage and said, \"So, is he staying or leaving? I hope he's staying because I was really looking forward to fucking his cock down to a nub or least down to a normal size cock.\" \n\nDonna pulled her face off mine and looked up at Sylvia and said, \"Sylvi. You're not helping. Go back to Priya's. We've got this.\" Sylvia turned in a huff and stomped out of the garage. \n\nThere was a time in my life when having one beautiful woman pleading with me to do something would have swayed my decision. Now I had two beautiful women. But there had been a lot of water over the dam since then and I steeled my resolve as I stood up. Before Donna and Priya could get up to renew their objections, I pulled the driver's door open and got in. I locked the doors and started the car. Priya and Donna were both yanking on the door handles to no affect and were left with no other recourse but to pound on my window with their fists. They were both shrieking at me then. I backed out of the garage leaving them behind. \n\nAs I sped up the road, I saw Donna sprint across the road behind me and into the woods. She was heading for her car. I had no sooner made it to the paved roads when I saw her BMW leading a huge cloud of dust behind me. There was no way I was going to outrun her but I knew I didn't need to. Her poorly thought out plan was to follow me and renew her pleas when I stopped for gas or whatever. She stayed right on my tail for two hundred plus miles before she frantically began flashing her lights and tooting her horn. I kept on going and I watched in the rearview mirror as she pulled off the road into a gas station. Her pursuit was over. ",
        "I had no destination in mind. I was just driving as my mind looped through the day's events over and over again, faster and faster. After a while, I started to analyze my reactions. Was leaving the right way to handle this. Whether it was or it wasn't; it was my way. It had always been my way. I drove until I couldn't keep my eyes open and I pulled into a truck stop and slept in the backseat until sunrise. I sat in the diner at the counter totally oblivious to the flirting waitress and drank my coffee as my mind churned. I was a mess...again. \n\nI drove for three days and finally came to stop in a small town on the banks of a huge lake in South Carolina. I bought a burner phone at a mall and texted the number to Jacob and Eddie with the same instructions to not provide the info to Priya or Donna. I told them that I didn't know how long I'd be gone. Eddie texted back immediately with a string of question marks. I realized then that he knew nothing about any of this. As far as he knew, he was going to be my best man at my wedding in a week. I texted him back and gave him a short synopsis of the situation and he texted back, 'I'm sorry, Jack. If you need anything, let me know.' \n\nI rented a small cabin on the shore of the lake and sent the address by text to Jacob so he could forward any mail. I would do it formally through the post office. I spent my wedding day in a drunken stupor and three days after that I received a small overnight envelop from Jacob. Inside was a thumb drive. I plugged it into my new laptop that I had to buy because I'd left mine behind. \n\nThe only file on the thumb drive was a video. I thought, 'Jesus Jacob. I don't need to see anymore of your three-way girl on girl hot sex recordings from Priya's bedroom.' I hit the play button anyway and the black screen changed to Donna lying on my bed in her wedding dress, that I'd never seen. It was beautiful. She was beautiful. She was looking up at the camera and her lips were moving. I found the speaker volume and turned it up to max. She said, \"Hello Jack. I hope the camera is still there and I hope Jacob has sent this to you wherever you are. Today was to be our wedding day. I'm wearing this dress, that I had always dreamed of wearing on this day, but I'm marrying Priya instead. It'll be a simple wedding. Just us and Sylvi and Divi. Since the day I met Priya, I couldn't resist the attraction. It was like gravity incessantly pulling on me. I wish with all my heart that you were here right now. I pray that you still want to be a part of our baby's life, but if you can't, I understand. Priya is as excited about it as I am and we'll be fine right here in Priya's house next door. I look every day in hopes that your car is in the driveway. There was a car there one day and I ran to see if it was you but it was just a guy who said he was there to close up the house for the winter. I cried all the way home thinking I may never see you again. I love you Jack. I always will. You're the best man I've ever known. Thanks for everything. Thanks for our baby.\" The screen went black and I sat there in silence as tears streamed down my cheeks to fall onto the keyboard of the laptop. I wiped then away with my fingers. \n\nI was settling into my recluse mode again as I spent my days reading, napping and kayaking as I explored the huge lake. I couldn't even see the opposite shoreline. It was like being on a freshwater ocean. I could paddle for hours and never even leave my end of the lake. It was hundreds of times larger than the lake at home and it could actually be intimidating. \n\nI was drinking a lot and I spent many evenings in various bars. If I had never experienced how small this world really is, I realized it one night as I sat there at a table in the corner of a bar listening to a local band play. I was in the process of drinking myself stupid again, when a blonde woman, dressed in a business suit appeared at the bar trying to get the bartender's attention. Her back was to me and I was checking out her ass along with every other guy in the bar. She was leaning across the bar to be heard over the music and her tight skirt hiked up the back of her thighs. The split in the back of her skirt slightly exposed the curl of her butt cheeks and her thong. She stood back up straight as she nonchalantly pulled the hemline down and motioned to a very dark-haired woman who had apparently come in with her. She leaned over the bar to order as the bartender moved toward her. She was dressed in a pantsuit and had a decent body but nothing like the taller blonde with the fantastic ass. \n\nI just about fell out of my chair when she turned and leaned back against the bar and watched the band play while she waited for her drink. It was Eva. I tried to get her attention but the bartender delivered their drinks and she turned back away from me to pay the tab and collect their drinks. They each took sips off their drinks as they turned back to the band and continued to stand by the bar. I got up and moved around the side of the bar to approach Eva from the side. I put my hand around her waist and bent down and kissed her on the neck. I was expecting her reaction as she snapped around with open hand ready to slap her assailant. She stopped on the back-swing when she saw me. She recognized me immediately and pushed herself against me for a kiss. Her eyes were on fire when she pulled back. She said, \"Jack. What are you doing here?\" \n\nI spoke directly into her ear so she could hear me over the music, \"I was going to ask you the same thing.\" Eva's friend was staring at us with a confused look on her face. Eva introduced me to Martina and she thrust out a hand to shake mine. If it's possible to relate your sexual interest with a handshake, Martina had mastered it. I led them over to my table. I was excited to see Eva and she seemed excited to see me too. Martina just watched us like she was watching a tennis match. She had a bemused smile on her face like she was contemplating some future moment. \n\nThe band took a break which made it much easier to visit. Eva and Martina were in town for Eva's company. One of their suppliers, who was a major provider of local labor, was not performing and they were there to 'fix things'. Martina was a Process Engineer supporting that effort. I explained that I was living close by but I didn't go into any details on why. I was prepared to explain that I just couldn't stand the thought of another winter at home, but she didn't ask for any further explanation. Martina got up from the table and motioned for Eva to go to the lady's room with her. Eva resisted but Martina was insistent so they both left the table. I, along with every other guy in the bar, watched them go. I was thinking, 'Fuck, what an awesome ass.' I was certain that every other guy was thinking the same thing. \n\nWhen they came back, the band was moving back onto the stage. Eva said, \"Let's go somewhere quieter so we can talk. We have rooms here at the hotel or we could go to your place.\" \n\nI said, \"Lead the way. We finished our drinks and I paid my tab. We took the elevator in the lobby to the tenth floor. My heart was pounding in my chest in anticipation. It had been some time since I'd felt that sensation. My cock was reacting to my recollection of the last time I saw Eva in her ivory tower office. As we stepped out of the elevator to the surprisingly plush carpeting in the hallway, I asked Eva, \"How's Jackie?\" \n\nMartina spoke for the first time, \"You know Jackie?\" If I didn't already know from the black hair and the light coffee colored skin and the particularly short stature, her accent confirmed that she was a Latina and probably of Mayan ancestry. \n\nEva casually said, \"Jack and I met when I was on vacation last summer. He visited me at work a while back and he met Jackie there.\" We stopped at a door and Eva pushed her keycard into the reader. The reader beeped and she stepped into the room, followed by Martina and then me. The hotel room turned out to be a two-bedroom suite and it was much fancier than I would have expected for this Podunk town. Martina walked through the living room to what was apparently her room. Eva offered me a seat and fixed me a drink and said she wanted to get into something more comfortable. I knew the code. My mind raced through my visit with Eva and Jackie and by the time Eva returned dressed in a 'one size too small', ribbed tank-top with no bra and tight nylon athletic shorts that accentuated her ass, my cock was as hard as a steel pipe. Martina didn't come back, which was fine with me. \n\nEva didn't waste another moment with chit-chat as she sat down close to me and leaned in and passionately kissed me. I responded in kind. Our hands were all over each other. It had seemed like ages since I was aroused and I had to break our embrace for fear that I'd cum right there in my pants like a teenage boy. She didn't make it any easier when she went for my zipper. I pulled her tank-top off over her head which slowed her attempts to get my pants off. We were both already panting as our lips collided again. She was kissing me everywhere as her hands went back to my belt. When I found her neck with my lips, everything stopped. Her eyes went wide as she moaned out, \"Oh my God, Jack. You know right where to go.\" Her hips pulsed forward and back several times and her breath caught in her throat as she groaned out, \"I'm cumming Jack. Oh Jesus. How do you do that?\" She fell back against the arm of the sofa and as her hips continued to pulse, she pulled the nylon shorts to the side revealing her clenching pussy and bubbling juices. She ran an index finger to her clitoris and touched it and I thought she would launch right off the sofa. \n\nI leaned forward and pushed my lips to her sex and she screamed which brought Martina running from her room. She stood there watching as I tongued out the rest of Eva's orgasm and forced another one. By then Martina had sat down in an upholstered chair with her right leg up on the arm with her robe pulled to the side strumming her pussy. As Eva groaned into her second orgasm, Martina quickened her pace to cum at the same time. They were both screaming and not very quietly either. \n\nI pulled my lips off Eva's pussy and kissed her clitoris, which resulted in a snap of her hips. I kissed my way up her flat stomach to her breasts. Her nipples were like nails and I sucked each one to my lips and flicked my tongue around them which prompted a, \"Oh fuck Jack. I need your cock. Don't tease me anymore.\" She grabbed her tits so I couldn't tease her nipples any more. I moved up to her shoulders and then to her neck and Eva was whimpering as she tried to push her pussy against me. My belt, which she had yanked open dragged along Eva's thigh and across her sex which caused her to scream again. Martina was watching as she lazily dragged her fingernails through her sex. \n\nEva was frantically trying to find the belt brushing against her clitoris. Once she found it, she traced it back to my pants and she unbuttoned my pants which led her to the zipper. When she got it down, my cock burst out into her palm. When she got a good grip on it, she pulled it toward her sex. \n\nWhen my glans touched her sex, she released it and tried to push herself onto my shaft. I kissed her lips and eased my hips back pulling my cock back. She moaned, \"Oh please Jack. You're killing me.\" Martina dropped her leg off the arm of her chair and moved to her knees as she moved around so she could see. \n\nWhen Martina saw my cock bobbing a few inches below my stomach and an inch from Eva's pussy, her eyes went wide and her mouth hung open as she muttered, \"Holy shit Eva. I thought you were exaggerating in the lady's room. Eva gave Martina a sultry grin and then turned the grin to me and said, \"Give it to me Jack. Please.\" \n\nI did as she asked as I dragged my glans through her sex from clitoris to anus and then pushed steadily into her. She was chanting, \"Yes. Yes. Yes,\" as I found her depth and starting rocking my hips forward and back. She joined the action as she began rolling her hips counter to mine. Martina sat down on the sofa behind me and cupped my balls in her hand as I fucked Eva. I hadn't gone more than a half-dozen strokes before Eva exploded into a huge orgasm that pulled another scream from her throat. I bent down and kissed her lips to silence her scream. She responded to my lips by sucking my lower lip between her teeth and bit down gently. I kept on fucking her in slow steady thrusts and she released my lip to gasp air into her lungs, which she promptly exhaled in a long, \"OOOOOOOHHHHHHH,\" that was interrupted by the momentum of my thrusts. \n\nMartina's fingers on my balls were replaced by her lips and tongue as she had rolled onto her back and pushed her head between my knees. Fuck, she knew what she was doing and I let out a groan in response. Eva's face scrunched up in an obvious display of an oncoming orgasm and the long \"OOOOHHHH\" morphed suddenly into an \"OOOHHH SSSHHHITTTTT,\" as her pussy clamped hard on my cock again. \n\nI could feel my own orgasm building and I had to shake Martina loose as I suddenly ramped up my pace, which caused Eva to scream again. Martina resorted to lashing my balls with her tongue as they flew past her face. Eva felt my sudden surge in hardness and gritted her teeth and pinched her eyes shut tight as my orgasm rolled over me and I blew a powerful burst of cum into her as she screamed again. I hadn't cum in a while and I could tell the quantity of cum that exploded into Eva was huge and the number of shots was more than usual too. She groaned with each salvo as I drove my hips down with each one. \n\nMartina pushed herself further under me to catch the cum that was being pushed out of Eva's pussy and running down over my balls. I could feel her licking my balls. I held my weight off Eva as she pulled herself up to kiss me. She was cooing with pleasure. We both knew my cock was still hard inside her and she pushed herself up my shaft again forcing cum out of her and into Martina's open mouth. Five orgasms or fifty, Eva was not going to be satisfied as long as my dick was hard. \n\nMartina saw that we were starting to go again and she spoke up as she pulled herself out from under me. \"Eva. With all due respect; what about me? This was my idea, if you remember our conversation in the lady's room.\" Eva stopped forcing her pussy up my shaft and collapsed back on the sofa. \n\nShe giggled and said, \"You're right Martina. I shouldn't be hogging all the cock. I'm sorry.\" \n\nI kissed Eva and said, \"Ladies. I'm right here. You're talking about me like I'm an animated dildo or something. Eva got laughing and her pussy pushed me out in the process. Martina didn't waste a moment as she grabbed my cock as if she was afraid that she'd never get it back again. Eva pulled out from under me and sat Indian-style on the floor beside the sofa. I turned onto my back and Martina scrambled up on my lap and planted her feet at my waist and guided my cock into her pussy. I started rocking my hips up and down as I figured there was no way she was going to add to the motion and then she surprised me. She said, \"Take my wrists and I'll take yours.\" I did as she requested and she began pulling herself forward by pulling on my arms. Then she released and dropped back again. She was fucking herself but I was providing most of the motion. She was expending a lot of energy and I didn't think she'd last very long but then she surprised me again when she pulled her pussy off my cock and positioned her anus on my glans and groaned hard with clenched teeth and pushed my hard cock into her ass. The air she had been holding in her lungs exploded from her as she pushed past the glans and my shaft plunged deep in her bowels. She screamed as she continued to push down. I had fucked a few asses but never like that. \n\nEva looked at me with a look of total fascination. I guess she had never seen anything like that before either. Martina hit bottom and pulled back up to the tip and then slammed her body back down, nearly knocking the wind out of me. I was ready for her after that and she fucked her ass through two huge vaginal orgasms. I was gritting my teeth in an attempt to keep up with her. She was obviously searching for an anal orgasm and I wasn't sure she wouldn't kill me before she got one. Eva watched the whole thing with an expression of awe on her face. \n\nMartina suddenly ramped up the pace even more as she leaned back and braced herself on my ankles. I could feel her body tense and then she erupted in a loud low-pitched guttural groan and started chanting, \"Yes. Yes. Yes,\" with each 'yes' getting louder until she screamed out, \"Oh God. Yes, yes, yes, yes.\" Her sphincter muscle clamped tightly on my cock and I couldn't move. I was so close and I had an automated urge to drive my hips to launch my seed. The only movement I could feel on my cock was her violent clamping sensation and it turned out to be enough as I gritted my teeth and every muscle in my body seized as I blew my jizz into her ass. She began a low volume whimpering of, \"Yes. Yes. Oh my God, yes.\" \n\nMartina suddenly collapsed backward and I was forced to immediately sit up because my erect cock didn't bend back like that. She laid there almost comatose between my legs while her anus continued to spasm on my softening cock. I pulled forward and my cock slid out of her. She groaned until I was all the way out. Eva looked up at me and said, \"Holy shit. That was amazing. I think Martina and I will have to have a few more company trips together.\" \n\nMartina rolled over on her side facing Eva and said, \"I knew you were a sex freak from my best friend, Jackie. She told me all about this guy. She couldn't remember his name, or she wouldn't tell me. He came to your office and fucked both you and her on your desk into the middle of the next week, was the way she put it. I would have been tempted to not believe her but she walked funny for several day after.\" Eva burst out laughing and nodded her head vigorously as she reminisced about that day. \n\nEva said, \"We both smelled like French whores after and Jackie hurried back to my office after Jack left and we went another round in the office shower.\" She burst out laughing again and it tailed off to a chuckle as she was obviously lost in the memory. \"Yes,\" she said, \"That was a day.\" \n\nWe sat around in their living room for hours after. Eva finally got around to bringing up what I was doing down there in South Carolina. I used my 'tired of winter' routine but Eva would have none of that. She said, \"I heard from a friend of a friend who lives on your lake that you were engaged to be married; last, week, I think. I take it that went awry? Or you'd be here on your Honeymoon and we would have missed all this fun.\" \n\nI started examining my fingernails. I couldn't look at her. I was too embarrassed. 'My soon to be bride ran off with another woman' explanation, made me sound like a total loser and maybe I was. I just said, \"It's complicated.\" She got the message that I didn't want to talk about it and she stopped her Q&amp;A. \n\nMartina got up to retire to her bedroom. We had no history so she was just listening. She said, \"Good-night Jack. It was really a pleasure to meet you.\" She emphasized the word 'meet' and it sounded more like \"meat\" than \"meet\". She giggled when she saw that I had got it. \n\nEva used the alone time to ask how long I was going to stay away from the bad situation at home. In the end, she really wanted to know if she could rent my house for a couple weeks next summer if I didn't go back by then. I laughed and nodded and got up to leave. We kissed at the door and she said, \"I'm leaving tomorrow afternoon, after I get Martina started. She'll be here as long as it takes to straighten this company out. I hope things work out okay at home. I'd love to rent your house but not without you in it.\" We kissed and I went home to my sparsely furnished cabin by the lake. ",
        "When I got home, I sat out on the patio and listened to the crickets and the waves lapping on the shore. The moon was full and lit up the night. The mosquitos weren't a problem like at home during the summer. It was still hot here in mid-October. I caught a whiff of the sex I'd had with Eva and Martina. It wasn't offensive, at least not to me and there was no one anywhere nearby anyway. I smiled to myself when I though of Eva. Her appearance out of the blue was just what I needed to lift my spirits. I thought, \"Well, maybe there is a God after all.\" \n\nJust as I'd learned ten years ago, in spite of the brief respite with Eva and Martina, I took my despondence with me and it wasn't any better now than it was when I left. I should have learned from my own history. I fell asleep in the lounge chair and woke with the rising sun in the same position. I stood up and stretched the kinks out of my back and neck. \n\nThe wind seemed to blow here a lot during the day but it was always very calm early in the morning and at dusk. I decided to go for a workout in the kayak. I usually went later and then struggled to get home again against the wind. It seemed that the wind was always blowing against me regardless of which direction I was going. I took it as a sign that everything was going against me. I needed a shower and I'd take one when I got back. I changed into my bathing suit and dropped my kayak in the water. \n\nI read on line that one approach to kayaking was to paddle full out, as fast as you can until you feel the burn and then rest for a few strokes as you coast. Then repeat. According to the article I should be able to go indefinitely this way and I found that I could. I always stayed on the shoreline. You took your life in your hands by venturing out into the powerboat lanes. I had been warned that one kayaker had been killed when he was run over by a cigarette type rocket ship on water. It seemed like everyone had one of those. There were also pontoon boats on the lake, but they stayed out of the way too. It was much easier to negotiate with them and just like at home, it was illegal for the power boats to be at high speed close to shore or other boats. Just like at home, boaters here waved when they passed or overtook you. I just nodded when they waved to me. \n\nI was in the midst of a stretch of power paddling as I came around a point of land. I had passed that point many times and there had never been anyone sitting in wooden Adirondack Chairs lined up along the shoreline. They were being used today by two thirty-something women in bikinis sipping on cups of coffee and enjoying the warmth of the rising sun. One of them was sitting back in her chair with her eyes closed. The other saw me come around the point and she elbowed the first one. I slowed as I stopped paddling. I was about to coast on past them and just nod to acknowledge their presence. I didn't want to presume that they wanted to talk to me. But then woman number two did speak. She said, \"Good-morning. Would you like a cup of coffee?\" It was a pretty lame effort to start a conversation, but it was enough. I dropped the face of the paddle in the water and pulled forward, which stopped me dead in the water and pivoted my kayak toward the beach all in one motion. \n\nI paddled my kayak onto their beach and carefully stood up and stepped out. Woman number one got up and went back to the house and returned with a hot cup of coffee and a bottle of bourbon and asked if I wanted booze in it. I smiled and nodded and she poured the bourbon until I said, \"When.\" Two hours later, we were all buzzed. It occurred to me that I had been in that condition a lot lately. \n\nWoman number one's name was Kayla. She was single and she seemed to have absolutely no interest in me and didn't engage much in the conversations. She was a smoking hot red-head. I wasn't fond of red-heads as a rule but there are always exceptions to every rule. She was very attractive and her bikini top barely contained her obviously enhanced breasts. \n\nWoman number two's name was Alicia. She was married and had a young child. She was a few years older than Kayla but younger than me. She was sending every signal that she was interested in something other than spiked coffee. There was a time in my life when I would have been oblivious to her signals. \n\nKayla and Alicia were there on vacation. I lied and said I was too. Alicia's husband was with her but the kid was home with Grandma. This was supposed to be a marriage renewal getaway and they were piggy-backing on Kayla's vacation rental. I got the jist that the husband wasn't making much of an effort. He wasn't there then and hadn't been around for a couple days. Alicia teared up as she was explaining that bit of information and she got up and retreated to the house saying, \"I'll be right back.\"  \n\nI sat there with Kayla. No words were spoken for a minute or two. We were drinking straight bourbon by then and Kayla had passed 'buzzed' a while back. I was easily twice her size and I was 'buzzed'. I was just taking in the view when Kayla started talking about Alicia's situation. In a nutshell, she told me that Alicia and her husband were having marital problems. Kayla had invited the two of them to stay with her at her rental in hopes they could work it out. Kayla explained that the husband and Alicia would get into an argument and then he'd leave in a huff and not come back for a couple days. When he did appear, he would be drunk, reeking of sex and cheap perfume. \n\nKayla was beginning to slur her words but she kept going. He would always ignore Alicia and go take a shower and shave and then they'd get back into it. He'd leave and the cycle would start again. Then Kayla explained that Alicia's approach to soothing her bruised pride was to seduce some random guy as payback. I deduced that I was the random guy in Kayla's explanation. \n\nI set my empty cup on the table between our chairs and leaned forward about to push myself to my feet. It was obvious that Kayla disapproved of Alicia's approach to soothing her pain and therefore, by extension she disapproved of me. Kayla surprised me when she said, \"Don't go. Alicia will be really pissed with me if she comes back and you're gone.\" \n\nI said, \"I don't want to take advantage of her fragility and I probably wouldn't be able to reject her advances. She's a very attractive woman.\" \n\nKayla grinned a sloppy, drunk grin and said, \"She is very attractive. I don't know what her husband is thinking. You wouldn't be taking advantage of her. She's the one taking advantage. She's like a siren to sailors, calling them to their deaths on the rocks.\" She laughed at the simile and then looked directly at me and continued, \"You're a nice guy. I can tell. It's obvious that you've got your own pain going on, but you're a nice guy. If you go, she'll just go on to the next random guy and he likely won't be so nice. Alicia's doesn't show very good judgement when all she wants to do is pay her husband back and she's paid a price at times. The funny thing is that her husband doesn't even care.\" \n\nKayla struggled out of her chair and stood up. I stood up too. It was a habit that I was chastised for more than once by feminists. Alicia was walking across the lawn toward us and Kayla said, \"Be as kind as I know you are. She's so fragile.\" She reached out and touched my arm and then retreated toward house. As they passed each other, Kayla stopped Alicia and hugged and kissed her. Words were exchanged but I couldn't hear them. Kayla continued to the house and Alicia walked toward me and sat down in her original chair. My big head was saying that I should go. As usual, my little head was screaming, 'stay'. I sat down too. \n\nAlicia took a sip of bourbon from her coffee cup and said, \"I suppose Kayla laid it all out for you.\" I looked at her as she took another sip of bourbon and smiled. She had gone back to the house to fix her hair and apply her makeup of all things. She was attractive before but she was stunning now. I didn't respond to her statement and she didn't wait long to make her move. \n\nShe leaned toward me and closed her eyes as she offered me her lips. I kissed them tenderly and Alicia moaned and leaned in harder and kissed me with considerable passion. I gave her back what she was giving. We continued like that for several moments. She was breathing very erratically as she continued to moan into my mouth. \n\nI figured that at some point real soon, she'd get up and lead me to the house. I had resolved to go with her. My dick was already rock hard and pushing on my bathing suit. She pushed herself out of the Adirondack Chair, which is no easy feat, especially when you're drunk. I started to get up too but she pushed me back into the chair. I went slack-jawed when Alicia reached behind her back and untied her bikini top and lifted it over her head. She grinned at me when she saw my cock jump in my bathing suit. The sultry expression on her face told me that we weren't going to go up to the house. She slithered out of her bikini bottom. Fuck, her body was amazing, standing there backlit by the rising sun. She had broad shoulders and slender arms. There was perfect symmetry from her chest to her narrow waist to the flare of her hips which blended perfectly with her thighs down to her ankles. I scanned from her head to her feet and back up again. She giggled at what was probably a stupid expression on my face and said, \"Do you like what you see?\" It was a rhetorical question and I didn't even have time to respond. \n\nAlicia dropped her naked body to her knees between mine. She untied my bathing suit and looked up at me as she pulled it down. I lifted my butt to provide assistance. My head snapped back against the chair as she pushed her lips over my glans and ran her tongue around the ridge a few times. I moaned this time. She 'cooed' and pulled her lips back and said, \"Yum. You've had sex recently. I can taste her.\" She ran her tongue around my glans and smacked her lips. Then she slowly pushed down my shaft as I pulled my head forward to watch. She was looking into my eyes as she bobbed up and down on the top half of my cock. She hadn't touched it with her hands as she stopping her blow job and pushed herself further down my shaft. She made it another inch or two before she humped up and gagged and pulled back as saliva flooded from her mouth. She gagged again and coughed the saliva out. She was embarrassed as she wiped the saliva on the grass. She spit what was still in her mouth on my cock and started jerking me off while she cleared her throat. \n\nAlicia spit on my cock again and rubbed it in with her hand. She wheezed out, \"Fuck. You have a big cock. It's twice the size of my husband's.\" She pushed her lips back on and resumed her blow job being careful to not push down too far. When she was satisfied that I was as hard as I was going to get, she stood up and stepped up into my chair and eased her legs down past me so that her legs were inside the arms of the chair and pushed through so her feet were on the ground. The low seating position and backward angle of the seat made it possible to have complete control as she held my cock in position and slid her pussy on. \n\nAlicia stopped as my glans pushed in and she groaned and shook her head. Her hair flew and then settled to cover her face. She reached up and pulled her hair aside and smiled at me as she clenched her teeth and pinched her eyes shut as she slowly pushed down my shaft. She was holding her breath until she hit her depth with a groan and then she blew out the air with a long, \"JJJJEEESSSSSUUUUSSSSS.\" She stopped there and opened her eyes. She mumbled, \"Fuck. That's huge. Let me adjust.\" I just nodded and didn't move. I couldn't add much sitting so deep in the chair. The only advantage I had was that my feet were firmly on the ground and with some effort, I could leverage my hips upward. \n\nShe pushed herself up with her legs and groaned again and then dropped back down and stopped again. She said, \"Are you ready?\" I chuckled and nodded. I thought I was but when Alicia started fucking me by pushing up with her legs and using gravity to drop herself back on again, she was so frantic in her motion that I groaned out and braced myself for her onslaught. She was moaning out, \"OH OH OH OH,\" with each thrust down my cock. She dropped too far a couple times and she yelped and flinched but it didn't even slow her down. Her hands were on my shoulders and I cupped her big round tits in my palms as I rolled her nipples between my thumbs and index fingers. She screeched loudly and kept on going. She started chanting, \"Oh Jesus. Oh Jesus. Oh Jesus.\" I was watching her tits bobbing up and down in my hands in synch with her thrusts. I didn't notice Alicia stretch her face up until I saw movement in my peripheral vision. She was kissing Kayla over my shoulder. I was startled by Kayla's sudden appearance but then my cock hardened as I watched them kissing with such incredible passion. They were obviously more than friends. When they broke their embrace, there was some kind of communication between them and Kayla moved around behind Alicia and went to her knees out of my sight. Then I found out what they had planned. \n\nAlicia lifted her pussy off my cock and I felt Kayla grab it and shove her hips down my shaft. I groaned hard. Kayla was the more accomplished cock-sucker of the two and she pushed slowly all the way down to my balls and I groaned again and muttered, \"Oh fuck.\" \n\nAlicia smiled down at me and said, \"She's good isn't she.\" I nodded and groaned again as Kayla pulled up my shaft and pushed her lips all the way to my balls again. Then she pulled off and guided my cock back to Alicia's pussy and she resumed her previous furious pace. I could feel my balls churning as my orgasm circled in from far away. Alicia pulled off again and Kayla took her turn with her deep-throats before pushing me back into Alicia's pussy. \n\nMy climax stopped circling and was coming straight on when Alicia's facial expression revealed that she was about to blow too. Her pussy was clenching on my cock and Kayla knelt down low and began running her tongue along my shaft and off to Alicia's anus when she drilled herself back down again. \n\nThese two must have had this down to a science because when I tensed and heaved my hips up into Alicia, she took two long streams of cum and then pulled up and off as Kayla shoved her lips over my glans and drank down all the remaining shots, swallowing as she needed to. \n\nWhen Kayla was satisfied that I was done, she pulled her lips off and pushed my cock back in Alicia's pussy and she stood up and came around to the side and bent down and shared the remains of my cum between them. Alicia's pussy was still pulsing gently on my softening cock. \n\nAlicia struggled to get out of my lap and then shoved her lips back on my glans and flicked her tongue around my shaft and then she pulled off and stood up. She looked down at me and said, \"Whoever was on that monster last night is gone now.\" She giggled and pulled her bathing suit back on as Kayla tied it in the back. I pulled my bathing suit on and we were in the midst of kissing each other when Kayla urgently said, \"Oh fuck Alicia, your husband just drove into the driveway. I turned to look but I didn't see anything. It was possible that a car had come up the driveway and was now blocked from my view by the house. Kayla had a frightened look on her face and Alicia bent forward and licked a wad of cum from her chin. She looked at me and said, \"You should go. He gets violent.\" \n\nI glanced back at the driveway, wondering if I should stay to protect Alicia if he did get violent but then I thought, 'He wouldn't try anything with me here but he could level his violence on her when I left.' I stepped into my kayak and sat down in the cockpit. Kayla and Alicia pushed me off the beach and I casually paddled back the way I had come. I watched Kayla and Alicia hurrying across the lawn to the house. When I rounded the point, I could see the entire driveway and the front of their house. There was no car. I said loudly to myself, \"I'll be fucked. They conned me for sex.\" I thought, 'Why the ruse? All they had to say was 'let's fuck'. Oh well, they got what they wanted and so did I. No harm, no foul.' \n\nI power-paddled most of the way home without resting. My core and arms were burning when I cruised up to my dock. I lifted the kayak from the water and turned it upside down on the lawn. I stripped off my bathing suit as I walked onto the patio. I really needed a shower badly. I was sweating profusely and I reeked of sex. I ran my hand down my flaccid and sticky cock as I stepped inside. \n\nAs time went on, I spiraled deeper into my funk. I couldn't shake the anger and embarrassment of my fianc\u00e9e dumping me for another woman and then marrying said woman on the same day we were going to get married. What a fucking loser I was. The adrenaline surge from Eva and Martina followed so closely by sex with Alicia and Kayla was long gone. I didn't even masturbate any more. Those words, 'Get busy living or get busy dying', that I had used to get past the loss of Anna popped into my mind and this time I knew I wasn't living. I was drunk most of the time and as beautiful as the lake was, it was awfully lonely. \n\nEvery week or so I'd make the two-mile trek out to the mailbox and back. I didn't usually get anything, except junk mail, but Jacob sent mail from time to time and there was in fact a padded envelop from him in the box. I opened the envelop on the way back to the cabin and it contained another envelop from Frankie. I smiled as I looked at her writing. Even that was the same as Anna's. I opened her envelop and read her short letter as I walked. She wrote: 'Jack. Where are you? All I got was word that the wedding was called off, with no explanation. I'm dying here. I've tried to call a thousand times but your phone just goes to voicemail. I've sent letters to your house but they get returned. I've sent this letter to your neighbor in hopes that he knows how to contact you and forwards this letter to you. Please call me. I know you must be in terrible pain. Wherever you are let me know and I'll come to you. I can't stand not knowing. Please call me.' She provided her cell phone number on the bottom and signed it, 'I love you Jack. Frankie' \n\nI set her letter on the kitchen counter and stood back and looked at it. I needed a drink. I knew I was wallowing in self-pity just like I did when I ran off to the lake ten years ago. I had learned to be comfortable this way. I'd spent so many years before this past summer this way and I knew Frankie would call me on it. She would be right too. I stared at her letter and sipped my glass of scotch. That wasn't a good sign either. I had graduated from beer to hard booze. I was sinking deeper and deeper and now I was feeling the double pain of Anna's death all over again along with the loss of Donna. As much as I analyzed how I had morphed the love of Anna to my love for Donna, I was doing the same thing now in reverse. Anna was Donna and vice versa. I finished my drink and picked up the phone with a sudden feeling of desperation. I needed help and I hoped that Frankie could provide it. \n\nI took forever to dial, one hesitant digit at a time. When the phone rang, I prayed that she would answer because I wouldn't be able to leave a message and I doubted that I could muster the guts to call again. It rang three times and I grew more and more anxious with each ring. I was about to hang up when the line clicked and Frankie said, \"Hello? Who is this?\" \n\nI said, \"Hello, Frankie.\" \n\nShe screamed into the phone and I had to pull the phone back from my ear, \"Jack. Oh my God. The screen said 'caller unknown' and I almost didn't answer it.\" She started crying and I let her get herself back together before I spoke again. ",
        "\"I got your letter today. Jacob did forward it. I'm sorry that you didn't get any explanation from Donna or someone and I can't go through it for you now. I'm doing okay. Not great, but okay. I don't want you to worry about...\" \n\nFrankie cut me off in mid-sentence and said, \"Of course I'm worrying about you, you dummy. After your long recovery from losing Anna, to finally fall in love again only to lose that too? You must be in agony and I want to be there for you. Tell me where you are and I'll come there. You need someone to talk to or you'll be another ten years recovering. I'm not just worrying about you, I'm scared to death for you.\" \n\nI said, \"Don't be afraid. I'm through the worst of it.\" \n\nAgain, Frankie said, \"Tell me where you are. Please?\" She was getting more frantic and started crying. Tears formed in my eyes too as I wrestled with her request, and then I relented. She said, \"I'll be there tomorrow.\" I told her I'd be here. She said, \"I love you Jack,\" and hung up. I stood there holding the phone, dwelling on how much it sounded like I just got off the phone with Anna. \n\nAs I had promised her, I was there when she arrived in the late afternoon. The flight was relatively short but the drive from the airport in her rental was long. I was on the patio behind the house with a glass of scotch in my hands, lost in the susurrations of the waves lapping on the shore when I heard her drive into the driveway. It had to be her. I didn't know anyone else. I promised myself that I wouldn't compound Frankie's concerns by being drunk and I wasn't; but almost. Scotch had become one of my four major food groups. I didn't eat much. It was way easier to pour a glass than make a meal. The clothes I had brought, just hung off me. I didn't care. \n\nI heard Frankie calling for me as she ran around the side of the house heading for the water. When she saw me sitting in my lawn chair, she said, \"I thought you'd probably be out here.\" I stood up and turned toward her and she stopped dead in her tracks and said, \"Oh my God, Jack. What are you doing to yourself. You look terrible.\" I bent down and put my scotch glass on the table by my chair. I stood up and offered her my arms and she burst into tears as she ran into them. \n\nIn my previous life, I would have been prepared for her arrival and been freshly shaved and showered. I was suddenly embarrassed that when she pushed her lips to mine, I was sporting a ten-day beard, unkempt hair, boozy, bad breath and BO. She ignored it all and showered me with pecking kisses. She was laughing and stopped to look at me and then she started all over again. Finally, she stopped and pulled back and said, \"Well, you may look and smell like shit, but at least you're alive. We can work with that.\" \n\nI laughed and said, \"It's good to see you Frankie. Your timing was impeccable. I was just about to spiral into the ground when I got your letter. I had accepted my fate. \n\nFrankie kissed me again with passion and then said, \"This isn't your fate. Not while I'm here and I'm here for the duration. She kissed me again and lead me inside and straight to the bathroom. She turned on the shower and said, \"Get those smelly clothes off and get in the shower while I go see if you have anything to eat in this house. \n\nI began unbuttoning my shirt as she had commanded and I said, \"Frankie? What do you mean, you're here for the duration? You have a job you have to go back to.\" \n\nFrankie grinned at me and said, \"Not anymore. I quit after talking to you yesterday. You're more important to me than a job. Now get yourself cleaned up and we'll see where we go from there.\" \n\nWhen I got out of the shower, I did feel semi-human again. I stared at my reflection in the mirror and didn't even recognize myself. I shaved and did all the bathroom stuff that I had abandoned over the past several weeks since arriving here. Early on, I had maintained a semblance of personal hygiene as I frequented bars and had a few one-night stands with unknown women who were as drunk as me. Lately, I had abandoned all that as I just drank here alone. \n\nI dressed in clean clothes that hung off me and walked back to the kitchen. Frankie turned from the stove, where she was cooking eggs and bacon, when she heard me walk in, she looked me up and down and said, \"Hello, Jack. It's really good to see you again. Where did that other guy go?\" She grinned at her joke and I pulled her into my arms and she came willingly. I was lost in her arms until bacon spattered on my arm and I came back to reality as I jumped back. \"This was all I could find to eat,\" she said. \"We'll hit the grocery store first thing tomorrow.\" I nodded and pulled her back to me and hugged her so tight that I squeezed the air from her lungs. \n\nFrankie was my salvation. The weather finally turned cool as the weeks pushed deeper into winter. We got snow a couple of times but it wasn't measurable and it was gone in a day or two. I ignored what kind of winter was happening at home. I didn't want to think about home and what was happening there. \n\nUnder Frankie's care, I put back on most of the weight I'd lost. We joined a gym in town and we faithfully worked out together four times a week. I was getting ripped again, like in the old days. Frankie was looking amazing in her bikini as we always finished off our workout in the jacuzzi before showering and returning home. \n\nFrankie had disposed of my scotch and bourbon bottles and even though I felt their loss, I didn't complain. I went back to beer for a while and then I even stopped that. Physically, I was feeling better than I could ever remember. Emotionally, I was getting better. Frankie and I talked about all the painful stuff many times. I cried like a baby the first several times and Frankie would hold me in her arms and cry right along with me. I knew she was trying to get me to the point where I could tell the tale like I was telling a story without getting emotional about it and Frankie broke into a wide grin the first time I accomplished that fete. \n\nFrankie and I had had sex before, a couple times. Once when she and her sister and niece came to my lake house to intervene in my ten-year spiral to the same place I was climbing out of now, and once when I visited her and we disposed of Anna's ashes in the park. That time, she did everything she could do to be her sister Anna. She wore Anna's favorite dress and fixed her hair the same as Anna did and we made love in the park on a blanket laid out in Anna's favorite spot. \n\nFrankie had avoided that complication when she arrived. She slept on the day-bed on a small three-season porch off the living room. I had insisted that she take the master bedroom but she insisted otherwise. My little-head and big-head clashed over what to do about her. My big-head relented only enough to masturbate in my bed as I thought of her and that last time, we were together on the blanket in the park. \n\nDuring the day, Frankie and I started going places and seeing the sights. We held hands and the sun seemed brighter. The world had color again. I thought of the bleak days of winter back home; nothing but white snow and ice on the lake and black tree trunks lining the shore. I knew that if I'd stayed at home this winter, that I would have been lost for good. Then I realized that if not for Frankie I would have been lost here as well. \n\nThen one night, as I laid there thinking in the darkness, I heard Frankie get off the squeaky-springe day-bed and moments later, she appeared in my doorway. She stopped when she realized that I was still awake. She said, \"Would you object if I slept here with you? It's getting kind of cool on the porch.\" \n\nI chuckled and pulled the covers back for her and said, \"Of course. I'll switch with you if you prefer.\" I prayed that she didn't want to do that and that she would want to get in bed beside me. \n\nShe didn't respond to my offer as she climbed in under the covers. She was dressed in her long tee shirt that she'd worn every night since she arrived. My cock went instant hard and I could hear my blood jack-hammering through my ears. I didn't dare move except to press my cock down to my stomach so it wouldn't tent the covers and give me away. I wanted so bad to make love to Frankie like that day at the park, but I was terrified that I'd scare her away and if that happened, I was surely doomed. \n\nMy heart was booming in my ears as I held my breath so I wouldn't give my erratic breathing away. I was certain that she could hear my heart pounding. I scooched further away from her to give her plenty of room so she wouldn't have to touch me unless she wanted to. I prayed that she'd want to. \n\nFrankie was adjusting her position for several moments and then I realized that she was wriggling out of her tee shirt. I heard the sound of the soft material hitting the floor, with an almost inaudible thump. I had to release the air in my lungs. I pulled in another breath and held it again. My senses were alive to Frankie's movement beside me. \n\nThen I felt her lips fall on my cheek and I turned to face her. I could see her form in the darkness as she'd taken a position on her side on her elbow looking down at me. At first, I thought she was just kissing me good-night, but then she bent down and kissed me on the lips and quickly pulled back. I could see the contour of her bare breasts as she moved one hand up to caress them. I was frozen in place as I watched her fondling her own tits. Then she bent down again and kissed me with passion and I eased the held breath from my lungs and kissed her back. \n\nShe whispered, \"I can't stay away any longer. I thought you'd make a move at some point, but I understand why you haven't. Once burned, twice shy or maybe even, twice burned, three times shy. I love you Jack and I can't stay away anymore.\" She kissed me again and I pulled her over on top of me. She felt my hard-on pressing up against her and she broke her kiss and giggled as she said, \"Holy shit Jack. That's the welcome committee I had hoped for.\" She ground her pubic mound on my cock and moaned. Then we were all over each other. I kissed her hard everywhere I could reach and she did the same. I was on fire as my hands roamed up and down from her ass to her shoulders and back again as she rocked her pubis, dry-humping my cock while she held my face in her hands. \n\nNeither of us could find enough air and we gasped over and over again. Frankie lifted her hips and grabbed my throbbing cock and maneuvered it to her sex. I was frantic to help her. I was so aroused that when I finally pushed my glans inside her pussy, I barely got one stroke and I groaned out, \"YYUUNNNGG,\" as cum exploded up my shaft. I was so embarrassed. This hadn't happened to me in forever and I was dying that it had happened then. I started to apologize, but Frankie put her finger to my lips and shushed me. She pulled her finger back and kissed me as she lifted her hips and slowly dropped them back down driving her pussy on my still rock-hard cock. She groaned this time. \n\nShe muttered, \"Fuck, Jack. You just came and you're still so hard,\" as she continued fucking me. I joined her action by rocking my hips up as she came down. It was a slow and luxurious fuck as she pulled up all the way until just the tip of my glans remained in contact with her pussy and then slowly pushed all the way back to her depth as she groaned the whole way down, and back up again. I could feel her firm breasts pressed to my chest and I ran my fingers along her side-boob. Our lips joined in a constant kiss. We moaned into each other's mouths as we fucked each other. \n\nAfter my premature ejaculation, I knew I could go for a long time. All I wanted to do was satisfy Frankie. It had been as long for her as it was for me. I was comfortable fucking her this way until she had her orgasm but after that I was going to take control. \n\nWhen she dropped her hips, I began gripping her ass-cheeks and pulling her down harder while using caution with her cervix. She pivoted her hips so that my shaft was dragging along her clitoris and it wasn't long before she pulled her lips off mine and lifted her head as far as she could and screamed into her orgasm. Her hips were everywhere then and I held her ass to me as I continued to push my cock deep in her pussy, which was trying hard to push me out as it clenched spastically on my shaft. She was gasping for air as I poured my jizz into her. I was amazed at how many strong surges of cum rocketed up my shaft. She flinched as she tried to force her pussy tight around my cock as cum leaked out of her and down my balls to the bed. \n\nShe was chanting, \"Oh Jesus. Oh Jesus,\" when I rolled us over to her side of the bed. My cock was still imbedded in her sex and she grabbed my neck to steady herself for the transition. She smiled up at me. Her bright white teeth seemed to glow in the moonlight. I bent down and kissed her and then said, \"Are you ready?\" She grinned and nodded vigorously as I pulled my cock out to the tip and drove it into her pulling a screech from her as she lifted her legs over my ass and locked her ankles and pulled me down hard with my next push. She groaned hard as she realized that she'd pulled too hard. She left the action to me after that and after two more powerful orgasms and another from me, we settled down with my semi-erect cock still imbedded. We kissed and she whispered, \"I love you Jack and I don't mean in a familial way. I really love you and I always have.\" \n\nI had heard her say those words before and her oldest sister, Joyce had said pretty much the same thing about Frankie's professed love for me the last time I saw her. Way in the back of my brain, I have felt the same way too, but I had been afraid that I felt that way only because she was so much like Anna and that would be wrong. So, I always pushed that feeling aside. Frankie deserved to be loved by someone for who she was not because of her similarities to her dead sister. \n\nI had never spent the time with Frankie like we had since she arrived a few months ago. Was it wrong to fall in love with her? Did I feel that way because she saved me? Did I love her because I could see her as Anna in my mind? All of these things troubled me but I couldn't imagine my life without her in it. \n\nI pushed my lips to hers as she lay under me and pulled back and said, \"I love you too, Frankie. I don't want to ever be without you.\" \n\nShe grinned up at me and whispered, \"Really. You can't know how long I've prayed that you'd say that.\" She thrust her lips up at me and we kissed passionately as she pushed her hips up at me again and I hardened in response. We were at it again and the passion pushed us over to mutual climaxes. \n\nWe spooned together with me cuddled up to her back. I couldn't fall asleep because I couldn't stop smiling. I randomly kissed her neck and she moaned every time. She pulled my flaccid cock up between her thighs and dragged her fingernails over the soft, velvety crown until she fell asleep. I kissed her on the neck and she didn't moan. I whispered, \"I love you Frankie.\" \n\nWe were heading into March and the weather was warm more often than it was cool. Frankie slept in my bed from that first night on and the sex was awesome. My lease on the cabin would expire at the end of the month and it was already leased at summer rates to someone else, starting in April. Frankie and I talked about whether we should lease another cabin for the summer. The going rates were astronomical but money was not an issue. Frankie was missing her sister, Joyce and her parents but she understood how I'd feel when I drove down that dirt road and into my driveway and she left the decision up to me. She would go wherever I went. \n\nBy the end of March, I decided that I had to deal with my angst. I was in a good place with Frankie and she would be understanding and helpful. I figured the first time I confronted Donna would be the worst and it would get better after that. Besides, I had a baby arriving very soon and that prospect excited me. The decision was made and Frankie quizzed me about whether I was sure or not. I was sure and I steeled myself. \n\nWe drove home. I couldn't say whether I took the same route or not because I didn't remember how I'd arrived. Frankie was feeling ill and wrote it off to motion sickness. We spent our nights in motels and I went out and got motion sickness medications. After the breakfast buffets, we'd set out again. The medication had little effect and it took four days to get home. We hit deep snow on the sides of the road about an hour from home. \n\nI pulled into my dirt road and stopped in the middle of it. The snow banks were five feet high. Frankie looked over at me and said, \"I know. You can do it. That's all behind you now. It's you and me now. Okay?\" I slowly drove the rest of the way and analyzed the snow bank in front of my driveway and decided that I couldn't blast through it. I parked as far to the side of the road as I could and helped Frankie up over the snowbank and we had to high-step it to the front door. I scanned the house from left to right. I had been so comfortable here for so long but it didn't feel that way at that moment. I looked at the wall of Arborvitae which rendered Priya's house invisible. I had an odd feeling that air ended at the wall and beyond it was nothing and I would suffocate if I went past it. I unlocked the front door into the breezeway and we stomped off the snow. I unlocked the door to the house and stepped inside. It was as cold and quiet as a tomb. Frankie nudged me further inside. The refrigerator doors were open. I went to the basement and flipped the main circuit breaker on and the furnace came on. I found the circuit breaker for the furnace and shut it off. There wouldn't be any water in the copper pipes. \n\nIt took me a while to figure out how to get the water on again and after some time with the furnace manual, I figured out how to charge the heating pipes with water and then we had some heat. Frankie dragged our suitcases in while I was in the basement. For the time-being, I forgot all about the pain that I felt the last time I was here. We went around the house checking for broken pipes. I didn't expect any but it was prudent to check. We were good to go. I opened the garage door and stood there with a shovel in hand. I was feeling the anxiety again and I realized why. I was exposed. Not to the elements but to whoever might come by and those \"whoever's\" could only be Donna or Priya. I dreaded my first encounter with either of them. I started shoveling and got my car in the garage before encountering anyone. The shoveled driveway would announce our arrival and I had no clue what would happen as soon as Donna or Priya drove by. Would they rush to my door? Would I reject them if they did? \n\nFrankie was in the master bedroom unpacking when I came in. She still wasn't feeling very well and I was concerned about it. There was no food in the house. Eddie and Jacob had stripped the house of anything that could freeze and break and any food items that would call rodents. \n\nWe went back out to get something to eat. It was strange driving around the streets that had been so familiar to me. It was all new for Frankie. She had been to my lake house only once before. I steeled myself and took her to the diner. I was sure that Donna didn't work there anymore and if she did, she wouldn't be working this close to her due date which was a week away. \n\nThe owner recognized me and came over to our table and said, \"Hi Jack. Where have you been? We've missed you.\" His wife came over, dressed in her waitress uniform and apron and insisted on a hug and kiss and then stepped back with a sultry smile.  \n\nShe looked me all over and said, \"Wow, Jack. You've been working out.\" I smiled. I was glad to see them. They were good people. We ordered and ate and drove back home and stopped at a fuel-mart to pick up a few things until we got groceries tomorrow. ",
        "When we got ready for bed that night, I wondered if the camera in the ceiling fan was still there. I found the circuit breaker for the light and fan and shut it off. Frankie and I showered together and started molesting each other and we got laughing. She laughed easily and she was easy to love. We did get ourselves rinsed and dried off but Frankie pushed me down on the toilet seat and gave me an incredible blow job as she knelt between my knees looking up at me with those big, beautiful emerald green eyes. \n\nShe sucked me dry and kept on sucking until I was hard again. Then she led me to bed and pushed me onto my back and climbed up straddling my hips. She dragged her tits across my chest and then pushed each one to my lips. I gently kissed and licked each nipple to a series of moans. Then she reached between her thighs and pulled my cock up and slid her pussy on and pushed down to her depth. With her tits still on my chest, she used her thighs to drive herself up and down my shaft. In this position, she was dragging her clitoris along my shaft as she fucked me. \n\nFrankie groaned hard into an orgasm and when she got control of herself again, she kept going and drove herself into another one. Then she pulled off my cock and crawled past me and grabbed the headboard and said, \"Fuck me doggy?\" I couldn't get into position fast enough. She moaned constantly as I drove my cock into her from behind. Just looking down at her incredible ass brought my orgasm out and I ramped up my pace as I poured cum into her. She was screaming hard. She laid the side of her head on the headboard and gasped for oxygen. Her eyes were pinched shut as her lips formed an \"O\". Her hips flailed on my cock until I was finished and sat back pulling my softening cock from her. \n\nFrankie didn't move as she gasped for air. I draped my body over her back and held her trying to get my breath too. After quite a while, Frankie collapsed under me and curled up in a fetal position on my pillow. It took a while before we were breathing normally again and Frankie was fingering my soft cock. She giggled and said, \"I love your cute little dick when it's like this.\" After a few moments, she giggled again and said, \"I really love it when it's not like this.\" \n\nThe next morning, Frankie was in the bathroom throwing up in the toilet. I called the doctor and made an appointment. His receptionist told me to come right in. She said that the flu had been really bad this winter. We had planned to get some groceries but I took her right to the doctor's office. \n\nI waited in the waiting-room. She was gone for a long time and I worried about what was wrong with her. When she came back to the waiting-room, she smiled and made an additional appointment with the receptionist. I was a little confused about the need for an additional appointment but I waited until we were in the car before I asked what they had concluded about her illness. She leaned across the center console and stretched up to kiss me. When she broke our embrace, she had a wide grin on her face and said, \"I'm pregnant. Six weeks.\" I was in shock and sat there looking at her with a stupid grin on my face. I was tongue tied. She said, \"Are you happy? Say something.\" \n\nI grabbed her and pulled her across the console into my lap and kissed her hard. She giggled into my mouth as her ass rested on the steering wheel blowing the horn in one constant 'beeeeep'. I lifted her off the horn and kissed her again. I said, \"Oh my God Frankie. This is fantastic.\" Without really thinking about it, I said, \"Frankie? Will you marry me?\" \n\nFrankie's grin washed off her face and she said, \"Are you sure, Jack? You've always been worried that I would think you were just asking Anna.\" She scanned my face looking for some hint of what I was thinking. She continued, \"Are you asking me to marry you or are you asking Anna to marry you?\" \n\nI smiled at her and said, \"Oddly enough, Anna never came to my mind. I love you Frankie. I can't imagine my life without you. Will YOU marry me?\" A wide grin appeared on her face and she kissed me hard again. \n\nShe pulled back from my lips and screeched as she said, \"Oh my God, yes. I love you, Jack.\" Her ass fell back on the horn and I let it go to the annoyance of everyone within earshot. I held her to me as tears formed in my eyes. In that moment I realized that if Donna had married me even though she was in love with Priya, I would never be here now and suddenly I was okay with what had happened six months ago. Suddenly, there was a God after all. I was no longer terrified to see Donna or Priya again. They were as much in the past as Anna was. \n\nI drove straight home and to Frankie's surprise, I coasted on past and stopped in Priya's driveway. Frankie looked at me and smiled when she realized that I had made some peace. I got out and without hesitation, knocked on Priya's front door. It took minutes before the inner door opened and when she saw me, she screeched out, \"Jack. Oh my God. You're okay. She threw open the screen door and jumped up in my arms. I was sincerely happy to see her and I hugged her to me and we kissed. \n\nInside Priya's house, I heard a thunder of footfalls pounding down the staircase and Donna, dressed in a mid-calf length flannel nightshirt hurried to the door. She was huge with child. She stood at the screen door and cautiously smiled at me. I understood why. I put Priya down and pulled open the screen door and stepped inside toward Donna. She stepped back not sure what I was going to do. I reached out to her and she flinched when I put my hand on her hard, distended stomach. She stepped back away from me. I stepped closer and wrapped my hand around her back and pulled against her resistance until she was pressed up against me. She arched her back so she could still scan my face to determine my intent. I bent forward and gently kissed her. She hesitated with her response and then she threw her arms around my neck and kissed me hard as she burst out crying. She tucked her face into my neck and sobbed as she held me tight. \n\nThe screen door opened behind me and Priya and Frankie came in and Priya closed the inner door to keep out the cold. In the middle of Donna's sobbing she said, \"I'm sorry Jack. I'm so sorry. I've been terrified that I'd never see you again and then terrified that I would and you'd still hate me. Thank you, God. Oh my God. You're here.\" She pulled my face down for another kiss and Priya joined us in a three-way hug and kiss. Frankie was all smiles as she watched the three of us. \n\nI guess Priya noticed my new physique from the workout therapy, because she was running her hands over the ripped muscles on my back, shoulders and chest and stomach. I'd never been ripped like this before and Frankie sure liked it. I wouldn't have been surprised if Priya had run her hand down into my pants but that was more Sylvia's style. \n\nWhen we separated, I introduced Frankie. Both Priya and Donna were giving her sultry looks. Frankie knew the entire story so she was aware of their sexual proclivities and she was amused by their stolen glances. Donna asked where I had gone and I told her that it didn't matter and offered no further information. \n\nI told Donna that, if she would allow it, I wanted to have a part in our baby's life and she burst out crying again and threw her arms around my neck burying her face in my neck. When she collected herself again, she apologized saying that she had been very emotional lately. She wrote it off to her pregnancy. \n\nA few days later Priya called to tell me that they were heading for the hospital. Donna's water had just broke. It was a couple days before her due-date. Frankie and I followed them and Donna insisted that I be in the delivery room along with Priya. The hospital staff weren't nuts about so many people to trip over. Her delivery was textbook. The baby was a girl with a mop of very light blonde hair. After they waved the baby under our faces, they quickly whisked her away. Priya and I returned to the waiting room while they tended to Donna. Sylvia was talking with Frankie, not knowing who she was. Frankie, knew who Sylvia was but didn't let on. I walked through the waiting room and bent down and kissed Frankie and said, \"It's a beautiful girl.\" \n\nSylvia apparently didn't even recognize me right away but when she did, she let out an ear-piercing screech and threw herself into my arms. Donna had said that she wasn't going to tell Sylvi that I was home and I guess she hadn't. Sylvia was crying as she kissed me all over. Then Sylvia became Sylvia again as she pressed her hand against my crotch and said, \"Fuck. I sure missed that.\" \n\nFrankie burst out laughing and said, \"You called it Jack.\" Sylvia looked at Frankie with a confused look on her face. \n\nI said, \"Frankie, this is Sylvia. Donna's sister.\" Then I said, \"Sylvia, this is Frankie, my fianc\u00e9e.\" Priya had been taking it all in and the look on her face when I said 'fianc\u00e9e' was priceless. Priya looked, open mouthed, at Sylvia and then at Frankie. She then looked at me and said, \"Oh Jack. That's wonderful. Did you meet Frankie while you were gone? The question was meant to say, 'kind of quick isn't it?' as she moved toward Frankie and hugged and kissed her. \n\nI said, \"Actually, I've known her for many years.\" The look on Priya's face said, 'She hasn't even been alive for many years,' in obvious reference to Frankie's age. I heard Priya whisper to Frankie, \"I'm kind of jealous.\" Frankie giggled as Priya moved away to let Sylvia in for a hug and a kiss. True to form, Sylvia put a lip-lock on Frankie and Frankie went with it and then grinned at me. \n\nPriya announced to everyone that Donna had given birth to a healthy 'toe-headed' baby girl. The 'toe-head' description was, of course, a reference to her silvery blonde hair. Everyone applauded the announcement. \n\nEddie came running in late as usual and came up short when he saw me. I hadn't told him I was coming home and I hadn't called him yet. His face formed into a huge grin as he moved over and gave me a man-hug but he was staring at Frankie. He whispered to me, \"What is Frankie doing here?\" \n\nI whispered, \"Frankie and I are getting married.\" Eddies' eyes went wide as he scanned Frankie from head to toe. Frankie teased his flagrant gawking and posed for him. \n\n\"Seriously. When did that happen?\" he said. He leaned in close and whispered, \"Fuck Jack. Don't take this the wrong way but holy-crap, she's even hotter than the last time I saw her.\" I chuckled and did the man-hug mandatory slap on the back. \n\nPriya said, \"I'm going back in with Donna. I'm sure everyone will be able to see her in her room. The baby will be in the Nursery soon. \n\nI asked Priya what they were going to name the baby and Priya said, \"I think you should have some say in that but we have talked about choosing \"Anna\". I just looked at her dumb-founded. My mouth was opening and closing like a fish out of water. She looked at me with an amused look and said, \"Is that okay with you?\" I could only nod. She kissed me on my cheek and left. \n\nI pulled Frankie off to the side and told her about Donna and Priya naming the baby \"Anna\" and asked if she had an issue with it. She grinned and said, \"That's a wonderful name.\" She kissed me on the cheek too. \n\nWe all waited around until we could see baby 'Anna' in the Nursery. In the rush in the delivery room, I had barely seen her. She was as beautiful as her mother. There were subtle hints of my genetics mixed in, but thankfully not too much. Priya came and took me back to Donna's room and the three of us talked. Donna said, \"Priya says that you and Frankie are engaged. I'm so happy for you.\" She motioned for me to come closer and I sat down on the edge of her bed and leaned forward. She whispered, \"Frankie looks just like the picture of Anna in her wedding dress that you kept in your bureau. She's her sister, right?\" \n\nI grinned and nodded and said, \"She is, but she isn't Anna, if that's what you're thinking. I was sinking fast, when she dropped everything in her life to come save me this past winter and with her help, I have put Anna and you away. I don't think I could have even talked to you if it wasn't for her.\" \n\nShe looked at me for several moments and I could see the mixed emotions run through her eyes. Then she said, \"Well, God Bless her then, because it would have been tortuous for me to not have you back in my life even if it's not what we planned. You hated me when you left.\" \n\nI looked at her and then nodded as I said, \"I guess hate and love are different sides of the same coin. I didn't think I would ever forgive you but Frankie got me past Anna and you. We can be friends, right?\" \n\nShe took my hand and squeezed it and then gave me a sultry little smile and nodded. She whispered, \"I hope we can be good friends.\" \n\nPriya sat down beside me and set her chin on my shoulder and whispered, \"Really good friends.\" \n\nA month later, Frankie and I got married in the wedding of her dreams at the premier venue in the city. Frankie's father pulled a few strings to get a reservation on such short notice. He came to walk Frankie down the aisle but her mother declined the invitation and he left right after the ceremony. I understood and Frankie didn't hold it against them. We invited all the family we could think of from both sides and all her friends and mine. Joyce was the Maid-of-Honor and Eddie was my best man, if I could keep him out of bed with Sylvia. It was a big bash. Money was not an obstacle. \n\nDonna and Priya came with the baby, and I was really happy to see Divi. She secretly drove her tongue into my mouth when we kissed. She came with a boyfriend that Priya wasn't too fond of. Beverly and Eva and even Martina and Jackie came. To my surprise, Jacob came with Ashley. They had apparently gotten back together. I was thrilled to see her again. Frankie was amused when she pressed her 'bumpers' hard to my chest when we hugged. True to form Ashley wore a very revealing outfit of a short mid-thigh tight leather skirt and a deep V-necked blouse and 'fuck-me pumps' and no one, man or women, could take their eyes off her. She loved the attention. Rita and Frank and Jimmy and Rachel took a suite and kept the pressure on me to join them. That wasn't going to happen. Mom and Janet did though, and so did Sylvia and Eddie. I heard from Janet that Mom really loved strapping Eddie on. She'd been his second mother since he was five. Jimmy finally found a willing participant for his violent anal sex in Sylvia. Who knew. \n\nFrankie adored little Anna as did I. We made a big deal of her at the reception. Frankie wasn't showing her baby bump yet which put off the comments until the baby was born and people could do the math on their own and snicker if they chose to. It was an amazing day. We Honeymooned for a week in the Caribbean. \n\nWhen I proposed to Frankie, I didn't have an engagement ring in hand as it caught us both by surprise. I had made plans to return to the Jewelry store in the city to hopefully return Donna's engagement ring and buy a new one for Frankie, but she said that she didn't need 'a stupid ring', all she wanted was me. That was the way she put it. She rebuffed several efforts to change her mind. When we had been on our Honeymoon for a few days, I took the opportunity to browse through the ritzy shops around the lobby of the compound. I couldn't help but look through their expansive collection of engagement rings and one kept pulling me back. I resisted the pull for a few days knowing how Frankie felt about it. \n\nThen, one early morning, shortly after the shop opened, I lost the battle and purchased the ring and I had the saleswoman package it in the biggest box she had. She looked at me with a bemused look and did as I asked. She wrapped it in beautiful wrapping paper and put a bow on it. I couldn't wipe the grin off my face as I carried the box back to the room. Frankie was in the shower and I put the box on her pillow. \n\nIt didn't take her long to spot the box as she came out of the bathroom. She looked at the stupid grin on my face with her hands on her naked hips and cocked her head at me and said, \"What did you do?\" \n\nShe grinned back at me as she sat on the bed and picked up the box. She hefted it and shook it and to all appearances it felt like an empty box. She pulled off the bow and stuck it to her right nipple and giggled as she flexed her pectoral muscle that she had acquired from our workouts and the bow jumped up and down. I got laughing and so did she. She was opening the wrapping paper one piece of tape at a time and then she grew impatient and began tearing at the paper like kids do with their Christmas presents. She turned the box in her hands looking for any markings that would reveal the contents. There were none. She kept glancing over at my grinning face as she yanked open the box and peered inside. \n\nShe reached in and parted all the packing tissues and found the small velvet box in the middle and she stopped and looked at me as tears formed in her eyes. She obviously knew what was in the velvet box and I half expected her to be pissed off at me, but she wasn't displaying any form of anger. I kept right on grinning and motioned for her to look in the small velvet box. \n\nHer fingers trembled as she reached in and pulled the velvet box out but she couldn't bring herself to open it. I moved over to the bed beside her as the tears overflowed her eyelids and ran down her cheeks. I took the box from her trembling fingers and got down on one knee and opened the spring-loaded cover and held it to her and said, \"Frankie? Will you marry me? Again?\" \n\nFrankie gawked at the ring in the box. Her eyes went wide and her mouth fell open and time stopped until she looked from the box to my face and with tears streaming down her cheeks she said, \"Oh my God, Jack. That is the most beautiful ring I've ever seen.\" Her hands went to her face as she pushed her mouth closed. I took the ring from the box and took her left hand from her face and pushed the ring on her finger. She offered no resistance and then she lifted her hand to her face to get a close look at it. She looked from the ring to me, still on one knee, and blubbered, \"I told you I didn't need a ring, but oh my God, this is beautiful. Yes. Jack. I would marry you a thousand times.\" She leaped from the bed and into my arms and crushed her naked body to me. The bow got knocked off in the process. She was kissing me all over my face while she held her left hand up behind my head to look at it. \n\nI made passionate love to Frankie right there on the floor beside the bed. She was distracted by the ring and she kept gawking at it until she forgot all about it as a huge orgasm crushed her just as my own climax crushed me. She was screaming and I was grunting and groaning as we gasped for air. \n\nWe spent the afternoon on the beach. She was topless like all the other women on the beach. Some were totally nude but Frankie didn't go that far. There were some nude men too but I kept my bathing suit on. I don't think a minute passed without Frankie lifting her left hand to examine the explosion of rainbow colors refracting from the sunlight. At one point, I said, \"I was afraid you'd be pissed off if I got you an engagement ring but fate kept pulling me back to this ring.\" Then with a little sarcasm I said, \"I'm sorry if you hate it.\" \n\nFrankie, gazed at the ring again and said, \"Oh shut up,\" and then giggled. I didn't respond but I thought, 'Yep, she loves it.' \n\nAfter the Caribbean, we continued our Honeymoon at the \"Camp\" on the lake in South Carolina. We had bought it shortly after we got back home. Snowy winters would be only a memory. We would miss little Anna for the winter months but we'd urge Donna and Priya to come visit us to break up the winter. \n\nFrankie's mother pleaded for her not to move to my house on the lake. She would miss Frankie terrible. Frankie was polite but didn't heed her plea and we moved the rest of Frankie's stuff into my house as soon as we got back from our Honeymoon at 'The Camp'. During the summer, we contracted to double the size of 'The Camp' with two more bedrooms and a bathroom on a second floor and central heating and air conditioning. We also remodeled the kitchen and bathroom. We continued to call it \"The Camp\" even though it was now a home. ",
        "It was a crazy summer. Jacob and Ashley renewed their relationship. Brieanne was gone. She had graduated from the strip club and was making porno movies in LA. Ashley continued with the yoga exercises on the dock and the boat parade started up again to Frankie's amusement and arousal as she watched Ashley and the activities on the boats with her binoculars. I was the beneficiary of the arousal part. \n\nEddie had to move out of the camp he'd leased for the winter and he moved in with Sylvia. He laughed about jumping out of the sex crazed frying pan with Rita and Rachel into the fire with Sylvia. He was as happy as I'd ever seen him. \n\nRita and Frank sent constant e-mails asking me to attend their parties and to bring Frankie too, of course. I just deleted the e-mails so Frankie wouldn't see them. It was an assumption on my part that Frankie would decline the invitations but I was pretty certain that she would and I certainly wasn't going to attend without her. \n\nThe four households: Priya's, Sylvia's, Jacob's and ours rotated dinner parties and they were mostly just dinner and drinks. Mostly. Little Anna was getting big and had developed a personality. We all adored her, although 'Aunt Sylvi' kept her distance. \n\nFrankie developed a fondness for having sex on the deck under the stars. Invariably, we got sarcastic complaints from Ashley to our left or Donna or Priya to our right. Divi was home for the summer and she and Frankie developed a close relationship. Frankie was easily the closest to Divi's age. Divi spent a lot of time on our deck and she was a built-in baby-sitter so Donna and Priya could get out or if they wanted some alone time, Divi would bring Little Anna over to my house. \n\nShortly after arriving at our revamped \"Camp\" in mid-November, Frankie gave birth to a bouncing baby boy. Frankie thought we should name him Jack Jr. I thought that was a dumb idea and I suggested Frankie Jr. and she exploded in laughter. We named him Michael. Joyce and Angela came down for a couple weeks to help care for Frankie and baby Mikey. Angela was sure that, with Frankie out of the sex picture for a few weeks, that I wouldn't be able to resist her charms. She wasn't terribly happy when I politely shunned her advances. Frankie didn't last the six weeks without sex and her doctor laughed when she confessed to him. He told her no one ever did. I was gentle with her the first several times until Frankie complained that she wanted me to fuck her like I usually did. She didn't complain again. \n\nDonna, and Priya and little Anna visited for several weeks in February. They'd had enough of the cold and snow. All that would be there when they got back home, of course, but they would be recharged and ready to endure the rest of it. Divi flew down with a girlfriend for her winter vacation. Priya didn't like the girlfriend either. I suspected that Priya would never like anyone Divi brought home. \n\nWe weren't concerned that we had a houseful of guests. We had loud and raucous sex just the same as always. If we got too loud, Frankie would get laughing and before we were even done, we'd hear the moans and groans drifting down the stairs from Donna and Priya's guest room. We'd lay there and listen and it always got us going again. \n\nDivi would always yell out from her room, \"Jesus guys. Can you keep it down? You're killing me here.\" Then we'd hear footsteps from Divi's room into Donna and Priya's room and then there were three of them moaning and groaning. Divi's girlfriend didn't seem to participate in the girl on girl sex. \n\nIt was obvious that Priya and Donna were subtly feeling out Frankie to see if there was a possibility of all of us getting it on together. Frankie knew what they were up to but she wouldn't bite. Donna and Priya never made any advances toward me and I knew they wouldn't without Frankie's permission. In private, Frankie confessed that their beauty aroused her but she aimed her arousal at me. She wanted me all to herself and if that's what she wanted, that's what she'd get. I never pushed her one way or the other but I well-remembered her and Joyce in a lips-to-tits sixty-nine on my deck all those months ago. \n\nDivi wasn't so subtle though. She took every opportunity to push her hand down in my pants and grab my cock. I tried not to encourage her by reacting to her touch but that was impossible. Frankie took Divi aside one day and privately gave her the 'what's-what' talk. Divi was better after that. She didn't physically make advances but she continued with that sultry expression of hers. Even Frankie had to admit that 'the look', as she called it, was hard to resist. \n\nThe sex with Frankie was amazing. During her pregnancy, we had adopted what Frankie called 'the sensual spoon'. It was a combination of side by side doggy and spooning positions. It was the best position to minimize the impact of the baby belly. She would start on her side with me spooning behind her. Then as I pushed my erection between her thighs, she'd lift her top leg to allow my cock to enter her. Then she'd roll toward her back and drape the top leg across my thigh. Even after the baby, this had become her go-to position. I loved it too because I could molest her tits with either my top hand or my lips. She could easily use her fingers on her clitoris to enhance her pleasure. We almost never started there but we always ended there as Frankie would erupt into multiple orgasms, before I ended it with a groan and an eruption of my own. \n\nShe liked to cuddle and kiss after that and I accommodated her, even though the top item on my list of things to do was fall asleep. We'd cuddle and kiss until my softened cock fell out of her and then she'd drop her leg off mine and we spooned as I pushed myself up to kiss her good-night and then I'd whisper in her ear, \"I love you, today.\" \n\nShe'd always giggle and say, \"Just today?\" \n\nI'd say, \"When tomorrow becomes today, I tell you that again.\" She'd giggle and kiss me again and we'd drift off to sleep and, in the pre-dawn hours, I'd spoon up to her again and kiss her and start the day with, \"I love you, today.\" She'd smile as she struggled awake and she'd purse her lips for an air-kiss as she'd reach out for my morning woody and we'd be off again in a passion-fueled embrace. Then we either had sex or she gave me a fantastic blow job and we'd drift back into sleep again. \n\nOn this particular day, which had started like most, I didn't drift back to sleep like Frankie had. I laid there spooned to her back lazily dragging my fingertips around her milk lubricated, nipples. I was thinking about Frankie. The tragedy of Anna's death and the flight to the lake back home to escape and the ten years as basically a recluse until Priya and Divi and then Donna and all that pain, had led me to this glorious moment with Frankie. She had been there all along and I had wasted a lot of time but if that's what it took then I was at peace with it. I whispered, \"I love you Frankie. Every day.\" I saw a smile form on her lips as she emitted a \"mmmmmmm.\" Then she whispered, \"If you keep doing that. You'd better be prepared to pay the consequences.\" She rolled over and put her lips on mine. I gladly paid the consequences. \n\n***** \n\n{If you couldn't already tell, I wrote this to be the final chapter. I couldn't help but add a few teasers that hint at further escapades and I'm wrestling with whether to continue. It's been fun writing this story. I don't use outlines to lay out how the story will go. I just write and spin off in one direction or another. Sometimes they work and sometimes they don't. At times, I may scrap 20 pages of text if I think I'm taking the characters on some tangent that they can't logically get back from. In recent stories, I've tried to spin a little intrigue and some sharp turns. I also know who the audience is and obviously, vivid sex has to be interwoven; but in a logical way and in a way that allows the reader to be there in the room, watching or participating. Let me know if you think this story should end here or continue. Include some ideas if you like. I've used several ideas from commenters in the past.}"
    ],
    "authorname": "BigZeke13",
    "tags": [
        "exhibitionist",
        "exhibitionism",
        "voyeur",
        "voyeurism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/voyeur-gets-voyeured-ch-13"
}