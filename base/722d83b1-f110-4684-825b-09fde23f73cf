{
    "title": "Tales of a Mature Prostitute Ch. 02",
    "pages": [
        "Looking back in my diary, after my first client, I entertained nine other men over the course of the next three weeks. Mostly there was a good outcome but there were a few that I considered so-so. Importantly for me, nothing bad happened. I think two or three are worth writing about but I'll leave them for another time. \n\nIt was my eleventh client, a man I will call Harvey, who is especially memorable because he introduced me to the idea of using internet porn with my clients which has been a foundation stone of my repertoire ever since. He also deepened my understanding of how men's sexuality can change as the years pass by. \n\nIn my adverts I try to make it as clear as I can that I am interested in older people and that penetrative sex is not on my menu, and I clarify in straightforward terms when I answer calls. For Harvey that was more than OK. What he wanted was for me to look at and talk about internet porn with him. \n\nDid I have a computer, could he bring a CD and would I wear a short skirt, fishnet stockings and stilettos? Yes, of course, and what else? A short pause and then the answer: would I masturbate with him? Yes, I would. Would a two hour session be OK? Yes, and thank you for being so specific, and can we agree on a fee?\n\n(I do understand that many guys are reticent about asking for what they would like and that I have to coax it out of them as part of the service, but when a client is specific, there is a great chance that it will work out well for both of us.) \n\nDressed as he'd requested, with the addition of a blouse that exposed a good amount of cleavage, and generally looking rather too sluttish for my liking, I opened the door to Harvey. He had told me he was 61, and that is more or less how I would have placed him. He was quite short and stocky, a full head of silver hair, a round, flushed face, a nice smile and a confident stance. \n\nOver the preliminary drink, he told me in a very straightforward manner that his only source of sexual gratification was masturbating secretly to porn. His wife's libido had dropped to zero after her menopause, and his erections weren't up to the job anyway. He had tried the blue pill but it made him feel ill. He'd fantasised about looking at porn and masturbating with someone else, saw my advert and decided to call me to see if I was interested. He loved his wife dearly and didn't think he was cheating on her because his arrangement with me was purely professional. \n\nDuring our chat I had been sitting opposite him. Even if I had wanted to, wearing a short skirt made it impossible to avoid the display of leg and stocking top that I was giving him, and that is what brought the conversation to an end. He told me that he was getting aroused by what he saw and asked if we could go to the computer.\n\nIn my study, everything was prepared: two chairs covered by large towels in front of the screen; baby oil; a silicon, cock-shaped vibrator; water-based lube; and a few hand towels. Harvey seemed to approve, commenting on how well prepared I was, and I loaded and opened his CD to find a folder named For Gabby. We sat down and I passed him the mouse.\n\nIn a couple of clicks the image that appeared was of a MILF type of woman perched on the edge of a desk dressed in an outfit that was remarkably similar to mine. I commented that she was lovely and would like to see more of her. Another couple of clicks and there she was again with skirt around her waist, one breast out of her blouse, her legs apart and her bare pussy on display. Harvey said that he liked up-skirt shots and I asked him what he liked best about her; as well as her outfit and pose, it was the shape of her thighs and the way her pussy looked so delicate and tight. I suggested that, if she was sitting in front of us, we could each use a hand on either side of her lips to open her up and then he could slip a finger inside her and, when she loosened up, I could slip one of my fingers into her, alongside his. He asked me if I'd ever had it like that and I told him that I had but I didn't pursue it. Rather I suggested that he might like to get some clothes off. \n\nTogether we undressed him so that he was only wearing a polo shirt (as I insisted he remove his socks - a prejudice of mine). His cock looked thick and swollen but far from what I would call a hard-on. \n\nAs he clicked on the next image I hitched up my skirt and slipped off my g-string. The picture was of the same MILF lady, this time bending over the desk with a hand reaching around to spread one of her cheeks and expose her rear entrance. It immediately brought to mind the session with my first ever client when I had posed in a similar fashion. Harvey seemed unsure where to look but I was sitting with my legs together so there wasn't much of me for him to see. \n\nI thought about telling him of my first client and how I had exposed myself but decided against it. I learned a long time ago that talking to a man about sex with other men was not such a good idea. It tended to arouse either jealousy or their competitive instinct and in the case of Harvey, the last thing I thought he needed was to feel that he had to prove his virility.\n\nWe browsed through more similar pictures, me stroking his thigh and him unable to resist touching himself from time to time. It soon became clear that he had a liking for women in stockings bending over with a rear view of their pussies. As he relaxed with me, he spoke more about what was on the screen: the crease between buttock and thigh and the swell of thigh flesh at the top of a stocking; the curve of a narrow waist swelling into rounded hips; the definition of a well-toned leg and, of course, the slits between their legs. What I liked about all of this was the detail he noticed and the way he described it, and how he seemed to be relaxing with me, feeling free enough to talk about it all. \n\nAfter a while he asked me if he could show me something that was a little more hardcore. I told him to go ahead and up popped a close-up, black and white picture of a wet-looking pussy, spread open, with a large, hard cock just at the point of penetration. I immediately responded by saying that the first thrust was always the best because you knew that you had been taken and there was no turning back. Harvey smiled and said that it reminded him of when he was younger and could get it up without a second thought. \n\nI didn't think it was good for him to dwell on the past too much at that moment, and we were well over an hour into the session, so I decided the time was right to touch him and keep him in the present. I reached out and wrapped my hand around his cock, feeling that lovely, velvety, warm flesh. With my fingers close to the base of his shaft, I slid my hand downwards to ease his foreskin back and gave him a soft squeeze which managed to get the head to swell a little and caused him to murmur in appreciation. I told him that, if his cock could talk, I was sure it could tell all kinds of stories and that it would soon have a new one to add to the index. \n\nAs I fondled him, he turned back to the computer and clicked on a series of images of women masturbating, and finally of a man and woman sitting opposite each other, both of them jerking off. It was what he had fantasised about a lot but never experienced, he told me. \n\nAt that point there was little more to say but plenty to do. I moved my chair back so that it faced him, eased one breast out of my blouse, squeezed a little lube into my right hand, slid down to the edge of the chair and parted my legs. Harvey lubricated his cock with baby oil and our mutual masturbation began.\n\nI'd much enjoyed scenes like this in the past for their certain, special intimacy but like many things in a sexual encounter, for me it depended on the context, the man and his demeanor. Harvey was far from the answer to a maiden's prayers but I liked him and enjoyed the rapport we had created. His body was not unattractive and I liked his strong looking thighs and especially his hands which at that point were smoothly and steadily stroking his cock. For all that, I thought I might not achieve a real orgasm for him to see; the context just wasn't right for me and perhaps things were moving too quickly. My focus had been on his pleasure rather than my own and I wasn't particularly aroused. I decide to take it a step at a time and see what might happen.\n\nHarvey was supporting his cock with one hand wrapped tightly around the base and the other rubbing up and down the shaft. On the downward stroke the head would show itself and it looked very purple and bulbous. I was massaging my exposed breast with one hand and a finger of my other hand was stimulating the magic spot at the upper left part of my clit. From time to time I would place a finger on either side of the hidden stem and pull the hood back so that the pink tip would show itself. With a little of such attention, my clit engorged so that the tip was permanently displayed. \n\nPerhaps it was the sight of my miniature dick that did it for Harvey because he was no longer needing to support his erection with one hand at its base; it was standing up all by itself, his strokes were getting stronger and he was moaning and sighing. I encouraged him to continue, telling him how big and hard he looked and how much I liked the way he was rubbing it. \n\nIt seemed to me that he was getting close so I quickly grabbed the vibrator and added some lube. Raising my thighs onto the arms of the chair and parting my pussy I began to slide it inside. As my pussy gradually accepted the penetration, I started to deliberately fuck myself, easing the vibrator back slowly and then pushing it back firmly in, all the time with Harvey's gaze riveted on the action. It didn't take him long to cum, first a loud groan and then a series of many little spurts each accompanied with a gasp. His face was that amazing combination of agony, pleasure and relief. For a good few moments he sat quivering and taking deep breaths before finally slumping back into his chair with his eyes closed and a hand gently fondling his softening dick. He looked quite exhausted. \n\nAfter watching his display, I was more aroused than I had been at any point in our session. With more time I would have easily got myself off with my fingers and the vibrator, but it wasn't to be. \n\nI let him take his time to come around and when he opened his eyes he kept repeating that it had been amazing. I asked what he would like and he said a strong black coffee and a cigarette. \n\nBefore Harvey left, we chatted for a while and I was especially curious about what he had said earlier: that he was no longer up to the job. On the other hand, I had seen him maintain a very solid erection for a good period of time. He explained that it was a combination of things: my talking so explicitly about sex; the visual stimulation of the porn and then the way I had exposed myself, live in front of his eyes, just for him; and that he didn't feel any pressure about having to perform. It was interesting feedback which confirmed many of the things I had read. \n\nI had hoped Harvey would return and I'd thought about how I might develop things with him but I have never heard from him since. Who knows? \n\nPS -- A big public Thank You to all of you who sent me such great feedback on my last story. I hope you enjoyed this one just as much. \n\nNext time, I think I will tell you about encounters where my participation is very passive and about a client who wants nothing more than to please me. \n\nA final thought - in one of the feedback messages, I was asked about my reasons for writing and it occurs to me that others might have a similar query so here is how I answered: \n\n\"You ask why I write - a good question and one that I asked myself. The superficial answer is that I like writing and I like sex. Looking a little deeper, there are a number of factors which fit together to provide the motivation.\n\nAcceptance is important to me. Anyone involved in sex work knows that many will look down on them, so there is a strong need to find a pocket of society where you are accepted. Idealism is another factor and in writing honestly about sex amongst older people, I hope I am waving the grey flag. And then, I have always been involved in the arts (don't get me wrong - I'm not trying to pretend that my writing is great literature) and, in common with many in that field of life, I have a strong urge to give of myself, in some ways to provide a counter-balance in a world that often seems dominated by takers, and also it ties back to wanting acceptance.\" \n\nUntil the next time -- Gabby."
    ],
    "authorname": "GabbyBX",
    "tags": [
        "mutual masturbation",
        "prostitute",
        "stockings",
        "erections",
        "clits"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/tales-of-a-mature-prostitute-ch-02"
}