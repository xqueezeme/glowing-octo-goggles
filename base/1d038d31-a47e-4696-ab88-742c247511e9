{
    "title": "Red Wolf",
    "pages": [
        "Clutching at the crimson fabric of her cloak, Red peered through the branches of a pine. Her destination was within the clearing, a mere twenty yards past the treeline: a stone cottage, with a thatch roof, and a smoking chimney. It stood innocuous, beneath the silver light of the moon, looking to all the world like a simple domicile. There was absolutely nothing setting it apart from any other cabin in the woods. Yet at the same time, it was impossible to mistake it for anything but Grandma's house. \n\nWho but a witch would build a house in the Cursed Woods, after all? A place where monsters roamed. A forest where even the trees were known to occasionally feast on flesh. Even among witches, living in such an area would normally be tantamount to suicide. Yet, somehow, a singular old woman had set up shop in the very heart of the Cursed Woods. That was the entity known as Grandma. A witch among witches, who boasted power enough to treat the Cursed Woods as her personal backyard. \n\nIt was said that she used to live among her fellow humans. Supposedly, in her younger years, Grandma treated ailments and curses like every other good witch in the world. According to such tales, there was nothing she couldn't cure and little she couldn't accomplish with her magic. Her clients had included kings and heroes, and she'd appeared in more fairy tales than Red could count. Though she only helped those who proved themselves, she would help any who proved themselves to her. \n\nYet one day that all powerful witch, who'd spent her whole life helping people, had packed it up and moved to the Cursed Woods. She'd turned her back on humanity, and declared that she no longer wanted to hear requests. That had been a hundred years ago. \n\nOf course, people had come to her cottage in the time since. Braving the terrors of the Cursed Woods, they'd come knocking on her door in search of cures for plagues, protection from monsters and of course the dissolution of curses. Yet even when the king of the country marched an army to her house, the cottage door had remained stubbornly closed. What's more, those who tried to directly attack the house had been blown back by powerful magic. In short, no miracles had been performed by Grandma in the last hundred years. \n\nDid that make Red's current mission hopeless? She'd hired a woodsman to guide her through the forest, and made her way through the woods to Grandma's house, even knowing the stories. Listening to the expert advice of her guide, she'd avoided monsters and pitfalls, and kept the monstrous trees at bay. All so that she could reach this point. \n\nNow, she stood at the edge of the clearing, wondering if perhaps it had all been for nothing. Sneaking out of her father's household, using what little money she had to hire a guide, making her way through the Cursed Woods. It really would all be for nothing, if she couldn't gather the courage to take the few remaining steps toward the house. \n\nSlapping both hands against her cheeks, and taking a deep breath, Red pushed the branches out of her path and walked into the clearing. When nothing jumped out at her, or bit her, she let out a little sigh of relief and started to walk toward the front door of the cottage. \n\n\"Where do you think you are going?\" \n\nThe question was a whisper in her ear, accompanied by a hot breath. Hands slipped around Red's wrists, before she could even think to respond, their grips as strong as iron. \n\n\"I...\" Red licked her lips, wondering how they'd become so dry. Not just her lips, but her throat as well. She felt like she couldn't breathe. \n\nHad she really come all the way out here for nothing? \n\n\"I'm here to see Grandma!\" Red forced the words out, in a rush, knees shaking and eyes tearing up. She didn't know what had gripped her, what had stopped her, but if it could speak then surely it could be reasoned with? \"Please! If you'll just let me go inside, I'll do whatever you want! I just need to talk to her!\" \n\n\"...Sorry. But the only thing I want is for you to die. Human.\" \n\nThe pressure disappeared from around Red's wrists, and she stumbled forward a couple steps. Her heart beating rapidly, her breath coming in short gasps, she turned to face the creature that had so calmly demanded her death. \n\n\"You're... A woman...?\" That was certainly one way to describe what confronted Red. She had a pretty face, with lips the color of blood and cheeks as pale as the moon's light. She wore a simple tunic and trousers, which did nothing to emphasize her body, yet her curves were still evident at a glance. The swell of her breasts, large enough to bury one's face in, and the softness of her wide hips marked her as attractive; at least by Red's standards. \n\nYet this woman was obviously not human. The woman's tangled hair, which boasted enough length to reach her waist, was silver. Her ears were triangular, and furry; further, they were positioned at the top of her head instead of on the sides. Her eyes were yellow, and her teeth were pointy. Her nails were sharp, enough so that they could easily be considered claws. She even had a bushy silver tail. \n\nRed's words hung in the air, between the two figures, and the woman in question let a low growl slip from her throat. Listening to that sound, there was no doubt in Red's mind that she'd been wrong. This wasn't a woman. \n\nIt was a wolf. \n\n\"Are you afraid, human?\" the wolf in woman's skin whispered, softly, stepping toward Red. \n\nRed flinched back, but didn't take her eyes off the beast in front of her. She got the feeling that a single misstep here would lead to her death. If she backed up, if she showed fear... She wasn't sure they'd even find her bones come morning. \n\n\"You are afraid,\" the wolf declared, a smile slipping across her ruby red lips. \"I can smell it: the stench of terror. You are practically fit to collapse, are you not? Desperately putting on a brave face. Do you think that acting tough will save you from me?\" \n\nIt was true: Red was terrified. Faced by a creature fast and quiet enough to sneak up on her, and strong enough to restrain her movements, with claws and teeth that looked sharp enough to tear her to ribbons... Who wouldn't be afraid? Yet listening to the creature talk this way, something else flickered in her heart. \n\nAnger. \n\n\"S-So what if I'm afraid?\" Red demanded, forcing her knees to stop shaking through sheer will power. \"Show me someone who wouldn't be terrified of a monster! But if you think I'm going to run away from you just because of that, y-you have another thing coming.\" \n\nThe smile didn't shift. Even if her life was on the line, Red would have sworn by all the gods above that the wolf hadn't moved a muscle during that speech. Yet, somehow, the expression the monster was making had gotten a lot scarier. As if before she had been smiling, but now she was simply baring her teeth. \n\n\"Are you ready to die, human?\" the wolf asked, slowly stretching a hand out toward Red. \"You must be, if you are talking to me like that.\" The wolves fingers pressed against Red's chest, the tips of the claws digging into the crimson cloak. \"I really hope you made peace with your gods.\" \n\nRed was trembling, again. Her entire body was shaking with fear. The anger she'd clung to a moment before was gone completely. She wasn't sure how she was even still standing on her feet. \n\nEven she was surprised when more words came out. \n\n\"I... I want to see Grandma!\" \n\n\"Everyone wants to see Grandma. My job is to make sure that nobody does.\" The clawed fingers gripped at Red's cloak, and tugged the girl forward a step. Sharp teeth were suddenly bare inches from Red's nose, and she couldn't help letting out a squeak of terror. \n\nRed was on her knees before she knew what had happened; her legs had simply given way. Staring up at the monster who had done this to her, whose hands were still clutching at the fabric of her cloak, she could do nothing more than whimper with fear. \n\n\"...Pitiful...\" the creature whispered, releasing Red's clothing. \"Weak. Even if I let you through, there is no way Grandma would see to the request of someone like you. You do not have what it takes.\" Saying so, the creature strode past Red, toward Grandma's house. \n\n\"E-Even so...\" Red's throat felt constricted by terror. Each whispered word was a struggle. Still, she refused to stop trying.\"Even if t-that's the case... I still want to see Grandma!\" \n\n\"Then get stronger. If you can... Well. Not that it matters if you can or can not. You will not be able to defeat me, as long as I am here. And I am going to be here for a very long time, human. So you might as well just go home.\" \n\nEven without looking behind her, Red knew the sort of face that the wolf must be making. Smug, confident, self-satisfied. A predator who knew full well that she was beyond the reach of her helpless prey. \n\nRed's fingers clutched at the grass beneath her, short trimmed nails digging into the dirt underneath. There was nothing she could say. She had been judged unworthy. \n\nSlowly, Red rose back up. Swaying faintly on her feet, she began to walk toward the clearing's edge, away from the cabin. Placing her hand on the branch that barred her exit, she took a moment to glance over her shoulder. \n\nThe wolf was kneeling on the cottage porch. One knee pointed toward Red, the other straight toward the air; both hands on the ground, as if ready to push herself up at a moment's notice. \n\nShe was smiling. A cruel and vicious smile of victory. This beast thought beyond a shadow of a doubt that she'd won. \n\nMaybe she had, for the night. But did that mean Red had to give up? As long as she was alive, wasn't there hope? She was sure being stubborn would only convince this monster to kill her, but... \n\n\"That's fine, isn't it?\" Red murmured to herself. \n\nThe wolf's ear moved, ever so slightly. The smile dropped from the wolf's face, even as a grin spread across Red's lips. \n\nYes. That's right. She had come here knowing she might die. Whether at the hands of monsters, or through a curse laid by Grandmother herself, death had always been on the table. \n\nFailure, on the other hand, was not. \n\n\"I'll be back,\" she swore. To herself or to the wolf, even Red didn't know. Still, she met the beast's gaze with her own. \"I'll be back!\" she repeated, louder. \"And next time, I'm going to see Grandma!\" \n\n\"I will kill you before you can,\" the wolf promised, baring her teeth. \n\n\"Maybe,\" Red agreed. \"But I'm not backing down!\" \n\nSaying so, Red pushed aside the branches of the treeline, and moved away from the clearing. Making her way back to the camp, she did not bother greeting her guide, Anthony, but simply stomped toward her tent. \n\n\"No luck with Grandma?\" Anthony asked. \n\n\"I wonder what your first clue could have been,\" Red responded back, bitterly, stopping outside her tent and turning her toward the well-muscled man. \n\nHe was a hulking creature, even sitting down. Six foot three at his full height, he had a ruggedly handsome face, marred only by a crooked nose and brown stubble, which matched his short cropped hair. If Red had been interested in men, he might have appealed to her. \n\nThough he'd already made it clear that he had no interest in someone with her condition, to begin with. \n\n\"Let me guess - ya ran into the wolf?\" \n\n\"You know about her?\" Red asked, turning her attention more fully to Anthony. \n\n\"Thought everyone did,\" Anthony answered, chuckling under his breath. \"Damn thing's been guarding the witch for the last five years, and then some. Some people say it's a sign that Grandma's getting on in years, that she needs a creature looking after her now... Might be she's getting weaker.\" \n\n\"Weaker?\" Red parroted back. No. No, the witch couldn't be getting weaker, could she? She had to be in full strength to fix Red's condition... \n\n\"Oh, I'm sure she'll be able to do whatever ya want, if ya can get to her,\" Anthony promised. \"I hear she's got all sorts of magic knick knacks and treasures. Enough to make a man rich, if he ever got his hands on them. And powerful, beyond his wildest dreams... I'm sure ya can get everything ya've ever wanted. If ya can get past that damn wolf, that is.\" \n\n\"I'll get past her,\" Red swore. To herself. To Anthony. To the world. \"Whatever it takes, I'll get past her.\" \n\n\"Heh... I'll remember ya said that.\" Anthony poked a stick into flames, shifting the burning wood and sending sparks flying into the air. \n\nRed didn't respond, choosing instead to climb into her tent, and snuggle beneath her blankets. \n\nSoon, the morning would come. Her arms would thicken and grow hair. Her breasts would shrink into her body. Her lustrous black hair would magically shorten itself to a neatly cropped style, while her pussy and clit would shift into balls and a dick. \n\nWhen the light came, the curse that covered her nightly would fade, until the next sunset. She'd return to what everyone thought of as her natural state. \n\nEveryone but Red. Not even Anthony knew, though, that her goal wasn't to get rid of the curse. \n\nIt was to make the \"curse\" permanent. \n\n*** \n\nMonster. Beast. Wolf. The words ran on repeat through a certain woman's head, as she crouched in front of Grandma's house. She was the fierce and loyal guard dog, who had served Grandma for five and a half years. \n\nShe still had another six months to go, if she wanted to earn her reward. Half a year more, keeping humans from the witch's door, and she would be granted one of the miracles that had once brought kings and heroes to Grandma. \n\nThis being, this monster, this wolf, wasn't like those selfish humans who had pestered Grandma for favor after favor, until she'd finally turned away from mankind all together. She was different from those selfish beings, who sought only to take. She was earning her keep. \n\nSix years of her life, in return for a miracle. \n\nWas it really worth it, though? Sometimes, the wolf had to wonder. Humans were such weak and selfish creatures. They treated members of their own species as monsters, for the simple crime of being born a little different. Even if the offending entity was nothing more than a little girl, they'd throw sticks and stones, mixed with insulting words. They were worthless, weak, and terrible creatures. \n\n\"So why, then?\" the wolf asked herself. \"Why do I want so badly to be one of them?\" \n\n*** \n\nFrom sunrise to sunset, Red stayed in her tent. For breakfast, she ate eggs that Anthony had foraged, and tried not to think about what sort of creature those eggs came from. Something large enough that a single yolk was as big as her head. That was already more than Red wanted to know. \n\nFor lunch, she had fish that Anthony had caught in a nearby river. Those seemed largely normal, at least, though Red chose not to ask about the bandages that covered Anthony's hands when he delivered her the plate of food. \n\nEven when dinner came, Red stayed in her tent and ate mystery meat stew. She tried not to think about how many teeth their dinner must have had, or what it might have eaten in the past. Really, she was just glad she had hired a capable guide. \n\nWhen the sun sank beyond the horizon, Red emerged from her tent with a smile on her lips. Her black hair had regained its length, reaching a little past her shoulders. Her green eyes sparkled in the moonlight, filled with determination. She had shrunk a few inches, from five foot nine to five foot six. She had left off the red cloak, today, to better show off a blue dress that seemed practically tailored to her curves. It had a deep neckline that showed off her pale breasts, and its hemline descended only a few inches past her knees. An errant breeze caused the cloth to flutter about her legs, almost - but not ever quite - showing off her underwear. She was wearing a pair of black slip on shoes. \n\nShe'd put lipstick on. And rouge. She'd been delicate with the latter, creating a relatively natural look. Or it would have been a natural look, if she had been back home at her parent's estate. Instead she was standing in the woods, looking for all the world like she was about to go on a date. \n\n\"Ya going out again?\" Anthony asked, upon seeing her. His eyes took in her outfit, and her makeup, but if he had questions about either he kept them to \n\nhimself. \n\n\"Is that a problem?\" Red asked, smiling faintly . \n\n\"You're funeral,\" the man replied, with a small shrug. \n\n\"You said the same thing last night, and I came back fine then...\" Fine might have been an exaggeration, but she certainly hadn't been killed or maimed. Considering how easily the wolf could have managed either, Red could only come to the conclusion that she had been spared. More than likely, she'd been dismissed as too weak and worthless to kill. \n\nToday, Red was determined to make the wolf swallow that attitude. This dress was her battle armor. The makeup was her declaration of determination. She didn't expect anyone to understand, least of all the rough and rugged Anthony, but she was essentially putting her life on the line. \n\nToday, she wasn't going to back down. She was either going to make it to Grandma, or she was going to die. Either way, she'd be doing it as herself. \n\nIt was hard to tell what Anthony thought of all this, though. Having said his piece on her likely demise, he had already turned his attention to stroking the flames of their campfire. \n\nWell. It wasn't as if Red cared what he had to say. She knew she was being reckless, after all. She understood that going out into the woods at night was dangerous. She recognized the fact that she was physically weaker in her nighttime form, as well. The combination could easily lead to her death, just as Anthony predicted. \n\nIt was less than a dozen yards from the camp to the clearing, though. It was unlikely she'd be killed before meeting the wolf. It was equally unlikely that she'd survive meeting the wolf, again, but still. She had to do this. If she gave up now, if she went back home, she'd never be able to come here again. She'd be cursed for life, changing forms with every sunrise and sunset. \n\nShe had to do this. Even if she was so scared that she wanted to cry, she had to make her way to Grandma's house. Because as scary as it was to face potential death, a lifetime of not being herself was even worse. \n\nSo she had to do this. \n\nTaking a deep breath, Red walked through the trees, to the edge of the clearing. She did not stop outside the treeline, this time, pushing aside the branches and making her way into the grassy area. \n\nIn response to her intrusion, a figure stood up from the porch. Silver hair and yellow eyes marked this inhuman beast; it was the same creature that had stopped her the night before. \n\n\"Human...\" the wolf snarled, pulling her lips back to bare her teeth. \"What are you doing here? I thought my warning was quite clear.\" \n\n\"It was.\" Red smiled at the wolf before her. Her heart was pounding so fast that she thought it might burst from sheer fear. Her legs were trembling. Staring at this wolf, at this monster, made her feel like she might burst into tears. Yet still, she brought out the biggest smile she could muster. \n\n\"You're going to kill me, right?\" Red took a step forward, eyes locked on the instrument of her demise. A tear actually did leak out of one eye, but she took another step forward all the same. \"It's really unfair...\" \n\n\"Unfair...?\" the wolf asked. Somehow, the creature's gaze seemed more intent. \"You think I am being unfair?\" Was it just Red, or did the wolf somehow seem angry? \n\nWell screw that. Red could be angry, too. \n\n\"Yes! It's unfair! I came all this way, I faced all this danger, and Grandma won't even talk to me? Instead she unleashes her pet monster to come kill me? It's not fair! It's not right! People in fairy tales are always rewarded for their efforts, but in real life I'm just going to die!? How is that in any way fair!?\" ",
        "\"...Go home, human. I will not warn you again.\" The wolf had locked in on Red's green eyes, the yellow gaze seeming to penetrate Red's very soul. \"Whatever you want, you will not be able to get it if you're dead.\" \n\n\"Then kill me!\" Red demanded, stepping toward the house. \"I'm not backing down. If you want to stop me, you'll have to end my life.\" \n\n\"Human...\" The wolf's expression didn't change. Her fierce eyes didn't waver, and her sharp teeth were still on display. Yet somehow, far from baring her teeth, it seemed that the wolf was now smiling. \"Do you really think you can make demands of me?\" \n\nRed didn't see the wolf move. One moment she was staring at the wolf, a good dozen yards away from her, the next she was on the ground, her wrists pinned above her head, her body straddled by the still smiling beast. \n\n\"Wh-What...?\" Red managed to choke out, in surprise. \n\n\"I am stronger than you, human,\" the wolf whispered. \"I am faster than you. I am braver than you. And I am probably smarter, too. But most of all, I am in the right. So go home, human. Go to your bed, and tuck yourself beneath the warm covers. Go be safe, behind thick walls. Live your life. And do not come back.\" \n\nThe wolf stood. Without hesitation, she turned her back on Red and began to walk back up the porch stairs. After reaching her former resting spot, she settled into the same easy crouch she'd ended up in the night before. \n\nRed stayed laying on the ground. She didn't say a word, but her tears glimmered in the moonlight, even as the wolf watched. \n\nThe wolf didn't speak, but only watched as Red gripped the grass and pulled herself upright. \n\n\"Why?\" Red demanded, voice quivering. \"Why didn't you kill me?\" \n\n\"...I do not answer to you, human. I have no reason to kill you, just because it is what you want.\" \n\n\"You think I want to die?\" Red demanded, pushing herself up onto her feet. \"Do you think I want my life to end here!? There's so much I still want to do! There's so much I still want to experience! A first kiss. A first love. Starting a family. There's so much I want to enjoy before I die!\" \n\n\"Then do it, human. I don't see anything stopping you.\" \n\n\"You! You're stopping me!\" Red insisted, stepping forward. \"You're the one standing in my way! I just want Grandma's help to be myself, but you keep getting in the way!\" \n\n\"...Yes. And I will continue getting in your way. So you should give up, human. It would be better for you that way.\" \n\n\"How do you know what's better for me!?\" Red demanded, taking another step closer, and placing a hand on her chest. \"I'm willing to die for my dreams! I'm willing to give up everything I am to be myself! Can you say the same!?\" \n\n\"I would stop there, human. I can not guarantee your safety if you take another step.\" \n\n\"What?\" Red demanded, walking forward again. \"Are you going to snap, monster!? Are you going to tear me limb from limb, wolf?\" Another step. \n\n\"...I am warning you for your own sake, as well as mine. Do not take a single move closer, or you will regret it.\" \n\n\"Then make me regret it!\" Red demanded, taking the next step. \"I can't go home. I won't go home. Not without doing everything in my power to get past you!\" \n\n\"Human...\" The wolf sighed. \"I did not recall saying that I was the only thing you had to get past...\" \n\n\"Wha-?\" Red's words were cut off, as the ground exploded beneath her. Roots as thick as her arm burst from the earth beneath her, wrapping themselves around her wrists and ankles. Before she even had time to scream, more roots wrapped around her waist. A single squeeze forced all the air from her lungs, and left her desperately gasping for air. No matter how hard she tried, however, she couldn't get her lungs to work. \n\nAh, she thought to herself, as darkness started to encroach upon her vision. I really am going to die here... \n\n\"Human...\" the wolf shook her head, slowly. \"You were very stubborn. I do not think I will forget you, any time soon.\" \n\nThe wolf still hadn't moved from her position on the porch. Even as the air was being squeezed from Red, the monster sat calmly and watched the proceedings. \n\nIt was almost enough to make Red laugh. If she had air to breathe, she might have. She'd come here ready to treat her very life as a bargaining chip. She'd been willing to bet it all on the idea that the wolf might not really want to kill her. But now she was going to die, and the wolf hadn't even had to get her hands dirty. \n\n\"Human. If you have any last words, I will listen to them. Assuming you can still speak.\" \n\nSpeak? There was no breath left for that. No time, either. Red was barely hanging on. The world had been reduced to mere pinpricks of light, and everything else had been swallowed by the darkness. \n\nRed wondered if her body would stay in this form, even if she died. She hoped so. She wanted to at least leave a pretty corpse behind. Not that she'd look that pretty, after being crushed by roots. But at least she'd be a woman. \n\nAt least there'd be no denying that. \n\n\"...Human. That look of resignation in your eyes,... Remember that feeling. Next time, you really will die.\" \n\nThe pressure disappeared from Red's chest. Air rushed back into her lungs. Coughing, and crying from the pain, Red took one painful breath, and then another. \n\nShe didn't understand what had happened. Strewn all about her were pieces of root, torn asunder. Standing in front of her was the wolf. \n\n\"Grandma will be annoyed at me for hurting one of her plants... She might add another six months to my work for this...\" \n\n\"...Why?\" Red choked out, hardly able to believe what her eyes were telling her: that the wolf had saved her. \"I thought you were going to let me die?\" \n\nThe wolf shrugged. \"Humans are cruel creatures. They drove Grandma away with their selfishness. Even now they try to sneak through her defenses, and then claim they deserve favors for bothering a woman who wants to be left alone. There is nothing more despicable to me than a human being.\" \n\n\"Then why...?\" Red asked, again. \n\n\"...I had a thought, when I saw you being squeezed to death. I thought that if I let you die here, I really would be the monster everyone claims I am.\" \n\nRed stared at the wolf in silence, unsure what to make of this. Eventually, she pushed herself up to her feet, and walked back toward the clearing's edge. \n\n\"I'll be back tomorrow,\" Red promised, turning her head to get one last look at the wolf. \n\n\"You really will die next time, you know.\" \n\n\"...No I won't.\" \n\nWhether or not the wolf heard those whispered words, she made no response. \n\n*** \n\n\"...Ya want to take dinner to Grandma's house tomorrow night?\" Anthony demanded. \n\n\"If you can't catch enough, it's fine,\" Red promised. \"I'll just bring my own share, in that case.\" \n\nAnthony did not respond immediately, electing instead to stare at Red. His gaze was hard, and the way he was staring at her made it seem like he intended to bore a hole straight through her. \n\n\"Ya...\" he started after a moment. \"Ya don't actually think that batty old woman's going to come out of her house just because ya offer her some food, do ya?\" \n\n\"That's not what it's for!\" Red protested. How much of an idiot did this man think she was? \n\nNevermind, for a moment, that her actual plan was even stupider. \n\n\"...I don't think you're stupid enough for this, but if ya tell me ya're trying to nurse a hurt monster back to health or somethin', ya should give up now. There's not a creature in these woods that wouldn't rip your throat out as soon as look at ya.\" \n\n \n\n\"I know that,\" Red promised, gaze dropping to the ground. \"It's not for a monster. It's for the wolf...\" \n\n\"Huh?\" Anthony's gaze hardened even further. \"What the hell are ya on about? That damn thing's the very definition of a monster! It's standing between ya and the witch, and ya wanna - what? Bring it dinner? Play nice? Ya think it's gonna just stand aside and invite ya in if ya show it a bit of kindness?\" \n\n\"...If it's too much trouble, then you don't need to bother,\" Red said, not lifting her gaze. Her hands were trembling, and she had to clutch at her skirt in order to maintain her composure. \"As I said, I can just bring her my own dinner.\" \n\n\"You're crazy,\" Anthony informed her, shaking his head. \"I mean, I'd get it if ya wanted to poison the damn thing, but ya really just wanna bring it dinner?\" \n\n\"Going forward blindly isn't getting me anywhere. I want to get to know my enemy. I want to know...\" Red bit her lip, not daring to speak her true intentions out loud. If she said she wanted to know this beast better, Anthony would only call her a fool. \"I want to know why she's standing in my way. If I can win her over to my side, I'll be able to get into Grandma's house without a problem.\" \n\n\"...Ya're crazy,\" Anthony repeated, shaking his head from side to side. \"And it's a waste of good food. But whatever. I'll set up a couple extra traps, and we'll see what I can get.\" \n\n\"Really!?\" Red's gaze jumped up to meet Anthony's, and a big smile stretched across her lips. \n\n\"Yeah. Not that I believe in ya, or any such shit; but ya paid me for a week, so ya can use night three however ya damn well please. Not like ya've been making any progress, anyway.\" \n\n\"Thank you.\" Red couldn't keep the smile from her lips. Even knowing that Anthony looked down on her, she couldn't stop the feeling of warmth and excitement that was spreading through her. \n\nShe wondered what was making her so giddy. It wasn't like she'd gotten any closer to her goal. Just as Anthony had implied, this was probably nothing but a waste of time. \n\nStill, she had to try. It was the closest thing to a plan she had left. \n\n*** \n\nSitting on the porch, knees held tight against her chest, the wolf released a pent up sigh. She had given her report to Grandma. Including how she'd saved the girl, and destroyed the devouring root that Grandma planted there. \n\nGrandma hadn't given a response. She rarely did. Still, the wolf understood that she had done something wrong. She had prioritized her own desires over those of her employer, and destroyed something that Grandma herself had planted. She had no excuses. \n\nShe'd told the human it was because she didn't want to be a monster. That hadn't been a lie, but it also wasn't the full truth. Full honesty would have only disgusted the woman, however. The wolf had experienced it many times before. \n\nNobody wanted to hear \"I thought you looked cute\" from a monster. \n\n*** \n\nRed peeked from her tent. She'd spent the majority of the day asleep, unwilling to go to Grandma's house in her masculine form, and unable to meaningfully help Anthony with hunting or gathering in the dangerous woods. As such, it was a relief to see that the last few rays of the sun were in the midst of being swallowed up by night. Her change would soon begin. \n\nAs if triggered by the thought, a warmth blossomed in Red's chest. Ducking back into the tent, she pulled off the brown tunic she'd been wearing and revealed her broad backed figure. \n\nAs expected, the area around her nipples had started to swell. Even as she watched, little bumps shifted into small hills. Her breasts were modest, compared to the wolf woman's, not even large enough to fill a man's hands. That was fine, though, since they filled her palms perfectly when she was in femme form. \n\nBreasts finished, the warmth spread from her chest into the rest of her body. She could feel a tingling sensation as she shrank. Not only did her legs get smaller, and her arms more slender, but her shoulders shifted inward as she went from having a broad back to sporting a slender figure. Her body hair was disintegrating before her eyes, even as her black hair grew down past her shoulders. \n\nWhile Red's waist was narrowing, her hips were spreading, and her ass was expanding, forming extravagant curves. Her cheekbones shifted upwards, and her nose became a little smaller, as delicate features replaced the unfortunately rough look she wore by day. \n\nThe final shift occurred between her thighs. Her dick pulled inward, shrinking to a little nub, above the slit left behind when her balls retracted. Back home, this would have been the time to start touching herself. In the wilderness, it was instead time to put on new clothes. \n\nShe chose a green dress, today. It had short sleeves, and barely went down to the knees. It had a plunging neckline, too. It wasn't precisely the appropriate look for the cursed woods, but Red didn't care. She liked wearing clothes that made her feel feminine and pretty, and she'd be wearing her red cloak over it, regardless, so it wasn't as if Anthony or the wolf would even see her dress this time around. \n\nAfter slipping the cloak on, Red left her tent and moved toward the fire. Through some mix of luck and skill, Anthony had apparently come through: several meaty skewers had been laid out atop some broad leaves. \n\n\"Already ate my share,\" Anthony informed Red. \"The beast and ya can enjoy the rest between yourselves.\" \n\n\"Thank you.\" Despite the gruffness in Anthony's tone, Red gave him a bright and happy smile as she gathered up the skewers. \"We'll enjoy them to the fullest.\" \n\nAnthony only grunted in response, but that was fine. Red wasn't really listening, anyway. \n\nMaking her way back to the clearing's border, Red again pushed the branches out of her way and walked into the open area that surrounded Grandma's house. \n\n\"...Human. Do you know what the word 'masochist' means? I have only a vague understanding of the term, but I cannot help but think it applies.\" Saying such, the wolf rose from her crouch and began to casually walk down the steps from Grandma's porch. \n\n\"Don't be like that,\" Red protested, smiling. \"I brought you dinner this time.\" \n\n\"...Dinner...?\" the wolf asked, lifting a hand to scratch at her scalp. \"Is this an attempt at bribery? You must know I am not that easy to sway.\" \n\n\"It's not a bribe,\" Red promised. \"Or. Maybe it is. But not for getting past you. I was just hoping you could tell me a bit about yourself while we ate?\" \n\nRed's eyes were wide open; she didn't so much as blink. All the same, she could detect no more than a blur of motion, as the wolf traversed the distance between them in a single heartbeat. \n\n\"Why would you want to know a monster like me?\" the wolf asked, sticking her face right up against Red's. Their noses were practically touching, and Red could feel the wolf's hot breath as she spoke. Red couldn't help the image of sharp teeth that flashed through her mind, with the wolf so close. \n\nRed didn't step back, though. She couldn't explain it, but she felt as if stepping backward would be a mistake. As if it would create a gap between them that could never be bridged. \n\n\"I'm sorry for calling you a monster,\" Red apologized. \"I... Judged you by your appearance, and didn't give you a chance. You're just doing your job, right? And I bet you don't have a lot of time to eat on the job, either. So I thought maybe we could eat together, and talk.\" \n\n\"You really wish to talk?\" The wolf's gaze was locked on Red. Those yellow eyes seemed to be weighing not just Red's words, but her entire being. After a moment of this, however, the wolf took a step back. \"...You have until I finish eating.\" \n\n\"Great!\" Grinning, Red held out one of the skewers for the wolf. \n\nThe wolf took it, though not without caution: her fingers delicately avoided the meat, touching only the wood. Once she had it in her grasp, she did not immediately eat it but instead lifted it to her nose to take a cautious sniff. After that, she nipped at the very edge of a central piece of meat, tearing a tiny piece of it off to chew. She kept that in her mouth for several seconds, before swallowing. \n\n\"...It's not poisoned, if that's what you're checking for.\" Red couldn't keep the reproach from her voice. She knew the wolf had reason to be suspicious, but being regarded with such distrust still hurt. \n\n\"It would not do you any good if it was,\" the wolf informed Red. \"Even if I die, Grandma will not come out.\" She used her teeth to pull a large chunk of meat off the skewer, chewing noisily before swallowing. \n\n\"Why do you serve her, then?\" Red inquired. \"If there's so little love lost between you.\" \n\n\"Because I want something from her. And I am willing to work for it.\" \n\n\"You mean you want her to use her magic, for you?\" Red asked, heart skipping a beat. \"She's willing to do that? For work? I'd be willing to work for her, too if she'd help me.\" \n\n\"...You are weak, though,\" the wolf pointed out. \"Not very smart, either. I do not think you have anything to offer her.\" \n\n\"I'm not... not smart...\" Red never liked being looked down on. Usually it would make her angry, but that didn't quite match her current feelings. It was more like... She didn't want the wolf to have the wrong impression of her. \n\nThe wolf only gave Red a skeptical look, though, before shrugging and biting into her skewer again. \n\n\"...Right. Um. Next question: What's your name? I'm Red.\" \n\nThe wolf did not immediately respond, but rather chewed pensively for a few moments before swallowing. \"...Wolf.\" \n\n\"Did you... Just come up with that now?\" Red asked, trying to suppress a laugh. And Wolf had accused her of being dimwitted! \n\nTo Red's surprise, however, Wolf shook her head. \"If names are what our mothers call us, then I am Wolf. That is all she ever addressed me by. I just was not sure whether it qualified, or not.\" \n\n\"I... I see...\" Red frowned, trying to figure out how to frame her next question. \"Was your mother... not like you, then?\" \n\nWolf seemed a little surprised by the question, but nodded nevertheless. \"That is right,\" she agreed. \"She was human.\" \n\n\"Human?\" It was Red's turn to be surprised. \"But then you're...?\" \n\n\"Also human,\" the wolf agreed, biting off another piece of meat. \"Or half human, if Mother's drunken rambling is to be believed. She told me she was seduced by a forest spirit.\" \n\n\"Really? I've never heard of a forest spirit mating with a human.\" If the tales she'd heard were to be believed, forest spirits were kin to the gods themselves. They were few in number, but great in power, and they worked tirelessly to maintain the balance of nature. \n\nWolf gave what was, in Red's eyes, rapidly becoming her signature shrug. \"Don't know if it's true. Possible Mother just made one mad, and got cursed or some such. All I know is that her husband did not believe for a heartbeat I was his.\" \n\nRed stared at Wolf, as the latter removed the last of the meat from her skewer. Although Wolf had accused her of being dumb, she was smart enough to imagine what her life must have been like as the living proof of her mother's infidelity. \n\n\"I have finished eating,\" Wolf informed Red. Her face was unreadable, a blank mask that gave no insight into how she was feeling. \n\n\"Have another, then.\" Red offered the next skewer with a smile, hoping to elicit some flicker of emotion from her dinner companion. She was disappointed, however, as Wolf only gave a nod before starting to sniff and taste test the new treat. \n\n\"Are you going to do that with everything I give you, tonight?\" Red asked, exasperated. \n\n\"Yes,\" Wolf answered, bluntly. \"Unless you are willing to tell me which of them is poisoned?\" \n\n\"None of them!\" Red insisted. \"None of them are poisoned, Wolf. I'm not trying to get past you, tonight. I just want to get to know you better!\" \n\n\"...Why?\" Wolf asked, tilting her head to one side. \"What do you gain out of it?\" \n\n\"What makes you think I'm trying to gain anything?!\" Red demanded, unable to fully contain her anger. \"Did you ever consider that maybe I just want to get to know you better?\" \n\n\"No.\" Wolf took the topmost piece of meat off the skewer, chewed noisily, and swallowed. She ignored Red's glare. \"You are a human. Humans do not do things without a reason. Usually a selfish one.\" ",
        "\"...Well, maybe I was hoping that we could work something out, if I knew more about you. If I knew why you wanted Grandma's help, maybe I could help you, instead. Then we'd both have a chance at what we wanted.\" \n\n\"...You cannot help me,\" Wolf declared, shaking her head. \"And even if you could, I am only under contract for another six months. There is no reason for me to abandon my job now.\" \n\n\"Six months, huh?\" It was good to know that Wolf's services had an expiration date, but it didn't really do Red much good. She couldn't camp out for six months, and if Red returned home unsuccessful her father was likely to lock her up and throw away the key. It wasn't even that he was the overprotective sort; it was just that he didn't want the embarrassment of his dear heir's curse becoming public. \n\n\"...If you cannot wait six months, then I cannot help you,\" Wolf warned Red. \"I will not give up my pay for you.\" \n\n\"But why?\" Red wanted to know. \"What's so important to you that you'd be willing to work for Grandma, for so long? I heard you've been here for over five years...\" \n\n\"I have been,\" Wolf confirmed, taking another bite of her skewer and chewing noisily. Red waited for the other woman to add more, but Wolf followed the first bite up with a second. That was enough to tell Red that Wolf had no intention of answering the question. \n\n\"...I want Grandma's help so that I can stay in this body,\" Red explained, deciding to shift tactics. Wolf didn't respond verbally, but she did stop chewing her food to shoot Red a curious glance. Taking that as encouragement, Red continued. \n\n\"I was born in the wrong body. A... More masculine body, you could say. Taller, and hairier, and... just... Gross...\" \n\n\"You do not look tall, hairy, or gross,\" Wolf pointed out, returning to her skewer. \n\n\"Thank you,\" Red said, holding up a third skewer for Wolf. \"But it's only because of a curse...\" \n\n\"A curse?\" Wolf's eyes were on Red, even as she took the skewer. \n\n\"That's right... One I put on myself,\" Red admitted. \n\nWolf didn't respond, but her gaze stayed on Red, silently encouraging her to continue. \n\n\"I tried going to a witch, first,\" Red obligingly explained. \"But none of them were powerful enough to give me a new form. I got desperate - and since Father hadn't cut me off, yet, I had money to go with that desperation. I started paying for information and chasing down rumors. Eventually, my search led me to a certain wicked witch, who was known for her curses. The authorities got to her before I could, but I managed to bribe my way into her basement. That's where I found a curse that was meant to turn men into women.\" \n\n\"And you cast it on yourself? You must have been desperate.\" Despite the condemnation, Wolf's eyes seemed to convey a certain grudging admiration for Red's determination. Or at least, that's how Red chose to interpret the look Wolf was giving her. \n\n\"That's right,\" Red confirmed. \"But it didn't work quite how I wanted... It only gives me my proper body during the night. During the day, I revert back to how I used to be.\" \n\n\"...So you wish for Grandma to worsen your curse?\" \n\n\"That's right,\" Red agreed. \"That's why I'm here. I had to sneak out of my father's estate to do it, since he's so scared I'll embarrass him with my 'condition.' It took all the money I had left in my name, too, just getting here. That's why I can't come back in six months.\" \n\n\"That is a very sad story, human. But it does not change what I need to do.\" \n\nTurning her attention to the skewer, Wolf again repeated her poison tests before ripping off a chunk of meat. As if making up for the time she had spent listening to Red, Wolf devoured the entire skewer in just a few moments, her noisy chewing filling up the otherwise silent night. \n\nWhen Wolf was finished, Red offered up a fourth skewer. This was the second to last she had. If she wanted to eat tonight, she couldn't give up any more than this. \n\n\"What are you after?\" Red asked, again. \"What's so important to you that you'd trample over everyone else's dreams to get it?\" \n\n\"I am not trampling over anyone's dreams,\" Wolf argued, after sniffing the meat. \"I am simply protecting a woman who does not wish to be distrubed.\" \n\n\"But you disturbed her, didn't you? I don't see how you could have ended up working for her if you didn't.\" \n\n\"Yes,\" Wolf admitted. \"I broke through her defenses, bowed before her door, and begged for her help. It was disgraceful, but I was willing to do it for the sake of my dream.\" \n\n\"Then-\" \n\n\"But I was strong,\" Wolf continued, ignoring Red's attempt to speak. \"And I had something to offer. You are not strong enough to defeat me. And you have nothing to offer. So even if it makes me a hypocrite, I will defend Grandma from you.\" \n\n\"But why?\" Red demanded, yet again. \"I don't understand. What's worth so much to you?\" \n\n\"...Human. You should leave, now. Before I finish this skewer.\" \n\n\"My name is Red. And I'm not leaving until you tell me,\" Red insisted. \"Even if you throw me out, I'll just march right back here. Again and again. Until I know what's so much more important than me wanting to be myself.\" \n\n\"Human. Do you really wish to get to know me? Or do you simply think this is your only chance at getting to Grandma's?\" \n\n\"My name is Red. And maybe I just want to know more about the woman who saved my life!\" \n\nWolf was silent, for a moment. She did not take another bite of her skewer, despite it still having half its meat left. Instead, she simply stared into the distance, as if lost in thought. \n\nEventually, Wolf shifted her gaze to meet Red's, causing Red to gasp faintly in surprise. Although Wolf's eyes were dry, they somehow seemed filled with tears. Her gaze was so sad, so mournful, that Red almost wanted to throw her arms around the other woman. \n\n\"You want to be yourself. I cannot say I understand that. Because the thing I want more than anything else in the world is to be someone else.\" \n\n\"What...?\" Red swallowed, trying to clear the lump in her throat. \"What do you mean?\" \n\nWolf shrugged. Though her eyes were still on Red, her gaze somehow felt like it was on something incredibly distant. \n\n\"Wolf... Do you... Want to become human? Fully, I mean?\" \n\n\"...That would be foolish, no? I would be almost as weak as you. I would no longer have claws to rend, or teeth to tear. I might even become selfish and cruel, like the rest of our species.\" \n\nDespite the harsh words, a small smile had slipped across Wolf's features. \"It would be the height of folly, I think. My life would likely end soon after. But still... Is it wrong that I wish, just once before I die, to feel like I truly belong?\" \n\n\"Wolf...\" Red reached out toward Wolf, before letting her hand drop. She didn't know what to say. She thought she understood where Wolf was coming from, but... She wasn't ready to give up her own dreams, either. Even knowing that she would lose any contest held with Wolf as her opponent, she couldn't give up. \n\nEventually, she held out the fourth skewer. Wolf took it without a word. \n\n\"I'll be back tomorrow,\" Red promised, turning to head back toward camp. \"I might not have food next time, but. I hope we can talk, anyway.\" \n\n\"...You are a strange human. Red.\" \n\nRed did not respond, or even turn around. She simply walked toward the clearing edge. \n\n*** \n\nWolf watched as Red walked away from her, back toward the treeline. Part of her felt like she should call out, though she wasn't entirely sure what to say. \n\nRed was her enemy, and always would be. Even if Wolf's wish was granted, there was no way that Red would forgive someone who had stood in her way. Perhaps in another life they could have gotten along, but in this one it was simply impossible. \n\nRed was a human; weak, fragile and selfish by nature. \n\nWolf was a monster. Whether Red saw her as one or not was irrelevant. It was simply a truth that Wolf had long since been forced to accept. \n\nWhat human could befriend a monster? What human would wish to? Surely even someone as stupid as Red wouldn't go that far. \n\nHer kindness was most likely a whim. It would evaporate as quickly as the morning dew. Wolf knew that. She did. That was why she had to harden her heart, before Red put a knife in it. It was necessary. If Wolf even for a moment started to think that she couldn't kill Red, couldn't hurt Red, couldn't stop Red... \n\nMercy was a gift from the strong to the weak. If Red became strong, or Wolf became weak, then there would be no more room for it. It was that simple. \n\nIt had to be. \n\n*** \n\nOnce again, night fell upon the campsite. As before, Red had asked Anthony to secure extra food. He had apparently been successful, as three large fish were roasting on spikes above the flames. \n\n\"Thank you for the extra food,\" Red said, grabbing a hold of two servings. \"I know it can't be easy to hunt out here.\" \n\n\"You're damn right it isn't,\" Anthony groused, glaring at her. \"Ya seriously havin' me do all this for a damn monster?\" \n\n\"Wolf isn't a monster,\" Red protested. \"I... I thought she was, too, but she's just a person.\" \n\n\"Person, huh?\" Anthony scoffed. \"Ya sure that curse isn't affecting yar brain? Ya're sounding pretty damn soft for a man, right now.\" \n\n\"My brain is fine,\" Red informed him, cheeks flushing faintly. \"I don't think there's anything wrong with having a little empathy.\" \n\n\"Empathy for your enemies is only gonna get in the way, lady. If ya want my advice, ya should take advantage of that meal to get close and stick a knife in her throat.\" \n\n\"I would never,\" Red protested, horrified. \"Wolf trusts me!\" \n\n\"Trust, huh?\" Anthony smirked. \"Tell me, somethin': She know who she's trusting? Bet she only gets along with ya 'cause she's only seen ya in this weak-ass form. Wonder if she'd be so kind if ya came there as your real self...\" \n\n\"Wolf knows about my curse,\" Red replied. \"And she doesn't judge me for it. Unlike you, apparently.\" \n\n\"Hey, I never said I was judging ya. But I never expected ya to get all buddy buddy with that damn thing.\" \n\n\"Wolf is not a thing,\" protested, vehemently. \"She saved my life, the other day!\" \n\n\"That so?\" Anthony asked, the corner of his lips tugging upward. \"She sure didn't do that for my last client. Guess that means the rumors about her might be true.\" \n\n\"...What rumors?\" Red asked. She wanted to ask about the client, too, but she was a little afraid to do so. Had Wolf really allowed people to die in the past? \n\n\"That wolf ya like is a real killer,\" Anthony warned Red. \"Half the people who go into that cottage don't come back again. But people say that women always make it back. That started this little rumor: that the wolf's one of those people. The sorta woman that likes other women. Not that ya could even call that thing a woman in the first place.\" \n\n\"You're wrong,\" Red protested, fingers clenching tighter about the speared fish. \n\n\"What? Don't believe me?\" Anthony laughed. \"Don't wanna think your friend's that twisted? Or maybe it's the killin' you object to?\" \n\n\"That's not what I'm talking about!\" Red yelled, pointing one of her speared fish at Anthony. \"You can say whatever you want about Wolf, but don't ever tell me she isn't a woman. That's the least bit of respect you should give her.\" Saying so, Red spun about and headed toward the clearing. \n\nDespite the conviction in her voice, earlier, her heart was pounding and her palms were sweating. Rather than letting people die, had Wolf killed people herself? Had Red only been spared because she was a woman? Because Wolf liked women? There was only one way for Red to find her answers: she'd have to ask Wolf. \n\nShoving aside the branches which bordered the clearing, Red walked into the grassy space that surrounded Grandma's house. As on the second and third nights, Wolf was sitting on the porch. \n\nWhen she saw Red, Wolf stood in one smooth motion. There was no smile on her lips, but her silver tail swung back and forth a few times. Was it a sign of agitation? Or was Wolf happy to see her? \n\n\"You brought food again.\" Wolf's tone sounded vaguely accusatory. \"Does that mean you want more information on me?\" \n\n\"That's right,\" Red agreed. \"I brought something big, today, so please answer questions until I'm satisfied.\" \n\n\"I will answer three,,\" Wolf countered, walking up to Red and holding out a hand for one of the skewers. \n\n\"Five,\" Red countered. \"Answer five questions for me and dinner is yours.\" \n\n\"You...\" Wolf glared at Red. \"Are you not being greedy? It is not as if I cannot secure my own dinner...\" \n\n\"But you don't want to leave Grandma's house when I'm so close, right?\" Red pointed out. \"That must make it hard to get food.\" \n\n\"Grandma provides food from her garden under such circumstances.\" Despite Wolf's words, her eyes were locked on the fish and her tail was swinging back and forth. \n\n\"I'm betting you want something more filling than vegetables, though. It must be tough, huh?\" Red teased, holding out one of the fish. \"But for the low price of five questions, this fish dinner can be yours.\" \n\n\"I could simply take it from you,\" Wolf remarked, making no move toward the fish. \n\n\"Then why haven't you?\" Red asked. \"That's my first question. Why are you letting me get away with teasing you like this?\" \n\nWolf stared at Red for a moment, and then reached out to take the fish from her. Sniffing the length of it, and tearing off a tiny piece, she silently went through the same poison testing process as she had the night before. When she was satisfied, she gave a small nod and took a large bite of the fish. \n\n\"Well?\" Red asked. \n\n\"...It is good...\" Wolf admitted, swallowing her first bite and taking another. \n\n\"That's not what I mean! I want to know the answer to my question: why are you listening to my questions, when you could just take the food from me by force?\" \n\nWolf was silent for a moment, simply chewing her food. When she answered, the words surprised Red. \"I do not know.\" \n\n\"You don't know?\" Red asked. \"Ah! Clarifying previous questions doesn't count against your total, by the way.\" \n\nThe wolf glared at Red in response to this sudden addition to their agreement, but did not protest. Instead, she gave a small shrug. \n\n\"I really do not know,\" Wolf promised. \"I know that I do not wish to bully the weak by taking their food from them. But I do not know why I am answering your questions. The only answer I can give is that it makes me feel... strange inside. Having someone ask questions about me, and take an interest in me, makes my chest feel warm.\" \n\n\"That's called happiness,\" Red informed Wolf, smiling softly. \"You're happy someone is taking an interest in you.\" \n\n\"I am... Happy?\" Wolf sounded surprised. \"I thought that I had felt happiness before, but I have never felt warmth like this. Does happiness always make your heart beat fast?\" \n\n\"Your heart?\" Red asked, surprised. \n\n\"Yes. When we are close to each other like this. When you ask me questions like this. When you feed me food like this. I feel a warmth in my chest, and a sudden beating in my heart. I am unfamiliar with it.\" \n\n\"I...\" Red's heart was the one pounding, now. The wolf's description made it sound as if she liked Red, romantically. Had Anthony's rumors been right? About the Wolf liking women? It wasn't as if Red herself was much different, but she'd thought it was just a side effect of being raised as a man. She hadn't ever thought she'd find another woman who felt the same way. \n\n\"Wolf...\" Red hesitated on her next question. She wanted to ask more about Wolf's feelings, but there was something else she needed to know, first. \"Wolf. Have you ever killed anyone, before?\" \n\n\"Yes.\" \n\nThe bluntness of Wolf's response surprised Red, and she took an involuntary step backward from Wolf. \n\n\"...For some reason, my chest hurts when you look at me like that,\" Wolf remarked, turning her attention from the fish to Red. \"It is not as if I go around murdering people. I only kill those who try to kill me.\" \n\n\"O-Oh...\" Relief washed over Red. So it wasn't just a matter of coming to Grandma's house. Wolf only killed in self defense. \n\n\"There were also those who fell to Grandma's other defenses,\" Wolf added, nonchalantly. \"I did not kill them myself; but I sometimes worry that it is my fault, that I wasn't able to stop them before it got that far...\" \n\n\"You mean like the roots?\" Red asked. \"You let those things kill people?\" \n\nWolf shrugged. \"The devouring root was planted by Grandma, as part of her home's defense. Since it's my own inadequacy that allows people to reach so far, I have always felt that I had no right to interfere.\" \n\n\"Then... Then why did you save me?\" Red wanted to know. \"Why me? You knew me even less, then, than you do now.\" \n\nWolf was silent, tearing off another piece of fish with her teeth. When she finished, she took another bite, and the silence stretched awkwardly onward. \n\n\"Wolf... Do you like women?\" Red asked. \"Do you like me?\" \n\n\"..It is disgusting, is it not?\" Wolf's voice came out as a soft, sad, whisper. \n\n\"Of course not!\" Red denied, shaking her head. \"Women should be free to love women. I actually thought I was the only one, so knowing that we're the same is-\" \n\n\"We are not the same,\" Wolf interrupted, her voice now cold as a winter night. \"I am a monster. You are a human. I am sure plenty of women would be interested in you, but no one will feel anything but disgust if they found out a monster like me wished to mate with them.\" \n\n\"Wolf... You don't get to decide what I feel about this!\" Red glared at Wolf, placing a hand on her chest. \"I decide for myself who I find attractive! And I think you're-\" \n\nOnce again, Red's eyes failed to capture Wolf's movements. By the time her brain registered the impact of another body against her own, Red was already pinned to the floor, wrists pressed into the earth by Wolf's iron grip. Wolf's half eaten fish had been discarded on the grass, and Red's uneaten dinner was laying a few feet away. \n\n\"I-if you're trying to scare me,\" Red started, only to pause. \"Wh-why is your face so close?\" \n\n\"Is it a problem?\" Wolf asked. \n\n\"Of course it's a problem!\" Red complained, squirming in Wolf's tight grasp. Wolf's face was barely an inch from her own, and Wolf's every word caused hot breath to blow across Red's lips. Wolf's yellow eyes were all that Red could see, and it was making Red's heart beat faster and faster. \n\n\"As I thought... The urges that run through me really are terrible, after all...\" Releasing Red's hands, Wolf started to stand. \n\nRed's hands shot up, wrapping around Wolf's neck to stop her. \n\n\"...What are you doing?\" Wolf asked, voice quiet. \"If you are trying to choke me, that is not at all the proper method.\" \n\n\"N-no, you idiot! I just don't want you to... I... I don't want you to think that your urges are terrible! I don't want to see that hurt look in your eyes. I want you to know that it's okay if you find me attractive.\" \n\n\"...Red...\" Wolf's voice was pained, as she reached up to grab hold of one of the arms that had wrapped themselves around her. \"If you keep saying such things, while touching me, I will not be able to resist. I might do something you will hate me for. I do not want that. For some reason, the thought of it makes my heart hurt.\" \n\n'That feeling... Everything you've described so far... I was wrong. It's not just happiness you're experiencing. It's love.\" \n\n\"Love...?\" Wolf asked. \"Between a monster and a human?\" \n\n\"Between a woman and a woman,\" Red corrected, leaning forward to press her lips against Wolf's. \n\nWolf's lips were soft as pillows. They were also stiff as a statue, refusing to move at all beneath Red's kiss. Even when Red parted, Wolf just stared down at her with a frozen expression on her face. \n\n\"Was I wrong?\" Red asked. \"Did you not enjoy it? I'm Sor-\" ",
        "Red was cut off by the pressing of lips against hers. Soft flesh, and a rough kiss that pushed harshly against her. A tongue probed for entrance into her mouth, and she allowed it, the long red muscle entering inside her. \n\nThe kiss seemed to span an eternity. It had only been a second or two since the start, yet the feeling of these lips against her own was so natural that Red couldn't imagine a time without them, or a time where they'd be gone. Her goal, her reason for coming here, fell by the wayside. All that mattered was that these lips she'd found would stay pressed against her own. \n\nAfter several minutes, however, Wolf pulled away. Red was left gasping for breath beneath her, while Wolf didn't even look winded. She didn't look satiated, either. There was a hunger in those yellow eyes that Red had never seen in another woman, before. She felt that if she allowed it, Wolf would devour her whole. \n\n\"Wolf...\" Red whispered, voice soft. She wasn't sure what to say. She hadn't expected this at all, tonight. She hadn't even known what she was doing, when she kissed Wolf. She'd only wanted the girl to know that her feelings were natural, and fine. \n\nYet somehow that kiss had sent tremors through Red's entire world. \n\n\"Release me,\" Wolf demanded, closing her eyes. Her words were gruff. \n\n\"...I don't want to...\" Red admitted. She felt that if she let Wolf go, the woman would pull away again. There'd be distance between them, once more, and they might never be able to meet this way again. \n\n\"Let me go,\" Wolf insisted. \"Before I do something I shouldn't...\" \n\n\"I want you to do it, though,\" Red told Wolf, cheeks red as her cloak. \"That... That stuff you're thinking about doing... I want it, too.\" \n\nA low growl escaped Wolf's throat, and her clawed fingers dug into the earth on either side of Red's chest. \"Do not play with me, Red! The hunger I feel... The desires I have, to make you mine... There's no way you feel the same!\" \n\n\"Maybe it's not exactly the same,\" Red admitted, tightening her arms about Wolf's neck. \"I've never... been with anyone, before. That way. Not in this body, at least. But if it's you... I wouldn't mind giving you my first time, Wolf.\" \n\n\"Why!?\" Wolf demanded. \"Why go so far for me? If you don't have this same hunger, then why are you willing to let me touch you?\" \n\n\"I don't know,\" Red confessed. \"Maybe it's because you accepted me? You're the first person I've ever told about my real goals; about wanting the curse to be permanent. Knowing that you accept me, that you want me... It makes me really happy. I want you to feel that happiness, too.\" \n\n\"...There must be something wrong with your head, Red,\" Wolf muttered under her breath. \"There will not be any going back if you regret this later, you realize.\" \n\nRed's response was a kiss to Wolf's lips. Her tongue pressed against Wolf's teeth, seeking an invitation to tangle with its counterpart. When Wolf opened her mouth, to let Red in, Red's tongue slid playfully across the tips of sharp teeth before sliding up against Wolf's own slick muscle. \n\nA shudder traveled through Wolf's body, and one hand was lifted off the ground. Strong fingers gripped hold of Red's black hair, and a painfully firm tug forced Red to separate from Wolf. Despite that, Red did not release Wolf's neck. When she met Wolf's gaze, the look in Red's eyes was almost smug. \n\nAnother growl escaped Wolf's lips as she pulled Red's head to the side and lowered lips to her would-be lover's throat. As Wolf pressed her mouth against Red's neck, Red could not help but be ultra aware of her own pulse and the blood pumping beneath Wolf's lips. Those sharp teeth could end her life here, with but a single bite. Yet Red felt no fear, even when those very same teeth nipped at her. Indeed, Wolf was most careful not to penetrate the skin, only scraping along the surface, before pressing a kiss against the abraded flesh. \n\n\"I am going to undress you now,\" Wolf whispered into Red's ear, parting from Red and reaching up to grab one of the arms that had been wrapped around her own neck. Gently extricating herself from Red's grip, she sat upright while still straddling Red. \n\n \n\nRed said nothing, as Wolf pushed the cloak off her shoulders, and tugged it from her form. She made not a single comment when Wolf's fingers clutched at the fabric of the green dress Red was wearing, and tore it from neckline to hem. All Red did was look into Wolf's eyes and smile, as her body was laid bare. \n\nUnbothered by the silence, Wolf leaned down to press her lips against one of Red's nipples, and began to lightly suck on the tip of Red's breasts. The silence was broken in an instant, thanks to this, with Red's lips opening to release a soft moan. \n\nIt was the first involuntary sound of the night, and a blush spread across Red's cheeks at having been its source. At the same time Wolf parted, lips tugging into a self-satisfied grin. \"You make cute noises, Red.\" \n\n\"I... I never did that, when I... In my other form...\" Red admitted, embarrassed. \"I didn't know I could make noises like that...\" She hadn't known she could feel like this, either. Sex in the past had always been more focused on her partner's body than her own; when she took care of her own needs it was quick and dirty, done to satisfy the urge and nothing more. Perhaps that was why she had never felt such a heat inside herself, or the matching pressure that was building up inside her core. \n\n\"Shall we discover what other noises you can make, then, Red?\" Wolf teased, this time pressing her lips against the taut flesh between her lover's breasts. \n\n\"Ah!\" A sharp intake of breath from Red was followed by a little whimper as Wolf kissed and then nipped at her flesh. Skin was sucked on, and licked, teased and ever so lightly bitten. A flurry of motions, each tiny and effortless on Wolf's part, brought forth sound after sound from Red's lips. \n\nAll the while, the heat and the pressure kept building inside of Red. She felt like a pot that had been heated to the point of boiling and then heated up some more. Still, Wolf continued to suck and play, first with one breast, and then with the other, until Red felt as if she could hardly take any more. \n\nThat was when Wolf's hand came into play. She roughly squeezed at the tender flesh of one breast, rough fingers digging into but not penetrating the skin. At the same time, she would kiss the other one, alternating between sucking on the nipple and lashing it with her tongue. \n\nAll the while, the pressure and heat within Red continued to grow. Red could tell that she was close to something but she couldn't tell what. She was a little scared to find out. So scared that she instinctively resisted the sensation, desperately trying to delay the moment that the heat and pressure inside her would boil over and spill free. The sensations built up more and more, though, with each tender lick, soft kiss and rough squeeze. Eventually it was all too much. \n\nRed's body convulsed, as waves of pleasure washed over her. She could not think, she could not breathe. She was screaming, but she could not hear it. The only sound she was aware of was the thudding of her own heartbeat, pounding in her ears. The world went black, and when Red came back to herself she was drenched in sweat and out of breath, panting heavily. \n\nWolf's eyes were no longer staring down at her. For a moment, she thought her lover had fled somewhere. Before she could call out for Wolf, however, she became aware of her partner's presence. Wolf hadn't fled; she had only shifted positions. \n\nHer hands were now on Red's legs. Her head was above Red's thighs. Her lips were pulled into a smile, and when her eyes met Red's, the expression on her face shifted into a smug smirk. \n\nIt was then that Red realized just what Wolf was about to do. \n\nRed's breath caught in her throat as she watched Wolf lower lips to her slit and then lick the outer folds. A soft moan escaped from her when Wolf's finger shifted up her thigh, teasing her clitoris from its hood. She was utterly aware of the claw on Wolf's thumb, which never quite came into contact with Red's sensitive nub but instead teased the flesh right above it. \n\nAgain, the pressure and warmth began to build inside of Red. She let out involuntary whimpers and moans, one after the other, as Wolf's tongue slid inside her and teased up and down her pussy. Lips sealed themselves against her thigh, and sucked, while teeth ever so gently nipped at her sensitive skin. \n\nThis time the heat and pressure built up quicker than before. Red didn't resist. Screaming, convulsing, and clutching at the earth, she came for the second time that night. \n\n\"No more,\" she whimpered, once she was in control of her body again. \"Please. You'll break me...\" \n\n\"You are weak, Red,\" Wolf informed her, a smug smile on her lips. \"I could handle much more than this.\" \n\n\"Is that so?\" Red asked, fighting against weariness to prop herself up on one elbow. \"Maybe I should test that.\" \n\n\"Are you sure you have enough energy, my weak little mate? I would not wish for you to push yourself too hard.\" \n\n\"Is that a challenge?\" Red asked, raising an eyebrow. \"Because if it is, I'm going to want a reward when I win.\" \n\n\"I do not think your body can handle the sort of reward I would like to give,\" Wolf warned, but there was a wary look in her eyes. \n\n\"That's not the reward I want,\" Red informed her, a smile coming to her lips. She met the wariness in Wolf's eyes with an open and honest smile. \"I promise I won't ask for anything bad, so do you think you can hear me out when I succeed?\" \n\n\"You are very confident, my mate,\" Wolf noted. \"...Very well. I will hear you out. Assuming you can make me cum at least once, that is.\" Wolf stood as she spoke, pulling the tunic she always wore over her head and tossing it to the side, and then pushing down her trousers to reveal wide hips and muscled thighs. The silver hair that adorned her head was also present above her pussy, and the sight of Wolf's exposed flesh caused Red to lick her lips. \n\n\"Just once?\" Red laughed. \"That's probably all I can manage, to be honest... But I'm not going to give up until I do at least that much.\" \n\nSaying so, she sat up. At the same time, Wolf shifted to lay down on the ground, her breasts exposed to the air and her nipples pointing straight up toward the sky. Her silver hair was fanned out beneath her, catching and reflecting the light of the moon, while her bushy tail was laid out flat against the ground, between her legs. \n\nMoving into position above Wolf, Red lowered herself onto her lover's body and pressed her lips into the space between Wolf's large breasts. They were large, large enough to bury her face entirely between them, and when she did so she found that she was surrounded by Wolf's scent. Wolf smelled mostly of the forest, of crisp fresh air and pine trees, but there was also a faint whiff of sweat. Did that mean Wolf was also working hard, tonight? The thought brought another smile to Red's lips. \n\nKissing the side of one breast, Red moved her left hand to clutch at the other tit. Rather than roughly squeezing, as Wolf had done, Red chose to only lightly grip the flesh. While kissing one breast, she let her thumb brush against the nipple of the other and moved the digit in slow circles to stiffen the peak. She then pinched the nipple lightly between her forefinger and thumb, before lifting her mouth to kiss and suck at the other nipple. \n\nRed's efforts were rewarded with surprisingly soft noises: little whimpers and gentle moans. She could tell that Wolf was enjoying herself, but she knew that this alone would not win her an orgasm. If she wanted Wolf to cum, she needed to be fully on the offensive. \n\nThinking thus, Red put her right hand into play and reached between Wolf's thighs. Red felt Wolf stiffen in surprise as Red's fingers cupped her lover's pussy. Red could feel fur beneath her fingers as she worked her way between tail and flesh. She could also feel the coarse silver hair above Wolf's pussy, under her thumb. \n\nKissing one of Wolf's nipples, again, Red again pinched at the other teat. When Wolf let out a little whimper in response, Red took the opportunity to slide a finger inside of Wolf. \n\nIt wasn't as easy as Red had expected. Despite it only being a single finger, the passage was surprisingly tight. The way the muscles squeezed against her flesh made it difficult to work her way in and just as hard to pull out. Still, Red chose to work her way deeper into the channel, firmly pushing onward at a slow but steady pace. She pulled out at the same rate, withdrawing her finger most of the way before pushing it in again. \n\nAs Red kissed and licked one nipple, and pinched and tugged the other, Red worked to get Wolf's pussy used to the finger. The area was warm and slick, and she was able to make steady progress in loosening Wolf's grip on her. Eventually, she was able to easily slide the finger in and out again, pumping steadily inside. \n\nThen Red pressed in a second digit. Wolf, caught off guard, let out a little noise of pleasure as her pussy was further filled. Once more, Red began to work at Wolf, teaching her partner to accept this intrusion as she had the last. At the same time, her thumb began to work at the clitoris, teasing it from its hood and gently rubbing against it. \n\nKissing and teasing the breasts, playing with the clit, and pumping in and out of Red's slit. This trifecta of techniques, mastered by a woman who'd always been more interested in pleasing her partners than receiving pleasure herself, soon caused Wolf's body to convulse. It was not a scream that escaped her lips, however, but a howl that seemed to rend the very night in two. \n\nIt brought a smug smile to Red's lips. \n\n\"You are... Better than I thought you'd be,\" Wolf admitted. She was panting, faintly, showing that even she could run out of breath. \n\n\"So that means you'll listen to my request, right?\" Red asked, grinning. \n\n\"I will not let you see Grandma' Wolf warned. \"Anything else within my power is yours, though.\" \n\n\"Then will you let me move in with you?\" Red asked. \n\nWolf blinked. \"...I do not live with Grandma, if that is what you think. Moving in with me will not allow you to see her.\" \n\n\"It's not that,\" Red promised. \"I don't care if you live in a whole in the ground.\" \n\n\"It is a burrow, actually,\" Wolf admitted. \"I made it myself, on the other side of the clearing.\" \n\n\"I don't care,\" Red repeated. \"I just want to live with you.\" \n\n\"Why?\" Wolf asked. \"Do you really wish to become my mate?\" \n\n\"That too... But there's another reason, as well,\" Red admitted. \"I can't get past you; I know that, now. I wouldn't if I could, since it would mean you losing your reward. But if I wait out the six months with you, I can go see Grandma after you become human. I can work for her, like you did - or at least try to. Then we can both get our wishes granted.\" \n\n\"...You truly wish to stay with me?\" Wolf asked. \"I will not let you stay for free, you know. I will ask you to mate with me many more times. And I will make you cook for me.\" \n\n\"My guide's been doing the cooking, so far, but I'm willing to learn if it means staying with you. I don't mind mating with you, either. Actually, I think I'd be coming out ahead with that deal... Are you sure you'd be willing, though? If we're together, you'll see me in my masculine form as well as my feminine one.\" \n\nWolf stared at Red, and her eyes seemed to be looking into Red's soul. Whatever Wolf saw, it brought a small smile to her lips. \"You are a very strange human, Red. But if you are willing to mate with me, I do not mind you staying near me.\" \n\nRed grinned. \"Then I'll go back to camp, tonight, and come meet you in the morning. I'll look a bit different, but-\" \n\n\"You will smell the same,\" Wolf informed her. \"I will not fail to recognize you.\" \n\n\"Then I'll see you tomorrow,\" Red promised, standing up. She moved over to her cloak, slipping it back on to cover herself. It would be a bit embarrassing, going back to camp like this, but as long as she kept the cloak on it would be fine. \n\n\"Tomorrow!\" she repeated, grinning at the bewildered looking Wolf and then practically skipping toward the clearing's edge. She paused only to make sure the cloak was covering her entirely, before pushing away the branches that separated her from the rest of the forest. \n\n\"Anthony!\" she called out, when she reached camp. \"I'm going to bed, right now, but we need to talk in the morning. There's been a change of plans.\" \n\n\"I heard.\" Anthony's voice was low, and gruff, and to Red's surprise it came from deeper in the woods rather than from Anthony's tent. \n\n\"Anthony?\" Red asked, turning around in time to see her guide stepping out of the trees. She must have walked right past him on the way back from the clearing. \n\n\"I thought ya were gettin' pretty close to that monster, but to think ya'd actually fuck the damn thing...\" Anthony shook his head, smiling as Red's cheeks flushed. \"Nasty to watch, that. But thanks to listening in, I heard something good... about how the Wolf's expecting a man, tomorrow.\" \n\n\"I...\" Red's mouth had gone very dry. The nasty glint in Anthony's eyes scared her. \"You... She knows my scent.\" \n\n\"So all I gotta do is smell like ya, right?\" Anthony asked, reaching out to pluck at the fabric of Red's cloak. \"If only I had something that smelled like ya handy...\" \n\nRed took a step backward, only to stumble over a tree branch. She landed on her rear. \n\nAnthony stepped forward, pulling his elbow back and then punching straight for Red's eye. \n\nFor the third time that night, Red's world went black. \n\n*** \n\nWhen Red came too, she was back inside her tent. There was something soft inside her mouth; it tasted like cloth. She tried to spit it out, but it refused to budge, even when she pressed her tongue up against it. It seemed as if it had been tied in place. \n\nRed tried to move her hands, in order to remove the offending item, only to realize that her hands had been tied behind her back. Her ankles, too, were bound together. \n\n\"Anthony!?\" she tried to scream out, but the sounds she made were as muffled as they were unintelligible. \n\nRed lost track of how long she stayed like that. The darkness outside her tent remained consistent, so she didn't think it was too long, in reality, but it felt like an eternity inside her head. \n\nEventually, Anthony pushed his way into the tent. He stood as tall as ever, and wore his usual outfit: a brown tunic, a leather vest, and a dark pair of trousers. Atop all this, however, he was now wearing Red's cloak. \n\n\"Dawn's going to come in a few minutes,\" he told her. \"Figured I'd take ya to your viewing spot while you're still light enough to carry.\" \n\nViewing spot? Red wanted to ask what he meant, but so long as the gag remained in her mouth she had no way of doing so. Perhaps he saw the curiosity in her eyes, though. After staring at her for a moment a dark chuckle slipped from his lips. \n\n\"Yeah. Ya heard me right, Red. Ya're going to have a front row seat when I kill that bitch.\" \n\nKill? Red's heart started pumping, loudly. She'd known, to some extent, what Anthony was planning. Actually hearing it out loud was different, though. It sent a chill down Red's spine and made her stomach feel like it was twisted up inside. \n\n\"I'm doing ya a favor, Red. Both of us. With her gone, we can get into Granny's place. Ya'll be a man all the time, and I'll be rich. Ya can find yarself a wife and forget all about yar monster fucking days.\" \n\nRed couldn't speak, so she simply stared at Anthony with horror. \n\nAnthony let out another chuckle. Then, without another word, he leaned forward to wrap his arms about Red, and flung her over his shoulder. \n\nRed considered squirming, but did not. It wasn't that she was afraid of punishment. It was just that she wanted to go where he was taking her; closer to Wolf. If she had even a chance of warning Wolf, she needed to be nearby. Close enough that Wolf might be able to smell her. ",
        "Cooperating allowed Anthony to make good time and he took Red down the same path that she herself always used. When he reached the edge of the clearing. he dumped her carelessly on the ground, beyond the circle of trees that surrounded the clearing. There was a hole there that hadn't been there before, along with a shovel and a saw. Had Anthony dug a pit during the night? What was it for? And how was Red supposed to see anything, from this side of the clearing's trees? \n\nThe answer to at least one of those questions was answered right away, when Anthony carefully placed her on her feet, standing in the hole. Then he grabbed hold of the shovel and began to fill the hole up. Eventually, he had her buried up to her neck, unable to move. \n\nThen he dumped an armful of leaves on her head, and grinned. \"There. All finished. Look like just another part of the wilderness, now, don't you?\" \n\nRed glared silently up at Anthony, who only laughed in return. \n\nThe answer to how she was supposed to see into the clearing came next, as Anthony reached out to grab the branches that separated the clearing and began to saw at them, until a clear gap had been created. When the last branch was removed, Red could see Grandma's house. \n\nWolf wasn't on the porch. Was she sleeping in her burrow? Red was sure that she would come instantly if someone stepped into Grandma's territory, though, just like when Red first came there. \n\nDespite that, she prayed for Wolf to just once be negligent in her duties. \n\n\"Ah - look at that,\" Anthony whispered into Red's ear. \"The sun's rising. Time to go face the beast.\" \n\nThe sun was indeed coming over the horizon, its rays just barely beginning to shine across the land. Red could her curse activating, like warmth in her chest. Her breasts began to shrink inward, allowing the earth to shift, while her legs grew out beneath her. This caused her to make a little bump in the leaves, but unfortunately they had been piled high enough to make up for it. \n\nWhile Red's body was changing, Anthony stepped into the clearing, a smile on his lips. Instantly, as if called by magic, Wolf appeared on the opposite side of the clearing. She ran forward, a blur of silver, stopping right in front of Anthony. Right in front of Red. There was a smile on her lips. \n\nRed tried to scream, despite the gag, but Anthony opened his mouth to speak at the same time. \"Good to see ya.\" \n\n\"Ya?\" Red asked, a small frown on her lips. \n\n\"Ah... I mean...\" Anthony stepped closer to Wolf. His hands were hidden beneath his cloak. \n\nRed's face began to shift from the curse. Her cheekbones lowered, and as they did so the rope that held her gag shifted and loosened ever so slightly. Red began to shake her head back and forth viciously, trying to get it just a little looser. Her tongue pushed against the gag. \n\n\"Is something wrong, Red?\" Wolf asked, stepping forward, reaching a hand out toward Anthony. \n\n\"It's nothin'. I'm just happy to see ya.\" \n\nAs Red's face became narrower, the rope fell from the gag. She forced it out with her tongue. \n\nWolf's arm grabbed Anthony's, as she looked into his eyes and frowned. \"Your eyes turned brown...\" \n\n\"Wolf!\" Red cried out, desperately, from her position on the ground. \n\nWolf's eyes widened. \n\nAnthony's hand moved. \n\nRed blossomed on Wolf's tunic. Her chest sprouted a knife. \n\n\"Wolf!\" Red cried out again, as Anthony laughed above her. \n\n\"Guess ya won't die thinkin' it was Red, but it still worked out pretty well, wouldn't ya say?\" he teased. \n\nWolf's lips opened and closed. Her knees crumpled beneath her, and she fell to the earth. \n\n\"Wolf!\" Red screamed, again, and again. \"Wolf, please... I'm sorry, Wolf. I'm sorry...\" \n\nWolf wasn't moving; she only laid there, on the floor, while Anthony laughed like a madman above her body. \n\n\"Wolf...\"Red cried out, once more, tears streaming down her cheeks. \n\n\"Now what's this commotion about?\" came a voice. \n\nRed blinked up in surprise. In all the commotion, she hadn't noticed another figure walking towards them, from across the clearing. An old woman, with white hair streaming down her back and wrinkles baked into her cheeks. She had laugh lines on her face, and at that moment she wore an easy grin, yet there wasn't so much as a glimmer of amusement in her eye as she walked toward the trio. \n\nInstantly, Red knew who this had to be. \n\n\"Grandma... Grandma, please! Please save Wolf!\" \n\n\"Save Wolf, my dear?\" Grandma asked, eyes swinging to Red. \"I'm afraid that will have to wait. I've already cast a spell to keep her from dying, but if you wish her healed... Well. It seems to me that there's someone in line ahead of you. Wouldn't you agree, dearie?\" Her eyes shifted to Anthony as she spoke, and her smile grew a little wider. \n\n\"But-\" Red started. \n\n\"Quiet, dear,\" Grandma interrupted. \"All will be well in the end. But I simply must deal with this man, first.\" \n\n\"That's right, ya old crone.\" Anthony stepped forward as he spoke, a greedy grin on his own lips. \"Ya're going to give me power. Whatever magical gear ya got; all yar books on it, too; and whatever else ya happen to have on ya. I'll make a fortune grantin' people's wishes. Or maybe I'll just sell off the gear, instead.\" \n\n\"My. You certainly seem indecisive,\" Grandma complained. \"Though I suppose it comes down to something simple enough. You want money and you want power. But I don't really see a need to give you either of those things, you know. It's not like you did anything to deserve them. And it's not like you have any bargaining chips.\" \n\n\"Listen here, you little-\" Anthony stepped forward as he spoke, only to freeze in place, step unfinished, his right foot still an inch above the ground. \n\n\"Now, now, dear. I know you've come a long way; I think it's only fitting I give you a little something for the trouble you've caused... I mean been through. Don't you think so, too, Red?\" \n\n\"I...\" Red hesitated. \"I just want to save Wolf.\" \n\n\"Such single mindedness, my goodness,\" Grandma sighed. 'But I don't blame you for it, I suppose. You can relax: I have frozen Wolf in time, just as I did Anthony. She will not die before we finish, and she is not in any pain. But I'm not finished attending to my rudest guest, yet, so you'll just have to wait.\" \n\nSaying so, Grandma turned her attention to Anthony and smiled. \"Now. As for what we'll be doing to this rude person...\" She wiggled her fingers, and his body began to move again, although it didn't seem to be of his own accord. \n\nAnthony's right foot neatly stepped back to his left. This was followed by him lowering himself to his hands and knees, His legs began to shorten, as Red watched, and she wondered for a moment if he was being given a feminine form. Rather than losing body hair, however, he seemed to be growing quite a bit of gray fur. What's more, Red realized, his legs were shortening far too much, everything above the knee flowing back into his body. His feet lifted out of their shoes, revealing paws, which calmly stepped down onto the bare floor. \n\nThis process repeated with his arms, everything above the elbow disappearing as his forelimbs and hands grew fur. His fingers shortened and thickened, becoming paws. \n\nFur sprouted beneath Anthony's clothes, and he started to paw at the fabric of his tunic. Grandma laughed, in response, wiggling her fingers again and causing Anthony's clothes to unravel and fall to the forest floor. What was revealed beneath was not a human shape, but rather the torso of a wolf. \n\nHis head shifted next, mouth shifting into a snout as his neck shortened and thickened. His brown eyes turned yellow as his teeth sharpened, and fur spread across his head. In seconds, there was no longer a single thing human about him. \n\nThe last touch was a tail, which sprouted as Red watched. When it grew in, Anthony tilted his head back and howled at the moon. \n\nGrandma laughed. \"There. That's a good girl...\" \n\n\"Girl?\" Red asked, surprised. \n\n\"That's right. I turned him into a female wolf; if he behaves well enough for the next twenty years or so, I'll let him graduate into a wolf girl and we'll go from there.\" \n\n\"I... I see...\" Red glanced at Anthony. From the glimmer of intelligence that met her gaze, she suspected that at least something of the old him was still in there. That meant he probably had a rough road ahead, if he ever wanted to get back to his masculine form. She couldn't feel any pity for him, though, with Wolf laying right in front of her. \n\n\"Grandma... Please. I know I haven't done anything to prove myself to you, but I'm begging you, please. Save Wolf?\" \n\n\"My,\" Grandma murmured, \"you certainly do seem to care for her, don't you? I never thought I'd see the day that girl found a friend. If you wish to save Wolf, however, you'll have to answer me at least this much: what would you be willing to give up to save her?\" \n\n\"Anything,\" Red promised. \"I'll work for you forever, if you save her. I'll do the cooking, the cleaning, whatever you want.\" \n\n\"My. But I have magic to take care of all that,\" Grandma pointed out. \"And you don't look strong enough to defend my home... Though I suppose I could change that... But if I have Wolf, again, I won't need anyone for that, so...\" Grandma snapped her fingers. \"I know!\" \n\nThe grin on Grandma's face sent chills down Red's spine, and the look in Grandma's eyes made Red wonder if this idea was truly spur of the moment after all. \n\n\"What is it?\" Red asked, all the same. \"I'll do anything.\" \n\n\"Then why don't you give me that curse of yours?\" Grandma asked, never dropping her smile. \"I can use that magic to fuel Wolf's healing. Of course if I do that, you'll be stuck in your current form forever. You'll never transform again.\" \n\n\"I...\" The thought of staying in her masculine form was terrifying to Red. The idea that she might never have breasts again, never have a vagina again, never fit in her dresses again, seemed like the most frightening thing in the world. \n\nAt the same time, images of Wolf flashed through her mind. The serious expression Wolf always wore. The way she talked, formal and stiff, so at odds with the wild impression she gave off and the fierceness of her motions. \n\nRed could find another curse. It wouldn't be easy, and it might take her the rest of her life, but she could do it. \n\nShe would never find another Wolf. \n\n\"Take my curse,\" she whispered, staring Grandma right in the eyes. \"Save Wolf.\" \n\n\"My, my. You could have taken your time with the decision, you know. I told you that Wolf is frozen... But if you're quite sure?\" \n\n\"I'm sure,\" Red promised. \n\nNodding, Grandma reached out and placed a hand on Red's head. The other hand she placed on Wolf. \n\nA warmth started in Red's chest. It was the familiar feeling of her transformation, but instead of flowing through her entire body it was simply moving up and out of her, through her head. Before long, all Red could feel was the light chill of the cold earth on her naked skin. \n\nWolf's body began to glow. Her yellow eyes fluttered open, and she rose to a sitting position. Looking between Grandma, Anthony, and Red, her eyes slowly started to harden as she put together what had happened. \n\n\"Grandma. What did you charge Red?\" Wolf asked, her voice a low growl. She sounded mad. \n\n\"Why simply her curse, my dear. Most people would have been glad to get rid of it.\" \n\n\"Red is not most people!\" Wolf screamed, rising to her feet. \"I'm sure you were aware of it, too.\" \n\n\"And if I was?\" Grandma asked, raising an eyebrow. \"She made her choice, all the same. You should be pleased she loved you enough for it.\" \n\nWolf stared at Grandma, for a moment, before turning her attention to Red, still buried in the ground. Kneeling down besides Red's head, Wolf let out a low growl, before reaching out a hand and gently cupping Red's cheek. \n\nThen, to Red's surprise, Wolf covered her mouth with that same hand. \n\n\"Grandma,\" Wolf whispered. \"I would like to make a change to our agreement.\" \n\n\"What!?\" Red tried to ask, through the muffling hand. Wolf's grip was tight, though, and little sound escaped. \n\n\"I will serve you as long as you need me, Grandma. Until the ends of time, if you desire it. So, since there will not be an end date to my employment, won't you grant my wish now?\" Wolf smiled, softly. \"Please. Restore Red to her proper form.\" \n\nRed stared up at Wolf, hardly able to believe her ears. She wanted to protest, but the hand stayed firmly closed about her mouth. All she could do was watch on. \n\n\"...Have you given up on being human, then, Wolf?\" Grandma asked. \n\n\"I no longer care how I look,\" Wolf replied. \"So long as I am with Red, who accepts me, I am fine with anything.\" \n\n\"Then I reject your offer,\" Grandma declared. \"And offer you this as a housewarming gift for your new partner, instead. It's been a pleasure listening to your reports for five and a half years, Wolf. But I don't think you need me looking out for you anymore.\" \n\nSaying so, Grandma placed her hand again on Red's head. As her body began to glow, her body was lifted up from the pit and she found herself hovering in the air, above Wolf and Grandma's head. \n\n\"Wolf...\" Red whispered, now that her mouth was no longer covered. \"I... I don't know how to thank you...\" A familiar warmth beginning to flow down her head and into her chest. It was the warmth of transformation, she knew, but it felt to her like the warmth of love. \n\nWolf did not respond to her verbally, but simply reached up to take her hand. Her warm grip told Red everything she needed to know. This was fine. That they would be fine. If people couldn't accept them, then they would simply have to find a way to live without other people. In Wolf's burrow, or in their own cottage, it didn't matter. They'd find a way. \n\nSo long as they were together, it would be okay. \n\n*** \n\nRed hummed to herself as she laid out the week's dirty clothes; the green dress that Wolf loved to see her in was among them, along with a blue dress, and red one, and of course her cloak. Wolf's tunics and trousers were also accounted for. \n\nWhen Red had them all lined up, she spoke the words for her spell. Grandma was trying to teach her how to do it with just a finger wiggle but, even for something as simple as cleaning clothes, Red just wasn't on that level yet. She was getting better, though. \n\nWhen Red finished the words, the clothes glowed, and the dirt and grime that had covered them faded away completely. It brought a smile to Red's lips, but she wasn't done yet. Not by a long shot. She still had to put away the clothes, sweep the floors, and of course get dinner ready. Preferably before Wolf got back. \n\nAll these things were simply her normal chores, done after learning lessons from Grandma. Getting it all done had been difficult, at the start, but a mixture of gaining experience and learning spells had allowed for things to become a lot smoother over the last two years. She no longer needed Wolf's help for any of it. \n\nWolf was always working hard, as well. Since she no longer had to guard Grandma's house, she'd started to patrol the forests. It earned them no money, but she'd saved the lives of countless travelers, and Red understood that rumors had begun to spread of a divine wolf in these woods. \n\nIt made Red want to laugh and cry, when she thought of how much things had changed for the two of them. They even had their own cottage, now, built right behind Grandma's house. \n\nThe door to that cottage swung open, jarring Red from her thoughts, and Wolf walked in. Her silver hair was neatly combed, and her yellow eyes were soft and warm. Her sharp teeth were pulled into a smile, and her bushy silver tail was wagging happily back and forth at the sight of Red. Reaching out, careful not to scratch Red with her claws, Wolf casually intertwined fingers with her mate. \n\n\"You're home early,\" Red pointed out. \"I haven't even started dinner yet.\" \n\n\"That's fine...\" Wolf said, leaning forward to whisper in Red's ears. \"The only thing I want to eat is you.\""
    ],
    "authorname": "princess_kay",
    "tags": [
        "curse",
        "fairy tale",
        "full animal tf",
        "lesbian",
        "magic",
        "male to female",
        "mtf",
        "tg",
        "transformation",
        "wolf"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/red-wolf"
}