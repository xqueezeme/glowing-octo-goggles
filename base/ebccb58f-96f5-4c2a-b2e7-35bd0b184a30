{
    "title": "Upon a Savage Shore Ch. 23",
    "pages": [
        "Author's note 10/15/2014: So here is the last chapter. I said from the beginning that I would finish the story and not leave my readers hanging. I stuck to that. I'm not sure that everyone will be satisfied, but I am. \n\nThanks for all the encouragement over the past couple of months. It made finishing the story much easier knowing there were people who wanted to read it. I hope you all enjoy this last installment. \n\n***** \n\nChapter 23 \n\nThe late afternoon sun was coming through the narrow window of Liam's room, accenting the warmth of the late summer day. He turned to look at his sleeping wives, reflecting once more on how beautiful they were. It had been a close thing. He might have lost them both. \n\nAfter killing the last of the enemy Liam had returned to Clot'ilda who had somehow hoisted herself into one of the strange, brandy glass shaped containers. She had been unable to stop the bleeding from her wounds and the water in the bottom of the container had been stained red. Her reason for climbing into it had simply been to hide and have a good position from which to attack the enemy if it should survive Liam's wrath. Liam had helped her out of the thing and then patched her up, stopping the bleeding until they could get outside where M'pel E'kmel had been attending to the other wounded, including Tem'Ma'tel. \n\nSue and Charlie had brought the landstriders around and the Fauns saw to constructing travois to transport the wounded. Sue helped M'pel E'kmel with one Faun who had taken several fragments from an exploding gyro-jet round. Two others had been beyond help. \n\nM'pel E'kmel had assured Liam that Tem'Ma'tel would live, though the wounded jZav'Etch Marine lay unconscious under a thermal blanket. Clot'ilda's wounds were painful and had needed better care than Liam had been able to give inside the ship, but in short order she was bandaged and dosed with pain killers. The fragments in her rump and legs had to wait until they returned to the villa before M'pel E'kmel would remove them. \n\nA long journey with an overnight stop on the plain was undertaken. Though all were eager to get home, none of them, especially their landstriders, had been in any condition to complete the journey the day of the battle. After stopping at the village long enough to express their thanks and say their goodbyes, the castaways and Rover had climbed the long slope of the hill and entered the villa near sundown. \n\nTem'Ma'tel remained sedated, her condition being monitored by a medical kit. Clot'ilda had grumbled about her wounds throughout the whole operation to remove the fragments. Her greatest concern was that Liam would no longer find her attractive, though, it was most likely the anesthetic talking. He'd laughed at her and ended her concerns with a kiss and a nightlong vigil. The commander had dropped in to check on them shortly after dawn, reading the medical kit's data on Tem'Ma'tel and speaking softly with Clot'ilda whose mood turned from sulky to satisfied as they spoke. \n\n\"Liam?\" Clot'ilda murmured sleepily, rousing him from his memories. \n\n\"I'm right here, Babydoll,\" he said and leaned down so they could look into each other's eyes. She was laying on her belly because of the location of her wounds. \n\n\"Liam take?\" she asked with a little smile. \n\n\"Not right now,\" he chuckled. \"Your wounds need a few days, you horny little minx.\" \n\nShe snorted unhappily and pouted. \n\n\"That won't work this time,\" he said and kissed her affectionately. \"We'd bust your stitches for sure if we tried it. Besides, you need rest. You lost a lot of blood before I got you out of there.\" \n\nHer little tail flicked from side to side and her ears twitched, expressing her dissatisfaction more eloquently than words. He kissed her again then reached across her to check on Tem'Ma'tel's condition. \n\n\"Crap,\" he cursed softly. \n\n\"What?\" Clot'ilda asked, slightly alarmed. Had something happened to her sister? \n\n\"I can't read jZav'Etch.\" He showed her the med kit. \n\n\"Normal,\" she said after looking at the small screen. \"Sleeping. Medicine make her sleep, Liam. Medicine.\" \n\n\"Yeah,\" he sighed. \"She damned near got herself killed.\" \n\n\"For me,\" Clot'ilda said, sounding guilty. \n\n\"For you,\" he agreed. \"But not just for you, Babydoll. We're family now. You, Tem'Ma'tel and me are family. One for all and all for one. Just like the Musketeers.\" \n\n\"Musk tears?\" she asked with a little frown. \n\n\"I'll tell you that story when you're feeling better,\" he said and kissed her between the ears.\" \n\n\"Liam, go eat,\" Clot'ilda said. \n\n\"I'm fine,\" he said. \n\n\"No,\" she replied, eying him. \"Your stomach noisy. You hungry. Go eat.\" \n\n\"I'll be fine,\" he insisted. \n\n\"Eat,\" she said, sternly and poked him in the stomach with a finger. \"Take bath. Wash clothes. Come back later. I watch Tem'Ma'tel.\" \n\n\"Alright,\" he said after considering. It was time he got up and moving. Probably, Clot'ilda wanted some time to herself. \"I'll come back and check on you in a while.\" \n\n\"Eat,\" she insisted. \n\n\"I love you, Babydoll,\" he said and kissed her again before getting to his feet. \n\nIn the kitchen Liam found several fresh caught fish that M'pel E'kmel had brought in that morning after checking the wounded girls. They were good sized and would make a good meal, but he really wasn't interested in them right now. He was tempted to break out one of the survival meals, but winter was on its way, even if there were months of autumn to look forward to first. He scrounged around and found some dried berries and a couple of slightly over ripe fruit from the orchard. As he ate them he became aware of the reason Clot'ilda had told him to bathe. His last bath had been two days and a lot of kilometers of hard riding ago. With the fruit in his hands he wandered out into the plaza, wondering where Sue, Charlie and the commander had got off to. It didn't really matter. He was just going for a bath. \n\nThe water of the pool was as cold as ever and Liam reflected that he was getting tired of cold baths. \n\n\"I'll knock together some sort of shower or a heated tub,\" he said as he scrubbed his hair. It was getting longer and he felt he needed a shave, but the commander had been right about how his mates would like his beard. \"The king of beasts needs a mane, I guess.\" \n\nLiam was finishing his bath and was about to climb out of the pool when he noticed M'pel E'kmel standing on the stone stage above him. \n\n\"Hi there,\" he said a little embarrassed. \"Spying on me?\" \n\n\"Naturally,\" she replied with a smirk and a mischievous glint in her eye. \n\n\"Been there long?\" he asked. \n\n\"Oh yes,\" she purred. \n\n\"I... um... see,\" he replied, wondering what was on her mind. She wasn't acting as coy as she usually did. \n\n\"Sergeant, do you remember our conversation?\" M'pel E'kmel asked with a sultry smile that made even the very cold pool feel warmer. \n\n\"Conversation?\" he asked and then flashed her a quizzical look. \"You mean the one in the forest when we were going to your ship? The one about having sex?\" \n\n\"That one too,\" she said with a grin. \"I was thinking of the one we had that night at the tree, though. The night the hyena-frogs attacked.\" \n\nLiam frowned. \n\n\"I remember you asking me what I found attractive about the three of you,\" he said. \"A lot's happened since. It's all a little hazy\" \n\n\"Much, indeed, has happened,\" she purred and began opening her jacket. \"That night you said you would like to see me in a certain garment.\" \n\nLiam blinked in wonder. M'pel E'kmel normally wore an undershirt, but today she appeared to have not bothered. Her fatigue jacket slipped down her shoulders revealing a slim, white cord tied behind her neck. \n\n\"Do you recall what garment you wanted to see me in?\" she asked, giving him a direct look. \n\n\"Um... Not really,\" he replied, confused. \n\n\"I am so disappointed,\" she teased and let the jacket slip to the stone of the stage. \n\nLiam's eyes went wide at sight of M'pel E'kmel's large, firm breasts barely concealed and yet lifted up to great advantage by what could only be a bikini top. The cups were made of shimmering silver fish skin, striped with navy blue. \n\n\"Wow...\" Liam breathed, hardly able to form a coherent thought. \n\n\"If you like that,\" M'pel E'kmel said in a throaty purr, \"you'll like this better.\" \n\nLiam could only stare as she slipped her fatigue trousers over her shapely hips and slid them slowly down her legs. She rose to her full height and struck a pose like a classic movie star, with one foot slightly forward, her shoulders back and her hands on her hips. \n\n\"Wow,\" Liam breathed again. \n\n\"A most gratifying reaction,\" she chuckled. \"I can see you like it.\" \n\nThe jZav'Etch commander stood there in the sun, her golden fur gleaming, wearing only three triangles (small triangles) of silver and blue fish skin. The bikini served well to accent her lush figure and draw his attention to her most enticing aspects. Liam swallowed hard. \n\n\"Where...\" he began but trailed off, still too surprised to think properly. \n\n\"It took me ever so much effort to complete this,\" she said, suddenly casual. \"Sue helped quite a lot. I'm afraid I had to pilfer one of your medical kits for needles. I apologize for that.\" \n\n\"Yeah,\" he breathed trying to take in everything about her and failing. He just couldn't concentrate long enough. And then she laughed and dove gracefully from the stage into the deep water. \n\nLiam tracked her course as she remained submerged and swam towards him. When she surfaced she was only an arm's length away. Her eyes sparkled as they met his and their gazes locked. \n\n\"Sergeant Liam Carter, SarJ'ant of Household SarJ'ant,\" she breathed huskily and moved closer, never breaking the gaze. \"Chaq' Ka' shisk. Will you have me? Chaq' Ka' shisk, Liam. Will you have me?\" \n\nLiam gulped, not certain what to say. He wanted her. He wanted her so much it almost hurt. \n\n\"Liam?\" she asked a little less certainly. Had she miscalculated? Would he now refuse, even after they had professed their love in the forest? Was he still angry over her deception? \"Liam?\" \n\n\"Yes!\" he said and grabbed her, pulling her into a hard kiss, pressing her breasts to his chest and her hips to his. \n\nStartled, pleased and relieved by his sudden action, M'pel E'kmel felt his hardness and was surprised in spite of herself. She had known how thick his member was, but to feel it pressed against her flesh was another matter. She had lain with several males in her lifetime, but none had been so thick as this. She now fully understood Clot'ilda's initial fears, but M'pel E'kmel was an experienced female. She knew what she wanted and did not fear this male who kissed her so fiercely. \n\nLiam felt M'pel E'kmel wrap her arms around his neck and her legs around his hips, supporting herself in the water. She kissed him back and then pulled away with a broad smile before nipping his beard and giving it a pull. She dove back into their kiss and her tongue was hot on his. M'pel E'kmel pressed her sex hard against his shaft, the slick fish skin as smooth as liquid as it slid across his length. And then she broke the kiss again, looking him in the eyes. \n\n\"I love you, Liam,\" she breathed. \"But this water is just too damned cold.\" \n\nHe laughed and turned, boosting her out of the pool then followed. They rejoined their embrace briefly before she took him by the hand and trotted over the stones in the stream to the orchard and a cluster of bushes. Behind this natural screen M'pel E'kmel had prepared a bed of antelope hides on top of bailed grass. It was soft, warm and welcoming as they lowered themselves onto it, side by side. They kissed tenderly and then fiercely and M'pel E'kmel's purr rose in her chest as her passion ignited and bloomed. Liam felt his need pounding in his chest and loins and he wanted her, but he restrained himself. Their first time should not be rushed. \n\nM'pel E'kmel ran her hand down Liam's back to his rump, grasping the solid muscle. She pulled him firmly into her, pressing his member against her belly. It was wonderful. She had not desired a male this much for many years and this was a real male, not some pale and fawning creature fit only for a night of wantonness. \n\nLiam's hand went to her breast, finding her swollen nipple through the thin layer of silver and blue leather. He felt the heat rolling off of her and M'pel E'kmel's scent filled the air to mix with the wild scent of the orchard's trees. Their tongues rolled in urgent need to take in what the other was offering. Liam began to lay a line of kisses down her throat and she arched her head back to expose herself to him, trusting him not to harm her. She yielded to his gentle pressure and laid on her back as he slipped the cup off her right breast, exposing the large nipple before his mouth closed over it. \n\nM'pel E'kmel hissed with pleasure at the sensation coursing through her body. She arched her back and with her hand pulled Liam more firmly onto her breast. His tongue played over the swollen flesh and his teeth teased her, pulling on her nipple only to release it before there was pain. M'pel E'kmel's purr thrummed in the air as her hands glided over her mate's scarred, muscular back until she found his buttocks. She grasped both cheeks, kneading them in strong fingers, urging Liam on. Her thighs spread, her legs wrapping around his hips again, increasing the pressure on his member, pressing it into her belly. Suddenly she pushed him up, releasing his hips. Liam was confused for a moment, but she rolled him onto his side and then his back. M'pel E'kmel spun so that she lay on her belly, her mouth above the head of his shaft. She breathed in his scent for the first time, enjoying the strangeness of it, and then she licked the head. \n\nLiam groaned and had to restrain himself. It was far too soon to let go. He would hold back as long as he was able. And then he felt her lips gliding over the head of his shaft and he wondered how long he could hold back. \n\nM'pel E'kmel liked the way her mate tasted. His skin here was soft, though his shaft was anything but. She tried to remember all that Tem'Ma'tel and Clot'ilda had told her about what Liam liked, but she was too caught up in the moment for that. Her passion and desire guided her actions far more than conscious thought. Slowly she ran her tongue down his shaft to the soft hair at the base and just as slowly she retraced her track to the tip. A girlish giggle escaped her when it jumped at the brush of her whiskers and suddenly she dove onto it, sucking the length into her mouth. \n\nLiam grunted in pleased surprise, closing his eyes and enjoying his new wife's ministrations for an endless moment. She was just coming back up when he reached out and drew her across himself so that one thigh was to either side of his head. Her tail waved languidly in the air and she glanced over her shoulder with a wicked smile, anticipating his next move. Liam's fingers pulled her bikini bottom aside, exposing the heated, livid pink folds of her sex. Her scent was much stronger now and drove his desire on remorselessly. \n\nLiam's tongue found M'pel E'kmel's sex and she growled her pleasure. He kissed her diamond, eliciting another growl. M'pel E'kmel had never had a male attend to her the way Liam was doing. She found it at least as good as any female she had lain with, though it was quite different. Her fingers ran up and down his manhood and she smiled, suddenly wishing to taste him again. Her lips parted and slowly descended, engulfing him centimeter by centimeter. When he reached the back of her throat, his hot flesh pulsing against her tongue, she withdrew all the way back to the tip and then dropped over him again. Faster and faster she did this, loving the sensation of his skin on her tongue as much as she loved the sensation of his tongue on her swollen flesh. Suddenly Liam grunted, his muscles knotting in a convulsion and liquid heat splashed into M'pel E'kmel's mouth. She was startled but instantly understood. Her lips pressed tight around his thickness as more of his seed sprayed into her mouth and her purr rose in volume. \n\nUnder her, Liam gasped and bucked, not believing how utterly fantastic it felt to be with M'pel E'kmel. He slowly came back to himself, realizing she had rolled off of him and was now again laying at his side propped on her elbows and licking her lips. \n\n\"Tem'Ma'tel was right,\" she murmured with a smile and a wicked glint in her eyes. \n\n\"About... what?\" he asked, out of breath. \n\n\"You taste good, my Sergeant,\" she said and leaned in for a kiss. \n\nHe gave it to her and with a smile of his own asked, \"Are you going to keep calling me that?\" \n\n\"Yes,\" she replied and kissed him again. \"Are you going to continue calling me Commander?\" \n\n\"Probably,\" he admitted with a chuckle. \n\n\"Hmmm... Mother would not approve,\" she said in a teasing and musing tone. \"She'll get over it.\" \n\nThey kissed again and she crawled on top of him, but Liam rolled and M'pel E'kmel ended up on her back with his broad chest across hers. Her tail lashed over the antelope hides and she hooked her leg behind his knee, encouraging him to mount her. Liam eased on top as she spread her thighs to accept him. Her hand found his length, guiding the head to her opening, pulling him forward until the tip pressed into her. She gazed up into his eyes as slowly, gently he eased forward and her lips spread to receive him. \n\nM'pel E'kmel smiled, feeling his girth open her in the most pleasurable of ways. She expected pain and there was some, but it was far outweighed by her desire, her need. She growled with satisfaction as he slid slowly into her, knowing that her mate would please her as he pleased himself. She let go of his manhood and slid her hands around to his hips, the better to feel his rhythm. Finally, when his shaft was as deep as it would go, she sighed and locked her legs around his thighs, gazing up into his eyes, not allowing him to move. \n\n\"I think I'm going to be sore in the morning,\" M'pel E'kmel purred. \n\n\"We can stop,\" Liam offered, though he clearly wasn't serious. \n\n\"I shall tear out your throat and eat your liver if you attempt to do so, Human,\" she growled playfully. \"I am jZav'Etch. We do not begin that which we will not finish.\" \n\nLiam felt her claws prick his backside and saw her smoldering smile. \n\n\"Now, Sergeant,\" she said throatily. \"Attack!\" \n\nAnd Liam did. He drew all of the way back and slid in with a smooth, strong thrust of his hips. M'pel E'kmel grunted with the impact and bucked into him, forcing his member deeper. He drew out again and plunged in again. Her breath came in huffs and gasps as her big mate increased his tempo, driving deep and spreading her wide. M'pel E'kmel felt as she had the very first time she had taken a male. It was painful, uncomfortable and utterly wonderful all at the same time. And for the first time in many years she felt satisfied. She raised her hips to give him greater access and Liam paused in his motion long enough to move her ankles up to his shoulders and then he hammered into her, pistoning in and out. M'pel E'kmel had never had a male do that. She surrendered to her lust, pinching her nipples and growling deep in her chest as her climax built. \n\nLiam Felt her muscles clinching around his shaft and knew what was coming, but he didn't stop, even when she bucked under him, rolling her head from side to side. She whipped her legs out wide and rose to meet him on the down stroke, latching her hands behind his neck and dragging herself up to plant a kiss firmly on his lips. Her arms slipped down to wrap around his chest and she pressed her whole body to him, her legs locked behind his back and then she threw back her head, roaring into the sky before pulling him tight against her again. \n",
        "\"More!\" she panted into his ear. \"Oh please! More!\" \n\nLiam thrust again and again, nearly lifting his love from the ground with each stroke and she called for more with every breath until he felt her clinching tight again. M'pel E'kmel held on, forcing her sex down tight onto her mate. She buried her face into his neck, rubbing her scent on him in desperate need of release and then it washed through her. Her desire burst from her throat in another, earsplitting roar. Liam was hauled down with her to the furs on which they made love. Her legs squeezed tight and her arms held him like bands of gold. Heat washed off of her in rippling waves and suddenly, the sheer desire she exerted caused Liam to tip over the edge. He bucked in the first convulsion of climax and she bit his neck, urging him onward. He exploded inside her and for a very long, nearly infinite moment, they were one being with one desire. And then the wave passed from them, draining away in a rush and the two collapsed in each other's' arms. She released him, though her hands remained clasped behind his neck. He kissed her softly between panting breaths. When he began to withdraw, she instinctively crossed a leg over his thighs and looked at him. Liam raised his brows questioningly and then she blinked and her ears lay out to the sides, showing embarrassment. \n\n\"I suppose I can actually let you go, can't I,\" she laughed softly. She flexed her leg, pushing him back into her briefly and then let him go. \"We aren't done, though.\" \n\n\"Give me a minute,\" he laughed and gave her a kiss. \"I'm thirsty.\" \n\n\"Here,\" she said and reached under a bush to retrieve his canteen. \"Tea, my husband. I have fruit as well. And there is meat, if you wish it.\" \n\n\"Tea's fine,\" Liam said laying down next to her and drank. \"You know what I really miss, though? Beer.\" \n\n\"We will remedy that if the grain can be induced to grow,\" she said, rolling to her side. \"Until then, I will endeavored to make you forget beer.\" \n\n\"Yeah?\" he chuckled. \"How?\" \n\nShe pushed him onto his back and slowly crawled the length of his body until they were nose to nose and her large breasts lightly touched the scars on his chest. \n\n\"I will give you so much pleasure, Sergeant, that you will hardly be able to remember your name, much less beer,\" she whispered and kissed him. Her hands found the knots that fatened her bikini and soon the ridiculous Human affectation was hanging in a bush. \n\nLiam looked a little disappointed, but M'pel E'kmel made him forget the bikini by pressing her hard nipples into his chest and her mouth onto his lips. His hands roamed over her curves and his member grew rigid once more. She kissed and nipped him, licking and nuzzling as he found her softest flesh and caressed her. \n\n\"I know this is our first time, Sergeant,\" she whispered in his ear. \"But would you think it too forward of me to try something I have been wanting to try for years?\" \n\n\"I love you,\" he said and kissed her. \n\n\"I suppose that means you would not.\" She eased away. Her fingers quested under the corner of one of the hides and came out with Clot'ilda's little tube of lubricant. \"You know, she actually used my medical kit to make this. I had a devil of a time figuring out the code she used.\" \n\nLiam watched as M'pel E'kmel rose up enough to slide her hand down between her thighs and then he felt her hand spreading the lubricant over his shaft. He smiled at her, anticipating her reaction to what was about to happen. \n\n\"Frankly,\" M'pel E'kmel said, positioning the head of his manhood at her other opening. \"I'm a bit concerned.\" \n\n\"Then don't do it,\" Liam said gently. \n\n\"I'm just too curious not to, darling,\" she breathed and pressed back, wincing as she was opened wider than expected. She paused, easing off to catch her breath before trying again. Slowly she increased the pressure until the head slipped in. Having made it that far she flicked her ears in indecision. If she continued it would hurt. If she continued through the pain, she would feel extremely good. She continued. \n\nLiam felt heat spread across him, rippling out from his groin to his extremities. M'pel E'kmel was so tight he couldn't believe it. And she was moving with slow, sure purpose. She wanted this and he wanted her. Slowly she sank down his shaft until her well rounded rump rested on him. She sighed and her eyes slowly opened to stare into his. A cat's smile spread across her face, her fangs actually showing as her smoke colored eyes gleamed. \n\n\"To use one of your phrases: Wow!\" she said merrily. \"It's not as bad as I thought. Feels quite wonderful now that you are all of the way in. What happens if I do this?\" \n\nLiam felt her weight shift and she seemed to lock down on the full length of his manhood all at once. He grunted and she laughed and began shifting her hips. Suddenly she stopped and got her knees under her, raising herself up slowly and then sliding down again. \n\n\"Good,\" she breathed through her teeth. \"Oh, very good.\" \n\nLiam put his hands on her hips and guided her up and down as she rode him. At first she was like a kitten at play, laughing and changing pace to see what felt good. After a while, she began to focus more on her desire as her passion rose. Liam felt the change in her as she centered over him and slid down with purpose. Her tempo was steady and her breathing even, but gradually she was increasing her speed. Up and down she went, over and over again. Her pace grew more urgent and she leaned forward so that she supported her weight on her arms more than her legs. She grinned into Liam's face and he smiled back, enjoying every movement. Her breasts swayed enticingly and he took them in his hands, kneading them in time to her rhythm. Wanting more, Liam raised his head and took one of her fat nipples between his lips, suckling it hard. \n\nM'pel E'kmel slammed down on him, grinding her hips and suddenly there was a change in her movement. Her tempo increased but her rhythm was spastic. She coughed out a purring grunt and then drove herself with a will into Liam's hip. She slammed down and cried out with every movement harder and more desperate than the last. Liam had to let go of her nipple, his desire and passion building rapidly towards climax again. He gritted his teeth and knew he would explode any second, but he wanted to hold off until... \n\nM'pel E'kmel screamed with another orgasm wracking her frame. Her body twisted and convulsed as her orgasm blasted through her. She arched her back and moaned at the first feeling of Liam's seed spraying inside her. He cried out hoarsely, clutching at her hips in a vain attempt to bring her under control. When they returned to themselves, M'pel E'kmel lay across his chest panting. Liam was still inside of her, but neither had the strength to disengage. Nor did they have the desire. He kissed her softly and she buried her face in his neck, purring in his ear. \n\n\"Good,\" he whispered. \n\n\"Good,\" she agreed and they chuckled softly. She said, \"Wait until you have all three of us.\" \n\nLiam stopped breathing and just blinked at the sky. Then he began to laugh and held her against him, tenderly stroking her back. After all these days of stress and fear he felt safe and sure. They were in a place he could call home, with three women he loved. How strange it all was and how wonderful. M'pel E'kmel nipped his ear softly and ground her hips into him a little before pulling her mouth away. \n\n\"If you are this good after seeing me in a bikini,\" she mused. \"What other garments should we make?\" \n\nLiam couldn't help it. He laughed and kissed her and she punched him lightly in the chest. They drank tea and ate fruit and meat and after a time they again made love. They were home and safe and that was all that was needed. They were, after all, a family. \n\n*********** \n\nEpilogue \n\nThis is a good world, Captain Mem'et'Khal thought as he climbed the long slope up to the stone structure on the hilltop. His claws bit lightly into the soil and he smiled to himself. It felt good to be on real ground again with real grass and the wild smell of the plains to the south and west. He longed to explore the forest to the north, but he had work to do. The jZav'Etch High Command had given him a mission and he must see it through. \n\nAhead the path curved around a low mound covered in scrubby bushes. He and his escort didn't fear ambush. Their sensors had picked up no sign of active enemy forces in the system and they were well equipped to fend off any wild beast that might spring upon them. He actually hoped one would. It had been a very long time since he'd had a good hunt. \n\n\"Movement south!\" the point scout barked over the squad net. \n\nEveryone turned, bringing up their weapons. Captain Mem'et'Khal frowned and then smiled at the pair of beasts. They were large with long, narrow heads and quills sprouting from their necks and backs. The larger of the two creatures looked at them for a long moment and then snorted, going back to its own business. Long claws tore a scoop of soil from the hillside and a moment later the thing dragged a large, squirming grub from the hole. It shared this meal with the smaller one and then they moved off along the slope, their noses questing for more of whatever those squirming things were. \n\n\"Move on,\" the captain ordered. These beasts were no threat to them, though they looked as if they could be, if so inclined. \n\nThe point scout rounded the brush covered mound and instantly dropped to a knee with his weapon to his shoulder. \n\n\"Contact front! Contact front!\" the scout bawled as proximity alarms chimed in all of their helmets. \n\n\"Where in the Ten Fires did that come from?\" Captain Mem'et'Khal wondered, pulling his sidearm from its holster. He glanced around to be sure there were no other threats and then strode past his troopers to come up next to his scout. \n\nUp the path in the lee of the mound stood a Human. And what a Human he was. Mem'et'Khal had never seen one such as this. He looked more savage and dangerous than most jZav'Etch. The Human stood confidently blocking the path. A thick beard sprouted from his scarred, sun darkened face and he wore battered CP Marine armor with a broad, feathery black cape across his shoulders and a pair of EP 12s on his hips. Hanging about his armored throat was a necklace of ivory white teeth with the black beak of one of the enemy in the middle like a gorget. Held casually in his gauntleted hands was a jZav'Etch qui'istle, its muzzle discolored from heavy use. \n\n\"That's as far as you go until you state your business, mister,\" the Human said firmly. \"Tell your trooper, there, to lower that weapon before you have to send him home in a bag.\" \n\n\"Who are you to threaten us?\" growled Mem'et'Khal in English. \n\n\"He is SarJ'ant of Household SarJ'ant,\" purred a silky voice from the left. \n\nMem'et'Khal looked and discovered a small form covered in another black feathered cloak laying prone behind a large stone and aiming a deq'istle at him. \n\n\"Tread carefully around his name,\" purred another voice from the right of the trail. \n\nMem'et'Khal turned and saw yet another black cloaked form among the bushes. This one aimed a qui'istle at his head. At this close range, a round from that weapon would tear his head clean off. Brave and bold as he was, the captain swallowed nervously. \n\n\"He does not stand alone,\" a third voice said and from the tall grass on the Human's right rose a fourth cloaked figure. She threw off the cloak, revealing a shapely jZav'Etch female with golden fur wearing the threadbare fatigues of an intelligence officer. On her shoulder she bore the insignia of a commander. \n\nCaptain Mem'et'Khal glanced around again and was bewildered when four more figures rose up, all shrouded in the feathered black cloaks. These last were much slighter of build than the others, but all aimed deq'istles at the captain and his troopers. \n\n\"Lieutenant,\" Mem'et'Khal said over his shoulder. \"Now would be the time for you to explain things.\" \n\nFrom down the path a young Human in the field uniform of a Conglomerated Planets intelligence officer trotted up to the head of the squad. He looked quickly around and grinned. \n\n\"You'd be Sergeant Carter, then,\" the young officer said in a smooth baritone. \n\n\"I am, Lieutenant,\" Liam replied sedately and completely unmoved by the man's grin. \n\n\"I'm Lieutenant Walker,\" the intelligence officer replied, his grin not faltering. \"We've been sent to... Well, we were sent to rescue you.\" \n\n\"That trooper still hasn't lowered his weapon, Lieutenant,\" Liam said evenly. \n\n\"Weapons down!\" snapped Captain Mem'et'Khal and holstered his pistol. \n\n\"Satisfied, Sergeant?\" Walker asked with another grin. \n\nLiam gestured with his hand and the cloaked figures lowered their weapons. \n\n\"You've been out here for about eight months, Sergeant,\" the lieutenant went on. \"We're here to take you home.\" \n\n\"We are home,\" Liam snorted. \n\nWalker glanced up at the stone walls of the villa and nodded slowly. \n\n\"In that case,\" he said. \"I have orders for you.\" \n\n\"What orders?\" Liam growled, his hands flexing on the grips of the fero-plas rifle. \n\n\"By order of the Commissioner of Colonies you are now promoted to military governor of this system. You'll be officially headquartered on this planet.\" The lieutenant drew a sheaf of documents from his breast pocket and waved them in the air. \"As per the treaty agreed upon by the jZav'Etch Hegemony and the Conglomerated Planets, you are now the official representative of both governments with all privileges and responsibilities of your new rank and position.\" \n\nLiam squinted down at the young officer and his escort as if he were trying to decide whether or not to open fire. M'pel E'kmel put a hand to his arm and drew his attention to her. \n\n\"It would be polite to invite our guests to the villa, my husband,\" she said softly in jZav'. \n\nLiam looked over to where Clot'ilda lay under her cloak and raised a questioning eyebrow. The little Pah'Tht gave a nod and Liam turned back to the lieutenant. \n\n\"Why don't you, the captain and his troopers come on up to the house?\" he said. \"We'll have some beer and talk things over. When was the last time your troopers had fresh meat roasted over a real fire, Captain? I think they'll like my wives' cooking.\" \n\n*********** \n\nEpilogue \n\n\"And that's how we put their ship out of action,\" Liam told Walker and Mem'et'Khal. The three were sitting in the shade of the orchard near the stream with the smell of tilled earth floating lightly from the garden in the plaza. The jZav'Etch Marines that had comprised the officers' escort had eaten three roasted antelope, a bushel of dried fruit and drunk six or eight liters of tea. Mem'et'Khal had not wanted them having beer, saying it was likely to lead to fights. After the meal the marines had graciously thanked their host and saluted his wives in proper jZav'Etch fashion before marching down the hill to their shuttle. \n\n\"Most impressive,\" Captain Mem'et'Khal said. \"They were foolish to have such a small perimeter, though. You were... Lucky. I think that's the word.\" \n\n\"We were lucky and they were stupid,\" Liam agreed. \n\n\"Still, you're the only one that had to deal with the enemy on your own like that,\" Walker said and drank another swallow of the beer. \n\n\"The only one?\" Liam asked and refilled the Captain's stoneware mug from a large jug. \n\n\"Twenty-two other groups of castaways like yours have been rescued or contacted by us since the armistice was signed last month,\" Walker told him. \"You're the first to have three wives, but all the others have pretty much done what you and your ladies did. Most were on worlds like this one. A few were trapped on hulks too far from an outpost to be rescued during hostilities.\" \n\n\"So the experiment was a success,\" Liam grunted. \n\n\"It was,\" Mem'et'Khal replied. \"Before the armistice was signed, we recovered six parties like yours. It was a small sample, but the High Command took the data to the Senate. The war against the new enemy had picked up, you see. We'd lost an asteroid mining colony and another protectorate world to them and rumors were spreading through our forces. Since all six cases proved Humans and jZav'Etch could work together, a diplomatic mission was dispatched to investigate the possibility of peace with the CP.\" \n\n\"By the time the jZav'Etch came to us the enemy had attacked several of our long range patrols,\" Walker told Liam. \"They destroyed a forward supply base and assaulted one of our outposts. The only reason they didn't overrun it was because a carrier group showed up like the cavalry in an old western. We lost a carrier, a cruiser and three destroyers, but beat them up enough to force them into a retreat. Cut off their ground forces and had to kill every last one of them. Lost a lot of troops doing it, too. They've probed along our border all the way to Vespan territory. The Vespans have had their hands full for the past two or three months. Apparently their worlds are even more appealing than ours or the jZav'etch's.\" \n\n\"There technology is a hundred years behind ours,\" said Liam, puzzled. \n\n\"It is, but there are a lot of them,\" Walker explained. \"Sometimes we're at a twenty to one disadvantage. And their weapons may not be advanced, but they do have mass drivers. On top of that, they're adapting our tech as quick as they can.\" \n\n\"Since we joined forces, though, the enemy hasn't taken a single world from either of our countries,\" Mem'et'Khal said with a pleased smile, his eyes glinting. \n\n\"So where does all this leave me and my family?\" Liam wanted to know. \n\n\"My government recognizes you as the military governor here,\" the captain said. \"We will provide whatever support we can offer.\" \n\n\"And the CP has raised your rank to brigadier general with all due compensation,\" Walker said. \"Between that and your political rank you should be pretty well fixed. We'll send out a staff and anything else you'll need.\" \n\n\"Brigadier?\" Liam breathed, stunned. \n\n\"A sergeant can't be a military governor,\" Walker chuckled. \"Officially it's a reserve rank, but it's still your new rank, General.\" \n\n\"What about my wives?\" the newly minted general asked, almost excitedly. \n\n\"They are your mates, are they not?\" said Mem'et'Khal with a dismissive flick of his ears. \"Your Household will be added to the lists on jZav' and will be recognized as such if ever you visit one of our worlds. You will be accorded diplomatic status, as well, Governor.\" \n\nLiam leaned back in his chair and swallowed a large mouthful of beer. His eyes were focused somewhere on the mountainside above his home. \n\n\"The first thing I want is a year's supply of coffee,\" he said and swallowed more beer. \"The real stuff, not the concentrate from meal packs. Get some of the Pliskan blend or maybe Kona, if you can.\" \n\n\"Coffee,\" grinned Mem'et'Khal with relish. \"Proof that the Forger and Builder wishes us to be happy.\" \n\n\"And I want the jZav'Etch scout ship removed before it contaminates any more of the forest,\" Liam said, his thoughts racing. \n\n\"We're already seeing to that,\" Walker told him. \n\n\"Full honors for the crew,\" Liam said. \n\n\"Naturally,\" agreed Mem'et'Khal. \n\n\"And the remains of Captain Am'a'all,\" Liam said, remembering the soldier he had killed on that first day. \"He died well and deserves better than to lay where he is.\" \n\n\"And where is that?\" the big jZav'Etch officer asked, concerned. \n\n\"In the forest. We cremated him,\" Liam told him somberly. \n\n\"Then let him lay in honor there,\" Mem'et'Khal said. \"It is well. A wild land for a warrior is as good as a tomb.\" \n\n\"Alright,\" Liam nodded. He frowned in thought for a moment and the two officers exchanged an amused glance, wondering what else the new governor would think of. \"We'll need a full kitchen, a medical bay, a power plant to run them and... a Mary Wyda catalogue.\" ",
        "\"Mary Wyda?\" Lieutenant Walker wondered. \n\n\"For my wives,\" Liam said offhand. \"They've been pestering me about... things.\" \n\n\"What is this Mary Wyda?\" Mem'et'Khal asked. \n\n\"It's... um... Hard to explain,\" Walker said, a little uncomfortably, wondering if the well-known company would make lingerie in sizes that would fit jZav'Etch. \"I'll show you when we get back to the ship.\" \n\n\"I also want...\" Liam was adding, but Walker cut him off. \n\n\"General, we'll supply you with whatever you need,\" he said. \"We'll make a list. Whatever you want. I'm sure we can handle it.\" \n\n*********** \n\nEpilogue \n\n\"So, how did you get the natives to join your group?\" Walker asked. He and Liam had moved to the southwestern platform and were looking out over the valleys. Far below, the rise where the High Grass folk had built their kraal was empty, awaiting their seasonal return. On the hill where Liam had met Seschiqal and the white staff had been set, a large jZav'etch shuttle had just landed. \n\n\"After the attack on the enemy scout ship, the nomads rebuilt their village and had funerals for their dead,\" Liam told him. \"But Stolkchiq and Ssuqlik, the young couple, stayed on with us when the tribe went to their winter camp. She couldn't walk right and I think he felt he owed us something for helping her. Sscuha and her son, Chhal, were planning to stay with us until Chhal was old enough to have a hut of his own.\" \n\n\"Interesting,\" Walker mused. He was impressed that General Carter could pronounce the natives' names. \"You're the only one that has gotten the locals to do more than trade goods. You even learned their language. That's impressive.\" \n\n\"They learned English, too, but we can't really speak each other's languages,\" Liam said. \"We just learned to understand what sounds mean. It's not exactly easy. What's with the new shuttle?\" \n\n\"It has to do with part of the treaty, Governor,\" Walker told him with a knowing smile. \n\nBoth men turned at the sound of running feet coming up the ramp. All three jZav'Etch females swarmed onto the platform and to the wall to look out into the valley. They were followed by the four Fauns and bringing up the rear was Captain Mem'et'Khal with a pleased smile on his face, his long tail flicking in amusement. \n\n\"What's going on?\" Liam asked. \n\n\"Look, Liam!\" Clot'ilda said, yanking on his arm as if she were trying to dislocate it. \n\nLiam looked to where she was pointing and squinted in confusion. A party of jZav'Etch and Humans were coming down the shuttle's ramp leading several small figures. \n\n\"Children!\" Clot'ilda cried happily. \"Children, Liam!\" \n\n\"Is it not wonderful, my husband?\" M'pel E'kmel said, smiling broadly. \n\n\"Children,\" purred Tem'Ma'tel. \n\n\"What...\" Liam said, confused. \n\n\"A Household cannot be a Household without children, or at least the possibility of children, General,\" Mem'et'Khal chuckled. \n\n\"Part of the treaty expressly states that your Household must have children to be recognized by the jZav'Etch,\" Walker explained. \"We can't interbreed. Our biology isn't compatible. This is the solution.\" \n\n\"Who are they?\" asked Liam with growing comprehension. \n\n\"War orphans,\" Mem'et'Khal said. \"The jZav'Etch are all from the colonies overrun by the enemy. They have no close relatives among our people.\" \n\n\"The Humans are from all over the place,\" Walker told Liam. \"Mining colonies and frontier worlds, mostly. All of them have been screened psychologically for life on planets like this. They'll do fine with you.\" \n\n\"But...\" Liam began. \n\n\"Our children,\" Clot'ilda said, pulling on his arm again. \"Our children, Liam.\" \n\n\"But...\" Liam said again. \n\n\"We can raise them,\" Tem'Ma'tel said with a confident grin. \"They will grow up to be strong and brave.\" \n\n\"But...\" \n\n\"Sergeant,\" M'pel E'kmel cut him off. \"You will make a fine father. We three will see to the rest. And, I might add, we will all three continue trying to make our own babies. If anyone can accomplish that, I'm sure it is you.\" \n\nThe look in his wives' sparkling eyes told Liam he would be very happy for the foreseeable future. \n\nThe End \n\nEnd Note: I want to again thank everyone who left comments or sent messages. For the most part, they were encouraging and fun to read. \n\nThis is the last chapter of this story and I do not currently have plans to revisit these characters. However, I try to never say never again when it comes to storytelling. I have several projects that need to be seen to and there are many things that occupy my time. This may be the only story I post on this site. Please do not ask if I am writing elsewhere. You may safely assume I am. I will not disclose where my other stories are. RipperFish is the pen name I use here and nowhere else. \n\nSo long for now."
    ],
    "authorname": "RipperFish",
    "tags": [
        "adventure",
        "cat",
        "alien11111",
        "survival",
        "future",
        "furry",
        "oral",
        "anal"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/upon-a-savage-shore-ch-23"
}