{
    "title": "The Mark of the Immature Man Ch. 01",
    "pages": [
        "<center>This is Part One of a two-part story.</center>\n\nSix years ago, during the summer after my senior year of high school, I got a job working for a laboratory in my hometown. My title was \"Materials Manager,\" but that was euphemistic at best. It was peon work and not very interesting. I didn't \"manage\" anything; instead, I was responsible for organizing and restocking inventories of lab materials \u2013 media, reagents, glassware, and kits that we used in testing, as well as collecting or sending mail shipments. \n\nStill, the money wasn't bad, and at least I didn't have to work in some fast food restaurant, wearing a goofy uniform so that everyone could see me dressed up like some cartoon character. Far too many of my friends had those jobs, and not one of them could stand theirs. \n\nThe lab did most of its business transactions online, and so customers almost never came in to either of the two buildings that we occupied, leaving me a virtually invisible man in the small city where I lived. That was good, as far as I was concerned. I could collect a paycheck in anonymity and, because I was living with my parents, I could save most of my money for college. I was going to the U of M in the fall.\n\nI cannot define or describe maturity, but for some reason, it seems simple enough to define or describe immaturity. I have come to believe that a person has not transcended the latter until he has stopped thinking about achieving the former. Thus, it is only when you stop worrying about growing up that you come to realize that you actually have. \n\nBut that summer, I clearly had not yet done so, and based on my definition above, I still haven't. Then again, I can say with complete confidence that I grew up a little that summer. In all likelihood, I grew up a lot. If I did, it was all because of Tina Roche. And now six years later, Tina had found me again, and all of my concerns about my immaturity seem to have vanished as quickly as she did. But I am getting ahead of myself. Back to my story. \n\nThe lab that employed me did mostly clinical work \u2013 testing blood, urine, or stool samples for the internationally known hospital in town and for Rochester's four or five major clinics \u2013 as well as research testing for doctor's groups and the University of Minnesota and its numerous campuses. The Mayo Clinic is massive, drawing patients from all over the world. It employs over 60,000 people, which is over half of Rochester's population.\n\nThere were a lot of drawbacks to living where I did then, but the one thing that made Rochester unique \u2013 and a veritable paradise \u2013 was the number of women that lived in our fair city. Physicians were once viewed as a male-dominated subset of the population, but that has certainly changed. Today, the Mayo Clinic employs thousands of doctors, both male and female, but most of them are a bit older and tend come to our town already married. On the other hand, Mayo and its associated clinics and doctor's offices require the services of literally tens of thousands of nurses, nursing assistants, technicians, tech support personnel, coders, transcriptionists, and secretaries, and most of these employees are younger and predominantly female.\n\nWhen I was in high school, I had to do a research report in my Sociology class on gender and employment. I chose to research the medical profession right here in town, and one fact that my report unveiled stunned my fellow male classmates \u2013 because of all of the young, female employees in the assorted medical professions, the number of single women in Rochester was six times that of single men! For young guys like me, those were pretty amazing odds!\n\nSo, it is ironic that a short time after I started that job at the laboratory, I found myself in a relationship, not with a young, single nursing assistant or radiology tech just a few years my senior or with one of my college-aged cohorts, but with a married woman 25 years older than I was.\n\nThus, I learned the art of lovemaking, not by fumbling my way from one awkward sexual tryst to another with someone as inexperienced and ignorant as I was, but instead from an incredibly hot, mature woman, who introduced me to a world of sexual gratification that I could never even have imagined before meeting her.\n\nBut it was much, much more than sex that I gained from my time with Tina Roche. I learned a whole lot more about the redeeming power of love and the lengths that people will go to show their love to those they care about the most. I also learned the most striking oddity about love \u2013 sometimes it is best expressed by just leaving. I guess that is the real plot of this story.\n\nI distinctly remember the first time that I saw Tina. I guess it would have been pretty memorable, even if she wasn't the hottest woman I had ever met. It was a Friday afternoon, a week after I had started at the lab, and I had to run postage for a shipment of packages that needed to be taken to the post office before the weekend. \n\nI had never been to our other building before that day. It housed all of the executive offices and the accounting department employees, and it overlooked the golf course of the most exclusive country club in town. I found out that the lab's only postage machine was housed in one of the accounting department offices, Tina Roche's office, to be precise \u2013 Room 4B.\n\nLate that afternoon, I drove over to the other building. I thought I would find the office first before bringing in the packages, and so after opening the front doors, I entered an impressive lobby from which I discovered a long, L-shaped hallway that led to offices on either side. Once I located the correct room, a plush office that afforded a scenic view of the pond and bunkers that surrounded the green of the 4th Hole, I walked in the open door to find Tina standing sideways atop a large foot stool three or four feet off the ground. \n\nShe was attempting to pull a large box out of an upper cabinet, so her head was turned and she was staring up at the shelf two feet above her head. Because it was casual Friday, she was wearing tight-fitting jeans that dripped from her waist, and standing as she was in front of the window that was backlighting her silhouette, through her sheer blouse I could see the shape of her big tits, corralled by her black bra, pushing against that silky fabric. \n\nShe was clearly struggling with the package that still remained inside the cabinet. I could see the problem right away \u2013 the top of the box was hitting the top of the cabinet opening. Because it was above her head, she couldn't really see very well and hadn't yet determined that in order to remove the box she would have to turn it on its side to slide it out. Since she didn't hear me come in the room, I stood for a moment, just ten feet or so behind her, admiring the view \u2013 the stunning scenery outside the window paled miserably in comparison. After seeing her struggle with the package again, I decided a little chivalry was in order.\n\nSo after a few seconds, I decided to announce my presence, asking innocently enough, \"Can I help you with that?\" in a timid, subdued voice. \n\nNot realizing that I had entered the room, Tina squealed with shocked surprise, \"Jesus Christ!\" \n\nAs she turned toward the voice to her side, she teetered dangerously on top of the stool until, having overcompensated when she instinctively shifted her weight toward the cabinet, she lost her balance and started falling the other way, sideways toward me.\n\nI reacted intuitively, considering that I was the inadvertent cause of her fall, and so, as she tumbled, I took two quick steps toward the toppling stool and caught Tina's shapely torso in both of my arms. One of my hands, quite unintentionally, wound up palming her huge tits, while the other one found her hips and her tight, round ass. Embarrassed that I had touched a woman who I did not know and who was more than twice my age in such an inappropriate manner, I quickly set her on her feet, and repositioned my hands so they held her about her shoulders until I was sure that she could stand again without assistance.\n\n\"I'm so sorry, ma'am, I didn't mean to frighten you,\" I said apologetically.\n\nAfter she composed herself, and realized she'd been pawed by a young kid barely out of high school, Tina smiled at me wryly and said, \"You're pretty good with those hands! I guess I should be happy that they were in the right place at the right time.\" The emphasis she placed on those two words seemed to imply that I had touched her tits and ass on purpose. \"What brings you to my little piece of paradise?\" she asked sarcastically, smiling even brighter.\n\n\"Oh, I'm here to run postage for some packages that I need to mail,\" I answered turning a bright shade of red. \"I... I was told you have the postage machine in this office.\"\n\n\"Oh, you work here, huh? How come I've never seen you before?\"\n\n\"I... I... I just started a week ago,\" I stammered.\n\n\"Aren't you cute? Scared to talk to an old, married lady, huh?\"\n\n\"No... no ma'am; I'm just sorry I made you fall, that's all. I didn't mean to,\" I apologized again.\n\n\"Tell you what, honey, if you promise never to call me 'ma'am' again, I'll show you how to use that postage machine, okay?\" she said, smiling slyly. \"I don't look like some kind of old granny, now do I?\"\n\n\"No... no... no, you don't ma... ah, ah, I mean, miss.\" Now, I was really blushing.\n\n\"You are cute! I've really got you flustered, haven't I?\"\n\n\"No... no... no, ma... miss. If you'll excuse me, I'll go get those packages.\" I turned back toward the hallway and left the room, so embarrassed that if I didn't absolutely have to, I wouldn't have come back at all.\n\nBut I did come back, only a few seconds later, pushing a hand cart loaded with five or six packages, and when I did, I found Tina back up on the foot stool, still unable to remove the package from the cabinet. I didn't want a repeat of the earlier scene, so this time I dropped the hand cart so as to make enough noise to alert Tina to my return. Jesus, she looked good standing there! \n\nSo, having recovered my confidence just a bit from another glimpse of her stunning form, I decided to try chivalry again. \"Here, let me get that down for you,\" I offered. \"I'm a little taller than you are; it will be a lot easier for me to do it.\"\n\n\"Oh, aren't you a sweet one!\" she answered, and I offered her my hand as she climbed down off the stool. Then, I climbed up it myself, and in a few seconds I had pulled the box out of the cabinet, stepped down, and stood before her cradling it in my arms.\n\n\"Where would you like me to put this, ma'am? Oh, I'm sorry, I did it again!\"\n\nShe laughed once more, a bemused, feminine laugh that had me blushing for a third time. \"Oh, honey, it's alright! You're just too polite for your own good! I'm Tina, by the way. What's your name, sweetheart?\"\n\n\"I'm Evan. Evan Hughes.\"\n\n\"Well, it's nice to meet you, Evan Hughes. Why don't you put that box over on my desk?\"\n\nI did as I was told, and Tina proceeded to show me how to use the postage machine. Mailing those boxes was the last thing that I needed to do to end my first week of work. So, after I put the postage labels in place, I took the boxes to the post office, and then rushed home, to my parents' house and locked myself in the bathroom, so I could beat myself off thinking about Tina's beautiful face and unbelievable body. For the next month, I did the same thing every day, on most days several times a day.\n\nAfter that first visit to her office, I returned nine or ten other times in the next couple of weeks, and every visit pretty much went down the same way. Tina flirted with me unabashedly, and I blushed and tried to conceal the hard-ons that I started getting every time I saw her, or after the first two times, even before I walked into her office in anticipation of seeing her. \n\nThough I did my best to hide them, I suspected that Tina noticed. She really had an effect on me. She was gorgeous, and just so much more woman than the scrawny girls that I had dated in high school.\n\nAnd for some reason, Tina really seemed to like me. I would offer to do favors for her \u2013 moving boxes or carrying things. Once she even asked me to look at her car, which she had been having trouble starting. Though I'm not all that mechanical, I discovered that she had a loose battery cable, and so, when I tightened it, her problems disappeared. She told me after that that she was \"eternally grateful.\" \n\nWe talked at length during every visit, and I learned a lot about her \u2013 what she liked and didn't like: her favorite books, music, and movies, as an example. We had pretty similar preferences and interests, and for some reason, Tina thought that I had really good taste in most everything that was artistic. She also told me that she couldn't believe that I knew as much as I did about pieces of art, film, literature, and music that were created long before I was born.\n\nI specifically remember one conversation in which she expounded on her favorite book, Salinger's The Catcher in the Rye. I was kind of amazed, because it was my favorite book too, and so we went on to discuss it at length, each of us explaining the reasons we thought it was so great. \n\nAfter several weeks and only after she had started flirting with me, she would even talk, albeit vaguely, about her sex life and intimated to me that her husband was one randy motherfucker. Still, I got the impression that there was something that wasn't quite right about their relationship.\n\nI found out that she was originally a Southern girl who'd relocated to the North to go to college, and though I couldn't detect a drawl in her vocal patterns, I did notice that she always called me \"sweetie,\" or \"sweetheart,\" or \"honey\" or any other term of endearment that most Midwesterners that I knew reserved for family members or loved ones.\n\nAfter I got to know her a little better, she told me a bit about her marriage, confirming that I was right about her and her husband's strained relationship \u2013 that they'd been together for long time, but that despite the fact that she'd always hoped and planned to have children, he'd ignored the topic for years, until eventually nixing the idea altogether, and that now, she too had given up on the plan, reasoning that she was too old to be a mother.\n\nI could tell that it bothered her, and those were usually sad conversations, but as quickly as she brought up the subject, she would change the discussion to something more lighthearted, and soon she'd be back to laughing and smiling and flirting with me, causing the stiffness in my pants to return.\n\nThat same day that she first talked about her marriage, she asked me something curious about myself that got me wondering about her intentions. It came out of nowhere. \"Do you have a girlfriend, Evan?\" she asked in a much more timid manner than she usually addressed me.\n\n\"No, not now,\" I answered with embarrassment.\n\n\"Did you ever have a girlfriend?\" she continued probing.\n\n\"No, not really. I dated a few girls, but I was never really serious with any of them.\"\n\n\"Why not? You're a handsome guy,\" she said, smiling brightly.\n\nI blushed. She always managed to say something overtly complimentary to me, and though I always enjoyed that flattery, I didn't always know how to respond. For some reason, her compliments always seemed genuine, like she really meant what she said, and wasn't just bullshitting me. \n\n\"I didn't really like any of them, I guess. All the girls at my school seemed like they were really snobbish and superficial. I guess I wasn't interested in trying to elevate my own social status by dating someone that I didn't really like.\"\n\n\"It was their loss, Evan,\" she said smiling. I blushed again, and then I changed the subject somehow, but I thought about that conversation a lot after that. It seemed like Tina must have had some motive for asking me about my personal life. I knew she liked me, but it just seemed beyond the realm of possibility that she could like me in that way.\n\nPretty soon I figured out that I could waste an extra half hour in her office every time I had to take something to the post office, and then I started coming up with excuses to go see her. After the first two weeks of going there, when Tina flirted with me, I tried, however ineffectually, to flirt back. I had plenty of inspiration. \n\nTina Roche was about 5' 6\" tall, with long, platinum blonde hair with dark roots. Her soft, feathery tresses were accented with darker blonde highlights and were styled in a different way most every time I saw her. Sometimes, she wore her hair down, curling seductively about her shoulders, other times it was up, and occasionally she wore it in a bun or in braids. I could tell she was not a natural blonde, and was probably born a brunette, but I think that invention only made her appearance more appealing. \n\nThe first few times that I saw her, she always wore glasses, but I soon discovered that they were only for reading, and any time I was in her presence for more than a minute or two, she always removed them, fully revealing her beautiful face to me.\n\nShe had stunning blue/green eyes, with dark, arching eyebrows hovering over them, and high cheekbones, soft, pink lips, a delicate nose, and a perfect set of white teeth. She always wore dangling earrings, and usually added some matching necklace that was almost always grasped provocatively by the cleavage that she proudly displayed, regardless of the outfit that she wore.\n\nBut it was her body that had me transfixed. She possessed the classic hourglass figure, the kind that launched a thousand erections. Later, once we had started sleeping together, I learned that her natural measurements were 38E-23-34. Her tits were simply huge and perfectly round and didn't sag in the least, despite the fact that they were real! Regardless of the types of bras she wore, they just weren't able to contain her breasts, so those delicious fun bags spilled out of her tops for appreciative eyes like mine to admire. \n\nThen there was her ass. It was also round and full, but also tight without a hint of fat. And in between, she sported a slender, toned waist that proved that, despite her age \u2013 she was 42 and would turn 43 in the fall \u2013 she had clearly taken care of herself. \n\nBut one day completely changed our relationship, and it is there that my story really begins. About a month after that first visit, I carried four or five small packages into her office late on a Friday afternoon, but this time, I entered to a very different scene than what I had become accustomed to. Tina was hunched over her desk with her head down, and her massive tits cradled in her left arm on the desktop. In her right hand, she held her IPhone. On the desk next to it was a crumpled piece of paper. She was crying.\n\nBy this time, I always knocked on the door frame before I entered so that I knew she heard me when I came walking in. \"Tina, are you okay? What's wrong?\" I said in a concerned voice. She insisted that I call her \"Tina\" even though it took me at least two weeks to get comfortable enough not calling her \"Ms. Roche\" or \"ma'am\" and wasn't falling all over myself, stammering one excuse or another for using such polite mannerisms.\n\nAt first she didn't answer. I made another request, \"Tina, tell me what's wrong.\" I was worried about her. She had become not only my fantasy dream woman, but a friend that I liked for plenty of other reasons besides her stunning beauty. She was bright, quick-witted, and funny. Besides, she liked me.\n\nFinally, she lifted her head from her arm and smiled up at me bleakly with tears running down both cheeks, \"It's nothing, Evan. I guess I just get emotional at times.\" I knew her well enough by now to know that wasn't true.",
        "\"Come on, Tina, tell me what's wrong. I want to help. Please?\"\n\n\"Oh, sweetie, you are too good to find out about all of the nastiness in this world. I shouldn't involve you with my problems. Besides, I don't know why I'm sad now; I've suspected it for a long time.\"\n\n\"Suspected what?\" She looked at me really carefully for a moment trying to gauge whether or not she should share her private affairs with me. Then, almost magically, I could tell some idea had entered her head, and she smiled a completely different kind of smile. It was one of those grins that she gave me every time she said something provocative or flirtatious. Then, the grin disappeared and a look of anger swept her face.\n\n\"My husband. The bastard's having an affair!\"\n\n\"Are you sure? How do you know?\"\n\n\"Oh, I know! Last night, I looked at his phone while he was in the shower \u2013 he'd just got done fucking me, too, that bastard!\" She saw how I reacted to the word, and I knew she could tell that it conjured up a whole lot of unbelievable images in my mind. Jesus, I thought to myself, my dick is going to get a workout tonight! \n\n\"His phone beeped because he'd just gotten a text, so innocently enough, I read it. And then I realized that there was this whole thread of texts flying back and forth from him to the same number, and let's just say, they weren't discussing the weather.\"\n\nShe looked at me again to test my reaction, and it must have satisfied her, because she continued. \"So, I decided to write down that phone number, and I had been staring at this stupid piece of paper all day, until finally a half an hour ago, I got up the courage to call. Sure enough, the slut answered!\" \n\nI didn't say anything for a long time. We both just stared at each other, and I started to realize what Tina might have been thinking. Finally, I asked, \"What are you going to do?\"\n\nShe didn't even pause to answer. \"I'm gonna start doing the same thing that asshole has been doing for years! Two can play at this game!\"\n\nAgain, I didn't say anything for a long time. I think we both knew where this was headed. Finally, Tina spoke again, smiling really brightly, \"What are you doing tonight, sweetie?\"\n\n\"I don't know. I don't really have any plans.\"\n\n\"Would you like to meet me somewhere for a drink, Evan?\"\n\n\"I'm not old enough to drink in a bar. I'm only 18, remember?\"\n\nShe smiled again. This time, I can only described that smile with one word \u2013 it was \"devilish\" \u2013 the kind of smile that intimated that she was planning something that was immoral, depraved, and wicked and involved an 18 year-old kid. \n\n\"I had forgotten how young you are! Oh, that doesn't matter. I don't want to go to a bar, anyway.\"\n\n\"Where do you want to go?\" I asked sheepishly; my heart was suddenly beating really fast.\n\n\"Well, I'll tell you where I am not going \u2013 home!\" A look of defiance swept across Tina's beautiful face, and she immediately turned to look at her phone. She touched her screen, and seconds later she was leaving a voice message for her husband \u2013 \"You sick fuck! I know what you've been doing, you asshole, and suffice it say, I'm done with you! I hope you and that fuck slut of yours will be very happy together! Don't expect to see me again until I'm with my attorney. He'll let you know when you can clear your ass out of the house! So fuck off, asshole! Have a great fucking life!\" She hung up, and now her face was decorated with self-satisfaction.\n\nThen, she turned back to her computer monitor, and without saying anything, she typed in something. Within a minute, she turned back to her phone, and punched in some numbers. I heard someone answer on the other end of the line, and then Tina, in her most polite and refined voice began speaking. \"Yes, I would like to reserve a room for this evening.\" Pause. \"Yes, just one night.\" Pause. \"Yes, for two.\" Pause. \"I'm interested in a suite.\" Pause. \"Yes, the King suite would be perfect.\" Another pause. \"Yes, just a moment.\" Then, she reached into her purse, and pulled a credit card out of her wallet, and began reading the numbers to the person on the other end of the line. \n\nAfter a brief minute, she was finished, and hung up, staring up at me with an expectant smile. \"All right, Evan. I've cleared my dance card for you! How about you?\" \n\n\"Tina, are you sure...?\" I didn't finish my thought; she didn't let me.\n\n\"Oh, I'm absolutely positive! Surely, you know that I've been attracted to you, Evan. I didn't need an excuse, but now I have one \u2013 a really good one! Come on, I've booked the best room in the best hotel in town, sweetie. Just tell your parents, you're staying over at a friend's house tonight. I'll meet you at the Double Tree downtown at 7:00, Room 1121 \u2013 we'll get room service for dinner, and the best part, Evan? \u2013 my fuck of a husband is paying for the whole thing!\" she said, holding up the credit card that she had just used.\n\nTimidly, I shook my head in affirmation. I hadn't really thought about this. My dick wasn't letting me think, but even if it had, I would probably have come to the same conclusion. I mean, I did have some qualms about being with a married woman, but then I rationalized that Tina's fucking husband had abdicated his rights to his wife. How could any asshole cheat on her? Jesus, if you weren't satisfied with her, you not only didn't deserve her, but you were either crazy or a seriously fucked up dickhead! She had more to offer her husband than any woman I had ever seen before, so I quickly ditched my reservations on his account.\n\nNow my heart was really beating fast, and I was embarrassed. To distract myself from the awkwardness of the situation, I walked over to the postage machine without saying anything, and started putting the labels on the packages that I had brought, but before I was done, Tina came over to me, looked around to confirm that there no one was there that could see us, and then reached for my face, and grasping it with both of her hands, kissed me really passionately for a good minute, running her tongue all over the inside my mouth, and pushing her gigantic tits into my chest. \n\nWithout saying anything, she went back to her desk and sat down. I took that kiss as a promise of something that she was committed to fulfilling later that evening. I finished up doing what I was doing, then, I told Tina I would see her in a few hours, and I left with a huge erection that was clearly visible, pushing garishly against the front of my jeans. \n\nI was incredibly excited, but I was also really nervous. I had only had sex on two occasions prior to that night and both girls were classmates of mine that I had hooked up with at parties right before the end of my senior year. I had had opportunities prior to that time, but I waited until both the girls and I were 18 years old. I didn't want to get into trouble.\n\nNeither occasion went very well. I didn't really like either of the two and have no idea whether or not either one of them actually liked me. None of us exactly knew what the fuck we were doing. I managed to coax an orgasm out of each of the girls by eating their pussies, and I came both times, by fucking those same pussies, shooting my loads into rubbers after only two or three minutes in the missionary position. But on both occasions, everything was so awkward that I knew I would never attempt another t\u00eate-\u00e0-t\u00eate with either one of them. I was under the mistaken and disheartening impression that this was the way that sex would be for me for the rest of my pathetic, fucking life.\n\nThe bottom line was that I was really inexperienced, and I knew Tina was not, and those two facts had me worried that I would prove to be an inadequate lover, which was especially troubling for me considering that I had somehow fortuitously stumbled into a chance to be with someone as stunningly good-looking as Tina. \n\nI took my packages to the post office, and by that time, I was done with work for the week. I drove home and jumped into the shower, beating myself off envisioning the goddess that for some reason wanted to fuck me with the added hope that by doing so, I would last a little longer that night before blowing my load. Then, I changed into clean clothes. By the time I came downstairs to talk to my mother, she was just preparing to cook dinner.\n\n\"Hey mom, don't bother cooking for me, tonight. I'm headed over to Mark's. We're gonna watch the Twins game and a grab a pizza,\" I lied.\n\n\"Okay, honey! Thanks for letting me know. How was work today?\"\n\n\"Oh, it was fine. Nothing much happened,\" I lied again. \"Hey mom, I think I'm gonna spend the night at Mark's too. Is that okay? We're gonna drive over to Winona tomorrow, and we're gonna leave early. Mark wants to check out the dorms there.\"\n\n\"Okay,\" she smiled, nodding her head. \"Wow! It's hard to believe that in only a couple of months you'll both be leaving for school! That's exciting!\"\n\n\"Yeah, I guess. I suppose we'll find out. Alright, mom, I'm heading out now. I'll see you tomorrow.\"\n\n\"Bye, honey. Be good!\"\n\n\"I will,\" I promised \u2013 at the very least, I was going to try, maybe not in the way she expected, but I was definitely going to try.\n\nI drove downtown to the Double Tree, arriving just before 7:00. It was right on Broadway between 1st and 2nd Street Southeast. I parked in the Civic Center parking ramp just behind the hotel and walked across the street and around to the front entrance. Then, I entered a modern and fairly ritzy lobby \u2013 at least for Rochester \u2013 and found the elevator, taking it up to the 11th floor.\n\nWhen I located Room 1121, I knocked on the door. Tina answered, wearing one of the hotel's plush, terrycloth bathrobes. As soon as I was in the door, she kissed me again, just as she had done in her office. I could feel her hard nipples underneath the fabric of the robe, and I could tell that she was naked underneath. \n\n\"I've been waiting for you, Evan. I am so glad you came. I'm excited about spending the night with you! Are you excited, Evan? She looked me up and down, and I knew that I had another hard-on, and that the outline of my erection was visible through my jeans. Before I could answer, she added, \"You don't have to answer that question. I can see that you are!\"\n\n\"I'm kind of nervous,\" I said. \"You know a lot more about this than I do. I just hope I can satisfy you.\"\n\n\"Oh Evan, you have more than enough there to satisfy me! You'll just have to trust me on that one! Over the last month or so, I have gotten so turned on seeing you get hard whenever you came to visit me! I knew that you were trying to come up with excuses to come to my office, and I can't tell you how horny that made me! I think we're both going to enjoy seeing more of each other tonight! From that very first day, I could tell that you were a lot bigger than Justin!\" \n\nAnd suddenly, as soon as she had said his name, she started crying again. I reached for her, put my arms around her, and tried my best to console her, but feeling her body pressed up against mine only made me more excited, and I could feel my erection getting even stiffer.\n\nIt didn't take her long to change emotions again, and I think that the rock hard erection that was rubbing against her pubic mound might have had something to do with it. \"Fuck him,\" she said. \"This wasn't the first time I caught him. And I told him if I ever caught him again, it was over. Well, I caught him again, so as far as I am concerned, he ended this marriage, not me. I've been true to him for 20 years. The first time I ever even thought about cheating on him was when I met you, and that was only a few weeks ago.\"\n\nThat kind of stunned me and made me even more nervous. \"But are you sure, that I'm the... that I'm the right one, Tina? What if I can't...? What if I...?\" \n\nI was too embarrassed to even say the words in front of her, but then she put her finger to my lips to hush me, and said, \"Don't worry. I'm going show you everything that I like, Evan, and I can tell that you will be a wonderful and attentive lover. You're too good, not to be. Now, I opened some wine. If you would like a glass, help yourself. In the meantime, you get comfortable, and I am going to slip into the bathroom to get ready. I hope you like sexy lingerie! I know I do!\" Then, she gave me a quick, but meaningful kiss on the lips and disappeared into the bathroom.\n\nI didn't really know what to do. I took off my shoes and socks, poured myself a small glass of wine, and sat down on the sofa. I really didn't drink wine, but I think that the little bit of it that I had helped. I started to calm down, just a bit, though my erection didn't completely slacken. Every time it started to soften, I got another mental picture of Tina all dressed up for me, and I got hard all over again.\n\nAfter about 15 minutes, Tina emerged from the bathroom, and her entrance took my breath away. She looked even better than what I had been imagining for the past 15 minutes, and more than that, for the past month. She was wearing an emerald green, satin tapestry corset with shoulder straps. It laced up the back. \n\nFrom it, her massive tits bubbled over the top, exposing at least five or six inches of cleavage, and the corset cinched tightly around her narrow waist, showcasing her hourglass figure. It gave way to black garters that clipped to her black, thigh-high silk stockings. She was also wearing black Louis Vuitton pumps. Covering her pussy was a matching satin g-string, and the area between the corset and the g-string exposed a delicious two inches or so of her smooth pubic mound and shapely hips in the front and sides and her entire tight ass, except for the black string that ran up her ass crack. She had an unbelievably toned body, and I couldn't believe that she was almost 25 years older than I was. \n\nI nearly dropped my wine when she shimmied over to me and slid down next to me on the couch. Then, without saying anything, she turned to me, pushed her stupendous rack against me, and again took my face in her hands and kissed me even more passionately than the previous times. And then as her tongue explored my mouth, she slowly slid her right hand down my neck, unbuttoning my shirt as it traveled south until finally she reached my crotch, where, spying the outline of my cock pressed against my jeans, she started to rub the length of my erection. \n\n\"Oh sweetheart, I know that this promises to be one beautiful cock!\" she said in the most gloriously sexy voice. \"Oh my gosh! I am going to have fun with this thing!\" \n\nI was afraid I was going to cum in my pants. But somehow I didn't, and I figured out later exactly why. Tina had an almost sixth sense about her. She simply knew exactly how much stimulation my inexperienced cock could take, and when she knew I was getting too close to the edge, she backed off or found a new and equally sensual place to caress me.\n\nI figured out pretty early in the evening that if I focused my attention on pleasing Tina, I was less likely to blow my load prematurely. So, I began my own round of passionate kisses that blazed a trail from Tina's mouth to her ears, neck, shoulders, and eventually to her massive tits that were pushing their way out of her corset. I pulled the corset down so I could see more of them.\n\nHer tits were simply amazing! First and foremost, they were huge, the biggest tits I had ever seen \u2013 certainly in real life, but even in the hundreds of pornographic magazines I had looked at \u2013 the Bible to most American teenage boys like me. \n\nAnd her areolas! I should confess up front that big areolas turn me on like nothing else in this world, the bigger the better, in my humble opinion, and Tina's were enormous, three or perhaps even four inches in diameter. They were so big that I couldn't begin to wrap my lips around one. They were also an indescribable color \u2013 sort of the shade of pencil erasers, though admittedly that is an imprecise depiction \u2013 and they contrasted so perfectly with the two shades of skin that she displayed so shamelessly \u2013 the creamy pale triangles of flesh that must have been covered by her bikini top when she sunbathed, and the darker bronze tan that she sported on most of the rest of her flawless body. \n\nFinally, her areolas framed her excited nipples \u2013 hard, round tips that poked provocatively from the centers of each sensuous, pink circle, and hardened even further when I rolled them back and forth between my fingers. When I did, Tina groaned in appreciation.\n\nSoon, I pulled her tits completely out of their satin enclosures, rolling the cups underneath those gargantuan globes so that their beauty was enhanced rather than obscured by her sexy corset, and using my mouth in ways that I was discovering in the moment, I licked, sucked, and gently bit every centimeter of her most delectable attribute. She continued to moan her approval, and from that, along with her heavy breathing, I was gaining confidence as the light from the early evening's prairie sunset began pouring through the 11th floor windows.\n\nDuring the next half hour together on the couch, Tina unzipped my fly and soon had my cock out of my pants, stroking me with an insistent and experienced hand. \"Oh Evan, this really is a big, beautiful cock!\" she purred. Then, she began by first cupping my balls in one hand, and then running a single finger, or even just a fingernail up and down the length of my throbbing member with the other, before quite suddenly, gripping me tightly around my base before earnestly jacking me off for a minute or two until I was again just on the verge of blowing my load. But every time she had me close to orgasming, she would change things up again, and I would regain control.\n\nOne time when I was sure that my first rope was about to erupt and started to groan involuntarily, she slid two fingers past my balls and pressing deliberately on the hard mound between my scrotum and my asshole \u2013 the sensitive erogenous zone that, I would come to learn later, was my perineum \u2013 and pushing firmly with her fingers for 10 seconds or so, she soon averted the impending explosion.\n\nRight after that near disaster, she whispered in my ear, \"Honey, let's retire to the boudoir, so I can suck your sweet cock in comfort! I think I might have a big surprise in store for you!\"\n\nAnd so as I stood up and Tina pulled my jeans and boxer briefs off me, and then as she kissed me again with great passion, she grasped me with a vice-like grip around the base of my stiff cock again and led me to the King-sized bed. She pulled back the covers with one hand and pushed me down on my back with the other, and then she crawled between my splayed legs and took me in her mouth. \n\n\"Jesus Christ!\" I gasped involuntarily. It felt so good when her soft lips wrapped around my cockhead that I almost came on the spot. Several girls had taken me in their mouths before that night, but none of them knew what the hell they were doing, and so this was a sensation unlike anything I had experienced before. And it only got better!\n\nSoon, Tina started licking with the very tip of her tongue, all the way from my balls, up the length of my stiffness, until she reached the backside of my cockhead, where she began concentrating her tonguing. I soon discovered that she was focused on the most sensitive part of my cock, and even though she was barely touching me, I was so close to erupting that I almost couldn't stand it.\n\nNext, she dropped her head farther, and began taking turns sucking my balls into her mouth, carefully rolling each around inside her warm orifice and running her tongue over my scrotum.\n\nAnd then she went back to wrapping her lips around my bulbous head again, only this time Tina started sliding up and down my length while she again grasped me tightly around the base of my dick. Then, she began adding a little bit more suction on each stroke, and expanding the length of the strokes as well, until she was taking perhaps two-thirds of my stiffness into her mouth. She would slide her soft lips down my shaft until the path they were traveling would be blocked by her fist. I was going nuts. Now, I was writhing in ecstasy, moving my legs and my hips involuntarily, and grabbing handfuls of the sheets, trying everything in my power to hold off my climax.",
        "Then, while she continued to grasp me around my root, Tina pulled her head off my cock, and looked up at me. She spoke for the first time since we'd moved to the bed. \"Sweetie, stop fighting it! I want you to cum!\"\n\n\"But shouldn't I make you cum first? I thought that was what I was supposed to do,\" I said naively. I had conjured in my head a set of hard, fast rules about how sex was supposed to go down, and the first of those rules was that the woman was supposed to cum first \u2013 it was traditional etiquette I thought, you know, \"ladies first.\" In addition, I believed that it was my responsibility to make my partner cum several times for each climax that I reached, though in my other two consummated sessions with partners I had failed miserably to accomplish that goal, in part because I came so quickly and in part because everything about those sessions was so wrong.\n\n\"Honey, we've got all night, and you have such a beautiful cock! Trust me, you're going to make me cum so many times with this big, beautiful thing that you have nothing to worry about! Don't you understand how hot it's going to make me to see you shoot your cum? Look, I'm going to take you into my throat now, and when I do, you're not going to be able to hold off your climax anyway, and I don't want you to, sweetie! I want to see what kind of a load you have for me! And I want to taste you. Okay honey? So just relax and let go. Once I make you cum, you can worry about me. Okay sweetheart?\"\n\n\"Okay,\" I said. This was apparently \"the big surprise\" she had alluded to earlier, and she was right, there was no way that I could have held myself back once she started deep throating me. Tina dropped her head back onto to my cockhead, as she continued to stare up at me while she went back to sucking me, and seeing her beautiful blue/green eyes boring into me while my cock disappeared into her mouth and then reappeared again glazed in her saliva was the sexiest thing in the world. Pornography was ruined for me that night because nothing else in my brief life has ever come anywhere close to that level of eroticism.\n\nAnd then she started deep throating me! \"Oh my god,\" I grunted the first time my cockhead slid into the deep recesses of her throat. Now, each stroke Tina gained a little more ground until soon my entire cock was disappearing into her mouth on each time. Her lips were now brushing softly against my pubic hair, and instantly, I was back to writhing uncontrollably and moaning loudly, \"Oh Jesus! Fuck! Oh my god!\" \n\nWhen I moaned so long and so loudly, Tina pulled my cock from her throat momentarily and that same devilish smile that I'd seen that afternoon reappeared on her face. I looked down to see her drooling over the biggest erection that I had ever had, as it bulged obscenely from her fist, and then she growled again seductively. \"All right, my sweet baby, now I'm gonna make you cum! Don't hold back!\"\n\nAnd then she went back to her work with talent and skill that could only be matched by her deliberateness and purpose, and her pace increased as she took all of me over and over again deep into her throat, until I knew I had reached the point of no return. I felt my balls tighten, and the cum began surging up my erection.\n\nI threw my head back. \"Oh my god!\" I screamed, far more loudly than I intended, \"I'm cumming! Oh fuck, I'm cumming! Aaaaaaaaaaaaaaagggggggggggggghhhhhhhhhhhhhh!\"\n\nThen, I looked down, and I saw Tina release my cock from her mouth, and as she began jacking me off vigorously with her right hand, my first rope shot with incredible force all the way up the side of her head, coating her cheek, temple, and hair with my jism. It was so powerful that I saw it shoot three feet past her head and fall like a summer shower on the edge of the bed.\n\nShe tried to catch my next offering in her mouth, but it came too fast and too forcefully for her to accept it all, and striking the edge of her mouth, it dripped lewdly down the side of her chin and onto to my pubic mound. Then, she pulled me back into her mouth, where I shot seven, eight, nine or ten more ropes \u2013 I couldn't even count them after awhile because they were coming so frequently and I was lost in such utter ecstasy that I'm not even sure that I understood what was happening.\n\nWhen I was just about done pulsing, Tina opened her mouth and a huge gob of my seed rolled garishly from her tongue and oozed down her bottom lip to join the puddle that was spreading across my trimmed pubic bush and lower stomach. Then, she closed her mouth again, and I saw her swallow. She took me back into her lips again, until two or three more smaller spasms flooded her warm mouth. Then, she swallowed again.\n\nFinally, she opened her mouth a final time to show me that it was all gone, and I watched her lick the last remnants of my seed from the entire length of my shaft and the sensitive head of my still spasming manhood. \n\nTina straddled my legs and then she crawled up until she reached my hips and leaned in and kissed me with an incredible passion that nearly took my breath away. As our lips met, I could taste my ejaculate. She kissed me all over my face, until she rolled to the side and lay next to me, snuggling against my overheated flesh. \n\nThen, she spoke, \"Sweetie, I want you to know that was the best cumshot I've ever seen! And sweetheart, your cum tastes amazing! Who knew that the best cock I've ever touched would belong to an 18 year-old! Now, I want you to make love to me, Evan. I know you can make me cum with your big, beautiful cock.\"\n\nI wasn't sure about that. I didn't know if I could stay hard. So, I had another idea. Maybe it was presumptuous of me, because I really did want to be inside her, but I needed a little time to recover. So I made the first of several requests that night. \"Tina? Before we make love, can I eat your pussy? It's the one thing I think I might be pretty good at, and you were so amazing with your mouth that I'd like to reciprocate, if that's okay.\"\n\n\"Oh, sweetie,\" she laughed. \"I just can't get over how polite you are! You don't have to ask, but, sweetheart, I would just love it if you would eat my pussy! I just know you are going to be so good with your mouth. Eat my pussy until I cum, honey!\"\n\nSo I got to my knees, spread Tina's legs, and crawled between them. Then, with great anticipation, I reached down and pulled that satin g-string around her shapely hips, down her legs and off. What lay before me started to make me hard all over again, and sensing that the blood was rushing to my cock again, Tina reached forward to grasp my shaft. But this time, I didn't let her.\n\nI bent over and spreading her legs even wider, I went down on that sexy, mature pussy. She was waxed clean all around her vulva, except for a tiny tuft of light brown hair a half inch above her clit hood. It was no more than an inch long, and perhaps only a half an inch wide, and it was already moist and glistening. \n\nAnd then there was her pussy! She was already so excited that her lips were gaping open lewdly, and I could see copious amounts of arousal leaking from her slit and down her thighs. She had prominent inner and outer lips that seemed that they were made to envelop a stiff cock, and her inner pussy was a shade that I had never seen before, a bright, almost Day-Glo pink.\n\nI placed my hands on her inner thighs and pushed down, spreading them even farther apart, and then I lowered my face to her gaping pussy. When I ran my tongue from the bottom of her slit and up the two and half inches to the bottom of her tiny bush, she let loose with a loud, untamed growl \"Uuuuuuuugggggggghhhhhhhh! Oh fuck, baby! Oh my god, that feels good!\"\n\nI spent a good five minutes using just the tip of my tongue to run laps up and down her overheated slit, and as soon as I started, she was arching her hips to accept more and more contact from the fleshy dart that was wiggling back and forth in my mouth. But I was teasing her, so despite Tina's urgent writhing and grinding against my face, I was holding back in hopes that I could lead her to an even bigger climax.\n\nI was no longer a novice, and I guessed that Tina now sensed that my confidence was growing by leaps and bounds. So, I soon decided to add my fingers to the mix. I ran my index finger up and down the same trail that my tongue had been blazing only a minute before, glazing it with her juices, and then I inserted it into her dripping hole, and turning my hand so that my palm was facing up, I began caressing her clit hood with my thumb. \n\nThe moment I touched her pink knob, she started bucking involuntarily, \"Oh my god, sweetheart, you're gonna make me cum! Oh, don't stop. Don't stop!\" Encouraged as I was, I added my middle finger to her seething pussy, and while I continued applying caresses with my thumb to her hood and the emerging button that it formerly concealed, I began rubbing the inside of her creamy canal with my two fingers. I had no idea that I had struck pay dirt, but Tina's screaming retort taught me a new lesson about the female anatomy, \"Oh my god, keep rubbing my G-spot! Keep rubbing my G-spot! Don't stop! Don't stop! Please don't stop!\"\n\nI was always taught to obey my elders, and so I continued my enthusiastic fingering, but now I added a new twist. I dropped my mouth back to her frothy chasm, and wrapping my lips around her clit hood, I sucked it into my mouth with a newfound urgency. Tina needed to cum hard, I decided, and she needed to cum immediately.\n\nOnce it was inside my mouth, I found her clitoris with my tongue, which I began flicking back and forth across her button as fast as I could wiggle it, and soon I felt Tina grab my head with both of her hands, and her sex began to convulse around my probing fingers, and then she screamed, loudly and fervently, \"Ohmagod! Ohmagod! Ohmagod! Aahh! Aaahhh! Aaaahhhh! Aaaaahhhhh! I'm cumming! I'm cumming! Ohmagod, I'm cumming so hhhhhhaaaaaarrrrrrdddddd!\" She kept screaming, over and over again, but her mouth could no longer form words and the guttural sounds that escaped her were almost feral in nature, \"ugh... ah... cuma... ughh... ohh... ahh... oohhh... cummaa... ughhh... aahhh... oohhh... ughhhh... aaahhh... cuma... ccuummaa!\" \n\nAnd then it hit me! Her pussy just exploded, spraying fluids everywhere, bathing my fingers, my face, and soon my entire head with her juices! The waves of pleasure kept crashing through her repetitively for the next two minutes, and when I finally slowed my fingering and released her clit from my mouth's demanding hold, Tina was lost in a different world, somewhere almost dreamlike and surreal. She was whimpering, mewling like a wounded beast, eyes closed, her huge tits heaving, and almost every muscle in her body spasming involuntarily.\n\nWhen I pulled my head away from her sex, her cum was dripping from my face and my hair, and the bed was drenched. She lay there for the longest time, as I knelt over her now, my body upright, my gaudy erection protruding conspicuously as I waited for her to open her eyes. She didn't, not for the longest time, and now I was afraid, afraid that maybe I had hurt her somehow, not knowledgeable or experienced enough to determine whether I'd been very good or very bad.\n\nFinally, I figured I better ask, \"Tina, I didn't hurt you, did I? Are you okay?\" \n\nFirst, she opened her sympathetic eyes, and she was crying, really crying, and again I was sure that I had hurt her, and then those eyes morphed into a smile of gratitude, and she stopped sobbing and pulled my disheveled face to hers, and she kissed me so hard and so ardently for so long that I almost couldn't breathe. And now she could taste her juices on my lips. \n\nFinally, she spoke, \"Evan, sweetie, you are incredible! Sweetheart, I've had a lot of lovers, quite a few before I married that man, but, honey, none of them can handle a pussy like you can, certainly not him! Where did you learn that? How do you do that? I've never cum like that before! I've never lost control like that! And look at you, oh, I erupted all over you! I'm so sorry, sweetie!\" At first, she seemed like she felt really bad about it, but then she stopped talking long enough to realize that I was rock hard again, that her explosive orgasm had gotten me really excited, and so she started touching me, stroking me, readying me for her pussy.\n\nI had spent enough time trying to fuck high school girls that I understood the importance of having a supply of rubbers on hand for the right moments, and though Tina was a very different kind of woman than those silly, superficial, status-seeking snobs, I knew I had to at least address the issue of birth control with her. It wasn't like Tina was menopausal, and I had no idea how she and her husband handled things. So, I just asked the question bluntly, \"Tina, should I put on a rubber? I've got one in my jeans.\"\n\nShe smiled at me with understanding and empathy again, \"Oh honey, you don't have to worry about that. I'm on the pill. But, sweetie, that's so considerate of you to ask. I don't think most guys would even have thought of it, at least in the moment. Certainly not most guys your age. You're a real gentleman, Evan; you know that, a real gentleman!\" \n\nI smiled back wanly. I didn't feel like a gentleman, considering that I was about to make love to another man's wife. But then I looked at Tina's face, still bearing the remnants of the last of my cum; at her amazing tits, bursting out of that corset; and at her trim bush and pussy, awash in her own juices and framed by her garters and stockings; and I didn't care anymore. I just wanted to be inside this incredible woman.\n\nSo, with that practicality resolved, I knelt between her legs, and grasping my cock firmly in my hand, I began rubbing it up and down her slippery lips, wetting it with her juices until I was just about ready to enter her. Before I could, Tina's sensual voice began urging me on, \"Come on, sweetie, make love to me; make sweet, passionate love to me!\" \n\nAnd so I pushed my way into her, and she moaned loudly. The feeling of her pussy caressing my throbbing cock was indescribable. Then, I reached my arms out in front of me on the bed, and supporting myself on my knees and those outstretched arms, I looked down as the fading evening light bore witness to the stunning beauty of the mature woman that lie beneath me, my eight inches penetrating her sex. I simply could not believe this was happening to me.\n\nHer tits were so large and her nipples so excited and engorged that they brushed my chest on nearly every thrust. On each stroke, my cock emerged from her pussy slick with her arousal, and Tina's face was painted with an expression of unbridled lust. \n\nI went really slowly at first, afraid that I would come too soon, but also hopeful that I could give Tina what she had requested \u2013 \"sweet, passionate\" lovemaking. And as I began to build a rhythm, thrusting in and out of her wetness, I was sure I would soon be over the edge. \n\nYet, every time I was close, Tina grabbed me by my ass cheeks and just held me still with my cock buried to the hilt inside her, until the feeling passed. She knew almost instinctively when to release me, and then I began thrusting again, fully impaling her with my thickness. As she held me there a second time, she began to flex her pussy muscles, gripping and clamping her velvety canal around my erection every few seconds. This delicious cat and mouse game went on for a long, long time, far longer than I thought I could last with a woman as undeniably sexy as Tina.\n\nThen, after a good 20 minutes of intercourse, my fucking grew more urgent. I wanted to cum, and I was no longer fearful of disappointing Tina with a premature climax. But when I increased to a frenetic pace and long, deep thrusts that saw me withdraw everything except my engorged cockhead before plunging back in until my root was crashing against her pussy lips, I had no clue that Tina was so close to reaching her own peak.\n\nSo, I was both surprised and delighted when she suddenly announced, \"Ohmagod, I'm cumming again. Oh sweetie, I'm cumming again.\" And as another wave of pleasure crashed through her, she was screaming long and loud, \"Aaahhh, aaaahhhh, aaaaahhhh,\" and then I realized I was only seconds behind her.\n\n\"Oh, ohh, oohh, oohhh! I'm really close! I think I'm gonna cum again too!\" I announced, and even though Tina was still riding her own orgasmic swell, she put her own pleasure aside, pulled her legs to her chest, and urged me to deposit my seed deep into her waiting sex, \"Oh, I want you to cum in my pussy, sweetie! I want you to shoot a big load in my pussy!\" she screamed. And so, as I continued thrusting as deeply as I could, I felt that familiar feeling \u2013 my balls were tightening, and I could feel the cum surging up my throbbing cock. \n\nAnd then I began spurting a dozen or so ropes into her tight hole, coating her insides with my thick spunk, and when I did, Tina became even more animated. First, she reached for my balls, cupping them with her hands and screaming, \"Oh my god, honey, I can feel your cum leaving your balls! Oh sweetie, now I can feel you cumming inside me! Oh, keep shooting your load, sweetheart! Keep shooting your cum! Keep shooting your hot cum deep in my pussy!\" \n\nAfter a minute or so, when my spasms finally abated, I collapsed on top of Tina, with my cock still inside her, and coupled together as we were, we both rolled onto our sides, kissing each other with tremendous enthusiasm until we each caught our breath.\n\nThen, Tina held my face between her hands and staring deeply into my eyes, she said sensually, \"You, Evan Hughes, are an amazing lover. Don't you ever, ever, ever underestimate yourself again! Any woman would be lucky to share her bed with you!\" \n\nI was a little embarrassed, but who wouldn't be proud to hear a beautiful woman tell you that? From that moment forward, my confidence was sky high, and I knew that I could make love to this woman all night long. \n\nBut suddenly, I realized how hungry I was, and so when Tina smiled and said, \"Let's get cleaned up, and I'll order us room service,\" I thought I had died and gone to heaven. I don't know how she did it, but Tina always seemed to know exactly what I needed and when I needed it.\n\nFrom the window that faced west, I could see the sun setting over downtown Rochester, bathing the city in its orange glow. And when Tina finished cleaning herself up in the bathroom and had donned that terrycloth bathrobe again, she called room service and ordered two New York Strip steak dinners. It was uncanny, because I didn't look at the room service menu until she had already placed the order, but if I had, that would have been exactly what I would have ordered. She even asked that both steaks be cooked medium-rare, exactly as I liked mine.\n\nThen, I cleaned up in the bathroom as well and put my clothes back on, and only a few minutes after I joined her on the couch to hold her in my arms and pepper her face with kisses, the bellboy knocked at the door to deliver our dinners. Tina got up to answer.\n\nThank god, I didn't know the guy. He was about my age, and I suspected that he had probably gone to one of the rival high schools across town, which seemed absolutely appropriate as I could tell he was staring at me in haughty rivalry, trying to figure out why a kid my age was sharing a hotel room with an older woman as hot as Tina. \n\nI thought for a moment that maybe he regarded Tina as a prostitute, but when she signed for the meal and gave him a handsome tip, I figured that possibility had been totally dispelled. I smiled with smug self-satisfaction as he left, realizing that he knew that I was fucking this hot, sexy woman. \n\nWe sat down at the small dining table, sharing the rest of the bottle of wine as we ate our dinners voraciously. When we finished eating, Tina got up from the table, removed the bathrobe, again revealing her stunning lingerie, and carrying her glass of wine with her to the couch, she sat down and crossed her legs. \"Come here, Evan,\" she beckoned me.",
        "Carrying my own glass of wine, I joined her. Holding her wine glass in her left hand, she reached her right hand to my cheek and began to caress my face gently, affectionately. Then, she stared into my eyes with her own piercing orbs and began talking in this incredibly serious voice, more serious than I had ever heard her speak before.\n\n\"Evan, I hope I'm not taking advantage of you, sweetie, but I really want... \u2013 no, no, that's not the right word \u2013 I really need you tonight. I need you to keep making love to me. I haven't made love to a man for whom I have actually had feelings for a long, long time. Evan, I know there are a lot of differences between us, especially our ages, and I really do care for you. I hope you know that. But tonight, I just need a man to convince me that I'm still a desirable woman, that someone would still want me, would still desire me passionately. I'm hoping you want to be that man. If you don't, I guess I understand.\"\n\nI was stunned. How was it possible that in a mere two hours our roles had been so profoundly reversed? I had entered that hotel room that night about as insecure as a person could be about what I was capable of doing, at least about what she wanted me to do. I was the inexperienced one. Tina was more than twice my age and had nearly 25 years more sexual experience than I did, not to mention the fact that she was stunningly beautiful. And now she was telling me that she was insecure? About her desirability? That she needed me to reassure her? That she needed me to convince her that I wanted her?\n\n\"Tina,\" I said, shaking my head like she was some ignorant school kid and I was her older, wiser teacher, \"How could you possibly not see yourself for who you really are? Jesus, Tina, what the hell is wrong with you?\" I was shaking my head again; I was incredulous. I think she may even have thought for a moment that I was mad at her.\n\n\"You're the most beautiful woman I've ever seen! How can you not know that? If you think that you have to talk me into sleeping with you, you must be insane! I've known you for, what, a month? And do you know what I have done every day of that month \u2013 at least once, usually twice or maybe even three or four times every one of those days?\" I waited for her to respond. I wanted to hear her ask me.\n\n\"No, what have you done, sweetheart?\" She asked innocently. She seemed really confused.\n\n\"I've masturbated every single day thinking about you, imagining you naked, pretending that I was making love to you, and dreaming that you wanted me to make love to you. Jesus, Tina, considering that, why in God's name would anybody, least of all me, have to convince you that you're desirable? That I would want you? That I'm passionate about being with you?\" \n\n\"Tina, I like you. I really, really like you for all of your incredible qualities \u2013 you're intelligent; you're funny; you're kind and loving, but, Tina, right now, more than all of those things, your beauty and your sex appeal just blow me away. I'm in awe of them. They overwhelm me.\" \n\n\"All I want to do right now is to make love to you, because I keep thinking that in a minute or two, I'm going to wake up and realize that I'm dreaming. Wake up with my stiff dick in my hand, and realize it's just like the hundred other times that I beat myself silly fantasizing about you. Because how else can I explain why someone as fucking gorgeous as you would want to be with a stupid kid like me?\"\n\nShe started crying. She couldn't stop. And then while the tears were still falling, she took my face in both of her hands and for the next half hour, she just kissed me, over and over and over again all over my face. They weren't kisses of passion. They weren't a prelude to sex. Those kisses were just love \u2013 pure, unadulterated love \u2013 the essence, the extract, the concentrate of tender affection. She was telling me that she was falling in love with me, and as immature and inexperienced as I was, I somehow understood her meaning without her having to say the words.\n\nAnd then finally the tears stopped and she spoke again, smiling at me with a smile that I had never before seen from her. It was a smile of complete acceptance and happiness, \"Mr. Hughes, do you still want to make love to me? 'Cause I'm feeling really sexy right now, and I would like you to take me to that bed over there and prove everything you just said to me.\"\n\n\"Well, Miss Tina, the alternative is me jacking myself off again! So, let me think about those choices for just a moment!\" I paused for a second. \"Yeah, I think I'll choose the lovemaking,\" I said sarcastically.\n\nShe smiled, and then we stood up, and Tina removed my clothes again and then dropped to her knees to take me into her mouth once more. She wrapped her expert lips around my cockhead, then began sliding them progressively farther up and down my shaft, until soon she was taking me into her throat again. When she had me rock hard, she stood up and grasping me tightly around the base of my manhood, she led me back over to the bed.\n\nBut instead of letting Tina guide me, I took control now. I wanted to be inside her again, but first, I wanted to make her cum, and by now, I knew that the fastest way to make that happen was to eat her greedy pussy. But I also wanted to keep myself hard so that once she did cum, I could enter her immediately. \n\nSo, I pushed her down on her back, and then I crawled on top of her facing the opposite direction, so that we were soon interlocked in an erotic 69 position. I spread Tina's legs wide, and lowered my face to her expectant pussy, and as I did, she took me back into her sensual mouth.\n\nShe concentrated initially on just my glans, first encircling its circumference with slow licks from the flat of her tongue. Then, she took it in her mouth, sucking first the head, and slowly expanding her strokes up and down my length, until after a minute or two she had more than half of my thickness in her mouth. Then, she added her fist to the root of my member, and she continued to slide her lips up and down my shaft until, as she had done before, their path was blocked by her fist gripping me incredibly tightly around my base.\n\nThen, she took me into her throat. Now that I had already explored that previously uncharted territory, I became more aggressive. It wasn't the lovemaking that Tina said she wanted, but I sensed that it was turning her on tremendously when I started thrusting into the deep recesses of her gullet. I looked back to see my engorged dick disappearing in Tina's mouth, as her lips brushed my pubic hair. Her deep throat was producing incredibly responsive sensations from my excited fuck stick, but I wasn't afraid of climaxing too soon anymore, so I was able to concentrate on pleasing Tina.\n\nI had begun tongue-fucking her kitty with deep thrusts from my fleshy mouth organ. Now, I used my hands to spread her outer lips apart so that I could gain deeper entry into her oversaturated sex. But I knew it was her clit that really wanted my attention, so for the second time in several hours, I sucked her entire clit hood into my mouth, and Tina began to buck wildly against my urgent suction. \n\nMy tongue soon found her sensitive knob, and while I continued thrusting my thick pole in and out of her throat, I began lashing her clitoris while using my mouth to apply even more suction to her clit hood. Tina's orgasm came quickly and powerfully. When I felt her spasms begin, I slipped two fingers into her sex, and her pussy began convulsing around my digits, and from deep within her, I could feel her moans and groans vibrating through my pulsing cock.\n\nNow, we could fuck. So, when Tina's quaking subsided, I climbed off of her and lifting her by her hips, I flipped her over onto her knees. Then, I mounted her from behind. Her pussy was creamy from the orgasm that she had just had, and so my cock slipped right in, and because I wasn't worried about helping Tina to reach another climax, I started pounding away from the get-go. \n\nI grabbed her by her hips and marveled at how slender they were for a woman her age and build. Considering the size her tits, her hips were unbelievably compact and her ass was incredibly taut. It was one of those asses that you could, proverbially, bounce a quarter off of!\n\nThe bed faced a large mirror, and now I realized that at the angle that we were situated, I could see Tina's reflection in it. Her face was awash in an expression of all-consuming desire, and I became incredibly turned on by watching her huge tits sway and bounce as my cock plunged in and out of her seething hole.\n\nAfter a couple of minutes of hard thrusting, I wanted to gain a little more leverage, so I grasped ahold of the bottom of Tina's corset, right where it connected to her garters, and slammed away even harder. My thighs were slapping forcefully against her tight ass, creating loud spanking sounds that were soon drowned out by a new round of sensual cries that matched the rhythm of my pounding, \"Oh...! Oh...! Oh...! Oh...! Oh...! Oh...! Oh...! Oh yes...! Oh my...! Oh yes...! My god...! Yes...! Oh yes...! Oh yes...! Oh my...! Oh my...! Oh my....! Oh my god...! Yes...! Jesus...!\"\n\nAnd then when I looked down to watch my stiffness penetrating her leaking hole, I saw her tight, little asshole poised seductively above it, and for some reason that I still don't understand, I thought that it was beckoning me, and despite my hesitancy to venture where I was not wanted, I couldn't resist its allure. I lifted my left hand from Tina's corset and placed it palm down on her ass, just above her snug backdoor. Then, I began running my thumb back and forth over that little starfish, rubbing that least understood of erogenous zones, not knowing how my massage would be received. I couldn't believe I was doing this. I certainly had never done anything like it before, but I was even more amazed by Tina's response. \n\n\"Yes! Yes! Yes! Oh, I love the way that feels! Don't stop! Don't stop! Keep fingering my ass; you're gonna make me cum again! Don't stop! Don't stop Ohmagod! Ohmagod! Keep fucking me! Keep touching me!\" So, I kept doing what I was doing, and I suppose it was inevitable, but now I was really close myself.\n\nTina reached her peak before I did, and seconds later, she was screaming even louder, \"Ohmagod! Ohmagod! I'm cumming! I'm cumming! Jesus, fuck! I'm cumming again, and then it hit her, and I could feel her pussy convulsing around my cock, and her asshole spasming beneath my thumb, and she screamed again, \"Fffffffuuuuuuuccccccckkkkkkk!\"\n\nAnd then she slumped forward onto her huge tits, and in the mirror, I could see them splayed astride her chest on the bed, framing her beautiful face, and the look of ecstasy on it sent me over the edge. Now, it was my turn to scream my release, \"Oh fuck! Yes! Yes! Oh, I'm cumming! I'm cumming!\"\n\nI don't know why I did it, but at that moment I pulled out of Tina's dripping hole, and I started stroking my thick dick as I began spurting my load all over the back of her corset. My load wasn't as big as my earlier output, and my climax didn't last as long because, quite frankly, I wasn't used to having so many orgasms in such a short span of time, but it was amazing nonetheless, and when I was done shooting, I collapsed on top of Tina, panting like I had just finished a marathon.\n\nAnd that was probably a pretty good way of describing the rest of that night. We would rest for fifteen or twenty minutes, and then we were back to fucking again. Tina kept cumming, again and again and again, but from that point forward, my climaxes couldn't keep up with hers. \n\nWe fucked in every position I had ever heard off and a whole bunch that I hadn't. I kept asking Tina if I could try different things, and she never denied a single appeal. Just a few hours before dawn, I made one final request \u2013 I just had to cum between those amazing tits. \n\nSo, I went into the bathroom to find some body lotion, and when Tina lay back against the bed, I squirted a whole lot of it in the valley between her tits. Then, I straddled her chest, as she wrapped those massive globes around my stiffness. It took me awhile, because I had cum so many times that night, but it was incredibly sexy. \n\nSo as I looked down on the erotic scene below as it played out in the moonlight that was beaming through the window high above the city \u2013 Tina's beautiful, smiling face, urging me on, as she pushed her huge breasts together from the sides, leaving those gargantuan areolas exposed, while I thrust repeatedly in the deep tunnel that she making with her tits \u2013 and the irony of it all struck me. \n\nWhen that night began, I had been so afraid of cumming too soon, and now I was wearing myself out trying to squeeze another orgasm out of my overworked dick. The end result was that I have never again had a premature ejaculation.\n\nAbout 3:30 in the morning, I unloaded one last time, shooting what was left of my seed on Tina's chin, neck, and chest, and then I was done. We kissed for five or ten minutes, and I could smell my semen. Then, I brought her a warm, wet washcloth to clean herself up, and when she was done, she lovingly wiped my dick and balls with it. We fell asleep in each other's arms and slept until just before check-out time.\n\nTina told me that she was going to book the room for another night, and asked me if I wanted to spend it with her, but I figured that my parents expected me home that afternoon, and I was afraid that they would call Mark's house looking for me if I didn't get home soon. So, reluctantly, I declined her offer. \n\nOn the following Monday, I stopped by Tina's office only to find that she had taken a personal day. I found out later that on that Monday morning she had hired an attorney, and began the legal process of filing for divorce from her husband. But apparently, the attorney told her that, at least initially, it would be she, not he that needed to find another place to live. So on that Monday afternoon, she went back to her house to get her clothes and other personal belongings while her husband was at work, and then she found a small, furnished apartment on the north side of town to move into. It was a ground level apartment, which, she said, made it easier to move her personal belongings, though she didn't have all that many.\n\nOver the next month and a half, I joined her at that apartment whenever I could concoct some kind of scheme to explain to my parents why I wasn't coming home for the night. Our lovemaking became kind of second nature to us over that period of time, and we became more and more comfortable around each other. I was too young to really know what love was, but I suppose that if I had the capacity to fall in love at so young an age, that was exactly what I was doing. And I think that Tina was in falling in love with me too.\n\nBut one Saturday morning, after another lovemaking session at her apartment, everything came crashing down in the blink of an eye. After we had gotten up around 10:00 or 10:30, and had coffee and read the newspaper, I got in the shower to clean up while Tina made us breakfast. It was a meal that we would never eat. Just as I was about to climb out of the shower, I heard the commotion.\n\nA livid, male voice was banging away on the locked apartment door and screaming angrily though it, \"I fucking know he's in there, Tina! Open the fucking door, before I break it down!\" It wasn't difficult to understand that I was the \"he\" that Tina's husband was referencing, and I knew that I had better think fast and think smart or I might be in a lot of trouble. I quickly threw on my clothes, but I stayed in the bathroom for the moment, trying to decide what I should do and thinking that, at least for the moment, that bathroom might be the safest place for me.\n\nI could hear Tina responding with her own fury, \"Get the fuck out of here, Justin, or I'll call the police! Nothing would give me more pleasure than to see them haul you away, you sniveling coward! Let's not forget who ended our pathetic, fucking marriage, you piece of shit. Besides, I'm not afraid of you, so just get the fuck out of here!\" \n\nWhen I heard what Tina had said, I felt an incredible sense of shame blanket me. Why the hell was I cowering in a bathroom, when she was brave enough to confront her crazy husband? \n\nSo, I walked out to find her in the kitchen at the very moment that she was dialing the police on her phone, \"Yes, this is Tina Roche. I would like to report an incident of domestic abuse. I live at 1515 41st Street Northwest, Timberland Heights, Apartment 12. My husband, soon to be my ex-husband, is outside my apartment, and he is threatening violence. He won't leave. I need help. Will you please send someone as quickly as possible?\" Incredibly, she sounded like she was in complete control, not the least bit afraid or fearful.\n\nThere was some talking on the other end of the line, which was soon interrupted by more banging and screaming, \"I'm gonna fucking kill you, Tina, if you don't open the fucking door!\" He was beating on the door so hard, I could see it shaking, and I wasn't entirely sure that he wouldn't be able to break it right off its hinges or punch his fist through it.\n\n\"Hey, thanks for that, Justin, you idiot! The police dispatcher heard everything you just said; now they can arrest you, you fool!\" Then, she went back to the conversation on the phone. \"Did you hear him?\" Pause. \"Good! Please get over here before he breaks down my door! Yes, Timberland Heights, #12. Hurry, please!\" The banging and screaming continued on the other side of the door. Meanwhile, there was some more talking on the other end of the line, but in 30 seconds or so, Tina said, \"All right, thank you,\" and hung up. Then, I heard Justin again, \"Open the fucking door, Tina! Let me at your little fuck toy! I'm gonna kill him!\"\n\n\"You seem to be confused, Justin. You're the one having the affair, you asshole! Leave me the fuck alone! I came here to get away from you!\"\n\nThen, she turned her attention to me, silently motioning me out of the kitchen, and toward the living room farther away from the door that her husband had been beating on relentlessly for the past ten minutes. In a couple of seconds, the beating stopped, but then out of the corner of my eye, I spied her husband approaching the window of the living room in which we were standing, he was carrying a handgun at his side \u2013 possibly a Glock, or at the very least something semi-automatic. It was glinting in the noonday sun! \n\nShe motioned me back into the bathroom, and the sight of that gun had me moving faster than I think I ever have. Then, she turned back to the living room. \"They're on their way, Justin! If you know what's good for you, you'll get the hell out of here, now! If you don't, they've already got enough to haul you in!\" \n\nI peeked out of the bathroom door to see her standing in front of the window, her hands on her shapely hips, facing down her husband standing only ten feet away from her on the other side of the window. I couldn't tell whether he could see her inside the apartment, but we could both see him and the gun he held at his side!\n\nHe seemed as if his anger was under control now, and from my vantage point, it appeared as if he was paying attention to what Tina was saying. All of sudden in the distance, I heard a siren, and then I saw Justin sprinting away toward the back of the apartment complex.\n\n\"Dumb fuck,\" I heard Tina saying with disgust, and so I came out of the bathroom, newly awash in shame and self-loathing. I approached Tina and put my arms around her to comfort her. I realized instantaneously that that was the last thing that she needed at that very moment. She wasn't the least bit afraid, and even if she had been, how could she have been comforted by the coward who had run and hid while she confronted the danger that threatened her?",
        "\"I'm sorry, Tina! This is all my fault! I can't believe I left you alone to deal with him. That was so wrong of me to run and hide!\"\n\n\"Do you think it would have made more sense to antagonize that idiot? Jesus, Evan, you're pretty fucking na\u00efve if you think that showing your face would have helped the situation! Besides, that piece of shit is the world's biggest coward. He was afraid of a fucking little baby!\" I don't think that at the time, I even heard that line, nor did I understand its deep psychological implications.\n\n\"Tina, he had a gun...!\" \n\nMy argument was interrupted by a knock at the door and an authoritarian voice, \"Rochester Police Department. We have a report of domestic abuse at this address. Is everyone inside okay?\"\n\nTina motioned me to the bedroom, and then responded in a loud voice, \"Yes, everything is okay; he just left. Excuse me just a moment. I'll be right there.\" She'd shooed me into the room, pushed me into the closet and before closing the door, she whispered emphatically, \"Don't make a sound, and don't come out!\" Like I said earlier, I had already learned to obey my elders, so I did as I was told. Then, I could hear her turn back toward the kitchen and open the door to two RPD officers.\n\n\"Hello, officers. Thank you for coming. He just left. He heard your sirens, and he took off running.\"\n\n\"How long ago?\"\n\n\"Maybe two minutes.\"\n\n\"What does he look like?\n\n\"He's white, about six feet tall, short, dark hair. He was wearing a gray jacket.\"\n\n\"Which way was he headed?\" asked one of the officers.\n\n\"That way \u2013 toward the back of the apartment complex,\" she said apparently pointing out the window.\n\n\"Was he on foot or in a car?\"\n\n\"He was on foot, but I suspect his car was parked nearby somewhere. Oh, and you should know, he had a gun.\"\n\n\"I'll pursue,\" I heard one of the officers say when he heard the word \"gun,\" and then I heard the door close, and the other cop started asking Tina questions. \n\n\"Who was the suspect, ma'am?\" My thoughts immediately turned to that first day that I met Tina. I half expected her to tell him that she'd answer his questions provided that he never again referred to her as \"ma'am.\" But she didn't say that.\n\n\"My husband, but I've filed for divorce; I won't be married to him for much longer, not a second longer if I have anything to say about it. I moved into this apartment to get away from him.\"\n\n\"What is your husband's name, ma'am?\"\n\n\"Justin Roche, R-O-C-H-E.\"\n\n\"Why did Mr. Roche come here, ma'am?\"\n\n\"Well, I'm sure I don't know, but I assume because he's angry that I left him.\"\n\n\"If you don't mind my asking, ma'am, and you don't have to answer if you don't want to, but why did you leave him?\"\n\n\"Because he was having an affair!\" she said angrily. \"He's had numerous affairs, and this wasn't the first time that I had caught him. Besides, I stopped loving him a long time ago.\"\n\n\"Has he ever been abusive before today?\n\n\"Not so much physically, but verbally and psychologically all the time. He can be very nasty.\"\n\n\"The dispatcher informed us that he was threatening violence. Is that true, and if so, was he threatening you? What did he say?\"\n\n\"Yes, he said he would break down the door if I didn't open it and talk to him. He said he would kill me. And like I said, officer, he was carrying a gun, a handgun.\" I didn't hear anything for a long time, and I imagined that the cop was writing down what he'd heard.\n\n\"What kind of a gun, ma'am?\n\n\"Like I said, it was a handgun, something automatic or, actually I guess, those are semi-automatic. I don't know anything about guns, so I don't know what make of gun it was, but I had never seen it before, and I don't believe my husband owned that gun while we were together. He's a hunter, but he never owned any handguns that I know of. I think it's new.\" Again, there was a long pause.\n\n\"During the time he was here, did he ever point the gun at you?\"\n\n\"No, not that I know of. But the only time I saw him was when he approached the living room window, after he was banging on the door for 10 minutes. I didn't see him when he was banging on the door and screaming, so I don't know what he was doing with the gun at that time.\"\n\n\"Was there anyone else besides you in the apartment when the suspect arrived... anyone else besides you that he was threatening, or anybody else he pointed the gun at?\" I held my breath. I was afraid that I was about to be pulled into the middle of something that could become ugly, really ugly.\n\n\"No.\" I breathed a sigh of relief.\n\n\"Do you have a restraining order against the suspect?\"\n\n\"No.\"\n\n\"It's not my place to say this, ma'am, but I might recommend that you get one, and get it as soon as possible.\"\n\n\"Did the suspect do any damage to the apartment or any area outside the apartment?\n\n\"No, not that I'm aware of. Like I said, he never made it inside. I had the door locked, and he was pounding on it for a long time. I thought he might break it down, and he probably would have if you had not arrived when you did. You scared him away.\"\n\n\"Do you mind if I have a quick look around, ma'am?\"\n\n\"No, help yourself.\" I held my breath again, especially when I heard the officer take a couple of steps into the bedroom where I was hiding. I held my breath, but I was afraid he could hear my heart pounding out of my chest. Apparently, he didn't see anything unusual and left a moment later. A minute or two after that, there was another knock at the door, and apparently the other officer had returned. \n\nI heard the door open. \"Did you see anything?\" I heard the one cop say to the other.\n\n\"No, like the lady said, he must have left in his car. I didn't think I'd find him. He was probably long gone before I even started looking.\" There was a long pause.\n\n\"Do you know your neighbors, ma'am? Is there someone that we can talk to that might be able to corroborate what you've told us?\"\n\n\"I don't know any of my neighbors. Remember, I just moved in about a month ago, so I have no idea whether they're around or not or, if they are, whether they heard anything. I don't know how they couldn't have, but you'd have to ask them. I should mention that the dispatcher heard my husband threatening me when I placed the call, so you could talk to her, and those calls are taped, aren't they?\"\n\n\"That's right! I'd forgotten that. Okay, well, we will look into that corroborating evidence. What is the suspect's address? If he returns to his home, we can apprehend him there.\"\n\n\"1960 Olive Drive, here in Rochester.\" There was more silence, and I suspected that the cop was taking more notes.\n\n\"Well, that's about everything, but, I'm sorry to say, ma'am, other than going to the suspect's residence to see if we can speak to him, there's not much more that we can do right now. I'll check with my captain to find out if he wants us to do that. I'm guessing he won't.\" That made no sense to me at all, but I was quickly learning that cops really don't like getting involved in domestic cases.\n\nThe cop continued. \"However, if the suspect returns, be sure to call us again immediately, and, ma'am, like I said earlier, I would recommend that you file a restraining order.\" I was beginning to see how this worked. A restraining order gave the cops a clear-cut reason to make an arrest, something they were hesitant to do in a he-said, she-said domestic abuse case. Apparently, they'd already forgotten that they had a tape recording of Tina's husband threatening to kill her. \n\n\"I'll make a note in my report that I spoke to you about the restraining order, and if your attorney does file a request for an order, my report can be cited as evidence. Have a good day, ma'am, and be careful.\"\n\n\"Thank you. I will. You too.\" I heard the resignation in Tina's voice, and then the door closed, and seconds later, she returned to the bedroom and opened the closet, so I could step out.\n\nI was more than impressed with the way in which Tina had handled the entire situation, especially her conversation with the cops, but I was concerned that she had lied to them about me being there. I could tell by the look on her face that that was the last thing on her mind. We walked into the living room. Then, Tina closed the blinds, and we both sat down on the couch, facing each other.\n\n\"Tina, do you think the cops heard me?\"\n\n\"Of course not, but what difference does that make?\"\n\n\"You told them that there was no one else here. If they know that you were lying about that, maybe they won't believe anything else that you told them.\"\n\n\"He looked around. He didn't see you. Besides, this whole thing is over as far as they're concerned. He'll file his stupid report, and it won't mean a thing. The only thing that might come of this is if I would do what he suggested and try to get a restraining order against Justin, but you know, Evan, a piece of fucking paper doesn't do a damn thing to protect a woman if a man wants to hurt her. I've seen it happen to too many other women. He'll be back, no matter what I do or don't do.\" \n\n\"Well, next time, he'll have to deal with me!\" I knew when I said it that I appeared incredibly stupid and naive, and coming from the lips of an 18 year-old, I'm sure it sounded really immature, but I was serious, and I wanted more than anything to redeem myself after my sorry behavior.\n\n\"Deal with you! What are you going to do, Evan, get a gun?\" she said scoffing at me. \"Maybe the two of you can have a shootout in my apartment! I can't tell you how much that comforts me!\" she said, her words dripping with sarcasm. She was staring at me like I was the stupidest kid in the entire class.\n\n\"Tina, I promise \u2013 I'll protect you. I'm not hiding anymore.\" Again, even before the words left my mouth, I understood how absurd and sentimental I must have appeared \u2013 spewing syrupy, maudlin sop, the kind of stuff that Hollywood hacks wrote for bad, afternoon television dramas that really idiotic schmucks always seemed to be watching. I used to make fun of those kinds of people.\n\n\"Evan, I know Justin, and I know that he'd hurt you if he could. I can't tell you how badly I felt, when after five years of marriage, I came to realize that he was a really nasty person, mean for the sake of being mean. As long as he doesn't know anything about you, you're safe. There is no reason in the world for you to confront him, and if you do, there are a million reasons for him to want to retaliate, and if he does, he's dangerous!\"\n\n\"I'm not afraid of him, Tina, and I want to protect you!\" She shook her head; there was no point in my launching into another contrived explanation of my idealized brand of pseudo-bravery. I could tell she was kind of exasperated with me, and I guess I knew why. \n\nThen, her expression changed again, and she was back to being the Tina that I was falling in love with \u2013 the sweet, loving Tina. I could tell she was thinking about something.\n\nAfter a few seconds, she smiled and said, \"Sweetie, do you remember the conversation we had a month and half ago about The Catcher in the Rye? We both said it was our favorite book, right?\"\n\n\"Yeah, it's great, but, Tina, what does that have to do...?\"\n\n\"Do you remember that scene toward the end of the book where Holden is at his former teacher's apartment \u2013 his name was Mr. Antolini, I think \u2013 anyway, Mr. Antolini or whatever the guy's name was, is talking to him about getting kicked out of Pencey Prep, right? Anyway, he quotes this psychologist, somebody named Wilhelm Stekel or something, and the quotation goes like this, \"The mark of the immature man is that he wants to die nobly for a cause, while the mark of the mature man is that he wants to live humbly for one.\"\n\n\"Yeah, I remember it really well. I think it's my favorite part of the book, 'cause Holden is suicidal at that point, and Mr. Antolini somehow almost instinctively knows that, and he's trying to convince Holden that suicide is ultimately an immature answer to a person's problems. Yeah, it's a great line, but if I recall correctly, Mr. Antolini has misquoted Stekel, and I don't think Stekel was even the one who originally said that, right?\"\n\n\"I don't know about that, Evan,\" she said gently, but again I could tell that she was somehow frustrated with me. I had missed her point.\n\n\"What are you trying to say, Tina? I get the funny feeling that somewhere in this literary discussion there's some advice that's about to be delivered. Why don't you come right out with it?\"\n\n\"Okay, sweetie, I'm sorry if I'm being abstruse. Evan, I like you an awful lot. And I can't deny that I might be falling in love with you. You've got so much to offer \u2013 you're really bright, and you're fun to talk to. You've got a great sense of humor.\" For some reason, her words reminded me of that first night we spent together at the Double Tree \u2013 when I was trying to reassure her that she was incredibly desirable and beautiful. Only now the roles were reversed yet again. \n\n\"And, Evan, I've never been with a man who was a better lover than you, and your lovemaking has everything to do with your overall capacity to love other people, your kindness, gentleness, and generosity of spirit. You're so good in bed, such a natural lover, because you want so much to please the other person. And, I now realize that pleasing me physically and sexually was always about pleasing me intellectually and emotionally too.\" She paused. I wasn't sure I was following her, but I understood enough to know that this was the prelude to a polite brush-off. \n\n\"But...? Come on, Tina, this where you tell me to get lost, right? This is where you remind me that we can never be together because I'm too young and immature, and you need to find someone closer to your own age, and we both need to be practical, and....\"\n\n\"No, it's not!\"\n\nShe scooted closer to me, and leaned in to hug me, her huge breasts pushed up against my chest. When she was done holding me like that for a few seconds, she held me by my shoulders with both hands, just like I had done to her when she fell off the stool the first day I met her. And then she became very serious, just like the night back at the Double Tree. \n\n\"Evan, you're being like Holden right now. You think that it would somehow be noble of you to defend me against my husband, and if you do that, Evan, you might very well end up badly hurt or worse, and I care far too much for you to stand idly by and let that happen!\"\n\n\"So, I'm being immature if I want to protect you from a man that came after you with a gun today, huh?\"\n\n\"Yes.\" She paused for a long time. I could tell she was getting to her larger point. \"Evan, you're 18 years old. In a couple of weeks, you're headed off to college, what are you planning to do about our relationship when that time comes?\" She had clearly exposed the crux of the matter. She had this look on her face, like she'd just said, \"checkmate.\"\n\n\"Well, ah, I'm... I'm... Tina, I'll only be an hour and a half away in the Cities. I figured I'd see you every weekend.\" I think I was trying to convince myself, but I soon began to realize that she was right \u2013 I hadn't even begun to think about what would happened between Tina and me after I left for school. I had been entirely consumed with exploring the sheer joy of loving this incredibly beautiful woman. My brain had been deactivated. I had been doing all of my thinking with my dick and my heart. \n\nThen, I had an impulsive and probably ridiculous thought. \"Or maybe, I won't go to school after all. I could keep working at the lab. It's not that bad of a job.\"\n\n\"Evan, you're talking stupidly now \u2013 can't you see that in some sort of metaphorical way you're trying 'to die nobly for a cause,' when going to college, making something of yourself, realizing your true potential is living 'humbly for one?' Besides, Evan, I'm a woman; I don't want to be 'a cause.'\"\n\n\"But, Tina, I'm falling in love with you! I can't get you out of my mind.\"\n\n\"Evan, I'm not saying that I don't feel the same way about you. I can't even comprehend how incredible it is that I'm falling for someone that's 25 years younger than I am. But, Evan, right now, I need to divorce my husband and you need go to college and become whatever you want to become. It would be unfair to both of us, if we don't allow ourselves to address our most basic and immediate needs.\"\n\nI knew she right, but knowing that she was right, didn't make accepting what she had said any easier. I wasn't just falling in love with her; I lusted for her, yearned to be inside her, and because Tina always knew what I wanted and needed without me ever having to say it, she understood instinctively that at that very moment, we needed to have sex. So, we put the most significant discussion of our lives aside for the moment, both of us, I believe, confident that we would return to it sometime in the very near future, and without saying anything, she grasped me by my hand and led me back to the bedroom.\n\nI think we both understood that there was at least a chance that Tina's fucking husband could come back at any time, and I knew that she was right when she had said that it was only a matter of time before he returned. So, making love in that bedroom in the middle of the day was not only just a little dangerous, it was an act of defiance. To effect at least some degree of precaution, Tina closed the bedroom windows and blinds and pulled the curtains shut. It was hot outside, and so she turned the air conditioning on, which served to reasonably dampen any sound that might leak outside. I closed the bedroom door behind us, and we climbed atop Tina's bed.\n\nMaybe fearing for one's life causes such things \u2013 I certainly don't know for sure, but there was an urgency to our sexual intercourse that day that simply hadn't revealed itself previously, and though I had no way of knowing it then, it was to be our last time together.\n\nWhatever it was, there was nothing leisurely or relaxed about our lovemaking that afternoon. Truth be told, it couldn't even really be described as lovemaking \u2013 it was fucking, pure and simple.\n\nWe started by ripping each other's clothes off as fast as they could reasonably be removed. Then, I went down on Tina's pussy. I started, as I usually did, by running my tongue up and down her lips, adding as much saliva as possible. Then, using my fingers to spread her flowery petals, I started tongue-fucking her, like I did that first night at the Double Tree. \n\nOne of the first things that I learned about Tina's sexual preferences is that she really liked to be tongue-fucked. So when I spread her lips as wide open as I did with the fingers on both of my hands, my tongue could penetrate at least two inches into her hole, producing an incredible amount of creamy arousal, and some erotic encouragement, \"Oh baby, I love when you tongue-fuck me! You get me so hot! Oh my god, you're getting so deep inside me! Oh fuck, that's good!\"\n\nBut once I had her good and lathered up, I replaced my tongue with two fingers and went to work on her G-spot, wiggling my index and middle digits inside her as if I was urging her closer. I didn't even know what a G-spot was before my first night with Tina, but I quickly learned that another one of Tina's preferences was for me to couple my stimulation of that rough, walnut-like tissue on the inside of her pussy with my oral caresses of her clitoris. It was the fastest way to bring her to climax.\n\nAnd that afternoon, I got her there in short order. Using my left hand to continue to spread her lips wide while I was fingering her trigger spot with the other, I began lashing her clit with the very tip of my tongue, and intermittently sucking her pink bud into my mouth while continuing my oral assault with my darting lance. It didn't take me more than a couple of minutes before Tina was grabbing pretty much anything that she could in her fists: my hair, the headboard of the bed, and handfuls of sheets, grinding her hips against my face and hands, and groaning long and loud, \"Oh no! Oh! Oh! Oh no! Oh no! Oh no! Evan, oh my god! Evan, oh no... don't.... Oh my god, Evan! Oh, Jesus! Oh no! Evan! Oooooooooooooooooooohhhhhhhhhhhhhhhhhhhh!\"",
        "She must have known it in advance, because Tina was screaming \"no\" not \"yes\" as she usually did. She probably suspected that something was about to happen that she knew she couldn't control. When she erupted, it was only the second time that I had ever caused her to squirt. There were four massive streams that struck my face with real force, as her pussy commenced shuddering around my fingers. But I didn't back off, and those convulsions kept running through her without slowing down in the least. She continued orgasming for three or four minutes. \n\nBut there was no rest for the wicked. When she finally rode out the last of her tremors on my face and fingers, Tina pushed me off of her, and we exchanged places. She didn't seem to care that I was awash in her juices, and so I lay back against the pillows, as she crawled between my legs and then grasped me aggressively around the base of my growing erection. \n\nConcentrating her licking and sucking first around my distended glans, Tina quickly moved on to longer strokes up and down my length, alternating between wrapping her lips around the side of my stiffness and sliding back and forth like she was playing the harmonica, and then, seconds later, taking me fully into her throat. Periodically, she would go back to sucking just my engorged head while also using both of her hands to stroke my shaft. The whole time her eyes were locked onto mine, and her face bore such a expression of sensuousness that I swear she almost made me cum by just looking at me.\n\nI didn't want to orgasm right away, but it became clear that I wasn't being consulted in the matter, and when Tina began sliding all eight of my inches into her mouth and throat so that her nose was pressed provocatively against my pubic mound, I could feel my cum bubbling inside, and I knew that it was not long for my balls. \n\nTina and I were now making love on a regular basis, but before that night and day, we hadn't slept together for a week, and now that I had given up my less enjoyable habit of jacking off every day, I was saving my biggest climaxes for her. Though we had made love the previous night and I had coaxed four orgasms from her, I had only cum once myself, so that afternoon I suspected that I had built up a pretty impressive load. But after five minutes of deep throating, I knew that I had reached the point of no return, and we were both about to find out just how impressive my load could be.\n\n\"Ooohhh, I'm gonna cum. I'm gonna cum,\" I announced. And as soon as the words had left my lips, my cock left Tina's as well, and as she began jacking my saliva-slathered fuck stick feverishly in front of her face with her right hand, she looked deeply into my eyes and growled erotically, \"Oh baby, give me a good one! I want to see your cumshot, sweetie! Give me everything you've got!\"\n\nAnd then Tina did something that she had never done before. As she kept up her jackhammer fisting of my manhood, she reached out with her other hand \u2013 wet with her saliva and my pre-cum \u2013 to below my balls. Then, she began caressing that sensitive nether region between my scrotum and my asshole with two fingers, until suddenly, just before my first orgasmic contraction, she thrust those two fingers into my ass, just barely penetrating the opening of my virginal hole.\n\nMy climax commenced with a series of rapid-fire contractions of my penis and asshole, with my sphincter muscle juddering around her penetrating fingers. Simultaneously, I shouted my release, screaming once for every contraction that rolled through me over the next minute, \"Uh... yeah! Uh... yeah! Uh... yeah! Uh... yeah! Uh... yeah! Uh... yeah! Uh... yeah! Uh... yeah! Uh... yeah! Uh... yeah! Uuhh...yeaahh! Uuuhhh... yeaaahhh! Uuuuhhhh... yeaaaahhhh! Uuuuhhhhh... yeaaaaahhhhh! Uuuuuhhhhhh... yeaaaaaahhhhhh!\"\n\nThen, I did something that I had never before done \u2013 I began involuntarily thrusting my pelvis upward at the very moment that the first of several of my cumshots started to gush from me, spewing thick ejaculate like a fountain all the way up her blonde head, onto both of her cheeks, all over her forehead, eyes, nose, lips, and chin. She didn't try to escape my pulsing spurts, nor did she attempt to take my load in her mouth. Instead, she invited more and more of it onto her face, rubbing my dickhead all over it as I continued unleashing at least ten more massive ropes.\n\nThough I was but 18 at the time, it proved to be the most spunk that I have ever shot in my short life. When I was done shooting semen, my dick was still contracting, and it was so sensitive that it almost hurt. Finally, the contractions faded. It felt like my guts had been turned inside out. I didn't think that I could ever fuck again.\n\nBut Tina, oh my god! She looked like she had just performed a bukkake on about six guys \u2013 like the women in one of the flicks that my friends and I watched whenever we could find pornographic DVDs. As she looked up at me with my seed sliding down her face and then dripping garishly onto her huge tits, I thought that it was too much, but she seemed to love every second of it, and when she got up from the bed to look at herself in the mirror, she seemed energized by the reflection she saw. \"Jesus, Evan! It looks like you shot a month's worth of cum on me! How did I coax that much of it out of you?\" she said in amazement, as she rejoined me on the bed.\n\n\"Ah... it might have had something to do with those fingers you stuck up my ass at just the right moment! Holy shit, that felt good! I would sure love it if you would do that to me again!\"\n\n\"I will, honey, but right now, I want you inside me! After that massive cumshot, are you up to making love?\"\n\nI looked down at my cock, and I was stunned to find that it was still about three quarters erect, pointing out in front of me and downward in flamboyant fashion. The image of the busty, blonde woman that was sitting two feet in front of me on the bed with my cum covering her face and tits was not allowing my erection to relax. I looked up at her and smiled, but didn't say anything. Though we were both defiled, neither of us had any desire to clean ourselves up.\n\nThen, she reached out and began rubbing my cock again, and soon the sensation of her hand stroking my dick and the look of passion on her face had me hard all over again. And when she seemed satisfied that I was stiff enough to penetrate her, she pushed me down again so that I lay on my back on the bed, and she climbed astride my hips and lifting one of her legs to allow her to grasp my manhood, she inserted my cock into her still saturated pussy.\n\nThen, Tina started to ride me. At first she went relatively slowly, and each stroke into her pussy got me a little bit harder. Then, she began to hold her upper body still, while she twerked only her ass up and down, sending shivers of pleasure through my re-energized cock.\n\nTina took turns leaning forward with her arms on my chest, pushing her massive breasts together so that I could suck her nipples, while she rode me like a quarter horse. Then, she would lean back, pulling my cock toward her at a delicious angle and sliding her pussy up and down my length so that I could watch it disappear inside her before reappearing again on each thrust. After another fifteen minutes of cowgirl fucking, Tina came again on my numb cock.\n\nNo matter what I did, it seemed, she could not get enough. I fucked her again doggie style, then reverse cowgirl, then I climbed on top of her missionary style, and in every position she came yet again.\n\nFinally, as the afternoon bled into evening, I climbed astride her huge tits and fucked them until I blew another load on Tina's face. Unbeknownst to me at the time, it was our last act as lovers. \n\nWe showered together, and famished as I was, I told Tina that I had better go home for dinner that night or my parents would start asking questions. I spent the next day with them as well, fearful that they would think I was avoiding them before leaving for school in two weeks. I knew I had to take advantage of the little time I had left with Tina, but in order to do that, I had to placate my parents first. In hindsight, I guess that was a mistake.\n\nWhen I stopped into Tina's office on Monday to mail some packages, she was not there. I assumed that she had either taken the day off to see her attorney again about filing a restraining order against her asshole husband, or maybe that she had even moved again to keep him off her trail. But she wasn't in the office on Tuesday either, and when I came to see her Wednesday and again found her office empty, hot whips of panic engulfed me. I decided to ask someone in a nearby office what had happened to Mrs. Roche.\n\n\"She quit,\" said a pudgy middle-aged woman with the thickest Minnesota accent I'd ever heard. \"Put in her two weeks' notice, don't ya know; then used up the rest of her vacation leave, so she didn't have to come back in to work at all! I have no idea where she went. It's good riddance, as far as I'm concerned. That woman was just a little too sexy for her own, or anybody else's, good, if you ask me! Between the two of us, I think she's getting a divorce! I heard she was having an affair with someone! Some young guy, I'm told!\"\n\nI wanted to scream at the fat woman, but that would have done absolutely no good at all. I wanted to cry too, but that would have been an immature reaction to a rather mature matter of the heart. Besides, that would have given me away, so I just walked out. I just went on with my work that day, hopeful that no one would figure out that I was the \"young guy\" whose mysterious identity was swirling about the lab's rumor mill.\n\nBut I couldn't escape the obvious nagging question \u2013 why? I was under the apparently mistaken impression that even if my relationship with Tina would invariably have to cool down once I left for college, there was no reason for it to end entirely or abruptly. There wasn't an ending more abrupt than Tina's total disappearance.\n\nOver the next week, the stages of grief rolled through me like a runaway locomotive. I was stunned, saddened, afraid, and angry, pretty much every emotion that I could have had one after another. \n\nAt first I was just dazed. I couldn't believe she was gone. It didn't make any sense, but it just devastated me. I couldn't think or reason. I couldn't really do anything. I was useless. My supervisor must have noticed, because he asked me if something was wrong, wondered why I was so unfocused and preoccupied. I told him that I thought that maybe I was getting nervous about leaving for college in a few weeks, and that seemed to satisfy him. The next day my mother said the same thing to me, and since it had worked on my boss, I used the same excuse on her.\n\nThen, the sadness just washed all over me. I was grief-stricken. I guess that I had always considered myself a pretty unemotional person, but now all I wanted to do was cry, but for some reason, I couldn't even do that. For the first time in my life, I had lost someone that I loved deeply, and I had lost her in the blink of an eye. I felt like my insides had been sucked out of me, and now I spent most of my time just sitting and thinking. I couldn't do anything except feel sorry for myself.\n\nA couple days later it hit me! Maybe I should be worried. Maybe Justin had gotten to her after all. He could have kidnapped her, maybe even killed her \u2013 he had said as much that morning at her apartment. I worked myself up into such a state of utter panic that I called the police, pretending that I was one of her neighbors and that I was concerned that she hadn't been around for several days. I explained that I was supposed to see her on Monday, and that she hadn't shown, and now I couldn't find her at all \u2013 she wasn't at her apartment and wasn't answering my phone calls. I gave the cops a fake name and phone number. I have no idea whether or not they followed up in any way.\n\nThen, I thought of another strategy to try to find something out. I got the name of the landlord of Timberland Heights Apartments, and I called him saying that I was Tina's employer and that I needed to retrieve some company equipment from her after she had resigned her position. The landlord said that she had told him that she was moving out, that she agreed to forego her deposit, and he told me that all of her possessions were out of the apartment. He reasoned that she must have the equipment with her. I asked if she had left a forwarding address, and he said no, commenting that \"she seemed like she was in a pretty big hurry to get out of Rochester.\" \n\nSo, now I was mad. It appeared as if Tina had left of her own volition, and I assumed, whether right or wrong, that I must be the reason for her leaving. I couldn't believe that, but I couldn't think of any other explanation. I was just incensed that she wouldn't have said goodbye to me \u2013 no phone call, no letter, not even a text that informed me that she was done with me.\n\nMaybe she didn't love me, and even though that would have made me sadder than I had ever been in my life, even sadder than I already was, I guess I could accept it, but hadn't we had something personal and intimate enough that I at least deserved some sort of explanation? How could someone that I loved as much as I loved Tina do that to me?\n\nBut the bottom line was that Tina had just disappeared, and I had no way of finding her. For all I knew, she had expedited her divorce \u2013 decided she wasn't going to fight over property, etc., and maybe had already reverted to her maiden name. Since I didn't know what that was, there wasn't really any way I could look for her. I realized quickly how little I actually knew about her, and understood that she could have gone just about anywhere. I had absolutely no way of even searching for her, so all I could do was wait and pray to God that she would eventually come back to me.\n\nSo I did that, even though I had never been a very religious person. I prayed, and I prayed some more. I made some promises to God if only He would bring her back to me. I was bargaining with a deity that I wasn't even sure existed. \n\nAnd pretty soon, as is common in cases of grief, I reverted back to my earlier stage of sadness. Then, I did the only other thing that I knew how to do \u2013 I moped around, sad and sullen, and thought and thought and thought about Tina, every waking moment of the day and in all of my dreams and nightmares. I finished my last week of work. When I was done, I had a couple days off before I had to get my butt up to Minneapolis. \n\nThen, school started. I know I was depressed for at least my first year there, though all of my closest friends probably believed that I had put my sadness and sullenness behind me, because I tried to divert my attention away from Tina with my studies. None of them really knew anything about my relationship with her, and I didn't feel like telling them anyway. \n\nI immersed myself in my classes. I studied as best I could and did really well in all of my courses during the first school year. I was intent upon holding myself to a pretty strict schedule, so that I could ensure that I would graduate in four years. When I wasn't studying, I read \u2013 pretty much anything I could get my hands on, spending nearly all of my time in the library. Mostly, I read the classics \u2013 the canon, as my professors like to call it \u2013 but I also poured over a lot of contemporary fiction as well. Loss and redemption were my two favorite themes.\n\nBy my second year of school, I threw myself into trying to re-establish a social life. I met a few thousand people, including a truckload of pretty girls, and I dated my fair share of them, some of whom I slept with. But it wasn't the same. Despite my academic pursuits, every once and awhile, I managed to party like crazy, and after that first year, I would say that in general I even had some fun while I was getting my education. \n\nI graduated from the U of M two years ago with a degree in English. Then, I started teaching at a high school in Bloomington, and I moved into an apartment in Uptown. I've been dating one of my fellow teachers, a slender, pretty brunette math instructor named Kendra for the past few months. I like her, and we have a pretty good sex life, though I have to admit that something is clearly missing. I can't put my finger on it. Long story short, my life has gone on, and I never heard from Tina again. That is, until today. \n\nI have no idea how she found me. It's not like I have all that unusual a name. There must have been a few thousand \"Hughes\" in the phone directory for the Twin Cities alone. But I guess, what with computer data that's ubiquitous these days, if you try hard enough, you can find another person. I guess in the case of Tina, I didn't try hard enough.\n\nThe letter arrived in a plain white envelope with a return address from North Carolina. It was handwritten, a nod to Tina's generation. No one my age sends letters anymore. That letter so thoroughly captured her essence that its folds even smelled of her perfume. I can't even begin to explain the emotions that washed over me as I opened that envelope and read its contents. But suffice it to say, it was almost like Tina was there with me, and when I read it, I could hear her voice calmly reading the words:\n\nMy Dearest Evan,\n\nWhere to start? More than anything, I am hoping that this letter finds you happy and well. That matters more to me than anything else. I know that I hurt you more than I can even imagine. That reality is a cross that I will have to bear for the rest of my life. If this letter accomplishes anything, I hope it explains why I did what I did. It's not intended as an excuse. It is what it is.\n\nEvan, you didn't need the problems and headaches that I was about to cause you. You were an innocent kid that had a bright future ahead of you. I knew that if I was around, you were going to get dragged into a really ugly and dangerous situation, uglier and more dangerous than either you or even I knew, at least at first. I believed that if I stayed in Rochester or pretty much anywhere in Minnesota, Justin would have found me, and I reasoned that if he found me, he was also going to find you. I couldn't let that happen, not after what I found out.\n\nI never told you this, Evan, never told you any of this because what I did know might have scared you away, and I wanted you more than anything. The rest of it was just as much a surprise to me as it would have been to you. You see, Justin was really, really dangerous. \n\nAfter I married him, I found out a little bit about his past, and it scared me. He had been married once before, something he never told me until after we'd been married for five years. And then he started being abusive, screaming at me, intimidating me both verbally and psychologically, using sex as a weapon against me. I knew all that for years, but, like so many other women in abusive relationships, I stayed with him because I was afraid of him. \n\nAnd, of course, he had affairs with other women. And for a while, I even decided I could live with that, but then I drew a line in the sand and told him that if he kept it up, I would leave. But you knew all that, or at least you found out all of that the day Justin came to my apartment. \n\nBut that was only the beginning. There was something else he didn't tell me \u2013 didn't ever tell me and that was what caused me to do what I felt I ultimately had to do. I found this out when I visited my attorney to file the restraining order against him. That was two days after the last time you and I were together \u2013 that fateful day at my apartment. \n\nYou see, Justin's first wife had left him for another man, and when he went after that other man, that man wound up dead. I don't know all of the details, and quite frankly, I don't want to know them, but I do know that Justin was convicted of manslaughter, and he served some time. My attorney uncovered all of this when he set out to file the restraining order.",
        "And when he told me all of this, I knew I had to leave. I knew I had to leave to protect you. If Justin killed a man once because that man was having an affair with his wife, I figured he was capable of doing it again. That scared me so much, far more than anything that Justin had ever done to me. I was afraid that if Justin could find you, he would kill you.\n\nI knew fairly early in our marriage that Justin was a dangerous person, but, Evan, please know that when I was with you, I had no idea that he was dangerous enough to kill. Had I known, I would never have put you in the position that I did.\n\nI had to get out, and I had to get out immediately. I packed my clothes and a few possessions into my car, checked into a hotel for that last night in Minnesota so that he didn't find me, and I left the very next day. I wanted more than anything to call you and to say goodbye to you, but I was afraid he was following me. I drove southeast and just kept driving until I found a place that looked nice. I've been working here in North Carolina ever since. \n\nI wanted to be sure that I was in a place where I didn't know a soul. I never even told my own family where I lived, because I was afraid that Justin would find me. I didn't think that I would ever be able to contact you again, though I wanted so badly to do so. I just thought it was too dangerous to try.\n\nBut then yesterday I got some news that pretty much changes everything. That's why I am writing to you now, Evan, though I realize that I might very well be the last person in this world that you would ever want to hear from. If that is the case, I completely understand. But believe me when I say, that beyond your health and happiness, the thing that I wish for more than anything else in this world is to see you again.\n\nYou see, Justin is dead. He died of cancer a couple of weeks ago. I didn't even know that he was sick, and though I know that it is wrong to wish ill will upon another human being, I cannot say that I am not happy that he is gone. \n\nLast week I was contacted by the divorce attorney that I had originally seen in Rochester. I have no idea how Justin's attorney found him, but that was how I learned of his death. As strange as it may sound, I have inherited Justin's entire estate. He owned the house in Rochester that we lived in for almost 20 years, his possessions, and a few other investments, and now they are mine. \n\nOh, I forgot to mention this to you! You see, I never went through with the divorce! I was afraid that if I did so, it would be another way for Justin to find me. So once I got to North Carolina, I sent my attorney a text message, not to move ahead. Instead, he got a restraining order against Justin. The attorney was the only person that knew how to contact me, as I had sent him my phone number. So, irony of ironies, now that Justin's dead, I get everything that belonged to him, because I was his wife \u2013 at least legally.\n\nAnyway, long story short, I need to come to Minnesota to settle all of the legal matters concerning Justin's death and my inheritance. When I do, I want to see you so badly, Evan, and I know that my wishes may be the least of your concerns right now, but I am hoping that you will agree to talk to me and maybe even see me.\n\nI found out your address, through the attorney in Rochester, though I know nothing else of your current situation. I figured that you were probably done with school by now. If that is the case, I am so proud of you! But in a broader sense, I'm proud of you no matter what you're doing with your life right now. I'm proud of you because I know what a good soul you have. \n\nAnd I guess this is the part of this letter that I really want you to know. I have never stopped loving you, Evan. I know that by leaving I hurt you, but I believed that leaving was the only way to minimize the greater damage that I could have done to you if I stayed. I wished there would have been another way, but if there was, I didn't know it then, and I still don't now.\n\nI want to clarify what I am saying, Evan. I am pretty sure that you long ago moved on with your life, and that is what I wanted for you. So, I am not trying to win you back with this long and emotional letter. I figure that is probably a lost cause. But not a day goes by that I do not think about you, and if I do have to say goodbye, I would like to be able to do so the right way \u2013 the way I always wanted to \u2013 by telling you face to face how much you meant to me, how much you still mean to me, and how my love for you will exceed all our days.\n\nI once jokingly told you, Evan, that I thought you were \"scared to talk to an old, married lady\" like me. Do you remember that? Now, I'm not a \"married lady,\" though I'm even older than I was then! But for the past six years, I'm the one that has been \"scared,\" scared that I would never get to tell you how I really felt about you \u2013 would never get to tell you that I loved you, will always love you even if you despise me, and that the short time that we spent together was the best time of my life.\n\nEvan, just writing this letter has been cathartic, but I still really hope that you will talk to me and possibly see me when I come to Minnesota next week. I think that seeing you will heal so many more wounds that I have inflicted on both of us. If you are willing, I ask that you call me, anytime day or night. My cell phone number is 919-838-2334.\n\nI also remember one other conversation that you and I had all those years ago \u2013 do you remember me quoting from 'The Catcher in the Rye'? \"The mark of the immature man is that he wants to die nobly for a cause, while the mark of the mature man is that he wants to live humbly for one.\"\n\nMaybe in the end, I became the \"immature man\" that I was warning you not to become. I was trying to save you from my husband \u2013 a cause that I considered so noble that I was willing to let our love die to achieve it. Now, I want only \"to live humbly.\" But, Evan, what I have come to realize over the past six years is that I can't live, humbly or otherwise, without you.\n\nEvan, my dearest love, please call me, if only to tell me to \"fuck off.\" Just hearing your voice would make things a little better and would offer me some closure. I pray to God that I will hear that voice someday, even if your words are not the ones that I hope to hear. Whatever you have to say to me, it won't change what I want most to say to you \u2013 I love you.\n\n With all my love forever,\n\n Tina "
    ],
    "authorname": "stfloyd56",
    "tags": [
        "older woman",
        "busty, mature blonde",
        "18 year-old lab worker",
        "may/september romance",
        "deep throating",
        "cunnilingus",
        "assorted sexual positions",
        "squirting",
        "facial cumshots",
        "younger man"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-mark-of-the-immature-man-ch-01"
}