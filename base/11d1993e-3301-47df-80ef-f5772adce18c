{
    "title": "Hot Sand: Carolina",
    "pages": [
        "A southern summer's blistering heat isn't something people flock to, not when northern summers are so perfectly warm and beautiful, but Julie understands the magic of it \u2014 the kind of humid heat that makes you perspire even when you're wearing nothing but a bikini, even when the wind blows, even at night. When it came time to rent a beach-front house for a week in July, she didn't hesitate to look for one in the South. \"It's going to be too hot down there,\" Julie's husband said. \"Why don't we just drive over to Cape Cod, or up to Maine?\"\n\nThe thought of it gave Julie a chill, even fully dressed. She thought about the cool sea breeze she'd felt on their last trip to Maine, and the icy cold of the northern ocean water. No, she thought. South. I want to go south. \n\nUsing the vast resources of the internet, she found a beach house that spoke to her. On a long spit of a North Carolina island that's lanky like a skinny man's forearm, the house sits alone, rising from the windswept beach grass. White in color, and vaguely Victorian in style, the house is wrapped with front and back porches, has windows everywhere you want one, and even has a widow's watch with its own balcony, crowning the roof, up above the second floor. The house's location seemed to be good\u2014it looked like an easy beach-walk to the small village, a quaint old settlement of a dozen small houses and a General Store. The island is accessible by ferry, but they purposefully make it expensive to bring a car over, to encourage day-trippers to come without one.\n\nJulie and her husband, Mark, thought up the idea for the trip, a high school graduation present for their son, Logan. His best friend, Josh, was invited, plane tickets were purchased, and the week leading up to the trip was upon them. Mark came home one day and told Julie of a production break-down at his business. \"It's a catastrophe,\" he said. \"There's no way I can go on vacation now.\"\n\nAn hour later, Julie sat on the side of Logan's bed, explaining the situation to him. \"We'll still go. It's too late to get a refund on the beach house. We could probably do something about your dad's plane ticket, but he said why don't you ask another friend to come along. I know it's short notice, and no, it can't be Kayla. If she was eighteen I might...might, think about it, but I can't be responsible for all that chaperoning. Why don't you ask Tyler?\"\n\n\"Oh, Yeah. I bet he'd go,\" Logan said. \"Cool. Thanks Mom.\"\n\n\u2014\n\nThe southern heat, oven-like, with a big dash of humidity, brought a smile to Julie's face as soon as she stepped outside the Raleigh-Durham airport. She smiled again, embarrassedly, when the nice young man in the rental car lot kept glancing at her tits. The plane she and the boys had just disembarked from was warmer and stuffier than she remembered other flights being, so halfway through the flight, when she was in the middle of a good book, she'd mindlessly opened two buttons on her pale yellow cotton blouse, down to the point where the delicate lace of her white brassiere showed. She'd meant to button the shirt up again, but forgot, and standing there in the car lot didn't seem like the place to do it. And anyway, the young man was cute and quite harmless.\n\nThe open buttons were swept out of Julie's mind again by the challenges of gathering the three boys and all the luggage into the car, and worrying about the driving. Three and a half hours later, after a pleasant ferry ride with the rental car, she and Logan and his two friends were standing in the kitchen of a bright, airy summer house, looking out at the beach grass and the vast blue ocean beyond.\n\n\"There's only one house rule,\" she said. \"If anybody's going to go off on their own, leave a note on the kitchen table. It's a big ocean out there, and we don't want to be searching it for your floating corpse only to find out you wandered off in search of a bikini sighting.\"\n\n\"Aren't you gonna be wearing one, Mrs. B?\" Josh said, his eyes sparkling, his mouth curled in an impish smile. \"I was hoping.\"\n\nThe open buttons on Julie's shirt re-entered her mind. Her arms goosebumped and tingled, and she felt the hairs stand up on them. Josh is the flirtiest of Logan's friends, a six-foot-two-inch hunk of young man with long sandy-colored hair that looks like it's always in need of a hand to push it back behind his ears. Julie had noticed, all through Logan's high school years, that lacrosse and soccer were the 'long hair' sports \u2014 Logan and all his soccer team friends had somewhat similar tresses.\n\n\"What I wear,\" or don't wear, Julie wanted to add, \"is no concern of yours, young man. I'm sure you'll find girls to ogle. I'm sorry, though, you guys. I really thought this place was closer to town. We must be three miles from civilization, at least, and it didn't look like there's much there.\"\n\n\"That's all right, Mom,\" Logan said. \"We can walk.\"\n\n\"Yes, I guess you're in better shape than I ever was,\" she said.\n\nJosh, smirking, glancing at Julie's open buttons and shadowy cleavage, said, \"That's debatable, Mrs. B.\"\n\n\"Out! Go!\" she said. \"Have a look at the ocean while I unpack these groceries.\"\n\n-\n\nEvening settled in, with the kitchen smelling of pizza, the frozen kind, cooked in the oven. Julie and the boys walked on the beach after dinner. It was a quiet walk, everyone tired from the long day, looking for seashells and odd bits of flotsam. The combination of it being the hottest time of the year on an island that's not a tourist mecca made for mile long vistas in both directions without a single other human being in sight. A fishing boat trolled, way offshore, but that was the only sign of humanity. The beach house Julie had chosen was even more peaceful than she'd imagined it would be.\n\n\u2014\n\nThe next morning, the sounds of breakfast being prepared woke Julie. Up out of bed, she put on a pair of shorts, a bra and a t-shirt. She hadn't slept well in the heat; her hair was a mess from all her tossing and turning during the night. Standing in front of the small mirror that hung on her bedroom wall, she fingered her recalcitrant tresses into place as best she could. The upstairs bathroom\u2014the only one in the house\u2014is old fashioned, and when she entered it was already littered with the boys' shaving gear, hair products, toothbrushes and deodorants. The shower hadn't been used yet, and she made a mental note to get up early so as to be the first one in it each day, before wet towels and dark body hair made a masculine mess of things.\n\nThe smell of breakfast greeted Julie when she went downstairs; scrambled eggs, sausages, and bagels dripping with butter. \n\n\"Wow,\" Julie said. \"Do I get this kind of treatment all week?\"\n\n\"Sure, Mom,\" Logan said. \n\n\"Thanks for inviting us, Mrs. B.,\" Josh said.\n\nTyler added, \"It's really nice here. I didn't think we'd all have our own bedroom.\"\n\n\"I'm glad you guys like it,\" Julie said. \"I like it, too. I'll get some serious reading done, and I'll have a better tan than any of my friends, I'll bet, when we get home.\"\n\nJosh, straight faced and serious, said, \"I can help you with your sunscreen lotion, Mrs. B., if you...can't reach your back or somethin'.\"\n\n\"Logan's done it for me, when my husband's not around,\" Julie said. \"Remember, Honey? When you were little?\"\n\n\"Yeah, I remember,\" he said, embarrassedly.\n\nAfter they ate, the boys went outside for a swim. Julie took a shower, with the bathroom door latched and locked. The soft water made it difficult to rinse the soap off, and she felt slippery, even when she got out to dry herself. She put on her summer robe and wished she'd brought a longer, thicker one that didn't show the jiggle of her bosom quite so much. Standing there, in front of the bathroom mirror, thinking about how she would look if the boys saw her wearing nothing but the little robe, she suddenly realized she'd forgotten to repack her swimsuits after Mark had dropped the bombshell about not being able to go on the trip. She had swimsuits with her, that wasn't the problem, but they were all sexy bikinis, all packed with the thought in mind of making Mark horny, to try and rev up their fading sex life. She'd known it would be naughty to wear them in front of Logan and Josh, but with Mark there the idea had seemed okay, even though it was a bit risqu\u00e9. But now, with it being just her, all alone with three fully grown, eighteen-year-old, handsome young men...\n\n\"Crap!\" she said to her reflection. \"Sometimes you're way too scatterbrained. Oh well, they'll just have to deal with it.\"\n\nIn her bedroom, door closed, after a wobbly-breasted walk down the hallway that made her shake her head and wonder if she was fit to be the parent of a teenage boy, she pulled out all her bikinis and tried to choose one that was less sexy than the rest. It was a losing game. They were all similar\u2014cheeky and titty and sexy in one way or another. It was a carefully curated collection, the best of the best of her modest accumulation, designed to show her still-damn-fine body in its best light. As she looked at them she wondered why she'd planned to wear them at all, even if Mark had been there. They were basically the opposite of what she'd normally wear in front of certain boys from Logan's soccer team, and Josh was one of those boys. He with the easy smile, the unashamed wandering eyes, and the flirting skills of a much more experienced man.\n\nShe chose the black one. A glance out the window told her the boys were all accounted for, frolicking out in the gentle waves, so the robe slipped down her arms and she put the little bikini on, with the sun streaming in through the open windows. The small mirror on the wall didn't afford her a very full view of how she looked, but looking down at herself gave her a full-body tingle. It was sexy all right, but it pleased her, in a perverse kind of way, to know she still had the body to make it work. Her breasts, in particular, made her proud, and the little black bikini showed a whole lot of them, in all their big, perfectly curved, still-firm glory.\n\nThe walk to the lounge chair on the beach felt heavenly to Julie, with the heat of the sun on her and the warm sand between her toes. She settled in quickly, so as to avoid showing Tyler and Josh her cheeky backside, but they were both plenty intrigued by the long distance view of the front of her, and before long all three boys, dripping with seawater, were at her side. \n\nThe feeling of being so nearly naked raised the hairs on Julie's arms. Josh and Tyler had never seen her out of her mom-style street clothes, and this was very, very different. She kept her gaze firmly on her book, even though the words and paragraphs had become senseless. \"How's the water?\" she asked.\n\n\"It's so warm,\" Josh said, with his eyes roaming his best friend's mother's tits, her belly-buttoned stomach, and the mound of fleshy mystery that hid under the sexy little crotch of her bikini bottom.\n\nMoments later, the boys started slathering themselves with sunscreen lotion. Julie watched from behind her sunglasses. She knew good mothers don't stare at such things, so she didn't, but Tyler and Josh are so very good looking. Her eyes seemed to keep finding them as they lotioned their strong arms, their chests, and their legs and thighs.\n\n\"You got your lotion, Mrs. B.?\" Josh asked. \"This sun'll burn you today.\"\n\nJulie nodded, wishing she'd been smart enough to lotion herself in the privacy of her bedroom. But it was a beach vacation after all, and lots of skin is part of it, even if she was showing more of it than she had planned.\n\nAnd so she squirted lotion from her bottle, and she felt the cool of it on her skin, and her hand slid through it, massaging it gently into her already warm flesh. Behind her sunglasses she glanced at Tyler and Josh. She wasn't surprised it was Josh who was watching her.\n\n\"Josh, your mom told me she won first prize in a baking contest,\" she said, hoping to get his mind on very different things.\n\n\"Oh, yeah. Strawberry rhubarb pie. It was at that strawberry festival.\"\n\nJulie's chest and stomach still needed to be done, and of course conversing with Josh had given him a good excuse for looking right at her. She couldn't think of a quick way out, so she squirted more lotion from her bottle, feeling the cool of it again. Massaging it in gave her goosebumps, all over her shining skin, giving her the look of a Playboy model with the cold water from a hose turned on her, not that Julie knew anything about those kind of things.\n\nJosh turned away when she was lotioning the parts of her goosebumpy breasts that showed, and she wondered why. Was he being polite, she wondered? Her eyes widened when the realization hit her that he was hiding an erection. It had to be, she thought. Why else would he be facing away from her and his friends, gazing off into the distance at nothing, silently. \"Race you to that bush,\" he said, and he was off, running as fast as he could, with Logan and Tyler in pursuit.\n\n\"Oh my God,\" Julie said to no one. She was pleased, excited, worried and disgusted, all at once. She scolded herself again for bringing the wrong swimsuits, and then she stretched out, relaxing with her book, trying to find her place.\n\n\u2014\n\nIt was late in the afternoon when the boys returned from a long walk down the beach, all the way to the little town and back. Julie had spent some time on the porch when they were gone, out of the hot sun, but when they returned she was back out on the beach, reclined languidly on the lounge, asleep after her restless night. She'd started the sunbathing lying on her stomach, with her bikini top untied at the back and at the neck, so as to take advantage of some tan-line-free hours while the boys were away. She'd fallen asleep that way, lulled by the sound of the surf, and at some point, as groggy as groggy can be, she'd rolled face up, leaving the bikini top behind, and had fallen into a deep sleep again. The oven-hot heat was like a narcotic, and the lack of such a tiny bikini top hadn't made even the smallest impression in her semi-conscious mind.\n\nIt was voices that woke her, the boys voices, penetrating her dream and merging into it for a few ethereal moments. Her eyes opened just enough to see them. They were standing not too far away, watching her, talking amongst themselves, not approaching. It was then that she felt the breeze on her bare breasts, and the situation started to clarify in her still-dreamy mind. As her nipples bloomed into firmly pointed arousal, all the breath rushed out of her lungs, but she didn't move. The urge to hide herself wasn't as strong as the idea of just lying there, pretending to be asleep, hoping she could somehow make it seem as if nothing unusual had happened. So she lay there, topless, practically naked, and she listened.\n\n\"Damn, those are Rihanna tits, man!\" Josh said. \"Remember that dress she wore, that one you could see her nips through? You mom's are just fuckin' like them! Holy fuck!\"\n\n\"Oh my God,\" Tyler said, \"your dad's fucking luckier than shit, man!\"\n\n\"That's my mom, you guys! What the fuck!\"\n\n\"God, he probably fucks the shit out of her,\" Josh said. \"My dad fucks my mom like crazy sometimes.\"\n\n\"You've heard them?\" Logan said.\n\n\"Yeah a bunch of times. Haven't you?\"\n\n\"Maybe. I mean...\"\n\n\"It's too bad your dad's not here; we could listen to 'em,\" Josh said. \"Vacations make my mom and dad horny. We went to this condo in Florida last winter. They thought I was at the beach but I came in sorta quiet I guess, when they were fucking. I couldn't see 'em or anything, they were in their room, but they were fuckin' into it, loud as shit, talkin' dirty and everything.\"\n\n\"So you just stayed there and listened?\"\n\n\"Yeah, why not?\"\n\n\"Because she's your mom!\"\n\n\"Hey, sex makes me horny, what can I say,\" Josh said. \"My mom's sorta hot. Not like your mom, though. Holy shit. I can't believe we're seeing her tits. This is like the best fuckin' day...\"\n\nJulie lay quietly, with eyes closed, hoping the boys couldn't see her goosebumps and aroused nipples. If they can see them, she thought, maybe they'll think it's the sea-breeze that's causing them, and not this shameful situation.\n\n\"I wonder if she lets your dad fuck her tits. If he's got a big cock like you she probably loves it.\"\n\n\"How the fuck do you know anything about how big my cock is?\" Logan said.\n\n\"Brittany told me. We got really drunk and she told me how much Kayla loves fucking you. She said Kayla was goin' on and on about it,\" Josh said. Shifting his voice up an octave, imitating the voice of a girl, he said, \"Oh, its so fuckin' big, and it goes so fuckin' deep. Its so fuckin' big it took, like, four times before he could get it all the way in, but now that I can take all of it, it's like, all I wanna do!\" Josh giggled after doing his impression.\n\n\"Fuck you, man,\" Logan said. \"What are you, jealous or something?\"\n\n\"Fuck no, man\" Josh says. \"I got seven and a half fuckin' inches. Brittany fuckin' loves it. You ever measure?\"\n\n\"Yeah, but I'm not tellin' you!\"\n\n\"Tyler, how 'bout you?\" Josh said. \"What does Megan get to play with?\"\n\n\"Like, six, or a little more. That's above average, right?\"\n\n\"Yeah, man, that's cool. Come on Logan, you want us thinkin' Kayla's lyin' and you got a little dick, or what?\"\n\n\"Seven I guess,\" Logan said. \"Maybe a little more, when it's good.\"\n\n\"When it's good? You mean when Kayla's strokin' it and droolin' on it, right?\"\n\nLogan smiled shyly.\n\nJosh said, \"Brittany told me son's cocks are just like their dad's, so that means your mom likes it deep. I got a little extra for her, right here.\"\n\n\"What the fuck, are you fuckin' hard? For my mom?\"\n\n\"Yeah. Why wouldn't I be. Are you just figurin' this out? She's pretty close to naked man, and she's fuckin' smokin' hot, and those fuckin' dark nipples are just killin' me.\"\n\nLogan, looking at the lumps in Tyler's and Josh's swimsuits, shook his head. He knew he had to end things. \"So what are we gonna do,\" he said, looking at his mother's nearly naked body even though he knew he shouldn't. \"She's not waking up.\"\n\n\"Let's go back down the beach a little and we can yell or something,\" Tyler said, \"like we're just showing up.\"\n\nJosh said, \"Or we could just walk up to her and say, 'Hi Mrs. Burch. You're tits are crazy nice. Can I put some sun lotion on 'em for ya?' \"\n\nLogan pointed down the beach. \"Go!\" he said, cringing because he said it loud enough to possibly wake his mother. Josh reluctantly followed orders, after taking another lingering look at the nicest tits he'd ever seen in real life. Tyler followed, and Logan brought up the rear.\n\nJulie cracked her eyelids open, amazed that the boys hadn't noticed her breathing heavier than a sleeping person should. She felt naked even though with a tiny bikini bottom on she technically wasn't, and she felt horny even though she knew it was wrong and dangerous to feel that way. She wanted badly to cover her nippily tits with the bikini top and scurry away indoors, but she knew she had to wait, to play the game. She didn't move as she watched the boys walk away. They stopped aways down the beach and started horsing around noisily, so she stretched her arms and quickly put the bikini top on. She fought her instinct to flee; she stayed there, reclined, while the boys approached.\n\n\"Hi Mrs. B,\" Josh said. \"You're getting a really nice tan.\"\n\nHe walked right up to her and she noticed the lump in his swimsuit, bigger than normal, down the leg, but not out of control. Tyler, trying to hide behind Logan, had a lump that was even more pronounced.\n\n\"How was town?\" Julie asked.\n\n\"It's okay. Small,\" Logan said. \"It's too far, though.\"\n\n\"No pretty girls?\" Julie asked. \"I thought you boys would think it was worth the hike just for that.\"",
        "\"There were a few, but...I've seen nicer,\" Josh said. \"They should shop at your store.\"\n\nJulie was amazed at his flirting skills. She glanced down at the too-sexy bikini and once again wished she'd been smarter with her packing. But then, out of nowhere, maybe from sunstroke or some such thing, she flirted back. Josh was, after all, a handsome young man, six feet two inches tall, with the muscled stomach and strong legs of a soccer player. All of Logan's friend's are from the team.\n\n\"Oh, you like this one?\" she said, eyeing the way her still-nippily breasts looked in it. Her sleepy brain wasn't thinking a hundred percent clearly. \"Logan's father likes the way it looks on me. I guess I buy them more for the men than for me. It's hard for me to get used to thinking of you boys as men, but, you are, aren't you.\"\n\nThe sudden, real-life conversation with Mrs. B about her stunningly bikinied breasts seemed to tongue-tie Josh. Logan and Tyler said nothing.\n\n\"I brought some others, too,\" Julie said. \"You'll all have to give me your opinion on them. I probably shouldn't tell you this, but I was supposed to bring some less sexy ones, to wear around you boys, but I forgot them. Good thing I didn't forget these or we'd have to be like a French family and run around half naked, or even more naked that that.\" The words tumbled out of Julie's mouth without her full knowledge. She felt the inner heat of a full body blush that made her look sunburned, and it wasn't just from what she'd said. Josh's hard-on was bigger, maybe even full-blown. There were no pockets in his board-short type swimsuit, so he held his hands down in front of the lump to try and hide his predicament.\n\nThe way life is supposed to be seemed badly out of whack. Julie knew it, but it was what it was\u2014the boys had seen her topless, and that was all there was to it. There was no rewind to change how it had played out. She stood up and stretched her groggy body, which she quickly realized was another mistake. All she could do was try to normalize things. \"I fell asleep for a while. It's so peaceful here. I haven't seen a single person up the beach this far since we got here. I guess I'll go take a shower and wash this lotion off of me.\"\n\nIt was yet another wrong thing for a chaperoning mother to say. She shook her head a little, wondering why she couldn't wake up the brain cells she needed, the ones that controlled good behavior. She gathered her towel and her book and tossed them in her beach bag. She turned and walked to the house, her nearly naked ass wiggling the way it always does, like a lingerie model on a fashion runway. The black bikini, with it's nearly-a-thong racer-backed bottom, was designed to look a little like lingerie, with lace around all the edges, and it carried off the design brief with aplomb. Logan couldn't quite believe that his mother was wearing such a thing, and it was even more astonishing that she looked so amazing in it. Josh and Tyler didn't blink, so as not to miss a second. \n\n\u2014\n\n\"Did you leave me some hot water, Mrs. B.?\"\n\nIn the quiet, close quarters of the upstairs hallway, Julie stopped suddenly and turned toward Josh. Her expression was one of surprise, and her breasts, under her flimsy summer robe, wobbled to their equilibrium. \"Oh, I didn't...know you were here.\"\n\n\"That's all right, I don't need much.\"\n\n\"There's...the outdoor shower,\" she said. \"I thought you boys would use that one, after the beach.\"\n\n\"Yeah, Logan and Ty are down there, but...I don't know. I felt like a real shower. You probably don't want us gettin' naked down there, do you?\"\n\nJulie could see the flirty mischief in Josh's eyes, and the situation flustered her. \"No, I...guess that's not a good idea. If there was some kind of enclosure I guess it would be okay, but...\"\n\nJulie stood there, in her shorty robe that draped on her breasts, amazed that Josh was so unashamedly looking at her. It wasn't lecherous looking, but his glances were all out in the open, and they took in various parts of her. She knew Josh's father, and he was a handsome, flirtatious ladies man, too. \n\n\"Your tan looks great, Mrs. B.\"\n\n\"Oh, thanks. You're pretty dark, too.\" And just like that, Julie was looking at Josh's six-foot-two hunk of shirtless, swimsuit clad body just as much as he was looking at the way her suddenly aroused nipples poked at the fabric of her flimsy little robe. Blushing from the embarrassing inappropriateness of it all, Julie said, \"You'd better get in there, before the boys use all the hot water.\"\n\nJust a few minutes later, Julie heard something she had not expected to hear. It was the sound of Josh masturbating, virtually as clear as day. The walls in the old summer house are all simple open stud-work, with a sheathing of tongue-and-groove pine on just one side, the bedroom side, in the case of the white-painted wall that separated Julie's room from the bathroom. As she stood there, with her hand against the wall and her ear just a few inches away, she couldn't help but picture seven-and-a half inches of hard, wet, soapy meat in Josh's fast moving fist. She was pretty sure he was trying to be quiet about it, not aware of the paper-thin walls and Julie's close proximity to him. As the crow flies, if a crow could fly through walls, Julie was just three or four feet from Josh's suddenly breathless, spasming body. She was as breathless as he was, but in a silent way.\n\nThe sound of footsteps on the creaky staircase roused her from her voyeuristic trance, and she raced to her door and shut it. She thought of locking it, but it seemed unnecessary. She listened as Logan and Tyler passed by, each heading to their room. \"Oh my God,\" she whispered to her empty room. Her heart pounded and she felt a little faint. A sit-down on the side of her bed calmed her, and then she dressed for dinner, putting on white denim shorts and a charcoal gray tunic top. A bikini top would have been the cooler, more comfortable option, but she thought it best to cover herself a bit more.\n\n\u2014\n\nHamburgers and hotdogs sizzled on the grill, and potato salad was dished out, all of it from the supermarket on the mainland. It tasted wonderful, as vacation food often does. After dinner, the boys kicked the soccer ball around on the beach. Julie went out to the car for something and saw a girl, about the boys age, cutting wildflowers and reeds on the other side of the sandy dirt road. Julie had seen her twice before, passing slowly by on her bicycle, looking curiously at the house and the rental car in the driveway. Julie waved and said hello, and the girl introduced herself as Everbright Hardy, daughter of Everanham and Brightly Hardy. \"I guess my folks wanted my name to be somethin' similar,\" she said. \n\nEverbright lives on small farm with her parents and her brother, way off the island's only road. They raise pigs and chickens and bees, and sell their products over on the mainland, in Greenville, at the local Farmers Market. Julie quickly realized theirs was a free-spirited bohemian lifestyle, and that Everbright had been home schooled.\n\n\"Julie's a nice name, too, Ma'am. It's like that woman who sings, in that movie.\"\n\n\"Julie...Andrews?\"\n\n\"That's her. You're pretty like she is, too,\" Everbright said, her eyes lingering on Julie's bosom for a few moments. \"Even prettier, I reckon.\"\n\n\"Would you like to meet my son and his friends?\" Julie asked. \"They're about your age.\"\n\n\"Oh, yes ma'am, I would like to. I thought I saw a boy yesterday, when I was ridin' past.\"\n\nJulie couldn't help but smile. If Everbright had seen one, she'd probably seen all three. \"It must be lonely living way out here. Is yours the only house around?\"\n\n\"Yes ma'am, ours and this here one. I've met some nice folks that come though. This place is rented or full-up with the owners pretty much all year.\"\n\n\"I'm not surprised. It's a very nice place. We thought we'd be closer to town, but I'm enjoying how peaceful it is way out here.\"\n\n\"Yes ma'am. Pretty much nobody ever even walks up the beach this far, 'specially when it's hot like this.\"\n\nJulie walked with Everbright, around the side of the house and down the path through the dune grass to the beach. The boys' ball kicking came to a sudden stop when they saw Julie and the unknown girl approaching. Julie wasn't surprised that the sight of Everbright had such an effect on them. A deeply tanned sun-bleached blonde tends to do that to eighteen-year-old boys, especially when her soft hair and wispy homemade summer dress waft in the sea breeze, the way they would if a movie director had placed a big fan just so. Julie didn't realize it, but the light of the low evening sun shown through Everbright's dress, giving away the outline of her youthful, underwear-free body.\n\nJulie introduced her to the boys and watched with fascination as teenage hormones and ideas transformed them all. She'd seen it before, each time Logan met an attractive girl, but to see all three of the boys morph into slightly different people was truly interesting to her. It was nature doing its thing, and it made her realize that some of the behavior she'd seen from boys she knew when she herself was a teenager hadn't been as odd as she'd thought it was at the time.\n\nThe boys and Everbright built a campfire on the beach, where one had been before, near the shore-grass that separated the beach from the house's yard. Soon, the sun set behind the house, the sky turning pink and yellow, and then orange, darkening to a burnt-umber twilight. Julie left the young people to themselves when the eastern sky was turning black, speckled with emerging stars. \"I think I'll go curl up with my book for a while,\" she said.\n\n\"Goodnight, Mom.\"\n\n\"Night Mrs. B.\"\n\n\"Goodnight Julie,\" Everbright said, her southern voice soft and lovely. She said it in a way that sounded like she'd known Julie forever.\n\nAn hour later, after reading a few chapters, Julie climbed the stairs to the widow's watch. She found an old, dust encrusted pair of binoculars there, and at first she pointed them toward the moon, bright and round, full but for a sliver of its flank. It hung halfway up the sky, above the reedy marsh across the road, over in the direction of Everbright's farm. Then Julie heard a tell-tale sound, floating to her ears on the quiet sigh of the ocean's soft surf. It was the moan of a young man, either in pain or in pleasure, and she was pretty sure it was pleasure. The circular view through her binoculars told the story: Her very own son, Logan, silent again for the moment, had his head tipped back, his eyes on the stars, and his very hard cock deep in the mouth of Everbright Hardy. He sat on the sand, leaning back on his arms, with his legs wide in front of him. Everbright was between those legs, on elbows and knees. Two other hard cocks were easily visible in the flickering firelight, Tyler's and Josh's, each one held by its owner's hand, at the base, letting the full length of the muscular erections tower toward the moonlit night sky. Everbright worked her way from one hard cock to the next, to the next and back again, and so on and so forth, until each of the boys' bodies tensed and their hips jerked as they orgasmed. \n\nJulie's sweating hands held the binoculars none to still, her breathing short and ragged as she watched the stunning scene. She was amazed by so much of it\u2014the remarkable size and manliness of the boys cocks, the beautiful looks of ecstasy on each of their faces when they came, and the remarkable oral skills of Everbright. The girl was a quiet dynamo, with the blowjob skills of a master, drinking and swallowing the boys gushes, squeezing out the rest from the still throbbing cocks with her hand, gathering every last drop of their cum with her tongue and her smiling mouth.\n\nJulie, certain she'd be spotted up there on the widow's watch balcony in the moonlight, slunk away, into the deep quiet of the old house, where her mind reeled with thoughts of the sights she'd just seen. Logan's big seven-inch cock surprised her. His father is a grower-not-a-shower, so it stood to reason Logan would be, too, but he's a smaller young man overall than his father, six feet tall as compared to his father's six-two, and slimmer than his father ever was, so seeing a dead-ringer for her husband's big cock, sprung hard and proud from Logan's crotch, was a breathtaking sight for Julie. It made her proud, and it made her a little jealous of Logan's girlfriend Kayla, and it made her more than a little horny.\n\nOr was it Josh's even bigger, girthier one that triggered her horniness, or was it the look on Tyler's face when he came, a boy she'd long thought was the ideal when it came to ranking Logan's friends for 'cuteness.' All of it confused Julie. She retreated to her bedroom, with its ocean view, her window positioned just low enough so the young folks and their fire couldn't be seen because of the shore-grass. Were they all fucking Everbright, Julie wondered? Three boys with one girl? Was such a thing even done? Should I put a stop to it if it's happening? They're eighteen, now, and Everbright said she was, too. I don't want to be thought of as that kind of mother.\n\nBut there was the girl's parents to think about, parents Julie knew nothing about. She pictured a shotgun toting father banging on the door, spraying rounds of birdshot into the behinds of the three boys she was responsible for. Julie was out the door, heading for the path to the beach when she saw Everbright walking toward her out of the dark, with the wispy homemade dress still on her, her youthful face radiating relaxed joy the way it always seemed to.\n\n\"Hi Julie,\" she said, her voice calm and soft. \"Did you finish your book?\"\n\n\"No...I...just thought I'd get some air.\"\n\n\"The fire's nice,\" Everbright said. \"I like your son. You raised him up real nice.\"\n\n\"Oh, thanks,\" Julie said. \"Are you...leaving?\"\n\n\"Yes ma'am. I've got chores real early in the mornin'. I didn't want my momma comin' over here and seein' how cute all those boys are. She'd be stealin' all my fun. I got all I can do just competing with you,\" she said, glancing for a few long seconds at Julie's bosom again. \"You sure are pretty.\"\n\n\"You are too, you know. You've got a certain something, that the girls up North don't have.\"\n\n\"Do I?\"\n\nJulie nodded. \"I'm starting to wonder if I dreamed you.\"\n\nEverbright smiled. \"Julie! That's such a nice thing to say! I'm gonna remember that, always.\"\n\nJulie and Everbright said their goodnights again, and Julie watched as the girl rounded a corner and was gone into the quiet night. The boys' voices could be heard, and the snap and crackle of the fire, but they couldn't see Julie and she couldn't see them. She stood there for a few moments, watching the red-glowing smoke and sparks rise from behind the beach grass, and then she turned and went inside, up to her room where her phone was, and she called her husband.\n\nThey discussed the production problems at Mark's work, under control now, he said, and Julie told him about the hot sun, and the nearly full moon, and the nice warm ocean water. She told of reading, and of falling asleep on the lounge on the beach, and of the boy's long walk to town, but she didn't tell Mark anything about her unplanned toplessness, or about listening to Josh masturbate. She told of meeting a delightful young local girl named Everbright, but she skipped over the part where Everbright gives all three boys blowjobs, just hours after meeting them.\n\nIt wasn't like Julie to keep secrets from Mark, but there were so many of them all of a sudden. Broaching one would have meant telling all, and it seemed best not to, at least for the time being, until Julie got a better handle on things.\n\nAfter the phone call ended, guilt pangs tugged at the edges of Julie's happiness. She couldn't help but wonder if she was making a mess of things, a worry all parents have, especially when they're in charge of other parents' children. They're not children anymore! she told herself, but it was still confusing. Seeing what she saw through the binoculars couldn't be anything but confusing for a thirty-six year old mom. And then there was the totally uncalled for excitement she'd felt as she lay nearly naked on the lounge for the boys perusal. Why, she wondered, did it feel good instead of bad?\n\nParenting conundrums always made her long for Mark's companionship, so they could work things out together. She picked up her phone to call him again, but she didn't make the call. She needed to think more, but she wanted him near, so she opened the doorbell camera app on her phone, the way she often does when she's home. Her phone's screen showed an image of her front steps, her front walkway, and her driveway. Mark's car was there, the visual grounding she was hoping for, but right behind it, in blatant orange with black trim, was the Subaru that Julie had seen so many times in the parking lot at Mark's business. His secretary's car.\n\n\"What the fuck!\" Julie said. She stared at her phone for the longest time. She saw a car drive by on the street, so the doorbell camera was working; it wasn't stuck in some sort of Twilight Zone moment, even though it seemed like it was. She'd just spoken to Mark and he hadn't said a word about Courtney being there, maybe working out the last of the production problems or some such thing. No, he'd said everything was back to normal, that he was glad to have a quiet evening to kick back with a drink and unwind.\n\nIt took a few minutes for the anger to rise up in Julie. She went to the kitchen, clumsily poured a glass of wine, stood there motionless, with campfire smoke in her nose and the still glowing phone in her hand.\n\nAn hour later, back in her bedroom, sitting on her bed, staring out at the black ocean, the tears came to her. She wondered why it had taken an hour, but deep down she knew why. Her marriage had been coasting on fumes for three long years. There was no shock, there was only sadness, the kind that felt deep but not bottomless.\n\nChecking her phone again, the orange car was still there, quiet and motionless. Wiping away the last few tears, anger confused her thoughts. Her mind spun with visions \u2014 Courtney's always pleasant smile, Mark naked on a bed, Logan's cock disappearing in Everbright's mouth. Julie's confusion suddenly felt deeper than her sadness. She pictured Mark and Courtney fucking, and then she imagined Courtney's voice saying Everbright's words: I like your son. You raised him up real nice.\n\n\"You go near Logan it'll be the last thing you do,\" Julie said to the empty room. \"Fucking my husband, huh, you little bitch? He'll lose interest in you someday. That's what he does.\"\n\nJulie cried. She heard the boys in the house, noises in the kitchen and then footsteps on the stairs. The house went quiet, and the orange car was still there on her phone.\n\nIt was still there in the morning, early. Julie sat on her bed, watching the little screen, watching until she saw Courtney and Mark exit the house, get into their cars and drive away.\n\nFor Julie, it was an odd feeling morning. Somewhat numb, she showered in the bathroom, before the boys showed any sign of being awake. It was there, in the shower, when she started questioning her sanity. Her husband Mark and his secretary Courtney were in her thoughts, but not as much as she expected. Drowning them out was Josh, a ghostly vision of him right there in the shower with her, his tall, perfect body towering over her, his seven-and-a half inch cock hard in his fast-moving masturbating hand. Julie could sense him there, the powerful presence of him, his eyes watching her as she masturbated right along with him, her forefinger and middle finger furiously rubbing her clit. As she climbed higher and higher toward an orgasm, she felt as if she could feel the warm water splashing off of his spectral body, and then her fingers were his fingers, and she nearly crumbled to her knees from the intensity of the orgasm that ravished her.",
        "Mumbling under the hissing spray of the shower, Julie regained her bearings. Mark was there in her thoughts again, and Courtney, fucking in her very own bed. \"What the fuck!\" Julie whispered. Breathing heavily, she finished washing, moaning quietly when she soaped her breasts. For a few fleeting moments her hands were Josh's again, cupping the weight of her tender, tingling bosom, slipping across nipples like a slick lube of sunscreen.\n\n\"Get a grip, girl,\" she said to herself as she stood on the bathmat, toweling herself dry.\n\n\u2014\n\nThe best parenting advice Julie had ever gotten was to \"take things one at a time.\" She knew she needed to talk to Logan about Everbright's blowjobs, even if it was awkward. That morning she got her chance, alone with him in the kitchen, with the others out on the beach already.\n\n\"I saw Everbright when she left last night,\" Julie said. Her voice wavered a little, from nerves and her pounding heartbeat, but she hoped Logan wouldn't notice it. \"She called me Julie.\"\n\n\"And...\"\n\n\"Nobody your age ever calls me Julie.\"\n\nLogan looked confused by his mother's worried expression. \"I can...tell her not to, if you want.\"\n\n\"No. No, it's not that,\" Julie said. She took a deep breath. \"I...saw her last night. What she did. With you boys.\"\n\nLogan's eyes opened a little wider. Julie could see his mind working. \"Oh,\" he said. \"You mean...when we were all...\"\n\n\"I went up to that little third floor balcony, to look at the moon and the water,\" Julie said. \" I sort of...saw the whole thing.\"\n\nLogan thought for a moment. He and his mom had talked a little about sex now and then, the way modern parents and teenaged children do, but the subject matter had never covered blowjobs or anything specific. \"Mom, it's not a big deal,\" he said. \"She's just not afraid of sex, that's all.\"\n\n\"Is that what you think? That I'm afraid of sex?\"\n\n\"Aren't all moms?\"\n\n\"No, honey. Sex isn't something anybody should be afraid of, but there's a time and a place for it.\"\n\n\"And on a beach by a fire isn't it? It seemed kind of perfect.\"\n\n\"Maybe,\" Julie said, \"but, maybe not when your mother's watching.\"\n\n\"You didn't have to watch,\" Logan said. \n\nJulie didn't know what to say. She was forced to steep in her embarrassment for a while, because Tyler and Josh had returned.\n\n\"It's gonna be crazy hot out there today Mrs. B.,\" Josh said. \"You gonna put on one of those bikinis you want us to check out?\"\n\n\"Oh,\" Julie said, suddenly flustered. \"I shouldn't have said that, Josh.\"\n\n\"No, I think It's cool, Mrs. B.,\" Josh said. \"See, I've got a different one on, too. My mom says it's too tight, but Brittany likes it. What's your vote?\" Josh stepped clear of Tyler so Julie could see all of him. \n\nJulie, smirking, said, \"Turn.\" She let her eyes do what they wanted to do, taking in all of Josh's topless form, from his strong shoulders down to to his muscular legs, with most of her gaze lingering on his taut stomach, his lower back, the black swimsuit covered curves of his ripe young ass, and, when he finished his turn and faced her again, his noticeable \u2014 soft, she assumed \u2014 cock bulge.\n\n\"I vote yes,\" she said, without thinking too much about it.\n\n\"Really? That's awesome!\" Josh said. \"I can't wait to see the one you wear today.\"\n\nJulie's body erupted in tingly goosebumps. Everything was going in an un-motherly direction again, so quickly, and so easily. Josh's flirty charm was very hard to resist. She couldn't help but wonder, would that soft but noticeable lump in his shorts swell and lengthen as the day wore on, when the heat of the sun warmed her soon to be bikini clad body? Maybe when she spread sunscreen lotion on her stomach and her breasts again, like she'd done the day before? Her mind jumped a track, to another place where it shouldn't be \u2014 if Josh's and Tyler's board short swimsuits are made like Logan's, they have no lining like a man's more old-fashioned style swimsuit, so the boys are all 'commando' under there, with their cocks and their balls hanging free. The only thing good about these imaginings, she thought to herself, is how well they keep my mind off of my asshole husband.\n\n\"What are you guys, like best friends now?\" Logan said to his mother and Josh.\n\n\"What's wrong with that?\" Josh asked him.\n\nLogan shrugged. He looked at his mother. \"You gonna tell them what you told me?\"\n\n\"Tell them what, honey?\" Julie said. Her thoughts were so rampant and twisted, she'd lost track of things.\n\n\"About Ever.\"\n\nJulie's eyes widened when she realized the subject was blowjobs. \"No. That was...just between us.\"\n\n\"Oh, sure. Secrets?\" Josh said. \"I thought we were friends, Mrs. B.\"\n\n\"Mothers and sons are different, Josh. You know that.\" Julie's thoughts flashed back to yesterday, to the boys' conversation that she'd barely but clearly heard, when she was lying topless right in front of their eyes. It was Josh's easy admission to listening to his mother and father \"fucking like crazy\" that had shocked her, that and his admission that he thought his own mother was \"hot.\"\n\nPart of Julie's brain wanted to change the subject, but that morning, yet again, the inappropriate part was winning. \"Are you voting?\" she asked Logan.\n\n\"For what?\"\n\n\"My bikinis. You haven't seen any of them before this week, I don't think.\"\n\nSmirking, Logan shrugged his shoulders. \"Yeah, I guess. How come you haven't worn them?\"\n\n\"I have. Mostly it was when your father and I went to Bermuda, three years ago. Remember, when you stayed with Grandma?\"\n\n\"Kudos for still lookin' hot in 'em, Mrs. B,\" Josh said.\n\nJulie chuckled. \"Thank you Josh. I guess my diet's worth it, once in a while.\"\n\n\"Totally,\" Josh said. \"You and my mom should hang out. She's, like, totally into lingerie.\"\n\nJulie, finally, was tongue tied. She stood there, with her eyes sparkling even though she didn't want them to, staring at Josh's handsome young face.\n\n\u2014\n\nUp in her bedroom, with her mind haunted with thoughts of Courtney fucking Mark, Julie put on one of her too sexy bikinis, another one with a thinly structured, bouncy, breast-accentuating top, and a bottom that's halfway between a cheeky racerback and a full-on thong. The view of her ass, in the mirror, struck her as deeply naughty, more so, even, than most of the underwear hidden away under the other soccer mom's clothes and never seen by boys eyes.\n\nFeeling as though she was taking instruction from the How To Be A Bad Mother handbook, she went outside sans sunscreen, making the fully conscious decision to slather it on down on the beach, when Josh and Tyler were watching.\n\nAnd so she did. The boys gathered around her as soon as she sat down on the lounge. For Julie, in her fragile emotional state, it was a comforting feeling, knowing that they liked being near her. Not all mothers get to experience that feeling, and Julie knew it. The boys' presence and friendly banter helped her to forget her troubles, and soon, after she thoroughly applied lotion to all the visible skin she could reach, and after Logan finished the job, gently applying lotion to her back, she glanced at the noticeably plumper-looking lump in Josh's shorts. It was just a quick, surreptitious glance, but it was good medicine for her bruised ego.\n\n\"Josh, I've heard you mention fishing, haven't I?\" she said.\n\n\"Sure, Mrs. B.\" he said. \"Me and my dad fish sometimes.\"\n\n\"The landlord said there's two fishing rods in the shed. Want to teach me?\"\n\n\"Yeah! Let's do it! Is there tackle and stuff?\"\n\n\"I think so. He sounded like he keeps it all ready for the guests to use.\"\n\n\"Cool! Yeah, maybe we'll catch some blues for dinner.\"\n\nThe rods, reels and lures were in better shape that Josh expected, but what truly excited him was Julie's desire for instruction. \"I've never done it,\" she said, after walking two hundred feet down the beach with Josh, far enough from the others so as not to hook them. \"Will you teach me?\"\n\n\"With this kind of surf casting, you use two hands and put your whole body into it,\" Josh said. He demonstrated and Julie imitated his movement with her own pole, nearly wobbling her big breasts right out of her bikini top. Her lure plunked into the water just a few feet away.\n\n\"It's a timing thing, with your thumb,\" Josh said. \"If you release the button at just the right moment it goes sailing way out there.\" He demonstrated again, and Julie nodded.\n\n\"I don't think I'm doing my arms right,\" she said.\n\n\"Is it okay if I...help you?\" he said, eyeing her fleshy near nakidity.\n\nJulie smiled. \"What, are you a gentleman now? All that flirting, and now it's time to touch me, and...\"\n\nJosh's warm skin, suddenly against hers, his front against her back, tightened Julie's lungs. She could barely draw a normal breath. Her husband was the last man to cause such a physical reaction, way back, nearly twenty years ago. Julie could feel Josh's swimsuit, with the lump of his big cock under it, against the small of her back, right where her similarly tall husband's falls.\n\n\"It's like this, Mrs. B.\" Josh said, holding each of her hands where they gripped the fishing rod, moving them to and fro in a smooth motion. \"You feel it? You go back smooth, and then you whip it forward. When you're right at the top end of that whipping motion you let loose your thumb.\"\n\n\"Uh huh,\" she said, still tight of breath and now speechless. She knew Josh was looking down the front of her, his gaze penetrating deep down into her nearly fathomless cleavage. It was then that she saw Everbright in the distance, the cute farmgirl, finished with her morning chores, jogging onto the beach in another wispy, probably homemade dress. \"Let's try it,\" Julie said, pulling the big, stiff, surfcasting rod back in a smooth backswing and then whipping it forward, with Josh's hands still on hers, his body still warm against the curve of her ass and the bare skin of her shoulders. \"Crap!\" she said, when her shiny lure slapped down into the water just ten feet in front of her.\n\n\"You got it,\" Josh said. \"You just gotta thumb it a little earlier.\"\n\nJulie glanced down the beach just as Everbright was strolling naked into the ocean, her wispy dress left behind on the sand. Logan and Tyler were already out in the gentle surf, smiling at her arrival.\n\n\"You're mom's a cute little flirt, isn't she,\" Everbright said to Logan, as he watched, from a distance, Josh's close up one-on-one surfcasting instruction. \"I love that bikini. She's got really nice ones. She ever fished before?\"\n\n\"No,\" Logan said. \"I don't think so.\"\n\n\"We fish for blues along here,\" Everbright said, \"but now's not the best time of day for 'em. She'll have fun just castin', though. If she's like me she'll be thinkin' that pole handle's about the size of a nice cock. Swim with me, unless you boys wanna keep lookin' at her nice tits.\"\n\nJulie, well aware that Logan and Tyler were watching her, made her first decent cast. Josh was still warm against the back of her, his hands still on hers, his lump of a cock feeling bigger, firmer against the small of her back. She heard the smile in his voice when he praised her, and she sensed that his eyes had shifted, away from the shiny lure that she'd cast, back to the fleshy lure of her deeply cleaved breasts, just as the stretchy little bikini helped to settle their voluptuous wobble. \"Awesome, Mrs. B,\" he said, his head close to hers. \"Freakin' awesome.\"\n\n\u2014\n\nA half an hour later, after casting for blues proved fruitless, Julie and the young sun-worshipers were together again, some sitting on the lounge chairs, some on towels on the sand. Everbright was wearing her flimsy little dress again.\n\n\"Do you swim, Julie?\" Everbright asked. \"I haven't seen you in the water.\"\n\n\"Oh, sure, I've been in a few times. The water's so warm here, it's as nice for swimming as I've ever felt.\"\n\n\"Do you always wear your nice bikinis when you go in, or do you like swimmin' nekid?\" \n\nJulie smiled. \"I've skinny dipped a few times in my life. Not very much, though.\"\n\n\"Mom, you have?\" Logan said.\n\n\"Sure. When I was your age.\"\n\n\"Mrs. B,\" Josh said, \"I'd love to see your senior picture sometime.\"\n\n\"From high school, you mean?\"\n\nJosh nodded, his eyes slightly dreamy, like he was conjuring up a vision.\n\n\"You could start just topless,\" Everbright said. \"There was a woman here last summer done that. She was all kind of shy, but me and her man friend, we talked her into it.\"\n\nJulie's eyes twinkled. \"Her man friend? Sounds like there's a story there, but maybe now's not the time to tell it.\"\n\n\"You could try it, is all I was thinkin',\" Everbright said. \"That's what's kinda nice about this stretch of beach up here. It's all so private like. All them rules from over on the mainland, they don't apply so much to us out here.\"\n\n\"Is that so,\" Julie said, smirking at the sun-bleached blonde girl. Julie was starting to wonder if Everbright was a nymph, a mythological spirit, one who lives in a hollowed out tree somewhere, or maybe in a burrow in the tall grass across the road.\n\n\"Think you might like to?\" Everbright asked. \"It sure feels nice to swim that way.\"\n\n\"No, I...shouldn't.\"\n\n\"Is it 'cause your breasts is so much bigger than mine?\"\n\n\"Everbright, we shouldn't be talking about this, not with the boys here.\"\n\n\"Why? They see 'em right there on ya. They know yours is so much bigger and fuller than my little ones. It's just a part of life, isn't it? Isn't life supposed to be talked about?\"\n\n\"It is, but...\"\n\n\"Oh, now I made you blush,\" Everbright said. \"I'm sorry, Julie. I just thought, since you show 'em so nice and sexy in that bikini, I thought maybe you was easy goin' with your body, like some folks are.\"\n\nThe boys sat quietly, their eyes showing quiet amazement at the conversation.\n\n\"Easy going? Like you are, you mean?\" Julie smirked.\n\n\"I guess,\" Everbright said. \"I don't even think about it, to be honest. I just always swum nekid.\"\n\n\"But you're not a little girl anymore. Do your parents know that you're so free-spirited with your...nudity?\"\n\n\"Oh, yes ma'am. My momma and daddy and brother swim nekid, too.\"\n\n\"Really? Even now, with you at this age?\"\n\n\"It's just how we always done it, I guess. We wash up outside, too, most of the year. I guess maybe washin' up outside's a southern thing?\"\n\n\"Is it...private, or...like the outside shower here that's right out in the open?\" Julie asked. \"I thought this one was for rinsing off the sand and salt water, before going in to change clothes.\"\n\n\"At home we just got a hose hooked up over a tree limb, but we take it down so as to make it easier to rinse each other, if we're washin' up together.\"\n\n\"Not with your father or your brother, though.\"\n\n\"Oh, yes Ma'am, they get plenty dirty, too. More so than my momma and me. They need some good hosin' off sometimes. I reckon we all do.\"\n\nThe out of the ordinary conversation surprised Julie just as much as it did Logan and the other two boys. Julie's big breasts, swimming naked, and Everbright hosing off her naked father and brother were all topics that none of them had thought they'd be discussing, but Everbright's easy-going ways seemed to control everything when she was around. The world seemed to slow to the speed of her orbit.\n\n-\n\nA quieter hour followed, one in which Julie's thoughts dwelled uncomfortably on her husband's infidelity. She'd suspected it for quite some time, but the proof was never there, never enough to kick off a full-blown confrontation. She lay on the lounge chair under the blistering hot Carolina sun, face down with her head turned sideways, watching the youngsters play catch with the soccer ball. They were all waist deep in the gentle surf, the boys clothed in swimsuits, Everbright naked as the day she was born. Her dress lay in a soft heap right there next to Julie's lounge chair.\n\nTyler punched the ball and it flew in an arcing curve above the water, landing on dry sand. Josh ran for it, his legs splashing through the foamy surf until they broke free. He picked up the ball and kicked it with the top of his foot, far out into the water. He was near Julie when he did it.\n\n\"Josh,\" she called. \"You still interested in putting lotion on an old woman's back?\" As soon as Julie said it her body tingled, almost like she'd felt a winter chill, but she was far from cold. She felt as if she was baking in a hot oven, the way she loved, and her skin was starting to shine like satin.\n\n\"Sure Mrs. B,\" Josh said, as he trotted over next to her. He towered over her, looking down at her shining skin, the thin strap of her bikini top, and the pretty-much-a-thong that mostly disappeared into the crack of her beautifully curved behind. \"You asked for our opinions on your bikinis, remember? I gotta give this one a ten.\"\n\n\"Wow, that's...top score, you mean? You haven't even seen the others.\" Julie had propped herself up on her elbows when Josh approached, giving an arch to her back that accentuated the sexy hump of her ass, which in turn accentuated the much-too-sexy little bikini bottom. It also freed up her breasts to hang in a provocative way, although she was seemingly oblivious to it, and to the general inappropriateness of a 'team mother' displaying herself in such a fashion.\n\n\"Yeah, maybe there'll be another ten. Who knows,\" Josh said. \"Did you bring many?\"\n\n\"Five.\"\n\n\"Nice. Two down, three to go,\" Josh said. \"I can't wait.\"\n\nJulie smirked. \"Do you flirt with all the mothers?\"\n\n\"Am I flirting? Oh, sorry Mrs. B.\"\n\nJulie's smirk intensified when she realized Josh was smirking, too. Theirs was a dangerous dance, but she was enjoying it. The sadness she'd felt when she was thinking about her screwed up marriage was all gone, obliterated by the handsome smirking smile of a college-bound boy with big, at-the-ready hands.\n\nShe flattened herself again, the arch of her back straighter but still with a feminine curve. When she was satisfied her breasts were mashed tight against the towel that she lay on, her arms and hands went behind her, untying the knot at the back of the bikini.\n\nJosh, still gazing down on her from above, felt his cock swell with new life. \"Wow. Can I change my vote to eleven now?\"\n\n\"You'd better stop with that flirting or I'll have to send you back home,\" Julie said, but her own flirty smile told a different story. \"You'll have to undo the neck part for me.\"\n\n\"Oh, wow. The Full Monty,\" Josh said, as he untied the bikini top at her neck. \"Is that what they call it?\"\n\n\"No!\" Julie giggled. \"That's like...all naked.\"\n\nJulie's head was down sideways again, and she could see Logan, out in the water, frolicking with his friends. They were having fun the way any kids might, and Everbright's Full Monty nudity didn't seem to be making any difference in the matter.\n\nJulie felt the sunscreen lotion hit her, cool and splattery, and then Josh's hands were on her, big and strong and sure of themselves, the way she knew they'd feel.\n\n\"Wow, you're skin's really hot, Mrs. B,\" he said. \"You called for me just in time. Tomorrow I should probably do it, like, two or three times.\"\n\nJulie closed her eyes and let her mind go where it shouldn't, to the memory of the binocular-aided view of Josh's much bigger than average cock, and how it stayed hard after he came in Everbright's mouth, seemingly ready to do it again.\n\n\"What do you think of Everbright?\" Julie asked. \"Are there girls like her at home?\"\n\n\"Not really. I mean, sort of, I guess.\"\n\n\"Are you going to tell Brittany you met her?\"\n\n\"I didn't yet,\" Josh said, \"but...I probably should, right?\"\n\n\"Does she get jealous?\"\n\n\"A little. Are you gonna tell Mr. B. that I put lotion on you?\"\n\n\"No!\" Julie said. \"And you're not going to tell him, either. This is between you and me, okay? Maybe we should make the whole vacation that way. I'd hate for you boys to get in trouble with your girls because of a vacation that was my idea.\"",
        "Josh liked the idea, but he didn't know how to politely say that he did. His hands were massaging just as much as they were spreading lotion, and the contented look on Julie's closed-eyed face led him to believe she was enjoying it. \"Your shoulders are nice, Mrs. B.,\" he said as he massaged them like an old pro. \"Do you work out?\"\n\n\"I do pilates with a friend of mine. Mrs. Mannion. Do you know her?\"\n\n\"Oh, sure. Her daughter Chrissy was a year ahead of us. So what's pilates? I've heard of it, but...\"\n\n\"It's kind of like yoga, but more intense. We use some equipment, which yoga doesn't do. I'm not good at it, but it keeps me in shape.\"\n\n\"Yeah, that's great, Mrs. B. I wish my mom'd do somethin' like that.\"\n\nJulie moaned when Josh's big hands massaged the sides of her waist. \"Mmmmm. You've done this before, I take it? Does Brittany like your massages?\"\n\nJosh smiled. None of the mothers, including his own, had ever asked about his physical relationship with his girlfriend. \"She does,\" he said, working down from Julie's waist to the small of her back, the final area of her that she couldn't easily reach herself. \"I can keep going if you want.\"\n\nJulie raised her head and looked at him, being careful to keep the front of her breasts against the towel. Josh ran his hands up the new arch of her back, making her tingle. \"What does that mean?\" she said, eyeing him suspiciously.\n\n\"Brittany says she likes it when I start at her feet and work back up her legs. Maybe you already did 'em, though.\"\n\n\"I doubt if I got the back of them very good. With this hot sun, better safe than sorry, right?\"\n\n\"Sooo, does that mean...?\"\n\n\"Do me,\" Julie said, feeling a soft rush of adrenaline when she flattened herself down, relaxing again.\n\nLogan, waist deep in the warm ocean, kept his eye on his nearly naked mother. It surprised him that she was letting Josh not only apply the lotion but massage her in a languid, lingering way. It was way more intimate than he ever thought a friend of his would be with his mother, especially with her bikini top untied the way it was. Everbright saw his concerned glances.\n\n\"Your mamma's as sexy as anyone, don't you think?\"\n\n\"Don't I think? That's a weird question.\"\n\n\"Why?\" Everbright asked. \"She didn't have you by fuckin' another woman, you know. It was a man what put his seed up in her, and I can tell, by the way that she acts, that she liked it.\"\n\n\"What the fuck are you talking about?\"\n\n\"All three of you are men, and she's a woman, that's all,\" Everbright said. \"Nature don't have no boundaries, other than whether we're attracted to men, or to women, or to both. The rest is all just instinct. That's what my momma taught me. Boundaries is all made up.\"\n\nLogan and Tyler stood in waist deep water, listening to Everbright's crazy-sounding thoughts as they watched Josh's leg massage move closer and closer to where his hands probably shouldn't be. He'd started at the ticklish foot, relaxed the muscles of Julie's calf, crossed the behind the knee area and was moving farther and farther up her thigh, thoroughly massaging things, moving at the speed of an inch every ten seconds of so. Everbright knew it was something that shouldn't be ended by an embarrassed son breaking things up, so she pulled Logan's head down to hers and kissed him, the first touch of any of the boys' lips with Everbright's.\n\nHer idea worked. Logan's focus shifted to the wet, naked girl who was taking him out to deeper water so he could fondle her without being seen by his mother. He needn't have worried. Julie wasn't looking. Her eyes were closed, her adrenaline rushing and tingling, her barely thinking mind ever so close to stopping Josh. She did, when he took his first feel of the ass cheek that was the destination of his leg-long journey. He'd been a gentleman and kept his massaging fingers a hands-width from the pussy-wet dampness of the terminus of her crotch, but it was all suddenly too much. \"Okaaaayyy,\" Julie sighed. \"Time to do the other leg.\" She wiggled the foot of her as-yet-untouched leg to guide him back to cooler territory, ending the inappropriateness as gently as she could.\n\nEverbright beckoned Tyler to the shoulder-deep water, and he joined the fondling party. Everbright kissed both he and Logan, pushing their swimsuits down so she could get a squeezing, stroking fist around each of the nice hard cocks. The boys four hands were busy on her body, their first touches of her that were serious, unlike the casual but flirty horseplay when they were playing keep away with the soccer ball. Everbright loved having their hands on her, on her tits, her ass, and her pussy. She moaned her happiness, trying to keep the happy noises in one boy's mouth or the other, so as not to distract Julie from Josh's sensual massage.\n\nIt worked for a while, but Julie opened her eyes when Everbright had an orgasm. It was a relatively quiet one, out in the softly hissing surf, but as soon as Julie laid eyes on the situation she knew what it was. Josh's massage was at the back of Julie's knee, not yet complete in the way that she wanted it to be, so she lay there, with her head on its side, looking at a sideways world that, as a parent, she wasn't prepared for \u2014 her son and his cute friend having a handsy kissing threeway with a girl, right before her eyes. It was far from anything she could have imagined happening on that trip to the Carolina sun.\n\nJulie heard herself moan, with eyes closed again, and this time she let Josh have his way. The gentlemanly hands-width was whittled, and whittled, until his knuckles brushed the warm, damp fabric covering her pussy, and then again, and then again. She felt drugged by the blistering heat of the sun, and by the situation, and she heard herself moan again. Her pussy was safe under it's minimal cover, but Josh's big, strong hands were on her ass, one hand per cheeky cheek, massaging a fresh squeeze of lotion into them.\n\n\"I think I'm good,\" she said, her voice a nearly breathless breath. \"Thank you.\"\n\n\"Yeah,\" Josh said, his own voice giving away his pumping heart. \"I'm...here, if you need more. I'm, uh...gonna go inside for a minute, get something to drink. You want me to bring you anything?\"\n\n\"No, Josh, Thanks. I'm just going to lie here for a while.\"\n\nJulie's heart pounded when she saw Josh trotting to the path to the house with a hard-to-miss tent in his swimsuit. Cooling his arousal in the ocean would have been logical, but the others would have seen it, so she could only assume he was going to his room, or to the bathroom, to relieve the pressure. The thought of it excited her to no end, leaving her nearly breathless, flat on her stomach, reaching behind with both hands to adjust the minuscule bikini bottom that Josh's massage had pushed even deeper into her ass crack. A dizziness overtook her; she was glad she was lying down, but then, nearly hyperventilating, she raised herself up on her elbows to try and stop the dizzy spinning. Her bare breasts showed, she knew it, but she needed to raise her head, and ground her vision, and breathe, just breathe.\n\n\"Bye, Julie,\" Everbright said. \"Got my afternoon chores.\" \n\nEverbright's sudden presence was almost illusory. She'd pulled on her dress right there next to Julie, with nary a sound, and she scampered away as Julie said, \"Bye.\"\n\nA corner of the eye view told Julie that her son and Tyler were approaching, so she flattened herself again, with her bare breasts oozed out to the sides of her, like they were inflated with air. \"You guys...going in?\" Her glancing eyes were curious \u2014 after what the boys had done to Everbright, why weren't their swimsuits tented by erections like Josh's had been? It was then that she realized Everbright had probably done to them what they'd done to her, down under the water. A true little threeway, with three orgasms, not just one. It caused Julie's breath to catch again, but she tried to pretend all was normal. \"Bring me a lemonade?\"\n\nWhen the boys were out of sight, up the path to the yard, Julie sat up and re-dressed her breasts, tying the too-sexy bikini around herself. She though about asking Mark for some advice, but she knew the phone call to him would be awkward, and she really didn't want to talk to him ever again, even though she knew that, at some point, she had to. The 'big confrontation' about his secretary should be done in person, she thought, but that was five long, hot days away. She'd need sunscreen on her back each of those days, and Everbright would be around. It was as perfect a distraction from Julie's problems as she could imagine, even if it was as dangerous a place as she'd ever found herself in.\n\n\u2014\n\nThe evening campfire crackled, drawing air in like a whisper, quiet and peaceful. Everbright appeared after a little while, coming through the path, emerging from the beach grass as silently as a ghost. Julie, sitting cross-legged with a wine glass in her hand, smiled. Everbright was the reason for the quiet around the campfire\u2014nobody had known quite what to say about the sexual situations that she'd stirred up over the last two days, but seeing her helped everyone to relax a little, even if they didn't know why.\n\nIt wasn't long before Everbright was telling about the ships that had foundered on the island, most of them in the far-off past. The wooden bones of two of them could still be seen, she said, hulking weathered timbers that were skeleton-like.\n\n\"They was pirates on one of 'em, back around seventeen-fifty or so,\" she said. \"Maybe there was Indians here, but them pirates is the original settlers, as far as we know, and my Momma and my brother and me's descendants of 'em. Vikings with blue eyes. Northern pirates.\"\n\n\"I thought Vikings were, like, from back way before then,\" Logan said.\n\n\"They was still around, far as I know,\" Everbright said. \"That's how we explain all our blonde hair and our light blue eyes. Momma says so. She says they kept their women here. Some of them women swum to the mainland, but lots of 'em stayed. I like to think its because of the way they was treated. The sex, I mean. It must have been real good. You know that's what them women stayed for, because the treasure they was given didn't buy nothin' out here way back then.\"\n\n\"Maybe they were prisoners,\" Julie said.\n\n\"No, they weren't that. They was happy here, same as my momma is, same as I am.\"\n\nThe fire crackled and sparks scattered, embers lifted on the heat, rising toward the nearly black sky. Josh told a ghost story, and Tyler shared one, too. Everyone, even Julie, wondered if there would be blowjobs again, later, after 'the mother' went back to the house, but Julie lingered, enjoying the company of her young friends. The gathering broke up when Everbright left to shovel manure from the barn, the last of her daily chores before bedtime.\n\nBack in the house, up in her room, Julie knew she should call Mark, but she didn't. After reading a few chapters in bed, she drifted off to sleep, with thoughts in her mind of Josh's nice massage. She wondered if the other soccer mothers daydreamed about the handsome boys. They must, she thought. They must.\n\n\u2014\n\nJulie served the boys breakfast at the kitchen table, stacks of pancakes with butter and syrup, with pan fried sausages on the side. A feeling of contentment washed over her when the plates were all in front of the boys and they were hungrily digging in. Dressed in nothing but her short summer robe, she enjoyed the glances each of the boys gave her jiggle-breasted body, so much so that she broke out in goosebumps a time or two that morning. Before she took a moment to fix herself a plate, she stood behind Josh's chair and put her hands on his shoulders, wondering if he felt the happy tingle she was feeling. \"What do you boys have planned for today?\" she asked.\n\nLogan, the only one without his mouth full, said, \"We're gonna go up the beach, where Ever was saying. We wanna see those shipwrecks.\"\n\n\"Oh, nice,\" Julie said. \"Did she tell you how far it is?\"\n\n\"There's one, like, two miles up, and another one a mile after that.\"\n\n\"You'd better bring some granola bars,\" Julie said, \"and plenty of water. Maybe some sandwiches, too.\"\n\n-\n\nThe boys set off on their hike, and as soon as they were out of sight Julie took off her robe. Everbright's easygoing nudity inspired it, but for Julie it was much more exciting than easygoing. Standing nude on the old house's back porch, looking out over the top of the beach grass at the white sand and the vast blue sea, all of her marital difficulties vanished from her mind again. She felt like pure woman. It was empowering in a way she hadn't expected. She felt as if any man she wanted could be hers\u2014a fisherman; a shop owner; the family's wealthy, single lawyer back home. Even a pirate, she thought, if one were to appear out of the ether.\n\nShe was inside, straightening up the house, trying to resist the urge to clean and snoop in Tyler's and Josh's rooms, when Everbright stopped over, directly after finishing her morning chores at the farm. She'd somehow climbed the three steps to the back porch silently, and was peering through the screen door at Julie's naked body.\n\n\"You look like you're all ready for some swimmin',\" Everbright said.\n\nJulie nearly jumped out of her own skin. A quick blush tingled her from head to toe as she said, \"Oh my God, what if you were the landlord, or...somebody!\"\n\n\"Then they woulda seen what I'm seein', and they woulda smiled like I'm smilin'. You're even more beautiful than I thought you was.\"\n\nEverbright whisked her own dress off over her head, and she was naked, too. A whispery giggle came out of Julie when Everbright opened the door and walked in. Julie hadn't been naked with another female since she was a young girl, and yet it felt okay, almost natural, in a dreamy kind of way.\n\n\"Are your boys here, with you lookin' like that?\" Everbright asked.\n\nJulie shook her head. \"They went in search of pirate treasure.\"\n\n\"The treasure's right here, I reckon,\" Everbright said. \"Momma says boys are sometimes too dumb to see it.\"\n\nJulie giggled nervously, feeling the eye-sparkling electricity that came with the shared nudity. \"Are we really...swimming? Like this?\"\n\n\"You need to, at least once,\" Everbright said. \"You can remember back on it this winter, when it's icy cold up there in y'all's part of the world.\"\n\nJulie smiled, but a tinge of sadness tightened her lungs her when she thought about home.\n\n\"I'll race ya,\" Everbright said. She bolted for the door, flung it open and ran down the porch steps.\n\n\"Ever!\" Julie yelled, wide eyed. There was nothing to do but run, with breasts bouncing, naked and free into the bright sunny morning, chasing after the most delightful girl. Julie didn't even look, up the beach or down the beach, to see if anyone was around. She just ran, with the warm wind in her hair, and she splashed into the gentle surf, swimming as fast as she could to catch the porpoise-like blonde.\n\nWhen she reached Everbright, Julie was surprised to be able to stand, far out in the still-shallow ocean. She was even more surprised when Everbright moved in close and kissed her, in a passionate, sexual way, their bodies touching and arms embracing down under the water. It felt purely loving and sexual in a way that her kisses and embraces with Mark hadn't felt in what seemed like forever. The handsy exploration of Everbright's body started without any thought, and just like that each woman had a hand on the other's pussy, and fingers entered insides, and clits were gently massaged. It all happened while the kiss burned on, a kiss that made Julie weak in the knees.\n\nJulie's orgasm was as potent as any she could remember. She gave Everbright a lovely one, too, and that surprised and thrilled Julie almost as much as her own. Their hands left each other's pussies and went back to embracing, and another long, endless kiss filled Julie with wonder.\n\nSome delightfully childish frolicking play ensued, much of it closer to shore, with their breasts showing above the water. It excited Julie to no end, and she thrust her big breasts out with an arched back, waggling them back and forth like a stripper, giggling as she did it. It was a new kind of nudity, a carefree, fun kind, and Julie was quickly swept up in the enchantment of its unvarnished truth.\n\nShe was quickly swept up in Everbright's spirit, too, following the girl's tugging hand to the outdoor shower next to the house, where each of them had trembling, soapy, slippery orgasms. The next step was the bedroom, Julie following Everbright there, the wet-haired blonde instinctively knowing which room belonged to the thirty-six-year-old mother. They tumbled wetly onto the double bed, with the sea breeze and the bright sun coming through the big open windows, and Everbright's young mouth made Julie cum.\n\n\"Put your mouth on me now, Julie,\" Everbright said, her voice soft and dreamy. \"If you want to.\"\n\nJulie was surprised that she did want to, and her tongue was moistening at the thought of it. Everbright rolled, legs spread wide, her lithe young body flat on its back, her all-over tanned skin almost glowing in the bright, soft daylight. Julie's mouth hovered an inch above the spread-open wet pussy, her tongue touched the soft warmth of it, and her taste buds lit up with a new, delicious flavor. The flavor of girl. The flavor of happy, happy girl.\n\nMore orgasms happened, of course, but the cuddly feminine warmth after them was just as revelatory for Julie. It was a new kind of sex, and she loved it.\n\nLying there in the glow of it, Julie told Everbright about the problems at home, and her worry of how a divorce would sadden and confuse Logan, at a time when he was just finding his way with relationships.\n\n\"Don't worry none about him,\" Everbright said. \"He'll figure out what's right and wrong. You just worry about you.\"\n\nJulie didn't want to talk about sad things, so she asked Everbright about her family. Everbright told more about growing up on the island with her brother.\n\n\"What his name?\" Julie asked.\n\n\"Pony. You'd think with a name like that he'd have a big ol' dick, but he don't. It's plenty nice, though. I guess cause he knows just how to use it. You must like the bigger ones, cause all the boys you brung down here got 'em.\"\n\nJulie knew she should be shocked by Everbright's seeming admission of sibling incest, but instead she just shook her head, partly because her mind was suddenly full of worry about her own knowledge of Logan's and his friends' cocks. It seemed a no-brainer for a mother to deny that kind of thing. \"Ever, I wouldn't know about that,\" she said.\n\n\"Sure you do, Julie! You watched me suck 'em all the other night!\"\n\n\"You...saw me? Oh, no! Did...the boys see me?\"\n\n\"I'm pretty sure they didn't, but I'm pretty sure they would have liked to have. They come here for the same reason you did, I'm thinkin'.\"\n\nJulie, with eyes wide, said, \"And what reason would that be?\"\n\n\"So you can all get to fuckin'. It's what you come here for, isn't it?\"\n\n\"Ever! No!\"\n\n\"I suppose maybe you don't even know it. But why else? You and three boys like them, all alone out here. Those bikini's you brung with you, they sort of give away what you was thinkin', even if those thoughts was way down inside, don't you think?\"\n\n\"Ever, that was a mistake. My husband was supposed to be here. Those were for him, and...I just forgot to unpack them and bring some less...\"\n\n\"Less sexy ones? I'm not sure we truly forget those kind of things. Do you think we do? I think we got sex way deep in our brains. Momma says it's in control of everything.\"\n\n\"Well I won't argue with that, but...\"\n\n\"I just hope me being here isn't keepin' you from it.\"\n\n\"Keeping me from what?\"\n\n\"Fuckin' your boys. I mean, they all want to, and you want to. I learned from all the folks who come here that this place is all about it. Momma says it's the spirit of them pirates and their big ol' cocks. Can you imagine all them men here, with those willin' women, out in the hot sun? The women was all topless, I'm guessin', or maybe nekid. There was surely big ol' orgies every night, probably around a big fire.\"",
        "Julie hadn't blinked in a while, her eyes open wide, taking in all of Everbright's spirited energy. Lying in bed naked with another woman was new enough, but to be doing it with such a fanciful dreamer made it all the more extraordinary. But it was the talk of fucking the boys that was overwhelming Julie's thinking, and she didn't want it to spoil what she was in the middle of\u2014the most exciting sexual experience she'd had in ten years or more. She rolled on top of Everbright, said \"You need to stop talking now,\" and kissed her. And then she kissed Ever's perky little tits, and her flat little belly, and then she kissed and tasted a pussy again, and she let her tongue do what it wanted to do, trying to mimic all the things that Ever's tongue had done to her. \n\nEver's loud, easy moans floated out the open windows toward the beach. The boys were there, Tyler limping, with a jellyfish sting on his foot. They stood and listened as Everbright's moans went higher and higher in pitch, and then her sounds were the pure vocalizations of orgasm, giggly gasps and lovely gasping squeals. Then there was nothing but the soft sound of the surf.\n\nThe boys waited there, on the beach near the burned-out campfire, for the longest time. Julie and Everbright were naked when they walked down the path through the dune grass. The sight of the boys nearly stopped Julie's heart, and she turned and scurried away, quickly out of their sight, which she was glad of.\n\nNudity was nothing new for Everbright, of course, so she went to the boys and they showed her the odd looking red marks on Tyler's foot. \"That's not a bad one,\" she said. \"Y'all need to pee on it. There's somethin' in pee that takes away the sting.\"\n\n\"No way!\" Tyler said.\n\n\"You can do your own when it's your foot like that. Or I can do it for ya. I can't aim it like you boys can, but...\"\n\nTyler and the boys were speechless, so Everbright took Tyler's hand and she led him to the wet sand near the water's edge. She squatted and reached for his foot, holding it, with both her hands, right against her warm pussy. Her urine flowed and Tyler felt the amazing, almost steaming warmth of it. She gently massaged the wetness into the red wound, moaning as more pee flowed out of her, adding to the warm healing. Tyler's cock hardened under his swimsuit, and Everbright smiled when she saw the lump of it. \"Feel better?\" she asked him, taking the liberty of massaging her pussy with the top of his foot.\n\nHe nodded, still speechless. Logan and Josh stood next to him, stabilizing his one-footed balance. When Julie came down the path, dressed in shorts and a t-shirt, Logan went to her to explain the unorthodox goings-on.\n\n\"Tyler got stung by a jellyfish. Ever just peed on it. She said it's what you do.\"\n\n\"She did it?\" Julie said, her eyes wide, amazed again at Everbright's free spirit.\n\nLogan nodded. He looked at his mother's damp, matted hair, still unable to believe the sounds he'd heard coming from her bedroom window.\n\nJulie's presence embarrassed Tyler. Everbright told him he couldn't go in the water until the urine had a chance to work, but his cock was hard and his swimsuit showed it. There wasn't much he could do except blush.\n\n\"You sure that'll be all right?\" Julie said to Everbright. \"We don't need to take him to a doctor?\"\n\n\"No, it'll fade,\" Everbright said. \"He might not feel much like walkin' though.\"\n\n\"It's really not too bad,\" Tyler said, glad that his cock was slowly shrinking.\n\n\"The peein' helped, right?\" Everbright said. \"Betcha ain't had a girl pee on you before. Or maybe you had,\" she smirked. \"Some men like that kinda thing.\"\n\nTyler let a loud breath out of his nose, and he wasn't happy that his cock was growing again, pushing at his swimsuit, making itself known.\n\nA change of subject seemed to be in order, so Julie said, \"I guess you didn't find any pirate treasure.\"\n\n\"Ain't none to be found,\" Everbright said, \"other than all of it that's in the air all around here.\"\n\nAnd in those Viking-blue eyes of yours, Julie wanted to say. \"Think maybe you should put your dress on, Ever? Just in case somebody sees us all?\"\n\n\"Oh, yes Ma'am. I always forget.\"\n\nThe boys and Julie watched her run to the house and back, slipping the dress onto herself over arms that reached for the sky. It was a thin dress that the bright light of the day shone through, showing the petite, naked form of her in silhouette.\n\nJulie glanced at Tyler. It was a worried-mother type of moment, due to his injury, but the big lump in his swimsuit, a lump that was fortified yet again by watching Everbright put on her dress, was what truly caught her eye. It was a moment when all of her own breath went out of her, the way Tyler's had done moments ago, but in Julie's case it came from the realization that she really did want to fuck the boys, Josh and Tyler both, and that Everbright had been right about everything. The sun-bleached-blonde girl seemed to know the ways of the world better than Julie ever had or ever would, and Julie's sudden awareness of all the truths took her breath away. The hairs on her arms stood up, and her breasts, naked under her son's old soccer team t-shirt, came to tingly life, with nipples poking at the thin cotton. It didn't go unnoticed by the boys.\n\nThe rest of the day drifted by in the way Julie imagined all Southern days do, with drug-like heat fueling languid thoughts of naked bodies, men's and women's both, swimming in warm water, lying spread-eagle on clean white sheets. They were vivid daydreams that interrupted her reading on the porch, and distracted her from paying attention to her driving when she went into town to pick up some orange juice, ground beef, and hot dogs at the store.\n\nEverbright didn't return that evening, so the boys and Julie picked a well worn DVD off the shelf and watched it on the old television, a movie called Into the Blue, about searching for pirate treasure.\n\n\"That kinda sucked,\" Josh said, when it was over.\n\n\"I wish it had been 'R' rated,\" Tyler said. \"That Jessica Alba's got a sick body.\"\n\n\"Mrs. B., did you like her bikinis?\" Josh asked.\n\n\"Yeah, I guess so,\" Julie said. \"She looks good in them, but...I guess I was watching the guys most of the time. That's that Paul Walker guy that died, you know.\"\n\n\"Oh, no shit?\" Josh said. \"Wow, that's a bummer. But, yeah, I was gonna say, you look even better in a bikini than she does Mrs. B.\"\n\n\"You're crazy,\" Julie said, feeling a sudden flush of heat that warmed her above and beyond the already warm living room. She sipped her wine, fueling the onrush of tingles. \"She was at least ten years younger than me.\"\n\n\"I don't know, Mrs. B., I'm thinkin' maybe that's got nothin' to do with it.\"\n\n\"Yeah? What does?\" Julie said, tingling even more as the conversation entered dangerous territory.\n\n\"For real? You wanna know?\" Josh said.\n\n\"I do,\" Julie said, smirking. \"Give me the scoop.\"\n\n\"The scoop?\" Josh giggled. \"You sound like my mom sometimes. All right, let's see. Your ass is just as sweet as hers, and your...front side is...even nicer.\"\n\n\"Wow,\" Julie said, surprised by Josh's candor. \"That's...very nice of you to say.\"\n\nTyler, emboldened by the sparkling pridefulness in her eyes, said, \"I think so too, Mrs. Burch.\"\n\n\"Thank you sweetheart,\" she said, suddenly feeling the three glasses of wine that went down so easily during the movie. \"You're a bit of a stud yourself. All three of you boys are very easy on the eyes. Josh honey, you never said anything about today's bikini. What's the verdict?\"\n\n\"Oh, that one's smokin', Mrs. B.,\" he said. \"I can't really pick a winner from the ones I've seen so far.\"\n\n\"Really? How about this\u2014if you were a fashion designer, what little details would you change about them?\"\n\n\"If I was a fashion designer...\" Josh said, \"...I'd probably be designing men's bathing suits, if you know what I mean.\"\n\n\"Ha!\" Julie laughed. \"Good one. Yeah, you're probably right.\"\n\n\"I always figured women designed stuff like bikinis,\" Logan said.\n\n\"A lot do, yeah,\" Julie said. \"There's men, though.\"\n\n\"Wow,\" Josh said. \"That's a job I should look into. Somebody must design lingerie, too, right? I never really thought about it.\"\n\n\"Yup,\" Julie said. \"Bras and panties, and garter belts and...other unmentionables.\"\n\n\"Do you like all that stuff Mrs. B.?\" Josh asked. \"I mean, like, all the fun stuff?\"\n\n\"Young man, are you discussing bedroom lingerie with your best friend's mother?\" Julie kidded. \"That's entirely inappropriate,\" she added, winking.\n\n\"My mom's got a whole drawer full,\" Josh said.\n\n\"My mom's got some, too,\" Tyler said.\n\nJulie looked Logan square in the eyes. \"And you, young man? What do you know of your mother's unmentionables?\"\n\nLogan smirked. \"You've got some.\"\n\n\"And how do you know that?\"\n\n\"I...looked. I think maybe I was...trying to get ideas.\"\n\nJosh laughed. \"Yeah! You were gettin' 'em all right.\"\n\nLogan blushed. \"No, I mean...for Kayla.\"\n\n\"Dude, you coulda done that on the internet,\" Josh said. \"But you don't have to get all red-faced, we get it. Sniffin' mom's panties is fuckin' hot.\"\n\n\"Oookaayyy!\" Julie said, herself red in the face. \"Maybe we should change the subject. Actually, maybe we should turn in for the night. All this heat and sun wears me out.\"\n\n\"I can't believe how warm it is, even at night,\" Tyler said.\n\n\"Are you all sleeping okay?\" Julie asked. \"The bedroom's ceiling fan is just enough for me.\"\n\n\"Yeah, it's good,\" Josh said. \"It feels southern.\"\n\n-\n\nIt was late that night when Logan heard his mother in the hallway outside everyone's bedrooms. He'd been thinking about her, so he got up to see if she was all right. She wore her short summer robe over her naked body, and had a towel and a bag of toiletries in her hand.\n\n\"I'm going to try that outdoor shower,\" she said. \"Don't you love that it's so private here?\"\n\nLogan wondered if she'd somehow forgotten his two horny friends. As he watched her walk down the stairs, he thought about her morning with Everbright, and he wondered why she seemed so different than she does back home.\n\nIt was a short phone call to Mark that had given Julie the idea for a shower. He'd complained of being tired from not sleeping well because Julie wasn't there, but she knew full well his fatigue was due to fucking his brains out all night in her very own bed. His secretary's car was in the driveway again.\n\nWhen the call ended Julie sat still, and thoughts of Everbright took away the pain. They were wildly vivid thoughts, quick flashing memories of Everbright licking at her pussy and lifting her to an orgasm that was so much better than any Mark had ever given her. Even Everbright was impressed with the beautiful ferocity of it, and tried to prolong the ecstasy with a quick second one, but Julie had giggled and pushed her away. Sitting there alone in her quiet bedroom, after talking to Mark, she wished she hadn't pushed Everbright away. Two orgasms in a row would have been even more astonishing than the glorious first one.\n\nJulie sat there and thought about Everbright's nudity, and the way Josh's hands felt when he was massaging, slippery with sunscreen lotion. She thought about the first day, when she was topless, pretending to be asleep, and she thought about the naked glimpse the boys had gotten of her when she and Everbright scampered nude down the path. It seemed no stretch at all to go ahead and use the outdoor shower, especially in the dark of night.\n\nShe was aware, of course, that Josh's bedroom window was the one right above the outdoor shower, and it was most likely open wide to the night's breezes, the same as all the other windows were in the wonderful old house. \n\nJosh's light was off, but he was awake. After hearing the exchange between Julie and Logan in the hall, he'd already positioned himself for the best viewing angle. Much to his astonishment, Julie, down below his window, on the lawn, rounded the corner already naked. Her body was illuminated, more than he or she had expected, by the lamp inside the living room window. She held a shampoo bottle and a bar of soap. The spigots squeaked when she turned them, and then she was wet, her eyes closed, her head tipped back, with water cascading off of her aroused, dark-nippled breasts.\n\nSoaping herself from head to toe required her to step out from under the stream of water, and that's when Josh pushed his sleeping shorts down and began to stroke his hard, wildly electrified cock with his fisted hand. It was such an intense feeling he lost his other thoughts, the ones about staying still and out of sight and staying quiet. Even with the sound of the shower spray, Julie heard him, the unmistakable sounds, and without looking at him she gave him what he wanted\u2014her soapy hands on her soapy tits; her fingers washing her clit and disappearing inside her fleshy pussy; her own quiet moans; and a breathless, trembling orgasm that rose up in her quicker than she'd expected. She heard Josh's quiet grunt when he came, and she wondered if he'd splattered his cum all over the wall, or the floor, or if maybe he'd caught it all in his other hand, warm and slippery and messy.\n\nShe stepped under the water again, weak-kneed and breathless, rinsing herself before quickly washing her hair and walking away, back into the darkness. Josh couldn't see it, but she walked up onto the porch completely naked, drying herself with the towel she'd left there. She did most of the drying sitting down, because her mind was swirling, almost dizzy, overwhelmed with new sensations and excitements. It had been quite a day.\n\nBack in her bedroom again, in bed, naked under a white sheet, with the ceiling fan spinning above her, she read for a while to calm her mind enough for sleep.\n\n\u2014\n\nJulie wanted Josh to massage her with lotion again. It was soon after breakfast, but the heat of the day was off to a very warm start. She made her grand entrance, down the path through the beach grass, to a rousing call of \"I love that one Mrs. B.\" It was Josh, of course, stopped cold by the sight of her, with the soccer ball under his foot. \"That green looks amazing on you.\"\n\nShe stood by the lounge that was 'hers' and watched him as he approached. \"You really like the color?\" she said. \"When I bought it I though the shiny green was too flashy.\"\n\n\"Flashy's good on you, Mrs. B.,\" Josh said, stopping three feet away from her. \"You got what it takes.\"\n\n\"Ha!\" Julie said, smiling brightly. \"You're good for my self confidence.\"\n\n\"I'm trying to think like a designer, like you said,\" Josh said, staring blatantly at her big, nicely bikinied breasts. \"This one curves really nice. The way it shows a little more of the side of you...is it all right if I say fuck yeah? Because this one's definitely a fuck yeah.\"\n\nJulie chuckled, her eyes twinkling like they were lit from within. \"Is the back good?\" she said as she turned. \"I felt really daring when I wore this in Bermuda.\"\n\n\"Fuck!\" Josh said. His eyes took in the entirety of her near-nakedness, but most of his wide-eyed stare was at the pure thong perfectly decorating her nice ass. \"Mrs. B., you are so fuckin' hot.\"\n\n\"Designers aren't supposed to talk that way,\" she said, winking at Josh over her shoulder. \"You could get in trouble.\" Her eyes went to the growing lump that extended down the left leg of his swimsuit. \"I need one of you guys to lotion me again.\"\n\n\"Yeah, for sure,\" Josh said, taking a quick glance at Logan and Tyler. \"I mean, I'm right here, so...\"\n\n\"Yeah?\" Julie said, turning to face him. \"I did like the way your hands felt on me. You could have a career as a masseuse. Did you decide on a major?\"\n\nAs Josh told her about his college plans, majoring in Sports Management, Julie spread her towel on the flattened lounge and climbed onto it on her hands and knees, taking another few moments to smooth out the wrinkles. She looked more than a little like a porn star readying herself to be fucked doggy style.\n\n\"Damn, Mom,\" Logan said, arriving at Josh's side with Tyler. \"You wore this one?\"\n\n\"This bikini? I did, in Bermuda. I was telling Josh, it was...kind of...a thrill.\"\n\nAnd today isn't, Logan wondered? His own cock swelled as he watched her transition from doggie style position to prone, flat on her stomach, with her remarkably awesome, remarkably naked ass humped up like a wet-dream. \n\nIt was that kind of a day for Logan. His mother's sexy body in a sexy bikini; her swaying, sun-browned breasts; Everbright's appearance and now-almost-normal nudity; and the heady combination of all of it during a two-on-three soccer match on the hot, soft sand, when Logan and Tyler took on Josh, Julie and Everbright. There were moments during the match when Logan, closely defending his mother's remarkably agile ball movements, lost himself in the giggly fun of it and thought of her as just a girl. An amazingly sexy girl. His arms brushed her big swaying breasts more than once, and twice he tumbled to the hot sand with her, in a laughing heap, their legs tangled together, sticky with gritty sand. They both would have laughed and followed orders if someone had said \"stay down there, you two, and roll around with each other until you're breathless and super horny,\" because, truth be told, they already were.\n\nSo it was an interesting day, as the others had been, there on that hot Carolina beach. But the day faded, as all days do, dinner came and went, and Julie, finally, had a long phone call with Mark, broaching many difficult subjects. After it, she needed an extra large glass of wine.\n\nThe nightly campfire seemed an odd accompaniment on nights when it didn't dip below eighty degrees, but it was relaxing and gave the evening a focal point, good for contemplating life's mysteries. They were being teased out, little by little, the biggest chunks wrestled out of their hiding places by Everbright's forthright questions. With the fire well and truly burning, she appeared again, fresh from her evening chores at the farm. \"I come over directly tonight, so as y'all can see what I smell like,\" she said, sitting down next to Julie and the boys. \"I figure I can clean up in the ocean. Tonight's plenty warm enough for a nighttime swim.\"\n\n\"Ooo, that sounds...nice,\" Julie said, starting in on the second refill of her extra large glass of wine.\n\nThe fire crackled, and Everbright asked about Tyler's jellyfish sting. She told more about the pirates, the stories she'd heard, legends most of them, but a few certain truths based on some archeology that had been done. There was, in fact, evidence that the island's ancient settlement was populated mostly by women; it's what gave rise to the legend that it was a breeding ground, where pirates relaxed with willing wenches after an arduous journey. \"Can you imagine all them big ol' cocks when those men rowed ashore, seein' all them naked women waitin' for 'em?\" Everbright said. \"Those men probably smelled worse than me, but I imagine their cocks was all as hard a ship's mast.\"\n\nJulie giggled. \"You certainly can paint a picture,\" she said. She didn't even glance at the boys, the way she would have, nervously, a day or two ago. Everbright's casually sexual talk was seeming more and more normal.\n\n\"Y'all ever done group sex, like they done? Like a big ol' orgy?\"\n\nEverbright's question hung there in the still-humid warmth of the night, like it was hovering around the fire, waiting to be grabbed. No one reached for it, but Everbright knew there were answers there, in the crackling, glowing dark, so she tried to find them.\n\n\"Y'all turning shy on me? My momma says you can't have a fire this hot and not have it burn the truth outta ya.\"\n\nThe silent seconds seemed long, but Everbright's patience paid off. \n\n\"We have. I mean...I have,\" Josh said. \"I won't say where, but...there was a tournament and...some of the cheerleaders from another team came to our room and...you know.\"",
        "\"Oh, wow,\" Everbright said, her eyes twinkling in the firelight. \"See, now I missed out on all that, bein' home schooled. Would I have been the right kind of girl to be a cheerleader?\"\n\n\"Oh, yeah!\" Josh said. \"For sure!\"\n\nJulie had an odd look on her face. \"So this was...at State's? Just a few months ago?\"\n\n\"I probably shouldn't say,\" Josh said.\n\nLogan spoke up. \"Yeah, Mom, it was.\"\n\n\"Oh my God!\" Julie said. \"You three and Johnny all shared a room, right? It was...all of you? Where was Coach and everybody?\"\n\n\"Sleeping, I guess. It was a big hotel.\"\n\n\"Wow,\" Julie said. \"Okay. That's...okay. Nobody got hurt. Nobody got pregnant, right? I mean, I guess we'd know by now...\"\n\n\"No, Mom, it was...good.\"\n\n\"I'll bet it was!\" she said, her eyes wide. \"I had no idea you were so...experienced.\"\n\n\"How 'bout you, Julie?\" Everbright said. \"Tell us about some of your experience.\"\n\n\"Group...sex, you mean? I don't have any.\"\n\n\"Never none? You ever think about it? Like, fantasies and stuff?\"\n\n\"I think...maybe...everybody does,\" Julie said. \"Don't they? Isn't it...normal?\"\n\n\"It's totally normal,\" Everbright said. \"I imagine every mother with a son thinks about his friends that way. Not thinkin' about it would be about impossible, right?\"\n\nJulie was stunned that she'd been outed, even though the sudden truth was still just a guess Everbright had made. The girl knew things, and Julie didn't know why. Is it written on my face that clearly, Julie wondered? Did the boys know, even before it was said?\n\n\"Awful lot of quiet around here all a sudden,\" Everbright said. \"It's not like it's one sided or nothin' Julie. They wanna fuck you too. We all wanna fuck each other. It's just how life is. It makes me sad sometimes, to see how hard it is for some folks. Not y'all. Y'all are cool, but some folks, they just have such a hard time seeing that fuckin's just one of life's pleasures, and they should just get on with it and have some fun. Ain't nothin' more fun, right?\"\n\nJulie let a nervous laugh escape, sounding like huffs of breath, but the words she knew she needed to say didn't follow it. They were words a parent would say, about sex being a sacred thing that should stay between a husband and wife, in private. Julie didn't say those words, and they seemed ridiculous anyway, what with her husband Mark deep in his secretary's pussy at that very moment. Instead, she surprised herself and said, \"Are we swimming?\"\n\nWith all the boys' eyes on her, Julie stood up, unfastened her shorts and pushed them down her legs. There was no bikini, just women's panties, plain but attractively sexy ones made out of white cotton, with a soft looseness at the crotch that emphasized the fact that they weren't designed to be on display. She took her shirt off and her bra was revealed, the same white lacy one that had peeked out from under her shirt on their travel day the weekend before. Before Josh and Tyler had even had a good look at it, it was off, tossed to the sand, and those 'Rihanna tits' were naked, their dark, aroused nipples causing short-circuiting overloads in the boys' brains. And then, slower it seemed, she pushed the panties down her legs and stepped out of them. Julie didn't linger there in her newly naked state, but she didn't rush, either, ambling toward the dark gentle surf that was lit to sparkling by the nearly full moon. \"You guys coming?\" she said, looking back over her shoulder with a smirk that gave her and all the others a quick shot of tingly goosebumps.\n\nEverbright stood, whisked off her dress and trotted to Julie's side. The boys watched the naked backsides of the two women's bodies, and they didn't know what to do. Stripping and running to join them, with full-on erections, seemed wrong, especially in Logan's case.\n\nEverbright stopped and turned toward them, yelling, \"You boys skinny dippin' with us or aren't ya? I'll let Julie wash me clean if y'all don't want to. Don't worry none about them big hard cocks. We already know you got 'em.\"\n\nJosh stood and stripped, with his cock standing out hard and proud. He was running toward the women when Tyler did the same. Logan was the last to do it, when his mom and Everbright were already wet and swimming. It was his erection that confused him. Being naked in front of his mom didn't seem so bad, but that damn hard-on, it just didn't want to quit. He jogged across the beach and into the water, but the moonlight had given it away, the sight of its full-on hardness sending deep tingles all through Julie's body.\n\nTyler was at Everbright's side when Logan got to them, standing on the hard sand bottom in water that came up to the underside of Everbright's perky little breasts. Everbright had already quietly sent Josh in Julie's direction, out in deeper water. Julie had swum there knowing she could stand neck-deep, but not knowing who, if anyone, was following. She was breathing heavy when she stopped, from the excitement as much as the exercise. She looked back and a strong swimmer was approaching, moving sleekly through the water, without much splashing. A look at the others confirmed her assumption that it was Josh, and then he was there, standing, with his broad shoulders above water, flinging his slick long hair back with his hand. \"Mrs. B., you're a good swimmer,\" he said.\n\nJulie had no patience for small talk. She moved to him quickly, pulling his mouth to hers with her hand behind his neck. Her other hand was on his cock, just like that, as if it was drawn there by an energy. Moaning into his mouth, she felt the big cock grow from half-hard to fully hard, and she stroked the impressive full length of it. \n\nAt first Josh didn't know how forward he should be, but soon his hands were fully involved, on Julie's beautiful big tits and on the smooth curve of her ass. Her hand guided his to her pussy, and they both moaned into each other's mouths. It was only a few moments later when she mounted him, with her legs wrapped around his waist, her body high enough for him to ravish her salty-wet tits with his mouth. The others saw them there, in their sexual embrace, Julie's glorious milky white tits nearly glowing in the moonlight. \n\n\"Put your cock in me and fuck me,\" she sighed. \"Right now.\"\n\nAfter just three deep thrusts it was explosive, and they both let their voices free. Julie had never felt the animal in her the way she was feeling it at that moment, and Josh was just plain mind-blown, fucking in a way he'd never fucked, with the woman he couldn't stop thinking about. \n\nEverbright was working the psychological angles, tying to keep Logan from dwelling too much on his bouncing mother's sexual cotillion. \"You like watchin' sexy things?\" she asked him, stroking his cock under the water. \"Your cock's nice and hard, so you must like it. I do, too. Wanna fuck me the way she's doin'? It's all wet and slippery. You ever fuck in the ocean before?\"\n\nLogan shook his head, and Everbright mounted him, her legs wrapped around, her hard nipples at his mouth. His mother faded from his mind except for her wordy babbling and her thrilling cries of love. Everbright's voice soon drowned her out, though, right there next to Logan's ear as it was. It turns out Everbright's a noisy fucker, too, and the two women made a loud and proud time of it. Being in shallower water, Tyler was able to get involved, holding Everbright by the armpits, her lithe body leaning back like it was reclining on the water. Logan's increasingly powerful thrusts fucked her with splashing intensity. The sight of Logan doing such a thing, there in the silvery moonlight, was enough to lift Julie to a howling, screaming orgasm. She'd never let out such a primal noise before; it was a new kind of freedom, and it drove her huge orgasm into the stratosphere. Josh was right there with her, cumming with loud grunts that would have made the pirates proud, draining every drop of his seed deep in Julie's spasming pussy.\n\nMother son telepathy, or some such thing, made Logan loose his battle with stamina. Everbright's tight little pussy was the best thing he'd ever felt in his young life, the feelings amplified, no doubt, by the situation he found himself in. His orgasm came on like a runaway freight train, with his head tipped back, North Carolina stars in his eyes, and his mother's urgent plea of, \"More! Fuck me more!\" drifting like a dream into his ears. \n\n-\n\nAfter a while, on that silvery dark night, it was over. \"I'll get some towels,\" Julie said, trotting off up the path to the house. When she returned, her naked body wrapped in one, she was horrified to hear Everbright talking to Logan about divorce.\n\n\"Ever!\" Julie scolded. \"It's not your place to tell him about...everything.\"\n\n\"I'm sorry Julie, but...he looked real worried about...what you're doin'.\"\n\n\"Oh,\" Julie said. Tossing the towels to the wet naked people around the campfire, she sat down next to Logan and tried to gather her wine-addled, post orgasmic thoughts. \"I wasn't planning on talking to you about this in front of your friends, but...your father's having an affair, and...I finally got up the courage to speak to him about it, tonight, after dinner. We had a long talk. But Ever is wrong,\" she said, emphatically. \"We're not getting a divorce, at least not yet. We're going to try something...different.\" She glanced embarrassedly at the others. \"I really can't believe I'm telling all of you this, but...we're going to try and be a little more relaxed with our marital vows; try something a little more...modern, I guess you'd say. That's why I feel okay about what's happening tonight, apart from the fact that you're all too young for me.\"\n\n\"You mean you and him are gonna see other people?\" Everbright said, asking the very question Logan was too embarrassed to ask. \"Like an open marriage?\"\n\n\"Yes, like that. I've wondered about it, to be honest,\" Julie said. \"We knew a couple that was...that way...a long time ago, back when Logan was little. Mark mentioned them on the phone earlier, reminding me of how he and I were sort of curious about it all, back then. Of course we never did anything like that. It was just something we used to giggle about. But, today...we made a sort of a deal,\" she said to Logan. \"He'll keep his affair out of my house, and I'll be...sort of...free to...maybe...enjoy some men of my own. That sounds terrible, doesn't it. Are you able to understand any of this?\"\n\n\"Mom, I'm eighteen. I've had two girlfriends. If you guys need to split up, it's not that bad of a thing.\"\n\n\"Divorce, you mean? I know, honey. And it may come to that, but for now, I think we're...trying something...different.\"\n\n\"Okay,\" Logan said, with a somewhat confused look in his eyes.\n\n\"I think it's cool, Mrs. B.,\" Josh said. \"I took a college level psych class last semester, up at the Community College, and we talked about Pansexuality and Polyamory. There were some girls there who were into both. I think it's cool.\"\n\n\"Oh my gosh!\" Julie said. \"Josh! You studied that? Now you're making me feel old fashioned, because I'm not sure I know what those things are.\"\n\n\"Polyamorous is when you have a relationship with more than one partner, but everybody's cool with it,\" Josh said. \"It's what you and Mr. B. are gonna do. Pansexuality is like...if you're a pansexual you don't worry about gender. The teacher talked about this concept of fluidity. You can sort of be with whoever you want, male or female or trans or whatever.\"\n\n\"We used to call that bisexual,\" Julie said, glancing shyly at Everbright. \"Is that the same?\"\n\n\"I guess so,\" Josh said. \"Yeah, I think so. But now there's more than two sexes, so I guess they needed a new word.\"\n\n\"More than two sexes. Gosh, we are evolving, aren't we,\" Julie said. \"I mean, even right here, tonight, all of us sitting here...nude.\"\n\n\"You're not nude, Julie,\" Everbright said. \"Don't ya wanna feel the heat of the fire on your skin?\"\n\nWith an embarrassment that was more exciting than bad, Julie unwrapped the towel from around her and let it slump to the sand. She pushed it off her cross-legged thighs so as to be well and truly bare, from head to toe. \"This feels...more interesting than I thought it would,\" she said, glancing at Logan's big, mostly hard but slumping erection. He sat cross-legged, too, as did the others; all five crotches on wide-open display.\n\n\"So are you excited?\" Everbright asked Julie, \"About bein' polyamor...how do you say it?\"\n\n\"Polyamorous,\" Josh said.\n\n\"Excited?\" Julie said. \"I haven't even thought about it, hardly, and now all of you know about it. I never should have said anything.\"\n\n\"You worried we'll talk about it, you mean?\" Everbright said. \"Give away your secrets?\"\n\n\"Yes. It's not something that anyone should know about.\"\n\n\"Do you boys promise to keep Julie's secret for her?\" Everbright asked. \"Like, cross your heart for real?\"\n\n\"I do,\" Josh said. \"I will.\"\n\nTyler nodded. \"Me too. I won't ever say anything.\"\n\n\"Not even to your girlfriends?\" Julie said. \"That's how gossip gets started.\"\n\n\"We won't say anything to anybody,\" Josh said.\n\n\"Thank you,\" Julie said. \"That makes me feel better. I feel like I can trust you guys.\" The fire crackled, and Julie thought of a new angle. \"I don't want this to sound too much like a bribe, but...if you guys take care of me that way, by keeping my secret I mean, maybe the four of us can come back here again next summer, when you're all home from college. Maybe I'll get my husband to pay for it again.\"\n\n\"Yeah! I'd love to!\" Josh said. Tyler smiled and nodded his agreement.\n\n\"Do you think you'll be here, Ever?\" Julie asked.\n\n\"You know I will,\" Everbright said. \"Logan's cock felt so good in me, I wouldn't miss seein' y'all again for the world. And I'm sayin' that before I even fuck you two boys.\" She reached her arms out, to Josh on her left and Tyler on her right, and took hold of their cocks in her hands, stroking them to full hardness with the gentlest of touches.\n\n\"Wow,\" Julie said, taking in the sight with unblinking eyes. \"Yeah, I can see how making this an annual event will be...interesting.\"\n\n\"Wish I had a third hand for you Logan,\" Everbright said, \"but your momma's got two that ain't doin' nothin'.\"\n\nThe sounds of the night seemed to grow louder in everyone's ears\u2014the crackle of the fire; the soft, rhythmic hiss of the placid surf; and the crickets and cicadas, enjoying the warm summer night as much as the humans were. Logan's hand went to his own hard cock, moving on it gently, and a sighing moan came from his mouth.\n\n\"That's it, Honey,\" Everbright said, quiet and breathy. \"Show her how you like it.\"\n\nAnother moan came from Logan, and he leaned back a little, supporting himself on one arm, opening his body language to his mother. The others were moaning, too, and the little fireside scene drifted a bit farther into the x-rated realm.\n\n\"I'd put my mouth on it if I was you,\" Everbright said to Julie. \"Think of the sweet moan he'd make then. It's my experience that mommas love to make their boys happy. I know my momma does. I'm guessin' your mouth is waterin' right now, same as mine is.\"\n\nEverbright's mouth went to Tyler's hard cock, him being the least satisfied so far that evening. His moan was low and manly, and Everbright quickly had him throat-deep. Josh was masturbating, slowly, his hips starting to rock, meeting the deeply erotic unhurried pumps of his fist.\n\nA powerful sexuality surrounded Julie, and the humid night air wrapped her in it. The real world was gone; Everbright's world had taken over. It was the purest form of sensuality, unsullied by norms or conventions. Julie welcomed it, allowed it to envelop. Life\u2014or at least life there in that dark-night bubble\u2014suddenly felt as sinless and unrestricted as the night sky itself, and just as full of stardust. The deep waking dream of it happened in a slow, smooth, unbroken movement, Julie's hand reaching out and her head lowering to Logan's big, throbbing cock. When her mouth was on it she realized just how much it was like her Mark's. It was identical, really, even the heat of it. The manly moan was different though\u2014it was definitely Logan's, and it was just as sweet sounding to Julie's ears as Everbright had predicted it would be. It was the sound of the heavens above, and Logan's cum, gushing unexpected and molten, tasted like earth's nectar.\n\nEverbright paused her lovely blowjob, stroking Tyler's wet cock with her hand. \"Logan, Honey, you cum so pretty,\" she said. \"My gosh, you're big cock's even harder than when I was doin' you. Julie, you brung three super nice boys with you. They stay so much harder than the older men. You already know that, from Josh. They'll all fuck us real nice now, for hours I'll bet.\"\n\nJulie, holding Logan's still-hard and wet cock in her hand, had a look of mysterious uncertainty on her face. It was a loving look, not a worried one, with eyes that tried to get deep inside Everbright's mind. Everbright recognized it as the look of a follower, not a leader.\n\n\"I want you to watch Logan fuck me,\" Everbright said, \"and we'll watch you fuck Tyler. We never did get to see you very well, when you was doin' Josh out there under that black water. Does that sound fun?\"\n\nJulie took a few seconds to answer, her gaze settling on Tyler's winsome eyes, the ones she'd always found so attractive. \"I guess so,\" she said, her voice soft and untroubled. \"I mean...yeah.\"\n\nJulie felt the step into the great unknown, but it didn't show on her face. The warm intensity of it was all inside, and the experience of it was a gentle euphoria, a dream-like relaxation that left her thinking brain behind. She smiled sweetly at Tyler, the way a shy teenaged girl would do.\n\n\"If you do it sittin' up you can suck on Josh's big ol' cock, too,\" Everbright said. \"You ever done two at once, Julie?\"\n\nJulie shook her head no.\n\n\"You ever watch fuckin' before?\"\n\nJulie shook her head no.\n\nEverbright smiled. \"You look so pretty,\" she said. \"I love that look in your eyes. I ain't never seen a more beautiful woman than you. I mean that.\"\n\n\"Me neither, Mrs. B.,\" Josh said, the first word out of any of the boys' mouths since he said he'd love to come back next summer.\n\n\"Don't you just love her big tits?\" Everbright said to him. \"I felt 'em and tasted 'em real good yesterday, and I swear to God those nice nipples felt like they was feedin' me. I got higher and higher when I sucked on 'em, like they was puttin' out a drug.\"\n\nJulie huffed breath out of her nose, the way an animal does when it's riled up in some way, but otherwise she was silent and still.\n\n\"You feel them pirate spirits all around you?\" Everbright said to her. \"I swear to God they's all around, makin' me fuck like a dirty wench more often than not. You feel it Julie? You feel the freedom of this place, out here all alone? I love it when they start infectin' me this way, all them horny spirits.\"\n\nA soft moan floated from Julie's open lips. It came from Everbright's conjuring of the spirits, and from the warmth of Logan's cock, still solidly hard in Julie's slowly stroking hand. She let go of it, knowing it would be well taken care of, when she saw Everbright initiate the partner switching. The two women crawled past each other on hands and knees on the soft sand, their bodies lit by flickering firelight, with the sparkle of their horny mission in their eyes. Julie positioned herself between Josh and Tyler, with her mouth going to Josh's wood-hard cock and her ass up higher, ready for doggy-style, which Tyler quickly took advantage of. His manly groan when he sunk his hard length into her, and Julie's deep moan, gave everyone goosebumps.\n\nEverbright was careful with her own positioning, her petite body on elbows and knees, with a deep downward arch to her back that a boatbuilder would call a 'fair curve.' She was sideways to Julie's line of sight, so the being-fucked mother could easily watch her fucking son, and vise versa."
    ],
    "authorname": "riverboy",
    "tags": [
        "hot mom",
        "island",
        "milf",
        "north carolina",
        "open marriage",
        "outer banks",
        "soccer mom",
        "sons best friend",
        "summer vacation"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/hot-sand-carolina"
}