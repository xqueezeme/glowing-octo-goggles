{
    "title": "Negroni",
    "pages": [
        "\"A Negroni on the rocks, please,\" I said with a smile. \n\n\"You got it, Jake,\" Ronnie replied, as he wiped the bar in front of me in preparation for the delivery of my drink.\n\nI loved coming to a bar where the bartender knew my name and I felt comfortable. The Stream wasn't exactly a bar. It was more of a restaurant with a nice sit-down bar, but I kind of liked that aspect of its nature. There was more of a hustle and bustle associated with food service; waiters and waitresses hustling to and fro as the evening wore on. I never tired of the energy and loved hunkering down at the bar for a few hours, just taking it all in. Sometimes I ate there. But more often than not I just enjoyed sitting at the bar. The Stream was a little more upscale than my budget should really allow. But I'd milk two Negronis for an hour or two and that fed my habit for alcohol and people pretty nicely.\n\nBilly, the owner, seemed to have a constant infusion of young wait staff working in his establishment. The nearby state university certainly fed into his employee pool as most of the kids seemed to be in their early twenties. While the good pours and funky ambiance were certainly draws that kept me coming back every few nights, I'd be lying if I didn't admit that the flow of young female talent strutting in and out of the kitchen was a prime motivator for my loyal patronage. My regular perch at the end of the bar allowed for a great view of the young waitresses as they hurried intently from the kitchen to the dining space beyond. There was a method to my madness.\n\nStaff turnover was high in a college area bar and restaurant, so while I got to occasionally know a few of the waiters and waitresses, they were often gone before I ever learned their names. I just enjoyed the constant flow of youthful bodies - men and women - and it was a room I felt comfortable in, even at the advanced age of 60. \n\nI am an artist, a teacher, and a widower. My art has allowed for a decent living in these trying times, but there is no doubt that my teaching has ultimately supported my art. But I have no complaints. I love teaching as much as, if not more than, creating art. They are, in a strange way, one and the same in my twisted mind. \n\nLosing my wife, however, had not been part of the plan. She had always been my most ardent supporter and the scenario of my later life had always included her by my side. But fate is fickle and her illness was, fortunately, a short one. It had taken me two years to extract myself from my house and my misery, but the past six months had allowed me to find a new routine and new hope. The Stream had become a staple of my weekly routine and a welcome one.\n\nMy eye, on this particular cold January night, had been caught by a new young lady that was working the dining room. She had a presence that was impossible to ignore, yet was quite normal in most ways. \n\nI couldn't keep my eyes off of her as she strode back and forth from the kitchen with purpose. She appeared of medium height, but the lift in her funky shoes may have given her another two inches in the height department. Her long black wavy hair was being controlled in a bushy pony tail by a single hair clip of some sort. There was no doubt that it was a wild array of shocking curls when unfurled. \n\nShe was wearing the standard waitress fare of denim jeans and a very light gray denim shirt. She had one of those rounded bodies with accentuated curves. She wasn't overweight by any means; but she wasn't a slender flower either. She was curvy and her denim attire did little to hide her lovely attributes. While her untucked shirt had several breast pockets, there was still a very clean line to her generous bust and, I have to admit, I was intoxicated by her shape.\n\nHer breasts appeared to border on what one might call \"large\", but others might disagree. I just thought she'd be one of those women who would look much larger when disrobed than when strutting about in denim working attire. I think it was the subtle upward slope of her breasts and almost imperceptible bounce as she walked by that I found so intoxicating, however. She surely was wearing a bra, but not a thick padded bra that enhanced and lifted. She was wearing something minimal and thin and her natural shape was undeniable. I tried to scope out the profile of her breasts each time she marched by, which was frequently. There was no question in my mind - none - that this young lady would look amazing when naked. \n\nHer untucked shirt hid her bottom to some extent, but I could tell there was a tightness to her posterior that came from some serious form of exercise. Her eyes were dark and piercing and she wore large tortoise shell glasses that gave her a look of sexy intelligence. Her skin was a shade toward dark and looked like it would be exceedingly smooth to the touch.\n\nI did not usually become so instantly enamored of the young ladies working at my \"hangout\", but I couldn't take my eyes off of this particular young lady. I did my best to keep my ogling unnoticed. But our eyes connected more than once and I felt like she knew that I was watching her - that she could feel my gaze upon her as she walked by - even when she was facing away from me. My dreamy state was suddenly interrupted. \n\n\"Here you go, boss,\" claimed Ronnie as he slid my dark red concoction across the shiny lacquered bar. I leaned in conspiratorially, taking a sip of the gin, Campari and vermouth concoction. It always made me feel like I was sitting on the coast of Italy, even in the middle of winter.\n\n\"Some great new talent here,\" I suggested. He smiled knowingly as he dried his hands with a bar towel.\n\n\"You're tellin' me. It's why I love my job,\" he said with a wink and went off to serve another customer. I had been hoping I might make a query on the new girl. But, in a sense, they were all new girls. The revolving door of talent made for a constantly changing landscape. Maybe Ronnie couldn't keep up with the names and faces either. \n\nI stayed a little later than most nights, partially hoping that I might get the opportunity to strike up a conversation with this new bright light in my world. But it was a busy Friday evening and the place was hopping a little later than a normal weeknight. Plus, from the signs of people walking through the door and stomping snow off their boots, it had been snowing for the past few hours. Nobody was in a hurry to leave. \n\nI ended up eating and having a salad as the evening wore on and, eventually, the restaurant cleared out and I was thinking I should head out myself. My new waitress had not been out on the floor for a good fifteen minutes or so and I figured she had signed out and headed home herself. I was just about to do the same when Billy came wandering over to my perch.\n\n\"Hey, Jake. Great to see you, man. Thanks for stopping by,\" he said brightly as he shook my hand vigorously.\n\n\"No problem, Billy. You've got a great little gig going here. Keep it up and I'll keep coming back.\"\n\nHe laughed in reply and said, \"Well, that's the plan, Jake. We love having regulars like you, that's for sure.\" \n\nI suddenly got the sense that there was more to this conversation as he hesitated before continuing. \n\n\"Listen, Jake,\" he added, finally. \"I have a small favor to ask of you. You still live up in Turners. Right?\"\n\n\"Yes, I do,\" I replied, wondering where this was going.\n\n\"Well, listen. I have an employee who lives up that way and she is having a bit of a transportation issue. Her car is in the shop and a friend dropped her off at work. But her ride home fell through and she lives up your way. You're the only one I know heading north and, while I could take her, well, I was just wondering...\" he said, as his voice tailed off.\n\n\"She needs a ride home?\" I stated, trying to clarify what he was asking.\n\n\"Well, yeah,\" he said. He followed up quickly. \"But only if you can do it, man. You'd be saving my ass - and hers. I just thought I'd ask.\"\n\nOf course the thought had crossed my mind that he might be referring to the lovely young lady I'd been ogling. Part of me was now embarrassed that it might be her and she'd turn me down because I'd been eyeing her all night long. But another part of me realized that this might be the chance of a lifetime. I decided I might as well take a chance. So I did. And, truthfully, if it was her ass that needed to be saved, I'd certainly jump at that chance.\n\n\"Sure, no problem, Billy. I'm ready when she is,\" I responded, standing up and making motions to go. \n\n\"Cool. Let me go let her know.\" Billy scooted off into the kitchen and emerged in a minute with the young lady in tow. I smiled to myself as my eyes locked in on the waitress I'd been admiring all night as Billy introduced her.\n\n\"Jake, this is Mia. Mia, Jake.\" She held out her hand and I took it in mine. Her grip was strong and warm as she looked me in the eyes and greeted me with a steady gaze. It might have been my imagination, but her smile said, \"Hmm, so it's the guy who's been ogling me all night long.\" I felt sheepish. \n\n\"Hi, Jake. And thank you,\" she added as our grip lasted just a second too long. I shrugged my shoulders in a casual response that belied my true excitement.\n\n\"It's my pleasure, Mia. I'm glad I can help,\" I replied. \n\n\"Great,\" interjected Billy. \"Well, listen, I have to get back to my office and close out the night. So I'll leave you two to work out the details. Thanks, Jake.\" He waved as he scurried into the kitchen and was gone.\n\nMy gaze returned to Mia who was smiling meekly. \"You're very kind to do this, Jake. Thank you. My car is in the shop until tomorrow and my housemate dropped me off at work and was headed out of town. My ride home tonight had car troubles of her own, so I'm kind of stranded here in a snowstorm. You're a life saver.\"\n\n\"It's my pleasure,\" I replied, stating the absolute truth. She looked even lovelier up close and in gratitude. Her smile was beguiling and the dark penetrating eyes twinkling behind her large glasses were all whites. Her skin looked flawless in the pale light of the bar.\n\n\"I'm ready when you are,\" I stated. She retreated to the kitchen to gather her things as I donned my leather bomber jacket and wool baseball cap, my longish gray hair cascading over my ears. I needed a haircut. As I was zipping up my jacket she reemerged from the kitchen, bundled in down and a wool scarf. Her floppy winter hat gave her a jaunty air. A blast of crisp cold air greeted us as we opened the door and headed out into the snowy night. \n\nI'm not sure I had realized how much it had snowed while I was eating. We slogged through a good six inches of fresh snow heading to my car. We both pulled our collars up as we shuffled across the parking lot. \n\nMy Subaru was encased in white so I started the car as Mia slid into the passenger seat. I spent a few minutes brushing the light fluffy snow off the car as the defroster did its thing. Once I was cleared off, I slid behind the wheel and we backed out of the parking lot slowly.\n\n\"So where to?\" I asked, thinking that she lived close by. I only lived a couple miles north and figured this would be short-lived trip. I was happy thinking she might be a neighbor. \n\n\"Well, Colrain, actually,\" she said quietly. \n\n\"Colrain?\" I asked to clarify. \"Oh.\" Colrain was a good half hour drive beyond my house in the best of weather. In this snow it might be an hour. And while my response might have come across in a negative light, the thought of spending an hour, even in terrible driving conditions, with this lovely young lady was actually a very pleasant thought.\n\n\"I'm sorry,\" she said sheepishly. \"I thought Billy told you where I lived.\" \n\n\"He just said you lived up my way. But, really - it's no big deal. I'm happy to help out a lady in distress,\" I said, trying to lighten the mood. \"This car is great in the snow, so no worries. Okay?\" I said with some finality.\n\n\"Okay,\" she answered quietly. \"And thank you.\"\n\nThe wipers were on as we wound our way up the narrow two lane road. We'd eventually join up with Route 2 and find more plowed conditions. But the first few miles were going to be a bit dicey.\n\n\"Your wife will be okay with you taking a stranger on such a wild goose chase,\" she asked quietly.\n\n\"Actually my wife passed away two years ago so I think she'll be fine with anything,\" I joked, trying to lighten the mood. I could tell that Mia was feeling like she was putting me out. \"Listen, this is no big deal. Really. Let's just enjoy the drive,\" I said as lightly as I could.\n\n\"I'm sorry about your wife,\" she said. \"I had no idea.\" \n\n\"Of course you didn't. Don't worry about it. She'd be happy knowing I'm helping someone out.\"\n\nThe conversation stayed on my wife and Mia asked a few questions. I explained enough background to pique her interest, but felt she was a bit relieved that I wasn't a married man. Maybe it was pure conjecture on my part, but getting that side of the story out of the way seemed to comfort her.\n\nWith a little questioning of my own I found out that Mia was a grad student at the university and on semester break and making a few extra bucks waitressing. She'd worked a number of the establishments up and down the valley, but living in a rural area meant she was always commuting to a bar or restaurant somewhere. \n\n\"What about you?\" I queried. \"There's no lucky man waiting for you at home,\" I said in a most complimentary tone. There should be, I thought to myself. What a gorgeous creature to be all alone, especially on a cold blustery night. \n\nShe sighed audibly and responded. \"Nope.\"\n\nThere was an awkward silence as I felt that there was more to come. I waited. She sighed deeply and continued. \n\n\"I split up with my boyfriend a month ago,\" she said almost under her breath. \"Another disappointing man.\" She paused. \"Check that. Boy.\" Her soft voice was dripping with bitterness.\n\n\"So he...?\" I wasn't sure what I was asking. She looked at me.\n\n\"Couldn't keep it in his pants. No,\" she replied with finality to my hanging question. She continued. \"Are there any men capable of being faithful or is it just the guys that I date that are jerks?\"\n\nWhoa. How does one answer that question? I treaded softly. \"Well, depends on the guy and the situation. I was always faithful to my wife. But, then, we had a wonderful thing and it never crossed my mind, actually. Maybe I'm an anomaly. I don't know. But, to answer the first part of your question, yes.\" I turned to look at her, her pretty face in the shadows of the dashboard lights.\n\n\"Well, it's water under the bridge at this point. He's gone and with good riddance,\" she said. She looked at me and smiled. \"Thanks for taking me all this way,\" she added warmly. \n\n\"No problem. My pleasure.\" \n\n\"Sorry. I shouldn't have gone off like that. It's just that...\"\n\n\"No apology necessary. Really,\" I replied. \n\nWe soon took the turnoff for Colrain and began to climb up into the hills. She directed me to take a few turns and before long we were on her road. It was extremely dark as my LED headlights cut through the snowy night. \n\n\"My driveway is just at the top of the hill,\" she claimed as I slowed so as not to miss my turn. The driveway was unplowed, but the dry snow wasn't a problem as I edged up to a point where it looked like a walk came down from the front door. The house was pitch dark. \n\n\"Let me walk you up to the door,\" I volunteered.\n\n\"Thank you,\" she replied. \"Would you like to come in for a cup of tea?\" she queried. \"You should take a little break before you get back on the road.\" \n\nI have to say that the thought of going inside was a lovely notion indeed. The snow showed no signs of ebbing, so a little break before making the return trip seemed like a good suggestion.\n\n\"I just might take you up on that, Mia.\"\n\n\"Great!\" she exclaimed as she opened the car door and I shut off the engine. We slogged through the snow up to the door where she slid the key into the lock and opened the door. She turned on a few lights and I surveyed the premises.\n\nIt was an old farmhouse that had some real character - varnished wood trim, dark oak floors, a beautiful staircase. It looked like a house where a few women were living. It was neat and tidy and I could tell great care had been taken to furnish the house tastefully, but on a budget. \n\nShe took off her coat and I followed suit. I suddenly couldn't believe I was here. Hours before I'd been eyeing this beauty; now I was in her home and it was still snowing to beat the band outside. She filled the tea kettle and opened a cabinet looking for tea. \n\n\"Hmm. I have cognac too, if you'd like,\" she asked, turning to look at me with those big brown eyes and a hint of a conspiratorial smile. \"But you're driving.\"\n\n\"You know one glass to warm me up is not a bad idea, if you'll join me,\" I said. \n\n\"I just might,\" she replied. \"Jesus, it is cold. I'm going to get a fire going,\" she offered as she pulled a bottle out of the cupboard and grabbed a few glasses from the shelf. \"Follow me,\" she instructed.\n\nI'd follow that lovely round ass anywhere and a fire sounded like a great idea. This was getting cozy. The firewood with kindling below was already set in the andirons as she opened the flue, struck a match and slowly got the fire started. Before long it was crackling and hissing as she stood back to admire her work. I grabbed the cognac and filled two glasses. Handing her one, I raised mine in a toast. \"To snow,\" I offered.\n\nShe giggled and tapped my glass. \"To snow,\" she agreed. \n\nShe put her glass down and grabbed a big comforter on the sofa and lay it down in front of the now roaring fire. It looked like she had done this before. She sat down and left room for me. I hesitated until she turned and patted the spot beside her.\n\n\"Come. Sit. Warm up,\" she said. \n\nHow could I resist such an offer? I sat down next to her and we both looked quietly at the fire as it began to cook. She had taken her shoes off and let her hair down. I took my own shoes off and sat cross-legged next to her. She turned sideways and looked at me, her legs pulled up toward the fire. She took a sip of her cognac, continuing to eye me over the rim of her glass. \n\n\"Bet this wasn't in your plans for the evening,\" she offered, smiling.\n\n\"No. Can't say that it was. But I'm happy to be here, I can tell you that,\" I answered. \"And you had certainly caught my eye at the bar, I will say that too.\"\n\nShe smiled demurely. \"Yes, I noticed you looking at me a time or two. I didn't mind.\" She took another sip and looked at me again. \"What were you thinking about?\" she asked directly. I smiled. I liked a woman who was direct.\n\n\"Well, I was wondering what it would be like to go home with you and have a drink in front of the fire,\" I responded. She giggled and gave me a knowing expression.\n\n\"And just like that, here you are,\" she offered. \"You're pretty good.\" \n\n\"So I've been told,\" I joked. \n\n\"What else were you thinking?\" she continued, her voice a step lower, obviously emboldened a bit as the cognac warmed us both.\n\n\"Well, to be honest, I was admiring your incredible beauty,\" I stated matter-of-factly. \"I find you very attractive, stunning, in fact,\" I stated unabashedly. \"And very, very sexy,\" I added, tipping my glass toward her and looking her in the eye for emphasis. \n\nShe'd asked and I'd answered, honestly. And now I didn't feel awkward as I let my eyes wander over her body. My eyes traveled all the way down to her beautiful bare feet, accented by a lovely pedicure in a sort of turquoise color.\n\n\"You have beautiful feet,\" I said out of nowhere. Where had that come from, I thought to myself?\n\n\"Thank you,\" she answered, obviously not concerned by my pedal interest. \"I just got a pedicure yesterday,\" she said, pulling her feet up and wiggling her cute little toes so I could observe them more closely. ",
        "\"Well, you know what I'm in the mood for?\" I offered, maybe testing the limits of our early friendship. She eyed me quizzically.\n\n\"No, I don't. But I think I'm going to find out,\" she said warmly, her eyes sparkling in the firelight. \n\n\"Do you like foot rubs?\" I asked as innocently as I could.\n\n\"Hmm,\" she replied. \"I don't know. Unless the massage you get with a pedicure counts, I've never really had one.\"\n\n\"Well, I give a good one, if you're interested.\" I took another sip of my drink and tried to size her up, wondering how she'd react to my forward suggestion. Before she could respond I added to my statement. \"And if you're interested, I do have a couple suggestions,\" I said without hesitation.\n\n\"Do you, now,\" she said quietly. \"And those would be?\" she asked with obvious interest.\n\n\"Well, I think you'd need to put some music on, for one. And you'd have to find some massage oil or body lotion or something of the sort,\" I stated. She smiled, obviously intrigued by where this was going.\n\n\"Well, I think I can comply with those suggestions,\" she stated. \"But I have one of my own,\" she added. I gave her a quizzical look, indicating that she should try me. \"You'll need to fill up my glass while I'm gone.\" \n\nShe hopped up and went over to a little stereo console and flipped through a few CDs. She put on something soft and rhythmic, bordering on electronica, then padded out of the room in search of a lotion. I hopped up and grabbed a few soft pillows off of the sofa. As I was refilling our glasses she returned with a plastic bottle with a flowery logo. She handed it to me and I read the label.\n\n\"Looks like you're used to massage oil,\" I proffered.\n\n\"Not really. I bought that months ago, thinking my boyfriend might take a hint. He never did. I don't think he even knew how to spell massage,\" she said with a slight grimace. \"It's never been opened.\" She sat down next to me again, a little closer this time, and smiled warmly. \n\n\"Well, let's give it a maiden voyage tonight,\" I said lightly. I turned to her and told her to lean back and put her foot in my lap. She did, reclining back on her elbows as she lifted her lovely feet into place and smiled. As she leaned back on her elbows her large breasts protruded forth in a provocative way. She had great tits and she knew it. There was no hiding them as they stretched the thin denim shirt, making the buttons look like they were going to pop right off and explode into the night. She could see me eyeing them as I squeezed some oil on the palm of my hand. My gaze left her breasts as I looked her in the eye. She smiled a knowing smile and I knew, right at that moment, that I was not going to be going home tonight.\n\n\"You're talking about massaging my feet, but you keep looking at my tits,\" she stated matter-of-factly, smirking ever so slightly. \n\n\"Well, their magnificence is hard to ignore. But I will do my best to concentrate on your equally lovely feet,\" I stated, as I squeezed a generous dollop of oil onto the palm of my hand and began to rub it all around her left foot, just getting her lubricated. She moaned softly and lay her head back on a pillow, signaling that I had been given the green light. \n\nNow, I've never studied massage and know just enough to be dangerous. But I do know how sensitive the foot is and how many nerve endings are in the soles of our feet. And over the years I had given many a massage to my appreciative wife, so I had developed a few techniques of my own. I also knew that every person is different in how they respond to foot stimulation. So I began slowly and gauged Mia's response as I began to squeeze her foot between my hands. \n\nMy approach was to use both hands and apply gentle pressure, never compressing too hard and always keeping my hands moving. Most of all, I watched and listened to gauge how my manual ministrations were being met. Her relaxed leg and soft moans told me I was on the right course. I cradled her heel in one hand and wrapped my hand around the pads of her foot, my thumb sliding along the sole. I slid my fingers between each toe and then began to use both hands to massage her foot, both thumbs finding those sensitive indentations on the bottom. \n\nI surveyed the rest of her as I worked. Her breasts continued to stretch her shirt and lay full and slightly flattened as she lay on her back. God, they looked incredible and I felt myself swell slightly at the sight of them. Her jeans were tight and rather low cut and the exquisite vee of her denim clad pussy looked round and tight. Her shirt had ridden up her tummy just a little, exposing a soft line of smooth belly flesh. Inspired, I double downed my efforts and concentrated on what I was doing; trying my best to give her pleasure. She moaned.\n\n\"God, I've dated a lot of guys. Nobody has ever touched me like this. It feels sooo good,\" she cooed softly. The cognac had led us both to a very relaxed state and the soft rhythmic music was a perfect counterpoint to my soft sliding squeezes.\n\n\"Good,\" I proffered, as I lay her foot down in my lap and began on the other foot. Her toes were only an inch from my cock, which was slowly rising to the occasion and beginning to enjoy the feeling of giving this gorgeous woman pleasure. She was clearly enjoying herself and I began to wonder whether this might go even further. Dare I ask her if she'd like a full body massage? Was that too overt a suggestion for someone I'd just met that night? Good God, she was on the rebound and I was old enough to be her grandfather. \n\nBut at that moment, as I leaned forward a bit and felt the side of her left foot press slightly against the growing bulge in my jeans, none of that mattered. I pushed that thought aside and focused on Mia and her foot, doing my best to be fully tuned into what she was responding to and how hard she seemed to like me squeezing her now well lubricated feet. \n\nHer feet were very sexy, if you like that sort of thing - and I do. They were petite and very well formed with high arches and slender perfectly formed toes. The fine pedicure she was sporting was testament to the fact that she knew she had nice feet and probably loved showing them off. \n\nI had spent a good solid fifteen minutes massaging her feet when I finally lay them both down in my lap. She moved and stretched them slightly, inadvertently pressing one of them against my groin. The position I was sitting in gave absolutely no room for me to expand, so I repositioned myself, laying her feet back on the comforter and reaching for my glass of cognac. \n\nI did my best to adjust my cock so it could grow comfortably. I did this subtly, but at that moment, I didn't particularly care if Mia noticed or not. Massaging her feet had turned me on and if she could see the physical evidence, it was alright with me. She did notice and smiled that knowing smile.\n\n\"Oh, man. You weren't kidding. That was wonderful, Jake. Thank you. That felt soooo good,\" she crooned. \n\n\"You're quite welcome,\" I replied. \"The pleasure was all mine.\"\n\n\"Hmm, I quite doubt that, but thank you. Wow, I feel so relaxed,\" she said. She pulled back up so she was leaning back on her elbows, the large round orbs of her breasts once again jutting forth provocatively, stretching her shirt. She had such great tits and I sensed that she loved showing them off. I had surmised that earlier in the bar as she strutted to and fro. I could only imagine how much she might enjoy showing them off in all their naked glory.\n\nI handed her the glass of cognac and she had a sip, eyeing me carefully. I saw her gaze wander down to my groin and she smiled as she saw the huge bulge I'd made room for. The warmth of the cognac and the successful completion of her foot massage had emboldened me somewhat, so I made another suggestion. \n\n\"I'm so glad you liked that. I guess I'd be remiss if I didn't at least offer you my full body treatment.\" I took a sip and eyed her cautiously, wondering if I might have stepped over the line. Seeing and hearing no resistance, I continued. \"If you liked the foot massage, I think you'd be an excellent candidate for a really good full body massage.\" I was now in uncharted territory and playing it by ear. I had to retreat a bit and see how she'd react.\n\n\"And, of course, there are a few more suggestions, if you're interested,\" I smiled as I took another sip of cognac. She did as well and smiled. \n\n\"I figured so. And they would be?\"\n\nI looked at my watch for emphasis. \"Well, for one, it's late. A good massage could take up to an hour. I don't know if it's stopped snowing or not, but if we go that route, I'd probably request accommodations on your couch over there,\" I said, eyeing the sofa where she'd pulled the comforter and pillows from.\n\n\"Hmm. I guess that can be arranged. I may have to check the reservation log, but I do believe it's available tonight. What else does the masseuse require?\" she joked. Joking was good. She was open to this.\n\n\"Well, we'll need to line up a good hour's worth of appropriate music,\" I stated. \"We'll need a few glasses of water, along with another glass of cognac. We'll need to put another log or two on the fire.\" I eyed her carefully as she weighed the additional demands.\n\n\"All acceptable,\" she said. \"I have a feeling there's still a catch though,\" she stated warily.\n\n\"Well, the only other suggestion is an obvious one,\" I said nonchalantly. \"You'll have to be naked.\"\n\nMy words hung there for a minute as she looked at me carefully, sizing me up with a sly smile. I continued. \n\n\"I just met you,\" she stated, but without too much conviction.\n\n\"I know, but I just met you too. I don't usually give massages on the first date, but I'm making an exception tonight,\" I said tongue in cheek. \"Because of all the snow and all.\"\n\n\"I see. So I should be flattered?\" she asked in a mocking tone and a smile that told me she was along for the ride.\n\n\"You should, indeed. It's not often I over-ride my first date policy.\"\n\n\"This is a date?\" she asked smiling, playing along with our little game.\n\n\"It could be,\" I surmised. \"Now, I'll leave the room while you disrobe,\" I said, trying to sound as professional as I could and like the decision was a foregone conclusion. \"And while I'm getting water and visiting the bathroom, you could get comfortable. Take your clothes off, lie face down, sideways to the fire, and your head on a pillow. Then find a blanker or shawl or something to cover your derriere,\" I said, trying to sound like I did this every day of the week. \n\nShe looked just slightly skeptical, like another comment or two would convince her of the wisdom of following my suggestion.\n\n\"You bought this wonderful massage oil. It only makes sense to use it. Is there an expiration date on this?\" I joked as I turned the bottle in my hand. \n\nShe hadn't said anything else and I needed to give her an out. \"Listen. I hope I haven't offended you with this suggestion. If you'd like me to go, I will. I can just...\"\n\n\"There are water glasses in the upper cupboard. The bathroom is down at the end of the hall,\" she said, as if there was never any doubt on what was to happen next. She stood up and began to unbutton her denim shirt. Before I could get up myself she had already slid it off her shoulders and thrown it onto the couch. I got to my knees and froze.\n\nShe was wearing a very thin lacy black bra in an almost see through material. Actually she was literally busting out of the bra. Her breasts were so big, round and full and the upper slopes were pressed upwards, defying gravity, from the lift of the bra below. The thin black straps looked like they were being called on to support more than their thickness looked capable of.\n\n\"Wow,\" I uttered. I literally just gaped at the round fullness and deep dark cleavage of her big soft tits, barely encased in a bra that looked a little too small for the job at hand. \n\nIt was clear that Mia was totally unselfconscious about having taken her shirt off. She suddenly stopped short. \"Oh, yes. Music.\" She turned to her stereo and bent over to shuffle through some CDs. She turned to look at me, still frozen on my knees. The profile of her black clad bosom protruded forth in a perfect shape. \n\n\"Are you just going to kneel there gaping or go do your chores?\" she asked in mock annoyance. I stood without taking my eyes off of her. Her body was a visual magnet. I was beyond excited and bursting with anticipation as I left the room and took my time taking a pee, having to wait for my erection to subside. I poured two glasses of water and returned slowly to the living room, wondering what I might find. Soft music was flowing from the speakers, the fire had been stoked and was burning beautifully, and Mia lay on the comforter, a small Mexican shawl that had been on the sofa covering her precious bottom. Her hands were pulled up above her head which was on a pillow and turned to the side. She lay perfectly still and her body looked like a sensuous treasure. She had taken her glasses off.\n\nHer back was lovely and tapered to a slender line at her lower back where her hips curved outward and her ass jutted upwards at a precipitous angle and disappeared under the shawl in a minor gesture of modesty. Her smooth thighs emerged just south of the shawl and her well-proportioned legs tapered down to the beautiful feet I'd just spent time massaging. She turned her head slightly to look up at me.\n\n\"You get to keep all your clothes on? How fair is that?\" she argued.\n\n\"Very well, I'll discard some layers just to even the playing field,\" I suggested. I removed my shirt and t-shirt, pulled off my socks and then pulled down my pants. I left on my underwear, which did little to hide the thick root of my cock as it lay turgid and expectant in the tight pouch of my boxer briefs. \n\nI may have been many years older than the young lady I was about to touch, but I'd kept my physique as I'd aged and had never been shy or embarrassed about being naked, or nearly so, with members of the opposite sex. I knew that confidence showed. \n\nMia watched with a smile as I lightened my clothing load and I could see her eyeing the thick round bulge of my half hard dick. Satisfied that I'd followed suit, she lay back down, content with the extent of my disrobing.\n\nI was completely and utterly stimulated to be hunkering down over this gorgeous specimen of a female. I quietly straddled her thighs and reached for the massage oil. I squeezed a generous amount into the palm of my hand, shared it with my other hand and was about ready to begin when I noticed her hair was still down.\n\n\"You should tie your hair up, Mia.\"\n\nShe had a tie around her fingers and quickly pulled her thick wavy hair into a loose bun. The tender tendrils of hair just above her neck looked so delicate. This is where I would begin. I cupped my hands and turned them over as the oil dripped onto her skin and my palms found her neck and shoulders. \n\nI began to squeeze - gently, but firmly - as I started my massage. I concentrated on her neck, pressing the tips of my fingers into the base where it joined her slender shoulders. I wanted to gauge her reaction to each move so I would know where to concentrate as the evening unfolded. I used my thumbs to counterpoint my fingers and did my best to find the tight points in her muscles where pressure and slick fingers would lessen her tension and slowly unleash her libido. Her soft moans let me know that I was off to a good start. \n\nI was determined to take my time and do a proper job. My hands would focus on her neck and shoulders, then slide down her upper arms to squeeze and encircle them. Her upper arms were well developed, but soft to the touch. As I pulled my fingers back to her shoulders, they dipped down to pay a brief visit to her underarms, hairless and freshly shaven. I continued to concentrate on her neck, shoulders and upper arms until the oil had been absorbed and a slight friction began to set in. \n\nI used gravity to press down on her upper back and apply pressure, then scooched back down to rest my hips on her upper thighs. I hadn't intended this contact, but my thickening cock gently grazed against her shawl covered cheeks. I pulled up and back. There would be time for that later. I imagined that she could feel the heat and hardness of my gathering erection through the thin material that covered her bottom. \n\nI scooted down a little lower on her legs and applied another large squirt of massage oil to the palm of my hand. I would now concentrate on the center of her back. In my experience, this was the spot where a massage began to become sensuous. I had completed my work on the shoulders and neck and was now headed south. I applied a fair amount of pressure to see how she'd react and she seemed to love the weight of my slippery hands as they pressed down on her middle back. My splayed hands moved up and down and to the side, alternating between pressing with my fingertips and applying pressure with the palms of my hand. I used my thumbs to find the ridge on either side of her spine as I eased them upward along the center of her back.\n\nI did my best to keep the massage interesting and varied. I alternated smooth light strokes of my fingertips with gentle pressure of my full hands, along with pointed pressure from my fingertips and thumbs. In all I kept my hands moving, wanting to keep her guessing as to what I'd do next, and where. On my sweeps south, my hands would occasionally run a line along her sides, my fingertips just grazing the bulge of her generous bosom, squeezed outward by gravity and her face down position. \n\nIt was time to move to her lower back and I got an inspiration and followed my instincts without thinking too much about it. I swung my legs around so I faced her feet, now straddling her upper back. I would work her lower back from above, and my new position afforded me an exquisite view of her gorgeous round butt, barely made decent by the small shawl she had draped over her posterior in a nod to modesty. \n\nI applied another generous amount of oil into the palm of my hand and readied to continue my southerly approach. I'd reached the moment of truth. Either she'd want to maintain the gesture of a cover that was afforded by her shawl, or she'd want me to ignore its presence and explore the absolutely gorgeous round ass that lay barely concealed. \n\nI pressed down on her back, applying deep pressure once again, then pushed my hands, led by my thumbs, down until they met the sharp upward slope of her posterior. My thumbs swept to the side and my splayed hands conformed to the sexy curves of her fleshy hips. She was solid, but soft, and so feminine. I could hear her soft sexy moans from behind me. \n\nI began to apply pressure against the point where her back met the upper slopes of her ass as my fingers continued to apply pressure and complement the sweeping movement of my well lubricated hands. Each stroke of my hands downward stretched the limits of how far I should go. She would either react negatively as I got closer and closer to her ass, or she'd show signs of welcoming my advances. \n\nI was pleased to see the latter as she arched her back slightly, pressing her ass further into the air - a clear sign that I should continue and that a booty massage was a welcome direction for my advances. I followed my instincts and pressed on, finally sweeping my hands in a long sweeping motion that moved over the upper slopes of her gorgeous cheeks and slightly moved the shawl from its protective position. Her low groan and the upward movement of her ass told me I had made the right move. Now we were going somewhere. \n\nEmboldened by her reaction and my own gathering arousal, I pushed the shawl aside and completely exposed her ass to my view and my advances. I stared in awe at the beautiful gluteal orbs that awaited my attention. \n\nHer ass was just as I'd imagined when I'd been eyeing her earlier in the evening at the bar. Her hips flared in a copious curve and combined with an upward thrust of bubbly butt that was soft, fleshy and perfectly round. I don't think I'd ever seen a more beautiful sight. I couldn't help but comment.",
        "\"Good God, Mia. Your ass is gorgeous. My word.\"\n\n\"Mmmm,\" she responded, squirming to indicate that I should touch it some more. That was all I needed to hear.\n\nMy hands began to knead and squeeze and massage her cheeks, sweeping up to her lower back and down to her smooth thighs. Her flesh oozed between my fingertips as I literally poured a huge dose of oil onto her butt cheeks. I began to massage in earnest now, spreading her cheeks apart and openly exposing the light brown puckered sphincter of her tight little asshole. She was so gorgeous in the firelight and her incredible fleshy ass felt so good in my hands. \n\nThe music was perfect - keeping a rhythmic beat that coincided with my manual massaging. I took the entire bottle of oil and, rather than squirt some into my hand, turned and poured it directly on her butt cheeks. She groaned with the realization and my slippery palms returned to the promised land of her soft round butt cheeks. 'God, I could do this for hours,' I thought to myself.\n\nI became more aggressive in spreading her cheeks apart and she seemed not to mind in the slightest. If anything, she was quite comfortable with my manual maneuverings. As my thumbs moved lower and lower into that seductive gap between her thighs, the more she seemed to moan and move to my hands. There was no question she was welcoming my fingers as they came closer and closer to her pussy.\n\n\"God, you're so beautiful,\" I suddenly blurted out as my thumbs pulled her buns apart and I gazed for the first time at the full plump lips of her pussy. The pressure of my thumbs clearly separated her outer lips from behind, exposing the glistening pink core of her sex. Her aroma wafted up to my nostrils and I realized for the first time in several minutes that I was now as hard as a fucking rock. \n\nI was, however, feeling disconnected a bit from her in this position, so I switched ends again and straddled her legs once more, facing upwards. What a vision! Her entire back glistened with oil in the flickering firelight. She lay with her head to the side on a pillow, her eyes closed, and her hands pulled up above her shoulders. She looked completely relaxed, her hair up, yet a few errant strands escaping to showcase the dark brown color of tresses. \n\nAnd her body, oh my God, her body was completely exposed to my view. Her light brown skin was unmarred with tattoos or wrinkles or blemishes of any kind. Her upper back tapered to a tight low waist that burgeoned outward and upward to the most beautiful ass I'd ever laid my eyes on. Her hips were generous and round, but in perfect proportion to her body. Her thighs were sturdy and smooth, as was the rest of her. And most alluring of all was the deep dark crevice between her ass cheeks. I just wanted to burrow my face in her butt and suck and lick her into the wee hours. \n\nBut it was a massage I had promised and I aimed to keep my word. The oil had been sitting close to the fire, so it was getting nice and warm as my massage proceeded. I squeezed the bottle and poured a generous amount of oil onto her ass, back and upper thighs, then returned to the matter at hand.\n\nMy hands slid with what I thought was just the right amount of pressure as they swept in long arcs from her knees to her upper back. At times I worked them symmetrically and in unison; at other times each hand moved in opposite, but complementary directions, completely covering her backside in a sheen of warm slippery oil. Her occasional gasps and sexy groans were all the encouragement I needed. \n\nEvery once and a while, my fingertips would graze the bulge of her breasts as they squished out from under her torso. I ached to touch and feel them with oily hands, but figured that would happen in time. At times my focus would return to the lovely round globes of her ass and I'd spread my fingers wide and squeeze her warm flesh with my slippery digits. I could see and hear that she enjoying these subtle, yet purposeful explorations, so I became a bit more daring.\n\nI moved down slightly and began to slide my splayed hands up her thighs, my thumbs reaching down between her parted legs. As my fingers reached her cheeks, my thumbs stayed down between her thighs pressing against the bulging pouty flesh of her outer labia. I stopped right at that point and my thumbs moved in tight circles against the flesh of her sex. She moaned audibly and I could feel the heat of her hole and the mixing of her own lubrication with my oily fingertips. I could even hear her sticky lips opening and closing as I kneaded her glorious bottom. The aroma wafting up from her sex was completely intoxicating. \n\nThe timing felt right to move about again. I repositioned my right knee between her upper thighs as my hands returned to knead the soft flesh of her derriere. I pulled her cheeks apart again and gloried at the view of her ass and the clear definition of her labia silhouetted lusciously in the gap between her legs. My left thumb slid across her anus, followed by the right. Her gasp and arching back spoke volumes. I pressed down and back on her lower back and felt her pussy lips engage with my lower right thigh just above the knee. I could feel her hot wet lips pressing against me as she slowly moved her body up and down, enjoying the friction and something to hump against. She was a naughty little girl, and I loved it.\n\nAt one point she pushed up on her elbows and turned to look back over her shoulder at me. \n\n\"Are you having fun?\" she asked with a devilish grin.\n\n\"Only if you are,\" I replied. \"This is about you. Not me.\"\n\nHer smile answered my question without her having to say a word. I took advantage of her upper body being raised off the comforter and the angle of her arms and leaned forward to reach in front and cup her incredible breasts for the very first time. They were outrageously big and soft and my hands had enough oily residue on them to allow me to fondle them comfortably. The softness of her generous breasts was offset by the hardness of both nipples. They scraped my hand in contrast to the silky full flesh of her bosom. I gloried in their feel and texture and my middle fingers each found a nipple to tease and fondle. She lay her head back down on the pillow and I extracted my hands, encouraged to know that I could return to my mammary explorations later. \n\nI pressed my right thigh more strongly and directly against the soft folds of her pussy and felt her press back with no shyness or doubt whatsoever. I was about to apply more oil when I felt it might be time for a flip.\n\n\"So, Mia. Why don't you turn over so I can do your other side?\" \n\n\"Other side?\" she queried. \"You're going to massage my front?\" she asked directly.\n\n\"Well, yes...I am.\" I stammered. \"This is a full body massage. If I only did the back it would be a half a body massage. What good would that do?\" I questioned, trying to apply logic where none would suffice. \n\n\"Very well,\" she agreed without much arm twisting. \"You are putting in a most excellent effort so I will comply with your wishes,\" she said as she started to rise.\n\nI moved to accommodate her flip and watched in awe as her full round breasts came into focus. Oh my God, they were big and soft and so lovely with large aroused nipples. They jiggled slightly as she adjusted her body to recline. My cock wasn't hard at this point; I'd been working and concentrating. But it was full and forming a considerable log of turgid flesh in my boxer briefs. I saw her eye the evidence of my semi-arousal as she re-positioned herself and caught her subtle smile. \n\nShe lay back and got comfortable, her arms at her side and a look of contentment on her pretty face. For the first time I caught a glimpse of her pussy from the front. Her pubic hair, what there was of it, was neatly trimmed and shaped in a small tuft of curly black sitting high on her pudendum. Her outer lips were full and carefully shaved and disappeared quietly between her thighs in a tight seductive vee. \n\nAs she lay back her breasts flattened slightly, but they still sat proudly on her torso, punctuated by medium brown nipples that were hard; her areolae a little larger than a silver dollar. I surveyed her body with impunity as she lay naked before me, ready for my touch. \n\nI started slowly and conservatively, concentrating on her arms and hands, moving from side to side. I worked my manual magic, but couldn't stop looking at the beautiful body that lay right in front of me. It felt like she had now consented to let me touch her anywhere.\n\nArms done, I moved to her shoulders and upper chest, applying more oil to ease the movement of my hands and fingers. I circled around her breasts without touching them, then grabbed the bottle of oil and squeezed a generous dollop onto one breast, then the other. I could see her squirm just slightly, knowing where I'd be concentrating next. She looked totally in the moment and I readied myself for a breast massage. \n\nI spread my hands across her rib cage below and slowly moved my hands upward, the soft flesh of her boobs squishing between my outstretched fingers. After the initial pressure, I pulled back and let me well-lubricated fingertips graze all around the glorious mounds of her bosom, tracking back and forth over the distended tip of her engorged nipples. I pinched each with oily fingers and she squirmed at the pressure. I spread my fingers wide, doing my best to grab all of her bosomy flesh, but it was impossible; they were just too big to be contained in the palm of my oily hands. \n\nI could feel her body reacting to my touch as I squeezed her breasts and alternated varying ways of touching and stroking her. There was no doubt in my mind, however, that she was enjoying my work and slowly getting turned on by a sensual touch. \n\nAs I knelt at her side, one hand began to slide down on to her torso and tummy as the other remained engaged with her tits. I applied more oil and my hands both moved to her belly; sliding this way and that, but avoiding her mound. And she did have a lovely mound. It rose gently from her flat belly and seemed to work in concert with the protuberance of her hip bones on either side. She had such lovely contours. I had to resist touching immediately; knowing that taking the round-about way would yield more dividends in the end. \n\nMy lubricated hands circumvented her sex and began to massage the fronts of her thighs in earnest. I saw her part her legs slightly and used the opportunity to slide one hand between her thighs as the other one moved to the outside of her leg. I now had her right thigh between my oily hands and I began to squeeze and knead her firm muscular leg. I encircled as much of her leg as I could with my hands as I slid to the knee, then slowly worked my way upward. She parted and lifted her legs even a bit more and I now got a lovely glimpse of her inner lips, slowly emerging from the tight crease of her outer labia. My hands moved up, then up some more, until the side of my left hand was pressed against her pussy as I squeezed thigh. I could feel her heat and her considerable wetness and knew that she'd soon be ready for me to touch her very core. \n\nI moved my hands to her left leg and followed suit; once again squeezing and massaging as I moved north and kneaded her thigh flesh. \n\n\"Mmmm, that feels so good,\" she said, barely above a whisper. \"You have magic hands,\" she added. Pretense and joking were gone. I could tell she was ready for me to touch her pussy. \n\nI placed my left hand lightly on her belly, just above her pudendum, and reached down with my right hand to her knee. With a thumb on one knee and a pinky on the other, I slowly and seductively moved my spread hand up her thighs, dragging my lubricated middle fingertips along her inner thighs.\n\nThe only sounds were the crackling fire and the soft thump of electronic music as my fingers finally came in touch with the proud pouch of her pussy. I let my middle finger drag just slightly, as it slid quietly between her labia and encountered the warm slippery core of her furled lips. It slipped like a knife through butter and I could feel her body swell with arousal as the fingertip grazed slowly over her clit, stopping for just a second to weave a few tight circles before journeying on. I felt her body rise to my touch and knew she wanted more. \n\nI repeated my knee to belly journey several times, each time applying a little more pressure as my middle finger gathered her own lubrication to add to the mix. On my fourth trip north, my hand slid between her legs and my entire palm covered her full juicy lips. Her pussy flesh felt soft, full and ready to be parted. She gasped with delight and pressed her hips up to express her approval and to provide better digital access. \n\nWith my palm covering the soft flesh of her mons, my middle right finger slid easily into her core and her breathy moan let me know I was timing my entry just right. As I lightly fingered her, just barely moving my finger, I slid my left hand over her engorged nipples, teasing and pinching slightly before slowly moving down over her undulating belly. Every movement and sound she made screamed, \"touch me\", and I was determined to do just that.\n\nAs I curled up my middle finger and found the soft spongey flesh of the front wall of her vagina, my leftt hand delved lower over her belly, past her tiny patch of pubic hair and down between the pouty lips. Her clit was engorged and slippery and was begging to be touched and stroked. With a manual dexterity that I had honed over the years, I began to touch and finger her hot wet pussy with both hands, each doing something completely different. I watched her face as I strummed her sex, monitoring her every sound and grimace to assess how I was doing. From the way her body moved to encourage my manual exploration and the crescendo of sounds she was making, I was easing her toward climax. I knew now was not the time to slow down or change pace. \n\nShe was so slippery and loose now, just gushing juices. I added my ring finger to the mix and began to finger her with a two-fingered fluttering come hither motion. Meanwhile, my left hand was strumming her clit at an increasing pace. Her eyes were shut tight and she was grabbing my thigh with her left hand, clutching tighter and tighter. Her right hand was clasping the comforter in a death grip and her toes were pointed and ready for release. As she edged to the tipping point the sounds emanating from my manual ministrations became loud and slushy sounding; like her juices were overflowing and getting stirred up in the manual mix. \n\n\"Oh, oh, mmmm, fuck! Don't stop! Shit!! Don't stop, please don't stop,\" she practically screamed. Her mouth opened with a silent cry, her hips lifted up off the floor and she was practically spewing and gushing nectar from her hot cunt. \n\n\"Awwwww, fuck!\" she suddenly screamed as her body was wracked with a violent orgasm. Her left leg shot out involuntarily at a straight angle and her entire body jerked with violent spasms as she made an unintelligible sound that crossed between pain and ecstasy. I slowed my motions and her body, after a few aftershocks, went limp. I calmly slowed my fingering motions to nothing, then gently extracted my fingers, knowing she'd probably feel tenderness in the afterglow of what, from all appearances, had all the marks of an epic orgasm. \n\nI lightly touched her, staying away from all sensitive areas as she collected herself and came back to reality. She finally opened her eyes and looked at me through lowered lids.\n\n\"Wow,\" was all she could muster. I smiled back at her and let my hands graze over her entire body before coming to rest. \n\n\"How was that?\" I queried\n\n\"Wow,\" was all she said, again. \"That was amazing.\" She placed her hands on mine and said thank you. I had been kneeling this entire time and was ready to relax myself. I lay down next to her and put my hand on the soft pillow of her bosom. It felt so lush and wonderful. She stroked my head lightly as we listened to the music, which we could actually hear again, along with the crackle of the fire.\n\nThe fire felt like it might be dying down a bit, so I excused myself to add a log and stoke the flames a bit. As I kneeled there, poking the fire, I felt a hand from behind on the inside of my thigh, and then another. I had lost my erection, but it was not going to take much to bring it back full force. I was still wearing my boxer briefs and as I poked the fire, I could feel her grab the waist band and start to pull down. I assisted by standing and stepping out of my briefs as she tossed them aside. I was now naked, facing the fire, and felt her hands exploring my legs and ass, and sliding, finally, between and from behind to touch my hanging cock. Her touch told me this was just a little playful exploration and I felt like she had something else on her mind.\n\n\"So. Come sit down. I want to tell you something.\" That was an invitation one could not refuse. I finished resurrecting the fire and sat down next to her. Her naked body looked absolutely gorgeous in the flickering light of the restored fire. She looked at me with those big brown eyes.\n\n\"Look, you should know I have one rule. I never bring a guy into my bedroom on a first date.\"\n\n\"Was this a date?\" I asked innocently. Was it? I didn't actually know.\n\n\"Well, given how hard you just made me come, yes, I now consider this an official date,\" she said, smiling. \"I've already done way more than I usually do on a first date.\"\n\n\"Is the date over?\" I asked, playing along with wherever she was going with this.\n\n\"Not by a long shot,\" she answered. \"But now it's time for me to make some suggestions.\"\n\n\"I can live with that,\" wondering where she was taking us.\n\n\"You can sleep here on the couch, but I'm going to sleep in my bed tonight. That's just the way it's going to be ,\" she stated emphatically. \n\n\"I can live with that. No problem,\" I replied. She smiled and adjusted her arms slightly, her soft hanging breasts wobbling slightly in the firelight.\n\n\"So...when was the last time you had a really really good blowjob?\" she asked like she was asking when I last had my car inspected. I thought for a moment and realized that it had, in fact, been a really long time as my wife had never particularly been into giving oral sex.\n\n\"Umm, well, let's see.\" I pondered the question, wanting to give an honest answer. \"To tell you the truth, it was in nineteen seventy...\" I paused, trying to do the math. \"I guess the late seventies,\" I said, truthfully.\n\nShe smiled like she'd won the lottery. \"Are you fucking shitting me?\" she said in a very ladylike tone. \"Oh my, God. Well, then.\"\n\nShe stood up, her breasts bouncing as my eyes washed over the fine curves of her exquisite body. 'Good God, what a woman,' I thought to myself.\n\n\"I'm going to go pee and get some water. You should just make yourself comfortable on the couch here. And when I come back...\" She paused for emphasis and turned to face me so I could see her entire body in all its naked glory. \"I am going to give you the best blowjob you have ever had. Guaranteed,\" she added as she twirled and exited the room, her round cheeks bouncing tightly and her provocative hips swaying just so.\n\nI adjusted the fire again. I was no longer erect, but the heat from the hearth felt good on my body. My cock hung flaccid, but heavy with anticipation for whatever was to come. I sat back down, spread my arms on the back of the couch and also spread my legs slightly to let my dick fall between my legs. I didn't want Mia to forget her promise once she returned to the room.\n\nI heard the toilet flush, followed by the refrigerator opening, and Mia re-entered the room a few moments later. She strode much the way she had earlier in the bar while waiting on tables - except now she was stark naked. I smiled at the very idea. Her large breasts bounced and wobbled wonderfully as she crossed the room, heading straight for me. I saw her eyes look down at my cock hanging between my legs and thought I detected the slightest of smiles. ",
        "Now I'm no porn star in the size department, but I'm no slouch either. And, fortunately for me, even though I didn't presently have a partner, I still groomed and took care of myself; more out of habit than readiness. I kept my hair trimmed short and had been shaving my balls and surrounding area for decades. I had always just loved the way it felt, but I was happy for other reasons at that very moment.\n\nMia stood in front of me, a vision of sensual wonder in my eyes, and held out her hand. I took it, she pulled and I stood, a few inches taller than her. She wrapped her arms around my neck and looked me in the eye. I could feel her soft breasts pressing against my chest and the pulse of arousal coursing through my veins once again. She stood close enough that my hanging cock, still flaccid but coming to life, lightly rubbed against her belly.\n\nShe pushed up on her toes and pulled me in for a kiss. It was a light kiss at first; all lips and soft moans. Her scent stirred my head as our kiss deepened and her pliant body pressed against me with more urgency. Our mouths opened and our tongues had just begin to explore when she pulled away and nuzzled her mouth up close to my ear.\n\n\"I want to suck you, Jake. I need you to come in my mouth, I want to taste your cream,\" she whispered ever so softly. I took my right arm from behind my back and stuck it out to the side.\n\n\"You'll have to twist my arm, then,\" I joked. She reached out with her left hand and gave a half-hearted twist. \"I give,\" I said. She smiled and dropped to her knees, slowly sliding her hands down my chest, my belly and along my upper thighs. \n\nShe knelt right at my feet and looked up at me with her big brown bedroom eyes. My dick wasn't hard yet, but it was thickening and ready to rise with the slightest provocation. My arms hung at my side and I felt rather awkward at that very moment; standing naked, on the verge of complete arousal with a beautiful young woman kneeling naked at my feet and ready to suck me. \n\nShe placed her hands on the front of my thighs, our eyes locked on one another, as she stuck her curved tongue out and cradled the bulbous head of my cock. Her upper lips curled up and over the crown and moved with a slow patience. I watched, and felt, as the slipped the first inch or two of my hardening dick between her gorgeous full lips, her eyes never leaving mine. I was throbbing hard in no time. In and out, the head of my now throbbing cock slid between the wet velvet softness of her lips. I could feel her tongue swirling. \n\nShe moved impossibly slow and with a sensuality that I'm not sure I had ever experienced. It was like she was saying, 'I've got all night to suck your dick and I'm going to make this last.' Fine by me. I'm sure my facial expressions told her just what I was feeling - which was total and unadulterated joy. \n\nShe went low, to the very base, and slowly licked her way up like she was enjoying a cherry popsicle on a hot, humid, summer day. Her locked in gaze told me she was totally dialed in on what she was doing. \n\nAfter traversing my length with several licks, she resumed taking the head in her mouth; now taking me a little deeper. Her hands wrapped behind me, cupping my buttocks with her palms and pulling me into her mouth. I gasped and she smiled with her eyes, obviously enjoying the pleasure she was giving. \n\nHer hands moved back in front again, but this time she took a hold of me, one hand cupping my balls and the other wrapping around my girth. She disengaged her mouth and jerked me a few times, leering at me lasciviously. \n\n\"I love sucking cock,\" she stated for clarity, in case there was any doubt. There was none. I was on sensory overload; every nerve ending awake and on alert, despite the late hour. \"And you have a very nice one, kind sir,\" she added in an almost submissive tone of voice. \n\nMia now cupped my throbbing balls, encasing my full sac in both hands. She went back to sucking as much cock as she could take. Her beautiful brown eyes locked in again with mine as she her head moved back and forth. It looked like she was feeding herself dick and her moans and occasional gagging sounds made it sound like she just couldn't get enough. \n\nI'd received what I thought were good blowjobs, albeit in the distant past. But nothing prepared me for the sensual intensity and downright mindboggling technique that Mia displayed. I loved the feeling of my balls in her hands as her head bobbed and her tits jiggled further below. \n\nWith an audible pop, she let my cock flop out of her mouth and suggested I sit back down on the sofa. I was totally under her control at this point and would have done anything she told me to do. There was a strange and erotic duality: she had been in a most submissive position on her knees, yet held me in complete control. I flopped down on the couch and she walked over on her knees, spreading my legs wide. My rigid cock bobbled stiffly as I sat. \n\nShe positioned me so my ass was barely on the edge of the sofa, my feet firmly planted on the oriental rug and my head leaning forward against the back cushion of the couch. My cock now stood rock hard and proud. I wanted to be able to watch. As wonderful as everything felt, it was the visual imagery of her sucking me that had me completely and utterly transfixed. \n\nShe kept alternating between sucking my knob and licking up and down the shaft, her intense gaze always returning to mine. She licked her way down, and I mean all the way down. I suddenly felt her tongue washing over my balls and I moaned. \n\n\"Oh, Mia...what are you doing to me?\" I blurted out. \n\n\"Sucking and licking your balls, Jake,\" she stated clearly before taking my left testicle in her mouth and moaning loudly. The vibration tingled through my entire lower body as I lifted my hips slightly so she had total and uninhibited access to my scrotum. The feeling of my ball in her mouth was unbelievable; like it was encased in warm liquid silk. She went from one to the other, holding my cock aloft in her right hand as she sucked and licked my balls. She stopped and let my nut pop out of her mouth and came up to ask a question, leisurely stroking the end of my cock with thumb and forefinger as she did.\n\n\"So you haven't had a good blowjob in decades and aren't in a relationship, but you shave your balls? Why's that?\" she asked with a sly smile.\n\n\"Hmmm. Never know when you might get lucky, I guess,\" I responded, hoping she'd go back to what she was doing.\n\n\"And?\"\n\n\"I got lucky as fuck tonight,\" I said, in all seriousness.\n\n\"Yes, you did,\" she responded with a giggle, then went back to lathering my ball sac with her warm swirling tongue. Good God, it felt so good.\n\nSuddenly, and unexpectedly, she moved even lower as I felt her pointed tongue exploring my perineum and even circling my anus. Only hours earlier I had been ogling a beautiful young waitress in my favorite bar; now she was licking my ass. How could this be?\n\nShe worked her way back, ever so slowly, washing my testicles one more time before ascending my shaft, our eyes locking in on one another again. She kneeled up high so her breasts were even with the straining length of my cock. She'd kept me on edge for some time now and I was so ready to erupt. She leaned forward, her right breast dangling just above my erection. As her hand moved up and down the top couple inches of my cock, it bounced into her hanging breast with each upward stroke. The soft flesh of her bosom shook, shimmied and jiggled with each jerk of her slender hand. She knew exactly what she was doing as she smiled in a sultry and knowing way.\n\n\"Oh my God, Mia. That looks so fucking sexy,\" I hissed. \n\n\"Are you ready to come for me, Jake?\" she asked so innocently.\n\n\"God, yes,\" I seethed. She was jerking with just the right amount of pressure in just the right spot and with just the right speed. Her jiggling bosom was the icing on the cake. She cupped her own breast in her hand and guided her nipple to rub along the tip of my cock. \n\n\"Mmmm, you're so hard. You must have so much cum for me,\" she said in such a sweet sexy voice. \"Will you come in my mouth, baby?\" She went back to jerking me; not hard enough to make me come; just enough to make her tits jiggle again as I stared down at this sexy young thing. God, she was torturing me with pleasure.\n\n\"Yes,\" I agreed. \"But you should know I come hard, Mia. And tonight especially. Be ready.\" \n\n\"Oh, yesss,\" she whispered. \"I want your load in my mouth, Jake. I want you to fill my mouth with your hot cum. Mmm, I love to make a man shoot. Show me what you got, baby.\"\n\nBefore I could even answer, she returned to sucking me, with a renewed purpose and vigor. Now she wasn't teasing and extending foreplay. Now she was milking my cock for seed. I just stared at her in stunned silence, my mouth agape as I watched her suck my dick like there wasn't anything she'd rather do. What really got to me, however, was the whimpering little sounds she made as her head began to bob up and down and she started to take me deeper and faster. \n\nAt one point she took a few second break, pulling back a few inches as a strand of saliva spanned between the tip of my crown and her lower lip. Suddenly she spit on my cock and went back to sucking with even more energy. Her mouth was like warm liquid silk and all I felt were lips sliding up and down, taking more and more of my raging hard-on into her mouth. I felt like I was piercing her skull, fucking her face, as I placed my hand on her head to feel her movement. She pulled off one last time.\n\n\"Mmm, I'm ready for your cum, Jake. Give it to me, baby,\" she instructed. \"I want to suck you dry,\" she stated emphatically. \n\nShe cupped my balls with one warm hand and wrapped the other around the base of my dick as she began to suck me like there was nothing she'd rather be doing; like there was no place she's rather be. I wasn't going to last much longer as I felt that wonderful feeling welling up deep in my core. \n\n\"Oh, God, Mia. Don't stop, baby. Fuck, I'm gonna cum, don't stop,\" I pleaded. Her whimpering sucking sounds made it seem like there was nothing she wanted more in the world at that very moment than a huge load of my cum in her hungry wet mouth. She had that perfect rhythm going now and there was no backing down. I was going to fill her mouth with my juice. I lifted my hips up slightly to let her know I was close.\n\n\"Yes! Oh, fuck!!\" My body tensed and I could feel a huge explosion welling up deep down in my loins. \"Yes, Mia. Suck me!! Fuck, ungghh, God, gonna come!!\" I screamed, just as the first explosive jet pulsed down Mia's throat, followed by another even larger spurt. I heard her gag a bit, but she didn't slow down. She just kept pumping me, milking my dick for my hot seed. I felt my whole lower body spasm as my cock pulsed and pumped her mouth full of hot gobs of slippery semen. Her sucking got slurpy as my load mingled with her saliva and dribbled out of the sides of her mouth and down my glistening shaft. A few more diminishing spurts and I was done, my body emptied of fluids. \n\nShe pulled her mouth away, but kept her hand on my cock, as she opened her mouth and a huge dollop of cream dripped out of her mouth and down onto the upper slopes of her big soft breasts. She looked so fucking sexy with cum dripping off her gorgeous lips.\n\n\"God, you weren't kidding,\" she joked. \"What a nice load, Jake. Thank you.\"\n\nGod, she looked so freaking sexy as she looked at me with sultry eyes and my semen on her lips. I don't know what possessed me at that moment, but I leaned down to kiss her, deeply. And she moaned and kissed me back passionately as our tongues swirled and I tasted myself in her mouth. I could tell this move was turning her on as our French kiss was lubricated by the remnants of my load still in her mouth.\n\nShe pulled away and I could see her swallow. She smiled.\n\n\"You taste good, Jake. And what a treat. Men never seem to want to kiss me when my mouth is full of their cum. Thank you.\"\n\n\"No, thank you, Mia. That was outstanding. Unreal. You are a talent,\" I said as I lightly stroked her face. \n\n\"So what's the second date like?\" I asked innocently. \"Is anything off the table?\"\n\n\"Not much,\" she replied. \"But let's take it one date at a time,\" she joked.\n\n\"If I take you to the repair shop tomorrow to get your car, is that considered a date?\" I asked smiling.\n\n\"Could be,\" she answered slyly as she stood up. My God, what a body. \"But it's late, Jake. You should settle in on the sofa and I'm going to head to my bedroom and take a shower. You know where the other bathroom is. There's blankets and pillows over on the window seat and you can just let the fire die down.\"\n\nShe stood there, naked, looking so incredibly young and beautiful. I could not believe what had just happened. We stared at one another in silence for just a minute.\n\n\"Thank you,\" I said, quietly.\n\n\"You're welcome...and thank you.\" She smiled and turned to go, her little bottom twitching so perfectly as she left the room; the same butt I had been ogling just hours early as I sat at the bar and sipped on my Negroni.\n\nWhat a day it had been. I made my bed on the couch and drifted into a deep and satisfying sleep, completely and utterly drained. Tomorrow would be a good day, I thought to myself. A very good day."
    ],
    "authorname": "gapster7",
    "tags": [
        "massage",
        "waitress",
        "bar",
        "fireside massage",
        "younger older",
        "natural breasts",
        "breast massage",
        "ride home",
        "perfect ass",
        "younger waitress"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/negroni"
}