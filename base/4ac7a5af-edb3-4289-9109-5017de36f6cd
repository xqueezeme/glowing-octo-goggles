{
    "title": "When We Were Married Ch. 05B",
    "pages": [
        "TWO WEEKS IS FOREVER\n\nFor regular readers, this has been the longest gap in the story since I started, for reasons I've touched on in a couple of postings. This is not the Chapter 5B I intended to put on Lit. I'd expected it to be at least two, maybe three times longer, which means more chapters. But I realized I'd hit a natural stopping point so I stopped and here is 5B. Fortunately, the writing has begun to flow again so I'm hoping 5C won't be as delayed. As always, I hope readers continue to enjoy the story. For obvious reasons I've become even more of a correspondence hermit than I have been , no time to reply your comments or emails, but I'm going to try to get back to more people. \n\n*\n\nMy name is William Maitland. Six months ago I was a boringly happily married husband and father of two teenagers. I had one of - if not the hottest - women in Jacksonville in my bed, I basically ran the State Attorney's Office for my boss while he ran for Governor of Florida.\n\nI knew who and what I was and I was happy with it. I had my nightmares. I knew that I didn't deserve the woman I was married to, that my kids had lost respect for me and that my hot wife Debbie for too long had seemed to look at me more as a roommate and good provider than a stud. I had gotten bald and fat and women no longer looked at me with an appraising eye, if they ever had.\n\nBut I told myself that nobody has it all. I had the woman I'd loved for 20 years in my bed and my life, the kids would grow up, I was doing a job that was actually more my life than an occupation, and I had a chance to make the world make sense sometimes.\n\nAnd then it all went away.\n\nIn the space of a few weeks, I learned that my wife didn't love me anymore, she soon began fucking a tall, good looking young stud I couldn't begin to compete with on any physical level, my kids didn't know or respect me. I lost my wife, my kids in a way, my manhood and my balls when I couldn't even get an erection while jerking off.\n\nI made a detour into the bottle and could have lost everything, but some good friends including people I didn't even know, helped me claw my way out of the bottle. I fought my way back to a better body and better health and the realization that it's possible to live even after the person you love most in the world has torn your heart out of your chest, chewed it up and spit it out.\n\nIt had taken awhile, but with the help of a better friend than I deserved, some kind ladies and one beautiful French woman, I had rediscovered my dick and my manhood. I hadn't stopped loving that bitch Debbie. I was beginning to think when they dumped my body into the ground I'd still love her. But I knew now I could live without her.\n\nAnd so, only days away from hitting my 42nd birthday and becoming officially Middle Aged, winning a major court case and sending an evil woman to Death Row at Raiford, burnishing my growing legend as the Angel of Death, and not so incidentally having hot sex with only the third and fourth women I'd known carnally in the last 20 years, I thought my world had finally begun to make sense again.\n\nUntil SHE walked back into my life....\n\n############################################# \n\nWEDNESDAY, AUGUST 31, 2005 -- 9 p.m.\n\nI stood in the dunes in the humid darkness, holding a soft, very sexy bundle of femininity against me, feeling her push the globes of her fantastic ass back against my dick and massage it gently. I nuzzled the back of her neck and drank in the odor of her hair and skin.\n\nI pointed out into the darkness. \n\nIt was dark enough that the horizon was only a faintly darker smudge against the night sky.\n\n\"Go about forty five hundred miles in that direction, heading northeast, and you'd be in sight of the French shoreline.\"\n\nShe didn't say anything but I knew we were both thinking. Beyond that horizon were her husband and son, her family and her life.\n\nFar away near the horizon there were several moving lights, pinpoints in the darkness so close to the horizon it was difficult to distinguish them from stars hanging low in the night sky.\n\n\"Shrimpers,\" I said as she followed my finger to gaze at the spot where the Atlantic merged with the sky.\n\n\"Maybe cruise ships, but more likely shrimpers coming back into St. Augustine or maybe heading up to Mayport.\"\n\nShe leaned back into me and tilted her head back to kiss me. I loved the taste of mint on her lips.\n\n\"You think they could be cruise ships?\"\n\n\"Sometimes they sail this close to the coast, but usually this far north you don't see them unless they're heading just north of us back to Blount Island. And there are only a handful. Most of the ships cruise from ports south of us to the Caribbean or the Gulf of Mexico so you don't see them often. Although there are some cruise ships that sail from northern ports.\"\n\nShe turned in my arms and kissed me hard. I felt her nipples as hard little buttons pressing into my tee-shirt.\n\nWhen she buried her head in the side of my neck, I said, \"Do you miss it that much, Aline? Would you rather be out there in the darkness looking back at the shore lights?\"\n\n\"Maybe,\" she breathed heavily, \"if you were out there with me.\"\n\nI held her in the night and it felt for a moment that the whole world was spinning around us. Nothing had seemed quite real since that moment yesterday when she had appeared as if by magic in my office and was kissing me.\n\nI had known she was gone and never coming back. Her life was on the French cruise ship Bonne Chance which was a maritime gypsy circumnavigating the world. It had stopped in Jac ksonville for a while, and then moved on to ports south. It was probably never be back and neither would she.\n\nWhich I had told myself over and over in the weeks before the Bonne Chance had finally sailed out for the last time, was a Good Thing. Because Aline des Jardins was a married woman, with a son, and her husband was a good man who had been a friend. Of course, he was also a cheating son of bitch who was screwing half the women in Paris while his wife worked at sea, but with the exception of that one little character flaw, he wasn't a bad guy.\n\n\"Do you think Philippe might object to me becoming a permanent cruise sex buddy?\"\n\nShe breathed into the side of my neck again. \n\n\"He will never know. He can never know.\"\n\n\"I thought you were going to tell him that I had given you the Fleur-de-Lis pendant. Tell him that I was a passenger and you saved my life, sort of. And you would wear the Fleur --de-Lis proudly for the rest of your life. How can you wear it if he can't know who gave it to you?\"\n\nShe separated herself from me and stepped a pace back. There was a cooling night wind whipping through the dunes and it caressed her heavy black bangs. The Fleur-de-Lis sat on her chest between her small, but delicious breasts bulging softly out from a light blouse. The moonlight glimmered off the diamond in its center.\n\n\"I thought I could tell him and he would never know the truth of what happened, even if he might guess. I thought that he wouldn't mind, because he's doing the same thing. But...\"\n\n\"But what?\"\n\n\"He's not a stupid man. The opposite actually. He reminds me of you. He is very, very sharp and perceptive.\"\n\n\"How can he-\"\n\n\"You remember I told you that you were different?\"\n\n\"Yes.\"\n\n\"I told you -- the others were -- just diversions. They never threatened....Philippe. And I think he knew that. I don't think he's ever had me watched. He could tell if...there was someone else...who mattered. But you....\"\n\n\"What about me?\"\n\nI said the words carefully, the way you'd move around a coiled rattlesnake that you'd discovered sitting on your dresser drawers one morning. This was the thing that had lurked behind every word we'd said to each other since the moment I'd looked up into her eyes yesterday afternoon. It was the elephant in the corner of the room that you couldn't ignore, but couldn't acknowledge. \n\n\"You want me to say it? To put it into words?\"\n\n\"One of us has to. Every day after I walked away from you, every single day that I woke up, I had to fight the urge to call you, to go back to the Bonne Chance. Every fiber of my body wanted you. But I couldn't, because I'd be breaking every rule that I've ever lived by, betraying everything I've ever believed in.\n\n\"But I'm weak willed. I couldn't go to you, but I couldn't push you away when you came to me. It doesn't make it right, what we're doing.\"\n\nShe held my face in her hands and kissed me. I felt that same weird sensation of fear that caused the little hairs on the back of my neck to stand up. It wasn't the night breeze. It was her kiss. It was fear. And now I knew what I was afraid of. \n\n\"I told you I felt something when I looked at you the first time, Bill. It was the same feeling, the same emotion, I had years ago when I first looked at Philippe across the room at that party. The night we wound up in his bed. The night he made me his. I am his. And so I can't be feeling those same emotions now for you.\"\n\nShe stared at me across a gulf of a few inches with those sea-green eyes that held the ocean in them.\n\n\"I can't be head over heels in love with you. I'm a married woman. I love my husband. I love my son. I have a life and a family. And I shouldn't be here tonight. So why am I here?\"\n\n\"Because as I should have told Father Dunleavy, and he would have appreciated the joke, God has a cruel sense of humor. You love Philippe and you have a life you can't let yourself lose. I don't have a life anymore but I do have a woman that I shouldn't love anymore, but I do.\"\n\n\"You love her even though you don't want to? What about me, Bill? What do you feel about me? You realize you've never put your feelings into words. I don't really know what you think about me. Except that you like to have sex with me and ... you were grateful to me for helping you get over your cheating slut of a wife.\"\n\nThere was an odd expression on her face and I tried to analyze it: fear and female pride and worry and something else inexpressible.\n\n\"We only known each other for a week. We really don't know each other at all, Aline. We met in a dream and that's all we have. But...\n\n\"I think...I....might be in love with you. I have feelings for you I haven't had for anyone other than...Debbie... in 20 years. In the last week I've had sex with two women that I liked and it was great sex. But it didn't mean anything. You meant something.\"\n\n\"What does something mean?\"\n\n\"Now who's playing attorney?\"\n\nShe wasn't smiling. She had a dead serious look on her face.\n\n\"What am I to you, Bill?\"\n\n\"I love her, Aline. I hate her, but I can't tell you that I don't still love her. There's 20 years of memories and loving. Every day I see something or hear something and a memory of her flashes into my mind. Sometimes I still wake up, after all these months, and I think I'm in our bed at home and I expect to roll over and feel her lying next to me. And then I remember...\"\n\nI looked across the gulf at her invisible home an ocean away.\n\n\"What you are is the person that made me think that life just might be worth living again, that I might not be the total and complete loser that I felt like before I met you. She wrecked my life. You've caused me to question everything I've ever believed in, caused me to question whether I'm the good guy I always thought I was.\"\n\nI looked back out at the ocean and saw the dark, sharp fangs jutting out from the white-capped tides as the ocean receded. To change the subject, I pointed to them and as she followed my finger, I told her, \"They call this the Matanzas Inlet. Matanzas means slaughter. This was a bloody place once. \n\n\" There's a monument in a park not too far from here. I've always known this since I grew up around here and my friends and I used to come here or to St. Augustine in the summers.\n\n\"In 1565, the Spanish and French were not being real friendly and they both wanted this piece of real estate. The Spanish killed -- slaughtered -- 250 French Huguenots to stake out their claim to the place. They even built a fort like the one at St. Augustine back in the 1700s. It's gone, not like the Old Fort in St. Augustine, but your people were here a long time ago.\"\n\nI watched the rocks slide in and out of the moonlight and told her, \"When I was a kid, we used to like to swim out to those rocks at high tide. They're dangerous. You could get your hands and feet carved up on some of them and kids have banged their heads in a rough surf and gone under, but usually their friends are able to drag them out.\"\n\nI took her hand and run her fingers along the underside of the point of my jaw. She felt the scar and gave me a look.\n\n\"I was 15 when we came down here one day in July. As usual they had no swimming signs posted although the county would never cough up the money for lifeguards. Rough surf. I went out there and we were horsing around and a wave caught me and smashed me into the big rock the furthest to the right over there. It smashed my chin open. I was seeing stars and it's a good thing no sharks were around because they tell me I was bleeding like a stuck pig.\n\n\"It wasn't really that big. It only took five stitches to close it up, but it bled like hell. Kids are stupid though. I was out there again the next weekend.\"\n\nShe leaned into me and kissed the underside of my jaw.\n\n\"Do you realize, that is the first time we've ever talked about your life -- before. Your childhood?\"\n\n\"We didn't do a lot of talking on the Bonne Chance, Aline, if you remember.\"\n\n\"No. I know about you and her, a condensed version. But you have a whole life, a childhood, a marriage, I don't know anything about. She has a lot of those memories. She made them with you. I'm just some woman you fucked for a week on a cruise.\" \n\nShe had turned away from me and her body shook. I grabbed her from behind and held her to me tightly.\n\n\"And you have a life I don't know anything about. And you are so much more than a shipboard romance.\"\n\n\"Do you love me even a little bit, Bill? Do you love me even a little bit as much as you love her?\"\n\nWhen I didn't answer she gave me a sad smile.\n\n\"That's so mean, Bill. And I know it. But I feel mean. And frightened. On the Bonne Chance, I had you in my world. Now I'm in her world. I want to win. I want you to choose me over her.\"\n\nI pulled her forward, kissed her one more time, and then:\n\n\"You wouldn't know what to do with me if you won, Aline. Would you leave Philippe for me? Don't answer that. I already know the answer. What's the point of waging a fight you can't afford to win?\"\n\n##################### \n\nWEDNESDAY, AUGUST 31, 2005 -- 5 p.m.\n\nTeller held the blonde goddess tight against his chest. Although she was hiccuping and gasping as tears flowed down her face, he'd been able to get her to evacuate the contents of her stomach with an emetic administered in his office bathroom before he'd begun the session. \n\nHe didn't want to leave another mess in his office for the cleaning crew to deal with like they had after his first session of hypnosis with the former Mrs. Maitland. And it had worked. With the exception of a few explosions of spittle from her stomach, it had been mostly dry heaves. \n\nAs she rubbed those heavy breasts against him, he found himself beginning to experience an erection, but forced the sensation down and thought about other things that made him go very limp. He could never afford to begin to even think about her in a sexual way, or he'd never be able to help her as a patient. And he would betray his medical oath. Never again.\n\nHe stroked her blonde hair and whispered as calmingly as he could, \"It's alright now, Debbie. It happened a long time ago and you're in my office and you're safe.\"\n\nShe shuddered and pressed her face into his chest.\n\n\"Oh, my GOD! Oh my God.\"\n\nTo get her mind off the experience she had just re-lived, and to begin the analysis of whatever it had been, he said, \"Tell me what you're feeling, Debbie. What's going through your mind right now.\"\n\nShe just gasped and moaned for several moments and then:\n\n\"Sick...sick to my stomach....I can taste them.....taste them pissing in my mouth....and....I'm scared...\"\n\n\"We don't know when this happened, but it's likely been some time ago. There's nothing to be afraid anymore. It's only a memory. They can't hurt you anymore.\"\n\n\"No, I'm not scared of them....I'm....there's something...I can't remember...but it....it terrifies me...it's like one of those dreams when....something is behind you and you know it...but you can't turn around and look at it...like that...\"\n\nHe made a mental note to follow up on that. It might be further repressed memories of other attacks, or fear of what they represented? Still and all, anger and depression would be expected if this was a true memory, but fear...?\n\n\"And...Jesus this makes no sense.....I hate Bill. I could cut his throat if I could get my hands on him. Now I know I am crazy. Why am I furious at him? He wasn't one of them. How can I blame him?\"\n\n\"I don't know, Debbie. It's hard for me to visualize his connection, based on what you've just remembered, but it's also hard to imagine how your anger toward him could involve this incident, if there wasn't a connection. Keep going.\"\n\nShe pushed herself back and away from Teller, sitting back on the couch where she had lain during the hypnotic regression session. She wiped the tears and snot off her cheeks with the back of her hand, then accepted a white linen handkerchief Teller offered her to finish cleaning herself up.\n\n\"You want to know what I feel mostly, Dr. Teller?\"\n\n\"Yes, I'm very curious if there's something you feel more strongly than what you've already described.\"\n\n\"Disgust.\"\n\n\"That's a normal reaction to the kind of event you're described. It's nauseating, even to listen to, much less to experience.\"\n\nShe looked up from the coffee table which was always a magnet for patient's eyes, which was why he'd had it put in, besides the fact that he loved it. There was a smile of such sadness on her beautiful features that he had to remind himself to keep a psychiatrist's neutral stance.\n\n\"No, disgust at myself.\"\n\n\"At yourself?\"\n\n\"Don't you get it, doctor? I know you do. You're just trying to be supportive. I was in a bathroom. I think it was in a men's bathroom. I wasn't being raped. It was obvious I had gone in there to suck those guys off or let them fuck me. I wasn't expecting what they did to me, but I didn't go in there to talk politics. I went in there to suck their dicks and let them fuck my pussy. Just like the slut that most think I am.\"\n\n\"You can't be sure of that.\"\n\n\"Doctor. It was a bathroom, a public bathroom and a big one, obviously. In a restaurant or big hotel. They weren't dragging me. They didn't have me gagged. I could have screamed for help, but I didn't. I remember them putting their dicks in my hands and I was jerking them. I could have hurt them, but I didn't want to. And until they got too rough, I obviously didn't mind sucking them.\n\n\"I know what it was, doctor. It was a gang bang, one that I apparently walked into willingly. And I wasn't a kid. I was a grown woman. So I was a married woman. While my husband that I vowed to love and be faithful to was somewhere else, I was sucking strange dicks.\n\n\"I'm a wonderful wife and mother, alright. No wonder I could never let myself remember.\"\n\nTears flowed down her cheeks that she didn't attempt to wipe away.\n\n\"The funny thing is, doctor, I really thought I was a better person than that. I love sex and I've had multiple men before, doubles and even triples when I was in college. But I thought...I was an honest person. That when I made a promise, an oath, I could keep it. And I made a promise to Bill.\n\n\"He accused me of cheating on him, and I told him he was wrong. Now it turns out he was right all along, he was just wrong about who I was cheating with.\"",
        "Teller kept quiet. There were times when patients needed to speak at their own pace.\n\nShe wiped a tear from her face and looked at the drop of her liquid on her fingertip as if she'd never seen a tear before.\n\n\"I like sex, doctor. I like having sex with men. I like being lusted after. I like that look in a man's eyes when he sees me for the first time and I KNOW that I could have him if I wanted him. When I met Bill...when I got to know him....when I fell in love with him...I didn't stop being what I am.\n\n\"He knew other men excited me....still do...always will....I'll probably be a flirt when I'm 80, if I make it that far.....I knew, or I learned, that he had doubts about me....I knew that...but what could I do? I can't change what I am. \n\n\"So I did everything I could to reassure him. No matter how hot other men got me, I always brought it home to him. And I think he liked it most of the time. It's a man thing. Most men like knowing they have something other men want -- as long as they don't have worry about losing it.\n\n\"And for the first ten years, before he joined that miserable fucking State Attorney's office and our marriage started dying, we were okay. I never cheated on him, although God knows there were lots of times I wished a little bit that I was still single. But I didn't. Honest to God.\"\n\nTeller stopped her.\n\n\"There's no need to take a pledge to tell the truth, Debbie. You could lie all day to me and the only person it would hurt would be you. I believe you've told me the truth in our sessions. I trust you.\"\n\n\"I trusted myself until today, Doctor. Now I'm not so sure. But anyway, after he joined the State Attorney's Office, and after he left our marriage for his job, and my Aunt Clarice got dumped by her husband and kept telling me that Bill had to be cheating, that all men cheated, all men were pigs, I probably did things I shouldn't have done.\n\n\"I let men rub their dicks on me when they were dancing, once in a while I let a kiss go too far, and I did...I...uh.....there were two times when I jerk-masturbated a guy at a party when he got me alone. \n\n\"But I never gave anybody a blow job, I never put my hands on their naked dick, I never let anybody have...my pussy...because that was Bill's. Even if the son of a bitch didn't want it anymore and couldn't make good use of it anymore. By MY standards, and I'm the only one who counts, I kept my promise to Bill. I wore out two vibrators, but I never cheated.\n\n\"Or, I didn't think I did. Now, who knows. But as I can remember, I just drifted along fantasizing about other men, rubbing them sometimes. About three or four years ago, after Clarice...died....I started thinking seriously about leaving him. I tried to talk to him. God knows we had fights.\n\n\"But I couldn't tell him what I was really thinking. I couldn't tell him I teasing other men, because I knew how insecure he was. He always had doubts about his ability to...satisfy...me and if you tell a man he's no good in bed anymore, all it will do is push you toward a divorce quicker.\n\n\" I tried to get him to shape up, because I knew if he was in better shape, and looked better, he'd be better in bed and I'd be hotter around him. But that damned office always came first. I know that his job is his life. And it was probably innocent. \n\n\"But I could never quite get Clarice's words out of my head. She had loved her husband more than life. And he was about ten years older than Bill when he walked in one day and told her he was leaving her for a 25-year-old secretary in her office. It killed her. Although it took three years for her to die. So I wondered about Bill and that damned office. And maybe that's part of why I got so damned angry.\"\n\n\"So I was lonely and getting more and more unhappy and horny every day. But I couldn't tell him I was thinking about divorce. Because I was a coward, I guess. We had a good home, we were secure financially. We had two young children. It was...comfortable....That's a chickenshit word, but that's the way I felt. I kept praying that one day he'd wake up and realize what he was going to lose.\n\n\"But he never did, and one day I met Doug Baker. And looking back, if he'd wanted to, he could have had me in a couple days. But he played it cool. And somewhere along the way, even though I told myself he was just a friend, I knew I was going to wind up in bed with him. And I couldn't do that married to Bill. So I started seriously planning for a divorce, how I'd break it to Bill, to the kids. How'd we'd be financially.\n\n\"And I could have lived with that. I had been faithful to my marriage. I'd stayed with him as long as I could. I knew my mom and family and our friends would all think I was a terrible person. They'd all be sorry for poor Bill, because he was such a miserable fucking sad sack and I knew he'd be a basket case after I left him. But I'd know that I'd been a decent wife.\"\n\nShe looked up at Teller, her eyes dry now.\n\n\"And I find out that it was all bullshit. I was cheating on him. I did break my vows. I did revert to being a slut like I was in college. I don't know now if I can ever look him in the eye again. Dammit.\"\n\nTeller just stared her for a few minutes.\n\n\"I've never felt guilty, doctor, about my life and the way I've lived it. And now I do.\"\n\n\"Okay,\" Teller said finally. \"You're a cheating slut. Now what?\"\n\n\"What?\"\n\n\"I'm not sure that your interpretation of what we've learned through this session is accurate. I have some questions in the back of my mind about it. But for the sake of argument, let's grant that you broke your marriage vows, once or maybe many times. You had sex, with multiple partners, probably indulging in a number of what might be called risky or deviant sex practices. \n\n\"You're a cheating wife, an adulteress. By most men -- and women's -- standards, you're what society would call it a slut. So, what?\"\n\nShe looked at him as if she couldn't believe what he'd said.\n\n\"So what? That makes me a terrible person, a liar, a cheat, a person who would hurt a man who loved her just to have bigger and better orgasms with strange men. What kind of mother does that make me? How could I ever talk about what's right and wrong with Kelly or BJ and keep a straight face. And if they ever find out....\"\n\nTeller leaned back and picked up his pipe, made a display of lighting it and took in a deep draught of aromatic smoke before releasing it.\n\n\"I concede your point, Ms. Bascomb,\" he said in a formal tone. \"You are a terrible person. In other countries, you'd have the option of Hara-kiri or Seppuku, ritual suicide, to atone for your mistakes. We don't do that here. But pills and guns are always available. I believe you told me your husband left a handgun in your home.\"\n\nShe looked at him, her eyes opened wide in surprise.\n\n\"Doctor Teller, are you insane? You're suggesting I commit suicide because I cheated on my husband?\"\n\nHe gave her a slight smile.\n\n\"No. You were starting to wallow in guilt about what you think you've learned and I was just trying to get you to look at the bigger picture. Assume that you have done a terrible thing, or things. There are only a certain number of ways to deal with that problem. \n\n'You could commit suicide, which would permanently remove your guilt. Of course it would leave your children minus one parent, devastate your family, and even saddle your ex-husband with a mountain of grief on top of the pain you've already dealt him.\n\n\"Or, you could go to your husband, confess what you've done and either beg him to take you back or to forgive you. From what you've told me, you don't want to go back to him and confirming his suspicions of your unfaithfulness would help him to build a new life -- exactly how?\"\n\n\"Or, third option. You could keep your mouth shut, let this secret go with you to your grave. There would be no unpleasant memories for your children or family to live with, and your husband would not have to remember you as a woman who cheated throughout his marriage, instead of at the very end.\n\n\"You can do whatever you want, but if you take the third option, you have to live with the guilt of what you've done, without trying to unload it on others, be as good a mother and daughter and ex-wife and possibly a future wife, as you can be. You have to live your life and maybe, just maybe, learn from your mistakes. It won't be as simple or easy as suicide, but it can be done.\"\n\nHe looked at her and didn't utter the thought running through his head.\n\n\"You can live with almost any amount of guilt, if you have to. I know.\"\n\n###################### \n\nTUESDAY, AUGUST 30, 2005 -- 5 p.m.\n\nHe left her and went to the door to his office and locked it. He didn't want anyone wandering in. He wasn't sure why, but he wanted Aline to himself for right now. When he walked back to her they didn't touch again, just stood looking at each other.\n\n\"Why?\"\n\n\"I missed you, Bill. I tried not to. I know you didn't want to see me again. But I missed you. I thought it would get better with time. But it doesn't.\"\n\n\"How could you get away from the Bonne Chance? And if you had that much free time, I thought....you'd be going home to Philippe and Andr\u00e9?\"\n\n\"It was time for me to leave the ship but Philippe called and told me that he has arranged membership for Andr\u00e9 in one of the most exclusive boy's fraternities in France. It will be a feather in the cap of Andr\u00e9 for the rest of his life. Most of the leaders of French government, industry, business, were members as boys. It's the equivalent of a club at...Oxford or Cambridge. You make friendships that will serve you the rest of your life.\"\n\nShe looked at her hand and I noted that she had not put her wedding ring back on, but she was looking at her ring finger and I knew who she was thinking about.\n\n\"Philippe came from nothing. Middle class pencil pushers, he puts it. He rose because of his own drive and intelligence. But he could have gone so much further with the connections that Andr\u00e9 will make. He wants that for Andr\u00e9 . And for two weeks, Andr\u00e9 will be engaged in male-only activities on a safari in Kenya, with Philippe and some of the other fathers along. An outing. It's one of the rituals they engage in.\"\n\n\"And a Mom wouldn't fit in?\"\n\nShe shook her head. \n\n\"Non. It deprives me of my time with him, but I love Andr\u00e9 as much as Philippe. I will see him in two weeks. I could have stayed on the ship. I should have stayed on the ship. I could have flown back to Paris and waited at our home there. I could have visited family and friends.\n\n\"Instead,\" and she crossed the distance between us to put her hand on my chest, over my heart, \"I chose to surprise a man I've only known for a week, a man trying to put his life back together, a man I threw myself at on our first cruise together. A man I was not even sure would welcome me. I must be a fool.\"\n\nI pulled her to me and held her warmth against me.\n\n\"I'm glad you're here, Aline. God, I'm glad you're here. You have two weeks? Do you have any plans?\"\n\n\"Just one. To spend them with you. If you want me to stay the whole time.\"\n\n\"Of course.\"\n\nMy mind started working again.\n\n\"I don't know that I'll be able to get away much. We have a pretty full calendar and...\"\n\nI stopped myself and looked at the dark haired vision that stood in front of me, delicious breasts rising and falling, remembering that great ass that was concealed beneath layers of clothing. She had chosen to come to me. And I was going to spend time on fucking depositions and witnesses and recalcitrant defendants?\n\nFuck it. I had lost one woman I couldn't afford to lose because I'd put this office first. The woman in front of me wasn't mine, never would be, never could be, but she had made me happy. She'd made me wake up with a smile on my face and a hard-on. She deserved more of me than I'd normally be willing to give.\n\n\"I have some things that need doing, but I'll make time for us to go places. I'd like to show off Northeast Florida to you. It's my home for most of my life. It's not exactly Paris, but there are a lot of things to like.\"\n\n\"That sounds like fun. Do you want to go out and celebrate tonight?\"\n\nI gave her a curious look.\n\n\"Everybody in the courthouse is talking about your great triumph and I saw a telecast on one of the televisions in the airport. 'The Angel of Death' takes a bite out of the 'Shark' was one report I saw and 'Killer Granny latest victim of the Angel of Death.' You have become a celebrity.\"\n\n\"I'm a 15 minute sensation, Aline. In a week they'll be asking me for ID when I go to cash a check at the bank.\"\n\n\"I don't think so,\" she said, slipping her arms around me. \"My friend is a famous man and becoming more famous by the day. I think I'm going to become your first 'groupie'. But we should go out tonight.\"\n\nI thought about it for a moment.\n\n\"I know a place we can go for drinks after we grab a bite. But I really don't want to celebrate anyplace we're liable to run into press or anybody I know.\"\n\nShe gave me a hurt look.\n\n\"You are ashamed of me, Bill?\"\n\nI pulled her to me and kissed her hard and while she fought it at first she gave in and gave herself to it. When I had to breath again I held her out at arms length and said, \"Anywhere I go with you, every man in the place is going to be hating me and wishing you were on his arm. You're going to be the most beautiful woman wherever we go. How could I be ashamed of you?\"\n\n\"Then why?\"\n\n\"I want you for myself, Aline. I don't want to share you. I don't want to have to answer questions and I don't want Debbie sticking her nose into my business and she will be a pain in the ass if she ever sees you. We're almost able to stay in the same room without my wanting to kill her and I don't want to stir up any more shit than I have to.\n\n\"And....\" I told her, \"the world is a small place. A camera crew catches me celebrating with a beautiful, dark haired mystery woman, and what would you care to bet that it won't somehow wind up on the Internet. And they get the Internet in France. Does Philippe know you're spending your two weeks with his old friend, Bill?\"\n\nShe shook her head and dropped her gaze.\n\n\"Do you want to try explaining to him why I gave you the Fleur de Lis AND you wound up coming to my home town and going out partying with me? I don't think anyone, and especially Philippe, is a big enough idiot not to know what's going on. \n\n\"He might be able to turn a blind eye to...us, especially since he's doing the same thing, but if it goes on the Internet your friends will see us together. Is he going to be able to accept that? You'll be hurting his pride, and from what I remember of him, I don't think he's the kind of man who can accept that and live with it. If you made him angry enough, you don't think he'd try to use Andr\u00e9 against you.\"\n\nThe color drained from her face.\n\n\"My God, Bill....I never thought....\"\n\nShe was about to cry.\n\nI grabbed her shoulders.\n\n\"Don't. I'm glad you're here. You're here now. We can spend time together as long as we're careful. You and I both know he sees other women. But you've never been embarrassed by him, have you? He's been discreet.\"\n\nShe nodded.\n\n\"We have to be careful, that's all. As long as we don't embarrass him, he won't do anything. He can't. Even in France, a mother has rights in regard to her children. And if he loves you the way you say you love him, he won't throw away your marriage as long as you don't humiliate him publicly. So we just have to make sure we don't go worldwide. \n\n\"Fortunately,\" I said stroking that thick black mane that I could never keep my hands off of, \"I'm not that famous yet. If I was Bill Clinton, or Johnny Depp, we wouldn't stand a chance. But get away from the courthouse and I'm just another short, bald guy.\"\n\nShe gave me a quick peck on the lips.\n\n\"You will never be just another short, bald guy, Bill Maitland. AND....it's mean and low of me, but I would love to see the expression on your Debbie's face the first time she sees us together.\"\n\nI couldn't help answering the grin she was flashing.\n\n\"You are mean, girl. A real bitch.\"\n\n\"But I'm YOUR bitch, and I'd like to let your old bitch know somebody else is playing with her old toys...\"\n\nShe reached down and ran her hand over my cock and felt the hard bulge there. I was hard again only hours after cumming in buckets inside Heather. Aline was magic. Better than Viagra. \n\n\"Make that...her old toy. Which still works fine, by the way. Remember?\"\n\n\"Yeah, I remember,\" I said, reaching down and moving her hand off me. \"But I need to walk out of here in a little bit and if I'm sticking straight out I'm afraid that might launch some rumors about the pretty dark haired woman who came into my office.\"\n\nShe shrugged. Even that motion made my dick twitch.\n\n\"Alright, Bill. What kind of cloak and dagger intrigue will we indulge in?\"\n\n\"No intrigue. Just walk out and go on down to the Starbucks on the first floor. Order a coffee and give me a couple of minutes. When I get down there you'll see me and just follow me out to my car.\"\n\nShe kissed me on the side of my face and said, \"This is exciting. I'll be the lady getting all hot and bothered at the Starbucks when you get down there.\"\n\nI opened the door and walked her out so that Susie could see me shake her hand and hear me say, \"I promise you that I'll be available for an in-depth interview with your correspondent before the end of the week. If you'd just send a formal request through Mr. Edwards' office, my secretary will arrange it all. Is that okay?\"\n\nShe gave me a cool, business-like smile and said, \"That is very kind of you, Mr. Maitland. I look forward to working with you, very closely, in the future.\" And she stuck her tongue out at me at an angle that I'm sure Susie didn't catch. I had an almost irresistible urge to swat her ass, but I am not a disciplined attorney for nothing. I just nodded and walked back into my office.\n\nI had walked back into the office and was trying to wrap up about 20 different loose ends with my head completely not into it when the phone buzzed. I punch the intercom button and Susie said, \"Mr. Maitland, I'm sorry, but you have some other people out here that say they need to speak to you.\"\n\n\"Susie, I really am trying to get out of here. Who is it?\"\n\n\"Uh....one of them is your...Ms. Bascomb from the Public Defender's office. And the other is...Ms. Martinez, from Mr. Edwards' office. Who....who do you want me to send in first?\"\n\nI don't know. Maybe I was shell shocked after the day I'd just had. Maybe I just wanted to see if they could both fit through the door at the same time. But I said, \"Send them both in, Susie.\"\n\nA moment later the door came in and sure enough, what the hell, they both came through at the same time. It was one of the few times I'd ever seen them together in the same room. It was, I admit, kind of breathtaking. \n\nDebbie was....Debbie was dressed in a fairly sedate business outfit but she still could have aroused pornographic fantasies in a 90-year-old. She was about four inches taller than Myra and looked bigger, except in a couple of very important places.\n\nMyra, hair blonder and brassier than Debbie, was preceded in by her chest by a few seconds and when she stopped in front of my desk, parts of her kept moving for several seconds. I got ready to duck in case any of the buttons on her stressed blouse started heading my way.\n\nChoosing which one to look at was an impossible dilemma so I focused my gaze at a spot about midway between their heaving bosoms. Debbie shot Myra a sideways glance and Myra glanced back without moving her head. Something was going on in the indecipherable language of females, but damned if I could tell what it was.\n\n\"I have had a long day, Debbie, and I need to get out of here. Is it personal or does the Public Defender want to send me congratulations? If it's the latter, tell Mr. August that I appreciate the compliment. If it's the former....you didn't need to come by.\"",
        "\"It's both. I talked to Johnny -- Mr. August, and he did want me to send you his congratulations. And he wanted me to give you a special message.\"\n\n\"Yes.\"\n\nShe stared at me as if she was looking at a stranger and for some reason that made me start to get hard. It was as if she was some gorgeous wet dream of a stranger who had walked into my office for the first time and I could imagine the impact she would have had on me if I'd never seen her before.\n\n\"He said, 'You did a great job today, Bill. You handed Lew his head. But don't expect our guys to roll over for the Angel of Death in the future. You just painted a big bull's-eye on your back, and expect all our guys to be gunning for you in the future. Good luck.\"\n\nI couldn't help smiling. It sounded like Johnny. He'd probably take on a case against me just to try to get his licks in. And he might not exactly be in Lew's league as a trial lawyer, but that blind country-boy, aw shucks act he put on for juries always made it hard to gain the jury's sympathy against him. Still, it would be fun.\n\n\"Tell Mr. August that I look forward to going up against him at his pleasure,\" Ms. Bascomb. And...\"\n\n\"I just wanted to tell you that...you were impressive. Lew is flashy and I made the mistake of underestimating you, Bill. I wish...I'd done this before. Seen you work. I don't know why I never did.\"\n\nI just stared at her. There was a time when those words would have warmed my heart. Now they just made me remember what I'd lost.\n\n\"Thanks.\"\n\nShe glanced over at Myra who was just standing there breathing in and out and flashing a smile at me. Debbie looked like she wanted to say something else, then shook her head a little and turned around and walked out. As usual, she looked as good going as she did coming.\n\nMyra gave her a little glance as she walked out the door, then sat down in a chair across from me and crossed her legs. I valiantly resisted the impulse to look up her dress and focused instead on her heaving chest.\n\n\"And what message do you bring from the Big Man, Ms. Martinez?\"\n\n\"None.\"\n\n\"Then-\"\n\n\"Would it surprise you, Mr. Maitland, to know that I have had erotic dreams about you?\"\n\nI stared into those emerald eyes and thought she was joking, but I wasn't quite sure.\n\n\"Actually, quite a lot, yes. Like, learning that Sister Teresa had had erotic dreams about me?\"\n\nShe tried to be stern, but that twinkle remained.\n\n\"You're comparing me to a very old nun?\"\n\n'No, it's just that the idea of you have erotic dreams about me is as -- unthinkable -- as Sister Teresa having the hots for me.\"\n\n\"I'll admit, Mr. Maitland, that I've always liked you. You are one of the good guys. But...let's say you're much more visually appealing than you used to be.\"\n\n\"Hot?\"\n\n\"You'll get a swelled head, among other things, but...yes. And, I've thought, over the years, that you might...have a secret yen for me.\"\n\n\"Like every other male between 15 and 90...well, yeah.\"\n\nShe leaned back and took a deep breath that caused my blood pressure to spike.\n\n\"But you're always been married. And I knew you would never mess around, and I don't mess with married men.\"\n\nShe flashed a quick smile and added, \"except....you know. But, now you're single. And available. And I...uh...thought that perhaps you might be free sometime this week. To go out for drinks. Or supper?\"\n\nI couldn't help being incredulous.\n\n\"You are asking ME out?\"\n\n\"It's the 21st century, Mr. Maitland. Women do that now.\"\n\nI looked at the promised land she offered and it physically hurt me to say it, but I told her, \"I'm sorry Myra. But...I will be tied up.....for a couple of weeks at least. And maybe a lot longer.\"\n\n\"Someone moved in that quickly?\" she said with an incredulous look on her face. \"You're not going back to-\"\n\n\"No. And, there's nothing definite about the next couple of weeks....but...there is someone. And I don't think anything will happen, but...\"\n\n\"But even when you're single, you're a decent guy. You could have stepped out on her and played both of us, but you're not that kind of person. God damn, why didn't I move quicker?\"\n\nShe was out of her chair and enveloping me in acres of warm breast and I couldn't keep my hands off that ass as she pressed herself into me and then kissed the side of my face.\n\n'It's okay, Bill. I didn't think I could respect you any more than I do, but....Just remember that if things don't work out with her...I would definitely be interested in going out. Don't forget.\"\n\n\"I won't.\"\n\nAnd just to make sure I didn't, she created a female symphony of moving parts and pneumatic flesh as she maneuvered her way out of my office. I didn't realize how badly Aline had set her hooks into me until I realized that even now, I didn't regret turning something like that down for a chance to be with Aline.\n\nWhen she left I still had to wade through six phones calls that had to be returned, several court documents that needed signatures and two ASAs who wanted to talk. And then I could FINALLY call an end to the day and get out of there.\n\nI glanced over at the Starbucks as I walked toward the street that would lead to the private parking lot where courthouse officials could park without having to hunt for a free parking meter. It had been recurrent chaos for years until the state had finally decided four years before to build us a covered garage next to the jail facing the St. Johns River.\n\nAs I walked past her, I snuck a quick look at her and without her being too ostentatious about it she gave the round seat she sat on a hot, and slow, lap dance. I grinned at nothing in particular and walked out the courthouse doors.\n\nFive minutes later she was sitting beside me and we were headed out toward \n\nChez Alexandre, an Avondale restaurant that served the best and most authentic French cuisine in Jacksonville. The owner and Chef had been in this country twenty years chefing for a number of restaurants until he finally got up the courage and money to launch out on his own five years before. It wasn't Paris, but it wasn't bad. \n\nHe had managed to keep his doors open in a city where barbecue joints outnumbered every other kind of restaurant by almost two to one. Somebody once said that Jacksonville was really South Georgia, and judging by culinary tastes, I had to concede the point.\n\nI didn't eat there a lot, especially since just looking at most of the entrees added a half pound where I didn't want it going, but I had always liked the food since coming back from Paris and I thought Aline would welcome a taste of home.\n\nAlexandre Auvray was about 50, tall and lean with dark hair turning a distinguished silver. Despite being the brains, heart and soul of the kitchen, he greeted guests in a tux so that every time you came in you felt like you attending a special event.\n\nI didn't think he'd remember, but he gave me a strange look as he took in the dark haired woman at my side and said, \"Mr. Maitland, a pleasure to see you again. I believe...you were here last with....\"\n\nI nodded.\n\n\"My wife. The tall blonde. She's not my wife anymore. Let me introduce you to my friend, Aline des-Jardins.\"\n\nA genuine smile lit his face and he launched into a spiel of rapid French that left me far behind and brought a smile and blush to Aline's face as well. While they talked I remembered the last time I had been here with Debbie. I'd had to nag her for six months before she'd join me and she had put down every dish in the place as a caloric nightmare. \n\nI knew she was serious about keeping the weight off because she could very easily have been a big girl, but it hurt that she made it seem like I was engaged in a campaign to plump her up. I had just wanted to share some of the gastronomic discoveries I'd made in Paris with the woman I loved. It was another one of the those nights we'd gone home and I'd had to dress warmly to avoid frostbite in bed.\n\nI shook my head to dislodge those memories. That was then. This was now, I told myself as I watched Alexandre eat up Aline with his eyes, discretely. He finally tore his eyes away from her and managed to look at me for a moment. He was obviously surprised by the closer inspection. I had changed a lot from the last time he'd seen me.\n\n\"Mr. Maitland. I apologize. I didn't realize you had changed so much. You realize you are blessed by the Gods?\"\n\nI swapped glances with Aline and said, \"I know.\"\n\nHe just shook his head again, \"You walk in here with two of the most beautiful women in this hemisphere. It's a good thing I have a beautiful wife, or it would be easy to hate you.\"\n\n\"I've seen Cybelle, Alexandre. You don't have to be jealous of any man.\"\n\n\"You are kind, but I assume you came in here to eat. Please have a seat and let me take your order. Oh, by the way, congratulations on your great victory in court.\"\n\nFor the next two hours Alexandre and his staff, finally joined by the lovely Cybelle, kept putting French delicacies in our faces and both of us indulged more than we should have. I even had a few snails. Which were one of the house specialties. \n\nFinally over coffee and a pastry with nuts and chocolate and thin wafers of some sweet crusty pastry, I told Alexander, \"Okay, I surrender. Another bite and I will explode all over the interior of your restaurant. I cannot thank you enough for feeding us this way.\"\n\nHe and Cybelle had sat themselves down at our table and the two women had been rattling on at a machine gun pace. Although I could not understand exactly what was said, I noticed both of them looking at me frequently and Aline blushing a lot.\n\nWhen we were finally getting ready to leave at 8 p.m., Cybelle pulled me aside and whispered into my ear, \"I know that there is more going on here than your friend Aline is willing to say. But she can't hide her feelings for you She told me about your giving her the Fleur-de-Lis. Such a romantic gesture.\"\n\nAnd then she reminded me that there is such a thing as a fraternity -- or sorority -- of wives, adding with a hard look, \"I remember your beautiful blonde wife, Mr. Maitland. Did you ever do anything that crazy and romantic for her? Would you be single now if you had shown that kind of romantic love for her? Wives need to be reminded that their man loves them, too.\"\n\nI guess it was still a little too raw for me to be really polite.\n\n\"I guess not, Cybelle. Other than risking my life for her and winding up in a coma, I never did much to show her how much I cared.\"\n\nI didn't add that that had been 20 years before our marriage crashed and burned. Maybe if I had...but I stopped myself. I wasn't going to let someone looking in from outside make me feel guilty about what had happened. You didn't do things like buy an expensive piece of jewelry for your wife 15 or 20 years into a marriage. It never would have occurred to me and I knew Debbie would have made me take it back and get a refund.\n\nAs I walked out the door with Aline, I made sure to hold her tightly around the waist and even patted her lightly on that luscious ass under Cybelle's slightly disapproving glance. I knew Alexandre would enjoy it vicariously and I wanted to figuratively give Cybelle the finger. She was a good woman, but I wasn't real fond of wives right now.\n\nI knew Cybelle didn't, couldn't know the details of my marriage's breakup. She was just a middle-aged wife watching a husband she thought had dumped a wife for a younger pretty woman.\n\nI parked on Edgewood at the median and opened the door for Aline. She looked around and I know what was going through her mind. There are places like Edgewood and the Westside in Paris, but you usually don't go into them without a bodyguard or an armed escort.\n\nIt's run down, but not as bad an area as it would look to a French visitor. I pointed to the sprawling saloon that was O'Brien's and said, \"This is a community bar called O'Brien's. It's a pretty nice place.\"\n\nThere were cars out front. Even on a weekday it had plenty of traffic, but nothing like the weekend. As we walked past the long plate glass window at the entrance Aline looked around curiously. When we stepped inside she realized the size of the place, looked from the horseshoe-shaped bar to a dance floor. There were pool tables at the rear and a couple of dart boards.\n\n\"This is like a --\"\n\n\"Around here we'd call it a honky tonk,\" I said, grinning. There were a few cowboy hats, truckers, bikers with the requisite colors and tattoos, but also yuppies, businessmen in clusters sipping what looked like martinis, girls who looked barely old enough to order alcohol and some ladies who were undoubtedly waiting for last call to see if the dimmed lights and diminished capacities of drunk guys would give them a chance to get lucky. There were also older couples sitting at some tables nursing beers in mugs.\n\n\"This is like a country caf\u00e9, or what they'd call a Pub in England. It's enchanting,\" she said with a wide grin on her face.\n\n\"That's one word,\" I said as I couldn't believe her characterization, but I was glad that she liked the place. I always had liked it too.\n\nWe found a table and the only waitress in the place found us after a few minutes and took our orders. Aline ordered white wine and I ordered a Bloody Mary with celery and four green olives. \n\n\"Have you wasted many evenings in a bar like this?\" she said, smiling.\n\n\"No, not until after....my breakup. Before that I was a married man and the only time I ever came in here was on business or a few times with cops or witnesses I needed to talk to.\"\n\n\"Don't let him fool you,\" a rough voice said from behind me. \"Many's the night I've had to pour him in a cab from here.\"\n\nI looked back at O'Brien and shook my head. \n\n\"Don't believe a word he says, Aline. He loves telling stories.\"\n\n\"M'sieur,\" she said, putting out one slim hand which he took in between his rough paws.\n\n\"Mademoiselle\",\" he said and then started speaking French. I wouldn't have been more surprised if a hole had open up in the center of the bar and aliens poured out. O'Brien speaking French?\n\nAfter a couple of minutes she looked at me and said, \"Your Mr. O'Brien is an intriguing man. A pugilist and a businessman. And he speaks highly of you.\"\n\nI just stared at O'Brien. \n\n\"You never cease to amaze me. How in the hell and where did you learn to speak French?\"\n\n\"It's rough, but you never lose it. I picked it up when I was living in Paris.\"\n\n\"You lived in Paris?\"\n\n\"Back when I was a young, up and coming boxer. Back in the early 70s.\"\n\n\"What were you doing in Paris?\"\n\nHe looked at Aline for a moment and I thought I saw his eyes brighten.\n\n\"Being married, Mr. Maitland. She was my first. I was 25 and she was 22. I met her when I was on a tour. I boxed all over Europe. She came to one of my fights with a boyfriend. We left there that night together and were never apart again.\"\n\nI knew he'd told me he'd been married and divorced four times over the years.\n\n\"Is she still there, O'Brien? Is she one of the ones you had a good divorce from?\"\n\n\"She's still there. We never got divorced.\"\n\nI didn't say anything. He didn't seem like the same O'Brien I'd known for years.\n\n\"Lung cancer. She smoked like a fish. They all did. I couldn't, not and box. She developed a cough six months after we married. It took her two years to die. After awhile she just stopped fighting. She's buried with her parents in a little suburb south of Paris.\"\n\nAline placed one hand on his arm.\n\n\"I'm so sorry.\"\n\n\"It was a long time ago. There are times when weeks go by and I don't think about her.\"\n\n\"Have you...ever been back?\"\n\nHe shook his head and wiped his eyes with the back of his hand and smiled.\n\n\"No. It just wouldn't be the same...without her.\"\n\nHe shook himself as if awaking from a dream and stepped back.\n\n\"I didn't mean to talk about that. It was just hearing your accent, and talking with you, brought it back. Anyway, Mr. Maitland, if you can, hold onto this one. She's a keeper.\"\n\n\"I would if I could, O'Brien. I would if I could.\"\n\nWhen he left tears rolled down her cheeks. I wondered if she was crying for the poor doomed young wife, or for us.\n\nSo I took her out on the dance floor and while I've never been a dancer I was able to twirl her around for thirty minutes. They didn't have live music but they had plenty of canned and the Cranberries provided a lot of the dance music. O'Brien must have really loved them, or got a cut for playing their music. He played their songs a lot. \n\nThat was okay. I loved their music too. Of course it didn't really fit the country image, but O'Brien's was more than a honky-tonk.\n\nAs we danced and she made love to me with her clothes on, I felt Aline sniff.\n\n\"Women are mush.\"\n\nShe leaned forward and bit me hard enough on the lip to make me wince and said, \"Don't give me that crap, Bill. You were about to cry too.\"\n\n\"Was not.\"\n\nShe gave me a little smile and kissed the bite mark she'd left on me and said, \"Even the Angel of Death has a heart. He is a friend of yours, non?\"\n\n\"Yeah. He's a good guy. A little crusty, and he's been unluckier in love than me, but he's a good guy.\"\n\nSomeone tapped me on the shoulder. I turned and looked up into Lew's smiling face.\n\n\"Can I have this dance? That is, cut in and dance with your charming partner. I don't want to dance with you.\"\n\nI stopped moving with Aline and said, \"I thought you'd be off somewhere licking your wounds.\"\n\nHe looked at Aline and smiled that rakish little smile that had probably gotten Mona to go to bed with him the first time and said, \"I was, for a little while, but Mona does that so much better than me that I let her take over. Now I feel fine. When I got a call from O'Brien that the world was coming to an end, I knew I had to head over here.\"\n\nI knew Aline wasn't following a lot of this but she looked at him curiously when he mentioned the end of the world.\n\nHe caught the look and held out his hand to her, saying, \"Lew....Lew Walters. I'm the best friend, and probably the only friend, of the guy who's treading all over your toes. Oh, the End of the World? Well, we'd all pretty much decided that Bill had given up women until the End of the World. \n\n\"So when O'Brien said he was in here drinking and dancing with the hottest mystery woman to ever walk through these doors, I had to check it out. If the world is going to end, I need to make arrangements.\"\n\nShe looked over at O'Brien.\n\n\"He said I was the hottest mystery woman to ever walk through these doors?\"\n\n\"Nah, he just said you were hot as hell and entirely too good for Maitland. So, can I have a dance and make your acquaintance, Mystery Lady?\"\n\n\"You can have him,\" a female voice said from behind me, \"and I'll take Bill off your hands before he does seriously orthopedic damage to you.\"\n\nI looked back at Mona wearing something clingy and red and over my shoulder told Aline, \"These are my best friends, Aline, Lew and Mona Walters. That right there tells you how desperately empty my life is.\"\n\n\"They seem charming,\" Aline said and released me to take Lew's hand. He grabbed her and twirled her away, but not before saying, \"I'll give you a few minutes to adjust. Bill is a great guy, but he's the whitest white guy you ever saw on a dance floor.\"\n\nShe was dancing off with him when she said loud enough for me to hear, \"Maybe, but he has other wonderful qualities -- that aren't immediately apparent.\"\n\nLew just stared at me and then shook his head in disbelief.\n\nMona fit herself into my arms and we danced away in the other direction while I tried not to step on her toes.\n\n\"Okay, so give, Bill. I can tell she's not from around here, not with that accent. And she is gorgeous. Is she a pro?\"\n\nFrom Debbie it would have stung like hell, but Mona didn't mean anything.\n\n\"No, she's just a...friend of mine. I met her awhile back.\"\n\n\"Just a friend?\"\n",
        "\"A very good...and close...friend,\" I couldn't help adding with a little bit of bravado.\n\nShe looked me over, catching the bruise on my lip and mint-smelling lipstick on various parts of me, and said, \"Well, I have to tell you, Bill, I'm feeling better about you. Lew told me about your little booty call with that former Assistant State Attorney, the one he always called Dimples. We were both glad you were finally getting some action, after Debbie. But this woman...\"\n\n\"She's special, Mona. I can't say anything more than that, but she's special. She's done me a world of good.\"\n\n\"Then I like her, even though I'm jealous as hell. What is it with you, anyway? First you nail the biggest and hottest pair of tits in Jacksonville, until that Myra cow came along, and now you're got Audrey Hepburn's reincarnation on your arm.\"\n\n\"You think she looks like Audrey Hepburn? How the hell do you even know who Audrey Hepburn was?\"\n\n\"I watch old movies, Bill. No, besides being brunette and slender it's not that obvious...but she's got the COOL thing down pat. Anyway, you are so transparent. Does she know you're about one date away from asking her to go steady?\"\n\nI shook my head.\n\n'Can't, Mona. I can't say anything more than that. But we really are just friends.\"\n\nShe looked over at Aline dancing like a professional in a gliding dance with her husband, then at me and a look of what I could only call shock came over her face.\n\n\"She's married? She's not wearing rings, but....How did you, of all people, get hooked up with a married woman?\"\n\nI pulled her to me and whispered in her ear, so I wouldn't have to look her in the eye, \"It's a long story, Mona. Be a friend and after you leave forget you and Lew ever saw me and her together. It's not going anywhere. It can't. But she's going to be here for a few weeks. It may be the last time I ever see her. I don't want anything screwing up our time together.\"\n\nShe hugged me tight against her.\n\n\"Oh, God, Bill, I am sorry. You just aren't having any luck with women at all, are you?\"\n\n\"I was very lucky to have met Aline, Mona, no matter what...and what are you doing in town? I thought you spent about three weeks of every month running around the globe doing good things for the poor and powerless.\"\n\nShe gave me another one of those looks that men can't possibly fathom and said, \"Lew and I both lead very busy lives. It just seems to get busier. We have to make a date to be in the same town the same night to get together. But...he wanted me here to celebrate his big victory when he cleaned your clock in that Killer Granny case. He was certain he was going to win.\"\n\nShe smiled and leaned over to whisper in my ear, \"Don't ever tell him I told you this, but he is a lot more human, a lot more like the guy I fell in love with, when he gets knocked down a peg or two. Sometimes he just gets too full of himself.\"\n\nAfter awhile we wound up back at a table, the four of us, and we shared drinks and introductions.\n\n\"Talk about your Harlequin Romances,\" Lew said downing probably one too many straight Scotch on the Rocks. \"His boss kicks Bill out of his job and ORDERS him, that's ORDERS him to get lucky, and who does he meet but the most beautiful French woman walking the earth.\"\n\nHe gave Mona a sloppy kiss and said, \"I can say that dear, because we both know you are Russian by heritage, and there is no lovelier Russian lady walking the earth than sitting right beside me.\"\n\nShe tapped him lightly on the side of the face and said with a straight face, \"That's what I call a fast recovery, darling, but it's wasted. You already got lucky tonight.\"\n\nLew turned his attention back to Aline and laid his hand lightly on hers, adding, \"I meant getting lucky in the sense of meeting a beautiful woman, not in the-\"\n\n\"You were right the first time,\" she said, staring at him until he almost blushed. \"Bill got lucky, but I did too. Very lucky.\"\n\n\"You both got lucky,\" Mona said. \"I don't know you Aline, but I know Bill. Any woman that can entrance him the way you obviously have, has to be a special lady. I hope you know just how good a man he is.\"\n\n\"Stop it,\" I said, \"Or I'll start blushing. Jesus, I just got divorced. I didn't' die and come back. I'm just a middle aged, divorced guy who was lucky enough to meet a beautiful woman with not-quite-so-good eyesight.\"\n\n\"You're not just a middle-aged, divorced guy, Bill. You're a man who was a good husband for 20 years, and a good father until your bitch ex-wife forgot all that....and I hope any woman you meet realizes how fortunate she is to be with you and doesn't re-open the wounds.\"\n\nAnother look passed between the two women and this time I knew there was something being conveyed from Mona to Aline, but I'm not that perceptive. Aline just nodded slightly.\n\nLew looked over at me and said, \"Before I get too drunk, Mona and I wanted to know if you have any plans for Saturday.\"\n\nIt took me a second but I shook my head.\n\n\"No. The kids asked me and I told them I'd like to put things off for a couple of weeks. There's just too much going on. We can do it in a couple of weeks if you guys want to get together.\"\n\n\"Saturday?\" Aline asked.\n\n\"Didn't Bill tell you,\" Lew said. \"He'll become an old man officially Saturday. It's his 42nd birthday. That's the birthday when everything really does start falling apart.\"\n\nShe gave me a look and I already felt like a henpecked husband as I told her, \"I was going to tell you. I've just been trying to avoid thinking about it, honestly.\"\n\n\"Why? 42 is not old?\"\n\n\"If you're a tree....Turning 40 didn't bother me, but for some reason, turning 42 bothers the hell out of me.\"\n\nWe talked for a little longer and then Aline and Mona decided they had to hold hands to go to the bathroom and went together as women will do. When they were out of earshot, Lew leaned over and said, \"My God, Bill, she is gorgeous. If I was ever going to cheat on Mona, I think it would be with her. Be straight with me. You banged her on the big boat?\"\n\n\"You're such a pig. But yes. Repeatedly and in every orifice!\"\n\n\"And I was feeling sorry for you because you'd been cut off from Deb's tits. But noooooo...you go and bang the French cutie, and Dimples, and if you haven't banged that lady cop you're going to some time soon. I thought she was going to unzip you and give you a blowjob in court this afternoon. When you decide to end your celibacy, you don't mess around.\"\n\n\"I'm proud to have impressed you, Lew, but remember, you have Mona to come home to, whenever you two get together.\"\n\nHe looked down at the empty Scotch glass and pushed it around on the table.\n\n\"Lawyers lie, Bill. You know that. I don't know what it is...but\"\n\nFor just a second the mask he presented to the world slipped a bit and I saw something I didn't want to recognize.\n\n\"I guess it's just the seven year itch, or doldrums, or whatever, but Hell, nobody's marriage can stay hot forever. We'll be fine.\"\n\n\"Is there anything-\"\n\n\"Naw. I love her. She loves me. That's what counts.\"\n\nAnd who the hell was I to give anyone romantic advice, so I kept my mouth shut.\n\nThen Aline and Mona were back and we made our goodbyes. As Lew and Mona stood, I said, \"Look, please, keep...this to yourselves. I don't want anyone in the office buzzing about this, and God knows I don't want Debbie hearing anything. Okay?\"\n\n\"My lips are sealed,\" Lew said as he leaned over to kiss Aline on the cheek, as Mona gave me a hug and they walked out. As they walked out together, I noticed they weren't holding hands and I tried to remember the last time I'd ever seen them when they weren't holding hands. It was a young lover thing, and they'd always had it. I tried for just an instant to envision either of them with someone else. Couldn't.\n\nWhen I tried to pay O'Brien, as usual he refused to take my money, kissed Aline on the hands in a Gallic gesture and said, \"Au revoire.\"\n\nWhen we got back to my condo, we stripped off, took showers and lay our naked bodies down in my small bed. As her nipples rubbed my chest and I nestled one knee in the cleft between her legs, I should have been getting hard, but I didn't. It just felt good. I held her to me and breathed in the smell of her newly dried hair.\n\n\"Your friends are nice,\" she said in a sleepy whisper in my ear. \"Do they....are they....getting along?\"\n\n\"As far as I know. Why?\"\n\n\"Nothing....just....a feeling I got....from Mona. There's a sadness...there...\"\n\n\"I know they've been trying to have a kid...without any luck...that might be it.\"\n\n\"Probably.\"\n\nIn a minute...\n\n\"Bill, do you mind if we don't....it just feels so good holding you like this and I guess the trip took it out of me...\"\n\nI kissed her on the tip of her nose and said, \"My huge cudgel of masculine destruction will be disappointed, but...\"\n\n\"I promise to make your cudgel very happy tomorrow....okay?\"\n\nAs I drifted into sleep smelling her sweet breath against the side of my face, I tried to imagine what it would be like to do this every night...\n\n###################### "
    ],
    "authorname": "DanielQSteele1",
    "tags": [
        "cheating",
        "courtroom action",
        "adultery",
        "divorce"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/when-we-were-married-ch-05b-1"
}