{
    "title": "The Crusader Ch. 09",
    "pages": [
        "Chapter 9 Brother's Keeper\n\ncopyright June/2012\n\nAnother part in the saga of Rollie Chambers.\n\nConstructive comments, emails, and critiques are looked forward to and appreciated.\n\nThank you for taking the time to read and possibly comment on my work. I hope you enjoy this chapter. \n\n<p align=\"center\">********************</p>\n\n\"Rollie Chambers,\" he said, answering his cell phone.\n\n\"Hi Rollie. This is Julie. Perhaps a strange question, but have you seen Tully today?\"\n\nJulie Colwell was 40, she was the RN supervisor at St. Louis University Hospital, and she was Jacob Tully's significant other. Tully was Rollie's best friend, mentor, and part of Rollie's detective agency, Chambers and Associates. \n\n\"Hi Julie. Last time I saw Tully was at dinner with you guys the other night. Why?\"\n\n\"It's probably nothing, but he and I had a little spat day before yesterday and he left in a hurry back, to his own place after our date. Said he wanted to chill for a night. You and Tully are like brothers and to be honest I thought he might have called and talked to you about our discussion.\" \n\n\"No, like I said I've haven't talked to him since the dinner.\"\n\n\"Well...Our disagreement was about my 20 year class reunion,\" Julie said. \"It's in two weeks and I was telling Tully about some people from that class and mentioned Ken; he's a guy I went out with for almost three years. I'd told Tully about him before, just in passing. I think Tully thought Ken was the reason I wanted to go to the reunion.\"\n\n\"Sounds like jealousy is rearing its ugly head,\" Rollie said with a chuckle. \n\n\"It's not funny Rollie,\" Julie complained. \"I asked Tully to go with me but he refused.\"\n\n\"He say why?\"\n\n\"Tully said he wouldn't know anyone there and didn't want to spend the evening watching me and my old boyfriend get re-acquainted.\" Julie hesitated and added, \"Then I made a big mistake.\"\n\n\"What did you do?\"\n\n\"I smiled at him and asked if it would bother him to see me talk and dance with Ken. I was just teasing and fishing for a compliment, but he took me seriously. We'd been sitting together on the sofa and he stood up. Said I should give him a call when I got back from the reunion. Then he said, very sarcastically, that maybe Ken and I could get re-acquainted. That's when he left and I haven't heard from him since.\"\n\n\"Okay, Julie, I'll do a recon mission and find our wayward Gunnery Sergeant. Call you when I talk to him.\" Rollie hung up and stared out of his office window. Julie's right, Rollie thought, Tully should have checked in by now.\n\nRollie stood, took his Glock 21C out of his desk drawer, and put it into a holster attached to his belt in the small of his back. Maybe I ought to run by Tully's place before I send out the troops, Rollie thought. He had a key to Tully's apartment and let himself in. The place was a shambles.\n\nOne of the two big easy chairs usually in front of the fireplace was pushed against the wall and the other one was lying on its side. The big screen TV had been knocked off its stand onto the floor; it had a big crack across the screen. There were three table lamps on the floor. One of the metal ones was bent almost in half and had a blood smear on it; as if it had been used as a weapon. Rollie's practiced eye saw the two bullet holes in the far wall. Guess that answers a lot of questions, he thought. \n\nRollie made several calls, trying to track down his friend with no success. Then he made two more calls. The first was to his one of his Confidential Informants. Calvin had been \"working\" as a CI for Rollie for a number of years while he was a detective and continued after Rollie left the force. He was the largest fence for stolen merchandise in the St. Louis area, but he knew a lot of street people who were on the fringes and the wrong side of legal. Rollie had kept Calvin from going to jail and now the men were friends.\n\nThe second call was to Ricky Willard; a \"reformed\" computer hacker and geek who worked for the St. Louis Police Department. He could find most anything and everything if it was posted on a computer someplace. Ricky would track Tully's credit cards and bank account to see if they showed activity. \n\nRollie tried to call Missouri Tactical Academy but got an answering machine. He got into his truck and drove out of St. Louis to the facility. The Academy instructed civilians in proper shooting techniques and held Concealed Carry Permit classes. They also instructed and trained policemen and even military personnel in urban tactical situations. It was run by a group of former military and police personnel. Tully was the majority owner and head instructor.\n\n\"Hey Rollie,\" Ray Jenson said as Rollie entered the office. Ray was also one of the owners.\n\n\"Hi Ray. I called earlier and got your voice mail. You all by yourself?\"\n\n\"Sorry, I've got desk duty today but I had to step out to the shooting bays and explain some safety procedures to a new client. Ever since Mike Thomas left us, I've been doing double duty.\"\n\n\"Yeah, I heard Mike sold his share of the business to you guys. Why'd he leave?\"\n\n\"He moved to North Carolina to be with his son and his family. They've got three kids now and Mike wanted to be closer to his grandkids.\" Ray smiled, \"Tully's the one that bought Mike's share. Makes me the minority stockholder. What did you need?\" Ray asked.\n\nYou seen Tully in the last day or so?\"\n\n\"No, in fact I was just gonna call him with a reminder. He's got a class for some of the rookie Hillsboro police this afternoon.\"\n\n\"Tully won't miss an appointment. Have him give me a call when he shows up,\" Rollie said. He didn't go into details about Tully's strange actions and the condition of his apartment. No need to get people freaked out, he thought.\n\n\"Sure thing. Nice to see you Rollie. Come back sometime and we'll have another shooting contest.\" Ray grinned. \"I want a chance to win my money back.\"\n\nNodding, Rollie smiled and waved as he left the office. He didn't want to get Ray and the other instructors at the Academy involved just yet, he thought. Like Tully, almost all of them were former Marines, Seals, or Green Beret. They'd treat this situation like a search and destroy mission. If Tully's in trouble, they might chase whoever is involved underground. \n\nHe headed back to Tully's place again. Maybe I missed something, he thought. The previous time he'd checked the place, he'd just walked in and called out for Tully; this time he stopped just inside the door and let his eyes slowly examine the living room. Then he saw something he'd missed the first time.\n\nTully had lost his right leg, below the knee, to an IED while serving in Iraq. He wore a state of the art, titanium and carbon fiber, prosthetic leg. The prosthesis was lying under the coffee table in front of the sofa with one of the sofa cushions over it. Rollie walked over, bent down, and picked up the device. Tully might go off on his own to work something out or to get his head straight, but he'd never leave his leg behind, Rollie thought.\n\nOn the floor under the coffee table was a brochure for Missouri Tactical Academy. Rollie looked closer at the glossy pamphlet. It was opened to the second page, which had a mark on one section. It looked like someone had used a fingernail or something to underscore and mark one line. That line was one that advertized that the Academy had several fully automatic weapons on site; both for rental with the right permit and for instruction. \n\nWhile on the St. Louis Police Department, Rollie had been, if not the best, one of the best detectives in the Precinct 16 squad and the Department for that matter. The intuition that made him a good detective came into play. Why would Tully have an advertisement for his own business in a prominent place on his table? And why would he or someone mark a section? \n\nAfter another hour of searching, Rollie went home. In spite of his concern for his friend, he had to smile when he entered his apartment. Jess was cooking, standing at the stove barefoot and wearing one of Rollie's shirts. Nothing sexier than a woman in a man's shirt, he thought; especially when she's as beautiful as Jess.\n\nDr. Jessica Talbert had been the therapist for Rollie's wife, Susan, after she had been attacked and raped. Jessica and Rollie had talked several times while Susan was in therapy. When Susan committed suicide, Jessica approached Rollie to help him with his grief. They later worked closely together when Jessica was brought in as sort of police profiler on a serial rapist case. Their relationship built quickly after the rapist was caught.\n\nThey had discussed marriage and decided they liked things just as they were at least for now. Jessica had been married after a two year live in relationship, but it ended in divorce. She said things changed after the wedding and they sort of lost who they were. After Rollie's wife ended her life, he wasn't sure he wanted to get married again so the hurt for each was still close to the surface. Rollie and Jess were totally committed to each other and neither thought a ceremony or paper work could make their life any better.\n\n\"Hi Sailor, looking for a good time? Jessica turned to greet Rollie. The shirt's top three buttons were undone and the resulting view when she turned proved that she was wearing nothing but the shirt. She saw the look on his face and asked, \"What's wrong Rollie?\"\n\n\"Tully's sort of missing,\" he replied. Rollie explained Julie's call and what he'd found at Tully's place. He laid Tully's prosthesis on the coffee table. Tully wouldn't go on a 'walk about' or bug out without telling me and he certainly wouldn't go without this.\"\n\nJessica walked over, hugged Rollie, and said, \"You're right Rollie, something has happened to our big brother.\"\n\n\"I don't know what yet, but I'll find him,\" Rollie promised.\n\nLater Jessica said, \"Julie still hasn't heard from Tully and I know you'll find him but is there anything I can do to help?\"\n\n\"Not that I can think of, but I'll let you know if something comes up. In the mean time, I've got Calvin and some other CIs checking for info on the street; also told him to find out anything about weapons deals. Talked to Frank Wendt down at Precinct 16; he said he'd put out a BOLO on Tully. Said if it's a false alarm, he'd fade the heat; but he agrees with me that something isn't Kosher.\" Rollie paused. \"That pamphlet on Tully's table has me concerned. Jessica nodded and Rollie continued, \"I think whatever is going on has something to do with Missouri Tactical.\"\n\n\"In what way?\" Jessica asked. By now she'd learned to trust Rollie's instincts.\n\n\"Nothing solid, just a feeling. What I do know is that Tully's in trouble.\" Jessica raised an eyebrow and Rollie continued. \"Tully's place has been trashed. Someone was looking for something or there was a fight or maybe both. Tully's leg was left at the apartment; he would never leave it behind. You know how much he hates using crutches. And I still can't shake that pamphlet I found under the table with the markings by the full auto advertisement.\"\n\nRollie's cell gave out its annoying ringtone, something Jessica had programmed into it. They'd been to a concert at the Fox Theater and one of the songs, \"It's Your Love\" by Tim McGraw and Faith Hill, really seemed to strike a note with Jessica. The next day she programmed the song into both of their phones as a ringtone. \n\n\"I can't believe a woman as intelligent and well educated as you would get all mushy and worked up about a song,\" Rollie protested the first time his cell rang. They were sitting side by side on the large sofa in their apartment.\n\nJessica moved over, sat in Rollie's lap, put her arms around his neck and kissed him. \"It reminds me of us,\" she replied. After that statement, Rollie didn't dare delete the ring tone from his phone.\n\n\"Chambers,\" Rollie answered. \"Oh, hi Ray.\" Jessica listened to Rollie's side of the conversation. \"No I haven't heard from Tully either. He missed his class with the Hillsboro Police? Yeah, that's not like him at all. I think something's not right. I was at his apartment after I talked to you.\" Rollie explained what he'd found at Tully's, including the marked pamphlet.\n\n\"I think whatever is going on involves you guys. Y'all keep frosty, but we don't need your crew going on a recon or search and destroy mission just yet. Yeah, okay, I'll call you as soon as I get any more intel.\"\n\nHe hung up and turned to Jessica. \"That was Ray; Tully missed an instructional class today.\"\n\n\"I heard,\" she replied. \"You're right, something is wrong.\" She took Rollie's hand. \"You've got to find him, Rollie. He's family.\"\n\nNodding his head, Rollie said, \"I'll go see Calvin tonight; see if he's heard anything.\"\n\n<p align=\"center\">********************</p>\n\nRolling to his side, Tully looked around the room. His hands were tied behind him and his legs were tied together above his knees. Bastards could have brought my leg, he thought. I can't believe I let these assholes take me; must be getting old.\n\nTully had answered the knock at his door without checking the peephole. Maybe Julie came over to tell me she's not going to that damn reunion, he was thinking. Before he could react, the man at his door stuck a hypodermic needle in Tully's chest and pushed the plunger. Tully grabbed the man and started to beat on him. Three others jumped in and the battle was on.\n\nGot to finish this, Tully thought as he fought the four men. He was giving as good as he got but he could feel the effects of whatever was in that shot affecting him. Tully threw one of his assailants against the wall and grabbed another man's head and was just about to twist the guy's neck so he'd be looking over his shoulder but the others wrestled Tully to the floor. Very little time passed before the drug turned Tully into a zombie. \n\nNow, lying on what felt like a cold tile floor over concrete, Tully was on his side with his hands tied behind him and trying to decide which one of the four men he would kill first. They've got me trussed up like a hog tied steer, he thought. Smells like we're on the riverfront. Probably one of those old buildings north of Laclede's Landing. The sound of a tugboat's loud fog horn could be heard. Yep on the river, Tully thought. He took a closer look at the four men who jumped him.\n\nThe apparent leader was a Hispanic, who the others call Jorge. The other three were a black man, Tyrone, an Asian, Chang, and a white guy, Tommy. They each wore a satin jacket with a large circle embroidered on the back and a smaller one over the left breast in front; in the center of each circle were the script letters SLRC. Strange mix for a gang, Tully thought. He must have grunted or something because Jorge came over to check on him.\n\n\"Back with us old man?\" Jorge bent and checked the ropes on Tully.\n\n\"I'm gonna show you old man when I get loose,\" Tully replied. \n\n\"Like you did before?\" The young man laughed and kicked Tully in the side.\n\n\"You drugged me or I wouldn't be here.\" Tully's eyes were hard and cold. \"I'm gonna rip off your arm and beat you to death with it boy.\"\n\nJorge saw the look in Tully's eyes and in spite of the \"old man\" being tied up, stepped back. \"Shut this old fool up,\" he ordered. Tommy came over, stuffed a dirty piece of cloth into Tully's mouth and used a strip of duct tape to keep the gag in place.\n\nThe four men gathered in the middle of the room and talked among themselves, ignoring Tully for the time being. Rolling closer to the wall behind him, Tully managed to get into a seated position and leaned back. Tyrone watched their captive until he was sure Tully wasn't trying anything. After a few minutes, Tully let his chin droop down onto his chest as if he was sleeping.\n\nThe group's voice rose in an argument. \"Pipe down,\" Tommy said in a stage whisper voice. \"The old man will hear us.\"\n\n\"Like what's he gonna do,\" Chang said. \"He's under control and pretty soon he'll give us what we want.\" Chang looked at Jorge. \"Then we can get rid of him. Right?\"\n\n\"Not until we get the weapons in our hands and get away,\" Jorge answered and then he smiled. \"Then you can have him Chang.\"\n\nIn spite of his appearance, Tully was paying close attention to the discussion. Weapons? He asked himself. Must be something to do with the Academy.\n\n\"When are we gonna get the guns?\" Tyrone asked.\n\n\"My guy says the full autos aren't prepped yet,\" Jorge answered. \"He said they are packed in Cosmoline.\"\n\n\"What's Cosmoline?\" \n\n\"It's a sort of a gel, like Vaseline, only thicker. They use it to rust proof guns and it's a bitch to get off. So we'll let the boys at Missouri Tactical clean em up and then we'll take them.\"\n\n\"This guy you talk about, who is he?\" It was Tommy asking.\n\n\"Name's Brian Davis; he owes me money. It was either help us or go to the hospital; maybe even to the morgue. After the deal with Delgato fell though, I contacted Brian.\" Jorge smiled and added, \"All we have to do now is wait. Soon as the guns are prepped, we'll force this old fool to give us the security codes to get into the building. It'll be just like shopping in a grocery store. Maybe we can call it 'Guns or Us'.\"\n\nSo that's what they wanted me for, Tully thought. Jorge my friend, Tully said silently, you'll play hell getting those codes.\n\n<p align=\"center\">********************</p>\n\nDriving his old beat up truck, Rollie parked in front of Calvin's \"pawn shop\" on Chouteau Avenue. The area was a run down, inner city slum, with many boarded up stores and houses. Glad I didn't drive the Vette, Rollie thought, observing the less than upstanding residents hanging out on the street.\n\nHe saw, what the politically incorrect, would call a wino, leaning against the front of Calvin's place. He was eyeing the old truck; his thoughts of scoring enough for alcohol apparent on his face. Rollie walked over to the man, took a $20 bill out of his pocket and tore it in half. \"Tell anybody that gets around my truck that it's not worth dying for,\" Rollie said and slid back his jacket showing his Glock 21C. \n\nHe handed half of the twenty to the man. \"If nobody bothers my truck, I'll give you the other half when I come back.\" The wino stood up straighter, took the half of the bill and nodded. He walked over and leaned against a light pole near the truck, looking like a mangy guard dog.\n\n\"Hey Rollie,\" Calvin called out a greeting from the back of his shop. He saw the serious look on Rollie's face and swallowed the smart ass remark he'd intended to make.\n\n\"Heard anything Calvin?\" Rollie didn't return his CI's greeting or the smile; he wasn't in the mood to be social able. \n\n\"No hello, no how are you, nothing,\" Calvin replied. He saw Rollie's eyes get hard and quickly added, \"Yeah, heard a couple of things.\"\n\n\"Sorry Calvin,\" Rollie said. \"I guess I'm running a little hot right now.\" He walked over and shook Calvin's hand. \"So what did you hear?\"\n\n\"Haven't heard anything about Tully, still got the word out on him. But something else interesting popped up. You know Anonymous Andy?\" Rollie nodded his head. \"He tolt me a guy came to see him lookin to score some guns. Not a gun, but guns. \n\nAndy is like me, we don't deal in that shit. Jewels, paintings, silver service, yeah but not guns; too dangerous for my blood.\" Rollie waited, not too patiently and motioned for Calvin to get to the point.\n\n\"Andy said he tolt the guy to check with a cat named John Delgato; he's got that place down the street from Union Station. It's called Mississippi Nights; he owns the place and does his business out of the back room. You know the place I mean?\"\n\n\"Yeah, used to be a good place to listen to blues,\" Rollie answered. \"But with Union Station going downhill the whole area has gotten a little rough.\" \n\n\"Delgato was tryin to put a deal together but he needed time to get the goods. The buyer reneged on the deal and booked. Seems he didn't want to wait so long and word is, Delgato was tryin to clear enough to retire on.\" Calvin reached under the counter and pulled out a bottle of good bourbon. He sat two glasses on the counter and motioned with the bottle to Rollie. Getting a nod, he poured the drinks. Calvin took a sip. \"Don't know the buyer, neither does Andy\" ",
        "\"Delgato Hispanic?\" \n\n\"Only his name. From what I hear, his father was some kind of big shot along the Mexican border in Texas; El Paso I think. Anyway he came to St. Louis after some guy and met a woman. They had a thing and Delgato was the result.\"\n\n\"His father still in the picture?\"\n\n\"Nope. Father's dead. He found the guy he was lookin for. Seems his machismo crap from Texas wasn't such a big deal after all. \"\n\n\"I bet this Delgato knows the buyer,\" Rollie offered. \"And he might just be a little pissed that the buyer jumped ship on him.\" Rollie paused in thought and then said, \"I think it's time I paid Mr. Delgato a visit.\" Rollie finished his drink, thanked Calvin and turned to leave. As he got to the door, Calvin called out.\n\n\"Rollie, be careful. This Delgato cat is the real deal; he's not like his father. He might not like you askin questions.\"\n\n\"Don't much care if he does. I've got a feeling that Tully got involved some way with that gun deal. Delgato will tell me what he knows or he won't be doing business in St. Louis again; maybe he won't be doing business, period.\"\n\nCalvin had seen Rollie agitated and involved before but he'd never seen him this intense; or angry. He'd never seen Rollie's eyes so hard and deadly looking. I feel sorry for Delgato if he gives Rollie any crap. He waved at Rollie as he left the shop. \n\nRollie's truck was untouched and unharmed. Walking over to the derelict, Rollie handed him the other half of the $20 bill. \"Good job man,\" he said and climbed into his truck. \n\n<p align=\"center\">********************</p>\n\nRollie drove into the parking area at the west end of Union Station, got out of his truck, and walked further west along Market Street. Union station had at one time been the world's largest and busiest train station; handling over 100 thousand passengers a day. The main part of the building was constructed out of Indiana limestone and was a National Historic Landmark. \n\nAs railroad traffic declined the building fell into disrepair, but in the 1980's was renovated into a large hotel, with shops and restaurants. Now, better than 20 years later, the grand old building and the surrounding area were again headed toward the seedy side.\n\nThe spray from the huge fountain in Aloe Plaza across Market from Union Station caused Rollie to duck his head as he walked. Strangely, in spite of developing blight in the area, neither Union Station nor Aloe Plaza had been plagued by graffiti artist or taggers as they were called. A lot of people called them vandals. \n\nEntering Mississippi Nights, Rollie stepped to the side of the door to let his eyes get accustom to the low light of the bar. He saw a door with an \"office\" sign at the end of the long carved wooden bar. In front of the door stood what could have passed for a big bear. The guard was about 6' 7 and as nearly big around as he was tall.\n\nRollie walked toward the door and tried to step around the Grizzle Bear. \"This is private, you can't go in there,\" the big man said as he stepped in front of Rollie.\n\nPulling out a $20 bill, Rollie handed it to the guard. \"Tell Mr. Delgato, that Rollie Chambers would appreciate a few minutes of his time. Tell him I've got a business proposition.\"\n\nThe guard made the twenty disappear and turned toward the door. \"Wait here,\" he ordered. In less than five minutes the man returned. \"Mr. Delgato is busy. He says to come back another time and maybe he'll talk to you.\"\n\nRollie sighed and shook his head. He tried to walk around the guard and go through the door, but the man put his big hand on Rollie's shoulder to stop him. Rollie, using the training he'd gotten from the St. Louis Police Department and his friend Tully, grabbed the hand and twisted it inward. \n\nAs he twisted with his right hand, his left pushed against the elbow which forced the giant to his knees. The man was cussing and yelling in pain; Rollie reached over and slapped the guard over the ear with his palm. The big man used his uninjured hand over his ear. \n\n\"I'm here now, so I guess it would be better if I could see him tonight,\" Rollie said. \n\nThe tone of Rollie's voice, the look in his eyes and the easy way Rollie had put him down, made the big man decide that he could be brave another day. He just watched as Rollie went through the door. \n\n\"Thanks for your help,\" Rollie said as he closed the door behind him.\n\n\"Who the hell are you?\" The man sitting behind a desk asked when Rollie entered the office. Another behemoth, leaning against the back wall, straightened and started to pull a pistol out of his waistband. Rollie drew his Glock 21C with a speed that would have done justice to an old time western pistolero. \n\n\"That's not a good idea,\" Rollie said and pointed the Glock in the man's direction; the man raised his hands and returned to leaning against the wall. Turning back to the man at the desk he holstered his gun and said, \"You must be Mr. Delgato; I'm Rollie Chambers and I'd like a few minutes of your time.\"\n\n\"I've heard about you,\" Delgato replied. Motioning toward Rollie's pistol he said, \"I think you won't use that.\" Delgato smiled. \"You're one of the good guys.\"\n\nRollie stared at the man for a few seconds and the smile faded from Delgato's face. The only thing Hispanic about Delgato was his name; the man had blond hair and pale blue eyes. \"Normally you'd be right John; I don't shoot people for no reason. But this isn't a normal time. If you don't answer my questions I'll put a bullet in your knee. Each time you refuse to answer, I'll find another spot to shoot you.\"\n\nThe guard leaning against the wall stood up straight again. \"Better tell him to leave, because if he moves again you'll be short a man.\"\n\nDelgato decided that Rollie wasn't bluffing and motioned his man out of the room. Rollie took a straight back chair and lodged it under the doorknob. Then he did the same to the door leading outside. \n\n\"Now we can talk uninterrupted,\" Rollie said.\n\n\"What'da you want Chambers?\"\n\n\"And here I thought we were on a first name basis John. Oh well. About a month ago you had a weapons deal fall through.\"\n\n\"How'd you know that?\" Rollie waved for Delgato to continue. \"Yeah, I did. The bastards wanted the guns like right now and they didn't want to pay for the special handling.\" While he was talking, Delgato slowly, as if by accident, moved his hand toward a desk drawer and the pistol hidden inside.\n\n\"John, don't be stupid,\" Rollie ordered. Delgato leaned back in his chair. Rollie nodded and said, \"Better. The way I heard it you couldn't get the guns as quickly as they wanted and you tried to make a year's profit on that one deal.\" Delgato started to respond and Rollie motioned for him to be quiet.\n\n\"I don't really care why the deal went south. What I do care about is who the buyer or buyers were.\" Rollie gave Delgato an evil, menacing grin. \"Think you could give me that info John?\"\n\nDelgato hesitated and then slumped in his chair. He believed Rollie's threats. \"Four guys, cat named Jorge and one named Tommy did all the talking; the other two didn't say nothing.\"\n\n\"Descriptions please,\" Rollie requested. \n\nDelgato described the four men. \"Funny thing, Jorge is Hispanic, Tommy is a white guy, and the other two were a black and an Asian. Never saw a group like that.\"\n\n\"Anything else about them; scars, tattoos?\"\n\n\"Jorge's got a spider web tattoo on his neck. You know one of those macho, barrio type things. Macho my ass, my old man had one too, and look what it got him.\" Delgato's eyes sort of lost focus as he thought about his father. Shaking himself, he looked back at Rollie. \"One other thing, they all wore the same kind of jacket. Satin or something shiny with a circle on the back; they had the letters SLRC inside the circle.\"\n\n\"Any idea what it means.\" Rollie asked.\n\n\"I asked Jorge about it; he said the letters stood for St. Louis Rainbow Coalition. He didn't say what that meant.\"\n\n\"One more question John. What type and how many guns did they want?\"\n\n\"They wanted semi auto .45s and 9MMs. But the thing that torpedoed the deal was the full autos they wanted.\" Rollie motioned for Delgato to continue. \"They wanted 10 fully automatic assault rifles and a couple of HK MP 5s. Those would have taken some time to get and Jorge didn't want to wait. Cheap bastard didn't want to pay the price for them either.\"\n\n\"I was wrong; I've got another question. Did they give the reason they wanted an arsenal like that?\"\n\nDelgato nodded. \"Tommy said something about their gang takin over the South Side. Then Jorge said there was a new sheriff in town and laughed like hell.\" The gun dealer looked at Rollie for several seconds. \"I know you used to be with the police. \"You gonna get the cops down on me?\"\n\n\"The other rackets you've got going, the prostitution, gambling and such, isn't my concern; that's the police department's job.\" Rollie stepped closer to Delgato. \"But the gun running impacts the whole city, including my neighborhood. I suggest you get out of that business. If you don't, I won't call the cops; I'll deal with you myself. We understand each other?\" Delgato hesitated and then nodded.\n\nRollie turned, took the chair away, and opened the door. Turning back toward Delgato, Rollie said, \"Nice doing business with you John. See ya.\"\n\nWalking back to his truck, Rollie kept alert in case Delgato sent someone after him. He didn't think the man had the stones, but Rollie wasn't taking any chances. Rollie started his truck and headed back to Calvin's. Now that he had more information, Calvin could intensify the search on the street for the SLRC.\n\n<p align=\"center\">********************</p>\n\nTully waited for a few minutes after his captors finished talking and bragging then lifted his head. \"Hey, why did you leave my leg and what's that SLRC crap on your jackets?\"\n\nThe one called Tommy walked over and kicked Tully. \"Show some respect old man. It stands for the St. Louis Rainbow Coalition.\" \n\n\"Back off Tommy,\" Jorge ordered. To Tully he said, \"You gave us some trouble before the drug started working so I thought you'd be easier to control if you only had one leg.\" Jorge nudged Tully with his toe and added, \"Looks like I was right.\"\n\n\"Untie me and I'll show you easy,\" Tully replied. After getting nothing but a frown from Jorge, Tully asked, \"What coalition?\"\n\n\"Our loyalties are to each other,\" Jorge said as he walked closer to Tully. \"We'll accept all races and colors in our army; as long as they follow our orders.\"\n\n\"Army? Sounds like a common everyday gang to me.\"\n\n\"Maybe, but the problem with gangs is their loyalties. All that macho bull about being brothers and such. The SLRC has one goal, to control the city. The first step is to control the South Side; we'll branch out from there.\"\n\n\"I think the Krauts might have something to say about that,\" Tully replied. \"They like to think they run the South Side. \n\nThe \"Deutschlanders\" were a gang whose members were of mostly German ancestry. The gang was sort of headquartered on the near south side of St. Louis in the Soulard district; it was close to the Anheuser Busch brewery and was in the process of revitalization. The district was a mixture of young families, some retired people and fashionable shops and stores. \n\nThe \"Krauts\", as they were called by their victims, offered \"protection\" to the store owners and gambling to the more adventurous. The gang wore that derogatory name with pride and defended their territory against all comers; using violence when necessary.\n\n\"Those Kraut heads won't be a problem for long,\" Jorge bragged and then with a grin said, \"Not after you help us.\" \n\nTully didn't like the look on Jorge's face. Judging by his smugness, it don't look good for the home team, he thought. \"I don't know what you expect Vato, but you'll play hell getting any help from me.\"\n\n\"I expect you to get us into your shooting school, I expect you to use your security code, the voice recognition and fingerprint scan, to get us into the armory and I expect you to get us the full auto assault rifles that you have on hand.\"\n\n\"Not gonna happen,\" Tully replied. \n\n\"Oh yes, but it will happen Gunnery Sergeant Tully,\" Jorge answered. \"You see we did a very careful recon on your company. Isn't that what you Marines call it, a recon for Intel? The only other two instructors that have security access are single; they don't have anyone they care about or that care about them. \n\nSorta sad,\" Jorge said in an aside. \"Being ex-Marines we might have a problem forcing them to help us. But you Gunny, you have people you care about; people that care about you.\"\n\n\"Former, Tully said in a cold voice.\n\n\"What former?\"\n\n\"It's former Marine, not ex; Once a Marine always a Marine.\"\n\nTully sat up as straight as he could and stared at Jorge. Tully's eyes narrowed and become hard and dangerous. He didn't waste time making idle threats but he calmed himself thinking about how much he was going to enjoy dealing with Jorge once he got loose.\n\nJorge noticed Tully's reaction and took a step back before he could stop himself. \"You have a Miss Julie Colwell and a Miss Jessica Talbert, and a Mr. Rollie Chambers. All of these people are friends, almost like family, and in Miss Julie's case, more than friends.\" Jorge gathered himself. \"Sergeant Tully, you will help us or your friends, each and every one, will meet with a horrible accident.\"\n\nTully's mind was racing. If I can get to the armory vault at the training center I can put a stop to this, even on one leg, he thought. He shook his head and sighed; the sight made Jorge and the others smile, thinking they had Tully right where they wanted him. No matter what, the SLRC will not get those automatic weapons, Tully said silently to himself.\n\n<p align=\"center\">********************</p>\n\nRollie stopped his truck in front of Calvin's. The watchdog from his previous trip was again or still leaning against the wall. This time he held a brown paper bag wrapped around a bottle of cheap wine. He waved the bottle at Rollie. \"Thanks man,\" the derelict said.\n\n\"Want to earn another twenty?\" Rollie asked. The man nodded and Rollie handed him half of a $20 bill. \"Same deal as before friend. Guard the truck and you'll get the other half when I leave.\"\n\nThe man took the half bill, pulled his pants up off his hips and sat on the front bumper of the truck. \"It'll still be here when you come back,\" he promised and took a long drink from his bottle. Rollie, smiled, nodded and entered Calvin's building. He'll be lucky to still be conscious when I come back, Rollie thought.\n\nCalvin came out of a back room to meet Rollie. \"Did you talk to Delgato? Did he give you any trouble?\"\n\n\"Yes I talked to him. Mr. Delgato is not as mean as he likes everyone to think.\" Rollie smiled but didn't go into details. \"Got some names I need you to check on for me, Calvin.\" He told Calvin about the four men and the SLRC. \"See what you can find out about them for me; call me when you get something. Okay?'\n\n\"I'll have something by tomorrow night.\"\n\nRollie smiled his thanks and went back to his truck. As he thought, his guard dog was lying asleep on the sidewalk next to Rollie's truck. He knelt down and stuffed the other half of the $20 bill into the man's front pants pocket. \"There you go old timer.\"\n\n\"Did you find him?\" Jessica asked when Rollie walked into their apartment.\n\n\"Not yet, but I think I'm getting closer.\" Rollie took her hand and led her to the huge couch in the living area. He explained to her about the botched weapons deal, the SLRC members, and his thinking that Missouri Tactical was involved. \n\n\"You think this SLRC is the reason Tully is missing? Why\"\n\n\"Got nothing but intuition, just a hunch, I guess you'd say. But I'd bet chalk, money, or marbles that they're involved.\"\n\n\"Julie's going nuts. She thinks she's responsible for Tully being gone.\" Jessica pulled Rollie's arm around her and snuggled closer to him. \"Tully's part of our family; like a big brother. Find our brother, please Rollie, find him.\"\n\n\"I will Jess, I promise, I will,\" Rollie said as he put his arms around Jessica.\n\nLater that night, Rollie's phone gave off its love song ringtone. \"Who the hell is calling me at midnight?\" He picked up the phone and answered, \"Chambers.\"\n\n\"Rollie this is Andy, you know Anonymous Andy, Calvin's friend.\"\n\n\"Yeah, Andy. What do you want?\"\n\n\"Calvin's in the hospital. He said I should call you and let you know; they won't let him use a phone. Says you should come see him, like right now.\"\n\n\"What hospital Andy and how bad is he hurt?\"\n\n\"He's at the Washington University Med Center. I don't know how bad he's hurt; they would let me stay with him. Then he told me to call you.\"\n\n\"Are you still at the Med Center Andy?\" \n\n\"Yeah, I'm in the lobby of the ER.\"\n\n\"Tell Calvin, I'm on my way. Better make yourself scarce before the cops get there. Thanks Andy.\"\n\nJessica got up while Rollie was talking and left their bedroom. He got dressed and as he walked into the living area, Jessica handed him a cup of coffee. Rollie smiled and gave her a quick kiss. \"Be back soon as I can.\"\n\nWalking into the ER, Rollie asked the woman behind the counter about Calvin. They directed him to treatment area 42 which was closed off by a sliding curtain. He peaked through the opening of the curtain and saw Calvin was lying on the bed arguing with a nurse.\n\n\"Damn it, I'm okay. Let me go home,\" Calvin said in an angry voice.\n\n\"No more of your nonsense Mr. Deters,\" the nurse said. \"You'll go home when I say you can and not a minute sooner.\"\n\n\"Better listen to the lady Calvin,\" Rollie suggest as he walked into the treatment area. \"You look like you've been rode hard and put away wet.\"\n\nCalvin didn't look like he needed to get out of bed. He had a large, deep, cut over one eye, his lips were swollen as if they'd had collagen injections, and the rest of his face showed the aftermath of a beating. Two fingers on his left hand were splinted as was his thumb on the right hand. \n\n\"Huh? What?\" Calvin didn't understand the phrase. \"Never mind...guess Andy got hold of you.\"\n\n\"Yes he did. What happened?\"\n\n\"The SLRC didn't like me askin questions so they gave me this,\" he said pointing at his face and then his broken fingers, \"to tell me to stop.\" Calvin sucked a drink of water through the straw in a glass on the table; his lips were so bad he couldn't use them to drink. \"But I got the information you wanted.\"\n\n\"Sorry Calvin. I didn't mean for you to get busted up.\"\n\nThe injured man laughed and then groaned at the pain it caused. \"Isn't the first time...and probably won't be the last.\" He sipped his water and then continued, \"Got names and a little history on those assholes.\"\n\nThe nurse returned and checked Calvin's vitals. Then she inspected the splints and the sutures in the large cut over his eye. \"Doctor Wells wants to keep you over night for observation; you might have a concussion. So we'll be moving you up to a room very shortly Mr. Deters.\" She turned and looked at Rollie. \"You best finish your visit and leave young man,\" she ordered.\n\nBefore Rollie could say anything, Calvin spoke. \"Nurse, I know you're trying to help me and are just doing your job but give me a few minutes with my friend.\" She looked at him impatiently and he asked, \"Please?\"\n\nShe huffed a little, checked Calvin's vital signs again. \"You've got ten minutes young man,\" she said poking Rollie in the chest with her forefinger. \"Ten minutes and then I'll have security on you. Understand?\"\n\nRollie nodded and smiled as the nurse left. \"Tough woman,\" he said to Calvin. \"Reminds me of Julie.\"\n\n\"Whose Julie?\"\n\n\"She's Tully's woman; Julie is the head nurse at St. Louis U Med Center. We've only got ten minutes so tell me what you learned.\"\n\n\"The SLRC has about ten members, but those four you told me about are the real players; the rest are just wannabe tough guys and gang bangers.\" Calvin took another sip of his water. \"Wish this was Gentleman Jack,\" he said in a low voice. \"My friends, and some of Andy's, hear that the 'Army', as they call themselves, wants to take over the city; but they're going to start on the near south side.\"",
        "\"The South Side belongs to the Deutschlanders,\" Rollie said. \"They won't like the competition.\"\n\n\"Yeah, the Krauts are gonna be real put out,\" Calvin replied. \"They'll put up a fight to keep their territory. I think that's what the busted gun deal was about. The SLRC can't outman the Krauts but they might be able to outgun them.\"\n\nRollie thought for a minute. \"Tell me about the players.\"\n\n\"The leader is Ernesto Ruiz, aka Jorge Mendoza, and he's the real deal Rollie. He grew up in the barrio in East L.A.; got too hot for him so he came east to St. Louis to live with a cousin. Sometime after he got here he hooked up with Tyrone Jackson, Tommy Smith, and Chang; no first name, it's just Chang.\"\n\n\"I think I ran into Tyrone Jackson when I worked for the Department,\" Rollie offered.\n\n\"You probably did. He's been involved in a lot of stuff over his 25 years. Smith is a leg breaker from the North Side. Chang just sort of showed up. Don't know much about him except that he's a bad ass; knows Kung Fu and Karate and all that martial arts stuff.\" Calvin looked hard at Rollie. \"Be careful with that one Rollie; from what I heard, he's a stone killer; likes to watch people die and stuff. If you go after them, take back up. No need to be a hero. Okay?\"\n\n\"Thanks Calvin but this isn't my first rodeo. I know a little bit myself.\"\n\n\"Time for you to go young man.\" The nurse had returned and there was a security officer with her.\n\n\"Yes ma'am,\" Rollie answered with a grin at the officer. \"Call me if you need anything Calvin. Thanks.\"\n\nOn his way home, Rollie called his friend Detective Frank Wendt. \"Hi Frank. Did Ricky come up with anything on Tully?\"\n\n\"Not a hint of any credit card usage or anything. Where ever Tully is, he's not using any of them.\"\n\n\"Can you run a few names for me Frank?\"\n\n\"These guys involved with Tully?\"\n\n\"Don't really know; all I've got is a feeling,\" Rollie admitted. He gave Frank the names \n\n\"Call you back shortly,\" Frank said.\n\n<p align=\"center\">********************</p>\n\n\"I didn't mean to upset Jacob,\" Julie protested again to Jessica. \n\nThe two women were sitting at the breakfast bar that separated the kitchen from the living area in Rollie's apartment. Jessica poured another cup of coffee for Julie and gave her a sympathetic smile.\n\n\"I know,\" Jessica replied.\n\n\"I was just teasing him; I didn't expect him to get so angry.\"\n\n\"Tully hasn't had many relationships,\" Jessica continued. At the look on Julie's face she said, \"He's been with women but he never formed a strong bond with any of them. Part of it was because he was always moving around with the Marine Corp.\" Jessica smiled again. \"He told me once that he didn't want to leave a woman or family wondering if he was going to come back from a deployment; he also told me he regretted it.\"\n\n\"He never told me that,\" Julie said. There was just a touch of sadness in her voice.\n\n\"I'm a trained Psychiatrist; it's my job to get people to open up. Besides, he's sort of adopted me because of Rollie so I'm like talking to his sister or something.\" Jessica pointed at Julie. \"You on the other hand are definitely not his sister and I'm sure he has other things to talk to you about.\" She smiled wickedly at Julie.\n\n\"Rollie and I have known Tully for a long time and believe me if he was angry he'd tell you in no uncertain terms.\" Jessica smiled again and added, \"Tully's not much of a diplomat.\" She motioned and the two ladies moved to the sofa. \"Where ever Tully's at, you're not the reason he's gone.\"\n\nJulie chuckled. \"I call him Jacob but you and Rollie call him Tully. Why is that?\"\n\n\"Don't really know. He's always been Tully to us. The first time I met him he said 'Call me Tully' so I have.\"\n\nBecoming serious again Julie asked in a small sad voice, \"Where is he?\" \n\n\"I think I have an idea,\" Rollie said coming into the apartment, surprising the ladies. \"Or at least why he's not here.\"\n\n\"Where? What?...\" Julie stuttered. \n\nRollie explained his feelings, his hunch, about the SLRC, Missouri Tactical, and Tully. \"I think they've taken Tully and plan to use him and his security codes to steal weapons from the academy.\"\n\n\"Jacob's in danger then,\" Julie responded.\n\n\"Have you ever read a story by O. Henry called 'Ransom of Red Chief'?\" Julie shook her head but Jessica smiled; she was familiar with the story. \"Seems these two men kidnapped the son of a prominent businessman,\" Rollie continued. \"They were going to hold the boy, whose nickname was Red Chief for whatever reason, for ransom. Turns out the boy was such a hellion and gave the men so much trouble that they paid the father to take him back.\"\n\nRollie chuckled. \"In Tully, I think the SLRC has gotten hold of Red Chief, only on steroids. He'll give them a lot of trouble and they still won't get the codes from him.\" Rollie slid onto the sofa next to Jessica. \"The security code is more than just a group of letters and numbers. There are a retinal scanner and a voice recognition system; the voice system requires numbers and letters. There are also parameters for the stress level in the voice being used. They'll play hell getting Tully to help them, even if he wanted to.\"\n\n\"That could make it hard on Tully,\" Jessica offered.\n\n\"Yeah, it could. But Tully and Ray decided that was the best way they could protect the armory with all of its weapons and ammo.\"\n\nThe landline rang and Jessica answered it. Handing the phone to Rollie, she said, \"Frank Wendt.\"\n\n\"Hi Rollie; got some information on those names. Let's see.\" Rollie head Frank hit computer keys. \"Okay, Jorge Mendoza is a recent addition to our fair city and to our records; lots of little stuff here, but nothing serious, at least not so far. I'm waiting for a report from L.A. \n\nTyrone Jackson is a graduate of our juvenile system. He was first arrested at age 13 for vandalism and he's just been getting more serious as he got older. Arrest for theft, breaking and entering, robbery, and Grand Theft Auto; all while he was still considered a juvenile. Now he's an adult.\"\n\n\"That's a pair to draw too, isn't it,\" Rollie offered.\n\n\"Tommy Smith and this Chang aren't in the system; although Chang has been questioned about some strong arm incidents lately. That's about it. Call me when you find them Rollie. You're not a cop anymore; let the Department handle them.\" After a few quiet seconds from Rollie, Frank laughed and added, \"Never mind. I forgot who I was talking to. Just be careful.\"\n\n<p align=\"center\">********************</p>\n\n\"Chambers is askin around about you and the SLRC,\" Jorge told Tully. \n\nTully thought for a second about not answering but decided there was no reason to fight that battle. \"Yeah I figured he would. My lady and his are really good friends. I've been out of touch for a couple of days now and Julie probably asked for his help.\" \n\n\"He'll quit looking now,\" Jorge said. \"We had a talk with his man Calvin who was asking all the questions about us. Chambers won't bother us if he doesn't want the same thing to happen to him; or to his lady.\"\n\nLooking at Jorge for several seconds, Tully got an idea. \"Were I you, I'd just leave him alone and for God's sake don't bother his woman. You don't have any idea about this guy. If you go after him or his lady, all you'll do is piss him off. Chambers will be after you like a dog on a bone.\"\n\n\"He's just one guy. What can he do?\" Jorge asked with a disbelieving look on his face.\n\n\"You heard what happened to Tommy Jackson, the drug dealer?\" \n\n\"I did,\" answered Chang. \"He tried to strong arm some guy and his woman. The guy and a friend went after Jackson and damned near killed him. Scared him so bad he pissed his pants.\" Chang snorted. \"If Jackson ever gets out of stir, his street rep is destroyed.\" The Asian looked hard at Tully. \"That was Chambers?\" Tully nodded and Chang said, \"And you were the friend I guess.\" Tully nodded again.\n\nJorge watched Tully's eyes get hard as he talked about Jackson. \"Chambers and this man are hombres peligros, he said out loud. Chang looked puzzled and Jorge explained, \"Dangerous men.\" He walked over to a covered window, pulled the curtain aside, and looked out. \n\nBefore the curtain fell back into place, Tully saw the pillars of a bridge that spanned the Mississippi. He also saw a smoke stack on one of the tugboats on the river go past. I was right, he thought. That's the Eads Bridge so we're on the waterfront north of downtown. \n\nAfter several minutes he turned away from the window. \"I think you should call your friend, this Chambers, and tell him you're okay,\" Jorge said. \"Tell him you're takin a few days vacation.\" He turned toward Tully. \"Do this right and nobody gets hurt; including your friend and your lady.\"\n\nTully locked eyes with Jorge for several seconds and then slumped back against the wall. \"Okay Vato, whatever you say.\" Tully looked down, not wanting Jorge to see the hate and anger in his eyes.\n\nJorge walked over to Tully and cut the rope that bound his hands. Tully rubbed his wrists to restore some circulation and took the cell phone that was held out to him. \"Call Chambers now,\" Jorge ordered.\n\nTully punched in Rollie's number. After a few seconds Rollie answered. \"Hey Chambers; its Jacob Tully. Yeah, I'm okay. No, nothing's wrong; just wanted a few days by myself. Well, if you must know, I'm not real happy with Julie right now. She told me about her old boyfriend coming to town and that she wanted to see him. I can't adjust or adapt to that so I thought I'd take a break. You know, get my head on straight.\"\n\nTully listened for a few seconds and continued. \"I'm gonna stay at the apartment over the office at the Academy for a week or so; going out there tonight. Tell Brian not to freak out if he hears someone moving around up there.\" Tully hesitated and added, \"Do me a favor and don't call me please. I need to overcome Julie wanting to date another guy. Okay, talk to you later.\"\n\nJorge took the phone back. \"Very good old man. Now do as you're told and you'll make it through this.\"\n\nTully nodded and hung his head again. We'll see who makes it through this, he thought.\n\n<p align=\"center\">********************</p>\n\n\"Okay, bye Tully,\" Rollie said and closed his cell. Turning to Julie and Jessica he said, \"That was Tully. He's okay,\" Rollie said before Julie could start asking questions. \"He's in trouble but now I know where he is, actually where he will be, and we can help him.\"\n\nJulie wouldn't be put off. \"Where is he? What kind of trouble?\"\n\n\"I'm going to call Frank Wendt and get him over here,\" Rollie said instead of answering Julie's questions. \"I'll explain my thinking while we wait for him.\" Both Julie and Jessica nodded. \"Okay first, I can't see Tully not meeting a problem head on,\" Rollie said. \"Can you? If he had a problem he would tell you and discuss the situation; not run away and hide. Ergo.\"\n\nErgo what Rollie?\" Jessica said. \"Don't tease us; Julie's not up to it.\"\n\n\"A group or gang or whatever, calling themselves the SLRC, had a gun deal go south and I think they are the ones that took Tully. I found a brochure under his coffee table, with a section on machine guns underlined. I think Missouri Tactical and the full auto weapons they have in their armory vault are the reason for Tully's disappearance.\" Julie started to ask something but Rollie cut her off. \"Don't ask me to explain why, but it just feels right to me that this bunch of punks is involved.\"\n\nHe waited for the ladies to nod that they were with him. \"Now, Tully calls and tells me it's Jacob Tully; he's always been Tully since the first day I met him. He also called me Chambers instead of Rollie. Then he says he can't adjust or adapt to Julie seeing an old boyfriend. He said he can't overcome his jealousy about that.\" \n\nHe turned to look at Julie with a grin. \"Remember when I was in your hospital Julie and you came in reading Tully and I the riot act for messing up your schedule?\" Julie nodded with a puzzled look. \"Tully asked you out for dinner when you got done chewing us a new one. What did Tully say when you said something about him being sure of himself?\"\n\nJulie thought for several seconds and returned Rollie's grin. \"He said he was a Marine and had been trained to adjust, adapt and overcome.\"\n\nRollie nodded and continued his description of the phone call. \"Then Tully said he was going to stay at the apartment over the office at the Academy and to tell Brian not to freak out if he heard someone up there tonight.\" \n\n\"What's wrong with that?\" Julie asked.\n\n\"There is no apartment over the office at the Academy,\" Jessica answered. \"It's a secure file room.\"\n\n\"And Brian doesn't work at night,\" Rollie continued. \"I think Tully mentioned him because Brian is in the middle of this somehow.\"\n\nThe doorbell rang and Rollie said, \"That's Frank. Go let him in will you Jessica?\" \n\nWhen Detective Frank Wendt came into the room, Rollie quickly explained his thoughts. \"I'm going out to Missouri Tactical and talk to Brian,\" he said. \"Then I'm going to wait around for Tully to show up.\" \n\n\"I'm going with you; I like Tully too.\"\n\nRollie shook his head. \"I don't want the Department involved in this yet Frank.\" Wendt gave him a surprised look and Rollie said, \"You know how those guys are. They'll sound boots and saddles and send a SWAT team to handle it. Tully could get killed while those guys play John Wayne.\"\n\nFrank slowly nodded his head. \"I didn't say anything about the Department; I said I was going with you. Maybe between the two of us we can get Tully out of trouble. If not, we'll give the SLRC a hell of a scare. We can always call SWAT.\" He smiled at Rollie and walked toward the door. \"You coming?\"\n\n\"Yeah, I'm coming.\" Rollie answered. He kissed Jessica and as he joined Frank at the door he said, \"You're as crazy as me.\"\n\n<p align=\"center\">********************</p>\n\nMissouri Tactical Academy was about 10 miles outside of Wildwood, Missouri and about 40 miles from downtown St. Louis, situated on 100 acres surrounded by National Forest on three sides. It was an abandoned farm that Tully had bought at a tax auction. The property had a ten foot high chain link fence with a roll of tangle foot razor wire across the top of the barrier. \n\nThe fence and razor wire were a great deterrent to trespassers. The site had outdoor pistol, rifle, and long rifle ranges. Snipers could train out to 1000 yards with state of the art controls. There was also a combat range with pop up targets and tactical situation ranges for pistols and shotguns. \n\nThe Academy was an innovative shooting facility. The main building was two stories built over a full and very deep basement. The building was poured concrete and looked like a World War II bunker. The basement had down angled steel plates embedded in the rear walls that deflected bullets harmlessly into a sand pit. \n\nIt also contained the indoor shooting ranges. There were 3 pistol ranges, with 10 bays each, which allowed shooting to distances of 25 yards, a small rifle and shotgun range with six bays, which had targets out to 50 yards. \n\nThe shortest range was for pistols and was only 25 feet in length. Tully, and most police instructors, felt the average distance a police office would have to use his gun was 7 yards or 21 feet. This short range had targets that turned face on to the shooters for a few seconds and then turned back on edge. It trained the officers to quickly recognize targets, aim and fire.\n\nFrank had never been to the facility and was very impressed with the no nonsense approach taken by the owners. This was not a posh, California type, gun club. \"Hell of a place,\" he said as he and Rollie parked in front of the main building.\n\n\"Hey, twice in one week,\" Ray Jenson said as Rollie and Frank walked into the offices of Missouri Tactical. \"You looking for a real job or something Rollie?\"\n\nIf Tully was a poster boy for retired Marine Gunnery Sergeants, then Ray Jenson was one for a Captain of the U.S. Marines. He was 6'3\", with shoulders so broad he'd had to be careful going through the water proof hatches of the ships he often served on for 30 years. \n\nLike Tully, his hair was a salt and pepper mixture; but unlike Tully, Jenson wore his long down his back in a pony tail. He always said he didn't have a chance to be a hippy because he was in the Marines so he was going to be one now. \n\n\"Hi Ray. This is Frank Wendt,\" Rollie said.\n\n\"Yeah we met once before,\" Ray replied. \"You're a police detective, right?\" Frank nodded and Ray asked, \"What brings you out here this time Rollie? Is it something to do with Tully?\"\n\n\"Not bad for a beat up old Marine Captain,\" Rollie answered. \"Yeah it's about Tully. Let me tell you what's going on and then I want to talk to Brian.\" Rollie filled in Ray by explaining his 'hunch', what Calvin has found out, and Tully's phone call that morning. \"Brian here?\"\n\n\"Yeah, he's down in the pistol shooting bays, policing brass. Want me to call him to the office?\"\n\n\"No, I'll go see him,\" Rollie replied. \"Need to talk to him and I don't want to spook him.\" Rollie turned to leave and asked, \"Indoor short range?\" Ray nodded and Rollie took the stairs to the lower floor that held the indoor ranges.\n\n\"This should be good,\" Ray said. He turned and pushed a couple of buttons. On a large monitor sitting on the desk, a TV picture of the pistol range showed. \"Like a good seat at the game,\" he said motioning toward the monitor. \n\n\"Close circuit TV?\" Frank questioned.\n\n\"Yeah. We had a female student that claimed one of our instructors tried to teach her more than shooting techniques. After we took care of that we decided we'd keep every area under surveillance. That is in addition to the other security cameras and proximity alarms.\"\n\n\"Proximity alarms. What's that?\" Frank asked.\n\n\"We have sensors on the fence surrounding the Academy and along the road onto the property from the main highway,\" Ray answered. \"We can tell the minute someone comes onto the property or toward the complex.\"\n\n\"That's a bit of overkill isn't it?\" Rollie asked.\n\n\"Yeah, I guess it is. We were gonna put in the cameras anyway and contacted Mike in Raleigh about buying them from his company.\" Ray chuckled. \"Guess retirement didn't suit him; he opened a security hardware business about a month after he sold out to Tully and moved to North Carolina. \n\nAnyway, he wanted to test out these proximity sensors. He was thinking of adding them to his inventory. Mike said he'd split the cost with us if we'd install and test them. A deal's a deal so we popped for them. Only place we can't see or don't have sensors is the office, the locker rooms and the bathrooms.\" \n\nBrian Teller was an unimpressive young man. About 24, the only outstanding thing about Brian was how average he was. He was about 5'8\" with dull brown hair, brown eyes and a slender build. If you looked in the dictionary under average, you'd see Brian's picture, Rollie thought. \n\nRollie walked into the shooting bays and waved. \"How you doing Brian?\" Pointing at the spent cartridges on the floor he said, \"Hell of a lot of brass.\" \n\n\"Yeah, we had a beginning shooters class late this afternoon.\" Brian continued in a low voice so that Rollie couldn't hear. \"Damn instructors could have swept up the brass. But no, leave it for Brian.\" \n\nIn spite of his whispering, Rollie heard Brian's complaint. \"How long you been with Missouri Tactical now Brian?\"\n\n\"It'll be eight months next week. Hope to stay on for awhile; maybe get an instructor's certification.\"\n\n\"I don't think you can get a weapons instructor certificate with a felony conviction on your record,\" Rollie said.\n\n\"What are you talking about? I've never had a felony conviction.\"\n\n\"You will when you're arrested for kidnapping, Grand Theft and whatever other charges I'll bring against you.\"\n\n\"Kidnapping?\"\n\n\"Jorge and the others in the SLRC kidnapped Tully and they plan to rob the Academy; for full auto weapons I think. You're an accessory so you're just as guilty as they are.\"",
        "Brian turned a sickly shade of white and eyed the only way out of the shooting bays.\n\n\"Don't try it,\" Rollie ordered and stepped in front of the door. \"Even if you get past me, Detective Wendt of the St. Louis Police is waiting on the other side.\" He shook his head and grimly smiled at Brian. \"I don't think you can get past me and of course Ray is out there too. Face it boy, you're screwed. Unless...\"\n\n\"Unless what?\"\n\n\"If you tell us how you fit in and what the plan is, I'll tell Wendt that you cooperated. Hell, I'll even tell the judge you came to me because you regretted your part.\" Brian hesitated, thinking about how he could get out from under the storm that was coming.\n\n\"I'll tell you what I know and you jump in anytime,\" Rollie suggested. \"I know that Jorge and the SLRC had a deal with Delgato and it fell through. They contacted you and made some kind of deal for you to help them get automatic weapons from Missouri Tactical. I'm pretty sure they kidnapped Tully to get his security codes.\" Rollie gave the boy a piercing look. \"That about right Brian?\"\n\nBrian looked at the ceiling took a deep breath and sighed. \"I didn't know they were gonna kidnap Mr. Tully; I swear I didn't. I was supposed to tell them when the guns were cleaned up and ready to shoot. Then I was gonna tell them what times the Sheriff's Department made their security sweeps. That's it.\"\n\n\"Why? Did they offer you money or what?\"\n\n\"I owe some money to Jorge. He said he'd write off the debt if I helped him; he also said he break my legs if I didn't.\"\n\n\"When are they coming to get the weapons?\"\n\n\"Don't know for sure, but I think it'll be tonight. I called Jorge yesterday and told him the guns were ready and stored in the armory.\" Brian hung his head and in a soft voice said, \"I drew them a map of the complex.\"\n\nThat supported Tully's phone call, Rollie thought. He raised his head and looked at the security camera. \"You get all that Frank?\"\n\n\"Yeah, I'm on my way,\" Frank answered over the speaker in the bay. He entered, walked over to Brian and put handcuffs on him. \n\n\"You can't arrest me,\" Brian said. \"You got no, what'd you call it, jurisdiction. You're a city cop.\"\n\n\"He's not arresting you,\" Rollie said. \"We're just going to put you somewhere for safe keeping until we deal with your buddy Jorge. Frank, would you lock our boy here in the secure file room please.\"\n\n\"What then Rollie?\"\n\n\"Guess we'll hide our trucks out back and just hang out and see if Tully shows up.\" Rollie followed Frank as he led Brian out. After securing their prisoner, they went to the security station that showed the view from the cameras on three monitors. \"Now we wait,\" Rollie said. \"Got any coffee Ray?\"\n\n<p align=\"center\">********************</p>\n\n\"I need my leg, unless you want to carry me,\" Tully told Jorge. It was around midnight and Jorge had just ordered Tully to lead the way to the door.\n\nTommy shoved a pair of crutches at Tully. \"Make do with these crip!\"\n\nTully took the crutches, stared at Tommy for a few seconds and started toward the door. Seeing the look in the \"cripple's\" eyes, Tommy stepped back and pulled a pistol from under his jacket. Once outside, he motioned for Tully to get into the back of a panel van. Jorge got behind the wheel and Tully was seated between Chang and Tyrone on the second seat; Tommy sat on the passenger side, turned and kept his pistol on Tully.\n\nJorge looked in the rear view mirror and caught Tully's eye. \"This is the way it's gonna go down. If anyone is there, you'll tell them that Tommy is your cousin and you're just showing him the place. Tell them that we're thinkin about takin lessons for our CCW or something. Got me?\"\n\nTully stared back at Jorge in the mirror then gave him a grim smile and nodded. \"We got no problem if the place is empty,\" Jorge continued. \"Either way, you get us into the building and then into the armory.\" Jorge turned in his seat and looked directly at Tully. \"We know there is a numerical security code, you'll give us that code.\"\n\n\"Okay, I'll give you the code,\" Tully replied. \"You don't need me to go with you.\"\n\n\"Don't play dumb, old man. We also know there are a retinal, voice and a finger print scanner; without your eyes, voice and prints, the number codes don't mean shit.\" \n\n\"What happens after you get the weapons?\" \n\n\"We tie you up, leave you in the armory with the door open, and go on our way,\" Jorge answered. \"It'll be at least a day before someone finds you and we'll be underground by then.\" Jorge turned back to the front, started the van, and drove away from the waterfront warehouse where they'd been holding Tully.\n\nSomehow I don't believe they're just gonna leave me there, Tully thought. Come on Marine, time to adapt to the situation, he told himself. \n\n<p align=\"center\">********************</p>\n\nAt 1 AM, there was no moon; the Academy and the grounds were shrouded in darkness. Ray took turns glancing out of a window and at his security monitor. \"Dark as the inside of a black cat out there,\" he said. \"Good night to run an op.\" Ray bent and stared at the tracking display on his monitor for a few seconds. \"We've got company,\" he said. \"A car just passed the outer perimeter; should be here in about three minutes.\"\n\n\"Let's stay frosty,\" Rollie ordered. \"We don't want to tip off Jorge and the boys if this is them.\"\n\n\"You forget who you're talking to,\" the former Marine Captain answered.\n\nA battered panel van with a crumpled rear quarter panel and faded paint pulled to a stop in front of the office. A man stepped out of the van and looked around; then he motioned and four other figures climbed out to join him. One of the men was on crutches.\n\n\"That's Tully,\" Rollie said in a low voice. He watched as the man that had to be Jorge pushed Tully toward the entrance to the building. \"Can we get behind them from the office?\" Rollie asked Ray.\n\n\"Yeah, but why don't we get ahead of them?\" Ray asked with a smile. Rollie looked puzzled and Ray continued. \"In the Corp we used to run search and destroy missions; one of the things we did was set up ambushes for the bad guys. We could do the same thing for these guys.\"\n\nRollie smiled and nodded. \"Frank can wait up in the file room until they get out into the hallway and then he'll be behind them,\" he suggested. \n\n\"I want to be part of the ambush,\" Frank complained. \"Tully's my friend too you know.\"\n\n\"Frank, I may not be able to ask nicely for Jorge and his friends to give it up; I may have to put them down right away,\" Rollie replied with a serious tone. \"It could mean the end of your career if you're involved in that.\" Rollie walked over and put his hand on Frank's shoulder. \"If things go south, call the Sheriff's Department.\"\n\nTaking three ear bud radio communication devices, Ray handed one to Rollie and Frank. \"Courtesy of Mike Thomas,\" he said.\" They're the same type used by Marine Force Recon units and the Navy Seals.\" Ray chuckled and added, \"Mike is the king of over kill.\"\n\n\"Give us a heads up when they leave the office Frank,\" Rollie requested. Frank nodded and Ray led the way toward the armory with Rollie on his heels. Arriving at the security door, he turned to Rollie. \"Since it's the place they're headed for, I thought we might spring our ambush from inside. There are several weapons crates that we can hide behind. What'da you think?\"\n\n\"Sounds like a good plan,\" Rollie answered. \"Jorge and his boys won't expect us to be in there.\"\n\nRay ran through the security checks and opened the large vault door. The door would have done justice as a vault door for the biggest banks in St. Louis. There were two rooms in the armory; one large, open bunker like space and a smaller room off to one side with its own security door. \n\nAgainst each of the three of the walls of the big room were racks of weapons. Each rack held pistols, rifles, or shotguns. The smaller room contained ammunition for the guns.\n\nThe vault door was pulled closed and pushed into its frame; but Ray didn't lock it. The door could be locked from inside the room by using a keypad set in the wall next to the door. Once locked it would take explosives to force the door open from the outside. \n\nThe two men quickly stacked a few of the crates on top of each other for cover. Rollie pulled three of the large wooden boxes close to the wall on one side of the door. When Tully and his captives entered, Rollie would be behind them; Ray would be facing them from across the large room. \n\n\"Stay cool when they get here Rollie,\" Ray cautioned and then grinned at the look Rollie gave him.\n\n<p align=\"center\">********************</p>\n\nAs Tully hobbled toward the door of Missouri Tactical, he saw the tail end of Rollie's truck parked down by the storage sheds that were used for the outdoor ranges. Tully looked down at the ground because he didn't want Jorge and the others to see the look on his face. I'm not alone anymore, Tully thought.\n\nJorge motioned and Tully used a numerical code to unlock the door to the building. Tommy pushed Tully inside and Chang closed the door behind them. \"That door leads to the armory,\" Jorge said after looking at a hand drawn map. \"Lead the way old man.\"\n\nTully continued with the labored way he used the crutches and slowly led the men down the hallway to the vault door of the armory. When he got there he saw that the security locks were already opened and he knew someone was in the armory waiting for him. It took a lot of effort to keep the smile off his face. You boys are going to get a big surprise, Tully thought as he went through with bogus procedures to supposedly open the door.\n\nAs he entered the armory, Tully could see that some of the crates had been moved. He took three swinging strides with the crutches and dove behind one of the crates to the left of the door. Jorge yelled and followed Tully.\n\n\"Hold it right there,\" Ray yelled and showed himself from behind his hide; he was holding an M16 and pointed it Jorge and the others. Ray had grabbed the weapon from a rack on the wall and loaded it. \"Toss your guns toward me and get on your stomachs.\"\n\nTommy recovered from his surprise and started to move to the side. \"He ordered you to stand still,\" Rollie said from behind Tommy and the others. Glancing over his shoulder, Tommy saw Rollie holding a large pistol on him. The young man hesitated, and then tried to turn and bring his pistol to bear on Rollie. The high pitched bark of the M16 sounded and Tommy fell to the floor.\n\nChang paused; he had no intention of giving up but he couldn't decide which of the armed men to attack. He moved to the side; taking two steps to his left he fired at Rollie. Chang never made a third step as Rollie put two bullets into his chest. Tyrone had better sense than Tommy or Chang; he jumped back through the still opened armory door and turned to run down the hallway. As he turned he came face to face with Frank Wendt.\n\nFrank motioned with his own Glock and said, \"On your knees and then on your stomach. Tyrone followed the order and Frank secured him with handcuffs and then secured the cuffs around a metal drain pipe running down the wall. That's when he heard Jorge scream, a gunshot and then silence.\n\nJorge had seen two of his men taken out of the fight and the third run out the door. He screamed in anger and frustration, and then snapped off a shot at Ray. Tully stood, using the crate to steady himself and swung one of his crutches. The polished oak crutch caught Jorge in the throat. The force of the blow snapped the crutch into pieces and Jorge dropped his weapon. He grabbed his throat, made choking sounds and slumped to the floor.\n\n\"How's that for a crippled old man?\" Tully asked. He started at the stump of the crutch in his hand, dropped it, and using the crate carefully picked up the other crutch. Ray came out from behind the stacked crates and pulling Jorge's hands away from his throat and secured them with a nylon zip tie.\n\n\"Clear?\" Frank yelled from outside the big room.\n\n\"Clear,\" Rollie confirmed and Frank entered the armory.\n\n\"The cavalry's on the way,\" he said. \"I put in a call to the Sheriff's Department; they said they'd bring an ambulance and EMTs with them.\" \n\nRollie walked over to his friend. \"Hey Tully, long time no see. How you been? What you been up to lately?\"\n\n\"Just cleaning up some trash,\" Tully answered and smiled. \"Thanks for the help Rollie; you too Ray. Nice to see you Frank.\"\n\n\"All bull aside, are you okay?\" Rollie asked.\n\n\"I feel like a three legged horse without my peg leg but other than that I'm fine.\" Tully grinned and sat down on the crate. \"Could use a good meal though. Maybe when this is over we can make a run to Rigazzi's.\"\n\nRollie took out his cell phone and started to make a call. \"No reception in the vault area,\" Tully said. \"You'll have to get out from under all this metal. \n\nNodding Rollie stepped out and called Jessica. \"Found him Jess,\" he said when she answered. \"Yeah he's okay but he needs his leg. We're at the Academy. Would you call Julie and let her know?\" He listened for several seconds, and then interrupted her. \"We'll tell all about it when you get here; Tully needs his prosthesis.\" He listened again and said, \"I think we're going to be held up out here with the Sheriff's Department for a while. See you soon.\"\n\nThe sound of a siren could be heard coming from the main road up to the office complex. \"Guess I better get out there and meet the Sheriff,\" Frank said.\n\nHe left at a trot down the hallway to the front of the building. As he opened the office door, he saw a patrol car skid to a stop. A young Deputy Sheriff, who couldn't have been more than 22 or 23, stepped out of the car as the siren wound down. Using the open car door as cover, he pulled his service weapon and pointed it at Frank.\n\n\"Freeze Mister,\" the young Deputy yelled.\n\nFrank put his hands in the air and thought, great I told them to come quietly and I get a combination of Barney Fife and Dudley Do Right with sirens screaming. \"I'm Detective Frank Wendt of the St. Louis Police,\" he identified himself and took a step toward forward.\n\n\"I said freeze,\" the Deputy repeated.\n\nFrank shook his head. \"Look I'm a cop too Deputy. What's your name anyway?\"\n\n\"I'm Deputy Stiles.\"\n\n\"Okay, look Stiles I don't want to get shot and I especially don't want to get shot by mistake,\" Frank said. \"I'm going to reach into my jacket and get my badge and ID. Okay?\" Moving very slowly, Frank pulled out the small leather folder that held his badge and ID card. He held it up so Stiles could see it and took another step forward.\n\nStiles went into a modified Weaver stance and again pointed his pistol at Frank. \"Anyone can flash a fake badge,\" Stiles said.\n\nFrank stopped for a couple of seconds and then again raised his hands over his head. \"I'll just put this on the hood of your car and you can verify who I am.\" Lowing one hand, he slid the folder across the car toward the Deputy and stepped back; lacing his fingers behind his head. In the distance, Frank could see the lights of at least three more vehicles speeding toward the complex.\n\nStiles picked up the folder and studied the picture ID and then the badge. He was still looking, turning from the ID to the badge and back again, when another patrol car pulled to a stop beside him. A man climbed out of the car and put on the Smokey Bear hat of the St. Louis County Sheriff's Department.\n\n\"What you got Stiles?\" The man asked.\n\n\"I heard the radio call for a disturbance at Missouri Tactical and since I was closest I hurried over here Sheriff.\"\n\n\"Did you also hear that the call for was for a quiet approach and you weren't supposed to use your siren?\" Sheriff Rawlings shook his head. Stiles' was going to be a first rate deputy one of these days but today wasn't it. \n\nFrank waited and listened as Rawlings chewed the Deputy a new one. Rawlings was another of the poster boys for law enforcement. He was tall at 6' 4, with broad shoulders and a slim waist. Rawlings looked like the tight end he'd been in college. Rawlings and Frank had met several times at different law enforcement seminars and symposiums. They were kindred spirits dedicated to law enforcement and had shared a few dinners together after the meetings and classes.\n\nLooking at Stiles, Rawlings ordered his Deputy to holster his weapon. \"Hello Frank,\" Rawlings said. \"What are you doing out here in the boonies? And put your hands down, you're embarrassing me.\"\n\n\"Hi Sam. Got a little situation here,\" Frank answered as he lowered his hands. He quickly explained about Tully's kidnapping, the SLRC, and what the outcome had been. \"Tully, Rollie Chambers, and Ray Jenson are still in the armory. There's a guy cuffed to a drain pipe in the hallway and there are three down in the vault; two are dead and the other one probably wishes he was.\" \n\nRawlings turned as the other two vehicles came to a stop. \"Ambulance is here,\" he said unnecessarily. Guess we better call for the medical examiner too.\"\n\n\"I'll do it Sheriff,\" Deputy Stiles offered.\n\n\"No, I'll do it. You'll have him charging out here. You go bring out the prisoner and put him in your car,\" Rawlings ordered. Frank handed the Deputy the key to the handcuffs and the youngster went inside.\n\nBefore the EMTs could get their equipment together on a gurney, Stiles returned pushing a staggering Tyrone in front of him. Tyrone had a cut over his left eye and blood was dripping from a cut lip. Rawlings raised an eyebrow at his deputy.\n\n\"He tried to grab my gun when I freed one of his hands,\" Stiles explained with a shrug.\n\n\"Looks like you showed him what a bad choice that was,\" Frank said with a grin. \n\nIn the armory, Rollie said to Tully, \"You know those guys would have killed you after they got the weapons. What were you going to do?\"\n\n\"Yeah I know, but it didn't make any difference because they would have never gotten out of the armory.\" Rollie looked puzzled and Tully motioned with his hand toward Ray.\n\n\"There's a button on the interior keypad that will lock the door from the inside,\" Ray said. \"The release is voice activated. Once it's activated, you're not getting out of the vault without a set of numbers spoken by an authorized voice.\"\n\n\"You were going to lock yourself in with those guys?\" Rollie asked. \"I think Jorge would have been a little upset at you. Why would you do it?\"\n\nTully sighed and looked around the vault for a few seconds. \"St. Louis is my home. I've come back to it twice after my military career; once when I retired from the Corp and after my consultant's stint in the sand box. \n\nThere was no way I was going to help or let those assholes make my home into a free fire zone.\" Tully paused and then added, \"I was going to lock the door and they wouldn't have gotten me to say the code. We would have been in here until Ray or one of the others got here in the morning.\"\n\n\"There is an alarm that turns on the cameras in here if the door is locked from the inside,\" Ray explained. \"When I got here in the morning the video feed would have been on the monitor on my desk.\"\n\n\"Jorge would have killed you Tully,\" Rollie said with concern in his tone.\n\n\"Maybe, but they still wouldn't have gotten out until Ray let them out.\" Tully smiled. \"Besides they didn't do so good when they grabbed me. If they hadn't drugged me I would've kicked their asses at my place.\"\n\nRollie returned Tully's smile. \"I believe you would have Tully.\"\n\n\"Rollie,\" Frank called from the hallway. \"Comin in.\"\n\n\"Well come on you sorry excuse for a cop,\" Tully yelled back. \"Don't wait for a written invitation.\"\n\n\"You know you get right down nasty when you don't get enough sleep Sarge,\" Frank replied. \"C'mon the Sheriff's Department is waiting for you guys. They want to talk.\" Turning to leave he saw Deputy Stiles standing in the door. \"In fact, here is one of those fine officers now.\"",
        "Tully stood and using the remaining crutch made his way out of the armory vault. Stiles stepped closer to help him but a withering look from the Gunnery Sergeant made him back away. I could have told you, Rollie thought. If the man wants help, he'll ask for it.\n\nTully put the hand not holding the crutch on Rollie's shoulder. \"Thanks for coming for me,\" Tully said in a low voice and then followed Rollie down the hallway.\n\nRollie slowly led Tully toward the entrance. \"Wouldn't have come at all if it weren't for those two nagging women,\" he said over his shoulder. \"First Julie and then Jessica were on me to find you; over and over, they ragged on me. Finally I had to come just to get them to shut up.\"\n\nTully used his hand to turn Rollie toward him. \"For whatever reason you came, thanks.\"\n\nRollie nodded, wiped a tear from the corner of his eye and replied, \"You're welcome.\"\n\n\"Hello Ray,\" Sam Rawlings said as the men came to the front of the building. \"Didn't know you were involved in this too. Hi Tully. How about you guys telling me what happened.\"\n\nFor the next hour, Tully, with input from Rollie, told Rawlings about the SLRC, their plans, and how Tully got pulled into it. Just as they were finishing, young Deputy Stiles interrupted.\n\n\"Sheriff, there's a lady out there that demands to be let in.\" Stiles swallowed hard and added, \"She said if I didn't let her in she was gonna shove my badge up my....well she threatened me. Said she was a friend of Tully's and a guy named Rollie.\" As if to himself he said, \"Never heard a woman go all ballistic like that.\"\n\nRollie and Tully looked at each other and smiled. \"Jess,\" Rollie said. \"Could you let them in? Bet you Julie is with her too. See I told you, they wouldn't let me alone.\"\n\nGetting a nod from Tully, Rawlings said, \"Bring her into the office Stiles. Be careful she don't turn you over her knee.\"\n\nA few minutes later two women stormed into the office. Jessica was in the lead and Rollie had never seen her look more beautiful. She was dressed in one of his old shirts over a tight pair of jeans. Her auburn hair was pulled into a long ponytail and her normally fair complexion was tinted red, either from anger or frustration and her freckles stood out.. Jessica's deep blue eyes were as sharp as a laser as she looked around. She spotted Rollie and Tully and with Julie close behind her hurried to their side.\n\nJessica grabbed Rollie and held herself close to him with her face buried in his neck. \"I'm glad you called,\" she said softly.\n\nNot to be outdone, Julie had pounced on Tully and was softly crying as he held her with his free arm and tried to balance himself with the crutch. \"I'm sorry,\" she repeated over and over.\n\nHe patted her on the back answering, \"It's okay; everything's alright.\" Tully looked over Julie's shoulder at Rollie and raised his eyebrows. Rollie just shrugged and Tully went back to holding his woman.\n\nJessica separated herself from Rollie and when Julie stepped back Jessica hugged the grizzled sergeant too. She handed him the prosthesis she'd brought from his home. Tully sat in an office chair, put on his leg, and stood. He moved back and forth and took a few steps and then threw the crutch down.\n\nJessica waited for Tully to finish then said \"Didn't I tell you not to play with strangers Tully? You never know where they've been.\"\n\n\"Yes ma'am,\" Tully answered with a grin. Turning to Rawlings he asked, \"Are we done here Sam?\"\n\n\"Yeah. Y'all probably have to come back for the inquest but that don't mean nothing.\"\n\n\"Good. I'm hungry; let's eat.\"\n\n\"Where to?\" Rollie asked.\n\n\"I want Italian. Think Tony will still let us in Rigazzi's?\"\n\n\"You're a bit ripe Tully,\" Jessica answered. \"Let's go back to our place and order a big pizza. You can take a shower and clean up.\"\n\n\"Okay, I guess. But no anchovies.\"\n\n<p align=\"center\">********************</p>\n\n\"I didn't mean to make you mad,\" Julie said to Tully for the twentieth time. \n\nIt was two days after the fiasco at Missouri Tactical and Tully had finally got to go to Rigazzi's. At a large table, there was Tully and Julie, Rollie and Jessica, Frank Wendt and his wife, Ray Jenson and a co-worker of Julies. Ray wife had died several years ago and he was pretty much a confirmed bachelor but Julie was trying to change that fact. \n\n\"I know, it was all on me,\" Tully answered again for the twentieth time. \n\n\"I was just teasing about wanting to see Ken,\" Julie said again.\n\nTully put his arm around Julie and pulled her closer. \"I've been a soldier for a lot of years and don't really know how to deal with women; at least a special woman.\" Tully grinned at Julie. \"So I went home to figure out how to adapt....\"\n\n\"Adjust, and overcome,\" the rest of the group finished with him and laughed.\n\n\"Didn't work out so good, did it?\" Tully asked.\n\n\"Oh, I don't know Tully,\" Frank said. \"You save the South Side a lot of bloodshed and trouble.\"\n\nJulie looked like she was thinking for a moment. \"I'm grateful you found Tully, Rollie, but why didn't you get the police involved; I mean more than Frank here?\"\n\nTully chuckled, even Frank smiled. Rollie looked at Julie; he wasn't laughing.\n\n\"Because they couldn't have found him,\" Rollie answered. \"Don't get me wrong, Frank and the other cops do a good job. But...\"\n\n\"But what?\" Julie asked.\n\n\"They have rules and regulations they have to follow,\" Jessica answered for Rollie. \"If they don't abide by the law they become the same as their targets. Rollie, Tully too, can do what they do and the only line they can't cross is the one they put down themselves.\" Jessica reached over and took Rollie's hand.\n\nLooking back at Tully Julie suggested, \"Maybe you should sell your part of the Academy,\" Julie suggested. \"I mean if bad people are going to come after you for the guns and such.\"\n\nTully turned Julie in her chair and looked into her eyes. \"Yes I could, and I could go hide in my apartment or a cave and hope nothing bad ever comes along. But that wouldn't be any kind of life, at least not for me, and it wouldn't necessarily mean bad things wouldn't happen anyway. I've gone along so far doing the things I need to do, in places I'd rather not have been and not worry about what might or could happen because of 'bad people' as you call them. I'm not about to pull into a shell, like a turtle, at this late date.\" \n\nHe took Julie's hand. \"If we're going to be together, that's something you'll have to accept and get used to.\" After a few seconds he asked, \"What do you think love?\"\n\nJulie looked back at Tully for several seconds. She smiled and said, \"Screw em, let them come. We'll take them all on.\"\n\nA small cheer went up around the table. Antonio Rigazzi, the owner of Rigazzi's, came over with a bottle of wine. \"This will help with the celebration. Nice to see you back with us Tully.\" Tony leaned over Rollie's shoulder and whispered in his ear. \"I've got a cousin that could use some help Rollie.\"\n\n\"Not tonight Tony; no business tonight,\" Rollie replied. \"Call me tomorrow.\" Tony nodded and left the table.\n\n\"There's a pastor on the South Side that raising a little hell,\" Frank informed them. \"He's playing the race card and says you guys killed those 'poor boys' and got away with it. He said that the law won't punish you but God will judge you.\"\n\nTully and Rollie looked at each other. Tully turned toward Frank and said, \"We can live with that.\"\n\n\"Works for me,\" Rollie added with a smile.\n\nThe End"
    ],
    "authorname": "woodmanone",
    "tags": [
        "action adventure",
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-crusader-ch-09"
}