{
    "title": "The Fappening",
    "pages": [
        "Part I: The Data Breach\n\nI padded quietly down my stairs and crossed over into the kitchen. I felt the need to be absolutely silent for some reason even though I was, as usual, totally alone. Maybe it was something about the absolute silence of the early morning, with the crisp orange light pouring in through the window, that I didn't want to disturb. Maybe it was just that I couldn't believe that this beautiful home in the Hollywood Hills really belonged to me. I might've been small and the view of the city less impressive than some, but for a 24 year old woman, it should've been impossible. The end result was that I still felt a little bit like I was sneaking in. That none of this really belonged to me and that it could be taken away at any minute.\n\nI had to remind myself every morning as I grabbed a banana and a glass of water that not only was it mine, but that I'd earned it. The packet of papers sitting on the kitchen table really drove that point home. I could see, splashed across the title page the words \"Fallen, 2X22, 'Conjuring.'\" Fallen was the name of my television show. My. Show. Thinking about it like that never, ever, ever got old. It didn't even matter that I really didn't \"get\" the show and definitely wouldn't have watched it if I wasn't the star. That's right, the star. I was the fallen angel referenced in the title. I was the superhero ass-kicker trying to get back into heaven's good graces. Or something. I guess people who read the comic book understood what was going on. I just did what I was told. And loved every minute of it.\n\nI sat down at the table with my banana and lifted the script. The number was the production code and the 'Conjuring,' was the name of next week's episode. The second season finale of what had become, in the last few month, a surprise hit. We'd changed time slots after the first season and lost a ton of viewers. We thought they were gone for good. But suddenly, they'd come flowing back and brought along a bunch of their friends. The show was getting renewed. I was getting a raise. There was even talk of my character (portrayed by me, of course) getting tied into the comic publisher's universe for the movie franchise next summer. Somehow, all the sudden, it was coming together.\n\nI'd come to Hollywood when I was 18 years old with a dream to be a star. I'd struggled and bumbled and screwed up so many times that it seemed like I was destined to fail. Literally nothing ever worked out for me. Before I read for \"Fallen,\" I had never gotten a single job. No bit parts, no commercials, no nothing. Hell, I'd showed up at a movie shoot one day and got cut as an unpaid extra. The only way I'd managed to keep my apartment was working weird shifts at a local grocery store chain.\n\nAnd then it'd happened. I'd showed up at an open casting call for some minor character in the pilot (like I did every possible chance that I got) and , just like out of one of those old Hollywood stories, a producer spotted me in line and moved me to the front. He said that the girl they'd originally cast in the lead had dropped out (if the tabloids are to be believed it was a heroin overdose) and I had \"just the look,\" that they'd been searching for. He even had a sort of real-to-life drawing of the comic book character and he showed it to me. \n\nThe fallen angel had long, thick midnight black hair. Her eyes were large, wide set and a deep, icy blue color that looked almost hypnotic. Her nose was small, somewhat upturned, and it gave her face an arrogant, almost haughty look. Her skin was somewhat dark, I guess a sort of olive color. Her lips were full and a darkish red sort of color. She had large breasts (mostly exposed) sitting up high on her chest. Her body had a dramatic hourglass shape with a very narrow waist and wide hips. Her legs were long and slender. \n\nWould it be vain to say that the producer was right? The fallen angel in the comic book looked taller than me, but if you could account for my 5'3, 105-pound frame, then I had to say I was almost perfect. I mean the character had my eyes! What are the odds? The only real difference was that I have a small beauty mark above my lip, to the left side of my nose. I also have a tattoo of a rose on the underside of my left breast (but that never makes it on screen). The audition was a breeze. I'd never had confidence like that before. And when the guys from the comic book company saw me, the guys who wrote and drew for the Fallen for years, they didn't have any doubts. I had the part.\n\nNow here I was, sitting in the home that Fallen paid for, chewing easily on a banana and thinking about what sort of cliff-hanger was in store to end the season. A cliff-hanger...because we already knew we would be back for the next season! It was incredible. I flicked through the pages in the script, but even thinking about the future made me too excited. I had time to learn all of this stuff. Filming wasn't for a few more days. I decided to do now what I hadn't really had a chance to do yet: bask in the warmth of my sudden success. \n\n\"Oh come on,\" I said to myself, \"Let's see who Jayne Catalina is dating.\" It wasn't my real name, of course, but that's what everyone knew me as. My stage name, I guess. Since my sudden rise to fame over the last year and a half, and the relentless publicity machine that is the comic/movie complex, I had become something of a sex symbol. Everyone wanted to know who I was sleeping with. My agent had recently been encouraging me to \"become more of a celebrity, less of just an actress,\" meaning that he wanted me to go out on more dates and be more famous for being famous. But it didn't seem that the tabloids actually needed me to date anyone. Anytime I walked in public next to a famous man (no matter if he was married or what), I was \"seen\" with him. The same happened to any attractive guy I happened to see on the street. If I said hello, the tabloids would ask whether he was my \"new guy.\" It seemed there was always someone taking pictures of me in public. I guess that was good for my career. If anyone could take pictures of me in private, they'd see I was always alone. \n\nI didn't feel like worrying about that now. Who can feel too bad about being alone when you're just getting famous and everyone wants to know everything about you? I guess more established celebrities (oh god that word! So exciting) get bored with this stuff and then they need something real in their lives. But I certainly wasn't there yet. It was still so...fresh. I reached for the remote and clicked on the little television I kept on the counter in the kitchen (I certainly wasn't cooking in there, might as well have something to watch). The television was already tuned to the celebrity news channel. There was a story about George Clooney's new movie on and I sort of tuned out. Wouldn't be anything about me.\n\nI chomped on my banana slowly and listened out of the corner of my ear for anything interesting. The program had just started and it seemed like they were focusing hard on the movies first. Maybe someday. It was right before the second commercial break when my ears perked up. They had just tossed back to the anchor after a taped segment. She was speaking with a little more somber tone than before, not the excited, gossipy tone that I was used to. I looked up and saw her looking directly at the camera, appearing very serious.\n\n\"Well it has happened again,\" the anchor said, \"Several sources are confirming this morning that there has been another celebrity data breach. The private documents of dozens of Hollywood and international stars have been leaked. Most prominently, we are getting word that dozens of nude photographs from some of America's biggest stars are already posted on the internet. Our reports indicate that this could be the largest leak in history with at least two Academy Award nominated actresses included in the mix. One batch of photos purportedly shows a very high profile sitcom actress engaged in an act of adultery.\"\n\n\"How terrible,\" I said out loud, putting my hand over my face. I'd come to the channel for a little bit of thrill that came with being a celebrity and now I was facing the dirty, underside of it. The complete loss of privacy, the utter lack of security. I felt so bad for everyone involved. I hoped that they would catch whoever did it. Even thinking about the issue was making my stomach turn. I reached for the remote again, to turn off the television.\n\n\"Perhaps most shockingly,\" the anchor continued and, for some reason, I paused briefly, \"We have been able to confirm that five photos disclose that a famous starlet, known for her role as a comic book heroine is, in fact, a non-operative transgender woman. More details on this story when we return from our commercial break.\" And suddenly I was looking at a commercial for eyeliner.\n\nBut I didn't see it. I couldn't see anything. My entire field of vision felt like it had gone black. It felt like my heart had stopped beating and my entire body felt icy. Whatever slightly nauseated feeling that I'd had there before was suddenly pushed into a completely different plain. It felt like someone had reached through my skin, grabbed ahold of my intestines, and squeezed for all they were worth. I gagged twice, but my guts were so badly knotted that nothing came out. My skin felt rubbery and it was instantly coated in a thin coating of greasy sweat. I was shivering badly and I couldn't breathe.\n\nSlowly, the shock of the moment started to fade slightly. The blood whooshing in my ears slowed slightly and my vision came back to me. I was still staring blankly at the television screen. There was an ad for cat litter on. I wasn't sure how long I had sort of been out of it. I wondered how long I had before the show came back on. Before the anchor said the name of the \"non-operative transgender woman\" of stage and screen.\n\nPart of me wanted to run up to my bedroom and find my iPad. I wanted to quickly Google the most recent document dump. I wanted to find the pictures. I wanted to see the evidence. I wanted to know what everyone had been seeing for the last few hours. But I already knew what I would find. The first hits on Google, the little indented news ones at the top, I could see the headlines already, \"Actress Jayne Catalina, 24, secretly transgender\" or \"Jayne Catalina, 24, of Fallen born a male, sources indicate,\" and below that in the general search results, in the blogs, \"Jayne Catalina is a tranny!\" or more likely still, \"Jayne Catalina has a dick and you're all perverts for wanting to fuck her!\"\n\nIt didn't make sense to go and look. I already knew. I was a \"young starlet,\" I was known exclusively for my role as a comic book heroine. And sitting between my legs, as it had been since the day I was born, as a small, incongruous cock. It had never fit me, but I'd never gotten rid of it. Through all of the hormones and all of the other surgeries to transform my body, it had remained a part of me. \n\nIt would probably be impossible to untangle all of the reasons that I'd chosen not to have the ultimate surgery. I could fill up an entire book with my intersecting and contradictory motivations. But, if I had to pick the primary reason it was probably, counter-intuitively, that I wanted to be famous. Ever since I was a little girl (and I was always a little girl, regardless of what was between my legs) I saw myself on television. Or in the movies. And, as I got older, I realized that if I wanted to be an actress, if I wanted to be famous, that meant sacrifices. And not just the normal sacrifices most people make (leaving home, foregoing school, that kind of stuff). I was in a unique situation. \n\nGrowing up, of course, I knew I was different. And I also knew that being different was bad, regardless of what Disney movies and Nickelodeon television shows had tried to teach me. It is a lesson that any different kid learns very fast. Sometimes someone would get to know you. You'd like them, they'd like you and it would be great. Then they'd learn who you really were. They'd drop you so quickly...When my parents moved me from my hometown to Denver, Colorado when I was 9 years old, I went as Jayne and I never looked back at the person I was before. \n\nIt was probably around that time that I decided I wanted to become beautiful and famous. I was lonely, I remember. It wasn't my natural inclination to be standoffish. That wasn't who I was. But that's what I became, because I had to be. But it never sat right. I knew that I still needed affection. Affection that even my supportive(ish) mother couldn't provide. I knew that I needed love, maybe even adoration. The older I got, the more refined my fantasy became. I saw myself on magazine cover, giving interviews on late night television, answering fan mail. I saw myself reaping the love of the world. From afar. From legions of devoted fans who cared about my every utterance, who followed my every move, but who didn't really know me. \n\nThat way I could get what I needed, without letting anyone get too close. Allowing someone to love me, rather the idea of me that I presented to the world was...dangerous. So dangerous, for so many reasons. And strangely, I guess that is why I kept my cock. Because I knew that I would always want something more. That there could never be enough love in the world for me. Or that a single kind of love would never be enough. Even if I was loved by millions, I would always want to be known by one. And so I kept my penis, as a reminder to myself that I couldn't let anyone in. A reminder that if anyone got too close, I would absolutely be found out. Even if I removed my penis, if I opened to the world, they'd find out it was once there. And they'd never forgive me for letting them love me under false pretenses. My penis was the insurance policy I kept to prevent myself from becoming careless. \n\nAnd even with all that, it hadn't helped. I'd been found out anyway.\n\nBut that's the thing, I couldn't figure out how I was careless here. I had never let anyone see me naked. I wouldn't even strip down to a bathing suit or panties unless I was absolutely sure that my...'secret' was double taped down and flat against my body. Tucked up high between my legs. I'd never had a boyfriend (or girlfriend) and I had certainly never taken any naked photographs for myself. Only a handful of doctors, bound by redundant confidentiality agreements and professional creeds, knew about me. They certainly never took pictures. Did they?\n\nI looked up at the television. Commercials were still on. The sunlight reflected off of a wind chime that hung from the back window of my house. The light struck my eye, blinding me for a second and forcing me to look down. The window. Suddenly I remembered. I knew exactly where the pictures had come from.\n\nMy first day in the house, a couple of weeks ago...I was so happy. I had gotten up out of bed and, without even bothering to put on my panties and my robe (the outfit I was wearing at that exact moment), I had just headed downstairs. The thick carpet in the bedroom felt so good on my feet...the air conditioned air felt so titillating against my bare skin. I hadn't even been able to help myself. I just want to take advantage of the freedom my new home provided. No more roommates. No more windows opening up on the busy alley behind the Chinese restaurant. Just privacy that belonged to me. So I'd walked. \n\nI must've spent...I don't know...twenty minutes just going about my business around the house before I realized it. I was luxuriating the morning sunlight, just like I was doing now. And somehow, it dawned on me that this place was different from my old apartment in a lot of ways. The windows weren't tinted and there weren't bars on the outside because I didn't have to worry about meth-heads trying to break in. The windows themselves were massive. The view went on forever. And while all of that was lovely in theory...it meant that there was an unobstructed view into my house! I had basically dropped down onto the floor then and crawled back up the stairs to my bedroom and got dressed. My face was so hot and red it could've melted steel. Only once I'd gotten completely dressed had I breathed a sigh of relief. I remember say, \"Dodged that one.\"\n\nBut now I knew that I hadn't. Someone had been out there, in the hills or in the valley below. There were dozens of people who followed me around most of the time now to get my picture. One of them had been really enterprising. He had somehow lucked out and gotten a view of me, standing their naked with my tits and my balls out, and he'd snapped some pictures. And now they were included in this \"leak.\" And my career was over.\n\nNo, it was a lot worse than that. My life was over. I couldn't even imagine what was going to happen to me next. I didn't even want to think about walking back up to my room and seeing my phone. I was sure that my publicist and agent had already called to tell me that it was over. I was sure that there were calls from dozens of reporters. And hate mail. If they leaked anything I was sure they leaked everything. I'd have thousands of death threats already with more to come. People who had lied and said they'd dated me or who had just been insinuated with me would be ostracized. I would be more famous than ever but I'd never make any money ever again. I would be publicly humiliated and abandoned. All the love, all the new adoration that I was just starting to get...it would all dry up. It'd be gone. I'd turn to hate. And in a few months it would be gone. And I would be alone forever.\n\nAs these thoughts raced through my head, my body grew tighter and tighter. I could feel the pressure building all around me. I could barely breathe. I wanted nothing more in that moment than to rush back up to my room, to climb into bed and pull the covers over my head. I never wanted to come out. I wanted to stay there until I died of thirst. I didn't want them ever to find my body. The wrong body.\n\nAnd I would've tried too. I know I would have. I would have climbed up the stairs and done...something. But I was locked in place. I couldn't die until I heard the actual death sentence was issued. I needed to hear the television say my name one last time. Finally the commercial was over, the anchor was back on television. She still had her serious look on, like she was disappointed to have to give the news. But I knew the glee they felt. It was such a...big story. I took as deep a breath as I could and watched. \n\n\"Welcome back,\" she said, each word dribbling from her mouth impossibly slowly, \"As we reported before the break...\"\n\n\"Oh Christ just fucking say it!\" I moaned, putting my head down on the kitchen table and gasping for breath. She recounted pretty much exactly what she had said about the Oscar nominees and the adultery before the break, without naming names. I wondered if she was even going to say my name.\n\n\"And, perhaps most shockingly,\" she said and I felt my chest tighten. The whole world slowed down. I could barely hear her above the sound of my body collapsing on itself, \"our sources were able to confirm five of the photographs show clearly that actress...\"\n\n\"Oh Jesus,\" I whispered, unable to say anything else. I had everything I had ever worked for. I'd just about the grabbed the end of the line and now I was ready to start climbing up. And now it was getting yanked from my grasp. And it would never come back again.\n\n\"Bella Radnor, famous for her portrayal of Agent Double X in the Liberty Squad movie franchise is, in fact, a non-operative transgender woman. Needless to say, Hollywood is shocked by these startling revelations. Let's turn to our panel...\"\n\nFor a long moment I sat completely silent in my chair. The television was little more than a buzz in the background. It felt like the entire world had fallen away. The words the anchor had spoken were rattling around in my numb mind and my body was totally and completely still. Everything was totally and completely still. Only one coherent thought managed to make its way from my brain. But I had to say the words in order to understand them.",
        "\"Bella Radnor isn't my name,\" I said, dumbfounded. I wasn't Agent Double X either. For a moment, the reality of what I had just heard didn't really register in my mind. My stomach was still knotted, my palms were still wet. I was still waiting for the other shoe to drop. There was another very long pause before I could think again. I was vaguely aware that the commercials had come back on again. Fifteen minutes of silence. \n\n\"Bella Radnor,\" I said again, \"huh.\" Involuntarily, the corners of my lips pulled back slightly. Before I knew what was happening, I was smiling. The wave of relief washed over me even before my mind fully caught up with what was happening. I felt my guts loosen, I felt a warm wave sort of roll down from my shoulders to my toes. I was breathing again. The light seemed to have flowed back into the room. I laughed a little, incredulously to myself.\n\n\"It wasn't me,\" I said, laughing slightly again. I flopped back into the kitchen chair, nearly panting as I got my breath back. As the tension left me entirely, I was left feeling completely wrung out. My arms dropped down on my sides and I just sort of sagged down. It felt like I'd been up all day, not just digesting my breakfast. I closed my eyes for a minute, feeling my heart rate start to slow.\n\nAfter another few minutes it began to make sense. I really had always been incredibly careful. Like I'd thought before, I had absolutely never consented to have a photo, or five, taken. I certainly didn't take any of myself. I looked briefly out the window again, at my view of the valley beyond. There was simply no way that anyone could have gotten a picture of me. And even if they did, the distances would have meant that it was blurry and distant that it would not have been clear. My cock wasn't big enough to see from a distance. There was no way someone could \"confirm\" my identity from a picture like that. \n\nThe more I thought about it the more silly I began to feel. There hadn't been any chance it was going to be me. The scare I'd had...I mean that was more intense than anything I'd ever felt in my life. But it hadn't really been warranted. The photos were not of me and they couldn't be of me. \n\nStill...it was very strange. \"Oh God,\" I said to myself, \"What are the odds?\" I let out another nervous laugh. A young Hollywood star. A comic book franchise. A transwoman. It seemed like there was no one else in the world that it could possibly describe. How could there be another person?\n\n\"Bella Radnor...\" I said again for the third time. But this was the first time I really thought about that name as something other than simply 'not my name.' It was the first time I realized that if the anchor on television wasn't referring to me, she must've been talking about some real person. For a moment, my stomach locked up again. Not nearly as bad, but still uncomfortable. If this wasn't happening to me, then it was happening to someone else. A real person\n\nNow that I had calmed myself down slightly, I began to think about the person called Bella Radnor. It took me a moment to place her in my mind. I certainly didn't know her personally, I didn't really know many famous people at that point. I still got star struck. I also couldn't really place any movies she was in, though I knew I'd heard the name before. I certainly wasn't watching anything with Agent Double X. Like I said, not a Sci-Fi girl until I got hired to be one. Finally, it clicked. I'd seen her in a romantic comedy like six years earlier. She was a struggling magazine writer and...whatever you know the rest of the story.\n\nShe was young then, very young. She was probably no more than thirty now. I had just seen a picture of her in a tabloid a couple of weeks earlier. She had just broken up with her boyfriend, a comedian or something. She was short like me. She had very long, very straight dark red hair. She had mischievous eyes and thick, pouty lips. She was renowned for her large, shockingly perky breasts, which she exposed in basically any movie that could in any way include nudity. But despite the large breasts, she was very thin, with a very small waist, hips that were only wide in relation to that small waist, and thin wispy legs. The rumor was that her breasts were fake. Regardless, she was stunningly beautiful. And, like me, apparently, she was a transwoman. I could barely believe it. Of course, few would believe it about me either.\n\nAt first, all I felt was sadness. Once I put a face to the name, I could suddenly recognize the humanity of this other woman. She had woken up just like I had, she'd felt the same sudden pang of terror, she'd sweat cold and gagged, and she wondered how it had happened. Unlike me, she hadn't gotten a reprieve. She was living her absolute nightmare at that exact moment. Somewhere else, probably just on the other side of the city, she knew for certain that she was ruined. I felt...I can't explain what I felt. It was relief mostly I guess, a sort of very clear \"there but for the grace of God go I\" sensation. But there was also shame at that feeling. Shame because my relief only existed because of Bella Radnor's misery. Shame also at my body, because it was \"shocking\" to others and always left me on the verge of being \"discovered.\n\nAfter a while, the shame and the relief started to mix together strangely. They built on one another. The sheer volume of my relief threw into focus how deeply ashamed I really was. This made me recognized how relieved I was that I had not been caught. \n\nThen another sort of feeling was added to this. Curiosity. From the moment I placed Bella Radnor in my mind, and thought of how beautiful she was, I knew that I wanted to see. I knew that I shouldn't want to. I knew that even if I wanted to, I was obligated to resist. Of course, that obligation made the curiosity stronger. The taboo. But that was really only a small part of the curiosity. That was merely the surface. The real source of the curiosity, was the spiraling sense of shame and relief. I had to know why I was relieved, I had to see what my shame would have been. I had to know. \n\nEventually, the tension inside of me reached a fever pitch. I was sitting at the kitchen table, my muscles taut and my body shaking all over. I couldn't hear the television. All I had was the overriding need to see the pictures. I needed to see Bella Radnor's shame reflected back at me so that I could truly understand the depths of my relief. My sense of Bella Radnor's privacy failed me. I simply had to go. I had to see.\n\nI shot up from the kitchen table like a rocket, almost rising a foot off of my feet from the seated position. All of the coiled muscles sprung at once sort of. I landed on my feet awkwardly but didn't think about it. Instead, I simply took off towards the stairs, running like someone was chasing me. My bare feet slapped hard on the tile, and then on the hardwood floors as I bounded towards the second floor. I wasn't even really thinking, my body was just dragging me along.\n\nIn a land-speed record, I was diving onto my bed. My iPad was underneath of my pillow and I reached for it as my breasts and my stomach bounced on my new King-sized mattress. I was still bouncing as I flipped off the little cloth cover and turned on the screen. In seconds I was goggling the, \"Bella Radnor leaked photos.\" \n\nAs I had predicted, the news stories popped up first, except of course her name was in the headlines. The first one, from the respectable AP said \"Actress Bella Radnor, 32, photo and gender identity leaked\" another Hollywood paper said, \"Bella Radnor, refuses comment on transgender photo rumors.\" Also, as I predicted, the blogs had dug in. One well-known celebrity blogger wrote \"Bella Radnor's Ballsy Photo Shoot,\" another one said, \"Bella Radnor's Tranny Secret Revealed!\" still another one simply stated \"Agent XY\" and had a picture of Bella Radnor, looking beautiful and scared. I clicked on one of the blogs quickly, knowing that they would link to the pictures, even if the newspapers wouldn't. I didn't read the article, I found the last hyperlink and followed it (the blogs are predictable, they will make you read the thing before you get to see what you're after).\n\nAnd then she was there. There were five pictures in all, I had to scroll down to see them. The pictures were taken inside. The person shooting them was likely no more than four or five feet away from Bella Radnor. The quality of the photographs was very good. They were obviously not professional photographs, but they were taken with a good camera. Each shot was very clear.\n\nThe first showed a fully clothed Bella Radnor. She was sitting on the edge of a four-post bed in a small skirt and a loose-fitting, white blouse. Her legs were crossed at the ankle and her hands were pushed down firmly into the mattress. She was leaning forward slightly and smiling broadly. Her long red hair fell messily and seductively over her eyes. She looked more beautiful than I remembered her being (I guess I'd never really had any reason to notice her though). She was absolutely feminine, elegant even.\n\nThe second photograph was largely the same thing. She was still sitting clothed on the bed with her ankles crossed. Now, however, her right hand was up off of the mattress. Her hand was lift up towards her face and it looked like she was biting one of her knuckles. Her face exhibited a sort of shy, flirtatiousness. What's more, several buttons of her loose blouse had been undone. The shirt had been pulled apart slightly and I could see the gentle swell of each of her breasts and the valley between them. The barest hint of the edge of her right areola might have been visible in the shadows. I couldn't be sure. \n\nBut I didn't have any patience for that. It was not her breasts, which nearly everyone in America had already seen, that interested me. I scrolled down a little bit farther. My heart was thrumming nervously and my fingers were leaving a sweaty streak on the screen. I felt a kind of nervous excitement, like a Christmas morning when you were sure you weren't good enough to get presents. When you knew you were going to be hurt, but you had to find out anyway. When I scrolled a little farther, I gasped aloud.\n\nBella Radnor was still sitting on the bed and she still had her knuckles up to her face. Except now her tongue was sticking out playfully, sort of sitting up on top of her hand, small and pink. Her blouse was now spread completely open and her large breasts were sitting up high on her chest, very perky. Her nipples looked hard. She was still wearing her skirt. But she had sort of flipped it back so that the hem was laying across her bellybutton. What's more, she was no longer crossing her ankles. Her legs were spread wide on the bed.\n\nAnd there, coiled up slightly against her thigh, was Hollywood star Bella Radnor's cock.\n\nIt was soft in the photograph but there was no mistaking it. She was shaved completely bare, maybe waxed and the photograph was well lit. I could see the uncircumcised tip of her penis lying against her leg, the shaft was almost milky white. Her testicles were very large and were a sort of pinkish red color. Bella Radnor had a cock!\n\nThey say that seeing is believing, and I guess that is sort of true. I mean I saw this picture with Bella Radnor's beautiful face and her large, perky breasts and I also saw her pale, flaccid cock. Both of those things registered in my mind. But somehow it almost still didn't seem real. And it was so strange because I had seen my own body in the mirror, I knew that it was possible to have a face and a body that people found feminine, sexy even, and to have a cock between the legs. But somehow...it still didn't feel real that someone else could look the same as me, could be in the same situation.\n\nBeyond shock, I guess I felt something else as well. I wasn't really able to acknowledge that it was there, but it definitely was. Bella Radnor was a beautiful woman. Beyond that, the tension inside of me had grown more intense, more insistent. Seeing her...entire body had done that. It had deepened my relief and my shame rather than resolved either of them. It had grown so overwhelming that I guess my body had tried to find a way to release it. At least...that's what I thought was happening. \n\nWhatever, I won't dance around it now; I was becoming aroused. I could feel my nipples pressing against the soft fabric of my robe where my breasts were pushing into the mattress. My skin felt tingly all over and my mouth was dry. What's more I could feel my...my cock reacting. It was un-taped at the moment. Despite the fact that I rarely became erect (for a whole host of reasons really), I could feel it quickly filling. I could feel a slight hardness against my leg.\n\nBut I didn't really acknowledge that. I couldn't acknowledge that. Instead, I kept my eyes on my iPad screen and scrolled down farther. If I had been shocked at the third photograph, I was absolutely dumbfounded by the fourth. The skirt and the blouse were gone (maybe I could see them piled on the floor, I didn't really look). Bella Radnor was completely naked except for a small necklace. Her right hand was no longer up by her face. Her mouth was no longer obscured and I could see that she was smiling brightly. The hand was now down, grasping her own breast gently, her fingers sinking into the skin. But that wasn't the most unbelievable part of the picture. Her legs were still spread and her left hand was no longer on the mattress. Instead, she was reaching between her legs. Her fingers were wrapped tightly around her cock, which was now quite hard. It had grown more than I'd expected and I was surprised that the milky white shaft was poking out of her fist several inches. The tip of the cock was facing almost directly at the camera, her foreskin stretched taut.\n\nAs my eyes devoured the picture, my body involuntarily reacted. The tension was too great, I couldn't help it. I pushed my chest down harder into the bed, letting friction play on my nipples. My cock was about as hard as it ever got at that point (not nearly as hard, or large for that matter, as Bella Radnor's, but more than enough) and I was grinding my hips slowly against the bed, feeling the rush of sensation up my spine. However, I didn't acknowledge I was doing this. I just kept my eyes on the picture, trying to comprehend its dark magic. Trying to wrap my mind around the reality of the rigid flesh between the movie star's legs.\n\nBut I knew that there was still one last picture. One more piece of \"evidence.\" So I somehow managed to pull my attention away from Bella Radnor's cock, grasped in her palm. I started to scroll down once more. Quickly, almost too quickly. But I got the final picture lined up across the screen. When it came into focus and I registered the image on the screen, I gasped aloud and pressed my cock down hard into my soft mattress.\n\nFor the first time, the perspective of the photographs had changed and Bella Radnor was no longer sitting on the edge of the bed. Whoever was taking the photos was now clearly standing on top of the bed, looking down. Bella Radnor was on the floor below, lying on her back. Her body from the top of her head down to below her knees. Of course, that was only because her legs were splayed wide where she laid on the ground. She was still completely naked now and her left hand was still wrapped around her hard cock, which she was sort of pulling up towards the camera. \n\nMore shocking, her right hand was no longer on her breast. Instead her entire right arm had sort of snaked down her body. Her breast was resting against her bicep and it was pushed up, her nipple fiercely erect. Her arm had actually slipped down between her legs and her hand was sort of...hooked back up towards her body. You know, bent at the wrist. At first, I really didn't really understand what I was seeing. I noticed thumb and index finger sort of curl up against her taut pink balls. I could see clearly because her balls were sort of flipped up on her body and they looked a little smaller than before. I also saw her pinky finger and ring finger pressing against her palm. But I didn't see her middle finger. It was only after looking extremely closely that I realized what had happened. Bella Radnor's middle finger was buried all the way to hilt in her own asshole!\n\nBefore the full weight of that realization could dawn on my mind, I made another startling discovery. I couldn't believe that I hadn't noticed it before. There was a gooey mass of pearly liquid pooling in Bella Radnor's bellybutton! But that was just the start. There were dribs and drabs of the white stuff up across the length of her taut abdomen, some spots larger than others. There was even a droplet on her left nipple! But it didn't even stop there. In the hollow of her throat, a pool almost as large as the one in her bellybutton had formed. Finally, there was a large splatter across her chin. Bella Radnor was looking directly into the camera's lens, her eyes half open looking sultry. She was biting her lower lip. Actually, it was clear that her teeth had overshot her lower lip, cutting the final pool of milky liquid in half! A few drops of her own cum must've been in her mouth.\n\nThe final picture was far more than I had ever expected. First of all, this wasn't simply a leaked nude photo. It wasn't even a leaked nude photo of a transwoman. It was a photo taken in the direct aftermath of an orgasm. Bella Radnor's face was positively glowing with her release. Seeing her like that, and knowing that everyone in the world could see her like...It drove home the absolute exposure she'd experienced. It was far worse than I'd expected. This most private moment of pure bliss...stolen from her forever. \n\nWhat was even more terrible, at least from my perspective, was that the betrayal and the humiliation and the glimpse into this private moment, made her all the more beautiful. I suddenly found that I adored her. I couldn't believe that I would ever think another woman was more attractive. And my body was absolutely on fire now. The tension that I could barely acknowledge had reached a point of horrifying power. I felt like my mind and my body were no longer my own.\n\nI kept the final picture framed in the center of my iPad. In fact, I took a screenshot of it. But I sat up quickly on the bed. I began to desperately remove my clothes from my body. I knew that there was really only one way that I could end this tension. I must've known what I was going to do from the instant I began to walk upstairs. But the need had become all-encompassing now. \n\nI essentially tore the robe off of my body, letting it fall on the ground. I looked down at my breasts, jiggling slightly at my frantic motions. My nipples were stick up high and hard on my body. I looked down quickly at the picture. My breasts were slightly smaller than Bella Radnor's. Hers were sort of a heavy, round shape while mine were extremely perky teardrops. Her nipples were larger and redder too, mine pinker and smaller. But it felt good to compare them anyway. I moved my hands up, grasping my breasts and kneading the skin. I felt my nipples press like little bullets into my palms. I arched my back, threw my head back and moaned. I squeezed harder, feeling my flesh press between my fingers. My breasts had never been so sensitive.\n\nBut I needed more than that. I looked down between my breasts. I could see my tight red panties. More than that, I could see the small (but larger than usual) bulge. Usually, I would do everything in my power to ignore that little bulge. I rarely ever touched and I played with it...once a year...maybe? But today was different. Today I desperately needed to get at it. I dropped onto my ass on the bed and, in the same instant, hooked my thumbs into the waistband of the panties. In a moment, I lifted my hips up off the bed and ripped my panties down my legs. I felt a wet spot in the front, precum I guess, as I wadded them up in my hand and threw them across the room. Once again sitting on my ass, I spread my legs wide. I looked down.",
        "My cock was small I guess, I don't know I've never seen another one in person before. It was around three inches long when it was flaccid, sort of dwarfed by largish balls (the most difficult thing to conceal). Definitely smaller than Bella Radnor's flaccid penis had been. When I was aroused it would grow much thicker and a little bit longer, maybe four inches, four and a half like now when I was really aroused. I was circumcised, the tip was the same pink color of my nipples. The shaft was the same olive color as the rest of my skin and it was very smooth, not veiny. Like Bella Radnor, I was waxed totally smooth (something I did myself). My cock was now quite hard, and listing a little to the left, but not touching my thigh. It ached like I'd never felt before, my balls felt impossibly heavy.\n\nAs I said, I was not very experienced with sex. I mean I was virgin, but I wasn't even very experienced with having sex by myself. But that day, I knew exactly what I wanted. My right hand returned to my breast, pinching at the nipple and kneading the skin. At the same time I flopped back onto the bed, on my back. My head was now on the pillow and I adjusted the iPad so that it was resting on the pillow next to me. I turned my head so I was facing it. At the same time I spread my legs wide.\n\nMy left hand now started to snake down my body. I felt my palm move down across my abdomen, over the swell of my stomach. I felt my fingertips graze my rigid cock. I gasped slightly. My entire body thrummed as the pads of my finger pressed into my smooth skin. I'd never felt anything like it before. I didn't know that I could be so...sensitive. As my cock became used to my touch, I carefully wrapped my fingers around it. The flesh felt harder, tauter than I'd ever experienced before. It was like I could feel the muscles tightening against my palm. My fingers wrapped all the way around myself and I moaned gently. I began to move my hand up and down on my shaft, very slowly, but very tightly. I was afraid that the pleasure I felt would be too intense if I moved more quickly.\n\nInvoluntarily, my right had had begun to squeeze on my breast more tightly. I loosened it slightly as the skin was starting to ache. I looked over at the picture. I looked at Bella Radnor's eyes. There was something about the glint in them, the way she was looking at the camera...it felt like she was looking right at me. I mean, it was like she was seeing me through the photograph. I knew that wasn't the case, I hadn't lost my mind or anything. It was just a feeling, it made me tingle all over...just the thought of it.\n\nI started to pull a little harder on my cock. Not faster, if anything slower, just harder. I tugged hard on my skin so that it pulled up, sort of wrapping up over the bulbous tip of my circumcised cock. I pulled my skin so tight that it actually started to look like I still have my foreskin. When I pulled it all the way up, I held it there. I think the only thing keeping me from finishing right then was the pressure around the tip. I had barely noticed that while I had been doing this, my eyes had moved from Bella Radnor's sparkling eyes down to her rigid cock. It was beautiful.\n\nBut that wasn't the only surprise. The pressure on my breasts had completely dissipated. I was nearly shocked to see my right hand snaking down my body. I felt my palm glide down over my ribs, across the side of my belly and then against my hip bone. My hips were flexing then, my legs spreading wider, spreading so they looked like Bella Radnor's legs. It was only when my hand started to slide down the olive expanse of my inner thigh, in between my legs that I realized I was moving it at all. And where it was going.\n\nEven when I understood what I was doing, I didn't stop. I kept my left hand grasped tightly around my throbbing cock and I kept my eyes on Bella Radnor. I was looking at her smooth belly now, marveling at the pearly liquid that was spread all over it. Wondering how warm and silky it felt against her skin. \n\nIt was while I was reveling in that thought that I felt my fingers on my right hand gently brush against my scrotum. My balls, feeling heavy and weighted, seized up slightly as my nails grazed across them. I moaned and stared at Bella Radnor's tight little balls. My fingers kept pushing forward and after a half second I groaned loudly and felt a sort of electric sensation in my shoulders. I could feel the sensation pulsing up through me. And it started right were my long, slender index finger was pressing against the crinkled, dense flesh of my anus.\n\nI had never, ever even thought about incorporating anything like...this into my solo activities. I didn't even know that it was a thing that someone could do. But as the pad of my finger started to slide against the folded flesh, I felt my nipples grow even harder. Goosebumps broke out all over my body. The thousands of little nerves around my asshole came alive, tingling. I'd never felt anything like it. My hand, wrapped around my cock didn't so much stroke anymore, it sort of rippled and pulsated around the taut flesh.\n\nI stayed in this position for...a long time. I really cannot say how long. My left hand continued to throb around my hard dick while my left hand fingers played teasingly at my anus. My skin felt like it was on fire with some sort of frozen flame and my nipples ached to be pulled. But I couldn't move my hands. And I couldn't move my eyes either. They scanned up and down Bella Radnor's nude body, taking in every inch of her beauty and her humiliation. My own touch was powerful, but I knew where the sexual tension and the desire was really coming from...it was from the picture.\n\nAfter a while, this tension grew too great. The arousal and shame were still spiraling up and up, growing exponentially with each passing minute. And I knew that I needed a release. And I also knew, more importantly, that I wasn't done. I wasn't yet...I didn't yet really know what it was to be Bella Radnor. Or something like that. \n\nRegardless, my fingers on my right hand brushed one more time against the tensed skin of my anus. It felt wrong to move them away, to change my position, but I knew that I had to, so I moved quickly. Like I said, I'd never incorporated anything having to do with...my ass into any of my sexual exploration before. I'd never seen anyone else, not even internet porn or anything (I hardly ever looked, and then only for very tame things). But I knew enough about the mechanics of the body to know that I needed lube. What's more, I knew that I didn't own any kind of lubricate, at least not actual lubricate (moisturizer, lotion, that kind of stuff, maybe). So I needed to make my own.\n\nMy right hand quickly flew up to my mouth. I didn't even really plan what I was doing, or think about where my fingers had just been. Instead, I hungrily took my fingers between my lips. In a moment, I felt my tongue pressing against my fingertips, bathing them in my saliva. My fingers, especially my index finger, had a strange, earthy flavor to them. It was bad or dirty, I wasn't unclean. It was just...different. And exciting. Soon my tongue was flying around my fingers, sliding in between them and coating them in spit.\n\nAs good as it tasted and felt to lick at my fingers, I continued to stare at Bella Radnor. It felt almost like she was moving. Like she was there next to me, pushing me forward. Begging me to be like her. I almost felt like I saw her wink at me, with those sparkly eyes. That was enough for me. I left a large glob of thick, white saliva on my fingers. I quickly moved my fingers back down quickly, back between my legs.\n\nMy left hand stopped undulating around my cock (which was now far harder than it had ever been). I just held tight while my right hand once again found its way underneath of my balls. The saliva had grown cool on its rapid trip down from my trembling lips and I shivered a bit as the pads of my fingers pressed against my anus. In order to warm it up, and to lube up my asshole, I began to spread the saliva around. With my fingertips soaked I explored the gentle folds of my skin. Soon, the whole area felt slick and warm. I closed my eyes for a moment and moaned loudly. But soon I opened them again, so that I could continue to look at Bella Radnor. I saw a glossy, glowing spot on the visible top of her asscheek, the spot where her own lube or spit was spread. That seemed like a sign.\n\nThe middle finger on my right hand was still very wet from my lips and my anus was extremely slick. I didn't really know what I was doing, but, in all honesty, it wasn't rocket science. Besides, my body seemed to know instinctively what to do. My hips pressed down and my fingers pressed up on their own accord. I felt my fingertip press against the dense skin of my anus. It naturally slid down towards the middle, towards my slick opening. I pushed harder and I felt a slight pinch. It hurt...but it felt good as well. \n\nI pushed harder. It seemed like my body recognized what I was trying to do and, after a slightly more intense pinch, my asshole sort of...gave way for me. It opened up to my finger. I felt the crinkled skin part and the tip of my finger entered my body. I was so wet that I slipped easily in to the first knuckle. I gasped at the sudden sensations. My insides were slick and tight and squeezed tightly around my finger. I felt so incredibly full, like that little finger tip had taken up all the space inside of my body.\n\nMy eyes flickered over to Bella Radnor. I saw her fingers pressed tightly up against the skin of her ass. I her knuckle pressing hard against her tight purple-pink anus. I didn't hesitate. Despite the pressure, I kept pushing my finger harder and deeper into my body. Every millimeter felt like I was going to break myself in half, but then my body would make room for me. My insides grew warm, softer, more pillowing. It was only squeezing me uncomfortably tight right near the anus. The rest of my insides felt welcoming. And electric. Soon, I wanted to get more inside of me. I kept working, sometimes pulling out slightly to get a better angle, but always working to fill my body. \n\nDeeper and deeper I went, thrusting my finger into my asshole until...I felt my knuckles press against the hot skin of my ass. I pushed again, feeling the intense resistance of my body and moaning loudly. Then I realized what had happened. My finger was completely inside of my asshole. I groaned at the realization and, for the first time, I allowed myself to feel what I was feeling. \n\nMy finger felt divine. The insides of my asshole were so...perfect. I'd never felt anything like it. It was so warm...so smooth. It was tight without being constricting. My anus held my finger in place, but it no longer felt uncomfortable. It felt like it was keeping my hand close, keeping it where I would feel the most pleasure. And the pleasure was not relegated solely to my finger. No, my entire body felt warm. Nerves and tendrils shot out from my anus and swept all over my body. Even the slightest movement of my last knuckle would send waves of pleasuring shooting off in odd, unpredictable directions. More hit that perhaps any other spot was my nipples. They were straining very hard now, they look like they wanted to burst. But it was even more intense in my cock. I can't really explain what it felt like. But there was clearly some connection between my dick and my asshole. I sort of instinctively stroked my insides with my finger and my cock quivered and vibrated in response. \n\nThe sensations were so beautiful and so all-encompassing that, for a moment, I had nearly forgotten what I was doing. But my eyes fluttered while I moaned and, once again, Bella Radnor filled my field of vision. The whole photograph now. Every inch of her beautiful, debased body. I looked away for a minute, looked at my own body. I saw the swell of my breasts with the hard little nubs of my nipples point up towards the ceiling, I saw the gentle slope of my flat stomach and then I saw the shaft of my penis growing up, pointing between my breasts. The tip look dark red, squeezed in my left palm, my skin pulled up tight around it. I saw my balls below that, slung low between my legs. I saw my right hand, pressed hard against my asshole, I could feel my finger inside of me. I turned back to Bella again. It was perfect...we were the same.\n\nThat thought broke any sense of control that I had over myself. I kept my eyes on Bella Radnor, but I couldn't deny myself any longer. I had done it. I had done all of it. And that had pushed the arousal and the shame to equal heights. Those emotions were towering over my body, too heavy and too narrow to stand any longer. I knew that they were going to come crashing down. And I needed to make it happen.\n\nMy left hand began to frantically stroke my cock. I was no longer holding up skin up against the tip, I couldn't think about that now. I just kept my palm against the smooth, hard flesh of my dick, squeezing up and down as fast as my hands could move. At the same time, my finger moved frantically inside of my ass. I had no idea what I was doing, so I made up for it in the passion of my movements. I curled my finger, feeling all around my insides. I shoved it hard into myself, pushing it as far as I could.\n\nWith Bella Radnor in my vision and in my head, I couldn't last long. It was probably only another couple of seconds at that point. I felt the physical aspects first. I felt my back arch extremely hard and my feet planted on the bed. My ass lifted up off of the comforter and my fingers and my toes clenched tight. My balls sort of seized against my fingers. I wanted to close my eyes, but I kept them open looking. The tension built to an unbearable crescendo.\n\nThen it happened. I'd never felt anything like it. There wasn't a sort of building up of sensation followed by a slow, steady drop off. Instead, I was hit with the full force of an orgasm in the span of a single second. A feeling of intense, electrical warmth spread out from my cock and then rocketed through my body in more time than it took me to gasp at the power of the feeling. I could feel the orgasm pulling in the energy of my arousal and my shame, pulling them together and fusing them in the intense heat of my pleasure...it was something more than an orgasm. All of my nerves were overwhelmed at once. Everything physical and emotional...it was all just too much. It isn't possible to describe. I can't convey what I felt. I just knew that this was more than masturbation. It was more than even sex. It was...something deeper.\n\nWhile the sensation of the orgasm happened in half an instant. It took me a little bit of time to recover. I lay on the bed, panting and moaning for nearly a minute afterwards, trying to remember who I was and how I had gotten here. Slowly, my eyes sort of came back into focus. The normal sensation of my skin came back to me. I could feel warm pools of wetness then. My eyes fluttered down and I saw...oh God it was too perfect and terrible. I had cum more than I had ever cum before. In fact, my cock was still twitching and dripping in my hand. I looked...just like Bella Radnor. There was a pool of cum in my bellybutton, warm and smooth. There were drips all up my body, I could see some on my right nipple. There was cum in the hollow of my neck. \n\nA sudden thought seized me. I didn't even need to look. Quickly bit my lower lip, my teeth and my top lip draping over it. Just like I'd hoped (and known) I felt a wet warmth against them. In a moment, I felt an unfamiliar, salty, exotic taste fill my mouth and my nose. For the first time in my life, I tasted my own sperm (or any sperm really). And the taste was wonderful and horrible all at once. I let it slip into my mouth, I let the stick liquid drip over my tongue and the scent fill my nose. I swallowed it down, loving and hating it. But I kept biting my lip.\n\nAnd, once again seemingly on instinct, my eyes turned back to Bella Radnor. And there she was, looking at me on the iPad screen. And I knew that I looked exactly like her. Exactly like her in every single way that mattered. And that the only thing different was that I was hidden and she wasn't.\n\nJust like that, a spell was broken. And I started to cry. And I didn't stop for the rest of the day.\n\nPart II: The Fallout\n\nA lot changed after that day I guess. Most of it for the good and almost all of it unrelated to Bella Radnor's problems. Production continued on my show and there were now official, serious negotiations in the works between my agent and the studio regarding my movie tie-in. From what I understood, my silver screen debut as my character from Fallen was a matter of when, not if. More importantly, my profile continued to rise. I was all over magazines and tabloid shows like before, but now I was getting interviewed on national and international media to promote my show. I was on Conan and a couple of those other late night shows, even a few late-night shows on the BBC. My face was everywhere and my name was everywhere. Jayne Catalina: It Girl. And it was all so exciting. And terrifying. I guess some of the fear is just the nature of fame: losing yourself to the masses who love the idea of you. But of course, for me, it was so much more than that. \n\nIt was Bella Radnor.\n\nBecause as I watched my own star begin to rise, I watched from afar as Bella Radnor's dropped. I guess I was torn by twin impulses. On the one hand I felt completely ashamed of...everything about Bella Radnor. I knew that I had violated her privacy (along with thousands of others) and I tried to be respectful now, to make up for it. I tried to avoid learning about what was happening with her, I tried to respect her privacy. But the old curiosity was still there. I still wanted...hell, needed to know what was going on with her. And so while the better angels of my nature tried to steer me in a respectful course, I always found that I circled back. Back to the tabloids and the blogs, to find out what had happened to her and where she would go next.\n\nIt had taken a long time for her to resurface after the data breach. She kept total silence for days and that just seemed to feed the monster. I guess some people were waiting for her to come out and deny everything somehow. Like claim that the transwoman in the picture was her stunt double or something and put an end to it. And then, when she didn't say anything, it set in with the world who she was and what she was. And people freaked out. I mean all over.\n\nOf course there were the bigots and they were by far the worst. I went onto a story one time to read about her, right before she broke her silence, but I immediately scrolled down to the comments. They were...too brutal to recall now. Suffice it to say that in the imaginations of the confused and \"betrayed\" conservative males of the internet, Bella Radnor had been raped and murdered a million times over. The more polite bigots weren't much better. Even politicians and television personalities had to pile up on Bella Radnor for \"lying and deceiving\" the public. She was diagnosed by TV quacks and pundits alike as mentally unstable.\n\nAlmost as bad though were Bella Radnor's so-called \"allies.\" People popped out of the woodwork with demands on her. Some, before offering any kind of support, berated her for not being \"open\" about her identity from the beginning. Then they essentially demanded that she become a spokesperson for LGBTQ Rights. Like right at that moment. To come out of her humiliation and be a hero to a community that she didn't even really know or understand. It was like they only saw her as a symbol or a means to an end. They didn't recognize that a person was there and that she was hurt.\n\nShe made that abundantly clear when she finally returned, briefly, to the public world. Her nationally televised interview on prime-time news was a national event. The ratings were spectacular. I know because the news that night was my lead-in. Residual viewers gave me the highest ratings for Fallen in the history of the show. And it was during sweeps.",
        "Anyway, she came onto the news program for her interview and just looked...destroyed. It wasn't that she was no longer beautiful. Far from it. She was just as feminine and lovely as she had ever been. Maybe more so, because she had a sort of willowy, broken look that she hadn't possessed before. No...it was more than that. Everything was exposed now, it was all on the surface and her vulnerability made her more beautiful, but also more damaged. \n\nThe interview didn't go well. She explained that she had agreed to the interview against her publicist's advice. She wasn't wearing any make-up and didn't look prepared to answer any questions. In the end, she was almost begging the viewers at home to respect her privacy and to pretend that nothing had happened. She asked for everything to just go back the way it had been before, that she was the same person she had always been. She cited examples of other female celebrities who'd had leaked photos and then gone back to their lives. Everyone thought it was hilarious. SNL did a cold opening about her (at least a woman played the role). \n\nUnder pressure from LGBTQ groups (and perhaps their own consciences), the producers of the new Liberty Squad movie publicly stated that they intended to bring Bella Radnor back to reprise her role as Agent Double X in the film that was going to start production in a couple of months. The Hollywood papers said that they then low-balled her agent severely, trying to get her to walk. Everyone knew that no other major production was going to want her, she was too tainted. Her agent took the deal, but she never showed up to filming. The character was scraped from the movie and Bella Radnor essentially ceased to exist.\n\nCeased to exist to everyone but me that is. I still thought about her almost constantly. For the most part I thought about her every time I considered my growing fame. I knew that the higher my profile got, the more information the public would crave about my personal life. They would dig deeper and deeper. I didn't know what they would find...I tried to be so unbelievably careful. But they could find out. There were always leads to chase. At any minute, Bella Radnor's life could become my own. Her data breach...it had stolen her privacy. But it had absolutely destroyed my peace of mind. I could never, ever be comfortable again. I could never completely enjoy the fruits of my fame. I had to shut more and more of the world out the more famous that I became. In order to keep my fame I had to deny myself the love that I'd hoped to gain from it. It was fame and it was work. And that was it.\n\nBut it wasn't only in relation to my professional life that I thought about Bella Radnor. Far from it. I remember once, shortly after the data breach first occurred, that a journalist actually asked me about Bella Radnor. Just trying to get a reaction. I had mastered myself (I had prepared myself for such a questions because the news was so big. I didn't want to look terrified) and shrugged. I said that a person's private life was theirs and I had no intention of violating Bella Radnor's privacy. But, of course, I was violating her privacy every day.\n\nI had saved the five leaked photographs on my iPad. I looked at them...so very often. I had memorized every inch of every photograph. If I closed my eyes I could see every shade of color on her skin, I could trace the shadows against the wall. If I'd had any sketching ability at all, I could've drawn each photograph in perfect replication. I could paint hair, eyes, lips, breasts, legs, balls, and dick with ease. \n\nAnd it wasn't just looking or imagining. I found that every time the twin pressures of my fame and my terrible secret became too great, I would return to my pictures of Bella Radnor. I looked at her because I knew, without a doubt, that she would understand the pressure I was under. And I looked at her because I knew that she could give me release. Whenever my anxieties became too great, I would find a place...any place with privacy, and I would prop my body up so that I looked like her. And before I knew it, I would be naked with my left hand around my cock and my right middle finger buried in my asshole. It had become almost a ritual, a religious rite. And I would finish quickly. And for a moment I would feel a...resounding and needed peace. And then it would fade. And I would be alone again, Bella Radnor would leave me and re-enter her picture. And I would cry in the fear for my future and the shame I felt for yet another trespass.\n\nI guess I thought that would go on indefinitely, that kind of life. Maybe I hoped that it would. Because really, the only alternative I could imagine to the constant anxiety of my life and fame was exposure. And as difficult as it was to live each day in fear, I knew that living in a world where everyone knew the truth would be a thousand times worse. And so I hoped that my life of isolating fame, exhausting work, and limitless tension would simply last forever. But, in the end, that wasn't meant to be.\n\nBecause of Bella Radnor.\n\nIt was about seven or eight months after the data breach (okay it was seven months, sixteen days, and nine hours. I was obsessed) and I was at a comic book convention. Not THE Comic-Con in San Diego. I didn't really understand how any of that stuff worked. I had received an invitation to appear at a \"Comic-Con\" in Jackson, Mississippi. I knew that Comic-Con was a big deal, like 150,000 fans coming to see their favorite stars. Jackson seemed like a strange place to hold it, but I figured that just meant that they wanted to go somewhere where the hotel rooms were cheap. I thought it would be a good opportunity to connect with the people who paid my bills but in a safe sort of environment. Just love directly from the fans. Only after I had accepted had my agent explained to me that there wasn't one Comic-Con, but a bunch of them and that I had agreed to go to one of the lowest profile ones around. He encouraged me to just drop it, but I'd already made the commitment.\n\nIt had turned out to be sort of great. The city was lovely in its own way and I was by far the biggest star there. I mean if I had been at a bigger convention, I still think I would've gotten a good deal of attention, don't get me wrong. But when my biggest competition in terms of stardom was a car that someone drove in a Jurassic Park sequel, it wasn't even a contest. I got treated like a goddess by everyone there. The organizers said that in the first day the attendance of 8,000 people was, by far, the largest crowd they'd ever had. They put me up in a beautiful presidential suite in the Hilton and catered to my every whim. \n\nMore than that, I got to interact one on one with my fans. They came up to me, shy sometimes, bold other times. They told me about the way my work had made their lives better. They tried to get me to laugh or to blush. They had me sign things or take pictures. Or whatever they wanted. I was up for anything. It was just... great. It was everything I had always wanted from fame. I was let into these people's lives and they gave me back their love. It was almost enough to make me forget about the constant cloud of anxiety that hovered just above everything that I did.\n\nThat is, until the second day. It started the same as the first day, maybe even with a slightly larger crowd. It wasn't until around noon that it happened. My hand was cramped from autographs and I was desperately hungry. I'd woken up too late for breakfast and I didn't think it looked good to chomp away at the table while my fans were trying to talk to me.\n\n\"Sorry guys, I need a short break,\" I said, after signing one last autograph. There was an audible \"aw!\" from the crowd and I smiled, \"I won't be long. I promise I am coming back.\" I said and I was greeted with cheers and smiles. Then I headed back out towards the door leading to a back room where catering was set up. My stomach was rumbling just thinking about it and I moved briskly. People saw me and stared, but they mostly just let me walk.\n\nI was putting my hand on the door to the back room when I heard a bit of a commotion. I followed the noise and turned my head to the left. The front doors to the convention area were only about 20 feet away from me now. They were opened wide and the sun was shining in. Splitting the distance between the front door and my location was a small yellow plastic rope. This marked the barrier separating \"guests\" like me from the general public. My interest piqued by the sudden racket, I turned towards the rope and walked over. I stopped with my hands on the plastic, looking towards the door. Despite the fact that I was only a few inches from the crowd now, no one seemed to notice me. That's because there was a whole different level of spectacle going on, right in the front of the building. \n\nAt first I couldn't really tell what was going on. I saw security trying to manage the crowd and I could hear shouting. More than anything else, I could hear an irate woman's voice shouting. After a moment, the crowd shifted and I briefly caught a glimpse of the source of the voice. The source of the commotion as well. She was running, it was a bit of a blur. I couldn't make her out at first. Then a large security guard sort of lunged forward and wrapped his arms around her. She cried out and shook around slightly before, panting heavily, she accepted that she had been caught. Slowly she looked up and, for a brief second, our eyes met across the convention hall.\n\nIt was Bella Radnor.\n\nI gasped and put my hand over my mouth. I couldn't believe that she was here! Why was she here? Did it have something to do with me? Did she know that I was...looking at her? Did she know my secret as well? How did she know these things? The thoughts swirled dizzily in my mind and I felt light headed. I gripped hard on the yellow plastic rope, trying to keep from falling down.\n\nBella Radnor looked as beautiful as ever. Her eyes were shimmering with a kind of feverish intensity, her hair was mussed but in a sexy sort of just-got-out-of-bed way. She was wearing a sun dress with thin shoulder straps, a low cut that showed off her cleavage, and plenty of exposed legs. Her makeup looked professional, except for a little smearing from her altercation. The guard's hands were wrapped around her thin waist, keeping her in place.\n\n\"Goddamnit,\" Bella Radnor yelled, shaking and panting, \"I was invited to this...this fucking convention!\" The guard didn't say anything. He just looked over her shoulder. I followed his gaze and I saw a convention director who I recognized walking briskly through the crowd.\n\n\"Ms. Radnor...is that you?\" he asked. The word \"Ms\" hissed out of his mouth like it was some sort of joke. I felt my insides knot. The crowd began to murmur louder as it seemed that their suspicions were being confirmed. This was the famous Bella Radnor. The secret tranny. There was a sort of titillated excitement coursing through the crowd.\n\n\"Tell this asshole to let me go!\" Bella Radnor responded. The convention director looked at the guard and sort of waved him off. The guard shrugged and let go. Bella Radnor stumbled forward slightly, turned and gave the guard the evil eye, and then looked back at the convention director. She straightened her dress and ignored the crowd.\n\n\"Ms. Radnor, what seems to be the problem here?\" the director said. He spoke in such a condescending way, it made me angry. The crowd sensed it too. But they seemed to be behind him. There was a show, and everyone wanted to watch and see if justice and the side of right would prevail.\n\n\"They demanded that I pay for a ticket at the front door. I am here to sign autographs and they are charging me to get in!\" Bella Radnor explained, sounding indignant and haughty. But I could see the fear in her eyes now, as the crowd closed in. She was acting tough.\n\n\"Ms. Radnor...you are not slated to be here. If you want to enter the convention, you need to pay...\"\n\n\"I have a fucking invitation here,\" Bella Radnor explained, then she looked down at her purse and started digging around inside of it. After a moment, she produced a paper.\n\n\"Ms. Radnor, we invited you here months ago...Nearly a year ago actually,\" he said significantly, he then looked around the crowd as if to assure them that the invitation had been mailed before he realized the actress was some kind of pervert. Then he continued, \"And you never responded. We assumed you weren't coming. We are a small convention. We are often rejected\" He acted wounded. Like she was one of the ones who had hurt him personally.\n\n\"Well you assumed wrong,\" Bella Radnor said, \"Obviously, I am here. Why make a big deal about it? Find me a table and I will sign autographs or take pictures or whatever.\" She was trying to sound calm, but there was a note of desperation in her voice. I squeezed the rope harder, unable to look away but unable to do anything either.\n\n\"I am afraid there isn't enough space. You are more than welcome to enter the convention. We would never bar anyone from entering. But there simply isn't enough space,\" the director explained.\n\n\"Christ I can see space fucking everywhere!\" Bella Radnor said, she started pointed, \"Look, there are empty tables left and right. I don't need anything special, just let me in!\" She was growing slightly frantic and the guard began to look nervous. What's more, her nervous energy was spreading to the crowd. They were growing louder, more unruly. I could overhear conversations now. The words \"shemale,\" \"tranny\" and \"freak\" were buzzing in the air. I tried to shrink back\n\n\"There isn't space!\" the director thundered.\n\n\"Take a fucking hint dude!\" a voice called out from the crowd, \"You aren't wanted here.\" That brought out a laugh from the crowd. I winced as the word \"dude\" hit my ears and I saw Bella Radnor recoil like she'd been hit. Other taunts started to come out from the crowd. The director raised his hands as if to quiet them, but there was too much noise now. The guards backed away from Bella Radnor, moving out to keep the crowd from closing in around her. I pushed forward, my body stretching the yellow plastic rope, afraid.\n\n\"Listen, I am sorry I didn't confirm...My agent...did all that stuff. I...listen I need this...I need the money. I need to sell my autograph,\" she said. I felt ashamed. Charging for signatures...I saw the color rise in her cheeks. The haughty attitude had withered now, she was shrinking into herself. The shame was evident. I could barely hear her, her voice like a whisper in the din of the crowd. My stomach knotted tighter and I bit my lip. What was going to happen here? It was getting ugly.\n\nI was leaning forward now, almost over the line. I could hear the crowd murmuring louder. In fact, I could hear a conversation next to me. A young woman was speaking with a young man. There was a disgusted looked on her face. She said, \"It's not even what...she is you know? I meant there's that other one on that Netflix show about the women's prison. I don't care about that. That person is open about it. But Bella Radnor tried to pretend that...she isn't a man. And that's just wrong.\" The man nodded in agreement. I felt my blood running cold. \n\n\"I am sorry Ms. Radnor. I really am,\" the director said, sounding almost like he meant it, \"but there is nothing I can do. It would probably be best if you'd just leave.\" \n\n\"Leave! Leave! Leave!\" a couple of voices in the crowd started to chant. A few more caught on after a few minutes. To be fair, I saw many who seemed disgusted by the spectacle and who were unnerved by the anger of the crowd. But they were drowned out by the vocal minority who finally had a chance to humiliate Bella Radnor to her face. Perhaps they were making her pay for whatever attraction they'd felt towards her before they knew. Probably more than anything else, it was just that some angry people had gotten a whiff of weakness and desperation and they decided to make a game out of it. I don't know.\n\n\"If anyone,\" Bella Radnor said and then her head dropped, her shoulders bunched. I saw her shaking slightly and her voice became pitched, battered-sounding, \"If anyone has any of...those pictures... the ones...I will sign them even. I will sign them if you pay enough.\" The crowd reacted to this in a roar. Bella Radnor looked totally defeated and humiliated. There was laughter and there was taunting. People started pushing in. More security arrived, pushing through the crowd to keep them clear. I felt ill. I couldn't believe what she had offered. I couldn't imagine what she must've been feeling. Or maybe I could imagine and I didn't want to.\n\n\"Ms. Radnor!\" the directed shouted, \"Stop it, you're embarrassing yourself!\" Bella Radnor looked up now. I could see tears streaming down her cheeks and her eyes were fiery. She was biting her lower lip and shaking her head vehemently.\n\n\"Embarrassing?\" she asked, \"Embarrassing? You think I am embarrassing myself now? What dignity, exactly do I have left sir? What good has my self-respect ever done me huh?\" Bella Radnor threw her hands over her head and then let them drop heavily to her side.\n\n\"Ms...\" the director started.\n\n\"Don't 'Ms. Radnor' me, I know what you think. I guess I know what all of you think. What everyone will ever think,\" she called out, looking around at the crowd. The people embarrassed or ashamed by the spectacle had trickled away, shaking their heads (some even crying at the emotional, humiliating nature of the scene) leaving only the tormentors. They laughed and jeered as she spoke, but remaining quiet enough that they wouldn't drown her out completely. \n\n\"No matter what I've done or...the ways that I have entertained you over the years...everything I gave you and you gave back to me...none of it matters...I am just this!\" Bella Radnor said. And as the last words fell from her mouth, I saw her hands rising towards the hemline of her dress. I saw her fingers wrap around it, start to lift.\n\nMy eyes grew large and my mouth dropped open. Even before I even realized what I was doing, I was pushing through the yellow plastic line, darting through the crowd. I pushed at people's back and they turned, saw who I was, surprised, and got out of my way. In a few seconds I pushed past security. They almost went to grab me, but again, noticed that I was one of the \"guests\" and let me pass. I wasn't even sure what I was planning, I just sprinted, panicked, through the crowd. I was barely in control of myself as I crossed the small amount of open space between the security and Bella Radnor. She must've heard my feet slapping on the concrete floor because, with her dress pull halfway up her thigh, she stopped and looked up at me. At about the same instance, my arms flew around her, locking her elbows in place.\n\nThe impact of our bodies sort of jolted me out of my mindless panic. For a half second I just looked forward at Bella Radnor and just...marveled at what was happening. After all these months of using her as a...fantasy and a cautionary tale, I was actually right next to her. In fact, I was sort of holding her in my arms. Her breasts pushed tightly against my own. I could feel our hips brushing together. Her face, even more beautiful in person, was just inches from mine. It was surreal. \n\n\"What is going on?\" Bella Radnor asked, sounding confused and maybe a bit relieved. Like she hadn't even really been thinking about what she was doing. For another half second I just stared at her. What was I doing? How had this even happened? \n\nThe sounds of the crowd, in parts angry and surprised, shook me out of it. I turned and looked. I saw people around me on all sides. Some were still yelling, other were recognizing me and looking surprised. The guards, in particular, didn't seem to know what to do. The convention director was looking directly at me. In all my time as a \"celebrity\" I'd never felt so much on the spot. I heard my name on everyone's lips and felt every eye on me.",
        "\"Hey Angel,\" a man yelled, \"This ain't no damsel in distress. She's a man, man!\" He finished on an incredibly dated Austin Powers accent and some in the crowd laughed slightly. I could feel Bella Radnor's shoulder droop against me. In fact, I could feel all the weight of...everything sitting on her. Once again I felt the familiar closeness I felt with Bella Radnor, the understanding that we were the same. But I also recognized that our positions were different. I had something she didn't. I still had the respect of the crowd. I turned and faced them.\n\n\"You all should be ashamed of yourselves!\" I said, my voice coming out shaky and uncertain. I took a deep breath and got my breathing under control. I pretended I was acted. I pretended like the crowd around me was a bunch of extras. It felt better, \"You all need to...get back to the convention. The show is over here. This is not appropriate. It is embarrassing for me and it should be embarrassing to you. Now stop it.\" I spoke with a strength that I really didn't know that I had inside of me. \n\nI looked around. I saw several people looking abashed, maybe even ashamed of their actions. A handful of people looked back at me with cold, defiant eyes. But I kept my head up. Eventually, the crowd began to slowly disperse. I turned back to Bella Radnor. She was still crying and looked impossibly tired.\n\n\"Come on,\" I said without any real thought or plan, \"I will take you to my room.\" And I led her out the back, towards the elevator.\n\n* * * * *\n\nTen minutes later, Bella Radnor was sitting on the edge of my king-sized bed. Her legs were crossed at the knee, her left arm was crossed over her breast with her hand tucked into her armpit, and she was holding a rum and coke in her right hand. She was looking down at the floor. She hadn't spoken since we arrived, other than to ask for a sweet drink. I was sitting in a chair about five feet away, feeling nervous.\n\nI really didn't know what to say. I certainly hadn't been expecting anything like this to ever happen. I mean I hadn't had any idea that I would ever meet Bella Radnor, let alone that I would meet her in circumstances like this or that she would be in my room! I was completely bowled over. After the adrenaline rush that had come with jumping into the fray with her in the convention center passed I was just...completely dumbfounded. Now she was here, safe from the crowd, and I didn't know what to do with her. Instead, the tension just kept building in the room. \n\nI sipped my own coke, sans rum, and tried to think of something to do or say. Obviously, there were about six million things I wanted to do and say now that I had Bella Radnor next to me. I wanted to commiserate with her. I wanted to tell her that we were the same. I wanted to explain what she represented to me. But, of course, I couldn't do any of that. And so I sat silently. Finally, after a long while, Bella Radnor spoke.\n\n\"You're an actress right...the Angel television show?\" she asked and I felt a chill run down my spine. She knew who I was! It was even better than the first time I was recognized on the street. It was perfect.\n\n\"Yeah...Yes,\" I said, I left my mouth open after I spoke, feeling like I should say something else, but nothing came out. Bella Radnor nodded and kept looking down.\n\n\"Save your money,\" she said and then shook her head. I nodded like a schoolgirl, trying to make brownie points with the teacher.\n\n\"Yeah...that's a good idea,\" I said.\n\n\"You make plans into the future based on income you think you're going to have, because you think it is going to last forever. But it can all go away overnight. I mean...there are different ways of losing it. It isn't all as dramatic as...well...\" She grew silent again. I saw her take a deep breath and then let it out in a shuddering gasp.\n\n\"I'm sorry,\" I said, because I didn't know what else to say. She looked up at me now, her beautiful eyes wrapped in tears and her lips closed tightly.\n\n\"Why do you have to be sorry? My manager was the one who invested all my money in a fucking tech startup that went belly-up. All my money in one place. And now what? I don't have any income anymore. How's that your fault...Jayne?\" she said, as though she had just remembered my name. I knew what she meant, she was just being bitter about her misfortune (which was apparently deeper than I'd realized) but I felt, somehow, like her question was really directed at me. What was my fault? Why should I be sorry? The words crashed into me now. I felt them cutting into me. I thought about all of the things I'd seen and the thoughts I'd had about Bella Radnor. About what she represented to me. And here she was, a real person, her pain evident to me now in a way that was only theoretical before. She wasn't just \"what could happen to me\" she was...what happened to Bella Radnor.\n\n\"I looked at the pictures,\" I said and I was sort of surprised that the words came out of my mouth. I could feel the blood rushing to my cheeks and my throat instantly became dry. \"I...uh...that's why I should be sorry. I was part of it. I knew it was wrong and I couldn't help myself,\" I said. I dropped my head. It just felt like...like I owed it to her for her to know that. I don't know if it made me feel any better. I doubted seriously it made her feel any better. But it needed to be said.\n\n\"Yeah well...\" she said, not sounding particularly surprised, \"Anymore, I just assume anyone alive in America has seen those pictures. If it had been someone else, I would've looked too. Hell, I've looked at earlier leaks. This time it was just...my turn and I was not in a position to weather the storm.\" I looked up again and saw Bella Radnor taking a drink from her glass. Her words came out bitter, but she just looked tired. \"Do you have any pictures like that floating around? Something that could get leaked,\" she asked, suddenly turning her attention. I shook my head vehemently.\n\n\"No, absolutely not,\" I said honestly. She nodded and looked a little saddened, like she wished she could go back and have my confidence.\n\n\"I thought we'd deleted them all. My boyfriend...ex-boyfriend and I. He liked to take pictures before...well before we fooled around. He said he liked to capture the moment. And I let him, but I insisted that we delete them. He didn't mind. He probably wanted to keep them secret too. He's in the industry,\" I knew better than to ask who it was, though I probably could have deduced it if I wanted to. In fact, I knew that there was a kind of Hollywood guessing game going around, trying to figure out which celebrities that Bella had actually dated, to find out which Hollywood heartthrobs were \"tranny chasers.\" Most of her exes refused to even comment, but the ones who did said that she was a prude, that they never had sex with her, that she said she was waiting until marriage. I wondered if that was true. Now I knew it wasn't.\n\n\"It's strange though, you know, very few people have even asked who took the pictures. Or who the pictures were stolen from. It's like I magically took a bunch of out-of-focus pictures of myself looking weird and unattractive,\" she said bitterly. She sort of tossed her hand in the air when she spoke like she was disgusted. I started to shake my head.\n\n\"I think you're beautiful, Ms. Radnor. You were beautiful before, you're beautiful now, and you were beautiful in the pictures...regardless of how terrible it was when they got out,\" I said. I wasn't really sure why. But it felt like...probably what I would have wanted to here in the same situation. Bella Radnor smiled wryly and looked at me.\n\n\"It's Bella. I called you Jayne after all. And thanks,\" she said. Bella. The name rattled around in my mouth for a minute. A person's name, an individual, rather than a label attached to an entertainment brand. It felt strange to have permission. Bella.\n\n\"Ok Bella,\" I said. We lapsed into silence again. After a while, Bella let out a long breath and then stood up. She paced around the room briefly. She stopped next to the television and then turned and looked at me.\n\n\"Well, Jayne,\" she said, \"Thank you for getting me out of there. I guess I don't know what I was thinking. My thought process hasn't been very clear lately. I haven't been sleeping well. That could've gotten ugly. Really ugly. Thank you for that.\"\n\n\"I owed you at least that,\" I said. Bella's eyes narrowed.\n\n\"How do you figure you owed me anything,\" she said. I realized that she had no idea of how...important she had become to me. She didn't know the symbolic importance I placed on her.\n\n\"For uh...looking at the pictures,\" I said, \"Now I guess we are kind of square.\" That seemed as good an explanation as any and she nodded. Still, I felt the guilt churning in my stomach, deeper and denser than I'd expected. I wasn't even really sure why. \n\n\"Well it meant more to me than that, really,\" she said, sounding somewhat grateful but more defeated than anything, \"It has been...a hard couple of months. There haven't been a lot of people willing to go out on a limb to help me.\" She ran her hand through her long hair and took another sip of her drink.\n\n\"I'm not out anything,\" I said, feeling embarrassed, \"I didn't have to go out of a limb.\" That was only partially true, I knew. But as far as anyone at the convention was concerned, I just did something nice for someone who was very much down on her luck. It didn't need to be anything more than that. \"I was just doing what anyone would do.\"\n\n\"You'd think that. And then something like...this happens and you find out that there aren't a lot of people willing to do anything for you when you're a freak and a pervert. The guy who took the pictures, for instance, I'd been seeing him a long time. We were...well we were very close. And then all this blows up and he just...disappears. He isn't in any of the pictures. It's just me. So he gets to go on with his career and I get to take all of the...shit. You think you can trust someone in a situation like that. But when you're...like me, you can't trust anyone,\" She said. She stated it simply, like it was a fact. It didn't even sound like she was fishing for me to deny it; she was just broken by the weight of it. My heart felt like it was tearing open for her. I wanted to tell her...something that would make her feel better.\n\n\"It's going to blow over,\" I said, \"I mean I know it's bad now. But...Americans like a comeback story. If you just lay low for a while, then when you come back...I mean people will pat themselves on the back for going to see you in a movie again,\" I said. I didn't know if I believed any of it. But it sounded true. It sounded like bits and pieces of things that I'd heard said about other celebrities. Celebrities on drugs, celebrities who'd committed crimes, celebrities who did far worse than anything Bella had ever dreamed of. Why wouldn't that strategy work for her?\n\n\"People will forgive a famous person for a lot of things. And give them credit for a bunch of things they don't deserve credit for. But nobody forgives someone for making them feel like a...queer. My fans were young males who liked to jack off to pictures of my tits, Jayne. The same people who watch your show. They aren't coming back now. They hate me more than they ever loved me,\" Bella said. I let out an audible noise but I don't think she noticed. It was just...she'd hit so close to home. Not only had she sort of pinpointed the exact spot where I was the weakest, but she was echoing fears that had been rattling around in my head since the data leak first appeared. She was independently confirming everything I was afraid of.\n\n\"Maybe they're gone. But I mean they will grow up also. Beyond that there are other audiences out there. So you lose this one. You take a break. And then you regroup and find a new one,\" I said. This was my back-up plan essentially. This is what I told myself I would do if I was ever caught the way that Bella had been caught. I looked at her hopefully. If she could believe it, then I could believe it. And if I could believe it then, maybe, I wouldn't have to feel terrified every minute of every day. I wouldn't have to worry all the time that someone was going to find out. I didn't have to know that my career could be over at any minute.\n\nBella snorted.\n\n\"Yeah my agent said the same thing. Saying I can make a living if I find a better audience and then he's out there renegotiating my contract for pennies on the dollar because he knows there isn't anything like that out there for me. Artsy types who'd see a movie with a transwoman playing a female lead don't go to see a superhero movie. And a movie that doesn't have a superhero or a number in it indicating it's a sequel doesn't make any money. I am not a great actress Jayne. I am good. I'm not going to be in any Oscar-bait movies. I was really good at what I did. And now all I am good for is maybe reality television or cameo in a spoof movie where I am a joke about myself,\" Bella closed her eyes as she spoke and rubbed her temple with her free hand. With her eyes still closed, she took another sip of her rum and coke.\n\n\"Times change. Audiences change. What seems impossible now can change in a matter of months...\" I said frantically. I felt my heart thrumming because I knew that Bella had easily dismantled my back-up plan. There wasn't enough prestige work out there to begin with. And I wasn't...Meryl Streep or something. I was a comic book actress in a somewhat lame television show. If anyone ever found out, I'd be a joke...\n\n\"You sound like my fucking publicist. She was wrong too\" Bella said, snorting derisively. I am scrambling now, trying to convince her so that I can convince myself that there is really something like hope out there in the future.\n\n\"Well I took some marketing classes in community college when I first came out here. You know so that I could do my own promotion before I could hire a publicist. I mean I remember some of the principles...\" I started. I was trying to remember the things I'd half learned, ways to turn something bad into something good. I don't know why, it just felt like I needed to do this.\n\n\"Oh Christ, really?\" she asked, interrupting me and suddenly sounding angry. She slammed her glass down onto the table next to the television and couple of ice cubes jumped up and skittered onto the carpet. The room rang with the echo and I was sort of surprised that the glass had held together. I was more surprised by this sudden change in attitude. Bella's eyes were wide and her lips were curled back. She looked really angry...The way I'd expected her to look when I'd told her I downloaded the pictures. I could feel the heat emanating off of her stare from several feet away. I sank back in my chair. \n\n\"Yes...It was only an intro level class...\" I said, confused as to why this would make her angry.\n\n\"Intro level class, or lack of even that, sounds about fucking right. How could I be so fucking dumb? It had to be the shock...that's it,\" she said and then she swatted at the glass on the table, flinging it across the room. It landed with a cracking thud in the corner. I pulled my legs up onto the chair, more than a little scared. Bella's sudden mood swing made me uneasy. I knew she was under a ton of stress and I was not entirely sure that she was stable.\n\n\"I am not saying I am an expert or anything or telling you what to do...\" I sputtered, \"I am just trying to help.\"\n\n\"And why were you trying to help Jayne? Why did you help in the first place? Why did you jump into the fray downstairs?\" she asked mockingly. She took a step forward and bent over at the waist, looking down at me in my chair.\n\n\"I just saw that you were in trouble you know...I didn't think that it was right,\" I said. I was confused now. Why, exactly, was she angry with me? She rolled her eyes as I spoke and shook her head. She put her hands on her hips, giving her a stern, authoritarian sort of look.\n\n\"Isn't that sweet!\" she said, taunting, \"You see a damsel with a dick in distress and, just like your television character, you jump in to save the day.\"\n\n\"It wasn't like that,\" I say, not sure why that would've been a problem. She didn't seem too proud for my help a moment ago.\n\n\"I know it wasn't!\" she said and her eyes grew wider, more fiery.\n\n\"I just mean...like I said before, I wasn't out anything. I figure...you know...I am sort of famous and everyone there recognized me. They were all riled up but I could diffuse it because they would all know who I was,\" I said honestly. \n\n\"Then why'd you wait so long there, superhero?\" Bella asked sharply. My mind was reeling now. How had this devolved into this strange cross-examination? I never in a million years would have expected this from a meeting with Bella Radnor. How had this happened? And why had I waited so long...there really wasn't an answer.\n\n\"I don't...\" I sputtered after a few seconds.\n\n\"Well I do,\" she said, \"you were waiting for the camera phones to pop out weren't you? Just fucking admit you...fucking piece of shit. You waited for someone to be filming didn't you?\" I thought back to the crowd. Of course I had seen at least a dozen phones filming the altercation. Anytime I did anything I saw cameras. I hadn't even really been thinking about them.\n\n\"No...what?\" I asked.\n\n\"Don't play dumb, you cunt\" Bella yelled and I shrunk back further in my chair, \"You saw a celebrity who is even more famous than you in the middle of a fucking meltdown today and you didn't do shit. And then you saw the cameras coming out and you realized this would be all over the television and all over the internet tonight. And then when you realized you could be the big hero you jumped in. You used your little marketing brain and you fucking used me, didn't you?\"\n\n\"You're paranoid!\" I shouted back. I finally understood what she was accusing me of and I was totally blown away. I hadn't even been remotely motivated by anything like a desire for fame. Until she'd just said that right then, I hadn't even really realized that it was going to be on television. \n\n\"Yeah, why the fuck would I be paranoid? Why would I, of all people, believe that people are out to use me and take advantage of me? Maybe if I'd been a little more paranoid before, I wouldn't be standing here right now!\" Bella yelled. Even in my fear and my embarrassment over this misunderstanding, I knew that she had a point. Why wouldn't she be paranoid?\n\n\"Ok,\" I said, \"I get that, but you have trust me...I really just saw a situation getting out of control and I tried to stop it. I don't care about the publicity...I wasn't even thinking about it. I didn't even realize that was going to be an issue until you said something about it. And I am willing to follow your lead on however you want to handle this. It isn't about me. I understand why you are...on edge but...\" I was speaking about a mile a minute and stumbling over my words. My hands were moving frantically, trying to convey the content of my words. I couldn't tell if it was just the fact that I never like for anyone to be angry at me or if it was the fact that this was Bella Radnor, who'd I'd been dreaming about for months, and I had offended her. I had to make it right. But she was no longer listening to me. She cut in sharply.\n\n\"Oh you understand? Well isn't that fucking convenient. Let me tell you something Jayne Cataline, I understand you. Because I've been you. I've been the new up and coming little thing that everyone in Hollywood wants to hire and ever boy in America wants to fuck. I've been that and I know what a shallow, self-interested little prick it can turn someone into. So I fucking know where you're coming from and I can't even believe that I trusted you for a second. I let you...make me part of your publicity stunt. I should've decked you in the face when you came at me downstairs.\n\n\"But you sure as shit don't understand me. You said yourself you don't run the risk I run, you don't have those pictures floating around. You don't know what it is like to be humiliated by the entire fucking world. You don't know what it is like to have...who you are denied by disgusting strangers and to have your career shrivel up into nothing overnight. So don't tell me I should trust you. You don't know what it means to trust because you've never experienced betrayal.\"",
        "Bella was essentially shaking as the speech poured from her lips. Her eyes were boring into me so fiercely that I almost felt guilty. It almost felt like she was right, like I had been trying to use her. But I knew that I hadn't been. I had simply been trying to help. I hadn't wanted any sort of notoriety for helping. Nonetheless, a sort of shame descended over me. I tried to make myself smaller in the chair. Bella finished speaking and stood, panting, next to the television.\n\n\"I really didn't do that...\" Was all I could say in response. Bella rolled her eyes.\n\n\"I'm leaving Jayne. I'm glad you feel ashamed of your actions. You should,\" Bella said, looking at me intensely. Then she turned her body and headed towards the door.\n\nSomething inside of me clicked as I saw her body moving past me, just a few feet from the chair. Something about her words resonated for the first time. She was right. I should feel ashamed. The guilt I was feeling...it wasn't just because of the heat of her anger. It was earned. I'd known that I should be ashamed. I felt it before. I had known I was using Bella. Not the way she thought. But I had been. All this time. \n\nI had been looking at Bella Radnor as a sort of...object. A sexual object, of course. I mean I couldn't deny what I had been doing with her pictures for months. But it was more than that, deeper than that. I had been using her as a sort of...talisman. That by reveling in her downfall, by luxuriating in the horrible details of her exposures that somehow, I was protecting myself. If I soaked in all of the humiliation vicariously through here then...maybe I wouldn't ever have to really feel it for myself. And so I was sort of...happy that it had happened, in a sickening sort of way. Bella's pain had made me careful and it had shown my own vulnerable spots, let me build new defenses. And so I was grateful for her humiliation. I used it. And here she was now, a person in front of me. Not a symbol, not a warning, but an actual person. A person who was extremely hurt and extremely afraid. And I no longer felt anything but pure shame for the secret happiness I'd felt for that pain and fear. And I owed her an apology. I owed her an apology because I...idolized her and I couldn't bear to have her leave like this. More importantly, I owed her an apology because she was a person, who deserved the dignity of an apology. From everyone, but from me in particular.\n\n\"Wait, Bella,\" I said and she shook her head and kept moving towards the door, \"No wait, really, I need... I am sorry. You're right. I... owe you an apology.\"\n\n\"Too late,\" she said reaching the door. I jumped up off of the chair and turned to face her at the door. I felt frantic. I needed to keep her here. I'd never have the chance to apologize again.\n\n\"I'm not sorry about the publicity thing. You're wrong about that. But I owe you an apology. A bigger apology,\" I said frantically. Bella's hand was on the doorknob, her back was to me. She stopped and turned. She looked at me warily, like she wasn't sure what I was getting at. I waited for a moment, unsure of what to say next. What exactly was I trying to confess to her? Why had I felt the need to do this in the first place? I almost wanted to back out now, but she still staring at me. I couldn't stop now.\n\n\"I...haven't been totally honest with you. Not that I lied about anything I just...haven't been totally honest,\" I said finally. Bella crossed her arms in front of her breasts and knitted her brow. She shrugged.\n\n\"Okay...\" she said. I sighed and screwed my eyes up to the ceiling. My thoughts were racing a mile a minute and my entire body felt tight and weak at the same time. Brittle I guess. \n\n\"I didn't use you today. But I have used you...I've been using you...\" I said. I squeezed my fists at my side, frustrated. What was I trying to say? \n\n\"How do you mean?\" She asked, sounding somewhat concerned, \"Like before today?\"\n\n\"Yes,\" I said, my voice coming out barely above a whisper. She took a step towards me and it took all of my strength not to recoil backwards. But I saw that she looked scared as well. I realized I was making this worse by being cryptic.\n\n\"What did you do?\" she asked nervously. I could see her paranoia flaring up. I wondered what I would think if someone had said the same thing to me. She probably thought that I was some sort of psychotic stalker or something. Maybe I was. I needed to explain.\n\n\"I...when the pictures came out...It wasn't just about you...I mean it is, it is all about you...but I have been...I've needed...\" I stammered and ran my hand through my hair. I knew what I needed to say. There was no way to tell part of the truth. In order to confess properly, Bella had to know everything. But if she knew everything...\n\n\"I don't know what your game is here Jayne, but I don't like it. It was bad enough when people abandoned me. Now I have fucking weirdos glomming on. Just leave me alone. I'm not going to say anything to anyone about this. You've got your publicity stunt,\" she said. Then she began to turn again. I realized that I run out of time. There was no longer any chance for explanations. She was going to walk out on the door and if she did...I would lose something. I couldn't say what. I don't know. Bella had lost the respect of Hollywood and had been humiliated before the public. But if I didn't...come clean now or I'd lose respect for myself. I would always know of my secret humiliation. There was only one thing left to do. \n\n\"Wait, look!\" I said sharply. My heart was pounding and my hands felt damp. My mind was spinning like the wheels on a slot machine and I couldn't keep anything straight. I just knew what I had to do. Bella turned, one last time, and looked at me coldly. I took in a sharp breath and began to move.\n\nIn order to impress my fans, I had worn an outfit similar to my character's normal clothes on my television program. As a result, I was wearing a tight, black-leather mini skirt with a red corseted tanktop. I was also wearing knee-high black leather boots. The skirt zipped down the side and my trembling fingers now worked their way over to the zipper. I grasped the cold metal in my fingers and gasped for air. Slowly, I started to pull the zipper down on the side. Bella looked confused and kept her hand on the doorknob. But her eyes remained on me.\n\nI unzipped very slowly, but it was as fast as I could move. After a few seconds, the skirt began to feel loose around my waist. Seemingly in no time, the skirt had dropped down my thighs and pooled on the hotel room floor. I was wearing a pair of boyshort panties. They didn't exactly fit the sexy outfit, but I wore them when I wore a skirt because they...covered a wide area and they were very, very tight. They kept everything in place without the need for tape. Still, I wondered if Bella could see the slight bulge in my panties as I disrobed.\n\n\"What are you doing?\" she asked uneasily. I looked up at her briefly, pleading with my eyes for her not to ask any more questions. I had to do this, but I couldn't talk about it. If I started to speak, the panic and the anxiety that I was barely keeping in check would overwhelm me. I would stop right then. I didn't speak, but she didn't follow up.\n\nInstead, I looked down over my body, I felt my long hair drape over my shoulders and hang down over my breasts. I looked down over my cleavage to my smooth, toned stomach. I saw the top of the hemline of the panties. Slowly, my hands reached back up towards my waist. I hooked my thumbs into the waistline of my panties, feeling the heat of my skin against my nails. My heart was pounding so fiercely that I could feel my body rocking to the rhythm. My body was fighting against my will. I knew I needed to act quickly, like ripping off a bandage. \n\nI jerked my thumbs down and my panties slipped off my hips and pooled on the ground at my feet. I felt...it sort of bounce against my body as my panties fell down. I kept my eyes down, looking down between my breasts. I could see my penis, somewhat smaller and more shriveled than usual. I was so very nervous. The smooth white skin and the small, pink tip faced down towards the floor and I kept my eyes on it. The room was totally silent. Finally, I looked up.\n\nBella was staring at me, wide-eyed. Her hand had moved off the doorknob and instead it was covering her open mouth. She was standing rigid, every muscle in her body seemingly tensed. For an irrational half second, I realized that my greatest fear had come true, through my own stupid hand. Someone had found out about my secret. And I believed in that moment that the look on Bella's face exhibited pure disgust. I nearly turned to run...where I don't know. I was about to collapse. And then I realized that Bella wasn't disgusted. Of all the people in the world, she would be the one person who wouldn't be.\n\n\"For real?\" she asked, sounding absolutely stunned. She took another step towards me. Her eyes were wider and I saw them keep darting up and down between my eyes and my cock. She let out a little choking laugh and shook her head. She ran her hand through her longer hair.\n\n\"You're not the only one,\" I said, and I realized for the first time that I was already crying. Bella closed the remaining distance between us and I felt her arms wrap around me. Now it was her turn to rescue me. I felt the strength of her arms as they wrapped around me, I felt her large warm breasts press into my own, and I felt the cool, smooth fabric of her dress against my cock. I felt her squeeze me tightly and I felt her head resting on my shoulder. \n\nSoon, we were both crying. \n\nWe held each other for a long time. I can't really describe to you what that felt like. It was a kind of understanding...It was a kind of knowing that I'd never felt before. Here I was, open in front of someone with who I was, and there was acceptance. There was a sudden kinship I'd never felt with anyone in the world. We didn't have to say anything to know that the other person was completely in tune. It was like we'd known each other forever. And because we both knew the fear and the shame the other person felt...all the time, we just melted into one another. An instant connection that would last forever, something I didn't know could exist.\n\n\"I can't believe it. You really did know how I feel. Or you can at least imagine it,\" Bella said after a long while. We sort of pulled back from our hug. Our hips were still pressed together and my limp cock was against her dress, but we split at the stomach, our breasts now a couple of inches apart. We looked at each other in the eyes, I could see tears streaming down her face, making her look more beautiful than ever. I knew I was crying too. Bella was smiling and I could tell she was feeling the same strange, unaccountable feeling of relief that I felt washing over me. I wiped the tears from my eyes.\n\n\"I didn't know how to say it. I like...can't say it. I had to show you,\" I said and she nodded.\n\n\"I understand now,\" she said, \"I really do. And I am sorry for yelling at you. I am sorry for everything. I didn't know.\" She said sincerely. But I started to shake my head.\n\n\"No,\" I said, \"No, I owe you an apology still. You were right to yell.\" And then it just sort of came out of me. I couldn't hold it back now. There was no reason to withhold the truth anymore; the greatest secret was out to Bella. And so the truth forced itself from my lips. I told Bella about the morning I'd woken up and heard about the data breach. I told her about the fear that it was me. The surprise in finding out it was someone else. Rushing to my room to look at the pictures. The feeling of shame at looking and also...horrible feelings of relief. And in the flood of words I told her everything. I told her about the final picture. About the undeniable urge to recreate her scene. I told her about my growing ritual, my need to place myself like her, to touch myself in the same way she had touched herself, so that I could ward off the humiliation she'd felt. \n\nI told her everything in a rush of words that came so fast I could barely understand them myself. But I couldn't stop either. Bella needed to know what she meant to me and also the fact that I had, in some ways, betrayed a confidence with her that she didn't even know we had.\n\nBy the time I was finished, my face was completely red and I felt like I was about to fall over. Only Bella's hands, still grasping my elbows, held me in place. She had looked at me sort of blankly while I spoke and I had no idea what she was feeling or thinking. I didn't know if I had somehow ruined the beautiful moment we'd just shared by speaking. But I knew that I didn't have any choice, I had to say what I said. For the first time in a very long time, I didn't feel any regret.\n\n\"I'm not mad at you Jayne. I don't know why you'd think I would be. I mean first of all...we don't even really know each other, \" and then she smiled, \"We didn't know each other. And I'm not...angry that you are still able to do your job. I don't blame you for being relieved. I am jealous of you.\" I felt something like relief, but it wasn't complete. I needed her to understand.\n\n\"But I didn't have any right to...use your pictures like that. It was like there was this tension inside of me from the fear. I needed to get it out. And I just...I followed your lead in the pictures. I know why I did it. I couldn't help myself. But that doesn't make it right,\" Bella nodded at me slowly. And pulled away from our hug. Her hands slipped down my arms and for a moment I thought she was leaving. But she stopped when her hands reached my own. Our bodies were now two feet apart and she looked me up and down (I blushed harder, somehow).\n\n\"You feel guilty for being one of the people who stole my pictures? For seeing them without my permission and making me a sex object?\" She asked. I nodded and bit my lower lip. I held my breath, wondering what she would say. She let out a little snort.\n\n\"Huh,\" she said, \"I never thought I'd ever hear anyone say that. I don't think people have ever really wondered what it was like for me. What that feels like. You don't know what that means to me.\" She said. She looked down briefly and it seemed that gather herself. I think she was surprised by the strength of what she was feeling. It had sort of come up on her, caught her unaware.\n\n\"I am sorry Bella, for everything,\" I said. She looked up at me now, smiling broadly and nodding.\n\n\"I forgive you Jayne,\" she said and I felt like a weight had been lifted off of me. I let out a low sigh and closed my eyes. But Bella wasn't done, \"In fact,\" she said, \"I'd be willing to retroactively give you, and only you, permission, to see my pictures. There won't be any need for forgiveness. I'll just allow you.\" I looked up quickly and tilted my head to the side.\n\n\"What do you mean?\" I asked.\n\n\"Well,\" she said, her smile growing sly, \"you got to see me intimately. And you said you even...posed yourself like me in those last few pictures. Why don't you show me? Then we really are even,\" she said, raising her eyebrows as she spoke.\n\nI was more than a little shocked. It was about the last suggestion I ever expected to hear. But I hadn't heard any sort of joking undertone to her voice. She seemed completely serious. What's more, her request seemed completely fair. I'd seen her. Now she could see me. I guess I didn't really recognize it at the time, but there was something else there too. An energy sort of vibrating around the room. We could both feel it, I was sure. I guess some of it was the nature of what we'd been talking about and the fact that I was naked from the waist down. But it was more than that. It was the connection that we'd both felt when we both knew...knew that we were the same. It seemed like something needed to happen. Something needed to cement that relationship in place and to even everything out.\n\n\"Okay,\" I said, my voice coming out small, but husky, \"Okay, that's fair.\" There really wasn't even a lot of internal deliberation. I just knew that I was going to do it. I didn't even feel nervous, I wanted to do this for Bella, to show her what she meant to me.\n\nI turned and started to walk towards the bed. As I moved in that direction, I quickly slipped my tank-top up over my shoulders and dropped it onto the floor. I unhooked my bra (in the front) and let it sort of melt off of my body. My heart was fluttering harder than ever before now, but the heaviness was gone. It was all excitement. A kind of positive nervousness I could remember from casting calls and auditions. I'd never felt anything like in this sort of situation before. \n\nWhen I reached the bed, I quickly turned and sat down on the edge and put my knees together. As I unzipped my leather boots, I looked up. I saw Bella walking back down out of the narrow hallway and into the main section of the hotel room. She was looking at me mischievously and took a seat on the chair where I'd been sitting just a few minutes before. By the time she got settled, my boots were off and I'd kicked my legs onto the bed.\n\nThe comforter felt cool and silky against my skin and I felt myself moving in a sort of slinky, seductive fashion. I felt a little like I was acting but it was...different. It felt more natural. I turned and looked at Bella sitting on the edge of her chair. She was looking at me intently, still smiling. \n\nNow that I came to terms with what I was doing, my body sort of took over. I'd done this so many times in the last few months that it came as second nature to me. I leaned my head back on the pillow and I turned my head towards Bella, looking at her closely. At the same time I spread my legs incredibly wide, just like she had been in the picture. My left hand quickly snaked down my body, my palm dragging across the smooth skin of my stomach. My fingertips pressed into the soft skin of my cock and my whole body trembled. I let out a little gasp and I saw Bella shift slightly in her seat.\n\nMy penis was still pretty much flaccid, my nerves had been too much. But it was plumped slightly and, regardless, it still felt nice to touch it. Carefully my hand wrapped around the shaft of my cock and the slightly wet warmth of it felt heavy in my hand. As I usually did, I pulled my skin up so that it looked like I still had my foreskin. I saw no reason to change my routine now. And because my routine was so firmly in place, I kept moving quickly. \n\nMy right hand move quickly, reaching up towards my face. I kept my eyes on Bella as my fingers entered my mouth. I had learned through trial and error that no amount of spit was too much, extra lubrication was always good. I'd also learned that choking could really help in the production of spit. As my fingers slipped into my mouth, I spread my lips wide. I felt my fingertips slide along the wet, rough surface of my tongue and then plunge into my throat. My throat closed and my eyes watered as I gagged. My mouth filled with thick saliva and I let it drip onto my fingers.\n\nBella made a little sound as she watched me pull my wet fingers through my lips. I blinked the tears from my eyes and kept looking at her. She was biting her lower lip and looking at me intently. Her cheeks were slightly red and I could see that she was breathing more deeply than she had been before. But I didn't have time to think about that. I quickly moved my right hand down my body, careful to keep my fingers, especially my middle finger, as wet as possible.\n\nIn a few moments, I was using my thumb to lift my heavy balls up, away from my body. I swirled my fingers around on the crinkled rosebud of my asshole. I made sure that it was very wet, but kept my middle finger damp as well. I'd learned a lot in the last few months, I'd gotten better at this. Once I was properly lubricated, I moved my middle finger up against my asshole. I immediately started to put pressure on it. I felt a familiar force against my anus and I felt my finger slowly opening my body. Then I felt myself give way and my slick finger pushed its way quickly past my first and second knuckle. There was no difficulty now, I'd become a pro at this. In moments, my finger was buried deep inside of me and my insides were hugging me tightly. All these feelings were common now, familiar, comforting even. ",
        "Now I was perfectly in position, looked just like Bella had in the pictures on the internet. I turned and looked at her now, to see if she approved. She was sitting forward tensely in her seat, her eyes glued to my body. Her mouth was open slightly and he gave a sort of astonished look. She was moving slightly on the chair, like she was too nervous or excited to sit still. She looked redder than before, I thought I could see her nipples poking through the sheer fabric of her dress.\n\nI smiled at her and then, slowly, I started to work on myself. First, I began to gently stroke my cock. It was still only half-hard at the time, but that was enough. My grip was very firm and I was used to this sort of thing. I felt the half-firm flesh in my hand and enjoyed the way it felt, slipping over the gentle ripples in my fingers. I moaned as I started to bring my hand up and down on my shaft. At the same time, I started to massages my insides with my finger. I sort of rippled my middle finger slowly, allowing my body to loosen and accept me more deeply. Sometimes I would pull my finger out slightly and then slip it carefully back in, ratcheting up the sensation further.\n\nAs the tension and the pleasure began to rise inside of me, I moaned loudly and closed my eyes. I pressed my elbows in towards my chest, squeezing my breasts and feeling the delicious pleasure of it. I soon slipped into the full effect of the routine. I didn't even notice the world around me. I just felt the familiar pleasure of my body growing more and more intense.\n\nI must've been stroking myself for five minutes or more when it happened. I was feeling like I was getting relatively close to finishing, though not so close that I needed to open my mouth, to prepare for my load. My hand was moving faster between my legs and my finger was moving more insistently inside of my ass. I was completely oblivious to the end world around me, focused solely on the sensations inside of my body.\n\nAnd then I felt something completely strange. And incredibly wonderful too. The tip of my penis suddenly felt very warm and it tingled all over. I felt a sort of glowing, electrical sensation running up my spine. I noticed the tip of my cock felt slightly wet now and I wonder if, somehow, I'd started cumming earlier than I'd anticipated. And then I felt something else strange. I felt a tickling sensation against my legs and my stomach. Then I felt something clasped around my left hand.\n\nMy eyes fluttered open quickly and I let out a low moan. I couldn't believe what I was seeing. At some point, Bella had gotten up from the chair and crossed over towards the bed. She was leaning over me now and her long red hair was tickling against my thighs and my belly. Her hand was grasped around mine, pulling my fingers away from my cock. More importantly than that, the tip of my penis had disappeared between Bella's thick, pink lips. Bella Radnor was sucking my dick!\n\n\"Oh my God!\" I gasped. I felt Bella's tongue swirl around on the tip of my penis. The sensation was more intense than anything I'd ever experienced before. She was looking up at me, her eyes look large and bright. Her lips were wrapped around me tightly. She looked unbelievably gorgeous. \n\nShe slipped the tip of my cock briefly out of her mouth, pressing it instead against the side of her cheek. She smiled at me quickly, \"Just relax,\" she said, \"Let me do this,\" With that she moved the tip of my penis away from her cheek (it left a glistening wet spot) and pushed it back towards her mouth. My left hand suddenly grew limp and it finally fell away from my shaft. My penis, which had grown much harder now, was still standing up. Bella was holding it up between her lips, letting her tongue swirl around the tip. I couldn't believe what I was seeing.\n\nBut Bella wasn't done. While her mouth remained on my rapidly hardening cock, her hands started to move about my body. Her right arm sort of draped across my body and wrapped around my cock. In a second, I felt her fingers pressing into the soft, hairless skin of my scrotum. Her fingertips played with my balls and eventually, she cradled them loosely, but firmly in the palm of her hand. I groaned at the sensation. \n\nAt the same time, her left hand moved down between my legs. I felt her fingers find the back of my own hand. I felt her apply pressure, pushing in on my hand. I realized that I had stopped moving the finger that was buried in my asshole. Bella was urging me forward, trying to convince me to keep going. I bit my lower lip and nodded down at her, looking into her big, soulful eyes. I started to undulate my finger inside of my asshole. Bella kept her hand on mine, making sure I kept up the pressure and feeling the movement of my muscles against my ass.\n\nNow that Bella had me where she wanted me, she sort of swung into action. In one, incredibly deft movement, I watched as her head dropped into my lap. She moved so fast that I thought for sure she was going to hurt me. But instead of pain, I felt an intense warming glow spread out over my body. I felt Bella's chin pressing into my scrotum and her nose was against my stomach. My entire cock was buried in Bella's throat. I gasped at the realization.\n\nBella kept my cock deep inside of her for...an impossibly long time. She didn't even gag as she bounced it deep in her throat. I felt her amazing tongue, her tight cheeks, and the strong slippery insides of her throat wrapping up my cock up. Nothing I'd ever felt in my life felt so...good. The sensations were just so all-encompassing. It wasn't just the feeling in my cock, it seemed to spread out all over, making me feel warm and safe. \n\nAnd that feeling of well-being came from Bella too. It wasn't just that she was rubbing her tongue around on the bottom of my cock, bathing my urethra in her warm saliva. It was who she was as well. It was the fact that her big beautiful eyes were open, the eyes I'd seen in those pictures all those months earlier, and she was looking directly at me. It was a feeling that a fantasy had somehow, improbably, come true.\n\nAfter a while, Bella slipped my cock back up, out of her throat. I heard her take a deep, gasping breath and I could see tears in her eyes from choking. But she didn't wait long. As soon as she caught her breath, she once again drove her head down into my lap, pushing my dick into the back of her throat. My cock was wet with her saliva now and it slid into her even easier. With no friction, the intensely pleasurable sensation became even more powerful. \n\nMeanwhile, Bella's hand continued to massage my balls carefully and she made she my finger continued to probe deeply into my asshole. With my one hand now free, I felt like I needed something. I looked down and saw my nipples sitting up hard on my chest. My breasts ached and long to be touched. It wasn't so much a decision as an imperative. My hands flew to my chest, my palm landing on my hard nipple. I could feel the little nub pressing into my hand as I squeezed hard on my breast. I moaned loudly as the tension seemed to both rise and fall at the same time. I moved my hand to my other breast as well, pinching my nipple and reveling in the sensation.\n\nBella continued on this way for a long time. I think I must've been in shock because that is the only way I can explain the fact that I did not cum almost instantly. Instead I watched for several minutes while Bella's beautiful face bounced up and down, faster and faster, on my cock. I looked at the way her lips sealed around my hardened shaft, I felt the way her tongue worked over every inch of my penis, I felt the weight of her laying slightly on top of me. It was all so very, very much.\n\nThe orgasm sort of snuck up on me. I was so focused on feeling the new, and staggering, sensations that I barely noticed a familiar, powerful sensation sneaking up on me. I was looking down at Bella's beautiful eyes while her mouth bobbed up and down on my cock; I was pulling my nipple up, hard, towards the ceiling. I was panting frantically, unable to catch my breath. Every once in a while, a moan would escape my throat. I was totally overwhelmed.\n\nI didn't even realize that I was cumming until I saw Bella's eyes flutter and she sealed her lips more tightly around the tip of my cock, no longer driving it into her throat. At the same time, I could feel my urethra expanding tightly and I could feel the pressurized whir as hot cum shot out of my cock. It was only when I recognized the physical aspect of my orgasm that the pure sensation of it washed over me. Rather than radiating out from my cock, like it normally did, the tingling sensation seemed to be everywhere at once. My entire body was floating on an electrical wave and I sort of melted into it. I heard myself moaning and I could still feel my body, shaking all over, but I was sort of outside of it as well, just a part of the pure pleasure.\n\nSlowly, my orgasm subsided. After a minute or so, my eyes fluttered back open and I settled back down into myself. My feet were planted on the bed and, for the first time, I realized that I had been bucking my hips up into Bella's mouth while I came. She had bravely stood her ground and she still had the tip of my incredibly sensitive penis in her mouth. My finger, at some point, had slipped wetly out of my ass. I let my hips relax and my hips rested on the bed, exhausted. \n\nBella kept my cock in her mouth, dropping her head in time with my hips. I was so sensitive that it almost hurt, but I didn't dare say anything to her. When I was lying, panting on the bed, I moved my other hand up to my breasts. Now I had a hand cupping each of my breasts and I pulled them apart slightly, looking down the length of my body at Bella. I saw for the first time that a large amount of my sperm had dripped out of Bella's lips and was running down the shaft of my cock. \n\nAs soon as I was still, Bella began to suck loosely on the tip of my cock. The pleasure was painful and at first I didn't know what Bella was doing. I had just gotten off. But then I felt a strange coolness and, after a moment, I realized that the sperm was slipping up my cock, back into Bella's mouth. After a few seconds, she'd pulled almost all of it back between her lips. Finally, she pulled her lips from my cock, gave the tip a gentle kiss, and then sat back on her knees on the hotel room floor.  \n\nShe looked at me, smiled brightly, and then opened her mouth to show me my pearly sperm resting on her tongue. There was a surprising amount of it and it almost overflowed her lips and dribbled down her neck. She quickly closed her mouth and I watched her throat work as the sperm worked its way down into her stomach. When she was done, she stuck her tongue out, showing me that it was all gone. I was lying, panting on the bed, my hands still on my breasts, completely dazed.\n\n\"What just happened?\" I eventually said, my voice sounding small and stunned. Bella giggled and wiped her wet lips with the back of her hand and shrugged.\n\n\"I didn't think you would mind,\" she said, \"It has been so long for me and you're so beautiful.\" I blushed.\n\n\"It's not that I minded. I didn't...I just can't believe that happened.\"\n\n\"But it felt right, didn't it?\" Bella asked, tilting her head to the side. She didn't even sound nervous about it. She wasn't really asking, she was confirming. I nodded my head slowly.\n\n\"We aren't hiding anything. We don't have any reason to hold back,\" I said. And I knew that didn't fully encapsulate what we were feeling. The connection here went deeper than that. But it went so deep, that it was impossible to explain it any more clearly than that. But I could tell that Bella knew I meant more than I was saying, more than I could say. She smiled at me and rubbed her chin with her delicate fingers.\n\n\"Then let's not hold back!\" she said excitedly. She popped up off of the floor quickly and was standing next to the bed. In a matter of seconds, she was reaching behind her back to find the zipper on her dress. In a blur, the dress fell down around her, a puddle on the floor. She wasn't wearing a bra or even panties under her dress. As it dropped, Bella was standing totally naked right in front of me.\n\n\"Bella...you're so much prettier than your pictures!\" I said, in awe. It was true. From where she was standing, I could see every inch of her. The beautiful face, the delicate curves, the large breasts, the sweet little nipples, the shapely legs, and the erect cock. It was larger than it had looked in the pictures, the foreskin straining back against it. For some reason that I couldn't really explain, my mouth was watering just looking at her. She giggled at me and playfully swatted her hand.\n\n\"You're a charmer,\" she said and I couldn't tell if she was teasing me. But then she walked towards the bed, \"And now you'll get your reward for it!\" She said. As she got to the side of the bed, she reached over and grabbed my foot. She pulled on my leg, dragging me over. I thought I understood what she wanted and I started to spin around. She turned me until I was lying perpendicular across the bed, my feet hanging off the side and my head pointing away from her. Once I was in position, Bella took a step forward so that she was between my legs. She was sort of towering over me and I looked up the undersides of her breasts.\n\nWithout speaking, Bella took her right hand and brought it up to her lips. She opened up and soon her fingers were pressing back into her throat. I saw her body convulse slightly and I heard her make a low choking sound in her throat. But she kept her hand there longer and again she gagged on her fingers. After a few seconds, she pulled her hand out of her mouth. A long, thin string of saliva connected her lips to her fingers. There was clearly a pool of this saliva on her hand. \n\nBella dropped her hand down between my legs. I jumped slightly when I felt her fingertips brush slightly against my scrotum. But she dropped her fingers down further and soon I felt the pads of her fingers pressing against my anus. I gasped as the warm, wet feeling of her hand against my asshole. She giggled at my reaction but didn't stop. My ass had dried slightly while I'd been fingering it and it was clear that Bella was lubricating me once again. The tip of her finger popped inside of me and I groaned. Soon, the entire areas was slick and wet.\n\n\"I need more spit,\" Bella said to me and pointed to my lips. I knew what she wanted. Rapidly, I raised my left hand up towards my mouth, \"No,\" Bella said, smiling devilishly and continuing to gently massage my anus with her wet fingers, \"That one,\" and she pointed to my right hand. \n\nI looked at my other hand, the one that I had just pulled out of my asshole. I knew what Bella wanted and I felt a strange thrill run through my body. I had done it before, of course, by accident. But now, doing it on purpose didn't just seem like a good idea, it seemed like an exciting, sexy idea. \n\nAnd so I dutifully brought my right hand up to my lips. I started with just my delectable middle finger. Bella was watching me closely, her breathing growing deeper as she watched. My middle finger passed through my lips and skittered across my tongue. It had a familiar, earthy flavor that I remembered from before. But somehow it was sweeter this time and I closed my eyes and groaned. I sucked hard on my finger, tasting the way my body tasted and enjoying the fact that I knew it was driving Bella crazy.\n\nEventually, my eyes fluttered back open and I saw Bella staring at me. Her face was flushed and her hands had jumped up to her breasts. I saw her kneading at them and pinching on her nipples. She was clearly enjoying the show. It made me feel sexy in a way that I thought I could only feel while acting. I wanted to give her more. So I opened my mouth wider and plunged my fingers deep inside of my throat. I gagged quickly, but I pushed farther. Just like Bella, I gagged again. And then a third time. Finally, I couldn't take anymore, and I pulled my fingers, dripping with saliva, out of my throat. I quickly moved my fingers down towards my ass.\n\n\"No!\" Bella said, quickly grabbing my wrist. I looked up at her and she bit her lip, \"Not there,\" she said, \"here.\" And she moved forward slightly and pulled my arm forward. In order to keep up with her movements, I had to sit up slightly, propping myself up on my free elbow. She guided my hand forward until it brushed against the taut skin of her cock.\n\nInstinctively, my hand wrapped around Bella's hard penis. She groaned and arched her back into me. She was so much harder than I ever got and was a bit awed by her. My hand wrapped completely around her, but it felt like her taut muscles were bulging against me. Her skin was incredibly soft and smooth. It was like warm stone wrapped in silk. The heat coming off of her was intense; it felt like it was burning into my palm. It was already slightly damp and I look down at it. I could see a thin line of pre-cum dribbling down from the tip of her cock and slipping down the length of her shaft. \n\nI started to move my hand up and down on Bella's shaft. I felt my slick saliva coating her hot skin and I heard her gasping. She looked down at me nodding, her eyes fiery with lust. I moved my hand slowly, first pulling down, coating her skin until my fingers pressed into her soft, smooth scrotum. Then I reversed my movement, pulling my wet fingers up her shaft until I reached the tip. That was smooth and road and I swirled my hand around it. She moaned loudly as my hand polished the top of her cock, coating it with saliva. \n\nFinally, she could take no more and her hand shot out, and grabbed my wrist. She pulled my hand away from her cock and then carefully pushed my arm back. I sort of lost balance and fell onto my back on the mattress. Bella's free hand darted forward and she grasped my other wrist. Soon she had leaned forward, pinning both of my wrists to the bed on either side of my head. \n\nShe was leaning over me, her face just inches from mine. Her large breasts were hanging down over my body. They were so large that they brushed against my own. I felt her hard nipples pressing into mine, tickling and teasing me. Even more intense, I could feel the wet tip of Bella's cock pressing into me. It was hard against my scrotum, pulsing against my balls. It was even brushing up against the now-soft shaft of my own cock. The pressure felt dangerous and exciting.\n\nBella leaned farther forward, her cock and her breast pushing more strongly against me. Her face was just a few inches from mine. I was biting my lower lip and looking up into her eyes. Her mouth was opened slightly, but somehow her face seemed like it was smiling anyway. I could feel the positive energy flowing out of her.\n\n\"I can't believe I found you,\" I said. I don't know why. I just knew I needed to say it.\n\n\"I can't believe you exist,\" she said. And then she leaned forward. My eyes closed and I tilted my head slightly to the side. In a moment, I felt the soft whisper of her lips against mine and I could smell the sweet aroma of her body. Her hair draped over my, tickling my forehead and my throat. My mouth opened to moaned and Bella's lips covered it up. I moaned into her mouth instead. Her lips were so thick and so soft, I felt like we'd been fused together.\n\nAfter a few moments, I felt Bella's lips split against mine. I opened my mouth eagerly. I'd never been kissed passionately before, at least not off of a movie set. My entire body ached to feel more. As my mouth opened, Bella's tongue tumbled inside. I could still taste my sperm on her tongue as it probed insides of me. My own tongue pushed back and they met together in my mouth. I tasted into her mouth as well, soaking in the warm feeling of her body. She tasted and felt so good...it sent chills down my spine.\n\nOur bodies reacted to the passion of our kiss. I wrapped my legs around Bella's hips and I arched my back, thrusting my breasts into hers. She started to grind her hips, pushing her cock more forcefully between my legs. The friction of her cock against mine was incredible and I squeezed her tighter with my legs. Our kisses became more intense as the tension grew higher. ",
        "Finally, Bella pulled back away from our kiss, standing against the edge of her bed. She released my wrists and stood tall. Her face was flushed and my saliva was dangling from her lip. I whimpered, sad that she had gone, and kept my legs wrapped around her waist, \"Goddamn,\" she said, \"I need more!\" Her left hand immediately dropped to my hip, pinning me in place. Her other hand dropped and wrapped around her cock. In a quick motion, she inched forward. I felt the bulbous tip of her cock pressing against my asshole. For the first time, I realize what she had in mind.\n\n\"Oh please, be careful!\" I said suddenly and then I was frightened that I'd scared her off. It wasn't that I didn't want it. In fact, I needed it. But it was just..., \"I'm a virgin,\" I explained. Bella smiled and rubbed my hip with her hand.\n\n\"Don't worry baby, I'm not going to hurt you,\" she said reassuringly, \"You're all warmed up, stretched out, and ready for this.\" Her calm demeanor and gentle words made me feel a little better. I focused on the delightful feeling of her hand against my hip. Bella returned her focus down between my legs.\n\nOnce again, I felt the pressure of the tip of Bella's dick against my asshole. But I didn't shy away from it now. I remained relaxed. I hadn't thought I'd be able to put my finger there once, and that had turned out really well. Bella pushed hard, but slowly, and I gasped a little. The tip of her cock was a hell of a lot bigger than my finger. She continued to rub my hip and shushed me gently. My hands rose up off the bed. I put my left thumb in my mouth and bit it gently, trying to focus my discomfort there. My right hand rose up to my breast, pinching and playing at my aching nipples. The pleasure of that feeling lessened the pressure on my asshole.\n\n\"Come on baby, open up for me,\" Bella said gently. I moaned loudly tried not to think about any discomfort. Instead, I thought about how wonderful it would be to have Bella inside of me. To have her there were I could grip her and pull her and take her juices inside of me.\n\nI guess those thoughts did the trick. My asshole opened slightly and the tip of Bella's cock slipped in. I shuddered as I felt it filling that tight space. I saw Bella shiver as well, but she was focused. She bent her neck, looking down at her cock, popped into my asshole. I watched as she spit a long, thick dribble of saliva. It landed on the shaft of her cock, making it even wetter than it had been before. Bella used her hand to spread it out. Then she started to push again, sinking inside of me. \n\nOnce she had pushed passed the tip...everything was better. My body no longer resisted her and there was no longer any pressure. I felt, inch by inch, as her cock entered me. I felt m asshole stretching out to accept her. I couldn't believe how full I felt, it was like her cock was filling my entire body. But it was lovely too, just so incredible. I could hardly believe it when I felt Bella's hips pressed against my ass. Her big, silky cock was all the way inside of me!\n\n\"Goddamn girl, you're tight!\" Bella said and I giggled. My body moved with my laugh and I guess the sensation was a lot for Bella. She closed her eyes and let out a sigh. It felt good for me as well, feeling her cock moving inside of me. But I wanted more.\n\n\"Please Bella,\" I begged, \"fuck me.\" It was like she had been waiting for just such a signal. As soon as the words were out of my mouth, Bella pulled her hips back slightly. I sighed as her cock slipped an inch or two out of my asshole. Before I could even process the sensation of her cock pulling out, Bella slammed her dick back inside of me.\n\n\"Oh Jesus!\" I screamed, pulling harder than before on my breast. Bella stopped moving.\n\n\"Did I hurt you?\" she asked, sounding concerned. I shook my head frantically.\n\n\"No, don't stop!\" I begged. Bella smiled and then immediately got back to work. Now she moved both hands to my hips holding me in place. Once again she moved her hips back, sliding her cock out of my ass, and then she shoved it back in quickly. Now there was no pause. She moved her cock out and then back in again. And again. And again. And then I wasn't even really aware it was happening anymore, I was just overwhelmed by the pleasure I felt at her touch. I tried to hold still, just let her cock work on my willing body.\n\nAs Bella fucked me, I looked up at her. In fact, the way that my neck was slightly bent on the bed, her body was sort of framed between my two large breasts. I looked across the smooth expanse of my toned belly, and saw my limp cock bounced up and down as Bella slammed in and out of me. Thin streams of left-over cum and new pre-cum slung out of it, dribbling cold onto my skin. I tried to tilt my head more, so that I could watch her hard shaft slip in and out of my body, but I didn't have a good angle. Instead, I watched Bella's body, enamored by the elegant, fluid motion of her body and the hypnotic movement of her large breasts.\n\nAfter Bella had been fucking me for several minutes, I saw her once again crane her neck down towards my cock. I knew that she was going to spit again. But suddenly, I had an almost uncontrollable urge. I had no idea where it came from, but it wouldn't be denied, \"No wait!\" I called out and Bella stopped, \"No keep frucking!\" I begged and her hips kept moving, \"But don't spit that out. It's wet enough. Spit in my mouth. I need to taste you!\" I plead. Bella smiled.\n\n\"You're kinky!\" she said around the saliva pooled in her mouth. But she seemed happy to oblige. She took her hands off of my hips and placed them on the bed on either side of me, her arms brushing against my breasts. She started to lean forward, but she was only slightly taller than me. She had to lean forward hard so that her mouth would be over top of my face. She dug her toes into the hotel carpet, pushing herself forward. The end result was that she moved so her face was over mine, but in doing so she had shoved her cock harder and deeper into my ass that she ever had before. \n\nThe feeling was indescribable. It caused two things to happen at once. First, my mouth opened wide. Partially, it was to accept the hot saliva that I'd demanded from Bella. More importantly, the feeling of her cock pressing so deep inside of me was too beautiful not to react to. I was nearly screaming with pleasure. \n\nThe second thing was Bella. I guess that pressing into me in order to lean over me had pushed her past the edge. I felt Bella's body trembling against me. Her eyes slammed shut. Her mouth opened and a low groan came from deep within her throat. She dropped her head slightly and the saliva that she had collected began to pour from her lips. I opened my mouth wider, letting it drip against my teeth and splatter across my tongue. It was thick and sweat, tasting so much like Bella I could barely stand it.\n\nBut I am not even sure that Bella was trying to spit in my mouth. Her attention was clearly elsewhere. While I was swishing Bella's saliva around in my mouth, I could feel a pulsating pressure inside of my asshole. I knew what was happening. Bella was cumming. Her entire body was rigid. And her thick, hot sperm was pouring directly into my asshole. It made me shiver just to think about it. I looked her, watched the overwhelming pleasure play out across her face as spurt after spurt of cum filled up my tight ass, making the pressure grow even more intense. I'd never felt sexier, never felt better in my life. My cock, which had been bouncing limply against my body while Bella fucked me, started to grow hard once again.\n\nAfter a very long time, Bella let out a deep sigh and her eyes opened once again. The muscles in her body went totally slack and she smiled down at me. She giggled when she looked at me, reached up with one of her hands, and pushed a little bit of spit that had dribbled onto my chin into my mouth. I tasted it hungrily and licked at her fingers. Bella laughed louder and looked happier, and more relaxed, than she had since I'd seen her on the convention floor. I realized how badly she had needed that. Not just the sexual release, but the totally acceptance I had given to her body with mine.\n\nBut while Bella was extremely satisfied, it was clear that she wasn't finished. Her cock still felt hard inside of my asshole. I was beginning to wonder if (and hope that) she was going to start up again. But to my surprise, she pushed herself back, moving her hips away from me. I groaned as her hard cock slipped quickly out of my asshole. It was almost like cumming, the pleasure from the drop in pressure.\n\nBella didn't bother to revel in the sensation. As soon as her cock was out of my ass, Bella dropped quickly down on her knees on the floor. I was a little surprised. I popped myself up on my elbows on the bed, trying to look down at her. Bella's arm reached up quickly, snaking under my knees and wrapping around my thighs. I let out a surprised squeak when she yanked on my legs, pulling me over to the side of the bed. In a moment, my ass was hanging off the side.\n\nOnce again, Bella moved quickly. As soon as my asshole was off of the bed, Bella pushed my legs back, sort of rolling my hips back a little and pointing my anus up into the air. Without a word, she pushed her head forward, burying her face between my asscheeks. I felt her nose press into my balls and, shockingly felt her lips pushing into my asshole.\n\nIt was only now that I realized what she was doing. As soon as Bella's cock had come out of my ass, the massive load of cum that she had poured into my ass had started to dribble out. It was not an unpleasant sensation, but it was not really my focus. But that sperm was Bella's focus. She didn't want to waste a drop. And now, on her knees, she formed a seal around my crinkled asshole. It felt hot and soothing after the pounding my asshole had taken, wonderful.\n\nI felt Bella's tongue starting to probe at me and groaned loudly. I could no longer hold myself up on my elbows, and fell back onto the bed. Bella didn't seem to notice, her attention was totally focused. I felt her tongue moving around and lapping at my asshole, drinking down all of her own sperm that had collected there. Once she had cleaned everything that had gotten out, she grew more aggressive. Her tongue started to push inside of me, she started to suck. I could feel the sperm pulling out of my asshole and into Bella's hot, waiting mouth.\n\nBella stayed like that for several minutes and I adored every second of it. The feeling of the sperm moving out of my asshole was lovely. But better than that was the feeling of Bella's tongue and her lips against my sensitive asshole. I would have allowed her to stay down there, tasting me and feeling me, forever. But eventually, the well ran dry. Bella had sucked out every drop of her own sperm and swallowed it down. When she was done, she moved her lips away from my asshole and I gasped as the cool air moved against it. She rose so that she was standing next to her bed, her cheeks glistening with spit and sperm.\n\nMy cock was now completely hard again, maybe harder than it had ever been in my life. As Bella rose, I saw her cock bouncing as well. It was clear that while she'd cum, Bella was not yet finished. We didn't speak, we just looked into each other's eyes. We both knew what we wanted to do it. It felt like the only thing we could do. Bella jumped up onto the bed with me.\n\nI remained on my back, laying down. As Bella got up on the bed, she repositioned herself, spinning around so that we were facing in opposite directions. Soon, she had thrown one of her legs over my head so that she was straddling my face. She was on her hands and knees on top of me, her palms buried in the mattress on either side of my hips. It was exactly what I had been waiting for.\n\nFrom where I was lying, I was looking up at Bella's cock which was hard and pointing forward, towards her tits, her balls that were hanging down towards my lips, and her tight little asshole that made my mouth water. I wanted all of it. I quickly reached my hands up, feeling for Bella's hips. My finger sunk into her toned ass and I pulled her down hard. Bella sort of sat hard and the crinkled, purple star of her asshole dropped down perfectly, kissing my lips. I felt her balls dangling chin and the bottom of her cock was rubbing against my throat. The weight of her body was pressing down on my breasts.\n\nBut the only thing that I could really focus on was her asshole. Her skin there is so dense and so incredibly hot. The smell of her too, her asscheeks pressing into my nose, is so sweet and divine. I couldn't bear to wait any longer. I had to know how Bella tasted. I quickly split my lips open and my tongue oozed from my mouth. I felt slick pressure as my tongue pressed against the soft ridges of Bella's asshole. Her taste was lovely, clean and a little salty. I heard her moan and she thrust her hips back. I made my tongue rigid and, as Bella pushed back, my tongue plunged deep into her asshole. I groaned as I felt her smooth, hot insides squeezing my tongue and her flavors covered me entirely. Bella groaned louder and I get her started to grind her hips, rubbing her beautiful round ass in my face. I felt her hard cock pressing between my breasts as she moved. \n\nAt the same time, Bella's right hand rose up off of the bed and I felt it grasp around my hardened cock. I moaned and twirled my tongue around inside of her. Her grip grew tighter and she started to move her hand up and down on my aching shaft. She pushed down hard with her hand I felt her fingers sinking into my scrotum, rubbing on my balls.\n\nFor a while, we just stayed like this. I kept my tongue in Bella's ass, usually hard and pressing into her, tasting her coppery insides. Sometimes I would make my tongue fat and soft, let it slip out of her and lap at it gently. Always, I was trying to get more and more of her wonderful taste inside of me. At the same time, Bella would stroke my cock up and down, her hand tight but soft. She was also grinding her hips against my chest and I could feel it growing slick with pre-cum.\n\n\"Oh shit, Jayne, I need more!\" Bella yelled after several minutes. I could tell she was losing control, her body shaking more furiously than ever. She suddenly lifted her hips up. I had my hands wrapped around her waist and I was pulling her hips down, but she jerked quickly and soon she was back up on her hands and knees. I was a little surprised but I didn't have a chance to think. Her right hand moved quickly off of my cock and she was pressing her hard cock back so that it was facing down, towards my mouth. I felt the uncircumsized tip press against my lips and I tried to open my mouth to give it a slight lick. But as soon as I opened my mouth a little, Bella once again dropped her hips. I didn't even have time to react. \n\nIn an instant, Bella's hard cock was pushing beyond my lips, bowling over my tongue, and burying itself in my throat. I gagged hard, my throat squeezing around Bella's shaft. But I didn't panic. I welcomed it. I could taste the salty flavor of Bella's cock mixed with the earthy flavor of my own ass, which was still coating her. I gurgled deliciously around the cock. Why would I want anything else?\n\nBut Bella wasn't content with just that. As soon as her cock was buried in my throat, I felt her body drop down on top of me. Her tits rubbed against my lower belly and I felt her arms against my legs. Her right hand once against found my cock, but she didn't start to rub it. Instead, she pulled the shaft up so that it was pressing against her lips. Then she opened her mouth and instantly devoured my cock. I felt her tight throat closing around me as she gagged again. Now we were perfectly mirroring one another. We were exactly alike.\n\nNeither of us could last very long. We were both very close to the edge to begin with and, to make matters more intense, neither of us could breathe. Bella kept her cock pressed hard in my throat while I undulated my tongue against it. But to be fair, she kept my cock perfectly in place inside of her as well. A perfect loop. \n\nStill, I wanted to hurry things along. And I wanted to try something too. My arms were still wrapped up and around Bella's hips, my fingers were grasping her warm ass. I moved my right index finger quickly down, over the loaves of Bella's ass, finding the dark purple center. I couldn't see it, but I knew it was there and that it was slick with my spit and stretched by my tongue. I didn't think, I just thrust my finger hard and deep into Bella's asshole. I felt her body go rigid as my finger suck all the way inside of her in one fluid motion. I could hear her gurgling around my cock.\n\nBut I noticed something else, even better. I felt Bella's urethra expanding against my tongue. I felt her cock shaking and pulsating. I felt her anus tighten around my finger. And then, I felt hot liquid pouring directly into my throat. I pressed my head back into the mattress as hard as I could and Bella pulled her hips up slightly. Soon the tip of her cock pulled back into my mouth and her hot, salty sperm splashed against my tongue and filled my cheeks. The smell of her cum wafted into my nose and I was in heaven.\n\nMore than that, it pushed me over the edge. As I savored the flavor of Bella's cum, my body couldn't take it anymore. I thrust my hips up hard, off of the bed, pushing my cock deeper into Bella's throat. It felt like as my cock pressed against the back of her throat that something burst inside of me. There was an explosion of tingling warmth that sort of grew out from my cock, pulsing and billowing inside of me, touching every sweet inch of my body. I could still feel Bella's body, in my mouth and draped across me. Her cum was still splashing ever-thicker into my mouth. And it was like the two of us, bound together in a circle, were the entire world. And that built the pleasure higher and higher until it didn't even feel physical anymore, until it was all that I was.\n\nI guess that Bella came back to her senses faster than I did. I was laying on my back, panting through my nose, and swishing her thick sperm around in my mouth, while my mind remained entirely blank. But as I was doing that, Bella had jumped up quickly and flopped over onto the bed next to me. As I gradually came to understand who and where I was, my eyes came back into focus. Bella was lying beside me, our bodies touching. Her cheeks, like mine, were bulging. She reached her arm across the distance separating us and her soft hand rested gently on my cheek. She pulled me forward. Instinctively, I followed her wishes, leaning in towards her.\n\nOur lips met passionately, like we were afraid that the other would disappear before the kiss could be completed. As soon as we met, our mouths opened instantly. We were both overflowing with one another's cum and it dribbled down our cheeks and splattered onto the bed. But soon our lips had sealed together and the pools of cum inside of our mouths crashed together. I could taste my own, familiar flavor mixing with Bella's and I moaned as the tastes fused, growing better than the sum of their parts.\n\nWe kissed for a very long time, passing our cum back and forth until, bit by bit, we swallowed it all down. Then we continued to kiss, pulling each other together on the bed. Soon our arms, legs, tongues, and cocks were intertwined on the bed. It was impossible to tell where I ended and Bella began. And it was like that, blissful unaware of the outside world, that we fell asleep.\n\n* * * * *\n\nTwo years later I was sitting at my kitchen table, just like I did every morning. I was wearing my robe, cinched tightly, but nothing else. I had already finished my breakfast and I had decided to turn on the television. I no longer lived for the entertainment news, but I still looked at it from time to time. As soon as the screen came on, I was mildly surprised to see a video of myself, walking out of a restaurant. My new movie, my first starring role, was coming out in two weeks. I sort of expected to be everywhere right now. As I watched, I heard the voiceover speak.",
        "\"In shocking celebrity relationship news, Jayne Catalina, star of the upcoming film, \"Radio Edit,\" has been linked romantically with actress Bella Radnor. The two have been seen in public on numerous occasions in recent weeks, including a romantic, candle light dinner just three nights ago. Reps for both actresses declined to make comments, but sources close to both of them say that the rumors are true.\n\n\"These reports will likely further fan the flames of Radnor's white hot comeback. Just two years after the shocking revelation that the former 'Agent XX' was a transwoman, Radnor has set a torrid pace of late. Following her Golden Globe nominated turn in \"Tempus Fugit,\" Bella Radnor has erased any doubts about her staying power in Hollywood. No fewer than three movies featuring the actress will be released in the next six months. We will continue to keep you updated on this possible Hollywood power couple.\"\n\n\"Turn that nonsense off!\" a voice said behind me. I felt arms drape over my shoulders, palms rest lightly on my breasts. I felt Bella's lips nibble at my ears and I giggled. I shut the television off and looked over at my shoulder at my fianc\u00e9. \"Everything on those shows are unsubstantiated rumors and gossip.\"\n\n\"Some things are true,\" I said, rubbing her arm.\n\n\"I just heard a rumor that sex goddess Jayne Catalina, like he alleged girlfriend Bella Radnor might be a tranny,\" Bella said, rising her eyebrows. I smiled and kissed her deeply over my shoulder.\n\n\"I don't think that rumor is out yet,\" I said after our kiss had broken, \"But you know, even if it was, even if I still have to worry about that and even if all of this could still be taken away, it wouldn't matter anymore. I don't need the love of millions. I have everything I need right here.\" Bella smiled and she kissed me back.\n\nThe End. \n\n*****\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. Especially on a massive project like this, it took a year to write and could take longer to edit. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks.\n\nYKN\n\nP.P.S\n\nThis story contains brief references to comic book superheroes. I made these heroes up for the story. Given that there are 10 trillion comic book superheroes, there is a chance that the names I selected for my characters are already used by other, actual superheroes. If so, that is merely a coincidence. I am not piggybacking on any comic book writer's work."
    ],
    "authorname": "YKN4949",
    "tags": [
        "shemale on shemale",
        "tranny on tranny",
        "translesbian",
        "anal",
        "oral",
        "masturbation",
        "t-girl on t-girl",
        "hollywood",
        "ass to mouth",
        "exposure"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-fappening"
}