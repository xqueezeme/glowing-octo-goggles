{
    "title": "The Tiny Gold Key",
    "pages": [
        "Tori walked through the entrance of the small neighborhood club and paused to let her eyes adjust to the muted light. It was fairly crowded for so early on a Friday evening. She had just stopped by for a drink on her way home from work as she only lived a couple of blocks away and had no other plans for the evening. \n\nIt was a comfortable place, cozy enough to just stop in for a quick drink but large enough to spend the evening with friends for some dancing or just listening to the house band that played 'all the hits from yesterday and today'. \n\nTori scanned the familiar room, taking in the tables that sat two to four surrounding the small dance floor and the bar that lined the far wall. Spotting an empty stool at the bar, she began to make her way in that direction. Just as she was about to claim her spot, she felt a hand at her elbow.\n\n\"Tori? I thought that was you.\"\n\nTori turned to the smiling handsome face looking down at her through twinkling dark eyes. She studied him quizzically for a moment, trying to place him.\n\n\"It's me, Jack, you know...Brenda's husband.\"\n\n\"Of course, Jack. I thought you looked familiar. What are you doing here? Is Brenda with you?\"\n\nBrenda was a co-worker of Tori's. They were both paralegals at one of the city's larger and more respected law firms. Tori had met Jack in passing a couple of times when he had come by the office to take Brenda to lunch or just stopped in to say hello when he was in the neighborhood. If Tori remembered correctly, she thought that Brenda had told her that he owned his own small real estate brokerage. Brenda always spoke glowingly of her husband and it seemed that they were doing quite well, both financially and personally.\n\n\"She is...right over there,\" he replied, gesturing to a small table in a dimly lit corner.\n\nTori looked over to see Brenda smiling and sending a small wave in her direction.\n\n\"Are you here alone, tonight?\"\n\n\"Yes,\" Tori affirmed. \"I was just stopping by for a quick drink on my way home.\"\n\n\"If you don't have any other plans, why don't you join us?\"\n\n\"Well, I don't want to intrude...\" Tori hesitated, thinking Jack may just be being polite.\n\n\"Nonsense,\" he countered. \"Brenda always speaks so highly of you. I know she'd love for you to join us, and will be miffed with me if I don't convince you.\"\n\n\"Well, okay, if you put it that way. I'd love to. It would be nice to spend some time together away from the office. I've always enjoyed Brenda's company, too.\"\n\n\"Good, it's settled then.\" Jack again took her elbow and escorted her around the tables to theirs.\n\nAs Tori sat down, Brenda took her hand lightly telling her how glad she was to run into her and that she'd agreed to join them. Suddenly, she grasped Tori's hand tightly and, with what looked like surprise, quickly turned her head in Jack's direction. \n\n\n\"Are you okay, Brenda?\" Tori asked, startled and concerned.\n\n\"Yes, yes, of course,\" Brenda said, pulling her hand away. \"Sorry, I...I'm fine.\" With that, she stared down at the table for a moment and then looked back at her friend as if nothing had happened. \n\n\"That was weird,\" thought Tori. But, Brenda seemed herself now, so she thought no more about it. \n\nJack hailed the waitress and ordered drinks and snacks for them as they chatted and got to know each other better. The three were enjoying each other's company, talking and laughing. The women had fun taking turns on the dance floor with Jack and, all in all, it had become a lovely evening. Jack was charming, Tori thought, in a very relaxed and natural way. Not at all like some, who seem to 'put it on'. He and Brenda were obviously very much in love and he appeared to be just a really nice guy. He could be very interesting, but not at all a braggart, when talking about himself or his opinions, but was also intent on what anyone else had to say. Tori was glad at the way the evening was turning out and she found herself happy that she felt that this was the beginning of a new friendship outside of work, also. Just as she had felt at the office, she realized that she really was fond of Brenda and she knew that they were on their way to becoming close friends.\n\nTori had also noted, however, that Brenda seemed to occasionally appear preoccupied. She would get a rather far away expression in her eyes, looking down at the table and squirming in her seat, sometimes even biting her lip a bit. This seemed unusual to Tori, as the Brenda she knew from work was not at all 'fidgety', but rather was always at ease with herself and quite focused. During these moments, Jack would put his arm around Brenda's shoulders, stroking her upper arm. He would always have a big smile on his face and his twinkling eyes sometimes even seemed to reflect a bit of amusement. But, these moments would pass and then Brenda would appear to be fine again. Tori soon decided that it was just a result of the several rounds of drinks they had shared and was nothing to worry about.\n\nEventually, Brenda leaned over and whispered into Jack's ear. His face first registered a look of surprise that quickly turned into a grin as he glanced over at Tori. \"What?\" Tori asked.\n\nJack looked down at Brenda, who seemed to flush slightly answering, \"It's nothing, never mind,\" as she again looked down at the table.\n\n\"What is it? Is something wrong?\" Tori was worried now.\n\n\"No, it's fine, really,\" Brenda assured her. But, then turning to Jack, Tori heard her murmur, \"Come on, Jack, please!\"\n\n\"I'm really quite comfortable right now and I don't feel like getting up,\" he answered her trying to look stern, but not able to control his smile. Then, with a chuckle, he asked, \"How about another drink, honey?\"\n\nWith an exasperated and almost desperate expression, Brenda burst out at him, \"I can't believe you're doing this to me!\"\n\n\"What the heck is going on?\" Tori broke in. She had no idea what she was getting in the middle of and knew it was probably none of her business, but somehow couldn't help herself from jumping in to defend her friend.\n\nJack leaned across the table in front of his wife to get closer to Tori and as she heard Brenda whisper to him, \"No, Jack, don't,\" he looked Tori in the eye and said, \"Brenda has a little emergency. She has to go to the bathroom, but she needs some help. Maybe you wouldn't mind giving her a hand?\" With that he flashed Tori another winning smile and leaned back into his chair.\n\n\"Huh?\" Tori was totally confused, now. She looked from Jack's happy face to Brenda, who now was blushing furiously and looking down at her hands which were both tightly clutching the edge of the table as she again began to squirm in her seat. \"Well, sure, I guess.\" Turning to Brenda, she put a hand on hers and said kindly, \"I don't mind helping you, if you need me to, Brenda. No problem, at all.\" Tori couldn't imagine what was such a big deal and, if it was, why Jack wouldn't take care of it. \n\n\"Okay, thanks, I'd really appreciate it,\" Brenda mumbled quietly as she stood and took Tori's hand to lead her toward the rest rooms.\n\nAs the two women headed away, Jack called out, \"Tori, wait a second. Here...you'll need this.\" With that, he handed Tori a tiny gold key. She looked at it curiously and asked, \"What's this for?\" \n\nJack just shook his head and answered, \"You'll see...\u201d. So, Tori palmed the key and hurried after Brenda who was waiting at the entrance to the hallway leading to the rest rooms, shifting anxiously from one foot to the other.\n\nIn the ladies room there were two stalls, one standard and one larger one for handicapped access. They were both empty, but Brenda surprised Tori by heading for the larger one. Tori started to say, \"I'll be right out here, if you need...\". But, Brenda grabbed her hand and pulled Tori in with her, latching the door behind them. \"Umm, okay, or I'll just come on in with you,\" she continued, as she stood with her back to the door starting to feel a little uncomfortable now. She had no idea what was expected of her. As far as she knew, Brenda had never had any problems using the bathrooms at work and she had assumed that she just hadn't wanted to come in here alone. And what was that key for, anyway?\n\nBrenda began to gather her skirt up in her hands and, as the tops of her thigh high stockings came into view, Tori looked up at the ceiling, the walls, the floor, everywhere except directly at Brenda, who seemed unconcerned about exposing herself in front of her co-worker.\n\n\"Did he give you the key?\" Brenda asked, breathlessly. \n\n\"Uh, huh.\" Tori reached out to hand the key to Brenda.\n\n\"But, you have to do it for me.\"\n\nTori slowly forced herself to look at Brenda. Her eyes widened in shock at the sight. Brenda was standing in front of her with her skirt gathered around her waist, baring the bottom half of her body to Tori, watching Tori's face carefully. \"What the hell are you wearing?\" Tori asked, not able to tear her gaze away.\n\nTori saw that Brenda wasn't wearing any panties, but instead what appeared to be something resembling, but not quite, a type of thong. Two narrow, soft leather straps disappeared over Brenda's slender, but rounded hips toward her backside. They met in the center of her flat abdomen in a V shape. From the bottom of the V, another narrow strap disappeared between her legs. This strap was pulled snugly against Brenda's crotch, with the result being that her nether lips bulged open on either side. Tori could see that her friend's mound was cleanly shaven and her labia looked swollen and amazingly aroused. She swallowed, still staring, as she realized that the sight of her friend like this had caused a disturbing stirring to begin deep in her own abdomen.\n\n\n\"Tori? Please, I really have to pee.\" Brenda implored.\n\n\"What? Oh, yeah...sorry. What do you need me to do?\"\n\nTurning around to expose her backside, Brenda said, \"You need to unlock me.\"\n\nTori saw that the two hip straps met again in a V just at the cleft of Brenda's buttocks. The bottom strap, wedged tightly between her cheeks came up to meet the other two, where they were all joined by a small gold padlock. She approached reluctantly realizing that there was no way to open the padlock without touching Brenda more intimately than she had ever touched another woman. It wasn't helping that Brenda was clenching and unclenching her tight little cheek muscles and wiggling her derriere around, trying to control her urge to relieve herself. Tori found herself experiencing feelings and surprising desires that she had never even thought of before. Standing close behind Brenda, Tori suddenly was very aware of the other woman\u2019s shining brunette hair. It thickly cascaded about her shoulders with a slight natural wave and Tori wondered that she had never noticed the brilliant auburn highlights before. Unconsciously leaning slightly forward she caught the faint whiff of coconut as Brenda turned her head to look questioningly into her eyes. \n\nTori quickly took a step back and cleared her throat, looking down to deal with the task at hand. She gently hooked her left index finger under one of the hip straps and slid it along until it was under the shining padlock. The straps were hooked quite tightly and the action pressed her finger deeply against Brenda\u2019s warm flesh. Tori felt a jolt of electricity run from her finger right up her arm and into her belly. What was she thinking? She quickly slipped the key in to unlock and remove the padlock, dropping them both into the pocket of her jacket. As she watched the two hip straps fall away, she couldn\u2019t stop herself from letting one finger slip softly across the swell of Brenda\u2019s trembling left cheek.\n\nLeaning forward and thrusting her buttocks toward Tori, Brenda looked back over her shoulder at her and quietly said, \u201cNow, just slide that other strap down.\u201d Never looking up, Tori reached out and, grasping the top end of the strap began to slowly slip it down and out from between Brenda\u2019s buttocks. As she did, she watched its progress intently. When it reached the crux between Brenda\u2019s buttocks and the top of her thighs, Tori reluctantly released it. \n\nBrenda turned to face Tori and spread her legs apart as the straps fell down between her legs. Strangely, they didn\u2019t drop to the floor, but hung there as if they were somehow stuck in Brenda\u2019s crotch. Tori looked up from this sight as Brenda told her, \u201cOkay, now you have to unhook the clasp.\u201d Seeing the confused look on her friend\u2019s face, Brenda reached down with one hand and, thrusting her hips forward, spread her labia to expose her inner folds.\n\nTori bent closer to look. She couldn\u2019t quite believe what she was seeing. A mere few inches from her eyes, Brenda\u2019s swollen nether lips were spread exposing her engorged, dark pink inflamed sex. Her clit was large and distended. Tori thought she could even see it throbbing slightly with\u2026well, she wasn\u2019t sure she wanted to know what it was throbbing with, although it was quite evident. The entire area was soaked with Brenda\u2019s fluids and the sweet, musky aroma that enveloped Tori was obvious and, she thought, intoxicating. As she stared, Tori could feel her own juices starting to flow as her vaginal muscles clutched at her. She squinted down between Brenda\u2019s lips to try to identify the strange contraption that seemed to be attached to her. There was a small object with two tiny clips that surrounded her clit. From the object a thin wire hung down, appearing to be what was attaching it from Brenda to the leather thong.\n\n\u201cWhat is it?\u201d Tori asked, looking up at Brenda\u2019s unreadable expression.\n\n\u201cIt\u2019s a butterfly, a vibrator. It works with a remote control device.\u201d Now Brenda smiled shyly, but mischievously at Tori. \u201cJack has that.\u201d\n\nTori had to stop and think for a moment before realizing the full implications of what her friend had just told her. Looking at Brenda with the beginnings of anger at such indignity being imposed upon her by her husband, she retorted, \u201cYou mean he locks you into this thing, makes you go out in public and, and\u2026 .\u201d\n\n\u201cNo, no. It\u2019s not like that at all,\u201d Brenda broke in. \u201cLook, can we talk about this after I pee? I really need you to get me out of this.\u201d\n\n\u201cOh, sorry, okay.\u201d Tori knelt down in front of Brenda. Brenda had returned both hands to the task of holding her skirt up and out of the way, so Tori took her left palm and pressed it against the other woman\u2019s smooth mound as she reached her thumb and forefinger down to slide between and spread Brenda's lips wide. \u201cIt\u2019s kind of hard to see what I\u2019m doing here. Could you cock your hips forward a little again?\u201d Tori was surprised when Brenda thrust her hips quickly toward her almost before she\u2019d gotten the request out, practically hitting Tori in the nose with her wet pussy and causing the dangling thong to swing forward and back, pulling on her already engorged clit. Glancing upward, she saw that Brenda now had her eyes closed and she was slowly licking her lips with the tip of her tongue. Tori could also see Brenda\u2019s hard, erect nipples poking out through the fabric of her silky dress. She didn\u2019t need to check to know that her own nipples were also hard and erect. She could feel them straining at her breasts\u2026if she could only just touch them a little. But, what was really disconcerting was the urge she felt to reach up and touch Brenda\u2019s nipples. Tori took a deep breath and felt her own taut nipples through her blouse scrape deliciously against the course fabric inside her jacket.\n\nTori shook her head and decided that she\u2019d better get this over with quickly. She didn\u2019t want Brenda to see the state she was getting into. Reaching up toward Brenda\u2019s clit she began to gently pry the small clips apart, trying to actually touch her clit as little as possible. This was no small task as the entire area was so wet and slippery. Tori found her fingers slipping continuously as she fumbled about, biting her lower lip and sucking it between her teeth as she tried, unsuccessfully, to ignore the quiet moans coming from above and her own escalating arousal. \u201cThere, got it!\u201d she exclaimed triumphantly as the clasps finally let go, accompanied by a gasp from Brenda. \n\nTori stood up clutching the thong and headed for the door thinking, \u201cThank God that\u2019s over.\u201d Out loud she said, \u201cI\u2019ll wait for you outside.\u201d\n\n\u201cBut, wait. We\u2019re not done.\u201d\n\nTori stopped dead in her tracks. \u201cWe\u2019re not?\u201d She turned back slowly. Brenda had raised one foot up onto the top of the toilet seat, spreading her legs wide apart. With her hips still cocked forward, Tori again had an unobstructed view of Brenda\u2019s swollen, dripping pussy. \u201dThe balls,\u201d Brenda said, blushing now. \u201cWe have to get the balls out so I can pee.\u201d\n\nTori felt a surge travel straight through her belly into her own throbbing clit. \u201cYou mean you want me to stick my fingers up, ah, there?\u201d\n\nBrenda\u2019s eyes were locked on the floor as she nodded quickly. \u201cI can\u2019t get them out myself, Tori. Please?\u201d, she implored quietly.\n\nTori knelt down between her friend\u2019s legs, looking up at her exposed crotch. She had to take a deep breath to steady herself as she realized that her growing problem was not that she didn\u2019t want to do this, but rather that she wanted to do this very much. She slowly raised her right hand and ran her index finger along the inside of the open nether lips. She told herself that this was for lubrication, but she knew that she really just wanted to feel the slick softness that was there. Brenda\u2019s soft sigh from above reminded her of her purpose, so she slowly slipped one finger through the folds and up inside. Sure enough, before getting past even the first knuckle Tori felt something smooth and hard impeding her progress. Brenda was so wet and open that Tori easily added a second finger as she began to explore this unknown territory. As she moved her fingers about inside Brenda, she could feel two balls that filled the space but moved around rubbing against her inner walls at the slightest touch. As they moved Tori was aware of a slight vibration emanating from them. Tori became aware that her own crotch was soaked at the thought of what the combination of those balls inside and the vibrator on Brenda\u2019s clit must feel like. She lost herself in the feel of the smooth, wet velvet walls against her fingertips as she explored the inside of her friend, feeling her own excitement building by the second. Tori found herself clenching her thighs tightly together, fighting the urge to rock her hips in response to her unexpected arousal.\n\n\u201cOh my god, Tori\u201d, Brenda gasped as she brought a hand down onto Tori\u2019s head and began to grasp at and stroke her short cropped blond hair, pushing her face even closer to her glistening pussy. Tori was lost in the sensations now and, almost without hesitation, reached out her tongue and tentatively flicked the tip of it over Brenda\u2019s engorged clit. Brenda\u2019s hips lurched forward in response, pushing Tori\u2019s mouth firmly between her lips. Tori instinctively closed her mouth around Brenda\u2019s clit and began to gently suckle at it, continuing to stroke it with the tip of her tongue as her fingers plunged in and out in time with the moans now coming from both women.\n\n\u201cI can\u2019t stand it anymore, Tori. I\u2019m going to cum\u2026I\u2019m going to pee!\u201d This brought Tori back to reality. She really didn\u2019t want to be peed on, so she quickly pulled her mouth away and deftly hooking her fingers around the balls pulled them one at a time from her friend\u2019s pussy. Then, grabbing Brenda by the hips, she swung her friend around and swiftly guided her to sit on the toilet. Still kneeling between Brenda\u2019s knees, Tori watched in fascination as Brenda voided and came in a great explosion a mere inches from her eyes. She felt herself begin to shudder in response and pressed her face into Brenda\u2019s firm thigh to quell the sound of her scream as her own climax overcame her. \n\nTime seemed to stand still as the two women\u2019s breathing slowly returned to normal. Tori became dimly aware of Brenda\u2019s hand gently stroking her hair and wiping the beads of perspiration from her forehead. ",
        "\u201cThat was wonderful\u201d, Tori heard Brenda say softly from above. Tori lifted her eyes toward Brenda, lingering for a moment between Brenda\u2019s still spread thighs. With a start she struggled to her feet and moved to the far side of the stall, crossing her arms across her chest and staring at the floor.\n\n\u201cTori, are you okay? Please, Tori, look at me.\u201d Brenda was worried. She didn\u2019t want to lose her friend, but she had gotten so caught up in the moment that she hadn\u2019t been able to stop. Now, too late, she was afraid she had gone too far.\n\n\u201cI guess, yeah, I\u2019m okay. It\u2019s just that I\u2019ve never done anything like that before, never even thought about, you know, about being with another woman. It\u2019s just so confusing and disconcerting and,\u201d Tori finally looked up at Brenda and, with an almost comically tortured expression confessed, \u201cand it was wonderful and I just don\u2019t know what to think.\u201d\n\n\u201cI\u2019m so glad you\u2019re not angry with me, Tori.\u201d Brenda was visibly relieved. \u201cI just got so carried away, but I don\u2019t want to lose you as a friend.\u201d With that Brenda began to clean herself up, flinching visibly as she passed the bathroom tissue over her beleaguered clit. She stood and let her skirt fall down to cover her nakedness as she crossed over to Tori. Taking her friend into her arms, she hugged her tightly and quietly breathed into her ear, \u201cAre we going to be alright?\u201d\n\nHugging Brenda back, Tori nodded her head and smiled slightly. \u201cIt\u2019s fine, really. I just have to do some thinking, is all. Besides, it\u2019s Jack I should be angry with. After all, he\u2019s the one who created this whole scenario. What\u2019s the story with this whole \u2018belt and balls\u2019 thing anyway? How can you go along with this?\u201d\n\n\u201cOh, god\u2026Jack!\u201d Brenda giggled. \u201cI completely forgot about him! He must think we\u2019ve been abducted or something by now. Please, Tori, help me get this stuff back on, so we can get back out there. I\u2019ll tell you all about while we get me \u2018strapped back in\u2019.\u201d\n\nSo, while Tori reluctantly helped Brenda reinsert the balls into her pussy and reattach the vibrator to her clit, firmly locking the belt back into place, Brenda explained her situation to Tori. Apparently the whole apparatus had been Brenda\u2019s idea to begin with. She told Tori that when she had first bought the vibrator and remote it had come with just elastic straps to hold it in place. But it was Brenda who thought that made it too easy to get out of and she had the leather thong especially made for her. She said that she found it incredibly exciting to go out in public getting so turned on without anybody else realizing what was happening. Having Jack at the controls of her stimulation made it all the better. They had added the balls to increase the excitement, although they didn\u2019t always use them. With this last admission, Brenda let out a small nervous giggle as she said, \u201cBut I\u2019m kind of glad we used them tonight.\u201d\n\nAt that Tori blushed, even though she did smile in response. \u201cAlright, I\u2019m convinced that Jack isn\u2019t some monster forcing you into some kind of sexual bondage. But, I\u2019m still angry at him for putting us into this position, no matter how it turned out.\u201d\n\n\nBrenda looked down at the floor and mumbled, \u201cWell, I\u2019m sure he meant no real harm.\u201d Looking back at Tori, she continued, \u201cWe should get back out there.\u201d\n\n\u201cYeah, okay. Look, you go on ahead. I\u2019ll be out in a minute.\u201d\n\n\u201cAre you sure? I can wait for you.\u201d\n\n\u201cNo, no, it\u2019s fine. Go ahead, I\u2019ll be right along. Really, I promise.\u201d\n\nBrenda hesitated, looking worried again, but realizing she couldn\u2019t force her friend to let her wait for her, she turned and reluctantly walked out the door.\n\nTori stared at herself in the mirror. She had no idea how to react to what had happened. She had to think, but she could not deny the truth of the feelings that had welled up in her. She couldn\u2019t deny, at least to herself, that this was an experience that she had thoroughly enjoyed and that, yes, already she hoped she would enjoy again. Splashing water on her face and reapplying her makeup, Tori was torn about whether to return to Brenda and Jack\u2019s table tonight or just to try to slip out unnoticed and go home. She knew that if she were to sneak out that it would make things that much more uncomfortable with Brenda at work on Monday morning. But, at the same time, she was too embarrassed to face Jack right now, knowing that he had to know what had happened between her and his wife. Stealing herself and taking a deep breath for courage, Tori headed out the door and back into the club.\n\nTori\u2019s indecision was solved when she found Jack waiting for her as she re-entered the club. He immediately swept her to the dance floor and, placing her hands behind his neck and his on her hips, began to sway their bodies together in time to the music. Tori could not look at him, instead staring straight ahead into his chest. Finally, he cupped her chin in one hand raising her eyes up to meet his. \u201cTori? Are you okay?\u201d His quizzical look quickly turned to concern as Tori\u2019s eyes began to fill with tears. Jack immediately wrapped his arms around her and pulled her close to him as she buried her face in his chest. For awhile he just held her tightly, stroking her hair and murmuring soothing sounds in her ear. Then, \u201cDamn it,\u201d he said emphatically. \u201cI was afraid that this wasn\u2019t going to be a good idea. But, I never have been able to say no to Brenda about anything.\u201d\n\nTori raised her tear-streaked cheeks in surprise. \u201cWhat are you talking about, Jack? You mean that this wasn\u2019t your idea? I thought, I mean Brenda said\u2026\u201d Tori\u2019s voice trailed off in confusion.\n\nNow Jack looked surprised. \u201cIs that what she told you?\u201d\n\n\u201cWell, no, not actually. But, I guess I just assumed\u2026\u201d Thinking back, Tori realized that it was she, not Brenda, who had said that Jack had set this up. \u201cCome to think of it, she knew I was really kind of angry with you. Maybe she was afraid to tell me that it was her idea.\u201d Cocking an eyebrow and looking at Jack accusingly, she continued, \u201cDo you two do this sort of thing a lot?\u201d\n\n\u201cMost certainly not!\u201d Jack emphatically reassured her. \u201cI was just as surprised as you!\u201d The look on Tori\u2019s face in reaction to that statement actually caused Jack to snort out a short laugh and he quickly hugged her tightly to him when he saw the quick anger cross her face and she tried to break away from his hold. \u201cOkay, wait, I\u2019m sorry. I wasn\u2019t thinking. There\u2019s a very good chance that you were a bit more surprised than I was.\u201d He couldn\u2019t quite keep the mirth out of his voice, though, and it took a moment for Tori to calm down as he continued, speaking quickly and earnestly. \u201cLook, seriously, we\u2019ve never, ever included anybody else. I didn\u2019t even know that she considered it an option. All I can say is that Brenda must really like and trust you to do this. I do know that she came back quite worried that she had irreparably damaged your relationship for a few moments of pleasure and neither one of us wants to lose your friendship over this or anything else. Sometimes she just gets carried away and doesn\u2019t consider the consequences.\u201d\n\nTori listened quietly to Jack\u2019s pleading, her mind racing. \u201cWell,\u201d she finally conceded, \u201c I\u2019d be lying if I didn\u2019t admit that we both got a little carried away. It\u2019s not like I couldn\u2019t have walked away at any time.\u201d With that she looked him right in the eye and, taking a deep breath, admitted, \u201cBut I didn\u2019t.\u201d\n\nJack looked down at Tori and said with a warm, almost conspiratory smile, \u201cShe can be pretty irresistible, can\u2019t she?\u201d\n\n\u201cYeah, I guess she can.\u201d Jack thought Tori sounded a bit wistful as she almost whispered this confession. He had to strain to hear her as she continued. \u201cTruth be told, I\u2019ve never done anything like this before and I\u2019m more than a little confused about how much I, well,\u201d she paused and then blurted out, \u201cabout how much I enjoyed it.\u201d With that she blushed deeply and found she couldn\u2019t hold his gaze any longer.\n\n\u201cMaybe you\u2019d like to try the belt sometime. It can be quite exciting, you know. We\u2019d be very careful and take good care of you.\u201d\n\nTori stiffened in Jack\u2019s arms. \u201cAbsolutely not,\u201d she shot back at him. \u201cI\u2019m definitely sure that I could never submit myself to that kind of control by anyone, no matter how much I trusted them.\u201d \n\n\u201cAlright, it was just a thought.\u201d Suddenly, Jack had another thought but he didn\u2019t voice this one yet. \u201cDo you think you\u2019re ready to go back to the table? Brenda could use some reassurance. I\u2019m sure she\u2019s jumping out of her skin by now.\u201d\n\nTori looked up toward their table and, sure enough, even through the dim lighting she could see that Brenda was watching them intently as if she were trying to read their lips across the room. Tori managed a small chuckle. \u201cYeah, I guess we should go put her out of her misery, so to speak.\u201d With that Jack smiled with relief and led Tori back to his waiting wife.\n\nWhen they arrived at the table Brenda raised her eyes to Tori\u2019s face with what could only be described as the proverbial \u2018deer in the headlights\u2019 expression. Tori had planned on being stern with her, but seeing that face made her lose all resolve. With a resigned sigh she reached out a hand to stroke that lustrous auburn hair for the first time and then leaned over to plant a small kiss on Brenda\u2019s forehead as she sat down.\n\nBrenda\u2019s face literally glowed as she broke out in a glorious smile. \u201cSo, we\u2019re okay then?\u201d she asked reaching out to place her hand on top of Tori\u2019s. \u201cI\u2019m so glad. Really, Tori, I\u2019m so sorry. I never meant to\u2026\u201d Tori reached out and placed the tip of her index finger over Brenda\u2019s lips to silence her. \u201cEnough already,\u201d she said. \u201cI just can\u2019t discuss this anymore tonight. What I really need right now is the waitress and another drink.\u201d As if on cue, the waitress appeared and took their order for another round. When she had left, Jack stood and held out his hand toward Brenda. \u201cCome on, baby, time to dance with your husband.\u201d\n\n\u201cBut, Jack, I need to talk to Tori.\u201d\n\n\u201cYou heard her. She\u2019s all talked out for the moment. Come dance with me. She\u2019ll be here when we get back, won\u2019t you, Tori?\u201d\n\nTori shrugged her shoulders and nodded her head. \u201cIt\u2019s okay, Brenda. Go ahead and dance with Jack. I\u2019m not going anywhere, I promise.\u201d\n\n\u201cWell, okay, if you\u2019re sure\u2026\u201d With that, Jack placed his hands around Brenda\u2019s hips, turned her and gently propelled her toward the dance floor. He then turned toward Tori as he reached into his pocket and, with that wicked grin of his, gave her a wink before following Brenda past the other tables. Tori watched them go and then, glancing down at the table, she saw that Jack had left something behind\u2026the remote.\n\nTwice she hesitantly reached for the small plastic box and quickly brought her hand back, trying to ignore its presence. Finally, she pulled it toward her and with feigned disinterest began to examine it. It was quite compact, easily small enough to unobtrusively fit in one\u2019s pocket and it was fitted with an on/off switch, a dial with high and low indicators and a row of four buttons. Tori held the remote in her palm, idly stroking the smooth surface as she looked up to watch Brenda and Jack on the dance floor. Jack was holding Brenda closely and they were whispering in each other\u2019s ears. Tori knew that Jack was filling Brenda in on their earlier conversation. Occasionally, Brenda would look back toward Tori sitting at their table in the shadows with a small, unsure smile. \n\nAs she watched them dance, Tori reached out her index finger and flipped the remote on low. Brenda hesitated and leaned in to whisper something into Jack\u2019s ear. Tori saw Jack shake his head as he shrugged his shoulders and nodded in Tori\u2019s direction. Brenda looked surprised and turned her head toward the table with what appeared to be some trepidation. Through the dim light, Tori smiled back at her and turned the dial up to a slightly higher intensity. Brenda looked startled and grasped Jack more securely as he swept her around the crowded dance floor.\n\nTori had no idea what the different buttons were for so she just began to experiment with different combinations and intensities, watching Brenda\u2019s reactions carefully. Jack knew his wife well and was able to gauge quickly when she was getting too excited and needed more support. Meanwhile, Tori discovered that she was enjoying this quite a bit and she soon felt she was getting the hang of which combinations would create what reactions in her friend.\n\nAfter awhile, Tori was getting very competent at bringing Brenda up and down on a rollercoaster of sensations without sending her too far over the edge. She wanted to teach her a lesson, but didn\u2019t want to humiliate her. By now, Brenda was lost to those around her. Tori watched as her hips swayed sensuously to the music. Brenda\u2019s eyes were closed and she was running her hands lightly up and down her body, sometimes fleetingly brushing across her rock hard nipples. There was a light sheen of perspiration on her face and neck. Her lips were parted and the tip of her tongue peeked slightly out of the corner of her mouth.\n\nThe sight reminded Tori of Brenda\u2019s clit peeking out between her nether lips and caused a rush of arousal in her own pussy. Looking down she saw that her hand had slipped under the hem of her dress and her fingers were feathering strokes across her inner thigh. Checking to be sure that no one around her could see, Tori moaned and surreptitiously moved her hand higher up under her dress, spreading her legs to gain access to the now moist crotch of her panties. Then, with a gasp she started to stroke her fingers up and down the length of her slit, her eyes locked on Brenda\u2019s swaying form. Turning the intensity on the remote up as her own arousal grew, Tori hooked her fingers under the crotch of her panties and slipped them inside. She was so wet that she quickly slid two fingers into her vagina and began sliding and twisting them in and out while circling her clit with her thumb. Her eyes were closed now as she concentrated on controlling the thrust of her hips against her fingers while still satisfying her escalating need.\n\nSuddenly, seemingly in the distance, Tori heard a throat being cleared, \u201cMa\u2019am?\u201d and felt a hand on her shoulder. Tori froze and looked up. The waitress was standing next to her with a tray full of their drinks and she was staring at Tori\u2019s lap. Following her gaze, Tori realized that her hand was still buried between her legs. She quickly pulled her hand out and smoothed her skirt down over her thighs. Sitting up straighter she looked up at the waitress. She had no idea what to say or do so she just stared at her helplessly, her face burning with embarrassment.\n\nThankfully, the waitress broke the uncomfortable silence. \u201cUm, I have your order,\u201d she said as she averted her eyes and began to place the drinks on the table. \n\n\u201cLet me get your tip,\u201d said Tori, shakily, as she reached across the table toward her purse, then stopped as they both stared at her hand, still glistening and wet with her juices. Tori felt paralyzed, not able to pull her hand back. She began to tremble and tears began to well up in her eyes. Seeing Tori\u2019s distress, the waitress reached out and grasped her wrist. Then, never losing eye contact, she raised her hand to her lips and to Tori\u2019s amazement slid her fingers into her mouth. As the waitress swirled her tongue around Tori\u2019s fingers, cleaning them of her fluids, Tori felt the caress as if it were directly on her clit and her hips lurched in response. Releasing Tori\u2019s hand the waitress bent close and whispered in her ear, \u201cThanks, that\u2019s the best tip I\u2019ve had all evening.\u201d With that she turned and sauntered away, swaying her hips seductively as she moved across the room toward the bar. Tori watched her retreating figure in amazement until she disappeared into the crowd. \n\n\u201cWhat has Brenda done to me?\u201d Tori thought to herself. Then, \u201cOh my god, Brenda!\u201d She had forgotten all about her and the last she remembered was turning the remote on full. Scanning the dance floor she quickly locked eyes with Jack. He was looking through the dim light toward Tori with a desperate expression. His skin was flushed, his jaw tight and Tori could see the veins standing out prominently on his neck. With one arm tight around her back and the other hand pressed firmly on her butt he was holding Brenda tightly against himself trying to hold her still. Brenda\u2019s arms were hooked up under his with her hands curled over and her fingers digging into his shoulders. Her body was mashed against Jack\u2019s and she was writhing against him, fighting his grip on her backside as she bucked her pelvis against his. Her eyes were shut tightly and her mouth was buried in the base of his neck. Tori fumbled furiously with the remote before finally shutting it down and then watched helplessly as Brenda slowly calmed. It was an agonizing few minutes before she had settled enough for Jack to loosen his hold on her. I t was necessary for him to support her as he led her back to the table and set her back down in her chair. Before seating himself, Jack turned toward the wall behind his chair and reached into the front of his trousers to quickly readjust the huge erection he was sporting. \n\n\u201cWell,\u201d Jack said, as he shifted in his chair with a grimace. \u201cThat was certainly an experience.\u201d \n\n\u201cI am so sorry. I can\u2019t believe I let that happen. I promise you it wasn\u2019t my intention to let things get out of hand like that. It\u2019s just that I got, well, distracted and I understand if you\u2019re angry with me. I just hope you can forgive me.\u201d\n\n\u201cIt\u2019s okay, Tori,\u201d Jack responded, trying to smile despite his clear discomfort. \u201cI saw the whole thing. To be honest, I\u2019m not sure which was more exciting\u2026Brenda\u2019s arousal or yours. When I saw the waitress heading toward you, I tried to warn you but you had your eyes closed and I was too far away to do anything about it. After what she did, I\u2019m surprised you were able to remember us when you did.\u201d\n\n\u201cYou saw the whole thing? Oh, my god, I\u2019m so embarrassed.\u201d\n\n\u201cPlease, don\u2019t be. Personally, I was enjoying every minute of it until, that is, Brenda began to completely lose control.\u201d With that Jack actually managed a real smile. \u201cActually, that was pretty exciting, too.\u201d\n\nBrenda was still dazed and slumped in her chair, shuddering as her body was wracked by intermittent tremors. Shakily, she reached her hand out and placed it over Tori\u2019s, gently stroking her wrist with her fingertips. Looking at Tori through half closed eyes she managed a small smile and mumbled, \u201cWonderful.\u201d\n\nTori and Jack looked at Brenda and then each other with the same incredulous expression, then both began to laugh.\n\n\u201cOkay, you know what?\u201d said Jack. \u201cI think I\u2019d better get Brenda out of here while she\u2019s still at least semi-conscious.\u201d\n\n\u201cGood idea. I think we should leave, too, before we get thrown out.\u201d Tori responded with a wry smile.\n\n\u201cCan you help me with her? I\u2019m pretty sure she can\u2019t walk on her own.\u201d\n\nWith that Tori and Jack got Brenda to her feet and with one on each side they hooked her arms over their shoulders and grasping her around her waist led her out the door. They found their way to Jack\u2019s car and strapped Brenda into the seatbelt on the passenger side.\n\nJack said, \u201cThanks, I think I\u2019ve got her for now. Can we give you a lift home?\u201d\n\n\u201cNo, thanks. I\u2019m only a couple of blocks from here and I think I could use a short walk.\u201d\n\n\u201cTori?\u201d they heard Brenda whisper. Tori leaned in close to her friend, \u201cYes, Brenda, what is it?\u201d Brenda slid her hand around to the back of Tori\u2019s head and pulled her close until their lips met. Before Tori could react, Brenda pushed her tongue between Tori\u2019s teeth and quickly and thoroughly explored her, stroking the tip across the roof of her mouth before pulling back and releasing her. Then with a smile she closed her eyes and said, \u201c \u2018night, Tori\u201d. \n",
        "Tori\u2019s knees felt like rubber and she felt her pussy pulsing as she stood and turned to face a smiling Jack. \u201cSure you don\u2019t want that ride?\u201d he asked as he held her elbow to steady her. \n\n\u201cNo, I definitely need that walk now,\u201d she managed to chuckle.\n\n\u201cAlright, then,\u201d he said, reaching out to give her a warm hug. \u201cIn that case, we\u2019d better get going. Here, you take these,\u201d he continued, dropping the remote and the tiny gold key into Tori\u2019s jacket pocket. \u201cBut,\u201d she began to protest. \u201cDon\u2019t worry,\u201d he said. \u201cWe\u2019ve got a spare set at home. Besides, I suspect you\u2019ll be needing them.\u201d Then with a wink he continued, \u201cI\u2019ll see that she wears it to work on Monday. See you soon. Good night, Tori.\u201d\n\nTori watched Brenda and Jack drive away and then headed home, her mind reeling over the experiences of the evening. Slipping her hand into her jacket pocket, she clasped her fingers around the remote and began to plan for experiences to come."
    ],
    "authorname": "NoOtherName",
    "tags": [
        "tori heard",
        "lips tori",
        "thought tori",
        "smile pretty",
        "lose friend",
        "gold key",
        "thing god",
        "tori hand",
        "eyes tori",
        "brenda lips"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-tiny-gold-key"
}