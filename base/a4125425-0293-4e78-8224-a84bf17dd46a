{
    "title": "The Keeper Ch. 32-34",
    "pages": [
        "Chapter Thirty-Two\n\nKatherine Keegan thought, not for the first time, that she needed to move back home. One of Seattle's biggest law firms had aggressively courted her after law school, and Althea ordered her to take it. Originally, she thought it would be nice to be out of Emory and just have the responsibility of keeping an eye on any political or economic threats to Emory. But she soon found out that she didn't fit in--her background was far too different. She missed her sept-sisters and was tired of the endless hours. Now, given all the chaos in Emory, she was glad to have had an excuse to come back.\n\nShe drove up to the hospital in Arlington and found a parking place across the street. As soon as she walked in, she heard the furious argument even before she ran into Thistle, who was in the process of practically punching out her sister Daisey. Along with Mandy, Charming and Bella, they had all been best friends for years but these days it seemed like they could barely stand the sight of each other. She shook her head; she had no time for taking sides in whatever had touched off world war three.\n\nShe avoided them by ducking down the hallway and ran into Megan Hart. She was a petite woman with dark brown hair and kind brown eyes that were now rimmed with the red of exhaustion,\n\n\"Hi Meg, how's Julie doing?\"\n\n\"She's good. She got out of surgery last night. Luckily, the bullet didn't hit any bones but it did a lot of muscle damage, it also nicked one of the arteries in her leg. The doctor said she should make a full recovery. She woke up with a panic attack until we got her the sweatshirt that the man left on her. For some reason, it's like a security blanket. It will be a while before she gets over this.\n\n\"Well, that is such good news about her surgery.\" Katherine gave her a spontaneous hug. \"We were so worried when we heard.\"\n\n\"That man saved her life, the doctor said. Said he did a better job than some of the residents would have to get the bleeding controlled. He said she was so lucky.\"\n\nMegan stopped and began to cry. \"I wish I knew who he was, I need to thank him. I don't know what I would have done if she had....\" she broke down completely.\n\nKatherine hugged her again. \"Is anyone here with you? You need to get yourself home and get some sleep.\"\n\n\"My sisters are around here somewhere. I have to go find her. Thanks for coming to visit. I'm sure she'll be glad to see you.\"\n\n\"They're down in the lobby arguing with each other. You take care of yourself. I'm going to stick my head in and say hi and get up to see Althea. Call if you need anything.\"\n\nLoud laughter and a chorus of giggles showed her the way to Julie's room. Julie looked pale and tired after her surgery, but she was propped up and smiling at her two friends, Kayla, and Lauren.\n\n\"Hi kiddo,\" Katherine said, \"how are you doing?\"\n\n\"Okay, Aunt Katie. It doesn't hurt too bad. The doctor said I will be okay; I just need to get healed up and do some physical therapy for the muscle damage.\"\n\n\"You are a lucky girl. What on earth are you wearing?\" She had a gray sweatshirt with a Marine Corps logo over her hospital nightgown. She was lost in. It was four or five sizes too big for her.\n\n\"The hunky guy who rescued her,\" her friend Kayla said breathless with drama, \"took off his sweatshirt and put it over the top of her to keep her warm. How frigging cool is that?\"\n\n\"The stinking hot pirate,\" said Lauren, the other member of the trio. \"I mean, he sorta looked like a pirate.\n\n\"Jeez, Katie,\" Kayla said. \"You shoulda been there. The guy was an eleven on a ten scale of hotness. He had the coolest green eyes and his voice...\"\n\n\"Oh. My. God. It was soooo melty rumbly,\" Lauren said. \"Gave me shivers. Jules there would have swooned I bet, even if she hadn't been shot.\"\n\nKayla giggled. \"Me and Lauren are going to do some detective work and search him out and see if he'll give us each one of those cool sweatshirts without the whole getting shot thing.\"\n\n\"Seriously?\" Julie laughed. \"Like my guy would have anything to do with you two skanks.\"\n\nThen her eyes got big, and she gulped.\n\n\"Oh. My. God.\" Kayla said softly.\n\n\"Excuse me, ladies,\" a voice came from behind Katherine. \"I thought I'd check on you, Julie. How are you feeling?\"\n\nJulie's mouth gaped open as she stared at the visitor. The other two were no different. They stepped closer together and stared.\n\nHe was handsome enough, Katherine supposed. Too bad he was such a jerk. His face was masculine and not the slightest bit pretty. The scar on the right side of his face did give him a piratical appearance. She thought again how much bigger he was than she remembered.\n\nHe looked kind and concerned. How could anyone hide their real nature so effectively?\n\n\"Lan,\" she said coldly. \"The two young ladies over there are Kayla and Lauren. You've already met Julie.\" Then added with some snarky sarcasm. \"I assume you are the knight in shining armor.\"\n\nLachlan ignored her.\n\nSeriously?\n\nHe nodded to the two girls and walked over to Julie's bedside and grinned a mischievous grin at her. His face changed remarkably. The girls gasped and Katherine wondered again how many women had moved heaven and earth to tease out that smile.\n\n\"I declare, Miss Julie, you don't look too bad for a soiled dove who has been shot.\"\n\n\"I'm fine thanks to you, Mr. Quinn,\" said Julie.\n\n\"No need to mister me, Miss Julie,\" he laughed. \"After all, this must count as our second date. Although I gotta say I haven't had to put a tourniquet on any of my dates before. You're looking a bit pale, though. Are you in pain?\"\n\n\"A bit.\"\n\nKatherine could see it now. Her face shone with a sheen of sweat and she looked pale and wan. She should have spotted it right away.\n\nHe immediately took charge. \"Miss Lauren, I wonder if I could get you to step out and get the nurse. Miss Julie's in a bit more pain than she needs to be.\" He reached over and smoothed Julie's hair back. Katherine watched Julie's eyes close and her strained features relaxed.\n\nMagic touch? Healer? What the hell?\n\nIrrepressible Kayla was not to be held speechless for any length of time and batted her eyes at Quinn.\n\n\"Lauren and I would sure like to have one of those sweatshirts Mr. Knight in Shining Armor,\" she giggled.\n\nQuinn laughed. \"Sorry, it's the only one I have or did have until this beautiful temptress talked me out of it.\"\n\nThe nurse came in and proclaimed that the visitors needed to leave so Julie could get some rest.\n\nHe stiffened.\n\n\"WAIT,\" he barked. The command in his voice halted them all. He reached into his pocket and began tossing a silver ring up in the air.\n\nAn utterly beautiful silver ring.\n\n\"I thought I scented your magic, Eilauver,\" Lachlan sang. \"Show yourself.\"\n\nKatherine barely followed the whistling, fluting singing. How on earth does he know High Alfar?\n\n\"Want that, mortal, give it to me.\" A voice that sounded like tiny ringing bells replied from the doorway.\n\nThe ring was magnificent. The most beautiful thing she had ever seen.\n\n\"Please Lan, give the ring to me,\" Katherine thought she would never draw a happy breath again unless she had the ring.\n\n\"No, me please,\" the girls cried. Along with the nurse, they pushed their way around Katherine to get to Quinn.\n\nA pale green luminescence floated into the room. It coalesced into a slender raven-haired girl with green eyes. Katherine thought she looked eighteen until she saw the faerie's eyes were old as a stone and just as pitiless.\n\nDamn, Lachlan had not lied. A faerie, for Mother's sake. Belatedly, she realized she should be protecting herself. The creature made a wave of her hand and Katherine found herself unable to move anything except her eyes.\n\nQuinn was unaffected. He waited calmly for the creature to approach him, all the while casually tossing the ring up and down. Katherine wanted to choke him. It was far too precious to be treated so carelessly.\n\n\"Come closer, Eilauver. I will give you what you seek.\"\n\n\"I trust you not, Shadow Walker, this is a trick is it not?\"\n\n\"Of course, it is a trick, but I give my oath I will place the ring in your hand.\"\n\nThe faerie looked back at the doorway like she wanted to flee, but her eyes kept returning to the ring.\n\nKatherine shouted inside helplessly. Don't give it to her. It's mine. Don't.\n\nThe faerie reached Quinn's side and held her hand out.\n\nKatherine gasped as his eyes changed to black. He suddenly looked alien--deadly.\n\nQuinn put a finger to the center of the faerie's forehead.\n\n\"Hear me well, Eilauver,\" he sang. \"I promised the Lady Iris not to end you. You have caused much damage here. If I see you again, I will end you without a thought. Find somewhere or some when else to play.\n\nThe faerie shot him a rebellious sneer, but she must have caught sight of his eyes because she flinched and bowed her head.\n\n\"Yes, Master. May I have the ring now?\"\n\n\"Is your brother here?\"\n\n\"No Master, with his toy--the blood-witch.\"\n\n\"Where?\"\n\n\"I don't know.\"\n\n\"Very well. Remember my warning.\"\n\nQuinn placed the ring in her hand.\n\nThe faerie's green eyes closed in bliss, then opened with shock. She screamed. Tried to toss it away, but it appeared glued to her palm. With a loud pop, she disappeared.\n\nKatherine found she could move again.\n\nQuinn looked at her. His eyes were back to his normal emerald green.\n\nOh, sweet mother, she thought, Lachlan, what have they done to you. Right then and there, she realized Althea was right. This man was not for her or her for him. Whatever they'd done to him had utterly altered the boy she once loved.\n\n\"Katie, these girls do not need the memory of this. Would you take care of it?\n\n\"Of course.\" Then she asked with a small voice. \"Lan, can I ask you a question?\n\nHe nodded.\n\n\"Can we be friends?\"\n\nHe smiled a radiant smile, stuck out his little finger for her to grab with hers, just like they had done as children, and said, \"Pinky swear--friends forever--Peaches.\"\n\nWith a smile to the girls and a jaunty wave, he walked out.\n\n\"You are such a jerk,\" she shouted smiling, then cast the spell of forgetting.\n\nChapter Thirty-Three\n\nQuinn drove to Amanda's veterinary clinic. He needed to get to Oldtown but couldn't stop himself from driving by to make sure the little wolf girl was okay.\n\nThe clinic was located on the northwest side of town amid the lush pastures that lay alongside the Stillaguamish River. After the events of the day, the drive relaxed him. The rich smell of new-mown hay filled the air for some reason reminding him of his time with Mr. MacLeish. For all his sternness the man was not unkind, and he was the only father Quinn had known. More and more he regretted not having made more effort to stay close to the old man when he got out of the Navy.\n\nHe pulled into the parking lot and got out of the truck. No sooner had he opened the door, when he heard a squeal, and a tall blond woman came running from the back and grabbed him in a fierce hug.\n\n\"Oh Lanie, I thought I'd never see you again.\"\n\nQuinn was flummoxed. He had no idea how to respond.\n\n\"Lanie,\" she said in a tiny voice. \"Don't you remember me?\n\nKids in foster homes came and went. Nobody got too close.\n\n\"Sure, I do Suzie. I'm just kinda surprised you remember me.\"\n\n\"Why wouldn't I? You're my big brother. You taught me how to ride a bike. Hey, you need to meet your niece. Charlie come on out and meet your Uncle Lan.\"\n\nA little blond-haired girl with a smudged face came out from the back holding a tiny kitten. The little wolf girl was with her, she was holding a puppy.\n\n\"Charlie, this is your uncle Lan.\"\n\nThe little blond-haired girl walked over to him and turned big eyes up to him.\n\n\"Are you really my uncle?\"\n\n\"I must be. Your mom says so.\"\n\n\"Where have you been? You missed Christmas and Halloween.\"\n\n\"Charlie!\"\n\n\"I've been on a long trip and just got back.\" He looked over at the little shifter girl. \"Where did you find the puppy, honey.\"\n\nShe looked down shyly and pointed to the back.\n\n\"That's Katrinka,\" Charlie said. \"She doesn't talk much on account of she's shy. She's my new friend. Her horse is sick. But mom says she will get better. Are you going to live here now?\"\n\nQuinn smiled. Apparently, Charlie had no problem with shyness.\n\n\"Sweet Mother, Susie,\" he laughed, \"She's a carbon copy of you when you were little.\"\n\n\"Yeah, she's a handful.\"\n\n\"Hi Uncle Lan,\" the little wolf girl chirped.\n\nQuinn's heart cracked.\n\nSomehow, against all odds, Lachlan Quinn had a family.\n\nChapter Thirty-Four\n\nDark gray clouds menaced Seattle's skyline. Lightning flickered over Ballard as Quinn pulled off I-5 at 45th Street. He had decided to drive to Fremont and park the truck and walk to the Leprechaun's bar in Oldtown. He was going to get wet if it was raining there, but there was no help for it. Earth tech did not work there. As he slid into the opening behind Lenin's Statue, he was pleased that it was a warm summer day in Oldtown.\n\nQuinn was immediately accosted by two skinny girls who had frightened eyes. They looked to be eleven or twelve. The tallest one's thin coat gaped open, revealing the silvery sheen of a slave torc around her neck.\n\n\"Please sir, me and Annie will go with you only we need a bite of food first then we can go with you.\n\nDespite the warm reception he received at Mandy's clinic; Quinn's anger had remained on a slim tether ever since the farmyard. Now, it flared anew. The two girls stepped back in reaction. He tamped it down.\n\n\"Sure, girls. Some chow sounds good. Little Tommy's okay?\" He pointed to the diner across the cobblestone street.\n\nThey nodded meekly,\" Yes, master,\" and followed him over to the restaurant.\n\nThe waitress came up to their table. She looked at the two girls and gave him a look that should have torn the skin off him.\n\n\"We feed slaves in the back.\"\n\nQuinn ignored her.\n\nThe owner or manager shouted from the kitchen, \"Did you hear her mister, we feed slaves in the back.\"\n\nQuinn beckoned the girls to come to him. He placed both hands in turn on their necks. The torcs fell away. Quinn snapped them in two so they couldn't be re-used. The girls swayed in response and would have fallen if he hadn't caught them.\n\n\"No problem, lady. These girls are slaves no longer.\"\n\nThe waitress stared at him, open-mouthed, rooted in place.\n\n\"I ain't never seen nothing like that. How are they still alive?\"\n\n\"Magic. Give us some menus. And tell that cook to mind his manners. If I have to get up and have a talk with him, you're gonna need a new cook.\n\n\"Yes Master,\" she said quickly and scurried away to do his bidding.\n\n\"Girls, let's introduce ourselves because that's what new friends do. I'm Lachlan.\" He looked expectantly at the oldest.\n\n\"I'm Kari Olsen and this here's Annie, my little sister.\" The little girl gave him a shy smile.\n\n\"Honored to meet you, ladies,\" Quinn gave the littlest one a grin. \"I used to know a little girl named Annie. She was the bravest person I ever knew.\n\nAnnie gave him a timid smile back. \"Does she live here?\"\n\n\"No, she's up in heaven with the angels. Now, you two go ahead and order anything you want. Personally, I'd suggest we start with chocolate milkshakes. They are really good here.\"\n\nKari nodded, then after some whispering with her sister, shyly pointed out two selections to the waitress.\n\n\"Okay, while we wait for our meals. Why don't you tell me your story?\"\n\nThe two girls' story was heartbreaking but not uncommon, Quinn had heard scores like it during his time in the System. They had no memories of their father. Their mother was a waitress who had been injured in an automobile accident. Like many others, she had gotten hooked on the Oxycodone that the doctors had prescribed to manage the pain so she could work. Then her prescription ran out. After that, it wasn't long till she was well down the path to junkie hell. Eventually, she had OD'd on fentanyl. leaving the two girls alone.\n\nQuinn had been streetwise since he was seven. He immediately recognized that these two had not been on the street long enough for the experience to transform their innocence into a hard protective shell of cynicism. The girls were still shell-shocked by the turns their lives had taken. They clung together like two kittens.\n\nA half-blood Fae named Sophie had tempted them across the border and into Old Town. After three days without food, they met a \"wonderful\" man who had saved them. He gave them some soup and their special necklaces. He promised them a safe, warm place to stay and plenty to eat if they would do some favors for him.\n\nQuinn could see that man's persuasive spell-craft was such that they never questioned the \"special favors\" the man wanted them to do.\n\nThe fucking Leprechaun.\n\nThe problem had been that most of the men they approached had ignored them--except for a couple of creepy guys that they had to run from. Quinn was their first good prospect.\n\n\"I'm going to get you guys to a way better place, but first I need to do some stuff. How would you like to go see some puppies while you wait for me?\"\n\nThe two girls looked doubtful. \"But Sir, the man will be mad at us. He told us we couldn't tell, or he would be mad.\"\n\n\"Oh, I wouldn't worry about that. I'm going to see him right now, and I guarantee he'll be happy to hear that you guys found a better opportunity.\"\n\nQuinn led the two girls across the street to Steve and Edie's Clinic.\n\nEdie's sister Norma was at the counter when they walked in.\n\n\"Hi Lan, haven't seen you for a while. Who're your little friends.\"\n\n\"Hey Norma, these two are my friends Annie and Kari. They haven't been to a doctor for quite a while. I'm hoping Edie could check 'em over. I also promised they could see the puppies.\"\n\n\"Girls this is my friend Norma. She's a real nice lady and you'll be safe here until I get back. Then we'll go find a store and get you some better clothes to wear.\"\n\nEdie came out to the front as Norma was leading the girls back. Quinn had known her for a couple of years, ever since he'd had a hand in remodeling the new wing to the clinic.\n\nShe gave Quinn a questioning look.\n\n\"Long story Edie. For some reason, this is my week to stick my nose into things. Those two are street kids the Leprechaun enslaved. Would you check them out? I'm going down to see him now.\n\n\"Sure, I can do that,\" she said. \"But Lan, I don't want his thugs showing up here looking for them.\"\n\n\"I'll take care of that. Have you seen Niamh Harpe around?\"\n\n\"Yes, she was here a couple of days ago She told me she was heading down to the Leprechaun's place.\"\n\n\"Thanks, see you soon.\"\n\n<p align=\"center\">***</p>\n\nIt was late afternoon when Quinn arrived at the Leprechaun's club.\n\nHis growing outrage of the day's events had turned his normally bright green eyes to pools of a green so dark that they appeared black. The dragon whip on his arm caught his mood moved restlessly under his skin.\n\nThe place was stirring with the early shift employees arriving to prep the place for opening. A horse-drawn wagon was delivering produce and a butcher's cart was lined up next in line with two sides of beef. Two squat mountain trolls with gold-tipped under-tusks who Quinn assumed functioned as door guards were sweeping the front sidewalk.\n\nThey stiffened as he walked up.\n\n\"What clan troll.\" Quinn grunt-growled in trollish.\n\nBoth trolls widened their eyes at hearing their mother tongue from a human mundane.\n\nThe male puffed up and glared at him. The female answered as was the custom--troll society was a matriarchy. Her voice was oddly high pitched given the fact that she probably weighed north of five hundred pounds.\n\n\"We are High Granite Clan, White Stone Sept, human,\" she said politely. Her purple eyes looked Quinn over curiously.",
        "Quinn pulled up the sleeve on his right arm and showed the blocky female the tiny rune under the silver band of the dragon whip that lay on his arm.\n\nShe immediately lowered her eyes and started to shiver.\n\n\"How may we serve, Master,\" she asked.\n\n\"I'm looking for a shifter woman called Niamh Harpe. I was told she came by.\"\n\n\"She entered this place two nights ago. She has not departed through these doors.\"\n\n\"Thank you, sister. Go now and call any of your clan's siblings who work here and leave--and sister, I hope for your sake that I never see you working for a Child-Slaver again.\"\n\nQuinn started to enter. The male put his arm out to stop him. The female gave a moan. She grabbed the male's arm and jerked him away from Quinn.\n\n\"Please don't kill him, Master. He is young.\"\n\nQuinn nodded and walked into the club.\n\n\"You fool,\" the female hissed. \"Did you not hear me call him Master? Have you ever heard me call anyone Master, let alone a human? He would have taken your head in a heartbeat. He is Death, and he's come for the Leprechaun.\n\nThey were both gone before Quinn had walked three paces.\n\nThe club was brightly lit. A cleaning crew of four women with slave torcs were wiping tables and sweeping.\n\nTheir eyes followed him apathetically as he entered.\n\nBy now, Quinn was fully merged and centered. Hyper-aware. The dull-looking middle-aged slaves smelled of unwashed despair. The spill they were cleaning had the yeasty odor of badly brewed beer. A clank of dishes and a muted complaint about somebody's wife could be heard from the kitchen area. A half-blood female goblin bartender was chewing some sort of minty gum and slicing lemons at the bar. As he walked up to the bar, her eyes widened. He heard her heart rate suddenly accelerate--apprehension evident on her face.\n\n\"McGuire in, Miss?\"\n\nShe nodded nervously. She pointed to a doorway with a trembling hand.\n\n\"Go home, girl.\"\n\nShe reached under the bar, grabbed her purse, and dashed out.\n\nQuinn waved to the slaves.\n\n\"You ladies stop what you are doing and go to your sleeping place and wait for me.\"\n\nThey'd been slaves for a while. They left immediately, without any questions.\n\nThe office door was heavily warded; no fewer than five high-order spells guarded the entrance.\n\nQuinn touched the door. His runes flared. The wards dissipated.\n\nHe opened the door and walked in.\n\nThe squat figure of the Leprechaun called the McGuire sat behind the massive desk. The room stank of musky sweat and cigar smoke. The McGuire had a large cigar clamped between stained square teeth. His head sat atop sweaty rolls of fat that jiggled as he counted out what Quinn assumed must be the previous night's receipts.\n\nJust as he always did, he thought; Sweet Mother of All, it's Jabba the Hutt.\n\nA tall D\u00f6kk\u00e1lfar elf lounged on a blood-red velour sofa flanked by a scarred mountain troll.\n\nThe ancient Leprechaun's face registered annoyance at the interruption that morphed into surprise when he recognized his uninvited visitor.\n\nHe gave Quinn a politician's practiced smile.\n\n\"Why sweet Mary Mother of God, if tisn't Lachlan Quinn come to visit.\" His rich voice rolled the words soothing and compelling. \"Be at ease and tell us why you're a-visitin' me poor pub.\"\n\n\"Well, Mister McGuire, originally I thought to inquire for news about a shifter named Niamh Harpe, but today I came upon two recently enslaved mundane kids. You might remember from our last meeting the warning I gave you.\n\n\"Oh, I'm sure there's some misunderstanding--but you busting into me pub a-hurling accusations be hurting my feelings.\" He glanced over the Elf and the Troll. \"I have some friends now who can pick up the slack for me.\"\n\n\"Take him.\"\n\n\"Wait,\" Quinn looked at the troll and snapped in trollish \"What Clan, Troll.\"\n\nHigh Granite, Black Diamond Sept,\" he answered.\n\n\"Go home, Troll. You don't have to die today.\"\n\n\"I took this man's money.\"\n\n\"So be it.\"\n\nQuinn loosed the dragon.\n\nThe whip sheared through the troll's thick neck like a hot knife through warm butter. Its head toppled to the floor. Its body stood upright, spurting blood. The heart didn't realize it was dead.\n\nThe elf stood open-mouthed at the casual suddenness of the troll's death.\n\n\"Elf, go back to your Prince now or I will feed your life to my dragon,\" Quinn sang. \"If I see your face again, I will harvest you.\"\n\nThe elf made a gesture and disappeared.\n\nHe looked at the Leprechaun who had not moved a muscle.\n\n\"The troll was worth a thousand of you. He had honor. Where is Niamh Harpe?\"\n\nThe fat leprechaun recovered from his shock quickly. His piggy eyes grew calculating.\n\n\"Before I answer your question, Lachlan Quinn,\" his rich voice throbbed with his magic, \"why don't you tell us what you want with her.\"\n\nThe compelling magic of the voice washed over him with no effect. Quinn sighed. He realized that the fat being didn't believe he was in mortal danger in his heart of hearts. He had lived so long in power that he thought he was invulnerable.\n\n\"Look, just answer the question, please. I'm not a being who likes to inflict pain, but I will make you an exception.\"\n\nThe fat being's eyes widened as they looked over Quinn's shoulder and then flipped a knife.\n\nQuinn didn't distract. He stepped aside, easily dodging the small kunai throwing knife.\n\nHe riposted instantly. The whip sheared off the leprechaun's arm at the elbow.\n\nAnd the screaming started.\n\n\"I will ask again, what have you done with Niamh Harpe,\" Quinn's voice was a monotone--calm and patient.\n\n\"Ye cut off me arm, you bastard,\" The leprechaun cried, his eyes wide with disbelieving shock.\n\n\"Tell me.\"\n\n\"Alfheim, I sent her to Alfheim.\"\n\n\"One more question. One of Three has its fingers into matters up in Emory. Is it you?\n\n\"That fucking Druid. I curse...\"\n\nQuinn's wrist twitched, and the dragon took his head before he could utter his death curse.\n\nThe Leprechaun's head lay with eyes open still showing shock amidst piles of Oldtown script and mundane dollar bills.\n\n\"I warned you.\"\n\nHe picked up the bag that contained the club's receipts, dumped them out, and shoved the gristly head in.\n\nHe had one more stop."
    ],
    "authorname": "CharlyYoung",
    "tags": [
        "visitot",
        "wolf girl",
        "witch",
        "goblin",
        "justice"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-keeper-ch-32-34"
}