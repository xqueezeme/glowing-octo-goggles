{
    "title": "Seven Days Ch. 07",
    "pages": [
        "Victoria marched back into the club as quickly as she could. She had to get away from Nic. What the hell was wrong with her? She kept glancing behind her to make sure Nic hadn't followed her back in. She needed to find Sonny and go. She was done with Nic Andretti. Completely done. \n\nVictoria scanned the crowded club. Everything seemed to be moving in slow motion. She felt dizzy. Why was she letting this happen? Why did she put herself in this situation? She saw Sonny in the distance talking to a group of people and laughing. He had just used her, and much like Nic, didn't even care how it had hurt her. She realized right then, that she wasn't riding back with him. She had trusted a snake, been bitten, and she had no one to blame but herself. She just wanted both Nic and Sonny out of her life for good. And if they wouldn't stay away from her, she'd damn sure stay away from them. She found the front entrance she and Sonny had come through earlier and made a straight line to it. She had almost reached the door when someone grabbed her arm.\n\nVictoria spun around to see Sonny staring at her. \"Where are you going?\" he asked, gripping her arm tighter, while scanning the room, no doubt looking for Nic. He had such a low harsh tone in his voice, that she was caught off guard for a moment.\n\n\"I'm going back to Paul's. I'll catch a cab. Now let go of me,\" Victoria stated, hating herself for spending money that she was trying to save.\n\n\"I'll take you back,\" Sonny said, while pulling her toward the door. What the fuck was wrong with these Italian men?! Always pushing or pulling her somewhere!\n\nAs soon as they pushed through the door, Victoria wrenched her arm free from Sonny. \"Don't you fucking touch me! I mean it. You did ALL of this on purpose, didn't you? You knew he was going to be here?\" Victoria asked. She was so angry she didn't know what to do. Angry at Nic, angry at Sonny, but most of all pissed at herself for falling for Sonny's trap and then having sex with Nic as if his hurting her hadn't mattered. She wanted to smack herself.\n\n\"Yep.\" Was Sonny's only response.\n\n\"So you basically used me to piss him off?\"\n\n\"Eye for an eye,\" Sonny stated, grinning at her. Victoria wanted so badly to slap him. Before she was through with all of these people, her hand would be in a cast. But at the moment, she had nothing left to say to Sonny. She was done with this whole thing. She turned to walk away.\n\n\"But I didn't know he'd react so strongly about you,\" Sonny called after her. She didn't bother turning around. \"Good to know...\" she thought she heard him mutter.\n\nNic finally made his way back into the club. He had wanted to follow after Victoria, but he wasn't ready to go emotionally where Victoria wanted him to. He knew he was approaching a crossroad and would soon have to turn left or right. But for right now, he just wanted to stand still. \n\nHe found Jimmy leaning up against the bar. \"I'm taking off. I feel like shit,\" Nic said to him. Jimmy nodded and guzzled down the rest of his drink. Nic motioned for Raymond, and the three of them walked out of the side door.\n\nWhen Victoria reached Paul's, she paid the cab driver and went straight upstairs to the guest room. She pulled off the skimpy blue dress and threw it in the trash. She entered the bathroom, turned on the faucet in the tub and stepped in. She needed to scrub off this entire night. When the water had filled the tub, she leaned back and closed her eyes. She felt like a fool. A fool for even halfway trusting Sonny, and for admitting to Nic that she loved him. Why the hell had she said that? He had looked at her, but then said nothing. Obviously he didn't feel the same way. She was an easy lay...and for that, she would never forgive herself. Victoria had always given into him sexually, so no wonder he felt like he could fuck her in the back of a limo despite everything that had happened. Because he could.\n\nVictoria slowly dipped her head underneath the warm water and held her breath. Maybe a moment of clarity would come while she was submerged. She didn't have a lot of money saved up, but she had enough. She needed to get a place of her own. She couldn't continue to impose herself on Paul's generosity. \n\nWhen she could no longer hold her breath, she raised up quickly, breaking through the surface of the water, gasping for air. She coughed for a second and then wiped her face with a towel. Yes, her quest to find her own place would begin first thing tomorrow morning.\n\n***********************\n\nJimmy sat on the other side of the chess board waiting for Nic to make a move.\n\n\"You should go visit her at that restaurant she works at,\" Jimmy suggested. Ever since the incident with Sonny a few days ago, Nic hadn't mentioned Victoria. \"And I don't mean just driving by her place of work.\" A pastime Nic had started when he found out about her working there.\n\nNic surveyed the board and completed a move. \"No. This is better. For both of us.\"\n\n\"Wow, what a copout,\" Jimmy grumbled, moving another piece. He looked up to find Nic's eyes narrowed on him. \"I'm just saying, why is it so hard to admit you like the girl, Nic?\"\n\n\"Because that's irrelevant.\"\n\n\"How so?\"\n\n\"Jimmy, how is any of this your business?\"\n\n\"It's your turn to move. And over the years I've become nosy like my wife. And because you are my best friend. And speaking as your friend...you're not quite the asshole you think you are,\" Jimmy replied.\n\nNic glanced down at the board. \"Marianna used to say that.\"\n\n\"Yeah, well I always knew your mother was a smart one.\"\n\nNic sighed and moved his knight. \"She's better off without me, you know. I don't want her mixed up in this...this way of living. I don't want that for her. And with her in my life, she clouds my mind. I can't focus on the things I need to do and continue being successful. And knowing she's...never mind, it's just annoying.\"\n\n\"What's annoying?\"\n\n\"Knowing she's\u2014fuck. I don't even want to say it. That she's my only--\" \n\n\"\u2014weakness?\" Jimmy asked, knowing the answer already.\n\nNic looked up at Jimmy and slowly nodded his head. Yes, she was his weakness. He had to be sharp and on his A-game at all times, and already on several occasions in the short time that he had known her, he had made some pretty substantial errors.\n\nBut in the limo, she had told him she loved him. Or at least she thought she loved him. At that moment, he wasn't sure what to say back to her. Amber had said that to him before, but never quite like that. Nowhere near as honest. When he had looked into Victoria's eyes after she made that statement, he could see and feel she was telling the truth. She actually loved him. Him! Even after all the shit he had done to her. That in itself, proved she was a better person than he could ever be.\n\n\"Yeah, my weakness. Now enough of the touchy feely stuff,\" Nic said.\n\nJimmy chuckled, \"Well even Achilles had a weakness, my friend. Hell, Samson, Othello, Bill Clinton...it happens to the best of us. You know what mine are? Three little girls sleeping in their beds, who all probably tried to wait up to see when poppa was coming home. But no, I'm here playing chess with you at two in the morning.\"\n\n\"Then go home,\" Nic said, smiling in his friend's direction.\n\n\"Oh, no. I've learned my lesson over the years. If I'm a few hours late....my wife is still up and I won't hear the end of it. She can be brutal! But...if I don't come home, usually when I turn up she's so glad to see me that she forgets about my tardiness. See, I've got it down to a science.\"\n\n\"I see...and checkmate. Now go home,\" Nic said, standing and stretching.\n\nJimmy looked down at the board. Fuck! Nic always won. Even when they were kids growing up playing cops and robbers, Nic always won, no matter which side he was on.\n\n\"Alright, but if I turn up tomorrow with bruises, it's entirely your fault,\" Jimmy complained, grabbing his jacket. \"I'll see you tomorrow\u2014well, I guess later today.\"\n\nThe two men walked to the door together, but Jimmy turned to Nic before he exited. \"I know you know how to run your life. But just take my advice on this and go see her, Nic.\" And then Jimmy left the room.\n\nNic closed the door. He stood there for a moment thinking about the chess game. Checkmate. That was it. He was done with thinking about it. He needed to make a fucking move. He had tried to stay away from Victoria, and even though in his mind, he hadn't broken that rule...he wasn't fooling himself any longer. Sane men didn't drive by a woman's apartment and place of employment several times a week. He was in love with her. Crazy, stupid in love with her and it was time to show her. Time to make his move.\n\nBut there was something he needed to do before he spoke with her. Something he needed to start again. He pulled out his cell phone and dialed a familiar number.\n\n\"Hey Reuben, sorry to bother you so early in the morning, but I\u2014well, thank you. I just wanted to see if you could start up the divorce proceedings again.\" Pause. \"Yeah, I just want to get it done as quickly and with as much discretion as possible.\" Pause. \"No, I'll talk to Amber tomorrow.\" Pause. \"Alright, I'll let her know. Thank you.\"\n\nNic clicked off his cell phone. His whole body felt tight with stress. He had never been much of a sleeper, but lately he hadn't been getting any sleep. He remembered the last night he had slept beside Victoria. He had fallen into such a deep sleep that he had to be wakened by her the next morning. And that never happened. God, he'd give anything to sleep like that again.\n\nHis cure for stress and insomnia was always sex or exercise. Sex or exercise? Who was he kidding? He knew he wasn't having sex with anyone. That's what Victoria had done to him. So he proceeded to look for his Nikes.\n\n*********************\n\nThe next morning, Nic called Amber to see if she could meet him for breakfast. He waited patiently for her to arrive. She always had to be ten minutes \"fashionably\" late. Normally to punish her for her lack of consideration when it came to his time...he would have just left. But this was important and he needed to tell her something as soon as possible.\n\nShe showed up dressed in some trendy outfit, Ugg boots and sunglasses. Nic tried hard to control his frown. Why she continued to dress like she was a fifteen year old on the cover of Pop Magazine was beyond him. But that was his wife, for better or worse--definitely more the latter.\n\n\"Hello Nic,\" Amber said, as she plopped down in the seat. \"Excuse me,\" she said, stopping the nearest waiter. \"I'll have a Lychee Martini please.\" She then turned to Nic and removed her sunglasses, \"So what is this about?\"\n\n\"I had Reuben start the divorce proceedings. He'll be delivering the papers to you later today. He said if we both agree to all matters, the divorce can be quick, quiet and painless. He can have it all taken care of in less than two months.\"\n\nNic watched as her eyes darkened and she leaned back in her chair. \"You drug me out of bed for this? You can't be serious. I mean, I know we've had our problems in the past, but we can work this out.\"\n\n\"No, we can't. Don't make this difficult, Amber. Just sign the papers when he shows up.\"\n\n\"Why after all this time are you just now\u2014oh, this is about her?! Oh my God, if you want to continue fucking that little black bitch, then go ahead. You know I never minded stuff like that\u2014,\"\n\n\"\u2014it's not about THAT!\" Nic said, raising his voice, before he immediately lowered it. He was not about to engage in an argument with her in a crowded restaurant. \"This isn't a marriage, Amber. And it hasn't been for a long time, if ever. We both misled each other, but now we have a chance to correct it and put it all behind us. I hold no hard feelings toward you and I hope in time, you won't hold any against me.\"\n\n\"Fuck you! How about that?!\" Amber shouted.\n\nNic sighed. He scribbled on a piece of paper and then slid it across the table to Amber. \"This is what I'm willing to offer you. I'm sure you'll agree it's a pretty hefty sum.\"\n\nAmber glanced at the paper. \"No, I want more.\"\n\n\"Amber, we were only married for three years.\"\n\n\"Yeah, and would you like me to tell the judge that in those three years, you fucked other women the whole time. Oh...and that you run a very lucrative underground crime business with which several unlucky people who crossed you just mysteriously turned up dead.\"\n\nNic ran his tongue over his teeth when he finally unclenched his jaw. What the fuck did he ever see in this girl? Blond hair and long legs and because of that, he'd be paying a price the rest of his life. What a huge difference between her and Victoria. Amber's expensive tastes used to cause Eddie mini panic attacks, yet he couldn't get Victoria to pick out some jewelry at Tiffany's. Go fucking figure.\n\nFine, if Amber was going to fuck with him, he'd fuck with her.\n\nHe narrowed his eyes at her. \"And what makes you so sure you won't end up one of the unlucky ones?\"\n\nHe smiled on the inside when Amber's eyes widened. \"You wouldn't,\" she whispered. She then straightened up in her seat and tried to shake off her nervousness by rolling her eyes at him.\n\n\"Test me,\" Nic replied.\n\nAmber watched him for a few moments before she grabbed his pen and jotted down something on the paper and pushed it back towards him. \"Make this number happen, and mum is the word.\"\n\nNic looked at the figure and nodded. He stuck the paper in his coat pocket and stood. \"As always Amber, it was a pleasure.\" Then he walked out of the restaurant and hopefully out of Amber's life for good. But she was a tricky one. Something told him that she wouldn't give up so easily.\n\n********************\n\n'Home, sweet home,' Victoria thought, as she stood outside her apartment door about to push her key into the lock. She had to conceal a smile. It felt incredible coming back to her own place. A piece of sanctuary that no one could kick her out of. Her own little slice of heaven, no matter how small or old it was. \n\nThrough some connections at work, she was able to find a roommate and move out of Paul's. Her roommate, Stephanie, was this really cool Korean chick, who rarely stayed at the apartment. She was always on the go with her job or her friends. Which suited Victoria just fine. She felt like she really DID have a place of her own. She had painted her room a light lavender color and designed it how she wanted, with butterflies all over the place. She had cried a few tears of joy over that simple freedom. To decorate her own room. She never had one living with her folks. They could never afford anything more than a one bedroom, so she was designated to the couch for years. Her clothes were stuffed in the hallway closet along with boxes of junk. And that's how it had remained until her father kicked her out.\n\nThe day she moved out of Paul's, she had gone to him and thanked him for everything he had done. And promised him that if he ever needed anything from her, she would do her best to help. Lucky for her, Sonny had stopped coming around. She wasn't sure why exactly, but whatever the reason, she was glad.\n\nShe stood there thinking about Paul's kind eyes and warm smile as she stirred spaghetti sauce in a pot. Was he always that nice a man, or had the death of his wife changed him? She wasn't sure, but she knew that had it not been for him, she would have ended up in a shelter somewhere, sick with pneumonia. \n\nShe poured some sauce on top of the noodles and sat down on the sofa. She didn't bother turning on the TV. Neither she nor Stephanie had the money to get the cable turned on, but Victoria didn't care. She sat there on the couch eating spaghetti and thinking. And in the end, her thoughts settled on Nic, as usual. A part of her was miserable without him. The dumb part of her, she tried to convince herself. Sure, people over the years had called her a loner. But she'd rather be eating spaghetti by herself, than to be constantly disappointed and hurt by others. \n\nVictoria picked up a magazine and flipped through the pages as she continued to eat her dinner.\n\n*********************\n\nAntonio pulled at his collar. It seemed to be getting tighter and tighter, the more he thought about asking Nic about Victoria. Plus, he still wasn't used to wearing a suit every day. He was grateful for the opportunity he had been given, but the price he had to pay for it...was still keeping him awake at night. Nic had said he'd take care of the situation, but Victoria wasn't living with him. So where was she? No one there talked about her. It was like her name was off limits. \n\nLife had changed drastically for Antonio. He was now invited to the meetings with Nic, Jimmy and Eddie. He tried to keep up, but the three of them spoke almost in code and never repeated anything when dealing with business. A part of Antonio was in awe. The other part was scared shitless that maybe he couldn't handle this type of job. He figured Eddie had never killed anyone, but as far as Nic and Jimmy...well, you didn't get to their level without leaving a trail of bodies. But Jimmy had been showing him the ropes. Basically there were three rules. Number one, when you start making money...invest it, don't spend it and bring unwanted attention. Number two, secrecy is a must\u2014so if you get picked up by the cops...do your time and shut the fuck up. And three, which was probably the most important rule to Antonio\u2014stay the fuck out of Nic's way.\n\nAnd it was THAT rule that had Antonio sweating bullets. Usually Jimmy was around to guide him in what to do and what not to do, but today he was spending with his family. So it was just Antonio and Raymond in the house with Nic. And Raymond was definitely a man of few words. \n\nAntonio climbed the stairs and saw Raymond sitting outside of Nic's office. He thought about how difficult it would be to always have to be on guard, the way Nic had to be. To know that your life is threatened every single day, that even in your own home you have to be careful. Is this what he really wanted? He hated lying to his mother, but he knew she would smack the back of his head if she found out about his illegal activity.\n\n\"Hey Raymond, I was wondering if I could speak with Nic?\" Antonio asked, praying he wasn't sweating.\n\nRaymond stood up, towering over Antonio. \"About?\"\n\n\"Um, I need to ask him a question about\u2014well, it's really private.\"\n\nRaymond stood there a moment and then opened Nic's door and closed it behind him. Antonio waited on the outside of the door for a few seconds, before Raymond opened it and let him in.\n\nAs always, Nic was behind his desk writing something. Nic didn't look up when he entered. Antonio walked up to his desk and stood, waiting for Nic to address him.\n\nNic continued to write for a few moments, and then placed the papers inside his desk and locked it. Then he looked up at Antonio.\n\n\"Go ahead,\" Nic said to him.\n\n\"Hey Nic, I hate to bother you, but I needed to ask you something.\"\n\nNic continued to stare at him.\n\nAntonio took a deep breath. \"Nic, I would really like to apologize to Vict\u2014her about the way I treated her. I haven't been able to really sleep since that night, and I think if I knew if she was okay, I'd feel better.\"\n\nAntonio watched as Nic leaned back in his chair. \"She's okay,\" he simply stated.\n\nAntonio didn't know what to say. Was the conversation over? Fuck, he wished he had Jimmy with him. At least Jimmy would know when to pull him or if he could continue. Nic scared the shit out of him. At least with Jimmy, he had a family, so you knew there was a little bit of a softer side. But with Nic, despite what Victoria had told him...Antonio wasn't so sure there was another side.\n\n\"Thank you. That makes me feel a lot better,\" Antonio admitted. But still, he wanted to apologize to her personally. \n\nAfter a few more awkward seconds, Antonio decided to just let it go. He turned and was about to walk out when Nic stopped him.",
        "\"Come with me,\" Nic said, as he removed a handgun from his desk. Holy shit!! Antonio's feet felt like they were glued to the floor. But there was something about Nic. When he told you to do something, you just did it. He guessed he could kind of figure how Victoria had stayed with him so long.\n\nAntonio kept his mouth shut as Nic led him down to the basement and through a small door on the left. As soon as they entered, Antonio knew what this room was. He had never been at a shooting range, but he knew what one looked like.\n\nAntonio looked down the aisle at the paper target in the distance. He watched as Nic quickly cocked his gun and a second later sent two bullets into the head of the target.\n\nAntonio didn't mean to, but he jumped. He still wasn't used to all of this. Some might have thought he looked the part of Italian gangster, but in truth, he was definitely more of a lover than a fighter. The first time he had even held a gun was when Jimmy handed him one. When Antonio envisioned his life in the underground crime world, he thought of houses and cars he could buy his mom. The women, the respect. But he had forgotten exactly how Nic had earned that respect. Sure it was through clever investments and people trusting Nic's business smarts, but it was also in part due to fear. A skill that Antonio knew nothing about. \n\n\"Have you ever shot a gun before?\" Nic asked him.\n\n\"Um...I, well, honestly I lied to Jimmy. I told him that I had, but I hadn't.\"\n\nNic stared at him for a few moments. \"In our business, it would be a good thing to learn.\" Nic gave Antonio the handgun. Antonio stared at the target for a while, and then shot. He clipped the bottom edge of the paper.\n\n\"I'd advise you to practice. And in your spare time, read the Wallstreet Journal.\"\n\nAntonio nodded his head. \"I will.\"\n\nNic turned to leave, but before he took more than a few steps, Antonio heard himself ask, \"Nic, would you mind if I met with her?\"\n\nNic slowed his steps and turned back around. He narrowed his eyes at him. Fuck, Antonio knew this was one of those moments when he needed Jimmy's guidance.\n\n\"I appreciate you taking Victoria in when you did. But she is...special to me. And if you haven't noticed, I'm not a very sharing man. Especially when it comes to her. So I strongly suggest that you don't contact her.\"\n\nAntonio didn't want to agree, but he wasn't about to cross Nic. Not when just several feet away was a paper target with two bullet holes in the head part of it. \"Okay.\"\n\nNic began to walk back upstairs. \n\nAntonio finally relaxed. So he hadn't just walked to his death. \"For a moment, you had me scared. I thought this demonstration was meant to be a warning or something,\" Antonio lightly laughed.\n\n\"It was,\" Nic shot back over his shoulder before he closed the door. Antonio swallowed hard. He'd have to get used to Nic's sense of humor. If that was even meant to be a joke... \n\n*********************\n\nNic had decided tonight was the night. He had to have Victoria back. He hadn't been the same since she'd left him, and he wanted to finally show her what her life could be like as his girlfriend. Nic sat in his black Escalade watching Calamity's from afar. He watched through the windows as Victoria gracefully rushed around the crowded restaurant in her skimpy outfit. Her WAY too skimpy outfit. He knew exactly what every straight male in that place was thinking, because it's what he was thinking too. Shit.\n\nHe looked at her as she smiled at each customer and wrote down their orders. Her ass swayed from side to side in a natural feminine walk, causing his dick to harden. He knew her body from every angle. Front to back, top to bottom. There wasn't an opening on her body he hadn't been inside of and in some strange, possessive way, he felt that it meant she belonged to him. He was even jealous of some girl who had given Victoria a hug before the girl walked out of the restaurant.\n\nBut then, something caught his eye and caused him to open the car door. What the fuck? Some asshole had slapped her on her ass. But Nic relaxed a little when he saw her turn around and stick her finger in the guy's face, apparently telling him to back off. \n\nNic sat and watched for another hour. He felt like a stalker, but he couldn't help himself.\n\nHe saw the asshole who slapped her ass finally leave. Fuck, he wanted to follow that fucker and break all his fingers. Psycho, maybe? Yes. But whatever. Victoria looked so tired when she finally walked out. He wanted so badly to offer her a ride, but he knew she would refuse and that would ruin everything he had wanted to say.\n\nHe followed the bus until it dropped her off. He watched her enter her apartment and saw her lights turn on. He saw her shadow move back and forth through the apartment, and then he watched as darkness flooded the place. Nic pulled out his pen and began to write. He wasn't ready just yet to knock on her door. He would give her some time. Give himself some time to get his shit together. Then he smiled to himself. The thought of waking her up so he could see that cute, pissed off face she sometimes made, the one that always caused his heart to flutter, for some strange reason.\n\nVictoria woke up from her sleep. Shit, who the fuck was at her door at...she turned to look at the clock--one in the morning? The light knocking continued. She knew that Stephanie wasn't there, which made her wary of answering the door to begin with. She only had on a flimsy white tank top, which had been washed way too many times, and was now see through. And her black shorts from work. \n\nShe tiptoed to the door and looked through the peep hole. Shit!! It was Nic. It had seemed like forever since she had seen him. Victoria exhaled. He had not contacted her, so she assumed it was over. She had hoped it was. \n\nAnother soft knock came through her door.\n\n\"Nic...what do you want?\" Victoria asked, leaning her head against the door.\n\n\"I'd like to speak with you,\" was his muffled response.\n\n\"My roommate, she's\u2014,\" Victoria was about to lie.\n\n\"\u2014not here,\" he said.\n\nVictoria exhaled again. She had been about to say Stephanie was asleep.\n\n\"And how do you know that?\"\n\n\"I have my sources.\"\n\n\"Does that mean you've been stalking me?\" Victoria asked, irritatedly.\n\nSilence.\n\n\"Just go away. I have nothing to say to you. Our deal or arrangement or whatever twisted word we can call it\u2014is done. I mean, do you really even care how horrible you treated me the last time I was at your condo?\"\n\nMore silence.\n\nVictoria gave a small snort and shook her head. \"No, I guess you wouldn't care about that. You don't really care about anything. And in return, nothing cares about you. So forget what I told you in your limo. I didn't mean it. Just chalk it up to the rest of this crazy, confusing, fucked up relationship we had. Have a good life and leave me the hell alone,\" she said. \n\nAfter a few seconds, she glanced back through the peephole, and he was gone.\n\nVictoria stepped away from the door and into the living room. Her heart was racing and her stomach was flip-flopping just from hearing his voice. She was crazy. She walked over to the couch and sat down. She knew there was no way in hell she could go back to sleep now. She sat there a moment tapping her feet, before she realized she should probably be doing something more productive. She went into her bedroom and grabbed her laundry. It wasn't necessarily the safest thing to do at one in the morning, in a dark basement, but she had too much nervous energy. It was either this, or clean the already spotless kitchen again.\n\nShe slipped on a pair of light blue fuzzy bedroom shoes, picked up her basket and headed out the door. As soon as she closed the door behind her, she froze. Standing less than three feet from her was Nic. Her heart began racing once more. He was leaning up against the wall with his head down, as if he were asleep...or thinking. Then he slowly lifted his head as his eyes captured hers.\n\nAs always, just Victoria standing there in her thin white tank top and little black shorts was causing Nic's manhood to rise to attention. His gaze lowered from her shocked face to her neck, and then to her full, heaving breasts. Her nipples were protruding through the tight top, teasing his mouth. He glanced down at her small waist and full hips and then to her toned, milk chocolate legs. He slowly drew his eyes back up to her eyes. She was staring at him with a pissed off expression. It wasn't the cute playful one he remembered. This one seemed to be full of hate.\n\nWhile waiting in the hallway, Nic had tried to leave several times, but he just couldn't. He still wasn't sure what he was going to say to her, but he knew he had to say something. But her staring at him like that wasn't making it any easier.\n\n\"Victoria,\" he said, as she exhaled and walked right past him. Fuck.\n\nHe followed close behind her as she went down several flights of stairs. He knew not to say anything about it at the moment, but her ass looked so fucking good. A naughty thought quickly flashed through his brain, as he remembered riding that sexy rear of hers. He tried to get his mind focused back on the task at hand, when she stopped walking. He looked up and realized he was in the laundry room. There was only one washer and dryer, and the room was dark and dingy. He hoped she didn't come down here often by herself.\n\nVictoria knew he had followed her, but she wasn't ready to face him. Or talk to him just yet. She slowly placed each article of clothing into the washer, taking as much time as she could. She couldn't hear him behind her, but she knew he was there. She could feel his gaze scorching a path down her backside. And even though she was hot, his presence caused her to shiver.\n\nFinally after she poured in the detergent and started the machine, she turned around. \"What?\" she said, with as much hostility as she could muster.\n\n\"I need to speak with you.\"\n\n\"No, I'm done with that. I have nothing to say to you, and don't want to hear anything you have to say to me.\"\n\n\"This isn't easy for me, Victoria,\" Nic stated.\n\n\"Like it's been easy for me! Did you think it was easy to accept your arrangement? Did you think it was easy to accept the way you treated me? Did you think it was EASY to admit that I was in love with a man who told me I was little more than a whore? So forgive me, if I don't care that it hasn't been easy on you,\" Victoria spat out sarcastically.\n\nNic opened his mouth, but then quickly closed it. If Victoria were still in his \"arrangement\" he would have picked her up and fucked her up against the dryer, while telling her she better never speak to him like that again. But things had changed. This was different. She was different, and that's not why he had come there. \n\n\"Can we just go back upstairs to your apartment and talk?\" Nic asked, trying to get his temper under control.\n\n\"Oh, we've done enough talking over the past few months. Hmm, let me see, the many things you've said and done to me. You called me your own personal slut...remember that? You also called me that the night I had gone looking for you, only to find you with another woman. And let's not forget having me disrobe in front of Jimmy and Raymond. Betting me in a fucking pool game. Or letting me know I was worth every penny you paid for me,\" Victoria said. She tried not to let her voice crack, but she was hurting all over again. This arrogant fucker wouldn't see another tear from her.\n\nNic's face burned with shame. He felt like an idiot. He truly had been a wolf and she was nothing more than a lamb. No competition at all really. And he had tried to destroy everything that was innocent about her for his own amusement and then punished her because she made him feel things he wasn't ready to admit. He felt like a little boy in school with a crush. A young boy who pushed, annoyed and bullied the young girl he had a crush on. He knew the things he had said to her were to hurt her and convince himself that he wasn't more than just physically attracted to her.\n\nHe didn't much want to do this in a dark, cold basement with the loud droning of the washer in the background, but it was now or never.\n\nVictoria rolled her eyes. She just wanted him out of her life. She grabbed her basket and walked up to him.\n\n\"Nic, I don't have any more time to waste on you. I'm done with--\"\n\n\"I'm in love with you.\"\n\n\"\u2014all of...,\" was the last thing Victoria whispered. She closed her mouth, then opened it, but closed it back because she wasn't sure what to say. She searched his eyes, and they looked...sincere. It wasn't that cold, glacier look he often gave her. It was a different look. Like he was shy or something. After a few more moments of silence, he finally spoke again.\n\n\"Victoria, if you let me come upstairs, I have even more I'd like to say to you,\" Nic said, staring into her big brown eyes. She was so beautiful to him. Her messy curls pulled tightly into a ponytail, and that deliciously curvy body. How the hell had she managed to wrap her tiny hands around his heart and squeeze? Years of building up a fa\u00e7ade that Victoria Davis broke down in a few months. But tonight, he was laying it all on the line for her if she would give him the chance. He waited patiently for her reply.\n\nVictoria looked down at her empty basket. She wasn't sure what to do, but she prayed she was making the right choice.\n\n\"Okay,\" she whispered.\n\nNic realized he had been holding his breath. He quietly breathed out. He followed her out of the laundry room and back upstairs to her apartment. She wiggled the key in the lock, trying to open the door, but it wouldn't unlock. Nic leaned around her and grasped her soft hands, pulling the key from her. He pushed it harder into the lock and turned. She was completely still in front of him, while his body was pressed against her back.\n\nWhen they entered the apartment, Nic looked around. Everything was very neat but very small. The kitchen/living area was pretty much just one room. The hallway was short and narrow, and he assumed it led to two bedrooms and a bathroom. He turned to look at Victoria as she glanced around the room.\n\n\"It's not much, but I like it,\" she quietly admitted.\n\n\"Could I have a glass of water?\" Nic asked. Suddenly his mouth was dry at the thought of what he was about to do.\n\nAfter Nic drained the glass he walked over to the sofa and sat down. It wasn't really a comfortable couch, but what the hell. He wiped his hand down his face and sat staring at the blank TV. He turned to Victoria and watched her as she sat down on the opposite end of the couch. \n\n\"I...,\" Nic started, then stopped. He reached into the inside pocket of his coat, pulled out a book and handed it to Victoria.\n\nVictoria looked down at the book. '100 Greatest Love Poems of All Time', her book that she couldn't find after her heart had been smashed into a million pieces by him.\n\n\"Sorry I kept your book. I read through it and I hope you don't mind, but I added another poem at the end,\" Nic said.\n\nVictoria slowly flipped through the book until she reached the last page. Scribbled in black ink were several words written in what she could only assume was Italian.\n\n\"What does it say?\" Victoria whispered, mesmerized by the Italian cursive strewn beautifully across the crisp white pages.\n\nNic silently exhaled and took the book. \"It says: In the eyes of my lady I see a light full of spirits of love, which bears to the heart a sweetness never known, so joyous life awakens there.\"\n\nHe glanced at Victoria. Her head was down and her eyes were closed. He continued, \"Something happens to me when I am in her presence, I cannot describe it to the intellect; it seems to me that from her lips there issues forth a lady so beautiful, the memory cannot hold her, because at once another is born of her, of unknown beauty, from whom it seems a star arises and says, 'Your salvation is come forth'.\"\n\nNic looked at her again. Her long charcoal eyelashes lay gently down on her face. Her cute, tiny round nose and full lips caught his attention. He placed the book down on the floor and recited the rest by memory, for it was one of his favorite poems. And now he could truly understand what the author meant. \n\n\"There where this beautiful lady comes forth, a voice is heard preceding her, and it seems, moved by her humility it sings her name so sweetly, that if I try to describe it, I feel how her worth makes me tremble; and in my soul sighs bestir themselves which say, 'Behold, if you gaze upon this one, you will see her virtue ascended into heaven'.\"\n\nHe saw a tear spill from underneath her eyelids and she quickly wiped it away. Nic wanted so badly to kiss the trail where the tear had made a wet track down her cheek, but he didn't make a move. He wasn't sure if that would upset her because he couldn't tell what she was thinking. He was normally very good at reading people. It came in handy in his line of work, but he couldn't read Victoria. \n\nNeither one said a word for a few moments. \n\nFinally Victoria spoke. \"Nic, I\u2014I just feel like so much was done and said, that it may never be right, you know.\" She wiped at her face again and then stood up from the couch and walked down the hall.\n\nNic stood and walked behind her. No way in hell he was going to give up that easy. No way. He followed her into her bedroom. He quickly glanced around at her lavender walls and simple decorations. He noticed a small makeshift bed in the corner. Nothing more than a box spring and two mattresses low to the ground. He felt a small pierce to his heart that she was living like this because of him. If he had just kept his fucking mouth shut, she would have still been nestled safely in his condo, instead of scraping pennies together to keep this tiny, old apartment.\n\nNic focused back on Victoria. She was standing in the middle of the teeny space, with her arms wrapped around her upper body as if she were supporting herself. \"I'm sorry Victoria. I'm ashamed of my past behavior and I hope that you won't hold that against me for long.\"\n\nVictoria shook her head. \"Nic, I--I don't know how I feel about any of this. So much has happened and...\"\n\n\"I know,\" Nic quietly said.\n\nVictoria didn't know what to do. She hadn't really prepared herself to see Nic ever again, and especially not tonight\u2014this morning, or whatever time it was. She had been taken completely off guard. He hadn't tried to contact her after their reunion in his limo, so she figured he was through with her. And as much as it had hurt, she placed Nic at the back of her thoughts and concentrated on getting an apartment and saving a little bit of money. But now that she had the apartment, late at night when everything was quiet, she would think about him. Dream about him. In her dream he wasn't a cold mobster. He was a husband, a businessman with legal practices and even a father in some of her dreams. She knew they all were a long shot, but when no one else was around, she felt it was okay for her to think about those things. Even if they would never come true.\n\nBut here he was and it was confusing the hell out of her. But he had said he loved her. Was that enough to wipe away everything?\n\n\"Nic, you hurt me so bad. I'm still so hurt and mad at you,\" Victoria admitted, praying her voice wasn't cracking.\n\n\"What can I do to make you forgive me?\" Nic said, taking a step toward her.\n\n\"Let me slap the shit out of you,\" Victoria spat, and was immediately taken back by her statement. \"I mean--\"\n\n\"Go ahead,\" Nic said.\n\nVictoria looked up at him. \"What?\" she asked, incredulously.\n\n\"Hit me, if it will make you feel better,\" Nic whispered, approaching her more closely. He reached out for her and immediately her tears began to fall from her eyes. She tried to push him away but he held on to her tightly. \n\n\"Don't, Nic,\" Victoria said, trying to control her frantic breathing.",
        "Nic started to lean down to kiss her, but her hand suddenly connected with the side of his face with a loud crack. He stopped, but didn't flinch from her. She slapped him again and then a third time until she wrapped her arms tightly against his torso and collapsed into sobs. Nic could hear her mumbling something through her cries, but he couldn't understand it. He just wanted to hold her. He pushed her towards the small bed and gently laid her down. \"I love you,\" he whispered, albeit his cheek was throbbing. But that pain in no way compared to the wounded look in her eyes. \"I--love--you,\" Nic whispered as he kissed her forehead, nose and then her lips.\n\n\"Don't h-hurt me a-again,\" Victoria stuttered through hiccups, as she ran her hands through his soft black hair.\n\n\"I won't,\" he promised, as he slowly pulled off her tiny black shorts and soft light pink panties. He stared into her face as he slowly traveled down to a particular place between her legs. He could hear her sniffling as he slowly licked and kissed her clit. She immediately began to moan and twist underneath his assault, but he held her legs firmly with his arms. He had caused her enough pain, now he just wanted her to feel pleasure. To be happy. \n\nHe swiveled his tongue up and down and in and out of her sweet love nest. \"Nic...oh,\" he heard her whisper, as her legs began to tremble and breathing became erratic. She started coming and twisting in the sheets as he continued to enjoy her. \n\nWhen she was done trembling, Nic released her legs and removed his coat and shirt. He slowly unfastened his belt as he watched her wipe the remainder of her tears from her eyes. Her face was soft and void of any makeup and her nose had a slight red tint to it. She pulled her bottom lip between her teeth and in that moment she took his breath away. He pushed down his pants and boxers as he moved between her legs. He leaned down and kissed her as he entered her. They both moaned simultaneously at the familiar reunion of their bodies.\n\nNic rolled them over so that Victoria was on top, straddling him. She stared down at him as she slowly rocked her hips back and forth, riding his dick. Her eyes were still glassy, but she began picking up the pace, as she discarded her flimsy shirt. She braced her hands against his chest and closed her eyes and started breathing heavily. Nic knew she was close to coming. He wanted her to. Tonight was about her.\n\n\"Ooh, shit...shit,\" Victoria moaned. He felt so damn good inside her pussy. She had missed this. This intense feeling. She knew what she wanted and how she wanted it. \"Pull my hair,\" she whispered to him.\n\nNic raised up and gripped a fist full of her curls and yanked them down. She shrieked from the pain as another tear slid from the corner of her eye and into her hair. When the pain in her scalp finally subsided, she looked at him and shivered. Her lower body was still working miracles, squeezing his shaft, as her hips quickly rotated over his. Her eyes looked unsure, as if she wanted to ask him something, but she wasn't sure how. But then she gathered the courage.\n\n\"Um, Nic...can you--\" she started to say, but Nic knew exactly what she wanted. Before she could finish her sentence, he wrapped his hand around her throat. Her eyes immediately widened but then slowly closed as she moaned again and picked up the pace, almost bouncing her entire body up and down on him. He squeezed tighter and she started to shake. She reached up to pinch her nipples right before she violently came. Her body continued to shudder while on top of him, but then she went limp in his arms and he pushed her back onto the bed and settled on top of her.\n\nNic watched as she slowly opened her eyes and smiled up at him. But just as soon as the smile came, it faded and she closed her eyes again. A second later, he heard a small snore. Nic kissed her lips one more time and gently rolled off of her. \n\nThe bed was definitely too small for the both of them, but he turned his body sideways and gazed at her face. He hadn't even come yet, but he wasn't pissed, much to his surprise. Normally, with other women, he would have just pounded the shit out of them until he could get his release, but tonight really was about her. In that moment, she was all that mattered. And if things went according to plan, oh, he'd have plenty more chances to come inside her gorgeous body. At least he hoped she wouldn't change her mind about giving him a second chance. He stared at her as long as he could before his eyelids became heavy and he drifted off to sleep in an uncomfortable, yet peaceful position.\n\nThe next morning, Victoria awoke to the sound of her shower squeaking. She rolled over in the tiny bed and realized that Nic obviously wasn't there. She stared up at her ceiling. 'Did I do the right thing,' she thought as she heard him walking back towards her room. She guessed that was the good thing about her apartment. If someone tried to break in, she'd hear them easily. From the squeaky doors to the creaking floors, you couldn't hide that you were walking around.\n\nHe made his way back into the room with his dress pants on, and his clean white shirt unbuttoned showing off his tight abs and natural tan. His hair was still wet, as he pushed it back with his fingers.\n\n\"Um, you don't have any hot water,\" he said, raising an eyebrow.\n\nVictoria groaned and looked at her alarm clock on the floor. \"Oh, I'm sorry. Around this time of day we never have hot water. I have to take a shower either really early in the morning or midday while everyone is at work. Any other time there is never hot water. Sorry, I should have warned you.\"\n\n\"No problem. Besides, you were sleeping so soundly, that I didn't want to wake you up. BUT, now that you are up, let's get some breakfast,\" Nic said, walking over to her and sitting on the bed. He leaned down and kissed her, letting the little droplets of water from his hair fall onto her skin.\n\n\"Ug, you're getting me wet,\" Victoria laughed, pushing Nic away.\n\n\"Hmm, that's not the first time you've said that for me,\" Nic joked, and then dodged her playful punch. But just as soon as the spirited banter had started, it stopped. He noticed her face change and she looked sad.\n\n\"Nic, what are we doing? You're married,\" Victoria sighed.\n\nNic slowly ran his finger over her flat stomach. \"Not for long. My divorce will be finalized very soon.\"\n\n\"What?\" Victoria whispered. She hadn't expected to hear that. Was he really serious about all of this? About her?\n\n\"I want to do this the right way with you, Victoria,\" Nic said, staring down into her eyes. She smiled up at him and pulled him down on top of her.\n\n******************\n\nVictoria glanced around the fancy caf\u00e9 where they were having breakfast. She thought caf\u00e9s were tiny little places where you could just get a sandwich. Not some place that has table cloths and wine glasses. She looked over at Nic. He was staring down at the menu. God, this man looked so damn fine. He refused to wear his dirty suit from last night, so they had to stop at a Men's store so he could get a change of clothes. Victoria asked if she could pick out his outfit. At first he had refused, but enough pouting and she won out. She was so used to seeing him in suits that she decided to get him something a little more dressed down. She chose a nice lightweight gray T-shirt with cool designs on it, and dark blue jeans and a belt. She let him pick out a pair of shoes and he also purchased a pair of sunglasses that she swore had a price tag of one-hundred and fifteen dollars. One-hundred and fifteen dollars for sunglasses?! \n\nBut now they sat in this nice caf\u00e9 waiting for their server to arrive. She observed Nic's facial features. His parents must have been pretty damn good looking, because they had one hell of a fine son. His face was perfectly symmetrical. He was tall and his body was ridiculously proportionate and fit. He glanced up at her while she was in the middle of her observations.\n\n\"Something wrong?\" he asked.\n\nVictoria shook her head and glanced down at the menu.\n\nMaybe nothing was wrong for her, but Nic definitely wanted to get something off his chest. After the waiter came and he gave them their order, he asked, \"So, where do we go from here?\"\n\n\"What do you mean?\"\n\n\"I mean, we're a couple now, correct?\"\n\nVictoria nodded. Nic narrowed his eyes at her. \"You know, that's the second head gesture you've given me.\"\n\nVictoria rolled her eyes and smiled. \"Yes, that's correct.\"\n\n\"Thank you. So, now that we are a couple, are you going to move in with me?\" Nic asked. She immediately looked down, and Nic knew his answer right then. He took a sip of wine and glanced around the caf\u00e9.\n\n\"Nic, I\u2014I don't know. I just feel that this is all still so sudden. This is the first time I've been on my own two feet, and I like it. I know it's not as luxurious as living with you, but it's the first thing I can somewhat call my own. Do you know what I mean?\" Victoria asked, staring up at him for his approval.\n\n\"Yes, I do. I don't like it, but I understand it,\" Nic answered, ending the conversation about her apartment.\n\nAfter breakfast, the two talked as they walked downtown. They came across a furniture shop and Nic pulled Victoria inside. She was afraid to touch anything, for fear she'd break something that was more expensive than what she made in a year.\n\nNic pulled her towards the back where the beds were on display.\n\n\"Pick one,\" he whispered to her, and then squeezed her ass.\n\n\"Nic, no! I know mine's not much, but it's fine,\" Victoria said. She could see the hard line of his jaw set and he quickly exhaled.\n\n\"Victoria, I know you realize I have a lot of money. But this isn't about that. If you won't move in with me, then at least let me keep my sanity by at least allowing me to buy you a better bed.\"\n\nVictoria still wasn't used to this concept of money being spent on her. She knew she should try to be appreciative for the opportunity, but it still felt wrong to her. Her father hardly ever spent a dime on her, and perhaps that's what was holding her back. But, from the look on Nic's face, she wasn't going to argue back. \"Alright, alright Nic,\" Victoria said, finally giving in, letting out a loud exaggerated sigh. He smiled down at her as she stood on her toes and kissed him. Maybe this relationship could really work.\n\n********************\n\nOver the next few days, Nic and Victoria fell into somewhat of a normal routine that normal couples did. But his purchases didn't stop at the bed. He insisted on buying her a car. She didn't want something too flashy and pricey, so she settled on a regular two door, black Jetta. Of course it was the latest model, but she figured she could handle that. And not having to ride public transportation anymore wasn't something she'd miss. \n\nNic was also adamant about her having a cell phone. She had never really wanted one, because she felt they were a hassle and an unnecessary bill, but Nic got her one anyway. She asked to pay for the bill, but he just looked at her like she was crazy. But thinking about bills, she thought about her parents and their bills. She tried to not let it bother her, but it did. She wondered if Mr. Parker had finally kicked them out or if Nic's visit months ago had scared him into giving her folks a little extra time on paying the rent each month.\n\nAnd spending so much time at Nic's, she was bound to run into Antonio again. Their reunion had been a bit awkward at first. She had promised to meet Nic at his place. He wasn't there yet, but would be arriving at any moment. Eddie had let her in. He smiled at her but still barely said two words. She was walking upstairs to wait in Nic's office when she almost ran into Antonio. For a second, she didn't recognize him. He had gotten a haircut, removed his earrings and was dressed in a nice suit. His face registered pure shock--a look she had seen before, and it almost caused her to smile. But their last encounter was something Victoria still couldn't shake. Even though she knew most of it was Nic's doing.\n\n\"Hey Vicky\u2014Victoria. How are you?\" Antonio said.\n\n\"I'm good. How are you?\"\n\n\"Eh, I'm hanging in there,\" he said with a small smile. After that, they weren't sure what to say. He looked to the left and she glanced to the right. He finally turned back to speak again.\n\n\"You look really nice. Beautiful. I mean, you always did, but just wanted to tell you again.\"\n\n\"Thank you. You look nice too.\"\n\n\"Thanks. Hey, Vicky, I\u2014hell. I want to say--,\"\n\n\"No, it's fine. You don't have to say anything.\"\n\n\"I want to though. I\u2014every time I put on this suit I think about what I sacrificed to do it. And I'm not proud of myself,\" he said, brushing a hand through his hair. \"And I just want to say I'm sorry for everything.\"\n\nVictoria sighed. She was still hurt, but people do desperate things for those they love. She knew that ALL too well. \"I know you did it for your mother, and for that, I can't fault you. And I accept your apology.\" Then he flashed her that smile that she remembered.\n\n\"Really?\" he asked, grinning from ear to ear. \"I at least thought I was going to have to eat more shit than that.\"\n\nVictoria laughed. \"Well, I guess you caught me on a good day, Antonio.\" He reached out and hugged her, then immediately let go and looked around.\n\n\"Shit, I forgot he's on his way here. Um, don't tell him I just did that,\" Antonio said, looking down the steps toward the door.\n\nVictoria placed her finger to her lips. \"Our little secret.\"\n\nShe walked into Nic's office and sat down on the couch. Even his office couch was ten times softer than her lumpy couch at her apartment. But she refused to say a word about it, or else that would be the next large item delivered to her apartment. Of course, her roommate would love it, but Victoria didn't want to get Nic started. He already was pressuring her to let him pay the rent. But she needed to keep some freedom, although she appreciated the thought.\n\nShe walked over to his bookcase and scanned the titles. Some were business books, some philosophy, but most of them were for architecture and building design. What? She pulled one of the architecture books from the shelf and plopped it down on his large desk. Victoria flipped through a few of the pages. Most of it was technical stuff that she didn't understand, but she smiled at the many notes Nic or someone had made on the pages. And since he had left a poem for her in the back of her book, she wanted to write one for him, in the back of his.\n\nShe opened a drawer looking for a pen or pencil, and came across something she just couldn't ignore. She started pulling large sheets of paper from the drawer with sketches of buildings on them. The buildings were all so realistic and flawless. There were several different kinds. Some were finished, while others still only had the basic structure. One building had a futuristic aspect to it, and another looked like it could fit in with the ancient buildings in Rome or Venice. And on the drawings that were finished, he had added every little detail you could imagine, including the trees outside and people walking by. Victoria was so captivated that she didn't hear him enter the room.\n\n\"You know,\" Nic said, as she jumped and scattered the papers everywhere, \"if I didn't love you so much, I'd have to kill you.\"\n\n\"Shit, I'm sorry, I\u2014fuck, I was looking for a pen,\" she sheepishly said, as she picked up the drawings. \"Did you do this?\" Victoria asked, holding up one of the drawings.\n\nNic nodded. \"Yeah.\"\n\n\"These are so good. I mean, really great. You should do this for a living,\" she said, as he walked over and kissed her.\n\n\"I have a job,\" he said, sitting down behind his desk.\n\n\"I mean, one that doesn't carry a fifteen to life sentence,\" Victoria mocked.\n\nNic pinched her ass and she yelped. \"Well, there's not as much money in architecture as there is in...well, what I do.\" He pulled her down into his lap. \n\n\"Really, you are so talented. I wish I was,\" Victoria admitted.\n\n\"I'm sure you are,\" Nic said, nipping her neck.\n\n\"No, I'm not. But I'm okay with that. I know how to admire other's talents, so that's good enough for me.\"\n\n\"Okay, well try drawing some trees at the bottom of this building,\" Nic said, handing her a pencil.\n\n\"Alright, you asked for it,\" Victoria said, as she leaned over his desk. \n\nNic watched her hunch her back over the paper. He raised up and glanced at her profile. He stared at her face as she concentrated on the task. Her tongue even escaped out of the corner of her mouth, as she resembled a child hard at work. Nic smiled.\n\n\"There, how's that?\" Victoria asked, brushing off some of the leftover eraser from messing up several times.\n\nNic glanced down at the paper and raised an eyebrow. \"What's that?\"\n\n\"Those are the trees.\"\n\nNic glanced again and leaned closer to the paper. \"That looks like a hairball surrounded by mini toothbrushes.\"\n\nVictoria laughed and snorted. She gently slapped his hand. \"Asshole.\"\n\n\"I mean, most children learn to draw the basics--trees being one of them. What happened to you?\"\n\n\"Shut up!\" Victoria laughed. She got up from his lap, only to have him pick her up and throw her over his shoulder.\n\n\"Queen of the stick figures. That's alright baby, you have many other talents, and before dinner, we're about to spend some time learning about them,\" Nic said, slapping her ass, as he marched to his bedroom.\n\nAfter changing their dinner reservations twice due to Victoria showing Nic her 'talents', they finally made it to the restaurant.\n\nVictoria chattered on about many different things and Nic listened. He enjoyed hearing her talk. Actually, he enjoyed everything about her. Her smile, her excitement, her laughter, her teasing, her pensive moods...all of the things he had missed when they were apart. She was in the middle of explaining some incident at work when he slid two envelopes toward her. He hoped she would like the gift he was giving, because she usually hated when he bought things for her.\n\nVictoria narrowed her eyes, but managed a small smile in the corner of her mouth. \"Hmm, what's this?\" she asked, opening the envelope. When she pulled out the contents of the envelope, her mouth dropped and she stared up at him. Perfect. That was the reaction he had hoped for.\n\n********************\n\nVictoria couldn't believe it. She was looking out of a window the size of one of the walls in her apartment, at the most beautiful beach she had ever seen.\n\n\"Nic...this place is just too...much. Too beautiful. I can't believe I'm here,\" Victoria said. \n\nWhen they had first arrived in Bali, she almost cried. She hadn't even had a passport, but Nic knew a guy, who knew a guy, who got her passport within a day. The lavish plane ride, the limo drive to the villa...and the villa, itself--she couldn't even find the words. There were none. She walked around, expecting there to be several other people sharing this villa with them. But there weren't. It was for the two of them. Just the two of them and the ocean. \n\n\"Nic, this place is huge,\" she said, turning to look at him.\n\n\"I know. I can't stand to be cramped,\" Nic said, placing the key card on the bar.\n\n\"Oh, then you must hate my apartment,\" Victoria laughed, staring back out of the large window at the sun setting. This is what heaven must look like.\n\n\"I don't hate your place\u2014that much. But I'd still rather have you move in with me or at least let me pay for it.\"\n\n\"No, and Nic, we don't need four bedrooms here,\" she fussed.\n\n\"Yes we do. We need one to sleep in. I need an office and the other two...well, if you want, we can make love in those as well if it will make you feel better about them going to waste.\"\n\nVictoria laughed. \"Actually, I think it would.\"\n\n*******************\n\nNic and Victoria lay in bed, wrapped in each other's arms. They had been in Bali for two days, but for Victoria, time didn't matter here. She refused to look at any clocks during her stay. Nic had been semi good about trying to not conduct business, but she had to give him several evil looks every time he answered his cell phone. But tonight, with no one interrupting them, she had a few questions on her mind. ",
        "\"Nic, have you thought about...I mean, I know you just went through a divorce, but would you consider marrying again?\" Victoria hesitantly asked, while lacing her fingers through his.\n\nNic stared up at the ceiling. \"My first marriage wasn't so great, so it's not high on my list of things to do again. I'm not ruling it out, but I don't know.\"\n\n\"Do you want kids?\"\n\n\"Are you offering?\" Nic asked, grinning.\n\nVictoria lightly tapped him. \"No. I'm just asking. I want to know more about your plans for the future.\"\n\nNic sighed. \"I don't really think my occupation allows much room for something like that.\"\n\n\"But Jimmy has kids,\" Victoria countered, but then she realized how obvious she might sound. \"I mean, I'm just saying he's made it work.\" She didn't want to keep pressing the issue, but she just wondered if he could eventually have a normal life. Not that he would want that with her, but he did say he loved her. And she knew without a doubt, that she loved him\u2014so maybe her dreams at night weren't too far off the mark. \n\n\"Yeah, but Jimmy isn't the face of my business. I am. And when people get, well, pissed, they aim for me, not him. And they try to hurt those closest to me.\"\n\nBoth Nic and Victoria remained silent after that statement, with the future weighing heavy on both their minds.\n\n********************\n\nYes, Bali really was heaven, Victoria was sure of it. The warm water felt so good sliding down her body, as she quickly took a shower. She and Nic had spent the whole day touring the island. At the beginning of the tour, he was on his cell phone. At first it bothered her, because he was missing all of the sights, but then she thought about it. He probably did stuff like this all the time. His wife\u2014ex-wife seemed like she had expensive tastes, so this was probably nothing to him. She had sighed and leaned her head against the window as their driver zipped them around the most picturesque locations on the island.\n\nThey drove by the native people while in their everyday activities. Working hard...much like she did back home. She wondered if they still enjoyed the beauty of their own home, or if that was only something foreigners could see. Everything seemed more abundant and unrestrained. Just so full of life. They were passing a waterfall when she felt Nic's strong arms grip her waist and slide her back against his body.\n\n\"I had to take that call sweetheart,\" he whispered into her ear. \n\nVictoria nodded. \"You missed some really beautiful sights though,\" she pouted. \n\n\"Trust me, I'm staring at the most beautiful thing on this island,\" Nic said, twirling her curls between his fingers. He even surprised himself sometimes with the sappy shit he said when he was around her. But he meant every word. He was pretty sure that Jimmy and Eddie could handle everything while he was gone, but it still felt strange to be away for so long.\n\nVictoria leaned her head back and kissed him. To be such a cold hearted mobster, he could say the sweetest things. \"All forgiven,\" Victoria said.\n\nNic reached around and stuck his hand down the front of her thin dress, to grip her soft tits. He heard her moan and he bent down to bite her neck. He squeezed and rolled her tight nipple in his hands. \"Fuck, Victoria. I want to drag your fine ass back to our place and fuck the hell out of you.\"\n\n\"Then let's go,\" Victoria whispered, placing his other hand by her face, and gently sucking on his middle finger.\n\n\"Uh, shit,\" Nic said. \"Hey, we're ready to return and I'll double the tip if you can get us there as quickly as possible,\" Nic said to the driver. Victoria was already in her own little world. Her pussy was tingling and if the driver couldn't see them, she would have considered fucking Nic in the back of the car\u2014again.\n\nWhen they reached the villa, they barely got through the door because they couldn't part their lips from one another. Victoria pulled his shirt over his head as Nic stepped out of his shoes. He was about to pull her dress down when she stopped him.\n\n\"Mmm, Nic. I have, mmm, I have to\u2014to pee really quickly. I'll be right back,\" she said in between kisses.\n\nNic swatted her ass as she turned around and sprinted to the bathroom.\n\nVictoria washed her hands and walked back into the front room, but Nic wasn't there. \"Nic?\" Victoria asked. She looked outside, but he wasn't there either. She walked toward the back of the villa when she heard him talking. She opened up the office room door and found him sitting down with his cell phone attached to his ear and staring at his laptop. She placed her hands on her hips and narrowed her eyes at him.\n\nNic placed his hand over the speaker of the phone. \"Sweetheart, I have to take this call. I'll be done in a minute,\" Nic said, before turning his attention back to the computer screen. \"Yeah, I have the file pulled up now. And thank you gentlemen for joining at the last minute. Eddie can give you all the facts and figures, and if you have any questions at the end, please feel free to ask.\"\n\nVictoria watched as he ignored her presence and conducted his business call. They had cut their tour short to rush back and have mind-blowing sex, but instead, he hops on the phone. She stared past him and out of the large window at the beautiful view. The sun was gradually setting, casting a burnt orangish glow across the blue water. It really should have been a painting. She wished she could capture that moment forever. She looked over at Nic again. He looked so good sitting there in that chair with just his jeans on. No shirt or shoes. Exercise and milk definitely do a body good. It really wasn't fair to mere mortals like herself. He was smart, handsome, perfect physique and wealthy. People usually weren't blessed with all of those things at once without selling their soul to the devil. Mister perfect sitting there holding a business meeting in the middle of what was supposed to have been their sexual romp. 'Well, screw that,' Victoria thought.\n\nShe walked over and stood in front of him. She slowly started removing her dress. She smirked when she saw his eyes shift from the laptop to her body. His typing slowed and then stopped. Victoria unsnapped her strapless bra and pushed her panties down.\n\nImmediately Nic's dick got hard. Her body could keep his attention during the middle of a war. Her nipples resembled hard chocolate pebbles, beckoning for his attention. Her thin waist, toned stomach and wide hips only fed his lustful wants.\n\nVictoria was feeling so hot. She wanted to get him back for making her cut the tour short and then holding out on sex. Oh yes, he was about to pay.\n\nShe slid his laptop out of the way and sat on the desk in front of him, spreading her legs and giving him a perfect view of her pussy, already glistening with her juices. She slowly licked and sucked on her middle and ring fingers and after she slid them from her plump lips, she slowly slid them down her body. She left a slight wet trail, circling her nipples, past her belly button and then down to her tight, wet entrance. She guided her fingers inside her pussy and began to fuck herself slowly. Her head rolled back as she openly masturbated in front of him.\n\nNic...couldn't think of shit to say. He didn't know what the hell was going on with the phone call, because he had stopped listening when she opened her legs for his viewing pleasure. And now she was masturbating in front of him. His dick almost hurt, it was straining so hard against the zipper of his pants. He watched closely as her soaked fingers glided in and out of her...no, HIS pussy.\n\nHe knew she was doing this to punish him. And he deserved it, but Goddamn, what torture this was.\n\nVictoria started working her fingers faster and deeper, rubbing her clit with her thumb. Oh, it was building. That feeling that caused her legs to tremble and her eyes to roll back with such intense pleasure. She gritted her teeth and covered her mouth to keep from moaning loudly and disrupting his call--although that was kind of her plan. And then it happened. She came, jerking her hips forward, pumping her fingers faster and faster.\n\nNic's mouth opened and he almost dropped the phone.\n\nVictoria finally opened her eyes and looked at Nic. The look in his eyes seemed almost cannibalistic. Good. She stood up from the desk and placed her two wet fingers at his lips. He opened his mouth and quietly sucked her sweet juices from her fingers, while staring into her eyes. If the men on the other end of the line only knew what just happened. She could hear their voices through the phone, but it didn't seem as though Nic was hearing anything at the moment.\n\nNic watched as Victoria dropped to her knees. She stared up into his face as she deliberately took her time unzipping his pants. She pulled his dick out and began to massage and squeeze the stiff shaft. She rolled her tongue over the tip, licking the precum. He was about to shut his eyes when he heard his name being called.\n\n\"Yeah, I\u2014I'm here, Eddie. Repeat the question,\" Nic said, barely hanging on. \n\nVictoria looked back at his face as she engulfed the top half of his dick. Ooh...\n\n\"No, we d-don't\u2014\"\n\nVictoria swirled her tongue over and over and sucked harder and harder.\n\n\"\u2014disclose how we\u2014\"\n\nHer mouth continued to go further and further down onto his cock, until her lips almost reached the base.\n\n\"\u2014tr-transport our product...oh, um, until you are working dir-directly with\u2014us,\" he said, whispering the last word. Little sparks were setting off in his brain, and he could barely think. She pulled back and began sucking harder on the tip while pumping the shaft with her hand. Goddamn, he was about to explode in her mouth. \n\n\"Oh, shit,\" he said softly, forgetting the phone was against his mouth. He was almost there when he felt her wet, hot mouth leave his dick. She stood up and quickly pulled her dress back on and walked out.\n\nNic sat there with his member bulging from his pants and a shocked look across his face. No the fuck she didn't. \n\n\"Excuse me gentlemen, an emergency just came up. Eddie, can you reschedule,\" Nic said before he hung up the phone and headed for the door.\n\nVictoria heard Nic open the door and slam it shut. She could hear his hurried footsteps coming toward the front of the house. When he saw her, he looked pissed. Victoria slowly stepped backwards to the door and when he took one step towards her, she slid open the door and took off down the steps and onto the beach, giggling and running.\n\nShe squealed when she looked back and saw Nic jet through the door after her. She started running faster, but her laughing was causing her to run out of breath quicker than normal.\n\nNic was sure they were disturbing others who had villas close to theirs, but he didn't care. He was going to make her pay for leaving him hard like that. He was easily gaining on her and when he reached her, he pulled her back and threw her over his shoulders. She was laughing and screaming for him to put her down. Victoria was pleading for him not to do what he was about to do, but he did it anyway. He tossed her into the ocean and jumped in behind her. When she broke through to the surface, she playfully attacked him. They played around in the water for a few more minutes, before they started kissing and groping each other. Then Nic drug her back to the villa and into the master bedroom to spend the rest of the night finally making up for the short tour and phone call. The sun had started rising by the time their bodies disconnected from one another.\n\n********************\n\nVictoria put on the peach colored string bikini, one of the many outfits Nic had snuck and bought her. It was definitely not something she was used to wearing, so she put on a short white ruffled skirt to feel a little more clothed. She pulled her thick curls into a messy ponytail and walked out of the door. She was meeting Nic at an outdoor bar by the beach. He had left early that morning for a run. She wished she could have gone with him, but her body just wouldn't get up. When he had left her, he was shirtless, with just a pair of shorts and shoes on. He had tucked his shirt behind him in his shorts, for later. He had looked so damn fine, that she wanted to pull him back in the bed. But he had kissed her and took off out of the door.\n\nVictoria reached the bar and sat down on a stool. She glanced around and noticed the other tourists, along with the locals. Everyone looked so happy and carefree. She knew the feeling. She ordered a pretty pink margarita and waited for Nic.\n\n\"Damn, baby doll,\" Victoria heard a deep voice say behind her. But she wasn't going to be so vain to think the person was referring to her as baby doll. She continued to sip on her drink.\n\n\"What's your name?\" she heard another voice ask. She glanced behind her and it was confirmed that she was 'baby doll'. One guy was looking at her legs while the other was looking at her face. He must have been the one who asked for her name.\n\n\"Victoria,\" she politely said, then turned back around.\n\n\"You gotta man, Victoria?\" she heard the other ask. They were obviously from the States too, judging on their accents. One was white and wearing a ball cap. The other was black and shirtless.\n\n\"Yes.\"\n\n\"Is he here?\" \n\nVictoria turned back around in her chair. \"He will be in just a few minutes.\"\n\n\"Well, shit, he's crazy as hell leaving you alone. I'd be by your side every minute,\" the shirtless guy said.\n\n\"Or in you every minute,\" the one with the ball cap whispered to his friend, but loud enough for Victoria to hear.\n\nVictoria was about to tell the guys to fuck off when she looked over their shoulders and saw Nic leaning against the makeshift banister with his hands across his chest. He placed his finger to his lips. Victoria watched as Nic approached her and the two young men.\n\n\"Hello gentlemen,\" Nic said, as he placed an arm around Victoria's neck. The two men stepped back but kept straight faces. \"She's beautiful, isn't she?\"\n\nThe two boys glanced at each other quickly and then back at Nic. \"Yeah, she's pretty hot,\" ball cap said, obviously the more bold of the two.\n\n\"Yeah, well kill a few people and you can get a girl like this too,\" Nic said with a smile. Victoria was cringing inside. She didn't know whether to be shocked at Nic's words or laugh at the guys confused, somewhat scared expressions.\n\n\"I'm serious. It turns her on. The dangerous type, you know,\" Nic continued, in a thicker northern accent than he normally used. \"That's why she likes me. It's my line of work. Capisce? Of course you do, a couple of smart operators like you know what I'm talking about, I'm sure. You know why I'm here right?\"\n\nThe two guys looked at each other again, then the shirtless guy decided to call Nic's bluff. \"Man, fuck you. We don't know anything about you, or why you're here, and you don't know jack shit about us.\"\n\n\"Sure I do. It's my job to know and she's the bait. You've pissed off some people back in the US and that's why I'm here. I've been tracking you. You're staying further to the north side of the island, in the Mandin Hotel. And I can dispose of your bodies before your girlfriends will even know you're missing. But, I'm in a good mood at the moment. Just had an intense run. I feel like letting you guys off the hook with just a warning. This time. And this time only. If you leave quietly now, I can say I couldn't find you, and you gentlemen live to see another day? Sound good?\"\n\nBoth men looked like they had seen a ghost. They slowly stepped back from Nic and Victoria and turned to leave. They quickly scurried out of the bar and around the corner.\n\nVictoria couldn't believe what she had just seen. \"How the hell did you do that?\" she asked.\n\nNic ordered a drink and sat down beside her. \"It wasn't that hard. Over the years I've learned to read people very well.\"\n\n\"But, how did you know that stuff. Did you know them?\"\n\n\"No, but I figured they couldn't afford to stay further south, so assumed they were vacationing in the north. There's only one nice, but reasonably priced hotel up north, that's close enough to here that you could make it back in an hour or so. The Mandin, and that's where spring break kids stay. And guys like that never travel alone to a place like Bali. They had to have come with girlfriends. Plus, everyone owes someone something,\" Nic said sipping his drink. \"They were easy to pick on. It's the same method we use to squeeze info out of people we think are rats.\"\n\n\"Well, who do you owe?\" Victoria asked.\n\n\"No one,\" Nic said with a straight face.\n\n\"Holy shit, there's so much I don't know about you,\" Victoria said, shaking her head.\n\n\"Sweetheart, you know the more important things. The only things that matter.\"\n\nVictoria stared up at him. Perhaps it was the margarita, or the fact that she was turned on by dangerous men, or how sexy he looked, but she wanted to fuck him right then and there. Damn, this man had rocked her world. She might be risking a lot being with him, but she was definitely going to take the chance.\n\nLater that night, Victoria awoke to find Nic standing by the window, looking out at the ocean. The light from the moon cast a perfect soft blue color across his naked form. Victoria watched in awe as he stood perfectly still, giving her a chance to worship the fine strong lines of his back, leading down to the most perfect male ass she had never seen.\n\nShe threw the covers from her body and walked over to him. She wrapped her arms around him. She usually wasn't so comfortable with her nudity, but he was rubbing off on her. \n\n\"What's wrong?\" she asked.\n\n\"Nothing. I just can't sleep.\"\n\n\"You wanna talk about it?\"\n\n\"No. Not really,\" Nic said.\n\n\"Come on, you can tell me anything. I want to know.\"\n\n\"I'm just used to bad things following the good.\"\n\n\"What do you mean?\"\n\nNic turned around. \"Nothing. Don't worry about it. I think it's time for another inspection?\" he asked, looking her up and down.\n\n\"Well, that depends. Are you a harsh critic?\"\n\n\"Absolutely,\" Nic said, before twirling her around and smacking her ass.\n\nVictoria belted out a yelp.\n\n\"Perfect,\" Nic whispered, admiring her body more, while pulling her towards the bed.\n\nTheir last night in Bali, Nic took Victoria to an upscale restaurant. Victoria freaked when there were no prices listed on the menu. Plus it was all in a different language and she had no idea what to order. Nic finally just ordered for the both of them, and as they waited for their food to come, Nic noticed Victoria's bright smile.\n\n\"What are you thinking about?\" he asked.\n\n\"I was just thinking that I'm going to miss this place. Everything has been so fantastic, Nic. Thank you.\"\n\n\"You're welcome,\" he said, while pouring her some more wine. Victoria took a sip and then smiled at him again.\n\n\"You know, this is like a fairy tale to me. Perhaps a warped one, but a fairy tale nonetheless. I mean, I'm in a beautiful far away land, staying in a palace and dining at the most expensive restaurant I've ever been in. And just less than six months ago, I was sleeping on my parents' couch, holding down two jobs to support them, and had never been any further than where the city public transportation could take me. And it's only warped because of, well, your occupation and how we met\"\n\n\"Uh huh. So if this was a fairy tale, I'd be the prince or something, right?\"\n\nVictoria laughed at the idea of Nic being a prince. \"Um, I guess so.\"\n\n\"And if this prince asked his fair maiden to dance, would she?\"\n\nVictoria smiled again, as she took Nic's hand and the two walked to the dance floor. She held tightly to him as he whirled her around. She was truly happy. If this dance never ended, she would have been just fine with that. A part of her knew they had to go back, but she wasn't ready to share him again with his job. Or return to her tiny apartment. Or the loud hustle and bustle of the city. Yes, she could have stayed in this restaurant all night, dancing in a place with no prices on the menus, and life would have been perfect. But like all things, she knew it had to come to an end. She quickly wiped a tear from her face as he leaned down and kissed her.",
        "********************\n\nVictoria zipped up her coat and said her goodbyes to a few of the waitresses before she walked out into the cold midday air. Although she was happy to be cutting her shift short, she still hadn't gotten used to being back. She could have easily stayed another week in Bali. Or month...year, whatever, it was the most magical place she had ever been. She also hadn't been looking forward to returning to work. She loved her co-workers, it was just that some of the regulars tended to get too rowdy, and some days she just didn't feel like dealing with that shit. But at least now that she was back at work, she could get her money in order again.\n\nThe cold air hit her face and her teeth began to chatter as she left Calamity's. She heard tires screech down the street just as her cell phone rang. Victoria reached into her bag, but couldn't find it. She still wasn't used to the damn thing. Finally, after a few more rings, she located it. She smiled when she noticed it was Nic's number, but before she could answer, the phone slipped from her fingers and fell to the ground between the curb and her car.\n\n\"Fuck,\" Victoria muttered, as she bent down behind the car to retrieve it. The moment her fingers connected with the hard, sleek plastic she heard the loudest noise and glass shattering behind her.\n\nVictoria screamed as she covered her ears and wilted to the cold concrete. The glass from Calamity's windows sprinkled down near her, as the screeching from the tires faded away. For a moment all went quiet before she heard a series of shouting and screams. She couldn't tell if they were hers or someone else's.\n\nShe laid on the ground for what seemed like several minutes before she felt strong hands jerk her up from the ground. \n\n\"You hurt?\" Miguel, one of the busboys asked in a thick accent, as he scanned up and down her body. \"You hurt?\" he asked again, with concerned eyes.\n\n\"I\u2014I,\" Victoria didn't even know. She looked behind him to see some of the customers running out of the restaurant and Greg waving his hands wildly.\n\n\"Everyone calm down! The police are on their way now,\" Greg shouted, as he turned and looked in Victoria's direction. He quickly walked out of the restaurant, the glass on the street crunching beneath his feet as he made his way to her.\n\n\"Vicky! Are you alright? Are you hurt?\" he shot out rapidly, as he inspected her, turning her around before looking back into her eyes. \n\n\"I--I think I'm o--okay,\" Victoria squeaked out, but she was anything but. It finally just registered in her brain what happened. The loud firecracker noise, the glass shattering and screeching tires. Someone had shot at them. Someone had actually used bullets and shot at them! Victoria felt dizzy from that realization. She swooned for a second before Greg caught her.\n\n\"Whoa, come back inside and sit down,\" Greg said, directing them to the entrance. \"I can't believe this just happened. I can't believe this just fucking happened,\" he said, as he sat her down at one of the tables. Tracy ran over to her and hugged her, crying and chanting \"Oh my God,\" over and over.\n\nVictoria heard her phone ringing again. She was still holding it in a death grip, but she couldn't find her purse. Probably still outside on the ground. She didn't even bother looking at the caller ID. \n\n\"Hello,\" she croaked out.\n\n\"There you are. What time do you think you'll be here?\" she heard Nic ask.\n\n\"Uh, I don't know,\" she whispered.\n\n\"What do you mean you don't know? I thought you were going to leave early?\" he asked.\n\n\"Nic, I\u2014oh, God,\" Victoria said, right before she burst into tears. She heard the sirens and could see red and blue flashing out of the corner of her eye. Someone had tried to kill them! Someone had tried to hurt them.\n\n\"Victoria,\" she heard Nic say. His voice seemed different. Not as friendly as it had just a few seconds ago.\n\n\"Yes,\" she sniffed.\n\n\"What happened?\" he asked her in a low, stern voice.\n\n\"Someone...someone shot at us,\" Victoria cried, sobbing even harder now that she admitted it out loud. \n\nSilence. \n\nShe didn't know if he was even still on the phone. She couldn't hear him breathing or anything.\n\n\"Are you okay?\" he finally asked, after a few moments. His voice sounded flat, a tone she had never heard before.\n\nAt first Victoria nodded her head to assure herself, but then whispered, \"Yes, I think so.\"\n\n\"I'll be there in just a few minutes,\" he said before she heard the line go dead. "
    ],
    "authorname": "soular",
    "tags": [
        "interracial novella",
        "interracial romance",
        "interracial drama",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/seven-days-ch-07"
}