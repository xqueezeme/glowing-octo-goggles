{
    "title": "Aurora - Way of the Goddess Pt. 05",
    "pages": [
        "This is a work of fiction. All characters depicted are 18 years and older.\n\n*****\n\nWhen the old man's journey of discovery turns decidedly ugly, two horny teens save the day.\n\n***\n\nWatson kicked as hard as he could, trying to see over Maya's head. Fifty meters away across the storm-ravaged sea, Beck was frantically waving, her eyes wide and mouth open, her naked skin the colour of marble. Every time he tried to look Maya got in the way, arms around his neck, legs encircling him. Smiling she said, 'Forget it. She's done.'\n\nTanya's Porsche SUV wallowed up and Watson swam in through the door. Caddy was in the driver's seat, the size of a child, hanging off a gigantic steering wheel. She looked at Watson and said, 'You better hurry now, the change is starting.' Leaping to his feet, Watson ran down a long flight of concrete stairs to the side of a slimy green swimming pool.\n\nSomething white swam past, gliding between skeins of black seaweed. Rebekah. Desperate not to lose her, Watson took a breath and waded in. Now, inhaling deeply and evenly through just his nose, he found to his delight he could breath underwater. A fish swam up to nibble on his penis. He swatted it away but when he looked down again it had grown several-fold and now had the face of a woman. Gently, and with consummate skill, she was sucking him.\n\nSomeone giggled and the imagery fled as the old man shivered awake. The very first thing he set eyes on was a dark-haired head, bobbing up and down on his stiffening penis to the sound of snuffling and snorting. Turning his head he saw Beck, on her knees beside him, hair piled high in a haphazard bun, a look of mischief on her angelic face. \"Good morning, Dommy. Did you have a good sleep?\"\n\nAs Beck spoke, Maya ceased what she was doing and hopped to Watson's side. \"Beck was just telling me, this was your favourite way to wake up.\"\n\n\"There goes another family secret.\" Watson rumbled. Tensing his stomach muscles, he looked himself over, to find his half-erect dick glistening with spit.\n\n\"Well it worked, didn't it?\" Beck challenged.\n\n\"Fancy a nice little fuck?\" Maya asked, cutting to the chase.\n\nWatson looked around, still trying to orient himself in the unfamiliar surroundings. This was how it was most mornings on Aurora- a nice, vigorous fuck to start the day- but that's as far as the similarities went. Struggling upright, he ran a hand through his salt and pepper hair. Maya was up on her knees, legs apart, and by the look of her dripping slit was raring to go. Looking down, he watched his cock rouse itself and magically rise. \"I'm going to need to take a leak first.\" he mumbled. And quick, before his plumbing got strangled.\n\nRolling off the bed onto his feet, the old man weaved his way to the bathroom with two young females hot on his heels. \"Where do you think you're going?\"\n\n\"Maya wants to watch.\"\n\n\"Is that okay?\"\n\n\"Damon always lets me hold his willy when he goes for a pee.\" Beck announced. \"Wanna try?\"\n\nMaya nodded. \"You bet!\"\n\nWatson pulled up in front of the bowl and a slender, smooth-skinned arm reached around from behind, then a hot little fist closed over his fat, happy penis. Taking over control of his stream, Maya drew little circles in the bowl then commenced sweeping the arc up and down. \"Careful you don't splash the seat, Maya,\" Watson said sternly, \"I don't want to get in trouble with your mum.\"\n\n\"The cleaner'll fix it.\" Maya giggled, hosing the sides of the bowl with Watson's pee. \"Gee,\" she said, \"it's still coming out. You must have been full.\"\n\nWatson eventually drained the last drops from his bladder and went to shake. \"I'll do it.\" Maya said eagerly, whipping Watson's penis up and down.\n\n\"There,\" he said, \"all done. Don't forget to wash your hands.\"\n\n\"So are we good to go?\" Maya asked, dutifully running the bathroom faucet.\n\n\"You'd better go and ask your mum first. She might have other plans.\"\n\nMaya took Beck's hand. \"Come on Becky, she's always so grumpy first thing. You can back me up!\"\n\n\"Back in a minute.\" Beck said. Rising on tiptoes she planted a kiss on his lips. \"Don't go anywhere.\"\n\nSuddenly alone, Watson paused to study himself in the bathroom mirror. The years had been relatively kind to him, and the austerity of life at sea had long since trimmed away the paunch he'd been lugging around. The rigors of sailing, along with a diet of fresh seafood and constant, rampant sex had stripped away the excess fat and toned up his muscles. He looked at the three-quarter erection hanging between his legs, and cast his mind back to where it had been in the last twenty-four hours. Beck, Caddy, Maya... only Tanya remained before he could claim the full house. Even as he watched, his lengthening penis began to rear up, looking for action. Strolling into the bedroom, cock swaying jauntily, he found himself silently lobbying for a green light from Caddy.\n\nThe proposal didn't take much debating. The two girls were back a few minutes later, laughing and shouting, sounding like a veritable stampede. Barrelling through the door, they leapt onto the bed without breaking stride. \"Mum says 'yesss'!\" Maya leered.\n\n\"Are they going to join us?\" Watson asked, craning his neck to look through the door.\n\n\"Nahh... Mum told me to bugger off so she could go back to sleep.\"\n\n\"You woke her up?\"\n\n\"Only a little.\"\n\n\"She'll have my guts for garters.\" Watson shook his head.\n\nBeck was bouncing up and down on the bed on her knees. \"Who's first?\"\n\n\"Can I go first?\" Maya pleaded.\n\n\"Why don't you toss for it?\" Watson joked.\n\n\"Hang on,\" Beck said, \"let's do scissor paper rock. You ready?\"\n\nThe girls faced off, fists clenched, then on the count of 'One, two, three..' Beck produced a pair of scissors, while Maya flattened her hand into paper. \"Naww...\" she said, \"Let's make it best out of three.\"\n\nThey cranked their fists up and down a second time. Second-guessing Beck's preference for scissors, Maya produced a rock while Beck opted for paper. Maya sat back, looking petulant. \"Naww... you win.\"\n\n\"Girls,\" Watson said expansively, \"girls, there's no need to fight over me. But, please, don't let that stop you.\"\n\nBeck summoned up her native generosity. \"It's okay, Maya,\" she said sweetly, \"winning means I get to choose who goes first. And I choose you.\"\n\n\"Nahh...\" Maya rolled her shoulders, too well aware she was acting like a spoilt brat, \"I'm just being a bitch. You can go first.\"\n\nBeck slung an arm around her neck. \"Aww... come on, Maya. You can warm him up for me.\"\n\nMaya shot her a glance out the corner of her eye. \"Sure you don't mind?\"\n\n\"Nuh uh.\"\n\n\"How should we do it?\" Maya asked, almost quivering with anticipation. \n\nWatson rolled onto the bed and pulled her on top of him. \"How about a little foreplay, first?\"\n\n\"Sure.\" Maya replied brightly. As long as foreplay meant hard dick in tight cunt she was up for it.\n\n\"Here,\" Watson said firmly, \"spin around so you're facing my feet.\"\n\nMaya shuffled around and came face to face with Watson's thumping cock. Lifting her hips, he manoeuvred her into position until her plump mound came into contact with his mouth. Watson looked at Beck and, not wanting to see her left out asked, \"Want to open her up for me, Moosh?\"\n\nBeck bounced to his side and dutifully parted Maya's outer lips. Maya arched her back as Watson slithered his tongue up and down her splayed slit then teased open her hole and delved into her. Maya, who always thought 'foreplay' was only for the hard to arouse, arched her back and lifted her butt. \"Wow..\" she intoned, \"that feels amazing.\"\n\nBeck bounced down to Maya's head-end. While the Maya was fully occupied, savouring Watson's tongue, Beck scooped up her old man's cock and engulfed the head in her hot, wet mouth. Lifting his balls, she licked the underside of the old man's sac as he so loved her to do, then nibbled and kissed her way back to his knob. Watson, meanwhile, had driven his tongue as deep as it would go and Maya was groaning with pleasure, a few degrees shy of the day's first climax. For a moment there was silence, just the sucking and slurping of oral sex on two fronts, and Beck had just started fingering herself when Maya pushed up. \"Stop!\" she panted, \"Please. Let's have sex.\"\n\nTaken slightly aback, Watson extracted his tongue while Beck relinquished his saliva-coated penis. After a quick reshuffle, the girls were kneeling side-by-side studying Watson's erection. Maya couldn't wait to get him inside her and was about to throw her leg over when Beck spoke up. \"I know, how about doggy? You haven't tried that one yet.\"\n\nThe girl thought about it for an instant then nodded. \"Great idea.\" Rolling onto her bottom, she quickly repositioned, up on all fours with her butt in the air. Beck shuffled behind her to take a sighting on the target. Maya's outer lips were fully engorged and wet with Watson's spit, and her pelvic floor was spontaneously clenching. Beck ran her hand up and down Maya's spine. \"All nice and relaxed, then?\"\n\nMaya nodded. \"Uh huh.\"\n\nWatson got up on his knees. Taking a grip on his erection, Beck gave it a few pre-emptive strokes then towed her old man in the direction of Maya's vagina. Pausing, she pushed down on the small of Maya's back. \"Push your tummy down, Maya. Right, like that.\" In doing so, Maya pivoted her hips twenty or thirty degrees so her glistening slit came into full view. Watson licked his lips. Just like yesterday, it looked far too small yet utterly inviting. Pulling him into range, Beck ran the weeping tip of Watson's penis up and down the girl's slit, bulldozing the outer lips apart to reveal the candy-pink furrow. Maya shivered and lay her head on her arms and Beck patted her butt. \"Ready?\"\n\nThe girl nodded. Here it came, and not a moment too soon.\n\nWatson leant into her, mushing the knob if his cock into her entrance. Maya pushed back, wriggling her bottom like Beck had shown her, bumping and grinding against Watson's fleshy ram. Just when he was about to voice his doubts, his penis popped through her outer defences and he was in. \n\nFor a moment they froze, both breathing heavily, while Maya took stock. Beck lay her head on the bed beside Maya's. \"How's it feel?\"\n\nMaya opened one eye and looked at her through a veil of dark hair. \"You know how it feels. Frikken' awesome.\"\n\n\"Ready to fuck?\"\n\nMaya nodded. \"Uh huh.\"\n\nBeck turned her head and looked up at Watson who was still holding everything. Taking his cue, he leant into the girl's rear with a little more force until two inches of shaft were buried in her slippery insides. \"Woo!\" Maya cried, \"I forgot how big he was.\"\n\n\"Okay there Sweetheart?\" Watson asked, hands resting on her firm round ass. \n\nMaya nodded. \"Okay, it's okay. Just go a little slow to begin with.\"\n\n\"It'll only take a minute or two.\" Beck said and stroked her back. \"You'll get used to it.\"\n\n\"Jump up here and put some spit on me, Moosh.\" Watson jerked his head.\n\nBeck did as she was asked, pushing up and leaning over Maya's behind, then scouring her throat and dangling a long ribbon of silvery saliva onto her little puckered butthole. Maya wriggled her bottom, giggling. \"That tickles.\" The bubbling fluid dribbled onto the union of Watson's cock and Maya's pussy, and Beck used a finger to smooth it around his circumference. Job done, Watson pulled back a little then pressed forward, as Beck lavished their coming together with another dollop of spit.\n\nMaya sensed the sudden reduction of friction and drove herself backwards, taking another inch of Watson's rock hard meat. \"Ohh...\" she groaned, \"that feels amazing.\"\n\nGripping her hip bones for purchase, Watson carefully pressed as much of his length as he could into her, feeling for her cervix. He found it on the fifth or sixth thrust with three quarters of his erection buried inside her. Pulling back, he pushed into her once more, all the way to the now well-defined limit. Beck rolled onto her back then shimmied to the head of the bed and reclined, shoulders propped up on a stack of pillows, legs spread, wet pussy a couple of inches from Maya's nose. She ruffled the girl's hair. \"Fancy a snack?\"\n\nMaya looked up and came face to face with Beck's pink-lined slit. Far too interested in what was going on behind her, she lay her cheek on Beck's mound but otherwise didn't take up the blonde's offer. Watson took a moment to savour the sight. Maya's perfect, pear-shaped butt with its cute little pucker, distended pussy lips bulging around the girth of his slowly pistoning prick. Her supple, knobbly spine and the wings of her shoulder blades, ribcage shifting under her skin. And there, beyond Maya's hunched shoulders and tousled dark-hair, lay a lithe, honey-skinned blonde, stomach muscles bunched as she held herself in tension, knees up, legs spread. \n\nMaya raised her head and stiffened her arms, pushing back against Watson and picking up the pace. The old man had to time each stroke to avoid banging into Maya's sensitive membranes, but every now and then she let out a squeak as their flesh collided. Propped up on one elbow, Beck began to massage her clit, rapidly feathering herself to the brink of orgasm. Maya was twisting her hips, maximising the contact from side to side with Watson's erection. \"Oh boy,\" she huffed, \"that feels incredible!\"\n\nIncredible wasn't the word for it. Watson felt everything tighten- her muscles, his balls- as they pounded their way towards the morning's first climax, and briefly considered pulling up for a breather to eke-out the fun. They'd only been going at it five minutes or so, far too short a time to savour the nuances. When he stopped, however, Maya slapped her ass, urging him to take up the chase. \"No!\" she huffed, \"For god's sake don't stop.\"\n\n\"I'm going to cum pretty soon if we don't call time-out.\"\n\nMaya reached between her legs and began furiously stimulating her clitoris. The sensation of her fingers strumming that sensitive nubbin, the feel of Watson's penis buried inside her, the sight of Beck, now busy orgasming... the sight, the sound, the smell, the sheer sensory overload, created a chemical cascade in Maya's brain that pitched her over the brink. When Watson leant over her, cradling her belly in the flat of his palm, the last few neurotransmitters locked into place and her climax began.\n\nIt was a long, trembling affair, with strong contractions and lots of noise. Abandoning himself to the moment, Watson let go, blasting three or four long, muscle-straining spurts of sperm deep into Maya's insides. It began to froth and bubble at her entrance, running around his cock and filling her slit, spiralling in long, milky ropes onto the expensive sheets. Grunting and jerking, Maya orgasmed herself to a standstill and lay her head on Beck's heaving abdomen. Not yet over the finish line, Watson grit his teeth, pumping a last few gouts of cum into Maya's flooded womb. Reaching back she flattened a hand on his thigh. \"Stop!\" she huffed. \"Stop.\"\n\nWatson did as ordered and knelt back, taking the girl with him as he went. She sat there for a while, deeply impaled, still breathing hard, her head on his shoulder, revelling in the feel of his hands wandering her body.\n\nBeck pushed up to her knees. \"How was that?\"\n\n\"Pretty ffff- flippin' amazing if... you really must know.\" Maya replied without opening her eyes. \n\nBeck reached between Maya's legs to gently massage the union of flesh. \"Wow!\" she exclaimed, \"that was a sloppy one.\"\n\nMaya looked down. Watson's semen was still leaking from her body, though most of it was still tightly sealed upstream by the plug of his knob. The old man tapped her shoulder. \"Hold still, Sweetheart.\" he rasped, then rearranged his legs and lay back. Now sitting bolt upright with Watson's cock jammed hard against her dead end, Maya squealed in delight. Hands encircling her waist the old man gave her a squeeze. \"You just stay there as long as you like.\"\n\n\"Not too long.\" Beck teased. \"I don't want to miss out on breakfast.\"\n\nAfter a moment's savouring the sensation of being deeply penetrated and full of cum, Maya inched upwards in preparation for dismounting. Beck shuffled between Watson's outstretched legs. \"Hopping off?\" she asked eagerly, hands cupped in preparation for catching the deluge.\n\n\"Uh huh.\" Maya nodded. \"I think he's about ready to come out.\"\n\nWatson watched, mesmerised, as the girl leant forward, revealing the sight of her distended sex in all its glory. With a nod from Beck she gingerly pushed up and the sight of a stiff, slick cock emerging out of her body was a wonder to behold. As his knob fetched up against the muscular portal, she paused, then settled down again, all the way until the cock bottomed-out, taking one last opportunity to dwell on the feeling. Rising smartly, she took him to the brink and tensed her abdominals, plopping him out. A thick spurt of fluid squelched out of her belly into Beck's waiting hands. \"Here,\" she said, lifting her hands like a chalice to Maya's lips.\n\nMaya's little pink tongue extended and she lapped at the gloop like a hungry kitten. Licking her lips, she pushed Beck's hands away. \"You can finish it.\" she said, patently unappetised. It was an acquired taste, as Watson had said, and she was yet to acquire it. Hands over her mouth, Beck sucked and snuffled then came away beaming, wet from ear to ear. \"All gone.\" she said and opened her mouth, then wiped her hands on her breasts and belly, leaving them bright with slime. \n\nA distant voice called, 'Girls?' and Beck sprang off the bed then flew out the door. Rolling onto her bottom, Maya sat cross-legged beside Watson and picked up his cock, turning it this way and that, examining the fleshy battering ram she'd just had inside her. Anyway she looked at it, it was a miracle.\n\nTanya came clumping up the stairs outside and Beck reappeared, dragging Caddy after her. \"You just missed it.\" she announced.\n\n\"You're starting early.\" Caddy said dryly. \"Poor man.\"\n\n\"You have no idea.\" sighed wanly.\n\nShe walked in, clad in comely black and white striped panties. Catching Watson's quizzical glance she compressed her lips. \"Came on this morning.\" she said dourly. \"Sorry.\"\n\n\"What did?\" Beck asked.\n\n\"Shark week, Darling.\"\n\nBeck thought about it for a moment. \"Oh.\"\n\n\"Bummer.\" Watson commiserated.\n\n\"Look on the bright side.\" Caddy arched an eyebrow, \"All the more for everyone else.\"\n\n\"Including me?\" Tanya asked, limping into the room. \"I haven't had any yet.\"\n\n\"What?\" Caddy glared, \"What about O.J.? What about young Missy's hand?\"\n\n\"I meant Damo, you ditz. What do you say, Damo? When is it my turn?\"\n\nWatson flipped open a make-believe diary. \"Let's see.\" he frowned, \"There might be an opening between New Year and Easter. In two years time.\"\n\n\"You just said 'opening'.\" Maya snorted, up on her knees, fingering her vagina and teasing out some cum. \n\n\"What have you got there, Pookes?\" Tanya asked, rolling onto the bed beside her.\n\n\"Goo.\" Beck replied before Maya could speak. \"She and Dommy just finished fucking.\"\n\n\"What flavour?\"\n\n\"Doggy.\" Maya replied.\n\n\"How was it?\" her mother asked, sitting beside Watson and picking up his meat.\n\n\"Oh I don't know. Fifteen out of ten.\"\n\n'Fast learner' the old man thought, as Caddy doubled over and wrapped her mouth around his prick. \"Mm...\" she nodded, \"Mmm mmmm!\" She straightened, wiping her mouth. \"If it felt as good as it tastes it must have been exx-cellent!\"\n\n\"It was.\" Watson assured her.\n\n\"You little strumpet!\" Tanya threw Maya onto her back and commenced tickling her ribs. \"You said you'd never be interested in cock.\"\n\nWhile Maya fended-off Tanya's scrabbling hands, cackling, Caddy looked at Beck and stroked her cheek. \"You're a very generous girl. Letting Maya do that.\"\n\nBeck smiled non-committally. She'd actually done it for her old man, first and foremost, and if Maya had enjoyed herself in the process, good for her.",
        "\"Well, come on, Missy. Time to get ready for school.\"\n\nTanya ceased her attack and sat up. \"Come on, Maggie,\" she said, offering her hand, \"time to give that little pussy a rest and exercise the old brain cells.\"\n\nMaya briefly considered arguing the point. It just wasn't fair that Beck could stay home while she couldn't, notwithstanding the fifty-k a year her parents had to pay for her school, or the opportunities that would arise out of successful completion. Medical school was Maya's first preference, followed by vet science or MBA. Law was at the very bottom of her list but still her most likely destination- with so many lawyers in the family it would be a picnic. But Caddy was adamant; Maya would possess something both she and her sister lacked; a work ethic. \n\nA light came on in Maya's eyes. \"Ten minutes!\" she told her mother. \"A ten-minute swim just to freshen up. Beck?\"\n\nThe word 'swim' made a special connection in Beck's brain. \"Know what? That would be awesome.\"\n\nMoments later, they heard the sound of a huge double splash outside and Caddy pushed wearily up off the bed. \"Well, I might as well go and make some brekky, give you two young things some privacy.\"\n\nTanya lay down beside Watson. \"What do you say, Soldier? You got a little left for your old Aunty Tan?\"\n\n\"Always!\" Watson replied, rolling onto his back and taking her with him.\n\n\"We'll be down in a couple of minutes.\" Tanya told Caddy's back as her sister left the room, heading downstairs to the kitchen. On second thoughts, she half rolled and yelled out the door. \"And don't overdo my eggs-\" she said, then planted a hot wet kiss on Watson's mouth, \"that's Damon's job!\"\n\n* * *\n\nTanya, in typical style, had the whole day organised. The first port of call was a sprawling shopping mall, and a photographer, for passport photos. Watson couldn't take his eyes off them once they were done, the portrait of a beautiful young woman, slightly self-conscious, peering out of the image through deeply knowing eyes. And it hit him like a thunderbolt. Captured in this photo of strictly official dimensions, was an instant of Beck's life, frozen in time. An instant that would exist only once, never to be repeated, ever again. Between the 'then' of the photo and each fleeting 'now', that moment was receding into the past at the speed of time- one second per second, per second. Beck would grow older, she'd grow away. He would grow old and he would die. One way or another, sooner or later, somewhere, somehow, they would part, never to see or hold each other again. Almost overcome, Watson felt a sudden urge to seize her, to gather her into his arms and never let go, to halt their relentless, dizzying, headlong plunge into the unknown. He took her hand instead and gave it a reassuring squeeze, her answering smile of love like a knife to the heart.\n\nHostess with the mostest, Tanya seemed determined to punish her broken leg, hobbling everywhere as fast as she could go, a woman on a mission. Once the photos were done, she led them to the nearest Post Office to gather the requisite paperwork. Sitting at a caf\u00e9 table loaded with coffees and cakes, she and Watson filled in the passport application with the recently acquired fabrications. It was thrilling, exciting, the sense of crossing a heavily guarder border, breaking into the mainstream on cleverly forged documents, like secret agents or escaping prisoners of war. \n\nWhile they quarrelled and snickered over the details, Tanya got onto the phone and shortly after the deed was done, a breathless young woman in a smart business suit trotted up to the table. \"Tan!\" she puffed, looking rattled, auburn hair spilling out of its bun. \"Sorry I took so long! Where are those docs?\" \n\nTanya tilted her head. \"How about a kiss, girl? Hmm? A kiss? Before you go stampeding for the paperwork?\"\n\nThe young woman dutifully pecked Tanya on each cheek. \"You know that cast really suits you.\"\n\n\"Do you think so?\" Dressed in rolled-up black shorts and a purple bustier, Tanya extended her legs, one pink fibreglass, the other lean and healthy. \"I've been thinking of getting the other one done.\"\n\nThe young woman screwed her face up in thought. \"Mmm... nahh... the asymmetry makes it.\"\n\n\"I'll take your word for it.\" Tanya replied. Reaching out, she took the young woman by the hand. \"Guys. This is Vicky MacDonald, Roger's PA. Sort of a cross between Wonder Woman and Mother Teresa. Macca, this is my mate Damon, and this is Rebekah. That's Rebekah with a 'k' and an 'a' and an 'h'.\"\n\nWatson blanched. Mother Teresa? He hoped not. There was a sordid truth behind that Albanian dwarf's beatific fa\u00e7ade, hard to reconcile with the beautiful young woman standing in front of him. Pushing halfway to his feet he extended his hand. \"Damon Watson,\" he smiled, \"pleased to meet you.\"\n\nThe young woman eyed him appraisingly. Fifty-ish. Good teeth, kind eyes, slightly weather-beaten complexion with an abundance of laugh lines. \"How do you do. Are you in the law?\"\n\nWatson looked at her, mortified while Tanya laughed. \"Does he look like a lawyer to you?\"\n\nNo, he didn't. \"Well... I... ah...\"\n\n\"Damon's a writer.\" Tanya explained. \"And a swashbuckling adventurer to boot, who once saved me and Roger from pirates.\" She looked around, checking the coast was clear, then cupped a hand to her mouth. \"And Beck,\" she said in a low voice, \"is a mermaid!\" \n\nThe young woman's sensual lips parted in a thousand-watt smile, and Watson caught a glimpse of her perfect white teeth before she hastily covered her mouth. A little like Julia Roberts, he thought, only with the normal human complement of teeth. Try as he did, he could not dispel the image of those pillowy lips closing over his cock. Averting his eyes to the two pert bumps under her smart, grey, pinstriped jacket only made things worse. He sat back, surreptitiously studying the young woman, grappling with the realisation he may have turned into an irreparably sex-obsessed deviate.\n\n\"You're off your medication again, aren't you Tan?\" Vicky smiled.\n\n\"No.\" Tanya shook her head, \"It's for reals. What's the name of your boat, Beck?\"\n\n\"Aurora.\" Beck replied. \"It means Goddess of the Dawn.\"\n\nVicky looked at her, open mouthed, either genuinely impressed or just playing along. \"No way!\"\n\n\"Yes way!\" Tanya insisted. \"Becky? Tell Macca. How long can you stay under water?\"\n\n\"Oh...\" Beck replied, frowning into space, \"I don't know. Damon?\"\n\n\"I...\" Watson tried to speak but his voice broke and he quickly cleared his throat. \"I'm not quite sure. Four minutes? Five? I'm always too busy holding her under.\"\n\n\"Oh, don't listen to him.\" Tanya rolled her eyes, \"If you could see her swim you'd swear she had gills.\"\n\n\"Do you ever do that free-diving thing?\" Vicky asked, \"You know, where you go real deep?\"\n\nBeck looked at Watson... that was his job. \"Sure.\" she replied. \"When we're off the shelf sometimes. If it's calm we sling a lead-line overboard and I go down on that.\"\n\n\"How deep?\"\n\n\"Twenty meters? Thirty?\"\n\n\"Now that,\" Vicky declared, \"is something I'd like to see.\"\n\n\"You should come on our boat one day.\" Beck said innocently. \n\nWatson shook his with an inward groan at this battle of double entendres. He glanced at Tanya to find her eyes fixed on him, a big, knowing smile on her beautiful face. \n\nVicky gasped. \"Could I?\"\n\n\"You'd have to swab the decks!\" Tanya warned.\n\n\"Small price to pay.\"\n\n\"In your bikini!\" \n\nThe young woman's mouth was so big it needed two laugh-lines a side accommodate her wall-to-wall smile, but every time her lips parted she self-consciously covered her mouth. \"I reckon I could handle that.\"\n\n\"There you go, Damo.\" Tanya said brightly, \"looks like you've got yourself a cabin girl.\"\n\n\"Finally!\" Watson swabbed his forehead as the young woman blushed, not quite knowing which way to look, \"Some decent help at last.\"\n\nTanya gestured at a chair. \"Time for a coffee, Macca?\"\n\n\"Sorry, Boss,\" she shook her head, \"Bryce is cutting laps.\"\n\n\"Bryce is our driver.\" Tanya explained.\n\n\"I've got some documents to lodge in the Supreme Court. Then I've got a settlement conference. Time is money, money is time blah blah blah. Anyway, Tan. What can I do for you?\"\n\n\"Sorry to dump this on you, Sweets. We need a passport, stat! If you could get it over to our fixer as quick as you can.\"\n\nWhen Vicky leant over the table to look at the documents, Watson caught a glimpse of a mandarin-coloured bra down the front of her button-up white shirt. \"When do you need it by?\"\n\n\"Tomorrow, if possible. If not the day after.\"\n\nVicky sucked air through her teeth. \"Now that's gonna take some doing.\"\n\n\"Why do you think I called on you? If anyone can, Macca can.\"\n\nVicky flipped the envelope open and quickly scanned the photos. \"Gosh!\" she said and looked at Beck, \"Don't you look gorgeous?\"\n\nBeck was sitting back, quietly nibbling on a croissant. In her light-yellow sundress, with her hair tied up in a high ponytail, she was the very epitome of youthful innocence. A delicious irony, for she'd just been fucked by her old man in the shower and was toying with the sensation of his cum leaking out of her. There was a great big wet spot in her panties and her butt-cheeks were all slippery and squishy. When Vicky spoke to her she came-to with a start and it was her time to blush. \n\nTanya reached over and ticked Beck under the chin. \"They don't come any gorgeous-er. What do you say, Macca? Can do?\"\n\n\"I'll do my very best.\" Vicky replied and pulled out the passport application. She studied it, frowning, her eyes darting over reams of text, then looked up at Beck. \"You still need to sign it, Becky.\" she said and tapped the page, \"Here.\" \n\nWatson patted his pockets for a pen and one materialised in front of Beck's nose. \n\n\"See what I mean?\" Tanya said, \"She's incredible.\"\n\n\"What should I write?\" Beck asked, unsure of what was expected.\n\n\"Just your usual signature, Darling.\" Tanya replied.\n\nAll eyes were on Beck as she meticulously scrawled her name in halting cursive for the very first time. Rebekah Watson. When it was done, Watson picked it up in a shaking hand and studied her handiwork. He looked at the PA. \"How's that, Vicky?\"\n\n\"Done all done.\" Vicky nodded, taking back her pen. \"And please, just call me Macca.\"\n\n\"Quick as you can, Macca,\" Tanya chivvied, \"there's a good girl.\"\n\nStraightening, Vicky smoothed the skirt over her hips, then tossed the strap of her pink leather handbag over a shoulder. \"No worries, Boss, I'll keep you posted.\" Extending her hand, she shook Watson's then turned and offered it to Beck. \"I sure am looking forward to that boat ride.\"\n\n\"It'll be great!\" Beck smiled, matching her grip for grip. \"We can go and catch crayfish together. And play with the sea snakes.\"\n\n\"Err... riiight.\" Vicky shot a glance at Tanya out of the corner of her eye.\n\n\"Yep.\" Tanya nodded. \"She's for real.\"\n\n\"It's a date!\" Vicky nodded. Pecking Tanya once on each cheek, she turned and hurried away with the rapid, heel-striking stride of the eternally harried. Watson watched her go, admiring the flex of her calves and her slim, athletic ankles. Inevitably, his eyes were drawn to the outline of her briefs, biting into her firm, round bum. \n\nTanya gave him a nudge. \"Bet I know what you're thinking.\"\n\nThe old man arched his eyebrows. \"Bet you don't.\"\n\n\"Well the answer is 'no'. She doesn't swing that way.\"\n\n\"Damn!\" Watson palmed his forehead. \"Am I that obvious?\"\n\n\"Yes Darling, you are.\"\n\n\"Have you tried?\"\n\n\"No,\" Tanya replied wistfully, \"but if she so much as crooked a finger, I'd be up her like a rat up a rhododendron.\"\n\n\"Never know,\" Watson mused, \"she might just be up for it.\" \n\n\"No.\" Tanya shook her head, \"She's not.\"\n\n\"How do you know?\"\n\nTanya cupped a hand to her mouth and in a dramatic whisper announced, \"She's got religion.\"\n\nWatson blanched. \"Bullshit!\"\n\n\" 'Fraid so.\"\n\n\"With a body like that?\"\n\n\"Criminal, isn't it? It's one of the reasons Roger's hung onto her.\"\n\n\"For her body?\"\n\n\"No, silly, because she's a god-botherer. Because she's so afraid of going to hell for some misdemeanour. It means she's totally honest, utterly reliable, and morally incorruptible. Doesn't drink, doesn't smoke, doesn't go out to parties-\"\n\nWatson shook his head mournfully. \"Oh that poor girl.\"\n\n\"And talk about work ethic! She's just unstoppable! Too bad she's condemned to be married, she'll be impossible to replace if she actually goes through with it.\"\n\n\"Condemned?\"\n\n\"Did I say condemned?\" Tanya snorted. \"I meant engaged, of course. Silly me.\"\n\n\"So why replace her?\"\n\n\"She'll turn into a baby factory.\" Tanya said dourly. \"Haven't you read the brief? Go forth and multiply?\"\n\n\"She's sweet.\" Beck piped up. \"Can she really come and visit the boat?\"\n\n\"Didn't you hear what Tan just said?\"\n\n\"Uh huh. She's religious. What does that mean?\"\n\nWatson gave a grunt of dour laughter. \"It means she's not allowed to enjoy her life.\"\n\n\"Why not?\"\n\n\"Good question.\" Tanya said then gathered herself up. \"You see, Becks, once upon a time, in a galaxy far, far away, some dirty old men started a club. It was the Middle East, actually, where else? I mean, what is it about that place? Anyway, when these dirty old malcontents started their club it was only for men, cos' the men all thought women were yukky, since they bled once a month and were covered in girl germs. But they were obsessed with sex, these dirty old bastards, so obsessed they made it a sin, just so they could pretend they weren't a bunch of hopelessly sex-addicted devoes.\"\n\nTanya paused to wet her whistle. \"Now, these filthy old malcontents had a problem, didn't they? Because as much as they hated chicks, for being stronger and smarter and much better looking, they could fuck little boys till the cows came home but they couldn't make babies.\"\n\n\"Or camels.\" Watson cut in.\n\n\"Right. Or camels. But there was only one way they could make babies-\"\n\n\"Or goats.\"\n\n\"Yes yes... but there was only one way-\"\n\n\"Or donkeys.\"\n\n\"No need to labour the point, Reg. Fact is, much as they hated them, once in a while these dirty old boy, camel, goat and donkey fuckers had to fuck chicks, so they made up all these rules about fucking. Rule one; don't. It's dirty. It's a sin. Rule two; if you really must, the club had to give you permission, in the form of a life sentence called marriage. Rule three; if a chick fucked someone she wasn't married to, they could throw her into a lake of fire where she'd suffer in agony for ever and ever-\"\n\n\"Only the woman?\" Watson frowned.\n\n\"Correct! You see there was a clause that said the man could blame the woman, because women are a friend of this big red guy who lives in the lake of fire. And because they're friends with this big red guy, they made men in the club do bad things. So all they have to do is tell the club's officials how really really sorry they are, for being tricked into having a really good time, and pay some money. And hey presto, forgiven.\"\n\nWatson leant into Beck. \"You getting all this?\"\n\n\"Can she come on the boat?\"\n\n\"Well I did!\" Tanya shrugged.\n\n\"Once.\" Watson observed.\n\n\"Quality, not quantity Damon.\"\n\n\"Anyway, why not?\" Watson shrugged. \"Just for a sail. I mean, we don't have to fuck everyone who comes aboard, do we?\"\n\n\"But you'd like to, huh?\" Tanya smiled cheekily. \"And who knows, maybe you will. Maybe you can convert her. Let's face it, if anyone can.\" \n\n\"She's got religion.\" Watson sighed. \"There's probably not a lot I can do for her.\"\n\n\"You mean more than you've done so already?\"\n\nWatson sat back, frowning. \"Pardon?\"\n\n\"I said more than you and Beck have helped her already.\"\n\n\"Helped her? How?\"\n\n\"Well, remember Roger?\"\n\nWatson held his hand out, about waist high. \"The dwarf, right? The Eskimo? With the club-foot and the lazy eye?\"\n\n\"I mean the old Roger. The one you met on day one.\"\n\n\"How could I forget?\"\n\n\"Right. Well, Macca was Roger's PA.\"\n\nWatson looked at Tanya, nonplussed. \"I thought she still was.\"\n\n\"I mean just his PA, as in just another piece of office equipment. Then one day just after we got back, Roger had to call her into the office to run an errand. It was saturday, and she turned up all breathless and sweaty straight from the footy field-\"\n\n\"She plays football?\"\n\n\"Footy, running, cycling, swimming, she's a little human dynamo. Anyway. For the first time Roger realised she was actually human. So he jokingly asked how much he was paying her to rush into his chambers on her day off to pick and deliver some documents. He had no idea. Other people were paid to take care of that. And when she told him he was shocked, shocked and ashamed, because they were... he was... paying the poor girl a pittance. But she was holding onto the job for dear life because a job like that, any job, was so hard to find.\"\n\n\"Did he give her a little more money?\" Beck asked, ready to disinherit Bragg in a heartbeat if the answer was no. \n\n\"No.\" Tanya shook her head. \"He gave her a lot more! He doubled her pay, in fact. Then we paid out her mortgage as a birthday surprise. My idea, by the way.\"\n\nWatson leant into Tanya and planted a kiss on her lips. \"Which is one of the many, many reasons I love you.\"\n\nTanya sat back, basking in the glow of the old man's adoration. \"Really?\" she beamed. \"So what are the others?\"\n\n\"Too numerous to mention. But did you tell her? How Rodge had come to suffer this sudden change of heart?\"\n\nTanya leant into him. \"By having rampant sex with this little goddess?\" she gave Beck a wink. \"No, I didn't. By by god I'd love to see the look on her face if I did.\"\n\n* * *\n\nTanya gave Beck a choice. Museum or shopping. Beck had never heard of a museum and when Tanya explained what it was, Beck almost dragged her bodily from the mall.\n\nWatson, meanwhile, set sail in Tanya's Porsche, heading north by GPS through endless sets of traffic lights, bumper to bumper with angry motorists, ninety percent the vehicle's sole occupant, and dicing with huge, soot-belching trucks laden with everything from tomorrow's groceries to yesterday's waste. Finally, mercifully, he turned off the highway and wove his way through leafy suburban backstreets, an oasis of peace and tranquillity poles apart from the snarl of the main arterial.\n\nKevin the IT Guru worked out of a sprawling sandstone bungalow, set well back from the road behind a well-tended garden. When the front door opened, Watson found himself face-to-face with an archetypal geek, a dapper, diminutive man with a dyed-black bowl-haircut and thick, heavy rimmed glasses. \"So. You must be Damon.\" he hailed with a broad smile.\n\n\"That I am. And I'm guessing you're Kev.\"\n\nThe wrought-iron screen door creaked open, it's chipped black frame thick with countless layers of repaint. \"Come on in.\" Kevin said and they shook. \"I hear you're having problems with your phone.\"\n\nWatson slipped the iPhone from his pocket. He'd recharged the battery but the device was still impenetrably locked, its dubious treasures beyond reach. \"I reset the lock code,\" he explained, trailing the man through a comfortable living room into the kitchen.\n\n\"And now you can't remember it?\"\n\n\"Never reset your password after you've had a few beers!\"\n\n\"It's a funny thing, isn't it?\" the forensic IT expert smiled wryly, \"That's when most people feel compelled to do it. If I had a dollar for every phone I've had to unlock, after an ethanol-induced code change, well, you know what? I'd have exactly fifty two bucks.\"\n\nFollowing on through the kitchen, Watson waited restively while his host punched a numbered code into the lock of a heavy wooden door. He stood aside and Watson looked down a long flight of concrete stairs into an abyss. \"Welcome to the bunker.\" Kevin said and Watson briefly wondered what the hell he was doing, all alone walking straight into some strange man's dungeon.",
        "The basement lab was stacked from floor to ceiling with electronics, much of it unrecognisable and most of it humming. A tall, white, tower-like device occupied one corner, beside a console covered in switches, dials and knobs with a dual flatscreen display off to the side. \"Scanning Electron Microscope.\" Kevin announced, reading Watson's puzzled expression. \"Everything's happening on the micro-scale these days, a TEM's the only way of getting to the bottom of it.\" He held out his hand. \"May I?\"\n\nWatson handed the iPhone over, then turned on the spot studying the underground laboratory. \"So it's true.\"\n\n\"What is?\" \n\n\"You're a bona fide, card-carrying genius.\"\n\n\"Who says?\"\n\n\"Tanya.\"\n\n\"Oh...\" the man replied diffidently, looking over his glasses while he jacked the purloined phone into a computer, \"that silly-billy says lots of things. It's just a hobby. No genius required.\"\n\n\"Some hobby.\"\n\n\"It's great fun.\" Kevin concurred. \"You have no idea what's happening out there.\" He gestured with his chin in the direction of 'out there'. \n\n\"In IT?\"\n\n\"IT, Informatics, AI. That sort of thing. Value your privacy, do you?\"\n\nWatson looked at the little boffin, nonplussed.\n\n\"Straightforward question. Most of us need a little seclusion in our lives, I know I do. You know... to be a little creative. To play.\" He twirled a dainty finger over his temple, \"To be a little bit crazy in the privacy of our own minds.\"\n\n\"I... ah... Well... Sure. I love my privacy.\"\n\n\"Then you shouldn't be mucking around with these things.\" he brandished the phone. \"Smart phone, dumb idea. Everywhere you go, you're leaving behind a trail of digital Pixie dust. Metadata. The five eyes are watching, make no mistake.\"\n\nWatson looked up to find the little man peering at him. His eyes were huge behind the lenses of his specs and indeed, Watson thought uneasily, slightly mad. \"Five eyes?\"\n\n\"Never heard of the five eyes?\"\n\nWatson shook his head. \n\n\"Well you should have. The U.S., Canada, England, New Zealand and, surprise, surprise, America's ever faithful ass-licker, Australia. They're gathering your digital data by the warehouse-full... And you can fit a lot of ones and zeroes into a warehouse, let me tell you.\"\n\n\"What do they do with it?\"\n\nKevin set the phone down on a black rubber mat then commenced tapping away at a slim, plastic keyboard. \"Anything they like. It's all at the behest of the NSA, the U.S. National Security Agency. To keep us all 'safe'.\" he made air commas. \"Of course the U.S. government is just an arm of big business. The NSA will tell you it's all in the name of homeland security but much of the information is actually sold-on.\" \n\n\"To whom?\"\n\nKevin hefted a shoulder. \"The highest bidder.\"\n\n\"What for?\"\n\nThe little wizard looked at him, mildly exasperated. \"What do you think? To get you to buy stuff, using the crack-whores of big business, the advertisers. You see we're not humans any more, we're just consumers. That's the sole reason most of us exist. To buy stuff we don't need, that we can't afford and we won't use anyway, just to impress people we don't like. If big business knows where you go, what you do, who you see, what you watch, what you talk about, what you crave, what you're afraid of... all the stuff revealed by your metadata, not to mention your emails and phone calls... once they have all those data they can farm you.\"\n\nAll those data... here was a man who knew his plurals. \"Seems like a lot of trouble to go to.\" Watson frowned, patently sceptical. \"Not to mention expense.\"\n\n\"It's effortless, actually,\" Kevin said airily, \"all done by computer. And it's all free, at least for them, because you're the one who's paying for it.\"\n\nWatson tugged at the neck his threadbare T-shirt, suddenly paranoid. \"So, how do you...\" he gestured around the subterranean lab, \"I mean how do I?\"\n\n\"Protect yourself?\" the little tech-head asked with a disarming smile. \"Well, don't have one of these for starters.\" He turned to a monitor which was presently streaming data, digital rain pouring down a flatscreen windowpane. \"Do you smoke?\"\n\n\"Smoke?\"\n\n\"Cigarettes.\"\n\n\"Used to,\" Watson admitted, \"a long time ago.\"\n\n\"Well, remember the olden days, when smoking was first banned on airlines? At the end of a flight, how smokers used to trample each other to get off the plane for that first lung-buster? Well now it's the same with these things.\" he held up the iPhone. \"People are addicted to them. By the millions. By the billions! iPhone separation anxiety, it's a recognised condition. As soon as that seat belt sign goes off after landing, the addicts are scrambling for their phones, to see if someone has messaged, to find out if some other addict has posted some infantile trivia on some god-awful social site. It's brilliant! A handful of men have managed to hijack an entire civilisation. A whole planet! By sucking the creative energy out of billions and billions of humans for their own use, they have made themselves the most powerful and wealthy men in human history.\" Kevin shook his head in reverence. \"Just think... keeping billions humans in a state of perpetual... and voluntary... stupefaction, all with the aid of a small electronic device. I wish I'd thought of it.\"\n\nWatson was still grappling with the concept when the boffin suddenly looked at him. \"Did you try to erase this stupid thing's memory?\"\n\n\"P... pardon?\"\n\nKevin showed him the phone. \"There's a kill command in the buffer, see? Meant to wipe the memory if you try to unlock it.\"\n\nBusted. Watson's hair prickled with sweat. \"I... ah...\"\n\n\"Must have been after a few more sherbets, eh? Let's just get rid of that, shall we?\"\n\n\"Look, I hope you don't think anything fishy's going on. It's just that I-\"\n\nKevin upended the phone and plucked out the connection. \"Here.\" he said, \"I've reset the password to four zeros. If you manage to forget that, well, there's probably not a lot I can do for you.\"\n\nWatson held out his hand. \"It's done?\"\n\nKevin slapped the phone on his palm. \"Yep.\"\n\n\"Just like that?\"\n\n\"Just like that.\"\n\n\"Geez. That's... that's just amazing.\" He patted his pockets. \"How much do I owe you?\"\n\n\"Well, the going rate for extra-judicial is fifty grand,\" Kevin smiled and Watson blanched, \"though if you're a friend of Roger and Tanya you can probably afford it.\" Watson drew a breath and was about to tell him to just lock it again when the little geek smiled. \"For you though, one dollar.\"\n\n\"A dollar?\"\n\n\"Why not? You seem like a nice sort of chap. We just need some sort of transaction to keep it official.\" He winked. \"In case it turns out later this isn't your phone and the lawyers come after me.\"\n\nWatson went for his wallet and pulled out a five. \"Just keep the change.\" he said, \"In case I forget my password again.\"\n\n\"Four zeroes. Don't forget.\"\n\n\"I won't.\" Watson looked around, suddenly unwilling to go back 'out there'. \"Look,\" he said, \"is there anything I can do?\"\n\nKevin tilted his head. \"About what?\"\n\n\"You know. About being so visible.\"\n\n\"Oh, there's lots you can do.\" Kevin replied off-handedly, \"If you're serious.\"\n\nWatson nodded. \"Deadly.\"\n\nThe man reached out and relieved Watson of the mobile. \"Alright then, let's get rid of that GPS for starters. Doesn't just tell you where to go, it lets other interested parties know where you've been. Then, of course, by cross-referencing data, the entire network of your associations can be revealed. Do you use social media?\"\n\nWatson shook his head. \"I'm not that social.\"\n\n\"Good for you. It's a blight, make no mistake... the most antisocial system ever invented. People will sit there in the middle of a crowd- at dinner, on dates, at bloody funerals- mindlessly tapping and swiping, totally absorbed in bogus relationships while the real world is happening around them. It's a pox. A cancer.\"\n\n\"So. The GPS is off?\"\n\n\"Yes it is.\"\n\n\"So am I invisible now?\"\n\n\"Unfortunately no. Even with GPS turned off your location can be traced by simple triangulation. You're safe enough here... my workshop's actually one gigantic Faraday Cage. But step out that door-\" he waved the phone in Watson's face, \"they'll know where you are.\"\n\nWatson turned the phone over in his hand, like a sample of some hideous virus in a fragile test tube. \"Geez. I didn't realise we were so exposed.\"\n\n\"Of course not,\" Kevin hefted a shoulder, \"you're not meant to.\"\n\n\"Is there any way around it?\"\n\n\"Well, you can leave your phone on airplane mode. You won't be able to make or receive calls, but it's easy enough to turn on and off when you need to.\"\n\nWatson threw off a quick shudder. He could almost imagine a vast array of prying eyes peering over his shoulder. \"I might just do that. Thanks.\"\n\n\"And remember, that nasty little thing is still pinging even when it's turned off. If you must insist on having one, keep it in the fridge.\"\n\n\"Fridge?\"\n\n\"Sorry,\" Kevin smiled, \"I'm just being flippant. Any metal box will do. Anything that can act as a shield. You use the internet?\"\n\nWatson rolled his shoulders. \"Now and then. The coverage's not so hot where I spend most of my time.\"\n\n\"Well, there's a few different ways you can cover your tracks. Unless you're just searching for porn, in which case don't bother.\"\n\n\"Just searching for porn? You mean there's other stuff on the internet?\"\n\nKevin smiled broadly. \"You know, most of the bovines couldn't answer that question. Or if they did, they'd just say 'gambling'.\"\n\n\"So 'they',\" Watson made air commas, \"know about all our dirty little secrets?\"\n\n\"They know stuff even you don't know about you. Unless you've got a supercomputer. And you've analysed every last speck of your metadata.\"\n\n\"No,\" Watson shook his head. \"I haven't done that.\"\n\n\"Not many of us do.\"\n\n\"What about you?\"\n\nThe supergeek's eyes twinkled mischievously. \"I might keep some modelling handy. In case of emergencies.\"\n\n\"Dammit!\" Watson breathed, his insides squirming. \"So those bastards out there know what makes me tick?\"\n\n\"To the nanosecond. You use email?\"\n\n\"Sometimes.\" \n\n\"Make sure to use some sort of encryption, especially if you're dealing with sensitive issues. By sensitive I mean personal. Remember, Damon, The System abhors nonconformists, and there are vast and powerful organisations dedicated to stamping them out. I'm a nonconformist. What about you?\"\n\nWatson nervously licked his dry lips. A Fifty-five year old man, sailing the tropics in a forty five foot yacht with a teenage runaway? With a fridge full of French Champagne and a stash of premium weed? Who'd just taken time out from sailing to have rampant sex with an eighteen year old girl and her mother and aunt? \"I guess.\"\n\n\"Then you'd better be careful. We're meant to be serving the system, not using it. We're cows, Damon, all of us, livestock being milked of our life energy. And you know what they call a cow who won't give milk?\"\n\nThere was a short, pregnant silence. \"What?\"\n\n\"Hamburger.\"\n\n\"Right.\" Watson stared at the device as if it had all the lethal potential of a hand grenade. \"So you reckon I should keep it in 'flight' mode?\"\n\n\"I don't even have one of the rotten things, but if I did that's what I'd do. Better still, turn it on to make a call and turn it off as soon as you're done. Make them work for their global conquest.\"\n\nWatson dived into the settings and selected 'Flight Mode'. \"Anything else?\"\n\n\"Ever heard of Biometrics?\" \n\nWatson shook his head. \n\n\"You're constantly being imaged on CCTV. Two, maybe three hundred times a day in your average city. Your face has been reduced to an algorithm. A string of ones and zeros, utterly unique and instantly recognisable. They know where you are, within a few hundred meters or so, everywhere you go.\"\n\n\"Is there anything I can do about that?\"\n\n\"Slip, slop, slap.\" Kevin smiled. \"Wear a broad-brimmed hat and some of those gawky Sun Smart sunglasses, the great big ones that look more like goggles. And a dab or two of zinc to break up your outline, unless it's the middle of winter, in which case you'll just look like a loony.\"\n\nWatson looked around the lab, innards churning. \"I didn't realise we were so... so...\"\n\n\"Under the microscope? Well we are, and you can thank a bunch of brilliant scientists for that. Simply by probing the secrets of nature they keep coming up with new technology. Inadvertent spinoffs with no known or intended application. Cue the marketers. It's their job to convince the powers that be- business and government, the military- they absolutely need this new stuff, to do things they never even dreamed of. Face recognition, gait recognition. Self-organising AI that can seek out, identify and monitor persons of interest. Better mouse traps, you name it. Glossy men in expensive suits all peddling the same hard-sell. 'This is stuff you simply must have to make... the world... safer'.\"\n\n\"Solutions in search of a problem?\"\n\n\"More or less. Though opinions differ on what constitutes a problem. Privacy, for example.\"\n\nWatson looked at the smiling tech-head feeling distinctly uneasy.\n\n\"Oh, well,\" Kevin patted Watson's shoulder, \"mustn't bore you with my conspiracy theories as Tan likes to call them.\" He gestured at the stairs. \"This way.\"\n\nWatson shook himself out of his reverie. \"Look, Kev, I just can't thank you enough. Getting into the phone was one thing, but the rest of your advice...\"\n\n\"No problem.\" Kevin waved-off Watson's gratitude. \"Think nothing of it.\" \n\n\"Tanya was right.\" Watson said, \"About you.\"\n\n\"Oh, Tanya's a ratbag!\" Kevin scoffed good-naturedly. \"A loveable ratbag, don't get me wrong, but she and her husband are living the lie.\"\n\n\"The lie?\"\n\n\"Money and possessions, rampant materialism. They're voracious consumers of the highest order.\"\n\n\"So it's been a while since you last saw them?\"\n\nKevin frowned. \"What makes you say that?\"\n\n\"Maybe you should get together sometime.\"\n\n\"Why so?\"\n\n\"I don't know. You might find things have changed.\"\n\n* * *\n\nThe iPhone sat in a recess in the centre console, on a bed of gold and silver coins, taunting Watson with its mysteries. In the end the temptation got too much and he pulled over at a suburban sports oval and parked under the shade of a tree. His hands were shaking as he punched in the code and the screen blinked awake. It was like breaking into a locked drawer to read someone's diary, someone's love letters. Cyber-burglary, digital trespass, electronic break and enter. It was spine tingling. Thrilling.\n\nThere were hundreds of photos and video clips stored on the phone. Watson skipped them for now, and tapped the message icon. And there it was, waiting for him, the very last conversation between father and son.\n\nThe bottom line read; 'W8 for me im comn home'\n\nWhile the line above said, 'Y dont u answr me?'\n\nPreceded by, 'Oi!! U bisy fuckn?'\n\nWatson scrolled up to the beginning of the conversation, and the whole sordid plot began to unfold.\n\n'Sebby goin out with the nayber tonite. U bisy?'\n\n'Y?'\n\n'Ul hav to look aftr the slut wile were out'\n\n'Wat slut?'\n\n'Old mates slut'\n\n'I had plans dad'\n\n'Tuff. Ur stayn home'\n\n'Not fukn fare \u2639'\n\n'Not my folt. Dum cunt insisted'\n\n'Take her wit u'\n\n'2 yung. Anyway play ur cards rite and u mite get ur end in'\n\n'Slutz good lookn?'\n\n'Id fuck her'\n\n'Ud fuck anythng dad!! \u263a'\n\n'I wud too. B there rite aftr footy rite!!'\n\n'I want beer then'\n\n'Deal'\n\nThen later...\n\n'The dikhds L8'\n\nThe line below read, 'Ware r u seb? Has the pussy cum ova?', \n\nFollowed by, \n\n'Oi!! U bisy fuckn?'\n\nWatson motored the car's windows down. The day had turned sultry and the stormy sky was crackling with pent-up energy. Diverting off the SMS trail, Watson hopped over to the photo folder and began swiping through random albums. The usual banal stuff, peppered with selfies, many taken at parties and barbeques. And lots of cars. Car wheels, car engines, car sound-systems, the sort of stuff any teen male would be into. Cars doing burnouts, cars pulled over by police, an officer sitting on the hood of a police car, arms crossed, smiling.\n\nKevin's words of warning rang in his ears. Searching the vicinity for CCTV, Watson was startled to discover a hanging black orb, on a pole outside a deserted clubroom only meters away. Fighting the urge to cover his face, he cranked the tinted window up, then started the Porsche and idled calmly out of the reserve. After driving around for fifteen minutes he found a largely-deserted lay-by beside a quiet, shady park with no visible CCTV.\n\nTime was getting on. He still had to negotiate the city's afternoon traffic to pick up Beck and Tanya in the centre of town. But there was just time enough for a little digital reconnaissance, so he opened the movies folder and cut to the chase. \n\nFootball match, football match, party, barbeque. School ground, football match, burnouts. Party, party, boat, boat, boat, party, football. Burnouts, donuts, barbeque, school ground, football, party. \n\nOpening a random party folder, he found half a dozen clips. The first few were taken during the early hours of the night's festivities, a bunch of teenagers, mostly male, in a shabby suburban house. The camera wended its way through several rooms, lingering now and then on various acquaintances. The average age had to be well under fifteen, but there was alcohol everywhere and a couple of bongs. The camera lurched to a halt, looking down at a couple of girls in their early teens, bookended between a pair of young drunk males. Suddenly aware they were being filmed, one of the boys seized a girl in a headlock and pulled her down for a deep, slobbering kiss. The camera angled downwards to capture the youth's hand clumsily groping the young girl's crotch.\n\nJumping forward a couple of clips, Watson thumbed 'play' and his heart skipped a beat. The party was hotting up, and the camera was jostling for position in a mess-strewn bedroom. There, on the bed, stark naked and apparently comatose, the same young female was on her back with her legs apart and a young male lying on top, jeans around his knees, frantically fucking her. There was an uproar of cheering and applause as he eventually pulled out and stood, grinning, shyly covering his goods.\n\nAnother youth took his place as the camera zeroed in for a better view. Too self-conscious to expose himself, he lay on down on the girl fully clothed. Hastily dismasting his pants, he spent the next thirty seconds trying to install a condom by feel until, egged on by catcalls, he gave up on the condom and commenced having sex. After a two or three minute interlude of frenzied fucking, he stiff-armed himself off the girl and spat in her face. The crowd went wild. As he climbed off, hands over his groin protecting his modesty, the camera swooped in for a closeup- the girl's lightly-furred snatch bubbling come, the unused condom lying on the sheet between her thighs.\n\nThe camera changed hands. Seb appeared, flexing his muscles, playing up to the audience. Just as reluctant to reveal his equipment he, like the others, covered himself when he dropped his shorts. Crawling onto her, he aimed by feel and worked the hidden implement into the girl's war-torn pussy. Once he was in, he hooked his arms under her legs and humped them onto his shoulders, then commenced hammering into her. Cumming in the space of a couple of minutes, he looked up beaming at the crowd, then spat in the girl's face as a parting pleasantry.\n\nWatson's heart was racing and sweat trickled out of his hairline. No wonder the kid's old man had come after the thing. Swiping out of the party album, he was just about to shut the thing down when he paused to check out a folder titled, 'Bote'.\n\nThe folder contained a multitude of clips, from a few seconds' duration up to ten minutes or more. Picking a clip at random, he hit 'play'.\n\nThey were way out to sea, he could tell by the water, beyond sight of land on Fowler's big stink boat. It was a gorgeous tropical morning with the tradewinds on a day off and not a single cloud to be seen in the cobalt sky. The first thing Watson heard was the sound of heavy breathing. The camera swung to one side to take in the image of a beefy, clean-cut, middle-aged male with a stubbled, sweat-glistening scalp. Looking into the camera with broad smile, he raised his bottle of beer in a silent toast.",
        "'Fucken' Seb's on lookout.' the heavy breather behind the camera announced, then turned his aim on the boy. He was standing on the bow, bare feet spread for balance, Fowler's big silver handgun clasped in one hand. Looking up, he smiled a big, happy smile, but when he opened his mouth to speak he was over-transmitted by his old man.\n\n'Oi oi oi!' Fowler cried excitedly, 'Sebby, Sebby! Here they come!'\n\nThe horizon tumbled sky-over-sea and the camera came to rest on a disturbance in the water nearby. 'Let the cunts come right up close.' Fowler puffed, heavy breathing with anticipation. 'Ya gunna take a potshot, Phil?'\n\n'In a minute.' a baritone voice replied. 'Let the boy have first go.'\n\nThe rounded forehead of a dolphin broke the surface, snorting vapour from its blowhole. Another couple of fins popped up as a pod of passing cetaceans diverted from their wanderings to check out the humans. A voice said, 'Now, Dad?' and the camera jerked back to Seb as he took up his stance, feet apart, one arm extended, handgun levelled gangsta-style. \n\n'Hold the fucken' thing like Phil showed ya.' Fowler growled.\n\n'I am!\" the boy protested. 'Phil?'\n\n'Other arm up, Sebby.' the other male rumbled. 'Rest your right hand in the palm of your left. Gentle squeeze. There ya go.'\n\n'Dad? Now?'\n\n'Yeah, nah, let 'em get closer. The nosy little cunts'll come right up.'\n\nThere was a watery gasp. A dolphin surfaced mere meters away, rolling on its side to eyeball the terrestrials. Fowler yelled 'NOW' at the very same instant as the boy fired, the weapon jerking mightily in his hands. 'GO, GO, GO!\" Fowler bellowed, 'MORE! MORE! MORE!' Four more booming gunshots and somebody screamed off-screen, man and boy cheering and stamping as the water turned red and the dolphin thrashed in its death-throes.\n\nThe image tumbled sickeningly as Fowler scrambled aft and the fleeting glimpse of two female figures leapt through the screen. Mounting the companionway, Fowler clambered onto the flybridge overlooking the scene, his son and the other male leaning over the bow watching a dolphin, belly up, flailing its life away.\n\nThe dolphin's four mates turned tail and fled, but two suddenly peeled back and sped to the aid of their dying companion. Fowler yelled, 'PHIL!' and pointed in the direction of the approaching creatures.\n\nThe other male, Phil, tossed his beer overboard. Reaching under the back of his shirt he extracted a massive black pistol, then stepped up beside Seb and gave the boy a nudge. Together, they raised their weapons. The man said something and the boy nodded in reply, jaw clenched, expression intense.\n\n'Come on, Phil,' Fowler laughed, 'why don't ya jump in and tase the cunts.'\n\nPhil looked up, grinning. 'I'll fucken' tase you.'\n\n'Here they come!' Seb called excitedly.\n\nPhil nodded once. 'On it!'\n\nThere was a volley of sustained gunfire. Great fountains of blood and water erupted skywards as some rounds missed and others found their mark. Fowler, by now, was almost apoplectic with laughter. 'Look at 'em dance!' he cried. 'God fuck me! What would them mungbean munchin' fucken' greenies say?' He pitched his voice to a warbling falsetto, 'No, no, please don't hurt them poor little poofta lesbian dolphins. Look at me, I'm a vegetarian!'\n\nSeb and Phil were whooping and cheering as a figure darted into the frame and pulled up behind them. 'STOP IT!' she shrieked, 'JUST STOP IT! THIS IS INSANE!' \n\nPhil looked over his shoulder then lowered his handgun. Taking a deliberate step back, he grabbed the young female by the throat and hurled her sprawling onto the deck. He looked at Fowler, grinning. 'Doesn't want a shell casing down the front of her shirt. Burn her tits.'\n\n'Right!' Fowler gasped, breathless with hilarity. 'S... s... s... safety first!'\n\nAnother figure appeared, another young female, and helped the first back onto her feet. Arm around her shoulders she shepherded her aft, whispering in her ear. \n\n'Oh ohh...' Fowler cried, 'looks like we're in for a bit of the old lez action!'\n\nWatson swabbed the sweat from his brow, briefly tempted to ditch this compendium of depravity, to throw it in a bin, put it under the wheel and run it over, back and forth, until there was nothing left but high-tech tinsel. Fowler's mate, Phil, yelled, 'SHARK!', and something resembling a submarine cruise-missile flashed past the bow into the rapidly blooming bloodstain. Changing magazines, Phil and Seb commenced shooting blind into the frothing red turmoil while Fowler hooted and howled, thumping the superstructure with unbridled delight.\n\nThe next clip along, Seb was driving the camera. His old man was shirtless, a prodigious gut hanging over the waistband of his sagging shorts, his hairy, tanned skin glistening with sweat. He was standing under the flybridge, clutching a beer. His mate, Phil, beside him was likewise shirtless and he too was nursing a stubby. In front of them, huddled side-by-side on a bench-seat, sat two young, terrified women. Fowler looked at the camera and winked. 'Okay,' he growled, 'who's first?'\n\nOne girl put her face in her hands and began sobbing. The other looked up, her eyes wide and frightened. 'Please,' she implored, 'don't do this.'\n\nThe men looked at each other, grinning, clearly enjoying themselves, and Fowler took a swig of his beer. 'I was gunna leave the doing to youse.'\n\nThe crying girl put her hands together, face wet with tears. 'Please,' she begged, 'we'll give you everything we have. Just take us back. Please!'\n\nWatson tried to pin down the accent. German maybe? Maybe Dutch?\n\n'It's just a little fuck, Darlin'.' Fowler said reasonably, 'I'm not askin' ya ta marry me.'\n\n'I thought you Dutch sluts loved to fuck.' Phil leered.\n\n'Turtle!' Seb shouted, and the camera changed hands, following him briefly as he darted up on deck with the big silver handgun. There was a booming 'whack!' and both girls jumped. \n\n'Please..' the crying girl whimpered, rocking back and forth, 'Please.'\n\n'What do you reckon, Phil? Eeny meeny miney moe, catch a backpacker by the-'\n\n'Big hairy cunt.'\n\n'-toe! Have you got a big hairy cunt, Darlin'?' Fowler asked, then lunged at the crying girl and tore at her shorts.She fended him off, kicking and screaming, knees up and elbows in to provide the smallest possible target. As the drama unfolded, the phone's high definition screen expanded to fill Watson's whole world. Surely not, he thought, stomach churning. Not even Fowler, as vile, brutal and sadistic as he was, not even he would stoop to this.\n\nFowler swung his arm through a wide arc and his big, fat hand smacked flat into the side of the crying girl's face. Her companion let out a shriek. Poleaxed, the girl hit the bench, unconscious, then crumpled inelegantly to the floor. Seizing the second girl by a fistful of hair, Fowler reefed her to her feet and jammed his face in hers. 'I fucken' said, who's first?'\n\n'Take me!' the girl shivered. 'Take me! Just leave her alone and I'll do anything you say.'\n\n'That's more fucken' like it!' Fowler crowed. 'See? These cheeky little cunts was just playing hard to get.' There was another huge explosion as Seb took a potshot at a surfacing turtle. 'Put that fucken' thing away, Seb.' Fowler cursed. 'Git down here and let's root these sheilas!'\n\nNext clip, the inevitable. They were in the boat's stateroom, scene of another crime. The girls lay on their backs, side by side, one sobbing, the other in a state of shock staring empty-eyed at the ceiling. A trickle of blood had dried on her cheek, and her face was bruised and swollen from the flat-handed blow. Fowler lumbered into the frame, naked, sporting an erection of impressive dimensions. Kneeling on the end of the bed, he flung the crying girl's legs apart. \n\n'Jesus, Chook,' his mate chuckled, 'do you ever wipe that arse?'\n\n'Turning you on is it, Phil?' Fowler grunted, giving his cock a few pre-emptive strokes. Phil giggled as the old man flopped onto his victim, punching a grunt from her lungs. 'Come on ya lesbian cunt.' Fowler snarled. 'Put me in.'\n\n'You look like one of them seals.' Phil joked, 'One of them great big cunts with the big floppy nose.'\n\n'Ya like that, Darlin'?' Fowler grated, ignoring him, his mountainous buttocks heaving up and down.\n\nThe phone rang. Watson shot up out of the seat, fumbling the phone like a lump of red-hot steel before dropping it into the footwell. He stared at it in horror for an instant before realising it wasn't the phone that was ringing. \n\nA green telephone icon winked at him from the multifunction display. Watson tapped the screen and after a few second's silence the dashboard said, \"Yoo-hoo. Damo? You there?\"\n\n\"Jesus!\" Watson gasped, \"Tan. Jesus. You just about gave me a heart attack.\"\n\n\"What's happening, Handsome? Where are you?\"\n\n\"Not sure. Sydney somewhere.\"\n\n\"Well that narrows it down. Did you find Kevvy okay?\"\n\n\"Yep.\"\n\n\"Did he do the do?\"\n\n\"Yep.\"\n\n\"And?\"\n\n\"Look, Tan. Not over the mobile. I'm on my way to pick you up now.\"\n\n\"Well my leg pegged out. Me and Beck just got home in an Uber. You right to find your own way back?\"\n\n\"Caddy's? Hang on a mo, you'll have to give me the address. Is there a pen in the glovebox?\"\n\n\"Address? You don't need an address.\"\n\n\"How will I find it?\"\n\n\"The GPS, silly. Just go to 'recent' and tap 'Home'.\"\n\n\"Right, right. Gotcha. Hang on... There. Got it.\"\n\n\"You okay, Sweetheart? You sound kind of funny.\"\n\n\"Okay? No, yeah, I'm okay. Just thanking my lucky stars I forgot my wallet.\"\n\n* * *\n\nThe girls were in the pool when Watson reached Caddy's, drifting around on an inflatable mattress, Maya on her tummy, Beck on Maya's back, head resting between her shoulder blades. It had been a long and exciting day. Beck had just discovered that there were buildings in most cities, big, imposing labyrinthine treasure troves full of everything from dinosaurs to mummies. In half a day's exploring she had barely scratched the surface.\n\nWhen Watson appeared looking slightly the worse for wear, the girls waded from the pool to welcome him home. As rattled as he was by his own day's activities, the sight of the two naked females couldn't help but lift his spirits. Maya, who had endured a day of forced education was in the mood to play.\n\n\"Hello, Damo.\" she said sweetly, taking his hand, \"How was your day?\"\n\nWatson looked at her- barely five feet tall, forty eight kilos wringing wet, with droplet-bejewelled skin stippled with goosebumps. Her nipples stood out like brown rubber bullets and her cupcake breasts were heaving with every breath. Maya returned his scrutiny with huge brown eyes, awaiting his reply. An hour ago the answer would have been, 'terrible', but his day had suddenly taken a turn for the excellent. \"Odd.\" he replied, hedging his bets.\n\n\"You know,\" Maya said, leaning into him, her skin frigid to the touch, \"I was thinking we might go up to my room. Becky says you're really clever. I was hoping you might help me with my homework.\"\n\n\"What subject?\"\n\nMaya looked to Beck for the go-ahead and the little blonde nodded. She arched her eyebrows. \"Biology.\"\n\n\"I see. And what does your mum have to say about that?\"\n\nThe two young females swapped another conspiratorial glance. \"Mum's not home.\" Maya replied, \"So I can do what I want.\"\n\n\"Really? Where is she?\"\n\nFlanking him, they towed him in the direction of the big sliding doors. Watson looked around, suddenly sensing a change in the mansion's energy. \"At Grandma's.\" Maya replied, \"She had to go and help with the shopping.\"\n\n\"Where's Grandma live?\" Watson asked, thinking somewhere down on the harbour. \n\n\"Melbourne,\" Maya announced blandly, \"though sometimes she lives in Sydney. Mostly she lives in Paris or New York, when she's not travelling.\"\n\n\"Really? When will Mum be back?\"\n\n\"Tomorrow. Tan's supposed to be looking after me.\"\n\nWatson looked around. \"Where's Tan now?\"\n\n\"Having a sleep.\" Maya replied, as Beck looked on with a smirk. \"Beck wore her out her out.\"\n\n\"Poor Tan. Dragging her round the museum?\"\n\nMaya shook her head. \"With O.J.\"\n\nWatson shot Beck a glance. \"You know Tan's not the only thing you're gonna wear out.\"\n\n\"Nuh uh.\" Beck shook her head, \"It's made of plastic. It'll never wear out.\"\n\nWatson rolled his eyes. \"I don't mean the dildo.\"\n\n\"What do you mean?\" Beck frowned, then the penny dropped. \"Oh... that? Nuh uh! That's one thing that will never wear out!\"\n\nRampant sex with the two young females seemed unavoidable, but Watson still felt sullied by the afternoon's discovery. A little cleansing was in order before committing holy union, but how to make a shower part of the festivities? Suddenly inspired by the sight of the wet, shivering blonde, Watson flattened his hand on Beck's back. \"You're freezing!\" he said. \"In fact you both are. What do you say? Fancy a nice hot shower before playtime?\"\n\n* * *\n\nWatson sat cross-legged on the grey slate tiles, one shower-stream pummelling the middle of his back, the other deluging the two teenage girls standing naked in front of him. He watched as they twisted to and fro under the steaming cascade, letting the hot water drive the chill from their bones. Maya held out her hand. \"Wash me?\"\n\nNothing if not a gentleman, Watson took the cake of perfumed soap and commenced running his lathered hands all over her body, kneading her breasts and pinching her nipples, sliding his fingers between the yielding lips of her sudsy vagina. Rinsing off, she stepped up to him, feet apart and knees slightly bent. With the fingers of both hands, she spread her pussy lips until the hard little bead of her clit popped out of hiding. Cranking her hips, she offered Watson a taste of her candy-pink slit, closing her eyes as his tongue flickered her nub before burrowing into her hole.\n\nBehind her, Beck cupped one of Maya's breasts in the palm of a hand as the other slid down to Maya's ass-cleft. Something touched Watson's chin and he pulled back to in time to see two of Beck's fingers disappear into Maya's vagina, all the way up to the knuckles. Between Beck's fingering and Watson lapping her clit, it wasn't long before Maya was on the boil. \"I'm probably going to cum if you guys don't stop.\" she panted, butterflies swarming in her tummy.\n\nMassaging Maya's tit and fingering her pussy, Beck put her mouth to Maya's ear. \"You want to cum?\"\n\n\"Do we still get to fuck?\"\n\nBeck arched her eyebrows at her old man and he shrugged. \"I don't see why not.\"\n\nGrabbing Watson's head, Maya pulled his face hard into her groin. Hips thrusting and twisting, she arched her back and pushed out her pelvis. \"Ohhh\" she cooed, clawing at his closely cropped hair, \"that's the way!\" \n\nWith Beck's fingers squelching in and out of Maya's teenage pussy, Watson closed his lips on her clit, fluttering the tip with his tongue. Maya's hips began to jerk and her legs began to tremble as she panted for breath. \"That's it.\" she gasped, \"Yesss! Don't stop. Don't stop, don't...\"\n\nShe climaxed, doubling over the old man's head, holding Beck's fingers in place as she shook and shuddered. As the tremors subsided, Beck extracted her fingers then stuck them in her mouth to suck them clean. Straightening, Maya turned to Beck and they kissed, grinding pussy mounds. They broke off, and Maya put her hands on Beck's shoulders. \"Your turn. I wanna watch him wash you.\"\n\nSo the old man went another round, the onerous task of washing by hand the lithe, pliable body of a smooth-skinned teen. He lavished particular attention on the points he knew would give her most pleasure. Her nipples and underarms, her bellybutton and slit. When at last he reached her ankles, Beck turned her back on him and bent at the waist. \"You missed my bottom.\"\n\nWith Maya squatting beside him, Watson spread Beck's butt cheeks for Maya to see, then soaped her puckered butthole before treating Beck's pussy to a thorough fingering. By the time he had finished, he was sporting another erection and his thoughts were already straying to the next instalment. \"How's that Moosh?\" he asked and slapped her butt. \"All clean?\" \n\n\"I think so.\" Beck replied. \"Are you clean, Maya?\"\n\n\"Uh huh,\" the girl nodded, \"clean as a whistle.\"\n\n\"Good.\" Beck nodded, then gave Watson's head a proprietorial pat. \"Now let's all go to bed and get dirty.\"\n\nMaya stood and the girls stepped back. Offering their hands, they took the old man and hauled him to his feet. Bending, Maya rubbed the head of his cock gleefully all over her face, then slipped her mouth over the knob and gave it an encouraging suck. She looked at Beck from the corner of her eye and spat him out. \"I'm not being greedy, am I?\"\n\n\"We're leaving in a day or two.\" Beck shrugged, \"Might as well make the most of it.\" \n\nMaya straightened. \"When do you think you'll be back?\"\n\nWatson turned the water off and stepped out, then handed each girl a fluffy white towel. \"Hard to say.\" he shrugged. \"We've been thinking of doing a circumnav. I guess we'll wind up back here eventually.\"\n\n\"You could always come up and see us on the boat.\" Beck piped up. There was nothing like a home-field advantage.\n\nMaya's eyes flew open. \"Can we go diving?\"\n\n\"Free or Scuba?\"\n\n\"Both!\"\n\nBeck nodded. \"Like, every day.\"\n\n\"You'll have to teach me.\"\n\nWith the ball squarely back in her court, Beck took Maya's towel and commenced rubbing her down. \"That's not all I can teach you.\" she smiled, lavishing attention on Maya's butt and her groin.\n\nMaya smiled. \"I bet it's not.\"\n\nDrying off, Watson was just about to ask, 'How do you want it?' when Maya took a flying leap onto the bed. Landing on all fours, she backed up to the end, lifted her butt and pushed down her belly. Stepping up, Watson rested his hands on the globes of her butt cheeks. \"I guess that answers that.\"\n\nMaya wiggled her bottom as Beck stepped up beside him and wrapped her tiny hand around his raging erection. Watson looked at her, at her big blue eyes, her tiny little tits, her bedraggled blonde hair dripping all over Maya's back. Not for the first time he thought, 'this is a miracle. \"Put me in, Moosh?\"\n\nBeck nodded. Stooping, she engulfed as much of his cock as she could without gagging and lathered it with saliva. Spitting him out, she squeezed between Watson and Maya and gave Maya's rosy slit a thorough licking. \"There you go,\" she said, wiping her mouth, \"all nice and slippery.\"\n\nMaya flinched as the head of Watson's penis first touched her mound, mushing her lips apart up near her entrance. The girl's skin turned to gooseflesh and the muscles on her back stood proud as she tensed in excitement. The old man gave her ass a gentle pat. \"You right there, Sweetheart?\"\n\nMaya nodded. \"Uh huh.\"\n\n\"Not too tender?\"\n\nShe shook her head. \"I'm fine.\" Pushing back to prove the point, she drove herself onto the end of his cock. Leaning back, Watson looked down to find his knob buried inside her, her outer lips stretched around its base. Maya lay her head on her arms and in a muffled voice asked, \"Are you in?\"\n\n\"Nearly. How does it feel?\"\n\nShe shivered. \"Great! Push a little harder if you like.\"\n\nWatson nudged his hips forward. While he'd been here several times already, it just didn't seem possible he'd actually fit. He was just about to give her pussy another poke when Maya pushed back and the head of his cock popped through her tight ring of muscle. \n\nBeck jumped onto the bed and fell on her back, perpendicular to Maya, head under her belly. Extending a long, slender arm, she reached under Maya's torso and ran her fingers around Watson's erection where it disappeared into the girl's tight, slippery pussy. \"Want me to play with your clit?\"\n\nMaya shook her head. \"Nuh. Not yet. In a minute or two when I get used to it. Damo? Why aren't you moving?\"\n\nMesmerised by the sight, Watson shook himself out of his reverie and squeezed Maya's butt. \"Sorry, Boss. I was just saying a prayer. \" Slowly at first, and with great care, he began rocking backwards and forwards, driving a little more cock into Maya with each stroke. ",
        "\"Hey!\" a voice behind him said, \"What's going on here?\"\n\nSpringing up off the bed, Beck towed Tanya to the scene of the crime. \"Damon's fucking Maya.\"\n\n\"No kidding.\" Putting a hand in the middle of Maya's back, Tanya bent down until she was eye level with the girl. \"You do know, don't you? You've got a big fat cock sticking into you.\"\n\nMaya nodded, far too absorbed to play along. It was big, and it was fat, and it was sticking into her, forcing her muscle walls apart and nudging her uterus. Sitting, Beck reached out and reefed Tanya's running shorts down, brining her knickers with them. Kicking free, Tanya raised her arms so Beck could peel off her sheer white tank top. \"Geez,\" Tanya said, \"someone's horny.\"\n\n\"Yes!\" Beck patted the mattress, \"You are! Lie down.\"\n\nTanya fluttered her eyelashes. \"Oooo... are you going to take advantage of me?\"\n\nBeck arched her eyebrows. \"If you're good.\"\n\n\"What if I'm bad?\" Tanya asked, rolling onto her back.\n\n\"Well you know what they say?\" Beck replied. \"When you're good you're good. When you're bad you fuckin' rock!\"\n\nBouncing between her legs, Beck eased the fluoro pink cast gently aside, then buried her face between Tanya's thighs. Tanya closed her eyes, a big, satisfied smile on her beautiful face. \"Help!\" she said in a little voice, \"I'm being ravished. Don't! Stop! Don't! Stop! Don't... stop! Don't stop!\"\n\nMouth clamped over Tanya's smooth mound, Beck wormed her tongue between Tanya's plump pussy lips and then slithered up and down her slippery furrow. Winkling the tip of her tongue under the cover of Tanya's clitoris, she lapped and fluttered at the hard little bead. Tanya lay her hand on top of Beck's head. \"Jesus, Missy, you're getting good at this.\"\n\nMaya stiff-armed herself up and pushed back as hard as she could onto Watson's stiff cock. Gripping her butt cheeks, the old man cranked his hips, sinking five or six inches into the teen's clenching flesh. She was insanely hot, incredibly wet, slippery as an eel and tight as a fist. Watson focussed every ounce of concentration on the feel of her insides, her heat, her strength, the rubbery resistance of her muscle walls, the taught ring of her entrance raking his shaft. The act was all-consuming. Incredible.\n\nWith Tanya's pussy slippery with spit and her own seeping body fluids, Beck slipped a couple of fingers in. Then three. Peering over the heaving plains of Tanya's belly, past the quivering hills of her breasts, Beck saw Tanya's expression go from one of mere pleasure to fierce intensity. Four fingers were soon squelching and squishing into Tanya's hot embrace and she arched her back, driving her pelvis down on Beck's hand. Patting the top of Beck's head, she panted, \"Go for it.\"\n\nMaya's hips were starting to jerk. She flexed her back, meeting the old man thrust for thrust. A foamy ring of protein ringed Watson's shaft, like a high-water mark at the limit of penetration. Reaching under Maya's chest he squeezed her stiff nipples, merely adding to the arousal. Bumping across her ribcage over her belly, his hand sought-out the little fleshy jellybean of her clit-hood.\n\nBeck propped herself up on one elbow. Flicking her hair back, she pressed the tips of her fingers and thumb together, then screwed her hand into Tanya's spasming hole. Twisting and pushing, she eased her knuckles under the woman's hard pubic bone, and as her hand disappeared into Tanya's lower abdomen, Beck commenced fisting. \n\nThe old man briefly wondered if his eyes were in danger. Wide, unblinking, they were witnessing his fondest, filthiest porn fantasy in real life... two teens, three pussies, a dick and a fist. Bucking and writhing in total abandon, Maya seemed determined to take every last inch of his straining cock. Each time he plunged into her, he could feel the resilient knob of her cervix, a fraction before he banged into a tight dead-end. Maya was squeaking and grunting, head up and belly down one minute, head down and back arched the next. For such a petite package she was incredibly strong and gave as good as she got, as she rode Watson's cock all the way to orgasm city.\n\nBack straining, ribcage heaving, Tanya gripped Beck's wrist and commenced ramming the girl's fist into her. \"Jesus!\" she gasped, \"Jesus!\" \n\nGood leg hooked over one arm, broken leg lying safely to the side, Tanya opened her legs as far as she could to give the skinny blonde maximum access. Unable to resist, she slid a hand down her belly and began to savage her clit, stomach muscles knotting and veins popping out on her neck. She let out a long, protracted, \"Ohhhhhh...\" that dwindled into a low, throaty groan. The next instant she was thrashing in the throes of an orgasm, her insides convulsing around Beck's clenched fist, the muscles of her entrance gripping her arm. Her belly tensed, and a fountain of watery ejaculate showered the bed. \n\nAt the very same instant Maya's insides began to flood, as her body prepared for its own shattering climax. She orgasmed, the usual trembling commotion, then suddenly came-to, her tension unravelling in a long, quavering sigh. Hand flat on the old man's belly she brought him to a precipitous stop. \"No,\" she panted, patting his thigh, \"no more.\" \n\nWatson doubled over her back, still buried deep inside the teen's tight vagina. Beck was slowly withdrawing her hand, slick with Tanya's juice, as Tanya's spasming insides resumed their resting dimensions. Burying her head between Tanya's thighs, Beck suckled noisily on Tanya's drooling pussy, while the woman propped herself up on her elbows to watch. \"You,\" she declared, \"are probably the dirtiest little girl I've ever come across. Not to mention on. And around.\" \n\nBeck rolled onto her back, smacking her lips. \"Naww... do you mean it?\"\n\nStill gasping, Maya nodded her head. \"She means it.\"\n\nIt took some doing, but Watson gradually extracted his still-hard cock from Maya's insides. Patting the girl's flank, he shuffled on his knees over to Beck. \"What do you say, Moosh?\" \n\nBeck brought her knees up and flopped them to the sides then held her arms up by way of reply. Kneeling between her spread legs, Watson took a moment to savour the sight of Beck's pussy, the outer lips open of their own accord, revealing a her glistening pink insides. He dipped a finger in to find her all wet and ready. \"I probably won't last long.\" he said, \"is that okay?\"\n\n\"Shut up, Dommy,\" Beck said, \"and fuck me.\"\n\nTanya rolled onto her side to watch. \"You heard the lady, Mister. Get that thing into her.\"\n\nAs incredible as Maya's body was, the instant he entered Beck Watson knew this was where he rightly belonged. Her bespoke topology was such a perfect fit, elastic and unyielding in exactly the right proportions, hot, wet, tight and perpetually slippery. Resting his weight on his elbows, Watson used the first minute or two getting her used to it, and when she crossed her feet over his back he began to drive. Beck's body was soon jerking with every collision between the old man's cock and her insides. Lifting her hips, she positioned herself by feel so that in no time at all Watson's blunt knob was head-butting her cervix. Beck threw her arms around his neck and pulled him down. \"Lie on me.\"\n\nStill pounding his meat into her, Watson transferred more and more of his weight onto Beck's supple frame. \"Fuck yes,\" she said in a muffled grunt, \"that's it! Fuck me, Dommy! Fuck me!\"\n\nWell he was doing his best. He cast his mind back to the video clips on the phone, trying to buy some time, but the feel of Beck's cunt, so hot and slippery, its tight ring of muscle sliding up and down his shaft, soon had a climax on the boil. For such a familiar sensation the feeling was utterly unique, every single fuck a singular event, the first and the last, the one and the only, the hardest, the longest, the best. \"I don't think I can last much longer.\" he puffed. \"You want me to stop?\"\n\n\"Don't stop!\" Beck panted. \"I want you to cum in me!\"\n\nHe didn't have much choice. The little miracle unravelled again, straining muscles, stretching tubes, countless, complex chemical reactions combining to blast four or five spurts of sperm-laden fluid deep inside the girl's tiny body. Whether she was faking it or it was actually for real, Beck squealed and writhed underneath him, her heels digging into his butt cheeks as she spurred him on. Watson's contractions waned and the stars cleared out of his eyes and he lay on top of her, chest heaving, while Beck jerked and mewled, her clenching insides flooded with semen. Muscles trembling, he pushed himself up. \"Did you just cum?\"\n\nBeck nodded. \"Uh huh.\"\n\n\"For reals?\"\n\n\"For reals.\"\n\nThe old man looked from the panting little blonde to the olive-skinned eighteen year-old he'd just fucked to orgasm. Then the thirty-something stunner with the pink fuoro leg his own girl had just fisted into oblivion. \"I wonder if I'll go to hell?\" he mused.\n\n\"For a little horizontal cross-fit?\" Tanya scoffed and blew a raspberry. \"As if. Anyway, hell's already full of priests and politicians-\"\n\n'And lawyers...' Watson thought.\n\n\"and most of the lawyers I know are on the waiting list. But you? You're not going to hell. This is Karma Damon, remember?\"\n\n\"Anyway,\" Maya piped up, \"we'll all be together if you do.\"\n\nSlipping an arm under Beck's shoulders Watson rolled over, taking her with him and \n\nMaya bounced up onto her knees beside them. \"Naughty girl!\" she said gleefully, slapping Beck's behind, \"You're leaking goo.\"\n\nBeck pushed herself up and looked at Maya over her shoulder. \"You want to lick it up?\"\n\nMaya screwed her face up and shook her head. \"Mmm... nah.\"\n\n\"I'll have it!\" Tanya said, then rolled across the bed, pulled Beck's butt cheeks apart and lapped up the bubbling semen.\n\n\"You go Tan!\" Maya giggled. \n\nTanya fondled Watson's balls. \"Ready to come out you dirty old man?\"\n\n\"Hey!\" Watson glared, \"Who are you calling old?\"\n\nTanya rubbed the small of Beck's back. \"Give the old bugger a squeeze would you, Sweetheart?\" Beck did as she was told and slowly extruded Watson's dwindling erection. Gobs of congealed cum sputtered out with it and Tanya helped herself, sucking and slurping to her heart's desire. \n\nWatching her feast, Maya had a change of heart and tapped Tanya on the shoulder. \"Can I have a taste?\"\n\nTanya looked up, cum and pussy-juice all over her face. \"What? Of course you can. Here.\"\n\nShe moved aside and Maya dived in, watching for escaping semen and swiping it up with her tongue. Watson's knob fetched up against Beck's entrance and after a short rest to savour her grip, he jerked himself free in a gush of white slime. Maya suckled noisily on Beck's gaping pussy, worming her tongue inside the shrinking hole, cheeks caving in as she sucked for all she was worth. \"Don't forget his cock.\" Tanya said. Watson flinched as a hot, wet mouth with scraping teeth enveloped the end of his penis. Sucking his pee-hole dry, Maya licked the underside of his shaft, all the way to his balls. She sat up, her face wet and glistening. \n\n\"How was that, Pookes?\"\n\nMaya swiped her mouth with the back of her hand. As cocktails went, the mixture of body fluids wasn't half bad. She nodded. \"Nice.\"\n\nTanya wrinkled her nose. \"Sounds like you're getting a taste for it.\"\n\n\"Chip off the old block.\" Watson grunted, struggling upright.\n\n\"Well, I love it.\" Beck declared airily.\n\n\"Spoken like a true connoisseur.\" Tanya replied, then pushed herself up and sat on the end of the bed. \"Anyway. Now we've all had dessert, who's for some dinner?\"\n\n* * *\n\nSAUCE FOR THE GOOSE\n\nBy the time dinner was done- home cooked tonight yet every bit as delicious as five-star takeaway- and Tanya had badgered Maya through her actual homework, it was getting on for bedtime. The girls wanted to sleep together, naturally, and after setting some strict boundaries- no porn after their first round of sex, lights-out before midnight- Tanya bundled them off, then limped back to Caddy's bedroom where Watson was waiting. \n\nThe old man had told Tanya nothing of the phone's obscene contents, keeping it a macabre surprise. Now, as well as badly needing to share the disturbing discovery, he was guiltily looking forward to her inevitable reaction. She'd be horrified, how could she not be, and Beck's narrow escape would seem all the more dramatic.\n\nRolling onto the bed clad in a bathrobe, Tanya propped herself up on the head of the bed beside Watson. When he thumbed the remote to turn on the TV, Tanya reached over and patted his thigh. \"Home movies again, Damo? Don't take this the wrong way, Sweetheart, but I think I'm all home-movied out.\"\n\n\"Well, they are home movies but nothing like yours.\"\n\n\"Ah. The phone. Anything interesting?\"\n\n\"Judge for yourself. Just tell me if you want me to stop.\"\n\nWatson pressed play, and the high definition image of a seascape resolved on the flatscreen TV. A boy on a boat, his feet well apart for stability, a big silver pistol in his hands. \n\nTanya sat through all six clips, eyes wide, hand over her mouth, one arm hugging her knee. Between the three males they raped the young women half a dozen times, with their cocks till they finally went soft, then with bottles. They forced the young women into a sixty-nine, the one with the battered face lying on top, unable to bring herself to go near her friend's vagina, the girl on the bottom giving her partner a desultory fingering. The older men seemed especially proud of the boy, and his signature gesture, the face spit.\n\nThe last clip was shot just on sundown. The boat was motoring serenely along through a low, rolling swell. The foreshore was just visible, scrolling slowly past in the background. The streetlights were on, Country and Western music floated like garbage from the mouth of the cruiser's saloon. Seb was behind the camera. The older men, clutching beers, were standing over the two young women, now fully dressed and huddled on the bench-seat together. Fowler drained the contents of his beer and tossed the bottle overboard, then heaved a massive belch. 'Well, girls,' he said amiably, 'how was that? Somethin' to write home about?'\n\nNeither female replied. The smaller girl, the blonde, the one with the swollen black eye, sat hugging herself, her face a mask of bottomless anguish. Hunched beside her, the blonde's companion sat staring at the deck, hands squeezed between her thighs, white-hot pain radiating from her recently raped anus. 'Don't forget to tell your friends.' Fowler leered. 'Chook's the name. Fishin' shootin' fuckin's the game.'\n\nThere was no response. \"What's up?' Phil chuckled, 'Cat got your tongues?\"\n\n'NO REFUNDS!' Fowler roared and the girls both jumped with a scream. Laughing mightily, he popped the top off another beer and took a huge swig. 'Jesus Christ you pair,' he said, then summoned up a belch, 'just cheer up. I mean look on the bright side. Normally we'd a' dumped you overboard and let the sharks sort it out.'\n\n'It's not too late!' Phil growled.\n\nTraumatised, the girls sat shivering.\n\n'Well fuck me!' Fowler groused, 'What's it gunna take to get a smile out of youse cunts? What do ya reckon, Phil? Wine 'em and dine 'em, take 'em for a ride on me boat.'\n\n'Let 'em fuck your boy.'\n\n'Let 'em fuck me boy. And me best mate. Jesus, you'd think they'd be grateful.'\n\n'That's the way it is these days.' Phil sighed, 'It's just me, me, me.'\n\nFowler turned to face the camera and extended his arm. 'Git up there and knock the autopilot off, Seb. Take us into the marina.'\n\nThe camera changed hands.\n\n'Ya not too pissed are ya, boy?' Fowler asked, camera following the boy up the ladder to the flybridge.\n\n'Aww, fuck off.' the boy giggled, 'I'm not half as pissed as you.'\n\nPerspectives morphed as Fowler changed position then extended his arm for a selfie. He was sitting on the bench seat, hard up against the cowering girls. The one nearest to him shrank away, whimpering, as her friend slung a protective arm around her shoulders. 'You know,' he rumbled, 'I'm beginning to wonder if my generosity might a' been wasted.'\n\n'Better watch out they don't call the cops.' Phil grunted with laughter. \n\nThe camera swung away from the sobbing women to the big, menacing figure of Fowler's accomplice. Towering over them, clutching a beer, he had a smirk on his face and a glint of malice in his eye. 'Ya reckon, Phil?' Fowler scowled. 'Ya reckon these cunts'd do that? After all I done for them?'\n\n'Ya never can tell, mate.'\n\n'Issat so? Well it's just fucken' lucky I brung one, isn't it?'\n\nPhil delved into a back pocked and extracted a thin leather wallet. He flipped it open, just long enough to reveal a police badge and photo ID. 'What do you say, girls? Any complaints?'\n\n'Go ahead and tell the nice policeman.' Fowler urged. 'Anything ya wanna get off ya chests?'\n\nThe camera swerved back to the females, now clutching each other, eyes white with terror.\n\n'Oi, oi!' Phil exclaimed, 'What's this?' The camera leapt back to Fowler's mate, now holding a small, plastic, snap-lock bag between finger and thumb. Even with the lurching camerawork, its crystalline contents were clear. \n\n'Crikey Phil! What's that?'\n\n'You know what, Chook? If I was a cop, I'd say this looked just like crystal meth.\"\n\n'Girls!' Fowler admonished in mock dismay, 'Surely not!'\n\nPhil staggered as the boat veered to avoid a channel marker. 'OI! SEB!' Fowler bellowed, 'What the fuck are ya doin'?'\n\nA distant voice replied, 'Sorry, Dad.'\n\n'Do you know how the police force works, girls?' Phil asked. 'It's like a great big club. A great big club where the members all look out for each other. Now. If you want to make a complaint, go right ahead. If you do, the first thing the cops'll do is ring me. The first thing I'll do, after telling them it's all bullshit, is make sure your little bag of shizzo's discovered. Know what you get for crystal meth in this neck of the woods? Mandatory life sentence in maximum security.'\n\n'Jesus, Phil,' Fowler sucked air through his teeth, 'no kidding? Life behind bars? I reckon those bull lezzos would make short work of these sweet little things. Waddaya reckon, girls? Like to be ganged by a bunch o' hairy old bulldykes with strap-on baseball bats for the rest of your natural?'\n\nOne girl began sobbing into her hands. 'Please.' she keened, 'Please. Just let us go.'\n\n'No complaints?'\n\n'No.'\n\n'Nahh...' Phil tucked the drugs into a top pocket and winked, 'I didn't think so.'\n\n'Dad!' Seb yelled, 'can you give me a hand?'\n\n'Jesus Christ!' Fowler swore under his breath. 'Hang on.'\n\nThe clip ended and a mosaic of thumbnails popped up on the TV. Tanya had barely budged during the show and Watson was now wondering whether it had all been too much. \"Well?\" he asked, \"What do you think?\"\n\nTanya shook herself out of her trance and looked at Watson. \"Well that wasn't very nice, was it?\"\n\nWatson almost choked. \"Not very nice? They raped them!\"\n\n\"Anally and vaginally.\" Tanya nodded, \"I saw.\"\n\n\"You're not shocked?\"\n\n\"Shocked? No. I'm disgusted. And I'm disappointed those stupid girls put themselves in that situation. But shocked? No.\"\n\n\"Jesus Christ,\" Watson shook his head in dismay, \"did I just miss something?\"\n\n\"Look,\" Tanya said wearily, \"so they got raped. But no one shoved a shotgun up their vaginas and pulled the trigger. No one threw them over a fifty-meter embankment from a speeding car. Nobody even tied them to a chair then doused their kids with petrol before burning them alive in front of their eyes. What's to be shocked? It was just a common or garden rape with a bit of biffo.\"\n\nWatson stared at her. \"Well stuff me, I did miss something.\"\n\n\"You know, when Rodge first went to the bar, he spent his first year reading with one of the country's top criminal lawyers. You want shocked? I'll dig up a few of his old cases.\"\n\nWatson raised a hand. \"Thanks, but no. I think I've seen enough.\"",
        "Tanya gave him a playful punch. \"Oh you old softie.\"\n\n\"And proud of it.\"\n\n\"Luckily that only applies to your heart.\" Tanya grabbed his flaccid penis and gave it a shake. \"Most of the time.\"\n\nWatson shook his head. \"Those poor girls.\"\n\nTanya inhaled deeply through her nose. \"Look, I hate to sound callous, but they pretty much asked for it.\"\n\nWatson stiffened. \"How can you say that?\"\n\n\"I'm a chick! Look, if their women's intuition didn't warn them it was a trap, then they weren't playing with a full deck for starters. All alone offshore with a couple of big boofheads... That fridge full of beer should have been the first hint.\"\n\n\"So you reckon they expected it?\"\n\n\"They were probably prepared for a little slap and tickle, a bit of groping maybe. But a big flash boat and a trip to the reef? Wandering hands would be a small price to pay. And I'll bet my bottom dollar they were counting on the boy. There could be nothing too juicy while he was around.\"\n\n\"Except he was in on it.\"\n\n\"Right.\" Tanya shook her head sadly. \"The poor kid.\"\n\n\"Poor kid?\" Watson demanded, aghast.\n\n\"Well what chance has he got? He'll end up just like his old man... fat, stupid and repulsive. What a waste.\"\n\n\"Well I don't feel sorry for the filthy little fucker.\"\n\n\"He tried to rape your girl at knifepoint. I don't expect you to.\"\n\n\"So what do you think I should do?\"\n\n\"What do you want to do?\"\n\n\"Really? I'd like to take them all out on that shit-heap of boat and sink the fucking thing. Let the sharks sort it out, like he said.\"\n\n\"You sure?\" Tanya asked. \"It wouldn't be hard to arrange.\"\n\nWatson squinted at Tanya trying to work out if she was serious, and judged by her deadpan expression she was. \"Okay, not really. It's a lovely fantasy though.\"\n\n\"Well do you want to go to the cops?\" While Watson struggled in vain to articulate a reply Tanya raised a hand. \"Just checking.\"\n\n\"Well think about it. So I go ahead and hand over the evidence. Okay then, how did I come by that phone? And Fowler's best mate, he's a cop. And don't forget I smashed that little prick's heel.'\n\n\"Okay, okay,\" Tanya waved him down, \"bad idea.\" She sat chewing her thumbnail for a moment, deep in thought. \"Look,\" she said, \"there are other ways of getting the authorities involved without you having to engage with them.\"\n\n\"Really? How?\"\n\nTanya shifted and the front of her bathrobe fell open to reveal an eyeful of breast and her open crotch. \"Think about it. That cop is his enabler. A pig that bent would be hiding more than just a few tacky rapes. And he's dumb as dogshit, obviously. I mean, letting anyone, anyone, best mate or not, get that sort of thing on record. There's an old Chinese saying, 'even an egg isn't airtight'. Sooner or later this was gonna to get out.\"\n\nWatson sat back, at a loss.\n\nTanya glanced at Watson's lap to discover he was harbouring a partial erection. \"What's all this then?\" she admonished, \"We're talking about payback for a couple of scumbags and you've gone and got yourself half a mongrel!\"\n\nWatson bounced up and down, laughing at her colourful turn of phrase. \"It's not my fault,\" he complained, \"I can see your pink bits.\"\n\nTanya reefed the bathrobe closed over her assets. \"Mind on the job, Mister! We're conspiring here, remember.\"\n\n\"We are?\"\n\n\"Uh huh. To put a stop to this racket once and for all. First things first we have to bring that cop down. A quiet word to the DPP should do the trick. Even the most cursory audit should be enough to get the ball rolling.\"\n\n\"And what about that other maggot?\"\n\n\"Fatty? He'll go to water without his mate around to protect him. I can't imagine he'd have too many friends, and I sure would hate to have his enemies.\" Tanya leant into him looking mischievous. \"Wanna know what I'd do?\"\n\n\"What?\"\n\n\"Well, you know the old saying, what's sauce for the goose is sauce for the gander? I'd shop around for some great big stud to bum-fuck him senseless. Film it of course, and put it up on the net.\"\n\n\"Wow. Remind me never to get on your bad side.\"\n\n\"Oh pfft! I'm a pussycat, Damon, you know that.\" She narrowed her eyes. \"Unless you fuck with me or my family.\"\n\n\"Are you serious?\" Watson stared at her. \"You're serious, aren't you?\"\n\n\"Of course I'm serious.\" She pointed, \"This is my serious face.\"\n\nWatson flopped back against the bedstead. \"Have the fuckin' fucker fucked?\"\n\n\"Well, obviously, he's cool with the idea of rape.\"\n\n\"And you reckon you could arrange that?\"\n\n\"I don't reckon. I know!\"\n\nWatson's face twitched as he fought off a smile. \"What about the 'biffo'.\"\n\n\"Trust me, biffo would be a blessing. Much worse for him if it looks like he's into it.\"\n\n\"Into it? Being ass-raped? How on earth would you make it look like he's into it?\"\n\n\"Jesus you're an innocent. Look... Whack a few eccies into him, top him up with some booze. He won't know if he's coming or going.\"\n\n\"A very apt term for this particular scenario. How do you suggest we go about it?\"\n\n\"Easy peasy. Hang around crooks as long as your average lawyer and you get to meet all kinds of people.\"\n\n\"Interesting people?\"\n\n\"Very interesting. Not to mention accommodating.\"\n\n\"What about the boy?\"\n\nTanya squinted at him. \"Really? Wow... maybe you're harder than I think.\"\n\n\"No! No. I mean can we keep the little fuckwit out of this? Maybe once his old man get's his comeuppance...\"\n\n\"You? Hard?\" Tanya scoffed, \"What was I thinking? Of course we'll leave him out of it.\" Tanya half-rolled and her open mouth descended onto Watson's semi-erect cock. She gargled something unintelligible around his meat. \n\nWatson put his hand on the top of her head. \"Didn't anyone ever tell you? Its rude to talk with your mouth full? I didn't understand a word you just said.\"\n\nTanya pushed upright, lips glistening. \"I said maybe it's time for bed. I'm gonna make a quick pit stop, then check on the girls to make sure they're behaving. What do you say? Spare some of that yummy baby gravy for your old Aunty Tan?\"\n\n\"If there's any left it's yours. So, what about Operation Gander? Think we can do it?\"\n\n\"Depends. You really wanna go ahead with it?\"\n\nWatson thought back to a clip he'd just watched. Two keening young females, one on top of the other, and the cop, cock sheathed in a filthy condom, reaming the upper girl's anus. He thought back to the look on Beck's face, a knife at her throat as the boy tried to rape her. \"Yep,\" he nodded.\n\n\"Sure?\"\n\n\"I'm sure.\"\n\n\"No problemo. A couple of quick calls in the morning and your old mate Chook's as good as ass-raped.\"\n\n* * *\n\nA tiny little Asian girl slung a leg over the hips of the tall, well-built male, on his back on the floor, wearing the modern facsimile of a tribal mask. Presenting each little conical breast one at a time, she sat grinning as he nipped and sucked at her nipples, her cheeks bunched, her eyes squeezed into little half-moons. Lifting her hips, she found the tip of the man's huge penis by feel, and lowered herself onto him, the head of his cock mushing her pussy lips open.\n\n\"Why you dirty old man.\" Tanya admonished, \"What are you watching?\"\n\n\"Just trying to get the taste of those rape videos out of my mouth.\"\n\n\"Well if anything can.\" Tanya sighed, crawling onto the bed, \"Fucking gorgeous, isn't she?\"\n\nThe little Asian girl arched her back, eyes closed, biting her lip, as two or three inches of the huge pole forced its way inside her. Watson shook his head in wonder. \"She's absolutely incredible!\"\n\n\"You don't know the half of it.\" Tanya declared. \"You can't feel her, or smell her or taste her for that matter.\" Rolling onto her side, she wrapped a hand round Watson's straining cock. \"I have! Lots of times. You know, the reason I'm being so pure and virtuous in this life? So I can come back with a cock in the next and fuck little girls like her.\"\n\n\"Pure?\"\n\n\"As driven snow.\"\n\n\"Virtuous?\"\n\n\"To a fault.\"\n\n\"And you want to come back as a guy?\"\n\n\"And you come back as a chick.\" Tanya snapped her fingers. \"We'll play swapsies.\"\n\n\"As long as I don't have to squeeze a watermelon out my cloaca.\"\n\n\"That's up to you.\"\n\n\"Or have periods.\"\n\n\"That might be pushing it.\"\n\n\"And I want to be paid as much as a guy for the same job.\"\n\n\"Look, if you're not going to take it seriously.\"\n\n\"Know what? I might just stick to being a guy. Better to be the fucker than the fuckee. On the subject of which, what were the ferals up to?\"\n\n\"Well, the lights were off but they were fucking.\"\n\n\"Did you speak harshly to them?\"\n\n\"Oh, don't be a such party pooper. They'll tire themselves out eventually.\"\n\nSomeone walked into the frame visible from neck to knee. Jacking his cock furiously, he launched two spurts of semen at the tiny Asian girl's back. She flinched, giggling, as the camera swung around to follow the cum as it ran down her spine into the cleft of her ass, then over her butthole onto the pistoning cock. \n\n\"I'm surprised there was any left.\" Watson observed.\n\n\"Some of those guys must have saved up for weeks. Semen's usually measured in mils, but by my calculations they must have cum gallons.\"\n\nThe camera took a closeup of the action; the male's pounding prick whipping the semen, already inside the girl from three previous donors into a froth. \"Cup or two of caster sugar.\" Tanya said dreamily. \"You could bake a fabulous meringue.\"\n\n\"Mmm... Bags first bite.\"\n\nThe camera moved again to take a lingering shot of the Asian girl's face. Head back, eyes closed, she was wincing and grimacing as the massive penis stretched her insides. \"You wanna watch til she cums,\" Tanya asked, \"or save it for later?\" She nodded in the direction of Watson's lap where the tip of his cock was already beading with pre-cum. She hadn't even touched him yet, but the sight of the young, brown-skinned goddess, bouncing up and down on the flesh and blood telephone pole, her cuntlips taut, her muscles straining, a look of complete abandon on her gorgeous young face, was starting to make him dribble. \n\nWatson followed Tanya's gaze. \"This stuff's like a drug.\" he gestured at the TV. \"Televisual ejaculomatic.\"\n\n\"Well, it would be really nice if you'd squirt some ejaculomatic into me. If that's okay?\"\n\nWatson paused the video. The girl had just lowered her head and her long black hair was hanging down like a veil on her fuck-partner's broad, sweaty chest. \"How am I ever going to get anything done when I get back to the boat?\"\n\n\"You'll just have to ration yourself.\" Tanya winked, slowly jacking him.\n\n\"With little Miss Horny Britches around? Fat chance.\"\n\nTanya treated Watson's cock a minute or two of proactive head while Watson raked his fingers through her hair. \"Hang on. This is meant to be your treat!\"\n\nShe looked up. \"This is my treat. What's up? You don't like it?\"\n\n\"Now that's just crazy talk. What about you? Could I interest you in a spot of cunning-lingus?\"\n\nTanya thought about it. \"You know what?\" she sighed, rolling onto her back, \"I'd rather just have a good old no frills fuck, if that's alright by you.\"\n\n\"A no frills fuck?\" Watson demanded. \"Tanya Bragg, do my old ears deceive me?\"\n\n\"Look! You can only blow so much of a girl's mind before she turns into a vegetable. Honestly, Sweetheart, let's just keep it simple.\"\n\n\"Okay,\" Watson shrugged, \"have it your way. Which way, in fact?\"\n\nDoggy was always nice, but after a while it made her leg ache. On top was an option, but that made her leg hurt as well. \"Know what I want? Good old missionary.\"\n\n\"Oldie but a goodie.\" Watson concurred.\n\n\"A billion guilt-ridden Catholics can't be wrong. What do you reckon, want to play mummies and daddies with me?\"\n\n\"It would be my absolute honour.\"\n\nTanya rolled onto her back and carefully arranged her broken leg then flopped the other to the side with gay abandon. Kneeling between her legs, Watson took a moment to feast his eyes on the sight of her slitted mound, all plumped-up and ready to go. Tanya ran a fingertip up and down the pink furrow, parting her lips, then held out her arms. \"Come to Momma!\"\n\nWatson lay carefully down on top of her, savouring the feel of her cushiony breasts mashed hard against his chest. \"Is it me,\" he asked, \"or does that sound the tiniest bit messed up?\"\n\n\"Well don't think I haven't thought of it.\" Tanya replied earnestly. \n\n\"Thought of what?\"\n\n\"Well, just imagine. If Maya had been a boy.\"\n\nWatson lowered his butt and the tip of his erection bumped into her wet, rubbery entrance. \"Why? Do you reckon you would?\"\n\n\"Fuck yeah!\" Tanya said earnestly, resisting penetration, making him work for it. \"The second he was ready.\"\n\nWatson broke into her with a jerk of his hips. \"Geez, Tan,\" he grunted, as she took him all the way to the hilt, \"you're incorrigible!\"\n\n\"What's so incorrigible about that?\"\n\n\"You'd blow the poor boy's mind.\"\n\n\"That's the whole idea!\" Tanya exclaimed. \"Tell me this. What teenage boy worth his salt wouldn't kill to get his boy-cock into some sexy old Aunt?\"\n\nThe old man thought about it. In his heart of hearts he had to concede, she was onto something.\n\n\"I have a theory,\" Tanya went on. \"Young boys should only fuck much older women, and young girls should only fuck much older men. Make the transition at thirty. The young ones would enjoy much more respect and pick up much more experience into the bargain. And when it came to making a baby, you would have healthy young sperm in a strong, mature woman. Think about it. Domestic violence would go down, peace and harmony would go up. And as for the men... well... I don't need to tell you what they'd get out of it.\"\n\n\"You know,\" Watson admitted, \"that actually makes a whole lot of sense. And you're right. Meeting Becky completely changed my life.\"\n\nTanya slapped his ass. \"Of course it makes sense. And meeting Becky changed her life as well. Can you imagine? If she were banged-up with someone her age? They couldn't do her justice.\"\n\n\"Maybe not.\" \n\n\"No. And if you're not convinced we'll ask Maya for a second opinion.\"\n\n\"So what are you doing with a flogged out old boiler,\" Watson grinned, \"when you should be doing a boy?\"\n\nTanya whacked him again. \"Pay attention! Young woman, older man.\"\n\n\"Gotcha!\"\n\nTanya clutched his ass, pulling him down. Focusing on the feeling of the appendage penetrating her core, she let out a long, satisfied 'Ahhhh..' \"Oh yeah! Now that's what I'm talking about.\"\n\nWatson lowered his face and they kissed, huffing and panting, as Watson took up a slow, deep rhythm. \n\n\"Holy fuck!\" Tanya gasped. \"That feels good!\" \n\n\"You're not kidding.\"\n\nTanya wrapped her legs gingerly around Watson's waist, the broken leg resting on his back. \"That okay, Damo? The stupid cast's not hurting you?\"\n\nThe feel of the rough fibreglass was actually a turn on in its own strange way, and Watson shook his head. \"Not even a little.\" he huffed and Tanya squeezed his butt.\n\n\"That's my baby. Now, be a good boy fuck Momma's brains out.\""
    ],
    "authorname": "RaptorDreaming",
    "tags": [
        "fisting",
        "group sex",
        "incest taboo",
        "jailbait",
        "older man younger women",
        "older women younger women",
        "orgy",
        "teen sex",
        "mature"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/aurora-way-of-the-goddess-pt-05"
}