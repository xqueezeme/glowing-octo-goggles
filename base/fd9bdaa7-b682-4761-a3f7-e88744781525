{
    "title": "Jason's Story Ch. 18",
    "pages": [
        "Here it is finally -- chapter 18. I know that I suck, but I hope that this chapter makes up for some of the waiting that I've put you through. If you're new to Jason's Story (JS); this chapter will make very little sense, and if you're a JS vet, thanks for sticking with me. JS will not go beyond 20 chapters, this I promise you. Thanks so much for reading, and please vote and comment (and if you're thinking of commenting on some racist bullshit I ask you; why did you even bother to open this story...you know what category it was under ;-) I hope you guys like it, and I love you! Kitty\n\n*****1 month later*****\n\nNigha and Brett had come to the agreement that she would move into her parent's second home while they sorted things out with the boys. He'd finally had a chance to see Bryce and Jadyn and smiled at their beauty as his heart ached. \n\nThey should've been his.\n\nThey wanted to give the boys time to digest and adjust to what was happening, and the four of them would work out a custody arrangement. Stephen still wouldn't say very much to her and Sean just looked like his world had ended. This was never what she'd envisioned for herself. Her family torn apart; no real glimpse at how things would play out, and things were just getting started.\n\nShe was to blame, but she wasn't alone. She hadn't seen Jason since she and Brett decided that things were through. She assumed that he'd heard and was just giving her some time before he tried to become a more permanent fixture in her life.\n\nAfter she and the girls had settled in; she got a call from Jack asking her to come to his going away party. She'd regained her strength and looked forward to returning to work in two weeks. Jack's party was a week away and she definitely intended to go. \n\n\"So, do you know the person that's going to be my new boss?\"\n\n\"No\"\n\n\"Well, what's his or her name?\"\n\n\"I didn't mean 'no' I don't know the person...I meant 'no' I don't know who it is. I don't know whether it's a man or a woman. I've been assured that it's someone very familiar with our day-to-day operations, but it is kind of strange.\"\n\n\"I'll say. Why the big mystery? Any ideas?\"\n\n\"I'm guessing it's a high-profile acquisition from the competition. Maybe they don't want word getting out too soon.\"\n\n\"So, I guess I'll get to meet him/her on my first day back then?\"\n\nShe heard him chuckle on the other end of the phone line before he responded.\n\n\"From what I hear, Lincoln will be bringing him/her to the party on Friday. I'm anxious to find out the answer to the mystery myself.\"\n\n\"Lincoln? The Lincoln Meyer? Wow, it must be a pretty big deal if the CFO is handling the introductions personally.\"\n\n\"I know right? I think he's just coming because he knows that you're going to be there. At any rate, the curiosity is killing me!\" \n\n\"Well, I can assure you that whomever my new boss is; he/she won't be nearly as good as the one that's vacating the position\" she said with a smile.\n\n\"Nigha; if you ever decide that you want or need to pick up and leave, I just want you to know that you'll always have a position wherever I am. If I have to, I'll create one.\"\n\nShe heard the enthusiasm and sincerity in his voice; she would definitely miss him.\n\n\"Jack; my life is here, but it's nice to know that I have an offer elsewhere should I need it.\"\n\nAfter a brief silence on the line, he continued.\n\n\"So I'll see you on Friday then?\"\n\n\"Wouldn't miss it for the world. Besides, I need to meet the person that gets me as their new right hand\" she said with a sarcastic laugh. \"And if Lincoln is coming just to see little ole me\" she said in her best southern drawl, \"I can't very well disappoint the man, now can I?\"\n\nJack burst out laughing on the other end of the line and she joined him. Jack was great to work with and no one else could take his place.\n\n\"See you Friday Nigha. Get some rest.\"\n\n\"Sure thing still-technically-my-boss\" she retorted with a mock salute. \"See you soon.\"\n\nAfter they hung up; Jack sighed and continued to pack up his office. He'd miss her most of all and he hoped; for her sake, that her family situation would eventually be alright.\n\n***************\n\n\"J; what are you up to?\" Bria asked him. \n\n\"What?\" he said before taking a huge bite of his PB&J.\n\n\"I don't know...the woman that your insanely in-love who just happens to be the mother of your children has ended her marriage. As a matter of fact; this news broke about a month ago, and you haven't visited the girls since the week before everything went down. So I'll ask again; what are you up to?\" \n\nHe looked at her with a raised eyebrow as he continued to chew another huge bite of the sandwich.\n\n\"Just what would you have me do B? Rush over there, all caveman-style and demand that she be with me? Come on girl; you know your sister better than that. And if you don't, I sure do.\"\n\nThe three of them; Kane, Jason, and Bria, had resorted to calling each other by the first initial of their first name instead of their actual first names.\n\n\"I gotta tell you, I'm very surprised that you haven't just charged over there.\"\n\n\"If I'm to convince her that we belong together; I have to use all of the tools in my arsenal, not just a club to beat it into her thick skull.\"\n\n\"So you do still want to be with her? Even after everything that's happened?\"\n\n\"I'd walk through fire; barefoot and naked, with my schlong dragging across the flames, just to be with her. She needs time and all I have is time\" he replied matter-of-factly while taking a sip from his glass of milk.\n\n\"Ewww, mental picture\" she squealed as she threw her hands over her eyes. \"Jeez, you've really got it bad for her don't you?\"\n\n\"She's my disease...what else can I say?\"\n\n\"That about sums it up...oohhh\" she squealed.\n\nJason rolled his eyes as his brother came up behind Bria, and nuzzled his stubbly face into the crook of her neck. They were ridiculous and although he was happy for both of them, he was not-so-secretly jealous.\n\nJason and Bria's relationship had grown closer since their time in the hospital; waiting on progress reports of their loved ones. She couldn't help but like him once she got to know him, and he felt the same about her. She knew that through everything, he was very much in love with her sister and he had been willing to step aside to allow her to do what she felt would make her happy.\n\nHe had been willing, but while Nigha carried those twins; Bria as well as Nigha knew that if those girls were his, all bets were off.\n\nThey were.\n\n***************\n\nNigha decided that doctors-be-damned; she'd wear her strappy silver heels to Jack's going away party. She'd opted to wear her hair straight; she wore no jewelry, and wore a deep mulberry strapless dress. It was fitted through the top and hip, and was cut on a bias so that it flowed while she walked.\n\nShe'd done her patented smoky-eye in varying shades of charcoal and gray, and wore a slightly shimmery gloss for a simple lip. Her hair was parted so that it hung over the scarred side of her face more so than the other and when she slipped on her heels; she was ready to go.\n\nShe felt a little nervous about seeing the majority of her co-workers for the first time in a few months, but found it surprising that she wasn't nervous about meeting her new boss. He or she would be the one person that didn't know about her personal situation and that presented a welcome change.\n\nAfter the valet had taken her car; she walked into the ballroom where the function was being held. Within thirty seconds, Ginger; Jack's secretary, found Nigha and squeezed her into a tight hug.\n\n\"Oh my goodness, I've missed you so much\" she said with excitement.\n\n\"Me...too...Ginge\" Nigha was able to breathe out with a little laugh.\n\n\"Oh, I'm so sorry Nigha. I didn't hurt you, did I?\" she asked, her voice laden with concern.\n\n\"No I'm fine, so have you met my new boss.\"\n\n\"I haven't met him personally, but I have to tell you that it must be a requirement for the head of this department to be good-looking.\"\n\n'Of course he's good looking, just what I need right now' Nigha thought to herself.\n\n\"Really now\" she stated with a smirk.\n\n\"I know that we didn't get to work together for that long, but I know that look. Ben and I are perfectly, blissfully happy, but I'm married; not dead. You'd have to be lacking a pulse to not notice this one. Come on\" she said as she grabbed Nigha's hand and started to make their way over to Jack and Lincoln.\n\nOn the way, Nigha grabbed a glass of champagne from one of the waiters.\n\nWhen Jack saw Nigha walking toward them, Nigha noticed the strange look on his face. His first instinct was to smile, but then she noticed him draw his brows together. As they approached; Lincoln immediately rushed over to Nigha leaving the new boss to chat with Jack.\n\n\"Nigha, it's been too terribly long\" Lincoln said as he kissed her hand.\n\n\"It has indeed\" she answered with her trademark smile. \"How are Lily and the girls?\"\n\n\"Lily has been worried sick about you since we heard about the accident. Jackson can fill you in on the weekly status update calls\" he replied with a laugh.\n\n\"Speaking of Jackson; you're finally stealing him away from us huh?\"\n\n\"Finally; couldn't have picked a better word. He had his heart set on you stepping up to the plate, but I completely understand your decision. How are those new babies, and how on earth do you look thinner than the last time I saw you\" he asked as he took her hand and led her into a playful spin.\n\n\"Genetics, twins, and staying off painkillers\" she joked. \"Maybe someday soon, I'll be back at my normal weight because none of my clothes fit.\"\n\n\"Normally after a woman has twins; her clothes aren't too small\" Ginger added with a mock sneer.\n\n\"Touch\u00e9\" Lincoln replied with a hearty laugh.\n\n\"Indeed\" Nigha said as she shot Ginger a playful look of disdain. \"So...tell me about the new boss.\"\n\n\"After you bowed out gracefully; there were only a few worthy candidates and one just stood out...\"\n\nAs Lincoln was describing her new boss; she looked at him while he was talking to Jack. He was very tall and obviously a bit rebellious due to the fact that his hair was definitely past 'corporate-deemed' appropriate length, and he wore it in a sleek ponytail. As they walked closer for the coming formal introduction; she was struck by something very familiar.\n\n'Cool Water .'\n\nIt only smelled like that on one man, but there was no way. She hadn't seen him in over a month, but there was no way he could've pulled this off. She was just imagining things.\n\n\"...from what I understand, he started his career here a few years back.\"\n\n'No, no, no...calm down...it can't be.'\n\nShe took a sip of her champagne in an attempt to calm her nerves, but her senses were flooded. She'd smelled Cool Water so many times, but it never smelled as fantastic on anyone but Jason.\n\nHer new boss would be the exception, and had to be anyone but.\n\n\"Nigha; this is Jason Branson\" she heard Lincoln say from somewhere far away. Everything went silent as she felt a pressure building in her head blocking out all sound; blocking out everything but the insanely loud beating of her heart.\n\nShe felt something crack in her hand and everyone around her started to scramble. Jason closed the space between them and took her hand. Everything was happening in slow motion and she looked in disbelief at the crimson flowing from her palm.\n\nJackson looked on at the train wreck happening before him; powerless to do anything about it or the aftermath. Ginger was looking around frantically for someone to help, and Lincoln just stood there with a shocked look on his face.\n\nShe looked into his eyes; confused, and he immediately went to work removing the glass from the champagne flute from her hand. The next thing she knew, she was floating across the floor toward the door of the ballroom, and shortly thereafter; she was in the ladies room and Jason was running water over her hand.\n\nHer senses returned with a vengeance as she felt the water stinging her hand. His hair that had been so neatly tucked into a ponytail moments before, was steadily working to free itself from the confines of the elastic band. She took a large intake of breath causing him to stop and look at her. The emotions started to flood her face and she looked a mix of shocked, confused, hurt, and pissed.\n\nHe cut the water off and took a good look at her hand. It wasn't nearly as bad as he first thought when he practically carried her out of the room, but it did need to be bandaged up. He went to work looking for a first-aid kit when she finally spoke.\n\n\"What are you doing?\" was all she could muster.\n\n\"Trying to find the first-aid kit\" he answered.\n\n\"No smartass; that's not what I meant and we both know it. Why didn't you tell me what you were planning?\"\n\nHe was still looking for the first-aid kit as he answered her as if she'd asked if it was raining outside.\n\n\"Nigha; you've had a lot going on for the past few weeks and it didn't really matter that I was busy accepting a new job. A job I've been angling for the past three months\" he said as he finally found the plastic blue box.\n\nHe motioned her toward the floral, tufted ottoman and helped her to sit down.\n\n\"It never occurred to you to let me know what you were up to?\"\n\n\"Now why would I go and do a thing like that?\" he said with a smile as he opened some anti-bacterial ointment and started to gently rub it onto her cuts. \"I already knew what you'd say, how you'd feel, or better yet; how you'd tell me you feel, and I didn't see the point.\"\n\nHe unwrapped the roll of gauze as he continued. \"Although I can say that you shocked the hell out of me back there. I expected a polite \"how do you do\" and maybe a pissed-off glare, but the whole squeezing of the champagne flute until it shattered threw us all for a loop\" he said as he wrapped her hand.\n\n\"I guess you could say that it was the glass or your face, and since you're my boss now; I didn't want to be carted off for assault with so many witnesses around.\"\n\nHe smiled a little at her last statement; remembering that she probably could've made him see stars if she had slugged him. As he was putting tape on her hand to secure the bandages, Ginger walked into the ladies room.\n\nAs she looked at the two of them; Nigha with her knees pressed together and her feet apart, and Jason on his knees tending to her wound, she realized that there was more to the two of them than a former working relationship. She quickly regained her composure as the door shut behind her.\n\n\"Oh my goodness, there you two are\" she said with a little too much excitement in her voice. \"We were trying to find you to make sure Nigha was alright.\"\n\nJason looked at Ginger and gave her that smile that made women melt. Nigha rolled her eyes at him because she knew what was coming next; a thick layer of charm.\n\n\"I'm sorry; instinct took over and I rushed her away so that I could get a better look at her hand to make sure it wasn't too serious. There were only a few minor cuts so I cleaned her up and now I'm just finishing up the bandaging.\"\n\n\"I'm so glad to hear that\" Ginger said as she placed her hand on her chest. \"Let me go see if I can track down Jack and Lincoln to let them know that everything's fine. Nigha; will you be joining us again tonight?\"\n\n\"Sure Ginge, I just need a few more minutes that's all\" she said with a genuine smile. Ginger was so sweet and caring.\n\n\"Okay, I'll let everyone know\" she said and then turned to look Jason in the eyes. \"You take care of her alright\" she said with a meaning that he understood immediately.\n\n\"I sure will. I need her to be tip-top to show me the ropes on Monday\" he said with a smile and a wink to let her know that he picked up on the double meaning. \n\nGinger walked out and shook her head. He was a smoothie and looking the way that he did made it that much easier for him to get away with it. She noticed the way that he looked at Nigha and she worried for her. Nigha was in deep trouble.\n\n\"Looks like you still got it\" she said as she shook her head and laughed.\n\n\"You make it sound like I was in danger of losing it\" he retorted as he placed the last piece of tape on her bandage.\n\nShe held up her hand and took a look at his handiwork.\n\n\"How did I not know that you were trained as a male nurse?\"\n\nHe let out a small laugh before answering her question.\n\n\"Well, I recently became a father to the most beautiful set of twin girls that you can possibly imagine and I took CPR so that I'd be prepared if anything ever happened and they needed me.\"\n\nShe looked at him; stunned. She had no idea that he'd done that and was so touched by the gesture.\n\n\"I asked if the instructor could teach me a few things about how to dress cuts and scrapes and he happily agreed. He said I have a natural talent\" he said with a proud smile.\n\n\"I'd have to agree with him. The ER couldn't have done a better job\" she smiled while admiring the bandage.\n\n\"So these twins of yours; does their mother know that you're so devoted?\"\n\n\"I think she has an idea\" he said with a wicked smirk.\n\n\"So, why isn't she here with you tonight?\"\n\n\"Well, we're not together and it's quite complicated right now, but eventually...\"\n\n\"Eventually what?\"\n\n\"She'll be in a place where she can listen to her heart and we'll be together.\"\n\n\"You say that with certainty.\"\n\n\"There are few things that I am certain of in this life, but that is surely one of them. I'm certain that I love her and just as certain that she loves me. It'll take a while, but it'll happen.\"\n\n\"Why aren't you together now?\" she asked as if she didn't know.\n\n\"My goodness; we met less than an hour ago and you're already digging into my private life. I already told you that its complicated! You're not going to be one of those nosey coworkers are you?\" \n\nShe couldn't help but laugh.\n\n\"I'm so sorry Mr. Branson. I got caught up in your story, but I promise that I won't delve into your personal life.\"\n\n\"Please; call me Jason and that's too bad really\" he said as he reached for her hand to help her up. When she stood, he pulled her close to him. \"She haunts my dreams you know.\"\n\nHis admission sent chills down her spine and she was speechless as he held her close. \"A woman as beautiful as you should never have to apologize. You do look beautiful tonight Nigha\" he whispered within inches of her ear. \n\n\"I've missed you\" he said as he put his hand on the small of her back and brushed his lips across her cheek.\n\n\"We better get back before the search party returns\" she cleared her throat and managed to croak out.\n\n\"Of course\" he said as he took a step away from her.\n\nAs they made their way toward the door, she stopped him.\n\n\"Your hair is a little mussed. You might want to fix it before we go back in.\"\n\n\"Yeah...the last thing we want is for people to start talking\" he said as he looked at one of the chin length strands that had broken free, causing her to smile.\n\n\"Thanks\" he said as he pulled his hair free and combed it with his fingers.\n\nIt was beautiful, falling well past his shoulders in natural waves. She didn't think it possible, but he looked better than the last time she'd seen him; the hair, the goatee, and the body, the epitome of a male model.\n\nHe pulled it back and looked to her for approval.\n\n\"It's perfect; now let's get out of here.\"\n\n**********\n\nAfter the five minutes of reassuring everyone that she was alright; she made her way through the throngs of people who'd been waiting to see her for months.\n\nAfter she'd been talking to Sam for a few minutes; she felt a light touch on her elbow. She was a little surprised to see that it was Jack.\n\n\"Can I have a minute?\"\n\n\"Sure; Sam, I'll catch up with you later\" she said as she started to walk away with Jack.",
        "She swiped a glass of champagne with her good hand and took a sip while Jack began.\n\n\"Nigha; I had no idea that it was him and by the time I'd found out, you were already here. Are you alright?\"\n\n\"As alright as I can be\" she replied honestly. \"It's not your fault Jack; I know that you would've told me if you'd known\" she reassured him and touched his arm with her bandaged hand.\n\n\"Is your hand alright?\"\n\n\"Yeah, it's fine\" she said as she balled up a fist. \"Sorry I scared you, but this is child's play compared to what I've been through\" she smiled as she held her fists up to her face, flicked her nose, and sneered while shrugging her shoulders.\n\n\"Touch\u00e9 tough girl\" he said with a laugh. \"I imagine it is.\"\n\n\"So is this the part where you tell me that you've changed your mind and won't leave me at the mercy of the Big Bad Branson?\"\n\n\"No, it's a little late for that\" he said as he smiled and placed his hand on her shoulder. \"This is the part where I remind you that if you ever need to pick up elsewhere; you just say the word\" he said while looking into her eyes, conveying the gravity of his statement. \n\n\"I'm a big girl Jack...\"\n\n\"Yeah, yeah, I got it; you'll be fine\" he said throwing up his hands while finishing her statement.\n\n\"Exactly\" she said as she reached up to give him a hug. \"Is it normal to anticipate missing your old boss so much?\"\n\n\"Of course it isn't; but then again, there's only one boss like me\" he smiled into her hair.\n\n\"Ain't that the truth\" she agreed as she let him go and took a step back.\n\nShe saw Jackson looking over her shoulder with a look that let her know that Jason was walking up to join them.\n\n\"Jackson.\"\n\n\"Jason. Well, I guess once you got promoted; there was no holding you back.\"\n\n\"I have a goal that I'm working toward and once I set my mind to it; there's no stopping me. Although, you could say that I missed home a bit too much to stay away for longer than absolutely necessary. My heart is here.\"\n\nJackson nodded in understanding. \"I wish you the best Jason, and you've definitely got the best in the business backing you up\" he said as he touched Nigha's shoulder.\n\n\"Don't I know it\" he agreed as he looked down at her.\n\nNigha mustered her best smile, attempting to not look uncomfortable before she downed the rest of her fifth glass of champagne. In the distance; she heard the first chords of one of her favorite songs. She felt a gentle hand on her elbow and realized that Jason had been looking at her for a few moments.\n\n\"May I have this dance\" he asked in a debonair tone. She nodded in agreement and they walked over to the dance floor as the lyrics started.\n\nBaby, baby...when we first met I never felt something so strong You were like my lover, and my best friend All wrapped into one with a ribbon on it\n\n\"This song makes me think of you\" he said as he held her hand close to his heart.\n\nIt made her think of him too. It was such a tragic love song that was almost tailor-made for them; she imagined it encompassed how he felt about her. She didn't respond, figuring that he already knew that she felt the same.\n\nAs they swayed to the music; he pulled her closer, his large hand possessively positioned at the small of her back. She didn't protest; relishing the feel of being close to him again, if only for a song.\n\nAnd I'll never give myself to another the way I gave it to you You don't even recognize the ways you hurt me, do you? It's gonna take a miracle to bring me back And you're the one to blame, and now I feel like...oh\n\nYou're the reason why I'm thinking I don't wanna smoke on these cigarettes no more I guess that's what I get for wishful thinking Shoulda never let you enter my door Next time you wanna go on and leave Should just let you go on and do it Cause now I'm using like I bleed\n\nIt's like I checked into rehab...baby you're my disease...\n\nIt felt so good to be close to him again. They hadn't been this close since the last night they'd made love, and she leaned in closer to him; not thinking that it was possible to get any closer. He welcomed it and pressed her into him.\n\n************ Ginger came up to stand next to Jackson as he was watching them dance. Unable to stop herself; she leaned closer so that those nearby wouldn't hear what she was going to say next.\n\n\"He's the one, isn't he?\"\n\nThe question snapped him out of staring as his mind raced. He understood the question, but hoped that he was wrong.\n\n\"The one?\"\n\nShe looked at him like he was thick-headed and explained her question.\n\n\"He's the one that broke up her marriage, isn't he?\"\n\nThe look on Jackson's face was all the answer she needed.\n\n\"It's okay Jack; you don't have to confirm it. Even the blind could see that something huge is going on between those two. Is she going to be alright?\"\n\n\"One can only hope so\" he said as they continued to watch Nigha and Jason dance.\n\n**********\n\nThe end of the song was approaching and Nigha knew that she had to put some distance between the two of them. As the last note played; she tried to push herself away from him, but he wasn't letting go. She heard another set of all-too-familiar notes start to come from the speaker. \n\nIrony is such a cruel bitch.\n\nLost without you, can't help myself How does it feel, to know that I love you baby I'm lost without you, can't help myself How does it feel, to know that I love you baby\n\n\"Jase; you've got to let me go.\"\n\n\"Nope; can't do that right now. I'm busy reliving the best night of my life\" he whispered into her ear as he pressed his cheek against the side of her forehead.\n\n\"I can't do this\" she whispered against his collar; not thinking that he could hear her.\n\n\"Of course you can. We'll be working together; we'll be parents together, and before this is all over, we will be together.\"\n\n\"You have to know that's not going to happen.\"\n\n\"I know that you've been trying to convince yourself that it's not going to happen, but I'm a patient man and I'm not trying to rush or pressure you.\"\n\n\"What would you call it then?\"\n\nShe pulled away just enough to look into his eyes and immediately regretted taking that course of action.\n\n\"Stating the facts\" he said; his eyes full of want, love, and intent, with no hint of patience.\n\n\"But Jason; you have to know....\"\n\n\"Shhhh\" he whispered before he put his cheek against the side of her forehead and started to sing quietly into her ear.\n\nBaby you're the perfect shape, baby you're the perfect weight Treat me like my birthday I want it this way, I want it that way, I want it Tell me you don't want me to stop, tell me it would break your heart That you love me and all my dirty, You wanna roll with me, you wanna hold me You wanna make fires and get Norwegian wood with me I just love to hear you say it, it makes a man feel good baby...\n\nHer mind flashed back to the first time he'd sung this song for her. It made her melt then just like it was doing now. Her resolve was weakening and she knew she had to find some way to get away from him.\n\nIf only it didn't feel so good to be held in his arms again.\n\n\"Do you ever think about the time this song became a pivotal part of our lives?\"\n\n\"Yes\" she answered easily.\n\n'FUCK' she thought; why did she admit it out loud so quickly.\n\n\"Do you still think about it; about us?\"\n\n\"How can I not?\"\n\n'WHAT THE FUCK...blame it on the alcohol I guess' she said in her mind.\n\nWhat was in her heart was flowing freely and she couldn't rein it in. She didn't realize how many glasses of champagne she'd knocked back until her brain-to-mouth filter shut down, and left her at his mercy.\n\n\"Do you think that we'll be together?\"\n\n\"We can't be.\"\n\nEven though she wanted to; even though she wanted him, her head and her heart were in agreement on that one.\n\nShe could feel his heart beating when he pulled away just enough to be able to look into her eyes. He wasn't angry or surprised.\n\n\"And why is that? Who decides what's right for us? You? You've made decisions for too many people for far too long. This is a decision that neither of us can make alone, and you're something; we're something that I'll never give up on. We'll work together, and things will be strictly business. I'll continue to spend time with my girls and get to know what it's like to be an active father who lives only minutes; not hours away. Eventually I'll make you understand that we'll be together; this I promise you.\"\n\nWithin seconds the song was over and he took a step back, bowed, and kissed her hand.\n\n\"Thank you for the dances; I'll see you on Monday\" and with that he put his hand in his pocket and walked away with a devilish smirk on his face and a swagger next to none while she stood on the dance floor; alone and stupefied.\n\nHe hadn't come all this way for nothing, and he would never let her go.\n\n********************\n\nThree months later\n\nHe'd kept his word and they worked just as well together as they had before he'd left. They would work, sometimes go to lunch together, and he would come over every night around 7:30 to spend an hour with the twins before they were put down.\n\nThere were times when she felt tortured; times when she wanted to throw him down on a desk, and then there were times when she would visit the boys and think of no one but Brett when they were in the same room. It was the feelings for Brett that reminded her why she and Jason could never be together, and vice-versa.\n\nIt would kill her when Brett would open the door and she'd see the sparkle in his eyes, and then the realization would set in, and the sparkle would fizzle out. The hurt was showing less and less, but she always wanted to scoop him into her arms and make it better.\n\nShe had resigned herself to the fact that she'd more than likely end up alone. Life was passing her by and it seemed that she'd have either too many or no one to share it with. The two men she loved most would always be a part of her life, but neither could be in her life as anything more than the father of her children, and there was no room for anyone else.\n\n**********\n\nHe'd made a vow to get her the right way this time; but it was proving to be just as difficult as he thought it would be. Being so close to her; day in and day out, was wearing heavily on his resolve. He needed to speed things up before he lost his shit.\n\n********************\n\n\"Oh my god...oh my god...oh my god...I can't believe it Nigh\" Bria exclaimed almost on the brink of hyperventilation.\n\n\"What in the world girl; calm down\" she laughed as she tried to calm Bria down.\n\n\"Wait\" she said before quieting down and looking around. \"Are the boys here?\"\n\n\"No, they're having a boy's night in with their dad.\"\n\n\"Are the girls asleep; I didn't wake them did I?\"\n\n\"No\" she answered laughing again. She had an idea what had Bria so excited, but seeing her little sister like this was just adorable. \"They're having a Daddy's night with their old man, so it's just me and you\" she said wide eyed. \"Now, let's take it slowly; what-is-going-on\" she said as she motioned her hands to make Bria spill it.\n\n\"Okay, okay, deep breaths Bri...deep breaths. You know that today is the two-year anniversary of our first date right?\"\n\n\"Aww sweetheart; I didn't think you'd remember\" she threw her hands up over her mouth.\n\n\"Oh shut up!\" Bria said as she shoved a laughing Nigha onto the couch.\n\n\"I'm sorry honey; please continue\" she said, a smirk still on her face.\n\n\"Okay, Kane told me that he loved me and...\"\n\nNigha made a big show out of yawning and Bria shot her another look.\n\n\"He wants to spend the rest of his life with me; he wants me to be the mother of our children, and he asked me to marry him.\"\n\n\"Oh my god; that's wonderful\" Nigha said as she jumped up and down, but stopped abruptly when she saw the look on Bria's face.\n\n\"Bri; where's the ring?\"\n\n\"I didn't say yes\" she said in a quiet voice.\n\n\"Are you fucking kidding me? Why the hell not? That man is crazy about you and you're crazy about him. What's really going on?\"\n\n\"I used to look at your life and think I'd never have that. The gorgeous husband; the perfect kids, an awesome life. You were my inspiration; you had it all, and then...\"\n\n\"I fucked it up, huh?\"\n\n\"Yeah...well; that's not what I meant. If you knew that Brett wasn't the one; would you have married him anyway?\"\n\n\"Brett was the one and there's not a day that goes by that I'm not thankful for our time together. He was my first, my everything; he just wasn't my last. If I could go back to when we were falling in love; to the day he asked me to marry him, after all of the things that I've put him through, I would still say yes. I would say yes because I loved him then, and I love him still. No one can change that and that's why I'm alone.\"\n\n\"And Jason?\"\n\n\"Ahh Jason\" she sighed with a smile. \"Before Jason, I thought there was only one great love in one's life and he made me realize that there can be more...although there really shouldn't be. I love him; not in the same way that I love Brett, but I'm cursed to be in love with two wonderful men and deserving neither. Honey, you can't base your happiness on 'what ifs' and 'maybes'. You can't base one of your most important decisions in life on how your big sis fucked up. This man adores you and you him, go say yes and put him out of his misery\" she said as she reached out and hugged Bria as they both cried.\n\n\"Nigh\" she said as she wiped her eyes \"what are you going to do?\"\n\n\"The million dollar question. I'm going to encourage Brett and Jason to move on with their lives; without me in any other capacity than the mother of their children.\"\n\n\"So that's it huh? You're ready to just give it all up and throw in the towel on love and a life with either of them? I think one of them will throw a kink into your plan; if not both.\"\n\n\"What else can I do?\"\n\n\"Keep an open mind and an open heart. I know that you don't feel worthy and yes; you did fuck up, royally, but in the end you did the best that you could.\"\n\n\"So it sounds like you have an inside track huh?\"\n\n\"Not really, but my money's on my brother-in-law; whichever one you think I mean\" she said with a chuckle before the pillow hit her in the face.\n\n\"He haunts me\" she said more to herself than to Bria.\n\n\"What? Who haunts you?\"\n\n\"Jason. Almost every night; I dream about him...about us. At first it was disturbing, but it's been going on for months, so it's pretty much a given now.\"\n\n\"Whoa; do you ever dream about Brett?\"\n\n\"Pretty much on the nights that I'm not haunted by Jason; most of the time, I have guilty dreams about Brett. I keep seeing the pain and realization in his eyes when I told him about the girls.\"\n\n\"And your dreams about Jason?\"\n\n\"There are times when I have similar dreams about him, but most nights; our time together is very...animated.\"\n\n\"So -- animated like you guys are always fighting, or animated like you two are...\" she motioned the rest of her statement with her hands.\n\n\"Let's just say that my dreams are about as close as I've been to the real thing, and are probably as close as I'll get for a long time to come.\"\n\n\"Don't you think that maybe your 'torturous' dreams are your mind's way of telling you something? Like maybe the fact that you want to be with the man rocked your world so hard that it cost you your marriage?\" \n\n\"My body has always wanted to be with him, but my mind and my heart won't let me. Too much has been done.\"\n\n\"Umm hmm. So, is it as good in your dreams as it is in real life?\" she asked before she burst into laughter at Nigha's expression.\n\n\"Not funny\" Nigha said as she pushed her over.\n\n\"No, not funny...hilarious\" she said holding up her hands to shield her from the next pillow.\n\n********************\n\nShe was very busy at work when there was a light tap on her office door.\n\n\"Yes\" she called out.\n\nHe peeked his head around the corner as that lustrous mane fell to the side. She smiled at him as he walked in.\n\n\"What are your plans for lunch today?\"\n\n\"I'd actually planned to order in because this new account is taking up more of my time than I'd like. Why?\" \"Oh, no reason really. My brother just told me that the woman that he's madly in love with has agreed to be his wife and I was hoping to celebrate with my favorite coworker for lunch or...dinner maybe?\"\n\nShe gave him a huge smile. \"Good for him; I'm so happy that he's found his happiness. Who's the lucky girl?\"\n\n\"Well, he met her out of the strangest of circumstances, but I can honestly say that I love her like she was my own. And; I win the bet.\"\n\n\"The bet?\"\n\nHe ran his hands over his mustache and down into his goatee before grabbing his chin. 'Ever since we were kids; we always had this bet. He thought that when we grew up; even though he's got me by two years, that I'd beat him to the altar. I always said that he was more of a romantic than he knew; he just needed to find the woman who'd make all others pale in comparison.\"\n\n\"Your brother has found his; do you think you'll ever find yours?\"\n\n\"If finding mine would've won him the bet; then he won almost 3 years ago when I sat downstairs in a training class and she stormed into my life...\"\n\nShe dropped her pen on the glass top of her desk causing quite a commotion. He just turned to her and smiled.\n\n\"What were you expecting? Me to say that 'oh, maybe someday I'll find the girl for me'. There is NO one else for me and I'm not looking for someone to occupy my time. But back to my earlier question; would you like to have lunch or dinner?\"\n\nShe had to snap herself out of her temporary stupor before she could answer.\n\n\"Jase I...\"\n\n\"Tell you what; why don't you and the girls come over tonight and I'll cook you dinner?\"\n\n\"Hmm...you'll get to spend time with the girls; I can work through lunch and get home at a decent hour, sounds like a win-win to me\" she said with a smile.\n\n\"I'll go get the girls. I'm leaving around 4 today\" 'as of right now' he thought, \"so I can pick them up from your mom's and you can come straight to my place when you're done here\" he added with an I've-got-this-all-figured-out smile.\n\n\"Great\" she heard herself say with a little too much enthusiasm. \"Are you working this weekend?\"\n\n\"Hell no\" he said with a laugh. \"I plan on spending every waking moment with my girls. Can they spend the night tonight? Come on, you know you want to sleep through the night\" he added in a sing-song, pleading tone.\n\nShe smiled and shook her head before answering.\n\n\"Sure. That'd be just fine.\"\n\n\"Awesome\" he said as he pumped and tucked his fist in that classic 'yes' move.\n\n\"You're a nut! Get out of here so I can get some work done\" she laughed out and threw a stress ball at him.\n\nHe caught it midair and ran out of her office with it.\n\nWhy did he have to be so gorgeous and cute? It's completely unfair.\n\n**********\n\nJason practically skipped back to his office, so excited that the situation unfolded the way it did. He had no idea that it would happen, but was so glad that it had. She'd agreed to let him to cook for her and she could definitely use some good meals. She was still so thin and her clothes practically hung off her body. He longed for the return of her curves, and for those curves to return to him.\n\nHe desperately wanted her back in his life; back as his woman, not just the mother of his children, and would officially make her his wife. He just hoped that he could make it happen sooner rather than later. But tonight he wouldn't push it, tonight would just be about taking care of her.\n\n**********\n\nNigha wrapped up her last meeting at 5:00 on the dot and made sure that it didn't carry over. Ending on time meant she'd be leaving on time, and she was really looking forward to cuddling her babies and the celebration dinner with Jason.\n\nIt scared her a little at just how much she was looking forward to the latter.",
        "********* The drive only took 20 minutes; the traffic gods had been kind, and she took advantage of the second parking spot for his apartment. The elevator ride seemed to take an eternity, and she was surprised by how anxious she was to see him.\n\n\"Get a grip girl -- you just saw the man two hours ago\" she chastised herself aloud.\n\nThe elevator dinged, and she got out and walked down the hall. She realized just how tiring this past week had been and although she really was looking forward to dinner; she also wanted to just go home and crawl into bed.\n\n\"Thank God it's Friday, and a deal's a deal.\"\n\nShe tapped on the door and was surprised how immediately it flew open and revealed Jason wearing an 'I Love Caramel' t-shirt, knee-length shorts, no shoes, and an adorable apron around his waist. He had his hair pulled back into something resembling a messy bun, and she couldn't help but smile when she saw him. The scent of the dinner he was working on, was definitely working on her and she heard her stomach growl.\n\n\"Hey, come on in. Everything's almost ready and the girls are watching TV.\"\n\nNigha was scared of how natural it felt when she walked in, and he took her purse and jacket and hung them up next to the door. \n\nShe saw Bryce rolling around giggling. Jadyn saw her come in; smiled, and started to scoot her way over to the gate. Nigha hurried over and picked up Jadyn and snuggled under her neck while the baby kicked and giggled. At 9 months old, both their heads were covered in big, black curls and their eyes were as blue as the day they were born. She'd heard from so many people that their eyes would change after the first few months, but she knew better. They were born with their father's eyes, and she knew that it was a permanent fixture. \n\nThose babies; the result of something that had cost her everything in her perfect life, wouldn't have been traded for the world by either of their parents. Nigha carefully climbed over the gate, and made her way over to Bryce who was still just having the time of her life kicking and giggling. She got on her hands and knees and carefully sat Jadyn up beside her, then leaned over in front of Bryce's face. Bryce smiled and squealed, and Nigha nuzzled her under her neck and blew a raspberry in the little fat rolls. Bryce laughed, kicked, and screamed; all while slapping her Mommie all over her face. Nigha raised her head up and started looking back and forth between the two of them and pushed Jadyn over and blew a raspberry into her neck, getting the same reaction.\n\nJason stood in the kitchen captivated by the sight before him. Nigha was so comfortable there, rolling around on the floor; still in her skirt and blouse from work, playing around with their growing babies. This was how it should be; he just had to bide his time and make her see that. He knew she felt it too, but he had to give her the time she needed. \n\nHe wouldn't lose her.\n\n\"Hey girlies, you know what? Your Auntie Bria and your Uncle Kane are getting married\" she sang to the babies who were oblivious to her statements. \"Aren't you excited? Yes you are...yes you are.\"\n\nBy now she was laying on the floor with the twins while Jason was putting the finishing touches on dinner. He noticed how Nigha kept tugging at her skirt and he had an idea. He walked to his room while his sauce cooled down slightly.\n\n\"Nigha? I brought you these so you can be just a little more comfortable\" he said extending the t-shirt and shorts he grabbed from his room.\n\n\"Oh, thank you\" she said as she scooted over to him on her knees. She stood and grabbed the clothes.\n\n\"Why don't you go ahead and get changed and I'll put the girls in their high-chairs.\"\n\n\"Okay, sure\" she agreed with a timid smile. \"By the way; I never asked what we're having?\"\n\n\"I made you Lobster Alfredo over penne and chocolate mousse for dessert\" he stated plainly, waiting for her reaction.\n\n'Girl, why in the world are you not with this man?' her subconscious scolded.\n\n\"Oh my goodness, that sounds soooooohhh good\" she said as she rolled her eyes and her stomach growled; loudly enough for him to hear and look down at it.\n\n\"Did you eat lunch today?\" His expression was laced with concern; although still and always beautiful, she was way too thin.\n\n\"No, I got busy and...\"\n\n\"Why didn't your receptionist order something for you?\" He asked placing his hand on his hip.\n\n\"Because I never asked her to\" she asked more than stated while wincing like a child who'd been caught with their hands in the cookie jar.\n\n\"Hurry up and go get yourself changed so we can eat\" he commanded while pointing to his room. \"If you don't start taking better care of the mother of my children; I'm going to start dragging you to all of your meals personally!\"\n\n\"Oh, alright DAD! You gonna keep trying to fatten me up with your delicious Italian cooking?\"\n\n\"Hey! I eat it all the time and look at me\" he said gesturing to his body. \"Mom hooked it up on the daily, and Kane and I aren't fat?\"\n\n\"You're Germalian...part soldier, part stallion. I'm Blazilian; part curves and part curves\" she said holding out her hands one at a time, as if something were in them.\n\n\"Germalian?\" he asked with a cocked eyebrow.\n\n\"German and Italian\" she laughed. She called him that all the time to other people, but didn't realize until then that she'd never said it to his face.\n\nHe burst out laughing at her statement before continuing.\n\n\"So I guess Blazilian is...Black and...Brazilian?\"\n\n\"You betcha\" she said with a wink and a smile.\n\n\"Well right now instead of being part curves and part curves, you're part beautiful and mostly bones. Do I need to cook for you every day?\"\n\n\"Let's start with croissants, cappuccinos, and chocolate mousse for breakfast tomorrow and see how it goes\" she said folding her arms defensively with a cocky smirk.\n\n\"Done. Now go get changed\" he said, again pointing down the hall.\n\n\"Alright, alright; I'm going\" she said as she shook her head and headed for his room.\n\n'I'd make you anything, anytime, if you'd just stay with me' he thought to himself before he turned to get the girls. He placed them in their high-chairs and gave them each some veggie stick snacks before returning to the kitchen to plate their meals.\n\nNigha quickly changed and when she was approaching the table, Jason was placing her steaming plate down. The aroma was intoxicating and she wanted to dive in as soon as she sat down. She waited patiently as he brought out his own plate and brought out a glass of water and a glass of wine for each of them. She bowed her head to say grace.\n\n\"Thank you Lord for the blessings that you've bestowed upon me, and for my present company at this meal. Amen.\"\n\nShe looked up at him; clearly touched by his prayer, before saying \"Amen.\"\n\nHe looked into her eyes across the table and tilted his wine glass toward her.\n\n\"Please eat\" he said to her sweetly.\n\n\"Oh\" she said before gathering some pasta onto her fork. After getting a chunk of the lobster onto it; she slowly took a bite, and moaned from the taste. The noise she made took him back to some other memories, and he squirmed in his seat slightly.\n\n\"Mmmmnnnhhh, oh my God Jase this is sooohh good\" she moaned out while getting ready to take another bite.\n\n\"I'm so glad you like it\" he said watching her slowly wrap her lips around the next large bite of food. Every time she'd take a bite, she'd close her eyes and let out another 'yummy noise'. He hadn't realized how long he'd just been sitting there; sipping his wine and watching her, until she called him on it.\n\n\"Why aren't you eating?\" she asked not caring that she had a mouth full of food.\n\n\"Hmm? Oh yeah\" he said as he used his fork, preparing his first bite. \n\nShe was in heaven. Italian food was her favorite, and a gorgeous man that could cook it for her? Forget about it. The only problem with that thought was that he wasn't her man, just the father of her girls. The gorgeous, funny, talented in all areas, father of her girls; that she just so happened to be insanely attracted to. \n\n\"You know, you just might have to start cooking all of my meals to make sure I'm eating properly\" she said matter-of-factly while she finished chewing.\n\n\"Done\" he said quickly as she looked into his eyes looking for a playful 'just kidding' look. \n\nThere wasn't one...Game, Set, Match -- Jason.\n\n**********\n\nAfter dinner, thinking that she couldn't eat another bite, she watched him as he methodically cleared the table and put the dishes in the sink.\n\n\"Jason; I'm so full, I don't know if I can handle desser....\"\n\nBefore she could finish her statement; she saw the martini glasses filled with chocolate mousse that he was bringing over. He got her; chocolate mousse was one of her all-time favorites.\n\nAs he placed the glass in front of her he asked, \"You were saying?\"\n\n\"That I can't believe you bought chocolate mousse for dessert\" she said holding her hands in front of her like a schoolgirl. \n\n\"Well don't believe I bought it\" he said seriously.\n\n\"What?\"\n\n\"Don't believe that I bought it because I didn't; I made it from scratch.\"\n\nAfter he told her; she placed a small amount of mousse on her tongue, closed her eyes, and savored its flavor as it melted away. He watched her face and smiled like the spider that caught the fly.\n\n'Who would've thought that cooking would be a weapon in my arsenal' he thought to himself. 'I'll cook for you forever if you just come back to me.'\n\nShe opened her eyes and looked straight into his; staring into her intently. She was mesmerized momentarily, and then went back to scoop up another spoonful. \n\nHe put just a little on the tip of his spoon and fed a little to Bryce, and she gobbled it up.\n\n\"Jason! How long have you been feeding them chocolate mousse?\"\n\n\"Only a couple of times -- look at how much they love it; just like someone else I know\" he said as he gave a little to Jadyn as she laughed and kicked her fat little legs.\n\n\"You're spoiling them already\" she said as she reached out and grabbed Bryce's chubby hand and kissed it.\n\n\"And I'll continue to spoil them\" he said as he smiled and opened his mouth so that Bryce would open hers, and fed her some more mousse. \"They're my little miracle princesses and I'll spoil them forever\" he said in a higher pitch as he touched his nose to little Jadyn's. \n\n\"Of course you will; just not too much okay?\"\n\n\"Of course\" he agreed before placing a spoonful of the mousse into his mouth.\n\nShe looked at him unsure of what he was agreeing too and realized that after she ate that last spoonful of mousse; she really couldn't care less at that point. She polished off her third glass of wine and was getting ready to clear the table when he stood up.\n\n\"Hey; why don't you start getting the girls cleaned up and I'll finish putting everything into the dishwasher?\"\n\n\"Sure\" she said, but when she went to stand up; she realized that this was the only thing that she'd eaten, and felt a little woozy. She was relieved that he didn't notice, and used the few extra seconds to steady herself.\n\n'Alright Nigha -- no quick movements' she thought to herself.\n\nAfter she was certain that she was alright, and had just stood up too fast; she reached over and grabbed a baby wipe, and started to wipe Bryce's little hands and face. When she'd finished with her; she moved on to Jadyn, and cleaned her up too. Just then Jason picked up Bryce; Nigha grabbed Jadyn, and they took them back to the nursery.\n\nAfter changing their diapers and kissing their little cheeks; Nigha and Jason put the girls down for the night. He looked at her and smiled and she returned it. Each knew what the other was thinking.\n\nWhen they walked out into the living room; he just couldn't bear to have her leave just yet, so he thought quickly.\n\n\"Hey; I know you're probably ready to go, but could you stay and watch a movie with me or something?\"\n\nSecretly, she was going to stall because the wine affected her more than it should have, and she wasn't prepared to drive home.\n\n\"Do you have anything new?\"\n\n\"Not really, but I've got just about everything\" he said as he started to go over to the shelves next to his plasma screen. \"What are you in the mood for?\"\n\n\"Funny. I'm in the mood for stupid, crazy, almost-wet-your-pants funny. What you got?\"\n\n\"One of my all-time faves is Stepbrothers. Will Ferrell by himself is great, but there's just something about his chemistry with John C. Reilly that takes their films to another level.\"\n\n\"I haven't seen that one. After Taladega Nights; I was a little unsure\" she said with a thoughtful look on her face. \"But you know; all of my favorite scenes had both of them in it. Why not? Let's watch it\" she said with a smile.\n\nAs he popped the disc in; Nigha made her way over to the chaise lounge at the end of his sofa, and made herself comfortable. He walked over to the spot next to her and stopped.\n\n\"Mind if I sit next to you?\"\n\n\"Not at all\" she said as she patted the seat.\n\nHe moved the ottoman next to the chaise so he could lean back too. He made sure not to get too close; he didn't want to scare her off or make her uncomfortable. \n\n\"Do you want some popcorn or anything?\"\n\n\"Oh my gosh; I'm so stuffed\" she said placing her hand on her tummy for emphasis. \"Next time though\" she said matter-of-factly.\n\nHe liked that it had come out so naturally, and that he could tell that she wasn't berating herself for going with her feelings. \n\nThey'd been watching the movie for about a half-hour, and he'd relished in hearing her hearty laughter before she caught herself making so much noise. He was so glad that she stayed, and that they could just sit and enjoy something so simple so comfortably. He could tell that she was tired, but he wouldn't mention it. He so wanted her to just stay; even if they fell asleep right there on that sofa.\n\nAfter the infamous 'drum scene'; he noticed that her laughs were starting to get much quieter. About an hour into the movie; he felt her hair tickle his shoulder, as she started to slump over. He turned the sound down a little and just sat and looked at her face.\n\nHe looked at her smooth skin; a lock of wavy curls obscuring her scar, and her long, thick eyelashes fanned out over her skin. He reached out and softly ran his finger over her cheek, pushed the hair out of her face, and gently tucked it behind her ear.\n\nHe looked at her scar and realized that he barely even noticed it anymore. It was almost as if his mind had blocked out the imperfection that marred her face. It didn't affect her beauty; if anything, it added another dimension because she didn't try to hide it. Less beautiful would've fallen apart, but the most beautiful woman he'd ever seen, didn't even seem to give it a second thought.\n\nIt made him love her more; it made her more beautiful.\n\nHe leaned over and placed a soft kiss on her forehead and decided to leave well enough alone and watched the rest of the movie. After it was finished; he tried to wake her, but she wasn't close to coherent. He decided to carry her to the guest bedroom.\n\nHe placed one arm under her knees, and wedged the other behind her back and lifted her up. He was almost a little startled when her eyes opened and she looked directly into his.\n\n\"You can't keep waiting for me\" she said as she wrapped one arm around his neck and ran the other down his cheek.\n\n\"What?\" \n\n\"You're wonderful and I love you too much to watch you waste your life waiting for me.\"\n\nAs he looked into her eyes; he saw that she was looking through him. He was at a loss for words when she wrapped her other arm around his neck and snuggled her face into it.\n\n\"You can't keep doing this to...\"she mumbled and faded back to sleep.\n\n\"Fuck that was creepy\" he whispered to himself as he realized that she'd been asleep.\n\nHe started to walk down the hall to the guest room when he decided that wasn't where she'd be sleeping. He couldn't believe that she'd passed out like that and was now asleep in his arms; very asleep in his arms. \n\nHe turned around and started walking toward the master. He walked in and carefully set her down on the bed. His shorts that he'd let her borrow were all twisted around her waist, and he slowly reached under the t-shirt until he found the waistband, and gently slid them off.\n\nWhen she smiled a little; he kissed her on the cheek and covered her up. As he walked over to his side of the bed he heard her murmuring and then she spoke again.\n\n\"You know I love you\" she said as she rolled onto her side and tucked the comforter under her chin. \"I know you know that so why do you keep asking...\" she mumbled and ended with a yawn.\n\n'Is she dreaming about me or him' he questioned in his head as he stripped down to his boxer briefs. He carefully slid under the covers and looked into her face as she slept. It wasn't at all restful as he looked at her furrowed brow, and although he wanted to keep his distance; he had to move closer and wrap his arms around her.\n\n\"You knew I was off-limits when you met me...\" she mumbled against him, answering his previous mental question. It gave him no satisfaction however; she was being tortured, even in sleep.\n\n\"Shhhh, honey it's just a dream\" he whispered into her ear as he felt her fidgeting. He just wanted to make it better for her, but was at a loss of what to do. \"Nigha, I'll always love you and I won't ever give up on us, but right now I want you to get some sleep.\"\n\nAfter he whispered to her; he felt her body relax, and she wrapped her free arm around him.\n\n\"I love you too Jason\" she answered before her breathing steadied again.\n\nAfter she stopped talking in her sleep; he refused to go to sleep until he was sure that she was sleeping soundly. She turned over and scooted close to him until she came in contact with his body. He wrapped his arm around her to hold her there and after a few minutes; the rhythm of her breathing put him to sleep.\n\n*********\n\nHe woke up moaning and realized that he was as hard as a rock. She'd been grinding against him while he slept, and little Jason woke up first. She was so close and she was on fire. Her skin was so hot and he wanted to fuck the shit out of her.\n\nHe was almost unsure of whether or not this was a dream, but before he could get his bearings; she rolled over and grabbed his cock.\n\n\"Mmmnnh, so hard already\" she said as she ran her lips along his jawline.\n\n\"Oh my god\" was all he could manage to choke out. His senses were on overload and his mind was screaming at him that there was something wrong. His body was trying it's damnedest to ignore his mind, but he was fighting against what he wanted more than anything.\n\n\"Nigha; what are you doing to me?\" he asked, straining to maintain some form of control. Fighting to not slide inside of her the way she obviously wanted him to.\n\n\"So now you're shy? This one is different\" she said as she kissed him.\n\nHis head was light as she kissed him, and he couldn't help but wrap his hands in her hair as he pulled her deeper into the kiss. The nagging in his head continued.\n\n\"What...what's different\" he asked trying to remove the hand stroking his cock, and to ignore her lips kissing his jawbone. \n\n\"Usually, you're all over me by now\" she said as she kissed him again and rolled him onto his back. He'd resumed returning her fiery kisses as she straddled him and rubbed her mound into his cock and moaned at the contact.\n\n\"What?\" was all he could muster. None of this made sense, but his body didn't care. He grabbed her waist and pushed up against her pussy; still covered by her underwear. He could feel her heat as he slowly ground into her.\n\n\"Why are you fighting me? This has never happened before\" she said between moans.\n\n\"Nigha, baby talk to me; none of this makes sense.\"\n\n\"So every night when you haunt me in my dreams isn't enough. Now you have to make me feel on fire AND like a lunatic? Just shut up and kiss me\" she said as she leaned over and began to suck on his bottom lip while she ran her fingers along his sides.",
        "\"Baby; you're not dreaming, but if you don't stop real quick, I'm not gonna be able to\" he said in a pleading tone. \"Please wake up\" he pleaded while he matched her moves on his cock.\n\n\"Why don't you just go on and fuck me? Dreams don't matter in real life and I want you so bad\" she said as she kissed his neck and reached into his boxer briefs for her prize.\n\n\"Oh Jesus please help me\" he prayed aloud. Realizing that she was somehow in a waking dream; he was scrambling to try to wake her without freaking her out. \"Nigh, this is not a dream, you're awake right now and you're torturing me. I want you so much and if you don't stop what you're doing...oh God...\"\n\nShe had inched down and as he was pleading with her; she slowly closed her mouth around the head of his cock. He saw stars and his common sense had left him. He was powerless to stop her.\n\n\"Nigha...please...\" he tried to talk to her, but he wasn't making any sense. He had to stop her before she undid everything that they'd been working to do. He even started to wonder if he was dreaming, but quickly realized that this was bordering on a nightmare. One night might undo months of work; was it worth it?\n\nOf course it wasn't worth it, he chastised himself. She'd been bobbing on his cock for about five minutes and he was ready to explode and then implode. Her hot, wet mouth was doing things to him that hadn't been done in almost a year. The effect was only intensified by the fact that she obviously wanted him as much as he wanted her; she kept her eyes on his the entire time.\n\nHe knew she thought it was a dream and the look in her eyes confirmed it. She looked like an animal that had just caught its prey; eyes vacant except for the task of devouring, and her eyes were filled with one emotion; lust. She wasn't thinking about anything else; not how wrong she tried to convince herself this thing between them was, and definitely not the idea that this was very real. She was caught up in the 'dream' and nothing he said would get through to her.\n\nHe wondered how long it had been this way for her. How long she'd allowed herself to be tormented, and he knew that he had to kick his plan into high gear. But as for right now; she was inches away from making him cum.\n\nHis body was acting on instinct, and he was pumping his hips into her mouth. He tried once more to get through to her before it was too late.\n\n\"Please...stop...don't...aaaahhhhh\" he cried out as she swallowed his cock deep within her throat. He was speechless as she hummed while she swallowed; her throat muscles contracting and releasing his cock.\n\nHe came with a low growl; cumming harder than he had in a very long time. It was too late; he'd lost, they'd both lost. Defeat never looked so beautiful or felt so amazing.\n\nHe couldn't fight it anymore, and sat up and pulled her up so that they were face to face. She smiled at him seductively as she licked her lips, waiting for what was to come. He leaned in close and ran his lips across hers; feeling a small spark as he did. He then took her bottom lip into his mouth and he could feel her breath hitch when he ran his finger over her inner thigh.\n\nHis clearer head made another attempt to prevail and he pulled her closer to whisper in her ear.\n\n\"I need you to wake up\" he pleaded as he rubbed his forehead across hers. \"I know this has gone pretty far, but I so want a future with you. Please realize that this isn't a dream, please...stop...\"\n\nHe was interrupted by her hand running up and down his cock. He was hard and ready again, and she pushed herself up onto her knees and crawled up so that she straddled his lap.\n\n\"I've been living these dreams for months\" she hissed as she kissed his jaw and then his temple. \"You never ask me to stop and you never enjoy it this much\" she said as she squeezed his cock slightly; causing him to moan into her ear. She let go of his cock and started grinding her wet pussy onto it, making him wonder when she'd gotten rid of her panties.\n\nShe moaned in his ear before she leaned back and took off her shirt, then followed it up by unsnapping her bra, and tossing them both onto the floor. She looked him directly in the eyes while she started swirling and dipping her pussy onto his cock as she wrapped her arms around his neck. She softly took his bottom lip into her mouth and lightly licked it.\n\n\"I want you to fuck me\" she said as she looked into his eyes and pressed her body into his. \"I know you want to...\" she managed to get out before he'd captured her mouth and shut her up. He couldn't take it anymore; she dreamed about him for goodness sake. Nothing turned him on more than knowing that she did this often in her sleep. To know that behind the cool fa\u00e7ade; she wanted him just as much as he wanted her, excited him to no end and he couldn't refuse her or himself any longer.\n\nHe grabbed her and rolled her onto the bed beneath him. He looked at her; wild and ready on his bed, and kissed her while he ground his cock against her pussy.\n\n\"God baby, I know you're going to hate me when you realize that this is real, but I can't hold back anymore\" he said as he left a trail of fiery kisses down her jaw and onto her neck. He wanted nothing more than to plunge into her; to bring himself home, but he had the presence of mind to do one thing first.\n\n\"A condom?\" she asked; stunned.\n\n\"Yes. You might hate me in the morning, but you'll be glad that I did this\" was his simple reply as he sheathed himself. He couldn't hold out, but he could at least make sure that she wouldn't get pregnant again; not like this.\n\nShe looked at him and tilted her head to the side as if she were trying to make sense of what was going on. \"I could never hate you\" was her response as she reached up and caressed the side of his face, \"I love you\". \n\nShe'd admitted what he'd known all along; it just made his heart soar when she'd said it. Before he could get his bearings; he was on top of her again, kissing her thoughts away and pushing her deeper into 'the dream'. \n\nShe'd pushed him too far; it was too late.\n\n\"Tell me you want me\" he whispered into her ear as he ran his cock up and down her slit.\n\n\"Jason; I want you so bad\" she pleaded as she pushed her hips upward; relishing in the friction that the movement brought. \n\nHe made the decision that since this wasn't real to her, but very real to him; he'd make it last as long as possible. He pulled away; sat on his haunches, and just looked at her for a few moments.\n\nHe took her leg into his hand and starting at her right ankle; kissed his way up until he was inches away from her core. He watched as her eyes closed and she licked her lips in anticipation. Instead of delving in as he knew she'd expected; he moved to the other thigh, and made his way to her other ankle.\n\nHis cock was achingly hard, but he was a man on a mission. He had no idea when he'd get this chance again. \n\nHe looked down at her; splayed upon his bed, and ran his hands from her neck, down her stomach, and stopped centimeters away from where he wanted to be. She wasn't waxed the way she used to be, but she was buzzed very close and he enjoyed the new view and the feeling underneath his fingers as he ran them over her mound.\n\nAs he flicked her bud; he leaned forward and sucked one of her nipples into his mouth. She moaned and writhed beneath him as he moved to give her other nipple the same attention. He kissed his way down her stomach and blew on her clit as he slowly inserted a finger.\n\nShe was so slick, soft, and warm to the touch; her scent beckoned him. He had to taste her, and she let out a long moan when she felt his hot breath on her lips. He slowly pressed his tongue to her clit and vibrated it for a moment, smiling at her reaction. After inserting a finger into her pussy and another into her ass; he continued with torturously slow licks to her core, while working his fingers in and out, driving her insane with his expert ministration. After a few minutes; she ran her fingers through his hair before grabbing hold of his head as her first orgasm coursed through her.\n\nHe watched her abs tighten, and felt her thighs tighten around his head as she moaned. He relished in the sound of his name coming from her lips in the throes of ecstasy.\n\n\"Jason, you're driving me insane\" she pleaded as he continued his assault on her sensitive clit and pussy.\n\nHe pulled his mouth away long enough to comment on her last statement.\n\n\"You've been driving me insane for years now\" he said as he moved up her body and watched her breasts heave as she struggled to regulate her breathing. He slowly removed his fingers as he placed himself between her splayed thighs and looked into her eyes.\n\n\"I tried so hard to resist you\" he said as he alternated between kissing her and maintaining eye contact. \"I know you think this is a dream, but it's not. Promise me you won't hate me in the morning when you realize what I've been telling you is true\" he said as he pleaded with her with his eyes, as well as his words.\n\nShe looked into his eyes questioningly; this never happened in any of her dreams of him. Normally, he just went about the business of devouring her and making her scream his name. This one was very different, but as she figured; a dream just the same.\n\n\"I could never hate you\" she said while looking into his eyes as she felt his hard cock pressing against her. \"I love you and you know that.\"\n\nShe moved her hips and in doing so, brushed her lips across his cock as he hissed and threw his head back as he bit his lip. The friction caused her to shiver, and she reached up; tangling her fingers in his hair and pulled his face down to hers. \n\n\"Fuck me\" she whispered into his ear, and returned his lustful gaze when he turned and looked into her eyes. She moved her hips again for emphasis, but this time; he reached down and grabbed her leg behind the knee, pulling it toward him before he claimed her mouth in a kiss.\n\nAs she kissed him back fervently; he plunged into her in one swift move. She screamed into his mouth as he stilled his movements, and waited for her to make the next one.\n\nThe way he'd held her leg had allowed him an even deeper entry than he'd expected, and he almost came instantly. He stopped as much for her as for himself.\n\nHer head was spinning; she hadn't felt like this in more than a year. She felt her walls spasming around him; shooting electric shocks from her hips to her toes. She could feel his heartbeat pulsing inside her and that's when it hit her; it was real. \n\nShe knew it was real and she knew he'd tried so hard to stop her. She knew that this is the last place that she should be, but that there was no place she'd rather be. She tried to move, but that only proved to further complicate things because with him so deep inside her; it pushed him deeper and pushed her closer to another orgasm.\n\nHe felt her still beneath him, and she'd stopped kissing him back. He got a deep feeling of dread, and the source was confirmed when he opened his eyes.\n\n\"You're awake now aren't you?\" he asked cautiously, as he read the lucidity in her gaze.\n\n\"Yes\" was her simple reply as she felt another spasm in her core.\n\nHe contemplated what his next move would be before he looked into her eyes again as he felt her walls tighten around him. This wasn't over.\n\nHe leaned in and brushed his lips over hers while using all of the restraint he had left, and remained still inside her.\n\n\"Tell me you want me to stop and we can just go back to the way things were before you told me that I haunt your dreams the same way that you haunt mine\" he slowly began to slide out, before sliding back in and continuing his statement.\n\nHe watched her struggle to keep her eyes open, and noticed her bottom lip quiver. He leaned in and kissed her softly.\n\n\"Tell me that you want me to forget that you came for me\" he slid out and back in again for emphasis. \"Tell me that you didn't mean it when you said you loved me\" he pushed in and out again, and smiled when he felt her hips rotate beneath him. He placed his lips next to her ear and whispered the next statement, \"and tell me that you don't want me to make you come again, and I'll try to tell you that I won't.\"\n\nHe thrust into her slowly again before looking into her eyes. He could see that she was frightened, confused, and most importantly; on fire for him. Her lips were parted slightly and he thrust into her again and watched as she threw her head back into the pillow.\n\n\"Tell me what you want me to do\" he commanded as he thrust into her, forcefully; and watched as she bit her lip and grunted as her brows furrowed.\n\nHe leaned in again and placed a soft kiss on her cheekbone directly in front of her ear. \"Tell me.\"\n\nHer head was still spinning, but more urgently; her core craved more. She craved more, and she craved him. The fact that he'd tried to stop her; stop this from happening, resonated with her.\n\nHe started to move in an out at an excessively slow pace while waiting for her to answer. When she started to move her hips beneath him; he halted his movements, and looked directly into her eyes.\n\n\"I want you to want men and to want this, but I also want us to be able to continue moving toward something. I don't want this to undo the progress we've made\" he looked thoughtful for a moment before continuing.\n\nShe looked into his face and saw how conflicted he was. She knew that he wanted her, but he'd been so wonderful about everything since coming back into her life on a full-time basis; she was worried that this would ruin their progress too, and she was impressed that he'd shared her concerns.\n\n\"If you want me to stop...I can't believe that I'm saying this, but if you want me to stop; I will. If you need me to stop and you tell me; then I'll stop, but you have to say something\" he said as he placed his forehead against hers; waiting to hear what their next step would be.\n\nShe spent the next few moments trying to convince herself that she could tell him to stop. He was buried deep within her, and it felt so wonderful; she felt wonderful, and when she felt him pulse inside, the decision was clear.\n\n\"I can't. I can't tell you to stop because I want you and I need to be with you now. After tonight; I need things to stay the way they are between us, but right now, I need you to fuck me\" she said, barely above a whisper.\n\nHe opened his eyes and looked into hers briefly, before she grabbed the back of his head and pulled him in for a kiss. This time it was her taking his breath away, and making his head spin.\n\nHe placed one of his hands under her ass and lifted her so he could get even deeper inside.\n\n\"I'll always make love to you\" he said with a groan.\n\n\"Oh God Jason\"\n\n\"That's right baby, let it out. I wanna hear you say my name.\"\n\nHe filled her so completely; she could almost see what was going on inside her core. His thrusts played at her, and she felt the impending orgasm on the horizon. It felt so right being there with him; their first time together in well over a year.\n\n\"That's right, you feel me inside you? Nobody's ever been that deep, nobody except me\" he stated as he thrust deep within her. He extended his arm, and rose up so that he could see where they were joined and watched as his cock disappeared and reappeared; covered in a fine layer of her nectar.\n\nShe began to let out a loud series of moans as her walls started to pulsate around him, and he struggled to keep going. It had been many months since he'd been intimate with a woman; more than a year since he'd been intimate with his woman. He wanted to make it last as long as possible, but the feeling was making that increasingly difficult.\n\n\"Damnit woman, you're going to make me lose it...\"\n\nHe barely got the words out before she pulled him back down and kissed him, and she nibbled on his bottom lip as he felt her hips start to quake beneath him.\n\nAs she got caught up in the throes of ecstasy; she threw her head back into the pillow, and he slowed his pace while he kissed her neck. She came for what seemed like a half hour, as he struggled to hold back. Her walls spasming around his cock; clenching, releasing, and clenching again became too much, and he came with a loud groan. \n\n\"Oh my God, that was more fantastic than I remember\" she breathed out in a whisper as he kept his forehead in the crook of her neck.\n\nHe picked his head up and hovered over her face.\n\n\"Someday; it'll be more than just a memory...when you're ready\" he said as he looked into her eyes and smiled an adorable, unsure smile.\n\nShe opened her eyes wide when he spoke; not realizing that her thought had been voiced. The sweet smile on his face made her return a similar one, and he kissed her softly as she wrapped her arms around his neck.\n\nShe opened her mouth to speak when he interrupted her.\n\n\"I know that tomorrow things will go back to the way they were before, but can I just hold you tonight? I've missed being close to you so much. That's why I brought you in here instead of the guest room. I wasn't trying to put the moves on you; I just wanted to be close to you, even if it was just for a little while.\"\n\nShe smiled and nodded, and as she rolled over; he pulled her close. She placed her hand on the arm that was wrapped around her stomach and felt a calm wash over her.\n\n\"I know that you didn't mean for this to happen and I...I missed it too\" she said, and felt him smile as he lightly kissed her cheek. Minutes later she fell into the best sleep she'd had in months; a blissful, dreamless sleep. "
    ],
    "authorname": "EroticLitKitty",
    "tags": [
        "interracial novella",
        "interracial romance",
        "older woman",
        "younger man",
        "white man",
        "black woman",
        "romance novella",
        "romance drama",
        "drama",
        "interracial drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/jasons-story-ch-18"
}