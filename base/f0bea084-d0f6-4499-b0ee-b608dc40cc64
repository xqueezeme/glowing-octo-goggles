{
    "title": "Secret Smiles and Three Little Words Pt. 37",
    "pages": [
        "This is the beginning of the third book. Again, this will veer from the \"erotica\" to just writing and going with the flow of what feels right. This next chapter has no sex in it, it's not marked but it doesn't. I guess the best description I can give concerning the sex from here on out will be, it's the salt and pepper of the meal. There and noticeable but only as an improvement. \n\nOk, enough with the hate mail! LOL I knew the last chapter would evoke some rebukes. I did so carefully and after much deliberation. Know that Livy's death was well planned out and served a purpose. I didn't write it to just see if I could make you angry or cry. After I am done with this novel, you will understand. Then if you still feel the same way, then the hate mail can start again. Of all the deaths that I have included in my novels, Livy's was the one that made me rethink if it was necessary. I believe it was. \n\nCJT \n\nChapter 51 \n\nAlex was slowly and carefully going through the few possessions Livy had in her apartment. It looked like a first time home should look. It was sparsely furnished, there was little in the way of creature comforts, curtains were almost non-existent leaving only the blinds that came with the semi-furnished apartment. \n\nMost of the furniture was old and dirty but it had the basic needs. A sofa, a chair, and a small dining room set. Her bed was the bottom half of Nora's bunk beds from the old house, the top portion was in Nora's room. Most of the possessions Livy had were Nora's, showing that Livy's priority was her daughter. Going so far as to having only Nora's room fully furnished with all that a little girl would need. \n\nBrightly colored curtains in this room, a vanity to play dress up. A full size dresser to put her clothes and a small table for tea time. Posters of cats and butterflies decorated the walls, along with posters from both the Field Museum and Shedd Aquarium, a trip that Gavin took her on and spoiled her rotten. \n\nGavin was with Nora in her room helping her pack. He kissed her head and stood up when the doorbell rang. As he made his way out, he passed Livy's room and looked in and found Alex just standing there, a picture of her and Livy in her hands. The tears running down her face told of the pain and loss she was feeling. He hadn't felt this helpless since Carla. A feeling he promised himself he would never feel again. But here he was, trying to deal with something impossible to deal with. \n\nGavin opened the door and looked out at a man who did a double take of him. \n\n\"Can I help you?\" Gavin asked. \n\n\"Yes, you must be Gavin,\" the man said extending his hand. \"My name is Don, I'm Nora's dad.\" \n\nGavin looked at his hand for a second before taking it and shaking it apprehensively. \n\n\"What can I do for you?\" Gavin asked not moving from the doorway. \n\n\"I'm here for Nora,\" Don told him bluntly. Gavin lifted his eyebrows. \"I'm here to take her home.\" \n\nGavin dropped his head back and looked to the ceiling of the apartment, his anger bubbling suddenly like a pot of chili. He figured something like this was going to happen, he also knew how Alex would respond. He was hoping it wouldn't but here it was, unfolding. \n\n\"Yeah, Don, probably not a good idea,\" Gavin warned him. \n\n\"Look, I've been patient and understanding,\" Don said to him. \"I know Alex is partial to Nora and I wanted them together so they could comfort each other.\" Gavin saw Don start laying the groundwork for his excuse of not attending Livy's funeral. With the one statement Gavin was in full hate mode. \n\nGavin looked at him blankly, he was trying his best to control his temper which was suddenly crawling out of the box he so carefully kept closed. So carefully kept it from exploding. His temper was something that always destroyed when it was out. Something he took great strides in trying to keep from happening. \n\nPerhaps it was all the emotion over the past few days. Perhaps it was the fact he hadn't slept since the night before Al had his heart attack nearly a week ago. Instead of sleep he spent the nights comforting either Alex or Nora. It seemed when one was asleep, the other was in a fit of tears. He would take turns comforting the one in tears. He was only sleeping in fifteen minute naps. \n\nThe emotion. The fatigue. The worry. All combined made his temper so much easier to bring out. So much more volatile. So much more in control of him. Something that took years to learn how to control. Something that he feared would be released in this tumultuous time. \n\n\"Don,\" Gavin strained through gritted teeth. He blew out a laugh, but it was humorless as he sorted through the words he wanted to use. Discarding most because they were either obscenities or threats. Finally, he just let it out, the first thing that locked into his head. \n\n\"There is no way in hell I'm letting you take Nora, not in this lifetime, not in this universe, not a chance!\" Gavin said forcefully. \n\nDon stared at him blankly, shocked at what was just said. \n\n\"I'm her father,\" Don pointed out, his own temper rising. \n\n\"A daughter you gave up for a fucking house!\" Gavin reminded, his temper making the words harsher, harder. His face turning to stone, his eyes sharpening. \n\n\"I'm all she has left,\" Don said sharply. \n\n\"Bullshit,\" Gavin growled. \"That girl stays with Alex...she stays with us!\" \n\n\"You can't do that!\" Don protested. \n\n\"Fucking try me bitch!\" Gavin said stepping out onto the stoop forcing Don to take a step back. The more Don stood there, the more Gavin's temper won out. It had been years since he was physical with another person. And it wasn't since Carla's disappearing into drug houses that he beat a man, but now his temper was gaining the upper hand and it seems Gavin was going down that road. \n\n\"You want her, come and get her!\" Gavin snarled, daring Don to try. \n\nGavin was done, he was no longer in control. His temper had won out and he was powerless to stop the animal now that it was out of the box. If Don tried any manner of ill-fated attempt to take Nora by force he would be met with a trip to the hospital. Gavin was powerless to stop the temper any more than he could control the wolf. \n\nDon looked at the man advancing on him and feared for his safety. The man had transformed before his very eyes. What started off as a cordial conversation was now in the midst of veil threats and possible actual harm. \n\n\"My lawyer will be in touch!\" Don warned as he turned and high tailed it back to his car. \n\nGavin stopped his advance on the scurrying rodent of a father and let him escape. Using every coping technique he could come up with. Using every ounce of available energy to reign himself in. Using all he had, to keep Alex and Nora from seeing the worst of him. \n\nWhen he turned he saw Alex standing in the doorway, her expression a mixture of fear and confusion forcing him to drop his head. He stood there in the yard as Don barked his tires in leaving. Gavin closed his eyes and tried putting the monster back in the box. Hoping Alex was so horrified she wouldn't demand he explain the temper until he could rationally explain it. \n\nOnce Gavin had the temper in the box, and even though the lid wasn't closed, meaning any argument would cause a sudden explosion of fury that would appall him and possibly frighten her, he walked up to her and stood in front of her, his anger ebbing. His embarrassment rising. The look of fear on Alex was crushing. Was it fear of the animal or fear of what Don wanted? \n\n\"Can he take her?\" Alex asked carefully gaging the man in front of her. \n\nShe had never seen this out of Gavin. He was always so in control. So calm and reserved. She just watched the man she had fallen in love with intimidate another human being. Actually took menacing steps towards a man with the intention to harm, something every doctor swears an oath to never do. Not since Royce, on the night of her awakening to the world of BDSM at her first party, had she seen this. It was almost forgotten in the placid loving months of their relationship. \n\nWhen she heard Don's voice her first instinct was to run to Nora and sneak away from the apartment, then she heard Gavin tell Don he wasn't about to let him take Nora. He did what she wanted. Again, he knew what she wanted without being said. She realized this particular decision wasn't so hard to figure out, but still it didn't have to be verbalized. With so many of her past boyfriends, even the simplest of decisions would have been needed to be said aloud. \n\n\"I don't know,\" Gavin frowned. \"He is the biological father...I have a call into Judith...you need to brace yourself.\" \n\n\"Gavin,\" Alex said firmly. \"You know there is no way I let that man have Nora! There is no way Livy would have wanted that!\" \n\n\"I'm not sure we can keep her!\" Gavin warned. \"I mean, the biological father has custody rights if the mother...\" He didn't finish. Alex turned and left him in the doorway. Gavin inhaled a deep breath and let it out slowly. \n\nHis phone ringing brought him from his anger. He looked and saw Madelyn's number. \n\n\"Hey baby,\" she said motherly. \n\n\"Hey Maddy,\" he said sitting down on the stoop. \n\n\"I'm just checking in with you to see if you need anything,\" Madelyn told him. \n\n\"Yes, I do,\" Gavin blew out a breath. \"I need a lawyer, and I don't mean just any lawyer...I need an O.J. Simpson type team of lawyers that can do the impossible!\" \n\n\"Oh my God, what is going on?\" Madelyn gasped. \n\n\"Don is asking to take custody of Nora,\" Gavin said softly. \"There is no fucking way I can let that happen...Alex would be crushed!\" \n\n\"Ok, baby,\" Madelyn told him. \"I'll call my lawyer, he will know who is the best person to handle this will be.\" \n\n\"I've got a call in Judith, but she hasn't called me back yet. She is on vacation somewhere,\" he told her. \n\n\"I'm on it,\" Madelyn assured him. \"There is one other thing...I hate to even bring it up.\" \n\n\"What?\" Gavin asked her rubbing his face with his hand. \n\n\"The wedding?\" Madelyn asked carefully. \n\n\"The wedding,\" Gavin sighed. \"Yeah, look, Al has to be a part of it and it will be at least six months before he is even physically able to do that. He also may need another surgery so it may be even longer. It could take up to a year to fully recover. And I don't think Alex's head is in the right spot right now.\" \n\n\"I know you have put a lot of effort and a shit load of money...,\" Gavin continued. \n\n\"Don't worry about the money, it's nothing compared to yours and Alex's happiness,\" Madelyn said firmly. \"I will put everything on hold, for the time being.\" \n\n\"Thanks, Maddy,\" Gavin said softly. \n\n\"Just one little thing baby,\" Madelyn began carefully. She knew Gavin would have at least thought about it, but she wanted to make sure. \"Are you sure Nora going back to Don is such a bad thing?\" \n\nGavin sat there for a few moments as he thought about that. \n\n\"I know it would be a bad thing for Alex,\" Gavin sighed. \n\n\"Are you ready for a child in your home?\" Madelyn asked. \"Children are such a big responsibility, they are life changers! The life you have envisioned with Alex will change drastically when you add Nora to the mix.\" Madelyn warned carefully, her love pouring out letting Gavin know this was just motherly advice. The silence on the phone was deafening. Even Madelyn was unsure what to expect from Gavin. \n\n\"I love Alex,\" Gavin said firmly. \"This is all about her, if she has to have Nora, and she does, she is getting Nora. She will guide me the rest of the way with a child, as I don't have the first damn clue on kids! I trust her. While I'm sure I don't know what to expect, Alex will guide me and keep me from fucking this up.\" \n\n\"It makes my heart sing to hear you say that,\" Madelyn said, choking up on the phone. \"Then Nora stays...You and Alex will never lose her...I will call in every favor...move every mountain and leave no stone unturned until Nora is safely within your new family...son.\" \n\n\"Thanks...mom,\" Gavin choked out. \n\n*** \n\nTwo hours later Don returned, this time he had the police with him and his lawyer. \n\n\"Mr. Steward?\" one of the officers asked when he opened the door. \n\n\"Dr. Steward,\" Gavin corrected. \n\n\"Sorry,\" the officer nodded. \"May we come in?\" \n\n\"No,\" Gavin said bluntly. \n\n\"Sorry?\" \n\n\"Look Mr. Steward,\" the lawyer began in. \"We have legal grounds to enter the home and take the girl, but we are hoping to avoid any more trauma on the child as I'm sure you and Miss Lasko are as well.\" \n\nGavin watched as another car pulled up, this one an unmarked police cruiser and Gavin began to wonder just how many police officers they planned on bringing here. Right now he was thinking about the time he was arrested in New York with Pavy. It took five to fully wrestle him to the ground that day. Granted he was much younger then. He smiled inwardly, he needed Pavy now. His friend would be all for fighting with the police again. \n\n\"First off,\" Gavin began patiently. Trying to control his temper, the humorous thoughts of his last arrest helping him keep it in check, but he knew that was only temporary. \"It's Dr. Steward, call me pretentious but after so many years of med school and my successful practice I kind of like the respect being shown.\" Don rolled his eyes. \n\nThe detective from the unmarked cruiser walked up and nodded to Gavin and pulled the two uniformed officers away. While that was happening another car pulled up. This wasn't a squad but it was definitely a government vehicle. \n\nA woman hopped out and made her way up. \n\n\"Dr. Steward?\" she called out once she was close enough. Gavin nodded at her. \"Hello Detective Matthers.\" She smiled at the plain clothes officer as she walked up quickly. \n\n\"Mr. Codeen?\" she asked looking at Don and his lawyer. \n\n\"I'm Don Codeen,\" Don said looking her over. \n\n\"Good afternoon,\" she smiled pleasantly. \"My name is Misty Dasenbach, I'm with child protective services.\" She handed him her card and one to the lawyer standing next to him. \n\n\"As you know, before her death, Ms. Olivia Lasko filed formal charges of possible child endangerment with our office concerning you and your fianc\u00e9,\" she told him causing Don to hang his head. \n\n\"That was Mr. Codeen's former fianc\u00e9, not him, and that is no longer a problem as she is gone,\" the lawyer said for Don. \n\n\"Perhaps,\" Misty nodded. \"But that is still an open complaint, which must be investigated by my office. Until that time, Nora Codeen cannot be placed in custody of her father until he is deemed safe.\" \n\n\"I'm her father! Of course I am safe!\" Don barked. \n\n\"Did you or did you not have a woman in your home that is responsible for harming your daughter?\" Misty asked harshly. \n\n\"Allegedly,\" the lawyer tossed out. \n\n\"Allegedly,\" Misty adjusted. \"In any case, until my office clears Mr. Codeen, he is considered a possible threat.\" \n\n\"This is preposterous!\" the lawyer barked. \n\nGavin's phone rang and he looked at it, it was Madelyn so he answered. \n\n\"Hey,\" he said watching the three people in front of him argue about the law and child endangerment. \"We have a monumental problem here.\" \n\n\"I'm guessing the father and his slimy lawyer are there?\" Madelyn said with a carefree laugh. \n\n\"Along with three police officers and one lady from the Child Protection Services,\" Gavin told her as he thought the laughter was out of place. \n\n\"Don't worry,\" Madelyn assured him. \"I called the Governor of Pennsylvania, he contacted the State Director of Protection Services who in turned called Ms. Dasenbach, who is supposed to make sure that Nora stays where she is. I also have a call into the Pennsylvania State Attorney General who will push for a rush hearing for temporary custody...I figure Monday or Tuesday.\" \n\n\"Are you shitting me?\" Gavin now laughed. \n\n\"You know me,\" Madelyn said. \"I don't fuck around...especially when it concerns my family and Alex and Nora are my family!\" \n\nThe detective came up and Gavin looked to him. \n\n\"Sorry to have bothered you Dr. Steward,\" the detective said. \"This is a subpoena for you to appear in court on Monday for an emergency hearing on custody.\" He handed a copy to Gavin. \n\nTurning to Don he handed him another copy. \n\n\"Mr. Codeen, this is your summons,\" the detective said. \"Now, given the circumstances, I'm going to have to ask you to leave Dr. Steward, Miss Lasko and the child alone. The restraining order is still in effect until you appear in court and the judge removes it.\" \n\nGavin smiled as he heard Madelyn snicker in his ear. The detective nodded his goodbye and followed Don and his lawyer towards the car. The uniformed officers had already started to get into their cruiser. \n\n\"How is she doing?\" Misty asked. \n\n\"As well as you can expect, I guess,\" Gavin said taking her card. \n\n\"This is only a temporary fix,\" Misty warned. \"Without proof that he contributed to the injuries, and there is none, by law, he should be first in line to take custody.\" \n\nGavin nodded that he understood. \n\nLate that evening, Alex and Gavin lay in bed, Nora lay in between them. Alex gently stroked the child's hair as she looked at her. \n\n\"She looks so angelic,\" Alex marveled. \n\n\"She does,\" Gavin agreed. He was looking at Alex, marveling over her gentle motherly attention. The tear fell down her nose, hanging for a moment before dropping off. \n\n\"What happens if they take her?\" Alex whispered. \n\n\"I don't know,\" Gavin admitted. \"We fight.\" \n\n\"I can't allow Don to have her,\" Alex said firmly. \"Not after what he did! Livy would never allow it!\" \n\n\"I know,\" Gavin told her softly. \"One step at a time.\" \n\n\"I don't have that luxury,\" Alex told him. \"I have to leap.\" \n\n\"We have to leap,\" Gavin corrected. \"Side by side, together.\" \n\n\"Gavin,\" Alex shook her head. \"If I have to kidnap her...I will.\" \n\n\"I know,\" Gavin told her. \"We will do what we have to.\" \n\n\"I can't ask you to do that,\" Alex told him looking at him. \"To give up your practice...to leave everything...I can't!\" \n\n\"You don't have to,\" Gavin smiled. \"We may not have a piece of paper telling us we are married, but I have felt that way for some time. I have learned you are married when your heart tells you, not when the state tells you with some worthless piece of paper.\" \n\n\"Being married means, everything together,\" Gavin whispered. \n\nMonday morning they sat in the courtroom and fidgeted. Madelyn had come back from Chicago to help. She was now watching Nora at the apartment. Gavin and Alex sat at one table, while Don and his lawyer sat at the other. \n\nA burst of activity had Gavin and Alex looking over their shoulder as Judith whisked in, her deep sunburn telling them she had been enjoyed her vacation and it was someplace sunny. She rolled her eyes apologetically at them as she rushed down to them tossing her briefcase on the table and exhaling deeply. \n\n\"I'm so sorry,\" she blurted. \"Three different plane changes, one flight flat out canceled and then the drive from Pittsburg where it seemed that every Sunday driver in the state decided to be in front of me!\" \n\nShe sat down with a tired huff and opened her briefcase. \n\n\"Look, what are our chances here?\" Alex asked immediately. \n\n\"This will be short and sweet,\" Judith smiled with a wink. Her body and facial language exuding confidence. Alex looked to Gavin who shrugged, he was a bit surprised at the demeanor as well. \n\nThe judge came in and Alex recognized him immediately. It was the same judge that presided over Livy's divorce. \n\n\"Be seated,\" he said sitting down barely acknowledging the courtroom. Everybody sat and Alex took hold of Gavin's hand and he kissed it. \n\n\"Good morning,\" the judge called out. \"Let's get some formalities out of the way.\" The judge said formally. \"I have an affidavit that says Mr. Codeen and his former fianc\u00e9 no longer live together so the Child Protection warrant is negated.\" ",
        "With that opening salvo, Alex's heart sank! That was what she was counting on to keep Nora in her custody! The longer that drug out the more time she had to come up with a plan to go with after that failed. \n\n\"Thank you, Your Honor,\" Don's lawyer said aloud. \n\n\"Ms. Thering?\" the judge asked looking to Judith who smiled. \n\n\"Your Honor, I have here a copy of Ms. Olivia Lasko's Last Will and Testament,\" she said holding it up and the bailiff came over and took it from her. \n\n\"I have highlighted the section that is relevant, your honor,\" Judith pointed out. \n\nThe judge dropped his glasses on his nose and read it to himself first. He flipped through to make sure all the appropriate legal marking were in place making it an official document. \n\n\"Your Honor, due to the tragic death of Ms. Olivia Lasko an official reading of the Will has not be made, but as you can see, it is very specific,\" Judith told him. \n\n\"Agreed,\" the judge nodded. \n\n\"For the record, I will read the pertinent portion of Ms. Lasko's Will,\" the judge said sitting forward. \"If under any circumstances that I, Olivia Lasko, should become incapacitated or in any way unable to perform my duties as sole custodial parent, or upon my death and before Nora Codeen's eighteenth birthday, she will be placed in the custody of my sister, Alexandria Lasko until her eighteenth birthday or until a court files her competent as an adult.\" \n\nThe judge looked up and placed the Will down on his desk. \n\n\"Your Honor,\" Don's lawyer interjected. \"Ms. Lasko's death supersedes the Will as the child has a living parent who has rights as a living parent.\" \n\nJudith began to open her mouth but she was cut off by the judge's hand. \n\n\"I remember this divorce pretty clearly,\" the judge said. \"I warned your client to be cautious of giving up total rights to his daughter. I remember very clearly giving him the option to talk to his legal team to make an informed decision. He chose. He gave full rights to the child to his ex-wife in exchange for the marital house.\" The judge shook his head slightly at his opinion of it. \n\n\"Now most often that just pertains to schooling, medical decisions and the like...unfortunately, in this case, we have a tragedy. But as sole custodial parent, it is Ms. Olivia Lasko that has final decision concerning her daughter. She has spoken, loud and clear.\" \n\n\"Mr. Codeen do you remember my warning that day?\" the judge asked him. \"If not, let me refresh your memory. I said 'I hope you don't regret this decision later'. It appears that has come to pass.\" \n\nThe judge began signing papers in front of him with a deep sigh and a shake of his head. \n\n\"If you want custody of the child Mr. Codeen, you will have to win custody through the courts,\" the judge told him. \"As of right now, Ms. Olivia Lasko's Will holds. Nora Codeen will be placed into the custody of Alexandria Lasko.\" The judge looked up and over the rims of his glasses. \n\n\"Ms. Lasko?\" Alex stood up still holding Gavin's hand. \"Will you accept custody of Nora Codeen as designated in the Will of you late sister?\" \n\n\"I w...\" Alex had to stop and clear her throat as it was dry and stuck. \"Excuse me your honor.\" Alex asked. He nodded that he understood. \n\n\"I will gladly take custody of Nora,\" she said clearly now. \n\n\"Then this court and the state of Pennsylvania fulfills, this portion of the Will of Olivia Lasko and places her in your custody,\" the judge said formally. \"You have my deepest condolences on your loss Ms. Lasko, but if your sister thought so highly of you to place her most precious possession in your charge I have great faith she will be in good hands!\" \n\nThe judge tapped his gavel and just like that, the weight of losing Nora was lifted off the two of them. Alex's tears were instant. The weight of the one victory was exhausting. The emotion swept out of her and she was instantly tired. Gavin stroked her cheek and nodded that he understood the tears. \n\n*** \n\nChapter 52 \n\nAlex nodded at Gavin when he pointed towards the doctors. Gavin wanted an update, so Alex let him go and she walked towards the ICU room where her father was. Nora held her hand tightly as she looked around. \n\nAlex knelt down and took Nora's face in her hands. \n\n\"Ok, baby,\" she whispered to her. \"Are you sure you want to see him?\" \n\n\"I want to see Grandpa,\" Nora said firmly. \n\n\"Ok, just remember, all the tubes and wires are helping him,\" Alex reassured her. \"It may look scary but they are good things.\" Nora nodded that she understood. \n\nThis was Alex's first big decision with Nora. Does she run the risk of scaring the little girl with all things she won't understand with her grandfather? Will all the monitors and tubes bring fear and misunderstanding? \n\nShe looked at the small girl and saw a determination in her eyes that she recognized easily. It looked like her. Livy always made comments that Nora was more like Alex than her. That she had the same attitude, the same fearlessness...the same short temper. \n\nThere were some phone calls where Livy would do nothing but joke that Nora's parents must have been switched at birth and Nora actually belonged to Alex because they were so much alike. Alex ran her hands down the side of Nora's face and braved her best smile. Now Alex just had to make sure she could handle it! \n\nThe first visit back with her father had left her crying the entire time. He looked so weak! Like it wasn't even him anymore. The mask he wore for his oxygen didn't allow him to speak strongly. His grip, hardened over the years of working in his shop with wood, clay and mortar now could barely grasp her hands. \n\nGavin had assured her that everything they had on him was normal and his strength would return. The real Al would return, but looking at him it was hard to believe. He seemed to be moments for death's door. \n\nAlex slowly pushed open the door to his room and peered in, Al was near the window, affording him the opportunity to look out into the world. He had his head turned that way and he was alone. \n\n*** \n\n\"Good morning Gavin,\" Al's doctor smiled handing him the charts. Gavin looked them over and frowned. \n\n\"Yeah,\" the doctor agreed. \"I had that same opinion when I saw them.\" \n\n\"Stan I don't know,\" Gavin shook his head. Gavin had spent hours with Al's doctors, going over the tests and the procedures. They became well acquainted with one another in a short period of time. \"We should have seen some sort of improvement by now!\" \n\n\"I agree Gavin,\" Stan shrugged. \"It takes time, you know that.\" \n\n\"Are you going to run any more tests?\" Gavin asked him. \n\n\"I'll be quite honest with you,\" Stan frowned. \"In his condition, I'm afraid to do anything too invasive!\" \n\n\"Yeah,\" Gavin nodded. \"Christ!\" \n\n\"I have a question for you,\" Stan began, looking around. \n\n\"Shoot,\" \n\n\"I know he is married and he has kids,\" Stan began slowly. \"But you and Alex are the only ones I ever see here.\" \n\n\"Al and Marylyn are having marital problems,\" Gavin admitted. \n\n\"That is the last thing he needs right now,\" Stan pointed out. Gavin nodded that he agreed. \n\n\"I'll talk to Marylyn,\" Gavin suggested. \"I don't know how well I will be received...but I'll try.\" \n\n\"What about Alex?\" Stan suggested hoping that the daughter would have more sway. \n\n\"Like oil and water,\" Gavin shook his head. \"More like gas and a match...they have had problems since childhood! Check your security tapes, they will have a nice shot of Alex slapping her mother so hard I thought we were going to have to admit her too!\" \n\n\"You're kidding!\" Stan gasped. \n\n\"It's been a very dysfunctional relationship,\" Gavin told him. \"I'm not sure it can be repaired.\" Gavin shrugged. \"I'll take a run at Marylyn, see where her head is.\" \n\n\"Thanks Gavin,\" Stan smiled. \"I get the feeling Al isn't sure if he wants to live or not. With his daughter's suicide...and if he is having marital problems...he may just decide it's not worth sticking around for.\" \n\n\"You know as well as I do,\" Stan said walking away. \"As doctors we can only fix the body, the will to live is beyond our domain.\" \n\nGavin nodded as he went through the charts again, hoping to find something they may have missed and would explain why Al's vitals weren't progressing. He was hoping it wasn't because he had lost the will to live. \n\n*** \n\n\"Hey Dad,\" Alex smiled putting on her most brave face. \"I've brought someone special to see you!\" She put Nora on the edge of the bed. \n\n\"Hi Grandpa!\" Nora said with a bright smile. Alex marveled, Nora hadn't smiled that big in days. Alex had told her she needed to be happy so that Grandpa would be happy. \n\n\"There's my girl,\" Al said taking his mask off. \n\n\"Dad,\" Alex warned. \"You need to leave that on.\" \n\n\"I need to talk to my girl,\" Al retorted. \"Can't talk to her through that dumb thing!\" \n\nNora took hold of the mask and put it back on him. \n\n\"I'll do all the talking,\" Nora told him firmly. \n\nAlex nearly laughed. Nora did most of the talking anyway, so that didn't need to be said. But it was the tone she used that had her laughing inside. It was more adult than child. \n\n\"I love you Grandpa,\" Nora told him kissing his cheek. \"I want you to get better so you can visit me in Chicago!\" \n\nAl teared up and nodded. \n\n\"Alex is going to be getting married and you and I have to walk with her,\" Nora reminded. \"So, don't take too long getting better! I want to wear my pretty dress.\" \n\nGavin came in and saw the girls talking to Al, he was laughing gently which made Gavin feel better. Alex and Nora talking about how Charles had gotten ice cream all over the limo when he stopped hard coming back from the ice cream parlor. Queen Madelyn was furious as she believed he did it on purpose. \n\nAl joked with both girls, talking about how the nurses were picking on him. Saying he must have had the meanest nurses in the world. Nora disagreed, she said the school nurse was much worse and they called her Mean Joe Green. Nora explained she didn't understand why they called her that when her name was Josephina Greenway. \n\n\"That's because,\" Al explained through the mask. \"Back long before you were born, there was the meanest linebacker to ever play the game and he played for the Steelers. His name was Mean Joe Green! He would hit guys so hard they had to be carried off the field!\" \n\nThis story made her eyes widen and that made them all laugh. Gavin pulled up a You Tube video with the Hall of Fame linebacker and Nora laughed because Mrs. Greenway didn't have a beard. \n\n*** \n\nThe girls were headed for drinks while the nurse came in to give Al his medicines. Gavin waited until she was done before coming to the bed and sitting down. \n\n\"How do you feel?\" Gavin asked him. \n\n\"Good,\" Al lied. \n\n\"Really?\" Gavin asked, his eyebrows raising. \"Cause these charts tell a different story.\" Gavin said tapping the clipboard in his hands. \"Did you forget who you are talking to?\" Al closed his eyes. \n\n\"Look Al,\" Gavin said setting the charts down on the table. \"I don't know you very well and all that, but I know Alex. I love your daughter more than anything or anyone ever before. She has lost enough, we all have. It's not your time.\" \n\nAl looked to him and closed his eyes forcing tears out. \n\n\"I failed Livy...I failed them both,\" Al admitted to him. \"I should have ended the bullshit long before Marylyn forced her lies on the kids. I should have ended this when it first started, maybe I would still have my family!\" \n\n\"What are you talking about?\" Gavin asked him. \n\n\"Alex was nothing more than what Nora is now,\" Al told him. \"That's when Rev. Sellers took over the church.\" Gavin nodded. \n\n\"It wasn't long before Marylyn started to change,\" Al continued. \"Sellers was on and on about women in the church and how this and that was needed to change. I stopped going, his sermons were more about what his personal belief was about the wrongs of society and less about God.\" \n\n\"I watched my wife begin her molding of our daughters into what Sellers thought women should be,\" Al continued. \"He thought women should be less of women and more robots. Children should be seen and not heard. Girls should have to dress a certain way, dating strictly forbidden. No sports at all! No school dances. That all men must come from inside the church!\" \n\n\"Marylyn forced all of this on the girls,\" Al closed his eyes. \"All obeyed but one.\" Gavin smiled, no need to name names. \n\n\"Alex was treated so horribly! And I did nothing to fix it,\" Al admitted. \"We never spanked our kids before, I was working two jobs then...at school all day and then drive an hour to the junior college to teach night classes there.\" \n\n\"I didn't know that Marylyn had gone to whipping Alex with a belt for disobedience, at Sellers suggestion,\" Al began to cry. \"Alex never said a word...she just took her beatings! Nobody said a word! She never changed, she still did what she wanted.\" \n\n\"Do you know what the biggest reason was for her beatings?\" Al asked him. \"Her art!\" Al softly punched the bed beneath his fist. Gavin picked it up and held it. \n\n\"One particular picture she drew was the beginning of the end for Alex and the rest of the family. Alex had drawn a picture of Andromeda and the Sea Monster,\" Al explained he looked to Gavin who shrugged indicating he didn't know what he was referencing. Al backtracked a bit. \n\n\"We spent a week in New York City...we had gone to Metropolitan Museum of Art...I couldn't get Alex out of there! She just wanted to walk around and see the paintings...the sculptures!\" Al's words were now in broken sentences, partly because of the tears, partly because it was difficult to breathe. \n\n\"She was a freshman then, so, while the rest of us saw the sights, she spent most of the time at the Met,\" Al shrugged showing it wasn't surprising to him. \"A proctor came to me one afternoon as I went to collect her, told me she had spent all day with that sculpture, drawing and redrawing it. Trying to get it perfect!\" \n\n\"The head of the museum even let her touch it, to get the curves right,\" Al said proudly. \"There were several proctors who felt her drawings were better than some of the Masters they were guarding!\" Al smiled. \"I was so proud, here were people surrounded by the best art in the world, telling me my daughter was very good...not just very good...but great!\" \n\n\"I saw the drawing and I was floored!\" Al continued after getting his breath back. Gavin waited patiently. \n\n\"It was by far the greatest thing I had ever seen!\" Al told him. \"And I have seen it all! Bellini, da Vinci, Tintoretto...Alex could recreate them all! She did that summer! In two weeks she had copied them from the walls. Filled her sketchbook recreating the masterpieces...from Monet to Renoir.\" \n\n\"But it was the marble sculpture of Domenico Guidi that finally separated her mother and her. That sculpture was magnificent! It was perfect and Alex felt so as well, she drew to it like a moth to a flame!\" \n\n\"Over and over she had drawn it and redrawn it, she felt she never got it right, when it wasn't she ripped it from her book and tossed it away. The proctors began begging her to not wad them up, they wanted them!\" \n\n\"Alex and her temper!\" Al smiled. \"She was still there on the floor in front of it drawing it. The next proctor standing nearby to keep her from wadding it up!\" \n\n\"Why would Marylyn care about Andromeda?\" Gavin asked when Al stopped talking. \n\n\"She was nude on top,\" Al explained. \"She was finishing up, the Met was closed, and had been for nearly half an hour, but it was our last night! The proctors let her alone.\" \n\n\"Finally,\" Al nodded. \"She had done what she wanted. She had it perfect! Every nuance, every darkened shade of the marble. Every beam of light from the overhead glass skylight! I looked from her drawing, to the sculpture back to the drawing. I couldn't tell the difference! The only thing different was the time of day, it was night out but the skylight in the picture showed the sun up!\" \n\n\"I was floored!\" Al smiled. \"Alex was so proud! She finally had it right in her mind! The director of the Museum came over and looked it over and shook his head. He handed Alex an envelope...it was a letter of reference! A fucking letter of reference from the Director of the Metropolitan Museum of Art! He told her when she applied for colleges, mention him.\" \n\n\"The girl was on cloud nine hundred and nine!\" Al bragged. \"Couldn't sand that smile off her face!\" \n\n\"A little over a month after we got home,\" Al frowned. \"Alex changed. She wasn't happy anymore, she wasn't painting anymore...I asked her what was wrong she said she was burnt out!\" \n\n\"In school she did her art, but it had lost something, I couldn't figure it out,\" Al told him. \"And she never did her art at home, I could never explain it! Until Livy moved back in. Marylyn was furious that she was giving up on her marriage...she was brutal, only this time I was around to see it first hand...so she had to back off!\" \n\n\"I was out with Livy looking at apartments,\" Al said slowly. \"It was Livy who told me why Alex never did her art at home anymore. It seems a week after we got home from New York, Marylyn found Alex's sketchpad and confronted her on the picture she had drawn...the half nude drawing of Andromeda. Marylyn called it pornography! Alex said it was art, they didn't put pornography in one of the greatest art museums in the world!\" Al began to sob. \n\n\"Marylyn ripped up the picture in front of Alex and told her it was pornography, punishable by God and she would not have it in her house!\" Al gasped his voice breaking with his emotions. \n\nGavin dropped his head. Going over and talking to Marylyn was sounding like a bad idea, now with this story he was getting more and more pissed and he was unsure if he could control it if he got there. \n\n\"Can you guess what Alex did?\" Al smiled ruefully, the tears of shame and anger still falling. \"She drew it again...from memory! Each and every time she drew it, Marylyn would tear it up and whip Alex. Each and every night, Alex drew it again.\" \n\n\"Livy said it went on for a whole month,\" Al choked out. \"Then one night, Alex stopped doing her art at home.\" \n\n\"The summer after her high school graduation, Alex was gone, accepted into the Chicago Art Institute, a place she applied to all on her own,\" Al told him. \n\n\"She didn't tell anyone, used her letter of reference and was accepted immediately. Full scholarship, all because, not only the letter, but the President of the College knew the Director of the Met. The Director told of Alex's passion, and that he thought so highly of her that he had one of her drawings up in his office! This man is surrounded by the greatest art the world has ever known, and he had my daughter, my daughter's drawing in his office!\" \n\n\"She was packed up and ready the following week and I drove her to Chicago and lost her,\" Al finished. \"She rarely came home, claiming to be working on holidays, taking classes in the summer...she cut us out! I didn't know why until Marylyn started in on Livy.\" \n\nGavin sat there and looked to Al. He could see the guilt building. \n\n\"Do you love Alex?\" Gavin asked. \n\n\"Of course I do!\" Al barked. \n\n\"Do you love Nora?\" Al didn't answer this question he just stared hard at him. \"Do you want to make it up to Alex?\" \n\n\"Every fucking day!\" Al gasped. \n\n\"Then get better,\" Gavin said standing up. \"Walk her down the aisle like she wants...if you don't...she will never be the same!\" \n\n\"I don't understand,\" Al said to him. \n\n\"These charts tell me you have stopped trying to live, you've given up,\" Gavin told him. \n\n\"I hav...,\" \n\n\"Don't fucking lie to me!\" Gavin cut him off. \"Don't forget who you are talking to!\" With that Gavin left Al alone. \n\n*** \n\nAlex sat in the back of the car with Nora. Alex and Nora kept Al's mood up. He even began joking that the mean nurses were back when they came to tell them that visiting hours were over. ",
        "Al was smiling that Alex had won custody of Nora, he knew Livy had put it in her Will that was what she wanted. He never expected it to become a reality. It never crossed his mind that Livy wouldn't be around for Nora. \n\n\"What are the doctors not telling us?\" Alex asked him after Nora had fallen asleep. She was gently stroking Nora's hair as the small girl leaned into her. \n\n\"I'm not keeping anything from you,\" Gavin said firmly looking in the rearview mirror. \n\n\"Promise?\" Alex asked him, a single tear running down her face. \n\n\"Promise,\" Gavin nodded. \n\n\"He's going to be alright?\" Alex asked him. \n\n\"He will be if he fights,\" Gavin said softly. \"He needs that reason.\" \n\n\"What do you mean?\" Alex asked him. \n\n\"Stan and I believe your father hasn't decided on whether he wants to fight for his life or not,\" Gavin told her. \"We can fix his heart, we can fix the physical ailments, but Al has to find a reason to live.\" \n\nAlex looked out the window, the hardening of her eyes told him that Alex was definitely going to take that issue up. \n\n\"What happened to Andromeda?\" Gavin asked her, drawing her eyes from the window. \n\n\"Who?\" Alex asked him the confusion filling the reflection in the widow. \n\n\"Andromeda,\" Gavin said again. \"What happened to her?\" \n\n\"Damn,\" Alex laughed. \"That movie was awful! Of course, Perseus saved her!\" \n\n\"No,\" Gavin smiled realizing she was confusing his question about the legend of Andromeda and not her art. \"Your Andromeda...I know there is no way you let your mother win...I don't care if she beat you hourly! She was redone! Now, what happened to her?\" \n\nAlex looked towards the window and the tip of her smile curved up. \n\n\"How did you know?\" \n\n\"Al heard about it from Livy,\" Gavin explained. \"Where is she? Cause I can tell by that smile, you have her somewhere!\" Alex's smile broadened. \n\n\"You know that big family portrait in the living room? My mother's pride and joy?\" Alex smiled. Gavin nodded. \"It had this great big piece of blank canvas on the back!\" \n\nThe portrait she was talking about was forty eight by sixty inches in size. A huge family portrait that hung in the living room for all to see. Her mother's pride and joy. She would show it off to each and every new visitor that came into the house. It was the most ostentatious item in the humble home. \n\n\"It HAD a blank piece of canvas?\" Gavin smiled. Alex turned her eyes to him and nodded. \n\n\"Let's see the bitch tear that up!\" Alex told him coldly. \n\n*** \n\nAl woke in the middle of the night with a start. His eyes found Alex sitting on the bed with him. He looked out the window and found it still dark. \n\n\"What time is it?\" he asked her pulling the mask off. Alex put the mask back on immediately. \n\n\"Three a.m.,\" she said. \n\n\"I thought it was after visiting hours,\" Al teased rolling his eyes that she immediately put the mask back on him. \n\n\"They know better,\" Alex told him. \"Are you quitting on me?\" \n\nAl just looked at her blankly. \n\n\"Don't you do it!\" Alex said forcefully. \"You will walk me down the goddamn aisle!\" \n\n\"Alex I..,\" \n\n\"NO!\" She barked at him. This drew the nurse in. \"GET OUT!\" Alex barked at her and she quickly closed the door. \n\n\"Don't you do it!\" Alex said again. \"You have to walk me!\" \n\n\"I'm so sorry!\" Al told her. \"I failed you and Livy!\" \n\n\"You haven't failed anyone...yet,\" Alex told him. \"You give up...and I'll never forgive you!\" \n\n\"When did you become so tough?\" Al smiled at her. She kissed his cheek \n\n\"I take after you,\" Alex smiled as a tear fell. \"I have another reason for you to fight,\" Alex told him. \n\n\"What's that?\" \n\n\"I left you something,\" Alex told him. \"Something I know only you will appreciate.\" \n\n\"What?\" \n\n\"No,\" Alex said shaking her head and laying down with him. \"You have to go home and find it.\" \n\n\"You are hiding things in my house now?\" Al asked with a laugh. \n\n\"No,\" Alex smiled. \"She never left your house...my most prized possession...my greatest triumph. The one thing that has made my entire life possible...it led me to art school. To my first art showing, to the mural, to selling my art for profit...it led me to Gavin. The man who is going to give me my children and they will need their Grandfather!\" \n\n\"Give me a hint,\" Al laughed. \n\n\"You and Gavin talked about it tonight,\" Alex smiled. \n\n***"
    ],
    "authorname": "CJT",
    "tags": [
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-37"
}