{
    "title": "The Bra Salesman Epilogue",
    "pages": [
        "Epilogue\n\nDave is looking at me incredulously, \"You still haven't gone back to see her?\"\n\nJesus, Dave, you have been on my fucking back for two whole weeks, will you please give it a fucking rest? \"No, I haven't.\"\n\n\"Wow, you are impressive, man!\" Dave slaps me on the back as though we are best buddies, which we are most assuredly not. \"I don't think I could do that.\" He turns as though he's going to leave my cubicle, but I know he's not really going to do it. I know that because I desperately want him to leave and the stupid leech never does anything I want and certainly not when I want it.\n\n\"Well, that's where you and me are different.\" Dave had been pestering me about getting the four of us together for one big, huge orgy, which he says is to help Tasha and Brittney rekindle their friendship after Tasha cut Brittney out of her life but I know he just wants to fuck Tasha again. I finally had to admit to him that I wasn't seeing Tasha anymore. I told him my conscience had gotten the better of me and I didn't want to lie to her anymore so I ended it. Dave shook his head and said if he could spend the rest of his life fucking a piece of ass like hers, he'd lie his fucking balls off. He is such a monumental asshole, but the part that really stung, of course, is that that is exactly what I wanted to do for that very reason. But he's been giving me shit about it ever since.\n\n\"Well, I'm going to Brittney's again tonight to give her exactly what she wants,\" Dave says in the most macho-like voice his squeaky voice is capable of, which to me sounds like a five-year old imitating John Wayne. \"Some Dave baby-batter!\" He grabs his crotch and laughs like a maniac, waiting for me to laugh with him. But if he thinks I'm going to laugh at his ridiculous, arrogant dickishness, then he can go fuck himself.\n\nThing is, I only have myself to blame. Ever since I used Brittney's hypnotic codeword to make her attracted to Dave and his sick bondage, he has been thinking he's God's gift to women everywhere. Now he's this arrogant jackass who imagines his bald, hairy ass is attached to the most deliciously desired cock in the whole goddamn world. Yes world, that was me who did that, you are so very fucking welcome. One of these days I'm going to have to go over to Brittney's and reverse what I did.\n\nBut that would mean going over to Tasha's apartment building, and I have made a point to not go back there. I didn't want to accidentally run into her and trigger any memories for her.\n\nI, however, have many fond memories of Tasha. I can remember the feel of her naked body pushing against mine, with the erect nipples of her massive breasts compressing into my chest, as our tongues explored each other's skin. I remember how she tasted when I had my face between her legs and was licking her delectably wet pussy, and the feeling of her muscular thighs pressing against the sides of my head as she arched her back and convulsed when my lapping made her orgasm. Her skin would get so slippery when she sweated after kneeling on top of me and hammering her groin on top of my hardened cock so hard that her hair and tits would flail in all directions and I would have to use my hands to clutch her nipples and dig my fingers into the soft flesh of her bosoms to subdue her chest down to jiggling ripples...\n\nShit, here's the boss wanting another data export. Got it. Yessir I'll get right on it. No, thank YOU.\n\nAs soon as he leaves, I decide I want to see Tasha again. So I surreptitiously open the video footage Dave downloaded to my computer where I can watch myself climbing on top of Tasha, with her lying down on her back spreading her legs wide as I slowly slide my stiff shaft into her drenching wet cunt. I can feel the damp spongy walls of her vagina clutching my cock as I watch myself moving in and out of her pussy. The way her tits shudder and tremble up and down as I pound my dick into her, and the sound of her breathless yelps of pleasure as her body jerks with orgasm...\n\nNo sir, boss. I didn't see you standing there. No, I haven't done it yet, but I'll have it in your hands by tomorrow. Goddamn it, I don't know he sneaks up on me like that. Yes sir, undoubtedly. Absolutely. Shit, I don't know if I closed the computer window in time, I hope he didn't see anything. \n\nI pull up another video, this time she's handcuffed and I am fucking her from behind. The footage is grainy and her face is obscured with the blindfold and gag ball in her mouth, but I can tell by her high-pitched gasps that she is loving the way I am grabbing her hips and shoving my cock into her cunt. Her breasts are shaking, and the clamps attached to her erect nipples are rocking randomly as I continue pummeling her...\n\nJesus Christ, why is my boss back here AGAIN? Yes, yes I will get right on that as well, sir. Mmmm hmmm. No problem. I'd be worried about getting a pink slip except, one, he doesn't have a fucking clue how to do this job and two, he's probably somewhere jerking off to any video footage he did actually see.\n\nSuddenly I realize it's after 5 o'clock, so I grab all my belongings and run out the door. Shit, tonight's the night and I didn't want to screw it up. I run several blocks down the street and into a tiny little bar on the corner called The Brew House. I scan the entire place while panting, thank my lucky stars, and take up a seat at the bar. There are less than a dozen people in the place, so there's plenty of room at the bar, just as I'd hoped. I order a dark and tan beer, pull out a book from my briefcase, and turn to the bookmarked page where I had left off.\n\nJust as I do, she walks in. She is dressed in burgundy turtleneck with a peppered grey jacket and matching skirt that goes down to just below her knees. Her hair is pulled back and the frame of glasses she has on is not too thick. She is dressed professionally revealing no skin above her shins, but no professional suit can hide her magnificent curves and beautiful breasts. I crane my head to look at this gorgeous woman, and I can tell that most every male in the place is doing the same thing and the look on our collective faces makes me think we are all probably having simultaneous fantasies of her as the sexiest librarian or teacher ever to pick up a dictionary. She peers over her glasses and for a moment, I feel like I can't breathe as I sneak a peek into Tasha's eyes. Without noticing me, she sits at the bar three seats away from me. She asks the bartender if the Malbec is from Mendoza, and when he says no, she orders a glass of chilled Sauvignon Blanc instead.\n\nAfter a few minutes, I clear my throat and say, \"Hi, my name is John.\" She looks at me indifferently, and I can tell that she's used to having men approach her wherever she goes and she is beyond tired of it.\n\nBut she politely smiles at me and says, \"Tasha.\" As she sips her wine again, she notices my book. \"You're reading The Brothers Karamazov?\"\n\n\"Yeah, sometimes I'm in the mood for something a little Dosteovsky-ish, y'know?\" I said holding the book up for her to see. I look at her for any change in her expression, but she nodded approvingly. So I guess her hypnotic codeword is gone for good, just as I'd hoped. \"And this is one of those books I always wanted to read and never did.\"\n\nShe nodded again, \"Well, it certainly is a classic. The Grand Inquisitor is one of my favorite chapters in all of literature.\" I nod at her, but I'm not following, which apparently she sees. \"'Without God all is permissible?'\" Good Lord, she can quote parts of the book from memory? I knew she was smarter than the na\u00efve simpleton she was a couple weeks ago, but a woman who can literally quote Dostoevsky off the top of her head may be out of my league. Of course, someone who can quote a Garfield cartoon from memory is probably out of my league as well.\n\nI sheepishly smile, \"I'm only about 20 pages into it,\" which is true. It's also true it's taken me a week and a half to make it that far, but I didn't mention that part.\n\nShe nodded, \"Well, I'm sure you'll find it gratifying.\" And she turned back to her wine. This is the part where in the past I would really lay on the charm, talk to her about how gorgeous she is, and how interested I was in her. And by that, I mean how interested I was in getting her into bed. \n\nThis time, though, I thought I'd take less of a can-I-get-in-your-pants approach and try a more talking-to-her-like-a-civilized-human-being approach. \"So have you been here before? I mean, this bar?\" Shit, why don't I just give her the clich\u00e9 come-here-often line, asswipe? She gives me a look as though she's ready to roll her eyes at yet another come on line by yet another male asshole at yet another bar. \n\nBut I guess she decided my line was harmless enough. \"No, I've never really noticed this place before. I just... wanted to come here this evening for some reason.\" She stared at her glass of wine as if searching for the answer, but it's one I already knew. When I took away Tasha's hypnosis two weeks ago and restored her back to herself, there were two other commands I whispered to her. The first was to have her come to this bar at this time on this day. I wanted to give her a couple of weeks to herself, but I just couldn't bear going through the rest of my life without at least trying one more time to get to know her. And I mean know HER her, not the hypnotically-induced, gullible, sex-crazed, bondage-fetish woman I knew. Although truth be known, I am REALLY going to miss that Tasha.\n\nOk, this conversation isn't taking off very well. Might as well go for it. I take a swallow of my beer and summon up the nerve to say, \"Look, I'm sure you get asked out all the time and I'm sorry if I'm intruding, but I was hoping maybe you'd like to go grab a bite to eat somewhere.\"\n\nShe gave me a once-over and her expression had all the earmarks of a no-way-in-hell response, to which I am way too used to seeing and I know I actually deserve. Even so, my heart sank when her face unconsciously sneered at me. But then she looked me over yet again and said, \"Do I know you?\"\n\nOh shit, I hope her memory isn't returning. \"I don't think so,\" and I take a few more sips of beer. And by that I mean I just about down the whole glass.\n\nShe's still scrutinizing me, \"Because something about you seems very familiar.\" Shit, this was a bad fucking idea. I thought two weeks would be enough time to forget me, my face, and everything else. What the hell was I thinking? Ok, don't panic, just act natural. Say something witty and clever.\n\nI smile and say, \"Maybe we were just meant to be.\" THAT's witty and clever? Are you fucking kidding me? The instant the words escaped my lips, I regretted them. God, what a stupid-ass thing to say. She turned back towards her wine. Fuck, she is totally losing interest. Quick, think of some good bullshit you can use to... no, don't. Tell her the truth. \"I'm sorry, I'm not very good at starting conversations with new people. I'm a little nervous. But you seem like a nice person and I would like to take you out.\"\n\nShe looked at me again with a softer, more understanding expression and then laughed at herself, \"I'm sorry, I don't mean to be rude. I just haven't felt like myself for a while, so I'm somewhat... I don't know, skittish or something.\"\n\nGod, I haven't heard the sound of her laughter in weeks, and I had to restrain myself from falling apart right then and there. \"I guess I'm not the only guy who's hit on you in a bar.\"\n\n\"No. I mean, yes other guys have hit on me, but it's not you. I'm just...\" She looked back at the moving light and dark patterns in her wine. Then she stared right at me, \"It's like I've woken up from a really bizarre dream and I don't... I don't trust anything right now. Especially myself. I know I've been busy doing things, but I can't... quite... I'm sorry, I don't mean to come across like an institutionalized mental case.\" She put the glass of wine to those perfect, luscious lips of hers and took a sip.\n\nI looked at her reassuringly. \"No, it makes perfect sense.\"\n\nShe jerked her head back towards me incredulously, \"Really?\"\n\n\"Ok, no it doesn't,\" which made her laugh again. Shit, that laugh is like a buzzsaw to my heart because I have missed it so much. \"But I'd like to hear more about it.\"\n\n\"Look, I...\" I can tell, she's going to shoot me down. Something in her body language suggested that all her insecurities and mistrustfulness of reality were weighing her down, and the last thing she needed was going out with some stranger she met at a bar. And after all the shit she's been put through by me and Brittney and every other asshole who took advantage of her, I don't blame her one bit for feeling that way. \n\nBut just as she opens her mouth to speak, she looks at me again as if she were trying to stare completely at, around, and through me. Her eyes penetrate my entire self as if she were on the cusp of remembering something. I would like to think that somewhere buried in the depths of her brain is a memory of some feeling for me that knows that for all my flaws I did eventually do the right thing, that out of everyone who manipulated and used her I was the one who actually loved her. That's what I want to believe as I saw one corner of her mouth curve into a smirk, \"I suppose someone with a predilection to read Dostoevsky can't be all bad.\" I smile, not having any fucking clue what predilection means, but I assume it's good. She gives me another hard stare, and I swear my hormonal glands melt into liquefied... whatever hormonal glands are made of whenever she looks at me. She asks one more time, \"Are you sure we haven't met before?\"\n\nI respond with a less-than-truthful, \"I think I would remember you.\" She smiled warmly at the gentle compliment, but I swore to myself I would do my damndest to make that the last lie I ever told her. \n\nAnd that is how I managed to start over with Tasha. I have no idea what she's really like or what's going to happen next. But at least this time I'll get a chance to know the real her. And I'm hoping that maybe I'll be the real me with her. Not the old me that didn't give a shit about anyone but himself, but be that person who had once looked into the eyes of another human being and felt a humbling, amazing love for someone else. \n\nBut let's face it, we all know that I'm going to be a selfish asshole prick at some point or another. It's going to happen, I know it, you know it, my mailman's first cousin knows it, we all know it. And when that happens, that's where the second command I implanted in her comes in. And because there is no doubt in anyone's mind that sooner or later I am going to royally fuck up, that's why I placed a new hypnotic command codeword in her. No, I'm not going to change her personality like Brittney did, I just need a safety net to get past those inevitable moments where I'm a complete brain-damaged imbecile. And let me tell you, I don't want to brag about how incredibly brilliant I am, but I have picked the perfect codeword. It's a codeword that no one, and I mean NO one, will ever guess or accidentally stumble into. You want to know what it is?\n\nYeah, fuck you, I'm not telling you shit. Go find your own perfect woman of your dreams. I think I've found mine. \n\nThe End\n\nAnd that truly, honestly is the end for this story. I hope you all liked it, and thank you to everyone who commented and rated on these chapters. I've been working on another long story, but I'll probably end up breaking it into two parts. It won't be a humor story, so it'll be over in the Nonconsent/Reluctance section, called \"Guess,\" and I'll probably finish that up in the next month or two. I've also been outlining a 10-part SciFi story, but I'll give more details later as they become available. Thanks again!  "
    ],
    "authorname": "bobrobertson",
    "tags": [
        "bra",
        "lingerie",
        "breasts",
        "tits",
        "bondage",
        "fetish",
        "hypnosis"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-bra-salesman-epilogue"
}