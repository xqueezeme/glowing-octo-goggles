{
    "title": "Quaranteam Ch. 16-19",
    "pages": [
        "Chapter 16\n\nThe day of the party felt like it came much faster than it should've. While everyone had a few days to prepare, they all felt like they were struggling to get their costumes together. Most hysterically, all the girls had made some sort of tacit agreement not to tell Andy what they were dressing up as for the Halloween party.\n\nThey were all a little surprised he wasn't dressing up as the Druid Gunslinger himself, but they seemed okay with it. He told them he'd done the gear next year, but he'd literally worn the costume last year, and despite all the changes they'd been through over the past several months, he didn't want to do it two years in a row. While none of the girls may have seen him in it, he knew that both Eric and Phil would've given him an endless amount of shit for it.\n\nHe loved vintage sci-fi costumes, so for this year, he'd decided to be Logan from Logan's Run, the 1976 film he'd adored growing up. It was a relatively simple costume, a black turtleneck with white trim and a large white stripe over the chest, as well as a blinking red palm flower crystal. When he'd done the costume as a teenager, he'd had to use a bike light, which took over so much of his hand, but now he could achieve the same effect with a simple LED light attached to a battery. It was much more convenient.\n\nA few hours before the party was to start, Andy was banned from entering his own bedroom as the girls had set up a sort of base camp there, working on all their costumes away from his prying eyes. The staff had decided to dress up as Clue characters, so Nicolette was back in her Yvette costume, Jenny R. was dressed as the cook (from the movie, not the board game) and Katie was dressed as Mrs. White. They had been a little surprised that they were invited to the party once the food was laid out, but Andy had been adamant that he wanted them to feel like members of the family as much as staff. He was glad to see they accepted that without too much of a fuss, although Jenny was insistent that she and Nicolette would be tending to the food all night, even while they were mingling.\n\nSurprising no one, none of the girls who weren't staff were ready by the time the first guests showed up. Andy wasn't shocked that it was Eric who arrived first, along with his whole group. Eric was dressed as Han Solo, with Lily as Princess Leia, Jenny C. as Luke Skywalker, Sarah as Chewbacca, and two other girls who'd recently joined his family - Lara, a tall, statuesque blonde, and Nikki, a tiny little plump brunette - were dressed as C3-P0 and R2-D2 accordingly.\n\nPhil and his family arrived next. They were all dressed up as characters from the video game Street Fighter, with Phil as Ryu, Audrey as Chun Li, Linda as Cammy, Tamika as Poison and a new girl named Yuko, who was dressed as Sakura.\n\nAndy, much like both Phil and Eric, had never been big on large social gatherings, but this felt entirely different. Perhaps they'd been so starved for company, or perhaps they'd been trying to make sense of the new normal for so long, it was nice to have a touch of the old normal, even if it was only a shadow of how it used to be.\n\nDressed all in costume, the boys sat down to play poker.\n\nAfter Phil showed up, Andy's girls descended down the staircase and made a grand entry for themselves. Aisling had dressed up as Amy Adams' portrayal of Lois Lane from the Superman movies, in a white open shirt with a black vest, her hair done up in a smart ponytail, a black lanyard hanging around her neck that said \"Daily Planet.\" Lauren had dressed up as the Black Canary, from the Green Arrow comic books, a leather jacket she'd stolen from his closet, a black leotard and ripped black fishnets that Andy couldn't deny made her pop even more.\n\nThe biggest surprise, however, was Niko. It took him a few seconds to realize what she was dressed as, and as soon as he did, his jaw nearly dropped to the floor. She was dressed in a white lab coat, with her hair up in a bun, held in place with chopsticks. Beneath it, she wore a deep purple shirt. It all looked vaguely familiar, but then she turned her head and it all clicked as soon as he saw that coloration done to her hair. While most of her hair was still jet black, on the right side, there was a blue stripe, followed by a violet stripe, and his heart stopped a beat. She was dressed as Doctor Erika Shirow, the coroner who often worked with the Druid Gunslinger in his novels. Around her neck hung a pendant of a celtic cross, exactly as he'd described it in the most recent novel.\n\nShirow had been a regular recurring character, but she was easily what fans would've called \"a deep cut.\" When he'd first introduced her in the second book, he suspected she was a character he would come back to, but hadn't planned her to have much impact on the overarching storyline he had in mind. Now, some nine books into the series, she'd actually appeared in more of them than any other character other than Dale Sexton, the titular Druid Gunslinger. Most of the time, she usually only appeared in a chapter or two, but now, seeing Niko dressed as her, he wondered if he'd been subconsciously building a relationship between Dale and Erika over the course of the novels. He made a mental note to ask Niko about it later.\n\nThe girls wandered into the room and took their time showing off their costumes for everyone, but as soon as they did, Niko moved over to slide down into Andy's lap, sliding an arm around him. \"You like?\" she asked him, a mischievous smile on her lips.\n\n\"No, I absolutely hate it,\" he laughed, sticking his tongue out at her. \"You look stunning. You all look stunning.\"\n\n\"Lauren worried she was too tall to pull off the Black Canary, but I told her that in those fishnets, you wouldn't give a fuck.\"\n\n\"You would absolutely be right.\"\n\nNiko gestured for him to tip up his hole cards so she could look at them, which he did, and then tipped them back down. \"Looks like you're doing well.\"\n\n\"Ah, we're mostly playing for fun,\" Eric said.\n\nNiko winked over in his direction. \"Sure. That's why your chip stack is so utterly small.\"\n\n\"Absolutely,\" Lily said, moving to stand behind Eric. \"And it certainly isn't because my man has no poker face whatsoever.\"\n\nAudrey moved to stand behind Phil. \"Phil's usually pretty good at poker, though,\" she said, kissing his cheek. \"Although I heard Andy's always been better.\"\n\nAndy shrugged. \"I'm not bad. I mean, I wouldn't drop ten K of my own money to enter the World Series of Poker, but I usually come out at least a little bit ahead at poker nights.\"\n\n\"Go easy on them then, I guess, Andy. How high are the stakes?\" Niko asked, clearly wiggling her ass in his lap, trying to distract him off his game. \"Are we rich yet?\"\n\nAndy cocked his head to one side, mocking a frown upon his face. \"Have you missed the mansion we now live in?\"\n\n\"Sure, but that's not *money* money,\" she teased. \"What're you playing for?\"\n\nEric laughed. \"Big, big money.\" He looked left, looked right, then leaned forward, putting his hand over one side of his mouth, stage whispering to her. \"Twenty dollars is the buy in.\" He widened his eyes and nodded in her direction, like it was his life savings they were talking about.\n\nNiko rolled her eyes. \"Forget what I said about going easy on them. Take them for everything they're worth.\"\n\n\"Oh, and the loser has to buy dinner for the next game night,\" Phil said. \"Or, at least, they used to have to, but that was before we all got our own private staff.\"\n\n\"I can't remember the last time Andy bought dinner,\" Eric grumbled.\n\n\"I don't know that he ever has,\" Phil sighed. \"I think it's all the rest of us just passing the buck around.\"\n\nThe doorbell rang, and Niko slid off his lap. \"Who else are we expecting?\"\n\nPhil rolled his eyes upward in thought. \"Ari and his family are coming. Jenna's hooked up with some guy named Gary, so they said they'd stop by. Mel told me he couldn't make it this time, but would try and catch us for the next get together.\"\n\n\"I'll go see who it is.\"\n\nNiko headed to the door and Andy could hear from outside the door as soon as she opened it a chorus of children shouting \"TRICK OR TREAT!\" They'd just resolved the hand, so all the guys got up and headed to the door to see five children, all dressed up in Minecraft costumes, holding out buckets, into which Niko graciously dropped a couple of candies each. There was a woman standing behind the children, back at the foot of the walkway up to the house, waving at them. It wasn't anyone that any of them recognized, but Andy was glad to see the children weren't out by themselves.\n\nFor the next hour or so, every ring of the doorbell would bring either another gaggle of children, or another of the group's mutual friends, until the house felt like a booming party. The parade of trick or treating children eventually slowed, and it was almost ten pm when the doorbell rang again. Andy went to answer the door, holding the pot of candies, and as soon as he opened the door, he tensed up a little, even as he heard the shout of \"TRICK OR TREAT!\"\n\nThere were only two children standing there, a girl dressed as Hermione from Harry Potter, and a slightly older boy, dressed as Draco Malfoy. But the children weren't the problem. Behind them stood Arthur Robert Covington the Fourth, dressed as Napoleon. Andy had to mentally tell himself not to curl his hand into a fist.\n\n\"Ah, Andrew!\" Covington said. \"So this is where you live. I did wonder which of the open houses they'd assigned you to.\"\n\nAndy dropped candies into the outstretched bags of the two children. They shouldn't be punished for what an ass their father was. \"Yes. Well. Here we are.\" He couldn't wait to get this horrific man as far from his home as possible. Covington practically oozed oil everywhere he went.\n\n\"Children, go meet up with your mother. Daddy needs to talk to his friend here for a moment.\"\n\nBy this point, Niko had made her way to the door, just in time to see the children skipping down the walkway to their mother, who was dressed in Liza Minelli's outfit from Cabaret. \"Andy, it's not polite to keep your guests waiting,\" she said, sliding an arm around his waist, trying to help him extricate himself from this situation.\n\n\"This won't take but a moment, miss,\" Covington said to her. \"I'm meant to understand from one of my women that you're something of a card player. That's of interest to me, because I hold a card game every so often, when we're expecting new partners to arrive.\"\n\nAndy was about to interrupt him, but Niko pinched him just a little, and he glanced in her direction. The look on her face told him to remain quiet, so he turned his attention back to Covington.\n\n\"I'm sort of 'in the know,' you might say, so I know that on Monday, most of us are going to get new women arriving. The way the card game works is that none of us men imprint our newest women on that day, but instead use them as stakes in our little card game on that evening. Each woman is staked in at 50k, and at the end of the night, the person with the most money in their pot gets to spend their winnings to buy as many of the women from the pool as they can afford. The person who comes in second gets to do the same, then the third, the fourth and then the fifth, or last place, gets whatever's left over. Or, rather, whoever, I suppose,\" Covington smiled wolfishly. \"It adds a little sport to all of it, and makes the game really something worth playing for.\"\n\nAndy desperately wanted to say something, but Niko was squeezing on his hip, urging him to keep his comments short. \"And why are you telling me all this?\"\n\n\"Well,\" Covington said with a condescending smile. \"Usually we have a set group of participants, but one of our regulars had to drop out this week, as one of his incoming women is a woman of some clout, who wouldn't stand for being traded as such. Normally we don't care what women think, but this woman has, let us say, enough political clout to make disrupting her placement more trouble than it is worth. So we find ourselves with an opening for this week and this week only, and since I happen to know that you, like all the other participants in the game, will be having two women delivered on Monday, I thought I would invite you to come play in our little game. You simply tell the women who arrive on Monday that you think there may have been some error in who they've been delivered to, and after Monday night, it'll all work itself out.\"\n\n\"Every player still gets a woman at the end of the night?\" Niko asked, much to Andy's surprise.\n\n\"That entirely depends on how each player does,\" Covington sniffed. \"If someone is completely wiped out, they are at the mercy of the other players. Now, while usually there is some woman that the winners don't have an interest in, there have been occasions in which the pot has been split by two or three winners, and a couple of men have gone home entirely empty handed. But surely you aren't scared of such a thing, are you Andrew?\" The man was clearly trying to goad him into it.\n\n\"He'll do it,\" Niko quickly said before Andy even knew what was happening. \"I'm guessing you heard Andy was a good card player from Rachel, so just have her give me your address on Monday at work, and I'll pass it on to Andy. What time does the game start?\"\n\n\"Tally ho,\" Covington said with a smile. \"While I'm generally not eager to see a woman taking initiative, in this case I will make an exception. The game begins at 7pm and we are usually done before ten, although some nights have gone as long as midnight. Remember, no imprinting of your new women on Monday, otherwise you're only harming them and yourself. Pip pip. See you then, old sport!\"\n\nNiko closed the door, and Andy realized he had barely spoken at all to the man, with Niko doing all of the talking. \"C'mere,\" Niko said to him, pulling him from the hallway towards his study, both of them stepping into the room, closing the door behind them, Niko even going so far as to lock it.\n\nThe study was where Andy came to focus purely on his writing, a room mostly filled with bookcases, but also had a couch, a desk and a very high end gaming chair to sit in while he wrote. Most of the time, Andy had been happy to work in one of the living rooms with Aisling on the other end of the couch, but there had been days where he'd just wanted to focus on writing and had holed up inside of here to focus.\n\n\"Niko, what the actual *fuck*?\" Andy asked, as she pushed him to sit down on the couch, before sitting down with him, facing him. \"What the fuck was all that about?\"\n\n\"Andy, stop being modest for a minute. How good a poker player are you?\"\n\nAndy's eyes widened and he raised his hands, spreading them palms up. \"Uh, pretty good, I guess, but I don't like the idea of playing with people as fucking collateral! What is going on?\"\n\n\"Look, I know who he's getting delivered on Monday. My job at the Air Force is provide security for the people working on the vaccination and inoculation projects, and there's no way I'm letting him get these particular women, so you have to take him to the fucking cleaners.\"\n\n\"Niko...\"\n\n\"Andy,\" Niko said, her face scrunching up, almost as if she was ready to cry. \"That fucking prick is going to get the doctor who took care of me when I was first injected, Dr. Charlotte Varma. She's a good woman who lost her husband in March, as one of the first casualties of this fucking disease. She's smart, capable and deserves better than that fucking asshole.\"\n\n\"But Niko...\"\n\n\"Covington knows people around here, and his little game is being overlooked by everyone in authority. The fucking bastard's practically got tacit approval because the fucking Mayor is one of the people who comes to his poker night.\"\n\n\"Jesus.\"\n\n\"That's not even the worst of it.\"\n\nAndy narrowed his eyes. \"Tell me.\"\n\n\"It's not just Dr. Varma that Covington's getting. It's also Dr. Varma's eighteen year old daughter Asha.\" Andy was about to speak, when Niko suddenly clutched his arm frantically. \"I know! I know what you're going to say!\"\n\n\"Niko, that's half my fucking age! That's too young!\"\n\n\"I don't care, Andy,\" Niko said, her strong grip clinging to his forearm. \"I am not letting that prick get his claws into the woman who saved my life, or her fucking daughter, so if she's got to be bound to somebody, she's going to be bound to you, because you are a good man, and you aren't going to do the kinds of sick and twisted shit that Covington would.\"\n\nAndy scowled. \"Dare I even ask?\"\n\nNiko frowned, looking down. \"He likes to ensure he gets mothers and daughters, or sisters, and then have them go at each other while he watches. And that's the least disgusting thing I can tell you I've heard about him.\"\n\nAndy inhaled a deep breath and then let out a long sigh. \"This is really important to you, isn't it?\"\n\n\"I swear to you, I wouldn't ask otherwise, Andy. Dr. Varma's a good woman. A *good* woman, who's still mourning the loss of her husband, of Asha's father.\" She leaned her head down and kissed his hand. \"If you want me to beg, I will, but you can't let that asshole get his fucking claws on my friend and her daughter. Please, Andy. Don't let him.\"\n\nAndy brought his hand up and rubbed his forehead. \"This is a lot of fucking pressure to put on a goddamn game of poker, Niko.\"\n\n\"I know, Andy, I know,\" she said, her cheeks starting to line with tears. \"And I should've told you I knew this might happen. When I found out that Dr. Varma was going to be sent to Covington, I went to work.\"\n\n\"What does *that* mean?\"\n\n\"I convinced one of the girls I work with that her man was going to get a prominent political figure for a new partner.\"\n\n\"She isn't?\"\n\n\"She is, but this little cabal of theirs wouldn't have known that in advance if I hadn't told them. So she told her man, and he dropped out of the game. As soon as that happened, Rachel, one of Covington's partners who also works at the lab on the base, began asking around if anyone was paired up with a man who played poker.\"\n\n\"And you volunteered me.\"\n\n\"You've always seemed so good when we played strip poker, so I hoped that would be enough!\" she said, a frayed desperation in her voice. \"And there was another girl whose man played poker, so it was like a fifty-fifty chance he was going to ask you to fill in. I didn't want to say anything in case it didn't happen. Please don't be mad at me. I swear to you, Andy, I'm trying to save my friend here, and my motives are pure.\"\n\n\"So you know who's already showing up for me on Monday?\"\n\n\"I do,\" Niko said. \"But you're good enough at poker that you'll be able to keep them too. Rachel says they're mostly shitty card players, except for Covington, who's pretty good. But you're more than pretty good, right?\" Andy didn't answer, so Niko asked again. \"Right?\"\n\n\"When it's a couple hundred bucks on the line, sure, but we're talking about *people* here, Niko!\"\n\n\"Look, all I care about is you running Covington into the ground. If you can get Dr. Varma and her daughter into our house, all the better, but you have to make sure he doesn't get them.\" Niko frowned again. \"I've talked to Rachel a bit about her life with him, and it's not good, Andy, but she's locked in, and Dr. Varma... Charlotte... she's not locked into that, and neither is her daughter Asha, and all I'm asking is that you try.\"\n\nThe two of them sat in silence for a moment, Niko trying to stop herself from crying and Andy trying to see a way through this maze of horrible.\n\n\"You're mad at me, aren't you?\" she finally asked him.\n\nHe sighed and leaned back on the couch, pulling her to him, wrapping his arms around her, settling her body against his. \"I'm not mad at you, Niko. I wish you'd told me about this in advance, but you're right. If you've got a friend who apparently did this much for you, you can't let her go into Covington's fucked up family without a fight. I'm just worried I'm going to let you down.\"",
        "Niko turned and tilted his head down, kissing him hard. \"Andy Rook, you are the strongest fucking human I've ever met. You just trying is worth a thousand people doing, and if you come back and tell me you couldn't get it done, then I won't be mad and I won't bring it up again, because then it just wasn't possible. All I wanted was for you to try.\"\n\nAndy chuckled a little. \"Am I going to like the women showing up here on Monday?\"\n\n\"They're both okay, I guess. One of them's a blonde woman from Kansas named Sheridan and the other's a brunette named Teri. I think you'd like Sheridan, but I don't know that you'd care one way or another about Teri. I mean, they're both gorgeous, but Teri seemed a bit too ditzy to be your type.\" Niko giggled a little. \"I think you'd probably enjoy playing with Sheridan, though. She's *flexible* and I don't say that lightly.\"\n\n\"Oh?\" Andy said, arching an eyebrow. \"And how would you know this?\"\n\n\"She's a dance instructor who used to be a gymnast in Cirque Du Soleil down in Vegas for a while,\" Niko said. \"When she was bored waiting for her injection, she was showing off how she could put her ankles behind her head, or bend completely around the other way to stand on her own head. I mean, what guy wouldn't want a girl that bendy?\"\n\n\"I mean, that does sound like fun,\" Andy said with a smile. \"But if you don't think Teri's my type, why are they pairing her up with me?\"\n\n\"Oh she's wealthy enough that they let her pick her own man, and for whatever reason, she picked you. I dunno why. I tried asking, but she didn't answer me. Maybe she'll tell you when she shows up.\" She squeezed his arm. \"Thank you, Andy. I'm glad you're not mad. We should probably get back to the party, though.\"\n\n\"Yeah, okay. Do me a favor, though, and go check on Taylor, would you? I'm glad we aren't showing her off naked in a collar in front of everyone, but I'm sure it sucks for her to be locked in a room upstairs while she hears all this party going on.\"\n\n\"You're going to have to imprint her tomorrow, Andy,\" Niko said with a little giggle. \"She's starting to get a little feral, and wherever she is in the house smells like wet pussy.\"\n\n\"I suspect Lauren'll agree with you, but we still have to run it by her.\"\n\n\"Oh, I'm sure she's ready too. Besides, she wants you to go at Taylor *hard*.\"\n\n\"I hope I'm up to it,\" Andy sighed. \"You know I'm not generally a violent man, Niko.\"\n\n\"She doesn't want you violent, Andy,\" she said as she slid out of her arms and moved to her feet. \"She just wants you at your most aggressive. You haven't heard her say it, but Lauren's been telling the rest of us how we were all imprinted so softly, so she intends to make sure you *claim* Taylor, to just dominate her so much that she's in awe of you. Taylor's apparently always had a submissive streak in her, but Lauren wants you to establish total alpha dominance over her, so that she gets bonded to you something fierce.\"\n\nAndy moved to stand up as well, smoothing out his costume. \"And you think I'm capable of doing that? Of 'establishing alpha dominance' over her?\"\n\nNiko leaned up and kissed him fiercely. \"Anything you set your mind to, Andy Rook, you can do. So if you want to, I think you're utterly going to make her your little *bitch*. And you know what? I think she's gonna love it when you do.\"\n\nAndy shrugged with a coy smirk. \"Then who am I to disagree?\"\n\n\"Tomorrow, though, you mark my words, otherwise she's going to be climbing the walls.\"\n\n\"I think that's how Lauren wants her, Niko.\"\n\n\"Sure, but knowing you, you're going to come home Monday night with ten new girls, and you're going to spend all week imprinting each of them.\"\n\n\"There is no way on God's green earth I'm bringing home all of them, Niko. Hell, the idea of bringing home four at once is terrifying enough.\"\n\n\"Well, keep your mind open, babe. If you see something else you like, don't be scared to play for it.\" Niko smirked. \"And like I said, you'll see Teri and if you don't like her, it's fine to let someone else have her.\"\n\n\"You say that like you think I'm going to see someone else I want.\"\n\nNiko shrugged with a sly smile. \"I'm not gonna decide for you, but I'd like to think I've learned a lot about what you do and don't like now, and I think you may someone else in that pool you wanna take home.\"\n\n\"You gonna tell me any more than that?\"\n\n\"Where's the fun in that?\"\n\nChapter 17\n\nThe morning after any good party is generally a challenge to get up and out of bed, but thankfully, they hadn't gone too late into the evening, and so, everyone had gotten to bed at a reasonable hour. And the wonderful smell of a good, late brunch was the clincher to get everyone out of the bed.\n\nJenny had prepared an excellent morning feast for them, but timed it so that it was just before noon when she had it ready, drawing everyone downstairs, although most of the girls were in pajamas still, and Andy stuck to sweats himself.\n\nOver a combination of huevos rancheros and breakfast burritos, Niko and Andy explained to the rest of the girls about Andy's upcoming day at poker. Their reactions were much like Andy's initial impressions. Shock at first, followed by concern for the women who were supposed to be showing up on Andy's doorstep tomorrow.\n\n\"I mean,\" Andy said, in between bites of his burrito, \"it's never come up before, but I technically do have the right to refuse any woman who shows up on my doorstep. Like, for example, if had been too much of a hassle for Lauren, I could've just sent Taylor away.\"\n\n\"Which reminds me,\" Lauren said, bringing a mimosa to her lips, \"you need to imprint her today, especially if you're going to be coming home tomorrow night with a whole stable of new women.\"\n\n\"I think you girls have a lot more faith in my poker skills than I do,\" Andy sighed.\n\n\"And I think you're just being modest to set expectations,\" Niko said. \"I watched you confidently take apart those poor boys last night.\"\n\n\"I've known those guys for over a decade, Niko. They've got tells and I've had time to learn them, but you're talking about cold reading a room worth of men, most of whom I've never met.\"\n\n\"If Rachel's to be believed, most of them are crap, Andy, so the only person you've really got to worry about is Covington himself.\"\n\n\"You mean, I've only got to worry about the one guy I have to beat. Sure, no problem.\"\n\n\"Do your best, baby,\" Niko said to him, squeezing his hand. \"That's all I'm asking.\"\n\nThat hung in the air for a couple of minutes before Lauren started giggling, and Andy turned to look at her, raising an eyebrow. \"What's all that about?\"\n\n\"I was just thinking about you saying you had the right to refuse a woman delivered to you, and was trying to imagine you refusing Niko when she showed up.\"\n\n\"You know, I still don't remember showing up at all?\" Niko said. \"I'm serious. The first thing I remember is waking up in the morning sucking your cock. I mean, I remember picking your picture out, and I sort of remember the start of the drive over to the old condo, but showing up on your doorstep? Me fucking myself on top of him in the goddamn dining room? I know you told me I did all that, but I don't remember any of it.\"\n\n\"You were pretty out of it,\" Aisling said. \"But it was kinda hot, watching you just pin him down and fucking use him. He wanted to take you upstairs first, but you were too wound up to let him do that, so he had to carry you naked upstairs after he'd filled you up with your first load.\"\n\n\"I feel a little robbed that I don't get to remember that first super intense orgasm, though.\"\n\n\"If you really want to get something equivalent,\" Lauren said, \"you just need to fast from his cum for a couple of weeks. Right around the point you're starting to break, you'll get that high again, but the pain of waiting that long isn't worth if you ask me.\"\n\n\"I agree,\" Aisling said, \"but it's probably worth trying at least once, just so you can know.\"\n\nNiko shook her head. \"I remember you telling me about how it felt waiting that long, Lauren, and I don't think I have any need to inflict that much need on myself.\"\n\n\"You wait any longer to imprint Taylor,\" Aisling said, \"and she's going to be there herself. She's already having trouble keeping her head clear enough to follow the rules.\"\n\nNiko nodded over at Lauren. \"I get that you want to punish her, but she needs to get imprinted, otherwise she's not even going to remember the punishment.\"\n\nLauren giggled a little. \"I know, I know. Let's sic Andy on her after we finish brunch.\"\n\n\"I like how much my opinion is being consulted on this,\" Andy grumbled.\n\n\"Oh you know you're itching to have a go at her,\" Lauren smirked, waggling a fork in his direction. \"Just remember, one of the three holes is off limits until she's passed the month, and frankly, I don't want you firing that sex bomb of yours down her throat for her first time either.\"\n\n\"You've made it pretty clear what you want out of this, Lauren,\" Andy said. \"I won't forget.\"\n\nAfter they finished brunch, the foursome headed upstairs. Taylor had been given brunch in a bowl while they'd been eating, and she had finished all of it. When they entered the room, she looked up, but didn't move over, as she was trying to take all of her cues from them and not initiate anything on her own.\n\n\"Alright Taylor,\" Lauren said, \"it's time. Andy's going to imprint you now, so I hope you've internalized all the lessons you've witnessed over the last several days.\"\n\n\"Yes Mistress,\" Taylor said. \"May I go and make a few small preparations? Not for myself, but for the Master.\"\n\nLauren seemed to consider this for a moment, then nodded. \"Five minutes in the bathroom. We'll be out here waiting.\"\n\nTaylor moved to head into the bathroom, closing the door behind her.\n\n\"Wonder what she's doing in there,\" Aisling said, as she moved to sit in one of the big plush chairs scattered around the room.\n\nNiko grinned impishly, as she moved to recline on the couch against the wall. \"Oh, she told me she's been trying to plan as best as she can to make both Andy and Lauren happy.\"\n\n\"I'm not sure I even want to know what that means,\" Andy said, moving to sit down on the edge of the massive bed.\n\n\"I'm not sure I'd let her tell you, even if she wanted to,\" Lauren said.\n\n\"Oh, you want to try and tell me what to do, Lauren,\" Niko said, a playful smile on her lips, \"and we can see which one of us paid more attention in hand-to-hand combat classes.\"\n\n\"That sounds like fighting words,\" Lauren giggled, miming rolling up her sleeves.\n\nAndy narrowed his eyes at them. \"Don't make me bend you both over my knee and paddle your asses red.\"\n\n\"Promises promises,\" Lauren said, blowing him a kiss.\n\nJust then, Taylor opened the door and walked in from the bathroom before moving to get down on her knees in front of Andy. She had put on dark, heavy mascara and pulled her platinum blonde hair back into a solid ponytail, held with a scrunchy that looked like it could handle a bit of force. She'd also put on thigh high white stockings that looked like extra long sport socks with red rings around her thighs. It made her look sportier, and also a little bit younger.\n\n\"Your slut is ready for you to use her, Master, if you are ready.\"\n\nAndy slid from the bed and crouched down, brushing a hand along her face. \"This is your last chance to back out, Taylor.\"\n\nTaylor leaned in and whispered into his ear. \"I want this, Andy. I want to be part of your family. But my safeword is 'yeti,' if you're really worried.\" She'd said it quietly enough that he was certain none of the other girls had heard any of it.\n\n\"I like the mascara,\" Lauren said, reaching to brush a fingertip along Taylor's cheek. \"It's going to run nicely when he's skullfucking your face.\"\n\n\"Yes Mistress. I thought you might enjoy seeing that, proof that he's making me cry.\"\n\n\"Tears of joy, I hope.\"\n\nTaylor nodded. \"Joy, yes. But also from being unable to breathe. I want Master to really use his slut, to make her gag and choke and gasp for air.\"\n\n\"Good,\" Lauren said. \"I want you to get him so wound up that he can't think straight, Taylor. I want to see him actively fucking *use* you, until you're a quivering, brainless heap of well-used flesh, lying there in a goddamn puddle on the floor. You think you can handle that?\"\n\n\"For you, Mistress? I can handle anything.\" Her chin was lifted proudly, displaying that leather collar she'd been forced to wear since her arrival. \"Please, Master, may your worthless slut finally taste your cock?\"\n\nLauren put her hand on Andy's shoulder, leaning in to whisper into her mouth. \"Remember, I don't want you cumming in her mouth. Just in her ass, okay?\"\n\nThere was a tiny amount of trepidation to her voice, as if she wanted to be sure she wasn't overstepping her boundaries, so Andy simply nodded. He felt hands on his waist, and it was clear Taylor had taken the nod to be to her and not to Lauren, but Andy didn't feel the need to correct her.\n\nTaylor pulled his sweatpants and boxers down to his ankles, lifting one of his feet for him and then the other, to help him step out of them, before she finally looked at his thick dick before her bright blue eyes. \"Your little whore has been thinking about this nonstop since she got here, Master. About how she watches your girls when their eyes roll back in their heads, when their legs twitch and spasm when you fill them up. And even though she knows it's unbecoming of her,\" she said, looking down as one of her hands stroked his thick cock, \"she's been getting more and more jealous of them, of those intense feelings you evoke in them. She knows she needs to be patient and wait her turn, but sometimes, even thinking about it gets her pussy all wet, Master. May she at long last have a taste and begin her process of officially becoming yours? Please, Master? This worthless slut aspires to be better, to be more, to be... *yours*.\"\n\nThey'd been particularly careful not to let her taste any precum of his because even so much as a droplet would prime the imprinting process. It wouldn't fully start until she got her first full load of his jism, but the amount in precum was enough to get the process ready to burst. Taylor had gotten particularly close to the girls when they were playing with Andy, usually at Lauren's insistence, but in her eagerness to rub Taylor's face in it, she'd come dangerously near starting the process early.\n\nAndy was about to say that she could when Lauren reached her hand along the back of Taylor's head, grabbing the ponytail, shoving Taylor's face down onto his cock until he could feel the head of it pressing against the back of her throat, forcing its way in, even as her eyes looked up at him with adoration in them, her body literally vibrating at it, as the precum oozed from his mushroom tip into her mouth. Her eyes were fluttering, almost like they were threatening to roll back into her skull, and while she was doing her best to maintain control of herself, he could feel a bit of drool dripping down onto his balls.\n\nAfter what felt like an eternity of keeping his cock buried inside of her mouth, Lauren finally pulled Taylor back, and she gasped hungrily for air, slobbering even as her eyes were starting to water, her chest rising and falling quickly.\n\n\"Are you--\"\n\nBefore Andy could even continue the sentence, Taylor grabbed onto his hips with both hands and pulled her face back onto his dick until her nose was buried in the thatch of brown hairs at the base of his cock.\n\n\"Don't just leave her on, Andy,\" Lauren hissed at him. \"Give the little whore what she wants. Fuck that little cheating face of hers until she's a sloppy mess.\"\n\nAndy's hands grabbed onto the side of Taylor's head and pulled her face back, but just when the head of his cock was at the ring of her lips and she was inhaling another lungful of air, he shoved his dick back into her face, pushing it back against her throat once more, evoking a gurgling cough from her, as those eyes started to water hard, a single black tear running down her right cheek.\n\nHe pulled her back back and off his cock, letting her drink in another swallow of air, a wide smile on her messy lips, precum and spit dangling from them, as her tongue lashed out to try and lap it up before Andy shoved her face down once more.\n\nTaylor was doing her best to lean into Andy, but Lauren was mostly controlling the depth she could reach, using her ponytail as a leash, although Lauren seemed to be letting Andy do most of the driving for the moment, partially because Andy had been told not to cum in Taylor's mouth, and it was starting to take some effort to keep himself cooled off.\n\nShe had a talented tongue, and there was something primal and carnal about seeing his precum smeared all over the blonde's chin, drooling on herself when she had half a moment without Andy's dick in her throat.\n\n\"Whose whore are you?\" Lauren said, reaching forward to slap Taylor across the face, making that mascara run even more.\n\n\"Yours, Mistress.\"\n\n\"Wrong answer!\" Lauren shouted, slapping Taylor's other cheek, hard enough to make Andy a little nervous. \"Try again. Whose whore are you?\"\n\nTaylor swallowed a breath of air, looking up with those heavily watered icy blue eyes of hers, realizing her mistake immediately. \"His whore, Mistress. The Master's whore.\"\n\n\"That's right, you cuntrag,\" Lauren sneered. \"I'm your Mistress, but this man fucking *owns* you, if you want to live under this roof. You will deny him nothing. You will do whatever he asks of you, and you will do it gladly.\"\n\n\"Yes Mistress. Sorry Mistress.\"\n\n\"Don't apologize to me, you dumb bimbo! Apologize to him.\"\n\n\"Your worthless slut is sorry, Master. She belongs to you, and only you, and will never forget that again.\"\n\n\"You know what I think?\" Lauren said, her face a wicked angry snarl. \"I think you ought to spit into that bitch's mouth, so she knows who fucking owns her.\"\n\nTaylor visibly flinched, but leaned her head back, opening her mouth wide.\n\n\"That's it, Andy,\" Lauren goaded. \"Get a big mouthful of spit and give it to that vapid cunt.\"\n\nSpitting had never much turned Andy on, and if he was honest, he found it excessive and unneeded, but all of this was about giving Lauren some closure, so he pursed his lips together and started to summon a big mouthful of spit.\n\nJust as he was about to spit into Taylor's mouth, she turned her head suddenly and said, \"Yeti! God, I'm sorry, yeti!\"\n\nAndy turned his head and spit onto the floor, as his mind raced, trying to figure out a way to disarm the situation he knew he was about to be in. The imprinting process was already primed, so it was too late to pass Taylor off to someone else, or to send her away, but he suspected the explosion of temper that was about to erupt from Lauren was going to make all their lives living hell for a time. He turned to look at her as he started to speak, \"Now look Lauren, there's limits... to...\"\n\nThe look on Lauren's face wasn't one of anger. It was one of... amusement? He frowned and she started to giggle, and pretty soon, all the girls in the room were giggling, including Taylor at his feet. \"Sorry, Andy,\" Lauren finally said, through fits of laughter.\n\n\"I told you he'd stop if she said to,\" Aisling said. \"No matter how wronged you felt, Lauren, he wasn't gonna lose control.\"\n\n\"Damn,\" Lauren said, \"and here I figured I could get him worked up enough to push past it. Guess I owe you twenty.\"\n\n\"Excuse me, were... were you gambling over whether or not I'd take a woman against her will?\" Now Andy felt like he was the one starting to get angry.\n\n\"It was just a game, love,\" Lauren said. Andy stepped away from Taylor and over to Lauren and picked her up, no easy feat considering her height compared to his, moving over to the bed, putting her down and bending her over it before yanking down her pajama bottoms. \"What are you going to do, spank me?\"",
        "Andy welled up his rage into his right hand and brought it down onto Lauren's ass with the hardest spank he could muster.\n\n\"Ow! Jesus, Andy, that rightly stung!\" Wham! His hand clapped down again, just as hard, and he heard her groan, a weird blend of pain and excitement, her whole body shaking. \"Strewth, that hurts!\" WHAM! His hand spanked down once more, the cheek of her ass starting to redden quickly under the power of his slaps. \"Fuck Andy!\" *WHAM!* \"I'm sorry!\" *WHAM!* \"Bugger, Master, I'm fucking sorry, awlright?\" At that, Andy held his hand in the air, not slapping again, but brought his hand down softly to slowly press his fingernails against the edge of the reddened flesh, and then dragged them firmly across that handprint he'd left there, making Lauren quiver, lost somewhere between lust and fear. \"You're right you're right, okay, it was a shitty thing to do, and I'm sorry, I'm very fucking sorry. I shouldn't have made her do it.\"\n\nAndy looked back at Taylor. \"And you. I ought to just leave you like this.\"\n\nTaylor's face reddened as much as Lauren's ass. \"I'm sorry, Master. She told me to do it, and I didn't want to upset her. I do have an actual safeword, but it isn't yeti. I told Lauren what it was, though, and how I didn't think she would need to use it.\"\n\n\"And if you're punishing Lauren, Daddy, you probably need to punish all of us,\" Aisling sighed. \"I mean, I took her bet.\"\n\n\"Speak for yourself, Red,\" Niko said. \"I told you I thought it was a bad idea.\"\n\n\"Well, now we know, I guess,\" Aisling said. \"You okay, Lauren?\"\n\nLauren lifted her head up, and there was a strange look on her face. After a moment, it registered to Andy that she was more turned on that he'd ever seen her before in his life, and that included the moment when she'd been in a complete fuck daze after her sex fasting. \"That was the hottest thing that's ever happened to me,\" she moaned, struggling to not drool on herself. \"I've been trying to get you to lay into me for months, Andy, and I don't think it's much of a punishment.\" She grinned, all crazy eyed and wild. \"I'm a bad girl.\"\n\n\"Well then, you know how I'm going to punish you, Lauren?\" Andy sighed. \"I'm gonna put you away wet. You can go without a dose until the end of the week now that you're all wound up.\"\n\n\"Oh god, that's cruel, you delicious bastard,\" she purred. \"I fucking love it. But that's okay, I've earned this. And now that *you're* all wound up, it's time you take it out on Taylor.\"\n\nAndy looked from Lauren over to Taylor, who nodded enthusiastically. \"This is what I want, Andy. I want my first time to be hard, rough, fucking brutal. I don't want to be treated like 'one of the girls,' because I haven't earned that, not yet.\" She started crawling over on all fours towards him, doing her best to keep her head raised, so she could see her face while she talked. \"After the month, we can do the soft stuff. We can cuddle and lay together gently in bed and I can fall asleep in your arms, or in Lauren's. But I need to pay for my misdeeds.\"\n\nNiko and Aisling both sat up a little bit, although Andy could see that Niko had her hand down the front of her pajama bottoms, clearly rubbing her own pussy.\n\n\"This time, I'm not one of your girls, not a partner or a girlfriend or a wife or whatever you're calling them, because I'm not there yet.\" Lauren was looking over her shoulder at Taylor, not moving from her spot bend over the edge of the bed. \"You're already doing me a favor by imprinting me, when you don't know if you should yet. But I love Lauren. I love her so much it hurts to know how badly I fucked everything up. So until I can make that right, I'm a worthless fuckhole, a filthy bitch you should batter and plow and fuck within an inch of her life. I want you to drill me so hard that I can't sit down for a week.\"\n\nTaylor turned around and waggled her ass in his direction, leaning her shoulders down to make sure it was upturned, so he could get a good look at her asshole, as well as her pussy that was drenched with fuck cream.\n\n\"It's yours, Master. *I'm* yours. Your fuckdoll, your bitch, your worthless whore to pump full of spunk and leave, sore and drenched. I know you aren't going to have my cunt until after my month's punishment, but just look at that tight little asshole I have just for you.\"\n\n\"Just for you *now*,\" Lauren corrected.\n\n\"That's true, Master. You won't be my first, but you will absolutely be my last. I will be a good slut for you, loyal in every possible way. You own all of me, from my toes to my head, and you may do whatever you want with any of it.\"\n\n\"She talks a big game, doesn't she?\" Niko said with a smile.\n\n\"Whatever you want, Master, I will do. If you'd wanted to parade me naked in front of all your guests last night, I would've gladly done it. I'm not ashamed of how I screwed up before; I'm proud you're letting me make it right. You've had every chance this last week to treat me horribly, and you've never done it. So now I'm asking you, no, I'm *begging* you. Punish me. Fuck me. Claim me. Mark your territory. Make me your property. Own me. Use me, harder than you have any of your girls, because I need to learn to be better, to be worth better. But you have to accept me first.\" Taylor placed her face and shoulders down on the floor, and reached behind her to grab the well toned cheeks of her ass, pulling them apart. \"I'm all yours, sir, but you need to imprint me. Fucking take me already.\"\n\n\"You'll do anything I say, Taylor? Anything?\"\n\n\"Speak and it will be done, Master.\"\n\nAndy finally felt like he was actually in control for the first time today. \"Stand up.\"\n\n\"Sir?\"\n\n\"Don't make me say it twice,\" he growled, mostly for effect, but he could've sworn he heard Aisling moan wantonly in response to it.\n\n\"Yes sir,\" she said, placing her hands on the ground, moving onto all fours before standing up. \"Sorry sir.\" She kept her hands folded together in front of her, her eyes lowered to the floor.\n\n\"Here's what's going to happen.\" Andy saw Lauren was starting to try and shift, so he slapped her ass once more, and her hips shoved forward into the bed once more, groaning, making it clear she now understood she wasn't to move without his say so. \"Words are great and all, and I'm glad to hear you've learned how I'm turned on by dirty talk, but I'm going to give you a harder challenge. You need to convince me that you belong to me with a kiss, just one kiss.\"\n\nTaylor started to move towards him, but he raised his hand and she immediately stopped in her place. \"Is there more, sir?\"\n\n\"There is. After you convince me with a kiss, you're going to convince Lauren as well, in the same way. But you're going to put all of that sadness, all of that embarrassment, all of that shame, all of that is going to go into your kiss with her, to convince her that you understand how badly you hurt her, and how much you want to make it up to her.\"\n\n\"Now Andy--\" Lauren started to say, but as soon as he turned to look at her, the expression on his face cowed her into silence.\n\n\"After that, I'm going to fulfill my promise to Lauren, and I am going to fuck your ass so hard, it'll be sore for a week. I am going to sodomize you so hard, you'll think you've gone to prison, and you're going to have to come to terms with the fact that as soon as I cum in your ass, you are going to feel your mind being blown into a billion fragments, and every single fucking one of them will have my name stamped onto it.\" Taylor was shivering now, but Andy was almost certain it was with pure excitement. \"You are going to wake up tomorrow and feel like a completely new woman. Ash?\"\n\n\"Every single sense you have is going to be on overload tomorrow,\" Aisling said to Taylor. \"It'll be like the volume on your life is turned up to 11. Smells, sights, sounds, tastes, and touches, they'll all be in full overdrive, which means your ass is going to hurt like you didn't even believe is possible. I'm talking the kind of pain that feels like it goes down to your very soul.\"\n\n\"And you won't be able to take any drugs for it to mute the pain,\" Niko said. \"No aspirin, no ibuprofen, not even a stiff drink. That pain'll linger for a full day, and there's not a goddamn thing anyone can do to make it go away before it's ready.\"\n\n\"By Tuesday, it'll be sore, but it won't feel like it's threatening to overwhelm your body. But for all of tomorrow, you are going to fucking hurt in a way that you can't even begin to imagine. And this is your last chance to walk away from it.\"\n\nAndy knew he was actually lying at this point. Sure, he had to imprint Taylor, but he didn't have to listen to Lauren and go at her as roughly as she wanted. If he didn't, though, there would always be a rift between the two women, and that was something he didn't want either of them to suffer through, so he was doing his best to navigate down this narrow street the two women had built for him together.\n\n\"So what's your decision?\" he said to her.\n\nTaylor looked up, a steely resolve to her face, one he'd seen mirrored in Lauren's face more than once before. She stepped forward and wrapped her arms around him, pulling him down so that she could press her lips against his, and in the kiss that followed, he could feel all of those conflicting emotions battling inside of her. It was the first time they'd kissed, but it was almost like it was a new first kiss for him, like he was a young man again in his parents' basement, kissing some girl in the dark while a scary movie played on the tv.\n\nShe held the kiss for a long moment, the heat of the kiss turning up in the middle before backing down a little, so at the end he felt like she was trying to convey her shame at having cheated on Lauren. \"Was... Is that good enough, sir?\"\n\nAndy smiled a little. \"And now the other half.\"\n\nTaylor mouthed the words \"thank you\" to him, out of sight of all the others, before she turned to the bed. Lauren was starting to try and turn around again, but Andy took the palm of his hand and pushed it hard on the small of her back, keeping her pinned there, and Taylor immediately understood what he was doing. She crawled up onto the bed, her pose mimicking Lauren's, bent over the edge of the bed, although to get in line with Lauren, she had to be much further up the bed.\n\nShe looked painfully nervous, but reached and turned Lauren's face to look at her. Lauren's eyes were still pinched in anger at Taylor, up until their lips met, and Taylor kissed Lauren with everything she'd wanted to say to her for months now, holding onto her, even as Lauren tried to remain impassive and stonefaced at first, but melted shortly to the intensity of desperation that Taylor was giving to her.\n\nAs the kiss continued, Andy started to position the players the way he wanted to, pushing Taylor as he pulled on Lauren, making Lauren roll onto her back on the bed, and bringing Taylor to straddle her, the two a tangled mess of lips and tongues, Lauren's hand against the back of Taylor's head now, keeping her face mashed against her own. Aisling could see he was maneuvering them, and hopped up, grabbing a couple of pillows, sliding them beneath Lauren's head, propping her up a bit, so that when Andy pulled Taylor down some to get her in position, she could still continue making out with her.\n\nOnce he had her in place, Andy sawed his cock back and forth across Taylor's feverishly dripping snatch, feeling her ooze cream onto his thick shaft, even as she was trying to shift her hips, making it clear she still wanted to follow Lauren's rules, even now, her mind a dizzying chaos of fucknoise and lust. She reached one of her hands behind her to pull on her asscheek, forcing that pink pucker to expose itself even further.\n\nAndy lined the head of his cock up against her asshole, but then paused for a moment.\n\nThat pause made Taylor break from the kiss long enough to plead with him once more. \"Please, oh god please do it, Master. I've always been yours, your wanton fucking whore, I just didn't know it. Show me. Teach me. Fuck my ass and claim what's always been yours. Fucking take your bitch. Claim her. *Own me!*\"\n\nThat was good enough for him. He pushed his hips forward, feeling her asshole give a little more easily than his other girls had on their first time with him, and he suspected it wasn't Taylor's first time taking a man's cock in her ass. He felt no particular need to be exploring virgin territory, so it didn't bother him.\n\nAs soon as he was most of the way inside of her ass, he could feel Taylor tense up, both of her hands clutching to Lauren's face, moaning into the other woman's mouth in a loud, muffled shriek, as her body clenched up, and suddenly Andy could feel liquid splashing back off Lauren's thighs up against his balls, as Taylor began to squirt all over the Aussie.\n\nHe was tempted to ease off a bit, but Lauren had made it quite clear that the one thing he absolutely positively *wasn't* to do was to go easy on her, so he pushed forward until he was as deep as he could get, then pulled back only to punch forward again with a rough slam.\n\nLauren broke from the kiss this time so that Andy could get an earful of Taylor's whorish moans, her body covered in goosebumps. \"I think I'm fucking blind!\" Taylor whimpered. \"I've never cum so fucking hard in my fucking life oh my fucking god what the fuuuuuuck!\"\n\nThe Australain slapped Taylor across the face again, certainly less hard than before. \"What do you say, you useless fuckhole?\"\n\n\"Oh god,\" Taylor said, as Andy drew back. \"Thank you, Master! Fuck me! Fuck your needy bitch in her tight young ass until it's fucking carved in the shape of your cock! You're so fucking thick, it hurts, but your bitch loves how it hurts, so fucking rail her! Plow this bitch, *your* bitch, until she's cumming her brains out her fucking ears!\"\n\nLauren kissed her again, as Andy started to really rail her, shoving his cock hilt deep each and every time, making his balls slap against Lauren's sloppy twat that was still dripping girljizz onto his nuts. But Andy decided if they wanted him to get rough, he would oblige them.\n\nHis hand grabbed onto Taylor's ponytail and yanked her head back hard, making her spine curve back, a strangled howl of pleasure shredding the air. He couldn't see it, but he was certain each time he drilled into Taylor, her tits were making Lauren's jiggle with them. \"What are you?\" he shouted at Taylor.\n\n\"Ohgod,\" she whimpered, \"I'm yours, Master. Your bitch, your whore, your slut, your worthless fuckhole to dump cum into and leave a sodden mess on the fucking floor if you want. I'm whatever you fucking tell me I am, because that's what I fucking what to be, sir.\" Her words were mostly squealed in between brutally hard shoves of his dick into her asshole, which continued to spasm and clench around his shaft. \"Please, Daddy, let me be worthy of your cum. Your bad little bitch needs it, more than she's needed anything in her wasted life. Let her ass receive you. Oh god, your bitch wants your cum so bad it's fucking eating her away from inside! Please, Master, please, give your bitch your cum. Claim what's yours. You own this ass, this cunt, this mouth, these tits...\"\n\n\"I require more,\" Andy said, as he picked up the pace. He wasn't sure how many times Taylor had cum, but he was fairly certain it had been at least three or four.\n\n\"Name it, Master, and it's yours.\"\n\n\"I want to own that mind and that heart. Prove they belong to me. Confess.\"\n\n\"Fuck,\" Taylor whined, her mascara having smeared all across her face, turning her a hideous mess, before she kissed Lauren once more, hard and fierce, before pulling her face back, looking down into the Aussie's eyes. \"I love you, Lauren.\"\n\nLauren's eyes instantly welled up and she kissed Taylor again before pushing her back, a look of satisfaction on her face, as she kept Taylor looking at her, saying only a single word. \"And?\"\n\n\"And...\" Taylor said, trying to trail off, a wild spike of nervousness running through her veins, before she muscled up the courage to speak again. \"And I love you, Andy. Mind, body and soul, you own it all. I fucking love you, you bastard. Now please, let me, for the love of fucking god, have my fucking cum!\"\n\nOn that last word, one which Taylor was nearly shouting, Andy slotted his cock in nice and deep and finally let loose, a monster of an orgasm blasting a hot sticky load of spunk into her ass, and it was as though Taylor had just touched the face of God, a rapturous moan erupting from her until she forcibly locked lips with Lauren, the sound not stopping, only muffling some, as Taylor's sweat stained body quivered like it was having its own personal earthquake before slumping, almost deathly still, atop Lauren's form, the Aussie wrapping her arms around Taylor, stroking her hair, as the pint-sized creature began to burble the word \"imprinting\" over and over again.\n\nAndy's cock had softened and slipped from her ass, as he pulled away from them, pushing them up onto the bed, grabbing a sheet, slowly pulling it up and over the two of them.\n\n\"I don't have to stay here, Andy,\" Lauren started to say, before he waggled a finger at her.\n\n\"You're exactly where you need to be right now, Lauren. Keep our newest family member safe, while the process runs its course.\"\n\nLauren smiled at him, as if she was seeing him in a new light for the first time. \"Yes Master.\"\n\nChapter 18\n\nThe next morning, Andy woke up before anyone else. Taylor had been allowed to remain on the bed, in Lauren's arms, all night, and the two were still intertwined when Andy awoke. He suspected Niko would be up shortly, Lauren not long after that, although she might sleep a bit longer what with Taylor pressed up against her. Aisling wouldn't be up for hours.\n\nAndy had gotten decent at extracting himself from the bed, but this morning, it didn't take almost any effort at all. He grabbed some sweatpants and a t-shirt, pulled them on and then moved out of the bedroom and onto the balcony, looking out onto his driveway, just as the morning sprinklers turned on, down below him. He sighed, leaning against the railing, shaking his head.\n\n\"You're still worried,\" Niko said as she moved out onto the balcony with him. \"Worrying's not going to change anything.\" She leaned her head against his shoulder. \"Anything I can do to lighten the load?\"\n\n\"Nah,\" Andy said. \"By this time tomorrow, it'll all be done one way or another. So I'm trying not to think about it.\"\n\nThey stood together quietly for a moment, before she laughed. \"Not working, is it?\"\n\n\"Nah,\" he said, joining in the laugh with her. \"But I'll make it work.\"\n\nNiko decided to take a couple of personal days, and called in to the base, telling them she needed a few days to deal with some private matters. She didn't know when the dropoff was going to be arriving, but she figured that Andy might need some help, and wanted to be around to help him through any chaos.\n\nA few hours later, Taylor awoke and was truly in agony, her ass hurting like she'd ripped it open, so Lauren also decided to take the day off and tend to her. She wasn't actually wounded in any serious way, but as predicted, the high sensitivity of her nerves post imprinting process had all the sensations cranked up to a hundred. Andy could even see a little hint of regret in Lauren's expression before she steeled herself back up, to not let Taylor see even a moment of weakness.\n\nAisling offered to help Lauren, but Lauren insisted that Aisling just go about her normal day, so the redhead had gone down into one of the living rooms to work for the day, although she told Andy that she'd come help once the women arrived.\n\nAll the girls seemed to think Andy was walking on pins and needles, but at this point, Andy was less worried about the women arriving and more worried about the upcoming card game. He spent most of the morning watching poker videos with the hole cards covered, practicing trying to read people's expressions. He hoped it would keep his mind off things, and it mostly worked.",
        "It was just after two o'clock in the afternoon when the military truck rolled up his driveway. \"Here they come,\" he said, watching from the balcony as they started to help the two women from the back of the truck. \"Oh *fuck*. Shit. Shit shit shit shitshit*shit!*\"\n\n\"What's the problem?\" Niko asked him. She'd come to join him on the balcony when the truck had been buzzed in at the gate.\n\nThe first woman to get out of the back was the blonde Nico had described to him earlier, Sheridan, a lithe woman dressed in yoga pants and a sports bra. She stretched as she got out, folding one of her arms behind her blonde mane of hair, bending like he'd never seen before. She looked to be in her mid thirties, and certainly she was a very attractive woman. But she wasn't the problem.\n\nNo, it was the woman who got out right after her that had sent him into a tizzy.\n\n\"Shit, I thought you said the other one's name was Teri.\"\n\n\"It is,\" Niko said. \"At least that's what she told everyone. Why?\"\n\n\"Back when I dated her, she was going by Erin,\" he sighed.\n\nSure enough, the second woman looked much like she had when Andy had dated her nearly a decade ago, with a handful of notable changes. She looked older, certainly, but she'd also dyed her hair a dark chestnut brown, hiding those golden locks of hers. She also had a large tattoo on her right shoulder, which he could see through the sleeveless dress she was wearing. It was a stylized bird of paradise, and it appeared that the wings curved back under the dress along her skin. She was a little curvy, but a bit less curvy than she'd been when they'd been together.\n\n\"You dated her?\" Niko blanched visibly. \"I'm sorry, Andy, if I'd have known...\"\n\n\"No, I know you didn't know, Niko. But let's just say I won't feel bad at all about passing her on to one of the other men.\" They walked into the bedroom and headed out into the hallway, starting to head downstairs. \"I hadn't been out here long when Erin and I started dating, and we were together for a little over two years, while I was just getting started out here, working in corporate communications for eBay while I was writing the first few Druid Gunslinger novels. She hated them so much, constantly told me I was wasting my time, and that I should just focus on climbing the corporate ladder at eBay.\"\n\n\"You're fucking kidding.\"\n\n\"I wish,\" Andy said, as they walked down the stairwell. \"After that she started telling me she didn't like the way my friends treated her, which is to say they wouldn't do everything she said without question. I finally got to the point where I was so sick of her bitching at me about how I wasn't living up to her expectations that I broke up with her a week before Valentine's Day. Packed up all her shit for her and threw her out of the apartment.\"\n\n\"That's uncharacteristically cold of you, Andy.\"\n\n\"Oh yeah?\" he said, stopping walking. \"She had it coming. The place was entirely in my name, and I'd spent the better part of half a year trying to convince her to put her name down as a co-renter on the lease, and she wouldn't do it. I moved out of that apartment at the end of next month and didn't leave a forwarding address, just so the bitch couldn't find me, because she kept harassing me. I didn't just move apartments -- I moved cities. Hell, I moved whole regions of the goddamn Bay. Back when I was dating her, I was living up in El Cerrito, so I moved fifty miles south and hoped I was fucking done with her.\"\n\n\"What do you mean by harassing?\"\n\nThe doorbell rang, and it made Andy wince.\n\n\"She showed up drunk at least a dozen times. Broke into my car a few times. Broke into the old apartment once. Tried threatening my friends to find out from them where I moved to. After that failed, she tried tailing me home from work for a while, until after about a year or so, she finally left me alone.\"\n\n\"What a hot mess.\"\n\n\"That's an understatement,\" he said as they headed down the stairs. \"Yeah, let me tell you, Erin Teresa Donegal and I are over and done with, and there is no way in hell I am letting that deranged terror into this family.\"\n\n\"Ah Andy, love! There you are!\" Erin said as they reached the bottom of the stairs. \"I see you've moved up in the world since the last time we talked. I'm so excited to be joining this little family you've been given.\"\n\n\"Don't unpack, Erin,\" Andy said. \"You aren't staying.\"\n\n\"The hell I'm not!\" she said, her voice level raising to an uncomfortable volume. \"I was given the option of what man I wanted as a partner, and I chose you, so it's a done deal. No more running away from your problems anymore.\"\n\n\"I don't *have* to accept anyone sent to me, Erin, and I'm certainly not going to bring someone into my family who hates my friends and trashed my car.\"\n\n\"Oh my god, are you *still* upset about that? It happened in the past. When are you going to let it go?\"\n\n\"Considering you never paid me back for the car window or the car stereo you destroyed, I wouldn't hold your breath any time soon.\"\n\n\"Uh, are you sending me back too?\" Sheridan asked, a confused look on her face, as if she realized she was caught in the midst of a deep historical squabble. \"We haven't even met.\"\n\nAt this point, Andy remembered what he'd been told to do in the instructions from Covington, and went into the rehearsed speech. \"Look, there's a meeting in a few hours, and I can go and see what's going on. Maybe there was some kind of mixup about who was sent to who, so you can stay here for the night, but please don't unpack, at least until tomorrow when we get all this figured out. I should be back before midnight with some kind of clarity over all of this.\"\n\nWhile he was talking to the two women, Aisling had been using his cellphone to photograph the two for the sake of the poker game. Covington had made it clear that all the players needed to know what the \"prizes\" were, and so each woman was to be photographed in advance.\n\n\"There's no mistake, Andrew,\" Erin said. \"I'm exactly where I want to be.\"\n\n\"Erin, I'm not the same guy you dated a decade ago,\" he said, as Aisling handed him his phone back. \"You would not be happy here, and I certainly don't think the rest of my family would take to you very kindly.\"\n\n\"No kidding,\" Aisling said as she scowled at the woman, shaking her head. \"How could you not like his writing?\"\n\nErin sniffed in contempt at the Irish redhead. \"They're juvenile, childlike stories, and nobody's ever going to want to read them.\"\n\n\"Funny how I've sold half a million books across the series, Erin.\"\n\n\"Children have disposable income, Andrew, and while I'm sure your little stories are fleeting distractions for them, nobody remembers them after they're done with them. They don't affect anyone. They're not literature. They don't *mean* anything.\"\n\n\"Jesus,\" Niko growled, \"I'm glad he's not letting you in, otherwise I'd probably have to beat your ass until you were begging me to stop.\"\n\n\"I would like to see you try, young lady,\" Erin sneered back. She was about a decade older than Niko, but Andy would've bet on his partner over his ex.\"I've been taking self-defense classes since I was a child.\"\n\nAisling smirked and shrugged. \"Niko's in the Air Force. My money's on her.\"\n\nErin shook her head. \"I have so much work to do here, Andrew, in teaching these girls respect and--\"\n\n\"*Shut up!* For fuck's sake, will you shut up and listen for one minute in your goddamn life, you vacuous socialite? This is my house! These are *my* partners, and they belong here, which is more than I can say for you!\"\n\n\"Andrew! How dare you--\"\n\n\"Stop talking! Oh my god, do you *ever* shut up, or are you so enthralled with the sound of your own voice that the words have lost all fucking meaning? You never wanted me, you wanted what you thought you could make me *into*, but whatever docile, kowtowing toady that is, that's not me, and it's never going to be me! I'm done getting pushed around by you. So don't get fucking comfortable!\" At that, Andy stormed off, leaving Aisling and Niko to apologize to Sheridan and/or deal with Erin.\n\nAndy headed downstairs and into his office, closing the door behind him, moving to settle down at his desk, as his two cats, both of whom had been in his office, moved to claim his lap, demonstrating their affection, trying to soothe the temper of their angered master. As it usually did, the cats cleared his head and cooled him off.\n\nHe wanted to not think about it, so for the next few hours, he just focused on his writing, getting a few chapters into the next Druid Gunslinger novel, that he was currently calling \"The Dryad Always Sings Twice,\" although he wasn't in love with the title.\n\nSome time later, there was a knock at his door, and he sighed. \"It's unlocked,\" he said, hoping it wouldn't be Erin.\n\nNiko moved to enter the room, closing the door behind her as she moved in. \"You weren't kidding about that girl being a piece of work,\" she said. \"How'd you two even hook up in the first place?\"\n\n\"I mean, she's attractive, and she took an interest in me at a time when I didn't have a whole lot of self-confidence. And she wasn't entirely like this back then. The longer we were together, the more her intense desire to have complete and total control in our relationship came out.\"\n\n\"Yeah, but pretty girls make graves,\" Niko said to him, moving to wrap her arms around him from behind.\n\n\"None of you three have killed me yet. Maybe I've just gotten lucky.\"\n\n\"Or maybe you've gotten more refined in your taste since your mishap.\" She kissed him tenderly. \"Anyway, I thought I'd let you stew a bit, but it's getting time for you to head over to Covington's for the poker game. Are you ready?\"\n\nHe chuckled a little. \"Not really, but there's no time like the present.\" He saved his file and shut down his computer. \"Is she still being a pain in the ass?\"\n\n\"Nah, Ash basically quarantined them in the pool house out back after Erin demanded to see where the master bedroom was, so she could get unpacked.\"\n\n\"Like you said, quite a piece of work.\" He helped the cats off of his lap and moved to stand up before giving Niko another kiss. \"Thanks for keeping her away from me. You can imagine the hard memories seeing her brought up.\"\n\n\"No kidding. I mean, the fucking gumption on that bitch.\" She pet Muninn for a second before Andy opened the door, and she moved to walk with him. \"Anyway, I'm coming with you.\"\n\n\"Are your sure you want to? There's a chance I won't come back with your friend.\"\n\nShe nodded, as they headed down the hall, heading towards the garage. \"If you don't, I want to be with you so you know that I'm not mad at you.\" Niko pushed one of the buttons and the garage door in front of the Tesla roadster. \"Hop in, I'll drive.\"\n\nThe drive over to Covington's mansion was only about ten minutes, and at least a couple of those minutes were spent waiting at the gate for Covington's security team to let them in. There was a full checkpoint, with a couple of women in military fatigues, each of whom had a M16 at the ready.\n\nCovington's mansion was far more decadent than Andy's, and as they drove up the driveway, Andy suspected that Covington might even be the founder of the enclave that preceded New Eden, when it was just a bunch of rich fat cats living in a gated community of their own devising.\n\nThe house itself was some weird hybrid of European colonial tradition and hyper post modern industrialism, with a statue of Covington himself in the center of the circular driveway in front of the home. The statue portrayed him as a pioneer, with a child on one shoulder, and a dozen women laying around him, each reaching up to him like he was their savior.\n\n\"Oh. My. God.\" Niko muttered. \"This is *extra* extra.\"\n\n\"Even if I have to cheat,\" Andy mumbled, \"I am going to run this asshole into the ground.\"\n\nNiko immediately turned and shook her head at him. \"Don't cheat. Don't. He's caught cheaters before, and they get thrown out and lose everything.\"\n\n\"Relax,\" Andy said, \"I don't even know how I could cheat here, even if I wanted to, which I don't. We'll play a nice, fair game of poker. Any tips from your friend?\"\n\n\"The only thing she could tell me is that he has a hard time getting untilted if things start going against him.\"\n\nAndy nodded. \"That's good to know. Let's go meet the competition.\"\n\nThe two exited the car and headed up the stairs, where a blonde in a French maid's outfit opened the door for them. It was similar to the outfit Nicolette chose to wear, except here the blonde's tits were completely exposed, and the skirt was significantly shorter. Andy was certain the girl wasn't allowed to wear panties either. \"You are here for the game?\" the woman asked him, her voice accented in heavy French tones.\n\n\"I am. Andrew Rook.\"\n\nThe woman nodded. \"Staff and colleagues need to remain away from the card room, so I will escort your woman to join the rest of the chauffeurs.\" She snapped her finger and another woman, this one in a butler's outfit, except that she wore no shirt beneath the black overcoat, which left most of her breasts exposed. \"Amber will take you to meet up with the other players.\"\n\nAndy could feel Niko tense up next to him, and took her hand in his. \"I'll see you in a bit, okay?\"\n\nNiko sighed, exhaling the breath, then nodded. \"I'm just sad I won't get a chance to see your face when you see all the other stakes in play tonight,\" a sly smile on her face. \"That's a shame, but let me tell ya, I think you're gonna play your absolute best when you see what's up for grabs.\" She winked as she started to stroll away with the butler.\n\n\"This way, sir?\" the butler said to him and led him down a series of stairs. It felt a little like walking into a lair. The hallways were lined with expensive art, but there was no rhyme or reason to it, no sense of what was important or what had personal meaning. It all felt, well, dumped. Like someone was showing off what they'd acquired, but didn't really care for. In fact, the whole home felt like that. Like the owner didn't enjoy any of what he'd acquired if he wasn't rubbing it in everybody's faces. It made Andy hate him even more.\n\nEventually, the butler brought him to a lounge room with a massive LCD wall filling one entire side of the lounge. But Andy didn't look at it for more than a second, because it was time to size up the competition.\n\n\"Ah, Andrew!\" Covington said. \"There you are. I was starting to wonder when you were going to show up. I was afraid that you had chickened out.\"\n\nAndy scrunched his eyes. \"You don't know me very well, Mr. Covington--\"\n\n\"Please, Andrew, call me Artie!\" he laughed.\n\n\"Arthur then,\" Andy started. \"You don't know me very well, Arthur, but one thing you should learn early on about me is that I don't spook easily, and I certainly don't back away from a challenge if there's a reason to try and win.\"\n\n\"Well, there's definitely prizes worth winning in tonight's pool. Here, Airdrop me the pictures of your stakes and we'll look over all the possible winnings together.\"\n\nAndy paused for a moment, then pulled up his phone, sending the images over to Covington's phone. A few seconds later, the images of Sheridan and Erin joined the others on the wall, like trophies on a wall. The very presentation of it all made him sick, but he needed to look at the faces, to establish some sort of foundation to the stakes in play.\n\nHe immediately saw why Niko had been teasing him. The wall of faces was full of beautiful women, twelve in total, and both Doctor Charlotte Varma and her daughter Asha Varma were up there, although they didn't look at all how he'd imagined them. Charlotte looked European, and Asha's features were an interesting blend of European and Indian. Asha thankfully looked a little older than the 18 Andy knew she was. Both women were stunning. But they weren't the ones who caught his attention at the onset.\n\nThere were two faces on the board that he recognized immediately.\n\nOne of them was Emily Stevens, a British actress who'd co-starred in a series of films as a teenager before becoming an LA celebrity in a bunch of well-received indie films over her twenties. She still had that posh English accent, which Andy had to admit did a hell of a number on him, a blonde upper class British girl who was known to be clever and charming in interviews. Last he had heard, she was dating some rich soccer player. Andy suspected he was another casualty of the virus that had killed so many other Americans. She was a staunch feminist and Andy tried desperately not to imagine how Covington would treat her if he won.\n\nThe other face was the real star of the show, though. Sarah Washington. 31 years old. 6'2\". From New Jersey. Started out as a teenage actress on Broadway before getting a break in an ensemble movie that Andy loved and barely anyone else had seen, about a writer who suddenly realizes what he writes in his stories is coming true. She was a quirky towering redheaded actress who'd broken into the mainstream with a trio of ballet comedies before branching out. In the last several years, she'd done action films, heavy dramas and a score more comedies, some fantastic, a couple utterly terrible. She was the darling of the talk show scene, a wonderfully flirty and feisty girl next door with a flair for profanity. There was even a YouTube video entitled \"Sarah Washington Swears For Ten Minutes Straight.\" She loved to complain about how clumsy she was, and yet, also did some of her own truly elegant stunt work in her action films. There was one fight scene in \"The Cooler's Daughter\" that he had watched hundreds of times, marveling as she flipped, ducked and dodged, while throwing punches and shooting an oncoming assault of faceless goons. Sarah had a couple million Twitter followers, at least as many Instagram followers, and yet, still wasn't one of the best known actresses in the world.\n\nAndy's crush for the girl ran deep and fierce, and had for a long time. In fact, she'd held the number one slot on his Hall Pass list for the better part of a decade.\n\nAnd she was now in play.\n\nNiko hadn't been kidding when she'd said that he'd have all the reasons he could imagine to want to do well. He couldn't bear to imagine what Covington would do to all of these women, but he realized he needed to size up the rest of the competition, and thankfully, Arthur was in the process of introducing everyone.\n\n\"This is James Haunton, the mayor of New Eden,\" Covington sa-id, pointing to a large rotund man with thinning grey hair and a walrus mustache that Andrew was sure entire bowls of soup had gotten lost in. The man had soft hands and wore expensive silks, with a large bulbous nose. Andrew immediately knew he would be the first one down to the felt.\n\n\"Sir Nathaniel Watkins, the founder and head of Inner Light Investments.\" Watkins' face wasn't unfamiliar to Andy, seeing as Watkins was one of the most well-known investors in the Silicon Valley, with Inner Light having money in most of the semi-successful tech startups over the last dozen or so years. Watkins was lean and WASPy, dressed in a geeky button up blue shirt and khaki pants, which went a good distance to hide his wealth. He also had a big bushy brown beard that looked more unkempt than it should for a man with as much money as he had. He mostly just looked like any other start-up burnout. Inner Light didn't have a terrible reputation, so if Andy had to let anyone walk away with a decent chunk of the money, he decided it might be Watkins, not that the man might give him a choice. Watkins had made his money judging people's intents, so Andy marked him away as one of the people to keep an eye on the most. He, other than Covington, was likely to be Andy's biggest challenger.\n\n\"Gregor Vikovic, owner of the Quilt Real Estate Group.\" Vikovic was easily the biggest man in the room, looking more like a football linebacker in an expensive suit than a card player. He was Russian, in his mid fifties, with a great big silver bushy beard, tightly braided and pulled together. While he looked like he could tear Andy in half given a chance, he didn't seem to have much in the way of subtlety, so Andy figured he wouldn't be much to worry about.",
        "\"And this is Jake Jacobson, from the Jacobson clan that owns the AllStore chain.\" One of Andy's friends growing up had a phrase that Andy had never shaken loose - 'Never trust anyone named Jake.' Jacobson was dressed in a full suit and tie, but the suit was imported silk and probably cost more than Andy had made all of last year. Jet black hair with a pencil thin mustache, the man felt more reptilian than human, with beady eyes and a perpetual sneer on his face. The AllStore chain was notorious for underpaying its workers, avoiding unionization, denying health benefits to its employees and putting them through nearly unbearable working conditions. When one of their clerks had been trampled to death during a Black Friday sale a few years ago, AllStore had gone to court to avoid paying out a settlement, saying the employee had endangered himself by stopping to help pull up a customer who had fallen, saving her life at the cost of his own. Andy wanted to take him for all he was worth.\n\n\"Gentlemen, this is Andrew Rook, one of the newest additions to New Eden. He's a writer of some silly little fantasy series,\" Covington finished.\n\n\"I write the Druid Gunslinger books under the name Blake Conrad,\" Andy said, as the men started to gather up their things. \"They've done fairly well, and Working Title Productions has the option to make them into films.\"\n\n\"I've got some stake in Working Title,\" Watkins said, an easy going smile on his face. \"Maybe I can help give them a push through development hell. Who's your contact point over there?\"\n\n\"Now now, gentlemen,\" Covington said, \"there will be plenty of time for chit chat over the poker table. Let's head next door to the card room while I remind you all of how this works, mostly so our newcomer doesn't feel left out.\"\n\nAs they stepped into the room next door, a lavishly decorated card room awaited them, with a bar off to one side. A poker table sat in the middle of the room, six spaces around it, with a topless Hispanic woman sitting behind it, holding a deck of cards in her hands.\n\n\"Who's this?\" Andy asked.\n\n\"This is our dealer, Veronica,\" Covington said. \"So none of us have to sully our hands constantly shuffling and dealing cards.\"\n\nAndy shook his head. \"Absolutely not. We all take turns dealing individually or I'm out.\"\n\n\"Out, my dear boy? Why would you do something so foolish?\"\n\nAndy smirked, having considered this possibility before hand. Covington had caught other people cheating, but apparently no one had ever accused *him* of cheating, despite him often finishing in first or second. \"You know who has their own dealers? Casinos. You know why? Because the house never loses. You might trust her, but that's certainly no reason for the rest of us to do so.\" The woman had a Shufflemaster next to her, and Andy pointed to it. \"That handles all the hard work of shuffling. Dealing cards is easy, and we all take a turn at it. Every five hands, we rotate and someone else takes the dealer's chair. That way we know that nobody's cheating.\"\n\nCovington started to fret, but Vikovic chimed in before the man could get a sentence out. \"Da. Dealer is one of your girls, and you always seem to catch good break when you need it. I agree with new fish. We will all deal this night, see if your luck changes.\" Vikovic didn't seem like someone Covington would want to argue with.\n\nAndrew didn't know for a fact that the Veronica had cheated for Covington before, but it didn't hurt to throw people a little off their game right at the start, and Covington's winning record had people a little suspicious of him, so the man was going to do everything he could to ablate the doubt.\n\n\"Fine,\" Covington sighed. \"I suppose we can all take turns dealing then. Veronica, would you mind simply tending the bar for the evening?\"\n\n\"Yes Master,\" she said, slowly moving to get up from the poker table.\n\n\"All right gentlemen. Each of you has one hundred thousand in chips in front of you. Whites are worth a hundred, blues are worth five hundred, reds are worth a thousand and greens are worth ten thousand each. The game is No Limit Texas Hold'em.\"\n\n\"Hopefully you know this game, yes?\" Vikovic asked Andrew as they all moved to take a seat at the table, Covington opting to start in the dealer's position first.\n\n\"I've played it a few times, don't you worry,\" Andy told him.\n\nCovington continued with the rules. \"The position you go out in determines in what order you get to pick from the pool, unless you choose to rebuy in, which you can do once. If you're eliminated and don't rebuy in, you are guaranteed to take home at least one woman.\"\n\n\"Free word of advice, new fish,\" Jacobson said. \"Don't rebuy in. Learn to lose gracefully.\"\n\nAndy smirked at the man. \"Hopefully you can take your own advice.\"\n\n\"Spunky,\" Jacobson teased, an oily smile on his face. \"I like it when they fight back.\"\n\n\"First place takes five women from the pool, second take three, third takes two, fourth and fifth each take one,\" Covington said, dumping the deck into the Shufflemaster, pushing the button to let the machine randomize the cards. \"If you choose to rebuy in, you will be restaked an additional 50k in chips, but lose *that*, and you take home nothing. Any picks you would have had will go the first place winner. So if you go out in third and want to rebuy in, you'll get an additional 50k to play with, but you are giving up both of your picks to first place if you lose. Selection is obviously done in terms of priority, so the first place winner selects all of his women first, and so forth down along the line.\"\n\n\"Most of us know not to rebuy in, young man,\" Vikovic told him, \"but there are those among us who simply cannot resist one last taste at the apple.\"\n\n\"I'll have you know, I've come back from my restake games over half the time,\" Jacobson couldn't resist tossing in.\n\n\"What do you guys normally do for a payout when everyone's only got one woman to stake with?\" Andy asked.\n\n\"Everyone gets one, but obviously first place normally gets first pick of six primo broads,\" Haunton said. \"But there's always at least one person who rebuys in, so I don't think we've ever had first place go home with less than two. Tonight's a big ass pot, though, so everyone's got their game faces on.\"\n\n\"And nobody's ever gone home with a woman they've regretted taking?\"\n\nThe five men all laughed, and Covington shot him a condescending smile. \"If we do, we certainly don't let them talk any more once we get them home. I keep telling you, Andrew, you really must come around to our way of thinking.\"\n\n\"And I keep telling you, Arthur, that'll happen when hell freezes over.\"\n\n\"Alright already!\" Haunton growled. \"Enough with the jibber jabber! Shuffle up and deal!\"\n\nThe game had begun.\n\nChapter 19\n\nThe decision was made that whoever was dealing would sit out for those five hands and simply focus on the dealing. They also drew cards for seating order, lowest card dealing first, highest card starting with the big blind and the second highest being the small blind. Andy drew low card, which didn't bother him at all. It would be a chance to watch the others without having to divide his attention between his cards and his opponents.\n\n\"So I can't help but notice that you said even the last place person takes home a woman,\" Andy said as he took his seat in the dealer's chair, \"but your count doesn't have someone for sixth place. So which is it?\"\n\nWhile he started to deal cards out to the players, Covington sighed, nodding. \"I know, Andrew, I know. There is, in fact, a thirteenth girl in the pool, but I don't think anyone would want to take her over the other lovely women we have presented.\" He grabbed his phone from his pocket, tapping it to load up a picture. \"She arrived on my doorstep last week, but when I told her what was expected of being part of my house, she refused. So I locked her up and she's been stewing, but even in her sexual frenzy, she's still refusing me, so I will give her as a prize to the person who comes in last.\"\n\n\"Any woman in the pool should be in the pool, if you ask me,\" Andy said, dealing the last card.\n\nThe man passed his phone over to Andy, a photograph of her on the screen. \"If you insist, Andrew, then I suppose that will be fine. She is an athlete of some kind, and was supposed to be going to the Olympic Games, so she is quite fit, but she is extremely willful and stubborn, so she may be more trouble than she's worth.\"\n\nOnce the cards were out, Andrew picked up the man's phone and looked down at the picture, recognizing her immediately. \"Yeah, that's Piper Brown,\" Andy said. \"She's a member of the woman's volleyball team. Hell, I think she won a gold medal in the last Olympics.\" He passed the phone over to Watkins, who looked and then passed the phone down the line, so everyone could get a look at her. A muscular, toned brunette with a stern look in the photograph, it was a marked change of how she often seemed in interviews, where she seemed warm and inviting. She looked like she wanted to beat the shit out of whoever was taking the picture, and the room she was in seemed spartan at best, barely more than a closet. \"She definitely goes into the pool if you don't want her.\"\n\n\"Agreed,\" Watkins said. \"I'd likely take her over several of the other women on offer.\"\n\n\"Even with her being a pain in the ass?\" Covington asked.\n\n\"Not all of us have such draconian house rules as you, Artie.\"\n\nCovington shrugged, then glanced at his hole cards. \"Then into the pool she goes, I suppose. Check.\"\n\nThe thing about televised poker is that many viewers don't realize is that the show is almost always a collection of highlights over a longer event, and that about sixty percent of poker hands have little-to-no action, other than the two players who have blinds in the pool debating which of them has the less crappy hand.\n\nOver the first five hands, only about a few thousand in chips changed hands, and Andy's first read felt like it was going to stand. Covington and Watkins were good card players, Vikovic played loose, Jacobson played tight and Haunton was an \"any two'll do\" kind of player, who was going to throw money into the pot on pretty much any hand with his tells written large across his face.\n\nAfter the fifth hand, Andy moved from the dealer's seat to his own chair and Covington moved to sit down at the dealer's seat. His first hand out, Andy drew Jack Ten suited in hearts, so he decided to stick around in the hand, since he was already the big blind. \"Raise, one thousand.\"\n\nIt was a bet designed to scare off anyone who didn't have a decent hand, but to Andy's amusement, all four other players decided they wanted to see a flop, so everyone called him. He was a little surprised to see Jacobson staying in, but he suspected the table might just be collectively testing the new guy.\n\nWith the pot right, Covington deal out the three cards of the flop, nine of spades, seven of hearts and the queen of hearts. That gave Andy both an open ended straight draw and a flush draw, although he didn't have either the king or ace of hearts, so that made him a little nervous, but he decided he wanted to take the measure of his opponents, so he pushed another two thousand into the pot. Haunton and Jacobson both stayed in, but Watkins and Vikovic both folded, leaving three people in the game.\n\nThe next card, the turn, did absolutely nothing to the board, a 2 of clubs. Technically, Andy was holding nothing, but he felt like his odds were decent to make something out of it at the river, and he wanted to come out guns blazing. So he decided to trap, and checked. Jacobson also checked, but Haunton thought he smelled weakness, so he added another thousand to the pot, a string bet designed to just pull a little more money out of what he thought was opponents in a weak position. Andy suspected the man was holding top pair, or maybe three queens if he was lucky, but he thought that Haunton would've thrown a lot more into the pot if he'd flopped trips, so Andy called, and Jacobson decided to fold, leaving just the two of them in the pot.\n\nThe final card, the river, flopped and Andy felt the smile he was stifling behind his eyes. The King of Diamonds. He'd made his straight, and there wasn't a flush on the board. The worst he could do was split the pot. And Andy knew exactly what Haunton was going to do, so Andy simply checked.\n\nHaunton figured he had Andy on the ropes, so he pushed five thousand into the pot, and Andy smirked a little bit, and raised another five thousand in return. Haunton flinched visibly, but at this point, decided he was pot committed and clearly wanted to know whether or not Andy was bluffing, so after a minute or so of deliberation, he called.\n\n\"Straight, king high,\" Andy said, flipping over the cards.\n\nHaunton flipped over the cards, even though he didn't have to, revealing that he'd stayed in with two pair, queens and kings. \"Damn, you got me, new fish.\"\n\nThe stack of chips was pushed over in Andy's direction, and Andy nodded. He'd just taken nearly twenty percent of Haunton's stack on the first hand. It might have been too strong an opening, but sometimes you just had to play the cards as they laid.\n\nFor the next hour or so, players took turns mostly slowly redistributing the chips, although towards the end of the hour, Haunton made a very bad odds call, and went all in on two pair against Covington, who had limped into the pot and flopped trip deuces. Because Haunton had figured his two pair was rock solid, he groaned when Covington turned up his cards and took Haunton out of the game.\n\nWithout so much as missed a beat, Haunton immediately said \"Rebuy.\"\n\nA note was made and another stack of chips was brought forth and put in front of him. \"Last place tonight's like not even playing at all, so might as well give it another go. Besides, I want to at least finish third one of these nights.\" He was next in line for small blind, so counted out the amount needed.\n\n\"I wouldn't bank on that, the way you're playing,\" Andy said to him. \"You need to learn how to evaluate your hand better, and stop making such loose wagers.\"\n\n\"Shh,\" Covington said to him. \"Nobody likes being told how to play better, Andrew.\"\n\n\"Speak for yourself, Artie,\" Watkins said. \"The minute you stop moving forward, you might as well be dead. Any tips for me, Andy?\" he asked with a glimmer in his eye.\n\n\"Yeah,\" Andy said, counting out his big blind. \"Quit playing with your food so much. It's unbecoming. You had the mayor dead to rights two hands ago and everyone at the table knew it, and you still spent at least a minute's worth of all our time making a show out of it before you called him\"\n\nWatkins, who was taking a turn at dealer, chuckled. \"I see your point, although I do need to take my fun here and there when I can.\"\n\n\"Fun has no place is business or poker,\" Vikovic said, glancing at his hole cards before matching the big blind. \"I'm in.\"\n\nCovington and Jacobson stayed in, and Haunton, sensing an opportunity, raised on small blind, the value of the pot, a move Andy didn't think the mayor was capable of. All the players were sitting on decent hands, but at least half of them were hoping to go fishing, wanting to see a flop for a chance to pick up a decent sized pot. Now that the pot had grown, however, it was time to see who was going to stick around when the price went up.\n\nAndy glanced at his hole cards for the first time. When he was the big blind, he never bothered looking at his cards until the action came to him, mostly so that there was no possible way to give anything away to his opponents. He peeked at the two cards and found pocket cowboys waiting for him, two kings. So Andy matched the bet and said \"Call.\"\n\nVikovic matched the bet, to no one's surprise, as did Covington, but Jacobson folded, clearly having a questionable hand that only got more questionable with this much money in the pot. Andy put him on a low set of suited connectors, maybe a 7-8 or so. Watkins, as the dealer, was out of the hand. One of the other reasons Andy had suggested that they each take turns as dealer was that it would cut into bad streaks, giving players who were on tilt a moment to deescalate their frustrations and get their head back in the game.\n\nThe flop hit, and Andy was a little annoyed by it. Three of hearts, eight of diamonds, jack of spades. The fact that it was a rainbow flop meant that anyone hoping to get a flush was seeing their odds rapidly dwindling, needing the next two cards to be of the same suit (and to be holding two of that suit) to hit. It also wasn't great for a straight, although Andy could see Haunton or Vikovic staying in with a nine-ten suited, which would leave them sitting on an open ended straight draw. There was also the chance that one of the other men was sitting on fishhooks (a pair of jacks) and had just flopped a set, but neither Vikovic or Haunton seemed visibly excited enough to have done that. Covington was still a pain in the ass to read.\n\nHaunton decided to play it cool. \"Check.\"\n\nAndy saw no reason to turn up the heat, so he followed. \"Check.\"\n\n\"Raise 2k,\" Vikovic said.\n\n\"Call,\" said Covington.\n\n\"Call,\" said Haunton.\n\n\"Call,\" said Andy. It was a value bet, adding to the pot, but certainly not causing him to get scared, as Andy felt like he was still sitting on top hand.\n\nAll of the chips were pushed into the center, and then Watkins flipped over the turn card. \"King of Hearts.\"\n\nAndy did his best to keep his expression as neutral as possible, although on the inside, he was doing cartwheels. He'd just hit a set, and now he felt like he was definitely the best hand on the board. He wasn't first to act, though.\n\n\"Check,\" Haunton said.\n\n\"Check,\" Andy repeated. He could've bet here, but the best thing to do was to let someone else make the first stab at the pot. He suspected either Vikovic or Covington would try and push a large bet in, fronting as if they were sitting on a pair of kings, or maybe a king and a jack. Best to let them make the first move and then come in to take it from them.\n\n\"Raise 20k,\" Vikovic said. There it was. Someone clearly trying to buy the pot, hoping he could bluff strength into players who were displaying weakness.\n\n\"Fold,\" Covington said, tossing his cards to the dealer.\n\nThat brought the action to Haunton, who had literally just rebought his way into the game a few minutes ago. The mayor thought for a long moment before he pushed the entire stack forward. \"All in.\"\n\nAndy sighed for a moment, and looked again at the board, making sure he had a solid read on it. If he called Haunton and lost, the mayor would more than double up if just one player called him and lost. Vikovic had made a big push, but Andy was almost certain he couldn't *wait* to fold, just to get away from this disaster of a hand before it got worse for him. Which meant Andy would be taking in about 80k if he took down the hand.\n\nThe more he thought about it, the more certain he was that Haunton had being playing cool when he'd flopped trip jacks, and in doing so, had bought Andy enough daylight to see the king to make his own set for next to nothing.\n\nIt felt like a long wait, but eventually Andy spoke. \"Call.\"\n\n\"Too rich for me,\" Vikovic said, mucking his cards even as Andy was speaking. \"I fold.\"\n\n\"Shouldn't have tried to buy the pot,\" the mayor said, laughing as he turned over his cards. It wasn't a pair of jacks, but a jack and a king, giving him two pair. \"Two pair. Nervous yet, new fish?\"\n\nAndy smirked. \"A little, but not that much,\" he said, flipping over his pair of kings.\n\nHaunton immediately got up from the table, tossing his hands into the air. \"C'mon, you gotta be kidding me! Come on, jack! Come on, jack!\"\n\n\"Odds aren't good for you, Mr. Mayor,\" Covington said.\n\n\"Enough discussion!\" Vikovic said. \"Give us a river.\"",
        "Andy was a deadlock. Haunton was wrong. If a jack came up, he would still win the pot, as it would simply give both men a full house, and Andy's would still be better. Haunton was drawing dead, and he simply didn't see that. When the last card was flipped, it was the six of diamonds, not changing the board at all anyway.\n\n\"*FUCK!*\" the mayor shouted, before getting up from the table. \"I should've bet on the flop.\"\n\n\"It wouldn't have mattered,\" Andy said as he pulled the mound of chips his direction. \"I was still holding top pair at that point. I would've called you.\"\n\n\"Take a few minutes and go get a drink, James,\" Covington said to the mayor. \"As for the rest of you, we have ourselves a new chip leader. And thankfully, his streak will be interrupted now by a turn at the dealer's seat.\"\n\nAndy grinned. \"Sure, give me just a minute to get my chips sorted and stacked.\" All said and done, Andy was clearly well ahead, sitting on a little over 225k of the 650k chips in play. Covington was in second, with 145k, Watkins in third at 120k, Jacobson at 90k and Vikovic at the bottom with 70k.\n\nOver the next five hands, Covington did very well for himself, knocking out Vikovic, who rebought in, bringing the chip pool up to 700k, moving himself within spitting distance of Andy's pool. And just after Vikovic bought back in, it was time to change dealers again, and Andy moved out of the dealer's seat, and Covington moved to take it.\n\n\"I thought you said not to buy back, Vikovic,\" Andy said, moving back to his stack of chips.\n\n\"It's what you call a value bet, yes?\" Vikovic said. \"In fifth place, I would simply have one woman. I can get one woman. And last pick is of no desire to anyone. So if I go home empty handed tonight? Is okay. I take my stab at glory.\"\n\nTwo hands later, Andy made a big bluff and got caught with his hand in the cookie jar, costing him 40k, but he immediately turned it around, and the following hand busted Jacobson out. Jacobson declined to rebuy, happy to go home with someone rather than empty handed.\n\nOn Covington's last hand as dealer, Vikovic decided to make a last stand, and Watkins called him on it, knocking Vikovic out in fourth.\n\n\"With only three of us left in the game, might I make a suggestion?\" Covington said. \"At this point, I think we should simply rotate between the three eliminated players as dealers, while the three of us remain in the game at all times. Is that acceptable to everyone?\"\n\n\"Sure,\" Watkin said, \"the more action the better.\"\n\nThe mayor sighed, bringing his glass of scotch over to the dealer's chair, sitting down. \"Yeah, okay. No offense, Rook, but I hope Artie busts you hard.\"\n\nAndy shrugged. \"Can't make friends with everyone.\" He was thirsty, but he would be damned if he was going to make the girl behind the bar do an ounce of work on his behalf. \"So c'mon, let's get some cards out.\"\n\nAround ten thirty, Andy was starting to get nervous. He'd dropped down to third place after a couple of unlucky river cards in a row. Then Watkins went all in on Andy. Andy clearly couldn't cover the spread, but Andy called, and Covington decided to get out of the way instead of making a side pot. Thankfully, when the cards were turned over, Andy held the better hand, and the river finally flowed his direction. That doubled him up and put him back in the game.\n\nWatkins confidence was shaken, and over the next hour, he never really recovered, playing a bit too reckless and loose. Once Andy and Covington smelled weakness, the two honed in, taking turns chipping away at him until finally Watkins went all in, and just before midnight, Andy took him down.\n\n\"You want to rebuy?\" Covington asked him.\n\nWatkins laughed, shaking his head. \"Taking three from the pool is more than enough for me. You two titans have fun duking it out.\"\n\n\"You ready for this, Andrew?\"\n\n\"Don't you worry, Arthur,\" Andy said. \"Let's see who hits felt first.\"\n\nWith only two players, they were always going to be trading turns between little blind and big blind. As soon as Covington looked at his hole cards, he immediately called \"All in.\"\n\nAndy smirked a little, not having even looked at his own cards yet. He'd suspected Covington would've tried something like this, just constantly firing at the blinds, trying to chip them away, using his big stack to bully Andy's weaker stack. He glanced at his cards, then nodded. \"Okay. Call.\"\n\nCovington blanched. He turned over his cards, revealing Jack-eight, not even suited. He'd expected Andy to just back off and let him chip away a set of blinds, and was *not* happy that Andy hadn't done so, growing even more frustrated when Andy flipped over a pair of nines. \"How do you start with a pocket pair?\"\n\n\"Maybe it's a hint you shouldn't go so aggressive right out the gate,\" Andy replied as Watkins dealt out the flop. As soon as the cards were upturned, Andy could practically feel the anger boiling out of Covington. Andy had flopped the nuts, a six and the other two nines. At that point, it was a formality of just dealing out the last two cards, as Andy was guaranteed the winning hand with four of a kind.\n\nRight out of the gate, Andy had doubled up.\n\nAs the next hand was being dealt out, Covington hadn't even seen his cards and immediately said \"All in.\" He was fully on tilt, and wanted to try and reclaim his confidence. He didn't even look at his two hole cards, simply staring Andy down, practically daring him to get into the hand.\n\nAndy knew the stakes were a great deal higher on this hand, and so he took the time to look at his hole cards, a slight laugh escaping his lips. He couldn't try and read his opponent so he had to decide if his hand was good enough for the risk. And the two cards he had were affectionately known as Big Slick, Ace-King suited, this time in spades. It wasn't a pair, but playing against two random cards, his odds were good.\n\n\"Sure, let's dance. Call.\"\n\n\"You don't respect me, do you, Andrew?\"\n\nAndy grinned, giving a little shrug. \"You didn't even look at your cards, Arthur. How am I supposed to respect that? If you aren't going to respect your opponent, why should he respect you in turn? And you're just firing into the pot, hoping that you can buy a few blinds to chip away at my stack. But you have no idea what's under there. And I've got Big Slick.\" He flipped over his cards. \"How about you?\"\n\nCovington was turning almost scarlet red with anger, and turned over his cards, revealing just a six of spades and a three of hearts. \"This is ridiculous.\"\n\n\"Artie,\" Vikovic said, \"you didn't even look at your *cards.* What are you thinking?\"\n\n\"I'm thinking this shitstain has been a pain in my ass all night long and I wanted to bury him.\"\n\n\"And that's the problem, Arthur,\" Watkins said, putting out three cards for the flop. \"You aren't thinking about the cards and you're thinking about your opponent.\"\n\nThe first card on the flop was the six of hearts, giving Covington a pair and a moment's hope, but the second card immediately dashed that, revealing the Ace of Hearts. The third card, a ten of clubs, didn't affect the board at all.\n\nWith the turn came the three of spades, putting Covington back in the lead for a moment, with two pair, until the last card came out, the King of Hearts, pairing Andy up to two pair as well.\n\nCovington practically snarled as he counted out the chips, pushing them over, his stack now a quarter the size of Andy's. \"You've got more luck than a goddamn leprechaun, Rook.\"\n\nWatkins stood up, and Jacobson sat down to take a turn at dealer, washing the cards through he Shufflemaster again. Typically the break as the dealer changed was enough to let a player cool off, but Covington was still off-balance as they started up again. When the next set of two cards were dealt, Andy was back on the small blinds, and so was the first to act. He'd glanced at his cards and said, \"Call.\"\n\nCovington was gunshy now, and simply said \"Check,\" as he was desperate to see a flop and get more information. The flop came down Ace of Hearts, seven of spades, three of clubs. Immediately, Covington said \"All in.\"\n\nAndy stopped and did the math in his head. \"Yeah, okay. Call.\"\n\n\"Two pair,\" Covington said, flipping over the Ace of Spades and the three of hearts with an angry gusto. \"Take that, you lowbrow piece of shit! Time for me to get my money back.\"\n\nAndy shook his head with a wry smile. \"Not so fast, Arthur.\" Andy turned over his hole cards, the seven of hearts and the seven of clubs. \"I like my odds here.\"\n\n\"Another goddamn pocket pair! This is ridiculous!\"\n\n\"I probably would've folded if you'd bet at the blinds, but you let me see a flop for cheap, so midlevel pocket pair seemed okay.\"\n\nJacobson turned over the turn card, and Covington immediately let out an undignified cheer, as the three of diamonds. \"Yes! Full house! Suck it! Give me my money!\"\n\n\"He still has a few outs, Artie,\" the mayor warned.\n\nAndy was actually leading, but Jacobson just couldn't see it. He was sitting on a full house, sevens over threes, and Jacobson was sitting on threes over aces, which was the lower hand. Players tended to get wound up, so they often refused to think about everything, but Watkins had that knowing smile, so Andy knew he had spotted Jacobson's error as well. Jacobson needed either another three or another ace to pull victory from the jaws of defeat.\n\n\"No! I refuse to believe I'm going to get blown out by some random river card!\"\n\n\"So show us river already,\" Vikovic said.\n\nAnd Jacobson placed down the last card with a thump that resounded throughout the room like a clap of thunder. The seven of diamonds.\n\nThat meant that Covington had a full house, threes over aces, but Andy's four of a kind had blown it out of the water.\n\n\"The absolute luck on you,\" Covington growled.\n\nAndy had gone from 110k to 220k to 440k, making him the chip leader now. He could, if he wanted, use Covington's own tactics against him. But Andy liked to play smart. On the other hand, Covington was so tilted now, he could probably be goaded into a sloppy play. And if Andy could get Covington to go all in again, he'd be down to the felt and this stupid game would be over.\n\nMaybe, just maybe, it was worth the risk.\n\nIt seemed like the time to goad the millionaire a little more, just to see if Andy could completely tilt him.\n\n\"Maybe we should see how strong my luck's running right now then, huh?\" Andy said as new hole cards slid in front of him. \"Tell you want, Artie.\" He figured this singular use of the man's nickname would give him even more of a severe nudge. Andy had been calling him Arthur all night long, but now, the nickname Artie sounded condescending as fuck. \"I'll look at one, *just one*, of my two hole cards here, and if it's higher than a eight, I'll go all-in without even looking at the other card. How about that?\"\n\n\"You do whatever you want, boy, and I'll show you how a real man plays cards.\" Covington was blind with rage, and there was a carelessness flaring up behind his eyes, as Andy lifted up one of the hole cards to peek under at it.\n\n\"Okay,\" Andy said. \"All-in.\"\n\n\"You're bluffing!\" Covington said, slamming his fist on the table hard enough to knock the stacks of chips loose. \"Call!\"\n\n\"Now Artie,\" Andy said, smug grin on his face, \"are you sure that--\"\n\n\"*I SAID CALL GODDAMN IT!*\"\n\nAndy flipped over the one card he'd looked at, the Ace of Hearts, but left the other card face down, as Covington flipped over his cards. The man had looked at them this time, and was sitting on a pair of sixes.\n\n\"Aren't you going to turn over your other card?\"\n\nAndy shrugged, that sly smile on his face. \"In a minute. Let's see the flop.\"\n\nThe flop came down six-seven-ace, giving Covington a set, while Andy was sitting on a pair of aces. The turn was next, a deuce, no help to anyone, and the river, well, the river was the two of hearts. Looking at the board, Andy's odds weren't great, but he wasn't out either. The seven and the six on the board were both hearts, which meant Andy needed his other hole card to be another heart.\n\n\"It's Schr\u00f6dinger's hole card now,\" Andy said, tapping his fingers lighly along the felt. \"Maybe I've got a winning card, and you're out, or maybe you've got me dead to rights and have doubled up back into the lead. What you've gotta ask yourself is... do you feel lucky? Well, do you, punk?\" The grin on his face was broad, as he gave the man his best Clint Eastwood impression.\n\nVikovic was the one who finally made the move. He leaned across the table and grabbed the last card, the one Andy had never even touched, and flipped it over. There in all her glory...\n\n...was the Queen of Hearts.\n\nAndy had made his flush.\n\n\"Son of bitch,\" Vikovic said, letting out a low appreciative whistle. \"You want to rebuy, Artie?\"\n\n\"Fuck that! This guy is on a streak. I'm out. Game's over!\"\n\n\"Are you sure, Artie?\" Andy said.\n\n\"The! Game! Is! Over!\" Covington fumed. The older man stood up, inhaling a long breath before letting it out slowly, trying to regain his composure. \"Alright, let's sort out the winnings. Andrew, you have seven picks from the pool and get to pick first, as is your right as the winner.\"\n\n\"Alright, let's see,\" Andy said, as all the men moved back into the parlor with the videowall they'd been in before. He'd hoped just to win with no rebuys from anyone, as it would've made his decisions simple, but seven, seven was a lot of women for any one man to handle.\n\nThe thirteen faces sprung to life on the big wall, as Andy looked over them carefully. \"Alright, I suppose I'd better just pick then. Charlotte Varma, Asha Varma, Piper Brown, Emily Stevens...\"\n\n\"Damn,\" Jacobson grumbled.\n\n\"Oh hush. If he hadn't taken her, I certainly would've,\" Covington said to him.\n\n\"Sarah Washington, Sheridan Smith and...\" Andy looked over the wall of faces, trying to decide who else he would pull from this den of vipers, and yet, he just couldn't bring himself to care about rescuing his ex Erin. It was a sea of beautiful faces, but none of them evoked any stronger reaction than another, so he was forced to read the small text beneath each of them, sorting out people he wouldn't want to spend long periods of time with. He was a little tempted to give his seventh pick to Covington, but couldn't bear to let anyone decent be bound to the loathsome toad.\n\nThere were a couple of Republicans he nixed immediately. Andy was a lifelong Democrat, and anyone who'd still identify as a Republican after the last three years of madness wasn't anyone he wanted to let into his home and family. A few others struck him as from far too wealthy of families, the sorts of people who would do much better with Covington and his ilk. But there was one, Deborah Barnes, a blonde veterinarian from Los Gatos, originally from Kansas, and she seemed warm and caring in the notes about her. \"... and Deborah Barnes, I guess.\"\n\n\"Erin Donegal was originally one of yours,\" Covington said. \"Don't you want to take her back?\"\n\nAndy shook his head. \"I would've sent her back to the base if it weren't for this little game of yours. If you want her, you can have her. She doesn't like my writing, and anyone who doesn't like my writing isn't welcome in my house.\"\n\n\"If you don't want her, I won't take her either,\" Covington sniffed. \"I'll take Janice Flowers, Eloise Childs and Teresa Kenzington.\"\n\n\"I'll take her then,\" Watkins said. \"Donegal and Nina Choi.\"\n\nThat left Jacobson with Ariel Smith, since Vikovic and Haunton had both rebought in, and left with nothing. Andy sighed. \"So how do we relocate them?\"\n\n\"A car will arrive tomorrow to pick everyone up and drive them to their new locations, although you're welcome to take the Varmas and Miss Brown with you tonight, since they're here, and you are as well. Tomorrow afternoon, everyone will have what's coming to them. You may need to tend to Miss Brown's needs before you leave, however, Andrew,\" Covington said. \"She's in quite the state. I'll have the other two meet you upstairs by your car when you're done with Miss Brown.\"\n\n\"Can you send my partner, Niko, down to meet me? I'm strong, but carrying an unconscious Olympic athlete up some stairs by myself is probably more than I'm capable of.\"\n\n\"Of course. Let me go get her. Veronica, would you take Mr. Rook over to Miss Brown's room please?\"\n\nThe servant brought Andy out of the parlor and took him to wait outside of a room where the door was clearly locked. She unlocked the door, but didn't open it. \"You may wish to wait for your partner, Master Rook. The woman in there... she's not well,\" she said to him, a look of concern on her face. \"Ah, here's your woman now.\"\n\nAndy turned around and Covington was escorting Niko down to meet him. \"Here you go, Miss Red Wolf. You two should be strong enough to carry Miss Brown out when you're done with her. You know the way back?\"\n\n\"I do,\" Niko said to him. \"Thanks.\"\n\nBoth Covington and Veronica walked up the stairs, leaving Andy and Niko alone together outside of the door, neither quite bringing themselves to open it yet.\n\n\"So you won?\" she finally said to him.\n\n\"First place. Seven women. It's going to be a trial.\"\n\n\"Maybe you could donate one of them to Eric or Phil if it scares you that much,\" she said with a laugh. \"So are Charlotte and her daughter behind this door?\"\n\n\"No no, they'll be upstairs waiting for us at the car after we're done here. There were actually thirteen girls in the pool, not twelve. This is the thirteenth. Her name's Piper Brown.\"\n\n\"Wait, that cute volleyball player with the little pregame warm-up dance who went viral a few years back? *That* Piper Brown?\"\n\n\"The very same.\"\n\n\"Well let's go get her. Why's she down here?\" Niko started to reach for the door, but Andy put his hand on it.\n\n\"She's been here for over a week, so she's pretty heavily in the throes of need right now,\" Andy said, not letting her open the door yet. \"Covington said she'd be in quite the state, so I'd need to imprint her here, and you'll have to help me carry her upstairs afterwards.\"\n\nNiko's face fell. \"Jesus, what a fucking asshole,\" she sighed. \"A whole week of waiting for imprinting after she's been vaccinated? She must be out of her fucking mind with need by now. Okay, we'll let's get to it, stud.\"\n\nAndy shot her a disappointed look before he lifted his hand and opened the door. The room was poorly lit, a handful of lights on their lowest setting, as Andy and Niko stepped into the room, closing the door behind them.\n\nOn the far side of the room, sitting in chair, looking almost catatonic, was Piper. She was naked, sitting in an armchair, her brunette hair draped over her tits, a vacant look on her face. She was muscular, in far better shape than Andy or Niko. It almost looked like she was drooling on herself from across the room.\n\n\"God, is she dead?\" Niko whispered to him as they started to walk over to her.\n\n\"Ms. Brown?\" Andy said. \"Piper? I'm Andy Rook. I'm here to take you away from here.\"\n\nSuddenly, Piper's head whipped and her blue eyes focused on Andy with a terrifying intensity. Before Andy could even react, she lunged out of the chair and raced over towards him. Niko tried to step forward to slow her down, but Piper shoved her out of the way sharply. As soon as she was at Andy, she pushed him back to the wall with an irresistible strength, forcing his back against the surface before she dropped down to her knees.\n\n\"It's okay, Piper,\" Andy said to her, but the woman seemed completely oblivious to his words. She practically ripped his pants open and immediately brought her mouth around his cock. Andy wasn't hard, but Piper's tongue was demanding, even as Niko moved back to her feet and walked over to him\n\n\"God, was I that bad?\" Niko said, her hand reaching down to stroke Piper's hair reassuringly.\n\n\"You were at least verbal,\" Andy said, as he felt Piper's mouth humming on his cock, making it swell. \"I feel a little bad, taking advantage of her like this.\"",
        "Niko shook her head, leaning in to kiss Andy. \"This girl's got a need and you need to fill it, Andy. Just let her have it, and we can go. Besides...\" Niko giggled, nuzzling against his neck. \"It's kinda hot, the way she's just feasting on you, cavewoman style.\"\n\n\"Yeah, well, it's hard to keep an erection with the stink of this room. I think they kept her trapped in here all week.\"\n\n\"But she's good at sucking cock, isn't she?\"\n\n\"She's certainly voracious.\"\n\n\"Don't hold back, then,\" Niko said, taking one of his hands in hers, trying to reassure him. \"No need to be all gallant for this time. You can save that for the first time she'll actually remember.\"\n\nIt didn't take long, and sure enough, a minute or two later, Andy was firing a blast of cum down her throat, which was when the strangest thing happened.\n\nPiper *didn't* suddenly slump over.\n\nNo, instead, after she swallowed his hot sperm, she tugged him away from the wall and pushed him down to the floor, not so much as a droplet of spunk escaping her lips.\n\n\"What the hell?\" Andy exclaimed in shock. \"Why isn't she imprinting?\"\n\n\"Fuck, I hope she's not stuck like this because he waited too long!\" Niko said, trying not to panic. \"Maybe you didn't have a big enough load?\"\n\n\"When the fuck has that ever mattered before?\"\n\nPiper's wild eyes still darted left and right, but as soon as she had pushed Andy onto the floor on his back, she crawled over him, her hand tugging on his cock once more, as she straddled him.\n\n\"I think she definitely wants more, Andy,\" Niko laughed. \"Hit her again.\"\n\n\"I dunno if I can give an encore this soon, Niko!\" Andy whispered.\n\nPiper cut him off, shoving her lips against his in what had to be the most primal kiss he'd ever encountered, almost like she was claiming him instead of the reverse, her tongue forcing its way into his mouth, her athletic body keeping him in place.\n\nNiko moved behind Piper and snaked one hand around the Olympian's waist, moving to rub her fingertips against the brunette's pussy, a small triangle of pubes above it, as Niko started stroking the girl's clit. \"I don't think she's going to give you a choice, Andy.\" Niko smirked, her other hand reaching to tweak one of Piper's stiff nipples, finding the bud as hard as a rock, eliciting a groan from the athlete, who was dragging the head of Andy's cock across her snatch.\n\nWithin a moment, he was stiff enough for her to slam her weight down onto him, forcing his dick deep into her cunt, finding it drenched and achingly warm. Andy didn't so much do anything as provide a dildo for the woman to ride upon, her hips bouncing in his lap, her lips attached to his, refusing to let go, even while she fucked him.\n\nAfter a few minutes, Andy felt a familiar tingling in his balls, and as Piper squirmed and wriggled down on him, he fired a load of cum against the back of her twat. This time, it seemed, it was enough to take, and the toned woman spasmed in one sharp and violent quake before slumping deathly atop of him, murmuring \"imprinting\" over and over again, so quietly Andy could barely even hear it. He more felt her lips moving than heard her, as her face was buried in the nape of his neck, his body pinned underneath her.\n\n\"A little help, please?\" Andy said, and Niko only laughed that much harder."
    ],
    "authorname": "CorruptingPower",
    "tags": [
        "group sex",
        "harem",
        "science-fiction",
        "poker"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/quaranteam-ch-16-19"
}