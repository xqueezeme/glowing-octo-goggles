{
    "title": "The Sybian Introduction Ch. 02",
    "pages": [
        "Authors Note:  A special thanks to SUSURRUS who took the time to review the raw form of this story and edit it for me.  I really appreciate the effort and skill and as a result, this is almost as much his work as it is mine.  I hope you enjoy and I would love to hear your feedback.\n\nBeth woke up and rolled over expecting to find John lying next to her, only to find a cold pillow and mussed sheets.  She rolled back and glanced at the clock: 10:15.  In a panic, she leapt from the bed, shouting,  \"Shit!  I can't believe I didn't make it to work!\"  She scurried over to her dresser to grab her essentials and rushed into the bathroom for her morning shower.  \n\nA note was attached to the mirror.  \n\n\"You called in sick this morning.  I'll try to get home early.  \n\nLove ya! \n\nJohn\"\n\nHer breathing slowly returning to normal, she fell back onto the bed and started to think back on the events that led up to her exhausted awakening this morning.  She couldn't believe the intensity of her orgasms the previous evening.  It was a real kick with John watching and his control of the thing was just short of mastery.  She wondered how he figured it out so fast.  \n\nAs she lay there thinking about her experience and how exciting it was, her nipples began to grow taut and she could feel that faint buzz as her clit became energized.  Her hands slipped down to gently caress her hardening nipples, rolling them between her first finger and thumb, just enough pressure to distend them slightly.  The tingles traced a direct path from her breasts to her clit as she felt her lubrication begin to wet her inner lips.  Her hand slid slowly down her stomach, over the slight rise of her pubic mound down to her clit.  A finger slid down to separate her lips slightly; feeling her lubrication moisten her finger tip, she rolled it back up to coat her clit.  \n\nAlmost as if they had a mind of their own, her fingers began to roll a small compact circle that took her finger tip slightly off her clit, then passed over it again as the circle was completed.  Her stomach began to tense with each pass of her finger over her clit, which created a thrusting motion from her hips, as if her pussy was trying to capture at least one finger to plunge deep inside.\n\n\"Shit!  I can't do this now...  that damned thing has turned me into a harlot.\"  She slid off the bed and walked on shaky legs to the bathroom, slipping a shirt over her naked body as she walked in, opened the door to the shower and turned the water on.  Adjusting it absent-mindedly, her thoughts returned to her masturbation and love making session the previous night.  'I can't believe I let John watch me, but god, I got *sooo* excited!  The look in his eyes...  just thinking about it makes me wet...' Then she started to laugh at herself. 'Maybe you're wet because you just had your finger in your pussy,' and she stepped under the flowing water.\n\nIt seemed as if all of her nerve endings were enflamed.  Even the flow of the water down her body, the beating of the water on her breasts, the way the water traced down the valleys of her pelvis to drip from the pinnacle of her pubis gave her tingles that weakened her knees.\n\n'Oh my god!  What's happening to me?  Will this ever go away?  I can't even *function*! I feel like I have to cum or I'll never be able to concentrate on anything!  GOD!'  ...and her hand once again traced down between her legs to focus on her clit, her finger tracing small circles, her other hand sliding down next to it to slowly penetrate her opening...  \n\n'Oh, shit!' she thought in frustration as she tried to caress her G-spot in just the right way.  She remembered the depth of the orgasmic delight caused by that infernal machine vibrating her clit at the same time it passed over her spot.  \"I *can't* do it again.  John will think I'm depraved. What's he going to think when I jump his bones like a bitch in heat when he gets home tonight?\" but her legs walked her out of the shower, dripping water on floor as she went, to the spare bedroom and looked at the machine, still sitting in the middle of the room where they left it last night.\n\nShe walked over and picked up the control.  \"Okay, one orgasm, that's it, and then I'll take it back today.  I have to get this thing out of here, I'm fucking *addicted*,\" she said to herself as she settled down over it.  She felt the penis-shaped attachment slide between her wet lips, and she had to rise and settle a couple of times to get it fully wet and as deep as its small length would permit.  \n\nShe reached down and hit the switch for the vibration mechanism.\n\n\"Oh god!  Way too high!\" she gasped and quickly decreased the level of vibration.  She turned down the \"volume\" of the rotation before turning on the switch and felt the penis attachment begin its first slow swing.  The spark of pleasure as it swept across her G-spot took her by surprise and she mashed her body down, feeling the vibration through her clit.  Quickly, she turned the volume up on both.  As her desire grew, so did her frustration: she wanted to caress her breasts but couldn't quite find the right balance between rotation and vibration, so her hands were occupied with adjusting the controls.\n\n Her orgasm took her completely by surprise.   She could almost feel her body click in as the vibration and rotation reached that perfect blend.  Her body settled down on the machine and she began a gentle thrusting of her hips, dragging her clit over the bumps on the vibration mat.  As she reached up and took her nipples between her forefinger and thumb, her body tensed all at once, her eyes rolled back and she felt the waves of pleasure radiate out from her clit, intensified, magnified each time the attachment wriggling inside her flicked across her G-spot.  Her body began to vibrate and she heard a loud moan, almost a shriek as she lost touch with anything outside of her pleasure-filled world.  As each orgasm began to fade, another one seemed to creep up on her, beginning with maddening slowness, building in speed and intensity as she neared the point of no return. Finally it burst like July 4th fireworks with sparks flashing in her tightly closed eyes, legs quivering to suspend herself at just the perfect penetration. Dropping the controls for the machine, they slid across the floor as her leg twitched in orgasmic convulsions.\n\nShe looked at the controls in near-terror as she realized they were out of reach.  Her rising inability to withstand any additional pleasure was only slightly overridden by her desire for *one* more orgasm.  She rode the machine, knowing she had lost control as the last, but definitely most intense, pulse of tingles flashed through her body.  The only sounds she could make were a series of grunts that accompanied each frenzied contraction of her abs.  \n\nHer body as tense as the quivering, overstressed steel of a collapsing bridge, she lost her balance and slowly toppled over onto her side, the machine falling over before finally disengaging from her drenched slit.  She lay on her back, unable to do anything but breathe, her eyes closed, her head back, stomach and chest rising and falling as she struggled to control her racing heart beat.\n\n\"Oh my God! I have to get rid of that thing.  It's going to *kill* me,\" she panted, and she resolved that as soon as she could get the energy to get up and get dressed, it was going back to Sharon.\n\nJohn pulled in the driveway and walked up the walk.  \"Beth?\" he called as he walked into the house.  \"Beth?  Are you here?\"  It was only 1:30 in the afternoon, but the house had such an empty feeling that he was actually frightened as he ran up the stairs.  He looked in the bedroom and the bed was unmade.  Beth was always so fastidious, he couldn't imagine her leaving the house in this condition before she left.  \n\nThe bathroom had that slightly moist feel to it, like the water had recently run, but it was cold so he knew it had to be a while since the shower had been on.  \"Beth?\" he called again, a little louder this time.  He walked down the hall, looking into each room and finally found Beth lying on her back next to the still buzzing, still rotating Sybian machine.  \n\nThe machine was on its side, and Beth was lying with her arms over her head and her legs parted slightly.  The thing John noticed most was her pussy, the lips distended, engorged, dripping with moisture and almost raw-looking in their redness.  She had a slight smile on her face but didn't react at all to his appearance.  He slowly leaned down and gently shook his wife's shoulder.\n\n\"Ohh...\" \n\n\"Beth, are you okay?\" he whispered to her as he lay on the floor next to her and took her in his arms.\n\n\"Hmmm.\"\n\nJohn kissed Beth's cheek and smoothed her hair from her face.  \"Beth, baby, are you okay?\" \n\nBeth's eyes opened slightly and she turned her head to look at John. Her eyes slowly came into focus.  John felt a twitch, then Beth's whole body tensed and her eyes widened farther than John had ever seen them.  Her face flushed a deep shade of red.\n\n\"Oh my god!\" she cried, and John watched the tears build up at the corners then slowly overflow and roll almost simultaneously down both of her cheeks.\n\n\"Let me up!\" Beth almost shouted as she twisted in John's arms, trying to get her arms out of his grasp.  John knew it would take days to get Beth to relax from this one and knew his best chance was now, so he held her firmly but gently as she struggled.  \n\n\"Beth... Beth, it's okay. It's okay, baby...\" he said, in as soothing a voice as he could muster.  \"Calm down, sweets, it's okay, it's okay...\" \n\n\"Oh god, John, I'm so sorry...\" she was crying in sobs and John felt the fight leave her body.  \"I don't know...  I don't know what happened...\" her voice was confused as she fought through the embarrassment.  \n\n\"Beth, it's okay, I just want to make sure you're okay, sweetheart. What happened?\"\n\n\"When I woke up you were gone and...  I took a shower... I started to think about... you know, about last night... and,  umm, well, I started to think about trying it one more time.\"  The words had started slowly through gulps of air and sobs, but picked up speed as she got into the explanation, which ended up almost a rush of words.  \n\n\"And when I started it didn't feel as good but I kept sitting on it, and it felt good, god John, it felt *so* good and I started to cum and I couldn't stop and I just kept cumming and cumming, oh god, John, I'm so sorry.\"\n\n\"Beth!  Why do you keep apologizing? There's nothing to be sorry about. Relax, sweetheart, I was just worried that you were hurt.  Relax, sweets, it's okay, really.\"  John's caring tone of voice, combined with his gently brushing her hair from her eyes and wiping the tears from her flushed cheeks finally broke through her panic and guilt at getting caught.  \n\n\"You don't mind that I came without you?\"\n\n\"No, babe!  It's not like I've never masturbated before!  I just never had such a great toy to do it with.\"  John's grin was hard for Beth to interpret.  It was a combination of guilt and amusement, with an undertone of sensuality that stopped Beth in her tracks.  This guy was so much deeper than she ever gave him credit for.  She pulled her arms out of John's and wrapped them tightly around his neck. \n\n\"I love you so much, John.  Thanks for not being angry with me.\" Her head fell and buried itself into John's chest.  \"I'm returning that fucking thing today... right now!\" and she slipped out of John's arms and rushed off to her bedroom.  John lay there thinking about the previous night and what she must've experienced on her own today.  He didn't want her to return it, but was afraid to tell her.  The fact that she had lost control on the thing had him hard enough to cut glass, or drive railroad spikes.\n\nJohn sat up and leaned back against the wall.  Beth came in and grabbed the attachment but her hand slipped off.   John could see the juices on it still glinting in the fading afternoon light.  \"Fuck! John, can you get this fucking thing off?\"  \n\nJohn almost laughed out loud. Actually, he had to cough into his hand, both at the unintended, but brutally accurate, pun and at the fact that Beth, who so rarely cussed, was so upset she used the 'f' word twice in one statement!\n\n\"Sure, sweetheart.  You sure you want to return this today?  I mean, is Sharon even going to be home?\"\n\n\"She'll be there by the time I get there. If not, I'll wait.\"  John had heard this tone of voice before and knew that no argument would stop her from doing what she set her mind to.  \n\nJohn disconnected the attachment and as Beth took it into the bathroom to wash it off, John picked up the machine and carried it downstairs to the car.  He sat down on the front porch, and as Beth drove away with a squeal of tires John saluted its departure with the crack of a beer.\n\nAs he brought the can to his lips, John mumbled to himself, \"I'll never figure women out, ya know? If I could cum that hard you'd never get me off that machine.\"\n\nAs Beth pulled up to Sharon's place, some of her fire had gone out.  She wondered how she could possibly explain to Sharon what had happened.  She knocked on the door and said, \"Wait,\" to Sharon when she opened the door.\n\nShe ran to the car, pulled the heavy machine out and carried it to the door.  \"Here,\" she said as she thrust the machine into Sharon's arms.  Sharon took a step back as she adjusted to the weight.  She turned and set it down in the hallway.\n\n\"Did you try it?\" she asked Beth.\n\n\"Yes,\" Beth said as she turned and walked down the sidewalk back to her car.  \"I can't talk about it now, but yes, I tried the damn thing.\"  She slammed her door and left as quickly as she had arrived.  Sharon stood there in shock, wondering what the fuck had happened.\n\nJohn was still sitting on the porch when Beth came back, his second beer just opened.  \"Are you okay, Beth?\" John asked as Beth sat down next to him.  \n\n\"I'm fine, John, I'm just so embarrassed... mortified at you finding me like that. I don't want you to...\" her head fell and she looked at the sidewalk between her feet.  \"I don't want you to think of me...  as being, well...  like that.\"\n\n\"Like what, Beth?\" John was playing to the hilt the painfully obtuse male that he was sure all women considered men.  He had an idea but didn't want to take the chance he'd be wrong.\n\n\"...like a slut, I guess.\" And again John watched a tear slide from her eye to slowly trail down her cheek.  The first thought that flashed through his head was, 'What smooth skin she has.'  He felt another flush of intense love warm the very depths of his soul.  He slid his arm around Beth's shoulders and pulled her gently against him.  \n\n\"Beth, that couldn't be further from what I think.  I think you're beautiful, warm intelligent, incredibly sensuous, and just plain sexy as hell.  You never cease to amaze me and I love your sense of adventure.  I'm glad you found some pleasure this afternoon, sweety.  There's absolutely nothing to be embarrassed about.\"\n\n\"Oh god, John, it was scary. I completely lost control, just like last night, but I didn't have you to control things, to keep me from going too far.\"\n\n\"Beth, that is the most erotic thing you've ever said to me, babe.  Was it awesome?\"\n\n\"No, it was scary!  I couldn't help it.  I just... lost it.\"\n\n\"I love you, Beth.\"  John looked deep into her eyes.  As they stood up Beth pulled her husband close.  Her head lifted slightly as she put her lips to his, her eyes closing slowly.  As his midsection closed to hers, her eyes popped open when she felt his erection against her belly.  She opened her mouth and her tongue sought his as their kiss deepened.  Beth rubbed her pelvis against him. She could feel the rawness as her clit rubbed across the lump that was John's engorged cock.\n\n\"John,\" she whispered as she pulled slightly away.  \"John, will you cum for me?  I mean, like you said you did when we're not together?  Please?\"\n\n\"You mean you want me to jerk off for you?\"\n\n\"Yes.\"\n\n\"Are you really serious, Beth?\" he said as his voice rose on the last syllable.  \n\n\"Yes, John.  It's something I've always dreamed about, fantasized about.  \n\n\"Oh god, I feel like I've completely lost control.  I can't believe I asked you that.\"\n\n\"You know you can tell me anything, right?  If you're sure you really want to see it, umm... yeah, sure, sweetheart, I'll do it for you.\"\n\nJohn's heart was in his throat as Beth took his hand and led him back into the house.  She led him into the bedroom and pushed him back onto the bed.  She smiled at him as she went to her dresser.  John watched as she pulled something white and silky out of the drawer and slipped into the bathroom.  \n\nJohn did what any red-blooded male would do: he stripped faster than the bark from a tree during the Mount St. Helens explosion.\n\nJohn slid his hand down over his cock, gently massaging it, squeezing it gently as he waited for Beth to come out.  He stroked it slowly up and down once or twice and felt the precum roll down from the tip, to pool where his hand met penis.\n\nBeth came out of the bathroom.  \"No, John, do it right, baby.\" \n\n\"Huh?\"\n\nShe gently pushed his chest and he fell back on the bed.  She slid his legs over on the bed so he was fully laid out on the bed, then she crawled between his legs and sat on her feet, looking intently at her husband.  He felt self-conscious as her gaze ran the full length of his body, stopping at his throbbing cock.  John had never been more excited in his life.  \n\n\"Come on, John, do it for me.\" It was the most erotic sounding whisper John had ever heard come from his wife.\n\nJohn's hand once again wrapped around his cock.  The precum that had traveled down the length of his engorged staff lubricated his hand as it began to slide up and down his shaft.  Beth's beautiful body was encased in white satin.  Her hard nipples made peaks in the fabric, highlighted by just a hint of the areolae that surrounded them.  Her focus was on his cock as his hand stroked in that familiar pattern.  He could feel the tingles, could feel the cum rising from his balls with each stroke.  He knew it wouldn't take long now.\n\nHis gaze traveled the full length of Beth's torso, the shape of her long neck, the curves of her collar bones showing through her skin, the soft lines of her shoulders, broken only by the spaghetti strap of her lingerie.  He couldn't imagine anything sexier than the visage he was so thoroughly enjoying.  His attention was attracted to her nipples: hard, poking against the fabric, hiding the subtle curve of her firm breast.  \n\nBeth reached her hand down and John watched as it slid beneath her teddy.  He watched as the muscles of her arm began to move rhythmically.  John's hand slowed its stroke, trying to stave off the inevitable.  \n\n\"Don't stop, John.\"  \n\n\"I'm trying to control, Beth...\"\n\n\"Don't.  I want to see it shoot.  I want to see you cum, John.  I want you to look at me when you cum, John.  I want to see your pleasure like you saw mine.\"\n\nJohn knew that two more strokes were all it would take.  His hand rose up his shaft and as it passed over the crown, his head went back and he felt his muscles tense.  He felt the tingles shoot down his legs: that warm sensation, almost the same as it feels when your legs fall asleep, but more intense.  His stomach began to undulate, almost as if it were trying to push the cum out of his body faster.  He thought he had a chance to stave off the impending crescendo for just a moment or two, until he looked at Beth's face.  The look of passion, love, trust and borderline out-of-control lust on her face was the most erotic and sensual look he had ever seen.  He wanted to lock the intensity of that image deeply into his brain for all time, never to be forgotten.  His orgasm, so close, was making the concentration necessary to properly record the image difficult. He closed his eyes in concentration.  ",
        "\"John! Look at me! Please, look at me!\" Beth implored.\n\nThrough barely opened eyes, John looked into Beth's eyes.  They were focused on his as the first burst of pearly white cum leaped from his cock.  His mouth opened and he roared as another white tracer jumped up to his chest.  Beth's eyes never left his, but he felt her legs twitch, could hear her moans as she obviously came with him.  His eyes finally closed of their own volition, his head back as the next two bursts of cum streaked up his stomach.  John almost couldn't take the exquisite torture of the escaping white stream.  His breathing was timed to each shot and simmered down to a rumbling groan as the shots became a bubbling stream that flowed from the end of his cock to pool in his pubic hair.  His balls had pulled up so tightly as to be nothing but crinkled skin at the base of his member.  That was one that struck Beth.  She knew that image was burning itself into her memory for all time.  The intensity of John's orgasm was now a part of her.\n \nBeth slowly toppled forward to lay full length on John, his semen cooling between their bodies, the excess running off to create pools along his stomach and chest.  \n\n\"Beth, let me clean up.\"\n\n\"Don't move, sweetheart,\u201d she cooed. With her on top of him, John slowly drifted off into a deep slumber.\n\nJohn and Beth went through the following days in a daze.  John was intrigued by this change in Beth's level of desire.  He never would've guessed that he'd find Beth lying on the floor next to this Sybian machine, this fuck device, exhausted from an over-abundance of orgasms.  He also would've never guessed that Beth would want to watch him masturbate.  He loved that she enjoyed the machine so much, but couldn't understand why she wanted to get rid of it so quickly.\n\nBeth seemed distant and quiet.  She didn't say much and when John looked at her, she couldn't meet his eye.  She'd lower her gaze to the floor, she didn't smile and she always seemed to blush.  Saturday finally came and John made the decision that he wasn't going though another weekend like this.  He loved his wife, she was his best friend and he missed the companionship of the old Beth, her smile, her laugh.  While he never felt closer to her, she seemed so distant.  It hurt. He decided he would do whatever it took to get her comfortable again.\n\nHe finally trapped her late in the afternoon, sitting on the couch again, in that position he found so appealing, her legs tucked beneath her kind of sideways.  It always amazed him that she found that position comfortable.  He figured if he tried it, his knees would break.  He sat down next to her and looked at her, her hair down over her face, almost peering at him through her locks.\n\nShe started to get up and John reached out and put his hand on her arm.  \n\n\"Beth, talk to me, please?\"\n\n\"John, I can't...  I, I don't know what to say.\"\n\n\"I love you Beth, I can't stand not talking to you...\"\n\n\"John I just can't. I want to... I mean, I need to talk to somebody, but I just can't...\"\n\n\"There isn't anything you can say to me that would make me think bad about you, I love you, warts and all,\" John said and smiled, to try to punctuate his statement.  He wanted to tell her the depth of his feelings for her but couldn't quite figure out the right words.  \n\n\"John, you just don't understand.\"\n\n\"Well then, why don't you explain it to me.  Please tell me what you're thinking.\"\n\n\"You wouldn't want to know.\"\n\n\"The only thing you could tell me that I couldn't stand to hear is that you don't love me, Beth.  Is that it?  Is that what you're afraid to tell me?\"\n\n\"No, John!  I love you with all my heart, that's why I'm afraid to tell you.\"\n\n\"Did you have an affair?  Did you sleep with another guy?  Not my favorite thought, but we can work through it, as long as we keep talking.  If you don't talk to me, then all is lost.\"\n\n\"It's not another guy, John.\" The exasperation in her voice convinced even John.\n\n\"Then what?\"\n\n\"It's that *machine*. I'm so embarrassed, but I can't stop thinking about it.\"\n\n\"Shit, Beth!  That's easy!  Call Sharon and borrow it again.\"\n\nBeth's head fell again and she whispered behind her personal barrier of hair, \"I can't do that!  She wanted to know all the details when I dropped it off.  I couldn't even look her in the eye.  I couldn't tell her I fucked myself silly with the thing and you found me passed out on the floor!  God, I don't know what to do!\"\n\n\"Call her, Beth.  What?  Do you think she's going to think less of you because you enjoyed HER toy?  Come on.\"\n\nIt made so much sense to him, he just couldn't understand why it wouldn't make sense to her.  She got this really strange look on her face as the painfully obvious logic finally sank in.\n\n\"You don't care?\"\n\n\"If it makes you feel good, sweets, then I like it.  If I can share it with you, then I like it even more.\"\n\n\"But John! You don't understand!  It's all I think about.  It's become like a challenge, to experience it without losing control...  I think about it and think about it, I can't concentrate at work, I think up excuses to try it again, but I need you there.  I'm afraid.  Oh god, John! Please tell me you still love me...\"\n\n\"Babe, watching you on that thing was so erotic.  Every time I think about it I get hard.  Relax, let yourself go and let's have some fun.\"\n\nJohn could see the sparkle in her eye, the one he missed for so long.  She finally brushed her hair from her face and actually smiled at him.  It was the most moving smile John had seen in weeks.  Those beautiful white teeth, her light pink lips, the slight dimples in her cheeks.\n\n\"Go!  Go call her right now.  I'll even drive you over there and help you pick it up.\"\n\n\"Oh god, no, John!  No way you're going with me.  Uh uh, not gonna happen.\"\n\nBeth got up and walked to the bedroom to call in private.  John couldn't hear the conversation over the football game on TV.\n\n\"Sharon said I could use it, but I couldn't take it.  She said she missed it too much when I had it.\"  Beth sat on the couch with her elbows on her knees and her face in her hands.  \"Shit!\"\n\n\"What's the problem sweets?  Just go over and use it!\"\n\n\"Oh god, no!  John, I couldn't do that, and you *have* to be with me.  You have to control that thing.\"\n\n\"Alright, I'll go with you.  Let's go.\"\n\n\"In front of Sharon?  No way!  I couldn't!\"\n\n\"Come on, Beth!  You've known her for eons!  You've known her since you were kids!  It's no big deal, It's not like she'll be watching or anything...\"\n\nBeth got up and started to pace.  John missed the final touchdown in the last 38 seconds of the game to send it into overtime.  \n\n\"Beth!  Come on!  You're gonna drive yourself nuts!  Either let's go or forget about it!\"\n\n\"I can't!\" \n\n\"All right! That's it!  Get in the car.\"  John propelled her down the hall by her elbow, out the door and to the car.  Beth sputtered and complained the whole trip but John noticed a sparkle in her eye and he noticed her nipples announcing their arousal.\n\nSharon didn't even get up off the couch.  \"Upstairs, first bedroom on the right, Beth.  You going up, John, or are you going to wait down here with me?\"\n\nJohn smiled self-consciously and lowered his gaze as he stood slightly behind Beth.  He glanced at Sharon and once again marveled at the differences between these two best friends.  Sharon was so outgoing, short blonde hair and tall, a little more voluptuous than Beth, but these two women were closer than any two sisters John had ever gotten to know.\n\nBeth grabbed John's hand and dragged him up the stairs.  As they walked in the room the Sybian sat in the middle of the floor, the controls laying next to it.\n\nBeth turned and pulled John to her. \"I can't believe we're doing this.\"\n\n\"I love you, Beth.\"  John lowered his head to lightly kiss his wife's closed lips.  Her mouth opened and his tongue invaded her mouth to taste her tongue.  Her lips closed on his lower lip and she sucked it gently into her mouth.  It was such a small thing, but it absolutely drove John nuts every time she did it.  It was always a signal of the extreme intensity of Beth's passion, always the harbinger of an unforgettable experience.  John sometimes wondered if Beth knew she gave that signal.\n\nBeth pulled in to John and he once again marveled at how perfectly she molded to him.  Her body seemed to fit so well, so close.  Her shoulders seemed so small to him, he just wanted to wrap her up, cover her, protect her from any hurt.  His hands traveled the full length of her back, caressing the tense muscles beneath her shirt, which began to rise as he ran his hands up and down.\n\nBeth got heavy in his arms and John let himself be dragged to the floor as they kissed.  He undid the button of Beth's jeans and slid his hand into her pants, feeling the silky fabric snag slightly on the rough skin of his hand.  He felt her lips, already puffy and wet, her nectar seeping from her core.  His finger slid gently down the length of her slit to hover around the edges of her opening.  He knew it drove her crazy with anticipation to get so close but to hold off penetration until her hips began to chase his finger.\n\nWhen his finger finally slipped into her, John felt her walls clamp down around his finger.  Beth moaned as her hips pushed up to force deeper penetration.  Beth groaned in frustration as John pulled his finger free from the Chinese finger trap her grasping pussy had become.  He slid her pants and panties down as one as she raised her hips to help him.  A couple of kicks, a tug or two and her pants lay strewn and forgotten on the floor.\n\n\"Are you ready?\"\n\n\"Yes,\" Beth said with a small voice, high in pitch and full of tension.\n\n\"Beth, this time you have to tell me how it feels. Tell me what to do to make it feel better.\"\n\nBeth squatted over the machine once again, rolled her hips to wet the tip and slowly sank down on the machine in small pumping plunges.  \n\nJohn got up, grabbed the controls and settled in an overstuffed chair, the controller between his knees.  His gaze at Beth was intense, with a small furrowing of his eyebrows in concentration.  He turned both volume controls down and flicked the switches.\n\n\"What do you feel?\"\n\n\"Not much yet...\" and Beth giggled.\n\nJohn advanced the vibration control slightly.\n\n\"Mmmm.  That feels good.  I like the vibration.\"\n\n\"Feels good?\" John asked.\n\n\"Ohh, John, the vibrations make my clit tingle, it makes me really wet.\"\n\n\"More vibration?\"\n\n\"Ohh please...  please make me tingle...\"\n\nJohn advanced the control a bit higher.  He stood briefly to pull his pants and jockeys off, his cock already deeply red and completely engorged.  As he settled back into the chair, he advanced the rotation control again slightly.\n\n\"Oh god! John!  It... ohh!  It touches my ugh, my special spot!\"\n\n\"Does it feel like my cock?\"\n\n\"No it feels...  ohh... it feels different... oh fuck! It feels different than anything I've ever felt. Ohh...\"  Beth's breath was coming in gasps now as her excitement increased dramatically,  \"I'm getting close John... Ohh, I'm getting... almost... almost... there...\"\n\nJohn's hand was wrapped around his cock, sliding in slow, languid strokes the full length of his cock.  He increased the volume control of the rotation and then doubled the vibration.\n\nThe suddenness of Beth's first orgasm surprised her.  Her body tensed in the same rhythm, but the intensity of the tension kept increasing instead of falling off and rising again as it had been.  She could feel the hardness of her nipples, felt the firmness of her breasts as the muscles underneath became hard.  She had a momentary doubt and opened her eyes briefly to look at John.  Although his hand was still on his cock, it was almost haphazardly placed there.  She glanced at his eyes and saw the total focus, the attention to every signal her body gave, and right as she crested and nearly lost her touch with the here and now, she glanced over his shoulder to see Sharon standing at the door, her hand in her panties, eyes wide as her arm made the rhythmic movements that can only signal one thing.  Beth's eyes did the white-eyed roll back and her world descended into a maelstrom of tingles, of clenching pussy walls, of sparks of pleasure as that infernal rotating pleasure spike crossed her G-spot faster and faster.\n\nShe heard a voice, almost detached, distant, and finally concluded that it was her own.  She could no longer control her arms, her hands suspended in the air clenching in time to her pussy as if trying to grab onto a dash board in front of her.  Her knees went to another place as her body settled down completely onto the Sybian and still it buzzed and flicked.  Her body vibrated with the tension of her orgasm, gradually increasing in intensity to become a shudder as another peak rose and broke as if it were a wave battering the volcanic shores of Hawaii in the height of the winter wave season.  Beth's eyes fluttered open once again, briefly, confirming John's continued attention, then gave herself to her pleasure, losing what we know as consciousness.\n\nHer body slid in slow motion to the side, falling to land gently once again on the floor, her chest heaving as she struggled to feed oxygen to her starved system.  Her eyes still closed, John marveled at the aftershocks her body went through.  They seemed almost as intense as the original orgasm. John watched, amazed, at the slowness of their subsidence.\n\nJohn literally jumped as Sharon shouted from behind him, \"My turn!\" Her pants were off and John watched her drop them on the floor as she rushed past him to settle down over the machine.\n\n\"Sharon!\"  John said, mustering what he hoped was the appropriate level of shock.  Sharon grabbed the controls from John and dialed them as if she was the master controller of a nuclear power plant trying to control a meltdown.  The meltdown came... and quickly.\n\nSharon's body began to shake, her nipples hard as she pulled her blouse over her head.  John jumped a second time as he felt Beth's hand touch his painfully hard cock, fingers slowly wrapping around the shaft, beginning their slow inexorable trip up to shock his system with waves of pleasure as her fingers passed over the purple, engorged head.\n\nBeth slid up John's body, her lips pressing tightly against his, her sucking of his bottom lip intense.  'Shit! That's going to leave a mark,' he thought as her teeth came down slowly to pinch his lips, to trap him in a liplock, face to face, sharing breath, sharing passion as Sharon's squeals increased in volume and profanity.\n\nBeth turned her back to John and pushed him deeper into the chair as she settled down on him.  He was amazed, as he was every time that his hard cock split her moist petals of womanhood, to bury itself deep within her, at her softness, her tightness, her total possession of him.  Beth fell back against John, her hair brushing his face as she rose and fell on him.  \n\n\"See how much she focuses on cumming, Beth?  See the passion on her face?  She's nearing the point where she'll lose control, babe, just like you did.\"\n\nBeth settled down on John hard, as if she was trying to get just a little more of his cock buried deep inside of her.\n\n\"She's starting to cum, Beth. Watch her.\"\n\nBeth couldn't help but watch.  John told Beth to watch Sharon's face and as she did, Sharon crested her wall of impending erotic, all-consuming pleasure.  Beth began her last intense orgasm as she felt John begin to thrust into her hard, raising her legs off the chair, burying himself in her, freezing in position to jerk with each shot of pearly, white-hot semen deep into her womb.  Sharon's orgasm was heralded with a spurt of clear liquid that shot from her pussy, wrapped around the still rotating penis of the Sybian machine.  \n\nBeth settled into the deepest post-orgasmic warmth she'd ever felt as John's arms wrapped around her and squeezed her, his lips raining kisses on her back, her shoulders, her neck.  She felt warm and loved and it shocked her to understand that their closeness was even increased by being able to share their observation of the intensity of Sharon's orgasm.  She felt no shame or embarrassment as she laid back against her lover, her legs spread, John's slowly deflating penis still joining their bodies, their combined juices drooling slowly down John's shaft, to drip from his loosening sack. \n\nBeth came to a conclusion.  With John by her side, her inhibitions were rapidly crashing.  She knew this *thing* wasn't responsible for her pleasure, for her loss of inhibitions, it was nothing but a tool.  She knew that she and John had become one."
    ],
    "authorname": "Just_John1",
    "tags": [
        "beth john",
        "john marveled",
        "control thing",
        "body settled",
        "chest beth",
        "john ohh",
        "john control",
        "would've guessed",
        "sparkle eye",
        "john beth"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-sybian-introduction-ch-02"
}