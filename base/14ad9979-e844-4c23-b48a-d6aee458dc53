{
    "title": "Audrey's Awakening Pt. 05",
    "pages": [
        "I removed the rest of my clothing and made my way into the large sumptuous bathroom to begin filling the jacuzzi. As the tub filled, I sat on the edge and dangled my bare feet into the warm water while I waited for Audrey.\n\nThe last hour was little more than a jumbled blur in my memory that still somehow seemed almost inconceivable. Audrey and I had actually DONE it. But, then again, what had we actually done exactly? Had sex? Made love? Fucked each other's brains out? I shook my head in astonishment at the turn of events. Whatever it was that we had done, or even choose to call it, had still been one of the most incredible experiences of my life.\n\nAudrey and I had, of course, experienced the physical act of intercourse one time previously, but on that occasion, the act had been somewhat clinically performed in a perfunctory manner, as Audrey had so eloquently deemed it, her \"science experiment\". And, while it had, indeed, been a very pleasant experience for both of us, it had most definitely lacked any measure of ardor or passion. That had certainly not been the case several minutes ago when Audrey and I had both seemingly been inflamed with a mutual want, desire, and need. We had gone at one another like love-struck teenagers in heat. The sedate conservative housewife and mother I had always known had matched me lustfully, thrust for thrust, vigorously, and without inhibition. \n\nAudrey entered the bathroom a few minutes later wearing one of the fluffy terry-cloth robes provided by the hotel. She carried her dress, which had been neatly placed back onto its hanger. \"I thought it might be best to leave the dress in here so you'll have it handy to put back into your garment bag for the trip home,\" she said, smiling somewhat sadly.\n\nThe trip home? Oh, fuck. Audrey was still under the impression that we were going home tomorrow. I cringed inwardly and mentally smacked my forehead as I had yet to tell Audrey how this little Las Vegas outing had actually been booked as a two-night stay. I had kept it from her earlier, fearing she would balk at such a long trip, and it had completely slipped my mind once we had arrived.\n\nShe stepped up to the jacuzzi and dipped her toe down into the water, \"Oh, that feels nice,\" she said, smiling broadly. She slipped the robe from her shoulders, setting it aside on a small chair and stepped into the water, slowly lowering her body until immersed up to her neck.\n\nMy eyes almost had a heart attack to see her completely nude for the very first time. While her sexy dress had most certainly left little to my imagination about her voluptuous figure, the physical reality of Audrey's nude body was astonishing to behold. Her breasts were full and perfectly formed, with only a hint of sag, her nipples erect and jutting proudly from the darker circle of her areolas, contrasting dramatically with her otherwise creamy white complexion.\n\nAudrey's stomach was surprisingly flat for such a mature woman, especially one who had borne three children. Somewhat surprisingly, she was completely without any of the telltale stretchmarks which might have revealed evidence of her previous pregnancies. Her waistline had thickened over the years, but in a way that enhanced her figure and emphasized her maturity in a very appealing way. A small and rather pleasing bulge of flesh encircled her waist just slightly above the wide swell of her hips, culminating at the sensually fleshy bulge that extended from just below her navel to her pubic mound. A very thin white scar ran across her lower belly just above her pubic hair, giving evidence to having delivered at least one, if not all, of her children by cesarean. Her pubic hair was light in color, the hair rather sparse, appearing almost trimmed and revealed her lovely pink labial lips.\n\nAs she settled into the warm bubbly water with an audible sigh of pleasure, I slipped into the water beside her. We sat side by side, leaning together with clasped hands for several minutes, just savoring the pleasure of the warm therapeutic bubbles. \n\nShe turned her head and kissed my cheek and I smiled and turned to face her. \"I feel as if I should apologize to you for the way I threw myself at you earlier,\" she said, averting her eyes as her cheeks flushed. \"I felt terrible for the way I reacted out in the hallway when you kissed me goodnight, and I just wanted to make up for my mistake by giving you the kind of goodnight kiss you deserved. It, um...never occurred to me that I might get so carried away.\"\n\n\"I think it's safe to say that the getting carried away part was mutual,\" I smiled. She raised her eyes and nodded.\n\n\"It was, wasn't it,\" she agreed, nodding reflectively. \"You know, I've seen a lot of those movies and TV shows where a couple will look meaningfully into each other's eyes and then just begin ripping their clothes off in some kind of overwhelming sexual frenzy...and then making mad passionate love wherever they happened to be.\"\n\nI smiled, thinking that pretty much summed up what had happened to us earlier.\n\nAudrey laughed softly, \"I was forever rolling my eyes during those scenes, reasonably sure it had to have been more of a director's poetic license than anything based in reality. I mean...who REALLY does that kind of stuff, right? Well, anyway...until tonight that is, when I totally lost my mind with you. I came in to kiss you goodnight, and then the kiss became...something so much more than that. A lot more. All I could think of was how much I wanted to be naked with you...and feel you inside me. I've never felt such a strong desire before with anyone, ever.\"\n\nI nodded, not knowing how to respond to what she said because I too had been swept away by my lust for her.\n\nShe reached out and placed her hand against my cheek, smiling as she looked into my eyes, \"So, thank you, Jessie, for opening my eyes and allowing me to feel so much passion. I think you awakened something inside me that I never even knew existed.\" She bent and kissed my lips lightly and, as she pulled away, I could see her eyes welling.\n\n\"Hey,\" I said with concern, reaching out to wipe a tear from her cheek with my thumb.\n\n\"Sorry,\" she said, wiping both eyes with her fingertips. \"This entire day has just been just so wonderful...almost magical,\" she continued, trying to smile. \"And now, I think it's finally hitting me that it's almost over.\" She sighed heavily and her shoulders drooped. \"And tomorrow I'll be back home and have to deal with whatever remains of my life when I left.\"\n\nI slipped my arm around her shoulders and held her close. \"Well, schweetheart,\" I said in my best Humphrey Bogart imitation, \"at leasht we had Lash Vegash.\"\n\nAudrey giggled girlishly even as she wiped the moisture from her eyes. \"You never fail to make me laugh with those silly little imitations you do, thank you for that.\"\n\n\"Silly?\" I retorted, lapsing into my best John Wayne. \"Well, pilgrim...Listen up, and listen TIGHT. I thought I did pretty darn good. Now, take'em to Missouri!\"\n\nAudrey collapsed in laughter, \"Stop it, you're making my sides hurt,\" she gasped, holding her hand to her chest.\n\nAs her laughter subsided, I pulled her close and kissed her lips lightly. As we kissed, I reached up to cup her breast tenderly, caressing her peaked nipple gently between my thumb and index finger. \"God, Mom...you have the most incredible body I've ever seen,\" I said, looking directly into her eyes.\n\nShe smiled, \"Thank you,\" she said, \"You have no idea how much it pleases me to know someone feels that way about me.\" She bit her lip thoughtfully, \"It seems kind of surprising though, given that you married my daughter who has such a petite little body that's absolutely nothing like mine.\"\n\n\"Laura has a gorgeous body, there's no doubt about that,\" I smiled. \"But I believe I have already told you how it would not disappoint me, even in the slightest, if when her body matures it would look more like yours.\"\n\n\"You know, years ago, when I first met Ken, I had a figure very much like Laura's. I was slender and petite and looked good in a bathing suit. And I'm sure that was probably a great deal of the attraction for Ken at the time.\"\n\nI nodded, thinking that certainly sounded understandable.\n\nShe frowned and her brows furrowed even deeper, \"And yet, now that I'm older and my body has...shall we say, matured, Ken's original attraction for me seems to have gradually faded over the years. When we first got married, we pretty much had sex every day. Every single day. Sometimes even more than once. And it was like that for many years, he couldn't seem to get enough of me.\"\n\nShe smiled winsomely, \"I suppose it could truthfully be said that he kept me barefoot and pregnant for the first five years of our marriage. But then, as time wore on, the frequency of sex diminished. From every day to twice a week, to twice a month. And I was almost always the initiator. Even though I never actually got any physical pleasure from sex, it pleased me to be there for Ken whenever he needed me. Lately, though, I'm lucky if I can entice him once a month...if even that.\" She sighed heavily, \"The saddest part of it all, the part that really twists a knife in my heart, is that I couldn't help but notice how young and slender the woman in bed with him was.\n\nI shook my head in disbelief. It seemed inconceivable that ANYONE could sleep beside such a beautiful and desirable woman and not want to make love to her. \"Listen,\" I said, leaning close to kiss her lips lightly. \"When it comes to you, I'm not even going to pretend I have even the slightest bit of understanding or empathy for Ken. And when it comes to you, I have always felt that Ken was the luckiest man on the planet. And I mean that. However, now I've come to the conclusion that he's also the stupidest.\n\n\"Thank you for thinking so,\" she said, sighing heavily as she lay her head back onto the padded headrest. \"It's sad to think how this whole wonderful trip is almost over, Jessie. I wish we could stay here and make it last a little longer.\"\n\nI turned to her and smiled broadly. I had been wondering how I might broach that particular subject with her, and now seemed the perfect opportunity. \"What if I told you your wish had been granted?\"\n\nShe opened her eyes and looked at me skeptically. \"How's that?\"\n\n\"Well...when I originally made the getaway arrangements with the travel agent, it was actually cheaper to book these hotel rooms for two nights, instead of just one, so that's what I did.\"\n\nShe sat bolt upright; her mouth opened in surprise. \"What?\" she gasped. \"And just when were you going to tell me this?\"\n\nI laughed, \"Well...I guess now seemed like the perfect opportunity.\"\n\nHer look of incredulity began to fade, and a smile took its place. \"You're serious? We can have these rooms for another night?\"\n\nI nodded and she almost threw herself into my arms. I laughed softly, \"I'm beginning to get a sense that you are okay with the idea,\" I said facetiously.\n\n\"Okay?\" she said with a smile, \"Oh, Jessie, I'm more than just okay, I'm ecstatic. There's SO much more I want to see and do and experience here before I have to go home.\" She lay back, smiling up at the ceiling, her smile fading moments later as she turned to face me.\n\n\"But most of all, Jessie, I'm especially happy to be able to spend more time with you. And, after everything that's happened tonight, I think it's a shame that you've booked two rooms because...\" She paused and looked at me thoughtfully, \"Well, because I'm really hoping I won't have to sleep alone tonight, or even tomorrow night.\"\n\nI smiled and brushed her cheek with the back of my fingers, \"I don't want to sleep alone either,\" I said, looking directly into her eyes.\n\n\"You're the best lover I've ever had, Jessie. And...\" She paused and bit her lip, \"I want more sex with you too while we're here. A lot more. If I have to go back home and resume my everyday humdrum wife and mother role, I want to always have this special time with you to remember and make me smile.\"\n\nI took her face in my hands and kissed her lips. \"Anything you want or need from me is yours, Mom.\"\n\n\"Be careful what you promise,\" she said with a smile. \"Because, when it comes to making love with you, I'm just liable to be a little demanding.\"\n\nI laughed aloud, \"Oh, I tremble in fear,\" I said smiling broadly.\n\nAudrey laughed, reaching over to place her hand on my thigh. \"I think I can already feel your body trembling,\" she said teasingly as her hand moved between my legs to stroke my cock tenderly.\n\nWe kissed passionately as she stroked me to full erection. Without breaking contact, she shifted her position, lifting her leg to slide her thigh across my legs and then raising her hips to straddle me.\n\nA moment later, she guided my cock to the entrance of her vagina, teasing the hard rise of her clitoris as she moved the tip of my cock back and forth between her lips.\n\nShe lowered her hips onto me, taking me deep inside her. As I penetrated her, she tore her lips from mine and gasped, her eyes wide as she looked into mine. \"Oh, Jessie!\" She gasped, her voice low and breathy as her hips began to move rapidly. \"Oh, God, Jessie...I can't stop it...I'm cumming already.\" She pulled my head down, her arms tight around my neck, her lips close to my ear, making soft mewling deep in her throat as her orgasm took her away. I felt the muscles of her vagina tightening on me as she moved and I grasped her buttocks firmly, holding her to me as she surrendered to her pleasure.\n\nAs her orgasm began to wane, I felt mine begin to reach the point of no return, the exquisite sensuality of her vagina could no longer be denied. I wrapped my arms tightly around her waist and thrust up into her rapidly, the water in the jacuzzi splashing out and over the floor from my forceful exertions.\n\n\"Yes!\" She gasped, raising her head to look into my eyes. \"Cum for me, Jessie...Cum inside me.\"\n\n\"Oh, God, Mom,\" I gasped, feeling myself losing control. With a cry, I erupted inside her, pulling her hips tightly to me as I let go. Audrey crushed her lips onto mine as I came, moaning softly into my mouth.\n\nMoments later, as our bodies stilled, Audrey raised her head and looked into my eyes. \"God, I love the way you feel inside me,\" she said with a little smile as she tightened her abdominal muscles to gently squeeze my cock with her vagina.\n\nI smiled up at her, \"What a coincidence,\" I said, \"I was just about to tell you how much I love the way it feels to BE inside you.\"\n\nAudrey laughed softly and gave me a quick peck on my lips as she rolled from my lap to resume her seat beside me in the jacuzzi. \"We should probably think about turning in pretty soon,\" she said. \"It's getting late and I'm hoping we might be able to get an early start to the day. I plan to get in some industrial strength shopping. I hear Caesar's Palace has some really nice shops and, since we're here an extra night, I think I'd like to look for a new dress to wear to dinner tonight.\"\n\n\"A new one?\" I responded. \"Those shops at Caesar's are liable to be pretty pricey.\"\n\nAudrey smiled and waved her hand dismissively, \"Not to worry,\" she said. \"I happen to have Ken's expense card. After everything he's put me through, I think he owes me a new dress at the very least. Wouldn't you say?\"\n\n\"Indeed, he does,\" I smiled as we stood and stepped from the jacuzzi. We toweled off and made our way into the bedroom.\n\n\"I'll just be a minute,\" said Audrey as she picked up her robe and made her way to her adjoining suite.\n\nI reclined on the bed with one of the hotel's complimentary bottles of skin lotion, my back to the padded headboard and my legs stretched out, crossed at my ankles. After the jacuzzi, my skin felt dry and, along with the arid desert dryness of Las Vegas, I was definitely in need of a bit of moisturizing. I took a small handful of lotion and slathered it over my arms and chest, smiling at the soothing sensation as well as the sensuality of the slick viscous lotion on my skin. As I began to apply lotion to my legs, Audrey entered from the other room wearing only the briefest hint of pink lingerie, a very short and very transparent robe that barely reached below her hips to the top of her thighs. It was tied loosely around her waist with a burgundy satin tie, and its transparency revealed an astonishingly view of her bare chest beneath, from her neck to the top of her matching pink bikini panties. As she moved, her breasts swayed alluringly beneath the filmy pink material and I couldn't help but smile with appreciation.\n\nNoticing my appreciative attention, Audrey stopped and smiled. \"What do you think? Do you like it?\" she asked, smiling somewhat coyly as she slowly turned to show off her sexy lingerie from all angles. \"It's new,\" she said. \"It was supposed to be a sexy surprise for Ken when I went up to visit him.\"\n\n\"Wow,\" I said, smiling appreciatively at her curvy body. \"Honestly, Mom, it was his loss entirely.\"\n\n\"Hey, save some of that lotion for me,\" she smiled as she approached the bed. She crawled onto the mattress and settled in beside me with her back to the headboard and her legs crossed at her ankles like mine. She took the lotion from my hand and squeezed a small portion into the palm of her hand and began rubbing the lotion over her hands.\n\nI uncrossed my legs and turned my body toward hers, reclining more onto my side. I smiled at her, watching as she carefully applied the lotion to her hands. I bent down and kissed her bare shoulder, smiling as doing so gave her a sudden shudder of pleasure.\n\n\"Why don't you let me do that for you,\" I said, taking the lotion from her and squeezing a dab into the palm of my hand. I took her left hand in mine and very tenderly rubbed the lotion between her fingers and over her entire hand.\n\n\"Mmm,\" she sighed pleasurably as I repeated the process with her other hand. \"You have a wonderfully tender touch.\"\n\nI pulled the satin tie at her waist, letting her robe fall open. Audrey smiled and bit her lip, shrugging the robe from her shoulders and baring her breasts. I applied more lotion into my hand and brought my hand to her upper chest, smoothing the lotion over her from her neck to the tops of her breasts.\n\nWith yet another large portion of lotion in my hand, I moved directly to her breasts, cupping and caressing each one in turn as I smoothed the viscous lotion over her skin. Audrey sighed pleasurably, laying her head back onto the padded headboard with her eyes closed, a slight smile playing at the corners of her mouth.\n\nTaking a turn with each of her breasts, cupping and caressing each one lovingly in the palm of my hand, I then applied a generous dollop of lotion to each of her nipples. With the tips of my fingers, I teased each of her nipples until I felt each areola wrinkle and tighten, making her nipples became rigid and erect. I took a sensual moment with each of her nipples, pinching each one gently between my thumb and forefinger. As I did so, Audrey sighed audibly once more and raised her hand to caress the back of my hand while I continued to rub the lotion into her skin.\n\nI took her hand and squeezed a generous portion of lotion into her palm. I raised her hand to her breast, and she sighed pleasurably as the moved her hand over her breast. I repeated the process with her other hand and felt my erection rising as I watched Audrey teasing and caressing her breasts, pulling on each of her nipples almost harshly and then squeezing her breasts tightly, pressing them together. Her breathing began to accelerate, her chest rising and falling rapidly as she watched with her eyes barely open. \n\nI held the bottle of lotion above her, letting it dribble and ooze between her breasts and down onto her stomach. Audrey sighed and leaned her head against my shoulder as I smoothed the lotion over her stomach.\n\nShe moved her hand down to her stomach, smoothing the lotion into her skin and caressing my hand with hers. She raised her face to mine, and I bent, kissing the bridge of her nose ever so lightly as she closed her eyes and sighed with pleasure, my fingertips moving down over the soft rise of her belly to the top of her panties. I bent my head and pressed my lips against hers and Audrey responded with a sharp intake of breath, her lips parting, moving against mine with a soft delicate sigh.",
        "Audrey's hand found mine and together we caressed her lower abdomen as we continued to kiss, her lips becoming very warm against mine. I slipped my fingertips beneath the waistband of her panties, lifting them slightly as we both slipped our fingers beneath it. \n\nLooking directly into her eyes, I slid my hand down, through her silky pubic hair to cup her vulva with my fingers. Her hand found mine, her fingers on top of mine as my hand moved with a slow sensual rhythm between her legs. I kissed her passionately and felt her respond pleasurably, her hips moving beneath my hand as she parted her thighs invitingly.\n\nI pressed the flat of my middle finger ever so gently between the soft folds of her lips and she moaned softly into my mouth, lifting her hips against my hand. I felt the warm gush of her arousal spread over my fingers and wetting her lips. She pressed her hand against mine, holding me tightly to her as her hips began to move more rapidly. Sensing she was near; I slipped my middle finger into her vagina. Audrey gasped, her eyes wide, her eyelids fluttering rapidly. I plunged my finger into her rapidly, hearing wet sounds emanating from between her legs as my hand moved rapidly against her.\n\nAudrey came almost explosively, pressing her thighs together tightly, holding our hands between her legs as her hips twitched almost spasmodically. She crushed her mouth to mine, moaning softly into my mouth as she let herself go and surrendered to the pleasure of her orgasm.\n\nAs her orgasm began to wane, she relaxed her thighs, pulling her hand from between her legs, she reached to find my erection. She moved her hand lightly over the curve of my shaft, sending a shiver of anticipation coursing through my body. She tenderly cupped my balls, squeezing gently and making me squirm with pleasure. She looked into my eyes and smiled as she took up the bottle of lotion and let a large portion dribble down over my erection. She took me in her hand and began to stroke me with increased speed and enthusiasm, her hand moving rapidly, her intention unmistakable.\n\nMy orgasm could no longer be denied and, as I began to move my hips, she pulled her lips from mine and looked meaningfully into my eyes as she stroked me.\n\n\"Oh, God,\" I sighed, staring into her eyes. \"Mom...you're going to make me cum.\"\n\n\"Yesss,\" she hissed, her eyes never leaving mine. \"I want you to cum. Cum for me, Jessie.\"\n\nI arched my back, feeling my orgasm suddenly swelling beyond my control. \"Mom!\" I gasped as my first ejaculation erupted over my stomach. Audrey closed her hand over the tip of my cock and squeezed tenderly as each succeeding ejaculation filled her hand and oozed through her fingers.\n\n\"Mom!\" I sighed once more, reaching up to caress her cheek, our eyes locked on one another.\n\nShe smiled at me as I let go, caressing my cock long after I had finished. She lifted her hand to her mouth and took two fingers into her mouth to taste my semen. \"You taste nice,\" she said, her lips curling into a sly smile. Moments later she rose and made her way to the bathroom, returning with a towel and a warm, wet washcloth, and proceeded to clean my stomach and pubic area.\n\n\"That was...incredible,\" I smiled.\n\nAudrey gave me a sidelong glance, \"I agree,\" she said. \"Although, for me, the word incredible seems a bit of an understatement. In my entire life, no-one's ever touched me so sensually.\" She looked at me and smiled, \"Thank you for making me feel so beautiful.\"\n\nI pulled her to me, and we kissed lingeringly, pulling away as we heard sounds of people in the hallway outside our suite and realized people were arising for the new day.\n\n\"Come on,\" I said, pulling back the bedding. \"We should at least try to get a little bit of sleep.\"\n\nAudrey nodded, her eyes looking tired as she crawled beneath the sheets. I switched off the light and we curled into each other's arms. \"Would it be possible for you to call me Audrey whenever we're being intimate together?\" She murmured softly, her head cradled against my chest.\n\nI smiled in the dark. It had certainly felt a little strange to call her Mom, especially while I was cumming, but in all the time I had known her, I had never called her anything but Mom.\n\n\"I LOVE that you call me Mom,\" she continued. \"Please don't ever stop doing that, it's very special and endearing to me. But it just sounds a little...inappropriate to call me Mom when you're inside me.\" \n\n\"I understand completely,\" I said softly, caressing her shoulder. \"And I'm glad you brought it up. It's felt a little odd for me too at those times.\"\n\n\"Thank you,\" she murmured, sounding very sleepy.\n\n\"Goodnight, Audrey,\" I whispered with a broad smile.\n\n\"Goodnight, Jessie,\" she responded nestling against me. We both drifted off to sleep very quickly, lying in the comfort of each other's arms.\n\nI awoke with a start a few hours later to the sound of the hotel room door being opened. Thinking it must be someone from the housekeeping staff, I sat up and opened my eyes to protest and was surprised to see Audrey entering the room with a cardboard tray of breakfast fare from Starbucks, coffee, and bagels. She smiled broadly, dressed casually in her knee-length shorts, her sleeveless blouse, and sandals. she approached the bed and sat down beside me, curling her legs beneath her as I rose to a sitting position and immediately began sipping one of the coffees.\n\n\"You're up and dressed. Why didn't you wake me?\" I asked with a smile.\n\n\"You were sleeping so soundly, I just didn't have the heart to do it,\" she said. \"I remembered that Starbucks downstairs from last night and thought breakfast in bed might be a nice way to start our day.\"\n\n\"It's perfect,\" I smiled, reaching for a bagel.\n\n\"Also...I hope you won't be angry with me,\" she said, looking suddenly anxious. \"But...while I was down at the front desk area, I kind of made an executive decision without asking you first.\"\n\nI raised my brows with curiosity as I munched happily on my bagel, and she went on to explain how she had turned in the key for the adjoining suite. \"I just figured it was ridiculous to keep it when its only function seemed to be a place to hold my suitcase,\" she explained.\n\nShe went on to reveal how she had proposed to the registration person how she hoped that, instead of keeping two suites for two nights, we might just keep one for three nights. \"They agreed,\" she said, smiling hopefully as she searched my eyes for my approval.\n\nI nodded enthusiastically and smiled, leaning forward to kiss her lips. \"Three nights? I can't think of anything nicer than spending an extra night with you,\" I said. \"I just need to call Larry to let him know. Maybe he'll even agree to stay an extra day as well.\"\n\nShe reached into the back pocket of her Bermuda shorts and pulled out a picture, obviously torn from a magazine, of some model or Hollywood celebrity I didn't recognize. \"What do you think of this kind of hairstyle for me?\" She asked.\n\nI nodded, it looked nice on that woman in the photo and would likely look wonderful on Audrey too. \"I'm hoping to find a hair salon today, I really need to do something with this old lady hairstyle of mine.\"\n\nAfter breakfast, I quickly showered and dressed, and we made our way down to the casino floor. Audrey wanted to browse the shopping area and we gravitated toward it. The first place that captured her interest was a hair salon that she had been hoping to find. I busied myself reading magazines and watching other tourists wandering around out in the mall area while Audrey had her hair attended to. I was astonished at the results, Audrey looked twenty years younger with her new style, a sassy kind of unkempt shag that framed her beautiful face wonderfully.\n\nWe walked hand-in-hand, looking in all of the shop windows and Audrey drank in every new sight with a child's sense of astonishment and wonder. The Versace shop almost took her breath away, and we spent a great deal of time there. She bought two new dresses, both very dressy and elegant, and both distinctly revealing and sexy. My favorite was a black dress that covered her body from her neck to below her knees and formed to her figure rather provocatively. The dress was quite literally transparent, with a darkened, solid panel that draped in a spiral from her left shoulder, down over her breasts and barely covering them, around her back and then over the front once more to cover her pubic area. The rest of her body was clearly revealed beneath the transparent charcoal material. I smiled, knowing that, because of the nature of the dress, she would be unable to wear anything beneath it.\n\n\"I can't wait to wear this on at dinner tonight,\" she beamed, smiling broadly. I returned her smile, shaking my head in mild astonishment to notice how much Audrey had opened herself to dressing almost proudly in such a provocative and revealing dress when it had been such a struggle for her the previous night.\n\nShe was also completely adamant about buying me a beautiful deep burgundy blazer that cost more than a month's rent anywhere in the country. \"Not to worry,\" she said with a broad smile, flashing Ken's expense account credit card. \"Ken can well afford it. Oh, and by the way, dinner tonight and tomorrow night will definitely on Ken's account as well. So don't even THINK about pulling out your wallet tonight.\"\n\nOutside on the Strip, Audrey admitted she was a little tired, as was I, and we headed back to the Bellagio. She pointed behind us at the tall Stratosphere rising into the skyline to the north. \"Do you think we can go there for dinner tonight?\" She asked. \"The hairstylist was raving about it. She said the dining room at the top revolves to see the entire city.\"\n\nI thought it an excellent idea and, as soon as we were back in our hotel suite, I quickly telephoned the Stratosphere and made dinner reservations for 7:00 pm. We both collapsed onto the bed after all the walking we had done and luxuriated in the blissfully deep pile of the mattress. We turned to one another and began to kiss and caress and slowly began to undo each other's clothing.\n\nWith my jeans unzipped and opened, Audrey caressed my erection and slipped her hand beneath the waistband of my briefs to release me from its tight confines.\n\nShe rose onto her elbow, looking down at my erection as she moved her hand gently along the shaft. \"You've got a beautiful penis, Jessie,\" she said with a smile. as she stroked me to full erection. \"There's something I've never done with a man,\" she continued, giving me a sidelong glance. \"But I want to do it now, and I'm really hoping I'll be able to make it good for you.\"\n\nTo my astonishment, she bent and brought her lips to the tip of my cock. Kissing me lightly, parting her lips to take the tip into her mouth, pulling with her lips again and again, with excruciating sensuality each time she raised her head.\n\nI closed my eyes and bit my lip, taking in a deep breath as she closed her mouth over the entire tip of my cock. She lowered her head, taking most of my cock into her mouth, her tongue swirling against me as she slowly raised her head, pulling ever so sensually on my shaft with her lips.\n\n\"Mmm,\" she moaned, as she lowered her head to take me into her mouth once more. She held me with her thumb and forefinger wrapped around the base of my shaft as her other hand cupped my balls and squeezed ever so gently.\n\n\"Oh, God, yes,\" I sighed as she began to move her head a little more rapidly. I lay my head back, entwining my fingers into her hair and guiding her movements as her head rose and fell with increased intensity and she moaned softly from deep in her throat.\n\n\"Oh, fuck,\" I sighed, feeling my orgasm beginning to build. \"God...Audrey, I'm going to cum.\"\n\nEven knowing I was about to cum in her mouth, Audrey never paused or slowed the rise and fall of her head and the exquisitely sensual pull of her lips. I gasped as my first ejaculation erupted into her mouth, and Audrey never even flinched, moaning softly from deep down in her throat and flicking her tongue rapidly against the underside of my cock as I continued to let go. Again...and again...and again. She took everything I had to give her, swallowing my semen almost hungrily, her lips pulling, urging every drop from me as she plunged her mouth down onto me and squeezed my balls gently, making soft moaning sounds in her throat each time she swallowed.\n\nI have had more than a few blow jobs in my life, from a variety of women, but no-one ever did so with as much passion and loving enthusiasm as Audrey. She continued to move her mouth on me long after I had finished cumming, sucking me lovingly and swirling her tongue along the entire length of my erection.\n\nShe pulled her mouth from me with a heavy sigh, rubbing the tip of my cock over her lips and then over her cheeks, her breathing heavily accelerated. When she looked up at me, her face was highly flushed, her eyes looking into mine were filled with need. \"Oh, Jessie,\" she sighed, her breathy voice low and husky. \"I love the taste of you.\"\n\nShe rose up and kissed me passionately and I could feel the heat of her need through her lips. I gently pushed her hip to roll her onto her back and then slid off the mattress, grasping the waistband of her Bermuda shorts and pulling them down over her hips, slipping them completely off along with her panties.\n\nShe lay gasping for breath, her stomach muscles twitching with anxiety as I lowered my face to her belly. I kissed her and flicked my tongue deep into her navel, parting her thighs with my hands and insinuating myself between her legs.\n\n\"Oh, God,\" she gasped, her body writhing beneath me as I brought my lips down into her silky pubic hair. I kissed her again and again, moving my lips lower to press against the soft rise of her labia. She cried out again, her fingers suddenly entwining in my hair almost painfully.\n\n\"Jessie!\" She cried aloud, her hips beginning to pulse beneath me. I knew she was about to cum, I could feel the tenseness rising throughout her entire body. I opened my mouth wide and closed it over her entire labia, pressing the flat of my tongue between her lips and sensing the hard rise of her clitoris there. Her juices permeated my mouth, flowing over my tongue as I pressed it into her.\n\nAudrey shrieked and her fingers tightened even more in my hair as her hips began to buck wildly. I held tightly to her, my arms around her hips, to keep my mouth positioned against her as she began to cum. Her hips moved rapidly, almost spasmodically as she writhed in the exquisite agony of her orgasm. When the sensitivity became too much for her, she pushed my head away with a gasp, crying out as her thighs twitched and shook uncontrollably.\n\nI smiled, her orgasm had quite possibly been the most intense orgasm I had ever experienced a woman having, and I felt proud and happy that it had happened with me and that I had been a part of it for her.\n\nAs her breathing slowed and her shaking eased, her body only flinching with an occasional pulse of pleasure, I lowered my mouth to her once more, kissing very lightly and avoiding the acute sensuality of her inflamed clitoris.\n\nHer fingers loosened and she stroked my hair as I felt her body relaxing. I brought my fingertips to her lips, parting them to feel the luxuriant lubrication of her vagina and then slowly inserted my index finger inside her.\n\nShe moaned softly, moving her hips slowly as I moved my finger slowly in and out of her vagina. I pressed my index finger against my middle finger and then slowly inserted both fingers into her. Audrey gasped aloud and I once again opened my mouth and began to lightly flick the tip of my tongue against the rise of her clitoris.\n\nAudrey groaned loudly and her hips began to thrust against me as she began to cum almost immediately. Her hips moved so violently I could no longer finesse her with the tip of my tongue and just held my open mouth against her as she let go.\n\nShe pushed me away for a second time as her orgasm began to ebb and this time rolled onto her side and closed her legs tightly to keep me away. I lay beside her and took her into my arms as her entire body trembled and tears flowed down her cheeks.\n\nI held her silently, my hands gently caressing her back until she brought herself under control.\n\n\"My God, honey,\" she whispered, her lips touching mine as she spoke, her eyes looking into mine imploringly. \"I...I...have NEVER...Oh, God, Jessie...\" She crushed her mouth to mine, and we kissed for a long time until we slowly and gently resumed a state of mind that resumed normalcy.\n\n\"Do you think we have time for a little bit of a nap before we have to get ready for dinner?\" She asked, her voice a little drowsy.\n\n\"Of course,\" I nodded with a smile, reaching to grasp the comforter to pull it over us. We drifted off to a blissful repose, both of us still only semi-clothed, and awoke refreshed as the late afternoon sunshine streaming through the windows announced the approach of evening.\n\n*\n\n(The story continues in Audrey's Awakening Pt 06)\n\n \n"
    ],
    "authorname": "Jaymie_dee",
    "tags": [
        "older woman",
        "milf",
        "oral",
        "orgasm",
        "cunnilingus"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/audreys-awakening-pt-05"
}