{
    "title": "Master! Master! Pt. 04",
    "pages": [
        "I knew what I was going to find on the other side of that door, but I still didn't have the guts to open it. Sonja had just come into the kitchen saying that there was someone in the shed, and considering the strange phenomena that had been happening to me lately, the circumstances of this stranger's presence were obvious. But I knew I had to face this new trial. Behind me were Momo and Sonja, Momo's ears twitching from her curiosity and Sonja growling and fighting her instincts to bark and yell.\n\nI opened the door of the shed and my palms met my face. \"Goddammit, this isn't funny anymore!\"\n\nCrouching in the back of the shed, surrounded by overturned firewood, was a small girl, drop-dead beautiful. With short white hair and waxy skin, she almost looked like a ghost. On the sides of her head were two fuzzy ears like satellite dishes, and wrapped around her ankles was a tail like a length of rope. She was shivering with teary eyes, cowering at the sight of me, a scrawny little thing. From the look of her, she was (or technically had been) a mouse living in the shed. She transformed last night under the woodpile, knocking it over.\n\n\"Are you... Master?\" she whimpered, covering her mouth with her hands as if to chew her nails.\n\nGreat, now I have a kid to take care of. Looks like I won't be \"playing\" with the new girl.\n\n\"Yeah, I guess I am,\" I said with a sigh.\n\nI took a step towards her and she squealed in terror. \"Please don't hurt me!\"\n\nI stopped, shocked by her cry. This was certainly new. With Momo and Sonja, I had gotten to know both of them as animals before they transformed, meaning that they loved me before they became people. But this new girl, I had never met her before. Perhaps she had seen me come into the shed while she was living in here, but that was it. I was going to have to build up a relationship with her from scratch. Not to mention this added credence to my theory that the girls actually acquired knowledge of human vocabulary rather than remembering it from past exposure.\n\n\"Don't worry, I'm not going to hurt you. Just let me get a look at you.\"\n\n\"Who are you?!\" Sonja yelled. \"What are you doing in our shed?!\" \n\n\"Sonja, Momo, go wait inside!\" I couldn't let the two of them crowd the new girl. They refused to leave so I was forced to herd them back to the house and toss them inside.\n\nI returned to the shed, the girl still cowering in the corner. \n\n\"Relax,\" I said, \"I just want to check you out.\"\n\nI slowly approached her, my arm outstretched. With every step I took, her shivering increased and she tried harder and harder to burrow into the corner and hide from me. At last, I rested my hand on the top of her head, and I felt her tension begin to wane. I ruffled her hair, the way I would Momo or Sonja, and she soon became calm, though she remained curled up in a ball.\n\n\"See? No one is gonna hurt you. Now let me see that pretty face of yours.\"\n\nShe looked up at me, her face like a doll's. She was beautiful, but something didn't quite look right. I then did a quick check of her body, finding dirt and signs of slight frostbite from after she transformed.\n\n\"Aren't you a little cutie? Come on, let's bring you inside, get you something to eat, and get you clean and warm.\"\n\nI scooped her up in the princess hold, her small body even lighter than it looked. She didn't resist me picking her up, but she grabbed her tail and clung to it. I carried her outside, letting the sunlight shine on her. I could see Momo and Sonja in the windows, watching us like wolves eyeing a wounded deer. I opened the door and Sonja rushed over, sniffing her the way only a dog would. Suddenly swarmed by the blonde beauty, the new girl squealed in fear and buried her face in my chest. Momo, on the other hand, kept her distance, but the twitching of her ears and look on her face told me that she was very curious.\n\n\"Both of you get back! Scram!\"\n\nI kind of had to kick them a little to get them to back off, sending them scurrying back to the couch to watch us. I brought the girl into the kitchen and sat her down in one of the chairs. Now with proper lighting, I was able to get a better look at her and confirm the strangeness of her body (beyond her ears and tail of course). She wasn't a little girl; she was a woman, well, college student age, but just tiny. I don't mean that she was stocky and scrunched up like a midget (I know I should say little person, but there aren't any around, so fuck it, I'll say midget), I mean her body was perfectly proportionated, but it was as if all her atoms were closer together than they would be for normal people. The bone structure of her hips, face, shoulders and the rest of her body belonged to a girl on the tail-end of puberty. She was like the tiny woman that Moe dated in that episode of The Simpsons. Her flat chest and shy mannerisms just made her look like a child from a distance. Quite simply, she was \"mousy\", pun very much intended.\n\nIt made sense in a weird way, her appearance at least. Since she was such a small animal before, it would be strange if she wasn't also small in her human form. After all, Sonja, formerly a dog, was taller than Momo, formerly a cat. It certainly explained her flat chest. She was also at the same developmental stage as Momo and Sonja, comparable to a nineteen or twenty-year-old. Maybe the age of the human form was based on the lifespan of the animal form. If, as a golden doodle, Sonja could live to be fourteen, then were she seven years old when she transformed, she might have the body of a forty or fifty-year-old. Or maybe whatever weird magic was causing this simply transformed the girls into human bodies at peak sexiness.\n\nAnyway, since she wasn't actually a kid, I seemed I might be able to play with her after all.\n\n\"Let me get you something to eat.\"\n\nConsidering what she had originally been, and the fact that she had just transformed, I went with something simple, a peanut butter sandwich and a glass of milk. As I worked, all three girls watched me, the mouse from her chair, now pulling her feet up and hugging her knees to her chin, and the cat and dog from the living room, their heads poking up from above the back of the couch. I set down the food and drink in front of her and took the nearby seat.\n\n\"Here you go. You eat the sandwich with your hands, and for the milk, you pick up the glass and bring it to your lips to drink.\"\n\nHer eyes moved from me to the sandwich, the look of fear on her face still sharp. She snatched up the sandwich and sniffed it. Liking the smell, she started to nibble on it with rapid, tiny bites, the way a rodent would. As she ate, I pulled out my phone and called the office. As the manager, it was no big deal for me to be late, and as long as someone covered for me, there were even times when I could take the day off. It would be better not to skip the whole day, so I just called my assistant and told her I would be in later.\n\nI turned off my phone as the girl began trying to pick up the cup. She clearly was still getting used to her new body. I helped her out and clasped her hands around the cup, her pale face turning red as my hands overlapped hers, and then I helped her bring it to her mouth. Both Momo and Sonja had seen me do things like this before they transformed, so it was easy for them to do it when they first turned. \n\nEven with my help, some milk trickled from her mouth. I got a paper towel and wiped the drops off her chest, suddenly finding myself aroused. Normally, small boobs aren't that great. I mean, of course, boobs are boobs, but Momo and Sonja had spoiled me. But strangely, the fact that her body was so small actually made her flat chest very sexy. I wanted to tickle her little pink points and made her shiver. In fact, everything about her was turning me on. Her shyness and innocence made me almost want to dominate her a little bit. She was very... how do I say this... she was very... molestable? No, that sounds too creepy.\n\nI waited for her to finish eating before I spoke to her. \"It's good, isn't it?\" She nodded, but still looked fearful. \"Tell me, do you have a name?\"\n\n\"A name?\"\n\n\"You know, something I can call you? My name is-\"\n\n\"Master!\" Sonja yipped. \"Can we come see her now?\"\n\n\"Not yet. I'll wait until she's comfortable, then you can come over.\" I turned back to the girl. \"Anyway, they call me 'Master'. You said that too, didn't you?\" She nodded again. \"So, you can call me that if you want. Do you have a name?\"\n\nUnlike Momo and Sonja, I had not given this girl a name, no one had. Would she come up with one herself?\n\n\"No, I don't,\" she murmured, looking away as if ashamed. I almost expected her to start crying.\n\n\"OK, then I'll give you a name. From now on, your name is... Chloe, a cute name for a cute girl.\" I patted her head and she looked at me.\n\n\"Chloe?\"\n\n\"That's right. Now, once you finish your sandwich, I'll give you a bath.\"\n\n\"A bath?\"\n\n\"It's like sitting in a big puddle of hot water. It must have been freezing out there last night. You've got some signs of mild frostbite. A nice bath will help you heal and get you all cleaned up.\"\n\nIn all honesty, I was very much looking forward to giving her a bath, but as my thoughts continued on down that line and expanded into greater things, I realized an inherent danger: I had no idea whether or not Chloe could get pregnant. Momo and Sonja had both been spayed when they were animals (at least there was a good chance that Sonja had been spayed, but I couldn't be sure), and as such, had never shown any symptoms of a menstrual cycle. There were only two possibilities: either Chloe could end up pregnant if we \"play together\", or she was sterile in this form and I didn't have to worry.\n\nUntil I knew which it was, I had only three courses of action. The first was that I simply use a condom, but frankly, I'm just not that kind of guy. If I can't do it raw dog, I don't really see a point in doing it at all, especially if it's my first time with this new girl. The second was to try and get her onto some kind of contraceptive, but I had no idea how to even get it and I didn't want to risk giving Chloe medications that could be dangerous. The third was the most painful but ultimately the best choice: wait one month before having sex with her. If she didn't have a menstrual cycle in that time, then it meant she and the girls were all naturally sterile, or at least that she didn't operate on the same cycle as normal human women. Besides, it was far too early for me to play with her. I needed to build up a trust between us. \n\n\"Ok girls, you can come in now.\"\n\nSonja immediately rushed in, smelling Chloe just like before with her tail wagging. The albino pygmy gave a pathetic whimper as Sonja prodded her with her nose. Momo came in much more slowly. \n\n\"These two are Momo and Sonja. They're just like you.\"\n\n\"I'm Sonja!\" the doodle cheered.\n\nMomo didn't reply and simply huddled behind me. Was she feeling jealous like when Sonja transformed? No, it didn't seem that way. She also didn't seem afraid. \n\n\"Are you going to play with her, Master?\" she asked.\n\nIt was not the question that surprised me. I had expected her to ask that after everything with Sonja. It was the way she asked, very casual, that surprised me. I looked back at her and realized that her tail was swaying and there was a soft purr in her throat.\n\n\"Play?\" Chloe asked, once again tense. Was it something painful?\n\n\"Playing with Master is a lot of fun!\" said Sonja. \"We do it all the time! It feels amazing!\"\n\n\"Hold on, girls. Let's take it slow. You both were with me a long time before I played with you. I'm going to wait for Chloe to become comfortable with me. Now, let's move this conversation upstairs. Chloe? Can you walk?\"\n\nBeing addressed, Chloe's first instinct was to release a terrified squeal and cover her head with her hands. \"I'm sorry! I'm sorry!\"\n\n\"Chloe, it's ok, you haven't done anything wrong. Just tell me, can you stand up?\"\n\nShe looked up at me with big, tearful eyes, and nodded. \"Uh-huh.\" She then got to her feet, her hands clasped in front of her.\n\n\"Good girl. Now come on, let's go upstairs.\" \n\nI led her up to the bedroom with Sonja and Momo following, and sat her down at the foot of the bed. I then went into the bathroom and turned on the bath faucet, filling the tub with hot water. I came back out, finding her still sitting on the bed, but with Sonja pressed next to her, happy as could be. Meanwhile, Momo was lying across the pillows by the headboard. Not only was she still keeping her distance, her tail was continuing to flick and coil and she had a curious gleam in her eyes.\n\n\"From now on, you'll be living in the house with us and sleeping in bed with us. It's certainly a lot nicer than that shed you've been staying in.\"\n\nThough now that I thought about it, I wasn't sure there was enough room. We slept on a king-sized bed, which, while large, was at its limit comfortably accommodating three people, all of which liked to stretch and roll while they slept. With Chloe also squeezing in there, we might end up packed like sardines, just like before. Maybe if we dropped the mattress onto the floor and added some couch cushions as an extension...?\n\nThose thoughts were pushed aside when Chloe got down on the floor and crawled under the bed. Her head poked out and she looked at me. \"Can I stay under here?\" she asked, but her shaky voice made even that simple question sound pathetic.\n\n\"Well, I meant that you would sleep ON the bed.\"\n\n\"I'm sorry!\" she cried out, grasping her ears and pulling them down, looking like she was expecting someone to hit her.\n\nI sighed. \"You really like it under there?\" \n\nShe nodded. \"I feel safe.\"\n\n\"Ok, I just thought it would be more comfortable for you in the bed. I suppose we can make a little nest for you under there with blankets and pillows. Just know that you're always welcome up top.\"\n\nFor the first time, she smiled.\n\nIn a few minutes, the tub was full and I brought Chloe into the bathroom, though I had to lock the door behind us to keep Sonja and Momo from following us inside. I beckoned Chloe to the tub. \"Go ahead, the water is perfect. Just climb in and enjoy yourself.\"\n\nClutching herself and shivering, Chloe walked over and first sniffed the water. She batted it around with her fingers, gauging the temperature, and then dipped her right foot in, one tiny toe at a time. She gave a tiny squeak and lowered herself into it, her breathing deepening as the water enveloped her. At first, she simply huddled in the middle of the sub, clutching her knees to her chest, but with some coaxing, I got her to lie back and stretch.\n\nI sat down on the toilet. \"There, see? Isn't that nice?\" She nodded. \"Good, now, can you tell me the last thing you remember before waking up like this?\"\n\n\"I was in my burrow in the shed and I was about to fall asleep. I was tiny. Then I woke up and I was big. My burrow was ruined and I was cold. Then Sonja came.\"\n\n\"You don't remember the actual transformation?\"\n\nShe shook her head. There was nothing she could tell me to answer my confusion. The only thing I was now certain of was that origin was me, rather than my old house, but that was a huge problem. Chloe was proof that it was more than just pets that could transform, and the range and time needed for it to happen was variable. Minus the times when I went into the shed, Chloe and I had never been in any kind of proximity until now, and I hadn't lived in this house for very long. It seems that coming out to the woods was a bad idea. Were squirrels and birds gonna start changing?\n\nPerhaps I should move again, someplace where there aren't animals, but where? Any desert that can't even sustain lizards would be too inhospitable for us. Maybe I could move to a tiny island? No, because there are still animals there, crabs and mussels and everything else. It would be a major pain in the ass if I woke up to find a mermaid washed up on shore. Maybe northern Alaska or the Arctic? But then how would I provide for the girls? Perhaps if it was isolated enough to be away from the wildlife but not be too far from people and employment, maybe I could work on an oil rig? But I'm not sure I have what it takes for a job like that. I may be a Mainer, but I don't have antifreeze for blood. I'm just an office guy. Plus, it would be hard to imagine the girls being happy when surrounded by ice 24/7.\n\nEither way, I couldn't move now. All my finances were tied up in this place and I now had another mouth to feed. I'm the lone breadwinner of a family of four and it would take a long time to get another job at the same financial level. At the very least, with Chloe's size, she hopefully wouldn't eat as much as Momo and Sonja, but we would certainly need to get that vegetable garden going. Hell, it might be a good idea to go to the government or the scientific community. I had worked hard to avoid exposure, but maybe we would be treated like celebrities, our needs taken care of in exchange for the chance to study us. \n\nBut enough about that, it was time to indulge my inner-scumbag. I may not be able to \"play\" with Chloe, but I could still have a little fun.\n\n\"I'm not sure how you'd keep yourself clean out in the wild, or if you even bothered, but now that you're a person, you need to learn to bathe. Since you'll probably want to stay naked most of the time, you're going to inevitably get dirty and sweaty. So, you're going to need to shower every couple of days. I'll show you how. First things first, get your hair nice and wet.\" Chloe began splashing herself. \"No, I mean lower your head into the water.\"\n\nShe had a strong look of uncertainty, and I could understand why. Like Momo and Sonja, she not only had huge ears (the largest of the three of them), but huge ear canals. Every time the girls took a shower or bath, it would take them several minutes to get the water out of their ears.\n\n\"Don't worry, you'll be fine. The girls will show you how to get the water out of your ears.\"\n\nWith that encouragement, she slipped farther into the tub, letting it come up to her chin and then leaning her head back. She scrunched her face up as she felt the water flood her ears, and after a moment, she sat back up and leaned her head from side to side to drain them.\n\n\"Good girl. Now I'll apply the shampoo. This stuff is to keep your hair clean, but don't use it every day or it will dry your hair out.\"\n\nAfter taking off my dress shirt and undershirt, I retrieved the nearby bottle and poured some onto her scalp. I began working it into her hair and Chloe seemed to go limp. Her head was drooping, almost looking like a cobra under the spell of a snake charmer. Just like with Sonja and Momo, rubbing her head calmed her down. Her slender shoulders jittered as I rubbed her elephant-like ears, but from the small noises she was making, I could tell that she was enjoying it. \n\n\"Ok, we'll let that sink in while I wash the rest of you. Come sit up on the edge of the tub and I'll get you nice and soapy.\"\n\nChloe didn't understand but did as I told her. She sat her cute little butt down on the end of the tub with her back to me. It's amazing how something so simple as a girl's bare back can be so arousing. The line of her spine, the flexing of her muscles, the tenseness of her shoulders as if from embarrassment. I might not be able to last a full month with this girl around.\n\nI got the bar of soap and began rubbing it on her arms, making her shiver from the feel of my hands on her naked body. I then did her legs and her inner thighs, followed by her stomach. I was saving the best spots for last. I soaped up my hands and leaned against her, her back pressed to my chest. She shivered from the sensation and began to whimper as started working on her breasts. They were certainly small, just A-cups, but considering the size of her body, that just made them cute. I ran my palm and fingers across them, toying with her little pink areolas. ",
        "\"Master!\" she whimpered.\n\nShe covered her mouth with her hand, chewing on her finger as her nipples became erect. I knew this felt good for her, she simply was not used to these sensations. I began gently tugging on her nipples, trying to draw out the tiny squeaks she was working so hard to contain. I couldn't help myself, I started running kisses up her shoulder and neck, savoring the taste of her soft skin.\n\n\"That feels good, doesn't it?\" I whispered in her ear.\n\nShe squeaked in reply. \"I'm feeling... tingly... down there,\" she said, rubbing her thighs together.\n\n\"Oh, that just means I needed to wash that spot. Spread your legs for me.\"\n\nAfter wiping some excess suds off her petite breasts, I moved my hand down. At first, she had her legs spread, but the closer I got, the more she began to retract them, afraid of these new, strange sensations. I managed to worm my fingers between her thighs and reach her virgin slit. The lips were so plump and smooth, like two soft plums, they were just begging to be toyed with. It was too soon to actually start fingering Chloe, but I could just play with the entrance. I slid my fingers between the lips, squeezed them to make them puff, and tickled them, all while Chloe whined and squeaked.\n\n\"Master, this feels really weird!\"\n\n\"Don't worry, Chloe, just go along with it.\"\n\nI continued like that for another minute, using one hand to toy with her nipples and using the other hand to tickle her labia. I couldn't bring her to climax with this low level of stimulation, but once I stopped, I could tell it had drained much of her stamina. I finished by washing her back and then scrubbing her under the water to get off the soap and shampoo.\n\nI finally got her out of the tub, clean as could be, and wrapped her in towels. \"Now, since you just ate and had milk, I need to brush your teeth. This is something you'll need to do twice a day every day. It'll keep your breath fresh and stop your teeth from rotting.\"\n\nI sat her down on the floor and retrieved the toothpaste and new toothbrush from the medicine cabinet. With the brush wet and ready, I kneeled in front of Chloe. She was clutching herself and shivering, unable to make eye contact. This was concerning. Had I been too rough with her?\n\n\"Chloe?\"\n\n\"Eeek! I'm sorry!\" she squealed.\n\n\"Sorry? For what? Honey, you haven't done anything wrong. I just wanted to ask if you were ok. How are you feeling?\"\n\nShe began squirming, rubbing her thighs together. \"It felt weird when you touched me here.\"\n\n\"I'm sorry. That's a game I play with the girls. I guess it's too early for me to play with you like that. Don't worry, I won't do that again until you're ready. I'm sorry if I made you uncomfortable.\"\n\n\"Master... It felt kind of good.\"\n\n\"I thought it would. I'm glad. You have nothing to be sorry for. I'm the one who's sorry.\" I ruffled her hair and she again gave me a tiny smile, with her pale face now flushed. \"You have such a cute smile. Before I brush your teeth, I should dry you off. Look down and hold your breath.\"\n\nI got another towel and wrapped it around her head and rubbed her the way I would when drying off a dog, using both the towel and the air to dry her hair. But I was also careful, long-since learning how sensitive these girls' ears are. She kept her face down and tried to endure it with a silent composition, but she couldn't stop herself from emitting tiny squeaks. Once her hair was dry, I helped her get the water out of her ears, each passing minute making her give tiny mouse yawns.\n\n\"Are you feeling sleepy?\" She nodded. \"Then let's brush your teeth and then you can take a nice nap.\" I lifted her chin and brushed my thumb across her lips. \"Ok, open up.\"\n\nShe opened her mouth and I gingerly started brushing her teeth. She reacted the same way that Momo and Sonja reacted when I first brushed their teeth. The sensation of the bristles scraping against the soft tissue of her gums and tongue sent electricity through her nerves, and the fact that it was being done to her rather than doing it to herself intensified the feeling since she had no control over it. To them, the weirdness of the sensation was almost similar to a rectal thermometer. Her reaction was cute, to say the least, panting with watery eyes, as if she had been tied up and was being tormented by a vibrator.\n\nOnce finished, she spat out a mouthful of foam into the sink and rinsed. \"Now, let me smell your breath.\" She exhaled and I smelled nothing but mint. \"Perfect. Good girl. Now, let's get you into bed.\" I brought her into the bedroom, where of course, Momo and Sonja were waiting. \"Girls, unless you're here for a nap, scram.\"\n\n\"I wanna nap! I wanna nap with Chloe!\" said Sonja, jumping up and down and clapping. \n\n\"Momo?\" I looked at the feline, lying across the bed, tail flicking as if she was swatting flies.\n\n\"Momo wants to sleep with her too.\"\n\n\"Good. Chloe?\"\n\n\"I'm sorry!\"\n\n\"No, Chloe, I was just going to say that you should sleep in the middle. I know you said you'd sleep under the bed, but it would probably be better if you slept on top this time. Ok girls, under the covers.\"\n\nChloe got into the middle of the bed and huddled under the covers, holding them up to hide her mouth. Momo and Sonja crawled into the bed on her left and right sides, their naked bodies disappearing under the covers. Chloe was so small compared to them, her head at the same level as their bountiful breasts. The three of them were cute beyond words, a trio of naked animal-eared girls, looking cozier than a guinea pig sleeping in a wool sock.\n\nI sat down on the edge of the bed and took turns rubbing their heads, making each of them smile. \"You girls are just too much. Momo, Sonja, you be nice to Chloe, take care of her. When the three of you wake up for lunch, make her something to eat. Chloe, if you need anything, just ask them. I'll be a little late coming home, I need to get some stuff for Chloe.\" I then leaned forward to Momo and whispered in her ear. \"Also, if you can teach her to use the toilet, I will be eternally grateful and bring you three a reward.\" I then kissed them each on the forehead as they laid their heads on their pillows, snug as a bug in a rug. \"I'll see you tonight. Bye, girls.\"\n\n\"Bye, Master,\" they all said as I tucked them in.\n\n-----\n\nA few hours later, Chloe woke up to a strange sensation. She was being embraced and felt fingertips brushing against her skin. It was Momo, spooning against her, one of her nipples poking Chloe's ear. There was a purr in her throat as she dragged her fingers across Chloe's soft stomach, making the girl shiver from the sensation of being touched. Momo continued to purr, the movements of her hand becoming more and more intentional, as if searching for Chloe's most ticklish spots. Then she began to drift downward, her hand disappearing between the girl's slender thighs. Hanging out over the edge of the bed, Momo's tail curled as she began toying with Chloe's slit. The feeling of Momo's fingers probing such a sensitive place was drawing tiny squeaks from Chloe, unable to work up the courage to stop her. Lacking any sense of sexuality or the cultural values that humans applied to their genitals, the discomfort Chloe felt was due simply to her uneasiness of being touched by someone she didn't know. The same reaction would be drawn were Momo tickling her feet or playing with her hair, though they wouldn't make her blush and pant the way she was now.\n\nMomo leaned in closer to Chloe, the feline's excited breath being felt on the top of her head. Any time Chloe tried to move away, Momo would pull her closer and increase the intensity of her fondling. Soon enough, she even started to slip her fingers inside Chloe, making her whimper. That soft whine awoke Sonja, and the moment her eyes opened, she popped out of bed with a smile on her face, ready to enjoy the day.\n\n\"I want to go run around outside! Chloe, come run with me!\"\n\nMomo sat up, removing her moist fingers from Chloe's pussy and acting like nothing had happened. \"Master said we had to make her something to eat and teach her to use the toilet.\"\n\n\"I'll make the food, you teach her.\"\n\n\"Momo wants to make the food. You teach her.\"\n\n\"Rock, paper, scissors?\"\n\nMomo yawned and nodded. With Chloe watching them like they were two titans about to bare-knuckle box, Momo and Sonja held out their fists and shook them.\n\n\"One, two, three, shoot!\"\n\nMomo threw rock with her thumb up, while Sonja did some kind of sideways paper with her fingers spread. It should be mentioned that neither of them had any idea how to play this game. They simply saw it on TV and thought that that was how disputes were settled.\n\n\"Momo wins,\" the feline said. She was just guessing, but Sonja didn't know any better and conceded.\n\n\"Ok! Chloe, come with me to the bathroom!\"\n\n-----\n\nIn the kitchen, Momo poured a can of wet cat food into her bowl, some dog food with milk into Sonja's bowl, and set out a third bowl on the floor with some dry cereal. She had no idea what else to give Chloe. The dog and mouse came downstairs, Sonja chipper as usual, but Chloe now walking with her butt clenched. Getting her labia tickled by Momo had been pleasurable (at least physically), but Sonja teaching her how to use toilet paper was traumatizing. At least she wasn't taking it personally.\n\nShe watched as Sonja and Momo kneeled down on the floor like sphinxes and buried their faces in their food bowls. Chloe followed their lead, taking the same position. Truth be told, she preferred this method to sitting at the table. The sound of slurping and crunching filled the kitchen.\n\n\"Done!\" said Sonja after a few minutes, sitting up with milk running down her chin. \"Chloe, let's play outside!\"\n\nChloe had just enough time to finish the last of her cereal before Sonja grabbed her wrist and pulled her out the front door. She managed to break free of Sonja's grip and remained on the porch, but Sonja didn't seem to mind and simply pranced around the yard, singing to herself while her ears flopped and melons jiggled like dashboard bobble heads on a dirt road. Even in October, she could run around naked and be perfectly fine, though it took her a while to realize that Chloe wasn't actually with her.\n\n\"Come on, Chloe! Let's run!\"\n\nChloe pulled on her ears, trying to hide her face while her frightful shivers returned. \"But there are no leaves on the trees! The birds will see me and I'll get eaten!\"\n\nEven after transforming, her instincts wouldn't let her forget what life was like in the lower tier of the food chain. Sonja lacked such instincts.\n\n\"I wanna eat a bird! I'll chase the birds!\"\n\nSonja ran over and picked up Chloe, hoisting her over her shoulder. She dashed around the house, Chloe squealing in terror with her cute little butt in the air. Back inside, Momo was doodling with crayons, humming to herself with her ears twitching. \n\n-----\n\nMomo was waiting by the door when I arrived home. \"Master, look what Momo made!\"\n\nShe held out a picture of our strange little family, including Chloe. The childlike skill just made it that much cuter. \n\n\"Aw, I love it! Did you girls have a nice day?\"\n\nMomo nodded. \"Yeah, it was fun.\"\n\n\"I'm glad. Where's Sonja and Chloe?\"\n\n\"Taking a nap. They both ran around a lot.\"\n\nI walked into the den, finding Sonja stretched out on the couch. I patted her head and her tail began to wag. \n\n\"Hi Master!\" she said with a yawn.\n\n\"Hey, sweetie, how are you feeling?\"\n\n\"Good, hungry.\" She then rolled onto her back. \"Feed me and rub my tum-tum!\" A quick belly scratch left her groaning in happiness.\n\nBefore going to check in on Chloe, I got some firewood from the shed and built up a flame from the embers in the stove. In minutes, it was pumping heat through the house. I then went upstairs, where Chloe was under the bed, wrapped in a blanket. I climbed under the bed with her and rubbed one of her ears, slowly stirring her.\n\n\"Hey, Chloe.\"\n\nSeeing me, her eyes went wide and she blushed. \"I'm sorry!\" she automatically squealed before covering her face with the blanket.\n\n\"Chloe, you haven't done anything wrong. I just came up to see how you were doing.\" She slowly pulled back the blanket, letting me see her teary eyes. \"Did you have a nice day?\"\n\n\"I guess. Sonja made me run around with her outside for a while. I was afraid the birds would get me.\"\n\n\"Yeah, she loves to run and play, and unfortunately, Momo doesn't quite share her interest. I guess she was hoping you would be a more active playmate. But other than that, how was it? Were Sonja and Momo nice to you?\" She nodded. \"Good. Do you want to come downstairs? In the evening, we watch the news on the couch together and then I make dinner. Come join us.\"\n\nShe followed me downstairs, where Momo and Sonja were already waiting for us, sitting at the ends of the couch in their sovereign territories. The question now was where would Chloe sit? There was enough room for the four of us to sit on the couch, but she would be beside me, meaning that either the cat or the dog were going to end up on the far edge of the galaxy. I took my place in the middle of the couch, leaving the decision to her. But instead of sitting on the couch, she plopped herself down on the floor, leaning against my legs.\n\nThe news came on and we all relaxed. Both Momo and Sonja curled up into balls with their heads resting on my thighs. I tickled their chins and their ears, making Sonja wag her tail and Momo purr. Sometimes I would move my hands down and massage their breasts, relishing the feel of the bodacious dumplings in my grip. Down below, I had my legs wrapped around Chloe like a seat belt, keeping her warm and covered. She was looking in the direction of the TV, but I wasn't sure if she was actually watching or just drawn to the light and noise. Even if she understood English, anything she was hearing now must have been gibberish. I was starting to understand her little squeaks, differentiating between when they meant happiness or discomfort. When I played with her hair or tickled her ears, the squeaks would be high pitched, meaning she was enjoying it. The squeaks from that morning had been deeper with a slight whine to them.\n\nI was certainly happy. I was still full of questions as to this strange phenomenon and I was worried about the future, but there were few moments in my life that were better than getting to relax on my couch in my own house, cuddling with my three girls. The news was on, I had a cozy fire in the stove, and soon I would make a nice dinner for the four of us. It was bliss.\n\nOnce the news ended, I went into the kitchen and prepared dinner. It was a simple beef stew, hopefully enough to leave us all full. With the addition of Chloe, I would now have to prepare larger meals. If I was careful with the pricing, I could keep the expenses low, but I would need to continue teaching the girls how to take care of themselves. I noticed that a third food bowl had been set out for Chloe on the floor next to Sonja's and Momo's, probably from when they made her lunch. I filled up each bowl with stew and set out a second water bowl between Momo and Chloe.\n\n\"Girls! Time to eat!\"\n\nThey rushed in, almost sliding across the floor if not for their bare feet. Sonja was first, a big happy comet, jumping and wagging her tail. Then came Momo, dainty and elegant, looking like some kind of elf from a fantasy book. Last was Chloe, her tiny steps not making any noise and a look of uncertainty on her face, like a little kid on the first day of school, looking for her class.\n\nThey all assumed the positions, arranged by size with Sonja at one end and Chloe at the other, but everything from their postures to their movements was perfectly synchronized. It was a relief to see Chloe enjoying her food. Considering that she had originally been a mouse, I was curious to see how well she would handle meat. I filled up a bowl of my own with stew and sat at the table, watching them eat. It was honestly better than television. Seeing three beautiful, naked girls eating on the floor like this was hilarious, sexy, and adorable, all at the same time. I was fairly tempted to crouch down over them and run kisses up their backs. \n\nBut breaking the serenity, I saw Momo remove her face from her own bowl and shift to Chloe's. Chloe gave a tiny squeak of fear and surrendered like France. Momo had never done this before, at least never done it to Sonja.\n\n\"Hey! Momo! Cut that out! That's not your food!\" Hearing me yell scared her back to her bowl, but I was still angry. When the three of them were done, I stood over Momo. \"I don't ever want to see you doing that again, got it?\"\n\nMomo, kneeling on the floor, nodded. \"Got it,\" she said softly, her face downcast.\n\n\"Now apologize to Chloe.\"\n\nShe turned to the mouse. \"Momo is sorry for eating your food.\"\n\nChloe blushed, apparently more embarrassed than Momo was. \"It's ok! It's ok! I'm sorry!\"\n\n\"It's fine, Chloe, you did nothing wrong. From now on, if Momo tries to eat your food, I want you to take the water bowl and dump it on her head. Sonja, if you see Momo do it, splash her too.\"\n\n\"Got it!\"\n\n\"Ok, now we can move on. Since you girls have been so good, and to celebrate Chloe joining our little family, I got something special for the four of us. All of you sit at the table.\" \n\nThey took their seats, wondering what I was going to give them. I set out plates and glasses of milk, then from the fridge, I pulled out a small marble cake. I would have gotten chocolate, but with Sonja still being part dog, I didn't want to risk it. The girls knew it was food, they could tell that much from the fact that I had hidden it in the fridge, and while they didn't know what kind of food it was, they definitely liked the smell. I set it out in the middle of the table with a lit birthday candle in the middle. I suppose, in a way, this could be called Chloe's birthday.\n\n\"Chloe-\"\n\n\"I'm sorry!\" she squealed. \n\nWas she going to apologize every time someone addressed her?\n\n\"I was just going to say welcome to our home. Now, you have the honors. Go ahead and blow out the candle.\"\n\nChloe leaned forward and gave a tiny puff of air, almost like a sneeze, but it was just enough to blow out the flame. I congratulated her with a loving head pat and then went about cutting the cake. I divided it into quarters and gave each of the girls a piece. I hadn't really bothered with teaching Sonja how to use a fork and Chloe had just gotten here, so I simply let the three of them eat with their hands.\n\nMomo perked up from the first taste, her ears nearly flapping and her tail standing erect. \n\n\"This is so good!\" Sonja exclaimed, already with cake smeared across her face. \n\nThe brightest smile I had yet seen on her doll face, Chloe gave a squeal of happiness as she took a bite. \n\nI couldn't help but laugh at the three of them, getting more joy out of watching them eat the cake than eating it myself, though it was delicious. They finished by licking the cake and frosting off their fingers and washed it down with the milk I had set out.\n\n\"Can we have more?\" Momo asked, her face as messy as Sonja's.\n\n\"No, that was for a special occasion. But don't worry, there will be other times when I will get you sweets. Now, Chloe, I got some clothes for you on the way home. I want you to try them on to see if they fit.\"\n\n\"Clothes?\"\n\n\"The things I'm wearing. The three of you wash your faces and we'll move back to the couch.\"\n\nMomo moved over to me. \"Can Master... wash Momo's face?\"\n\n\"I'm pretty sure you can do it yourself.\"\n\n\"Not like this.\" \n\nShe then leaned forward and kissed me, her tongue slipping past my lips and running along my gums, searching for bits of cake and frosting yet to be swallowed. Understanding what she meant, I returned the affection, licking every corner of her mouth as well.",
        "\"I want to do that too!\" said Sonja.\n\nShe rushed over from the other end of the table and I started kissing me as well. Chloe watched us, unsure of what we were doing. \n\nI couldn't help but laugh when Sonja finally pulled away. \"That just cleans your lips, not your faces.\" \n\nI then started licking her cheeks as if I myself were a dog. She giggled and wagged her tail at the feel of my tongue. I didn't really clean the cake off her face, so much as thin the mess. I did the same to Momo, making her purr, especially when my tongue met her lips. Once they were both done, I looked over to Chloe. She was shifting in her seat, her head hanging low as if someone had just tickled her neck. She still didn't understand what the three of us were doing, but she was feeling a little bit left out.\n\n\"Can Master... please clean my face as well?\" \n\nI smiled and held out my hand to her. \"Come here.\"\n\nShe moved onto my lap and I licked her cheeks as I had Momo and Sonja. Her eyes were screwed shut but her squeaks told me she was enjoying it. Once I was done, she looked at me and I finished by joining my lips with hers. I didn't bother trying to French it up, as even this gentle meet seemed enough to leave her reeling. She obviously didn't understand what I had just done, but she was blushing.\n\n\"That's called a kiss. You do it to someone you love.\" My words made her reddening face deepen in hue. \"Ok girls, now wash your faces for real. Chloe, we still need to check out those clothes I got you.\"\n\nThe girls cleaned their faces in the sink and then followed me back to the couch, where I had a large bag from GoodWill. Most of the clothes they sold were second-hand, but luckily all underwear was donated directly from retailers and never worn. \n\nI started by handing her a pair of panties. \"Here, put these on.\"\n\nShe, of course, put them on over her head, thinking that the leg holes were for her ears. Both Momo and Sonja had made that same mistake when I had them wear panties for the first time. In retrospect, I should have known by now to word it better and not leave it so vague, but this was too cute and funny for me to let this opportunity slip by. I wanted to take a picture just for myself, but I fought against it and told her how to properly wear them. It was strange, but when wearing only a pair of panties, she somehow managed to look even cuter. I then had her try on some sweatpants and jeans, then shirts, socks, and a hoodie.\n\n\"How does that feel?\"\n\nShe looked at herself, toying with the string of her hoodie. \"It's nice. I feel nice and warm. But I still like being naked.\"\n\n\"That's fine, these are just for when you get cold or we have to go somewhere. Otherwise, you can be naked as long as you want.\"\n\nAfter she undressed, we watched a little more TV and then decided to call it a night. We headed upstairs, and I laughed as I watched the three of them brush their teeth at the same time. While they brushed, I took several blankets and pillows I had bought on the way home and set up a nest for Chloe under the bed. Once the girls were done with the bathroom, I went in to brush my teeth and they got all cozy.\n\nI came out, seeing Momo and Sonja on either side of the bed, and Chloe down below, wrapped up in blankets. It was such a beautiful sight that I almost didn't want to intrude. Whatever was going on was stressful, confusing, and oftentimes expensive, but I couldn't remember a time in my life when I was so happy. I didn't want any more girls to show up, but if they did, I would love them all the same.\n\nTired from a long day, I turned off the lights and climbed into bed between Sonja and Momo. \"Goodnight, girls.\"\n\n\"Goodnight, Master,\" they all replied, with Chloe's voice echoing from down below. I set my head back on my pillow, pulled Sonja and Momo in close, and drifted to sleep.\n\n-----\n\nThe days were getting colder, and the girls, no matter how stubborn they were, caved in and started wearing clothes. It was certainly a loss, no longer being able to watch Momo and Sonja's melons bounce freely with every movement, but seeing them in yoga pants gave an added allure. I would keep a fire burning in the stove almost nonstop, starting it in the morning and then rekindling it when I got home and before bed. But for that luxury, gathering firewood became a continuous chore for the girls. I wanted to preserve our stocks until winter and there was no way in hell I would use any heating oil, so every day, they would go out into the forest and search for wood to burn.\n\nChloe settled in to her new life, a smile on her face every day, shy and fragile, but a smile nonetheless. Whenever someone called out to her, she would instinctively apologize, even though we kept telling her that she had done nothing wrong. We chalked it up simply to a personality quirk due to her former species, like Momo talking in third person or Sonja's airheaded hyperactivity.\n\nWith the arrival of the weekend, I resumed teaching the Momo and Sonja how to read. I even fulfilled my promise and got them several children's and picture books from the local library. I hadn't given Chloe her first lesson, but she sat with us when I helped Momo and Sonja read Dr. Seuss. Hopefully this would give her some insight into what she would be doing. The four of us were on the couch, I with a book, Momo on my left and Sonja on my right, with Chloe lying across Sonja's lap.\n\n\"Do you like green eggs and ham?\" Momo asked. \"I do not like them, Sam-I-am. I do not like green eggs and ham.\"\n\n\"Very good! Not too long ago, you would have had to sound out each word. Sonja?\"\n\nShe leaned over to read the next passage. \"Would you like them her or ter? I would not like them her or ter.\"\n\n\"Close. When there's an e at the end, it's a hard vowel. Here. And when t and h are next to each other, they make a thhh sound, like a hiss.\"\n\nShe stuck her tongue out at me and hissed, harder than I had, and I hissed right back. It went on like this for a few seconds, she and I have a hissing fight before I finally laughed and kissed her on the forehead. \n\nMoving farther over Sonja's lap, Chloe looked at the pages. \"I would not like them eer. I do not like green eggs and ham.\" \n\nI was surprised, then slightly disappointed, and then a bit proud. I had thought at first that she had actually read the passage, then realized she was simply guessing what it said based on the repetition of the words (hence, why she left out the \"anywh\" in \"anywhere\" and assumed the vowel rule applied), and was then impressed by the intellect it would take to actually get that far.\n\nI ruffled her hair, prompting her to close her eyes and give tiny squeaks of joy, albeit with her face looking like she was actually being tickled against her will. \"Nice try, but you aren't ready for this stuff yet. And for the record, it's \"anywhere\". In this case, the vowel rule doesn't apply, like in \"there\". But it was a good attempt though.\"\n\n\"Master, can we have green eggs and ham? I'm getting hungry,\" said Sonja.\n\n\"Well I can't make them green, but I do have some ham steaks I can fry up, and I'll add some eggs if you girls want. I'll make them for dinner. But for now, if you're hungry, go eat some fruits and vegetables. I want to make sure you girls get enough vitamins.\"\n\nSonja went to the kitchen to fetch an apple and then returned, allowing us to resume reading. We continued on through the book, then through the rest of the stack I had gotten from the library. Sonja and Momo took turns reading passages, and all throughout, I was giving Chloe small lessons. I was skipping over the introduction to the alphabet and simply showing her important words. Surprisingly enough, she understood it better than I had expected, figuring out the sounds associated with each letter and learning to assemble words. \n\nThe sun was setting by the time we finished, but we still had an hour or so of light. \"Come on, girls, let's go for a walk.\" \n\n-----\n\nWe took our established route through the woods, already worn into the underbrush from the pressing of bare feet and sneakers. Both Momo and Chloe clung to my arms while Sonja orbited around us, prancing and bobbing with a big grin on her face. Leaves were falling around us like rain, our Maine autumn approaching the point where beautiful turned to dreary. One such leaf fell on Momo's head and she stopped, letting go of my arm. Chloe and I took a few more steps and then looked back when we realized she wasn't following us. Momo was standing still, her eyes nearly rolling all the way back into her head as she stared at the leaf stuck to her hair. Her ears were flicking like crazy, and she started to blow air upwards, trying to get it off. I finally pulled it off and she shook her head as if awoken from a trance.\n\n\"I wonder what it will be like, spending our first winter here,\" I said, looking at the leaf, red as a watermelon jolly rancher.\n\n\"What's winter?\" Chloe asked, her hold on my arm tightening. \"Is it scary?\"\n\n\"Oh, that's right, this is probably your first winter. No, it's not scary. Winter is a time of year when it gets very cold, and the rain that we would normally get freezes, and falls as specks of ice, sort of like the frost on the windows each morning. That's why I've been so focused on gathering firewood, because we're going to need a lot to stay warm through the winter.\"\n\n\"Momo doesn't like winter,\" my cat pouted, \"the snow always makes my paws hurt.\"\n\n\"That's what boots and gloves are for. What about you, Sonja, do you like wint-\"\n\nI stopped myself as soon as I realized my mistake. Before I took her in, Sonja had been abused and neglected, and probably spent most of her winter nights sleeping out in the cold. That same thought went through her mind, as for the briefest moment, her smile faded, but then it was relit and she skipped over to me with her tail wagging.\n\n\"I don't like being stuck out in the cold, but I love playing in the snow! I love jumping and prancing and swimming through it! And now I can go inside after I'm done playing! I can't wait!\"\n\nI pulled myself free of Momo and Chloe and wrapped my arms around Sonja, holding her close. \n\n\u266b In the arms of the angels... \u266b dun dun dun... \u266b That's pretty much all the words I know from that song.\n\n-----\n\nAfter returning home, I decided to try to teach Chloe a little bit more about reading. I introduced her to the alphabet, which she managed to memorize with surprising ease, much faster than Sonja and Momo. I had the girls help me with dinner, teaching them to fry up ham steaks and eggs (I hadn't forgotten my promise). After eating, we returned to the living room to watch some TV, then headed upstairs.\n\n-----\n\nMomo groaned in happiness as she bounced on my cock, letting it stir up her pussy like a whisk. Her beautiful face was blushing, her pert breasts jiggling with every movement she made. \"Master, your cock feels so good in Momo!\" she cried. She was leaning back, looking down her chest at me. However, we couldn't make eye contact, as Sonja was sitting on my face. \n\nSonja whimpered and moaned, feeling my tongue penetrate her. She gyrated her hips, a natural instinct when the sensations became too much for her. It didn't help that I was also stroking her tail, sending lightning bolts up her spine that threatened to decimate her sanity with each passing moment. \n\nSitting on the floor was Chloe, understandably incapable of sleeping under the bed with both the mattress springs and the girls crying out. She looked like she was watching a horror movie, an expression of terror on her face, but with it, curiosity and even a seed of arousal. She had no idea what was going on, what the girls and I were doing. I had simply told her we were playing, after all, that's what it was to Momo and Sonja. But to Chloe, this was the strangest thing she had ever seen. Since she had transformed, her animalistic instincts for reproduction had disappeared. In their place was the potential to develop a human sense of sexuality. Like both Momo and Sonja, she lacked the lifetime of interaction and socialization that gave humans an understanding and perception of sex and intimate relationships. \n\nWhat she saw here was a physical act; it's purpose completely unknown, its origin and significance a mystery. From the way Momo and Sonja were acting, she equated it to their reactions when I would play with their ears and tails, but so much more intense. Shy and fearful by nature, it scared Chloe, especially the looks on their faces and the noises they were making. Were they in pain? She certainly couldn't imagine being penetrated like Momo not hurting.\n\n\"ARUUUUUUUUUUU!\"\n\nSonja released her signature howl, announcing she had just climaxed and letting me drink her nectar. Panting like, well, a dog, she fell off to the side, spread out across the bed. With Sonja out of the way, Momo leaned over and joined her lips with mine, letting her tongue explore my mouth. I cupped her rear end with both hands and started bucking my hips, now able to actually move rather than simply let her ride me.\n\nMomo broke our kiss and wrapped her arms around my head, pressing my face to her chest and she whined. \"Master, you're being too rough! Momo can't take it!\" I didn't ease up, I continued ramming her until she climaxed, at which point I emptied myself into her. \n\nShe collapsed on top of me and my deflating manhood was unplugged from her sleeve, letting my overflowing semen trickle out of her. She still had her arms around me, and we simply looked at each other and panted in each other's faces. Once we had caught our breath, we resumed kissing. \n\nBy now, Sonja had regained her stamina. \"Master, can I have a turn now?\"\n\n\"Sure, but I'll need some help getting hard again.\"\n\nA wide smile on her face, she moved over to me and took my placid member in her mouth. She sucked it gluttonously, slurping off the taste of my semen and Momo's pussy, all while coaxing it back to full attention. Once it was ready for her, she maneuvered herself onto my lap, her back to me with her legs tucked under mine so that they wouldn't get in the way. She backed herself up like a truck, her full moon ass pressed to my lap with my cock between her cheeks. It took a little maneuvering from the two of us, but I was able to guide my cock into her pussy, aiming it just low enough for it to slide into her. A blissful grin on her face, she began rocking back and forth, first leaning her body forward and then sending her ass crashing against my lap, each time relishing the feeling of my cock drilling into her while her breasts clapped together like two tetherballs. \n\nWith Sonja taken care of, I turned my attention back to Momo, eager to receive my affection. I held her close and we began making out, our tongues searching for some new spot to probe. I moved one hand south, slipping it between her legs. She purred as my fingers entered her, stirring my seed in her cunt like cake batter. Feeling ravenous, I pulled my lips from her and instead wrapped them around one of her nipples, while the arm I had under her to hold her, I used to reach around and start tweaking her other nipple.\n\nMomo leaned her head back, covering her mouth with her hand as she whined and moaned. She would have liked to kiss me a little longer, but this was certainly euphoric as well, the feeling of fingers massaging her pussy from the inside while one nipple was played with and the other sucked. Her legs never stopped squirming, clamping together with my hand between them as if to both keep me out and lock me in, all while her sweet voice cooed in my ear. Her nipple was like a cholate chip, and every pull of my lips made her squeal, every lap of my tongue made her purr.\n\n\"M-Master, Momo's gonna cum!\" she whimpered.\n\nAt the same time, Sonja's moans were reaching that signature pitch, her tail standing erect as she threw herself against me. I came just before she did, filling her with semen as she howled like a wolf. She collapsed, her face pressed to the bed with her butt sticking in the air, a string of cum connecting my P to her V like a spider web. Momo came just seconds later, her chest heaving from the excitement. I removed my fingers from her slit, varnished with seed and nectar, and held them over her face. Her lids lowered with fatigue, she simply opened her mouth like a Roman emperor being fed grapes. That said, as I swirled my fingers around her mouth, she became livelier, at least with her tongue, slurping up the two liquids with relish. \n\nOnce she was done, I kissed her on the nose, drawing a tiny purr. \"You're such a good girl. Sonja, how are you feeling?\"\n\nShe got back up on all fours and stretched, first leaning forward and then back, letting me see my handiwork. \"Really good, Master! That was so much fun!\"\n\n\"Well it was certainly fun for me too. Ok, you girls go clean up and then it's time to sleep.\"\n\n\"'Kay!\" they both said, prancing to the bathroom.\n\nI sat up and retrieved some tissues from the box on the nightstand. As I cleaned off my pole, I looked over to Chloe. She was huddled in the corner, sniffling in fear. Crap, I had screwed up. I had decided to wait a few days before letting her see us have sex, but clearly, that wasn't enough time.\n\nI crouched down in front of her. \"Are you ok, sweetie?\"\n\nShe looked at my limp noodle as if it was a weapon. \"Are you going to play with me like that?\"\n\n\"Not until we've gotten to know each other better. I've been with those two for a while, so there is plenty of trust between us. I'll wait as long as it takes for you to be comfortable with it, and if you never want to do it, that's fine with me.\"\n\nShe spread her legs, showing me her wet lips. \"Watching you made me like this. I feel really weird down there.\"\n\nI smiled and patted her head. \"Looks like you might want to try it soon, but take your time.\" She gained a smile of her own. \"Good girl. Now, give me a kiss and let's go to sleep.\"\n\nShe leaned over and gave me a tiny peck on the lips. I ruffled her hair again, making her giggle and she crawled under the bed. Momo and Sonja returned from the bathroom and jumped into bed. They showed surprising energy, considering how much I had worn them out with my awesome manliness and sexual skills.\n\n\"Goodnight, girls.\"\n\n\"Goodnight, Master!\" they all cheered.\n\n-----\n\nThe next morning found me rushing to get out of the house. So many lost seconds had now added up to minutes that I didn't have. Even the office manager had to come to work on time (at least mostly). However, I had enough time to set up my laptop so that the girls could continue their reading lessons. Chloe would now be taking part so I left Momo and Sonja with the job of helping tutor her. They were upstairs, having gone back to bed.\n\n\"Girls!\" I hollered, \"I set up my laptop. You can start your lessons after lunch! I'll see you later!\"\n\nAs I closed the door behind me, silence returned to the house. Upstairs, Sonja lay curled up in bed, sound asleep, but below, there was plenty of activity. Having crawled under the bed, Momo was once again spooning with Chloe, purring as she worked her fingers between the pipsqueak's legs. This had become a habit of Momo's. When Chloe was alone or everyone was asleep, Momo would pin her down and toy with her like this. The more Chloe reacted, the longer Momo worked her. Chloe whimpered and squirmed, overwhelmed with the feelings radiating from her pussy. The three girls still lacked a sense of sexuality, so to Chloe, it was like her feet being tickled against her will.\n\nAs had been done to her, Momo got an idea and closed her lips around the edge of Chloe's ear. The nibbling sensation was too much for Chloe to bear, further enhancing the bubbling warmth between her legs.\n\n\"Something is happening! I'm-EEEEEEEEEEEK!\"\n\nA shrill squeal was released, its pitch high enough to wake up Sonja. She bolted onto all fours, her hair a mess. \"HEY! HEY! HEY! HEY! HEY! HEY! HEY! HEY! HEY!\" she barked, acting on instinct. Then, just as suddenly, she collapsed back onto the mattress and fell asleep.",
        "Under the bed, Momo continued toying with Chloe, but even rubbing her clit drew little response. It seemed the orgasm had sapped her strength. Now bored, Momo shrugged and climbed back onto the bed, pulling the blankets over herself so that she could nap. \n\n-----\n\nHours later, the girls all woke up, craving an early lunch. The fire in the stove was still burning strong and the house was warm, so they didn't bother to get dressed. They moved downstairs and raided the fridge, glad to find some leftover ham steaks and eggs from the night before. Luckily, they had been taught how to use the microwave. After eating, they settled down at the dinner table and brought my laptop out of sleep mode.\n\n\"Why does Master want us to know how to read?\" Chloe asked.\n\n\"He said that it would help us entertain ourselves if we could read books,\" said Sonja. \"Wasn't it fun reading those picture books yesterday?\"\n\nChloe nodded and the first video was started, a woman speaking to the viewer from in front of a dry erase board. \"Is that the same woman from the TV shows? How did she get into the computer? Did she climb inside when we weren't looking?\"\n\n\"Master says that they are all different people, but Momo can't tell the difference.\"\n\nThe lessons began and Chloe worked diligently to perform all of the instructed exercises, holding a crayon in her tiny fist with her face inches from the paper. Momo and Sonja did them as well, for even though they had already seen these videos before, they could certainly use a refresher. Two hours passed before they all decided it was time for a break. But as Sonja reached out to hit the space bar and pause the video playing, a squirrel caught her attention outside and her hand slipped, pushing the wrong button. The window closed, showing the desktop. All three girls squealed in terror. To them, they might as well have dropped a brick on the screen. \n\n\"Did we break it? Did we break Master's thing?\" Chloe cried.\n\n\"He'll be mad at us if he sees it like this! He wanted us to do the lessons and now we can't do the lessons and he wanted us to do the lessons!\" said Sonja, gripping her head as if afraid of it falling off her shoulders.\n\n\"Momo doesn't want to make Master upset!\"\n\n\"Momo! You have to fix this!\" Sonja exclaimed. \n\nThe feline turned to her, looking as if she had just been slapped in the face. \"Momo doesn't know how to fix this!\"\n\n\"You've been with Master the longest! You've seen him use it more than any of us!\"\n\n\"Please fix it, Momo!\" Chloe begged. \n\n\"Ok! Ok! Momo will try!\"\n\nShe took Chloe's place in the middle and pulled the laptop over to her. It's true, she had seen this thing used for countless hours, but she had never paid any actual attention. She looked at the desktop, seeing folders and icons, some of them with words she recognized, but none of them looking like they had anything to do with the reading lessons.\n\n\"What does Master normally do on this thing?\" Chloe asked.\n\n\"Well, when he wants to do something, he brings this pointy thing down... by touching this spot here.\" She dragged her finger across the trackpad, moving the cursor. There was a time when upon seeing that cursor moving across the screen, Momo would be tempted to swat at it like it was a fluttering moth. Technically, it was still that time, but she managed to resist her instincts and bring the cursor down to the bottom. The dock automatically sprung up, making all the girls tense and move back. This was uncharted territory for them.\n\n\"Then what does he do?\" Chloe asked.\n\n\"Master picks one of these things and taps it.\" Momo's eyes fell to the Chrome icon, round and colorful, just begging to be played with. She inched the cursor over to the icon, and after several confusing taps, managed to click it.\n\n\"Look, it's bouncing!\" said Sonja with her tail going wild.\n\nA new window was brought up and Momo nodded. \"Ok, this is starting to look familiar.\"\n\nSonja leaned forward, resting her giant breasts on top of Momo's head. Normally Momo would shy away at the feeling of having her ears crushed, but she was too focused on what was going on. \n\n\"Oh yeah, I remember seeing this. What's that big word? Goo...gle? Is that how it's pronounced? Goo-gle?\" Sonja asked.\n\n\"Maybe it's called Google,\" said Chloe.\n\n\"Yeah, Momo heard Master use that word before.\"\n\n\"But what's a Google? Is it something you eat?\"\n\n\"Momo has seen Master use this. He puts in words and it does something.\" Momo looked at the keyboard. There were so many buttons, but the fact that she recognized the letters helped her stay calm. \"What should Momo put in?\"\n\n\"Try 'read',\" said Chloe. \n\nMomo clicked on the search bar and typed the four letters, all with just her index finger. They stared, waiting for something to happen.\n\n\"What now? Momo doesn't know what to do next.\"\n\n\"What's that word there? Se-arch? Does that mean anything?\" asked Sonja.\n\n\"Maybe it's actually saying 'search'. Trying clicking it.\"\n\nMomo clicked on it and the search results were brought up, but they didn't see what they were looking for.\n\n\"Nothing,\" Momo grumbled.\n\n\"Try 'how to read', maybe that'll do it,\" said Chloe.\n\nMomo typed it in, but did not know how to put in spaces. Luckily Google had her back and did it for her. Another list was brought up, but the outcome was the same.\n\n\"Is there any way to move down? I think I've seen Master move down before.\"\n\n\"Momo thinks Master does... this?\" It took some more fiddling, but she managed to figure out how to scroll down. There, at the bottom of the page, was the YouTube video.\n\n\"There it is!\" exclaimed Chloe.\n\nMomo clicked on it and they were brought back to the start of the playlist that had been set up for them. The girls jumped up and cheered, having avoided disaster. \n\nMomo suddenly stopped. \"Do you realize what this means? We know how to use Master's computer! Imagine what else we can do with it!\"\n\n\"But Master will be mad if we mess around with it!\" said Chloe.\n\n\"Or he'll be proud of what we can do! Maybe if we impress Master, we'll get another cake!\" Both Sonja and Chloe licked their lips. There was no way they could ignore such a possibility. They all sat back down, trembling with excitement.\n\n\"What should we do first?\" asked Chloe.\n\n\"Let's go back to Google,\" said Sonja.\n\n\"This might send us back,\" Momo said, moving the cursor up to the arrow in the corner. She clicked on it and they were brought back to the results page. All three girls gasped in awe at their incredible technological prowess. \"What should we do now? Should we put in another word?\"\n\n\"Let me try! Let me try!\" Sonja reached over Momo's head and scrolled up to the search bar. There, she typed in 'dog'. On the side of the results page was a cluster of images. \"Oh! There are pictures!\" Jumping up and down in excitement, she clicked on the pictures and squealed in happiness. The first picture was of a golden retriever puppy. \"That's me! That's what I used to look like!\"\n\nMomo helped her move through the pictures, staring in awe. \n\nChloe was the same way, unable to believe there were so many animals in the world. After all, the world to her was nothing more than the property. \"My turn!\" she said. \n\nChloe went back to the main page and she typed in \"mouse\", then went and checked the images to the side. She stared in shock, unable to believe that was her original form. While she looked through the pictures, a hungry expression crossed Momo's face. Momo of course then took her turn, looking up pictures of cats, which of course brought up many more results. Her reaction was much more low-key, but considering that cats were solitary creatures, that wasn't very surprising. \n\nFor the next half-hour, they continued looking up random words and subjects. Even while literate (at least mostly), they didn't bother clicking on any links or results and simply entertained themselves with pictures. But what they couldn't understand was why looking up 'play' and 'playing' brought up none of the pictures they had been expecting. Eventually, though, they got bored with simply looking at pictures.\n\n\"What should we do now?\" Momo asked.\n\n\"Well what does Master normally do?\" asked Chloe in return.\n\n\"There are those words at the top of the screen, I think he usually does something with them. Let's see what they do,\" said Sonja.\n\nMomo moved the cursor up to the bookmarks bar and started clicking them one at a time. She recognized several pages, at least having seen them before, but none of them caught her interest. Then, in one of the folders, she saw something that she remembered seeing frequent visitations to, back before she had transformed.\n\n\"Does this mean anything to you? XNXX?\" \n\nSonja and Chloe shook their heads. \"No, what is it?\" Sonja asked.\n\nMomo clicked it and was brought to the front page. All the girls' ears perked up, none of them having ever seen so many naked people at one time. Momo moved the cursor across the videos, causing the thumbnails to change into tiny slideshows.\n\n\"I think those people are playing!\" Sonja exclaimed.\n\n\"Momo wants to see!\"\n\nChloe gained a nervous and fearful blush as Momo clicked one of the videos. Unlike YouTube, the porn videos didn't automatically start playing even when opened, so it took the girls a moment to figure out how to actually start it. The video showed a guy with three teenage girls. It started with the girls taking turns sucking him off, and whichever two girls were unoccupied would keep busy by making out.\n\n\"Hey, they're kind of like us!\" said Sonja with a grin.\n\nThe scene then changed, one of the girls riding the man, her ass bobbing on his lap. At the same time, another girl was working her tongue on the man's balls and exposed shaft.\n\n\"We do that kind of stuff too!\" said Momo. \n\nNext, one of the other girls got in front of the girl riding the guy, shaking her ass at her. Girl #1 had her face buried in the ass of Girl 2#, causing Momo, Sonja, and Chloe to exchange glances. What exactly were they doing? In nature, it was common for animals to sniff each other's butts in greeting. Was this something like that? The angle didn't seem right for it to be cunnilingus. They watched the rest of the video and then moved on to the next.\n\nThis one was a lesbian video, which came to a shock to the three girls. The movie progressed with the actresses doing all manner of things to each other, things that Momo, Sonja, and Chloe normally did with, well, not each other. Certainly, they didn't really have a lot of boundaries. In bedroom, Momo and Sonja had licked semen off each other's chests on multiple occasions, and there was that time when they fingered each other, but it was not like they had actually acknowledged each other in doing it. Hell, anything they had done together was simply due to the other being present or in the way, not out of any sort of attraction, even Momo's \"bullying\" of Chloe. They had never done things like kiss each other or go down on each other. Their minds had never even registered it as being possible, like they were suddenly discovering that people could walk through walls. Either way, it certainly left them interested.\n\nThey spent over an hour watching videos, the three of them with slick inner thighs. Momo and Sonja found a strange joy in seeing other people play the way they did. It almost became a game, the two of them on the lookout for things they had already done before. The girl on girl stuff was still new to them, but almost every position a man and woman could do had already been checked off the list. They also noticed several new toys that they really wanted to play with. \n\nFor Chloe, it was a much more mind-blowing experience. After seeing sex for the first time, she had had no idea what to make of it. All she thought was that it looked painful. But seeing all these people doing the same things, getting ridden, sucked, licked, mounted, spanked, and contorted helped take away that fear. In fact, she was starting to get curious.\n\nOnce again on the main page, Momo scrolled down to the next video, but something in the title didn't make sense. Well, sure, a lot of the titles didn't make sense, but still.\n\n\"What's this word? Anal? What does that mean?\"\n\n\"I've never heard it before,\" said Sonja. \"Maybe it's something new.\"\n\nMomo clicked the video and they all began to watch it. At first it seemed normal; the woman sucked the man's cock, the man licked her pussy, they fucked in a few different positions... and then it got weird. The man started by giving the woman a rimjob, once again making the girls exchange glances of confusion. Why would a man lick a woman's anus? Then, with looks of shock on their faces, then watched as the man mounted the woman from behind, ball's deep in her backdoor. Their three sphincters slammed shut as they watched him take the woman to pound town.\n\nThis was completely beyond their understanding. While it was true that several animal instincts had been lost in their transformation, one instinct remained ironclad: that spot was not for playing with! It was an exit only! It brought back memories of when they had been \"housebroken\", and for Momo and Sonja, the added trauma of rectal thermometers at the vet. They continued to watch with horrified expressions as the man sodomized the woman without mercy, assuming every position imaginable and beating her asshole like it owed him money. \n\nIt was when the movie stopped that they finally closed the laptop. They all looked at each other, their hands having instinctively moved to cover their butts.\n\n\"Master... isn't going to do that to me, is he?\" Chloe whimpered.\n\n\"H-he hasn't done it to us yet, r-right, Momo?\" Sonja stammered.\n\n\"Pants! Momo wants pants!\" she exclaimed.\n\n-----\n\nI got out of my car, so glad to be home. With the days getting shorter, it was getting darker and darker by the time I left the office, making it feel like I was working later and later into the night. This had been one brutal Monday and all I wanted was to collapse on the couch and snuggle with my girls. Maybe, just maybe, they could cook dinner for me and I wouldn't have to get up. \n\n\"Girls! I'm ho-\"\n\nStepping through the door, I was nearly knocked over, the three girls clinging to my legs like parking boots on a car. And strangely, they were all crying, absolutely hysterical, and... wearing pants with nothing else?\n\n\"Girls, what's wrong?\"\n\nThey looked up at me, all of their faces wet with tears. \"Please don't put it in our butts!\" they all cried.\n\nWait, what?\n\n*****\n\nPlease comment! I really want to hear from you!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "cute",
        "comedy",
        "romance",
        "animal girl",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/master-master-pt-04"
}