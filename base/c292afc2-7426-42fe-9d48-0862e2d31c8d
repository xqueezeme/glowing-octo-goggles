{
    "title": "Women's Studies Ch. 06",
    "pages": [
        "I felt myself becoming restless underneath the covers. It was late Wednesday morning, and I had my duvet pulled over my head to block out the god-awful light. Yesterday had seen the mass exodus of students and faculty for the Thanksgiving holiday, and I now had the entire dorm to myself. It wasn't just Evens Hall either, as far as I knew, I was the only hold out in the entire school. It was depressing to say the least.\n\nI had been looking forward to going back home. Well, sort of. I had been anticipating seeing my sister Audrey again, for obvious reasons, but she had called earlier in the week, informing me that she wouldn't be making it back home. With the only reason for my return now gone, I decided to stay on campus in a solid attempt to avoid seeing my mother. That, and I wasn't ready to go back to being Alex, however temporary. If Audrey had been there it would have been worth it, but now that she was taking a pass, so was I.\n\nI might have gone home if our mother wasn't such a bible thumping, perpetually angry, hate monger. She was one of those people you see holding signs and yelling at women entering planned parenthood, or boycotting gay rights activists and the funerals of fallen war heroes. I was pretty sure she believed that everyone except for her was going to hell for their sinful ways. I might have had to grow up with that shit, but now that I had a choice, I preferred to avoid it. That is, without incentive, of course.\n\nTry as I might, I couldn't think of any appealing reason to get out of bed. With my friends gone for the holiday, all I wanted to do was stay in my bed, however my body was of a different mind. I'd been wide awake for over an hour now, fidgeting restlessly beneath my blankets, trying to either fall asleep or think of something to do.\n\nOne good thing that had come to mind during my restlessness was, being all alone, I didn't have to be as careful as I usually had to. Having the whole place to myself, I didn't have to wait until odd hours to take a shower, or for Abigail to leave the room for me to change for fear of her seeing me naked. I could probably even walk the halls naked if I wanted to. Not that I would. That would be taking it a bit too far. The thought was arousing though. Kennedy had turned me into something of an exhibitionist. She loved teasing me in public to get a rise out of me, and the risk of being caught not only fooling around, but having a penis, was dangerously exciting.\n\nI couldn't help but think back to the time Kennedy took off with my underwear after sucking my cock in the back of one of my classes. I had to walk the whole way back to the dorm with my dick swinging beneath my dress. I was so turned on by the sensations, and feeling like a dirty little girl, I had to use my book bag to cover my painful erection.\n\nI could feel my cock begin to swell beneath my covers, and lost in my thoughts, I began to stroke myself through my pajama pants. The soft fabric felt marvelous against my burgeoning shaft. I awkwardly slipped off my pants and underwear underneath the covers and continued to stroke myself.\n\nMy cock felt so warm against my fingers, and I could feel the blood pulsing through it with my excitement. My hips began to rock with my continued stroking, while soft moans escaped my lips. The heat beneath my covers began to rise and I could feel my impending climax. I bit my lip as I reveled in my naughty memories and began to stroke myself faster. With a loud moan I came into my wadded-up panties, feeling spurt after spurt rocket through my loins. It took some time for my breathing to even out after my release.\n\nIt was strange, the things you miss sometimes. It had been so long since I was able to masturbate first thing in the morning. A simple ritual I had followed, almost without fail, since puberty. Since I began my journey down this new road, it had come to an end, and it took some severe willpower to keep me from accidentally caving in to the pressure. It wasn't something I valued highly when I was able to do it at will, but now that my privacy was precarious, to say the least, it was a rare treat indeed.\n\nI was in a much better mood after my game of five against one, and from the sounds my stomach was making, I was hungry too. Finally having a good reason to get out of bed, I wadded up my soiled panties, threw back my covers and jumped out of bed.\n\n\"Morning!\" Abigail smiled from her bed.\n\nStartled out of my mind, I tripped and hit the floor, scrambling for my blankets on my way down. Please God, No! I cried to myself as I rushed to cover my very exposed lower half. I prayed to whatever Gods would listen, but the damage was surely done. There was no way she missed my still deflating cock.\n\n\"I'm...You were...I didn't...\" I tried. \"You left last night!\" I accused, finally forming a coherent sentence.\n\n\"My flight was canceled. I got back in late,\" she said, sitting up in her bed.\n\n\"You scared me... I thought I was all alone,\" I said, hoping beyond hope that she did indeed miss seeing Bob Saget and the Olsen twins hanging out downstairs.\n\n\"I could see that,\" she smiled, her eyes flicking towards my waist and then toward my wadded-up panties on the floor in front of me. \"Anything you want to tell me about?\"\n\n\"What do you mean?\" I asked blushing. She couldn't know. No way could she have seen and not be flipping out right now.\n\n\"Are you really going to make me say it?\" Abigail asked, giggling. \"Your penis!\"\n\nI was frozen. I wanted to hide, or cry, or any one of a hundred other things, but I was naked with only my black down-comforter for cover. The silence stretched out before Abigail got to her feet and walked over to me. I closed my eyes, anticipating a slap, or shouting, or something. I felt something brush against my shoulder causing me to flinch, but when I opened my eyes, I saw that Abigail was now sitting next to me on the floor, pulling one leg under her. Her expression was soft and kind as she brushed her dark hair behind her ear.\n\n\"Do you hate me?\" I asked.\n\n\"No Sweety, I don't hate you,\" she said. \"I just wish you would've wanted to tell me sooner. I've been waiting for a while now.\"\n\n\"You've been waiting?\" I asked, confused.\n\n\"Yeah,\" she sighed. \"I've known for a while,\" she confessed.\n\n\"How?\" I sputtered.\n\n\"Well, at first I thought you were just shy, never changing when I was in the room, or how you always shower really early in the mornings, but what really did it was seeing your penis a little over a month ago when you were getting ready for our night out at the Blacklist.\"\n\nI remembered the night well. It was the night that Kennedy had first seduced Abigail. It was also the only time I had ever risked getting dressed when Abigail was around. She had stepped out of the room for a moment, and I quickly went to put some clothes on. She had come back in while I stood there in a bra, and a raging hard on that I had thought was hidden by my closet door.\n\n\"You've known for over a month?\" I asked, disbelieving. \"Why aren't you mad at me? Why didn't you say anything?\"\n\n\"I'm not mad because it doesn't matter. I'm a little disappointed that you didn't want to tell me on your own, but I understand why you would be reluctant,\" she said kindly. \"And I didn't say anything because you're my friend and I didn't want to upset you. You clearly wanted to keep it a secret, and I was fine with that.\"\n\n\"But you're not worried about sharing a room with me?\" I asked awkwardly. \"I've seen you naked.\"\n\n\"Yes, you have,\" she said, smiling. \"To be honest, this last month has been kind of fun for me. And I am sorry about that Bat Girl costume,\" she said, laughing. \"I was still a little sore about you and Kennedy leaving me out of the loop...again...and I kind of wanted to make you squirm a little bit. It was worth it though; you were so hot!\"\n\n\"Oh my god! I can't believe you!\" I said, before realizing that it was a little like the whore calling the stripper a slut.\n\n\"Well you were hot!\" Abigail laughed giving me a playful shove.\n\nI could feel the corners of my mouth perking up remembering that night. I had looked amazing. Still a little dazed from this bomb shell, I felt at a loss for words, and a silence fell between us.\n\n\"What now?\" I asked.\n\n\"Breakfast,\" Abigail said, getting to her feet. \"I don't know about you, but I'm starving. I didn't eat at all last night.\"\n\nAbigail quickly threw on some clothes, and graciously gave me the room so I could have some privacy. Sure, she had already seen everything there was to see, but I was still processing, and after watching her dress, I was grateful that I didn't have to walk around in front of her with a hardon.\n\n*** *** ***\n\nDanny's Fish and Chips was just opening as we pulled up in Abigail's car. We huddled together in a corner booth near the back, and as we waited for our food, the place slowly filled up. As okay as Abigail seemed to be with all of this, she still had a lot of questions, and the way she fired them off, one on top of another, showed how much she had been waiting to ask.\n\n\"...and that's how all this happened,\" I said, finishing my recital of events that led up to me attending an all-girl college.\n\n\"So, you're saying this all happened by accident?\" she asked.\n\n\"I didn't mean for any of this,\" I said quickly. \"but it's who I am now. I am Lexi,\" I said firmly. I didn't want her to think this was all just an act for me. Well it was, and it wasn't. I might not genetically be a girl, but for better or worse, I was Lexi.\n\n\"I just can't believe you've only been doing this for a few months,\" Abigail said. \"If I never saw your junk, I would have never known.\"\n\n\"Can I ask you something?\" I asked.\n\n\"Sure. Anything,\" she assured me.\n\n\"How are you not weirded out by this? One of my biggest fears has been that you would find out and think I was some perv,\" I confided. \"We've shared the same room. I've seen you naked on numerous occasions. And it's not like you don't know that I like girls.\"\n\n\"I like girls,\" Abigail said, taking a bite of a French fry from my plate. \"Do you think it really makes a difference if it's a guy that thinks I'm hot checking me out, or some girl perving on me? To be honest, I've felt more uncomfortable from some of the looks the other girls give me in the showers, like it's the middle of July and I'm the last snow cone,\" she finished with a laugh.\n\n\"I never thought of it like that,\" I said.\n\n\"And to be honest, I peek a little too,\" Abigail smiled. \"Every chance I could get, I would get an eyeful of Kennedy. Discreetly though,\" she assured me.\n\n\"She is beautiful, isn't she?\" I mused.\n\n\"You've got that right,\" Abigail sighed. \"You know, after I found out about you, it put the you-and-Kennedy thing into a whole new perspective. I bet you wish Kennedy had been your roommate. It would have made things a lot easier for you.\"\n\n\"Never,\" I said, reaching across the table to hold her hand. \"I wouldn't trade our friendship for anything.\"\n\n\"Awe!\" Abigail sighed, taking my hand.\n\nThe rest of the day seemed to pass quickly, and I felt as if I was on a cloud. Abigail knew the truth about me, and she didn't care. After breakfast we went out for a mani-pedi, and then for a movie at the Art House Theater, finishing the night off with ordering a pizza at our dorm. I once again felt blessed with the friends I had found. Times may have been changing for gender rights, but at the same time there were still people out there who were as close minded as ever. To be honest, I didn't even know how I would have reacted before my sister introduced me to Lexi.\n\nGetting ready for bed was different. It was awkward and exhilarating all at the same time. Even though Abigail knew, and had already seen it, I still couldn't help but be nervous. I had built up my protective instincts to keep my secret, and they wouldn't be turned off so easily. Abigail on the other hand had no problem stripping off her clothes and walking around in her panties before putting on her PJ's. I did my best not to stare at her body and mind my own.\n\nFinally, in my own pajamas, I slipped under my covers and told Abigail goodnight. I couldn't sleep though. I kept thinking about things. I apparently made a great girl, but a really shitty secret keeper. Good thing I didn't know the Potters. I had two jobs here, graduate, and keep anyone from finding out about my cock. Two people now knew about my secret, not counting my sister, and I couldn't help but worry about more people finding out. So far, the two other people that knew were okay with it, but if I kept slipping up, someone would find out that wouldn't be.\n\n*** *** ***\n\nIt was just after noon on Thursday. Abigail and I were vegging out on the couch in the common area watching Americas Next Top Model, while trying to forget how depressing it was that neither of us had anywhere else better to be on Thanksgiving. Well at least I was wondering that, I wasn't so sure about Abigail.\n\n\"Do you think Carmen is going to win?\" Abigail asked.\n\n\"No way! Did you see the last episode?\" I asked. \"Her underwater photo shoot was an unmitigated disaster. How could she not know she was allergic to chlorine?\"\n\n\"That's not fair!\" Abigail protested. \"It wasn't her fault!\"\n\n\"Her fault or not, that was bad,\" I said. \"She came out looking like Shrek's uglier cousin. It'll be hard for her to recover from that.\"\n\nI didn't think Abigail liked my assessment very much because she fell silent for a while. Top Model would normally never be on my list of shows to watch, but living with all of these other girls meant watching what the majority wanted. I thought of it like turning into a skid. A plus side was that you could learn a few things from it, as well as get a few good laughs.\n\nMy phone buzzed again in my lap, and after a quick glance, I swiped the message off the screen. That was one can of worms I wasn't ready to acknowledge. I felt like I had dug myself into a hole, and the only way out that I could see was avoidance. I was getting pretty good at avoidance. My phone buzzed again.\n\n\"Who is that?\" Abigail asked, as I swiped the new message off the screen and turned off the vibrate setting. \"Is it Danny?\" she asked with a smile.\n\nI wasn't exactly sure how it happened, but I really liked the guy. He was tall, strong, and handsome, and he was fun to be around. The more I thought about it though, it was a disaster waiting to happen.\n\n\"Yeah,\" I said, pretending to be engrossed in the commercial that had just come on, hoping Abigail would just let it pass.\n\n\"Why aren't you messaging him back?\" she asked.\n\nWell that failed, I thought.\n\n\"You two have been talking and messaging nonstop, what happened?\" she implored through my silence.\n\n\"Nothing happened,\" I sighed, realizing she wasn't going to let it go.\n\n\"So why are you ignoring him?\" she asked curiously. \"Wait, how does that work? You know with your...you know. Does he know about that?\"\n\n\"He doesn't know, and that's why it won't work,\" I sighed. \"He'll think I'm a freak,\" I said. \"And what if he gets so upset when he finds out that he tells everyone? If the school finds out they'll kick me out for sure. I could probably even go to jail!\" This whole thing was frustrating sometimes.\n\n\"I guess that could complicate things,\" Abigail said thoughtfully. \"I never even thought about the possibility of jail.\"\n\n\"All because of my cock,\" I said. \"Don't get me wrong, I love the guy, but he sure does get me into a lot of tight spots.\"\n\n\"I bet he does!\" Abigail said, giggling incessantly from my words.\n\n\"I didn't mean it like that!\" I laughed.\n\n\"Can I see it?\" Abigail asked out of nowhere once our laughter faded.\n\n\"See what?\" I asked, leaning forward to grab some popcorn from the bowl on the coffee table.\n\n\"You know, your penis,\" she said, causing me to slip off the edge of the couch and onto the floor.\n\n\"What?\" I asked, thinking I couldn't have possibly heard her correctly.\n\n\"I've just never seen one before,\" she said, blushing and avoiding my eyes.\n\n\"You've seen it already,\" I blushed.\n\n\"Only for a second!\" she protested.\n\n\"Haven't you seen porn?\" I asked, getting back up onto the couch. This topic of conversation was a little uncomfortable, but at the same time I was finding it hard to stop from being aroused.\n\n\"Yes,\" she admitted, blushing even deeper. \"But it's not the same thing.\"\n\nShe was right about that. I had fantasized about naked women for my entire teenage life and all the porn in the world couldn't prepare me for the real thing. Even if the porn was of the very same girl.\n\n\"So...can I?\" Abigail asked shyly.\n\nOut of all the scenarios that flashed through my mind, none of them seemed bad. I had nothing to be ashamed of in the cock department, and a voice deep inside my brain kept screaming that this was how pornos were made. As Abigail watched me with her expecting eyes, my cock began to swell painfully in my panties. More than ready to ease my pain, I stood up from the couch.\n\nI nervously hooked my thumbs into the waist of my pajama pants and slowly pulled them down over my hips and ass, and let them go as they fell to the floor at my ankles. Now in just my black panties and tank top, I watched Abigail's rapt attention on that small piece of fabric shielding me from view.\n\nI didn't know if it was an illusion or a trick of light, but as I inched my panties down, I could've sworn her eyes shone a little brighter, and her tongue peeked out to lightly wet her lips. The whole thing turned me on, and watching her watch me, reminded me of Kennedy. Like a coiled spring, once it was free, my cock sprung forward, and in seconds stood as tall and firm as ever, pointing straight at Abigail.\n\n\"Wow!\" Abigail breathed, her mouth hanging open sexily. With her lips parted just so, I couldn't help but imagine slipping my cock between those soft luscious beauties. Her eyes flitted to mine for the briefest of moments as she lifted her hand to reach out and touch me.\n\nBRRRRIIINNNG!\n\n\"Fuck!\" we both shouted in unison, jumping at the sound. Out of reflex, I tried to cover myself as best as I could as I hit the floor.\n\n\"Oh that scared me to death!\" Abigail laughed, picking up her phone.\n\n\"Scared you? You're not the one swinging in the wind!\" I shot back, receiving laughter from Abigail.\n\n\"Hi Daddy,\" she said answering her phone. \"Not much, just watching some TV with Lexi...Yeah, that's the one,\" she said, watching me as I got back up off the floor. The danger was gone, and whatever moment there was had passed. Even so, Abigail's eyes never left my cock as I pulled my panties back up, tucking my erection in the waist band as best I could. Her eyes still clung to the bulge I was sporting even after my pajama pants were covering me decently again.\n\n\"Really?\" Abigail said to her phone excitedly. \"Yeah, I'll ask her!\"\n\n\"My dad wants to know if you want to go out to dinner with us tonight,\" Abigail directed towards me. \"He promises that you will have a good time!\"\n\n\"I don't want to impose,\" I said, trying to sit as comfortably as I could with my now massive erection.\n\n\"You're not imposing, he's inviting you,\" Abigail said kindly before covering her phone and adding. \"Say yes! The food will be to die for.\"\n\n\"Okay, I'll come,\" I relented.\n\n\"She said yes,\" Abigail said into her phone. \"Okay...Yes...I love you too. See you soon, Daddy!\"\n\n\"We need to start getting ready,\" Abigail said, jumping up off the couch as she hung up. \"He will be picking us up in about two hours.\"\n\nAbigail was nearly skipping as she made her way to our room, and I followed behind her. Dinner with Mr. Lockwood? It felt surreal. The man owned an empire that could put small countries to shame. The man and his family were practically legends. I knew Abigail was part of that family, but for some reason I never saw her that way. Just thinking about it was making me nervous.",
        "Abigail had already begun pulling dresses from her closet, and by the looks of it, the most expensive ones she owned. She usually toned it down around school, not wanting people to think that she thought herself better than them, but she did keep a few nice things around for special occasions.\n\n\"Your boobs are a little smaller than mine, but I think these two should be able to fit you nicely,\" Abigail said, pointing to a black strapless dress, and a vibrant red halter top evening gown with black beading swirling down from the bust. I was immediately drawn to the red.\n\n\"This is beautiful!\" I exclaimed, feeling the fabric.\n\n\"I thought you might like that one,\" she smiled, picking it up to hold in front of me. \"You'll need to wear some heels to keep it off the floor though,\" she commented, noticing the length.\n\n\"I have a pair of four-inch heels, but if I need more than that there might be a problem,\" I said.\n\n\"That should be fine,\" Abigail said, looking the dress over more. \"Try it on and check the fit.\"\n\nIn my excitement to put on such a beautiful dress, I forgot about my shyness. I quickly stripped off my clothes and stepped into it while Abigail held it open for me. I held up my hair, allowing Abigail to fasten the halter top around my neck, and as soon as she finished, I looked at myself in the mirror. It was stunning. I couldn't help but stare as I ran my hands over the soft fabric. I felt like a princess.\n\n\"Wow!\" I exclaimed breathily.\n\n\"It looks great on you!\" Abigail smiled over my shoulder, pressing herself into me as she gave me a hug from behind. \"You will have to lose the bra though,\" she said, running her hand along the exposed skin of my lower back.\n\nI was still in a daze, looking at myself in the mirror while Abigail tried on a couple of dresses before deciding on the one that she wanted.\n\n\"What do you think?\" she asked, breaking my trance.\n\nShe was wearing a strapless black dress with a sweetheart neckline that showed off some of her wonderful cleavage. It was tight in the body and flowed free past her hips down to the floor.\n\n\"You look incredible!\" I told her while getting an eyeful of how beautiful she was. \"Are you sure this isn't too much for a dinner with your father?\" I asked.\n\n\"He said to dress up,\" Abigail said, standing next to me in front of the mirror. \"When he says that, it usually means some place really nice.\"\n\nI was still having a hard time taking my eyes off myself in the mirror. I was almost having second thoughts though, this dress was perfectly modest in the front, but the back was completely open, ending just above my tail bone. In the end, I knew I couldn't pass up wearing something this beautiful.\n\n\"As much as we both want to continue staring at you in that dress, it's time to take it off,\" Abigail said, turning around so that I could help her out of hers. \"We both need to shower and finish getting ready.\"\n\nI sighed as I turned away from the mirror to help her. I knew I was going to be putting it back on again shortly, but I couldn't help but feel at a loss. It was a dress that every girl wishes to wear at least once in her life.\n\nAfter Abigail helped me out of my dress, I quickly wrapped a towel around myself. Surprisingly, Abigail grabbed her own towel, and headed out of our room in just her panties, not even bothering to cover her exposed breasts.\n\n\"No one else is here,\" Abigail said, answering my unasked question as I quickly caught up to her.\n\n\"You know,\" I mused. \"I thought that exact same thing and look what happened.\"\n\n\"Touch\u00e9,\" she said, giving a slight nod in thought.\n\nStill, she made no move to cover herself as we exited our suite and made our way into the halls. I wasn't going to complain; I was thankful for the view as I followed a step behind her. I didn't notice until we reached the showers, but I had broken another one of my rules. I left my room in only a towel. Abigail was most likely right about no one else being here, but I couldn't shake that nervous feeling.\n\n\"Where are you going?\" Abigail asked, as she turned on a couple of the water taps.\n\n\"Oh, um...to shower,\" I said, pointing to my favorite shower cubicle.\n\n\"Nonsense,\" Abigail said, waving me over. \"Stay out here with me.\"\n\nI knew it was a bad idea, but to be honest, I had always wanted to use the open showers, and there was no safer time than now. Abigail was busy checking the temperature of the water while I quickly discarded my towel and underwear. Feeling self-conscious about my breast forms, I covered them as best I could as I stepped under the spray.\n\nI flinched at the cool contact, but before long, it felt wonderful against my skin. Steam eventually began to rise, creating a comfortable fog in the air that slightly obscured everything around me. Feeling more relaxed, I let my hands fall away from my chest and began to soap my skin.\n\n\"Are those real?\" Abigail asked, breaking the silence.\n\n\"Their fake,\" I sighed.\n\n\"They look amazing,\" she commented, trying to get a better look. \"I can barely tell, and I'm really looking.\"\n\n\"I can tell,\" I said, blushing a little. My breasts were somewhat of a sore subject for me. I loved the way they looked and felt, but part of me wished they were real.\n\n\"Can I touch them?\" Abigail asked, looking up at me for a moment until I nodded.\n\nShe was gentle as she felt her way around them, brushing the nipples and eventually cupping them in her hands.\n\n\"They feel nice,\" she smiled. \"I wish I had some of these my freshman year. Have you thought about getting real ones?\" she asked, before adding. \"Well not real, but real fake ones.\"\n\n\"Sort of,\" I answered.\n\n\"Sort of yes, or sort of no?\" Abigail asked.\n\n\"I like the way these look, but part of me wishes they were real,\" I said. I had mused about it, but I had never really sat and thought about getting implants before. \"Maybe someday.\"\n\n\"Well I think yours are lovely,\" Abigail said, seeing my discomfort.\n\n\"Thanks. Yours are nice too,\" I said, receiving a laugh from her.\n\nShowering wasn't nearly as awkward as I thought it would be. Abigail and I chatted about dresses, and where we might be having dinner with her father. As much as I enjoyed watching the water cascade down her naked curves, the idle conversation was enough to temper me. By the time we turned off the water and dried off, the whole situation almost felt natural.\n\nWhile I didn't feel awkward wearing only my towel around Abigail, what did feel strange was the sensation of my hanging cock knocking between my thighs as we walked back to our room. I couldn't recall if it had always been so obvious before, or if I was only noticing it now because I hadn't felt it in so long. Regardless, I had to make a pit stop in the bathroom before meeting Abigail in our room. All of that swinging around was making me excited, and with a long night ahead of me, I figured it would be best to take care of the problem now.\n\nWhen I finally made it back to our room, I was glad I had rubbed one out. When I entered, Abigail was wearing some sexy black lingerie. She had one foot propped up on her bed as she slid on her last stocking, fastening it in place to her garter belt. She looked like a Victoria's Secret model.\n\nKnowing time was of the essence, I donned a red pair of lace cheeky panties that would match the dress, and proceeded to get ready. I quickly stepped into my dress before doing my hair and makeup, but Abigail moved around the room in her underwear, leaving her dress until the very last. I didn't mind in the least.\n\nIn what felt like no time at all, Abigail and I made our way downstairs to wait for her father. I kind of felt like I was going to prom or something as we descended that long staircase.\n\n\"He's here!\" Abigail said, looking out the windowpanes on the main doors.\n\nShe was right. Outside sat a plain black limousine, and waiting by the back door was none other than Mr. Lockwood himself. Abigail immediately ran outside into the cool evening air as fast as her heels would let her and jumped into her father's arms letting him twirl her about.\n\n\"I thought I wasn't going to be able to see you!\" Abigail laughed as he finally set her back on her own feet.\n\n\"I would never let that happen to my girl,\" he said, smiling down at her. \"My, you are beautiful!\"\n\n\"Thank you, Daddy!\" she said bashfully.\n\n\"And this must be Lexi,\" Mr. Lockwood said, looking over Abigail to greet me as I caught up to her. \"I've heard so much about you,\" he said kindly, taking my hand gently in his.\n\nHis pictures in news articles didn't do any justice. In person he seemed so much...more. He was tall with broad shoulders, and despite the gray peppered throughout his hair, he was in better shape than most men half his age. His tailored black suit fit him perfectly, but for some reason, his intimidatingly wealthy appearance was assuaged by his light blue eyes. They seemed unnaturally kind, but piercing as well. as if he could see beneath the surface with only a gaze. Just staring into those depths made me feel relaxed like I hadn't been in a long time.\n\n\"It's such a pleasure to meet you,\" I blushed, realizing how handsome I found him.\n\n\"The pleasure is all mine,\" Mr. Lockwood smiled. \"Shall we be off? I wouldn't want you ladies to catch a chill on my behalf.\"\n\nAbigail and I carefully made our way into the limo, making sure our dresses didn't catch or wrinkle, and Mr. Lockwood climbed in behind us. I had never been in a limo before and I couldn't stop staring at how nice it was. There was so much room and every surface seemed to shine.\n\nThe whole ride, Abigail tried to guess where we were going for dinner. All Mr. Lockwood would say was that it was a surprise, and just chuckled to himself as she rambled off a list of restaurants trying to see if his face would give her any clues.\n\nOur destination ended up being none of Abigail's guesses. The limo pulled up in front of a five-star resort in downtown Phoenix. With Abigail on his right arm, and I on his left, Mr. Lockwood escorted us through the extravagant lobby, to the elevators, and all the way up to the top floor.\n\nThe restaurant was filled with silver tablecloths and sparkling crystal. Four chandeliers hung from the ceiling and a quartet house band played their instruments on a dais at the far end of the hall. In the center of the room sat an open space of hard wood flooring where couples danced in their fancy evening wear.\n\nAs soon as we entered, the ma\u00eetre d' quickly escorted us to our table. Several attendants were already waiting to pull out our chairs, and gold rimmed menus were placed before us. With a few words from Mr. Lockwood, the ma\u00eetre d' quickly left us to retrieve a bottle of wine. I hadn't been poor growing up, but it was surreal how nice this place was.\n\n\"So, I hear you've been getting my little girl into trouble,\" Mr. Lockwood said out of nowhere.\n\n\"I...well we...I mean...\" I tried. How could he have known about Abigail, Kennedy and I breaking into the school? Did Abigail tell him? Panicking, I looked to Abigail for help.\n\n\"I'm joking!\" Mr. Lockwood laughed loudly, Abigail following close behind. \"You should have seen the look... Haha...Like a dear in headlights.\"\n\n\"She's cute like that when she gets panicked,\" Abigail said, putting a hand on my shoulder.\n\n\"Truth be told, I wouldn't mind if she did get into a little trouble now and then,\" Mr. Lockwood said, surprising me. \"She never really had a chance to run free like normal children, and I feel badly about that. Just try not to make it the kind of trouble I can't bail you out of, okay darling?\" he asked, glancing up as the waiter arrived with the wine.\n\n\"We'll try, Daddy,\" she joked with a little smile.\n\nOnce the wine was poured, we toasted to friends and family, clinking our glasses together. I never really had a taste for wine before, but after taking a sip, I realized it could have just been that I didn't have a taste for cheap wine. It was delicious.\n\n\"How about a dance?\" Mr. Lockwood asked Abigail, holding out his hand.\n\nAbigail's face lit up as she rose to her feet. She took his hand, and he led her out onto the hardwood dance floor. They both quickly fell into step as they glided across the room. They were both remarkable dancers, and Abigail's graceful nature showed in her movements. Eventually the music faded as the song finished and they joined me back at the table.\n\n\"You're next,\" Abigail said, releasing her father's arm.\n\nBefore I knew what was happening, my hand was in Mr. Lockwood's, and he was leading me out onto the dance floor. I had no idea what I was doing. None of the dancing I knew would be suitable for a place like this, and grinding on my best friend's father didn't seem like an appropriate option. Fortunately, Mr. Lockwood was an excellent lead, and he helped me through the steps until I was moving with a grace as near to Abigail's as I could muster.\n\n\"Well, you learn quickly!\" Mr. Lockwood said, giving me a spin.\n\n\"I've never danced like this before,\" I said with a perpetual smile I had been wearing since we stepped onto the floor.\n\n\"You're doing beautifully!\" he remarked.\n\n\"I must admit, I was nervous about meeting you,\" I said.\n\n\"Really?\" he asked.\n\n\"When I was in high school, I wrote a paper about you,\" I admitted. \"Your profile in Time Magazine made you seem very intimidating.\"\n\n\"I never did like that piece,\" he said, shaking his head. \"They got all the facts right, but they always neglect the motivations behind them. Or the people for that matter. I did buy up a small company that ended up being a heavy competitor in the aerospace industry, but I only did it to save the jobs of over a thousand people.\"\n\n\"The current owner asked me to help him save his peoples livelihoods, so I bought the company and flooded it with capital. The fact that they made a breakthrough worth millions of dollars was never something I'd foreseen. I just wanted to help them.\"\n\n\"'That was very generous of you,\" I said\n\n\"Some have said that, others, that I was a lucky fool,\" he said. \"I just like to think that profit or not, I did the right thing.\"\n\n\"Ah-hem!\" Abigail said, tapping her father on the shoulder. \"Do you mind if I cut in?\"\n\n\"Not at all, Darling,\" he said kissing her on the forehead.\n\nAs he stepped away, Abigail took me into her arms. It must have looked odd to anyone watching, two girls in extravagant dresses twirling each other around on the dance floor, but in the moment I didn't even notice. I did however notice Abigail's fingertips caressing the bare skin of my lower back. It was comforting, yet tantalizing, and I was of two minds when Abigail pulled away, announcing that our food was arriving.\n\nAs our meal progressed, I realized something. As much as I had read about Mr. Lockwood in news articles and magazines, they all failed to mention what he was like as a person. They all remarked on his 'brilliant business intellect' and 'innovative mind', but nothing I had ever read, or heard about him, could have prepared me for who he was as a person. He was funny and charming, and could brighten up a room with his rich laugh. He had a great sense of humor, as well as a warm heart, especially for his daughter.\n\nI had gotten to know Abigail really well in the past few months, but for some reason I was shocked to see their relationship before my eyes. I didn't know if it was due to my experience with my own parents; my father out of the picture and my mother, a strict, god fearing woman. The way they laughed and joked together was a type of family dynamic that was foreign to me. It almost seemed like they were best friends, rather than father and daughter.\n\n\"So, tell me, is there a boy in your life yet?\" Mr. Lockwood asked Abigail.\n\n\"Daddy!\" Abigail laughed.\n\n\"Hey, you're growing up. You're out on your own. I figured you would meet someone eventually,\" he said shrugging.\n\n\"We go to an all-girls college,\" Abigail said.\n\n\"It's a college, not a convent. Or a prison for that matter,\" he added. \"I'm sure you've taken some time to see the sights.\"\n\n\"We have seen the sights,\" Abigail said. \"But no, there are no boys in my life.\"\n\n\"Oh. I see,\" Mr. Lockwood said a little dejectedly. \"Are there any girls?\" he asked with a smile, causing Abigail to blush profusely before she denied that as well.\n\n\"No girls, Daddy,\" she said, keeping her eyes on her wine glass.\n\n\"It would be okay if there was, Sweety,\" Mr. Lockwood smiled. \"People in college experiment. It would be completely fine if you found your future wife here,\" he prodded, obviously enjoying her embarrassment.\n\n\"Daddy!\" Abigail laughed, blushing even more than I thought possible.\n\n\"Lesbianism is a perfectly acceptable orientation,\" Mr. Lockwood said a little loudly, trying to embarrass her further just as a waiter arrived to refill our wine.\n\n\"This is a nice place, Daddy,\" Abigail admonished him, not able to hold back her mirth. \"You'll get us kicked out if you keep this up!\"\n\n\"Well we wouldn't want that, I suppose,\" he said, placing his hand over hers. \"At least not until we finish dessert.\"\n\n\"So Lexi, what are you studying?\" Mr. Lockwood asked, pulling me into their conversation.\n\n\"Psychology and sociology. Possibly with a focus on Gender Studies,\" I replied.\n\n\"That sounds fascinating,\" Mr. Lockwood said, turning more towards me. \"You know, I hear that most people that go into psychology do so to better understand some sort of dysfunction in their own families.\"\n\n\"I would probably fall into that category,\" I said with a smile. \"I was raised by a single mother who...Well, she's extremely dedicated to her faith, and believes that her children should be as well,\" I said trying to be as polite about it as possible.\n\n\"She's putting it mildly,\" Abigail said, cutting in. \"I believe she used the words bible thumping tyrant, at one point. You don't need to sugar coat it with him,\" she added, seeing my reaction.\n\nI was trying my best to maintain a proper appearance, being in such company, but the more I saw the two of them talk, the more I realized that, in spite of a wealth to rival nations, they were very down to earth, and surprisingly refreshing.\n\n\"I guess I did say that once or twice,\" I admitted, giving Abigail a smirk. \"It was tough growing up, forced to practice a religion that I didn't believe in.\"\n\n\"I'm sorry to hear that,\" Mr. Lockwood said. \"I've always believed in letting Abigail decide for herself on such matters. Mary and I discussed it before we had her, and we wanted Abigail to be able to choose her own path,\" he finished with a faraway look in his eyes.\n\nThe conversation lulled for a bit after that. I wasn't sure if it was from the mention of Abigail's mother, or the depressing topic of my dismal home life, but it quickly became an uncomfortable silence while each of us peered around seeking a more uplifting topic. In the end, it was Mr. Lockwood who turned things back around.\n\n\"I think I have the perfect idea!\" he said. \"I assume you both have fake ID's?\" he asked, leaning in and whispering to the both of us. \"Don't look at me like the innocent daughter. I know you have one,\" he said to Abigail. \"Lucas told me you asked him to procure one for you before he even got it for you.\"\n\n\"I will murder him!\" Abigail said pouting.\n\n\"He was only doing his job,\" Mr. Lockwood said. \"Besides, if I didn't approve, would you even have one in the first place?\" he asked, making Abigail think about it. \"Now, as I was saying, if you both have your ID's we could get out of here and have some fun.\"\n\nMr. Lockwood's fun turned out to be a trip to a local casino. It seemed like the perfect plan to me. Abigail, Kennedy, and I had won some money the previous month in a scavenger hunt, and it had been burning a hole in my pocket ever since.\n\nI was in a state of anticipation during the limo ride to the casino. I had never been to one before, and other than what I had seen in movies, I wasn't sure what to expect. The resort casino we pulled up to wasn't as massive as what might be seen in Las Vegas, but it was still rather impressive. As soon as we stepped from the limo we were bombarded with lights and a rich atmosphere.",
        "I clung to Abigail's arm as we followed closely behind Mr. Lockwood, who seemed to have a built-in sense of direction. I was drawn in by the sounds of coins falling and bells sounding all around me. It was slightly disorienting, and from a quick look to Abigail, I saw that she felt the same. We waited while Mr. Lockwood spoke to someone at the cashier cage, and after a few moments he came back over to us holding a blue bank pouch.\n\n\"Okay my ladies, here's the plan,\" he began as he pulled out two stacks of cash. \"You each get ten thousand dollars,\" he said, handing first one stack to Abigail, and then another to me. \"You can't leave the casino with it. You either lose it all, or win enough to pay me back, and you can keep the excess.\"\n\nI was speechless as I stood there with ten thousand dollars of fresh bank notes in my hand. It was surreal to just be handed so much money like it was nothing. I was also worried about losing so much of someone else's money.\n\n\"I don't...I can't take this,\" I protested. \"I wouldn't be able to pay you back.\"\n\n\"You weren't listening, Sweety,\" Abigail laughed. \"You don't have to pay it back. You just gamble it. If you lose it all, it's fine, but if you win you get to keep anything more than you started with.\"\n\n\"That's it exactly,\" Mr. Lockwood said with a smile. \"Think of it as a thank you for being such a good friend to my daughter.\"\n\nAbigail and I stood there, staring at each other with goofy smiles, like idiots, until the loud sound of a jackpot hitting broke us out of our trance.\n\n\"Where do you want to go first?\" Abigail asked. After seeing my overwhelmed state, she decided for the both of us. \"Blackjack.\"\n\nWe were literally skipping through the casino, toward the blackjack tables, with ten-thousand dollars in our hands. Dressed as we were, in our extremely expensive evening gowns, we must have been a sight to behold. I caught several people watching our little parade as Mr. Lockwood attempted to keep up with us, laughing all the way.\n\nThere were several tables with open seats, but we chose a table with only one other person sitting at it. It was an elderly gentleman, in an old but well-maintained gray suit, with a respectable stack of chips in front of him.\n\n\"Hello!\" the dealer said as we sat down. Her eyes widened slightly when Abigail placed her stack of cash on the green felt of the table, but she quickly recovered by the time I placed mine down as well. Receiving a curt nod from the pit boss behind her, she counted out our cash and pushed two large stacks of chips in front of us.\n\nMr. Lockwood stood behind us, guiding us through our first foray into gambling, giving tips and instructing us on table etiquette. I was all over the place, winning and losing on a whim, while Abigail's stack of chips seemed to slowly but steadily grow. It felt nerve wracking watching my chips disappear. Sure, it wasn't my money, but it was a vast sum that I felt like I was somehow squandering.\n\n\"You should split those,\" Mr. Lockwood instructed me, placing his hand on my shoulder.\n\nTrusting his instincts, I signaled the dealer to split the aces that sat before me. I pushed forth another five hundred dollars and crossed my fingers as the cards were dealt.\n\n\"I can't believe it!\" Abigail squealed with delight seeing the two face cards come up, giving me two blackjacks.\n\nI was speechless. Abigail was laughing with joy and Mr. Lockwood gave my shoulder a squeeze while smiling down at me.\n\n\"Mr. Lockwood!\" Someone announced from behind us, breaking through our excitement.\n\nI was sure that someone had realized that we were underage, and they had come to escort us from the casino. Abigail and I turned in our seats to see who the speaker was. I had to peer around Mr. Lockwood to see the middle-aged man standing there, flanked by two other casino employees.\n\nSomething was off, and it took only a moment to realize what it was. While the speaker was a middle-aged man in an expensive black suit, his companions didn't seem to be the sort you would bring along to escort someone out of your casino. One was a short woman with blonde hair, and the other was a thin man in glasses holding a leather folder.\n\n\"I apologize, we had no idea that you would be coming to our establishment, and I only just learned of your arrival,\" the man said with a slight bow of deference. \"My name is John Anslow, and I am the manager of this casino.\"\n\n\"It's a pleasure to meet you John,\" Mr. Lockwood said, shaking his hand.\n\n\"Will you be requiring accommodations? We have set aside our Presidential Suite, free of charge, should you require it,\" Mr. Anslow said.\n\n\"I don't think that will be necessary. This is kind of a spur of the moment thing for the girls,\" he said, glancing back at us.\n\n\"I understand perfectly,\" Mr. Anslow said with a small smile creeping into his features that left me feeling dirtier by the second. \"Should you need anything at all during your stay Alice will be here to accommodate you.\" Mr. Anslow was trying to be circumspect, but his eyes kept flitting from Abigail to me. It was clear that he assumed we were escorts.\n\n\"Thank you for your hospitality,\" Mr. Lockwood said, his tone becoming darker, leaving me with the impression that he knew exactly what this manager was thinking, and disapproved of any such thoughts being connected to his daughter.\n\nMr. Anslow noticed the change in Mr. Lockwood's voice, and after a few quick words with his colleague, he retreated, leaving Alice to tend to our needs.\n\n\"I apologize for that,\" Alice said, stepping forward.\n\n\"You don't need to apologize for anyone else's actions,\" Mr. Lockwood said with and easier smile for her. \"I can't say that we'll be needing anything, but you're welcome to join us.\"\n\nWith that uncomfortable business over with, we went back to our gambling. We moved from table to table playing all sorts of games. Blackjack, Craps, Roulette, if there was a table for it, we sat for at least a few hands, trying it out. We even played Baccarat, and despite walking away up a thousand dollars, I still didn't know the rules of it.\n\nAbigail had about fifteen thousand dollars amassed in front of her as we sat at the Roulette table, whereas I only had four.\n\n\"It's getting late girls,\" Mr. Lockwood sighed. \"I don't know where you keep all the energy, but I'm not as young as I used to be.\"\n\n\"You're young enough,\" Abigail assured him, placing another bet.\n\n\"Young enough for what exactly?\" he asked.\n\n\"I don't know, lots of things,\" Abigail said.\n\n\"We should be leaving soon either way,\" he said. \"You remember the rules,\" he added, looking to me.\n\nI either had to win something or lose it all. I had been up and down all night, but never breaking past the ten thousand I had started with. I knew the games were set in the favor of the casinos, but I felt as if the universe was out to get me as well.\n\nI stared at my chips for a minute before deciding. It wasn't that hard of a decision really, it hadn't been my money to start with. My only real option left was betting it all. I separated my chips into four piles and placed them on four separate numbers on the table. It was a long shot, but really, there was no downside. I would either win, or I wouldn't.\n\n\"No more bets,\" the dealer said, waving her hand over the table.\n\n\"I can't believe you just did that!\" Abigail said. \"All of it?\"\n\n\"I told you, you walk out with something or nothing,\" Mr. Lockwood said, smiling fondly at me for my boldness. \"Time was running out and she knew the stakes.\"\n\nWe watched in anticipation as the ball spun and bounced around the roulette wheel. It was a small chance that it would land on one of the numbers I had chosen, but as the ball bounced its way to a stop my heart skipped a beat in my chest.\n\nFor a moment there was silence, and then a loud bellowing cheer came from behind me. The ball had landed on black thirteen. It was a number I had picked for sentimentality, and by some twist of fate it had come through for me. Abigail nearly knocked me out of my chair as she threw her arms around me, congratulating me.\n\n\"You're rich girl!\" she laughed. \"I thought I was hot stuff for being up five grand, and you win over thirty thousand on one bet!\"\n\n\"Thirty Thousand?\" I said, repeating her words in shock. I had placed the bet, and I could recall that specific numbers were thirty-five to one odds, but I hadn't really thought about it. I had never expected to win.\n\n\"Yes, you dummy!\" she said, kissing me on the cheek.\n\nIt was a bit overwhelming. Mr. Lockwood just laughed behind us while I sat in a daze. The dealer cashed out my chips and even gave me a tray to hold them all in; there were quite a lot of them. We were then escorted by a couple of large men to the cashier cage where they exchanged my winnings. After giving back the ten thousand to Mr. Lockwood, I was left with twenty-six thousand dollars in my hands, and it was by far more money than I had ever had in my life.\n\n\"I think this calls for a bit of celebration,\" Mr. Lockwood said. \"Alice, could we get some champagne?\"\n\n\"Yes sir. Would you like it brought here?\" she asked.\n\nMr. Lockwood thought for a moment before replying. \"Is that suite still available?\"\n\n\"Yes sir,\" she said, reaching into a folder for a key card. \"I can show you up myself.\"\n\n\"That would be appreciated,\" Mr. Lockwood said, motioning her to lead the way.\n\nAlice pulled out her phone as she led the way, and after pressing several buttons, turned back to Mr. Lockwood and informed him that the champagne would be up shortly. She showed us to a VIP elevator that catered exclusively to the luxury suites on the top two floors and escorted us to the Presidential Suite.\n\nIt was massive! The main living area was larger than my house back in Colorado. It was an open area design with light tile floors and dark rugs. The furniture was modern and appealing to the eyes, but what really drew my attention was the massive wall of windows. It overlooked the far-stretching desert landscape that glowed in the light of the full moon.\n\n\"There are master suites on either side of the living quarters,\" Alice instructed, showing us around. \"The kitchen is fully stocked, and if there is anything you require, you can either call down, or use the smart touch device in any room to notify us of your needs. And it appears the champagne has already arrived,\" she noted, spotting the bottle chilling on a fancy stand near the dining area. \"And of course, it's all fully comped by the casino, so if you need something don't hesitate to ask.\"\n\n\"Thank you so much,\" Mr. Lockwood said, unphased by the luxury of our accommodations. I almost missed it, but as he shook her hand, I noticed her palming what appeared to be several folded-up bills.\n\n\"It was my absolute pleasure,\" Alice said, smiling before leaving us.\n\nMr. Lockwood made quick work popping the cork and began pouring champagne into crystal flutes.\n\n\"Here's to luck!\" Mr. Lockwood said, raising his glass. \"Because being smart can only take you so far.\"\n\nAfter clinking our glasses, I got my first taste of champagne and it was fabulous. It had a peculiar sweet taste, and the bubbles tickled my mouth pleasantly.\n\n\"This is incredible!\" I said, shocked that something could taste so great.\n\n\"For five hundred dollars a bottle it, should be,\" Mr. Lockwood chuckled.\n\n\"At least you're not paying for it, Daddy,\" Abigail said, taking another sip of hers.\n\n\"Thank you so much for tonight, Mr. Lockwood,\" I said. \"This has easily been one of the best nights of my life.\"\n\n\"One of the best?\" he asked. \"Now I want to hear about the best night!\" he laughed, causing me to blush like fire. My best night was the whole evening leading up to, and including, having sex with my own sister, followed closely by the first night I dressed up as Lexi.\n\n\"I don't know Mr. Lockwood,\" I smiled demurely. \"A proper lady shouldn't speak of such things.\"\n\n\"There's a proper lady here?\" Abigail asked, peering around. \"Who let her in?\" she laughed.\n\n\"I guess you have me there, Lexi,\" Mr. Lockwood sighed, shaking his head. \"And please, call me George. I hear Mr. Lockwood and I feel like I should be looking over my shoulder for my father.\"\n\n\"Okay...George,\" I said, trying it out.\n\n\"Can I call you George too?\" Abigail joked.\n\n\"No, you may not, Missy!\" Mr. Lockwood laughed.\n\nWe spent a good while drinking our champagne and laughing at one thing or another. I found Abigail's discourse with her father open and refreshing, not to mention hilarious at times, but no matter the conversation, my eyes were always drawn back to the stack of money sitting on the table in front of me.\n\n\"Are you sure I can keep all of this?\" I asked, fingering the money I had won. \"It's a lot of money.\"\n\n\"Of course you can keep it,\" George said. \"You know, I made my first million that same way. Before my trust fund, and long before my inheritance, the first money that I ever made for myself came from a roulette wheel. I was on vacation in Europe, stretching my legs when I was twenty-two, and I ended up at the Monte-Carlo. I started with fifty thousand dollars from a line of credit I received using my last name and my father's reputation as collateral, something he would have never approved of, and after six hours I left with just over a million dollars,\" he said, reminiscing on the past. \"It was an up and down roller coaster. I was up two-hundred thousand at one point, and I lost nearly all of it before I made the climb back up.\"\n\n\"That money I started with wasn't mine either, but that first million let me build something of my own before my father passed the keys of his kingdom to me,\" George said. \"So yes, that money is yours. Maybe someday you'll take some of that and build something of your own,\" he paused before smirking, \"Or maybe you'll just have one hell of a weekend.\"\n\nIt was some story. I had never heard about any of this before, and by the look Abigail had, she hadn't either. I was still having a hard time reconciling this man to the one I had read about, but either way, I liked this version more.\n\n\"I don't know about you ladies, but I think that's it for me tonight,\" Mr. Lockwood said, standing. \"I will see you both in the morning.\"\n\n\"Good night, George,\" I said, followed by Abigail's, \"Goodnight Daddy.\"\n\n\"I don't know why, but I feel weird calling your dad George,\" I told Abigail after the door to his room closed.\n\n\"I know what you mean,\" Abigail said, leaning back into the soft white cushions of the sofa. \"I can't recall anyone ever calling him George before. It's always Mr. Lockwood. He must like you,\" she said with a smile.\n\n\"Uggh,\" I sighed getting up. \"I hope you don't hog the covers, or someone will be sleeping on the floor...and it won't be me,\" I teased as I walked to our room.\n\n\"You're not going to sleep already, are you?\" Abigail asked, turning to look at me over the back of the sofa.\n\nTo be honest, I didn't feel that tired, but I had somehow fallen back into the habit of feeling that I had to go to bed once my elders did. \"I guess so,\" I said, looking around awkwardly.\n\n\"Come on!\" she exclaimed in a hushed tone, nervously peeking at the door to her father's room. \"I'm too pumped to sleep right now, aren't you? You just won a butt load of money!\" she said, getting to her feet. \"We need to celebrate!\"\n\nBefore I could form a reasonable protest, Abigail grabbed me by the hand and pulled me out the door of our suite. Slowing for only a moment to close the door quietly behind us, she proceeded to tug me along behind her toward the elevator. We had several floors to travel down, and the longer the ride took, the more Abigail began to fidget excitedly. She was bouncing up and down on the balls of her feet by the time the bell sounded for the ground floor.\n\n\"What are we going to do?\" I asked as she guided me out of the elevator and into the noise and flashing lights of the casino floor.\n\n\"Let's gamble a little bit more and get some drinks,\" Abigail said.\n\nDespite the hour, there was still a flood of people roaming the floor, gambling and drinking, or simply walking in search of a new game that would call their name. Abigail and I drew several looks from the people around us. I was assuming it was due to our extravagant attire. Most of the people were dressed nicely themselves, but we were both on a whole different level. I still caught myself running my hands over the rich fabric of my luscious red gown, or fingering the black coral beading that decorated it.\n\nI had mused before that I had felt like a princess, but the way people gave way for Abigail and I made the feeling really set in. I tried not to stare too hard at our admirers, but I had the feeling that their eyes lingered long after we passed them. I could almost feel their eyes caressing my curves from behind me.\n\n\"Abigail,\" I said, stopping her. \"I left my money upstairs.\"\n\n\"Don't worry, I have plenty on me,\" she said, slipping two fingers into the cleavage of her black strapless dress to pull out a thick wad of bills.\n\n\"How did all of that fit in there?\" I joked, surprised that there was any extra room left in her dress for her boobs with all of that cash hidden in there.\n\n\"Ooh!\" Abigail said, either distracted or ignoring my comment. \"This table!\"\n\nWe sat down at a barren blackjack table overseen by an elderly man with a kind smile and thinning hair. After receiving a large pile of five-dollar chips, Abigail split them with me, and we placed our bets. We had already won a lot of money, but right now it was more about the ambiance as we drank and laughed together.\n\nI didn't know how long we were at it, but with our attendance, the table filled quickly with men of all ages looking for any excuse to be near us. Most of them kept their peace, only letting their eyes wander to us frequently, but not all. Either deep in drink, or feeling lucky, some few tried to gain some attention from us.\n\n\"Those dresses are amazing,\" one younger man said with a slight slur. \"You guys come from somewhere fancy?\"\n\nAnother tried playing a longer game. He was betting heavily, even for a five-dollar table, while trying to subtly tell us how successful he was. He ended up losing all of his chips from lack of attention to his play. As he stood up to go, he tried to salvage his losses by asking if we would like to go someplace quiet with him. By the third guy it was getting a little exhausting.\n\n\"Can I buy you ladies a drink?\" A guy in his twenties asked.\n\n\"We have drinks,\" Abigail said, holding up her glass and fighting the urge to giggle at his poor attempt.\n\n\"How about just your name then?\" he asked, trying to recover.\n\nI wasn't feeling his attempt at all. Abigail stared at him for a moment, giving him a funny lopsided look with half a smile, before she got up from her stool and stepped around me to stand next to him.\n\n\"You're not bad looking,\" she observed, running a hand over his shoulder and lightly touching his hair, causing him to beam with anticipation. \"You definitely have some money, judging by your clothes, but there's just one thing...\" she said, taking a step back towards me.\n\nBefore I knew what she was planning, Abigail sat easily into my lap sideways, hooking one arm around my shoulders.\n\n\"...you're just not our type,\" she smiled, twisting her body into me and pulling me in for a sensual kiss.\n\nI wasn't ready for it. For a split second I was shocked, but I quickly recovered recalling the only other time those beautifully soft lips had touched mine. It had only been a distraction so Kennedy could get away, but it had been memorable. Just the thought of that night long ago could make my heart skip a beat, and now it was happening again.\n\nI was sure it wasn't real. Abigail was just screwing with this guy. That didn't stop me from enjoying it and taking full advantage. My hands easily snaked themselves around her, roaming over her small body. I could feel hers running along my thigh causing small ripples of pleasure to follow her touch.",
        "Caught up in our kiss, instinct took over and my lips parted. To my surprise, Abigail followed my lead, letting her tongue dart out to meet mine. She tasted sweet like the sugary cocktail she had been drinking, and the feel of her tongue lapping against mine took my breath away.\n\nIt had only been moments, but when her lips finally pulled away from mine it felt like an eternity. We were both breathing heavily as she gracefully slid off my lap and back onto her own feet.\n\n\"Better luck next time, Romeo,\" Abigail said, patting the guy on the cheek before making her way around me and back to her own seat.\n\nIt took a few more moments for the spell to be broken; for me as well as everyone else. The whole table had been silent, as well as a few spectators that had stopped to watch. The dealer even stood stunned, forgetting that it was his job to always keep the cards flowing. After that, there were significantly less potential suitors vying for our attentions.\n\nWe ended up moving from game to game in an almost restless fashion, not quite finding something to suit our moods, until eventually we ended up at the bar, sipping Cosmos and chatting about our day. The Cosmos were a bit clich\u00e9, but they were delicious, and with the feeling they left once consumed, I could care less.\n\n\"How much did you lose?\" I asked, taking another sip of my drink.\n\n\"Only about five hundred,\" Abigail said easily. \"You?\"\n\n\"I only won another two thousand.\"\n\n\"I don't know how you're doing it,\" Abigail said shaking her head. \"Are you sure you've never done this before?\"\n\n\"Gamble?\" I asked. \"Never in a casino. I've played online, but never for real money.\"\n\n\"You could've fooled me,\" Abigail said. \"You're a natural.\"\n\n\"I don't know. I think I'm going to quit while I'm ahead,\" I said. \"The last thing I need to do is lose it all. I could do a lot of things with this money.\"\n\n\"Well here's to our big winner!\" she smiled, holding up her glass.\n\nOur glasses clinked as they touched and we both finished our drinks. As Abigail set her glass carefully down on the bar, a strange look came over her eyes. They seemed to sparkle as she looked at me, smiling. I had the feeling she was going to say something until she bit her lower lip and shook her head as if to clear the cobwebs.\n\nWith a heavy sigh, she got to her feet, wobbling a little and grabbed my hand. \"I think it's finally time for bed,\" she said.\n\nDrinking with Abigail and Kennedy, I had learned that my tolerance was a little higher than Abigail's, so I put my arm around her to steady her feet. It was quite the little parade we made trying to find the elevator. We somehow got turned around and had to ask for directions. When the doors to the elevator finally shut, I couldn't help but burst into giggles at Abigail's antics.\n\nDuring our search, I was quietly pleading with her to behave, using hushed whispers and pointed looks, but now that people were no longer staring at us, I found the whole ordeal hilarious. Several times when Abigail had noticed a guy watching us, she would shout \"Back off! She's mine!\" before grabbing my ass, or one time even licking my face as if to mark her territory.\n\nEven though I was in a dress, I was thankful for the cover of the elevator. All the attention Abigail had been giving me, however playful, was beginning to cause a physical response. I could feel my cock slowly swelling and pressing against the soft fabric of my panties, and like some satanic means of torture, the building pain from the growing pressure only made the blood surge more. When the elevator doors opened, I mumbled a prayer of thanks and hurried Abigail to the door of our suite.\n\n\"Where is the key, Abigail?\" I asked, realizing that I never had one.\n\n\"Key?\" Abigail asked, distracted.\n\n\"To the room?\"\n\n\"Oh, I have it here somewhere,\" she said, fumbling at the cleavage of her dress.\n\nTo be honest, she wasn't taking very long, but I needed to free myself, soon, and with the length of my dress I couldn't easily reach under and readjust myself. Lacking the pain tolerance to wait, I slipped my hand into her cleavage to help her look.\n\n\"Oh, you found it!\" Abigail giggled as I pulled it from her right breast.\n\nI quickly slipped the key card into the slot and opened the door, making a bee line for our room. I barely noticed the lavish beauty of the decor as I quickly hiked up my dress and reached under to remove my painful erection from its tuck, and repositioned it into the waistband of my panties.\n\nWith the pain finally gone, I couldn't help but give my shaft a squeeze, letting a muffled moan escape as it throbbed in my hand. My moment of revelry in the bliss following my torture only lasted a moment. Abigail entered the room behind me, and I had to quickly let the skirts of my dress fall back down.\n\n\"Look at this room!\" she exclaimed, letting the door close behind her. \"I love it!\" she said, spinning around slowly with her arms outstretched.\n\nTaking Abigail's cue, I looked around. Even in the dim light, I could see the prominent bronze/gold hue emanating from everywhere. The walls, carpet, even the bed seemed as if it was painted with gold. Oh, and the bed, it was massive! Having been used to the size of the beds in the dorms, I couldn't believe we had so much space, even if it was for the two of us. You could host a gang bang with an entire football team on there and still have room left over. Okay, maybe not that many people, but it was still huge.\n\nEven with the luxury of the furnishings, it paled in comparison to the view. The wall to wall, floor to ceiling window that covered an entire side of our room showed the distant mountains and beautiful desert landscape. I swear, my cheeks had begun to hurt with all of the smiling I had been doing today.\n\n\"Can you help me?\" Abigail asked, holding her hair up while she looked over her shoulder at me. \"I can't get the zipper.\"\n\n\"Sure,\" I said, walking up behind her. I slowly eased the zipper down on her strapless dress, careful not to let it snag.\n\nI felt a little guilty savoring the moment. With each inch, more of her pale skin was exposed, glowing in the dim lighting. I knew she wasn't wearing a bra from earlier, but I couldn't help but feel a thrill again as her bare back opened up to me.\n\nAs soon as the zipper finished just below her tail bone, revealing her black thong, Abigail turned on me. She had one hand pressed to her chest, holding her dress up. Her expression was blank as she took a moment to stare at me from a little over a foot away. Her breast swelled with her breathing and then quite deliberately, she let go of her top. It fell easily from her breasts, catching for a bare moment on her hips before sliding to the floor.\n\nI was stunned. It was nothing I hadn't seen before. We both knew as much, but this was different. I drank in the sight as she stood there silhouetted in the light from the full moon outside. Her entire body was poised like a statue of a goddess.\n\nHer black thigh high stockings and garter belt contrasted sharply with the color of her skin in a way that amplified its flawlessness. I couldn't stop my hand caress my erection through my dress.\n\nWhen I finally brought my gaze back to meet Abigail's eyes, her blank expression was still there, but now something else seemed to be hidden behind it. With her eyes locked on mine, she stepped out of the puddle her dress made around her ankles, to stand mere inches from me. She moved so slowly I couldn't tell if things were in slow motion, or if the alcohol was playing tricks with my mind.\n\nAbigail leaned forward, and my eyes closed. I was desperate to feel her lips on mine again. Her hand snaked around the back of my neck and I could feel her warm breath teasing my lips. Her fingers fumbled at the clasp to my halter, and with a snap it released, letting my dress slide down my body, causing me to shiver as the silk caressed my skin on its way to the floor. With my eyes still closed, I couldn't see her, but I could feel the heat from her body radiating onto mine. My lips parted of their own volition, and just like that, Abigail's hand slipped from around my shoulder, and that glorious warmth faded.\n\nBreathing quickly, and my heart racing, I opened my eyes to see Abigail no longer standing there. Instead, I watched as her naked alabaster skin disappeared beneath the comforter and silk sheets on our bed.\n\nA pained sigh slipped through my lips. My mind was still swimming with alcohol, and I could feel my painful erection leaking precum into my panties. Resisting the urge to grasp my cock and give it a small measure of the pleasure it craved, I stumbled towards the bed and kicked off my heels.\n\nThe sheets were soft and cool against my skin, caressing and teasing me further as I situated myself underneath them. Abigail had her back to me, facing the window, and I could hear the soft even breathing of her already deep in sleep.\n\nI was feeling so frustrated. I couldn't tell if she was teasing me, or if it had all just been in my head. I had always found her attractive and desirable, but ever since I found out that she knew about me, it felt like my feelings had grown tenfold. With my thoughts and my cock begging me for attention, sleep seemed like a distant possibility.\n\n*** *** ***\n\nI woke with a slight throbbing in my head that was quickly overlooked by the other sensations I was feeling. I was lying on my back, and Abigail had her naked breasts pressed against me as her head lay on my chest. I could feel one of her stocking covered legs hooked over mine, and her warm hand resting inches from the slowly growing bulge in my panties.\n\nWhen I looked down to see her sleeping face, my cock surged. Her lips were resting over the nipple of one of my breast forms. She must have rolled over at some point in the night. I couldn't even remember falling asleep.\n\nI was enjoying the sensations from her warm body pressed into mine when I felt her shift, nuzzling herself into me. Her movements brought her fingertips lower, caressing the edge of my thickening shaft. I knew I should have said something. I should have moved her hand or woken her up, but the way her fingertips gently stroked me felt incredible.\n\nI shut my eyes as I let the sensations wash over me. The more she made her small motions, the harder I became. As if it had a mind of its own, my cock began twitching against her fingers. With each little spasm, it slipped further and further out of the waist of my panties, until after one final twitch, it sprung free.\n\nI let out a quiet gasp as it slid right beneath her fingers to point straight up. Her warm hand was now holding onto my bare, throbbing shaft. In her sleep, Abigail began to slowly play with my cock, and I knew that if I let her keep this up I would cum all over both of us. I could already feel the first warning tingles shoot through my body.\n\n\"Abigail? Lexi? Are you girls up?\" Mr. Lockwood's voice came from through the closed door.\n\nAbigail wasn't up, but I sure was. Her hand was still teasing me, and I felt trapped between my pleasure and Abigail waking up with my cock in her hand.\n\n\"Girls?\" he called again, knocking louder and finally causing Abigail to stir.\n\n\"Five more minutes,\" she mumbled into my breast.\n\nBefore I could get a handle on the situation, Mr. Lockwood opened the door slightly to peek in. We were still modestly covered by the sheets, but by our bare shoulders, and Abigail's exposed back, it was clear that we weren't wearing much clothing, if any.\n\n\"Sorry!\" he said, averting his eyes before closing the door a crack. \"We...uhhh...we should get going soon. It's almost noon,\" he finished, a little embarrassed.\n\nHell, he was embarrassed? I just got walked in on, by my best friend's dad, cuddled up all sexy and naked-like with his daughter, and she had my cock in her hand! Sure, he didn't know that last part, but I sure did.\n\n\"Abigail!\" I said, shaking her and trying to extricate my cock from her grasp. The harder I tried to pull her hand away, the more firm her grip became causing me to moan. \"Abigail, you need to wake up!\" I gasped. I was becoming desperate. As much as my body begged for release, the last thing I wanted was for Abigail to wake up covered in my cum.\n\n\"I just want to sleep!\" she whined, opening her eyes a little as she looked up at me. She stared for a few moments, confused by the panicked expression on my face, before she realized where her hand was. \"Oh God!\" she laughed, pulling her hand from my cock and rolling onto her back laughing.\n\nAs her hand left me, I breathed a sigh of painful relief. I was thankful she found the whole situation funny instead of creepy, and for releasing me before I plastered both of us in my semen.\n\n\"Our car is downstairs,\" Mr. Lockwood called through the door.\n\n\"Oh shit!\" Abigail said, hearing her father's voice for the first time. Realizing she was naked, she rolled out of bed, but misjudged the distance and shrieked as she tumbled to the floor.\n\n\"You girls all right in there?\" Mr. Lockwood asked, sounding worried.\n\n\"We're fine!\" Abigail called back, laughing as she climbed to her feet looking for her clothes. \"Lexi is being a klutz!\"\n\n\"Am not!\" I yelled, throwing a pillow at her and causing more giggles.\n\nTaking my cue from Abigail, I tucked my erection back into my panties and slipped out of bed to find my dress. It only took moments for us to get dressed, but Abigail did complain about the few wrinkles that now marred the fabric from spending the night on the floor. Mine was no better, but I was sure we wouldn't be wearing them for long.\n\nAs Abigail ran her fingers through her hair, trying to tame it as best she could, I found my heels. There was a little gift bag on one of the dressers, with expensive soaps and lotions, that I used to carry my shoes and money. Making sure I had all of my things, I hitched up my dress with my free hand to keep it off the floor, and Abigail and I exited our room.\n\n\"What did you two get up to last night?\" Mr. Lockwood said, greeting us.\n\nAbigail and I both blushed, she might not have known her father saw us naked together, but I was sure she hadn't forgot about my cock in her hand just yet. I knew I hadn't.\n\n\"I heard you guys coming back in some time after 2am,\" he said smiling. \"You didn't lose all the money you won, did you?\" he joked with a smile.\n\n\"No, we still have our money,\" Abigail assured him, realizing we hadn't been as sneaky as she thought last night. I was relieved that he wasn't referring to our state of undress when he peeked in.\n\n\"That's good to hear,\" he said, placing an arm around his daughter and kissing her on the top of her head. \"I'm glad you both had fun last night. I would love to stay here longer,\" he said sighing, \"but I have a flight to New Zealand in two hours.\"\n\n\"It's all right,\" Abigail said, hugging her father. \"I'm just glad I got to see you!\"\n\n\"Me too, Kiddo,\" he said. \"Now if we have everything, I think it's time I dropped you back at your dorm before our limo turns into a pumpkin.\"\n\nAbigail and I followed her dad down to the limo, both of us barefoot, not wanting to risk heels this soon after waking up. The longer we walked, the softer my erection became and the more prominent the slight throbbing in my head felt. We had definitely let things get a little out of hand on the drinking front.\n\nThe ride back to our dorm felt a little awkward for me. Abigail sat between George and I, talking about how much she enjoyed his visit, while I tried to figure out what was going on. My mind wandered for a moment, and before I knew it my cock was growing in my panties again. I couldn't wait to get to our dorm and find a quiet place to furiously masturbate.\n\n\"It was a real pleasure to meet you, Lexi,\" Mr. Lockwood said, taking my hand as we stood outside Evens Hall.\n\n\"It was wonderful meeting you to...George,\" I said, still feeling slightly uncomfortable calling him by his first name.\n\n\"I can't tell you how glad I am that my daughter has friends like you and Kennedy here looking out for her,\" Mr. Lockwood said. \"Maybe next time I come out I'll be able to meet her as well.\"\n\n\"I'm sure she would love that,\" Abigail said.\n\n\"All right Sweety, it's time for me to go,\" he said, turning to hug his daughter. \"I'll see you back home for Christmas in a few weeks.\"\n\n\"I love you Daddy!\" she said into his chest.\n\n\"I love you too!\" he replied, giving a farewell wave before he stepped back into the limo and it pulled away.\n\nAbigail and I watched from the sidewalk in front of Evens Hall as the limo disappeared around the corner before hiking up our dresses and making our way upstairs. It was still eerie how quiet it was with everyone gone. At any hour you could usually hear girls laughing, or some ruckus or another. With everyone gone, the only sound was from our bare feet on the carpet runners in the halls. As soon as we made it into our room Abigail collapsed onto her bed staring at the ceiling.\n\n\"I'm still exhausted!\" she exclaimed. \"I think we drank too much last night.\"\n\n\"Well you're the one to blame for that,\" I said as I put my heels in my closet.\n\nI was still in desperate need of that release, so I quickly slipped out of my dress, carefully laying it out on my bed before throwing on a t-shirt and grabbing my towel. Abigail looked like she was already going back to sleep, and I could feel my favorite shower stall calling my name.\n\nI stripped down the moment the stall door closed, and I turned on the water. Not even waiting for the water to warm, I began to stroke myself. I was already so close to cumming. I leaned my back against the tiled wall as I began to feel tingling bolts of electricity shoot out through my body from my loins. My stroking became faster, and before long, my muscles tensed as I fired rope after rope of cum, painting the opposite wall.\n\nBreathing heavily, I moved under the spray and sat down against the wall, letting the soothing water wash over me. The steam began to rise, and the warmth seemed to ease the dull throbbing in my head. When I finally returned to my room, Abigail was fast asleep on top of her covers, still in her dress. I downed a few aspirin for what was left of my headache, and shedding my towel, crawled into my bed for a nap as well.\n\n*** *** ***\n\nI woke as evening was setting in. The orangish purple glow of the Arizona sunset peeked through the curtains as I slipped from my sheets. Abigail was no longer in her bed and I had the room to myself. I quickly got dressed, still naked from my earlier shower, and listening to the growls from my stomach I went in search of Abigail to see if she wanted to get some dinner. I found her up and dressed, sitting on the couch watching the television.\n\n\"Are you hungry?\" I asked over her shoulder.\n\n\"Starving! I haven't eaten all day,\" she said, getting up. \"I was just thinking about kicking you out of bed to go find some food.\"\n\nAfter we grabbed some dinner at Danny's, we decided to get some coffee and sit outside our favorite cafe. Still being the weekend holiday in a small college town, there weren't very many people there. We both plopped down on one of the couches by the outdoor fireplace and sipped on our mocha lattes while we chatted.\n\n\"Have you thought about what you're going to spend all that money on?\" Abigail asked.\n\n\"Not really,\" I sighed. I really hadn't. It felt strange having so much money.\n\n\"Really?\" she asked, pulling her leg up on the couch and turning to me. \"You haven't thought of a single thing you want to buy?\"\n\n\"Maybe some more clothes,\" I mused. \"Or a new set of tires for my car.\"\n\n\"Tires!\" she laughed. \"Please! You win all that money and all you can think about is tires?\"\n\n\"What would you buy?\" I asked defensively.\n\n\"I don't know,\" she mused. \"I...\" all of a sudden, she got a really pensive look on her face. \"I don't really know. I pretty much have everything I want right now.\"",
        "\"I feel about the same way,\" I said. \"But I guess if I think of something then I'll be able to get it.\"\n\nThe warmth from the fire felt nice as it battered back the chill from the night air. After Abigail's words, I couldn't help trying to think of something to spend my money on. Try as I might though, I kept coming up empty. I liked where I was, and what I had. I guess the only thing I could think of spending it on would be doing something with my friends.\n\nSpeaking of friends, my phone chirped, signaling a message. It was Danny again. I had begun slowly distancing our relationship over the last week or so, saying that I was busy with school or going back home to see family for the holidays. I had gotten over my phobia of being attracted to guys, thanks to Kennedy, but my phobia of him finding out about me and taking it badly was still alive and kicking.\n\n\"Is that Danny again?\" Abigail asked, leaning over to catch the screen of my phone. \"You really need to do something about that.\"\n\n\"I am doing something,\" I said swiping the screen to dismiss the message.\n\n\"If you're so worried about it, why don't you just let him down easy?\" Abigail asked, brushing a strand of hair out of her face. \"Tell him 'it's not him, it's you.' I hear they like that,\" she smiled.\n\n\"I don't know,\" I sighed. \"I like him. He's nice, and he makes me feel good.\"\n\n\"Exactly where does he make you feel good?\" Abigail smirked, running her hand along my thigh jokingly.\n\n\"You know what I mean,\" I shot back. \"I don't mean sexually. He just makes me feel nice.\"\n\n\"You could always just say screw it, and tell him, consequences be damned,\" Abigail offered.\n\n\"I don't know if he makes me feel that good!\" I laughed.\n\n\"Well, if I were him,\" Abigail paused, \"I wouldn't have a problem with you.\"\n\nHer hand was still on my thigh, slowly rubbing my leg through my jeans. Her eyes held mine and she wore the same blank like expression from last night in our hotel room. There was something behind her eyes that I couldn't quite describe. One moment it seemed like apprehension, and the next anticipation. She bit her lip lightly and slowly leaned forward. Her eyes never left mine as she inched her way closer. Just before her lips touched mine, her eyes closed, and her lips parted.\n\nUncontrolled, my hand came up to cup her cheek. My lips parted for hers, feeling her warm breath mix with my own as our tongues met. Abigail awkwardly crawled into my lap, pressing herself into me as she straddled my waist. Her fingers ran through my hair, gripping my scalp as she kissed me.\n\nIt was a slow, sensual kiss that took my breath away. The warmth of her against me felt wonderful in the chilly night air, and I couldn't help but pull her body tighter against mine. Her soft lips and delicate tongue played with mine, and our bodies began to rock together. I could feel a fire rising up between us, and I felt like one of those glowing embers being swept up in a breeze.\n\n\"We have to stop,\" Abigail gasped, pulling away. My heart fell a little until she added, \"Not here,\" before getting up off my lap and pulling me to my feet.\n\nI followed her eagerly back to her car, and Abigail drove us back to Evens Hall. The air between us seemed electrified. With the heightened state of arousal and the silent car ride back, it felt somewhat awkward. I could only hope at what was going to happen, and with how nervous Abigail seemed to be, I didn't want to break the silence to ask.\n\nAs soon as she parked the car, Abigail quickly jumped out and I had to jog slightly just to catch up to her. Once we reached our room, Abigail pulled me back into her, planting another kiss on me that curled my toes.\n\n\"I'm a little nervous,\" she admitted shyly, breaking our kiss. Her eyes were glued to her feet, unable to meet mine.\n\nI held her chin in my hand and tilted her head up until she was looking at me again. I could feel her whole body trembling in front of me.\n\n\"It's okay,\" I said smiling kindly as I held her beautiful brown eyes with mine.\n\n\"I've been wanting to do this for so long,\" she said nervously. \"Not with you specifically...not that I don't want to...with you...I really want to. I wanted to say something last night, but even with all that alcohol I couldn't summon the courage,\" she rambled.\n\nI found it adorable how she became when she was nervous or excited like this. To stop her endless flow of words, I kissed her, and the world around us faded away as she melted into my arms.\n\nAbigail's body was still trembling against mine with excitement. Her hands began to roam over my body first, eventually cupping my perky ass in my tight jeans. Knowing that she really wanted this, I let myself feel every inch of her that I had been dying to touch for these past months. I let my fingers caress the sides of her breasts through her shirt as I let them trail down to her hips and around to her ass.\n\nGod, I hate jeans! Came a random thought. I loved how they clung to my skin and showed off my legs and ass, but unlike dresses or skirts, there was no forgiveness for an erection. I was so painfully hard, and the thick material left my cock nowhere to go.\n\n \n\nI desperately wanted to free myself, but this was Abigail's first time, and I wanted her to set the pace. Thankfully she didn't make me suffer long, because I felt her fingers fumbling at the button to my jeans. As she tried and failed to unfasten them, her hands became more frantic. After that first button was undone, we became an awkward flurry of hands and clothes until we were both standing in front of each other in our panties.\n\nOur bodies immediately pressed back together, our breasts mashing into each other's, and my cock pressed into her hip. Feeling this, Abigail pulled back sharply and looked up at me. With a small smile, she nervously placed her hand over my cock and resumed kissing me.\n\nHer hand was still for a moment, but the more we kissed, the more she relaxed into it. Soon, she was gently squeezing my shaft and tracing her fingers along my length through my panties. Her touch felt electric, sending jolts through my loins like a live wire.\n\nI let my hands roam across Abigail's silky skin, feeling her muscles clench as her body undulated against mine. My hands moved lower, over the small of her back. Once they passed the thin strip of her thong her body clenched, and her grip on my cock tightened. Her ass felt wonderful in my hands and she moaned into my lips as I squeezed it.\n\nHer kiss became more forceful, like a need, a hunger fueled by her desire. Her fingertips dipped into my panties to wrap around my shaft. They felt like fire as she tightly grasped my throbbing shaft causing me to moan. As soon as she held my bare flesh in her hand, something came over her. Her tongue continued to dance with mine as she pulled my panties down over my ass, sliding them past my thighs until they fell to my feet.\n\n\"Now!\" Abigail said urgently, breaking our kiss. She took my hand leading me to the bed. When the back of her legs met the mattress, she sat down and scooted her way back, up the bed. I almost couldn't believe this was happening. She hooked her thumbs into her panties, and raising her ass, slipped them down before kicking them to the floor.\n\nI almost didn't recognize this Abigail until she blushed and shied away from my gaze. It didn't last long though. She seemed to regain her resolve, looking up into my eyes before smiling nervously and nodding her head.\n\nThis was it.\n\nI climbed onto the bed between her thighs and brought my mouth to hers. I could feel her nervousness in her touch. Her body was hesitant, and her lips quivered against mine. As we kissed, our bodies gently rocked together causing my cock to brush gently across her pelvis.\n\nA gentle brush turned into a grind as I felt the wetness of her pussy begin to coat the underside of my shaft. I eased more of my weight onto her, pressing my cock between us, letting it rub along her soaking slit and tickling her clit. At this welcome sensation she pressed harder into me, losing her nerves to the pleasure, and grinding her body against mine.\n\nI so desperately wanted to put it in and fuck her beautiful body within an inch of her life, but this was her first time. I needed to do this right, for her. I continued to kiss her supple lips as I took longer and longer strokes along her dripping pussy, waiting for the right moment.\n\n\"Oh Lexi!\" she moan against my lips. \"Please!\"\n\nI let myself slide a little bit farther back, allowing my swollen cock to kiss the entrance of her threshold. The overwhelming heat of her desire was sending goosebumps across my skin. I pulled away from our kiss and held her cheek in my hand. Our eyes locked, and I felt connected to her.\n\nSlowly, I pressed forward.\n\nThe sensation was like nothing I had ever felt before. The pressure was more intense than I thought could be possible. Abigail's eyes never left mine, but her mouth was held open in a silent moan as I pushed farther and farther into her depths. By the time our pelvises touched, it felt as if I was held in a giant liquid-velvet vice, trying to strangle the life from my erection. The more it pressed around my cock, the more blood surged, causing me to painfully swell and throb inside of her.\n\nAbigail's breathing was coming in gasps and gulps as she adjusted to my size. I didn't know if it was voluntary or intentional, but her pussy was squeezing my cock at sporadic intervals, tempting me to lose all control.\n\nI almost thought Abigail would never be ready to go on, until she pulled my lips to hers, slipping her tongue into my mouth as she began to slowly grind her pussy against me.\n\nTaking that as my sign, I began to slowly make love to her. The natural rhythm we found was slow and sensual. Our bodies slid against each other as I made full, careful strokes into her, but the longer we went, the harder her hips bucked up against my thrusts.\n\nAbigail's heavy panting became quiet moans in the darkness. Her hands slipped down my back to inelegantly grab my ass, forcing me to quicken my pace as she pulled me into her. I didn't want to disappoint Abigail on her first time, but the heat and friction, not to mention the unbelievable pressure from her pussy, were driving me closer to the edge.\n\n\"Abby,\" I said between breaths. \"I'm close!\" I whispered.\n\n\"Just...Just...Just,\" she panted, as she forced me to slam into her harder. \"Oh God!\" she moaned louder, digging her nails into my back like claws.\n\nThe pain amplified my pleasure and I could no longer hold back. The floodgates opened and I could feel my cum surging through my cock.\n\n\"OH FUCK!\" Abigail cursed, feeling me cum inside of her.\n\nAbigail's entire body seized in bliss. Her legs held me as deep inside of her as I could go, and her arms wrapped tightly around me. Her entire body convulsed as waves of pleasure coursed through her causing her muscles to contract, and her pussy to milk my cock of the last few drops it could.\n\nAbigail clung to me until her orgasm subsided, letting her strained muscles collapse from exertion. Seeing the spent look on her face, with her eyes closed in a blissful surrender, I kissed her forehead and slid from between her legs to lay beside her with my head on her breast.\n\n\"Wow!\" Abigail breathed. \"I can't believe I waited this long to do that. Is it always this good?\"\n\n\"I'd like to think I brought a little something extra to the experience,\" I said, turning my head slightly to kiss the bottom of her breast.\n\n\"Wow!\" she sighed again.\n\nIt was quiet for a time while we both caught our breath. I had the feeling Abigail was still processing this experience and I didn't want to interrupt her thoughts. Besides, I had my own. I was glad that she enjoyed her first time, and I was thrilled to have been the one to give it to her. One thing that was on my mind though was, had she chosen me because of some feelings she had for me, or was I just a convenient option? I guess I would have been okay with either scenario, but I kind of needed to know.\n\n\"Abby?\" I asked.\n\n\"Yeah?\" she replied.\n\n\"Why did you want to sleep with me?\"\n\n\"What do you mean?\" she asked.\n\n\"I mean, why did you choose me out of all the people that could have been your first?\" I asked.\n\n\"Because you're my best friend, dummy!\" she said giving my bottom a pinch. \"Who else would I want to share this with? Some random guy who doesn't even care about me? You get added points though, because you're beautiful.\"\n\n\"Thank you,\" I said, blushing into her chest at hearing her call me beautiful.\n\nThere was more I wanted to ask about, like Kennedy. What would happen when she came back? Was this a one-time thing? Seeing how happy Abigail was, I couldn't get myself to bring any of this up. She seemed as if she was on a cloud right now, and not knowing where these conversations might go, I didn't want to risk spoiling her good mood. Instead, I let my mind fill itself with thoughts of where I was, and the amazing thing that had just happened.\n\nWith my head resting on Abigail's breast, I listened to her steady breathing. Her fingers ran gently through my hair, and my head, rising and falling with her breath became hypnotic. Completely unaware, my tired body slipped into a deep, peaceful sleep.\n\n*** *** ***\n\nIt felt amazing waking up next to Abigail. We must have slept until early afternoon. I was spooned behind her, holding her in my arms with one hand resting gently on a perfect breast. It was a little disorienting waking up on the wrong side of our bedroom, but between Abigail's soft sheets, and her warm silky skin against mine, it was a wonderful way to start the morning. We spent over an hour snuggled together, both of us wide awake, before either of us said a word.\n\n\"Ummm! I could stay like this forever,\" Abigail said in her sleepy voice as she pulled my arm tighter around her.\n\n\"Me too!\" I mused happily.\n\nIt started from nothing. Abigail pulled my fingers to her lips, softly kissing each one delicately before moving on to the next. I could feel the temperature rising between us, trapped by her covers, and the soft sensual feeling of her lips on my skin woke my star player. Abigail began to press her beautiful bottom into me, coaxing me further, and from there it was downhill.\n\nShe took my hand from her mouth, guiding me down her bare chest and over her smooth tummy until I was right over her moist lips. Her legs parted slightly, giving her room to guide my hand, and she let out a sigh, arching her back into me as my fingers touched her. I began to kiss her neck as I toyed with her clit. As her breathing quickened, she turned her head to me, engulfing my lips with hers.\n\nImpatient, Abigail removed her hand from atop the one I had working her clit and reached between us for my hard shaft. Eager to feel me inside of her, she parted her legs even more and positioned the head of my cock between her thighs, letting my swollen head rest against her waiting pussy. Unable to even think about teasing her, I pressed forth letting her swallow me inch by inch. Her morning voice cracked as she gasped at my intrusion. Sounds of her pleasure filled my ears, and I continued to rub her swollen clit as I slowly thrust in and out of her.\n\nOur pace gradually gained speed as we both sought release. Her cute little ass rocked onto my cock perfectly, drawing gasps from me as her tight pussy stroked my shaft. Our breathing had become ragged, and our lips barely touched, as we sucked in air through open mouths.\n\nI loved how eager she had become to have my cock inside of her, and I couldn't get enough of seeing her sweet innocent face contorted in this vision of absolute carnal pleasure. The way her warm smooth body moved against mine, the way she moaned into my lips, it was pure bliss. Even with all this pleasure bombarding my senses, in this moment, I felt like I could make love to her like this for hours.\n\nOur pace began to quicken, and I could feel Abigail's nails dig into my hip where she held me, signaling that she was getting close. She was really working her ass into my cock now and I began to drive into her harder. I opened my eyes in anticipation of her climax, wanting to watch the look of pure ecstasy on her face when she came for me.\n\n\"I'm back, Bitches!\" Kennedy said, throwing the door open only to stop dead in her tracks with her mouth hanging open. \"Ho-ly-shit!\""
    ],
    "authorname": "Son_of_Battles",
    "tags": [
        "crossdressing",
        "all girl college",
        "transexual",
        "straight",
        "teen",
        "sexual tension",
        "first time",
        "sensual",
        "awkward moments"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/womens-studies-ch-06"
}