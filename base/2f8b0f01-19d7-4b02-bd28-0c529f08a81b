{
    "title": "Hooking the Hockey Player Ch. 07",
    "pages": [
        "We've come to the end of Jake and Owen's story; however, because I am self-indulgent there will be the first chapter as re-told by Owen so that people can get a better handle on why Owen does what he does and his general perspective. I have fudged some hockey facts to make the narrative smoother\u2014for any hockey fans: I do apologize. Thank you for sticking through an insomniatic writing spree. More writing to come, Artie.\n\n*\n\nI used to maintain that winters in Buffalo were the worst. But after two years of winters in Boston, I was ready to change my tune. Sure, it snowed more in Buffalo but the always present wind combined with the narrow, hilly streets made commuting a nightmare in Boston. Sure the subway system should have been the panacea of transportation except that when it snowed you can't get anywhere in the God-forsaken city. The T, our much maligned subway system, got icy and didn't work because apparently, despite it snowing every fucking year, no one could predict the ice so it wasn't going to get fixed until Spring when all the ice thaws anyway.\n\nFrom October until March I was bundled from tip of toe to my head an immense balaclava, that's why winters in Boston were the worst. I would be getting pictures and videos of Owen when he was wearing shorts or maybe, at most, a light jacket in the depths of those winter months. I liked when he had to come to the East Coast for a travel game and be shocked again by how cold it was.\n\nIt doesn't get cold in Arizona. Sometimes when I'm sure gangrene is about to set in due to the frigid water than got in through my boots I would joke with Owen that I was considering transferring to ASU. Over FaceTime a small sad smile would emerge as he would remind me of how much I was enjoying Emerson and far more importantly the next time we would be able to see each other. He knew me, it wasn't really the cold that depressed me about Boston; it was how far away Owen was.\n\nWe had known that we wouldn't be in the same city before he had even been drafted. Owen had encouraged me to go to a school that I actually wanted to go to and not a school that might be in the city that he might play for. At the end of the day, Owen reasoned, if he wasn't in that city I was just at a school I hated for nothing. I did make the decision to be in a city with a team, that way Owen would at least have trips already planned to see me.\n\nI loved Emerson; the LGBTQ club was basically the entire school and Boston was always alive with people\u2014mostly drunken college-aged people. I loved that everyone was so creative, people had majors in Comedic Arts there. There weren't math majors or engineers but intelligence wasn't just in STEM. I didn't go such an avant-garde choice of major\u2014no preforming arts\u2014just journalism.\n\nCollege was so different from high school; I was included, even popular in my classes and dorm. Owen said I looked happier than ever, but cautiously asked about my friends... Were any of the hot? I always laughed it off asking if he wanted their numbers. He had no reason to worry. No one came close to catching my eye, not a single one of the meticulously groomed, charismatic, talented performers had anything on Owen. All my attention was on him: on TV, on the various fan pages where Owen had become the object of fantasies, and on broad headlines proclaiming him as hockey's newest star.\n\nI couldn't fault him for being slightly jealous; I sure was. How could I not be jealous, even jealous of his friends and teammates for getting to be around him when I was so far away? Every day there would be new photos of him with fans, faces pressed together with wide smiles and arms thrown around shoulders. Puck bunnies in skimpy outfits kissing him on the cheek, while he grinned wryly. Of course I wasn't worried, not really. It was just hard to see him having affection lavished on him and not getting to lavish my own. And in my defense I wasn't awarded the Calder Trophy as well as Phoenix's sexiest athlete\u2014both coming with a large amount of fans. Owen had been hounded by fans since his draft day.\n\nThe day of the draft, Owen was constantly in interviews all coordinated by Owen's new agent and publicist: Calen Edwards. Calen had coached Owen on everything: every scripted word and correct motion. Calen had really done a massive overhaul on Owen. Though I had thought he looked great before: now Owen wore impeccably made clothing and designer watches. Through Calen's direction, Owen gave the same charming answers and wore a suit that I was sure was more expensive than the rest of his clothing combined. He didn't even have to buy it\u2014a gift from Armani.\n\nOf course, there was tension in the Holt camp about who would be allowed to come with him to the draft and by that I mean: would I be allowed to come? Owen had shot down his dad and Calen's concerns; he was set on me coming with him.\n\nI would have to fly directly to Boston afterward to move into my freshman dorm: worlds apart; there was no chance Owen would be a Bruin. So in a far less expensive suit, I got to sit with Owen's dad as we watched Owen get drafted into the NHL. Owen's father and I were nervous wrecks, both wringing our hands and speaking tersely to each other as the lights began to dim and the speeches began.\n\nOwen sat next to us cool, unshakable; I saw cameras turn to him every few moments as the first announcement was called. Calen was smiling and schmoozing with the other agents. He was also making grand overtures toward the other men getting drafted, paying much closer attention to those who were still without representation. I didn't care if Calen had more clients as long as he took care of Owen well.\n\nMy breath caught as the lights refocused on the stage. I saw everyone tense a little it was time for the draft to begin. We were surrounded by a sea of other players and families. I saw mothers clutch hands and the muscles of many a draftee tense. With a great flourish and with the On the Clock timer barely begun, the call came in from the Coyotes table, who had won the draft lottery and by rights: first pick.\n\nTime stood still as it was announced, \"The Arizona Coyotes are proud to announce their first pick: Owen Holt.\"\n\nI think I died: just briefly but I really do think so. Our section, smaller than most of the others but still full of so much love, all stood as Owen beamed at the cameras. He shook hands with Calen before giving him a firm manly clap on the back. He turned and hugged his father. I heard his father choke back a sob as he whispered how proud he was. Then Owen turned to me and wrapped his arms around me. I clutched at his back as I tried to put all of the hope and pride I felt into a perfunctory hug. He was mic'ed so he couldn't say anything. He didn't have to; I could see his effervescent joy.\n\nThe crowd roared as he ascended the stairs to the stage. Every camera attuned to his face, bloggers' fingers flying across keys to deliver the news. Owen had overtaken all competitors. It was an upset to be sure. Owen had been neck and neck with the man who would go second but most polls put him slightly behind only because of lack of experience. The other player had been playing in the OHL for a year. Owen proved all the doubters wrong.\n\nI had never seen Owen smile so widely, as he shrugged off his ridiculously expensive suit jacket and donned the crimson and cream Coyotes jersey. Though I'm sure he would deny it, Owen's dad cried: manly tears but definitely tears. I didn't cry. No. My cheeks burned from my uncontrollable grin. I'm sure I lost my voice with all of my cheering. I didn't consider until I saw him get a call from Doan, the captain of the Coyotes, just how far away he would be. In that moment, I didn't care. This was it: he did it. He signed his rookie contract, the maximum money offered and he was officially a part of it all.\n\nHe signed autographs for screaming tow-headed kids and for equally excited full-grown adults. He was roped into pictures and in his immediate post-draft interview he was asked, \"Owen, how are you feeling right now after being picked first?\"\n\nOwen, wearing a Coyotes hat which pushed his wavy hair out, answered with gruff emotion in his voice, \"I'm so grateful to the Coyotes organization for picking me. This is the most surreal moment of my life, the best moment of my life and I'm so thankful to be sharing this day with the people I love the most. I can't even say how much this day means to me.\"\n\nI wasn't alone in having my heart melt. I heard one of the player's little sister whisper, none too quietly, to her mother that Owen was \"a total hottie.\" I couldn't agree more.\n\nOwen was whisked away to do more interviews as I was plied with appetizers and, from Calen, a little bit of champagne. He sailed through interviews right and left, getting the opportunity to speak with the GM of the Coyotes as well as the head coach. All the while, players were finding out their fates, each time they would come down the tunnel and be met by the guys already drafted. For now, there were no hard feelings, all celebratory handshakes and smiles. In a few months, they would begin to take the ice against each other and the time for camaraderie would be gone.\n\nOwen was in the highest demand, constantly being corralled into interviews. He had done the rotation on media day and just before the draft, but now he was being hounded into speaking with anyone and everyone. When at last it seemed like he would be free to relax, out of the melee Megan Pally appeared. Though he kept up his bright face, I could sense his mood drop. I doubt anything could have put a serious blight on the day, but Megan was always a challenge.\n\nMegan was over the moon. Her tight blue dress barely contained her areolas as she, purely in a congratulatory fashion I'm sure, hugged Owen tightly. I glanced around the other assembled draft members, they had glazed looks on their faces; seems like Ms. Pally had already made the rounds.\n\nOwen smiled and answered all of her questions with an easy grace that while somewhat genuine had been honed by Calen over the past several months. At the conclusion of their interview I heard her comment, \"I knew you were going to be big here; I just didn't know how big.\" I almost gagged.\n\nOwen was better at hiding his emotions, \"I feel so lucky.\"\n\n\"It's the fans who feel lucky, you should be reading what they are writing on Twitter\u2014\"\n\n\"I hope to make them proud\u2014\"\n\nMegan cut him off, \"Especially the women\u2014the women of Arizona are dying to get you out there. I bet they will be ready to welcome you when you arrive.\"\n\nOwen chuckled, steel starting to form in his eyes, \"I'm grateful to the fans but I'm really going to be focusing on hockey for a while. I have to prove that the choice to take me first was a good one.\" With that Owen turned and walked toward me; we couldn't touch here\u2014not in any romantic way at least. But I could feel his body heat as he leaned against the wall next to me.\n\nFor a moment we just watched the melee of enthusiastic supporters, reporters and athletes converging. \"I'm so happy for you Owen,\" I murmured, not looking at him my voice deepening with unexpressed emotion.\n\n\"Would it be selfish for me to ask you to not fly out tomorrow?\" Owen asked lowly.\n\nI turned to him, to see his eyes slightly watery. This idiot, I thought, here he was being sad when he had just signed one of the biggest rookie contracts in NHL history after being drafted first. Only I was the bigger idiot, \"Only as selfish as I am being by wanting to stay with you.\"\n\nOwen nodded jerkily as if trying to decide not to try to get me to move to Arizona with him\u2014it wouldn't have been very hard. Trying to distract him, \"Don't you think it's strange the Sabres didn't pick Barrant? I mean it's good for the Oilers but just unexpected you know. I would say Barrant has better hands than Campbell, maybe not as fast but those handling skills\u2014\"\n\n\"Jake.\" He sighed cutting off my rambling, \"Today has been the best day of my life, but I'm ready to go now. Tomorrow might be the worst day of my life but I want tonight to be everything.\"\n\nMy mouth floundered open, \"You can't leave; Calen will kill you. I'm sure there are about a million more people you're supposed to talk to and then parties and that kinda stuff.\"\n\n\"I'll deal with that stuff tomorrow when you aren't here. Can we please go?\" Owen looked so sincere, I nodded my assent. He tried to whisk me through the stadium but it was slow going. He shook hands and signed autographs and eventually he found Calen's assistant, a small mousy brunette who looked at best frazzled amongst all the excitement. Owen pushed his jersey and hat into her unwillingly receptive hands and called over his shoulder to her, \"Tell Calen I'll call him tomorrow.\"\n\nAs I tried to keep pace with Owen's rapid steps I heard her melodic voice filter through, \"Wait. You can't\u2014\", her voice was drowned out by the cacophony in the stadium.\n\nOh no little secretary, he could.\n\nCalen had arranged for a limo to be on stand by for most the night. I'm sure that Calen hadn't anticipated Owen ducking out and not using the limo to be ferried to the various after events. Owen got the driver to meet us at the side door to minimize the chance of us being followed. Our sense of decorum ended there. Owen didn't care if we were caught; what could they really do now?\n\nI'd like to say we were civilized and didn't make out in the back of the limo as soon as the door closed\u2014but I can't. We didn't even roll up the partition, the driver had to do it. I could only hope that Calen had paid him well for his discretion\u2014though I'm sure Calen hadn't thought this was going to be a possibility.\n\nThe driver dropped us at the back of the hotel which was good because Owen had lost his shirt to the abyss of the limo floor and my pants were lewdly unzipped. Of course, we could have been found out right then but we were young and desperately in love: so it just didn't matter.\n\nWe were a blur of movement, my hands roaming over his chest and down his stomach: flexing as I found his nipples with my fingers. His head fell back against the elevator as I ravished his neck\u2014though I was careful to not mark his neck or jaw. Calen would have hired professional make-up artists if need be but he would have been pissed that his star was marked with visible hickeys. The rest of his body didn't remain so unadorned.\n\nHe was mine and I intended to make that known at least to me and him. As my hands caressed his cock through his slacks my lips found the skin just above his nipple. I sucked until color bloomed over his heart, leaving my indelible mark on him.\n\nAs the elevator doors opened onto our floor Owen claimed my lips in fierce, fiery kiss. We battled for the top as our need to prove our love overcame us. We were almost violent. Owen pushed me up against the door still in the hallway. Never breaking our heated kiss Owen ripped my shirt off, buttons ricocheting.\n\nI wedged my hand into his fitted pants, fingers curling around his cock while my other hand reached into his back pocket to find the hotel key so that we didn't fuck in the middle of the hallway. If I hadn't unlocked the door right then, we probably would have consequences be damned.\n\nJabbing the key at the lock several times, eventually I got the door open and I backed into the room leading Owen by my hold on his cock, still obscured by his pants. I was through with them being in the way, unbuttoning them and shoving them down along with his boxer-briefs. I hadn't thought it was possible to think Owen was sexier but knowing that he was now the poster child for the NHL had me dispense with preliminaries and suck him down my throat in one long sweeping motion. I heard a hoarse, \"fuck\" from above me and turned my eyes up at him.\n\nHe tried to gaze at me tenderly as I laved the base of his cock with my tongue and hummed around his length but the fierce hungry expression dominated.\n\n\"How is it that you can look innocent with your lips around my dick?\" I might have been giving him doe eyes but I was anything but innocent. Proving this, I sucked hard on the tip and brought my fingers up to his balls stroking the pouch and that sensitive line. Owen bucked into my mouth slightly groaning his pleasure. I had just found the perfect rhythm with pressure and wet heat when Owen pulled me off his cock eyes flashing.\n\n\"I'm not cumming in your mouth tonight.\" His fingers gripped my biceps as he pulled me to my feet and laid claim on my mouth. I pressed my body against his, my shirt still hanging from my shoulders. His cock jutted into my stomach and like a moth to a flame my hand came up to encircle it.\n\nOwen abruptly pushed me away. \"Get naked Jake.\" Fuck me, I thought and then immediately complied, tossing the mangled shirt away and shucking my shoes. Owen stroked himself as he watched me undress. I was shaking with anticipation as he looked on with lidded eyes as my underwear hit the floor.\n\nFeeling the weight of his arousal and wanting to egg him on, I turned and crawled slowly onto the bed, pushing my ass up and out. I rested my head on my hands and wriggled my ass at Owen, tempted to look behind me. Owen didn't resist the bait very long; I felt a slippery digit press against me. His breath was hot against my neck as he settled over me, his hard hairy body finding a way to sit against me perfectly as he lined his cock up with my ass.\n\n\"I waited all fucking night for this,\" he whispered tenderly, which was so at odds with the forceful breaching of my hole. He shoved in all the way possessing me fully. I moaned as his thick throbbing cock stretched me, my back arching and throwing my head back in ecstasy.\n\nOwen pulled himself up to his knees and grabbed my hips pistoning in and out of my ass. I bore down on him, letting my muscles caress him. He slammed my ass back so that it met his pelvis over and over. Owen and I didn't really do rough. I fucking loved it, my cock was pulsating in time with him. I needed him. I needed this. With every pump Owen found my spot and my cock throbbed with need. My breath came is short spurts as pleasure washed over me.\n\nI was about to come when suddenly Owen pulled out. Whipping my head around, I saw Owen was barely restrained, his cock red and angry with the need to come.\n\nHis muscles flexed and he looked like he was walking a tightrope of sensation.\n\n\"I need you in me,\" Owen gritted out. Owen hadn't bottomed since the first time, the night before I walked out on him. We had talked about it months ago, he was anxious about it happening again. He connected me topping with me leaving him: something that he would do anything to avoid, he told me. I had tried once but he looked panicked then: so sure that it meant I was leaving him. The irony was not lost on me: that's what would happen again. I was leaving tomorrow. How could he ask this of me?\n\nI was stricken, my need to come suddenly curtailed by emotion. I searched his eyes, he looked wary but also aroused, his cock still stood hard. \"Please,\" he whispered, a sob in his plea.\n\nI tugged his face to mine, kissing his perfect mouth. The fire was gone but replaced with the tenderness of me showing him that we were solid. I don't know if he thought that I needed to fuck him but I was going to show him how much I appreciated his gift.\n\nI ran my hand down his back before encouraging him to lay down. I knelt between his outstretched legs kissing him deeply as I ran my hands down his chest, finding the hardness of his muscles out to his pebbly hard nipples. I thumbed them as I made love to his mouth.\n\nI felt something nudge my shoulder, Owen was trying to hand me lube, \"Little impatient?\"\n\nOwen laughed and kissed me hard but when he broke away his face was contorted into a weak smile; \"We don't have that much time.\"\n\nFor a brief moment pain lanced through my body at the thought but then determination coursed; I didn't want him to think about that inevitability anymore.",
        "Taking the lube, I spread it over my fingers and wrapped my hands around both Owen's and my cock. Stroking them together, I quickly was back to fully hard. Keeping his cock in my hand, I slid down so that my lips were level with that perfect space between balls and ass\u2014my favorite term for it would be the notya.\n\nMy tongue found every inch of his skin there, flicking teasing licks on his balls but neglecting his ass which he kept trying to angle up at me. As if I had forgotten it was there. I glanced up and Owen was flushed and was breathing in open-mouthed exaltation. His breathing faltered as my tongue swept around his pucker before kissing it deeply. Alternating between probing and teasing flicking, Owen opened up to me.\n\nMy hand, still slick, ghosted over his opening. First just a little pressure, then more, then the tip of my finger was inside. Owen pulled on my shoulder until I came up to meet him. My finger began to sink into him slowly opening him up as we kissed.\n\nTwo fingers stretched and wiggled around preparing him for me. I was sure Owen could take me but it had been a while for him and I was loath to hurt him. Owen broke our kiss to whisper against my lips, \"Get in me Jake. I need you.\"\n\nI pulled away and though I lined my cock up with his entrance, I whispered, \"We're going at my pace; let me love you.\" I swooped down to reclaim his lips as I pushed inside. I captured his groan at my entrance with a deep kiss.\n\nI went in slowly, dragging my cock up through his sensitive nerve endings. When I was fully seated inside him, I waited. Kissing him until he was breathless and I could feel him pressing his hard cock up into my stomach trying to get some friction. He clenched his muscles, milking my cock and the pressure was too much for me. If he wanted me to move I would but he wasn't going to get a fast fuck. No, I was going to make love to him.\n\nI withdrew just as slowly until just the fat crown remained inside him and then worked my way back in smoothly. Over and over making our bodies come together. I sat up, gazing at Owen his blue eyes hazy with lust, and the angle change made direct contact with his spot. \"Fuuuuu\u2014\", he didn't get the opportunity to finish the epithet. I picked up the pace, still loving but a constant smooth pace leaving him in paroxysms of pleasure. I watched as the flush stole over his skin and his cock purpled with the need to come. With three sharp stabs over his prostate and my hand slipping over his cock, he erupted his pleasure. Ropes of the viscous white cream splattered onto his chest before I could angle his cock up towards my mouth. I caught the end, drinking in his vitality.\n\nHis coming sent me over the edge as his ass clenched and moved, but it was seeing him cum that really did it for me. I sent my hot seed deep into him.\n\nI didn't extricate myself, I just settled onto Owen. I felt his arms come around me as wetness alighted on my cheeks. He held me as the tears leaked out of my eyes. He didn't rush me but eventually I pushed down my sadness.\n\nWe took a shower together, washing each other tenderly, the evidence of our love making swirling down the drain.\n\nI fell asleep in his arms, for the last time in a long, long while.\n\nMy plan to wake up quietly and not disturb Owen while leaving him a note was dashed when I woke to a soft kiss on my forehead. Owen was already fully dressed and had a cup of coffee in his hand as I blearily blinked sleep away. \"What are you doing up?\" I asked gruffly.\n\n\"I was worried I would be groggy and not wake up to see you leave. So I didn't sleep.\"\n\n\"Owen\u2014\" Christ. Calen would kill me if Owen was out of it for the day.\n\n\"Boyfriends take each other to the airport. No way I'm going to miss it,\" he said sadly but with a small smile.\n\nI leaned up to kiss him softly; his lips were wet and soft. I met his gaze; his eyes were red rimmed and watery. \"Thank you,\" I whispered. My heart broke. How could I leave him, someone so thoughtful and lovely?\n\nThe morning silence as I quickly grabbed my things was filled with sorrow and hope. Such sorrow at the thought of separation but hope for the things to come and to eventually be back together. Owen seemed pensive as he hailed a cab my suitcase strangled in his hand and my back pack slung across his back. I only held his hand and the weight of my leaden heart. One would think I was going off to war but the distance from Arizona to Boston seemed like the red sea and there was no Moses in sight.\n\nThe airport was not incredibly busy, a few harried businessmen flew through TSA pre-check and Owen and I just stood in the entry way. My flight got closer and closer, my hand was still in his. Eventually, I would have barely enough time to get through security and get to my gate before take-off; I turned to Owen. His jaw was so tense, the muscle jumping every few moments. He was glaring above my head, his eyes red and raw. I thought I saw a tear track on his cheek; I brushed away the remnant moisture with my free hand resisting the urge to cry myself.\n\n\"You have to go,\" Owen said, not a question but more like he was really coming to terms with that unfortunate fact.\n\nI took his other hand. Anyone could have walked by and took a picture, this was more important than worrying about a secret Owen didn't even want to keep anymore. \"I'll see you when you come up to Boston, and I'm flying down for Thanksgiving and Christmas. I'll come to New York when you're playing up there. It'll be like we're together, we'll text all the time\u2014\"\n\nHe cut me off with a kiss, his lips soft and insistent. I pressed into him our fingers laced together like the teenagers we really were. He smiled against my lips, \"We'll make it work Jake; I know that. But we have to get you on that plane.\" He kissed me again lightly, before removing his hands and lips from me. \"I love you Jake.\"\n\n\"Love you too,\" I floundered for anything to make this less painful, \"Have fun today. I'll be watching your interviews and reading all the articles.\" I didn't know what else to say. This was it, we were really separating.\n\nA last long lingering kiss had our tears mingling, Owen pulled away and weakly chuckled, \"Your parents will kill me if you miss your flight.\" His eyes were red and watery; I knew Calen would personally administer Visine if necessary.\n\nI took my backpack and suitcase from him and stuffed my hands in my pockets, \"It's just a few months, right?\"\n\nOwen tried to grin but it still looked like a grimace, \"You won't even know the difference.\" He waited until I was ushered through security and out of sight, mouthing I love you whenever I had a nanosecond to look back at him.\n\n` We made it work: the whole long distance thing. We texted constantly\u2014well as much as we could. I had classes, and new friends and parties and he had practices, and games, and obligations. My roommate, the one straight man I met at Emerson: Derrick, was pretty cool about leaving the room so Owen and I could Skype. And we did Skype and FaceTime a lot. In the beginning we did really sext or anything but one afternoon I remembered my ploy of sending him pictures of me in a Speedo.\n\nI had toyed with the idea of sending him a nude photo but it took one, less-than-sober night for me to actually do it. It was a classy photo, as tasteful as a nude photo could be. A picture of my cock hard in my hand as I jerked it, over my abs. I had sent it and in my boozy haze mostly forgotten about it until I received a very hoarse phone call which began with the words, \"I opened that in the fucking locker room.\"\n\n\"So you don't want any more?\" I asked, still a little tipsy and pleased to be hearing the sound of my boyfriend's voice\u2014even if it sounded incredulous.\n\nThere was a pause, \"I didn't say that.\"\n\nWe agreed that I would give him some sort of warning so he didn't suddenly have my ass on his screen when anyone could be walking by.\n\nIt worked but going from seeing someone every day to only through a screen was very difficult. Somehow we made it through those first few months of me getting settled into college and him starting to practice and play with the Coyotes.\n\nIt was the middle of October when we saw each other again. The Coyotes and the Bruins were playing each other in Boston. Owen elected to fly up a night early, much to the chagrin of his teammates and coaches. He was due into Logan and I was waiting for him at baggage claim. I wanted to bring a sign with his name declaring how much I had missed him\u2014he was a little too conspicuous for that.\n\nHe had of course sat in first class, a courtesy of the Coyotes to their newest, brightest star even if he was making bizarre requests like flying to a city early. Of course, Owen had told several members of the Coyote's organization exactly why he was flying out early so they kept their nose so far out of his business.\n\nI'd like to say we were sedate and calm when we saw each other. And for a moment we were. I'm sure he was breaking about a million rules for what he was supposed to be wearing as a member of the Coyotes but he was here incognito. Owen didn't have a suitcase under the plane, his hockey stuff would come with the team. So he stepped off the escalator wearing a Twins hat low over his eyes and a backpack slung over his shoulder. To me, this was about as momentous as when Jesus rolled the stone away. He has returned! I spotted him before he found me. I ran up and for a moment all we did was grin at each other.\n\nI wanted so badly to throw my arms around him and show him exactly how much I missed him. Owen jerked his head in a come this way motion. He quickly found a single-stall family restroom and locked us in. His lips descended on mine. After two months, reunited and it felt so fucking good. I whipped off his hat, and his long wavy hair fell sideways across his warm blue eyes.<br> I grabbed it in my fists and held him to me. I felt him lowering my zipper and turning me around. He rustled with his bag for a moment, \"Are you serious you brought lube with you?\" I asked laughing but needing him to use it right then.\n\n\"Well it was under three ounces,\" he pushed into me and I was complete. Fuck I had missed him. Oh yeah we fucked in that restroom. Could anyone really blame us?\n\nAs I straightened my jeans I heard him say, \"I really missed you, not just the sex you know.\"\n\n\"I love you too.\"\n\nOwen didn't play his best against the Bruins, he was a little tired out. He actively broke curfew much to his road roommate's chagrin. My roommate was a darling and fucked off for those two nights.\n\nThe morning he left to continue his trip up to Vancouver, we laid entangled on my bed.\n\n\"This wasn't long enough,\" he murmured his sapphire eyes flashing.\n\n\"I completely agree,\" and I did, I wanted him to stay with me forever. I felt crushed that he had to leave me so soon, especially when I had just gotten him back.\n\nHe sighed, \"I wish you could come to the airport with me.\" I did too but Calen would hate that. There would be the reporters who follow the Coyotes there; me being there would cause a lot of questions to be asked. He sighed again, \"Soon.\"\n\nOwen had wanted the second he entered the draft to come out, or really well before that. Calen was not impressed with either of those options. Calen argued that Owen shouldn't be paying him if he wasn't going to follow Calen's advice. His advice was to wait several seasons, become one of the top players and make sure that no one would doubt his validity.\n\nOwen agreed under duress, acknowledging his need to earn his stripes as a hockey player and how that would ease public opinion. He just didn't get as far into his career as Calen would have liked before doing it.\n\nBeing selected as a rookie to go to the All-Star game is a big deal, like a BIG FUCKING DEAL. Of course Owen was selected: he had been kicking ass. His was the new popular jersey to have and Owen often good-naturedly complained he was going to get carpal tunnel from signing everything from pucks to iPhones to foreheads. He was being ridiculous; he sounded over the moon with all the attention.\n\nOwen asked me one day in January, as my phone was wedged between my ear and my shoulder, half listening to him and half focused on the textbook laid out in front of me. I craved talking to Owen but we had been talking about his meeting with the PT to strengthen his shoulders for what seemed like forever and I had started to tune him out with a quiz the following day. I felt bad but there are only so many exercises I could stand to hear described.\n\nMy attention was brought back to the conversation when Owen cleared his throat loudly. \"Shit, sorry. What were you saying?\" I squeaked as I was startled out of studying.\n\nHe sighed. \"I asked if there isn't any way you can come to the All Star game.\" We had already talked about this, the game was right in the middle of mid-terms and I had projects due all that week and the following one.\n\n\"I wish I could go.\" I whispered feeling contrite about disappointing him. I really did wish I could go. I wished I could be with him and experience the excitement. I wish I could just be with him.\n\nHe was quiet for a moment, \"I do too.\"\n\n\"I'll be there for other ones. You better believe when you're captain I'll be there.\"\n\n\"I'm going to hold you to that.\" It sounded like he was smiling but I knew he wasn't happy that I couldn't go.\n\nI was right about how swamped with mid-terms creeping up on me from all sides I was the week of the festivities. So with a textbook on my lap, I settled myself into the couch to watch the game with Derrick. Though straight Derrick had very little interest in sports so was generally not enthused with the prospect of watching the All Star Game. He was nice enough to see that I didn't want to be alone so he settled in to be supportive.\n\nTo say Owen owned the ice would be an understatement. A frequent criticism of the game is that there is very little defense: Owen really didn't help that. He scored twice and his smile was shown on a screen three stories tall. Derrick even got sucked into the excitement, cheering for Owen.\n\nI had just run to grab some water before the third period was set to begin when Derrick called out, \"Owen's on screen.\"\n\nDerrick knew the basics of Owen and I's relationship especially that it was a secret, but he definitely didn't know that Owen being interviewed by Megan Pally would set my teeth on edge. There she was, getting to be with Owen while I was thousands of miles away.\n\nShe looked great as ever, her long auburn hair gleamed and she looked like she really did care about hockey, instead of just sleeping with the players. She stood way too close to Owen for me to be comfortable. \"So the biggest question on everyone's mind I think is what you're doing after the game. I bet there are a lot of people willing to buy you a drink.\"\n\nOwen smiled his long wavy hair slicked back with sweat, \"I'm not old enough to drink but if someone wants to buy me a water I'd really appreciate it.\"\n\nThere was something just so grating about Megan's laugh, \"I totally forgot how young you are; you are just so mature.\" Owen just smiled blandly. \"Surely tonight is a time to let loose a little bit, interact with your fans.\"\n\n\"This whole weekend has been incredible: I've met so many kind people. It's amazing to see so many people out here enjoying the game.\"\n\n\"Anyone that caught your eye?\"\n\nOwen's eyes narrowed, \"I'm sorry?\" It was like he was offering her a life line she didn't know she needed.\n\n\"C'mon Owen, everyone is dying to know. I'm just asking because it was the highest requested question off of Twitter: are you single?\" Her wide eyes seemed to be guileless but around her features there was the frantic hungriness for information, for validation. The raw neediness was almost frightening.\n\nI felt like throwing up, Owen looked calm but put on a slightly contrite face, \"Oh, I'm actually in a pretty serious relationship.\" Megan's mouth actually dropped open, her shock blatant. I'm sure mine was a perfect mirror.\n\nEven Derrick realized the gravity of his statement, \"Oh shit.\"\n\nMegan struggled to frame her next question, \"You're so young to be in a serious relationship. How long have you been together?\" I wondered if everyone else could see her pouting as my heart felt like it was being enclosed in a vice.\n\n\"A year and a half,\" Owen answered with a smile, \"The long distance has been tough but we're committed to make it work.\"\n\nIf we were in a cartoon Megan's face would have been sickly green with envy, instead she just looked like she sucked on a lemon, \"Anything you want to say to her tonight? I'm sure that would make her day.\"\n\n\"Oh shit,\" Derrick murmured, leaning forward.\n\nOwen nodded and looked straight into the camera, straight into my soul, \"Hey Jake. I miss you so much and can't wait to see you. I love you.\"\n\n\"Oh shit.\" I think that one might have come out of me, Derrick, and Megan all at the same time. Maybe Owen's dad, my parents, and Calen as well. There was a brief moment of silence as Owen grinned at the camera.\n\nMegan looked like she was going through a stroke. This was still live; nothing but dead air was being shown. Then the scene exploded, I could hear Calen's voice saying that the interview was over as well as someone who I later found out was a Coyotes publicist. It took the commotion for Megan to break out of her conniption, \"Owen for clarification, you just said you love\u2014\"\n\n\"My boyfriend,\" Owen's eyes sparkled in their sincerity, his still flushed from the game face bright with a triumphant smile.\n\n\"OH SHIT.\" That was all Derrick, \"He fucking did it.\" Yes, he did. I was still in a state of complete disbelief; my only reaction was to stare at the tumultuous scene unfolding.\n\nMegan seemed to have recovered her mental acuity and was firing questions at Owen, \"How long have you been gay?\" \"Did the rest of your team know?\" \"Did the League know?\" Calen and the other publicist was shooing her away but you could hear Owen in the background say, \"But I don't have anything to hide.\"\n\nCalen reappeared to officially shut down the interview, \"Mr. Holt will be available for interviews at the conclusion of the game.\"\n\nI'm sure Owen didn't mean to upstage the rest of the game but attention was completely diverted from the action on the ice. Anchors were a mixture of astounded, aghast, and amused as they looped his 'confession' commenting on every subtle nuance.\n\nTwitter blew up into two opposing camps one with the hashtag: HomoHolt which wasn't necessarily all bad just more sarcastic about it, although that camp was churning out some steady vitriol. The other camp was very pro-Owen: HoltsOut, a series of gifs of him scoring and celebrating and smiling. The most common was the loop of Owen looking into the camera and saying I love you. I unashamedly saved it to my phone.\n\nSoon the story spread from just the hockey world, major news anchors picked it up calling his coming out both adorable and courageous, or alternatively poorly timed and disrespectful.\n\nOwen wasn't the first to get interviewed after the game; I'm sure he was getting coached/yelled at by Calen. Several of the players gave non-answers about Owen, stating that it was none of their business. Then one of the newer players from the Wild actually said something, \"Look, here's the bottom line: I've known Owen Holt for years and yeah I knew he's gay. He's a great guy and an amazing hockey player. I'm really happy for him and I hope that everything works out for him.\"\n\nI was a little choked up as I watch Owen shake his hand, the other player slapping on the shoulder as cameras flashed and the tapes ran. Owen took his seat and the questions began flying. He had changed into a new crisp suit, not the one he had been wearing before the game. Was it possible Calen had scrapped the first suit for being too flamboyant or something else equally nit-picky?<br> \"Why did you decide to come out today?\"",
        "\"It wasn't a huge decision, I just hadn't been asked about it before. It wasn't something that I was hiding.\" Owen smiled and I wondered how much had been scripted.\n\n\"What can you tell us about Jake?\" My throat felt like it was closing as panic crowded my mind.\n\nOwen brushed a lock of hair falling into his face back, \"He's a pretty private person; I don't think that he'd appreciate me talking about him.\"\n\nA slim black-haired reporter piped up, \"What has been the Coyotes' reaction?\"\n\n\"I haven't heard much of a reaction yet but I'm sure they will be issuing a statement or holding a press conference and then we'll all get to see,\" Owen said arching an eyebrow.\n\nA heavy-set graying man followed up with, \"Did they know you're gay?\"\n\nIn a turn that would cause Calen to tweeze grays out for weeks, Owen smiled, \"Many people from all around the League knew; I've never been one to pretend to be someone I'm not.\"\n\nThe scrum of reporters launched into questions but they were all speculative or trying to get Owen to incriminate other players. Owen never murmured no comment but explained his positions about not giving out information that wasn't his to give.\n\nEventually the station had to switch over to other coverage but it was still streaming online and even ESPN and TSN had cut-ins of Owen's press conference as they continued to replay the tape. Owen eventually ended the conference with, \"It's getting late on the East Coast and I have someone to call. Thank you.\"\n\nOn my laptop I watched Owen step away from the table as cameras flashed and reporters yelled questions. He disappeared from sight and Derrick and I watched as coverage switched to a different room where the junior sports reporters were asking another one of the players questions. Derrick and I sat in silence for four long minutes before my phone started buzzing.\n\nOur trance was broken and Derrick was up and gone with a, \"I'll give you a minute.\"\n\nI stared at my phone for three rings before picking it up and putting it to my ear with a soft, \"Hello.\"\n\n\"I did a thing,\" I heard him say rather sheepishly.\n\n\"Oh I heard\u2014\"\n\nHe volleyed into an explanation, \"I'm sorry I didn't tell you before. It wasn't planned. I'm sorry I said your name\u2014\"\n\nI cut him off, apparently the calm fa\u00e7ade had been just that\u2014a fa\u00e7ade. He was freaking out just a little bit with the enormity of his situation and with what I assume he thought would be my ire, \"Owen, I watched the whole thing. I'm so proud of you.\"\n\n\"Really?\" His voice sounded so small over the phone.\n\n\"Yeah, I think Calen and your dad are going to kill you though.\"\n\nHe snorted, sounding a little bit more like the confident man I knew. \"I had to stop them from following me to make this call. They gave me four minutes before they would cut me off to have our meeting.\"\n\nI laughed but my heart hurt for him, \"You're about to get a talking to, huh?\"\n\n\"I'm sure I'm about to have my ass handed to me. Calen already started yelling at me. The only saving grace is that a bunch of brands and celebrities have been reaching out in support.\"\n\nI wasn't shocked that there would be people currying favor in either direction, \"That's great.\"\n\nOwen sounded uncomfortable, I imagined him running his hands through his hair in preoccupation. \"So, you might get some flak. It's not going to be long until someone makes the connection or asks someone from school.\"\n\n\"I'll handle it Owen. Worry about you; it's going to be a crazy few weeks for you.\"\n\n\"I'm sure\u2014\", I heard in the background furious knocking, \"I apparently have used up my time. But I think they cut my time short; no way it's been four minutes.\"\n\n\"Go. I'm sure you'll need all of their goodwill to get through this meeting. I love you.\"\n\n\"Love you too Jake, so much.\" Then there was a dial tone playing in my ear.\n\nIt only took four days for the reporters to show up outside my building. Calen had already gotten calls from NBC, FOX, ESPN and every other acronym or initialism for an exclusive interview where they could really sit down and do a feature on him. One particularly enterprising news show had asked for both of us: wanting my reaction to all of this.\n\nCalen was still weighing his options for which station would have the most social currency for Owen to grant first rights to. This was in the wake of the Coyotes reaction which had been at its core: We are an organization that is committed to its players. Owen plays good hockey and we aren't about to kick him out when he's our new fresh talent. They also made mention of their long standing commitment to non-discriminatory hiring. It was the best they could do as an organization and Owen seemed to take it in stride.\n\n\"I mean they could have sent me down to the AHL.\"\n\nWith the Coyotes' lukewarm endorsement, the only person left for them to ferret out was me. I was on my way to my 8 A.M. Broadcast Journalism class when I was assailed by six reporters.\n\nMy peers jumped from 'definitely not awake enough for this shit' to incredibly interested as the camera bulbs flashed taking in my expression: shock and resignation. When the questions started flying I only answered one, \"Yeah, I'm dating Owen Holt.\" Then I finished it up with the one phrase Calen had been beating into my head from the beginning, \"All other inquires can be sent to the Edwards Group.\" They didn't stop asking questions but I made my way into one of the school affiliated buildings which was accessible by key card only so I was able to escape.\n\nReporters asking about me was new and terrifying. I didn't know how Owen managed it. He always was meant for the limelight; I really wasn't. But I would endure the speculation until it died down, even though it took a very long time for Owen to be out of the headlines.\n\nAfter the initial buzz died down, it was time for anyone who was looking to make a name for themselves to have an opinion. In a game with the Flyers, a mic picked up one of their players crashing Owen into the boards while telling him, \"I'll shove your stick up your faggot ass.\" He was fined and suspended for several games but not before the Coyotes' bench cleared to take care of the issue.\n\nOwen, while getting patched up, had told his teammates not to worry about it but they had flat out told him that it wasn't going to happen. I smirked at Owen's indignation that someone would fight his battles for him remembering how he didn't understand when I felt that way.\n\nThe fans were undecided for several games until Owen got a hat trick and then they didn't give a shit who he was fucking. HatTrickHolt was born that night. That hashtag would become his moniker; Owen really specialized in feats of magnitude like getting hat tricks. The only fans that really rebelled against Owen being gay were the teenage (or older) females that were all convinced that Owen would be the one to sweep them off their feet.\n\nToo bad for them. He was mine.\n\nFive Years Later\n\nI didn't walk at my college graduation; the second finals were over I was on a plane. Owen had signed a four year contract extension along with a huge raise after his rookie contract had run out. He had stayed in Arizona and the minute I was free to join him I did. In his third season with the Coyotes he was named Captain after Doan retired.\n\nThere was some gnashing of teeth that someone who could barely legally drink alcohol was the captain. There was also some gnashing over him being gay but most people had gotten over their bullshit when Owen got the Coyotes through some rough patches and into the playoffs. There were still some articles that tried to smear him as a pervert or a drain on the team but that was a drop in the ocean of praise, awards, and love that Owen received.\n\nWe got married 6 years to the day that we met. All of Owen's teammates were there as well as many so-called rivals that all slapped Owen on the back. Owen's dad who I now reluctantly called Chase stood as Owen's best man while his lineman and Kyle rounded out his groomsmen. I had friends from Emerson including Derrick who was my best man. Also among my groomsmen was Matt who had cleaned his act up\u2014sort of. He would be very proud to say that he loved his job. He had quit college when weed was legalized for recreation in Colorado and opened one of the first shops. As far as I could tell, he was rolling in money, drugs, and patchouli-scented women. He was happy.\n\nI had also invited Ellen to the wedding, just to see if she and Matt could work something out. They didn't in the end, disappointing. I wasn't surprised she accepted; since graduation many people had reached out and explained that they were sorry they never said something or that they wished we had been closer. Fuck them: I didn't need their bullshit friendship even if in some cases it works out to my advantage.\n\nOwen had insisted I invite as many people from high school as I could stand so they could see that I was doing better than them. It might have been vindictive but I was up for a little vindication of my sorrow. I didn't invite Gregory or Liam of course, that would have been masochistic but all the people who had reached out, the cross country team they were all there. Owen was all about having a big wedding, several people had pitched having it being a TV special but that was way too much for me.\n\nThe only goal of having so many people there was that it validated me in the past and Owen in the future. Sports legends, icons, reporters, owners, they all came to support Owen and in doing so supported the closeted kids who looked up to Owen.\n\nMy parents were of course beaming and proud, even if Owen found their newfound appreciation of me tiresome, I liked it. I was happy they were there to share the day with me. My mother had screamed when I had told her we were getting married.\n\nOwen with his flair for dramatics had wanted to propose to me on the ice in the middle of an All-Star Game interview and make that his legacy of shocking revelations. I'm glad he didn't do that. I still would have said yes of course but he would have received a punch on the shoulder.\n\nHe proposed far more intimately. We had been enjoying dating. It was something we hadn't really been able to do in high school. But now that he was out we could actually go places together, although he often was sequestered into photos with fans. Amusingly Owen's sexuality was such an important story that I frequently got roped into the photos as well.\n\nHe had taken me hiking in off-season. A good cross training exercise he had told me, not something that could possibly get him hurt; of course it was all just a big rouse. I had been enjoying our pre-dawn hike through a state park, we had gone so early so as to escape the heat, foot traffic, and to see the sunrise. Of course, I didn't know we had to have all kinds of special permission to be out there as early as we were.\n\nWe stood at the top of Piestewa Peak as the sun rose and Owen turned to me, the golden rays of the morning peeking out over the desert and kissed me gently. Breaking our kiss, he sunk to a knee in front of me. It was an out of body experience for me; I watched my mouth flounder open as I grappled with myself. I watched as a rogue tear slipped down my cheek before he had even said the words:\n\n\"I wanted to show you the horizon Jake; I love you more than anything down below. Anything you see and want, I'll spend my life making it happen. I don't want to spend another sunrise without you, will you please do me the honor of marrying me?\"\n\nMy heart thudded loudly in my ears, Owen's face shone is the early morning light. He looked exactly as devastatingly handsome as he had when we had first met, if anything he looked better. He was stronger and more settled into his features. I was so absorbed in my love for him that I had to shake myself when I was his glorious smile falter.\n\n\"Oh god, yes. Yes. Yes, forever.\" He sprung up from his knee and grabbed me around my waist lifting me and twirling me around as we kissed. Joy was overwhelming, I loved this man. More than anything. More than not seeing him for days and days when he went on travel trips, more than my envy of him getting to take naps in the middle of the day for his job, more than annoying fan girls (or even worse boys). I loved him with the purity of a first love but the strength of knowing that he was my forever.\n\nWe announced immediately. We called our parents from the mountain even if it was pretty early even on the East Coast. Owen didn't want to wait for Calen's approval, he snapped a picture of us silhouetted by the sunrise and pushed it out on Twitter.\n\nI wasn't too worried about wedding planning, I was busy working for the Phoenix Sun Times so Calen brought in an actual wedding planner. My mother had more contact with her than I did. Owen and I made simple choices together, I think we shocked her with the scale of our wedding but it wasn't really just about us.\n\nWith Owen's father\u2014Chase, as he had insisted I call him\u2014as his best man, I hadn't thought to be worried about his bachelor's party. Of course Chase's plan for a nice weekend playing golf in Montreal had been waylaid by several of Owen's teammates. They had ordered six female strippers and one male: just for Owen. I appreciated their foresight that Owen likely wouldn't have been interested in the women in fake police regalia. I wish I could muster up some jealousy that Owen had an attractive naked man grinding on him but I was just so damn pleased that his teammates supported him enough to actually get him a man.\n\nHis teammates, or at least most of them, were almost too supportive. Mikhalov, their big Russian enforcer, had come to me one day shortly after we had gotten engaged. He was massive, at least 6-7 and built like a shithouse. He was the one that usually kept Owen out of anything too bad. Not that Owen hadn't been able to stand up for himself but Owen got paid to score not fight. Mikhalov got paid to fight. His bruising body approached me one day with death in his eyes. I metaphorically wet myself as the \"death glare\" was turned on me.\n\nHis low tone was calm but determined as he explained that if I hurt Holt, I would have to answer to him. At our wedding, after I had become Jake Holt, his toast was that if anyone messed with either Holt they would have to answer to him.\n\nOur wedding was everything I could have hoped for, grandiose but still intimate. Intimate in that I was with Owen, he was always my rock in a sea of crazy.\n\nOwen and I had a life now, he was committed to the Coyotes and they were committed to him. They were all looking toward the cup as Owen and I looked forward to our future. We bought a house together out the outskirts of Phoenix, well he paid for most of it of course. It's big enough for the entire team to come over and hang out, which they do often. I'm not opposed to very attractive athletes lounging around our pool. But I'm far more excited that our house is big enough for kids.\n\nOwen had declared to me one night as we lay replete, \"I want kids.\"\n\nI smiled, his chest hair tickling my nose, \"We can certainly keep trying to make it happen.\" He kissed the top of my head.\n\n\"I'm serious though,\" he chuckled. \"Your sperm, my sperm, or adoption: I want kids.\"\n\nI sat up and gazed at my god in repose, naked and earnest in his convictions. He used one arm as a pillow and his chest, newly adorned with my name over his heart, gleamed in the low light. \"Like right now?\"\n\nOwen's face split into a wide smile and the small scar parallel to his lip, which he gotten his third season from a particularly vicious slash, was bright white against his tanned face, \"I guess we could wait a few years.\"\n\n\"Good, because I don't want to share you yet. You travel all the time but when you're here you're with me, got it?\"\n\nHe kissed me thoroughly, leaving me breathless from his intensity, \"I got it. So kids down the line\u2014yes?\"\n\nWe decided eventually on adoption; I wanted our kids to have the natural advantages Owen had and Owen had wanted his kids to look like me. We thought about having several children with both of us fathering at least one of them but surrogacy seemed like a long and protracted road of worrying possibilities. So, month after our wedding we began the paperwork for adoption knowing that the process is a long one.\n\nOwen has been practicing by doing charitable work around Phoenix with various children's organizations. I think it's his way of making sure that he'll be ready when the time finally comes. But I don't have any doubts that Owen will make an amazing father; he's already an amazing husband."
    ],
    "authorname": "evolvingslowly",
    "tags": [
        "high school",
        "alpha male",
        "gay romance",
        "hockey",
        "romance",
        "marriage",
        "coming out",
        "jock",
        "athlete",
        "anal"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/hooking-the-hockey-player-ch-07"
}