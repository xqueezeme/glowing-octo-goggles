{
    "title": "The Rhythm Method",
    "pages": [
        "Author's note: The story is part of Literotica's unofficial tag team competition. Twenty of Literotica's authors have accepted the challenge of being randomly paired with a partner to co-author a story under the pen name \"The_Odd_Couplings.\" The pairings have remained anonymous and the true authors of this story will be revealed in the comments section one week from today.\n\nDisclaimer: Because part of the fun of this challenge is the secrecy of the partners I would like to ask that readers and fellow authors alike refrain from posting their guesses in the comments section as we would like the scoring to be as fair as possible.\n\n<center>- - The Rhythm Method - -</center>\n\nRalph Watson rolled over in his bed, groaning as the early morning sun knifed through the shutters and lit up his face. His tongue felt like a lump of dried shoe leather, the result of too many beers the prior evening. The pounding in his head reminded him that it was a horrible idea to have his friends over to watch football. Of course, he'd forget all about that before the next game. Ralph seemed to have a difficult time learning from his mistakes these days.\n\nHe sat up in bed and felt as if he needed to vomit. Great, he thought to himself. This was the day of the big meeting at work. Big meeting. Fucking-A. He wondered what horseshit they were going to throw at them today. Whatever it was, Ralph was going to have to figure out a way to deal with it. He was a cellar rat at one of the best wineries in the state, Twisted Vines, and was lucky to have that job. If you didn't do wine in the valley, you did coal. He most certainly didn't want to do coal. \n\nRalph growled as he threw his legs over the side of the bed and stood up. Holding back the nausea again, he made his way into the kitchen and fumbled with the coffee maker. After adding a filter and coffee to the brew basket, he poured water into the machine and turned it on. Then he headed into the bathroom as the coffee brewed, emptying his bladder into a toilet that hadn't been cleaned in far too long. The deep yellow color of his urine evidenced his state of dehydration. \n\nThis was going to be one hell of a day, Ralph thought as he walked back into the kitchen. He poured himself a cup of coffee, then pulled a carton of milk from the refrigerator. The milk had an expiration date of the prior day. He sniffed it, shrugged, and added it to his coffee. Pretending not to notice the slight curdle that appeared atop the liquid, Ralph took a deep chug of the brew, satisfied it wouldn't kill him. With no time to cook, he fed the toaster two slices of bread and grabbed a plate from the cupboard. When the toast popped up, Ralph spread some jam on it and quickly ate in between gulps of coffee. \n\nWhen he had finished, he walked into his small bedroom to get dressed. He opened a dresser drawer and pulled out a pair of boxers, which he slipped on. Rummaging through a pile of clothes that lay on the floor in the corner of the room, he found a pair of jeans and an old AC/DC t-shirt. He gave the clothes a sniff test, and thought they were good enough to wear for the day. Making a mental note to do laundry that evening, he slipped on his jeans and pulled on his Nikes, then headed out the door to his car. It was a twenty minute drive from his apartment to the winery, and he had just enough time to avoid being late. Ralph crossed his fingers and breathed a sigh of relief when the old clunker started right up for him, then sped off down the road to work. \n\n<center>* * * * *</center>\n\nCharlotte Simons stepped off the treadmill and picked up her water bottle, taking several big swallows. Wasting no time, she kicked off her shoes and stripped off her clothes as she walked to the shower, stepping under the gentle spray. She had cut her morning run short knowing that she had a meeting to get to. As she went through her shower routine, shaving her legs and scrubbing her body until she was pink all over, she considered once again why the rarely seen owners were coming in today. \n\nShe had been an assistant winemaker at the prestigious company for over three years, and she was hopeful that perhaps this visit from the owners meant that she would get the chance to step up into a winemaker role while one of the seniors took leave. Stepping from the shower, she dried off and moisturized every inch of her body, then dried her natural curls to silky smoothness. After putting on a thin veneer of make-up with a practiced hand so as to make it seem as if she wore none at all, she walked to her room.\n\nShe looked at the outfit she had chosen the night before after hours of indecision and angst, trying not to second guess her choice. Dressing carefully in matching designer lingerie and a simple navy blue dress, she turned to eye her reflection critically. As always, she ran her hands down each part of her body, her eyes following the lines of her figure. She noted the freckles on her shoulders, her small, but not too small, breasts and the flat belly between the wide hips that had been the gift of her mother's genes. Forsaking the low comfortable heels she normally wore, she slipped into a pair of stilettoes thinking they would, if nothing else, give her a little bit more presence in the room. She didn't want to risk being hidden behind her taller coworkers.\n\nIt was important to Charlotte that she appear confident and professional in her role at the winery. She had worked hard in school to get herself out of the rundown neighborhood and home her mother still lived in. She had no desire to return there because she failed to meet the expectations of her employers. As she chopped up fresh fruit and made a health shake for breakfast, she went through a checklist in her mind of everything she had to do at work before the scheduled morning meeting.\n\nPutting the shake into a sip and go cup, she grabbed her bag from its place at the end of the kitchen counter and left for work, excited about what the day might hold for her. As always, she'd arrive early and get much accomplished before her coworkers even showed up for the day.\n\n<center>* * * * *</center>\n\nRalph pulled into the dusty, gravel covered parking lot three minutes before he was to clock in for work. His old heap shuddered as he turned off the engine, which did nothing to ease the pain in his already throbbing head. Getting out of the car, he looked up at the large stone structure he was about to enter. It had the appearance of a medieval castle, and the light that the sun cast upon it gave it the appearance of being in a faraway land. Of course, deep in the depths of the castle there was no natural light. He craved that darkness right now, as the bright sun stabbed his eyes and brought on another wave of nausea. \n\nThere was already a crowd in the main entrance area, a large, cavernous space with high ceilings and a lot of natural light coming through the many elevated windows. This was where guests of the winery began their tours, and many were already queued up for the first tour of the day. The sounds of voices echoed through into the foyer area where the winery workers gathered to await the owners. Speculation ran rampant about what the owners would discuss today. Standing over to one side of the room, Ralph watched as the assistant winemakers gathered together in a cluster. Charlotte was noticeably absent from the group. Good, Ralph thought. Of all the people he worked with, he despised her most of all. She seemed aloof at all times, and was always dressed as if she were on a catwalk or at a fashion shoot. It pissed him off. It was as if she wanted to flaunt her affluence in the face of the cellar floor workers.\n\nMost of the winemakers and their assistants barely acknowledged his existence, other than to bark out orders or chide him for one thing or another when coming down to the cellar floor. She seemed to take it to another level, though. He would never forget the day that she followed him into the castle and he held the door for her. His fingers brushed hers, and she pulled her hand away with a loud gasp and a look of sheer horror. You would have thought he had some horrible communicable disease with the way she acted. He had never forgotten it, nor had he ever forgiven her.\n\nHaving been at work for some time, Charlotte finally went down to the foyer where they had been asked to assemble. She advanced into the room, trying to exude confidence as she walked, her too high heels clicking loudly on the stone floor of the foyer. She was looking for a friendly face, when she spied Ralph watching her. A chill went up her spine as she walked. He frightened her. Ralph was a big man, burly and hairy, with deep brown, brooding eyes and a head full of dark, curly hair. Folding her arms across her chest, Charlotte desperately searched for Jeff, her boyfriend, who was supposed to be here already. Like her, he was an assistant winemaker, vying for the temporary promotion. Unable to find him, she glanced once more towards Ralph, who continued to watch her with disdain on his face.\n\nOnce again, a chill ran through her. He reminded her of a neighbor she had when she was in her early teens. He had tried to take advantage of the girls in the neighborhood and Charlotte had been cornered by him once. Luckily, she was rescued by her mother, who had unexpectedly returned home early from work. She had nightmares about him still, and was not at all happy that someone who looked even remotely like that man had appeared at the winery in which she worked.\n\nCharlotte dismissed the cellar rat from her mind and carried on through the room to try and find Jeff, or at least some of her colleagues. She had worked hard to secure her position here and she had no desire to socialize with the people who worked in the cellar beneath her. It wasn't that she didn't appreciate them in her own way. Rolling the barrels and ensuring the constant temperatures down in the vast catacomb like cellars below the castle was beyond important to the fermentation process. She just didn't see the need to have to be friends with the cellar dwellers.\n\nIn truth, their lack of formal education and the menial jobs they held reminded her of the rundown neighborhood she had grown up in. Those people had lived from day to day on welfare and handouts. Very few of her neighbors even left their houses for work in the morning. She supposed the rats were slightly better, at least going to a job every day. She was quite thankful to have escaped that world and the man that Ralph Watson reminded her of. Once again a shiver ran up her spine as she desperately searched for a friendly face and the safety she knew being with her own friends would give her. Smiling in relief, she all but ran to where she had spotted the small group of assistant winemakers.\n\nJeff returned her smile but he was not a man prone to public displays of affection. Charlotte took her place beside him and greeted the remaining people in the group. Glancing over her shoulder, she saw that Ralph had finally turned his eyes away from her and was talking easily with his friends. She breathed a sigh of relief and joined in the speculative conversation between her friends. They each had written extensive expressions of interest in the temporary winemaker's position and they hoped the owners arrival preceded the announcement of who would get the opportunity to move up in the wine making world.\n\n\"Welcome everybody,\" a deep voice boomed over the din in the room. A hush descended on the crowd and every pair of eyes turned to the wide staircase that was part of the large foyer. \"Now that the tour has gotten underway, would you all please follow me?\" The man turned and made his way up the staircase, beckoning the workers to follow. \n\nStraggling at the back, Ralph noted that the assistant winemakers led the way, followed by the cellar masters, and lastly, the cellar rats. Noticeably absent were the hospitality staff, who ran the events and tours at the winery. Ralph's surly demeanor became heightened as he entered the room last, underlining his place as the least important person in the winery. \"Fucking assholes,\" he mumbled under his breath as the assistants joined the winemakers on the small group of chairs available in the vast room while most of the cellar floor workers were forced to stand.\n\nHe noted with a sense of satisfaction that the owners also stood and did not look any happier than he was about the clear division within the staff. Ralph had a feeling that the absent owners were about to take a bigger interest in what was going on in the winery, rather than continuing to leave it only in the managing director's hands. He sneered at the thought of the managing director. The stupid bastard didn't know or care what went on in the cellars and that was just the way Ralph liked it.\n\nFrank and Suzette Price had met several years earlier at a charity event, and had quickly become smitten with each other. Frank was tall and handsome, his salt and pepper hair at odds with his otherwise youthful appearance. Suzette was a slender brunette, thirty years his junior. She was a woman born of high society, having attended a prestigious liberal arts school up north. \n\nShe had taken an interest in Twisted Vines over the past year, and had begun to surreptitiously observe the operation. She cajoled Frank into allowing her to take the reins of the company, and her first order of business was the reason they had gathered today. She stood in front of the room and addressed the small crowd gathered before her.\n\n\"For those of you that don't know me, I am Suzette Price. My husband Frank and I own Twisted Vines,\" she said, motioning to Frank. \"I have been watching the operation here over the past six months, and have been quite impressed with the work you are all doing. However, it has become apparent to me that we can do much better.\" A murmur rumbled through room, causing her to pause before continuing.\n\n\"I want to talk about teamwork. Look around you right now. You have all organized yourself into cliques, and from what I have seen no one associates themselves with anyone outside their little group unless they absolutely have to. In fact, there seems to be a caste system at work here, and I think it is holding us back. There is no job here more important than another. If each of you doesn't do their part, the entire operation suffers.\"\n\n\"These people don't have to be friends in order to do their jobs,\" interrupted Jim Whitehead, the Managing Director. \"We produce a quality product. If you didn't tie our hands with a limited marketing budget, we could do wonders.\"\n\n\"Thank you for your input Jim,\" Suzette said with a small frown. \"We can discuss budgets at another time. You do recall that we lost several batches of wine last week, don't you Jim?\"\n\n\"That isn't all that uncommon.\"\n\n\"Why did we lose those batches, Jim?\"\n\nJim let out a huge sigh before replying. \"There was a bit of a miscommunication between the assistant winemaker and one of the cellar ra... workers,\" he quickly corrected himself. \n\n\"A bit of miscommunication?\" Suzette sneered. \"That's exactly my point. These people work side by side, and yet they barely even speak to each other. That has the potential to screw up our operation, and it obviously has, on more than one occasion. On top of that, I think it kills morale. Who wants to come to work in a place where people ignore each other, or, even worse, despise each other?\"\n\n\"Well, you can't force people to be friends, Suzette,\" hissed Jim, forgetting who he was speaking to and dropping the formality of calling her Mrs. Price in this meeting. \"What are you going to do? Lock them in a room together?\" he added, barely hiding his disdain for her.\n\nJim had heard a rumor that Suzette was going to interfere with the operation. The last thing he wanted was to have someone that knew nothing about winemaking or business questioning his judgment on a daily basis. He much preferred the Price couple to just stay in the background and cash the checks that he earned for them. \n\n\"It's funny that you should mention such a thing Jim,\" said Suzette with a wicked smile. \"That is exactly what I have in mind. During the next month, we are all going to spend several days and even a few nights here, breaking down the cliques and learning to work together. This is a mandatory exercise. Anyone who is not on board should leave now, but know if you choose that route you will not be welcome back again.\"\n\nThe room was abuzz as everyone struggled to get their minds around this announcement. Suzette watched the group with interest, and was happy that no one headed for the exit. Almost happy, anyway. Part of her had wished that Jim would have left in an angry huff. Now, she'd have to end up firing him instead. \n\nHearing the discontented buzz of both shock and distaste run through the room, Frank stepped forward to add his authority to his wife's voice. \"I am in full agreement here. The whole of the winery is only as good as the sum of its parts. I expect every level of this business to run like a well-oiled machine. Currently that machine has too many creaks and groans. If we don't do something about that, Suzette and I will be looking at making a major overhaul, beginning with the people in this room. Personally, I think that would be the best course of action, but my wife insisted we try to do it this way and give you all the chance to prove you are the right people to be here.\"\n\nThe ripple of shocked gasps could be heard from the winemakers and their assistants and they looked with disdain at the cellar masters and rats. In turn the cellar floor workers looked back with undisguised malice at the winemakers.\n\nA small low growl erupted from Ralph's throat as he caught Charlotte looking in his direction. Fucking stuck up bitch. She was the worst of them all, he thought to himself. At least some of the others would acknowledge his existence with a quick greeting when they came down to the cellar to check their precious barrels. That bitch treated them all like morons and avoided him like he had the plague. He curled his lip in a snarl as he caught her eye, causing her to quickly look away.\n\n\"I understand there will be those of you with family or commitments elsewhere, so we are willing to accommodate that,\" Suzette continued once the noise had once again died down. \"Those of you who have a real hardship giving us the extra time we're asking for should make an appointment to speak directly with me about it. Make no mistake though. My husband and I are looking to make some drastic changes around here and those who do not come on board with our plans should possibly start looking for employment elsewhere. I believe the mine is hiring.\" The Prices were banking on the fact that there was little work available in these tough times, especially in this town.\n\n\"Thank you all for listening. Once the smaller details have been ironed out we will let you know the dates we will begin our new training plans. For those of you who wish to see me about our plans, I will be available in the owner's suite today and tomorrow. Make an appointment with Emily,\" she said, introducing her personal assistant. \"That will be all for now,\" she said, dismissing the staff and leading the way as she and her husband exited the room.\n\nCharlotte sat in stunned silence. Her work was her life, and she had fully expected that they were going to announce who would get the promotion. She hadn't expected this. She barely took in the growls of discontent around her as she looked back to where the cellar workers had begun to file out of the room. The mistake causing the loss of several barrels of wine last month had not been hers, but rather it had been Jeff's. It was his fault they were in this predicament. She could bet she knew who the cellar rat was that caused it though, as she watched the lumbering bear of a man, Ralph Watson, exit the room.",
        "<center>* * * * *</center>\n\nCharlotte had finally stood with the rest of her colleagues once the cellar rats had exited the room. The assistants all eyed each other warily. They had each made mistakes, though some much bigger than others. Most laid the blame firmly and squarely at the feet of the cellar rats, taking none of the responsibility for spillages or other incidents themselves. She thought about her own mistakes. Luckily she had not made any of the big gaffes that seemed to have doomed them to this extra attention from Mrs. Price. Rather than complaining about the untrained and ill-bred cellar staff, Charlotte began making a list in her head of how she could improve her own work.\n\nAt the top of her list was communication with the rats. She shuddered at the thought of having to deal with Ralph. She decided to make an appointment to speak to the winemaker who was her direct supervisor about selecting the rats she would like to work with and those she wouldn't. With some careful planning, she could avoid Ralph and the worst of his creepy friends altogether and do a better job communicating when down in the cellar checking the barrels.\n\nSatisfied that she had a plan to move forward and be okay, she tuned back into the morose complaints of her colleagues. Clearly, they believed they shouldn't have to do any extra work and participate in this exercise that Suzette had planned. They seemed to believe only the cellar floor workers needed such drastic measures in order to improve their productivity. Charlotte grimaced. Hadn't they heard Suzette? This was about not marking the clear class distinctions between the winemakers and laborers.\n\nCharlotte was not one to voice her thoughts in a group, however, instead tending to hang back and listen rather than join in the banter of her colleagues. Once in the office she shared with her friend Lincoln, she sighed and turned to face him. \"You know the key word Suzette said was clique right?\"\n\n\"Yeah, so?\" Lincoln shrugged. He was still angry about losing his weekend for some sort of new age hand holding thing.\n\n\"Nothing. I was just wondering if it's the assistants that are seen as a clique, rather than the cellar rats. I mean, they seem to talk to everyone but us. Even Stuart,\" Charlotte said, referring to the oldest and most senior of the winemakers, Stuart Gresham. She and Lincoln were lucky enough to work directly under his supervision. He was a taciturn man of few words and took on fewer assistants than most. The fact that he had chosen her gave her a certain amount of credibility among the other assistants, despite the fact that she was one of the few females holding the position.\n\nShe walked to her window and looked out over the front lawn just as Ralph stormed out of the cellar doors, walking towards the cafeteria. \"Even that great oaf seems to be able to talk with everyone here,\" she shivered. \"Except us.\"\n\n\"That guy's got a chip on his shoulder. I doubt he actually talks to anyone except to grunt his own disdain.\" Lincoln had come up beside her to look out of the window and see who she was talking about. \"Look. All we have to do is play the game until Suzette gets bored with her latest moronic idea and life goes back to normal.\"\n\n\"Yeah,\" Charlotte agreed, smiling and turning her gaze away from the window. \"I guess so.\" Having seen Ralph making his way to the cafeteria, she opened the small refrigerator they kept in their office and withdrew the salad she had prepared the night before. She never went to the cafeteria with the rest of the workers, but after this morning's meeting, she knew that she would have to try to go down once in a while, if only to be seen. \n\n<center>* * * * *</center>\n\nSomehow, Ralph had made it through the rest of the morning without seeing his toast and coffee again. The cool dampness and relative darkness of the wine cellars had him feeling almost normal again by the time lunch rolled around. Of course, the bombshell Frank and Suzette had set off was another thing entirely. \n\nRalph settled into a chair in the company cafeteria with a few of the other rats. Sam, his best friend since high school, sat beside him to his right. They were joined at the table by Nick and Mark. Nick had worked with them for a few years, but Mark had been there for only a few weeks. He was the low man on the totem pole.\n\nRalph wasted no time voicing his displeasure with the morning's announcement. \"I can't fucking believe we are going to have to waste an entire weekend with this bullshit,\" he growled. \"And then more days after that! All because some fucking assistant winemaker couldn't be bothered to talk to one of us. I bet I know who it was, too.\"\n\nSam looked at his friend with an amused smile on his face. \"Oh? Who was it Ralph? Please tell us.\"\n\n\"You know damned well it was that bitch Charlotte Simons. You see the way she looks at us. It had to be her.\"\n\nSam shook his head and pointed his gaze over at Mark. \"Ralph really has it in for Charlotte, and I know why.\"\n\n\"Oh, why the fuck is that, Sam?\" Ralph said as he glared at his friend.\n\n\"You see, the lovely Charlotte Simons, reminds him an awful lot of his old high school girlfriend. She went off to college without him and got herself a damned good job. I think Ralph here thinks about what might have been.\"\n\n\"Fuck this,\" snarled Ralph in a near shout. \"I'm going outside for a walk.\" Gathering the remains of his lunch, Ralph bolted from the table and tossed the trash into a receptacle, then nearly broke through the doors on the way out of the cafeteria.\n\n\"Wow. He's really sensitive about it,\" said Mark.\n\n\"There is more to the story,\" Sam replied while shaking his head. \"Ralph had everything going for him in high school. Happy family life, good grades, a great place to live. He had the best of everything. The summer after he graduated his parents were killed in a horrible auto accident, and he found himself alone.\"\n\n\"I never heard this,\" Nick chimed in. \"Holy shit. Didn't they have money, or at least insurance?\"\n\n\"They earned a lot of money, but never saved any. Once they died, there was nothing left. Even the house had a second mortgage on it. He was forced to fend for himself at eighteen years old. I don't think Ralph ever forgave his girlfriend for going off to college without him. I mean, what the hell was she supposed to do? But there you have it. I'm telling you though. Charlotte reminds him an awful lot of that old girlfriend. Not that they look alike, mind you. But she is bright, driven and successful.\"\n\n\"Well, I can see why he's pissed about that on every level,\" said Nick. \"I sure as hell wouldn't mind a piece of that ass, I'll tell you that.\"\n\n\"Fuck yes,\" added Mark.\n\n\"Well, you two can just forget about it. That woman wouldn't take up with a cellar rat if he were the last person on earth.\"\n\n\"A guy can dream, can't he,\" laughed Nick.\n\n\"Yeah. Whatever. Time to get back to work, boys. With the owners here, today isn't the day to get caught fucking off or fantasizing about what a wild cat the stuck up bitch probably is in bed.\" He smirked as his friends raised their eyebrows at him. \"Hey, I'm only human,\" he chuckled.\n\n<center>* * * * *</center>\n\nThe rest of the week went by in a blur, and Ralph found himself in the local watering hole on Friday night. He hadn't had a drink since football night, and he was ready to tie one on after the hellacious week he had experienced. All of the rats were there, as well as a number of other winery employees. The truth was that there wasn't a hell of a lot to do around the area, and this honky tonk bar was as good as it got. \n\nSam stood beside Ralph and struggled to be heard over the bluegrass band playing in the corner. They weren't all that good, but they were loud. It always seemed to work that way, Sam thought to himself.\n\n\"Listen. All I'm saying is that I'm sorry I brought that up the other day, Ralph. I wasn't trying to piss you off.\"\n\n\"Well you did, Sam. All that shit has nothing to do with what's going on in the winery.\" Ralph was as unforgiving as always.\n\n\"The hell it doesn't, Ralph. You're going to have to let the past go if you ever want a future, buddy.\"\n\n\"This coming from a man that has the same shit job that I do, huh? I don't see you dancing around with your happy pants on all day every day.\"\n\n\"A job is a job, Ralph. I'm talking about being happy. You walk around miserable all the fucking time. You need to get your shit together. You can try to escape this fucking valley we live in, but you can't escape yourself. You're the one that needs to change.\"\n\n\"Whatever. Just fucking drop it Sam, okay?\"\n\n\"Whatever you say,\" replied Sam as he got up from his bar stool. \"I'm gonna go drain the dragon and get the fuck out of here. I have shit to do tomorrow and I need some sleep.\"\n\nRalph grunted goodbye and took a giant swig of his beer. He knew his friend was right, but he had spent years blaming others for his plight. It was a hard thing to accept responsibility for your lot in life.\n\n\"Can I get you another beer, sugar?\" asked Tammy, the barmaid.\n\nTammy was in her late twenties, with dirty blond hair and a pretty face. She had one hell of a rack under the tight t-shirt she wore. Like many of the local girls, she had a tummy that was running to chub, and an ass to match. Ralph didn't mind. He liked a girl you could play a little rough with, and he quite enjoyed the sound it made when he slapped that chubby ass of hers. She and Ralph had an on again-off again kind of relationship. Maybe relationship isn't the proper way to describe it. They liked to fuck, and threw in the occasional conversation to pretend it was something more.\n\n\"Sure, Tam. Why not?\" he said offhandedly. \n\n\"I get off in an hour,\" she said hopefully. \"You want to hang out for a while?\" Tammy poured the beer and placed the glass in front of him.\n\nRalph stared at her without speaking for long enough to make her nervous. \"Sure, Tammy. That'd be great.\"\n\nShe gave him a smile and moved down the bar to the next drunk waving an empty glass at her. Ralph sat quietly, nursing his beer and brooding. Turning around on his stool, he surveyed the rest of the room. There was a large dance floor in the center, and several of the assistant winemakers were right in the middle of it, doing some stupid fucking line dance. Of course, there was Charlotte and that asshole Jeff, front and center, leading all of the other idiots on. Fucking dancing, he chuckled to himself. What a waste of time and energy.\n\nRalph turned back to the bar and drained his glass, holding it up to Tammy for a refill. She came down and took the empty glass from him.\n\n\"Go easy sugar. I want to do more than just watch you sleep tonight,\" she said with a mischievous grin.\n\n\"Don't you worry about that, Tammy. I've never failed you before.\"\n\nTammy smiled. \"No, you haven't at that.\" Biting her lip, she walked to the other end of the bar, wiggling her ass as she went. His thoughts went back to Charlotte, and Sam's words the other day. If he were really honest with himself, he would admit that Sam was right. He was projecting what he felt was his old girlfriend's disloyalty onto Charlotte. No matter. She was a bitch anyway. He drained his beer and caught Tammy's attention. \n\n\"I'll meet you outside by my car. I'm parked over at the far end by the stand of trees.\"\n\n\"Okay, Ralph. I'll be about fifteen minutes more. See you in a little bit.\"\n\nRalph sat on the hood of his car as he waited for Tammy. A short time later, he spied her walking through the dirt lot in his direction. He waved to her, and she stood in front of him as he continued to sit. They exchanged no words as Tammy reached up and kissed Ralph, tentatively at first. He took over as the aggressor, kissing her roughly, one hand moving up and finding her breast. She gasped into his mouth when his thick fingers pinched and twisted a nipple as he kissed her. \n\nSlipping down off the car, Ralph grabbed her hand and placed it on his stiff cock through the fabric of his jeans. Tammy looked at him and smiled. Like the rest of Ralph, his cock was big, thick and hard. She bit her lip and looked into his eyes as she started to unbutton his jeans. A moment later, she was on her knees with his fat cock in her mouth, bobbing her head up and down as she swirled her tongue around the large head. Ralph grabbed a handful of her blond hair and slowly fucked her face, watching her as he did.\n\nSuddenly, they were illuminated by a pair of headlights swinging by as a car drove through the parking lot. Ralph watched as the car passed directly by them. There, looking out the passenger side window, was Charlotte. He locked eyes with her as the car drove slowly by, Ralph thrusting his hips forward and tugging on Tammy's hair as he did. A few seconds later, while watching the receding taillights, Ralph grunted and filled Tammy's mouth with his first load of come of the night.\n\n\"Holy shit! Did you see that?\" Jeff exclaimed as he finally pulled onto the road in front of the bar and sped up.\n\n\"See what?\" Charlotte asked, feigning ignorance.\n\n\"That big guy from the cellar was being blown right there in the parking lot!\" Jeff said with a note of jealousy in his voice. There was no way Charlotte would do that for him where anyone could see it. He knew she would leave him in a heartbeat if he treated her as anything but a lady. His cock grew hard at the thought of actually forcing her to her knees to worship his cock like that fat cow was doing back in the parking lot for that guy. Instead he knew that if he wanted down and dirty sex he would have to find it elsewhere and not get caught.\n\n\"Some people have no class,\" Charlotte said imperiously. In truth, she would have liked Jeff to be more of a take charge type of guy. Their sex life, while active, left her unfulfilled more often than not. Her place was closer, but they had planned to stay the night at his house. Jeff surprised Charlotte by pulling up in front of her apartment.\n\nShe was glad to be home. She hated the honky-tonk bar. It was loud and dirty and she would rather have spent a night at home watching an old movie. Jeff, though, had been adamant. He had wanted to go out with his friends and he had wanted her to come with him. For Jeff, it was all about being seen as the leader of the pack. He had come from old money, went to the right Ivy League schools, drove the right car, had his own house in a nice suburb and, as he told her more than once, had the prettiest girlfriend in the valley. Charlotte knew he was a catch and felt she should be happy, but more often than not she just felt like an accessory to Jeff's life. Like his car. She felt she was just an arm decoration. Or she would, if he ever truly touched her in public.\n\nJeff hustled her out of the car and up the stairs to her small apartment. Once inside he wasted no time dragging her into the bedroom. He hadn't kissed her or shown any affection as he quickly began to strip, showing he was already rock hard. \"Well,\" she thought to herself, \"she had wanted him to be more a take charge sort of guy.\" She began to remove her own jeans and blouse as he lay on the bed stroking his cock.\n\n\"Suck my cock, Charlotte. Please?\" He had almost whined it as she leaned in to kiss him, and the small amount of credit she had given him for taking charge evaporated. Sighing, she moved down his body, not even attempting all those fluttery kisses along his torso that her college boyfriend had loved and reveled in. She just knelt between his legs and got to work as he moaned, \"Oh yeah, just like that.\"\n\nEach of them were lost in their thoughts on the scene in the parking lot, as with practiced skill Charlotte brought him off quickly. She crawled up beside him and lay back on her pillow. They did not touch or speak, the room filling with silence and the sound of their breathing. Charlotte hoped it would be her turn now, but as the seconds ticked by she realized that Jeff had no intention of continuing. She had hoped for some foreplay that would lead to Jeff regaining his erection and giving her a good fucking, but once again she felt let down. A few minutes later, she heard him snoring lightly, and she rolled over, turning her back to him and eventually falling into a fitful sleep.\n\n<center>* * * * *</center>\n\nTammy was on her knees, bent over forward and grasping the headboard with both hands as Ralph pounded into her from behind. She felt completely full of his big cock, and it was hitting her in just the right spot with every stroke. Normally very vocal during sex, Tammy was even more animated when Ralph fucked her. If the early morning light hadn't woken the neighbors, the sounds of Tammy screaming and moaning certainly did. As she came down the home stretch, she buried her face into the pillow as she exploded into orgasm, and Ralph followed shortly thereafter.\n\nA short time later, Tammy lay beside Ralph, her head on his shoulder, finally able to catch her breath.\n\n\"Where the hell did you learn to fuck like that, Ralph? It's ridiculous.\"\n\n\"Ridiculous?\"\n\n\"Yes. Ridiculous. I lost count of how many times you made me come.\"\n\n\"You didn't seem to mind much,\" replied Ralph with a smile.\n\n\"Oh, believe me. I don't mind, even though I'm sore as hell. It's a good thing I don't have to work today, because I don't think I could walk very well,\" Tammy said with a giggle. \n\n\"You're welcome,\" Ralph joked.\n\nTammy sat up and stretched, then got out of bed to make some coffee. Ralph lay back, staring at the ceiling, his mind wandering to the insanity at work. Suzette was going to tell them all about her stupid plan on Monday morning. He didn't want this to ruin his weekend, but that was wishful thinking. Pushing the thought away, his mind settled next on Charlotte. In his mind's eye, he could see her watching him as he had Tammy by the hair and fucked her mouth. He would have thought she'd have a look of shock and horror on her face. She didn't. He wasn't exactly sure what he'd seen, but it wasn't unpleasant. Ralph felt his cock stir as he thought about grabbing Charlotte by the hair and watching her suck his meaty cock.\n\nHis thoughts were interrupted by Tammy sitting on the bed, handing him a cup of coffee. \n\n\"I need to take a shower. I'm supposed to go shopping with my mother today. I wish you hadn't marked me up as much as you have, Ralph.\"\n\nHe shrugged and took a sip of coffee. \"You know I play rough, Tammy. Why don't you bring mom over later and I can show her a thing or two also?\" he said with a smirk.\n\nTammy rolled her eyes, getting up and walking into the bathroom. \n\nRalph took another sip of coffee, then returned his thoughts to Charlotte. Despite his distaste for her, he had to admit that he found her quite attractive. He wondered again about that look he had seen on her face as she rode by in the car. She was ordinarily demure and quiet, but her eyes showed him a hunger that surprised him. Lost in his thoughts, his hand found his cock and he slowly stroked himself. A few short minutes later his cock erupted, spurting come all over his abdomen. He managed to clean himself up, then got up and put on a pair of shorts. \n\nHe was putting bacon into a frying pan when Tammy came out of the bathroom wrapped in a towel.\n\n\"I'm gonna be late,\" she said. I need to get moving.\"\n\nRalph nodded and watched her get dressed as he tended to the bacon. She brushed her wet hair out, then quickly put on some makeup. She walked over to Ralph and gave him a kiss.\n\n\"Will I see you soon?\" she asked.\n\n\"Yeah. I have a lot of stuff to do this weekend. Maybe we can catch up one night during the week?\"\n\n\"I'd like that,\" said Tammy. \"I should be recovered enough by then,\" she said with a wink. She blew him a kiss and walked out the door, leaving Ralph with his thoughts and his bacon.\n\n<center>* * * * *</center>\n",
        "The bright sunlight streamed down onto the cool spring morning, awakening Charlotte early. Jeff arose and left her apartment shortly thereafter, suddenly announcing that he was going to be away for the rest of the weekend. In truth she was glad about that. They had little in common except their work, and she wondered once again why she stayed with him. Even as she had the thought she banished it. He was everything she aspired to be; rich, successful and popular, both professionally and personally.\n\nFeeling restless, she decided to go out for a drive and spend some time working on her journal. She had first started writing in it as an exercise at college, where her boyfriend had insisted she keep one. She smiled thinking of him. He had been her teacher, her mentor, and her lover, and had taught her more than just the science involved in viticulture and oenology. He had taught her about the passion of life, and finding the things she was passionate about.\n\nShe packed some apples and a couple of cookies into a small backpack and headed out the door. She drove south through the outskirts of the small town to where an open field bordered a creek that she had found when she had first moved here to work at the winery. She pulled to the side of the road and parked her car on the shoulder, just before the tiny bridge that passed over the small span of water. Grabbing her backpack, she climbed between the wooden bars of the fence and crossed the corner of the field to a weeping willow that beckoned her like an old friend.\n\nShe had gotten herself settled on the mossy bank and taken out her journal when she heard the whinny and smiled. She hadn't seen the old horse when she arrived. Taking an apple from her bag, she got up from the hidden spot that she favored and stepped back out into the sunshine. The old horse stomped his foot at her, causing her to laugh. \"I didn't forget you,\" she said softly while feeding the horse his apple and rubbing his nose.\n\n\"I'm sorry I haven't been down here for a while,\" she said as she stroked his long neck. She was rewarded with a snort and nuzzle at her shoulder. Running her fingers through his mane, she untangled the worst knots and gave him the attention he seemed to enjoy. She had been frightened by the big roan when she had first started coming to this spot and had brought him apples in an effort to bribe him into a pseudo friendship. She now realized how much she enjoyed their little ritual when she came down to the creek.\n\nThe horse's ears pricked up as if he heard something she couldn't and he turned his head. Charlotte had never seen an owner come to see the horse when she had been here, but as she patted his neck once more she had no doubt he was well looked after for an aging horse. The horse snorted and turned, moving away from her. Charlotte looked to see what had caught his attention, and she saw a small figure at the other end of the field. Not wanting to be accused of trespassing, she slipped back into the shadows and hoped she had not been seen. She went back to where she had left her things and quickly grabbed her backpack, wanting to head back to her car.\n\nShe could see the horse's owner jogging at a light pace toward her as she emerged from under the tree and headed toward her car. Turning as she maneuvered through the wooden posts of the fence, she saw the big man and the horse close the distance between them. As she looked with wide eyes, the man stopped in his tracks and the horse cantered happily toward her, leaning over the fence to nuzzle at her empty hand.\n\n\"I'm sorry,\" she began to say, \"I didn't mean any harm.\" Charlotte's mouth dropped open and her eyes grew wider still as she looked into the dark, brooding face of Ralph Watson. She backed up toward her car as he advanced. \"I just gave him an apple to let me sit near the creek,\" she tried to explain in a small frightened voice. \"I'm sorry,\" she said quickly, repeating herself and getting into her car and driving off. Ralph had not said a word.\n\n<center>* * * * *</center>\n\nRalph felt conflicting emotions as he watched the car pull away. This was his place, his escape from life at the winery and all that it signified. It was bad enough for his place to be violated, but by her? By Charlotte? It was as if fate was using him as a punching bag and enjoying every moment of it. His anger was softened just the slightest bit by replaying her interaction with Sir Charles in his mind. The affection she displayed was so out of character with the cold temperament she displayed at work. It was hard to believe that was the same woman he despised so much.\n\nHe realized something else about the encounter, too. Charlotte had taken his breath away. He hadn't even realized it was her at first. Dressed in jeans, a t-shirt and a cotton blouse that she wore as a jacket, her garb was quite uncharacteristic of the Charlotte that Ralph knew. She was wearing her long hair down, unusual for her, and the bright sunlight had shone off her curls, giving her an angel like appearance. She was beautiful, Ralph thought.\n\nFuck, he thought to himself as he guided Sir Charles toward the stables. Chuck, as Ralph affectionately referred to him, had been one of his father's investments. Like many of those investments, it was a bust. He had hoped the horse would have had a productive career as a thoroughbred and as a stud, but it didn't work out. The horse had ended up being a pet to Ralph, and one of the few things he was able to keep with his parent's passing. Ralph had tried to sell Sir Charles, but the horse had such limited value that, in the end, he decided to keep him. A big part of Ralph was happy there were no buyers, but it did require him to spend most weekends at the stables, working for the owners in exchange for boarding the horse. \n\nRalph wanted to spend some time grooming Chuck before he continued his chores at the stables. He was busy brushing the horse when he sensed someone nearby. Looking up, he noticed a familiar face watching as he worked.\n\n\"You work at my winery,\" Frank Price said, surprising Ralph that he'd recognized him.\n\nRalph nodded. \"Yeah. I work down in the cellars, Mr. Price.\"\n\nFrank nodded thoughtfully. \"What are you doing here at the stables? Do you work here too?\"\n\n\"I do on weekends,\" replied Ralph. \"Sir Charles here belongs to me, and I work as a stable hand on weekends in exchange for his boarding.\"\n\n\"Sir Charles? You're not Bill Watson's son, are you?\"\n\nRalph grimly nodded. \"I am. Sir Charles is pretty much all I have left of my parents, other than my memories.\"\n\n\"I'm so sorry,\" Frank offered. \"What a tragedy. I knew Bill had a son, but I never knew what became of him. Of you.\"\n\nRalph nodded, continuing to groom his horse. \n\n\"I've been considering adding a stable to the winery,\" Frank continued. \"Taking tour groups on a horse drawn carriage ride through the vineyards could be a real draw for us. No one else is really doing that around here.\"\n\n\"It sounds like a great idea. You could do that most of the year.\"\n\n\"That's what I've been thinking...what was your name again?\"\n\n\"Ralph.\"\n\n\"That's what I've been thinking, Ralph. I think it could attract customers to the winery that we might otherwise not get.\"\n\n\"If you decide to do it,\" noted Ralph, \"I'd be willing to do the same deal I have here. If you would board Sir Charles, I'd work the stables on weekends for you. I'd be able to see him more often if he were close by like that.\"\n\n\"I'll keep that in mind, Ralph,\" said Frank. He held out a hand to the big man, and Ralph wiped his hand on his jeans before shaking with Frank. \"I'm just going to poke around a bit before I head out, Okay?\"\n\nSure,\" replied Ralph, returning to his grooming of Sir Charles. \n\nRalph put the encounter with Charlotte out of his mind as best he could as he went on with his work, but it continued to gnaw at his subconscious mind. He didn't finish until the orange glow of the setting sun lit up the western sky, then quietly drove home in the deepening dusk. He arrived at his dark apartment, not bothering to turn on a light. He opened the refrigerator, the light illuminating his lumbering form as he searched for something that would whet his appetite. Seeing nothing of interest, Ralph reached for a beer, twisting open the top and taking a long swig as the fridge door swung closed and cast him into darkness. By memory, he made his way over to the couch and plopped down, sitting alone in the dark and drinking his beer. \n\n\"What a fucking life,\" he said to no one. \n\nHe briefly considered calling Tammy, but thought better of it. Fucking wasn't going to make him feel any better tonight, he thought. In fact, he might well end up hurting her if she were here. He needed a change, he realized, or he wasn't going to survive. Ralph stood, taking a long last pull from the beer bottle, and then hurled it across the room. The sound of a thud and the raining down of broken glass filled the room as the bottle shattered on the far wall.\n\nWith a grunt, Ralph walked into the bedroom and pulled off his boots. Not bothering to even get undressed, he flopped face down onto the bed, the springs squeaking under his weight. \"Fucking-A,\" he said, then pulled the pillow over his head and settled in for the night.\n\n<center>* * * * *</center>\n\nMonday morning came all too soon for the workers of Twisted Vines. The staff, all careful of the time, made their way to the lunchtime meeting in the large events rooms just before eleven. As they entered the large room, each gave their name and occupation and were given a table number at which to sit. Being a large award winning winery, there were nine tables, each with eight place settings. The seemingly random numbers given to the staff were actually designed to ensure that that no one clique was able to sit together. \n\nSuzette and her personal assistant had spent weeks devising a way to split the groups fairly in a way that would not be seen as providing favoritism to any one group, with the exception of the winemakers themselves. Their vast experience made them virtually irreplaceable. Even so, Suzette had ideas about that as well, but her husband would require some convincing. It was with a critical eye that she watched the confused staff members take their seats. For the most part, people seemed to be happy enough with their lunch companions, although she saw one or two trouble spots. She spoke quietly with her assistant, seeking the names of several individuals that appeared to be the most disruptive.\n\nHorrified beyond belief, Charlotte tried to disguise her dismay as she watched Ralph lumber towards their table. One look at his face told her he was not at all impressed with the situation either. As he took his seat, she immediately turned her gaze to the raised dais where Suzette seemed deep in conversation with her pretty blonde assistant. She turned to face her lunch companions. There was one other assistant winemaker, three cellar masters, and three cellar rats. She could name them all, but she knew very little about them as people.\n\nSuzette stood and approached the lectern on the dais and started her well-rehearsed spiel. \"Welcome everyone, to what I believe will be the beginning of a truly wonderful team building experience,\" she said, pausing to look around the room. \"Please take the time to get to know the people at your table, as it will be important later on. For now, we have devised a wonderful three course meal for you all to share. You will notice you have a clean skin bottle of wine on your tables. Your group challenge during the meal is for each table to come up with a name, a tag line, and for those of you feeling creative, pencils and paper have been provided to design your label. Enjoy,\" she said finally, spreading her arms and inviting them to eat. She observed during her little spiel the murmurs of discontent, once again noting the people who seemed the most disconcerted.\n\n\"One final note,\" Suzette said before stepping away. \"You may have noticed the absence of Mr. Whitehead today. He was in disagreement with my husband and I about this exercise. For that, and for several other reasons that I shall not get into here, Mr. Whitehead has been discharged of his responsibilities here at the winery. \n\n\"I assure each and every one of you that we are entirely serious about what we are doing here. You will either be a part of the solution, or you can take your issues elsewhere. It is not our intent to frighten you, but we do insist that you understand we are serious in our desires. Now please, enjoy your meals, and have fun with the first exercise.\"\n\nRalph recalled a conversation he had with Sam earlier that morning. If he wanted to keep his job, he was going to have to play along. He wished that he could just pack up and leave this fucking shithole of a place, but that wasn't an option. He supposed he would try to make the best of a bad situation, because he really had no other options. Hell, maybe he would surprise some of these assholes. It was clear they took him for a Neanderthal, but he was one hell of a lot smarter than any of them realized. Fucking assholes think they know everything about a person just by looking at him, he thought to himself. At that moment, it was lost on him that he did the exact same thing.\n\nJack Warner, took up the bottle and with smile and pronounced, \"Let the games begin!\" Charlotte couldn't help but giggle. She liked the other assistant she had been seated with and decided to ignore the hulk that sat brooding at her table. Jack was an amiable middle aged man who was happy to play host and lead the discussion, pooling everyone's ideas and cajoling people into talking. Charlotte was grateful. As much as she had tried over the last week to get to know names and be pleasant to the cellar workers, this was out of her comfort zone.\n\nTo her surprise Ralph was quite vocal as he expressed his views, \"White wine is the equivalent of cat piss usually, but I don't mind the Sauvignon Semillon blend. This one almost tastes like passion fruit.\"\n\n\"Excellent,\" Jack enthused, \"Anyone else get that?\"\n\n\"Well I was thinking tropical but passion fruit works now that I think about,\" one of the cellar masters agreed and there was a murmur of assent around the table. \n\n\"So Charlotte, you usually have a good palette. What do you think?\" Jack asked, trying to get her to take the lead with him.\n\n\"Well,\" she said cautiously, \"I have to agree with err.... Ralph,\" she said, peeking up at him with her big green eyes and quickly looking away again. \"Passion fruit and maybe something citrusy, like a hint of lime?\" She questioned the others at the table rather than dictating like Ralph had done. \"It reminds me of long hot summer days. It's very refreshing.\" She tried to avoid being scientific or seem dismissive in her appraisal by using the language of the winemakers, which might have gone over the other's heads. \"Does it say on the label the percentages and general statistics?\" She asked, wanting to know but not wanting to alienate the rest of the table.\n\nJack rattled off all of the information on the clean skin label, and to her surprise both the cellar masters and rats were quite knowledgeable on the subject of wines and their make-up. She had always considered that their job consisted of \"Here hold this\" or \"Clean that up\". Charlotte realized in that moment what a snob she truly had been. She sat back to listen with a new perspective to the other people at their table, only adding more detail when they had not understood the information that had been given on the label.\n\nFor his part, the brooding Ralph let himself get involved in something that challenged his mind rather than his muscles. He found he liked that the other people at the table seemed to listen to his ideas, noting that even the bitchy Charlotte seemed to pay attention to him. His memory held the picture of her as she had been on Saturday morning and it made him see her a little differently each time she spoke. He considered for the first time if Sam had been right about his prejudices toward her.\n\nThe entree and main meal came and went, and the group had decided on the name and the tagline. Jack gave every member of the table a piece of the remaining paper, asking them to draw a label during dessert. The completed labels were to be presented at the end of the luncheon. \n\nCharlotte worked quickly with the pencil, producing a classic label with the winery's coat of arms as the main focus. She glanced around the table, seeing several others had produced basic labels with drawings of grapes or vineyards. She could not quite see what Ralph was up to, as his massive hand blocked her view of the paper he was drawing on. His fingers moved with surprising dexterity. They looked like sausages, and yet the movements were graceful; almost elegant. A short time later, Ralph moved his hand away and Charlotte stared in surprise.\n\n\"Wow, that's really good,\" she blurted out, without even thinking of who she was speaking to. Ralph looked up at her and actually blushed a little. He had drawn a perfect rendering of the castle and the vineyards along one side of it. It was far and away the best label any of them had created. In fact, each of the others at the table appeared to be shocked that this beast could produce such a work of art.\n\nRalph diverted his attention to his dessert plate, slowly taking forkfuls and avoiding eye contact with the others. A short time later, Emily came around to each table and collected the papers and wine labels. She delivered them to Suzette, who then conferred with the winemakers. After they had gone through every offering and each had nodded their approval, Suzette grabbed the winner and approached the lectern. \n\n\"It seems we have a unanimous choice,\" she said with a smile. \"Congratulations to table number eight,\" she said as she held up the label that Ralph had produced. \"This was extraordinary work, from the name chosen, to the sketch of the winery, and even to the font chosen, and, impressively, written by hand.\"\n\nThere was applause throughout the room, as each of the other teams could see that the label was incredible. They looked at the team members at table eight, but most passed over Ralph as if he wasn't even sitting there with the others. Ralph's teammates, however, eyed him carefully, wondering what other secrets this hulk of a man hid inside himself.\n\nSuzette cleared her throat in order to get everyone's attention. \"We will be having a team building exercise each afternoon over the next several weeks. In addition, you will all be spending next weekend here at the castle. As I indicated the other day, anyone that has a personal issue that would prevent them from being here must see me immediately.\" \n\nThere was a rush of whispered voices throughout the room, and several audible moans. Suzette wasn't expecting them all to be happy about giving up a weekend, so she ignored the protests. \"Tomorrow, each of you will pair up with another person. In the morning, you will work alongside that person, observing and assisting them in their daily duties. In the afternoon, they will work with you doing the same. I think it's important that each of you has a better understanding what your coworkers do on a daily basis. Emily is handing out a sheet to each table that will list the pairings for tomorrow.\"\n\nCharlotte gazed in shock at the paper in her now trembling hand. She passed it along to the person to her right, then looked up at the dais table, catching the eye of Stuart Gresham. He nodded knowingly and gave her a small smile. She had specifically told Stuart that she preferred to avoid working with Ralph, and yet they had immediately paired her up with him. Obviously, Stuart had informed Suzette of her wishes. She now wondered if Suzette considered her one of the problem employees at the winery.",
        "Ralph glanced at the paper with feigned indifference. He wasn't at all shocked to be paired up with Charlotte. Since the death of his parents, Ralph had come to expect the worst. He had yet to consider that his mood and demeanor may well have been what delivered problems to his doorstep, but he seemed to be on the verge of learning just that. \n\nWith lunch finished and her concerns about Suzette still lingering, Charlotte walked down a set of stone steps along with her coworkers, headed down to the cellars. She had sought out Ralph and walked beside him. Nervously, she spoke to the beast.\n\n\"I like to get in early and get jump on the day,\" she said to him. \"Would you like to join me, or should I just meet you in the foyer at your normal starting time?\"\n\nRalph glanced over at Charlotte, noticing for the first time her captivating green eyes. \"I don't start before eight,\" he replied. \"I'll meet you in the foyer.\"\n\nCharlotte nodded, breathing a small sigh of relief. She felt she had to ask, but was quite nervous about the prospect of being alone in the cellars with Ralph. She turned to say something else, but her heel caught on a jagged edge of stone on the stairway and she started to fall forward, about to tumble down the stairs. In an instant, and in a single fluid motion, Ralph's hands shot out, grabbing Charlotte around the waist and effortlessly righting her on her feet. He didn't release her until she had regained her balance and composure.\n\n\"Thank you, Ralph. I guess I really shouldn't wear heels like this to work in the castle. I just thought with the meeting and all,\" she said, trailing off.\n\nThe big man nodded at her, but didn't say anything. In his head, he thought that although those heels were foolish to work in, they certainly did make Charlotte's legs look quite lovely. Quite lovely indeed.\n\nLater, down in the cool cellar, Charlotte replayed the incident in her mind. It was as if she could still feel Ralph's strong hands wrapped around her trim waist, and how easily he had picked her up. It frightened her, but at the same time, sent a little thrill through her body. Checking the temperature on the wall thermometer, Charlotte wondered why it felt so warm down in the cellar all of a sudden.\n\n<center>* * * * *</center>\n\nCharlotte had little time to check her barrels and the cellar documentation about the fermentation process for each before having to return to her office. The lunchtime team building exercise had gone way past mid-afternoon, and being in such close proximity to the dark brooding gaze of Ralph still gave her the creeps while she worked in the cellar. It was as if she could feel those deep brown eyes penetrating through her back as she worked, but each time she turned around he seemed to be busy with his tasks. \"God,\" She berated herself, \"It's not all about you.\" She put away the folder of charts and started towards the stairs, glancing around casually as she walked.\n\n\"Don't trip on your way up,\" a cheerful voice called out to her. She turned, half expecting to see Ralph, but instead a smiling Sam stood there watching her while nodding his head as she acknowledged him. \"Ralph will carry you up if you need him to,\" he chuckled, which caused the huge man beside him to glare at him with an angry expression.\n\n\"She's got two legs,\" he grumbled in a deep baritone.\n\n\"I'm sure I'll be fine, unless you'd like to walk with me and make sure for yourself, Sam?\" she asked playfully. Charlotte thought this was an opportunity to show that she was approachable. She hated to think that Suzette thought her one of staff members causing the problems.\n\n\"Shit! Don't ask him, he'll talk your ear off before you reach the top. I'll do it,\" a third man volunteered, making Charlotte rifle through all the names she had memorized the prior week before coming up with one she hoped was right.\n\n\"Oh truly, I'll be just fine. I was only teasing Sam because, well, he started it,\" she said with a genuine laugh in her voice. \"Thank you for the kind offer though... Mark,\" she said tentatively, happy to see him smile in response. \"I'll see you all tomorrow,\" she said as she moved quickly up the stairs and out of sight.\n\n\"Not quite the stuck-up bitch you told me about, Ralph,\" Mark said easily. As the newest cellar rat, he had been surprised that she even knew his name and gave her credit for stopping and joking with them for a moment.\n\nYou haven't been here long enough to know,\" Ralph grumbled, but he had to admit he had just seen a different side to the woman. He considered how small her waist was as his arm went around her when he had caught her. He had not realized just how dainty she was. In fact, she had felt so light he wasn't sure if he had managed to catch her at all.\n\n\"Why is she seeing us all tomorrow?\" Nick asked curiously.\n\n\"Didn't you hear?\" Sam chuckled, stepping back out of the huge man's reach. \"Ralph got his dream girl as a partner!\" The thundering look of disgust Ralph gave their laughter immediately silenced the comments that should have come following that announcement. Quietly snickering to themselves, the men got back to work. They continued chatting about their own partners for the following day as the last of the afternoon waned. Nick and Mark had both been paired with Cellar Masters but Sam had been paired with a winemaker's assistant as well, Charlotte's friend Lincoln Hayes.\n\n<center>* * * * *</center>\n\nOnce back in the friendly confines of her office, Charlotte plopped into her chair and let out a deep sigh. Lincoln was busy tasting and testing the several dozen samples he had drawn earlier. He meticulously documented the results on the computer located on the testing workstation. \n\n\"You look happy,\" he joked.\n\nCharlotte looked at him and rolled her eyes. \"I'm trying to figure out what I'm going to do with my partner tomorrow,\" she said. \"I'm behind on my testing, so I think I'm going to have to do some of that. But bringing him up here...I don't know.\"\n\n\"You drew Ralph, didn't you?\" Lincoln asked.\n\n\"Yes. Lucky me.\"\n\n\"And you're going to bring him up here? Talk about a bull in a china shop. Are you sure there isn't stuff you can do downstairs with him? Like breaking rocks apart or something?\"\n\n\"Funny. We'll gather samples first. But if I don't get this testing done and anything goes wrong, Stuart will have my head.\"\n\n\"Well, good luck with that. I'm working the cellar with Sam the first half the day, so by the time I get up here, you two will be together down in the dungeons,\" snickered Lincoln. \"You think he lives down there somewhere? Maybe they just throw some raw meat to him a couple times each day?\"\n\n\"You're really a comedian, Lincoln. It's good to know that you can laugh at my expense.\"\n\n\"Yeah, well. If we can't laugh about this, we'll be forced to take it seriously.\"\n\nCharlotte didn't reply, and went about planning what she and Ralph would do the next day. She was taking it very seriously. Suzette had made it clear that she expected them to work together, and she felt as if there was already a mark against her. Charlotte had no intention of failing over the next few weeks.\n\nAt the end of the day, Charlotte packed up and headed out to the parking lot to go home. She was opening her car door when a large figure approached from between the cars.\n\n\"Charlotte.\"\n\nStartled, she let out a little yelp and jumped, turning toward the voice. Ralph was standing near the rear of her car, an amused smile on his face.\n\n\"If you're going to work with me tomorrow, I expect you to be appropriately dressed. I want you in jeans and a t-shirt that you aren't afraid to get dirty. Wear work boots if you have them, or at least a good pair of athletic shoes. If you come in heels, I'll have you work barefoot, understand?\"\n\nCharlotte cast her eyes down to the ground and shook her head up and down. \"Yes, I'll make sure I'm dressed the right way,\" she said.\n\n\"Good,\" said Ralph as he turned and walked away.\n\nCharlotte watched him as he went, her tummy doing a little flip. She was quite nervous, but was determined to make this work. She got into her car and headed off for home. She was cooking dinner for Jeff, and wanted to get started soon. She knew she'd need a good night's sleep.\n\nCharlotte and Jeff were finishing up the last of their dinner of grilled sirloin steak, asparagus and baked potatoes. Jeff was whining about his partner for the next day. He was paired up with April Barnett, a woman that had been at the winery for a number of years. April was a lesbian of the butch variety, wearing her dark hair quite short. In some ways, she looked like a miniature female version of Ralph. \n\n\"I mean, really. How the hell is a woman named April a dyke?\" asked Jeff. \"It's almost like a joke.\"\n\n\"Do you think they knew that when they named her, Jeff?\" asked Charlotte with exasperation.\n\n\"Whatever. This is just such bullshit,\" Jeff complained. He went on bitching and moaning as Charlotte cleaned up and loaded the dishwasher. Once finished, she took Jeff by the hand and guided him into the bedroom. Charlotte felt needy, but she also wanted to make an early night of it. Jeff was still talking as she undressed in front of him.\n\nDisrobing, Jeff moved the conversation to Ralph. \"Well, at least I don't have to work with the beast like you do,\" he said. He climbed onto the bed and lay on his back, staring at the ceiling with a faraway look in his eyes. \"I still can't believe we saw him standing there in that parking lot and getting a blow job,\" Jeff continued. His cock was stiffening as he spoke. Charlotte looked down at it, considering her need. She wanted a good fucking, and even more so, she couldn't bear to listen to Jeff another minute.\n\n\"Please Jeff. Could you just shut up and fuck me?\" she asked. She lay down next to him and he rolled over on top of her and fiddled around with his cock until he was inside her. He didn't even bother trying to kiss her, but rather buried his face in her neck. He was lost in the memory of the blond bimbo blowing the beast in the parking lot. Charlotte was just beginning to get warmed up when she heard Jeff grunt, and with a few more thrusts, he came inside her. He rolled off and lay beside her, breathing heavily. Charlotte lay staring at the ceiling, feeling unfulfilled and unhappy. Jeff got up to pee, and in that fleeting moment, Charlotte had a thought that Ralph would not leave her bed until he had turned her inside out. She pushed the thought away, getting up and putting on her robe. She went into the kitchen for a drink of water and waited for Jeff to finish in the bathroom. \n\nCharlotte was relieved when Jeff decided to go home for the night. She removed her make-up and brushed her teeth, then dropped into bed, falling asleep quickly. Much later, Charlotte dreamed that she was deep in the cellars of the castle, working in a dark corner when suddenly Ralph appeared in front of her. He had startled her and before she could say a word, had grabbed her by the hair and tilted her head back and up toward his. He leaned forward and kissed her roughly, his tongue invading her mouth as he did. Charlotte put a hand to his muscular shoulder and tried to push him away, but his kisses were having an effect on her. She grabbed the material of his t-shirt sleeve and pulled at it, scared and angry and something else too. \n\nThe incessant beeping woke Charlotte and she smacked the top of the alarm clock, silencing it. She lay there on her back, a hand to her chest, breathing heavily and quite aware of the throbbing feeling in her pussy. She stayed there until she regained her composure, then got up to prepare for the day.\n\nOnce she had gotten ready, Charlotte stood before the mirror as part of her daily ritual, examining how she looked. The green t-shirt she wore brought her eyes out, and her jeans hugged every curve. Even so, they were quite comfortable and she was sure that she would have no issues working in them. As instructed, she had on a comfortable pair of sneakers. She wished she had work boots, but had to settle for these instead.\n\nShe grabbed her bag and headed out the door, nervously driving to work. She arrived only ten minutes early, and impatiently waited in the foyer for Ralph to arrive. Several minutes later, he filled up the entryway, searching the now crowded area for her. Spotting her, he looked at her up and down, gazing long enough to make Charlotte blush bright red. He walked over to where she was standing.\n\n\"I'm glad you followed my instructions,\" he said.\n\nCharlotte felt pleased, and gave him a little smile. \"I figured I'd better listen to you, not really knowing what to expect.\"\n\nLooking at her body once more, Ralph nodded. \"Should we get started?\" he asked her.\n\n\"Oh, yes.\" Said Charlotte. \"Let me start this way. I don't know that we have ever really been formally introduced,\" she said to him. \"My name is Charlotte Simons,\" she said as she held out a hand to him.\n\nRalph reached out and took her hand, enveloping it in his huge paw. \"Ralph Watson.\"\n\nThey shook somewhat theatrically, and she gave him a shy smile.\n\n\"I thought we would start in the cellar,\" she said, turning away and heading for the stairs. She was blushing again, wondering how such big, strong hands could feel so gentle when holding hers. Pushing the thought away, Charlotte focused on her plan for the day.\n\nThey descended the stone stairs into the dark cool cellars. Ralph stayed close to Charlotte, watching her carefully. His sleep had been unsettled the night before as he dreamt of her stumbling again and his arm winding around her waist, pulling her body up against his. He shook his head, concentrating on their foot falls and trying to get the dreams of the night before from his mind. They had work to do and he had every intention of being professional, despite his status as a cellar rat.\n\nEntering the cellar, Charlotte immediately went to the shelves that stored the paraphernalia of the science of winemaking, choosing several pipettes with which to draw samples from the vats. Without being asked, Ralph took them from her hands, startling her. She felt the need to explain exactly what she was doing, and why this morning. As they approached the three large vats that had been sitting for almost a month, she spoke with quiet authority.\n\n\"These vats have been fermenting for a few weeks now, and first and foremost we need to test for and adjust the original sugar levels in the musts. Higher sugar levels mean more alcohol and possibly some unfermented sugar in the finished wine; too high, and the wine might not ferment at all. However, if the grapes were picked too soon, additional sugar might be necessary to achieve a better alcohol level. On the other hand, high-sugar musts might have to be diluted a little with acidulated water to lower sugar. It might reduce flavor intensity a tad, but at least the wine will ferment -- and you get a few extra bottles.\" She turned and smiled at him, noting that he did not look impressed.\n\n\"I'm not one of your little prot\u00e9g\u00e9's,\" Ralph grumbled. \"There's no need to patronize me with a lecture. I know why the barrels are tested. I've worked here fucking long enough.\"\n\n\"Oh,\" Charlotte said, a look of surprise evident in her bright green eyes as she looked up at Ralph. \"Do you know how to use these then?\" She pointed at the pipettes he held for her.\n\n\"Of course,\" he grunted. \n\n\"Good, then you can collect the samples for me,\" she said surprising him. \"I find it hard to reach sometimes, especially if the barrel needs topping off.\" In truth she had not liked the thought of climbing up the makeshift stairs beside the big vats and stretching over the top with Ralph right behind her looking at her ass as she struggled with the rubber bung that sealed the testing hole.\n\n\"They don't let rats do that. You don't let rats do that,\" he said, confused by her statement. He looked down at her, and standing this close to the woman while she was not wearing the heels that normally clattered on the cellar's slate floors he noticed once again just how diminutive she was.\n\n\"We're supposed to be working together today, or were you just planning on standing around and watching me all morning?\" she asked with tone in her voice, making the hackles on Ralph's neck rise. This was the bitch he knew. The condescending lecturing bitch who looked down her nose at him. Well two could play that game. Just wait until she had to help him with his work this afternoon, he grunted, and turned walking toward the barrels he knew she would be testing.\n\nAlmost expertly, he drew the samples she needed, quite enjoying being the one to say, \"Here hold this.\" Much to his annoyance Charlotte did not seem to be bothered by his dour mood and barked words.\n\nCharlotte seethed inside as he treated her with such off-handedness, barking orders at her rather than asking her to hold the samples he had drawn. On the outside though, she kept a pleasant smile on her face and did as he asked. She was determined not to be seen as one of the problematic people in the winery, so she told herself to keep smiling. It was only one day, and it would be over soon enough.\n\nShe led the way up to the lab where she could tell Ralph was out of his element, though perhaps not as much as she might have thought. No lab coats came close to fitting his massive form so he remained dressed as he was, looking all the more out of place. This time she asked what he knew before explaining the tests they were running and how she collated the data on spread sheets for the winemaker to view and make decisions on. Stuart was a very exacting man, which is why he rarely took on assistants and he relied on them to work with absolute precision and alert him to any anomalies immediately.\n\nOne of the samples had not tested well and she ran the test three times in total. She checked and rechecked the data and asked Ralph to use her computer to look up past runs with the same blend of grapes to compare it to. In the end she had to call Stuart.\n\nPrinting out the extra data and gathering the test results and the pipette in question, Charlotte hurried down to the cellar again with Ralph walking after her feeling a bit confused by her obvious anxiety of one simple sample. Stuart was waiting for them, standing with his hands on his hips as she scooted to a stop before him. Ralph hung back, seeing the look on Stuart's face but staying within earshot, curious as to what was truly going on.\n\nMoving to a bench, Charlotte spread out the data and charts and holding up the pipette as she explained the testing results. From his vantage point, Ralph could see that Stuart was angry at Charlotte for something that, in his mind, was beyond her control. Lincoln, who happened to be in the cellar with Sam as they came back in from lunch, wandered over to look at what had brought Stuart down to the cellar.\n\nSeeing the problem would take some time to work out, he suggested that he stay and rerun the test with Stuart, freeing Charlotte to go with Ralph to serve the other half of her day in the cellar. She had tried to protest, but under the command of the winemaker she finally turned to walk away. As she left, Stuart called to her, and as he looked her up and down he remarked, \"I certainly hope that isn't a new dress code you are adopting.\"\n\nCharlotte let out a sigh as she followed Ralph across the cellar floor. He began to climb the stairs, prompting her to call out to him.\n\n\"Where are you going?\"\n\n\"It's lunchtime,\" Ralph replied.\n\n\"Oh.\" Recalling Lincoln's pun about the raw meat, Charlotte let out a little giggle.\n\n\"What's so funny?\" asked Ralph with irritation in his voice.\n\nCharlotte was now following Ralph up the stairs. \"Nothing. I was just surprised the morning went by so quickly. Where are we going for lunch?\"\n\nRalph was taken aback by Charlotte inviting herself to lunch with him. He glanced over his shoulder at her and shrugged. \"I was going to go for barbeque at that place up the road. It's kind of a hole in the wall, but they have the best pulled pork sandwich I've ever had.\"",
        "\"Sounds good,\" she replied with a smile.\n\nAs they reached the main floor, Ralph turned to Charlotte. \"We don't officially switch places until the afternoon. Why don't you drive us to lunch?\"\n\n\"Oh. Sure. Let me just go upstairs and get my keys,\" said Charlotte as she started up the next flight of stairs.\n\nRalph breathed a sigh of relief, feeling as if he had dodged a bullet. There was no way he wanted to have her join him in that filthy wreck that he rode around in. She thought little enough of him as it was. He didn't need to add to that. A minute later, Charlotte was back down the stairs, leading him to her car in the parking lot. Ralph walked a few feet behind her, admiring her shapely little ass as she walked. Charlotte caught a glimpse of him watching her as she glanced over her shoulder, and she blushed and broke into a little smile. She nearly giggled, picturing her being Faye Wray to his King Kong.\n\nCharlotte unlocked the doors with her key fob, and the two of them got into the car. She drove a mid-sized Ford Fusion which felt quite roomy to her. However, Ralph seemed to consume the empty space in the car, making her feel as if he were nearly on top of her. Suddenly feeling quite nervous, she started to drive. It struck her that her nervousness was no longer a fear of him. Not exactly, anyway. His presence was instead giving her butterflies in her tummy. Recalling her early morning dream, she wondered what it would really be like to be kissed and manhandled by the beast. Blushing yet again, she maneuvered the car into a parking spot and opened her door and got out.\n\nThey walked into the busy restaurant and got in line. There was a menu board written in chalk behind the ordering counter, and Charlotte stood looking at it, trying to decide what she might want. \n\n\"I'm not sure what I want to get,\" she said to Ralph.\n\n\"You're getting the pulled pork,\" he replied as he walked up to the counter. \n\n\"Can I help y'all?\" the counter person asked.\n\n\"I want two of the pulled pork sandwiches, two sides of fried pickle chips and baked beans, and two medium sweet teas.\"\n\n\"That will be sixteen eighty-two, sir.\"\n\nRalph handed the clerk a twenty, waving Charlotte away as she offered to pay. \"My treat today. You go find us a seat at one of those picnic tables outside.\"\n\n\"Okay. Thank you, Ralph,\" she said, then headed for the side door leading out to the tables. She found a table with room for them and sat, waiting for him to bring the food. She was thinking about how decisive he had been with the ordering. She chuckled to herself, thinking that Jeff would be more of a girl about ordering than she. They would have stood there for a half hour trying to decide.\n\nRalph arrived at the table, removing the food from the tray and placing it in front of each of them. He walked over and dropped the tray into a rack near the garbage pails, then returned to the table and sat down across from Charlotte. \n\n\"Dig in,\" he said to her with a grin.\n\n\"Oh my God. There is no way I'm going to be able to eat all of this,\" she moaned.\n\n\"You'd better. You're going to need the energy this afternoon. We have a lot of work to do.\"\n\nCharlotte demurely bit into her sandwich, struggling to stay as neat as possible. In contrast, Ralph took a huge, messy bite of his. After he chewed, he looked at her and chuckled.\n\n\"It's barbeque, Charlie. You're supposed to get dirty eating it.\"\n\nShe frowned at him, wiping her mouth with a napkin. \"Please don't call me that. I had to listen to that all throughout school. I really don't care for it.\"\n\nHe gave her an evil grin, filing that fact away for future reference. \"Hey, at least your name isn't slang for puking. Imagine going through that for your entire life?\"\n\n\"Did kids make fun of you growing up?\" she asked.\n\n\"Not to my face. I think they were afraid of me. Kind of how you are afraid of me, you know?\"\n\nCharlotte blushed. \"I...I'm not afraid of you, Ralph. Wh...why would you say that?\" she stammered.\n\n\"It's okay. I'm used to it. Sometimes I even like it. It makes people keep their distance.\"\n\n\"Oh,\" replied Charlotte, looking down. She took another bite of her sandwich, then looked up at him with her big green eyes. He was watching her with interest. \"Can you tell me about your horse?\"\n\nRalph paused, popping a couple of the pickle chips into his mouth before answering. \"Sir Charles?\"\n\n\"Is that his name? I like it,\" Charlotte said with a smile.\n\n\"Just don't call him Charlie,\" Ralph laughed.\n\nCharlotte giggled and rolled her eyes. \"I never pegged you for a wiseass.\"\n\nRalph shrugged. \"My dad bought Sir Charles when I was a kid. He had a good pedigree, and was supposed to be a champion racehorse. That never happened, so he ended up being my pet.\"\n\n\"Did your dad ever buy any other horses?\"\n\n\"No. My parents died about ten years ago. Car accident.\"\n\nCharlotte put a hand to her mouth in shock. \"I'm so sorry, Ralph. I had no idea.\"\n\n\"Yeah, well. There's a reason I'm stuck with such an illustrious career as a cellar rat.\"\n\nCharlotte sat there in silence, finishing her lunch and feeling angry with herself. It was quite easy to judge people when you knew nothing about them. She really needed to keep that in mind.\n\nThey finished up in relative quiet, as neither felt the urge to break the awkward silence that ensued. Then they headed back to the winery. After a quick trip to the restroom, they met in the foyer and went back down to the cellar together. Ralph checked in with his cellar master, then returned to Charlotte.\n\n\"We have a couple jobs this afternoon. We need to move some barrels over to the filtration room, and then take some empties back out and clean them.\"\n\n\"Okay. How do we move them?\"\n\n\"We move them around with a forklift, but we will have to move some of the empties by hand. C'mon over here and get into the forklift. My turn to drive now.\"\n\nCharlotte followed Ralph, getting into the cab of the forklift next to him. It was close quarters, and she found herself pressed up against him in the small space. It made her breathe funny as she thought about how rock solid his body felt against hers. Ralph backed up the vehicle, then expertly guided it in front of a rack full of barrels. He guided the forklift into place and fiddled with the mechanism, and a moment later they were moving the rack into the filtration room. They made several trips into the room, and after the last they got out of the forklift to deal with empties. \n\nApril was busy showing Jeff how to pump wine from full barrels into the filtration tanks. Once the barrel she had been working on was empty, she asked Jeff to move it to a rack where the empties were being gathered. Jeff was struggling to move the empty barrel, prompting April to nudge him out of the way. \"For Christ's sake, put some muscle into it,\" she snapped. She grabbed hold of the barrel and lifted it up over her head, sliding it into an empty spot on the top of a rack.\n\nJeff blushed, and looked quite displeased when he saw Ralph snickering at him. Charlotte turned her back to him, bringing a hand to her mouth to conceal a bit of a smile. Ralph effortlessly added a few more empties to the rack, filling it to capacity. He and Charlotte got back into the forklift, capturing the rack full of barrels and moving it over to the cleaning room.\n\n\"How much do those barrels weigh?\" Charlotte asked him.\n\n\"About one hundred twenty pounds when new. Once they've been used, they weigh more because the fluid soaks into the wood.\"\n\n\"There's no way I'll be able to lift those,\" she said.\n\n\"I'll take them down, and I'll show you how to roll them. See those drains in the floor? We want them close to those.\"\n\nCharlotte nodded her head in understanding. Ralph took several barrels down off the rack, then stood behind Charlotte. Bringing his arms around her, he took her hands and placed them on either side of the rim of the barrel. He tilted the barrel back towards her.\n\n\"When you tilt the barrel enough, it will reach a point where it will seem weightless, with each half of the barrel counterbalancing against the other. Do you feel that now?\" he asked her, releasing her hands.\n\n\"Yes. Wow. It's like it weighs nothing.\"\n\nReturning his hands to hers, he started to turn the barrel, making it roll. \"You move it like this, just rolling it, but you need to move slowly enough to keep it balanced. Understand?\"\n\nCharlotte nodded. She was listening and watching, but she was also acutely aware that she could feel his breath on the side of her neck as he spoke. It caused her heart speed up, and made her feel flushed.\n\nRalph stepped back as the overwhelming urge to taste her neck rose up in him and watched as Charlotte rolled the barrel over to the drain. \n\n\"Good. You did really well. Let's get a bunch over there, then we can start to clean them.\"\n\nCharlotte slowly rolled the barrels as Ralph grabbed them two at a time and carried them over. She couldn't help but notice the muscles in his forearms as he moved the barrels around as if they were empty plastic trash cans. Once they had moved a couple dozen barrels, Ralph picked up some odd looking thing with two hoses attached to it.\n\n\"This is what we'll clean the barrels with, Char. We connect this to the top of the barrel, and this hose fills the barrel with hot water. The other hose is the drain hose. See how it is relatively short? We lay this down by one of the drains. Once the barrel is full, we flip this other switch on the pump, and it will allow water to run out of the drain hose into the drain on the floor. We keep the water running until the drain water runs clear. We'll empty the barrel then, and move it to that other rack over there. Got it?\"\n\n\"Yeah. I'm ready,\" Charlotte replied with a smile. It wasn't lost on her that Ralph had called her Char. It unsettled her that she didn't mind. In fact, it made her smile inside. He wasn't at all like the man she had pegged him as. The image of her old neighbor flittered through her mind and she wondered how she could have ever thought they were similar.\n\nThey worked through the afternoon, once again falling into long awkward silences between Charlotte's questions and Ralphs comments on how she was doing. Ralph was surprised that she had not acted like the princess he thought of her as. By the time they had finished, she had been splashed all over by the dregs of the lees that had lined the dirty barrels. Her diminutive height had not given her the reach of the mostly male cellar rats, and splashes that normally failed to reach even the legs of their jeans had soaked her. \n\nThe final straw had been when she had accidently knocked the hose filling the barrel, and it had reared up in an uncompromising arc, hitting her in the face and making her cry out in both shock and dismay. She just stood letting the water rush around her feet, feeling totally out of her depth doing this job. She didn't have the size or strength to be able to manage the equipment.\n\nRalph held back a chuckle as he picked up the splashing hose and inserted it back into the barrel. \"There are some towels over by the lockers,\" he mumbled, trying to hold back his mirth and nodding his head in the direction of the lockers and adjoining bathrooms. \"Go clean up. I'll finish up here. Most of it is done anyway.\"\n\nShe felt so dejected at that point she didn't even considering arguing with him and walked off, her shoes sloshing with the water that had filled them. Taking a greying towel she walked into the bathroom and looked into the mirror, glad that Stuart couldn't see her now. He would definitely not approve of the drowned rat look she had going on. She gave a derisive half laugh. At least she had managed to be a rat of some description. Charlotte removed her shoes and socks, dumping them into the grimy basin. She then stripped off her jeans, trying to ring some of the water from them.\n\nShe spent time trying without much success to fix her hair and repair what was left of her makeup so she didn't look quite so bad. Looking at her watch, she realized that the afternoon had gone by and that she had probably delayed Ralph by making the seemingly simple job of cleaning barrels take twice as long as usual. Having done as much as she could, she tried to drag on her wet jeans but found it almost impossible. She went to look for an old lab coat the assistants sometimes left down here in case of spillages and found several in the cupboard beneath the sink. Choosing the larger one, she wrapped it around her half-naked body like a dress and buttoned it up. Discarding the wine stained socks, she slipped on the shoes she would have to throw away once she got home. Leaving the bathroom, she could see April, who had been with Jeff, on the other side of the cellar helping Ralph move the barrels back onto a rack and clean up the area.\n\n\"Oh man. I wish I could have seen it,\" April laughed loudly. She proceeded to speak with a high voice and an affected pose. \"I'm meant to be a princess. Seriously I don't do this shit!\" then burst out laughing again as Ralph joined her in making fun of Charlotte with his loud chuckle. In that moment all of the good will she had felt towards Ralph throughout the day evaporated and she straightened her back, determined to be pleasant and get this day over and done with quickly.\n\n\"We're about done here,\" Ralph said with a half-smile, noticing her standing there with her jeans and shirt draped over her arm and wearing only a lab coat.\n\n\"Good,\" Charlotte said abruptly, approaching a barrel and attempting to tilt it as Ralph had shown her earlier.\n\n\"Leave it,\" Ralph said, taking the barrel from her. \"You did well. I can finish this.\" Truthfully she was grateful, but she hated that they had been laughing at her and she felt so foolish so she bristled and snapped.\n\n\"I'm supposed to work with you,\" she said with an edge to her voice.\n\n\"Actually,\" Ralph said, clearly confused by the reappearance of her bitchy attitude, \"you were supposed to shadow me. So you have done that, you can go now.\" He turned his back as if dismissing her. \n\n\"Tell you what,\" she said in clipped tones. \"I'll leave when you leave, but I will do you a favor and stand over there and check the temperature on the barrels so you and your friends can continue laughing at me. She turned and tried to walk away with some pride, but rather than the heels that would normally click with authority across the floor, her sneakers squelched with every step, making her feel even more foolish.\n\nRalph was glad he had his back to her as she spoke and she could not see the look of remorse that came over his face as he wondered how much Charlotte had heard of what April had said. In truth, all he had said was that she had gone to clean up, but he had not defended her either when April started do her princess impersonations. He wasn't about to apologize or make excuses. This was the real Charlotte, the bitch he had always known. The girl he had spent the day with was just an aberration, an act, he told himself.\n\nApril had left after hearing her words, not wanting to be caught in the middle of trouble during these team building exercises. Charlotte and Ralph proceeded to ignore each other until they were ready to leave. Walking up the stairs in silence once again, Charlotte felt overwhelmed by his huge brooding presence and she walked faster until they hit the foyer. \n\n\"Goodbye Ralph,\" she said stiffly. \n\n\"You're not leaving?\" Ralph asked equally stiffly.\n\n\"I'm just going up to get my things and check on that barrel we had the problem with today. You go, the official day is over now,\" Charlotte said.\n\n\"I'll come. You can blame me for how you look. I don't care,\" he mumbled. \"It shows you actually tried, even though you are obviously far too small to do my job.\" He watched her as she seemed to bite back an angry retort.\n\n\"I made the mistake. It's fine I can handle it. Just go please Ralph,\" she sighed, obviously exhausted from the day she had. \"The day is over. Honestly, I'm just grabbing my stuff and checking the test results. I won't blame you for anything. You have my word.\"\n\nIt was Ralph's turn to bristle. He had said she could blame him; he wasn't fucking worried about it. He was not one to surrender so easily, especially to women. However, he no longer wanted to deal with the bitchy Charlotte that he was so accustomed to, so he shrugged and walked out of the castle. He got into his car and drove to the honky tonk bar. The parking lot was nearly empty, and he walked in and sat down at the bar. Tammy spied him and came over with a big smile.\n\n\"You're early, Ralph. You must have had a hell of a day.\"\n\n\"Give the woman a prize,\" grumbled Ralph. \"How about a burger and some fries, Tam. I'm hungry as hell. Make the burger a double with bacon, Okay?\"\n\n\"Sure, sugar,\" Tammy replied with a smile. She poured him a beer and placed it in front of him, then went through a swinging door leading into the kitchen to give his order to the cook.\n\nLike many roadside joints, the bar had a limited menu. Ralph would come in for dinner once a week or so, which is how he got to know Tammy. Once the place got busy, there was no time for small talk. Ralph took a pull of his beer, then turned and watched the evening's band set up on the small stage on one side of the room. Needing to pee, he got up from the barstool and walked over to the bathroom, stepping through the small door and going inside.\n\nCharlotte turned off her car and sat there a moment, the humiliation of the latter part of the day consuming her. Holding back her sobs, she opened the car door and stepped out into the dusty parking lot. She was relieved that Jeff had whined that he was too exhausted to come over tonight. She really just wanted to be alone. Feeling fortunate that she had a bag of old clothes in her trunk that she was going to donate, she had changed into something dry and clean. The Salvation Army could wait another few days, she told herself. Locking her car, she walked over to the door of the building and walked inside.\n\nThe place was nearly empty, which shocked Charlotte. She had never seen it like this before, but then, she had never been here this early before either. She marched right up to the bar and sat down at a stool. Tammy walked over and smiled. \"What'll you have,\" she asked.\n\n\"Hi. I'd like a vodka and soda with a twist of lime please,\" replied Charlotte. With the day she'd had, she needed a drink. She was really beginning to see Ralph in a new light, and then he had let his true colors show. She was angry with herself for letting her guard down. \n\nTammy turned and placed the drink in front of her. \"Here you go Hon,\" she said. \"You want to start a tab?\"\n\n\"Thanks. No tab,\" Charlotte replied, handing Tammy a twenty. She turned to watch the band setting up as Tammy placed her change on the bar.\n\nRalph barely noticed the woman sitting at the bar with her back to him when he came out of the bathroom. He settled back onto his barstool, waving at Tammy for another beer. She poured him another, then went into the kitchen, returning with his food. She placed it in front of him along with a napkin and a bottle of ketchup.\n\n\"You wanna talk about it, Ralph?\"\n\n\"No. I just want to forget it,\" he replied with his deep voice, taking a bite of his burger.\n\nCharlotte's eyes went wide as she recognized the voice behind her. She slowly turned on the stool and faced the bar, glancing in his direction. Ralph sensed her gaze and turned, catching her green eyes with his. He gave her a little nod and went back to his burger. \n\nCharlotte blushed and fumed at the same time. All she wanted was a drink. Did she really have to be subjected to him again? She decided that she was going to stand her ground and not rush out of the bar. She wouldn't give him the satisfaction. She sipped her drink, trying to look calm and relaxed.",
        "With the bar as empty as it was, Tammy stood near Ralph, openly flirting with him. She was wearing a tight, low cut u-necked t-shirt that fully displayed her ample cleavage. She had her hands on the bar and was leaning forward, giving Ralph a perfect view.\n\n\"I'm finally recovered from the other night, Ralph,\" Tammy said with a sultry tone. \n\n\"Is that so, Tam?\"\n\n\"Yeah. Tonight's my early night, in case you were wondering. I'll be done by ten.\"\n\nRalph grunted and nodded at her. \"I WAS wondering, actually. I need to shower and run a few errands. How about we meet at your apartment around ten-thirty?\"\n\nPulling her keys from her pocket, Tammy slid them across the bar to Ralph. \"Go on inside and get comfortable, Ralph. Run your errands, but leave the shower until I get there, sugar. I'll scrub you up real good,\" she said with a sexy smile. She turned and walked away, greeting another customer at the far end of the bar.\n\nCharlotte listened to the entire exchange, and felt a flush of color rise up in her cheeks. She realized that this woman was the one she had seen with Ralph in the parking lot the other day. Jesus, she thought. Does this woman have no self-respect at all? How the hell does she feel comfortable just throwing herself at this beast like that? On and on she went in her mind, finishing her drink and then having another before finally walking out to her car.\n\nFeeling the effects of the alcohol, Charlotte was glad that her apartment was just a short distance away. By the time she had finished her tirade in her mind, she had one last thought, or rather, a realization. She felt jealous. She actually felt jealous. God help me, she thought as she went into her apartment.\n\nCharlotte took a long shower, then dried her hair out as best she could. She lay naked in bed, tired, sore and spent. She reached into her night table drawer and pulled out her favorite vibrator. She planned to just lay back and feel and let the tension of the day melt away with an orgasm. She just wanted to feel. Her mind, though, insisted on drifting to Ralph. The feeling of his hands around her waist, the warmth and strength of him pressed against her side, the way his hands felts as he held on to hers. The feeling of his breath on her neck. The way he had that barmaid on her knees outside in the parking lot. The way he seemed to take charge. All of it. She tried to push the thoughts away, but they were insistent, coming back faster and stronger each time she managed to shoo them away. Finally, her body stiffened and her climax hit, more powerfully than it had in months.\n\n<center>* * * * *</center>\n\nRalph pulled into the parking lot at the winery the next morning. Despite the workout he had had with Tammy, he had yet another restless night's sleep. He stared through the dirty windshield at Charlotte's car and cursed. The bitch had gotten to him yesterday. In the middle of the night he had realized she had only become a bitch again after April had made fun of her. He wasn't about to apologize or anything that drastic, but it had changed the way he saw her. She was still a fucking stuck-up bitch, but he also hoped he would see her again today. \n\nThe conflicting emotions within him made him even more grouchy than usual during his morning duties at work. Even Sam had backed off, realizing his mood was one that wasn't about to be broken with a few quick jokes. Mark, though, had not been there long enough to know better. After asking about his day with the princess, Ralph had just stared at him silently with a menacing look in his eyes before walking away, willing the slow morning in the cellar to move by faster.\n\nAt eleven, the staff gathered once more in the upstairs dining room. After being given their random numbers again and taking their seats, they found themselves sitting with a new group of colleagues. To her dismay, Charlotte found herself with April at her table, and she felt herself bristling at the woman's louder than necessary voice and laugh, the memory of it mocking her the day before still so fresh in her mind.\n\nSuzette got up to address the group and extend her congratulations on a job well done the day before. Charlotte thought it odd that the lectern on the dais had been replaced with a bench that she leaned upon. Watching Suzette carefully as she spoke, she noted the pile of blocks beside her that had been built up into a childlike replica of the castle winery. As her speech came to a conclusion, she took of the brightly colored scarf that decorated her neck and covered the pile of blocks with it. \n\n\"Time to test your powers of observation,\" she said with a smile. \"Each of you have several small blocks before your place setting. As a group, you must replicate the pattern of blocks I had sitting beside me the whole time I was speaking. Good luck ladies and gentlemen.\" She returned to her table and sat down as the entree was served.\n\nRalph had not being paying attention at all and swore under his breath as he heard the instructions. He had planned to become involved in the group task as he had on the first day, hoping to impress the elitist assistants. However, as he sat directly behind and to the left of Charlotte, he had let his mind wander to the smell of her perfume he'd noticed as he had stood close to her the day before. Her hair was up, showing off the flawless skin of her neck, and she was dressed for the catwalk once again. But he admitted to himself that she looked beautiful and delicate in the outfit she had chosen.\n\nConstantly distracted by thoughts of Charlotte as she sat just out of reach and led her group in their block building, he had barely even commented on his own group's motley construction. By the end of the main course, it looked like a group of two year olds had assembled the creation. Suzette's personal assistant came around with an iPad, taking photos of each building. Before dessert was served, Suzette stood to unveil the original building and congratulate the winners. Three of the tables had managed to closely mirror the model, including Charlotte's table.\n\nRalph scowled, feeling that his table of companions had let him down and taking no responsibility for the failure himself. During dessert, they were once again given pairs to shadow work with for Thursday. Charlotte had been given Sam to work with, and Jeff had been paired with Ralph. The rest of the afternoon went by quickly as they dawdled back to their work stations slowly after dessert. Ralph's mood darkened further knowing he would be working with Charlotte's boyfriend, and he felt the need to take it out on someone. He knew just the girl who was always willing....\n\nTammy stood on the rug in Ralph's living room, naked and blindfolded, as he sat on the couch and watched her. She had hoped that Ralph would call her since she wasn't working that evening, and he didn't disappoint her. With her hands bound together and attached to a hook in a beam that ran across the ceiling, Tammy could do little more than stand there on her toes and wait for Ralph to do as he pleased. The longer he waited, the more turned on Tammy was getting.\n\nAlthough she had her own desires, when it came to sex, she was a chameleon. She thrived on playing whatever role her partner wanted her to play, her desire to please consuming her. There was little that Tammy would refuse, but she did have safe words to protect her. She loved that Ralph's taste in sex was varied, because it allowed them to experiment with many different ideas.\n\nShe squirmed a little when she heard Ralph rise up from the couch. He had blindfolded her often enough for her to recognize the sounds he made as he moved about in the room. She could feel his presence as he moved within a foot or two of her. He ran the riding crop that was in his hand across Tammy's bare ass, and it made her gasp. She could feel her heart racing in anticipation of the sting she would soon feel.\n\n\"I expected you to be here when I got off work today, Tammy,\" Ralph began. \"Instead, I had to sit outside in my car and wait for you.\"\n\n\"I know. I'm sorry.\"\n\n\"You're sorry? Not yet, Tammy, but you will be.\"\n\nThose words caused Tammy to smile and bite her lip.\n\n\"You're smiling? I think you like to misbehave, Tammy. Isn't that right?\"\n\n\"I do what I want, Ralph,\" she said with a sneer.\n\nIn an instant, there was a whoosh as the crop sped through the air and snapped onto the right ass cheek of Tammy. She let out a yelp and squirmed again as much as her restraints allowed. \"Hmmm. Look at that pretty little red mark I just planted on your ass, Tammy. Maybe I should take a picture, don't you think?\"\n\n\"No.\"\n\nShe heard the tell-tale shutter sound from the camera on Ralph's phone. \"Oh, yes. Maybe you can hang it up on the mirror behind the bar at work, huh?\"\n\n\"Fuck you, Ralph,\" Tammy replied, playing her role perfectly. A moment later, her left ass cheek was stinging, just as the right one had earlier. Once again, she heard the sound of the camera.\n\n\"Are you going to tell me why you weren't here when I arrived, Tammy?\"\n\n\"You already know, Ralph.\"\n\nAgain, the whoosh and snap of the crop on her ass broke the silence in the room. And again. Tammy was breathing deeply through the pain, feeling the heat radiating off of the places the crop had landed.\n\n\"Why, Tammy?\"\n\n\"Because I was out getting you beer. I did it for you.\"\n\nThis time, it was a short stroke, connecting with a sensitive nipple. Tammy let out a gasp, not expecting that he would move so rapidly off her ass.\n\n\"What were you doing all day that was so important that you hadn't done it earlier?\"\n\n\"Nothing,\" Tammy mumbled, earning her a strike to her other nipple.\n\nSo it went for nearly an hour, fuelling the desires of both of them. By the time they were finished, Tammy's ass was bright red, and she was marked in several other spots on her body. The room smelled of her musky scent as her excitement caused her pussy to swell up and weep with her secretions. As always, the scent excited Ralph, urging him on. \n\nTammy stood there, her body tingling, listening to the sound of Ralph unzipping the fly on his jeans. She squirmed, needing to feel him inside her. A moment later he grabbed her by the thighs, lifting her up and spreading her open. He then moved her body so that his cock was positioned at the entrance to her cunt. He didn't so much move himself forward as he did move her onto his cock. Tammy literally grunted as he filled her completely, pulling her down hard on him.\n\nShe pulled up with her still restrained arms, trying to gain leverage as they fucked. Ralph did most of the work, raising and lowering her on his cock while roughly kissing her. Needing a shave, his rough beard chafed at the sensitive skin of her face. Ralph controlled the pace, taking his time and prolonging their pleasure. Tammy rolled through a series of small orgasms as they fucked, which normally happened when he fucked her. She could never understand how he could make her come that easily, but was happy that he did. When Ralph was ready, he aggressively fucked her until he growled and thrust forward, pumping his come inside her needy cunt. \n\nEventually, Ralph took Tammy down and they moved to the bed for another round. Later that evening, she lay there with a smile on her face. Tammy knew this relationship would never go anywhere, but she was happy that neither of them were involved with other people. She liked the feeling of him coming inside her, and didn't want to have to start fooling around with condoms all the time. \n\n<center>* * * * *</center>\n\nCharlotte woke early and looked over at Jeff who had stayed the night. She wished they stayed at his place more often, but he seemed to like her small apartment. The thought of waking him for a round of unsatisfying sex was discarded quickly from her mind. Instead, she got out of bed without disturbing him so she could do her morning run on the treadmill. She knew it would provide more endorphins for her than Jeff ever could. Undoubtedly, Jeff would sleep for at least another hour. \n\nAs she ran, she thought about the day ahead. Sam was a friend of Ralph's, which put her guard up, but she also remembered the teasing banter they had on Monday. She really hoped today would go smoothly. Well at least more smoothly than last time she was a cellar rat.\n\nAn hour later, she stood in the kitchen making breakfast for them both while Jeff showered. She had chosen her outfit today more carefully, and had a good change of clothes packed as well. She planned to start in the cellar with Sam this time and change during the lunch break. A short while later, feeling as prepared as she could, she followed Jeff to work in her own car since they would not be seeing each other tonight.\n\nRalph arrived about fifteen minutes early on Thursday and was standing in the foyer waiting when Sam arrived. His friend came over to him and immediately started to tease him.\n\n\"I'll be working with your girlfriend today Ralph. Jealous?\" Sam joked.\n\n\"Fuck off Sam,\" the big man replied. Sam really had angered him, he realized, because he actually was a little jealous that Charlotte would be working with his friend. It shocked him, in fact.\n\n\"Who did you draw, again?\"\n\nRalph glared at his friend. \"Jeff. King of the assholes.\"\n\n\"Careful, now Ralph. You can't have Suzette hear you speaking like that.\"\n\n\"Yeah? Let HER work with the prick then.\"\n\nSam chuckled. \"Just don't kill the guy, Ralph. They do have laws about such things.\"\n\n\"Well see,\" growled Ralph.\n\nA moment later, Charlotte and Jeff arrived together. Seeing them like that soured Ralph's mood even more. The couple approached Ralph and Sam, Charlotte saying hello to each of them. Ralph locked eyes with her, but she shyly looked away, the memory of her orgasm two nights earlier still with her.\n\n\"Shall we get started, Sam?\" she asked.\n\nSam nodded and held out an elbow to her. Charlotte hooked her elbow with his, and the two of them marched off to start the day. Ralph watched the two of them go, then turned to Jeff, who was watching him closely. \n\n\"You're up,\" Ralph said to him. \"What are we going to do this morning?\"\n\n\"We have some testing to do, and there are a number of barrels we need to top off,\" Jeff replied. \"It's a delicate operation. I think it's better if you just observe.\"\n\nHolding back a sneer, Ralph followed Jeff down into the cellars. \n\nThey worked the morning away, speaking just enough to give the impression that they were cooperating with each other. They were just finishing up as noon approached, and they climbed the stairs to the main floor.\n\n\"I'm taking you to lunch,\" Jeff declared. \"You did the honors for Charlotte the other day, and I'd like to return the favor. \n\nRalph was surprised that Charlotte had spoken about their day together, though he knew he shouldn't have been. He had heard Sam and Charlotte joking with each other and laughing in the cellar as he had shadowed Jeff. The ass had pompously explained everything he did while using Ralph as a shelving unit to hold his equipment.\n\nAs he and Jeff left the cellar, he could hear Charlotte's giggle. Looking over his shoulder, he saw that she and Sam were following them towards the stairs for lunch.\n\n\"At least I didn't get as messy as when I worked with Ralph\" Charlotte was saying, \"But if it's okay I will change anyway and meet you in the cafeteria.\" \n\n\"Want me to order for you?\" Sam offered.\n\n\"I'll just have whatever you're having,\" Charlotte smiled.\n\nThe whole exchange irritated Ralph beyond reason, and despite it being the last thing he wanted to do, Ralph agreed to go to lunch with Jeff. It had to be better than sitting in the cafeteria with those two. They walked out into the parking lot, and Ralph followed Jeff to his car. Jeff had driven to work in the car he liked to call his weekend car, the Audi R8 Coupe. It was a performance vehicle that cost well in excess of one hundred thousand dollars. \n\nRalph barely fit into the vehicle, squeezing himself into the passenger seat as the much smaller Jeff settled into the driver's position. Jeff pushed a button and the car roared to life. Backing out of his spot, he turned toward Ralph with a grin.\n\n\"You should see the pussy you can land with a car like this, Ralph.\"\n\nRalph nodded. \"What do you think Charlotte thinks about that?\" he asked.\n\n\"Let me tell you something, my friend. Charlotte is great. I will marry her someday, and she will bear me children and heirs to my family's estate. But a man has needs, Ralph. I'm sure you know that. A woman like her...she will never understand the needs of a man like me. I like to keep a stable of fillies around, if you get my drift. Treat them mean and keep them keen, you know?\" Jeff chuckled. \"There is no way a woman like Charlotte would ever give me what I need.\"\n\nRalph listened, his anger building by the moment. The more Jeff spoke, the more Ralph knew that his evaluation of the man was right on the mark. He grew up with everything handed to him, having never had to work for a thing in his life. In reality, he neither appreciated nor earned anything, but felt the need to flaunt what he had in the face of others. Ralph was sure that Jeff brought this car today just to rub his nose in it. He was intimidated by Ralph, and needed to try to feel superior.\n\nHis thoughts then moving to Charlotte, Ralph wondered whether it was the man, not the woman, who was the problem. Although she kept a professional demeanor at work, Ralph had no idea what made the woman tick outside of the winery. Considering the way she had affectionately interacted with Sir Charles, Ralph thought there might just be more to her than meets the eye. \n\nHis immediate issue, however, was figuring out how he would get through the rest of the day with this fool without smashing him in the face with his huge fist. Somehow, Ralph made it through the day without any violence, although it took nearly all of his resolve to do so.\n\nLeaving the winery, Ralph caught sight of Sam and Charlotte exiting the building. They were talking like old friends and his mood darkened once again.\n\n\"Hey Ralph!\" Sam called out. Ralph considered ignoring his friend but eventually turned in his direction as he heard the hurried footsteps move closer to him. \"Charlotte and I are going for a drink. Come with us buddy.\" Ralph didn't respond at first, turning his gaze on Charlotte who had hung back from the exchange. \n\n\"Come on, don't be an ass. You know you want to. We'll meet you down at The Shack. Then you can talk to the other guys and ignore us if you want,\" Sam chuckled. \"Charlotte wants to get the complete cellar rat experience, so what better place than that, right?\" Ralph grunted with a small nod of his head and walked off.\n\n\"He's a good guy really,\" Sam said, falling back to walk with Charlotte out to the parking lot. \"He's just had a bit of a rough go at life, you know?\" he continued, making excuses for his friend's lack of social graces. \"Mine's the old beat up Chevy over there. Follow me down, okay?\" \n\n\"Sure,\" Charlotte replied. She had really enjoyed her day with Sam. He was a genuinely nice guy and once again she wondered about the odd mismatched friendship between Sam and Ralph. Any time he had come up in the conversation during the day, Sam spun it to a good light. She could see that he was an intensely loyal friend.\n\nRalph nearly pointed his car towards home, but he gave in and headed to the bar instead. If pressed, he would have to admit that he was becoming quite intrigued with Charlotte Simons. He was still of a mind that she was a stuck up bitch, but the more he got to know her, the more difficult it became to pigeon hole her in such a way. The thought of spending some time with her outside of work was making him happy, and he just didn't know what to make of that.\n\nHe pulled into the mostly empty parking lot and brought his car to a stop in a spot near the door. He saw Sam's empty car parked near his, so he went on inside to find his friend. There were a few tables situated on either side of the dance floor. Sam and Charlotte were sitting at a table set for four, and Ralph ambled over and took a seat.",
        "\"I wasn't sure you'd follow,\" Sam said.\n\nRalph laughed. \"It was about fifty-fifty,\" he said to his friend, glancing in Charlotte's direction.\n\n\"Well, I'm glad you joined us, Ralph,\" Charlotte said with a smile.\n\nRalph nodded, even showing the hint of a smile at the corners of his own mouth. \n\n\"Did you tell them at the stables that you won't be able to work this weekend?\" Sam asked.\n\n\"Yeah. They were fine with it. I haven't missed a weekend in months, so there were no issues.\"\n\n\"You work at the stables on weekends?\" asked Charlotte with a surprised look.\n\n\"Yeah. I do it in exchange for them boarding Chuck. Sir Charles.\"\n\n\"Chuck? I love it,\" said a giggling Charlotte. \"Much, much better than Charlie.\"\n\n\"I've heard that Charlie is an unpopular nickname,\" said Ralph with a smile.\n\n\"I've heard that too,\" replied Charlotte. \"How very interesting.\"\n\n\"Hello?\" piped in Sam. \"I'm still here. You two are getting on like old friends, and I feel like a third wheel.\"\n\nCharlotte giggled. \"Sorry, Sam. We had a conversation about Sir Charles the other day. Your friend Ralph seems to have a knack for surprising me. Every time I think I have him figured out, he throws me a twist I wasn't expecting.\"\n\n\"That's Ralph,\" joked Sam. \n\nRalph turned towards Charlotte, locking eyes with her. \"I could say the very same thing about you. You come across as being stuck up, but with your guard down...\" He shrugged, not finishing the thought and realizing he may have just been too honest with her.\n\nCharlotte's tummy did a little flip inside. Was this beast of a man actually thinking about her? It caused her to break into an involuntary smile.\n\nRalph caught the smile and the twinkle in her bright green eyes. He was struck once again by how beautiful this woman was. Returning her smile, he pointed one of his huge fingers in her direction.\n\n\"You're trouble,\" he told her.\n\n\"I don't think you men understand what it's like for a woman in the winery. Although it's changing some, it is still very much a man's world. I have to remain as professional as possible, or I risk being dismissed as a silly woman.\"\n\nBoth men looked at her, realizing there was a lot of truth in what she was saying. Ralph nodded, then got up from the table. \"You want to split a pitcher of beer? Five dollar pitchers until eight.\"\n\n\"Sure, why not?\" said Charlotte. I'm supposed to be one of the guys tonight.\"\n\nRalph returned to the table with a pitcher and three mugs, then sat and poured for each of them. Grabbing his mug with a giant paw, he held it up. \n\n\"Cheers,\" he said loudly.\n\nSam and Charlotte clinked glasses with his, and they all took a pull on their beer. The small bar had gotten crowded, and Charlotte hadn't noticed when Jeff walked in and settled down on the other side of the room, a companion on his arm. The girl looked just barely old enough to drink, and was dressed like a street corner hooker. A thick layer of poorly done makeup completed her visage. Jeff was pawing at her, as they laughed and sloppily kissed while sitting there at the table. \n\nRalph glance over and caught sight of them, and his eyes filled with anger. He was glad that Charlotte had her back to them, but she would inevitably see them before the night was through. As much as he wanted that ass to get caught, the soft Ralph that he hid inside did not want to see Charlotte get hurt.\n\nA short time later, Ralph watched as the couple got up together and headed toward the bathrooms. He did a double take when he saw Jeff follow the girl into the ladies room. He considered going over there to speak with Jeff, but before he could, Charlotte rose from her seat.\n\n\"Excuse me, gentlemen. I'll be back in a minute,\" she said.\n\n\"Fuck,\" Ralph thought. Well, the prick deserves whatever he gets. He watched Charlotte walk towards the bathroom, and Ralph leaned across to Sam.\n\n\"The boyfriend is here. He came in with some tramp, and they went into the bathroom together. Get ready for some fireworks,\" Ralph whispered with a tone that took Sam by surprise as much as the information did. The man cared about what was about to happen.\n\nSam's eyes went wide with surprise. \"Are you fucking kidding me,\" he asked. \"Holy shit!\"\n\nCharlotte walked into the small bathroom and went into the unoccupied stall. She quickly realized there was a man in with a woman in the only other stall, so she rushed, wanting to get out as quickly as possible. She peed, wiped, and flushed, then went to the sink to wash her hands. She froze when she heard the familiar voice come from the occupied stall.\n\n\"That's it. Suck it you little bitch. Suck it good, you little tramp.\"\n\nWith a look of shock on her face, Charlotte turned to the stall door, which was slightly ajar. Taking a deep breath, she reached out and pushed the door open. There stood Jeff, his pants pulled down, his cock in the mouth of the young girl squatting down in front of him. Jeff turned to her, recognition showing on his face.\n\n\"You fuck!\" Charlotte screamed, turning away and storming out of the bathroom. A few moments later, Jeff followed, buckling his belt as he scurried after her. She was near the table, sobbing as Jeff approached.\n\n\"You don't understand, Charlotte. She doesn't mean anything to me. You do. You're going to be my wife.\"\n\n\"Well, you're at least half wrong there, Jeff. I will NEVER be your wife, not after...\" She waved her hand as the tears choked the words off.\n\nShe turned to Sam with tears in her eyes. \"Will you take me to my car?\"\n\n\"Sure,\" Sam said as he got up from the table.\n\nCharlotte gave Ralph a quick glance, holding back a sob, then waved her hand, unable to form words and walked away with Sam.\n\n\"Come back here, you fucking bitch,\" screamed Jeff. \"You don't just walk away from me like that,\" he fumed, the other people in the small run down bar taking notice. He took a few steps toward the door, and Ralph stood and put a huge hand into the middle of Jeff's chest.\n\n\"Don't,\" Ralph growled at him.\n\nJeff looked up at the big man and back at the retreating form of Charlotte. He would have plenty of time to fix this later, he thought, unable to admit to himself that he was afraid of Ralph. He remained silent, reminding himself that Charlotte knew she wouldn't find any better men than him in this dime store town. He was a prize, and she would forgive him and fall back into line once he proposed properly. Of course, now he would have to get a bigger ring than he had planned, he realized. \"Fuck,\" he said out loud.\n\n\"Yeah you really fucked up,\" said Ralph. He had not moved, and there was no way he was letting this asshole follow Charlotte and abuse her for his own mistake. \"I put up with your shit all day, listening to go on about your stable of fillies and how Charlotte was just a pretty thing to keep in reserve for when you wanted to settle down and get married. If I were you pal, I'd get that little whore you were in the bathroom with and go have yourself some break up sex because Charlotte will never forgive you if I have anything to do with it.\"\n\nHe pushed Jeff back into a chair and towered over him, \"In case you're not sure if I'm serious, try to see Charlotte tonight and see what happens.\" With that, he turned on his heel and walked out the door, then jogged across the parking lot to catch Charlotte before she left. He needn't have worried, as the woman was standing beside the car, holding onto it as tears streamed silently down her face. Sam stood by awkwardly, unsure of what to say or do. Ralph had felt that bad before, but he deeply buried the memory of visiting his girlfriend at college and seeing her with another guy. \n\nHe had told no one, letting even his best friend Sam think he despised the girl for leaving him in this town and going off to college. The truth was he had encouraged her to go and promised to visit as often as he could afford to. The betrayal he had felt after travelling for hours to see her, only to find her in bed with some frat jock had been a physical jolt to his whole being. He looked at Charlotte and the way she clutched her arms about her body and he knew exactly how she felt.\n\nTaking charge of the situation, he walked over to the pair. \"Give me your keys, I'll drive you home,\" he said with a gruffness that belied the concern he felt for the girl. Tonight would be hard for her, he thought, with a knowledge that only personal experience can provide. \n\n\"Oh that's not...\" she began.\n\n\"Keys,\" Ralph demanded, cutting her off and holding out his giant paw. Not giving her a chance to argue further he turned to Sam. \"Follow us to her place and you can drive me back to pick up my car.\"\n\n\"Yeah, okay,\" Sam agreed as he fished his own keys out and turned toward his car. Ralph took Charlotte's arm and steered her around to the passenger's side, opening the door for her and helping her in. After a failed attempt to get into the car, which made the still teary eyed woman smile, Ralph moved the seat back to maximum setting and finally managed to climb behind the wheel.\n\nThey drove in silence with Ralph constantly checking behind him to ensure Sam was following. While he did not want to see Charlotte treated so badly or left deserted and unable to drive herself home, he still wasn't sure who she truly was. Was she the stuck-up bitch or the friendly easy-going girl he had seen glimpses of this week?\n\nCharlotte watched Ralph as he drove, so confident and in control. He was the take charge kind of guy she had always fantasized about. That asshole Jeff had seemed to be everything she wanted in her escape from the poverty she grew up in. She had the thought the price to pay for getting involved with him would have been dealing with his arrogance and ego on a daily basis. She had let herself believe he deserved to be arrogant; he had it all. The wealth and prestige that came with being part of his family, the sky rocketing career, and the popularity of a high school quarterback. \n\nHow could she not have seen what an asshole he was? How could she have been so blind to how he treated her for so long? The image of how he had spoken to that little slut as she sucked his cock made her cringe, a sudden wave of anger replacing her sadness as she balled her fists, digging her nails into her palm and liking that the physical pain it gave her took away the sick feeling she had in her stomach.\n\n\"Which way?\" Ralph asked softly as they came to an intersection. He had no idea where she lived, but assumed it would be in the nicer part of town. \n\nCharlotte looked up at him then, and quite clearly without emotion said, \"I think I'd like that beer now, please.\"\n\nRalph frowned in concern, but he guessed sending her home to brood alone wasn't the best idea either, especially if Jeff was going to show up there. He turned his car toward the Honky Tonk, hoping that the confused Sam would follow them. Maybe he could go back and get his car while Sam babysat Charlotte for a while.\n\nWalking into the bar, he found a table in a quiet corner and they sat down. Charlotte looked blankly across the room, a poster child for the thousand yard stare. Ralph knew the look well, having had it himself twice in his lifetime. Without even thinking about it, he placed a hand softy onto the middle of her back, stroking her gently in an attempt to comfort her. Charlotte turned her gaze to Ralph, locking eyes with him. She was momentarily surprised by the compassion she saw in the eyes of the big man. It was a trait she didn't think possible for him to possess, and yet, he had surprised her once again. \n\nIt'll be okay Char,\" he said with a nod. \"I promise. I've been there before.\" \n\nLeaving her sitting there as Sam moved toward them, he went to get a pitcher of beer. He saw Sam take a seat at the table where Charlotte silently buried her face in her hands.\n\nRalph walked over to the bar, and Tammy finished serving a customer and came over to him. \n\n\"Hey Tam,\" he said to her.\n\n\"Hi Ralph. Who's the girl with Sam?\"\n\n\"Oh, someone from work. She's not with Sam. We just came for a few beers.\"\n\n\"I saw her in here the other night too, when you came in for dinner.\"\n\nRalph nodded. \"Yeah. It was a rough day at work, I guess.\"\n\nTammy let out a deep sigh. \"Damn it, Ralph.\"\n\n\"What?\"\n\n\"I know what we have. I mean, what we are to each other. I don't have some illusions of happily ever after. But I sure as hell wish that you, or somebody, would look at me the way I'm seeing you look at that woman.\"\n\n\"What are you talking about, Tammy? She doesn't even like me. She's scared of me. And she's dating some rich prick from the winery, or she was until tonight.\" He paused thinking about that. \"There is nothing going on between us.\"\n\n\"How long have I known you, Ralph?\"\n\n\"Almost ten years, Tammy. But...\"\n\n\"But nothing, Ralph. In all that time, I've seen the best of you, and I've seen the worst of you. But I have never seen you look at someone the way you just looked at her. And you certainly don't look at ME that way.\"\n\nRalph rolled his eyes at her. \"I don't know a fucking thing about her, except that she works at the winery. Reading something into this is just ridiculous.\"\n\n\"Why are you arguing with me, Ralph?\"\n\n\"What?\"\n\n\"Why are you even arguing with me about it? I think you're really arguing with yourself, you big dope. That's what I think.\"\n\nRalph glanced over at Charlotte and Sam sitting in the corner, and he felt there might just be a kernel of truth to what Tammy was saying. \n\n\"What, do you think this is some love at first sight thing like you see in a movie or something,\" Ralph said as he chuckled at her.\n\nTammy frowned and shook her head. \"Listen to me, Ralph. I know what I'm seeing here. You've had an awful lot of shit come your way during your lifetime that you had no control over. This time, you do. If you don't do everything you can to bring that woman into your life, you're an idiot. And THAT, Ralph, is on you. Understand?\"\n\n\"Yeah, yeah. Can we get a pitcher, Tam?\"\n\n\"Sure, sugar,\" Tammy replied with a sad smile.\n\nCharlotte was watching Ralph and Tammy together. She strained to hear what they were saying, but couldn't quite make it out. \n\n\"What's their deal,\" she asked Sam.\n\n\"Those two? They've been friends for a long time. They actually dated years ago, but it just didn't work out. Between you, me, and the wall, they still fuck each other fairly often. You know. Friends with benefits,\" he said as he corrected himself quickly, remembering who he was speaking to.\n\n\"Really?\" asked Charlotte, surprised by the pang of jealousy that hit her in the gut. She didn't let on that she had seen Ralph and Tammy in the parking lot, instead acting as if all of this was news to her.\n\n\"Yeah. Neither of them are dating anyone, so I guess they've figured out a way to maintain a friendship and...you know... have benefits.\"\n\n\"That Ralph is full of surprises, isn't he?\"\n\nSam let out a laugh. \"You have no idea.\"\n\nRalph returned to the table with the pitcher and some glasses, handing one to each of them. Charlotte poured beer into each glass, then held hers up to toast. Thinking better of it and shrugging her shoulders, she drank half the beer in one shot. She put her glass down on the table and looked at Ralph.\n\n\"When were you there before, Ralph?\"\n\n\"Huh?\"\n\n\"You said you had been there before. When was that? What happened?\"\n\n\"Oh, you want my life story? You think you're sad now, huh?\"\n\n\"C'mon Ralph,\" Sam interjected. \"I don't think she needs your sarcasm right now.\"\n\n\"It's okay, Sam. We're supposed to be best buds tonight, right? Let's hear it, Ralph,\" she said, returning her eyes to him. \"You share a secret, and I'll share a secret, Okay?\"\n\nRalph paused, staring into the green eyes Charlotte had pointed in his direction. He took a deep breath, and told her all of it. When he was finished, Charlotte sat in stunned silence, realizing that she had misjudged this man to an incredible degree. For his part, Sam was shocked with the part of the story that he never knew.\n\n\"I'm so sorry, Ralph,\" said Charlotte putting a hand on top of his. Her eyes had welled up with tears for him, as she momentarily forgot about her own problems.\n\n\"I have two questions, Ralph,\" Sam said. \"One, where did you bury the bastard that you found in bed with your girlfriend? And two, why the hell did you never tell me about this?\"\n\n\"It was her I was angry with, Sam. And it hurt. I had just lost my parents, and then, with her knowing that, she did that to me. I had enough pity. I didn't need more. So I made out like I was the one that ended it.\"\n\nThey were all quiet for a few minutes, sipping on their beers and gathering their thoughts.\n\n\"So, you're up,\" Ralph said to Charlotte. \"Spill your secrets.\"\n\nCharlotte nodded slowly, a sad smile crossing her face. \n\n\"I did promise, right?\"\n\n\"You did,\" chimed in Sam, who was beginning to feel as if he was out of place sitting with the two of them. \n\n\"I grew up a few counties over from here. My daddy left when I was just a baby, and my mom raised my sister and I alone. We were dirt poor, and dependent upon public assistance and any odd jobs my mother could get in order to get by. Somehow, my sister and I managed to do well in school, and with the help of scholarships, we went to college.\n\n\"I made a vow to never allow myself to be in the position my mother was in. That's why my career is so important to me. Jeff...well, he seemed to be able to provide a degree of security I had never known in my life. I'd be able to depend on both me and him, and never be poor again. I knew I was giving up a little being with him, but...I just couldn't think about going back to how I grew up. \n\n\"Do you love him,\" Ralph asked.\n\n\"We've been dating for some time, Ralph.\"\n\n\"That isn't what I asked, Char. Do you love him?\"\n\n\"I thought I did.\"\n\n\"Did you really, Charlotte?\"\n\nCharlotte stared at Ralph, her nostrils flaring in anger at his insistence. Ralph didn't back down, his eyes demanding an answer. Finally, Charlotte broke eye contact and looked down at the table.\n\n\"No,\" she quietly replied. \"I don't.\"\n\nAgain, they all sat there in silence, Charlotte's words echoing in their ears.\n\n\"So, do you want to hear my secrets?\" offered Sam.\n\n\"No,\" both Ralph and Charlotte simultaneously answered, causing the three of them to burst into laughter.\n\n\"I think I'm ready to go home now,\" Charlotte said. \"It's late and I'm tired, and we have a big day ahead of us tomorrow.\"\n\nRalph nodded as he got up from the table. \n\n\"I'll drive you and Sam can follow us to take me to get my car after.\"\n\n\"Okay,\" Charlotte replied, not wanting to argue that she was capable of driving herself. After this night, she thought it best she remain in Ralph's care until she got home.\n\nThey were quiet on the drive over, and Charlotte directed Ralph to her carport. He turned off the engine and got out of the car. He watched as Sam pulled up behind them, getting out and walking over to the two of them. Charlotte gave him a quick hug, thanking him for his help. Then she turned towards Ralph, stepping forward and putting her arms around him as best she could. She squeezed him tightly, both for her and for him. Finally, she broke the hug and gave him a gentle buss the cheek. \n\n\"Thank you for everything, Ralph. I...I'm so sorry I have misjudged you and treated you as I have. I was very wrong about you.\"\n\nRalph nodded at her. \"You weren't the only one, Char. Trust me,\" he said with a smile. \n\nHe started to walk away, then turned back. \"Do you have a pen,\" he asked her.\n\nCharlotte nodded and rummaged through her purse, finding a pen and handing it to Ralph. He took her hand in his, frowning at the marks her nails had left behind. He wrote a phone number on the palm of her hand. \n\n\"Anything happens...that asshole shows up or you need anything, you give me a call, understand?\""
    ],
    "authorname": "xelliebabex",
    "tags": [
        "beauty",
        "beast",
        "teamwork",
        "team building",
        "winery",
        "dancing",
        "tango"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-rhythm-method"
}