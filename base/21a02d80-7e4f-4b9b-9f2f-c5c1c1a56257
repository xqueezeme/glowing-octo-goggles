{
    "title": "The Chronicles: Three Sisters 16",
    "pages": [
        "We let our people rest, the following day. Exhausted as they were, there was no point in pushing them to cover a few more leagues. The Izumyrians arrived at the foot of the Steps in the late afternoon.\n\nOur enemies were clearly puzzled by the obstacle that now confronted them. Two men dismounted, and began to climb the rocky terraces. Most of our fighters stayed well back, so that they couldn't see us.\n\nWhen the two horsemen reached the second-last outcrop, Yevna and Nameless stepped forward, with arrows nocked.\n\nTo my surprise, Yevna missed a relatively easy shot (for her). Nameless did not. Yevna drew another arrow, and made a much more difficult shot, hitting her target in the hip.\n\nYevna leapt down like a mountain goat, and finished the fellow off with her knife. It was a little gruesome, I suppose, but the Izumyrians needed a reminder that they were dealing with Uplanders.\n\nMy daughter calmly cut her arrow from the dead man's hip, then went to recover Nameless' arrow as well.\n\nYes, Libot, Seva, and Guenna and I could also have shot at the two scouts. No doubt we would have managed to hit both men at the first attempt. The truth of the matter was quite simple: we were running low on arrows.\n\n- \"What happens if they try to go around?\" asked Gerimir, the Lowlander.\n\n- \"They get lost!\" laughed Giedra.\n\n- \"There are forest tracks,\" said Yevna, \"but none of them re-connect with the path we're on - not for the next 10 or 11 leagues.\"\n\n\"The Izumyrians won't feel very comfortable, leading their horses single file through the forest.\" she explained. \"And there's nowhere for them to camp, at night.\"\n\nThat night, we made sure to have at least half of our fighters on guard at all times. I didn't think that the Izumyrians would dare try to climb the Steps in the dark - but we couldn't afford to be wrong.\n\n***\n\nThe next day, we left half our fighters in place - including all of the archers - while we began moving everyone else.\n\nThe terrain was much easier, much more level. There were fewer tree roots to trip on, fewer sudden drops and steep climbs.\n\nI'd wanted to stay at the Steps, but I was outvoted by my daughters, and by Nameless.\n\n- \"Tanguiste and Vingoldas need your help.\" she suggested.\n\n- \"Whereas you don't.\"\n\nNameless didn't know how to respond to that.\n\n- Please, Papa.\" said Guenna. \"I'll have all of the best archers, plus Giedra, and Gerimir.\"\n\n- \"All of the best archers, except me. Nameless is better at softening the blow than you are.\" I grumbled.\n\nWas I getting too old? I said it out loud, from time to time ... but perhaps I was hoping that someone would disagree, and point out that I was still a valuable warrior. No, more than valuable - essential. Indispensable.\n\nI was walking along with Sulcen, helping her mother.\n\n- \"I'm getting old.\" I muttered.\n\nGuen Nadesti just snorted. \"I hope you're not looking for sympathy from me.\" she said.\n\nSulcen gave me half-smile, just before she patted me on the backside.\n\nSo much for that attempt to get a little moral support.\n\nWe covered five leagues, that first day. When we finally stopped, no one seemed to be excessively tired. Tanguiste had some kind of extra sense, by which she could tell what our folk could do - and what they couldn't.\n\nShe, at least, asked for my approval before calling a halt for the day.\n\n***\n\nGiedra and her friends, Eliv and Rion, rejoined us late in the second day. Guenna and the archers, plus Gerimir, were still at the Steps.\n\nOf course, they could all be dead, and the Izumyrians only a few minutes behind, about to charge down upon us, for all we knew.\n\nBut all had been well the night before. The Izumyrians hadn't tried to climb the Steps again, and if they'd explored the forest pathways ... well, that made little or no difference.\n\nWe were now approaching lands that Giedra and her friends knew better than Yevna or I did. Another day's travel would bring us to the slopes of Brana, the third of the Three Sisters.\n\nThe flanks of Brana, covered in twisted, stunted pine trees, had always been closest to my home in Asphodel. When we looked across the lake, it was Brana we saw first. Yet I'd never been here, on the far side of the mountain.\n\nThis land belonged to the people of Nareven - the home of Giedra, Eliv, and Rion.\n\n- \"What should we expect?\" I asked the big blonde warrior.\n\n- \"I wish I knew.\" she said. \"By the time we left, Nareven had been raided three times, by Bacho and his son. The shepherds kept their flocks higher in the hills, and stopped coming down. There were more widows and orphans than anything else.\"\n\n- \"Will there be any trouble if we move in, and stay the winter?\"\n\n- \"A force like ours? No.\"\n\n- \"Will we able to feed ourselves?\"\n\n- \"Plenty of game in the hills, and there haven't been many hunters for the past few years - they're mostly dead. I suspect that whatever folk are still there will be happy to see us.\"\n\n- \"How will it be for Eliv and Rion - and for you - to go back home?\"\n\nGiedra shook her head. \"Not my home, Veran. It never really was.\"\n\n- \"Do you still have family there?\"\n\n- \"No.\"\n\nThat was the end of our conversation.\n\n***\n\nGuenna and Gerimir rejoined us the following day. They'd left Yevna, Nameless, Libot and Seva at the Steps. The four archers were now at least two days' travel behind us. But I wasn't worried about them. Yevna could lead them back by pathways the Izumyrians would never find.\n\nBut it crossed my mind that Guenna must have spent the better part of two days - and a night - alone with this Gerimir. I liked the lad, even if he was a Lowlander. But alone with my daughter?\n\n- \"The Izumyrians hadn't moved up the Steps, by the time we left.\" said Guenna. \"They may be exploring the forest, looking for a way around, but we're safe, for the next two days.\"\n\n- \"That's good news, then.\" I didn't ask about Gerimir. Guenna looked pleased with herself. And if she had been lying with the Lowlander - what business was that of mine?\n\nI'd told my daughters that they could choose their own husbands. I'd just never thought to specify that they couldn't pick a Niskadi.\n\nYevna settled on Inisian, a young fellow I wholeheartedly approved of. Tanguiste chose Vingoldas - and I loved that young man as well. So why not let Guenna choose for herself? She had excellent judgment. Usually.\n\nSo I would let her do as she wished. Except ... if she chose the other Lowlander, Iduallon - I would kill him before I'd let him marry my youngest daughter.\n\n***\n\nSeva and Libot rejoined us the next day. That left only Yevna and Nameless behind us. Giedra - and Vingoldas, when fully healthy - were better with sword and shield, or axe. But my daughter and the strange young woman who'd shed her original name were incomparable archers.\n\nAnd even with a sword and shield, I wouldn't want to face Nameless, if she had so much as a knife ... or a sharp stick.\n\nWe began descending, into the outer edges of the Vale of Nareven. Giedra took the lead, since she knew these parts better than we did.\n\nThere was good land here, which could have supported quite a few people. That would explain why Bacho and Kestutis had raided the Vale so often.\n\nMy main concern was whether we could find a decent place to live, which was also easy to defend. Then we would also have to find or build shelter for everyone, and gather in a supply of food for the winter, which was fast approaching.\n\nThe Izumyrians were still on my mind, of course. Would they pursue us all the way to Nareven? Time was against them. They couldn't possibly winter in the Uplands - not without grain or fodder for their horses.\n\nIt takes far more than swords and bows to lead a force of warriors. You have to know where you're going, where you can safely set up camp, and you have to make sure that you have food, water, and firewood.\n\nYevna and Nameless finally caught up to us, a day before we expected to reach the hamlet of Nareven. There were many of us who went to greet them, but we were all touched when old Guen Nadesti went to give both women a hug.\n\nYevna accepted the embrace quietly, but Nameless returned Mother Nadesti's hug - a surprisingly tender gesture for such a fearsome warrior.\n\n- \"They're past the steps.\" Yevna told me. \"On foot. But we haven't sighted them in the past two days.\"\n\nThat was good news. After delivering it, Yevna and Nameless lay down. They were both asleep a moment later.\n\n***\n\nNareven was quite a surprise - for all of us.\n\n- \"What on earth ...?\" said Giedra.\n\nThe hamlet was full of people. Full to bursting. From what Giedra had told us, I'd expected to find 40 or 50 people living there.\n\nThere were easily ten times that many. The vale was overflowing with humanity.\n\n- \"There ... there were never this many people.\"\n\n- \"Who are they, then?\" asked Guenna.\n\n- \"I have no idea. What are they all doing here? Where did they come from?\" wondered Giedra. Neither she, nor Eliv or Rion could even recognize the place that where they had once lived.\n\nThe answer to those questions proved to be quite simple: the Izumyrians.\n\nBacho's lands, and the hamlets on the edge of the lake, hadn't been the only places visited by the invading horsemen.\n\nWith a few fair words, and perhaps a coin or two, the Izumyrians could have learned whatever they wanted to know. Instead, they preferred to demand instant cooperation, and then to use force to compel obedience.\n\nWherever they went, they burned and killed. There wasn't much loot for them to plunder, because we simply didn't have very much.\n\nBut the Izumyrians weren't shy about destroying our homes, or slaughtering our little flocks. It was wanton destruction. Senseless, really. Did they honestly believe that anyone would tell them where the Duchess was - after they'd raped our wives and daughters, and taken the least thing of value that we possessed.\n\nI say 'our' - and that was quite a revelation for me. Uplanders generally saw other Uplanders as potential threats. We had so few dealings with Lowlanders; the most likely person to steal your sheep, or to kill a member of your family, was another Uplander.\n\nBut now we met dozens of people who had all been raided by Bacho, and then attacked without warning by the Izumyrians.\n\nThey were angry, and they had these things in common. That was the only possible explanation for the presence of so many people in a single place. There were survivors from the lake area, and from much further west and south. The Izumyrians had driven these folk from their homes, and they'd all collected in the Vale of Nareven.\n\nThe 'Scouring', they called it. The Izumyrians had swept and scrubbed the people from lands they'd occupied for generations. And it had somehow buried all of their traditional suspicions, hostilities and feuds. You don't swat a mosquito when a bear is hunting you.\n\nThere was another surprise awaiting us, as the word of our arrival spread.\n\nWe were famous.\n\nThe Duchess and her baby were certainly objects of curiosity, as in 'Ah - so that's the lady they was lookin' for?'. Folk were also pleased when they learned the name of her little son. Borna was a name that still resonated, in the Uplands.\n\nBut when they learned that the newcomers were led by Guen Nadesti and Veran One-Eye (though some still called me Hammerfist), we were mobbed.\n\nA hundred men came to shake my hand. I had no hope of remembering all of their names. And dozens of women, too. Many wanted to meet my daughters as well, which left Guenna with her hands full. Tanguiste and Yevna had made themselves scarce.\n\nI was amazed that almost all of these people knew that Bacho and Kestutis had been searching for me for years. Everywhere they'd gone, apparently, they'd asked for news of me. And an enemy of Bacho, it seemed, had many new friends.\n\nThere were Lake-people who remembered me, and I them. They'd been telling tales of Bacho and Hammerfist to all these other folk. They knew what had happened to Meonwe, and to my son, Iarn. It was common knowledge around the Vale that I'd escaped with my daughters.\n\nSo many of them had questions. Where had we gone? How had we survived the winters?\n\nI don't know who first said it, but somehow these people discovered that I had killed Kestutis. The press around me grew even greater.\n\nI had to beg them to give me leave, to see to getting our party settled. I promised that I would answer their questions soon.\n\nMy hand hurt, from being squeezed so often.\n\n***\n\n- \"Was it you?\" I asked Giedra.\n\n- \"Was it me what?\"\n\n- \"Don't play innocent. Was it you who started telling folk that I killed Kestutis?\"\n\nGiedra simply smiled.\n\n\"The only other ones there were Yevna, Guenna, and Nameless.\" I said.\n\n- \"Why did you ask, if you knew that it was me? You're welcome, by the way.\"\n\n- \"I should thank you?\"\n\n- \"Of course you should. I've acted as a guslar for you - and you didn't even have to pay me.\" said Giedra. \"People already respected you; now they have a reason to be grateful.\"\n\n\"If this doesn't work to our advantage, I'll ask your pardon.\"\n\n***\n\nIt may be that Giedra was wiser than me, in some ways. On our second day there, two men and a woman asked to see me. They were a grandfather, his daughter, and her adolescent son.\n\nThey went straight to the point: they offered us their house.\n\n- \"We have kin we can share with - least until you can get something built.\" said the older man.\n\n- \"Can't have those weans sleepin' outside.\" said the woman.\n\n- \"We can't take your house.\" I said.\n\n- \"Course you can. We'll be a bit tight, but it'll be warmer that way.\" said the grandfather.\n\nI thought of Hedyn's wife and her babe, and of Guen Nadesti.\n\n- \"Thank you.\" I said.\n\nI found Tanguiste and Vingoldas, and told them about this generous offer. Tanguiste had been busy organizing our people to gather food. Yevna, Libot and Nameless had already set out to hunt, with Giedra, Eliv and Rion, who knew the surrounding area best.\n\nAccommodation was another task that Tan had already been considering.\n\n- \"That's wonderful.\" said my daughter. \"Who were you thinking of giving it to?\"\n\n- \"Hedyn's wife. Mother Nadesti. The two oldest women ...\"\n\n- \"What about the Duchess?\"\n\nDamn. She had a point, there.\n\n- \"Fine.\"\n\n- \"I'll go with you.\" said Tanguiste. \"In case some diplomacy is required.\"\n\n- \"Because I'm not diplomatic?\"\n\n- \"It's not your greatest strength.\"\n\nOn our way, she told me what she'd achieved so far. That brought me up short.\n\n- \"You make me feel like a fool, Tan. You've been busy looking after the essentials, while I stand around shaking hands and forgetting names.\"\n\n- \"They want to see you.\" she said. \"You can't just ignore them.\"\n\n- \"I could, you know.\"\n\n- \"No, you can't.\" said Tanguiste. \"And look at this way: every time you talk to these folk, and let them see you - that's fewer people to bother Sulcen or Mother Nadesti. Just yesterday, there were at least half a dozen who asked if they could see Yevna's teeth.\"\n\n- \"I didn't know.\"\n\n- \"Well, now you do.\"\n\nWe found the Duchess sitting against the side of a house, cradling her babe. Prosquetel and Iduallon were with her, though there was no sign of young Gerimir.\n\n- \"Well?\" said the Duchess. She was glaring at me.\n\nTemara was a handsome woman. Quite lovely, in fact. But when she frowned and scowled - as she was doing now - it completely spoiled her good looks.\n\nOn top of that, I had no idea what she was upset about. My first instinct was to repay her in kind, and bark 'Well, what?\" However, mindful of Tanguiste's suggestion about diplomacy, and considering the Duchess had come through a difficult journey, I softened my reply.\n\n- \"Pardon me?\"\n\n- \"Why have you not found accommodation for us yet?\" she snapped.\n\nThat must have encouraged Iduallon to believe that he could butt in. He surged to his feet.\n\n- \"The Lady cannot sleep outside, like a beggar.\" he began. \"That is the Heir to the Duchy of Hvad in her arms!\"\n\nI could have said something very rude, or very stupid. But I was very conscious of my daughter standing beside me, so I decided to be only moderately rude.\n\n- \"You seem to have difficulty coming to terms with a simple fact: you aren't in Hvad. I am not your lackey. The people who fought to keep you safe from your pursuers don't wake up every morning wondering how they can best be of service to you.\"\n\n\"We took you in when you were in danger, and offered our hospitality. That, and our protection - such as it was. Do you remember Yorun? Or Weyl? They died fighting the Izumyrians who were pursuing you.\"\n\n\"No one has called you beggars. But do you honestly believe that the people here deserve to be called that?\"\n\nProsquetel rose slowly to his feet.\n\n- \"Your pardon, Master Veran.\" he said. \"We do not wish to appear ungrateful. Please forgive the Lieutenant - he spoke in haste, out of concern for the Duchess. And her child.\"\n\nHe cleared his throat, rather noisily.\n\n\"Was there something you wished to discuss with us?\"\n\n- \"As a matter of fact, there is.\" I said. \"We've been given a house - if you'd like to sleep inside tonight, Lady.\"\n\nThe look on their faces was a sight to see.\n\n- \"Was that diplomatic enough?\" I whispered to my daughter.\n\n- \"Very impressive.\" she said.\n\nThe Duchess' gratitude lasted only a few minutes. When she learned that she would have to share her lodgings with Hedyn's wife, Mother Nadesti and the other older women, her scowl returned.\n\nWhat did she expect? That the people of Nareven would come out to greet her, and strew flowers in her path?\n\n***\n\n- \"There's no leader here.\" said Guen Nadesti.\n\n- \"I know. I didn't understand it when we arrived, but there was no one out scouting.\" I pointed out. \"They didn't even know how close we were.\"\n\n- \"Bacho killed a number of headmen, on his raids.\" said Vingoldas. \"Then the Izumyrians wiped out even more.\"\n\n- \"So there is no leader in the Vale.\" repeated Mother Nadesti. \"We have to change that.\"\n\n- \"Change it how?\"\n\n- \"Make you the headman.\"\n\nEven I could see that it wasn't a completely far-fetched idea. I was the best-known person within 50 leagues - by far. But I didn't want to be headman. Even on the Hill, I'd repeatedly tried to keep Guen Nadesti or Vingoldas in a position of authority.\n\n- \"That made sense - on the Hill.\" she said. \"You argued that Vingoldas was more popular. More trusted. But here? Name me one better candidate, Veran. Name that person, and I'll support them.\"\n\nShe was right, in a way, but there were several people I had to consult first - beginning with my wife.\n\n- \"What do you think?\"\n\n- \"You'd make the best leader.\" said Sulcen.\n\n- \"But that would make you the Headman's wife. Are you sure that you want that much attention?\"\n\n- \"They already know who I am, Veran. But I appreciate your ... concern.\" she said. \"Besides, your girls will do most of the work.\"\n\nMy daughters were all for the idea.\n\n- \"This place needs organizing.\" said Guenna. \"Badly.\"\n\n- \"And if we can act in your name, that will help immensely.\" said Tan.\n\n- \"Better you than me.\" said Vingoldas.\n\n***\n\nWhen people heard that I wanted to address them, they came together to hear what I had to say. They knew who I was, and what I'd done - and if the stories had been exaggerated, somewhat - well, in this case, that was a help.\n\nI stated the case plainly.\n\n- \"We need food, and more food. We need shelter. No one can be left sleeping outside, come the winter. And then we have to prepare, in case the Izumyrians come.\"\n\n\"That means that we have to work together. I know - no one knows better how difficult it is to see your rivals, or even your enemies, just the other side of the Vale. But if Guen Nadesti and I can make common cause ...\"",
        "It was remarkably easy, from that point on. I won't lie: there were a few unhappy men, who had ambitions of their own. One was bold enough to cry out.\n\n- \"He's too old!\"\n\nIt was a fair point, I thought. My best days were long past. But the hundreds of people in Nareven didn't agree; they shouted the man down. The collective growl was actually frightening.\n\nI was made leader by acclamation.\n\nI promised to listen to their complaints and their suggestions. In the meantime, I asked them to accept my daughters as they would me.\n\nYevna took charge of the food supply. She made sure that hunting parties went out in different directions, so that they wouldn't trip over each other, or accidentally shoot another hunter instead of a deer.\n\nTanguiste put people to work, finding tasks for everyone best suited to their abilities. Young and old could gather food and herbs, or thatching for houses. Men with axes were set to felling trees.\n\nThere were nowhere near enough houses for the multitude of people in the Vale. If we couldn't build shelters, the coming winter was going to decimate us.\n\nAnd then there was the problem of the Izumyrians.\n\nGuenna organized the fighters. She posted scouts at the two main entrances to the Vale: from the slopes of Brana, the route we'd taken, but also the path to the lake, which Bacho had used so many times. If they chose to approach by that route, our scouts would see them coming in plenty of time to give us warning.\n\nAnd if the cavalrymen continued to pursue us across the slopes of Brana, there were several excellent sites where we could lay ambushes. That is, if we could gather enough fighters.\n\nWithin those first few days, 30 men came to me, ready to fight in defence of the Vale. That immediately tripled the number of warriors we'd come with.\n\nIt was a disappointingly small number, given how many people were gathered in Nareven. There should have been at least twice, and possibly three times as many.\n\nBut Bacho and Kestutis had killed many, over the years, and the Izumyrians had slaughtered dozens of men of fighting age. Those who were left were often too old, or too young.\n\nThere was, though, another fascinating reaction to our arrival. Only a blind man or woman could have missed the fact that fully half of the warriors in our party were women.\n\nI don't know if Giedra had been talking. But I had an odd experience on our fourth day there.\n\nThree young women asked to speak to me.\n\n- \"You're Payl's great-grandson, aren't you?\" one of them said.\n\n- \"I am.\"\n\n- \"And your daughters are warriors?\"\n\n- \"Yevna may be the best archer in the Vale. And Guenna saved us several times, when the Izumyrians were pursuing us. Tanguiste - well, not so much - but everyone can make a contribution ...\"\n\n- \"What if we wantto be fighters?\" said one of them. She was a tiny thing, with frizzy hair and enormous eyes.\n\n- \"If you want to learn to fight,\" I said, \"we'll teach you.\"\n\n- \"That's what I want.\"\n\n- \"Me too.\" said her friends.\n\nI learned, over the next week, as I had similar conversations over and over again, that there were dozens of women who were prepared to take up weapons.\n\nPeople knew my name. But my ancestor, Payl, was a legend.\n\nIt may be that the deaths of so many men left families without a male authority figure. That freed daughters; there was no one to tell them what they couldn't do, and what they weren't allowed to do.\n\nOr perhaps the young women saw Giedra, or Nameless. Or Yevna. Eliv, Rion, Seva, Guenna ... even Dengelle, still recovering from her broken arm.\n\nThey weren't boastful (well, except for Giedra). They didn't swagger, or push people aside. But they walked about with a certain ... confidence.\n\nThey'd been in battle, and they hadn't backed down.\n\nThe old folk in the Vale? They thought that I was a hero. They looked to me for leadership, and happily retold stories where I featured prominently.\n\nBut the younger ones? There weren't so many young men. The young women, though, looked to Giedra and Yevna and Nameless ... and saw the tales of Payl come to life.\n\n- \"You were right.\" I said to Giedra.\n\n- \"What was that? Say that again.\"\n\n- \"You heard me.\"\n\n- \"Maybe. But I want witnesses.\" said Giedra. \"Can we call an assembly?\"\n\nI let her enjoy the moment.\n\n- \"Are you done?\" I asked.\n\n- \"Almost.\" she laughed. \"Oh, Veran, can you imagine if I'd met you when you were younger?\"\n\n- \"How much younger? When you were four years old?\" I made light of it, but I was flattered by what she'd said - I can admit that.\n\nShe laughed again. \"I was paying you a compliment, old man.\"\n\n- \"I know. You're a beautiful woman, Giedra. And you impressed me the very first time we met.\"\n\n- \"But? Thank you for the compliments, but I can hear the 'but' ...\"\n\n- \"It's just that I don't think your daughters would ever be able to match you. Whereas mine are all so much greater than I am.\"\n\nShe didn't respond right away. Giedra did me the great courtesy of considering what I'd said, and mulling over my words.\n\n- \"Every time ...\" she said. \"I try to ... and then you say something like that.\"\n\nI wasn't sure, for a moment. It seemed to me that Giedra might actually cry. Then she snorted, and raised her head.\n\n\"Alright - let's go back to the beginning. I was right. About what?\"\n\nI told her about the dozens of young women who'd come to see me, wanting to be warriors, to fight against any threat to the Vale.\n\n- \"I need your help, Giedra.\" I said. \"These women need training. I don't know if I can do it. I mean, I can teach them - I just don't know if I can inspire them. But you could. Hell, a third of them already think that you're another Payl ...\"\n\n- \"I am, Veran. You know that. I told you that when we first met.\"\n\n- \"Will you help to train them, Giedra?\"\n\n- \"Of course I will!\" The she grinned at me. \"I'll create my very own warband. All I need after that is a guslar!\"\n\nIn the end, we had almost 60 women volunteers. We split them into three groups: Giedra took those who looked like they could fight with axes, spears or long knives, women who didn't flinch at the prospect of combat at close quarters.\n\nYevna took those who appeared to be most suited to the bow, and trained them in archery. They shot at targets, of course, but she also took them hunting.\n\nNameless watched, and waited, before she created a third group: three women who seemed equally adept with bow and melee weapons.\n\nGiedra wasn't happy when Nameless 'poached' two of her best prospects. But she didn't make an issue of it.\n\nOf the sixty or so women who began training, about a third eventually dropped out. Many didn't have the skills, or the physical skills and stamina required. 'Culling the herd', Giedra called it.\n\nThere were also quite a few who could wield weapons, but only like Dengelle, or Eliv ... second-rank fighters, at best.\n\nBut Giedra emerged from the experience with 10 more women warriors. Added to Eliv and Rion, she had a 'tail' of a dozen. The male fighters scoffed at these women - until one man unwisely decided to molest one of Giedra's students.\n\nWe never found more than a single piece of him.\n\nYevna gathered a dozen decent archers to herself, which helped enormously, because they could double as hunters and scouts, guarding the approaches to the Vale.\n\nOne of the women Nameless had trained changed her mind, and rejoined Giedra's band. The other two, though, stuck to Nameless like burrs. They were skilled fighters; I wouldn't have wanted to face them, even had I been half as old as I was now.\n\nEvery day that passed, Tanguiste and Vingoldas found a way to build more shelters. By building directly adjacent to existing houses, they only needed to construct 3 walls, instead of four. It wasn't ideal, but more and more people got out of the cold - and they knew who to thank.\n\nThe nights were growing colder, and there was a chill in the air even during the day. The first frost had come before we'd even arrived in Nareven.\n\nEvery day, I worried a little less about the Izumyrians. If they hadn't found us by now, it was possible that they were more worried about where to spend the winter. Or perhaps there was more resistance in the Lowlands than they'd expected.\n\nPeople continued to trickle into the Vale. Some came with their families, but some were young people, alone, or with a few friends. Word had spread about who was in Nareven. I felt odd, that people would travel to join us because they'd heard my name. I didn't deserve so much ... trust? Nor did I know how to meet their expectations.\n\nBut we weren't about to turn away young men who could fight, or who help us build houses. And young women, too.\n\nTanguiste was soon able to offer the Duchess a house of her own, exclusively for the Lowlanders.\n\n- \"Thank you.\" said Mother Nadesti. \"Another night with her might have pushed me over the edge. I was seriously tempted to stab her in her sleep.\"\n\nThen Tanguiste informed me that our house was ready.\n\n- \"Our house?\"\n\nShe counted the names on the tips of her fingers. \"You, me, Sulcen and Vingoldas, Guenna, Yevna and Dengelle, and Nameless.\"\n\nI was very pleased that she'd included Nameless. That girl didn't just lack a name; she had no home. We were in the process of adopting her, and Tanguiste had known that we should include her in our household.\n\nNameless herself wasn't so sure.\n\n- \"But this is ... just for your family.\"\n\n- \"Yes, it is.\" I said. \"And that's your spot - right over there.\"\n\n- \"But ... shouldn't Mother Nadesti be here? Instead of me?\"\n\n- \"Oh, goodness, no.\" said Sulcen. \"She snores something awful.\"\n\n- \"Just mind you don't let Guenna hog all of the blankets.\" said Tanguiste.\n\nNameless didn't have to say anything. The expression on her face was all the thanks we could have asked.\n\nTanguiste had delayed building a house for us, until virtually everyone else in the Vale had a place to sleep. Only those who'd arrived after us still needed to be provided for.\n\nIt might seem like a small thing, but folk knew that my daughter hadn't rushed to look after her family first. Actually, she'd left us until last. She didn't announce that fact, but there were people who understood perfectly. We weren't here to feather our own nests, or to enrich ourselves at the expense of others. It was what my father taught me, and what I tried to instill in my daughters.\n\n***\n\nThe Izumyrians didn't come.\n\n***\n\nIt was quite a mild winter - for which we were very grateful. And my daughters continued to do the bulk of the work that I should have been doing - for which I was very grateful.\n\nI don't mean to suggest that I was idle. Far from it. But as headman at Asphodels, I'd had less than 50 people to worry about. There were now almost 600 in the Vale. I couldn't possibly have handled everything that needed doing.\n\nNo matter how much I tried, I couldn't speak to everyone on a daily basis. Try saying 'Hello -how are you?' five hundred times a day.\n\nMy daughters took care of virtually everything, ably assisted by Vingoldas, Giedra, Nameless, and many others. Guen Nadesti helped me, listening to complaints, and helping to resolve quarrels.\n\nMost of these were of a type that we were both familiar with.\n\nBut there was one issue that neither of us quite knew how to handle: the Duchess.\n\nShe was difficult at the best of times. Then there was Iduallon, who was still humping Seva, plus two other young women - that we knew of.\n\nWe could talk to old Prosquetel, but his amiability was merely a device, a way to have us excuse the Duchess' increasingly imperious behaviour. I liked young Gerimir, but he grew very uncomfortable if anyone criticized the Lady of Hvad in his presence.\n\nThe Lowlanders (except for Gerimir) acted as if everyone in the Vale was some lower form of life which had been created for the express purpose of serving them. It was irritating, at times. Even when they weren't deliberately antagonizing us, they could be annoying.\n\nBut it was even worse than that.\n\nOne night, Tanguiste asked me to join her.\n\n- \"I'm just going to visit one of the original families in the Vale.\" she said. \"I think that you should come with me.\"\n\n- \"Really?\" I said. \"Why do you need me there?\"\n\n- \"Just trust me. Please. And don't say or do anything - no matter what you hear.\" Tanguiste didn't often ask me to do something like this, but the tone of her voice was enough to make me agree without question.\n\n- \"Alright.\"\n\nWe entered the house. I knew it well - it was adjacent to the very first new shelter Tanguiste had had built. That meant that the people occupying the house right beside it - separated by a stone wall - were the Duchess and her entourage.\n\nThe families who lived there were known to me. I greeted them with a nod, since my daughter had enjoined me not to speak. The matriarch of the house simply pointed to the wall separating them from the Lowlanders.\n\nTanguiste led me there. The two of us stood next to the stones. There was no mortar between them; gaps had been plugged with small rocks, bits of wood, and clumps of thatching.\n\nI could hear the voices of the Lowlanders through it.\n\nThey weren't whispering. Could it be that they didn't realize we could hear them? Perhaps living in the Duke's castle had led them to believe that rooms were soundproof.\n\n- \"Are you certain?\" said Prosquetel.\n\n- \"Absolutely.\" said Iduallon. Even the sound of his voice set my teeth on edge.\n\n- \"Tell the Duchess, then.\" said the old man.\n\n- \"Lady, I believe that we can raise a substantial force among these Uplanders, just as Borna - the first Borna - did. With their support, we can regain the Duchy, for you and your son.\"\n\n- \"Tell me.\"\n\n- \"There are dozens of unaffiliated warriors here.\" said Iduallon. \"Men and women. I believe that we can appeal to them, and win them over.\"\n\n- \"How?\"\n\n- \"With a promise of future reward, Lady. Wealth, loot ... glory and renown. They are credulous, and easily led.\"\n\nTanguiste laid her hand on my arm. It was a good thing she did; my instinct was to start tearing stones from the wall, so that I could get at that turd Iduallon. But I'd promised Tan that I would listen - and not say or do anything. She put a finger to her lips, as well.\n\n- \"How do you know this, Iduallon?\" said the Duchess.\n\n- \"I've already recruited quite a few of them, Lady. And I believe that I can win over many more, given ... the opportunity.\"\n\n- \"The opportunity?\"\n\n- \"The biggest obstacle, Lady, is One-Eye.\" said Prosquetel. \"If he were ... eliminated, then Iduallon would be free to persuade the bulk of the warriors here to support you.\"\n\n- \"Would you be able to ... remove him?\" asked the Duchess.\n\n- \"It can be done, Lady.\"\n\n- \"Best not to say anything to Gerimir about this.\" added Prosquetel. \"He can be a bit ... soft ... where the Uplanders are concerned.\"\n\nI turned my head, and looked at Tanguiste. She didn't look surprised at all.\n\nI led her outside. My fists were tightly clenched, as I tried hard to control my rage.\n\n- \"How long have you known this?\"\n\n- \"A week.\"\n\n- \"Who was Iduallon talking about? Who supports them?\"\n\n- \"Seva. Odma. A few of the newcomers.\"\n\n- \"Why didn't you tell me?\" I said.\n\n- \"I just did.\"\n\nSome might forgive me for having a low opinion of human nature, given my family history. But whenever I've expected the worst from people, they've surprised me with their kindness, their generosity, and their ability to do good even when surrounded by evil on all sides.\n\nMoruith and Inisian took us in. Guen Nadesti let us stay on the Hill. And my three girls, who'd been hated, and hunted, but were still capable of so much kindness.\n\nOne doesn't offer hospitality expecting a reward; one offers hospitality because it's the right thing to do. But I was still shocked that the Lowlanders would stoop to murder because they saw me as an obstacle.\n\nI didn't want to react hastily, out of anger. This was a matter that touched all the members of my family, so I called them together the following day: my daughters, my wife, Vingoldas, Nameless and Dengelle, and Mother Nadesti.\n\nAt my invitation, Tanguiste told the tale. I wanted to see the reactions on their faces, to see if they matched my own feelings.\n\nVingoldas already knew. Yevna obviously hadn't; she was quivering with anger. Dengelle looked deeply saddened.\n\nGuen Nadesti met my eye.\n\n- \"You would be within your rights to kill them all.\" she said.\n\n- \"Not the babe.\" said Tanguiste.\n\n- \"Including the babe.\" said Mother Nadesti.\n\nNameless wasn't going to speak; she was still getting used to the idea that we counted her as a member of the family. But Guenna was obviously troubled.\n\n- \"How important is he to you, Guenna?\" I asked. I didn't have to say his name.\n\n- \"I like him, Papa. He's ... he's an honourable man.\"\n\n- \"He knows nothing of this. The other Lowlanders haven't told him of their plan.\"\n\n- \"I'm relieved to hear it.\" she said.\n\n- \"I'm not.\" said Yevna. \"If you called us here to vote, then I say kill them all.\"\n\nTanguiste held my arm. \"Wait.\" she whispered.\n\n- \"Not the babe. And not Gerimir.\" said Sulcen. \"Guenna loves him.\"\n\n- \"Not the babe.\" said Dengelle, quietly.\n\n- \"It's your choice, Veran. You're the Headman.\" said Guen Nadesti.\n\n- \"And will you all abide by my decision?\" I asked.\n\n***\n\nI arranged a meeting, between the Lowlanders and my family. Then I included Giedra and Hedyn, because I thought they should know, and the people in the house adjacent to the Lowlanders, because they already knew.\n\nWe asked to use the largest house in the Vale - and it was still crowded, with all of us in there. Giedra and Hedyn looked confused; I hadn't told them anything about why we were gathered. The Lowlanders were curious, but not too apprehensive. The Duchess wore her customary haughty expression.\n\n- \"I've called you all here to hear justice served.\" I said. \"These people - the Duchess and her men - have been conspiring to murder me.\"\n\nOnly three people looked surprised: Giedra, Hedyn, and Gerimir.\n\n- \"You can't be serious.\" said Prosquetel, smoothly. But Iduallon and Duchess Temara looked neither surprised nor offended. Gerimir had the decency to hang his head in shame.\n\n- \"My daughter and I stood in the house next to yours, two nights ago. We heard you say that my 'removal' would allow you to recruit more fighters.\"\n\n- \"Come now ...\" said Prosquetel, with a smile. \"When we said 'remove', we were simply suggesting that we might be able to arrange the election of another headman - someone more, ah, sympathetic to our needs.\"\n\nTanguiste spoke up. \"Except that Iduallon used the word 'eliminate'.\" she said. \"And two nights before that, you yourself said that a 'convenient accident' might be 'arranged'. Do you still want to claim that you were talking about an election?\"\n\nProsquetel had no quick reply. Iduallon scowled, though. \"You have no power over us.\"\n\n- \"Veran has every right.\" said Mother Nadesti. \"He can put you to death. All of you - including the babe.\"\n\n- \"No!\" shouted the Duchess. She clutched her son tighter, and half turned, as if to shield him with her body.\n\n- \"You wouldn't!\" said Gerimir. \"That would be barbaric!\"\n\n- \"But to abuse the hospitality of the people who took you in? To murder the man who shed blood to defend you? That's civilized?\" Mother Nadesti didn't have to raise her voice. She had everyone's attention.\n\n\"Do you know who this man is? Veran has helped you, protected you, fed and sheltered you. He should have handed you over to the Izumyrians.\"\n\nThat seemed to sting the Duchess.\n\n- \"How dare you!\" she cried. \"You owe me your loyalty! I am the Duchess of Hvad! Mother of the Heir!\"\n\nI could only shake my head. Some people, it seems, cannot learn. But this display, today, was more for the people of the Vale. They'd hear everything that was said and done.",
        "- \"I've chosen not to kill you all.\" I said. \"The babe is innocent. To deprive the boy of his mother would be needlessly cruel. But you, Iduallon - and you, Prosquetel ... you've used your devotion to the Duchess to avoid helping anyone else.\"\n\n\"That ends today. I will feed the babe, and the Duchess. But if you two wish to eat, then you'll have to work, just like everyone else.\"\n\n\"I won't expel you, either. That would be a virtual death sentence. So you may remain until the spring. And then you should seriously consider leaving the Vale - because if you fall foul of me once more, I will not be so merciful.\"\n\n\"Gerimir - you may stay as long as you like. I have no quarrel with you.\"\n\n\"That is my judgment.\" I said. \"Does anyone else wish to speak?\"\n\n- \"I do.\" said my wife. Sulcen stepped forward. Then she cleared her throat, and spat on the ground, between me and the Lowlanders.\n\nI saw Prosquetel looking thoughtful, as if he might try to win over some of the people gathered here. But my daughter beat him to it.\n\n- \"I wish to speak.\" said Yevna.\n\nShe stepped forward, and stared at each of the Lowlanders in turn.\n\n\"The only reason I'm not killing you now is because my father forbade it\".\n\n\"If anything should happen to my father, Duchess ... anything - if he should trip and fall - then you'd better hope that he recovers. Because if he dies, I'll put an arrow through Iduallon's head. Then Prosquetel's. And then yours.\"\n\n\"I'll spare Gerimir - at first - because my sister swears that he's a decent man. But the rest of you? You've taken our hospitality, and you can sit here and plan to murder my father? I'll kill every single one of you.\"\n\n- \"You wouldn't dare.\" hissed the Duchess.\n\nYevna laughed. \"I would. In a heartbeat.\" she said. \"And if you found some way to kill me, and make it look like an accident ... you'd still have to deal with Nameless, and a host of others.\"\n\n\"Let me make it very simple for you: kill my father, and none of you will ever leave the Vale alive. I'll throw your corpses in the latrine. Except for the babe - he'll grow up to be an Upland shepherd.\"\n\nNo one chose to speak after Yevna had finished.\n\n*****\n\n<hr >\n\n Weans: wee ones. Small children."
    ],
    "authorname": "AspernEssling",
    "tags": [
        "combat",
        "dark ages",
        "fantasy",
        "swords",
        "women warriors"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-chronicles-three-sisters-16"
}