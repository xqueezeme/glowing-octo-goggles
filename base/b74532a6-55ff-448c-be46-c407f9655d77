{
    "title": "Lucky Bastard",
    "pages": [
        "SO one day I was bored and thought about things and said \"Oh why the hell not?\". I hope you kids enjoy this one because it could become a sequel, or two, or maybe even three. Need to thank freakynlovinit for tossing me a hand with this one. I also need to thank you the reader for taking time in reading this one. Read it, love it, vote on it, tell a guy how you feel even, and there could be more of it. Enjoy the show kids! \n\n*\n\nBefore sleep overwhelmed Leo's eyes a thought resonated in his mind. It was a simple thought, but one that rang out many times.\n\n\"How could I be so lucky?\" he mumbled into the night.\n\nIt was the barest of whispers as her didn't wish to disturb the two beauties that lay curled into his body. His bleary, very fulfilled eyes looked down into the content sleeping faces and he let out a relived sigh. How he came to this time in his life was something his mind was still wondering. Luck may have played a part in it, but something told him in his mind that fate was more likely the reason for his happiness.\n\nIt was only three years earlier that Leo had graduated from college and gotten a great job at a software company. For the first eighteen months of his time he was busier than he had ever been in his life. While he dated a bit, the women he dated were nothing major in his life. A few were nice, but lacked that it factor. The rest were simple one night stands that he had no intention of getting back with. \n\nLeo was a simple man with a lot of ambition. At five ten and a hundred seventy five pounds he was an average looking man. His green eyes and brown hair didn't really make him stand in with the crowd. The only thing that really set him apart from the pack was he took care of himself and ran daily. His diet was a harsh one of tough exercise and simple foods. He was raised poor and had to fight for every thing he had in his household of three brothers and sisters. At the middle of them he was lucky for what he got and was grateful for a while. As he grew older he wanted to get out and go higher than his family could.\n\nIn college he pushed himself hard and stayed focused in class. He worked a side job to make ends meet and scrimped and saved to get to the top of his class and get a good job offer as soon as he took off his graduation clothes. From the back end of the Bronx to the highlights of Manhattan, Leo took his place in the big world and made his mark fast. He got a good loft apartment on Nassau St and his life took quick strides into the fast lane.\n\nHis second eighteen months since graduating had really beaten him up. He met a girl that nearly killed him. She was hot and fun loving, but a complete slut. Leo really had a feeling for her after a few months dating, but in the end she ripped his heart out by dumping him for a supposed 'friend' of his named Daryl. \n\nDaryl's lame excuse was they were drunk and one thing led to another. It was an excuse that stood for about ten hours, then Leo got a clearer focus when he found her cell phone under his bed. He found a video on the phone that abruptly changed his mind as it was them fucking on it. Neither of them were as drunk as they claimed and that was all he needed to confront his \"friend\". A brief exchange of words and a sucker punch from Daryl unleashed the lion that Leo was named after.\n\nLeo kept his job even though he was almost arrested for the fight. Daryl's jaw was broken and he tried to sue, unsuccessfully. Leo, again, dated and this time he nearly lost all faith in women. The newest girlfriend was what every man claimed to want. \n\nTall, blond, and beautiful Penny was a welcome relief for about three months. Things were fine and then Penny's switch flipped. She went from nice to very clingy and possessive. Leo would say hi to a girl at work and Penny would freak out on him for looking at other women. The arguments of Penny's insecurities went wildly out of control and Leo finally had enough. He snapped on her one day after she harangued him for helping an employee of his out with a loan. It was so the girl could keep her heat on and she promptly paid him back the next payday.\n\nPenny would hear none of his reasoning and railed against Leo for helping his friend. Things were so heated between the two of them to the point that she slapped him and called him all manner of vile things. Leo took the slap without a word and walked to the bedroom. Penny was shocked when he suddenly emerged with three suitcases filled with her clothes. She shouted at him to put them down, but he opened the trash chute and dropped them down it. Penny's eyes bugged out and she began freaking out. Leo calmly took her arm and walked her to the door. Penny struggled and fought him the whole way, but Leo got her out the door and locked it. He sat against the wall next to the door and listened as she carried on for over half an hour before the police came to talk her down. \n\nAgain Leo failed with the society standards of beautiful women. He had all but given up on them after Penny and for good reason. He swore that never again would he date a psychopath, but he laughed aloud when he thought of the varying degrees of psychosis in the world. It took him three weeks to be done with Penny for good, but he was free and clear. For that time and the months after Leo buried himself in work. It was on one of those fateful days he met probably the coolest dude he could have imagined. He met his friend Alan.\n\nAlan was not the typical guy that Leo would normally had hung out with, far from it. He was a tall man whose Caribbean heritage showed in his skin and his hair. Alan wore his fashionable dreads long. They were long enough that they touched the middle of his back. More than once Leo had seen him without and the size of his Afro was one thing that made him laugh. Alan never let it out for long and kept his hair braided for sanity's sake. The two unlikely friends found each other when Alan was trying to hide from a disgruntled ex and it was only by Leo pointing the wrong directions to her at a bar that saved Alan a hard ear chewing. The whole misunderstanding was a slight one, but to the ex it was huge.\n\nLeo and Alan's friendship grew quickly when they found out they were the same age. At twenty five they both had a love for music of most types. They played football in their spare time and both hit the gym regularly. It was after two months of hanging out that Alan began to see Leo's reservations to dating. While Alan was a ladies man of no small skill, he saw that Leo was quiet and reserved the whole time they would go out. Seeing his friend in a rut Alan began to devise a plan of action.\n\nIt was a month after they had last gone to a club that Alan decided to help his buddy out. Alan worked as a promoter in his spare time for various up and coming acts. Mainly of the rap and hip hop crowd he made a good living hosting events and parties for the rappers on the rise. Alan had a new act that was starting to blow up and decided to get his buddy to the scene. He got a good gig at a really down club that catered to an under twenty one crowd. He made sure the stock was packed and after he was sure he could do no more he called up his friend.\n\nLeo was just on his lunch when his phone rang. He looked at the ID and saw it was Alan. Leo shook his head and answered the phone and was shocked at what he heard.\n\n\"Yo yo yo! OK Leo, I'm tired of you being boring! Your comin' out with me mon,\" Alan said and his Jamaican accent popped through.\n\n\"Oh yeah? Why's that?\" Leo asked chuckling.\n\n\"Cuz you need to get out and see some life me brudda,\" Alan said laughing and his normally thin accent was gone replaced with his mother's pure tone.\n\n\"Uh huh....and when is it that you started using your Mom's accent to talk to people?\" Leo asked chuckling.\n\n\"Well there's this girl I was trying to get with you see,\" Alan said suddenly in his normal voice.\n\nLeo shook his head and laughed a bit as his friend explained his recent failure to pick up a girl from a Starbucks using his island charms. Leo was face down on the table when Alan explained how she 'politely' rebuffed his advances. \"Politely\" was a code word for she shot him down flat. \n\n\"But seriously man, I got a really big after party for a new crew that's goin' somewhere. Wanna come? I promise you'll have a good time,\" Alan offered.\n\n\"I got the McClellan account I gotta finish by this weekend Alan. Maybe if I can get it done I will,\" Leo replied.\n\n\"That's a bummer dude. Well get that shit done or I'm comin' to yours and draggin' you out!\" Alan emphatically replied into the phone.\n\nLeo chuckled at the threat and nodded his head, \"Alright man. Then hang up and let me get back to work.\"\n\n\"Peace out my brother from another mother,\" Alan said in an overly upbeat tone.\n\n\"Later dude,\" Leo said and hung up.\n\nLeo finished his small lunch and went back to work. What he didn't tell Alan was he was nearly done with the project, he just wasn't up to going out this weekend. Visions of lounging on his couch watching the Thunder game was a good idea to him. A few beers, maybe a pizza, and he was set for the weekend. Leo went back to his desk and began the process.\n\nAlan heard the tone that Leo had and shook his head, he was lying. Leo was a horrible liar and that was part of the reason Alan dug him so much. No matter what at least he knew where he stood with him. As Alan pondered the future profits the party would net him he pondered Leo's fate. He knew full well the shitty relationships he had been forced to endure and wondered if anything would snap his friend out of it. Alan suddenly had an epiphany, he would drag Leo out anyways. The fun he was passing up was something Alan, as a true friend, couldn't let Leo miss out on. \n\nAlan's devious mind began to spin thoughts and hatch plans as he pondered the fate of his friends new weekend plans. As he pondered them he happened to look up and saw a very fine specimen of woman walk by. He forgot about his friend for a brief moment as he ventured forth for the conquest.\n\nThe three days till the weekend took longer than either friend imagined, but it finally arrived. Leo scored a big commission on the project as it was a big hit. His skills at graphic designs weren't wasted as he made a beautiful layout and spreed sheet. The numbers danced across the displays and as the executives watched the show Leo had also tossed in music to make the presentation that much more interesting. After all was said and done all the people in the room were applauding his work and his own boss was euphoric at the new found fortune that rolled in.\n\nLeo sat in his desk and looked out over the city as it started to get dark. He loved the sunsets and watching them from his thirty fourth floor was always pleasant. He looked up from his reverie after a few minutes and saw it was closing time. He turned off his computer and got his coat and briefcase. He signed out his pass codes to the computer and left the office. The elevator was crammed full of people from the building and none of them even paid him a mind as they went down. Leo inhaled a short breath to keep the cheap cologne and stale perfume from infesting his lungs. The long descent came to a close and the door dinged the bottom floor. Leo wisely waited at the back of the elevator for the mob to sprawl out and leave before he exited.\n\nA slow walk from the elevator to the security desk saw the long day come to an end. Leo pulled out his phone to ponder his order for the night when a hand grabbed his shoulder and stopped him cold.\n\n\"Stick em up!\" Alan said trying to sound hard.\n\nLeo rolled his eyes and sent his briefcase behind him and it caught Alan in the crotch. Alan grunted sharply as the edge of the case caught him square on in the jewels making him rethink his idea of trying to scare Leo.\n\n\"Give up?\" Leo said in a superior tone.\n\n\"Ow,\" was all Alan replied as he chuckled at the reversal of fortune.\n\n\"What are you doing here Alan?\" Leo asked confused to see his friend at his office building.\n\n\"Well my gig fell out at the last minute and now I'm bored. Looks like I'm infesting your place this weekend!\" Alan said coolly.\n\n\"That sucks, for both of us,\" Leo said back jokingly.\n\n\"Now that just hurts man,\" Alan replied grabbing his chest theatrically.\n\nLeo rolled his eyes and began to walk to the escalator to the lower level. Alan stopped being over dramatic and walked after. It was a short jog to catch up to his friend and they went down the escalator.\n\n\"Well if I'm not welcome to your place at least give me a lift so I can go somewhere fun,\" Alan begged.\n\n\"I can do that,\" Leo replied.\n\nIt was a while before the game anyways so he figured he could dump Alan off at his favorite club and have at least a night to himself. They walked the length of the garage to his car and got in. Leo's Nisan Ultima was a simple car, but a nice one that did everything Leo needed it to do. They drove out of the garage and out into the nightmare of Manhattan traffic. Leo had a policy of music in his car, if he drove it was his, if he wasn't then whomever drove was in charge. He put in a mix CD and the first song that played was a mournful song from Sevendust called \"Angel's Son\". Alan could get down to any music and sat back as the acoustic melody played.\n\n\"So where we going tonight? 40/40 or Groove?\" Leo asked knowing his friends favorite haunts.\n\n\"Neither, I got a new club I'm gonna scope out bro. It's on 23rd,\" Alan said.\n\n\"OK,\" Leo said and turned out of the nightmare and onto better streets. They drove the distance to the club and Alan smiled a bit.\n\nThe area they were forced to park in was not too far from the club and Alan looked at Leo and smiled darkly. The music playing was one of Alan's favorite rock songs called \"4 Walls\" by Black Light Burns. Seeing they were parked Alan shot his hand across and killed the engine. With a deft twist he turned the keys and pulled them from the ignition. Leo was wide eyed as his head went from back to front and then he was alone as Alan bolted from the car.\n\n\"What the fuck?\" Leo asked in pure confusion.\n\nAlan was already out and across the street leaving Leo alone in the car. Leo let out a bemused chuckle and got out of the car. As he did Alan hit the key lock locking the door and setting the alarm. There was no way Leo was missing out on this and that was final. Leo sighed as he trudged across the street in a determined walk to his friend. A plan of strangling him with his braids came to mind, but Leo knew that good friends were in very short supply in his life. He put his hands behind his back and stepped towards Alan's smirking face.\n\n\"This is for your own good Leo, now here you go,\" Alan said as he handed Leo a lanyard with a pass.\n\n\"Fine, I had a feeling you were pulling my leg when you gave me that over dramatic message on Wednesday,\" Leo said chuckling.\n\nAlan nodded his head and led Leo to the front door. They were greeted at the door by the biggest Samoan man Leo had ever seen. He was easily over six four and had to be about three hundred pounds. The man looked at their lanyards and nodded his head to the moans of the people in line. When they entered the club the hard bass lines of the new groups song was blaring. Leo had to admit it was catchy, but he wasn't a big fan of how over played it sounded.\n\n\"These guys are gonna hit it huge!\" Alan yelled to Leo.\n\n\"They sound like JayZ and Naz mixed,\" Leo said back.\n\n\"No!\" Alan said back semi defensively.\n\n\"Yeah, listen to that hit, then the cross, the hit sounds like Jay and the cross like Naz,\" Leo laughed back.\n\nAlan took a second to listen to the sound he was referring to and suddenly he was floored, they sounded exactly like them! Alan started to laugh aloud and shake his head. Alan was a realist however, they sold the clubs tickets out and he was a producer. So as long as it made him money they could sound like Mariah Carey and he wouldn't care. As he listened he saw the variety in the club and his eyes vectored in on a tall, leggy blond that was showing off all that was needed to get his attention.\n\n\"If you'll excuse me my brother. Your boy has some play to get,\" Alan said shaking his head to loosen the braids.\n\nLeo saw his target and shook his head as he rolled his eyes. She looked almost exactly like Penny and that was a killer to him. Leo realized that Alan wasn't looking and snatched his keys from the pocket as Alan walked to the woman. Putting his keys back in his pocket Leo decided to try and enjoy himself. He walked to the bar and as he got there a sight that nearly made his eyes bulge was greeting him. Leaning against the bar was a very sexy woman.\n\nHer black hair was wild and curly as it came from her head to her shoulders like a savage mane. Her dark cocoa skin was nearly glowing in the low lights and her full legs were prominently displayed. Her outfit was what one could call cute/sexy all at once. It was a midriff shirt that showed off a taught belly. A very short pleat skirt graced her hips and when his eyes caught sight of her legs he almost fell over. She was wearing thigh high socks with red and blue athletic stripes on the tops. Her lips were painted a wild blue and she looked like a cheerleader gone wild. Her left arm had a wild sunburst design on it and her right a long stemmed rose that was dripping blood. Leo sighed as he walked to the bar and tried not to look at her.\n\nThe woman noticed Leo trying not to stare and she got a wild grin on her face. She sauntered right up to Leo and in a very naughty school girl voice asked.\n\n\"So what do you think of my outfit?\" she teased.\n\n\"It's ummm...wow,\" Leo said back taking in the full sight of her.\n\n\"Wow?\" she asked back almost hurt.\n\n\"Great!\" Leo blurted trying to pacify her.\n\n\"Only great? Then I guess I better go,\" She pouted and turned away.\n\n\"No! No...it's...umm...really hot,\" Leo tried for the last time.\n\n\"Third times a charm,\" the woman said back smiling.\n\n\"Lucky me,\" Leo said smiling nervously.\n\n\"Indeed, lucky you,\" the woman purred as she took the seat next to him. \"Drink?\" she asked.\n\n\"Yes, beer and a...?\" he asked looking at her.\n\n\"Midori sour,\" she replied.\n\nThe bartender nodded his head and got him a beer and made her drink. He handed them their drinks and Leo paid for them. Leo took his beer and the woman her drink and she surprised him by clinking her drink on his.\n\n\"To an overdone act,\" she toasted.\n\n\"To the uninspired,\" Leo joked back.\n\nThe woman giggled as she sipped her drink. Leo tipped back his drink a bit and got a good swallow. He sighed as he set it down.\n\n\"And you're here why?\" she asked.\n\n\"My friend drug me out here. He is producing this mess,\" he replied.\n\n\"Oh you know Alan?\" she asked.\n\n\"Yes. Why?\" Leo asked suddenly confused.\n\n\"Cause he keeps trying to hit on me and my friend. Can you tell him a message for us?\" she asked politely.\n\n\"Sure. What do you need?\" he responded politely.\n\n\"Tell him Myra and Tamika said to to go eat a dick and leave us the fuck alone,\" the woman said emphatically.\n\nLeo almost choked on his next sip of his beer. He coughed up some foam from the laugh that erupted from his belly. The woman patted his back trying to keep him from choking to death on it and suddenly felt bad.\n\n\"Oh god! Are you OK?\" she asked with genuine concern.\n\n\"Fine,\" Leo got out in a high pitched gasp that was punctuated by another cough.\n\nThe woman gave him a concerned look as he looked at her and wiped the tears away. She laughed sheepishly as she hadn't seen him drinking while she said that. Leo shook his head and cleared his throat.\n\n\"Well I suppose that is payback for not telling you how good you look the first time,\" he said jokingly.\n\nThe woman giggled sweetly and patted his cheek.\n\n\"See now your making me feel bad,\" she said back smiling cutely.",
        "\"No, no, no. No feeling bad allowed. Your too cute for that,\" Leo said trying to be bold.\n\n\"And you say I'm cute. Now that's just plain flattery, and it might get you somewhere,\" the woman teased back and flicked his nose.\n\nLeo grinned sheepishly. The woman sensed his trepidation and eased off a bit. No need to tease him too badly, besides she could tell her outfit was doing just that. She picked up her drink and got from her seat. She walked up to Leo and gave him a sweet peck on the lips. Leo was shocked at the display and how thick her lips felt on his. She leaned back and a beautiful smile washed over her face.\n\n\"I'm Myra, maybe you'll see me again before the nights over. Thanks for the drink sweetie,\" she purred and walked away.\n\nLeo sat transfixed on her full ass. The way the skirt just hid it made his dick lurch in his pants. He had never been so close to a black woman before, but he was suddenly in love. The sway in her hips showed a sensuality he had never seen in a woman before and it took his breath away. Leo watched her disappear into the crowd and shook his head. He knew that a woman like that was way out of his league so he sighed and licked his lips. He tasted her drink and a slight sweetness under it that made him feel good. Leo went back to his drink and ordered a whiskey chaser. \n\nThree more drinks passed his lips as he watched the dancing and felt the music starting to change from the groups to a house DJ. The difference was apparent as the DJ spun a groovy mix of funk and soul into an awesome house blend. Leo saw the woman behind the mixers and he was shocked at what he saw. \n\nThis woman was just as cute as Myra was. Her skin was maybe a shade lighter than hers, but still was striking. Her tee shirt was a purple one that hugged her curves. Her generous bust line strained against the shirt and made his mouth water a bit. Her hair was a spiky short cut that was very sexy on her. Her lips were a deep purple that stood out wildly on her. The way she moved behind the mixer was with an effortless grace. The crowd was reaching a bubbling point and she turned on the charm as her voice pumped up the crowd like a hurricane. The crowd began to get down on the floor as she mixed and spun the grooves. \n\nLeo was never a fan of house, but the way she spun it was something he was going to have to remember. She looked out over the crowd and fired them up as she let out one lightning fast jam followed by a slow one to change the beat. The crowd was taken on a wild ride with her and after about an hour and a half of it she was done and the crowd was cheering and chanting for more. To the crowds delight she stepped back behind the mike and raised her hands over her head.\n\nThe chant of \"Mika\" began to fill the room and she bowed graciously. She put on a good jam that let the crowd get back to dancing and left the booth. Leo happened to see Alan walk up to the booth and try to hug her. She pushed him away laughing and walked away. Alan had a playful hurt look on his face and she relented and kissed his cheek. She shook her head and left the booth to the ladies room.\n\nLeo shook his head as Alan went to the booth and got the crowd's attention. He spoke of the concert the group just had and how dope it was. The crowd was cheering and applauding as he went into MC mode to announce he group. They came out to the stage nearby and began their act. Leo ducked his head as he sipped his beer. He was about ready to go when he felt a hand touch his arm. He looked back as the DJ was holding his keys in her hand.\n\n\"These fell out of your pocket. Don't wanna lose them now do you?\" she asked politely jingling his keys.\n\nLeo sat up and realized the way he was slouching they slipped loose. Giving her a thankful smile he took them back.\n\n\"Thanks,\" he said.\n\n\"Don't mention it. Now why is it you look like you don't want to be here right now?\" she teased.\n\n\"Well if you were back up there I might ave a reason to hang out some more,\" he said smiling.\n\n\"See now there's a good answer,\" she laughed.\n\nLeo could hear a slight accent under her tone. It sounded English, but faint. As he pondered the accent he realized she was looking at him expectantly. He looked left and right and saw both seats next to him were full so he got up and moved. She smiled and sat down. The way she crossed her legs made his dick come to life again. Her skirt was a short black one that showed off her very nice legs that were wrapped in opaque purple tights. The contrast in her skin to those was invigorating. She ordered a bottle of water and sipped it as she looked back to him.\n\n\"So your Alan's friend?\" she asked.\n\n\"Is it that obvious?\" he asked back.\n\n\"No, the tag on your lanyard told me that,\" she said back laughing.\n\n\"Ah,\" Leo replied.\n\n\"I take it you met Myra?\" she asked.\n\n\"Um yes. You could say that,\" he said back smiling.\n\n\"Good, could you do me a huge favor Alan's friend?\" she asked.\n\n\"Leo,\" he replied smiling at her cute face.\n\n\"That's better, Leo, can you give us a lift home? My car is in the shop and she is too drunk to drive,\" she asked.\n\n\"Umm...sure,\" Leo replied his eyes showing he was not expecting it, but was glad to help.\n\nIn reality he was eager to leave the club. He knew that Alan likely would get a lift home somehow. He didn't mind dropping Alan off and going, it was what he planned on anyways. He paid up his last bit of the tab and tipped the bartender as the woman removed herself to gather her drunken friend. Leo was able to get to the door without being seen and as he exited he heard a familiar voice giggling behind him. He looked back to see Myra leaning on her friend laughing like an idiot. She was sloshed, but it was cute to watch her.\n\nThey managed to get her in the back seat and let her lay back. She was a giggling mess the whole time they buckled her in.\n\n\"Thanks,\" her friend said thankfully.\n\n\"No problem,\" Leo said back and opened the door for the woman.\n\n\"A gentleman. How nice,\" the woman said and her accent came through even more.\n\nLeo got the door shut in time to avoid the embarrassing tent that was forming in his pants. He walked to the drivers side and opened it. As he dd the giggling Myra was letting him know how good she was feeling. He sat down turned over the engine and the song that was playing kicked back on. The woman next to him looked shocked at the radio and smiled.\n\n\"You like Black Light Burns?\" she asked.\n\n\"Yup, they are pretty awesome,\" he said back.\n\n\"Hmm, I would have pegged you for a pop fan,\" she said.\n\n\"Nope. Too cartoony,\" he replied.\n\n\"I see. By the way I'm...\" she started to say.\n\n\"Let me guess, Tamika?\" he answered.\n\n\"And how did you guess that?\" Tamika purred.\n\n\"Myra told me the message for Alan from the two of you,\" he replied chuckling.\n\nTamika laughed playfully as he said that and looked back to Myra who was in the back looking at the moon roof.\n\n\"Can you open that to get her some air?\" she asked.\n\nLeo opened the windows and let the cool night air in. Myra looked out the window and laughed a while as she watched the lights and people on the streets. The mood became brighter as an upbeat song came on and they all got into it. A fast paced rock song from the game Guitar heroes came on and they all actually got into it.\n\n\"This is such a bitch to play,\" Myra slurred from the backseat.\n\n\"That it is,\" Leo said back. \n\nThey got into a conversation on games and music as they drove through the Manhattan night. Leo found out the two were best friends from college. Myra was an art major who worked at a tattoo and piercing store. Tamika was, as he already knew, a house DJ at the club. The two were best of friends and he saw it as they joked back and forth between each other about small things. The biggest thing they joked about was how drunk Myra was.\n\nAs they drove to the tunnel they found out it was closed for repairs and it brought them to a dead end. Sighing Leo got back onto the main road and tried to figure out their next move. As the pondered Myra looked up at Leo and smiled cutely.\n\n\"Mind if we crash with you tonight then?\" she slurred cutely.\n\n\"Myra,\" Tamika admonished.\n\n\"What? He's cute and a nice guy, he won't take advantage of us,\" she giggled.\n\n\"That's not the point Myra, we just met him,\" Tamika scolded.\n\n\"It's no trouble, I have three bedrooms at my place,\" Leo replied.\n\n\"No Leo, you don't have too,\" Tamika replied.\n\n\"Please baby! I need to lay down,\" Myra pouted.\n\n\"It's no trouble,\" Leo offered.\n\n\"See he says it's no trouble,\" Myra said hopefully batting her eyelashes at Tamika.\n\n\"If you're sure Leo,\" Tamika said.\n\nLeo turned off on the light and made his way to his loft. As they drove Tamika looked back to Myra who wordlessly gave her an affirming nod. Myra smiled teasingly and licked her lips at her friend and leaned back into her seat. The drive to his place took ten minutes. In that time the two of them were quiet as they made it to the parking spot. Leo pulled into his spot and killed the engine. He got out and went to help them. Myra leaned on him and giggled sweetly. \n\nShe leaned into his ear and whispered, \"I told you that you'd see more of me.\"\n\nMyra punctuated it with a nip of his earlobe. Leo was shocked by the move, but kept his body from jerking. She put her arm around his back and held on as he led her to the elevator. Tamika actually smiled cutely and put her arm around the other side of his waist. Leo suddenly found himself surrounded by two of the hottest women he had ever seen. He wasn't complaining about his luck, he was hoping to just play it cool and not make an ass of himself.\n\nThey piled into the elevator and Myra leaned close to his neck. She was still tipsy, but the truth was she wasn't as drunk as she let on to be. Tamika knew this, but kept it to herself. She was curious to see the lengths her friend was about to go, and she had to admit one small thing, Leo was cute. They hit his floor and the elevator opened up. The wide expanse of the loft made Myra's eyes widen. Tamika was also impressed. The close two bedroom apartment they shared in Queens was a far cry from the space that Leo had in his place.\n\nThe group staggered into Leo's pad and the girls let go of him and looked around. Leo stood back and admired the sight of the two of them from behind. His eyes were glued to the tempting fruit in front of him. Both had more than an ample ass, both had great legs, and both were stunning creatures in all respects. His lips began to water as he lived out a quiet fantasy in his mind, but he pushed it away. Leo looked up and saw the two of them as they wandered around. He went to his TV and turned it on. He selected his play list on his 360 and let his music play. The ladies looked back and saw the cool system and laughed playfully.\n\n\"This is a great place Leo!\" Tamika said breathlessly.\n\n\"It's home,\" Leo said happily.\n\n\"Wow...how big is the bathroom?\" Myra pondered and quickly went to it dragging Tamika along with.\n\nLeo stood by and his head twitched as the two of them disappeared into the bathroom and shut the door. He shook his head and looked around. The apartment was bare except for his couch love seat and entertainment set along the wall. He pondered getting a pool table, but couldn't afford one just yet. As he pondered he happened to hear some talking from the bathroom. He didn't pry, but he could swear he heard them bargaining in there. Leo shook his head and looked away. He was lost in the Chevelle song playing when he heard the door open. \n\nMyra came out carrying her shoes as did Tamika. They set them down and walked to him in their stockinged feet. Leo was shocked at the look in their eyes and suddenly noticed that Tamika's shirt was out of her skirt. They sat on the couch and patted the middle between them. Leo tentatively sat between them and was shocked when Myra threw her legs over his as soon as he sat down.\n\n\"That's so much better,\" Myra purred. She looked at him sweetly and purred, \"Be a dear?\"\n\nLeo's hands found her feet and began to rub them slowly. Myra purred happily as he rubbed. He had never seen socks like she was wearing, but he admired how they stayed up at her mid thigh. He glanced up and noticed she was wearing cute white lace panties under her skirt. He continued to rub her feet and after ten minutes of making her moan and whimper Tamika decided it was her turn. She turned slightly and placed her legs on his lap over hers and tilted her head expecting. Leo's hands switched from Myra's cute feet to Tamika's without complaint.\n\nThe change in texture from Myra's cotton socks to Tamika's silky smooth tights was one that was playing hell with his control. Here he was with two undeniably sexy woman with their legs on him and he was desperately trying to hold off on showing a hard on. His mind snapped as he made Tamika sigh happily and the bulge began to tent. He rubbed diligently and soon he felt something he wasn't expecting. The women pulled their feet from his lap and turned into his side. Leo suddenly felt very hot breath on his neck and he shuddered as Tamika pressed her lips into his ear and whispered.\n\n\"So do you want to be rewarded for being a nice man Leo?\" she breathed into his ear.\n\nLeo's soft moan was all the answer she needed. Tamika leaned over and softly placed her full lips on his and kissed him. Leo moaned as his eyes closed. It was a chaste closed mouth kiss, but his mind began to swim as Myra suddenly pressed in close and as soon as Tamika moved her lips hers found his. While Tamika and him shared a soft sweet kiss, Myra was a wild child. Her peck at the club was nice, but her kiss was a wildly lusty one. She slashed her tongue into his mouth and he groaned as she did.\n\nTamika saw her friend kissing him and she smiled seductively. She leaned over and whispered into Myra's ear.\n\n\"I think he's really for us baby girl,\" she purred.\n\nLooking down Tamika saw the tent in his slacks and smiled as she saw how pronounced it was. Her hand grazed it and he inhaled sharply as he kissed Myra. Myra maned happily as he inhaled sensing he was ready and willing. What she didn't expect was Tamika to take her hand and put it on his bulge. Her own eyes widened as she felt it through his slacks. Leo's groan broke the kiss a she absently stroked his meat through his pants. She was wide eyed as she looked down and saw a bulge that made her little panties begin to soak. She looked at Tamika and licked her lips.\n\n\"We got a good one sweetie,\" she purred.\n\n\"Indeed we did baby girl,\" Tamika said sweetly.\n\nWhat happened next burned into Leo's brain forever. They leaned in and passionately kissed each other. His eyes got wide as their tongues played teasingly in each others mouths. The kiss had the both of them suddenly upright on their knees over his lap so they could get closer together. Tamika's purr as they kissed made the both of them begin to grind excitedly on his legs. Leo was amazed when Tamika's hand suddenly reached out and grabbed him. She yanked on his shirt pulling him up to them and they broke the kiss and both turned to face him and took turns kissing his lips and soon it got very hot in the room.\n\nTamika broke off the kiss and stood up. She pulled Myra to her feet and reached down to Leo. He took her hands and she pulled him to his feet.\n\n\"Where's your room sweetie?\" she asked seductively.\n\n\"This way,\" he said and pushed them ahead of him. \n\nMyra giggled as she walked to the room. She stopped them suddenly and smiled to him.\n\n\"Should I maybe...?\" she asked teasingly as she raised her shirt over head head and threw it to the floor.\n\nLeo's eyes opened as she wasn't wearing a bra and her pert tits stood out begging for attention. His eyes got bigger when he noticed the gold hoops in the dark nipples. She spun on her heel and swayed into his bedroom unzipping her skirt as she went. Leo watched it fall to the floor and her graceful step out of it leaving her in her socks and panties. He looked back to see Tamika smile wildly and throw her shirt to the floor. Her large globes were encased in a sexy black lace bra. She turned to him waited.\n\nLeo's eager hands found the snap and undid the three catches releasing the bra from her luscious tits. As she turned Leo saw the huge globes and his mouth watered at the fat nipples that stood out. She slid her skirt off and sauntered into his bedroom. Leo's head spun in circles as he saw the two vixens climb on his bed on their hands and knees and turn suddenly. They both began to curl their index fingers at him and his mind gave up the fight. He untucked his shirt and tossed it to the floor. The only thing marring his pale skin was the yin yang encased in blue flames tattooed on the left side of his chest. His muscles weren't huge, but defined well enough to make their mouths water. The ladies licked their lips as he undid his slacks and they hit the floor next to the ladies clothes and black boxers was all he was left in.\n\nThe ladies smiled hungrily as they saw the menacing bulge in his boxers. As he climbed on the bed with them they pounced. Leo was shoved to his back by Myra as she clambered along his body. Tamika joined her friend and they began to lick and bite his neck and chest. The teasing the women did to his body made every nerve in his body flare to life. From a gentle brush of their skin to a soft kiss to his neck Leo felt everything. His mind was lost in passions when he felt Tamika make the next move. \n\nHer head slowly dipped down and her soft tongue found his nipple. He groaned as both women smiled and took one in their lips. The teasing licks and sucks made his toes curl and his cock spring to life. The blood was fully in his raging member as the two took turns licking and biting him. Leo felt like he could have died at that precise moment and he would have died complete. After what felt like long hours he heard Myra's sweet voice.\n\n\"Holy shit look at that!\" she exclaimed looking at his rock hard cock.\n\n\"Oh my!\" Tamika said and her accent was thick.\n\nThe two women exchanged seductive looks and looked back to Leo who was just recovering from the teasing the women had just put him through. As his eyes regained their focus he happened to see the two of them smiling so deliciously at him and Myra leaned close.\n\n\"I guess today is your lucky day huh?\" she asked and kissed his lips.\n\nHe groaned into the kiss as Tamika's hand found his throbbing member. Both girls hand soon found a grip on it after he arched his hips into the handling. He moaned so loudly as they teased him and Tamika suddenly giggled.\n\n\"Well he looks more than ready to go huh, baby girl?\" she purred in her delicious accent.\n\n\"I'd say he does, but he may go quick Mika,\" she complained.\n\n\"That's why we train him up baby girl,\" she purred and her head disappeared.\n\nLeo's mind exploded when he felt Tamika's hot mouth envelop his member. His eyes rolled into the back of his skull and he almost exploded than and there if it was for Myra suddenly kissing his lips. Myra teasingly kissed him for a few seconds then she slithered down to join her friend. Myra put her hand on the back of Tamika's head and pushed her so she took more of him in her mouth.\n\n\"That's it baby...suck his fat dick!\" Myra said forcefully making Tamika moan on him.\n\nLeo felt the vibrations on his cock and nearly bought it. Somehow his mind was forcing him to hold out. He never would have lasted long like this before, but he was somehow making it happen. His mind was determined to make the most of this, even though his body was begging for release. Tamika's sweet lips bobbed up and down on his shaft for a long few minutes then he heard a hungry Myra beg for a turn. Tamika pulled off him with a loud pop and Myra eagerly gobbled his prick into her mouth.\n\nWhile Tamika was refined and slow with her ministrations, again Myra was a wild one. Her eager throat flexed on him as she took his whole length down her hungry throat. She moaned and purred on him as she slobbered on his cock and pulled it from her mouth.",
        "\"God you taste so fucking good sweetie! Now be a good boy and fill my mouth.... I wanna taste you so bad,\" she begged as she slapped his cock off her lips.\n\nLeo looked up in time to see her suddenly go back down on him. His eyes were bulging and he felt his toes curl from the feral passion that Myra had. It was the same passion making him feel his balls beginning to boil. What happened next again threw him for a loop as Tamika suddenly took one of his balls into her mouth and suckled it hard. A tortured cry came from Leo's throat as it continued on for what felt like an eternity.\n\nFrom the sounds of Myra slurping his pole, to Tamika's purring moans as she licked and sucked his balls Leo lost it. His back straightened up as he violently spurted into Myra's eager mouth. She moaned loudly as the first spurt hit the back of her throat. She stopped bobbing her head and stroked him as he unloaded a big deposit into her eager mouth. She kept her mouth still as he finally stopped and pulled off him slowly. Leo's body shuddered as the tip passed her lips.\n\nTamika saw this and giggled cutely.\n\n\"Does he taste good baby?\" she mused.\n\nMyra's answer was to lean over to her friend and kiss her with a mouthful. Tamika eagerly opened her mouth to her lusty kiss and Leo was treated to another sight that would burn into his mind as they shared his load. The base lust that was in the kiss made his eyes widen and his cock stiffen. Leo watched the hungry nymphs as they swapped his cum and some of it began to dribble down their chins. Myra felt it and in a naughty display licked her lover's chin of his cream. In a nastier display Tamika licked it off her tongue.\n\nLeo got his legs about him and sat up. The two hungry women looked to hi meagerly and pulled him to them. They shared a long tongue kiss between the three of them. It lasted for what felt like hours as the three opened licked and kissed each others lips and tongues. Tamika was getting very eager as they kissed and dipped her head to Myra's nipples. She licked and teased the rings eagerly and Myra's whimpers into Leo's mouth let him know of her satisfaction.\n\nLeo got bold and followed suit. He sank down her neck and found the nipple Tamika was licking. He had never been with a woman who had pierced her nipples before, but he was eager for his first time. He gently licked and nipped the nipple. Myra's head fell back and her hands went to the back of both of their heads as they continued. Leo's teeth found the ring and gently he tugged on it making her moan loudly. Leo's heard the moan and took the whole nipple in his mouth and suckled it hard making Myra cry out. Tamika saw this and decided to help him make her lover feel much better.\n\nShe pulled off Myra's nipple and leaned to his ear and whispered softly, \"Lick hard and tease her with small bites baby, she loves that.\"\n\nLeo heard the sweet words punctuated with a bite on his neck and he complied. He licked her nipple with the flat of his tongue making her moan and a teasing nip made her legs shudder. Leo's eyes narrowed as he found her button and he began to push it relentlessly. Myra' hands found the back of his neck as he worked over one then the other nipple in similar fashion. Her legs gave out and she rolled to her back letting Leo get on top of her.\n\nLeo growled as he began to make her squirm under him. His eyes found hers as he sucked one and the look in hers was one of pleading. He grinned and with one last bite he released her nipple. Leo blew on it with a cold breath making her arch off the bed. Watching her body tremble under him made Leo want to explore more of her lovely body.\n\nLeo's lips traveled down her taut belly and he teased her belly button with a nip making her giggle softly. As he came to her lacy panties she was already lifting her butt eagerly. Leo's fingers hooked the sexy undies and began to slide them slowly down her long legs. Myra kept her legs close together as the undies made their way off her legs and over her ankles. As soon as they came off Leo tossed them to he floor and looked back up the path. He saw her long legs and at the top was a very wet shaved slit. Slightly up to the left he saw a tattoo that caught his attention. He began to kiss up her legs slowly and as he neared he saw it for what it was. It was a heart with an arrow through it with Tamika's name in it. He looked up to Tamika curiously and she smiled brightly as she leaned over her hips and lovingly planted a sweet kiss on the tattoo.\n\nIt hit Leo rather quickly that they were more than just friends when they kissed before, but now he came to an understanding they were more than just casual. He smiled as he watched Tamika waste no time in slithering her head further down and her tongue flashed across Myra's slit. Myra arched off the bed and her legs spread eagerly as Tamika kept slashing her tongue along Myra's suddenly fat clit. Leo's eyes widened further as he saw it also had a hoop in it. Tamika found the ring and teased it with her teeth making moans and gasps come from her lovers throat. Leo sat back and enjoyed the view. He paid close attention to how Tamika was making Myra squeal and took very astute notes in his mind. After a few minutes watching he got bold and leaned forwards. He waited for Tamika to lick her and his tongue found her fat lips suddenly. Myra shot up and squealed loudly as he it the lips and Tamika latched on to her clit.\n\nMyra's sweet voice begged loudly \"More!\" many times as Leo and Tamika licked and sucked her sensitive hole. Tamika found the conditions right and nudged Leo to the side. As he move she put her head directly between her legs and latched her mouth fully on Myra's dripping hole. Her tongue went to work and Myra was suddenly lost in the pleasures of Tamika's mouth. Leo saw an opening and decided to take advantage of it. He slipped down the bed and found Tamika's legs surprisingly open. He put his hands on her ass cheeks and squeezed making her moan into Myra's hole. His finger's trailed under her tights enclosed pussy and he felt it was blazing hot. He began to rub tenderly on her box and Tamika began to buck into his hand. \n\n\"Rip her tights open baby! Eat her fucking pussy!\" Myra growled loudly and Leo was shocked.\n\n\"Oh please baby! Rip them open and eat me!\" Tamika said in a pleading whimper.\n\nLeo's fingers found a hold and with a quick jerk he ripped the crotch open exposing Tamika's tiny thong she had on under. He saw her sweet pussy was dripping nectar like a faucet and his fingers ripped the thong in two and his mouth latched onto her dripping pussy with a fury. For the second time in his life Leo found himself eating a black girl out, and he was loving it! Tamika's sweet juices cascaded on his tongue as he sucked and bit her lips making her whimper and moan into Myra who in turn felt each and every vibration in her ow body. Leo stuck a finger into her slit and Tamika bucked against it as he continued to suckle her. \n\nLeo was in pure heaven as her big ass was right in his face and his tongue was lashing away at everything in front of him. He amazingly didn't care as his tongue even found her asshole and teased it as well. Tamika began to whimper in rapid succession as her own meltdown was coming up. She tried to eat her lover as best she could, but the wild tongue Leo had was doing her in. Myra was also nearing her limit as Tamika suddenly shoved two fingers in and bit her clit ring hard. Myra's legs spasmed and clamped around her neck. \n\n\"Oh shit baby!\" Myra gasped out as she came hard. \n\nLeo heard the moans and suddenly he felt a power in him wash over his mind. Without a word he slapped Tamika's full ass and it juggled as he hit. Tamika suddenly came hard screeching into Myra's dripping pussy. Leo's fingers were thoroughly glazed as her nectar poured from her. Tamika grunted and gasped so hard into Myra he was afraid she would black out, but somehow she freed her mouth from Myra's muff and looked back at Leo.\n\n\"Slap my ass again baby,\" she pleaded.\n\nLeo's hand slapped harder and she moaned loudly. Her pussy clamped on his finger very hard. He felt his grip on his sanity slip and suddenly his had lashed out again on the to her cheek and Tamika cried out as she spasmed again. Leo lost himself and his hand rained down spank after spank on her ass making Tamika mewl and moan at each one. Myra looked on as he spanked her and the grin on her face was a purely lustful one. She knew of Tamika's weakness for spanking and as each blow rained down she knew that her lover was about to come. Wanting to get into the act she pulled away from her head and crawled to join Leo at her ass. When she got there she looked at Leo's glazed face and her tongue slashed along his cheek and chin. She moaned as she licked her lover's sweet nectar from his face. She looked into his eyes and he took a moment to savagely kiss her. \n\nAs they kissed Myra's hand ran over her lover's ass and she caressed the spanked area with her cool hand making Tamika shudder softly. Leo broke the kiss and Myra leaned over Tamika's burning ass and licked the cheeks lovingly. She kissed and rubbed her cheek along the full ass and bit the cheeks teasingly. Her lover's whimpers were born of knowledge and Tamika was now at her lover's tender mercies. Myra suddenly looked up at Leo and in a teasing voice she spoke.\n\n\"You know we are lovers Leo?\" she asked.\n\n\"Yes,\" he replied.\n\n\"Did you know she loves to be fucked on her hands and knees\" she purred and licked Tamika's burning cheek making Tamika cry out.\n\n\"Does she now?\" he asked his voice suddenly deeper.\n\n\"Mmm...she does, but what's more she loves white men,\" she purred teasingly.\n\nLeo's hard cock was dripping precum as he was suddenly very read to go further than he would have ever imagined\n\n\"I guess it is my lucky day isn't it?' he asked and Myra giggled.\n\n\"Slip that fat cock into her baby. Fuck my sweetie hard and maybe I'll show what else she loves,\" Myra purred as she spread Tamika's ass cheeks open showing him a very aroused pussy and a puckered asshole.\n\nMyra grabbed Leo's rod and sucked it a few times making it nice and wet. As soon as it was to her liking she began to guide him to her lover's hot depths. Tamika gasped as Leo's cock head pushed into her and began to shake as he continued on into her. After a long bout of Myra's teasingly slow pace she smiled and pulled him back out. Tamika whimpered pathetically as Myra sucked him a few more times then pushed him back in. Tamika moaned as this time Myra pushed his hips hard until he settled in her. Tamika's head dropped down to the mattress as he began to buck his hips in and out of her slowly. Leo's eyes rolled into his head as he began to sap his hips into hers and the sounds of Tamika's sweet voice egged him on.\n\n\"Harder baby!\" she begged and he complied.\n\nMyra smiled devilishly as Leo's hips began to slap hard into hers and she got to her back and slid under her lover's body. She bit and teased her fat nipples as they swayed in front of her face making Tamika gasp loudly. Leo's pace began to pick up and Myra got more creative. She wiggled under between her lover's open legs and stroked her legs softly making Tamika squeal in delight. Myra's lips came up and found her fat engorged button and began to flick her tongue on it as Leo's cock hammered into her. Like Myra Tamika had her clit pierced and she tugged the clit ring as often as she could making her lover spasm on Leo's dick.\n\nLeo saw how naughty Myra was being and something in him got creative. After he rammed into Tamika he pulled out and aimed lover spearing Myra's hungry mouth. Myra moaned as his nectar laden cock split her lips and went into her throat. Myra sucked him hard and he withdrew and put himself back in Tamika who shrieked in pleasure as he hit her spot. Leo took note of this and changed his rhythm so every third pump he took out and pumped into Myra's mouth a few times then reinserted himself in Tamika. Leo's mind was lost in his own lusts when he suddenly felt Tamika shifting on him. He gripped her hips and suddenly slapped her ass hard making her scream. Tamika's head flew back as she unleashed a torrent of profanities.\n\n\"OH god fuck me you ass! Fuck my sweet pussy! Fuck me goddammit!\" she screamed loudly.\n\nMyra giggled and rolled out from under her. She got behind Leo and pinched his nipples as he bucked into her. She bit his neck and whispered into his ear.\n\n\"Fuck her sweet pussy baby! Give her that white dick she craves so fucking much! Oh she loves being a slut baby, give it to her,\" she purred and pinched his nipples harder. \n\nLeo drove into Tamika with a fury that he never knew he had in him. He plowed her depths as hard as he could and was rewarded with screams and howls from Tamika's slutty throat. All the women he had been with to this point were nothing compared to this goddess on her knees in front of him being hammered by his cruel cock. He slapped her ass again and this time it was the one. Tamika's orgasm began in her raging inferno of a slit and erupted like a volcano. Leo felt the molten nectar as it flooded his cock and balls as she threw her head back and let out a chocked gasp then collapsed face down into the bed. As she lay ass up her pussy spasmed wildly on his cock and she gripped the sheets tight. Her mouth was incapable of making noise and soon she was just shaking. Leo felt every vibration on his cock and every flex of her sweet hole. He slowly began to pull out and she whimpered and her whole body shook wildly causing her to come again.\n\nLeo had never seen a woman get off so hard or so quickly as this. It seemed that for every inch out of her she came again and again. Leo finally got himself out of her and she flopped to her side mewling on the bed. Myra came from behind Leo and crawled to her lover's side. She began to kiss her sweet lips and pulled her close. Tamika was shaking violently in Myra's arms and Leo was shocked at how bad she was going on. Her lips were full of Myra's, but he could tell she was ready to cry out at any moment. Myra finally got her lover under control and looked up to Leo. \n\n\"Looks like you did too good on her baby,\" she purred.\n\nLeo noticed when she laid Tamika back her eyes were glazed over and she was totally out of it. What he felt next was Myra suddenly push him backwards. Leo landed on his back and Myra crawled up his body like a hunger tigress. She licked and nipped along his body as she crawled up him. The sensation of her sensual body dragging itself along his still on fire cock was maddening, but Leo kept his cool as she got to his lips and devoured them. They kissed like a pair of long lost lovers and soon he felt Myra open her legs and straddle his crotch. Myra pulled off his lips and sat up straight on him. Leo's hands instinctively found her hips and Myra moaned happily.\n\n\"And I didn't have to ask,\" she complimented.\n\nLeo's hands roamed up and down her hips making Myra coo at his touch. She ground her dripping pussy along the length of his cock for a long time. They teased each other with rubs and playful pinches for quite a while when Myra suddenly looked down at Leo and her face became coy.\n\n\"So you ready for the ride of your life baby?\" she purred.\n\n\"Are you?\" he teased back and slapped her ass making her moan.\n\n\"Oh shit baby do that again,\" she purred and he did.\n\nMyra's eyes fluttered as she sank back on him without a word. Tamika's pussy was tight and hot, but Myra's was far tighter. She clamped on him from the moment he entered him and each inch in she squeezed him hard. Myra took nearly a minute to sink fully on him and when he was imbedded in her her eyes fluttered. While she was truthful about Tamika's love for white men, she had a secret all her own.\n\n\"So you loving this baby?' she purred.\n\n\"God yes!\" Leo hissed.\n\n\"Never been with a black girl before baby?' she teased.\n\n\"Aside from Tamika, no,\" he responded honestly.\n\n\"Well?\" she asked teasingly.\n\n\"I fucking love it,\" he said and sat up suddenly.\n\nMyra gasped as the angle changed and he grabbed her suddenly. He pulled her close to him and he aggressively kissed her thick lips. Leo kissed her like a demon possessed and that was all Myra needed to begin her gyrations. She drove her hips back and forth on him like a mad woman. Her bucks were frantic from the get go and as they savagely kissed she moaned like a whore in heat. She needed him in her so badly fro mall they had done up to now and she was happy for how hot he was being. She began to bounce on his cock and Leo's hands found her ass helping her buck on him. He looked into her eyes as she broke the kiss and the feral passion in her eyes was driving him wild. The minutes drug on and on as she wildly bucked on him. The only sounds they made were desperate pants and grunts of savage pleasure as he plunged in and out of her soaking depths. Myra suddenly felt him shift and she was on her back. She wrapped her legs around his back and in a pleading voice begged him so naughtily.\n\n\"Fuck me baby! Fill me up with your hot come baby! Oh please fuck me!\" she begged.\n\nLeo drove into her sung hole like a lunatic. Her cries and whimpers filled the room and suddenly he felt Tamika bite his neck hard. Leo groaned as she did and as suddenly as it began he looked down to see her kiss Myra on the lips with a passion he though impossible. They wildly kissed as he propped himself up and began to savage Myra's womb. Myra couldn't contain her passions and after only a minute of his savage pumps she clamped on him and squealed into Tamika's mouth. Her orgasm was as violent as her lovers and soon she was bucking on him furiously. Leo felt the vice like grip of her thighs as she came and suddenly he felt his balls tighten up. He threw his head back and as hard as he had ever come before unleashed a torrent of seed into Myra's waiting depths.\n\nMyra felt each and every spurt as it hit her and she howled in pleasure. Leo grunted loudly and shook as he continued to spasm and soon his thick seed dripped out of her pussy. Tamika saw it and eagerly went between her legs. Tamika's tongue lapped at the mixed juices and she savored each drop of the treat. Leo watched in awe as Tamika lost herself in her ministrations. For what seemed like hours she devoured Myra's abused hole to get at his seed. Suddenly she turned and sucked him into her mouth and her normally reserved blow job turned into a nasty, messy affair. Leo sat back on his legs as she sucked him and stroked him.\n\nLeo teetered on his heels and fell to his side as she would not relinquish her hold on his cock. Leo groaned loudly as his cock needed very little in the way of prompting to come back to life. Myra watched her eager lover with her new toy and smiled darkly. She raised her hips to allow what was left of his seed in her to sink in. She hungrily watched them go at it and her mind was made up, they were going to keep him. Myra had never had a man fuck her with the unbridled intensity that Leo had just done, and she wasn't about t let him get away. She knew that Tamika would be fine with it, she loved white guys after all, so Leo would be a perfect fit for them. \n\nKnowing one last thing Tamika loved she got to her hands and knees and crawled to Leo's head. She leaned over his head and kissed his lips sweetly. After a short, but sensual, kiss she opened her eyes and looked into his. She leaned down and got next to his ear.\n\n\"Ever fuck a girl in her ass baby?\" she purred.\n\n\"Never,\" he groaned.\n\n\"Tamika loves feeling a hard cock slide in and out of her ass. She feels so dirty when I do it with our strap-on at home. I think that maybe you'll win her over forever if you do it too,\" she offered.\n\nLeo groaned and his head fell back as Tamika sucked him hard making him unable to answer.\n\n\"Is that what you want Tamika? You want Leo here to fuck your slutty ass?\" she said in a forceful tone.",
        "\"Oh my god yes baby girl!\" Tamika eagerly chirped releasing his cock from her hungry mouth.\n\nWithout a word she got to her hands and knees and put her head down on the mattress leaving her ass up in the air. Myra smiled darkly and put her hand under Leo's head to help him to his knees. Leo got to his knees and his cock was hard as a rock as he saw the sight before him. Tamika's beautiful ass he had slapped and pussy he had savaged was up in the air begging for his attention. Myra led him to it and stopped him just short. She leaned over and began to lick Tamika's asshole lovingly. He had never seen such a dirty display in his life, but then again Leo had done a lot of firsts tonight and he watched the show eagerly. Tamika was whimpering and begging so loudly he thought his ears were gonna pop.\n\n\"OK baby, she's almost ready for you,\" Myra informed him.\n\nLeo began to move forwards, but was stopped as Myra grabbed his cock and spat on it. She licked it with long licks and her spit was gleaming on him. Leo shuddered at the dirty girl that Myra was being and had a dirty plan of his own forming. As soon as she stopped Myra led him forwards and this time. He didn't wait. He shoved into Tamika's ass hard making her squeak. He didn't shove in all the way, but the way he was was making Tamika squeal in pleasure. He was half in and pulled out. He speared Myra's mouth and she sucked him to get him wet again. After she was done she spat him out of her mouth then spat into Tamika's open hole and Leo surged forth again.\n\nTamika's eyes widened as he sank in to the hilt in her tight ass. She mewled in pleasure as he was finally in to his balls and she felt them on her slit. Tamika began to wiggle on him and Leo felt the movement. He realized she was submissive and his mind warped as he realized just how much fun this was going to be.\n\n\"Did I say you could move yet?\" he growled as he slapped her ass hard.\n\n\"No!\" she yelped.\n\n\"No what?\" he demanded and slapped her ass again.\n\n\"No sir!\" Tamika whimpered.\n\n\"That's better. Now tell me what you want!\" Leo demanded.\n\n\"Fuck my ass sir! Oh please fuck my slutty ass!\" she begged.\n\n\"If that's what you want,\" Leo growled and began to pull back then surge forth. Tamika howled in pleasure as he plunged into her ass and she kept her as in the air for him as he began to fuck her with a vengeance. \n\nMyra watched the display and she shuddered. Tamika was a very submissive girl. She knew that very well as she was the dominant one in their relationship. Her pussy instantly got wet as she watched Leo get dominant with her and as he fucked her she began to diddle her clit a bit. She had a thought in her mind of her being were Tamika currently was and it made her come then and there. It wasn't a loud one, but it got Leo's attention. \n\nLeo was busy pile driving Tamika's sweet ass when he heard the gasp next to him. He saw Myra's hand between her thighs and he grinned evilly. He took his hand from Tamika's hip and shot it between her legs and sank two fingers in. Myra gasped loudly in pleasure as they sank in and he leaned close to her face.\n\n\"Coming without me are we?' he said in the same dominant tone.\n\n\"I'm sorry sir,\" she said innocently.\n\n\"Not yet, but you will be,\" he said darkly and began to move his fingers in her.\n\nMyra leaned her head back as he continued his diddling. Tamika felt the sudden loss of his hand on her hip and whimpered a bit, but that ceased when he other hand found her swollen labia and began to play with that as well. He stopped banging into her ass as he played and Tamika took over. She bucked away on his cock and the feeling of his cock in her ass and fingers teasing her began to make her light headed. Tamika felt the orgasm a split second before it washed over her and screeched loudly as it slammed into her. Her ass spasmed so hard on Leo's cock he almost was torn off. She slammed into him violently as she came. Leo had never fucked a girl in the ass before, but the feeling was too good for his mind to ignore.\n\nThe velvet of Tamika's ass clenched him for a long torturous five minutes as she came and came again to his diddles and her own buck. She soon lost her ability to continue and slumped forwards off him. She was shaking on the bed and Leo suddenly felt the warmth go away. Myra saw it and grinned as she spat on his cock and Leo took charge. He threw her to her back and in a lightning fast motion he speared her asshole. Myra's eyes lit up in pleasure as he did to her what she only ever allowed Tamika to do a few times before. Leo took his time as he inched in and in. Myra's eyes clamped shut and tears squeezed out as he would push in then pull out and spit into her ass. It was a long slow process that was added to by the juices that leaked from her slit. It took many attempts, but he finally was into her ass and Myra was looking at him like a feral cat.\n\n\"Fuck my ass baby! Fuck it hard baby!\" she demanded.\n\nLeo slapped her ass hard making a scream come from her and he began to comply. Leo's jackhammer like pumps made Myra's voice come to life. She had never let a man into her ass before, but she was loving this one. Her eyes narrowed as she continued to egg him on with begs and pleads for harder and more vicious plunges. The slaps he gave her ass in reply only made them go harder and harder. Myra suddenly had her legs spread wide to allow him to really get an angle on her ass and he began to plow her. Her nerves flared to life as he fucked her like she needed. Her eyes clamped shut and her covered legs flopped in his hands as he held them out wide. Leo's eyes narrowed as he fucked the woman beneath him with all in his soul. He was lost in his single minded determination as he continued on with his pounding.\n\n\"Oh shit baby!\" she suddenly said as she felt the climax building.\n\n\"Did I say you could come yet!\" he growled and took his hand from her thigh and slapped her upturned ass.\n\n\"NO sir!\" she screamed loudly.\n\n\"That's what I thought,\" Leo growled.\n\nAs suddenly as his hand disappeared it grasped her thigh and pushed it back to where it was as he continued on. Tamika watched the proceedings with awe. She had only ever done that to Myra three times, and with a strap on that was smaller than Leo. She watched in blank amazement as her lover was on the verge of exploding but Leo wasn't letting her. She was a submissive by nature, but watching her dominant lover being dominated made her writhe on the bed. Feeling bold she came up to Leo's back and trailed kisses along his neck.\n\n\"Please Leo. please let her come. Please baby,\" she begged in a sweet voice.\n\nLeo looked into Tamika's sweet face and kissed her lips softly. He licked her tongue and she shuddered into his mouth and looked back to Myra.\n\n\"Say please,\" he demanded.\n\n\"Please! Oh god please let me come Leo!\" she pleaded loudly.\n\n\"If you have to then go ahead,' he said and continued on with his thrusting.\n\nMyra's legs tightened up and she felt the thrusts go on and on as he savaged her ass and suddenly Tamika's fingers sank into her pussy and she lost it. She screamed out a litany of profanities as she came like a banshee. Her howls could easily have woken up the bock if not for the thick walls of Leo's loft. Her body went limp and soon Leo felt his own end coming. Tamika sensed it and smiled impishly.\n\n\"Wanna see how dirty we are baby?\" she asked.\n\n\"God do I,\" he breathed.\n\nTamika wasted no time in yanking his cock from Myra's ass and stroking it violently. What Leo didn't see was she had angled it so his cock head was aimed at her pretty face. Myra saw it and with all she had left joined her lover as she put her cheek alongside hers and opened her mouth. Tamika's tongue played with hers as she stroked his cock not but a few inches from her eager mouth. \n\nLeo's head fell back as he saw the sight and he roared as he unloaded a huge load into their hungry faces. Myra took the first blast across her open mouth and Tamika got the rest in her mouth. The seven ropes that followed covered their tongues and made a big mess on their chins and cheeks. Tamika never stopped her stroking until she was sure all was spent from his cock. Myra laid back and Tamika laid next to her. They both cooed and began to lick each others chins and cheeks to get his thick load in their eager mouths.\n\nLeo collapsed on his back and he was soaked with sweat. He had never in his life felt so alive as his did at this very moment. All his frustrations from the past months flew away as he felt them moving after a few long minutes. Tamika was whispering to Myra and Myra giggled. They both sat up and looked to him sweetly.\n\n\"Wanna take a shower baby?\" they asked in unison.\n\nLeo grinned and got his feet under him. He got off the bed and walked to them. As they looked at him he shoved them both to their backs and started with Tamika. He gripped the edge of her tights and slid them down her long legs. She sighed as he did and when he got them and the ripped thong off her looked back to see an identical tattoo with Myra's name in the same spot as Myra had. He looked at the goddess before him and fully nude she was an amazing sight. After he savored the sight he looked to Myra. One by one he unrolled the socks from her sensuous legs and admired the view for a second time. Both were perfect as far as he was concerned and he held his hands to the both of them.\n\nThe women got to their feet and the procession made their way to the bathroom. Leo had a decent size tub in his bathroom and they all were able to squeeze in. they played in the shower as the girls washed his body and took turned washing their own Leo was in awe as he watched them playing in the spray and his cock got hard again. He realized that Tamika was the only one he hadn't come in and he decided to remedy that. \n\nTamika squeaked in surprise as he bent her forwards and sank into her snug pussy. She mewled as Myra got a coy grin on her face and began to play with her nipples as Leo surged in and out of her. It didn't take long before Myra was whispering in her ear and Tamika was moaning loudly. Leo didn't want to stop. He was in pure bliss as he slammed into her snug treasure over and over again. Myra got a eager smile and grabbed Tamika's leg and set it on the edge of the tub. The angle shifted and Tamika screamed as he sank in.\n\n\"That's it baby! Fuck her pussy! Come deep in her like she wants!\" Myra urged.\n\n\"Is that what you want baby? Want me to come in you?\" Leo teased.\n\n\"God yes! Oh god please come in me Leo!\" she begged loudly.\n\nFeeling that he was nearly done he slammed into her hips as hard as he could and it didn't take long as he came with a loud gasp. Tamika's hole spasmed on him as he did and milked him dry. The velvety hole was like a glove that pulled every drop from his cock and into her womb. Tamika's head was picked up by Myra and they shared a lust filled kiss. Tamika pulled off Leo and rose up and went to her lovers tight embrace as they kissed. Leo watched the two and his eyes never once wavered. They soft sweet kiss made his heart soften and he left them be as they loved each other like he was sure they needed to.\n\nLeo got out of the shower without them noticing and began to dry himself off. He went back to his room and laid on his bed and the smell of their tryst was thick in the room. He laid back and inhaled the lovely scent and as he opened his eyes the two naked lovers came in. they looked somewhat disappointed.\n\n\"Why did you leave baby?\" Tamika asked and looked upset.\n\n\"I figured to let you two have a minute to each other,\" he said softly.\n\n\"Aww...thinking of us sweetie?\" Myra asked her eyes sparkling.\n\n\"Yes,\" he said firmly.\n\n\"Well then, maybe we could spend the night here and wake up tomorrow and have some more fun?\" she purred.\n\n\"I am off tomorrow,\" Leo said softly.\n\nTamika giggled excitedly and crawled into his side. Myra crawled into his other and both women began to kiss his lips sweetly. After they had said their good nights Leo laid back and the women curled under his arms. The lovely women drifted off to a happy slumber in his arms and he laid awake thinking of his fortunes.\n\n\"How could I be so lucky?\" he mumbled and closed his eyes.\n\nLeo's mind was filled with pleasant thoughts of the two women and of the fun they could have. He was never one to jump head long into things, but with these two he couldn't help but want to do just that. As his eyes closed and his mind drifted off Leo had a feeling the fun had only just begun. "
    ],
    "authorname": "creepyrj",
    "tags": [
        "black woman",
        "anal",
        "white man",
        "ffm",
        "rough sex"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/lucky-bastard-2"
}