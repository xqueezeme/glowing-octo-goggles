{
    "title": "E-Written: Pirate Hood",
    "pages": [
        "\"You sure about this, Rob?\" John asked.\n\n\"Positive, Little John,\" Robin answered, standing on the deck of his ship, the Heart of Sherwood. \"You were there when we chased him down, we could have been brothers. Gone for five years, who knows what he might come back looking like? It is a perfect plan. Are Tucker and Will ready to do their part?\"\n\n\"They are already in the city at an inn nearby. If you get caught, Robin... if they find out you are The Pirate Hood of Loxley Sea and not Ser Richard Lionheart, they will hang you.\"\n\n\"They'd have to catch me first. You are sure about the wealthiest noble and the names of his two daughters?\"\n\n\"Yes, from all reports, it is Riff Noddingham, a widower with two daughters. The oldest is Scarlett and the youngest is Marion. Scarlett is already betrothed, but Marion only recently came of age.\"\n\nRobin smiled grimly. \"Ugly, I am guessing?\"\n\n\"It's said they are both great beauties.\"\n\nRobin smiled grimly. \"A rumor perpetuated by coin, I imagine. She will be homely, insipid and probably as large as a house if she hasn't been snapped up yet, but it doesn't matter. So long as he pays the dowry I ask for, and he will. For his daughter to marry into royalty? He would pay any price. Make sure the boys are ready.\"\n\nRobin left, not waiting on a response, knowing his men were trustworthy. To him anyway. \n\nHe made his way into the city and up to the higher tiers. The city was built on the foothills of a mountain and the higher up you went, the more wealthy the residents. He was headed all the way to the top to try his hand at his newest con. \n\nFive years back, Ser Richard Lionheart, sole heir to the crown once his uncle passed, was locked into an arranged marriage. He took one look at her and set sail the next day, disappearing for over five years.\n\nRobin himself ran his ship down less than a week ago on his return voyage. They had brought in quite a haul, but the biggest surprise was how much Robin and Richard looked alike. He could easily pass for the man and now he intended to do just that. He had milked Richard for information for five days, then sold him to the southern slavers who didn't speak a word of English. It was what he was planning on doing to all the girls he stole away from their fathers after collecting their dowry and a ransom too. \n\nThe giant manor house was easy to spot with its expansive grounds and he walked right up to the door and rang, as confident as if he were actually who he said he was.\n\nAn older woman answered, looking up at him in confusion. \n\n\"I am here to see Lord Nottingham.\"\n\n\"Have you an appointment?\"\n\n\"He will want to see me, I assure you. Announce me at once. Ser Richard Lionheart.\"\n\nThe old woman blinked in confusion, then opened the door and let him in before tottering off as quickly as she could move. The older man who came storming out of the study looked angry.\n\n\"Who are you? What game are you playing at?\" he demanded.\n\n\"Lord Nottingham?\"\n\n\"Yes? What is this?\"\n\n\"As you may have heard, I left some years back after my uncle tried to marry me off to a hag thrice my age and barren. I am returning, but I have no intention of going back there without a wife so that he cannot do the same again.\"\n\n\"How do I know you are who you say you are?\"\n\n\"You were at court the same time I was, do you not recognize me? Do you not recognize my seal?\" he asked, showing him the ring on his finger. \n\nHe could see the man mulling it over, looking at him and seeing the resemblance. \n\n\"Say you are who you say you are, what do you want?\"\n\n\"I have heard a great many tales of the beauty of your daughters. I came to see for myself.\"\n\n\"My daughters? My daughters are lovely. And our blood is quite noble... but you understand they are not on par with...\"\n\n\"I don't care about that. I care about finding a young and lovely woman I can love and who can bear me children. Not some old crone or grasping noble.\"\n\n\"I... well of course! Of course, I will arrange a dinner next week and you can...\"\n\n\"No, tonight. Now that I am back, word is going to run ahead of me. I want this done quickly before they come and find me.\"\n\n\"Yes, of course, I will see it done! Tonight then! Seven PM?\"\n\n\"Yes, but I wish to lay eyes on them first, see for myself if the rumors are true.\"\n\n\"Well, you may not have heard, but Scarlett is already betrothed. Marion though, she has recently come of age.\"\n\n\"How recently? Why is she not engaged herself?\"\n\n\"Last week,\" the man said, blushing. \"But she is eighteen now, and she really is lovely.\"\n\n\"Summon her.\"\n\n\"Ahhh... yes, of course. Bianca! Tell Marion to come down! Make sure she is... presentable.\"\n\n\"Why would she not be presentable?\" Robin demanded as a younger maid popped out of the study and hurried up the stairs.\n\n\"Ahhh... she sometimes likes to... ahhh... \"\n\n\"What? Spit it out man!\" Robin spat haughtily.\n\n\"Well, she is a bit of a free spirit and... sometimes she will hide away and spend the day in a tree, reading, or in the woods behind the manor. I know she is home today though! But sometimes, she doesn't always get dressed or brush her hair... She is learning to become a lady now! She is! She just needs a steady hand to tame her...\"\n\n\"I see,\" Robin said darkly, scowling and looking like he was having second thoughts. \n\n\"Just meet her! Take a look at her!\" Lord Nottingham said quickly. \"She will be down any moment!\"\n\nRobin crossed his arms, looking put upon as he looked around disdainfully. \"Are you at least going to offer me a seat and a drink?\"\n\n\"Pardons! Pardons sir, please, come in and have a seat in my study, please! I have a new wine in! Sorcha, wine for Ser Richard!\" he snapped at the older woman who had answered the door.\n\nRobin sat, reclining and lounging like only a spoiled noble could as he took the wine. \n\n\"So, Ser Richard, where have you been these last five years?\"\n\n\"Exploring, collecting, learning. There is a wide world out there and I wanted to see it all. How long is this going to take? If she is not suitable, I would like to sail on the evening tide.\"\n\n\"She is, I assure you! I am sure she is on her way down any moment! May I offer you some fare?\"\n\n\"No. Tell me. How can I be sure you are as wealthy as you tell people you are? A fine house doesn't always mean you have wealth at hand. If I marry your daughter, she will have access to all of my wealth, how can I be sure you do not intend to use her to get to it?\"\n\n\"I assure you, my wealth is excessive to say the least! It is well known!\"\n\n\"I have had many Lords say one thing, but in truth they are heavily in debt from many lenders. I will need assurances. You need to know before I would consider your daughter, I will require one third of your wealth as a dowry to take with me. After we are married and you are investigated thoroughly, it will be returned to you.\"\n\n\"One third! Ser, that is... that is unprecedented!\"\n\n\"But you understand I HAVE to be sure. If I return home and it turns out I am married into an indebted family, my uncle will have it annulled immediately. If it is an issue for you, then perhaps you are not as wealthy as you claim to be.\"\n\n\"I am! I am... but it may take a few days to have that much ready for travel.\"\n\n\"If you are who you say you are, then you understand your daughter will become queen eventually. That would mean titles, endowments, a great many things in store for you and your family. I would require that you not make a spectacle of yourself or find yourself in any sort of... awkward predicaments. You must begin acting as though your daughter is queen immediately, but say nothing until it is done and announced kingdom wide.\"\n\n\"Yes, of course. I understand, and my family, we are scandal free!\"\n\n\"I will have you investigated.\"\n\n\"Of course, and you will find we are... Marion! My little love, there you are!\"\n\nRobin stood and turned to the door, looking down at the tiny wild looking girl in the doorway. His first thought was that she was too young, but he quickly reassessed. She was a woman, but a woman in miniature. She would be full figured were she a foot taller. The second thing he noticed was her disarrayed hair, hastily twisted back in an auburn, curly mess. Then the grass stains on her dress, the ink stains on her hands and the paints everywhere, even a smudge on her jawline. There was dirt under her fingernails and she was wearing no shoes.\n\nThe final thing he noticed was her dark brown eyes as she scowled up at him. She was, indeed, a breathtaking beauty, but she was also completely wild and unrefined. That, he did not really care about, but 'Richard' would.\n\n\"She is... unacceptable as is!\" he snapped to her father.\n\n\"She will be ready by tonight! She will! She is beautiful though, you see? She is a bit of a free spirit, but...\"\n\n\"She is completely wild! Look at her! A queen cannot be seen in such a state!\" Robin went on.\n\nThe girl bulled up indignantly. \"Who the hell are you to tell me what I can and can't do?\" she demanded, her hands in little fists.\n\nRobin wanted to grin at her and her fire, but he schooled his face. \"I am Ser Richard Lionheart! Your future king! Show proper respect, girl!\"\n\n\"You are an ass is all you are! Braying around the room like some mindless farm animal until you get your way!\"\n\nRobin had to bite his cheek to keep from laughing. \n\n\"Marion! Marion, please!\" he father cried, going to her. \"I am sorry, Ser. After her mother died, I had not the heart to admonish her in anything and I let her do as she pleased. I see now I should have taken her in hand sooner! But she will settle down and she will make you a perfect wife!\"\n\n\"I'll not marry that buffoon!\" Marion hissed. \"I'd sooner skewer his liver than marry him!\"\n\n\"Marion! You stop it right now!\" Lord Nottingham said sternly. \n\nShe crossed her arms, still scowling. \"Can I go back to painting now?\"\n\nRobin turned to her father. \"When I return this evening, you will have her well in hand or I will cast you all down and grant your titles and estates to a family worthy of it! You swore there were no scandals, yet you have HER standing right there calling you a liar!\"\n\nLord Nottingham paled, but Marion spoke first. \"Why you arrogant piece of filth! Who do you think you are, coming here and demanding of my father and then claiming we aren't good enough! You came to HIM, not the other way round! If you don't like our ways, you just move on!\"\n\nRobin looked down at Lord Nottingham, his nostrils flaring in supposed anger, but it was barely suppressed mirth. \"I will move on, and I will see you set down as an example for this insult! Your head on a spike at the palace! Her chained in the kitchens, scrubbing dishes the rest of her life. Your other daughter cast down and sold to the slavers in the south.\"\n\n\"You can't...\" she began, but her father cut her off.\n\n\"Ser, Ser, please. She is just in a bad humor right now, she has not been sleeping well. She has nightmares sometimes and...\"\n\n\"Papa!\"\n\n\"And she acts out when they are especially bad. Marion! Not another word! Ser, she will be ready tonight, give me this one chance to show you that you simply caught her at a bad moment. We will have a feast prepared for you and even entertainment.\"\n\n\"No. No entertainment, I have no wish to have to shout to be heard.,\" Robin snapped irritably.\n\n\"You love your own voice too much,\" Marion muttered.\n\n\"Marion!\" Lord Nottingham hissed.\n\n\"You have until this evening to get her in hand,\" Robin said through gritted teeth. \"Or I make good on my promise and your head alone heads to the capitol with me.\"\n\nHe left, storming out, then grinned when he made it to the street. She was a little spitfire and his ruse had worked perfectly. He hired a coach, knowing he could not be seen walking now where it might get back to Lord Nottingham, then went to the finest inn nearby. He told no one his assumed identity, he didn't want word spreading ahead of him to the next port. He had to stay ahead of it, or his plan would not work. \n\nSo far it was working perfectly. After tonight, he would have to give the signal for the next part of his plan.\n\nHe arrived back at the manor just after seven, fashionably late. He rang, and he found he was a little excited to see how they had tried to tame the wild little woman.\n\nThe old woman opened the door immediately, like she had been standing there waiting and showed him right to the large parlor.\n\nLord Nottingham was there, along with a young woman he assumed was Scarlett and a man sitting near her he assumed was her soon to be husband. Lord Nottingham stood and bowed and the others followed suit.\n\n\"Where is she?\" he demanded, ignoring their courtesies.\n\nLord Nottingham blushed. \"She will be down by the time we eat.\"\n\n\"I will check on her!\" the other girl said quickly, staring at Robin with wide eyes as she fled the room.\n\n\"Not even an introduction? Who are you people that you are all so uncouth?\" Robin demanded.\n\n\"Ser, it is not so, she was only flustered for her sister's sake. That was my oldest, Scarlett and this is her betrothed, Duke Atterly.\"\n\n\"Ser,\" the young man said with a bow.\n\n\"Yes. How long must we wait?\"\n\n\"We can go sit down now, the ladies will join us directly.\"\n\nThe man led Robin to the large dining hall where servants were hovering. Wine was poured immediately and Lord Nottingham watched the door nervously.\n\n\"Tell us about your travels,\" the Duke said, holding his own wine up to look at.\n\n\"You will address me as Ser.\"\n\n\"Apologies. Tell us about your travels, Ser.\"\n\n\"They started horribly, but once I began discovering where to put in, they got better. The southern isles were especially nice. When we...\"\n\nRobin went quiet as Scarlett hurried back in, her face pale. She bent to her father and whispered in his ear and Lord Nottingham went bright red.\n\n\"Your pardon, Ser, I will be right back,\" he said breathlessly, jumping up and hurrying out of the room. \n\nScarlett gave him a fearful look, then turned and followed her father.\n\n\"This is ridiculous!\" Robin hissed.\n\n\"Marion is very... unconventional. She does things her own way. If the right man were to catch her eye and win her heart, he would be in for quite a treat, I think. Otherwise... She would make life hell for anyone who thought to try and tame her,\" Duke Atterly said conversationally.\n\n\"We shall see about that,\" Robin snarled, feeling amused by this girl all over again.\n\nLord Nottingham came back, his hand locked around Marions arm, breathing heavily like he had had to run at some point. Marion was glaring at Robin, but she looked stunning in a long golden gown, the color setting off her skin tone beautifully. Her hair was rolled and twisted up in the latest fashion, but it looked precarious as though she had been struggling after it had been done. \n\nHe also noticed, with a bit of fury, that her cheek was a dark red, not the pale pink of her other cheek with a blush, but as though she had been struck. \"Did you hit her?\" he angrily demanded of Lord Nottingham before he thought about it. He berated himself. Ser Lionheart would not care if she had been hit so long as she was in hand.\n\n\"Only to make her stop and listen, she was being unreasonable! I have never had to... punish her in such a way before. Marion! Sit down here,\" he demanded, pushing her into the chair next to Robin.\n\nRobin looked down at her and she glared at her plate, her little hands clenched into fists. He knew better than to push her, she would go into a fury and 'Ser Lionheart' would never stand for that. Instead he looked at Lord Nottingham. \"Why have you never remarried? Given this girl an example to look up to and take her in hand?\"\n\n\"For reasons similar to your own, Ser. Women seem to be attracted to what I have more than me. The two women I courted both suggested sending my daughters off and bearing me a child themselves. I had no interest in that sort of woman. My daughters were enough for me.\"\n\n\"So you have spoiled them.\"\n\n\"I suppose I have, but they have had happy lives.\"\n\n\"Marion, what are your thoughts on living at the capitol?\" Robin asked her.\n\nMarion looked up at her father, her nostrils flaring. \"I would be well pleased to go,\" she said through clenched teeth.\n\nRobin's lips twitched before he could stop it. \"And do you think you could manage to behave and act accordingly, as a queen should?\"\n\n\"I would be well pleased to try,\" she hissed, her hands gripping her knife and fork as if they were weapons.\n\n\"Would it please you to be my wife?\"\n\nMarion snapped her head to look at her father again, visibly shaking now. \"I would be well pleased to...\" she began, then clamped her mouth shut and looked back down at her plate.\n\nRobin pretended to take that as a completed sentence, nodding. \"Well and good then. It seems you can behave when required, though you will still require some work. The trip back will be plenty of time to teach you. Lord Nottingham, you said you would require three days? You have three days exactly, we sail with the morning tide three days hence.\"\n\n\"Yes, Ser Lionheart! I will have everything ready! On my honor!\"\n\n\"Good. You may serve.\"\n\nLord Nottingham waved to the servants who quickly began serving. \n\nRobin looked back down at Marion. \"I will stop in tomorrow around luncheon time to see you again. The same the day after. Get to know you better before our voyage. Is that agreeable to you?\"\n\n\"I would be well pleased to receive you,\" she growled, cutting her eyes at her father again.\n\nRobin smiled, unable to help himself, but it was alright. He could pretend it was him being happy with her compliance and not at being amused by her.\n\nHe left that night grinning. Lord Nottingham was all in, everyone thoroughly cowed by him.. Marion was going to be fun once he got her on board his ship to take to the slavers. He couldn't WAIT to see her face.\n\nHe gave Tucker a nod as he passed the man who had been standing back in the shadows of an alley, waiting on him to pass. \n\nTucker smiled and nodded back, then left to get Will.\n\nRobin was absolutely giddy by the time he got to the inn. Now his boys would do their part in this and take her in the night. Lord Nottingham would pay the ransom, and quickly before word of the scandal got out. He really wished he could watch when Tucker and Will took the girl.\n\nJust after noon the next day, he knocked on the door, then had to stand and wait. The old woman answered finally and she had obviously been crying.\n\n\"What is happening? Why was I kept waiting so long?\" he snapped, pushing his way in and walking right to Lord Nottingham's office.\n\n\"Ser!\" Lord Nottingham cried, jumping up in shock and fear. \"Ser, I was not expecting you!\"\n\n\"I said I would be back today and tomorrow for luncheon to spend time with Marion, did I not?\"\n\n\"Oh... yes. Yes you did! I... is it so late already?\" he stammered lamely.\n\n\"It is. Let me guess. She has hidden herself away again? Off climbing a tree? Find her at once.\"\n\n\"Ahh... yes, Ser Lionheart. Ahh... we will look but sometimes when she goes off up in the mountain, we can't find her.\"\n\n\"Are you saying she ran away?\" Robin demanded furiously.\n\n\"No! No, just... she will be back soon! Before you sail, I assure you!\"\n\n\"Before I sail? Just where IS this girl that I can't see her for two days?\"\n\n\"We will have her back here, I promise you! I will send for you as soon as we find her.\"\n\n\"I will return this evening and in the morning. If she is not found the night before I sail, I will assume she is hiding from me specifically and I will not take kindly to that at all, Lord Nottingham.\"\n\n\"I will have her back! I will, and it isn't you! She is just... forgetful and she loses track of time sometimes when she allows herself to get distracted.\"\n\n\"Why has everyone been crying?\" Robin demanded when the younger servant came in with a lunch tray, her eyes and nose red from obvious tears.",
        "\"Ahh... we suffered a loss, Ser. A longtime servant passed in the night.\"\n\n\"I see. I will forgive the rudeness of having to wait so long outside then. I will return this evening. See that she is found.\"\n\nRobin left, smiling again as he got in the coach. Everything was going exactly right. Lord Nottingham was going to do everything in his power to get the ransom paid and get her back home before 'Ser Lionheart' knew what was happening.\n\nThat evening and the next morning went the same way, with Lord Nottingham profusely apologizing and promising to have her home by that evening and having everything ready to go by morning. He even offered to have her already packed things loaded onto Robin's ship.\n\nRobin waved him off, pretending to be angry and having second thoughts.\n\nWhen he returned that evening, he was shown right into the parlor where Lord Nottingham was sitting with Marion, holding her hand tightly.\n\n\"Ser Lionheart! You see? I told you. It was all just a misunderstanding. It seems she did go for a short walk and fell into a crag. She was stuck there until my men found her and got her home. That was all. She is home and safe now, aren't you my little love?\" he asked, hugging her shoulders.\n\nShe nodded quietly, her eyes a little wide with fear.\n\n\"Did you hit her again?\" Robin demanded as he moved closer, noting her split and swollen lip, as well as a mouse on her other cheek.\n\n\"No! No, Ser Lionheart. Ahh... that was from her fall. She is fine now, aren't you little love?\"\n\nShe nodded, still quiet, still spooked.\n\n\"Very well. We sail in the morning. Do you have the dowry ready?\"\n\n\"Yes, Ser Lionheart.\"\n\n\"Send it along to my ship tonight, along with her trunks so my men can secure it. You will meet me at my ship at sunrise, with her. Do not be late.\"\n\n\"No, we won't. We will be there. I will send everything tonight. Right now,\" Lord Nottingham assured him.\n\nRobin gave a terse nod, then left. He had intended to stay a final night at the inn, but he was upset. His men weren't supposed to hurt the girl or mark up her face. She would be worth less to the slavers. They had also frightened her enough that her spirit was diminished, at least for the evening.\n\nHe had the carriage take him straight to the docks and he boarded The Heart of Sherwood in a fury. \"Little John! Where are you?\"\n\n\"Rob? Didn't think to see you till morning.\"\n\n\"Where are Tucker and Will?\"\n\n\"Their bunks?\"\n\n\"Send them to my cabin, now. You come too,\" Robin demanded, then went to his cabin, pacing angrily. They all came in, Will having the grace to look ashamed.\n\n\"Rob, we didn't go into it meaning to lay hands on her!\" he said quickly.\n\n\"She fought like a cornered badger!\" Tucker accused.\n\n\"She BIT me!\" Will agreed. \"Sunk her teeth in and held on!\"\n\n\"We were defending ourselves!\" Tucker put in. \"You didn't see it! She was nothing like I'd ever seen before!\"\n\n\"Little as she was, she was 100% spite and venom! It was all we could do just to get her back to the ship! We had to knock her out! We couldn't have done it otherwise, on my honor, Rob!\"\n\n\"It's the truth, Rob! She is a fierce little creature! If it had just been me alone, I don't think I could have grabbed her!\"\n\n\"That goes double. I couldn't've taken her by myself. I didn't think the both of us were going to get it done!\"\n\n\"Enough!\" Robin snapped, vastly amused now. \"Why was she so upset? What had her so shaken?\"\n\n\"Told her if she spoke a word to anyone, we'd all have a go at her puss, the whole crew, then we'd bugger her and her sister with oars and plant them in the square for the city to see. We also may have made her think we was all gonna have a go before we let her go home. Kept her locked in them stocks you have for extracting information. Had a few looks at the goods just to keep her from kickin' and spittin' at us.\"\n\n\"Did any of you touch her?\" Robin asked, his voice dangerous.\n\n\"No, Rob. You told us not to and we didn't. We had whores up at the inn there though.\"\n\n\"Little John, get the others. There should be a shipment arriving any time, be ready to load it and secure it. Wake me before sunrise and not before,\" Robin snapped, a little irritable about how badly they had scared Marion. \n\nThey woke him just before sunrise and he wore the finest raiment that had been in Ser Lionhearts wardrobe to greet Lord Nottingham and his retinue at the docks. Marion was in the gold dress again and she looked exquisite save for the furious little scowl on her face. \n\nRobin managed to hide a smirk, glad she had gotten her fire back. \n\n\"Come aboard. My Captain here will say the words over us and I have all the documents for witnesses to sign,\" Robin announced, gesturing to Little John, who he had found a ridiculous 'Captains' hat for. \n\nThey came aboard and Lord Nottingham led Marion to Robin, but she crossed her arms and turned away when he tried to pass her hand over to Robin.\n\nRobin bit his cheek and turned away from her, giving Little John a nod.\n\nThe 'ceremony' was over in minutes, Marion never looking at anyone but her father with eyes that were full of promises of revenge. The 'documents' were signed and witnessed and signed by witnesses and almost as soon as they were, Robin quickly announced, \"We make ready to sail with the tide. Say your farewells for now, wife. Lord Nottingham, you will await my word, but be ready to come to the capitol as soon as you hear from me. Have a ship secured to be ready. I want no one to be able to contest this marriage in any way and I might need you and your family as witnesses.\"\n\n\"Yes, Ser Lionheart, we will be ready!\" Lord Nottingham said quickly, his eyes shining with greed.\n\nRobin stepped back, gesturing to Marion, who he purposefully had not tried to kiss. He had no wish to be bitten this morning. Lord Nottingham tried to go to her and hug her, but she danced away from his arms, then full arm slapped him across the face.\n\n\"I will never forgive you for this! Never! You SWORE to me I would never have to marry then you foist me off on the first dandy to show up for my hand! I HATE you!\"\n\n\"Marion, don't be ridiculous, you know it is your duty to marry! I only said I wouldn't force you to marry some old fool. Ser Lionheart is young and you will be a queen someday!\"\n\n\"You don't care about that! You care that you will be FATHER to a queen! First thing I will do is strip you of everything and send you to live with the goats! See if I don't!\" she shrieked. She turned to Robin. \"Where is my room?\"\n\n\"Our cabin is through that door,\" Robin said, pointing at the Captain's quarters door and emphasizing 'our'.\n\nShe turned and fled to it, slamming the door shut, then everyone could hear her scream in a wordless rage, something smashing and breaking seconds later.\n\nRobin sighed. \"I best see to my wife. Captain, we sail now. Lord Nottingham, be ready.\"\n\nRobin hurried to his cabin as something else crashed and broke, then had to use his key to unlock it so he could get in. He trusted Little John to see them out to sea. \n\nMarion spun to him when he entered, her face a study of fury and heartbreak, then she let loose a scrimshaw he had picked up across the lands. He snagged it out of the air easily, making her pause and blink as he set it on one the velvet display case insets. \n\n\"Wife,\" he admonished, looking around at the broken glass on the floor. \"This little display is a bit childish, don't you agree?\"\n\n\"You lay a hand on me and I'll slit your throat in your sleep!\" she hissed.\n\n\"Make your threats when I try to touch you, girl,\" Robin smirked. \"I didn't even kiss you to seal the marriage. Yet. Or didn't you notice? Too busy hating your father for doing what he had no choice in. Do you even care that if he had said no, his head, yours and your sisters would be rotting on pikes?\"\n\n\"He could have TRIED to talk you out of it instead of trying to sell me to you, force me to be what I am not to appeal to you! You are nothing but an overweening, arrogant old man who likes to make people bow and scrape.\"\n\n\"Old man is it now? I thought myself rather young at only 27.\"\n\n\"That is almost ten years older than me! Old!\"\n\nRobin laughed. \"Marion. Wife. I would ask you not to destroy any more of the things I have collected. They aren't worth much as far as money goes, but they hold memories of places and people that I cherish. If you cannot respect that, then perhaps you would be more comfortable in the hold.\"\n\n\"Is the hold away from you? I would be glad for it!\"\n\n\"It is below, with my men. You would rather sleep among them? Sailors and ruffians all? You may step below if you like, see how well you are treated. That's what I thought. Never try to lock me out of my own quarters again and do not break my things. Your own things are in those trunks. Break them all you like,\" he said before stepping back out on deck. \n\nHe no sooner let go of the door than he heard the lock click into place. He smiled grimly and went to check on the haul. The ransom and the dowry. It was impressive and Will was giddy as he sat counting it, showing Robin the numbers. \n\n\"This is the best con you ever came up with Rob!\" he said happily. \"How many more ports can you put in at?\"\n\n\"Every one from here to the capitol! We will retire once we are done, all of us! Buy ourselves an island and live like kings!\"\n\n\"We have the hold ready with the cages as soon as you want her locked up.\"\n\n\"Good. She is making a mess of things in my cabin. As soon as we are out of sight of the port, I will bring her down. Write all that down and divide it out like I told you. I have a 'wife' to go take in hand.\"\n\n\"You gonna fuck her?\"\n\n\"They are worth more whole and I don't fancy having my bits clawed off.\"\n\n\"She would, too. Little hellion. I can put her back in the stocks for you. Well. Have the boys do it. I won't get near her again.\"\n\nRobin chuckled. \"I'd rather have a softer hand that was eager to please.\"\n\n\"I'm sure the next one will be much less... demonic.\"\n\nRobin laughed again as he left, going back up to his cabin. He unlocked the door and went in, pausing in confusion. There were clothes everywhere, her chests upended as she tore through them. \n\n\"Where ARE they?\" she asked in a rage, turning to him. \"Did YOU tell them not to pack my paints?\"\n\n\"Of course not, why would I? Pick all of this up. One of my men has chalks and pencils, along with a stack of paper. If you can act civil, I will have them brought to you.\"\n\n\"I will see them first!\"\n\n\"No, you will clean this mess up first. Is there still glass under all of these clothes? You are a spoiled little creature, aren't you? Clean up your mess, Marion.\"\n\n\"Do it yourself! I'll do nothing for you!\"\n\n\"Clean it up, Marion, you made it. I'll not allow you to act like a spoiled brat any longer. All you are doing is testing my patience and you will not like the results.\"\n\n\"Let me guess? My head on a pike? Or perhaps some other idle threat, like an eternity scrubbing pots?\"\n\n\"How about back in the brig in the stocks where my men all really will take turns fucking you and not just looking at you,\" Robin said angrily.\n\nShe went still, going pale as she looked at him. \"You... it was YOU! Why would you... You aren't Ser Lionheart at all, are you? You are some imposter!\" She shrieked and ran at Robin, at the door, leaping at him.\n\nRobin sidestepped her quickly, grabbing her by the throat as he lifted her, then slamming her to the floor. Her breath left her in a rush as she stared up, dazed.\n\n\"I am not as easily cowed as my companions, Marion. I have no compunctions at all with punishing a woman who comes at me as a man would. If you wish to test my reflexes, be my guest, but it will only end badly for you. Now clean your mess up,\" he demanded, standing.\n\nHe stepped back and watched her as she slowly rolled and tried to breathe for a moment. She went to her hands and knees, still heaving, then suddenly launched herself at him again, screaming in wordless fury.\n\nHe sidestepped her again, snatching her by the hair and using her own momentum to swing her around and throw her across the room. She rolled into the side of the bed with a hard thump and went still.\n\nRobin did not fall for it, he stood waiting, smiling. He knew the second she decided her ruse wasn't going to work. He didn't have to see her slight shift to move, he knew what was coming. The handful of glass missed him by several feet and he smirked as she looked, her eyes tracking him to his new location, seeing the incredulous anger in her eyes. She came at him again, with another scream and this time he let her get close before sweeping her arms around as he grabbed them both in a single hand and spun her, yanking her hard against his chest, his other hand going to her throat and closing around it. \n\n\"One more outburst and I will put you down like the animal you are acting like, Marion,\" he snarled as she struggled, trying to kick at his legs. \"You will pick these clothes up and sweep up all the glass or I will put you back in those stocks for the next month in nothing but your skin! The only food you will get is what my boys spend down your throat. Is that what you wish? Look me in the eye and see if I am bluffing,\" he hissed, turning her face up to his.\n\nShe froze, looking up at him, her anger dissolving into fear. It was warranted, he was very serious. \n\nHe let her go with a shove and she turned to him, tears filling her eyes. \"You... stole me. You tricked my father for money and stole me away! What sort of monster destroys a family so?\"\n\n\"I am a pirate, girl. You'll not touch my heart with your tears or sad story. I've heard them all already. Start cleaning.\"\n\nShe spun away, clutching her stomach as anguish hit her. She pretended she wasn't sobbing brokenly as she righted her trunks and picked up clothes. Robin watched her warily, not buying that she wouldn't try again. At least once her sorrow turned back into ire. He stepped out the door. \"John! Send me Alan and Dale!\"\n\n\"Aye Captain!\" John called as Robin shut the door, still watching her.\n\n\"I assume the marriage was a farce as well since you are the captain and not that man?\" she asked, yanking a petticoat up and stuffing it into into the trunk with force.\n\n\"Of course. I'd sooner shove a weasel down my shirt than marry you.\"\n\n\"As if you are some catch, you lying old...\"\n\n\"That's enough of that. Finish cleaning up.\"\n\n\"What do you intend to do with me?\"\n\n\"Sell you to the slavers,\" he answered with a shrug, seeing no reason to lie to her.\n\nShe stopped and stared at him, her eyes wide. \"The slavers? In the south? Do you know what they will do to me?!?\" she cried.\n\n\"I've a good idea, yeah. Don't worry, you won't be alone. I'm going to sell every noble bitch I con with this story.\"\n\nHe saw it then, the moment her demeanor changed and he knew she was about to go on the attack again.\n\n\"Don't try it Marion,\" he said gently. \"I will always be faster, always be ready for you. My men follow me because my reflexes are almost supernatural. I can see a storm coming long before it's due to arrive. That's a metaphor. Means I know every move you will make before you know you want to make it. I know which ships to chase down and which ones we are no match for and which ones are limping along trying to ambush us. I know which cons will work and when my mark is getting suspicious. Your father, by the way, never once suspected after I first arrived. Gullible fool.\"\n\n\"You don't get to speak of him!\"\n\n\"I thought you hated him?\"\n\n\"Just because I hate him doesn't mean you can speak ill of him!\"\n\nThere was a knock at the door and Robin opened it, not taking his eyes off Marion. \"Allan, Dale. Do you still have those chalks and papers you got to impress that girl on the island?\"\n\n\"I think so Captain?\"\n\n\"Yes sir.\"\n\n\"Bring them. The chalks, the pencils, the paper, all of it.\"\n\n\"Charcoals?\"\n\n\"Yes, Dale, that's what all of it means,\" Alan hissed as they left.\n\nRobin shut the door, still watching her. She looked considering now. \"If you mean to bribe me, it won't work,\" she said finally.\n\n\"Finish picking your things up and close the trunks. Sweep the glass up. There is a brush with a handle for sweeping behind that door there, along with a pail to sweep it into. Be quick.\"\n\n\"Are you going to put me in one of the cages I saw below? The ones not fit for animals.\"\n\n\"Yes. I thought to leave you out a bit longer since you will be here longest, having to sit and wait at every port as I gather more noble brats to sell. Part more greedy fools from their money. You can go straight to the cage if you prefer.\"\n\n\"You won't get away with this. My father will figure it out and come after me.\"\n\n\"I know he will. They all will. But it will all be too late. By the time they know they have been duped, I will be long gone and their daughters will too. Most will be too embarrassed to admit they were fooled by such an obvious con and they will try to let it be known their daughters were married off to a foreign power. Leave it at that. Your father will be one of those, you should have seen how hard he worked to keep it quiet that you had been kidnapped right out of his house and held for ransom. He may take a trip to the capitol, look around a bit, ask some quiet questions... but admit he was tricked into paying someone to carry off his daughter? And paying her ransom so that he could get her into the man's hands quickly? How many will look down their noses and scoff at his idiocy? No, he will keep a very tight lid on it. Hope no one ever finds out. I see in your face that you know I am right. He is a prideful man. They are all prideful men, and greedy. That's why this con works so well. They want it so badly, it narrows their vision completely.\"\n\n\"And you think it is your right to take from anyone you wish? To steal money, steal daughters, destroy families?\"\n\n\"It is my right to take money from anyone foolish enough or weak enough to let me take it. Now sweep up all the glass. That door there, the little cupboard. You throw that at me, I will throw it back and I won't miss. Then I will strip you down and tie you to the mast and paddle you like a willful child in front of all my men, then leave you there. Is that appealing to you? To spend the next month in the weather on my mast? Sweep up your mess and put it away. You touch that Astrolabe and I will break your fingers! That was a gift. Sit down at the table,\" he demanded as another knock sounded.\n\nHe opened it and took the tin and stack of paper from Alan, then shut the door. He moved to the table and set the papers and tin down, then backed up and opened another cupboard and placed an apple near her on the table.\n\n\"These chalks are trash, cheap and...\"\n\n\"One more complaint and you can sit in a cage instead of at my table receiving my favor. Can you sit in here and behave, or do I need to secure you?\"\n\nShe glowered at him as he backed up to the door and he smirked as he left. She had fire, even if she was a spoiled brat. \n\nHe was standing at the wheel, showing Little John where they were putting in next when she came marching out on deck. He paused watching her as she looked around, then went to port and stared out to sea. At least she had enough of her head about her to know which way shore and home was, even if she couldn't see it anymore. He knew she wasn't going to jump, but even if she did, he wouldn't bother saving her. \n\nShe turned again and looked around the ship and he noticed all of his men watching her warily. They had heard Will and Tucker talk about her. Robin had known she was going to come out on deck and the whole reason he had left her free to do it was to watch his men watch her like she was a strange cat among them. He was curious to see if she would do exactly as he thought she would.\n\nSure enough, her gaze fell on the crows nest and she kicked her shoes off as she hurried to it and yanked her skirts to her thighs. The men stared, gobsmacked as she climbed up and climbed in, standing and looking out in every direction. He grinned and went back to what he was doing.",
        "\"You going to let her stay up there, Rob?\" Little John asked, his voice strained.\n\n\"You going to go get her?\"\n\n\"No!\"\n\n\"What's she hurting up there? She'll come down eventually. Tonight if not before.\"\n\n\"Tonight?\"\n\n\"Before the storm, or during.\"\n\n\"If she isn't down before morning when we put in?\"\n\n\"I will get her down if it comes to it, but she will come down. She is smart enough to know the danger of a storm at sea.\"\n\n\"Why not just cage her?\"\n\n\"Are you kidding? Look at the boys.\"\n\nLittle John looked around at all of the others, watching them cast terrified and spooked glances up at the crows nest. He nodded, smiling. \"That'll keep'm on their toes.\"\n\nRobin chuckled, then waved Little John off as he took the wheel. He found his eyes going up almost as often as his men, if for a different reason. Of his crew, only two would go up in the nest and only four in the rigging. It wasn't a common thing for a man to just fly up there on a whim, let alone a 'lady'. He had never once heard tell of it. \n\nBut he had known she would do it as soon as she saw it.\n\nHe was also right that evening when the dark clouds started moving in. She watched them get closer, but slid down like a pro when it got close enough to be dangerous. His men skirted wide of her as she strode up to where he was at the wheel. \n\n\"Show me how to do that,\" she demanded, pushing his hands off the wheel to take hold of it. \n\n\"You should go below, before the storm starts,\" he told her, watching her and knowing what she was up to. From the opposite side, keeping his other hand where she could see it from her periphery, he reached across himself and slid his dagger from its sheath and tucked it behind his belt. A moment later, as she was pretending to learn to steer, she shifted and pivoted, turning to snatch his dagger. \n\nShe blinked at the empty sheathe, then glared up at him as he smirked at her. \n\n\"I will always know,\" he reminded her. \"And I will always be faster. Go below and clean up the mess you made looking for some sort of weapon to use on me.\"\n\nShe looked confused a moment, as if wondering how he could know. He hadn't gone back in since she had come out, no one had. \n\n\"Get it done before I return and I won't punish you for it.\"\n\nShe stepped away, then bulled up, ashamed at her initial fear response. \"I want to learn to sail!\"\n\n\"I do not doubt you. Why would I teach you to sail? Go below and clean it up.\"\n\nShe spun and stormed off, going back into the cabin just before the rain began. He grinned, enjoying the game for now. An hour later, when it was dark, he called down to Will as he ran past. \"Will! Go in my cabin and check on our prisoner!\"\n\n\"I'd rather ride a stone overboard!\" Will called as he kept going.\n\nRobin chuckled again, then motioned Little John up. \"You want the wheel for the night or you want to put hands on the girl and get her to her cage?\"\n\n\"The wheel,\" Little John said quickly, adamantly.\n\nRobin laughed again at how the little noble woman had all his men terrified of her. He left John to it as he went down. He paused at his door then pushed it open and waited. It was pitch black inside and he knew she was laying in wait. Probably with one of his personal treasures. He really needed to either put them away or stow her somewhere else. \n\n\"Go ahead,\" he called into the dark. \"Give it your best shot, but beware that I am...\"\n\nHe snatched the sextant out of the air, and then the scrimshaw, dropping them as easily as he could as more things flew at him. All of his things. He caught them all as quickly as she threw them, even the ones that flew wide.\n\n\"Dale! Pick these all up and stow them,\" he called as he stepped over them. He paused again at the door. \"Marion. You have three things left that you can throw. If you throw any of the three glass pieces that will break, you will not be able to sit for a month. I have to think you knew not to throw anything that would be broken or I would take issue with it. I think you value your freedom of movement enough that you would risk having yourself locked up already. Come out from under the table, stand up. Unshutter that lamp. Step back and put your hands out where I can see them.\"\n\nRobin stepped in and shut the door, smirking at the glowering girl with the wind whipped wild hair. Her cheeks were chapped and she had sun, her clothes disheveled. She should have looked ridiculous, but the look suited her completely. She was like an elemental fey thing. \n\n\"One would think you would prefer the cage below to a bit of freedom. Why act out in such a way when you know it will only go badly for you?\"\n\n\"I will not just...\"\n\n\"Stop! The nail on that post where I hang my coat. Drop it, now. You are a disagreeable little creature,\" he hissed, yanking up the nail off the floor. She kicked at him as he bent, like he knew she would, and he caught that tiny foot and lifted, landing her flat on her back on the floor. He dragged her kicking and screaming by her foot to the bed and yanked her up, tossing her into it. Even as much as she fought, as wild as she went, it took seconds for him to secure her wrists to the headboard and her ankles to the footboard.\n\n\"Don't!\" She cried out, fearful for the first time. \"Don't do this, please!\"\n\nRobin laughed as he got up, leaving her there on the far side of the bed, secured tightly. \"You fear not being able to move, yet you don't balk at trying to get yourself put in a cage where movement would be minimal?\" he asked, sitting at his table to eat.\n\n\"I will act better if you don't... if you don't...\"\n\n\"I refuse to try and sleep unless you are in such a way that it would be impossible for you to try and end me,\" he said emphatically.\n\n\"You... don't mean to rape me?\" she asked, both sounding relieved and offended at the same time.\n\n\"You are worth more whole,\" he shrugged. \"And I have plenty who are more than willing to share my bed who won't try and chew my bits off.\"\n\n\"Then why...?\"\n\n\"Would you prefer the metal of the cage?\"\n\n\"Why are you doing all of this?\"\n\n\"Gold. Of course. Why else?\"\n\n\"You have gold, must you sell me too? I know what a slave brings, it is a pittance compared to what you took from my father!\"\n\n\"Indeed, but I have to get rid of all of you somehow,\" he shrugged.\n\nHe saw her go still, realizing she wasn't going to be the only one.\n\n\"And maybe a single spoiled little slave would not bring too much, but twenty? Thirty? Forty innocent little flowers?There are many ports between here and the capitol and if this works at even just one more, my men and I are set for life. Two more and we will be kings. Three and nothing will ever be able to touch us again! If it works at every one? I will be the single richest man to ever live.\"\n\n\"Monster.\"\n\nRobin shrugged again. \"Say what you will, it's about time someone poked a hole on the nobility and deflated them a bit.\"\n\n\"They will come after you!\"\n\n\"I already told you why they wouldn't. Besides, I will have the money to hire my own navy and army on my private island. I will be untouchable. I intend to commission a floating fortress, a movable place for pirates to find sanctuary and to trade and be safe from bloated nobles getting fat off another man's hard work.\"\n\n\"Stealing is NOT hard work!\"\n\n\"An honest farmer tends his sheep, sheers them and sells the wool. He gets next to nothing because it's just wool, not yarn yet. It is packed and shipped and the spinners, the weavers, they buy it cheaply and make it into yarn and clothing or blankets or any number of things. They send it off, still making hardly a profit. It's shipped off again to be sold. Every time it is shipped or transported, a tax is paid, a port tax, a hundred other taxes. All that tax goes to a noble. A woolen shirt is sold for 2 gold. The sheep farmer saw less than 3 coppers of that and the weavers and spinners less than 5 coppers. The rest goes to the nobility who had NO hand in the process at all. So yes, they get fat off another's hard work. I didn't say it was mine. But when I put in at the fingers, I pay triple for the wool. In part for them to keep quiet, but more so that they get something for their work besides a pittance. When I put in at Huron, I pay a weaver directly to fit me and make my clothing, paying triple for craftsmanship and not walking into a shop in one of the main ports and buying a ready made woolen tunic that has been taxed. And you know what? Paying the farmer and the weaver more? It still costs less to buy it that way. The same with everything. I put in at Middlehold to have my sword made by one of the smiths, all of my men. My arrows, my bows, all hand made by Fenmarchmen themselves. They were paid directly for their works though, I did not put in at Asterly and buy from the Fenmarch merchant, who charges a ridiculous amount for the goods, an amount the makers never see. Men like your father? They are a boil on the ass of this world, making money off honest mens labor and acting as though they are better men for doing so. So no, Marion. I will not feel at all bad when I take you down south and pass you off to the slave traders. I won't even haggle for you, I will take their first offer and be glad to be rid of you.\"\n\nMarion went quiet then and he could hear her soft sniffling. His stomach had soured and he was no longer hungry, so he got up and pulled his coat off, then his boots as he sat on the edge of the bed.\n\n\"You will be quiet and be still and not disturb my sleep tonight or I will put you in a cage and forget about you,\" he said coldly before laying down with his back to her.\n\nShe said nothing, not moving at all. He could still hear tiny sniffles, but they did not keep him from sleeping.\n\n\"Rob!\" Little John roared, banging on his door in the morning.\n\n\"Hold!\" Robin growled, sitting up. \n\nHe glanced back and Marion was still there, her red rimmed eyes watching him with an ethereal sadness.\n\nHe got up, stomping his boots on before opening the door. \"What?\"\n\n\"Port in sight, sir, do I put in?\" Little John asked, looking back at Marion on the bed.\n\n\"Yeah, I will be up to put us in. John, go ask Will about a length of chain and two locks.\"\n\n\"How long?\"\n\n\"Longer than me. Longer than you, but not my much. Be quick.\"\n\nJohn left and Robin sat down to eat, looking Marion over. \n\n\"If I left you in here, could you behave? Not make a fuss? Or does it need to be the cage?\"\n\n\"Tied to the bed this way?\"\n\n\"I would chain you to that,\" he said, motioning to the post.\n\n\"I need the privy pot,\" she said, blushing.\n\n\"That is no answer.\"\n\n\"I would. Please? I need it... now.\"\n\nRobin chuckled and untied her. She was being completely honest, but that didn't mean she wouldn't try and throw it at him once she was done. \"Behave and I won't lock you in the cage when I put into port. You will have the comfort of my quarters and food, along with the chalks and papers. Do something stupid and you go to the cage and never come out until I sell you.\"\n\nShe said nothing at all as she quickly got up. He waited by the door, but never felt a change in her saying she was going to act out. She stayed small and quiet, pensive. She was coming up with some sort of plan, he was sure.\n\nShe said nothing at all when he put a chain around her neck and secured it, locking the other end to the post. She could move all through his cabin, but came short of the door. That was what he had wanted.\n\n\"Stay quiet,\" he told her as he left. \n\nHe wondered what her plan was.\n\nThis port was much easier than the last, Lord Dreyfuss was incredibly eager to marry his daughter off to become queen and his daughter was just as eager. She was a smiling, grasping, handsy thing with teeth like a horse. Robin had a hard time pretending he found her attractive enough to meet his standards, but he had known going in that the ladies were not going to be prizes. \n\nHe thought of Marion then. She was a prize, in her own way, even if she was completely wild and uncouth. She was at least lovely to look at. So long as you didn't look too closely at the stains and tangled hair. \n\nHis second day into the con, he found himself eager to get back to the ship and check on her. One of his men would have come and told him if something was wrong, but that wasn't really it. He was just anxious to check on her. \n\nWhen he finally had the new noble girl on his ship and they were undocking, he hurried to check on her. She was standing at the window, watching the dock slip further away.\n\n\"Oh! Husband, who is this? You have a daughter?\" Fawn giggled, sliding her hand along his chest as she caught up.\n\nMarion turned and looked at him, looked at her. \n\n\"Why is she chained like that?\" Fawn asked.\n\n\"Allan!\" Robin called, taking Fawns arm gently. \"Show Fawn to her quarters.\"\n\nAllan led Fawn away, down below to the cages and Robin shut the door, still looking Marion over. Her hair was combed and neat, all of her was 'neat'. A word he did not associate with her at all. \n\n\"The next port is less than half a day's journey,\" he said lightly. \"So I will ask you again. Will you behave here, or do you need to be moved?\"\n\n\"I have behaved and I will continue to do so,\" she said softly, looking up at him with sad eyes.\n\n\"You are planning something, Marion,\" he admonished.\n\n\"I will be good. I will continue to be good, I would only ask a single thing of you.\"\n\n\"Your freedom?\" he asked with a smirk.\n\n\"All of the girls that you take. Hold me ransom, keep me in check for their silence if you must, but release them. Put in at an island and let them go. Do not sell them as slaves, that is cruel and they have done nothing. Let them live free and happy lives, do not punish them for mistakes or misdeeds you perceive in others.\"\n\nRobin was a little surprised. \"And you offer yourself to hold for their behavior? If one tried to escape or to tell, or get home...\"\n\n\"I would,\" she said quickly. \"I know what awaits us as slaves. Death would be a better alternative, giving them a chance for more.\"\n\nRobin smiled, moving to sit in his chair. He looked over the drawings on the table, most of the sea, some of the dock. \"I will think on it,\" he said finally, then left her there. When he put into the next port, he sent Allan on a special mission as he left.\n\nThis port was different than others, less rich, but he refused to skip it, honing his skills. The tall and willowy Beth was homely, but she was quiet and polite and sweet. That night he dreamed of Marion with Fawn's insistent hands and Beth's manners. It made him anxious all over again to check on her.\n\nHe realized then that checking on her wasn't the right word. He wanted to see her. He thought about what she had asked of him. It wouldn't be hard for him to turn the girls all loose on whatever island he and his men claimed. Let them live their own lives, maybe even choosing one of his men to live out their days with. \n\nIf she managed to hold her temper long enough to keep her word.\n\nBeth didn't follow him into the captain's quarters when he left her standing on deck, she stayed where she was as Robin hurried away as soon as they were shoving off.\n\nMarion turned to him, looking pale and sad.\n\n\"Did you get the paints?\" he asked, looking around.\n\n\"Yes, they are there,\" she answered, gesturing to an unopened box.\n\n\"You did not like them?\"\n\n\"I could not paint... what you are doing to these girls... giving them hope and making them think they might find love...\"\n\n\"Love,\" he sneered. \"They don't care about love! They care about becoming queens! About how rich they will be!\"\n\n\"Not Beth.\"\n\n\"You know Beth?\" he asked curiously.\n\n\"Of course. She wanted a man who could love her, she is a romantic. She reads love stories. Her father might care about wealth, but Beth only cared about your lie about wanting a woman you could love, I promise you that.\"\n\n\"It doesn't matter. She is already below by now and talking to Fawn. She will know the truth of it. We have a day before the next port. Do you want to go above?\"\n\n\"Why should I get to when they cannot?\"\n\n\"You care so much about their fates?\"\n\n\"I do. Let them have some freedom above, I will stay here.\"\n\n\"You are a curious creature, Marion. Sit down. Paint something for me.\"\n\n\"Is it a command? Would you consider letting at least Fawn up for a while? I have heard her crying some nights...\"\n\n\"It is not a command. Once we are out to sea, I will bring them both up, if they can behave. It will be on them on whether I allow it again. Fair enough?\"\n\nShe nodded slightly. \n\n\"Sit down and paint something for me.\"\n\n\"I have no... inspiration or will to paint.\"\n\nHe could see it then, after she said it. Her light had gone out. Not forever, he had not stamped it out completely, but for now... she was only sad and heartbroken.\n\nFor other girls.\n\nHe had not expected that.\n\nHe got up and stepped out, speaking quietly to Dale before going and taking over for Little John. He didn't want to be below with Marion just now, she was making his heart ache. When Dale brought Fawn and Beth on deck, he hoped Marion was watching. Noticing. Even if they only sat in the sun and Beth cried in Fawns arms. \n\nHe went back in that night, watching her warily. She was curled up on the bed and she sat up when he came in, quickly hopping off of the bed. \n\n\"If you are tired, lay down,\" he said softly, shrugging off his coat.\n\n\"I will sit over here,\" she said quickly, sitting as far as she could across the room.\n\n\"As much as I think you are sincere about all you have said, I still don't trust you to be awake while I sleep. Lay back down.\"\n\n\"Are you going to tie me again?\"\n\n\"Yes. Do you blame me? Come on.\"\n\nShe moved to him, her shoulders dropping. \n\n\"Does it bother you to be tied?\" he asked, securing her wrists quickly.\n\n\"I don't like not being able to move... but more so I do not like being so vulnerable.\"\n\n\"I see. Would it help to know that I do not rape women?\"\n\n\"Words spoken from a pirate who steals women and money and probably does worse.\"\n\n\"Hah. Quiet now little one,\" he said softly, laying down with his back to her. He lay there thinking though, about what it might feel like to hold her. Touch her. Make her sigh for him. He grinned then. She was not the type to sigh, no, not her. When the day came that she were willing, she would be a hellion even then. \n\nHe turned over, facing her and he could see the shine of the moonlight on her open eyes as she stared at the ceiling. He eased closer and set a hand on her ribs, making her stiffen. He slid his hand across her, around her, pulling her in close to him. She quickly rolled, turning her back to him, but he didn't mind that so much as he held her against his chest. \n\nHe slept better than he had in weeks.\n\nWhen Little John pounded on the door, yelling that port was in view, he stirred, then blinked. How late had he slept? She stirred as well, sighing as she hid her face under the blankets. She went stiff when he got up, pulling his arm from under her head and letting her go, then stayed very still as he got dressed, still facing the wall. \n\n\"You slept well,\" he said jovially.\n\n\"Why would you assume that?\" she snapped, her temper showing in her voice.\n\n\"I would have woke if you had. I am a light sleeper. I would say you slept as well as I did.\"\n\nShe said nothing and he grinned as he stepped out. He spoke to Little John quietly. \"Speed this up if we can. See if you can get the ransom sooner. I want to start moving as quickly as we are able.\"\n\n\"You feel like something is off?\"\n\n\"No, I think we are being too careful and we don't need to be. Let's get through all of this more quickly.\"\n\n\"Do you want me to keep the girl in your cabin or put her with the others?\"\n\n\"Leave her where she is for now. Are you still afraid of her?\"\n\n\"Alan says she's a witch, bewitching you and others, making you act amiss.\"",
        "\"Do you think that's so, John? Am I acting like I am under her compulsion?\"\n\n\"You are acting like maybe you are having second thoughts. Getting a little reckless. Thinking more on her than what you should be.\"\n\n\"Don't worry about me, John. I will do my part. Just leave the girl alone, let me worry about her.\"\n\nRobin realized as he sat in another fine receiving parlor, that he WAS focused on her too much. He was thinking about her almost constantly as the young Hesther sat draped over his arm and smiling up at him. Twice now, her hand had slid up his leg dangerously close to impropriety as he caught it barely in time. \n\nThe third time, he turned to her with a scowl and hissed, \"Are you really so shameless a creature? You think that is all men want? You think that is how you will win me? Touch me that way again and you will lose your hand.\"\n\nHesther had gone red and moved away quickly, opting to sit alone in a chair.\n\nRobin wasn't a prude, not by a long shot, but he knew how nobles were supposed to behave and it wasn't like that. The girl was completely shameless.\n\nIt did, however, make him think of Marion and how warm she had been in his arms. He imagined what her hands would feel like gliding over his skin, how her lips would taste...\n\nHe had to leave early and find companionship for the night in one of the lesser parts of the city. He closed his eyes as the girl used her mouth on him, imagining Marion.\n\nWhat he came to discover over the next three weeks, was that nobles were not at all as prude and upright as people were led to believe. Especially the women. Fawn and Hesther were not alone in the way their hands roamed and groped. After the fourth such occasion, Robin let it happen. He was obviously wrong on this point and it would seem odd if he didn't allow his soon to be 'wife' to show her appreciation of him with her mouth. They all seemed to think that was their way around staying 'chaste'. Using their mouths and hands rather than what was between their legs. \n\nIt amused him that they seemed twice as appalled when they discovered their true fates.\n\nHe didn't tell Marion, he was sure she already knew how most the noble women were. She stayed quiet and stoic, but her anger was always barely suppressed. She wanted a better life for all of the girls, but it was taxing on her to be so nice to him and he could see it.\n\nIt was even more hard on her on the nights where she had to sleep next to him, his arms around her. He made the feeble excuse that it was to make sure she didn't try to do anything while he slept, but they both knew that it was because he wanted to. They also both knew that she slept as well as he did on those nights. \n\nHe came in one morning, grinning with yet another girl on his arm as he looked Marion over. They almost all said the same thing, asking if Marion was his daughter, those who did not know her. \n\nThis one was one of the latter. \"Mare?\" she asked in surprise. \"What are YOU doing here?\" she asked almost angrily.\n\n\"Hello Daphne,\" Marion said coldly. \"Can't say I am sorry to see you here.\"\n\n\"What is that supposed to mean?\" Daphne snapped, her chin going high.\n\n\"Old friends, I see,\" Robin said, moving to pour himself a drink and watch. \n\n\"She is no friend of mine!\" Daphne practically hissed. \"My sweet Richard, her family and mine are bitter rivals. Her sister took my love from me not long ago. Now I know why! I was destined for greater things, but Marion did so rub my nose in it when her whore of a sister...\"\n\n\"That is enough of that,\" Robin said quickly. \"I met Scarlett and her fiance. I doubt it had much to do with her being a whore and more to do with her not being a troll. I wouldn't have looked twice at you either if Scarlett was my other choice.\"\n\n\"Richard! You don't mean it!\"\n\n\"Alan! Show Daphne to her quarters. When the others get deck time, she does not, am I understood?\"\n\n\"Yes Robin,\" Alan said quickly, leading the indignant girl away.\n\n\"For once I wish to see her face when she is told,\" Marion said angrily, her cheeks pink.\n\n\"Would you like to tell her yourself?\" Robin asked curiously.\n\n\"No,\" Marion answered softly, lowering her face in shame. \n\n\"Would you still offer the same deal to save them all, even her?\"\n\n\"Yes.\"\n\n\"Good to know. What else would you be willing to do to save those girls from their fates?\" he asked, tossing a drink back.\n\nHer anger gave way to fear as she looked at him.\n\nHe smirked and looked down at his glass. \"For example... would you retire to an island with a pirate and keep him company? Keep his bed warm?\"\n\n\"If that is what is required to keep them from being sold as slaves...\" she answered, her cheeks flaming with shame and... something else. Pride, perhaps? \n\n\"What if I required that they stay on the same island as well. With my crew.\"\n\n\"Will they be slaves to them?\"\n\n\"They will be free, but I am sure my men will bring them around to their way of seeing things if you know what I mean. They can never leave the island. You could never leave the island.\"\n\n\"You speak as though it is already a real place and not just some dream.\"\n\n\"Oh it is. The first thing I did when we hit the second port was send four of my men off with that first payment to buy the island I had in mind and start preparing it. I know where it is, how large it is, exactly what is needed when we get there. I have been sending shipments off at every port, supplying the island, making it ready. So your friends, these girls, they will have a choice. They can go their own way on the island, build their own houses by themselves, or find a way with my crew. They seem industrious girls, most of them.\"\n\n\"That choice is hardly better than...\"\n\n\"Would you rather I drop them on a barren island with no one, alone? Make them find a way to fend for themselves and survive on their own? Or I could sell them as I planned. You want to find fault in my plans for them, then I will go with what is easiest for me.\"\n\n\"And for them to be... free. To be able to choose and live their lives without being sold into slavery... I have to what? Agree to be your companion?\"\n\n\"The more common term is wife.\"\n\nShe froze, staring at him in horror. \n\n\"Is that too onerous for you?\"\n\nShe spun away, pressing herself to the far wall as she shook her head. \"How much time do I have to consider this... proposal?\" she asked, tears choking her voice.\n\n\"There are three more ports I intend to stop at. I am skipping the smaller ones now, I see no reason to gather up small change and risk exposure. Going after the last three big ones and taking off forever. So you have three ports. A little over a week. Is it a hard choice, Marion?\"\n\nShe glowered at him and he gave her a grin. He couldn't help but be amused by her. \n\n\"Will you miss me?\" he asked, pausing at the door.\n\nHad he not been watching so closely, he would have missed the small, startled blush at being caught out before the furious shake of her head. \"Why would I?\"\n\nHe laughed as he left, heading into the city. His mind was so out of the game he said the wrong name twice, but it didn't seem to matter. The nobles only heard what they wanted to hear. \n\nBy the time he ducked into his cabin to see Marion again, she looked very different. She had been trying hard to keep herself tidy and ladylike, trying to prove she could behave for the sake of the other girls freedom. Now she looked disheveled, her feet bare, her hair unbrushed, pale. She looked less wild though, and more sick.\n\n\"Marion?\" he asked, ignoring the woman who had followed him in. \n\n\"Richard?\" the woman asked shrilly. \"What is that?\"\n\n\"John! Get her out of here!\" he yelled, not caring that they were still in earshot of the port. He went to Marion and turned her face up to his. \"Marion? Are you ill?\"\n\n\"Must I really marry you for their freedom?\" she asked softly, her lip trembling slightly.\n\nHe felt as if he had been dealt a blow as he blanched back. \"You have made yourself sick over... over fearing having to marry me? I am not a bad person, Marion, you act as though I have...\"\n\n\"You are! You are a monster! Taking innocent girls from their families! Selling them as slaves, threatening rape if they do not comply! You are a horrible horrible person! We do not deserve to be treated this way, yet you think you have some right! Some justification to steal and cheat and lie! You are no better than those you take from! You are an opportunist and a liar! A thief! A pirate! \n\nI will do what I must to see the others safe, but I hate you and I will always hate you!\"\n\nRobin stood angrily. \"Is that so? Perhaps you are lying to yourself, Marion. Anyway, I think you need a bit of a lesson. Dale! Dale, get Alan. Take Marion below and lock her in the cages.\"\n\n\"Her?\" Dale asked, looking terrified.\n\n\"Her,\" Robin demanded, then growled. \"Nevermind, I will do it myself,\" he said angrily, unlocking her chain from the post and dragging her along behind him as he took her to the cages.\n\nThe other women were there, pleading and begging, making promises. The newest, Margaret, was the loudest and shrillest.\n\nRobin ignored them as he shoved Marion into the smallest cage, locking her chain to the bar so she could hardly move. \"Perhaps now you will understand how much I have afforded you, how generous I have been with you! You will see how badly off you could have been this whole time! You can bide your time down here with the others while we sail to the southern isles to the slave ports!\"\n\nHe turned and left, his face red with anger. Spiteful, angry little creature! Acting as though marrying him would be a fate worse than slavery for ALL of them! He had been willing to give her everything! Work with her, allow her to have things her way! \n\nShe had thrown it back in his face. \n\nHe paced in his cabin. It wasn't as if she truly mattered, she was a passing distraction. He ordered them to put into the next port, though it wasn't one he had planned on stopping at. He gave the men leave to spend coin on women and wine over the next three days, even having one of the women come back to his ship.\n\nHe hated that he had to close his eyes and imagine Marion just to get into the mood. He sent the woman away, never having used her. Instead he raged more at the girl in the cage belowdecks, telling John and Tucker and Will all the reasons he had for just sending her off as a slave.\n\nIt was Tucker who finally spoke sense. \n\n\"Why not just have her. Get her out of your system. Once you have a taste of her, you won't think on her so much and you can move on.\"\n\nRobin stared at Tucker, then at John and Will who were also having a drink with him in his cabin.\n\n\"Sounds reasonable to me,\" John said, shrugging. \n\n\"Never seen you so torn up over a woman, I am telling you, she is a witch. She has you bewitched. You get betwixt her legs and the spell will be broken,\" Will said, slurring drunkenly. \n\n\"Dunno about all that,\" Tucker said, shaking his head. \"But I know any time I am keen on a girl, I lose all interest as soon as I have had her in my bed. I am ready for the next adventure.\"\n\n\"There's sense in that,\" John agreed. \"It's the chase that is drivin' you. Once that's done, she won't be in your head so much.\"\n\n\"Speakin' of head,\" Will laughed. \"I think I will go below. That Hesther is good at suckin' cock even through them bars if you bring her an apple or orange. Few others will to, but Hesther is best at it.\"\n\n\"The tall blonde keeps askin' me, but I'm afraid she'll try and grip my bits,\" John said warily.\n\n\"Ahh, nah. They are all hopin' we take enough liking to them we won't sell'm. Let her. If it's that Rhianna, she'll bend over for you too, let you fuck her in the ass.\"\n\nThe men laughed and joked, talking about which women were best at sucking and fucking as they left. Robin sat back and thought about Marion and if he should try it. Take her and get her out of his system so he could move on.\n\nHe shook his head. He didn't want to move on. He wanted to hold her at night, feel her hands on him... feel her mouth on his, taste her. \n\nUngrateful little creature. \n\nHe fell into bed, leaving it for a time when he was more sober. \n\nThey left that port the next morning, Robin still surly as they made their way to the next mark. They were almost done. One more after this one and they were already so rich they would never want for anything. \n\nHe wanted to see Marion, but he made himself stay away. She would suffer through these last days, just so she could see how well he had been treating her. How good she had had it compared to the others. \n\nIt occurred to him then that that might not be the best tack with her. She wanted them to have better conditions, to have better lives, she didn't want them to suffer. Making her suffer alongside them would only make her realize how badly they had had it and she would be more upset, think him even more of a monster. \n\nHe sighed dismally. \n\nWinning her wasn't going to be done by punishing her or being nice to her. It was going to be done by being nice to the rest of the women. \n\nHe spoke to John as they put into port, explaining what he wanted done, then went below and moved Marion himself. He chained her back into his cabin and ignored her as she glared at him venomously. \n\nHe left her alone and went into the city, his mind on what he was going to have to do to win her. \n\nGetting away with the girl again was easy enough that it was just annoying now and Robin had no patience left for this con. He wanted to move on already, win Marion over. He knew he sounded annoyed while saying the vows and turned distastefully away as the girl had moved to try and kiss him. \n\nWhy couldn't Marion be so eager to kiss him?\n\nRobin stayed on deck as they left the dock, pretending to listen to John as the girl stood waiting for him, watching him with eager eyes. \n\n\"Take her below,\" Robin interrupted as soon as they were far enough from the dock that he felt safe. He turned when John took hold of the girl and went to his cabin.\n\nHe grinned, he couldn't help it. Marion was there and his cabin was covered in paint. 'Monster', 'Thief', 'Liar', 'Pirate'. Crude and rude images everywhere. He laughed as he looked around. \"You have been busy,\" he said lightly. \"One final stop, then on to the island. I have been thinking on a name. My ship is The Heart of Sherwood, what do you think of simply, 'Sherwood'?\"\n\n\"I think you should call it 'Hell'.\"\n\n\"I can see you are in a wonderful humor. Why don't we go below?\"\n\n\"You think you can scare me?\" she demanded as he unlocked her chain from the post.\n\nHe said nothing as he pulled her out and led her below. \n\nShe stared. \n\nThe cages were gone, in their place were beds. Screens for privacy, a bath. Tables to sit at with bowls of fruit and breads and cheeses. The women all had chains around a single ankle, but they could move around and do as they pleased. There were even books and sewing and other small things for them.\n\n\"Better?\" he asked, turning to look down at Marion. \n\n\"It's a start,\" she agreed with a nod.\n\n\"I also intend to make them their own hall. They will not have to rely on the kindness of my crew, they will have a place to live and will be provided for. Or they could seek companionship. Their choice.\"\n\nMarion gave another nod. \"You won't... sell them into slavery?\"\n\n\"No. They will all be well cared for.\"\n\n\"And in return, I must...\"\n\n\"Regardless of what your answer is. I will see them taken care of... even if you are among their number and not... my wife. Come,\" he said softly, leading her back up to his cabin.\n\nShe said nothing as he relocked the chain.\n\nJohn came in soon after and they sat at the table, John opening a ledger with names and lists. Something they always did before the next port.\n\n\"This port you will be finding Guy Gisborne. He has a daughter about to turn nineteen. He is incredibly wealthy, enough to rival Nottingham and Manderlay. This is one third of his wealth and this is what we should ask for ransom. He has a new wife, very new, so he should be eager to be rid of his daughter.\"\n\n\"You are wrong,\" Marion said, sitting at the table.\n\n\"What?\" Robin asked her with a smirk. She had never joined them in planning before, thought she had always listened.\n\n\"Ser Guy, he does not want rid of his daughter at all. He is waiting for the perfect match. Also, he will not be nearly as easy to fool as the rest, he is suspicious and cynical in everything.\"\n\n\"You speak as though you know him well.\"\n\n\"He spent three months in my home, Merise and I know each other well.\"\n\n\"What was he doing in your home?\"\n\n\"He was trying to talk my father into letting him marry Scarlett and my father marry Merise. After the first two weeks, he changed it and asked to marry me when I came of age instead.\"\n\n\"And what did your father say to that?\"\n\n\"Guy is a bitter, older man and my father would not subject Scarlett or I either one to that. He said no. Guy stayed and tried to persuade him. Tried to persuade me. Had Merise try and persuade me. He finally left when I filled all of his trunks with manure from the stables. He will not be easily deceived though, he is distrustful and clever. He will see through your ruse easily. He lives near the capitol, he knew Ser Richard.\"\n\n\"If you knew him, you'd know I look just like him,\" Robin said, smiling.\n\n\"Perhaps a bit, but even my father commented on how young you looked. How you had not seemed to age at all, and he had only seen Ser Richard from a distance. Guy is not my father. He knows the court well and he knew Ser Richard well.\"\n\n\"I am good at being able to feel out danger, Marion,\" Robin said with another smile.\n\n\"You were. You have lost your touch completely,\" she said with a shrug.\n\n\"What makes you say that?\" he asked, his voice sounding concerned.\n\n\"You stopped noticing things. With the others, it did not matter, but with you, you should have noticed things you did not.\"\n\n\"For example?\"\n\n\"When a fork was missing from my dinner plate. Or a knife. I have four of each now, secreted throughout the room. You have not noticed a single time when you came back and the lock was on a different link that it had been. Even when it was three off. You did not notice the new paints or pencils or even wonder where they might have come from. You did not notice the new hair comb with the silver spikes, though I did not have it until after three ports back. You have questioned or noticed nothing that you should have, which means you no longer have your touch.\"\n\n\"My touch deals in danger to myself or my men...\" Robin said, looking around warily. \"Where DID that comb come from? And that easel! What have you been up to, Marion?\" he asked, his eyes sparkling.\n\n\"I am small enough to fit through those small windows and your men never check on me when you are gone. I can do as I please. And I have. My father will have gotten the courier by now, as well as the capitol. Your name, John, Will, Tucker... everyone really. I have heard the name of every single man on this ship ten times over again. They are waiting for you, surrounding you.\"\n\n\"You're bluffing!\" Robin said, \"John, turn us, now! Take us south!\"\n\n\"It's too late,\" she shrugged. \"They have you cut off my now, you took your time, sailing right up and pinning yourself neatly into this trap. You think I would have told you if it wasn't already too late?\" she asked, picking up an apple and taking a bite. \n\nRobin threw back his head and laughed, then got up. He took hold of her face with both hands and leaned in, kissing her forcefully. She yanked away and glared up at him, but he was already unchaining her from the post. He pulled her above and went to the wheel, John close behind him.\n\n\"How far?\" he asked John, taking the wheel from Tucker, who was grinning at him.\n\n\"Four, maybe five days?\" John answered.\n\n\"Look there, Marion, do you see that?\"",
        "\"Yes?\" she answered, looking at the distant port off to the west.\n\n\"Duranks,\" he said lightly, cutting his eyes at her. \n\nShe went pale, her little hands going into fists. \n\n\"You think John didn't notice his keys missing? And you think you weren't easy to follow around? You thought yourself so clever, but I wondered why you went back on board after getting free. Then I realized, you wanted to watch as I realized you had tricked me. That you had been my undoing. So I played along. Your couriers never left by the way. No one knows anything. You were right about Guy, I got the same intel. Too suspicious, so I decided what we had was more than enough. It was clever of you... but not quite enough.\"\n\n\"So this was all a ruse. A game. Even you trying to shake me by asking me to...\"\n\n\"Oh no, that was real. I am no longer asking though. We will put in at Demarkay where a woman doesn't have to consent to be made a wife and I will marry you. Then we will go on from there to Sherwood. I was serious about the other women too, I will give them a home. But they can never leave Sherwood. Neither can you.\"\n\n\"You can't force me to be a wife to you!\"\n\n\"Watch me,\" he answered with another smirk. \n\n\"Does it matter that I hate you?\"\n\n\"You don't.\"\n\n\"I do!\"\n\n\"Who is the liar now, Marion? What is the real reason you came back to the ship? Hoping I would catch you out? Hoping that I would see through your plan and slip it, take you away with me? You enjoy it here on my ship with me, admit it.\"\n\n\"Take this chain off of me!\" she demanded.\n\nHe chuckled and undid the chain from her neck, then watched her as she fled to the mast and up to the crows nest. It was going to be hell getting her down, but he didn't care. He grinned at Little John who rolled his eyes and shook his head.\n\n\"So much trouble for one little witch.\"\n\n\"Admit it, it was worth it to see the look on her face!\"\n\n\"That was priceless, but I am less enamoured of her than you are. How do you intend to get her down?\"\n\n\"She'll get hungry at some point,\" Robin answered happily, going back to his cabin. \n\nShe didn't come down for two whole days and when she did, she tried to slip in and grab food, but he was waiting on her. \n\n\"Hello, love,\" he said with a smile, shutting the door from the other side.\n\n\"You just left!\" she accused.\n\n\"Did I? Are you sure? Hard to size a man up while looking down, isn't it? Demarkay is only hours away. I am guessing you knew that and gave yourself over to be 'caught'. You knew you would be. Go ahead and get dressed,\" he said, locking the door from the inside and putting the key in his pocket. \n\n\"You are an imbecile if you think...\"\n\n\"Or I can do it for you,\" he shrugged. \"The cream dress, the lovely silk. And brush your hair.\"\n\n\"No!\" \n\n\"As you please,\" he said congenially, moving to her. \n\nShe danced back quickly. \"You have to leave! Step out so I can dress!\"\n\n\"No. You will just ruin the dress I chose.\"\n\n\"I won't! I will get dressed.\"\n\n\"I know you are planning something. I am not leaving, Marion.\"\n\n\"Then you must turn away!\"\n\n\"I've taken all of your hidden 'weapons', Marion. Even the set of needles you had secreted away in your trunk lining. I even took all of the boning out of the corsets you never wear. Get yourself dressed, little love, then sit and eat. If you won't brush your hair, I will.\"\n\n\"Don't you touch me! You just stay over there! Turn away or I won't change!\"\n\n\"Change now, or I will do it for you.\"\n\n\"You can't watch!\"\n\n\"I know you are up to something Marion, so yes, I will watch.\"\n\n\"Fine! Fine, I swear I will only get dressed. On my honor!\"\n\nRobin smirked at her, watching the panic in her face at the thought of him seeing her in nothing. He gave her a nod, then turned slightly. He could still see her in his periphery, but he watched the wall.\n\n\"All the way around!\" she demanded.\n\n\"Now, Marion, or I will do it for you,\" he said sternly.\n\nShe yanked the cream dress out and changed quickly, flying into it as fast as she could move, anxious that he would turn around before she was done.\n\n\"Now your shoes.\"\n\n\"I... I don't have them anymore.\"\n\n\"What? Where are your shoes?\"\n\n\"I lost one climbing up and I threw the other one down after it. I think they were taken below to the other girls or perhaps swept over the side.\"\n\nRobin sighed and threw up his hands. \"Fine. Don't show your feet.\"\n\n\"To whom would I show them?\"\n\n\"Anyone,\" he snapped irritably. \"Sit down so I can do your hair.\"\n\n\"I can...\"\n\n\"Now. Eat while I fix it.\"\n\nShe threw a fit as he brushed her hair and it brought his good humor back as he grinned down at her. Why did he find her temper so amusing?\n\nHe managed to finish and gather her hair, but that was all. She twisted it up, complaining audibly the entire time about ham handed men yanking hair out of her head.\n\nWhen they docked, he brought the officiant aboard to perform the ceremony and she had to be bound and gagged to get her through it. She still screamed and squirmed, jerking and pulling herself around in Little Johns massive grip. He looked pale as he held her at arms length, half terrified of her. The officiant was a little wide eyed as he watched her as well. He looked at Robin like he thought he must be mad for wanting to marry her. \n\nBy the time the officiant was led off the ship and the last minute supplies were brought on board, she was a mess again. Her hair disheveled from fighting and trying to escape her binds, her dress ripped in several places along the seams. She was heaving round her gag, biting into it so hard Robin was surprised she hadn't chewed through it yet. \n\nHer glare made him grin as she snarled around the gag.\n\n\"Wife,\" he said happily, stroking her cheek above the bindings. \n\nShe screamed at him in fury and jerked away.\n\n\"You sure about this?\" Will asked dubiously, watching the feral creature in the ruined dress try and stand back up with bound hands and feet. \n\n\"Never been more sure of anything,\" Robin answered, going to her and pulling her up off the deck, then throwing her over his shoulder. He grinned at his men as he hauled her back to his cabin, kicking and screaming. \n\nHe threw her down, landing her on her back on the bed, then began untying her. He left the gag for last, but as soon as her hands were free she took care of that quickly.\n\n\"If you think for a second that I am going to...\" she began, raging at him.\n\nHe didn't wait for her to finish, dropping her to the bed and half tackling her, kissing her.\n\nShe was too startled to move for a moment, but as soon as she regained her senses, he took hold of her jaw firmly so she couldn't bite him. She pushed on his shoulders, but her hands kept going still as he kissed her passionately, forgetting to fight. When he pulled back, breathless, looking down at her in adoration, she stared back up at him in surprise. He touched her cheek gently as he breathed raggedly and that made her snap into focus.\n\n\"Let me up! I don't...\"\n\n\"Hush, Marion. My little bride. No more denial. Look at me my love, no more denying me. I know you care for me.\"\n\n\"You're a fool!\" she said breathlessly, looking away from him and blushing. \"I feel nothing for you but contempt!\"\n\nHe chuckled as he took hold of the dress and pulled it off of her, ripping it the rest of the way at the seams. \n\n\"Don't! Don't, please!\" she cried desperately, her hands clutching at the remnants of the dress.\n\n\"Shhh,\" he breathed, moving down and kissing her shoulders, taking her wrists in his hands and pinning her down. He kissed a trail up her neck and along her jaw, then back down to her other shoulder. She shivered, her breathing uneven as she kept going still after squirming for a moment. He smiled as he moved up, looking down at her. He kissed her again and she didn't fight or struggle this time, going still under him as she let him kiss her. \n\nHe let go of one of her hands and reached down, pulling her shift up and sliding his hand up her hip.\n\n\"No!\" she wailed, training away from him, panting.\n\n\"Hush my love,\" he rumbled, kissing along her jaw. \"My wife,\" he whispered. He slid his hand higher, to her hip and caught the edge of her underwear, starting to slide them off of her.\n\n\"Please?\" she breathed, her fingers clutching his shirt.\n\n\"Don't be afraid, I am going to take care of everything. Lay back and enjoy it,\" he whispered softly, easing them off of her as he stood up. He pulled off his own clothes and she scooted across the bed, pulling her shift down over her knees and wiping her eyes with a trembling hand.\n\nShe didn't look away though, even when he shoved his pants down and kicked them off, his cock hard and full, jutting out at her. She looked at it in fear and shook her head.\n\n\"Easy my love,\" he said gently, moving across the bed to her. He pulled her shift off over her head and she struggled weakly. A token struggle before turning her back to him and sobbing into her arms. He pulled her out so she was stretched flat across the bed, then ran his hands over her bare back and bottom, trailing kisses along her shoulders and spine. He moved her hair and kissed her neck, turning her face to the side and kissing along her jaw as he trailed fingertips up and down her back. \n\n\"Robin, please,\" she whispered again, fear almost choking her.\n\n\"Shhh, little love, hush. I am not going to hurt you. You will enjoy it, you will see.\"\n\n\"I don't...\"\n\n\"Wife,\" he admonished teasingly. \"Let me show you.\"\n\nHe turned her over, easing her and moving slowly, kissing and touching, caressing, holding her hands as she tried to hide herself from him.\n\n\"Stop thinking about it,\" he whispered, his lips on hers. \"Close your eyes. Focus on how it feels. Stop thinking about me seeing you, I am your husband now and all of you is mine to see. I adore every inch, there isn't a single hair on your head that I would change, my love, you are perfect. Relax your body, surrender to me, trust me. Let me have control, just for now, you won't regret it. There you go, relax. Put your hands here on my arms, don't try and cover yourself. There, my beautiful girl, that is perfect. Close your eyes. Now focus on how it feels,\" he breathed, moving and dragging his lips over her neck. He gently bit and licked, kissing and sucking as he slowly worked his way down. She tensed when his mouth found her breast, but he kept going, pulling her pert little nipple into his mouth and sucking.\n\nShe sucked in a breath, her hands tightening on his arm as her nipple got hard in his mouth. He moved to the other, sucking and pulling and swirling until she was writhing under him. Her hands slid up to his shoulders, then his hair, her fingers sliding in and taking hold. \n\nHe smiled as he lifted enough to see her face, her eyes closed and her lips parted. She was definitely enjoying it. He kissed a trail down her belly and she went tense again as he parted her legs with a hand on each knee.\n\n\"Close your eyes and relax,\" he reassured her. \"Just focus on how it feels and nothing else.\"\n\n\"But I...\"\n\n\"No. Listen to me, my love. Surrender control to me for now.\"\n\n\"I'm not sure I...\"\n\n\"I am sure. Relax. Lay back and close your eyes, let me show you. Good girl. When I am done with you, you will never doubt me again,\" he promised, smiling just slightly. \n\nHe pushed her legs apart and moved lower, lifting both of her knees higher as he wrapped her legs around his shoulders. She was still tense as he kissed along her thighs and bit gently, teasing her as he got closer and closer. He could see her excitement, her glistening wetness and he had no patience left in him to wait any longer. He turned and tasted her, running his tongue along her slit as she sucked in a breath and her legs tightened around his head. He licked and lapped, sucking and burying his mouth as he pulled her hips closer.\n\nShe let out a cry that turned into a moan as her entire body went rigid, shoving her hips up closer to his face. He groaned as he pushed his tongue into her as far as he could, trying to taste all of her as he pulled her legs wider so he could go deeper. Her scream turned high pitched as he pressed his face into her, trying to go further. He finally came up for air and moved up to wrap his mouth around her bud. Her scream cut off and she let out a shocked squeak, then her breath hitched as her hips twitched up into his mouth. Her head fell back with a groan and her hands went back to his hair, holding him firmly in place as his mouth and tongue worked her bud. She started letting out a gasping yelp as her body went taut again and he knew she was getting close. He moved his head enough to ease his hand up and slide a finger into her. He wasn't even thinking about it when he pushed into her, not until he felt the snap of her innocence as he pushed through. The only sign she gave of pain was a slight jerk and a whimper, but she went right back to moaning and shoving her pussy into his face. \n\nHe eased his finger in and out, gently fucking her as he worked her clit, watching her rapturously as she surrendered to him. \n\nWhen she came with a scream, she gripped his hair and raised up off the bed as if she were afraid he might suddenly stop. He raised up, letting her hold on as she came, her legs wrapped around his head and holding on with her hands as her hips bucked against his face.\n\nHe had to hold her up as she started to go limp, easing her back down to the bed as she lay there boneless and gasping for air. He pulled her legs apart and they fell away as if she were passed out, though he could see she was awake. She was just blissed out. \n\nShe managed a smile as he kissed a trail up her belly, chest and neck to her mouth, grinning down at her. He kissed her again, caressing her breast and rolling her nipples as he pulled her legs up again. \n\n\"That was nice, yeah?\" he asked, nudging her chin with his nose.\n\n\"Mmm.\"\n\n\"This part will be nice too, but it may be uncomfortable at first. It won't last and it will be amazing after. Do you trust me?\"\n\n\"I... I think so,\" she answered, her eyes wide. She looked worried, but resolute. \n\nHe nodded and kissed her again, then moved up to press his cock to her slit. He rolled it over her clit again and again until her eyes were fluttering shut and she was squirming again, then eased into her slowly.\n\nHer eyes sprang open and her hands went to his chest, but she said nothing as he moved slowly, pushing into her tight cunt with a sigh.\n\n\"Marion,\" he breathed, trembling as his cock finally hit her wall. \"Are you ok? Does it hurt? Do you need me to stop?\"\n\n\"It... it hurts, but... there is something nice about it too. Don't stop.\"\n\nHe nodded, easing back and watching her face as he slowly moved in and out of her. He knew the exact moment the pain receded and she started truly enjoying it and it thrilled him to watch it. He moved faster, watching her squirm and moan, her hands gripping him, then she began crying out his name. \n\nIt tipped him over the edge he didn't know he was at as he let out a surprised yell, coming deep inside of her. \n\nShe wailed, feeling his cock throbbing inside her, his seed squirting into her, then came again around his cock. \n\nRobin grimaced as he yanked her close, her tight pussy locking down his cock almost painfully as he squirted a final time. She was letting out a keening, gasping pant as her body twitched uncontrollably under him. He held her, riding her out, then eased out of her as she finally came down. He kissed her softly, but she was unresponsive as she lay there with her eyes closed, just trying to breathe. \n\nHe rolled off of her, falling into the bed next to her and pulling her close to him. She moved just enough to turn her face into his chest, then promptly fell asleep curled into him. He smiled as he held her, knowing that she had surrendered herself. Not for the moment, but completely as she slept in his arms, trusting him. He kissed her forehead happily and fell asleep next to her. \n\nThey did not leave the cabin for days, not until Little John knocked and said they were there. The crew stared when they came out, looking Robin over as if they expected him to have injuries. He only laughed as he walked her to the ladder to help her climb down into the rowboat. The dock wasn't finished yet, but it was under construction, ships he had hired already there. Builders building, farmers out on the huge island already planting and tending animals.\n\nHe watched Marions face as they were rowed in to the massive island, her eyes as she took it all in. He could see her wheels turning, the plans she was making.\n\nNot plans of escape, not at all. Plans for their new home and what she was going to help her husband build it into. \n\nHis pride in her was near to bursting as they stepped their first steps onto their new home together.\n\n \n"
    ],
    "authorname": "gabthewriter",
    "tags": [
        "kidnapping",
        "noncon",
        "nonconsent",
        "pirate",
        "reluctance",
        "rewritten fairy tale",
        "robin hood",
        "thief"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/e-written-pirate-hood"
}