{
    "title": "Snow Shoveling",
    "pages": [
        "Eddie trudged through the snow with his shovel resting on his shoulder. The afternoon was already well along, and Eddie had his pocket stuffed full of bills. He didn't really mind the snow, especially not on week days. He'd never enjoyed high school as much as his parents had always said he should, and was glad it was almost over. College might be better, he had always told himself. The clicks had always labeled him as a misfit, and to Eddie that was what the felt like. \"You make one mistake as a freshman and it haunts you for your whole high school career,\" Eddie thought to himself as he slogged through the calf deep snow past Trina McPherson's house. He'd stop and ask to shovel their drive but he really didn't want to re-live the embarrassment any more than he had to.\n\nFour doors up was another potential customer. Suzan Askland. She was new at school, kind of cute even. More importantly, the driveway and sidewalk were covered with two days accumulation of snow. Yeah, Eddie didn't mind the snow, it meant a chance to put some more gas money into his pocket. He turned up the driveway, his heavy boots kicking a path through the foot deep snow still laying in the driveway. \n\nHe walked up the front step and rang the bell, waiting patiently. The door opened an he found himself staring at Suzan, surprisingly wearing a pair of tiny gray shorts and a tank top. Her trim figure looked damn sexy in the outfit, her orange sized breasts pushing out the front of the tank top and two bumps protruding even farther, attesting to the lack of bra. The chill of the outdoor air swirling through the now open door seemed to make her nipples stand out in the thin shirt even farther as he watched. He almost missed her ask a second time what he wanted.\n\nSuzan heard the bell and headed quickly down the stairs to answer the door. She wondered who in the world would be ringing their bell on a day like this. School had been out for two days and mom was still at work. She hardly expected any visitors. She was pretty new to this kind of weather. They never had snow like this in Florida, so she just assumed that when it did snow like this everything shut down. She was surprised to find that life went on, although school didn't. She had been told it was the busses that were the problem, but even kids living close to the school got out. She opened the door and recognized a boy she had seen from the neighborhood standing and holding a shovel on his shoulder. \n\n\"Yes?\" She asked quietly as he stood there practically transfixed. \"Yes, can I help you?\"\n\n\"Oh yeah, sorry, lost in thought. I wondered if you wanted me to shovel your drive?\"\n\n\"I don't know. Mom's not home. How much do you want to do it?\"\n\n\"This much snow? I'd say forty.\"\n\n\"I've never had anyone shovel snow for us. Is that a lot?\" She asked quietly.\n\n\"Lots less than a regular service would charge.\" He answered with a grin, \"But then my overhead is a lot lower.\"\n\n\"Well, mom isn't home right now. She'll be home soon. I guess you can go ahead and do it.\" She said with a little shrug.\n\n\"Okay. I'll get started!\" He said enthusiastically as he turned and walked off the covered porch. He dipped his shovel into the deep snow on the sidewalk and started tossing shovelful after shovelful into the front yard, quickly clearing the sidewalk as far as the driveway. She closed the door and headed back upstairs to her room.\n\n\"So who was that?\" the other young lady asked from where she was curled up on the bed reading a Cosmo magazine.\n\n\"Boy from the next block over. Wanted to shovel our driveway. Is that kind of thing normal around here?\" Suzan answered her as she plopped back on the edge of the bed. \"Kind of cute. I've seen him around school but can't remember his name.\"\n\n\"Yeah some of the boys will do it for extra money.\" Trina said as she slid off the bed and walked to the window, pushing the curtain open to look down at the driveway. She stood and watched a few minutes before letting the curtain close.\n\n\"You know him?\"\n\n\"Yeah. That's Eddie Westwood.\" Trina said with a very slight sigh.\n\n\"He's kind of cute.\"\n\n\"Yeah, if he wasn't such a loser he'd be a lot cuter.\" Trina said as she dropped back on the bed and picked up her magazine.\n\n\"Oh.\" Suzan answered knowingly. After thinking about it a few moments she asked, \"What makes him a loser?\"\n\n\"When he was a freshman he was brand new to the school. Some guys convinced him that I really had the hots for him and talked him into texting me a picture of his cock. Only thing was the number they gave him to text to wasn't mine and they spread the picture all over school.\"\n\n\"How does that make HIM the loser?\" Suzan asked curiously. \"Sounds to me like the guys that thought that up were the losers.\"\n\n\"Probably right, but they were the popular guys. Mostly jocks. I think Eddie kind of got a bum rap. Not to mention he did have a pretty good looking cock.\" She said with a crooked little smile. \n\n\"Oh, well, new kids always have a rough time. I'm just glad I've been accepted here as much as I have or I could be a female Eddie.\"\n\n\"You'd never be a female Eddie. You're not gullible enough to do something stupid like that.\"\n\n\"Dunno. If I really had a crush on someone I might send a picture of my boobs.\"\n\n\"Really? You think he really had a crush on me?\"\n\n\"Either that or he's really a perv. But he seems like a nice guy at school, so I don't think it's that.\"\n\n\"Guess I never thought about it like that.\" Trina said with a shrug, getting off the bed and walking to the window again. \"You think he really had a crush on me?\"\n\n\"Seems like it to me.\" Suzan answered with a giggle. \"I can't believe you didn't put that one together yourself.\"\n\nEddie shoved for well over an hour before he had the driveway cleared. Finally done he walked back to the front door and leaned the shovel against the front of the house. He rang the bell and waited expectantly, wondering if Suzan was going to come to the door in that outfit again.\n\n\"Hi Eddie. Mom's not home yet, wanna come in and wait?\" Suzan asked, after opening the door. \n\n\"Sure, is she supposed to be home soon?\" Eddie asked, partly hoping that it wasn't too soon as he looked at Suzan's thin shirt and slightly protruding nipples.\n\n\"Any time now. Come on in.\" She said, holding the door open for him. Eddie stepped inside and Suzan closed the door behind him as he pulled his jacket off. \"Here, I'll take that.\" She said taking his coat as he was pulling his heavy pack boots off. She walked to a chair in the dining room and hung it over the back. \"Come on. We can watch some TV while we wait if you want.\"\n\n\"Sure!\" Eddie agreed readily as he followed Suzan down the front hall toward the rear of the house. \n\n\"Aren't your legs cold out there?\" She asked, looking back at his jeans, wet up to the knees.\n\n\"Naw. Long underwear.\" He answered with a shrug as he followed her around the corner and into what he assumed was a family room. \"Oh damn.\" He said under his breath when he saw Trina sitting on the sofa watching the TV.\n\n\"So, you can sit here.\" Suzan said, walking around the end of the sofa and sitting down on the other end, patting the cushion between her and Trina.\n\n\"I don't have to stay. I can always stop back later.\" He said hesitantly standing by the sofa.\n\n\"Nonsense! Come on. You worked hard out there. Take a load off and relax a few minutes.\" Suzan insisted, patting the sofa again. \"Don't you wanna take that long sleeved shirt off? You have to be roasting in here.\"\n\n\"It is a bit warm in here.\" He agreed, still standing like a stone statue. \n\n\"You're not naked under it, are you?\" Suzan asked with a giggle, thinking back to what Trina had said about his text.\n\n\"Huh? Um. No, I have a t-shirt on.\" Eddie answered in surprise.\n\n\"So take your heavy shirt off and sit a while.\" Trina said politely.\n\n\"I guess.\" Eddie answered, only now realizing that Trina was wearing a pair of rather snug sweat pants and a t-shirt, her much larger breasts poking the front of the shirt out significantly, her nipples showing almost as much as Suzan's were. He unbuttoned his flannel shirt and hung it over the back of the sofa and then stepped over between the two and settled down onto the sofa between the two girls.\n\n\"So was it hard to shovel all that snow?\" Suzan asked after they had been watching the show on TV for a few minutes.\n\n\"Not too bad. I'm pretty used to it.\" Eddie answered.\n\n\"I'm from Florida. We don't get snow down there. This is all pretty weird for me.\" Suzan said. \"Aren't you uncomfortable in those jeans? I mean they're wet all the way to your knees.\"\n\n\"Kinda, but again, I'm used to it. Not much I can do about it anyway. It's not like I'm gonna take my pants off.\" Eddie said with a chuckle.\n\n\"Yeah, I guess that would be kind of silly. I mean after what happened and all.\" Suzan said quietly.\n\n\"I think maybe I should leave.\" Eddie said with a frown, standing up, not really interested in having his nose rubbed in the dirt again. \n\n\"No! Stay. Please!\" Suzan said, reaching out and grabbing for his hand and tugging it to keep him from walking away.\n\n\"Why? You're just going to make fun of me.\" Eddie said sarcastically. \n\n\"That wasn't my intent. Please. I'm sorry.\" Suzan said. \"Come on, help me out here!\" She said to Trina.\n\n\"Come on Eddie. Sit back down. We're not trying to make fun of you.\" Trina said looking up at him. \"Suzan knows what happened. She doesn't think you're a loser. In fact, she was the one that said the dolts that tricked you were really the losers.\"\n\n\"Look, it's just us. No phones, no cameras, just the three of us. I just thought you'd be more comfortable out of your wet pants. If not, then that's okay too. Just sit back down and relax, okay?\"\n\nEddie thought about it a few moments and then nodded silently, turning and sitting back down between the two girls.\n\n\"So Eddie. You got college lined up yet?\" Trina asked as she lifted her feet up onto the sofa and twisted herself a little to face him.\n\n\"Yeah, I'm going to stay here and go to U.\" Eddie answered her.\n\n\"Yeah? Me too. I'm going to study chemistry. You?\"\n\n\"Engineering.\" Eddie answered. \n\n\"How about you Suzan? Where you going?\" Trina asked.\n\n\"I was thinking about going back to Florida State. I want to study architecture.\" She answered. \"You sure you don't want to lose the pants Eddie? I mean they're dripping on the floor.\"\n\nEddie looked down at the puddles being created by the snow caked on the bottoms of the legs as it melted. \"Yeah. Maybe I should go.\" Eddie said with a frown. \"This was fun and all, but I don't want to make a mess in your house.\"\n\n\"No. Stay. Please.\" Trina said, reaching out and gently gripping his arm. \"I want you to.\"\n\n\"Actually you've pretty much ignored me since the picture episode. Why now?\" Eddie asked with a frown, expecting it to be some kind of trick to make fun of him again.\n\n\"I didn't realize at the time you had a crush on me. It was Suzan's idea that was why you took the picture. Everyone labeled you as a pervert, but you were really just looking to impress me, weren't you?\" Trina asked him.\n\nEddie looked down at his lap and blushed, thinking back to that day when he took the picture and texted it, believing Frank that it would get her attention like nothing else. \"Pretty much.\" He finally answered.\n\n\"So, do you still have a crush on me?\" Trina asked.\n\nThat was a question Eddie didn't expect. He looked up at her in surprise, his cheeks still pink. \n\n\"It's okay. Actually I'm kind of flattered. You really risked a lot to try and show me and got the short end of the stick.\" Trina said quietly. \"I'm really sorry it turned out that way.\" \n\n\"Yeah, well, live and learn.\" Eddie said quietly.\n\n\"You know, you're right!\" Trina said suddenly. Eddie stared as Trina suddenly stood up and reached for the waistband of her sweatpants, hooked her thumbs in them and pushed then quickly down, the material clinging snugly to her thighs and rolling inside out as she bent over and pushed the band down. She stayed bent over while she worked the tight pants over her feet, dropping the pants on the floor and standing up again. Her T-shirt barely covered the small pair of colorful bikini panties she had on, at least for the moment. Eddie continued to stare, open mouthed, as she grabbed the hem of the shirt and pulled it up and off in one smooth motion, her tits bouncing and wiggling as she plopped back down on the sofa. Her breasts were round and full, sagging somewhat from their own weight, each one easily the size of a coconut. Her areola were large and round, covering a good portion of the front of each breast with a large rock hard nipple protruding from the exact center of each one.\n\n\"Damn!\" Eddie breathed as he stared at her bare chest.\n\n\"You know, that's the same thing I said when I saw that picture of your cock.\" Trina said with a giggle. \"So you gonna take your pants off now?\"\n\nEddie looked Trina up and down, her entire body exposed except for her pussy, which was still covered by the panties. Trina looked at Eddie expectantly, her knee bent and leg cocked exposing the colorful material was pull snuggly across her pussy. He couldn't help but notice that the crotch of her panties were considerably darker than the rest of them, bringing a small grin to his lips. \"Yeah. I'm good with it.\" He finally answered, pushing himself up. He quickly undid his jeans and worked them down, pulling the wet pants legs off his legs and tossing the partially wet pants aside. \"Better?\" he asked.\n\nTrina looked up at his face, then down to the brown long johns and the huge bulge they contained. \"Still look a bit overdressed to me.\" She finally said, looking up at him, chewing her lower lips lightly.\n\nEddie looked down at his long johns, blushing as he realized how far his underwear was tented out.\n\n\"Come on. Long johns too, okay?\" Trina coaxed. \n\n\"That might be a bit much.\" Andrew answered quietly. \n\n\"Why? Unless...OH! Duh. Yeah, silly me. Kinda show a lot, wouldn't it?\"\n\n\"Yeah, pretty much.\" Eddie said, sitting back down. \n\n\"I guess I can see that.\" Trina answered him. \"I mean taking a picture is easy. In person it's a lot harder, right? But you wouldn't be nearly as bashful with a completely naked girl, would you? Or would that make it harder?\"\n\nEddie blushed heavily, his cheeks and ears turning red. \"I've never been with a completely naked girl.\" He said with a whisper.\n\nTrina looked at him with surprise on her face. \"Never? I mean you're good looking, for a guy. Hasn't a girl ever wanted to...you know... Mess around with you or anything?\"\n\n\"Not really.\" Eddie whispered.\n\nTrina took a deep breath and then stood up, stepping in front of Eddie. She looked at Suzan sternly. \"You better not ever say a word about this to ANYONE!\"\n\n\"Hey, my lips are sealed!\" Suzan said, holding up both hands in front of her in surrender. \n\n\"Okay Eddie. Give me your hands.\" Trina coaxed, holding her hands out toward Eddie. He cautiously reached out and let her take his hands and pull them toward her, letting them rest on her hips and the low riding elastic band of the top of her panties. \"Just push em down now.\" She whispered.\n\nEddie was practically frozen in place. His hands were on the hips of the nearly naked girl he still fantasized about and she was actually asking him to finish undressing her. He hooked his fingers into the elastic band and began to slowly pull down, afraid that she wasn't really serious and that she was going to tell him to stop. The elastic slipped down over her round ass, blond curls matching her long blond hair, peaked out over the material as he continued to slowly pull it down. Her round mound was fully exposed and he continued to pull down, exposing her full round pussy lips as he tugged the elastic band down her thighs. He stared at her pussy as he pushed the panties down farther, letting them slip to her ankles while he was bent toward her.\n\nTrina reached out and rested her hands on his shoulders, his face only a foot from her now exposed pussy, closer than any other guy had been to it before. She stepped her feet out of the panties, leaving her completely naked. She looked down at him, his attention riveted to the space between her legs. She took another deep breath, preparing to do something else she'd never done before. She lifted one foot off the floor and set it on the sofa on one side of him, her now raised leg completely exposing her pussy to him. She was practically holding her breath as she waited for his reaction.\n\nEddie reached his hand up between her legs and gently stroked his fingertips across her full round pussy lips, feeling the wetness on them and the heat radiating from them, feeling an actual pussy for the first time. He gently stroked several times across them and then pressed his middle finger slightly harder, pressing it between her lips, which easily spread to accept his finger. He drew his hand back slowly, dragging his fingers across her lips and the one down between it, drawing it slowly across the very end of her pussy and the hard little bump he felt there.\n\n\"Ohhhh.\" Trina gasped softly as his finger dragged across her clit.\n\n\"I'm sorry!\" Eddie said quickly, jerking his hand back. \"I didn't mean to hurt you.\"\n\nTrina reached out for his hand and pulled it back to her body, pressing it back between her legs. \"It didn't hurt. It felt nice. More so than I expected, that's all.\"\n\n\"So you like this?\" Eddie asked, going back to stroking her pussy as he had, one finger pressed between her lips and dragging it across that hard bump. \n\n\"Oh yes. Very much.\" She whispered as the tingles raced through her body with each stroke of his fingers. \"Just keep doing that. Oh god. I'm going to come.\" She moaned softly after several minutes of his attentions, her legs beginning to tremble slightly. \n\n\"Seriously?\" Eddie asked, surprised at how quickly she had become excited. \"I thought it took girls a lot longer to do that.\"\n\n\"Usually when I play with myself it does. But your finger feels so good.\" She said breathlessly. \"OH god Suzan, I'm going to come!\" she squeaked as her whole body shuddered, her legs barely able to hold herself up. Finally she reached between her legs and gently drew his hand away. \"Not too much.\" She said with a big grin, her face flushed bright pink. \"Now it's your turn. Stand up.\" She said, pulling on his hand and stepping her foot off the sofa. \n\n\"If you're sure.\" Eddie said, nervously as he pushed himself up with one hand while she pulled with the other. Once he was standing Trina knelt down in front of him, her hands shaking slightly as she reached for the waistband of the insulated long underwear bottoms he was wearing. She tucked her fingers into the elastic and then paused, looking up at his face before starting to pull the underwear slowly down.\n\nThe underwear seemed to roll inside out as she pulled it down, the huge bulge his cock was making in the front seeming to pull down with it until it suddenly popped out, nearly hitting her in the face. \"Oh!\" she squeaked in surprise as his hardon pointed toward her face, his big mushroom head leaking a glistening drop of precum. Trina quickly pulled the underwear the rest of the way down to his ankles.\n\n\"You're gonna have to sit down for me to do this.\" She said, trying to get the underwear down over his heavy wool socks.\n\n\"Oh yeah.\" He said, leaning back and sitting down, his hardon sticking straight up in his lap. \n\nTrina quickly pulled his socks off, tossing them over her shoulder, and then pulled the long johns down the rest of the way and off his feet, tossing them over her shoulder with a giggle as well. Her face turned serious again as she crawled between his legs, pushing his knees apart to make room for herself.\n\n\"Okay Here goes.\" Trina said as much to herself as anyone else as she reached her hand out for his cock. \"Wow. It's kinda hot.\" She told Suzan as she wrapped her hand around it, her fingers not quite able to close all the way around the fat shaft. She reached with a second hand and wrapped that one around below the first, his mushroom head still sticking up exposed over her hands. \"It really is huge,\" She whispered, her hands slowly sliding up and down his shaft.",
        "\"You should suck on it.\" Suzan coaxed, drawing both Eddies and Trina's attention back to her.\n\n\"I think you should get naked too. Not really fair for you to be checking all this out without you having to show too.\" Trina told her friend.\n\n\"Me? This was your idea, remember?\" Suzan protested.\n\n\"You want me to suck him? Get naked and show me how.\" Trina said sharply.\n\nSuzan looked at Eddie's face, his cock, Trina and then abruptly stood up. She stripped off her top, exposing her breasts, much smaller than Trina's but still extremely sexy looking to Eddie. He barely had time to take in the view of her tits before she was pushing her panties and shorts down in one motion, standing completely naked as she kicked her clothes off her feet.\n\n\"Okay. I haven't ever done it, but I've heard about it.\" Suzan said as she sat back down on the sofa next to Eddie. She leaned herself over, replacing Trina's hands with her own and leaning her face down toward his cock. \n\n\"Oh god.\" Eddie gasped as she closed her hot mouth around his mushroom head and began licking her tongue around it.\n\n\"So does it taste bad?\" Trina asked.\n\nMaureen Askland was surprised to see the driveway cleared. Someone had shoveled and she doubted it was her daughter. She hit the remote for the garage door and pulled in out of the still falling snow. She closed the overhead door behind her and climbed out of the car, smoothing down her skirt before leaning back in to grab her purse. It had been a long day she was glad dinner was already in the crock pot. She walked into the house and was surprised how quiet it was, considering that Suzan had a friend stay overnight. She heard the TV in the family room as she slipped her heels off and dropped them next to the door. She walked down the hall in her pantyhose covered feet and froze near the doorway. It had gotten dark outside and in the reflection in the patio door she could see her daughter, her friend Trina and a young man sitting on the couch. Her daughter seemed to be coaching her friend in how to suck the young man's cock.\n\nShe was about to interrupt the three, and then thought better of it as the young man let out a long groan.\n\n\"Yeah, it feels good,\" he said as her daughter shifted her position to bring one of her breasts up to his face. \n\nShe watched through the doorway as her daughter closed her eyes as he drew the front of her breast into his mouth. \"Oh yeah. It does feel nice when you do that.\" She cooed quietly. \"That was a good idea.\"\n\nMaureen's attention moved back to the reflection of the three in the door, Suzan's friends head bobbing up and down on the young man's shaft, his hips trying uselessly to push up with each stroke. Her experience told her that he was getting extremely close to giving the young lady a surprise. She wondered if she was ready for the gift she was about to receive.\n\nShe watched the young lady bob her head up and down, her gaze focused more on his man sized cock, her own hand unconsciously pressing her skirt between her legs as she thought about how it would feel sliding in and out of her pussy. It had been a long time since she'd seen a nice big cock, let alone felt one inside herself. She hiked her skirt up, and pushed her pantyhose down to her thighs along with her little panties. She pressed her fingers between her legs and stroked her pussy as she watched the young lady bounce her head on his cock, his hips pushing up urgently.\n\n\"OH GOD!\" he suddenly cried loudly, his hips thrusting up at the young lady with his cock in her mouth, her daughter's tit slipping from his mouth. \n\n\"Oh shit.\" The young lady gagged, trying to cover his spurting cock with her hand as if that could somehow contain the surging spurts of cum while she gagged from the first unexpected squirt.\n\nMaureen eased back and padded to the door, her panties and hose still around her thighs, wondering what to do next. Her pussy was tingling and soaking wet at the thought of that cock pumping in and out of her. \n\nShe picked up her shoes, stepped back into the garage and stood there contemplating her next move. \n\n\"Suzan! I'm home!\" They heard from the garage door, the sound of high heels banging against the floor.\n\n\"Shit! My mom!\" Suzan squeaked, quickly scrambling off the sofa for her clothes. \"Quick. Get dressed!\" she hissed, pulling her own tank top on. Trina scrambled as well, forgoing her panties and pulling on her sweat pants. Eddie grabbed his jeans and pulled them over his legs and up over his still hard cock, trying frantically to snap them as they heard the sound of the high heels clopping down the hallway toward them.\n\n\"Suzan? You down here?\" She called again.\n\n\"Yeah! Just watching TV mom!\" She called as she pulled her shorts on, kicking her panties under the sofa. \n\n\"So, looks like someone shoveled for us!\" She said as she turned into the room as the three of them were still falling onto the sofa. \n\n\"Yeah mom. I told Eddie he could shovel. He only wanted forty dollars.\"\n\n\"That sounds pretty reasonable for the amount of snow.\" She said as she walked around the sofa in front of them, Eddie still shirtless and with bare feet. \"What's this?\" She asked leaning down and pulling his long underwear out from under the sofa and holding it up. \"Looks to me like you two have been entertaining Eddie while you were waiting for me to come home.\"\n\n\"MOM!? How can you say such a thing?\" Suzan protested.\n\nMrs Askland stood with her hands on her hips, looking at the three. \"Wanna try that again? You young lady have your shirt on inside out and your friend has her sweat pants on inside out. I'd be willing to bet that if I looked I'd find two pairs of girls panties under the sofa. Wanna try again?\"\n\n\"Okay. Yeah we were messing around.\" Suzan answered reluctantly. \n\n\"So this is what I've taught you? Give your body to a strange boy?\" Maureen scolded. \"That is what this is, isn't it? Or is there something else you want to tell me?\"\n\n\"This is Eddie. He's had a crush on Trina for several years and...well...I guess we got a bit carried away.\"\n\n\"So he has a crush on Trina, and somehow you ended up naked with your breast in his mouth?\" She asked sternly. \"Yes, I know.\" She said holding up her hand as her daughter tried to interrupt. Haven't I always told you that if you need or want to know something to come talk to me?\"\n\n\"Yes mom, but...\"\n\n\"No buts. You three have no idea what you're doing, do you? Have any of you been with someone of the opposite sex? No I thought as much.\" She said after studying their embarrassed looks for several seconds. \n\n\"Mrs Askland. Honest, we weren't doing anything wrong.\" Eddie said defensively. \n\nShe stepped toward Eddie and smiled sweetly as she knelt down in front of him. \"Eddie, that's your name? Have you ever had a woman suck your cock before today?\" She asked softly, reaching out to the crotch of his pants and grabbing his partly hard cock through his pants. With a grin, and without taking her eyes from his she addressed her daughter. \"Sweetie. Why don't you reach over here and undo his pants.\" \n\n\"Seriously mom?\" Suzie asked incredulously. \n\n\"Very seriously sweetie. If you're going to do something, learn to do it well. Now, I want you to reach over and undo his pants.\"\n\nEddie looked back and forth between Suzie and her mother, and the looks being exchanged between the two, somewhat uncomfortably. Finally Suzie reached over and replaced her mother's hand on his pants and began to undo them. \n\n\"Very good, now pull it out,\" Her mother said after she had the button undone and the zipper pulled down.\n\n\"Really mom?\" Suzie asked.\n\n\"Fine.\" Her mother said testily. \"Stand up Eddie.\"\n\n\"Huh?\" Eddie asked in surprise. \n\n\"Stand up!\" she repeated a bit more sharply, pushing herself back on her knees. \n\nEddie, hesitantly, stood up holding his pants up with one hand so they wouldn't fall down. \n\n\"Tell me Eddie. Is this really the first time you've been with a woman?\" She asked as she reached out and took his hand from his pants, letting them fall down to his knees.\n\n\"Y...yes maam,\" Eddie stammered as she pushed his pants down to his ankles.\n\n\"Well, I'm sure you were enjoying what they were doing but if you want a woman to come back again you have to please her as much as she pleases you. Lift your foot.\" She coaxed.\n\nShe pulled his pants down off his foot and then coaxed him to lift his other, leaving him completely naked. She pushed herself up off the floor and stood in front of him. \"At least you have three women here to practice on. Maybe the girls will get a little more interested as the lesson progresses, especially since it will probably be they who benefit long term from this.\" She said as she reached out for his hands. \"Now the first thing to understand is that women don't get turned on like men do. Men are highly visual, they're easily aroused by what they see. Women on the other hand are more aroused by sensations. Not that seeing doesn't arouse them, but let's face it, a picture of a cock is just a picture. Seeing a cock and thinking about how it would feel inside them...that's arousing. The best way to push that little spark into a fire is with touches. You should know how to undress a woman. Have you ever undressed a woman before?\"\n\n\"No maam.\" Eddie answered in a whisper.\n\n\"If you're going to undress me we should probably be a bit less formal. Call me Maureen.\"\n\n\"Yes maam, I mean Maureen.\" Eddie stammered nervously.\n\n\"Now start unbuttoning my blouse.\" She said in a somewhat demanding tone.\n\nEddie nervously reached out to her blouse and began to unbutton the first button his fingers found.\n\n\"Okay Eddie. Stop there.\" She said closing her hands around his. \"Would you start eating a steak by cutting a little piece out of the middle? Or would you start at an end?\"\n\n\"At an end I guess.\" He answered her.\n\n\"Then start at an end with a blouse too. Doesn't matter which, top or bottom, but start at one end.\" She said more soothingly, moving his hands to the top button.\n\nHe nervously began to unbutton the first button with his slightly shaking hands. \n\n\"Remember what I said about sensations? How might you provide some sensations that would attract me?\"\n\n\"Um, I don't know.\" Eddie finally answered after several seconds.\n\n\"Kiss me silly. You don't need to watch your hands do you? Step close to me and kiss me while you undo the buttons. Give my mind something sexy to think about while you're slowly exposing my body. That's the part you want, my body exposed so you can see it. I want something different. I want to FEEL you.\" She said quietly, reaching her arms out to his neck and gently pulling him closer to her. They were almost the same height in her high heels and she quickly pressed her soft full lips to his. \n\nEddie felt her tongue teasing his lips, trying to press between them and opened his mouth. Her tongue snaked into his mouth and teased the tip of his tongue, swirling around his and teasing it to come play. Eddie almost forgot about the buttons as his mind clouded and his cock hardened from the erotic kiss he was receiving.\n\n\"Don't forget to work on the buttons.\" She whispered as she let their lips separate for a few moments, both of them catching their breath. \"Good. Much better.\" She whispered as his hands began to slowly move from button to button, the silk of her blouse spreading apart slightly with each newly freed button. \"Now you're as far as you can go.\" She said when his fingers reached where the blouse disappeared into the waistband of the skirt. \"Women spend a lot of time picking and caring for their clothes. It's a real turn off if a guy doesn't appreciate them. Don't yank the blouse out of the skirt, shift your focus for a moment. Let your hands slide around her waist, caress her hips and then her ass. You're doing two things, feeling for a zipper and enticing her to want your hands against her bare skin. Go ahead, you can do it.\"\n\nEddie slipped his hands around her waist, running them down over her full round butt, squeezing her cheeks through the skirt.\n\n\"Gently, gently. Don't grope, tease!\" She coaxed.\n\nEddie slid his hands around more, letting his fingers press against the material only hard enough for her to feel his fingers through the material. \n\n\"Very good. Now the zipper, just undo it and whatever little clasp holds the waist together. No, don't look. Use your fingers. We don't mind if it takes a few moments longer if we think you're more interested in us than getting us out of our clothes. Kiss me again.\" She said somewhat breathlessly as Eddie pulled the zipper of her skirt down and fumbled with the clasp holding the waist closed.\n\n\"Mmmmm.\" Much better that time.\" She cooed as he broke the kiss, his fingers having finally mastered the little clasp. \"Now just let the skirt fall down. Don't force it, just coax it so that gravity will do the work. Not bad. Next time just lay your hand flat on my body and let your fingertips coax it down until it just slides down on its own. Now rub my butt again. Just like before, tease it, stroke it. Make me want your hands on my bare skin. Ohhhhh that's it. That's better, much better.\" She cooed softly as he rubbed his hands around her butt, the silk blouse between his hands and her pantyhose covered rump. \n\nAs he rubbed he worked his hands under the tail of the blouse, his fingers feeling the smoothness of the hose and the edges of her panties.\n\n\"Now let's finish the blouse. You definitely have me wanting to feel your hands on my bare skin. \" she coaxed softly her pussy getting even wetter with anticipation as Eddie stroked her butt, his fingers sliding all the way down under the round curve of her ass and practically teasing between her legs slightly.\n\n\"Yes maam.\" He whispered.\n\n\"Maureen.\" She corrected softly as his fingers undid the last three buttons of the blouse. \"Now gently slide your hands up my front, inside the shirt. Oh yeah, just like that. Fingers up, all the way to my shoulders. Now slide the shirt off and let your hands run down my arms as you chase the sleeves down my arms. Ohhhhh yeah. You do learn fast. That's a very good touch.\" She cooed softly as the blouse slipped over her wrists and fell to the floor behind her. \"Now my bra. Many men have trouble with this so just take your time.\" She said, stepping closer to him to press her bra covered chest to his bare chest. \"It's little hooks in a metal loop.\" She whispered as Eddie worked to undo the clasp. \"There you go.\" She added approvingly as she felt the elastic strap around her torso loosen. \"Now step back just a little and slide your hands up my back. Ohhhhhh yeah, that's nice. Just tease the straps off my shoulders and let it slide down my arms. No, don't pull, just let them hang there a moment. What you do next will make all the difference to some women.\" She whispered softly to him.\n\n\"How so?\" He asked curiously.\n\n\"Many women are very self conscious about their breasts. Kind of like how nervous you were exposing your cock to me. Some women want to be teased into exposing themselves and then they want to know that what is exposed is appreciated. So start at my neck and kiss your way down my chest, kissing slowly back and forth, let the cups fall away when they're ready.\" She coaxed.\n\nEddie leaned his head down to her neck and began kissing softly, working down her neck to her shoulder, squatting down slightly so he could continue to work lower, kissing back and forth across the tops of her large round breasts. The cups of the lacy bra rolled down somewhat but were held in place by the weight of the large mounds holding the lower elastic band against her body.\n\n\"Gently roll the cups down to expose the front of my breasts and cup them with your hands. Ohhhhh nice. So gentle. Your hands feel hot against my bare skin. Mmmmmmmm lift them a little and the bra will fall away and you'll have all of them exposed. Now just keep kissing until you come to the nipples. Ohhhhhh yeah.\" She cooed as Eddie kissed down and around each large breast, their weight surprisingly heavy in his hands, their large size flowing over even his big hands. \n\n\"Now swirl your tongue around each nipple and then suck them into your mouth. For now be gentle, very gentle and tender. Oh god yes, like that. You are getting my pussy so wet.\" She cooed moving her hands to his head and gently stroking his hair. \"Now, keep playing with my tits with your mouth and slide your hands down to my waist. Pantyhose are tight, so just slide your hands into them for a moment. Oh yeah, rub your hands around a little and then push them down. That's it. Ohhhhh god yes.\" She moaned as he sucked her other nipple into his mouth while pushing the pantyhose down her legs. \n\nEddie let her nipple slip from his mouth and squatted down even farther, rolling the silky material of her hose down her legs, rolling them down to her feet. She lifted one foot after another, slipping them out of the heels and letting him pull the hose off her feet before stepping down to the bare floor. Without prompting by Maureen he slid his hands up both legs and hooked his fingers in her panties, slowly pulling them down her legs. With her now completely naked, he started to pull back.\n\n\"Just because I'm naked, don't quit. Just kiss lower. I know you want to see what I look like nude, but if you just kiss your way down you'll get a wonderful close up view.\" She said to him quietly, steering his head with her hands as she continued to slowly stroke his hair. \"Ohhhhh yeah.\" She whispered as his kisses worked across her stomach and down to her shaved mound. Eddie kissed lower, finally planting light kisses on the top edges of her pussy, her panties now down to her ankles.\n\n\"Very good. Very good indeed. Let your hand slide between my legs. Stroke me, tease me. Let your fingers find my lips and just gently stroke between them for a few minutes before doing anything else.\" She cooed as she felt his hand slide up between her legs. She so wanted to just go bend over the sofa and let him push that cock into her, but she also knew that it wasn't time for that yet. \"Ohhhh I'd love for you to keep doing that, but I think Trina and my daughter would appreciate being undressed now.\"\n\n\"Okay.\" Eddie said as he stood up, looking up and down Mrs Askland's nude body. She looked very much like Suzan had nude, but with bigger tits and her pussy looked a bit different. She had lots more folds of skin sticking down from her pussy than Suzan did. He turned and held a hand out to Trina, really wanting to undress her first.\n\n\"I'm not sure...\" Trina said hesitantly.\n\n\"Oh come now Trina. You were already naked in front of him once. You really aren't that bashful, now are you?\"\n\n\"No, I guess not.\" She answered, taking Eddie's hand and letting him pull her up from the sofa. \n\nEddie really did have a crush on Trina, and at the moment his mind was focused as much on getting his now raging hardon into her pussy as anything else. He took a breath and stepped up to her, his cock pushing against her stomach as he wrapped his arms around her body and leaned against her to kiss her. \n\nTrina felt his lips press to hers and his tongue stroke across her lips. She parted her lips slightly and allowed him to sweep his tongue between them and across the tip of her tongue. She felt his hips press against hers and wormed both hands between their bodies, closing around his rock hard cock. She slowly stroked it with both hands, moving them up and down only an inch or two as he kissed her, little tingles starting to radiate out from her pussy as she began to think about how it might feel to have what was in her hands inside her pussy. It wasn't that she was a complete virgin, at least not in all respects. She'd made out with a lot of guys and stroked a few of them off and let them put their fingers inside her, but she'd never felt a cock inside her, and at that moment there was one she wanted more than any other.",
        "She felt his hands begin to roam around her back, sliding up and down until they slipped under her shirt. She felt his bare hands on her back, teasing under the shirt as they worked higher, his wrists dragging the shirt up higher until she could feel her hands and his bare cock head against the bare skin of her stomach. She let him pull the shirt material up between them feeling her rock hard nipples press against his bare chest. She let go of his cock and raised her hands, breaking the kiss long enough for him to pull the shirt up and off her body. She lowered her arms around his neck and pressed her lips to his again, her tongue pushing into his mouth as his hands returned to her bare back.\n\nSlowly Eddie stroked his hands in circles around her back, his fingers sliding down lower with each circle until they were sliding across the top of the waist of her sweat pants. Slowly he allowed his fingers to force the material down lower, each trip pushing it lower as he slid his fingers between the elastic band and her bare skin. He felt the curve of her lower back and the beginning of her round rump against his palms as he worked the material lower and lower, finally pushing it low enough to cup her round firm ass cheeks.\n\nHe left the material where it was, rolled in a bunch around her thighs, most of her body exposed to his hands, and slid them up her sides to cup her round breasts. He pushed each round soft breast up with the palm of his hand, his finger teasing her nipples as he gently pulled himself away from her. Reluctantly she released his neck and allowed him to kiss his way down her body, feeling his hot breath and his soft hot mouth kissing ever closer to her nipples. \n\n\"Ohhhhhh yessssss.\" She hissed softly as he closed his lips around her left nipple and sucked it deeply into his mouth. She could feel little tingles running up and down her body as his hands left her breasts and began rubbing down her sides to her ass again. She could feel him pushing the material down her legs, freeing more of her bare skin to his hands as he stroked up and down her leg, always pushing the bunched up material lower when he stroked his hands down. She lifted each foot in turn and then stood nude in front of him, feeling his mouth on her breasts, working from one to the other while his fingers slid up her thighs and then between her legs. \"Ohhhh god I wanna fuck you.\" She whispered as his fingers pressed between her sopping wet pussy lips and stroked across her hard excited clit.\n\n\"Very good work Eddie.\" Mrs Askland said from behind him. \"Now why don't both of you strip down my daughter.\"\n\n\"Huh?\" Suzie asked in surprise. \"Both of them?\"\n\n\"Of course. If you're going to have sex with more than one partner it's only polite to include them all. A woman's lips on your breasts will feel every bit as good, and some say even better than a man's.\" she told her daughter. \n\n\"But isn't that kind of weird?\" Trina asked, her eyes wide as she looked over at her friend.\n\n\"I believe the word you're looking for is kinky, but if you think about it it's not any more weird or kinky than taking his cock in your mouth. That is what both of you did, isn't it?\"\n\n\"Yeah.\" Suzie answered quietly as she got up from the sofa. \n\n\"Eddie, Trina. Feel free.\" Mrs Askland said, walking over to a chair and dragging it out of the corner and settling into it. \n\nEddie stepped over and wrapped his arms around Suzie and pulled her gently to him. He leaned his face to hers and gently kissed her lips before pulling away slightly. \"You okay with this?\" He whispered. \"I mean I'd have sex with Trina in a hot second, but, well, you're pretty damn hot too.\"\n\n\"Well, it is kinda weird having my mom in here, but if she hadn't come home I was thinking it might be kind of fun to fuck you too.\" She whispered back. \"I mean you do have a pretty big cock, and well...Hell I'll admit it, other than my toy I keep hidden upstairs, I'm kinda a virgin.\"\n\n\"Seriously?\" Eddie asked in surprise. \"You?\"\n\n\"Uh huh.\" She admitted, \"Trina is too. I mean we both do things with ourselves, but well, yeah, I guess we all are then.\" She answered with a giggle.\n\n\"So you wanna do this then?\" Trina asked.\n\nSuzie turned her head and looked at Trina and giggled. \"Hell if I can't get fucked the first time with my best friend, when would I?\" \n\n\"So, we done talking?\" Mrs Askland asked.\n\n\"Yeah, we are mom.\" Suzan said, quickly pulling her tank top up and off, worming her arms between Eddies to get the material free. Eddie stepped back and she pushed her shorts down, allowing her to kick them off her legs. \"So which one of us is going to get fucked first?\" She asked, looking at Trina and Eddie.\n\n\"So, we're ready to jump right to fucking? No more foreplay?\" Mrs Askland asked from where she was sitting. \"Well, first things first. Trina, are you on any kind of birth control?\"\n\n\"No,\" She said meekly. \n\n\"Okay, well in that case we have to make sure Eddie doesn't unload inside you. At least not today. If you want I'll take you down to planned parenthood sometime this next week and we can get you on the pill. Eddie, unless you want to become a father, I suggest you pay attention here. Under NO circumstances can you cum inside Trina. If you feel like you're even coming close, pull yourself out. Both Suzie and I are on birth control so you'll have ample opportunity to have the full ride.\"\n\n\"You?\" Eddie asked in surprise.\n\n\"Mother!\" Suzie exclaimed in surprise.\n\n\"Of course. I'm a woman. A very turned on woman too. I wouldn't mind at all feeling you plunging in and out of my pussy. Besides, I know a few tricks that I wouldn't mind teaching my daughter. Now Trina. Why don't you lay down on the floor. Yes, right there.\" She said coaxing Trina to lay in the middle of the floor. \"The missionary position is the most basic and the oldest sex position. Many women like it best because they can see the face of the man screwing them, and in many loving relationships that's an important factor. There are lots of other positions we can learn and play with, but in this case, why don't you two start there.\" She said, getting up from the chair and stepping over to kneel next to Trina. \"Eddie, come on down her and kneel between her legs.\"\n\nEddie stepped between her legs and knelt down, Maureen reaching out to grasp his cock and stroke it slowly a few times. \n\n\"Mmmmmm god such a nice looking cock. Now lean over her like you're going to do a pushup. That's it.\" Maureen said, aiming his cock at Trina's waiting pussy. She rubbed his cock up and down between Trina's wet pussy lips several times before coaxing him with her other hand to push toward her farther. \"There you go.\" She cooed as he slipped into Trina's tight little pussy. \"Now you don't want to hurt her, so go easy at first. Short little strokes to lubricate your cock so it doesn't grab her lips and pinch and also to let her expand around you.\"\n\n\"Oh god.\" Trina moaned from below him as he started to bounce in little short strokes, pumping his cock deeper and deeper into her until he was stroking the full length of his shaft in and out of her.\n\n\"Good, very good.\" Maureen cooed, \"be careful not to pull too far back or you might slip out. That's very frustrating for both of you. Now Suzie, you're not to be left out. Come on down here.\"\n\nSuzie knelt down next to her mom on the floor and brushed her long blond hair back behind her ear. \"This position does allow for a little extra play between partners. Since we want to be sure she climaxes long before Eddie, why don't you reach in between them and play with her clit.\"\n\n\"Mom!? Really?\" Suzie protested.\n\n\"Yes dear. Get on all fours and reach in between them and rub her clit.\"\n\nSuzie sighed deeply and then rolled herself on all fours, reaching tentatively between Trina and Eddie, her fingers finding her clit. His strokes brought him down to nearly, but not quite, touch her fingers as she began to massage Trina's clit in small circles. \"OH god!\" Suzie squealed suddenly, her whole body jerking in surprise at her own mothers touch.\n\n\"Just relax. Rub her clit and I'll rub yours. I want your pussy to stay excited when Trina comes because I'm going to ask you to take her place.\"\n\n\"Oh god. If you say so,\" Suzie moaned loudly as her mother stroked her fingers back and forth between her pussy lips, rubbing her finger across her hard clit with each stroke.\n\n\"Now watch Trina. Can you see how her hips are lifting in time with his? She's getting closer to climax. Lean your face down and nibble one of her nipples. Not too hard, but nibble it with your teeth.\"\n\n\"Me?\" Suzie asked breathlessly.\n\n\"Uh huh.\" Her mother coaxed.\n\nSuzie looked back at Trina, laying with her eyes closed, her hips rising to meet Eddie's strokes. She leaned her face down and sucked the front of Trina's tit into her mouth, closing her teeth on the rigid nipple and then pulling back, allowing it to slip from between her teeth. The response was almost immediate. \n\n\"OH GOD I'M COMEING!\" Trina screamed at the ceiling as her whole body suddenly started to shake and tremble. \"OHHHH GOD OH GO OH GOD!\" she cried over and over as her hips pushed up toward Eddie, practically stopping his strokes. She lay on the floor for nearly half a minute, jerking and shuddering before she reached for Suzie's hand and pushed it away.\n\n\"Very good. Now Eddie, pull out.\" Maureen commanded. \"Suzie, crawl right over Trina with your ass pointed at Eddie.\" She said as Eddie pulled his glistening cock from Trina's pussy. \n\nSuzie moved her leg across Trina, settling on her knees astride her body, her feet near Trina's knees. Mrs Askland moved Trina's legs over her daughter's so that Suzie's pussy was nearly over the top of Trina's. \n\n\"Okay Eddie. This is often called a doggie position, well mostly because that's how dogs do it. Lots of women really enjoy this position because it allows even deeper penetration. If the man has a short cock this helps get it deeper. You don't have to worry about that, but it will allow you to push as far into her as you can. So go ahead. Put yourself into her pussy.\"\n\nEddie looked at Mrs Askland and then at Suzie's ass. When the day started he had no prospects of having sex any time soon, and now he had already been inside the girl of his dreams and now he was getting ready to put it into one of the more popular girls. He wasn't about to pass this up. He scooted forward on his knees and rubbed his head between her lips until he found the little entrance to her pussy, and then conscious of Mrs Askland's comments about how fast, pushed slowly inside her pussy. He could feel the tightness of her pussy gripping him as he pressed slowly forward, her tunnel seeming to expand just enough to accept his fat girth. \"Ohhhh damn.\" He groaned softly as he involuntarily pulled back a little and then pushed forward again, driving himself a little deeper into her incredibly tight pussy.\n\n\"Now Eddie, you have to make sure she climaxes before you. I know you're already close, your young cock's just not used to this kind of stimulation, but you have to make sure she's pleased first or you may not get a second chance. Understand?\"\n\n\"Uh huh.\" Eddie grunted in response as he started plunging his cock in and out of Suzan's young pussy, his thighs slapping loudly against her bare ass.\n\n\"Trina, you can help him out. Use your fingers on her clit and feel free to suck her nipples. Your goal is to help your boyfriend by getting her to climax as hard as possible.\" Mrs Askland coaxed.\n\nTrina looked at her and then back to Suzie's hanging tits. She lifted her head and closed her mouth around one of Suzie's nipples and sucked on it as she reached down and found her clit, quickly rubbing it in circles the way that Suzie had done to her.\n\n\"Oh god yes. Oh god ohhhhhh fuck me!\" Suzie cried softly as Eddie pounded into her over and over again, his fat cock stroking in and out of her, his fat head caressing each inch of her excited tunnel as it plunged deep into her. She could feel his fat head banging against her cervix over and over, sending little tingles racing through her whole body.\n\n\"That's it. Enjoy the sensations. Feel his fat cock stroking in and out, his cock expanding as he gets closer to his own climax. Can you feel it? Listen to his sounds too. How close he's coming. His grunts and groans changing tone. Are you ready? Do you want to feel him unload inside you?\" Mrs Askland whispered to her daughter.\n\n\"Oh yesss. I wanna feel him come in me!\" she moaned loudly.\n\n\"Any second now you will.\" She said, looking at Eddie and knowing that his young body had about all the stimulation it could handle without coming. \n\n\"AHHHHH FUCK!\" Eddie suddenly shouted, his body jerking so hard that he knocked Suzie off balance, pushing her down onto Trina as he fell forward his cock spurting his cum deep into her pussy.\n\n\"FUCK!\" Suzie squeaked as her own body suddenly began jerking and trembling, her breath coming in gasps as her orgasm washed over her in wave after waved timed to the strong surges of hot cum pumping into her pussy from Eddie's surging cock. \"Ohhhhh god god god.\" She mumbled as she lay on top of Tina, her tits smashed into Trina's face and her body continuing to jerk and tremble for long seconds. \n\n\"I'm sorry.\" Eddie breathed heavily as he picked himself up off Suzie and Trina.\n\n\"Don't apologize for having a good orgasm. It was a powerful one, but in the future you should be prepared and careful not to hurt your partner. There may be places that it's not advisable to lose your balance that way.\"\n\n\"Um, okay,\" Eddie answered as he knelt there, his cock oozing more cum which dripped in long stringy strands to the floor, his twitching cock glistening with Suzie's cum. \n\n\"Now, come with me.\" Mrs Askland said, standing up and holding a hand out to him. He climbed to his feet and she led him back to the sofa, sitting him on the center cushion and then kneeling in front of him. She pushed his knees apart and then leaned her face down between his knees, her big tits hanging down between his legs as she closed her mouth around his cock. \"Yum.\" She cooed between licks as she sucked and licked his cock while the girls watched from where they both sat on the floor.\n\n\"Mom!?\" Suzie finally said, \"What are you doing?\"\n\n\"Well sucking his cock of course.\" She answered before closing her lips around his cock again.\n\n\"But mom!\"\n\n\"Sweetie. I haven't had a cock in my pussy in over four years. I think Eddie can handle pleasing one more woman tonight. I mean if he's going to learn to give you two multiple orgasms we're going to have to teach him so much more.\" She said before returning to his cock. \"Now look at this girls. This is the wonderful thing about a young man's cock compared to an older man. See how quickly he gets hard again? It's only been a few minutes and he's already hard enough for me to climb onto him.\"\n\n\"MOM!\" Suzie said sharply. \"Really? You're going to fuck our boyfriend?\"\n\n\"Watch and learn sweetie.\" Mrs Askland said as she lifted herself up and climbed onto the sofa with her knees straddling Eddies hips. \"This is called cowgirl. Lots of men love this position because it's so versatile.\" She said as she reached down between them and aimed his cock toward her pussy. \"OHHHHHH MY GOD!\" She moaned loudly as she settled on his cock, her sopping wet pussy engulfing his long fat shaft. \"Geez is his cock incredible. You girls are so fucking lucky\" She gasped as she started to slowly lift and drop herself on his cock. \"Men love this position because they can see your tits bounce, and they can play with them,\" She added as Eddie reached up to her tits and tried to cup and hold them as she bounced. \"It's also versatile. One of you might want to try letting him lick your pussy while the other rides like this. That way you can all three enjoy pleasure at the same time.\" \n\n\"Uh god.\" Eddie grunted as Maureen changed her motion, rocking her hips while she slid up and down, changing the pressure on his cock with every stroke. \n\n\"I'm going to come Eddie. Feel my pussy when I do. Concentrate on how it feels around your cock. You want to know how it feels so you can tell if she's really climaxing or faking it. Oh god. Here it comes!\" Maureen cried loudly, leaning back and using her hands on his knees to hold herself up her body trembled and shook. In the middle of her orgasm she reached between her own legs and began to frantically stroke her own clit, Eddie staring at her as her body trembled and shook, her fingers practically flying across her clit. \"OHHHH FUCK!\" she suddenly screamed loudly, a huge gush of juice shooting out around Eddie's cock, splashing from his thighs and pubic mound up onto his stomach and chest. Three times her body jerked and spewed more of her cum onto Eddie where it dripped and trickled down his body and on to the sofa.\n\n\"That girls, is what is known as squirting.\" Maureen panted. \"No before you ask Eddie, it's not pee. It's woman cum. Lots of women do that, some don't, but it's nothing to be afraid of. It just means that it was a very intense orgasm.\"\n\n\"Oh.\" Eddie said.\n\n\"Go ahead, taste it. It won't hurt you.\" She said, as she sat stride him, dipping her finger in her own juices and holding it out for him. \"Go ahead. It's fine, I promise.\"\n\nEddie looked at it as if it was going to bite.\n\n\"Eddie, I just sucked your cock, tasting not only your cum, but also my own daughters juices on your cock. You sure you want to turn your nose up at this?\"\n\n\"Probably not.\" Eddie finally admitted.\n\n\"Okay, then.\" She said lifting herself up off his cock and leaning her pussy toward his face. \"Go ahead and lick me.\"\n\nEddie looked at her hesitantly and then reached for her ass and pulled her toward his face, reaching his tongue out and stroking it up between her lips. \"ohhhh god yes. You can do that all you want sweetie. Ohhhhhhh god.\" She moaned as he licked slowly over and over between her lips. \"If one of you girls want to make him come again before we eat dinner, be my guest. Otherwise I may do it myself.\"\n\n\"Me.\" Trina said quickly, getting up and stepping in front of him.\n\n\"Good girl. Now turn around and face away from him. Now back up, your legs outside his. That's it. Now lean over and feel between your legs for his cock. That's it. Now feel his head and rub it between your lips. There you go. Now just sit down on it. Ohhhhh...went right in didn't it? I could feel by how deep he pressed his tongue up into me. It always goes in easier the second time.\"\n\n\"Ohhhhh god he still feels so big in me though.\" Trina groaned as she settled her ass against his legs.\n\n\"Yes dear. It will. It feels exquisitely large, doesn't it?\"\n\n\"Uh huh.\" She moaned softly as she started to bounce up and down on his shaft, her hands on his knees for leverage as she rocked herself up and down his shaft. \"God Eddie. We could have been doing this for the last four years?\"\n\n\"MMmmphf.\" Eddie agreed into Maureen's wet pussy. His whole high school time had been spent shying away from girls and now, when it was almost over, he was finally getting to have the one person he had dreamt of so many times, not once, but over and over again.\n\n\"Ohhhh damn Eddie, You are good with that tongue. After dinner we're going to have to let you practice on the girls, but right now you have me getting damn close to another climax. You're not going to come again yet, are you?\"\n\nEddie nodded his head between licks up her pussy, his tongue diving deep between her lips with each lick, sliding his tongue along her wet slit and then flicking several times across her protruding clitoris. Each stroke seemed to bring more juices from deep within her, the taste slightly sweet and honey like, though nearly as thin as water. He couldn't help but buck his hips up into Trina as she pumped herself up and down his shaft, her moans growing by the moment as her wonderfully tight pussy caressed his cock and inched him closer to yet another orgasm. ",
        "\"Gonna come!\" Eddie grunted, pulling his face from Maureen's pussy long enough to warn Trina.\n\n\"Good boy. Trina, He's given you warning. You can either climb off and I'll ride him to completion or you can finish him yourself.\n\n\"I don't want to get off.\" She moaned. \"So close to coming again.\"\n\nMaureen pulled away from his face and stepped across him, climbing off the sofa to stand in front of Trina. \"Come on dear. There'll be more later. This isn't the time to make this kind of a mistake.\"\n\n\"Ohhhhh god.\" She moaned, pulling off Eddie's cock and standing up.\n\n\"Suzie, honey. Go up to mama's room, and in the drawer of my night stand you'll find a little colored bag. Go bring that down real quick would you?\"\n\n\"Sure mom.\" Suzie said from where she was sitting in the chair her mother had been in before, two fingers stuffed in her own pussy.\n\nWith Trina now off his cock Eddie couldn't quite keep from reaching for his own cock and stroking it. \n\n\"Stand up Eddie.\" Maureen said, holding a hand out. \"Trina, kneel here in front of him. That's it.\" She said as Trina knelt to her knees in front of Eddie. \"Some times of the month it's nice to have sex without having intercourse. Boob guys will always enjoy this.\" She added stepping behind Trina and reaching around to squeeze her tits together, cupping and lifting each of them. \"Eddie, just press your cock between her tits and start stroking. Trina, tip your head down and each time he strokes up, let the head of his cock slip into your mouth. Your saliva will lubricate his cock.\n\nEddie looked down at Trina and pressed his cock between her soft tits and started stroking. Within moments he was stroking with abandon, his hands replacing Maureen's hands, squeezing and playing with her tits while he held them together around his cock.\"Oh god, Gonna come!\" He grunted as Suzie came back in with the little bag.\n\n\"Trina, when he comes try to take his head in your mouth. I know you gagged before, but just turn your head so that he doesn't shoot down your throat.\" \n\n\"Ohhhhhh GOD!\" Eddie grunted, his body jerking and pushing his cock up between her tits and into her mouth. His body jerked over and over, pumping more cum into her mouth as he stood, his legs trembling slightly. \n\n\"That's it. Now swallow it down. It's okay. It's an acquired taste.\" Maureen said with a chuckle as Trina made a face and swallowed.\n\n\"Eddie, this is a lesson every man should learn. Kneel down and kiss her. A good long sexy French kiss.\"\n\n\"Really?\" Eddie asked making a face.\n\n\"Yep. If she's going to be willing to lick your cock , taste her own pussy on you and swallow your cum, the least you can do is to be willing to kiss her for it.\"\n\nEddie dropped down slowly to his knees and wrapped his arms around her waist, pulling Trina's soft tits to his chest, his softening cock pressing against her mound. Tentatively he pressed his lips to hers, which she eagerly returned, her lips opening and her tongue pressing into his mouth. At first he was hesitant, but he quickly got used to the slightly salty taste and kissed her back, their kiss growing more passionate by the second.\n\n\"God.\" Trina finally breathed, breaking their embrace. \n\n\"Okay Eddie. You still have to please your woman, even though you're done for the moment. Trina, sit on the sofa, right on the edge. That's it. Now lean back. Suzie, bring me the bag. These are vibrators. They're basically toys for women to use when they don't have a man to fill them or for couples to use to enhance their play. At the moment we only have one cock and it's in demand, so we'll let him learn how to help himself with one of these.\" She said pulling a long purple shaft looking device from the bag. It had a coned end on it and a knob on the other end.\n\n\"I think I can guess what I do with this!\" Eddie said with enthusiasm, aiming it at Trina's pussy.\n\n\"You have the right idea. Just do it right. Spread her lips with your fingers, that's right. Now stick it in your mouth. Yes I'm serious. Stick it into your mouth. If she wasn't wet you'll have to use some artificial lubricant, but in this case a little saliva will do fine. Taste good? It should. It had my cum on it the other day.\" She said with a grin. \"Now gently rub the tip up and down her pussy and then gently press it in. Thaaaaat's it.\" She cooed. Now hold her lips apart and lick her clit. Yes there, the hard little nub you have exposed. That's it! Get right in there and lick on it while you slide the vibrator in and out.\"\n\n\"Oh god.\" Trina mumbled. \"Feels a lot different than his cock. I'd rather have his cock going in and out of me.\"\n\n\"I know dear, but this is the best option for the moment. Just remember who's doing it and why. He wants you to come. He wants to see your body climax.\" Maureen said softly. \"Just imagine his cock sliding in and out of you again.\"\n\n\"Ohhhhhh yeah. Yeah. On my clit. Oh god yes. There. I like that.\" Trina cooed as Eddie slowly pressed the vibrator in and out of her pussy, the small device humming away while he circled his tongue around her hard clit. \"Ohhhh god yes. MMMMMMM yeah.\" She moaned louder, pushing her hips up toward his face. \"Yeah. God fuck me Eddie! Fuck me with your big cock! Oh god! Ohhhhhhhh yeahhhh YEAHHHH OH SHIT!\" She cried as her body dissolved into shudders and shakes, her whole body trembling uncontrollably for several long seconds.\n\n\"Very nice.\" Maureen said, pulling Eddie's hand and the vibrator from Trina's leaking pussy. \"Now, I don't know about you three, but I'm starved and dinner has been ready for over an hour. If you think you three can share a quick shower without getting lost in another round of sex play you can use the one in my bathroom, I'll finish getting dinner on the table. Eddie, I think I'm going to need the driveway shoveled in the morning again. Since school is already canceled for tomorrow, how about you just stay the night?\"\n\n\"Seriously?\" Eddie asked in surprise, looking toward Suzie and Trina to see their reactions.\n\n\"Very seriously. Do you need to call your parents or anything? We have a guest room you're welcome to use, although I doubt the girls will allow you to actually sleep in it since it's a king sized bed.\" Maureen said with a smile. \"I may just call in sick to work tomorrow myself.\" She added as she stood up. \n\nBy the way, I have a rule about eating naked here. You girls can look in the bottom left drawer of my dresser and pick something to wear. I have something already in mind for Eddie.\" She called as the three got up and started for the hallway.\n\n\"What's in the bottom drawer?\" Trina asked as they bounded up the stairs.\n\nSuzie just grinned as she walked down the hall to her mother's room, turned on the light and pulled the dresser drawer open. Inside the drawer was a wide array of sheer outfits, most of which Trina could quickly see would hide almost nothing, but then she suspected that was the idea. \"Come on. Shower's this way.\" She said as she got up and walked across the room, pushing open the door to the master bathroom with its huge whirlpool tub and walk in shower. Maybe we'll get dirty little Eddie in the tub with us later.\" She added with a grin, looking back at Eddie. \"How about it Eddie? Wanna spend the night? I'll let you wash our naked bodies all you want and promise that I'll ride you until you come before bedtime tonight.\"\n\n\"And after that?\"\n\n\"How about you curl up behind me, your hard cock inside me and snuggle me up. I'd love to feel how that feels with your arm around me, cupping my breast as we go to sleep. I've always thought that was the perfect position for lovers to go to sleep in.\" Trina said barely louder than a whisper.\n\nEddie looked at her and asked quietly. \"So yesterday I was strange and to be left alone, but tonight I'm a lover? What happens when school starts again? What am I then?\"\n\n\"How about being my boyfriend?\" Trina asked quietly.\n\n\"How about being OUR boyfriend? Not too many guys can boast that they have two of the hottest chicks in school sharing him!\" Suzie said with a grin as she pulled the two of them into the shower. \"Of course no one needs to know that we do this, it'll be our secret, but just between you and me, I don't want it to stop.\"\n\n\"Me either.\" Trina said quietly, \"Which might sound strange, but I'm good with it. What about you Eddie?\"\n\n\"I'm okay with it. The only question I have, is what do we do about your mom?\" Eddie asked questioningly.\n\n\"Fuck her!\" Suzie said emphatically.\n\n\"Huh?\"\n\n\"I mean it. Fuck her. Not all the time, but once in a while. It'll make her a lot happier around here to get a little cock and I have a hunch that she'll teach you all kinds of good things that you can use on and with us!\" Suzie said with a grin. \"Now we better get showered or we'll be going hungry if I know my mom.\" With that she turned and turned on the water, the sound of the spray raining down on the three of them drowning out any further conversation that Mrs Askland could hear from outside the bathroom door. \n\nShe walked to the dresser, pulled out a little yellow slip of material and headed down the stairs with a smile, knowing that life around her house had just become much more interesting for all of them."
    ],
    "authorname": "m_storyman_x",
    "tags": [
        "girlfriends  mom",
        "moms",
        "girlfriends",
        "first time"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/snow-shoveling-1"
}