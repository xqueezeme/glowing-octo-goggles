{
    "title": "Coming Out Of The Closet",
    "pages": [
        "Full text of the Complete Volume of Collected Borg Poetry: \"Poetry is irrelevant.\"\n\nAs a few of you may know, a troll recently called the pseudo-autobiographical story of my very first interracial encounter: \"Sappy.\" He/She/It also informed me that \"I was gay.\" Now I have to admit to you that this bothered me. I'd been losing sleep for days over how to present this particular revelation to my husband, since Perry's always considered himself one of the legendary poster boys for straight hetero sex. Even though we made love twice during the time period in which I wanted to tell him about my predicament, I couldn't find the right way to broach such an important subject.\n\nFinally I sketched out my plan for telling Perry about my dilemma. What follows is a fairly accurate description of the results:\n\nFirst, after stripping down entirely, I hid in the bedroom closet for fifteen minutes counting on my unknowing hubby to come into the bedroom looking for me so that I might burst out of the closet. I figured an in your face confrontation was best. Besides I knew I could get his attention just by making sure that my breasts took the lead in an in-your-face attack. After the first fifteen minutes were up, I decided to wait for another fifteen minutes. Three minutes had gone by when I screamed out at the top of my lungs that he'd better come back to the bedroom and see me--right now.\n\nNow Perry is nothing if not headstrong. He didn't budge.\n\nMy children came in instead. Naturally they asked me why I was hiding in the closet, and, being the helpful little girl scout she is, my youngest, Trini, opened the door to let me out. So there I stood in the midst of all our hanging shirts, skirts and dresses totally nude. Before my bug-eyed progeny could ask any me more questions, I told them in no uncertain terms that I wanted to see their father, and then they were to work on their homework for at least three and a half hours or until next Tuesday whichever came first.\n\nMy little girl quoted me quite succinctly when she said: \"Daddy! Mommy's hiding in your closet naked, and she said to tell you that you'd better get your ass in there if you know what's good for you.\"\n\nSo much for romantic trappings wrapped in an element of surprise.\n\nI didn't realize that a man could stare for so long at a naked woman standing in a clothes closet and not say a single word. He tried to keep his face composed to hide any feelings he might have, but I could see deep inside his dark brown eyes that he was laughing at me way, way back inside of his primal, macho psyche.\n\nGrimacing slightly, I started to tell Perry Nevermind, but before I could get the word out, he spoke. \"Can I ask what this's all about?\"\n\n\"I'm coming out of the closet.\"\n\n\"I see that. Apparently so did everyone else in the house. It's a good thing that Ben's friend, Trammell, left already.\" He paused. \"Well? Are you going to tell me why you're standing naked in our bedroom closet?\"\n\nI took, a deep breath and told him the truth. \"A troll told me that my story was 'sappy,'and that I'm actually gay.\"\n\nHe nodded, but I could tell that he just didn't comprehend the gravity of my statement. \"A troll. Tell me, Lyss, do you have to spend a lot of time under bridges or anything to talk to these trolls?\"\n\nAs tears began to form in my eyes, I shook my head and answered. \"E-mail.\" \n\n\"I was unaware that trolls had become so technologically advanced.\"\n\nI stood up straight and dabbed my eyes with the shirt tail of an old blouse I haven't worn for a while to compose myself. \"You're making fun of me.\"\n\nPerry held up his large hand in a peacemaking gesture. \"Not at all. I didn't know how much it bothered you to have anybody call one of your stories 'Sappy.' Especially a troll.\" Of course, I didn't realize that I'd set him up until he nailed me with the obvious retort. \"So which sappy story did this troll insult?\"\n\n\"Stephen Chapter One.\"\n\n\"No kidding, just Chapter One? He didn't even get to the really sappy chapters yet.\"\n\n\"Stephen isn't sappy,\" I blurted out. \"And if you had more respect for the dead, you'd know it's a moving, semi-autobiographical...\"\n\n\"I take it back!\" Perry threw up his hands for a moment. \"I take it back! I'm sorry I said that about your story.\" He reached in and took my bare arm gently with one hand. \"So, troll confrontations aside, why are you standing naked in the closet?\"\n\n\"He said 'I was gay,' so I thought I'd come out of the closet for you.\" I threw my free arm out in a dancer's sell gesture. He didn't buy it. Then I flushed. I could feel my face redden, but I couldn't tell whether any of my obvious embarrassment affected him since like most black people, Perry doesn't redden, he just darkens. \n\nPerry made the shape of an Oh, with his mouth, and he made his eyes smile once again. \"So now that you're gay, are you planning to bring another woman to our bed?\"\n\nI shook my head. \"No! Not yet, anyway, but I want you to examine me all over to see if you can locate my penis.\"\n\nBingo! That got him. I knew it would. He stared at me this time showing genuine confusion in his eyes. \"You want me to locate your...\"\n\n\"...Penis.\" I finished his sentence. \"If I'm gay, and I'm living with you, then I'm sure you'll be able to discover a penis somewhere on me.\"\n\n\"I haven't found one in the eleven plus years we've been together.\" Perry pointed out. His eyes raced over every inch of my breasts and torso, down my abdomen and up the inside of my pale thighs.\n\n\"Ah-hah! But you haven't actually looked for one, have you?\" I had him on that one, so he didn't bother to answer me.\n\nAudibly sighing, Perry made a half-hearted circular gesture with his finger and hand. \"Turn around.\" Then he shook his head and grumbled. \"I still don't see one.\"\n\n\"Since you don't see any, you'll have to use your fingers.\" I stated. \"I'm coming out of this closet now, so it's up to you to prove or disprove that I'm gay.\" \n\n\"Lyss, tell me again why you believe in trolls?\"\n\n\"Irrelevant!\" I understand the Borg collective now. \"We will establish empirical evidence of the presence of a penis,\" I decreed in all my glorious nakedness. \"Or we will die trying.\" \n\n\"Do I get a vote in this?\"\n\n\"No.\" I pushed my finger the cotton of his shirt and into the sternum of his chest. \"Your mission which you have already chosen to accept is to explore all the outer and inner regions of my body where a rogue penis may be hidden.\" I noticed that the laughter in Perry's eyes was being replaced by a curious heat which had been ignited in the dark depths of his pupils. \"Take off this shirt.\"\n\n\"Yes, ma'am,\" he responded. \n\n\"The verdict is not in on whether or not I'm a ma'am yet,\" I told him as I continued to unbutton his shirt. \"However, let's keep every option open until we're absolutely sure.\" Meanwhile Perry undid the fastener and zipper of his slacks in record time. Letting his pants fall to the floor, my husband grabbed my shoulder with one hand, the back of my head with his other hand, and then he pulled my face right up against his. He clamped his lips possessively onto mine and forced my mouth open. \n\n\"Hey...!\" I had to swallow my own word of protest, when his tongue pushed that single syllable back into my mouth. I abandoned any nominal protest in favor of Perry's explorations. It was obvious that even though I might have hidden a penis deep down in my throat that he was willing to take that chance. Soon Perry's arms swept all the way around me, and, breaking free from that soulful kiss, he lifted me right up off the floor. Gently he laid me down upon our bed, while his hands then became free to explore my exposed flesh.\n\nI was still tugging at his briefs trying to free his midsection. Old habits die hard, I guess. For some reason my mind flashed on a virtual male stripper that Myst had posted on the bulletin boards a few days back, and I remembered how dark his \"tan\" made him seem, and how hot I became just staring at his flaunting erection hypnotically swinging up and back time and again and again and again. Suddenly I knew that whether I possessed a penis or not, I had to put my hands on my husband's wonderfully large and familiar cock. I literally ripped at the waistband of his briefs.\n\n\"Hey, hey! I still need to wear these until we do the laundry.\"\n\n\"I'll buy you more,\" I said between gritted teeth.\n\n\"What's gotten into you?\" He had to have known he was setting up that old joke.\n\n\"Nothing yet.\" My own hands were already stroking Perry's growing erection while he continued to play with me. \"But I have plans for this big fella down here.\"\n\nThen an unexpected new voice from the hallway outside our door broke our concentration: \"Mom! Do you know where my bookbag went?\"\n\n\"No!\"\n\n\"Well, would you see if I left...\"\n\n\"Not now, Trini,\" Perry yelled. \"I'll help you find it later.\"\n\n\"But, Dad...\"\n\n\"Not now!\" we shouted in unison.\n\n\"But I won't be able to do my homework.\" You could hear instant tears begin to well up inside the sound of her voice. Thinking maternally for a split second, I suggested: \"Trini, why don't you play a video game.\"\n\n\"Really?\" she cried out. \"Wow!\"\n\n\"All right!\" another voice in the hallway said. This one was slightly older, very adolescent, and male.\n\n\"And stay away from the God-damned door!\" Perry yelled back. But, as he was able to switch gears quickly, my husband soon used his gentle sweet lips to determine that I was not hiding a cock on the nipples of either breast. I was so proud of him. He pursued his duty like a man obsessed.\n\nSlowly an open handed palm with five spread fingers slid achingly down from my ribs passing over my abdomen and settling there at the fluttery flesh covering the all important passageway where in another time before I became a gay male, I'd managed to conceive three children one at a time. I could no longer reach down and hang onto Perry's marvelous erection as he'd scooted all the way down to rest his face shoulders and neck at my hips and thighs.\n\nA single male digit ran deliciously along the long convoluted folds which fronted my vaginal canal. \"Tell me, Lyss,\" he whispered as his finger loosened me up, worming its way into my moist interior. \"Do you think there may be something lurking inside here?\"\n\n\"Would you mind checking deeper?\" I responded to his stimulating finger movements with a heavy panting growl thickening my voice. \n\nHe continued with a second finger and a third, and though we'd never given each other permission to do this before, Perry used his careful handling of the tissues of my flexible loins to work his entire fist up into the interior of my cunt. I moved very slowly, very cautiously under his ministrations, the effect of his fist was overwhelming, and yet there was a strained excitement going on inside me as well.\n\n\"Well, I have good news,\" he said as he continued to cautiously stretch my vulnerable womb with his huge hands. \"I don't believe that you've got one hidden up in here.\" A single finger touched my cervix, and I nearly jumped in frightened delight. Too much too fast! Perry eased his blunted fist back into a snakey like hand of five long fingers and painstakingly withdrew it. I took a deep breath once that was over.\n\n\"Turn over on your stomach,\" he commanded. \"We have one more major area which I want to examine.\" \n\nI sucked in a startled breath. Although Perry had the good sense to use a fistful of KY lubricant, usually I was reluctant to follow the course which he was leading. \"We'll have to use subterfuge to lure this one out,\" he said. Then pulling my hips up into the air, Perry spread my buttocks cheeks and blew a soft puff of air against my ass.\n\n\"Why's that?\" I asked. Now his fingers were dipping into the cool gel in the tube and then probing past my sphincter into my anxious rectum.\n\n\"Well, some of these renegade dicks are pretty cagey creatures. One of them could be secreted up this way, and we'd never know.\"\n\n\"So,\" I gasped an intake of air as his finger struck a nerve. \"How do you propose to trick it into revealing itself?\"\n\n\"We'll use the call of the wild technique. I'll go in, and if there's one skulking around inside, it'll think that another penis has intruded upon it's territory and will attempt to chase me back out. When it does, I'll strike.\"\n\n\"Strike?\" I queried. \"You're gonna strike? What do you mean 'strike?'\"\n\n\"Don't worry, you'll be perfectly safe.\"\n\nUh-huh, sure I would. His fingers retracted, only to be replaced by something twenty times larger and at least twice as long. Somehow perfectly safe wasn't the phrase that had sprung to the forefront of my mind just now. \n\nOf course, suddenly all that mattered was what was going on behind me. I know that I don't have the best attitude about anal penetration, and I hoped that my mind and body would bend with the flow of the intent of the act. As it turned out my husband's gentle aggression brought me slowly, wickedly, and totally into submission with his movements. He grabbed my hips and mildly forced his solid erection part of the way inward. Then using an extra bit of lubricant, he retraced his motion and then pressed into my ass even harder and deeper than before. I buried my face into the bed mattress to endure the experience of his now dominant and calculatedly slow thrusting, and the next thing I knew, I was moving in sympathetic rhythm to his pulsing demands.\n\nDamn, he's good!\n\nI heard him moan behind me as his speed and his fierceness increased. \"If there's anything hiding inside your tight buns, Lyss, its too damn bad for them now.\" Perry made a sound like a mad bull plowing into an electric fence, and then he gasped out a long erratic hiss of pure energy. \"I'm shooting first, and asking questions later.\"\n\nI now knew what he meant by strike. He had a glorious climax and probably spewed out a flask full of semen into my violated rectum. Then, as Perry collapsed over me, his weight forced my hips down flat against our bed. With his dick still jammed entirely within me, I was shocked by the abrupt change in position which he'd put me through. In spite of the rough aftermath, it was still so exciting that I continued to enjoy the decadent thrill of his penetration. Our actions had been unprecedented. His fervor was completely novel. My experience changed everything about my expectations concerning Perry's big black cock blasting a load of sperm deep inside my ass.\n\n\"I think I've liquidated anything hiding down in here.\"\n\nI tried to laugh, but it felt funny with my anal tissues still stretched and jammed full of his blunt masculine strength. \"No, don't make me laugh!\"\n\n\"Lyssa,\" he asked finally. \"What's a troll?\"\n\nI explained how trolls never contributed any real writings to the site, yet they still hung around the bulletin boards to post crude witticisms most of which they learned before second grade. I also explained the concept of hit and run anonymous e-mails and the dreaded one votes.\n\n\"What're they doing there?\"\n\n\"I think mostly they all want to get laid, but real live people scare the hell out of them.\"\n\n\"That is so you, Lyss,\" he laughed. \"Obsessing about being called gay by some anonymous virgin.\"\n\n\"No. When they get beyond thirty posts they're not virgins any more. They're considered experienced. This causes most of them to frolic in subhuman glee--thus, trolls.\"\n\n\"I don't think I want to know any more.\"\n\n\"I understand.\" I felt the curious relief of Having him pull out from the confines of my rectum, and my body settled down into a langour of pure afterglow. \"God, that was good.\"\n\n\"Still worried about being gay?\"\n\nI shook my head. \"No, sweetheart. Thanks for taking care of it for me.\"\n\n\"Now if we could just do something about your sappy writing.\"\n\nI hit him square in the testicles with my pillow.\n\nFull text of the Borg Collective Sexual Pleasures Book: \"Sexual pleasure is irrelevant.\""
    ],
    "authorname": "Ulyssa",
    "tags": [
        "hiding closet",
        "coming closet",
        "bulletin boards",
        "perfectly safe",
        "bedroom closet",
        "perry",
        "troll",
        "standing naked",
        "fifteen minutes",
        "closet"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/coming-out-of-the-closet"
}