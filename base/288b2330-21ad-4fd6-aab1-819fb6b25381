{
    "title": "The Office Hottie Ch. 06",
    "pages": [
        "Sunday was a good day, my parents invited me over for dinner and, of course, who am I to turn down a free meal so I spent the day with them. Dad smoked some ribs and the only cost to me was helping my mother in her garden. I'm pretty tight her and I enjoy good mother-daughter time. I love gardening too, especially when I come away with free cuttings. Some good friends of theirs ended up coming over plus one of my brothers and his girlfriend so it turned into a little bit of a party. She's a nice girl and tried talking guys with me but I wasn't having any of it so she dropped it. \n\nI took the day off sexually. Although lately I always seem to have that little glow of arousal in the background, I've been too aggressive with my body over the past several days. I like the little tortures I give myself but feel I take it a little too far, sometimes I'm not sure if I know what I'm doing to myself. I was feeling sore in places and needed a break. Having a partner that was into it and would have some control would be nice. I couldn't see anything or anyone in my near future, though. \n\nIn the meantime, I was around good family, good friends and good food and wine. We had a great time but I stayed later than I should have. Monday morning came awfully early it seemed, but I still managed to get ready for work and show up on time. I wore my new dress and was excited about wearing it into the office. It's white with flower prints and blue forget-me-not accents that contrasts my golden skin nicely. I thought It made me look really pretty. It ends a little above the knee, shapes my butt real nice and shows just a hint of cleavage, which means I'll have to be careful who's standing over me today. I know I turned a few heads as I walked into the office.\n\nThe first thing I saw when I got to my desk was the racquet ball. I'd completely forgotten about it and my pussy immediately woke up. I just might need to use that later, I thought naughtily. I logged into my computer then went to the break room to get some coffee and ran into Kelly. \n\n\"Well, aren't you the little hottie today,\" she said as she looked me up and down. \n\nMy kitty purred at that little comment and I could feel my nipples becoming erect. I wish I hadn't wore a thin bra today, things could get embarrassing. Even though I was sexually attracted to her I still managed to keep a good friendship between us. It was difficult but I didn't want to lose that friendship and would not do anything to compromise it. \n\n\"Thanks, Sweetie,\" I replied. \"You look pretty hot yourself.\" And she did. Kelly was wearing a neck high beige sweater that shaped her boobs well, tan slacks that hugged her butt and a pair of black flats. Damn, no cleavage from her today. \n\nHer pretty face was framed by the curls in her auburn hair, her doe-brown eyes accenting her round face and slightly pouting lips that just begged to be kissed. Damn that girl was gorgeous. I was instantly jealous of her husband, my pussy was jealous, too. \n\n\"That sweet little ass is gonna cause some trouble around here,\" I winked and nodded at her butt. \n\n\"Then let it cause trouble,\" she said winking back and flipping a hip at me as she left for her desk. \n\n\"Watch out for cavemen,\" I called to her. \n\nI heard her laugh as she disappeared around the corner. \n\nDamn, I thought to myself. Don't read into that, I thought as I poured a cup of coffee. But I couldn't keep that little comment off my mind. Or her ass. \n\nSifting through the tons of weekend emails helped take my mind off her butt. The majority of it was corporate spam which I deleted, a few I replied to and filed a couple more which would take some research. The racquetball lay in front of my keyboard and seemed to call to me, causing images of Kelly's sweet ass to form in my mind. \n\nDamn that girl, maybe she needs another ass whipping, I thought lustfully. That just seemed to make things worse. \n\nEnough! I've got work to do. I managed to kick out my beginning week reports but I still kept looking at the racquet ball out of the corner of my eye. I picked it up and played with it a couple times then put it back. I concentrated on getting some work done, maybe later in the morning or after lunch I could play. \n\nGrunt, one of the bigger cavemen in my tribe, stopped by and picked up the racquet ball on my desk. \n\n\"What's this for, getting another league together?\" he asked tossing the ball in the air and catching it. Eew, now I'm gonna have to wash it, I thought. \n\n\"No,\" I replied with my hand out. \"I'm using it for hand exercises. Helps with carpel tunnel.\" He tossed the ball back with a grunt and I started squeezing it in my hand. It immediately made me think of what it would feel like under my clit. \n\nGrunt, wandered off in search of someone else to bug. Dammit, my pussy is tingling for attention now. Kelly came around the corner just then to meet with Og, the lead caveman. Mmmm.. she's looking so fine this morning, I thought. The sweater she was wearing really showed off her boobs nicely and her slacks shaped her ass just right. When she bent over I could just see a hint of a bikini panty line on her butt. My X-ray vision caused her pants to disappear and I could tell what her behind looked like wearing only panties. I realized I was staring. \n\nI looked around to see if I got caught, didn't look like it did. Damn, I need to be careful. Showing lusty eyes at Kelly's ass or her tits will get me in trouble here, but I couldn't stop looking and the racquetball was calling. I grabbed it and went into the break room to wash the Grunt off it. \n\nKelly was gone by when I returned but I knew it was only a matter of time before she came back around. I concentrated on getting some work done in the meantime. While putting together a report my stapler ran out and I opened up my desk drawer to get more out of the box. Right there were the bent paperclips I'd used on my nipples last week. I'd forgotten about those, too. I stared at them and felt my nipples respond to the naughty thoughts I was having. \n\nMy pussy was slowly talking me into something I shouldn't be doing. In order to put the paperclips on my nipples I'd have to take the dress off or at least hike it up over my boobs. I was relatively caught up on my work this morning. I finished a spreadsheet I was working on, grabbed the paperclips and headed for the ladies room. \n\nOne of the stalls was being used and my paranoia skyrocketed. I almost chickened out but I bravely went to the far stall and locked the door. Sound seemed to amplify itself in the silent room, closing the stall door and locking it sounded like a gunshot. Just pulling my panties down and hiking my dress up so I could sit down seemed loud. The bathroom was silent, I could hear my own heartbeat thundering in my ears and my breath sounded like a wind tunnel. Peeing resonated in the toilet like I was using a metal bucket. I slowly gathered my dress up and pulled it up towards my boobs, it sounded like dragging a box of bricks over gravel. The other lady cleared her throat and I froze guiltily like I'd been caught with my hand in the cookie jar. \n\nRidiculous, but my paranoia was really high. I slowly and silently pulled the dress slowly past my boobs and over my head. I leaned forward to hang the dress on the hook in the door when one of the paperclips fell out of the pocket and clattered on the floor, echoing around the bathroom like I dropped a rock in a cave. I swooped it up and pulled the other clip out of the pocket.\n\nStill silent. \n\nI sat on the toilet naked wearing only a bra and my panties at my knees. I quietly slid the cups off my boobs to expose the nipples. They were already hard, as they usually are, but I gave them a playful pinch anyway. I winced a little as I put the clips on and had to readjust them until the tension they put on my nipples was just right. Mmmm... that little bit of pressure felt good. I closed my eyes and played with the tips of my nipples, feeling the tips of the clips digging in and sending little sparks driving through my breasts. \n\nI carefully put my boobs back in my bra and silently gathered up my dress to put it on. I quietly slipped my arms in and slowly slid it past my head. Just then the girl in the other stall flushed and I quickly pulled the dress over my boobs, wincing as I brushed my nipples and the paperclips dug in. Oooo... felt nice though, and I rubbed my nipples through the dress to sooth them but only succeeded in arousing them more. \n\nThe girl washed and exited the bathroom. My pussy was a bit wet and I wiped it down before pulling my panties up. I left the stall, washed my hands, and exited the bathroom to see what kind of naughtiness I could get into.\n\nI went back to my desk, grabbed my coffee cup and walked into the break room. I could feel the paperclips digging into my nipples with each bounce of my boobs as I walked. It was a delicious feeling, walking past people, nodding hellos, perving on one of the girls, getting my naughty on, while little jolts if electricity pulsed through my tits. \n\nSasha, one of our admins, was in the break room. She's a quiet girl, medium height, curly blond hair to her shoulders, small nicely shaped boobs about a B cup, a little chunky but very pretty. I chatted with her a bit as I got some coffee and tried to keep my eyes off of her boobs. The paperclips on my nipples made it difficult, and I started fantasizing at what she'd look like naked. With oil on her little tits. And watching her rub the oil on. My pussy liked that little thought. \n\nSasha excused herself and I wandered over to Kelly's desk. God, that girl looked fine. I mentally undressed her as we chatted, thinking back at the video, and imagined her hands tied together, the clothes pins on her nipples, and being fucked in the ass by the dom. For some reason that cock was much bigger than I remember in the video. I had to get back to my desk and calm down before I came uncontrollably in front of somebody. \n\nAll of the girls in our office are attractive in one way or another and I passed a couple on the way to my desk, trading hellos and trying not to check out their boobs as we passed. I could feel my pussy was wet again by the time I got there and double checked my purse for a spare pair of panties as I sat down. \n\nI grabbed the racquet ball and gave it a couple squeezes as I looked around to make sure the coast was clear. I lifted the hem of my dress, moved my hand underneath and shifted my butt to place the ball under my crotch. Mmmm... that felt so good. I missed that feeling, so much different than playing with my fingers and I was hands free. I slowly rocked on the ball, loving the feeling of it pressing on my clit through my panties. My dress covered everything so I didn't have to hide under the desk. I pushed away from my desk with a couple of engineering drawings like I was reading them, letting the world see me as I innocently masturbated in front of every body. \n\nI loved it! Mmm... so sweet, masturbating at my desk, my nipples being tortured from the paperclips, rocking my hips or leaning forward and putting pressure on my clit. Different combinations and positions varied the amount of pressure and intensity of the feeling on my clit. \n\nMy work slowed to a crawl as I manipulated the ball under my dress. I felt an orgasm coming and stopped rocking, pulled the ball out and sniffed it. Mmm... smelled a little like my pussy, I smiled. \n\n\"Does that ball smell good, Lori?\" Grunt suddenly burst out as he walked by startling me. \n\n\"It does, care for a sniff?\" I bravely replied holding it out. \n\n\"No thanks,\" he retorted not taking my bluff as he wandered off. \"You never know where it's been.\"\n\nOh, if you only knew, I smiled to myself. \n\nI was feeling that I'd put the paperclips on too tight, my nipples were beginning to get a little sore. The clips were difficult to bend and get them adjusted right, I really wanted to try the nipple clamps I'd just ordered. I could have gone back to the ladies room to take them out but my naughty mind said no. I put the ball on the desk next to my keyboard and grabbed my coffee cup. \n\nThe break room was empty when I got there. I put my cup in the counter and looked around then reached down the front of my dress and under my bra to pull out a paperclip. I hissed as I pulled the tight clip off and winced as the sensation flooded back into my hard nipple, mmm... but loved that delicious pain. I reached in to get the other one when I hear voices and pulled my hand out of my dress just in time as a couple of Neanderthals from Kelly's tribe came in. \n\nWe traded hellos as I poured a cup of coffee and left the break room. They got quiet and I could feel their eyes burning holes into my ass as I walked out. I passed the conference room then backtracked and stepped inside. I started to reach into my dress and decided against it, the room didn't feel right, not enough warning time if someone came in. Then I thought of our supply room and stepped inside. I went to the far corner behind the shelves that ran down the middle, there was no immediate view from the door so I felt safe. I put my cup down, reached in and pulled out the other paperclip and winced at the sensation. I pinched and massaged both of my nipples through the dress to sooth the them.\n\nI wandered back to my desk, my pussy calling for attention. Kelly was working with Og, the lead caveman, and I was given quite the view of the tight sweater around her tits. I surreptitiously placed the racquetball under the dress and nestled it up against my clit under my panties. \n\nMmmmm... watching her and being able to play with my pussy was so sweet, and so naughty. I felt an orgasm coming on and I let it come. I was prepared for it, looking like I was concentrating on my work. Kelly turned slightly at the last second and I had a very nice look at her tits right before I squeezed my eyes shut and came with a little suppressed grunt. Such sweet timing and a sweet little orgasm. \n\nMmmm... that was nice. I pulled my racquetball out of its play area, kissed it and put it in the desk between the phone and my keyboard. I need to get a little stand for it sometime, I smiled to myself. \n\nI returned to my work but my pussy told me I wasn't done, yet. My naughty meter was pretty high and I needed to amp things up a bit. Not too much, I told myself. \n\nI looked around out of the corner of my eyes and moved one hand to my hip until I felt the waist band of my panties under my dress and slowly worked it down one side. I shifted my weight on the other side of my butt and worked the other side down, all the while clicking and typing. I slowly shifted back and forth a few times working my panties down each side and my back under my dress. It was a slow, methodical, careful, and teasing process but I finally got them as far down my butt cheeks as I could. \n\nNow came the tricky part. With one hand on the mouse making clicky noises and staring at the monitor like I was actually doing something, I put the other hand behind me under my dress until I found the waist strap. I looked around and lifted by butt quickly enough to slide the strap down past my butt cheek. I typed for a while then switched hands with one holding some drawings and my other on my panties, looked around, lifted quickly and slid them past my right butt cheek. \n\nThey were halfway down my thighs and from there it was relatively easy. I typed for a while with my panties half off feeling my naughty meter rise. I scooted my chair closer to the desk, reached up under my dress and by shifting around I pulled my panties down my legs and past my knees. I wriggled my legs until they dropped to the floor and carefully stepped out of them, reached down to pick them up and quickly stuffed them in my pocket. \n\nOoohhh... that was wild and I couldn't believe I'd just taken my panties off in the office with all my coworkers around. My naughty meter was pegged! I looked around making sure nobody saw me and spread my knees under the desk feeling the cool breeze hitting my damp pussy. I just had to make a circuit around the office \n\nI grabbed my coffee cup, got up and walked towards the break room. With no one around, I ran my hand over my butt, the smooth fabric of my dress without any panty underneath felt so nice. The naughty feeling was wonderful as I walked around the office wearing my dress with no underwear. In a way I was naked from the waist down, I giggled to myself. I chatted with a couple guys and one of the girls then went to the break room to get some coffee. \n\nOne of the cavemen was there and we chatted while I cleaned the coffee pot and set it up for a new brew. Somehow I ended up spilling coffee beans on the floor. I didn't think I did it on purpose but maybe my naughty subconscious mind did. I squatted down to scoop them up, making sure my knees were spread just enough for a little show. I could tell he was watching, trying to look down my top and up my skirt at the same time. \n\nI used to be quite the tease when I was younger, especially once I realized the power of boobs over guys. Like my girlfriends, I'd wear short skirts and tight tops that showed a lot of cleavage, especially after my boobs bloomed. If I could get past the door check from my mother, that is. I toned it down years ago, especially once I got into the professional world, but lately it seemed I was reverting back to my slutty days and in a perverse way I didn't mind. It was all I could do to keep from smiling as I watched him out of the corner of my eye perving on me. I was a little mean and bunched my boobs together as I scooped the beans up, giving him maximum cleavage to look at. \n\nI innocently stood up and tossed the coffee beans in the trash and resumed making coffee. I could feel his eyes on my ass, burning through the fabric of the dress in search in my panty lines. Good luck finding it, I smiled to myself. When I hit the brew button I turned around and busted him looking at my ass. I pretended not to notice and chatted about work. He's not a bad looking guy but way too hairy for my taste, like the rest of the guys in the office. I don't mind a little facial hair but styles these days were pushing it too far. I'm not into the pioneer look. My current attitude toward men didn't do him any favors, either. That prick of an ex-boyfriend pretty much did that in. \n\nThe guys in the office stopped hitting on me a long time ago, I'd always had a strict no dating at work policy, if we went out for drinks it was always in a group. I wish a couple of the girls would hit on me, though. I think I'd break that policy for a couple of them, one in particular. The coffee finished brewing and I poured a cup, said later to the caveman and headed back to my desk. \n\nOn the way I passed little Julie, our UPS delivery girl, and we exchanged heys. Our office was constantly sending and receiving engineering packages back and forth to corporate down in the states or other clients and she was in the office at least two or three times a week picking up and delivering. \n\nShe's a short, cute little girl, mid-20's or so, straight shoulder length brown hair with highlights and pretty brown eyes. Petite like me, but no boobs to speak of or at least what you could see from her frumpy uniform. She usually said hello to me and seemed like a nice girl but always had a dour look her face, can't say I'd smile if I had to wear that uniform, though. I can't say I'd ever seen her smile, come to think of it. Seemed like she be very pretty if she did smile. \n\nI was very aroused when I got to my desk but I hunkered down to get some work done. Kelly stopped by as did a couple other office cuties, it was difficult to sit there sans panties and not play with myself as I chatted with them. I wondered what their reaction would be if they knew I was wearing nothing underneath my dress. That got me even hotter. I loved the little tease I was giving myself but was getting to a point where I needed to do something about it. ",
        "I couldn't stand it anymore and looked the racquetball on my desk. I'll need to plan for this, the last thing I need is to leave evidence on my chair. I quickly went to the break room and grabbed a clean rag and looked around to see if anyone was watching as I got back to my desk before putting the rag on my chair. I sat down on it, reached for the racquetball and put it in the play area under my dress. \n\nOhhh.. that was really nice. My wet pussy lubed the ball up so well it kept sliding out and I had to keep my legs together to keep the ball in place. That put the pressure on even more and I could feel an orgasm coming. Damn, it was too soon, I wanted to enjoy my play for a while. Against my better judgement I edged the orgasm away but it lingered on the horizon, calling me, begging to come home. \n\nThe feeling was really intense. More so than I realized, the pleasurable feeling as I ground my pussy on the ball was sweet, exquisite. I looked around, no one was paying attention as I rocked my hips. By not wearing panties I found I could lift my butt and position my pussy right on top of the ball, like it wanted to devour it. The orgasm was coming again and I knew I shouldn't hold it back. I realized I was rocking pretty hard on my chair and I backed off, I must have looked like porn star, humping my chair. \n\nI was starting to get embarrassed, I'd gone too far with it and I was visibly sexually excited at my desk in the office. I should have gone to the ladies room and finished up a long time ago. I moaned to myself as I rocked my hips, my clit grinding in the ball squeezed between my legs. \n\n\"Lori, you okay?\" one of the cavemen suddenly asked as he walked by, startling me. \n\nFuck! That almost made me cum right there! I just realized the place was crowded, a meeting had just gotten over and people were spilling out of the conference room. \n\n\"Yeah,\" I replied, embarrassed. \"Just a little stomach ache and I've got a headache.\" I put my hand on my forehead and leaned on the desk to fake the headache and hide the fact that I was about to cum. \n\n\"Ok, you need something?\" he politely asked. \n\nI waved him off. From the look on his face I'm not sure he bought my story but he wandered away. Fuck, I shouldn't have done this and the place is fuckin' packed now, as I looked around. I needed to cum but knew I'd put on such a show in front of everybody if I did and I couldn't escape because of the rag I was sitting on. I couldn't even take the ball out and had to hold it in for fear it'd go shooting across the floor. That just drove the intensity up. \n\nFuck, this was driving me wild! I did my best to keep my ass still and hide my sexual hysteria. C'mon people, leave, its Grand-Fucking-Central Station in here! In could barely stand it anymore and felt like I was going to cum any second. I was caught between a rock and a hard place, forced to edge the orgasm off and knew if I came I wouldn't be able to keep still let alone keep it quiet. The longer I edged it the more powerful it was going to be. \n\nGradually people started filtering out to where I could make my escape. When it got thin enough I grabbed the pussy soaked ball and the rag and bolted for the bathroom. I ran inside to find all the stalls were full. Fuck, my pussy was aching, right on the edge and begging me for an orgasm. I ran to the only other possible sexual sanctuary in the office, the supply room, praying no one was inside. \n\nThankfully it was empty when I got there and moved to the far corner behind the shelves. I put my foot up on the shelf, pulled my dress up and grabbed my clit, scrubbing it back and forth. My eyes rolled into the back of my head and I tried to keep from moaning at the pleasurable sensations sweeping over me. Please, please, please, don't let anybody come in here, I prayed to the office gods. Maybe I should have locked the door on my way in, the risk of being caught was so much higher which only intensified my sexual arousal. \n\nI came with a shudder, my body spasmed and I grabbed the shelf to keep from falling, my pussy greedily sucking my fingers. Waves of sexual energy washed over me and I squeezed my eyes shut and gritted my teeth, whispering curses and gasping at the power of my orgasm, hoping like hell no one would hear me. \n\nMy knees were weak and wobbly, I could barely stand as I hung on to the shelf. I leaned back against it to get my breath and strength back, the sexual fire of my pussy ebbing. Damn, that was a close call. \n\nOne of the girls came in just then and I quickly fumbled through some folders like I was looking for something. I nonchalantly gave her a \"hey\" as I left in a hurry and tried the bathroom again. A stall was open and I quickly hid inside. I caught my breath, all arousal and naughtiness had left my body. I felt humiliation and embarrassment at my last little adventure, it was too much and surely everybody knew. \n\nI peed while I was on the toilet and cleaned myself up. I sat there a while until I figured it was time to try and get back to normal, get some work done and deal with whatever fallout there was. I reached for my panties in the pocket of my dress to put them on. I flushed the toilet, exited the stall then washed my hands and the racquetball. I braved up and sheepishly left the ladies room. \n\nThat was a close call, but as I walked back to my desk I saw everything came back to normal and all was well with the world. The entire office seemed oblivious to my sexual escapade. I breathed a sigh of relief and realized planning and the need to stay attentive is key to a comfortable orgasm at work. \n\nMy phone buzzed with a text from a friend and I texted her back. While I was waiting for a reply I checked my email and found a notice from the toy company saying my cock was in the mail. Mmmm... my nether regions started getting warm at that thought, it'd been too long since I had a cock in my pussy. Sad it was gonna be next week before it showed up. \n\nThe anticipation is gonna drive me wild."
    ],
    "authorname": "Lorelei907",
    "tags": [
        "lesbian sex",
        "masturbation",
        "office",
        "public",
        "public masturbation",
        "office sex"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-office-hottie-ch-06"
}