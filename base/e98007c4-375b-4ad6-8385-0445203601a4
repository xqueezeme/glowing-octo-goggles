{
    "title": "The Virgin Valentine",
    "pages": [
        "I looked down at the little box in my hand. I had debated on whether or not I should wrap the gift. Nobody had ever wrapped a Valentine's gift for me before, but then again, I'd never really received many gifts on Valentine's Day to begin with. It almost felt silly, but in the end, I decided it was better than just handing it over as it was. The book was in my hand now, carefully wrapped in gold paper. It had taken a few tries to get the folds even, and there was still room for improvement, but this would have to do. There wasn't time for a redo. \n\nOne final check over the apartment and I was satisfied the place was clean enough for the occasion. Gwen had been my girlfriend for seven months now. She had seen my place in pretty much every state imaginable, but this would be our first Valentine's together, and I wanted things to be in order. Especially since my roommate was rarely in the cleaning mood. Lucky for me, he had left this morning to go see his boyfriend, and would probably be gone for the rest of the day. Gwen and I would have the place totally to ourselves, complete privacy.\n\nI quickly wiped the grin from my face. As someone with a modest amount of sexual experience under my belt it was easy to get carried away in fantasies, especially with a girl as lovely as my Gwen. She was short and slender, with dirty blonde hair and blue eyes, and a smile that would melt hearts like butter. She had the look and figure of a girl right out of the swimsuit catalogs, but Gwen was sweeter than any girl I'd ever known my whole life.\n\nShe was also a virgin, and somewhat new to the world of sexuality, which was why my fantasy inspired grin was short lived. For most of her teenage life, Gwen and her siblings had endured a conservative lifestyle. Raised as a devout Catholic, she spent less time worrying about sex and alcohol and more time worrying about her grades and future. It wasn't until she finally left her parent's roof and entered the new and exciting world of college that Gwen decided to explore the naughtier side of adulthood. \n\nYou could probably say I was a huge part of that \"corruption,\" as she called it, but I saw no reason to feel guilty. I never pressured Gwen to do anything, usually letting her take the lead and make her own suggestions. It started slowly at first, with the simple act of sleeping in the same bed together. That graduated to second base, with her allowing me to feel her chest while making out, and eventually Gwen found the courage to give me a blowjob, her first ever. It was wonderful, and I'd been eager to return the favor. She conceded a few days later, letting me slide my hand into her panties to deliver the first orgasm she'd ever had that wasn't her own doing.\n\nIt was slow progress, and at times it was hard to be patient. After all, I wasn't a virgin myself, and it was difficult to ignore the urges every time she came to visit, always wearing those form-fitting jeans and dresses. But, as strong as those desires were, she was still too shy, and nervous, to go all the way. I didn't blame her. She'd only had one boyfriend before I came along, and that had ended in disaster when he realized he wouldn't be getting in her pants for a while. Naturally, that made a girl cautious, but I was determined to prove that I was worth the risk, no matter how long that might take.\n\nBecause despite the lack of sex, there were an infinite number of reasons why I loved this girl. Beauty was one thing, of course, but I'd been lucky enough to find a girl with the whole package. She didn't flinch at my unusual sense of humor, and would always laugh at my stupid jokes, no matter how terrible. She was smarter than I could ever hope to be on my own, studying to become an architect and learning Japanese on the side, just for the challenge. And holy fuck could she cook! Years of growing up in a strict household meant learning to help in the kitchen from an early age, and lucky for me, her mother knew all kinds of amazing recipes. I'd almost worry about gaining weight, if it weren't for her constant insistence that we go on runs together whenever possible. She was good for me, heart and body.\n\nAll of this, and more, made Gwen the best thing to happen to me in a long time. Even if it took another seven months to take the next step in the bedroom, I would gladly wait for her. Women like this were worth a little patience. \n\nBesides, she had an unnatural talent when it came to oral sex, and more often than not she would be the one to initiate, which meant I never had to ask for the favor. Who could possibly argue with that?\n\nThoughts like these came with certain images, conjuring in my mind from memory, and soon I was growing hard beneath my boxers. It wasn't uncomfortable, but I instinctively checked my watch to see if I had enough time for a quick solo session. \n\n4:54 PM. Gwen would be knocking on the door any minute now, her final class for the afternoon now dismissed. No, definitely not enough time to masturbate, but I figured it wouldn't matter. I'd be too distracted trying to make Gwen happy once she'd arrived, and if my needs were still a problem this evening, she would probably take care of them one way or another. Our nights together usually ended with orgasms.\n\nI shook my head, pushing away the naughty images. Today was supposed to be about romance, right? Gwen would disagree, arguing that this was a holiday commercialized by the industries that profited the most this time of year. She wasn't a materialistic girl, something else I loved about her, but she certainly hadn't complained when I offered to make our dinner for tonight. \n\nThe stiffness was gone by the time I heard knocking at the door. I answered to find Gwen smiling up at me, her flowery dress and sandy hair blowing gently in the February breeze. It was impossible not to smile back. Opening the door for her was always like meeting again for the first time. \n\n\"I'm sorry, I think you have the wrong apartment,\" I said, feigning confusion. \n\nGwen rolled her eyes at me, expecting some sort of joke. \"Oh, I do?\"\n\nI nodded and pointed up. \"Heaven is on the top floor. Right next to the Starbucks.\"\n\nShe giggled, and my heart melted just a little bit more. \"Well, you'll have to excuse me for the mistake. I thought it might be somewhere close by, since your head is always in the clouds.\"\n\nIt was my turn to laugh, and I leaned in for a quick kiss, the kind you give your girlfriend in public when other people are watching. I stepped aside and let her in, wondering if any of her lipstick had transferred to my lips as I closed the door. As soon as I turned back to her, however, Gwen threw her arms around me, leaning up on her tiptoes as my arms wrapped around her, pulling her up to my lips for a kiss that wouldn't have been acceptable in most public situations. By the time she finally let me go, I would have been disappointed if her lipstick hadn't left its mark. \n\n\"Been holding on to that for a while, haven't you?\" I asked, touching a finger to my lip, checking for a stain of red. \n\nGwen winked at me in reply. \"I got your flowers earlier. It's had me feeling good since this morning, I'll admit.\"\n\nI nodded. \"Glad you liked them. Feel free to kiss me like that whenever you want.\"\n\n\"Oh, I plan on it,\" she replied. I detected a bit of naughtiness in her tone, but decided not to overthink it. I then remembered her gift, waiting for her on the couch.\n\n\"Well, roses and dinner aren't the only present I have for you.\" I put my arm around her as I spoke, leading her gently over to the sofa. I couldn't help but notice that she had arrived empty handed, save for her purse. I knew she had a somewhat dim view of Valentine's, so it wasn't completely surprising that she hadn't brought anything for me. I didn't mind, I just wanted to see her reaction when she unwrapped her next surprise.\n\n\"You really shouldn't have bought me anything else,\" Gwen said as she took her seat, accepting the package as I handed it over. \"Dinner is more than enough. It's a rare treat, after all.\"\n\nShe was mocking me just a bit, but I wasn't going to apologize. My talents in the kitchen could never rival hers. I motioned for her to open her gift and she took a few seconds to admire the effort I'd made with the wrapping. She tore the paper away gently, as if she were ashamed to ruin the work I'd done, but that guilt quickly dissipated when she finally revealed the book waiting for her beneath. \n\nLearning Japanese was one of the things Gwen enjoyed most, but her oldest pleasure lay in poetry. She liked regular books as well, reading stories both old and new, but the majority of her bookshelf held collections of poetry. Knowing this, I had found for her the perfect gift. The piece in her hands was a collection of Japanese haikus, written in their original language. Two birds, one stone.\n\nHer eyes were filled with joy when she turned back to me. \"Ryan, this is amazing! Where did you even find this?\"\n\nI shrugged nonchalantly. The truth was less romantic that I cared to admit. I simply had asked one of my professors (World Literature, of course) if she knew of any books about Japanese poetry. She had kindly traded me this one in exchange for not fucking her over during the online evaluations at the end of the semester. I hadn't planned to anyway, so it was an easy bribe to accept. \n\nGwen gave me another one of her passionate kisses, and I briefly wondered if every kiss from this day forward would feel this great. I certainly hoped so.\n\n\"Thank you! You really didn't have to do this for me, but I'm glad you did.\" Gwen's smile was wide and bright. I was hooked on her happiness like a drug, and this was the fix I craved. I went in for another kiss, and this time I let my hand wander to her cheek, caressing her gently as her tongue found mine.\n\nWhen we finally parted, she eyed me for just a second, then began to giggle again. I raised an eyebrow in confusion, but it didn't take me long to figure out where the laughter was coming from. Her lips were noticeably less glossy, which meant mine were noticeably more red.\n\nGwen stood, giving me one tiny peck on the cheek before starting towards the bathroom, purse in hand. \"I'm going to fix the damage you've caused,\" she said, searching for a tube of lipstick as she walked. \"While I'm gone, you can make yourself busy with that promise of dinner.\"\n\n\"Don't get your hopes too high,\" I answered as I climbed to my feet. \"You're okay with boxed macaroni, right?\"\n\nShe giggled. \"Sounds perfect to me!\" \n\nShe then disappeared into the bathroom and I made my way to the stove. It was cute that she would be perfectly fine eating a quick and boring meal with me, but I had no intention of treating her to a pot of instant pasta. The steaks were at room temperature and ready for the skillet.\n\nCooking didn't take long at all. I refused to let Gwen help in the kitchen, despite her protests, but allowed her to pour our wine and set the plates. She kept me company while I roasted potatoes, and seared the meat with butter and thyme. The sun was still on the horizon when we eventually retired to the den with our dinner. \n\nIf I'd ever doubted my culinary talents, I need not worry. Gwen devoured every bite, reminding me every few minutes how incredible it all tasted. Her plate was clear before mine, a rare achievement in this relationship. I took pride in that accomplishment, even as a blush of embarrassment flashed across her cheeks. I gave them a kiss for good measure.\n\nShe insisted on helping with the dishes, pointing out that I'd promised dinner and nothing more. I thought it best not to argue, especially if it meant the cleanup was done faster, giving us more time to sit with our fresh wine glasses and enjoy the rest of the evening. \n\nThe talk and laughter on the couch was short lived, as was the fresh application of her lipstick. She leaned in first, ending my anecdote as she pressed her lips to mine. Her tongue parted the divide and I grew powerless to her touch. She leaned in closer with every second, and before I could protest she was climbing into my lap, straddling me with slender legs on either side of my own. It wasn't the first time I'd found her in this position, and the effect was always the same. I grew stiff below her dress, pressing my crotch against her panties, knowing they would be damp to my touch. \n\nI could predict what might happen next, and my excitement grew as the images formed in my mind. I grinned, imagining the red stain she would leave around my shaft as I worked her body with practiced fingers. As if reading my mind, Gwen released my lips and peered into my eyes, nervous as she spoke her next words.\n\n\"Ryan, you've been super patient with me, and I want you to know how much I appreciate it. I know it's frustrating, waiting for me to step out of my comfort zone.\"\n\nI smiled in return. \"I really don't mind, Gwen. Take all the time you need. I'll never pressure you.\"\n\nShe returned the smile. \"I know you won't. You're really sweet like that. But, since it's Valentine's Day, I wanted to give you a gift.\" She wiggled a bit in my lap, and I knew my erection was obvious beneath her.\n\n\"You don't have to, sweetie.\"\n\n\"I know, but I really want to. I'm still not quite ready for sex, not yet anyway, but I want to try something new, if that's okay? It's something a friend told me about, and, well, I thought maybe it would be good for us to take a step further?\"\n\nI was curious as to what this next step might be. She was already prone to giving me oral sex. What could possibly be on her mind now? Whatever it was, I would gladly indulge her, and if it came to pass that she wanted to slow down, I would honor that wish as well. Even if my cock was begging for something soft and warm.\n\nShe gave me one final kiss before returning to her feet. I could tell she was nervous, but determined. Standing before me, she first slipped out of the cardigan that covered her arms. She tossed it to the couch beside me before slowly reaching around to her back, pulling the zipper of her dress down to its final resting place above her ass.\n\nThe strip tease was slow, and I enjoyed every aching second of it, my mouth watering as she slowly wiggled the dress down past her hips. It was a strapless, and her breasts were now bare before me. Her nipples were small and pink, begging for my lips, but I held my place on the couch like a good boy and waited for my reward. My eyes followed the dress south as it fell to her feet, revealing a pair of lacy pink panties below. They didn't look cheap, and I suspected they were purchased specifically for the occasion. \n\nShe slowly stepped out of the dress, kicking it softly across the hardwood floor as she stood for my viewing pleasure. She looked incredible, and the bulge forming in my pants would be impossible to ignore much longer.\n\n\"I hope I get to see you in those more than once,\" I said, hearing a giggle in reply. I'd seen Gwen naked before, but there was something about lace that drove me crazy with lust. The material was nearly see-through in the front, leaving very little to the imagination. I was surprised to see what appeared to be smooth skin waiting beneath, rather than the dark triangle of short brown hair I was accustomed to. I couldn't see the back, but I suspected she was wearing a thong, a rare addition to her typical panty collection.\n\nShe stepped a bit closer and I eagerly put my hands on her waist, as though asking for permission to explore further. She leaned in for a kiss, her perky breasts begging for a squeeze as they came within my reach. Instead, I brought my hands to her cheeks, gently guiding her lips to mine. We lingered there for some time, enjoying the warmth until eventually she pulled away with a grin on her face.\n\nStill full of surprises, Gwen took my hands in her own and placed them back on her waist, guiding them slowly down to the lace and stepping forward so that I could feel her ass. My suspicions were confirmed as my fingers traversed from textured lace to soft skin, further fueling my arousal. I couldn't wait to unwrap my gift.\n\n\"Go ahead,\" she whispered softly, as though someone else might be listening. \"Take them off.\"\n\nI needed no further coaching. My thumbs looped into her waistband and, resisting the urge to rip them off, I slowly tugged the panties down her thighs. The lace glided over her mound, smooth as glass just like her slender legs. I took my time as I gradually revealed her sex, pulling until her panties finally uncovered her lips. A tiny thread of her arousal connected the lace to her body, and for a brief moment I considered diving in to lick it clean. But that was something we hadn't before, and I didn't know if was what she wanted now, so I logged away the memory for later and continued to remove her underwear. \n\nNow that the waistband was past her hips and ass, it was a simple matter of letting the garment fall the rest of the way down her legs to her ankles. She stood in them for just a few seconds as my eyes soaked in the view. I tried not to stare, but Gwen's bare mound was impossible not to notice, and I appreciated that she'd don this just for me. \n\n\"Do you like what you see?\" she asked, again in that seductive whisper.\n\nI met her eyes with mine, and nodded with a mischievous grin across my lips. I couldn't find the words to properly describe how sexy she was in this moment, so I remained quiet. My actions would do the speaking for me regardless.\n\nThen, in yet another surprise, Gwen turned on her heels and planted herself in my lap, wrapping her arms around my neck. She was generous enough to center herself on my leg, rather than my crotch, correctly assuming that I'd be hard as stone and prone to injury. I could already feel the denim growing damp beneath her.\n\n\"Good,\" she whispered, followed by another giggle. Then, taking my hand in hers, she guided me up to her chest, covering her nipple with my palm as my fingers instinctively delivered a gentle squeeze. She moaned for me, a reminder that this would always be one of her favorite places to be touched. The moans grew soft as my lips traveled to her neck, delivering soft nibbles as I continued to tease her below.\n\nMy balls were growing tight beneath my boxers, begging for me to empty them inside of Gwen's body one way or another. I knew she had something special planned, but I still had no guess to what it could be. The only thing I knew for certain was that I needed to cum in the near future.\n\nI was already imagining the various ways this could be accomplished when Gwen suddenly rose from her seat on my leg. My eyes naturally wandered to my jeans, quickly finding the dark spot she'd left in her wake. Gwen was hornier than I'd ever seen, and I was dying to give her the relief she deserved. It wouldn't be a completely selfless endeavor, I'll admit. \n\n\"Okay, it's your turn to get naked,\" Gwen said, no longer whispering as the glee returned to her voice. Before I could argue, she was on her knees in front of me, hands already working at the button and zipper of my jeans. While I'd taken my time undressing Gwen, she was a bit less patient with me. The jeans came off quickly, sliding past my socks and landing next to her pile of discarded clothes nearby. My boxers did little to hide what waited beneath, the fabric flexing rhythmically as the throbbing continued. Gwen looked with hungry eyes at the temple erected in her honor, giving me another grin that only raised it higher.\n\nHer fingers wrapped under the elastic, and in one fluid motion she pulled my underwear down my legs, freeing my cock as it flipped back to stomach. The tiny bead of precum somehow survived the journey, gleaming like a beacon at the tip. Gwen didn't slow down as I had with her panties, eager to rid me of my boxers quickly. Soon they joined the other clothes in the pile, along with my socks. She made no move to remove my shirt, and I saw no reason to argue.",
        "Blue eyes studied me for the longest time as she gently stroked my shaft with her fingers. She used my own precum to wet her fingers, sliding them gently along my length before licking them clean. I nearly blew my load as I watched her suck on each digit, but curiosity kept my head in the game. I wanted to know what new and exciting things she had in store for me. She didn't keep me waiting long.\n\n\"I'm going to need you nice and slippery for this next part,\" she said as she took my hand. She remained on her knees, but beckoned me to rise to my feet, pulling gently at my arm until I complied. I made no complaint, and soon my cock was swinging just a few inches from her waiting lips. I knew what was coming, but the sensation of her lips wrapping around me was something I'd never grow tired of.\n\nI groaned as her mouth engulfed me, starting with the shimmering tip and slowly working her way down my shaft. I watched from above as her head bobbed further and further down my manhood. She'd never be able to fit all of me, but it was certainly enough to do the job, and in just a few minutes she had found a steady rhythm. \n\nThere was a mirror on the wall across from where I stood, something my roommate had put up for decoration. I'd never cared for it, but now I was grateful for the addition. When I wasn't looking down into her blue eyes as she looked up at me, I was looking up at that mirror, enjoying the view of Gwen's backside as her head bobbed along my shaft. Her tongue had some experience by now in pleasuring me, and she knew all of my weak spots. I groaned again and again as she teased the underside of my cock, urging her to carry on. Her fingers latched to my hips for leverage, leaving only for brief moments to play with my balls, testing if I'd shaved them recently. She would be pleased to find that I had.\n\nDespite my impressive stamina, blowjobs from Gwen usually didn't last very long. She knew what she was doing by now, and she did it quite well. She also wasn't opposed to swallowing the end result, which meant I could focus more on pleasure and less on having to pull out. Perhaps with this knowledge in mind, Gwen didn't continue for long.\n\nShe peered up in to my eyes and slowly stroked my shaft with her slender fingers, testing how slippery I'd become. It was impossible not to pout, longing for those lips to reclaim me, but Gwen was planning something more than just a blowjob.\n\n\"Don't worry babe, I'm not done with you yet,\" Gwen said, perhaps sensing my desire for her to finish me. \"I just need to make sure you're all lubed up for me.\"\n\nShe slowly rose to her feet, close enough that my cock remained pressed to her belly. I could already feel her saliva beginning to dry on the surface.\n\n\"I'm not sure it's going to stay slippery for long,\" I reminded her. It probably sounded like a please to continue the blowjob, but I truly worried this might foil her plans.\n\nShe giggled, reaching for her purse. \"Don't worry, I came prepared.\" Her hand wandered inside for a moment before retrieving a small bottle of lube. I raised my eyebrows a bit as she opened the top to break the seal. She giggled again. \"Don't get too excited!\"\n\n\"Too late,\" I replied, glancing down to my erection, still strong and ready for action.\n\nAnother laugh escaped her lips, but she didn't respond to my joke. Instead, she positioned the bottle over my penis, giving me little warning before the stream of cool liquid made contact with the sensitive skin. She passed it up and down my length, using her free hand to stroke me until I was shiny and slick from base to tip. It was a wonderful feeling, once the cold chill passed.\n\n\"Have you ever heard of a thigh-job before?\" Gwen asked, catching me off guard.\n\nI hadn't really, but it was easy enough to figure out from the name. \"I think I get the idea. Is that what you want to try?\" \n\nShe blushed a bit, but giggled. \"I know it sounds silly, but I figure why not? It's kind of like having sex, and it'll be something new and different for both of us.\" Her smile wavered a bit, hesitation slowly creeping in. \"I mean, if you think it's silly we don't have...\"\n\n\"No! No, no, no, I think it's a great idea,\" I said, watching her doubts dissipate into another grin. \"I'm just surprised you thought of it.\"\n\nShe blushed again. \"Like I said, a friend suggested it. She tried it with her boyfriend and said it was...anyway, never mind all that. I'm getting a bit antsy here.\"\n\nIn yet another surprising move, Gwen held up her hand and squeezed another generous stream of lube onto her palm. Putting the bottle aside, she quickly began to apply the slippery liquid to her thighs, soaking the gap completely. I couldn't help but notice the way she glistened before her fingers ever touched her skin. I suspected much of that shine would be from her own arousal.\n\nFinally satisfied, Gwen turned back to me. \"Are you ready?\" she asked, wiping her hand clean on her chest.\n\nI nodded my answer, eyes wandering from her grin to the tiny triangle of light between her legs. It was all the motivation she needed. Gwen turned, presenting her ass to me as she bent her waist, hands on the arm of the couch for stability. She turned back to me, eyes hungry with anticipation.\n\nI stepped closer and let my cock hover just a few inches from that tight, slippery gap. I realized how easy it would be to slip into a different area entirely, but quickly waved the thought away. She simply wasn't ready for that just yet, and I would respect her wishes. In the meantime, I fully planned on enjoying the ride I was about to give her.\n\nDespite her eagerness, was still pleasantly surprised by the sudden contact, gasping in delight as the tip of my cock slid gently between her thighs. I gradually filled that triangle with throbbing flesh, groaning with every inch. The lube made it easy work, and I reminded myself to push slower, teasing the moan from her lips. I kept my hand on my shaft, applying just a slight amount of pressure against her lips as I slid forward, teasing her lips with my erection. The veins in my cock were bulging along its length, adding a bit of texture as I pressed against her labia and clit. \n\nShe shut her eyes and moaned louder, not daring to catch her breath until my hips were firmly seated against her rear. I could only imagine what it would be like when I entered her for real, but I had to admit, the sensation of being between her legs alone was more than I'd bargained for. Her frame was tiny beneath me, and her thighs remained tightly wrapped around me as I squeezed through. The warmth of her body gave way to cooler air, the head of my cock now within her sight on the other side.\n\n\"How does that feel?\" I asked it already knowing the answer.\n\nShe turned back to me, biting her lip once more. \"Fucking wonderful!\" I believed her. I'd only had sex with a few girls before Gwen, but I knew the difference between water based lubricant and the real thing. I wondered silently if I would find creamy white on my shaft when I pulled out. \n\n\"Do you like it?\" Gwen suddenly asked, sensing my hesitation.\n\nI dispelled her doubts with another grin. \"Let's see if I can rock your world.\" \n\nBefore she could reply, I pulled myself backward, the head of my cock disappearing again into her gap and rubbing against her lips. Gwen's moan was answer enough, but the true motivation came from the sight of her arousal as it covered me. There was no way I was going to let it go to waste, and I quickly pushed back into her, filling that triangular void as if it were the tight little hole just above. \n\nShe leaned further into the couch, angling her body so her clit would maintain pressure against my rod. If this had been actual sex I would have gone much slower, easing gently into her until her body could accommodate my size. With this, however, there was nothing to worry about. I wasted no time, thrusting faster and harder as her little gasps of pleasure filled the room. \n\n\"Oh fuck!\" she gasped between thrusts. \"Please, don't stop!\"\n\n\"Not until I feel your cum flowing down your leg,\" I answered, surprising even myself. Dirty talk wasn't part of our usual routine, but I was glad to find that both of us were enjoying ourselves. I no longer had to keep my hand on my shaft, standing high enough against her shorter stature that my erection remained firm against her womanhood. \n\nThe tingle returned to the tip of my cock, reminding me that Gwen's little tease had brought me closer to orgasm that I would have preferred. Once again, I found myself imagining the scene that would soon transpire. Me, thrusting harder and faster between her thighs, her nails digging in to the couch as I groaned out my orgasm. Cum would erupt from my tip just as it pushed back into her view, a pearly rope soaring beneath her breasts and coming to rest on my own furniture. The next would be trapped between her legs as I pulled back, pooling in that tiny triangular space and dripping down her thigh, mixing with her own juices.\n\nI closed my eyes as I envisioned the mess I would leave on her body, willing myself to hold on just a bit longer. I wanted to cum, but more importantly, I wanted Gwen to cum with me. I could practically hear her moan already, loud enough to wake the neighbors.\n\nIt was in this moment, lost in my own thoughts, that the slip occurred. \n\nI pulled back just as Gwen's arms began to go weak with ecstasy. She tried to compensate, pushing herself higher and straightening her arms. Her body angled once more, just as I began to thrust forward. Rather than the squeeze of her thighs, I felt the tip of my cock begin to penetrate her virgin hole. I froze, immediately aware of the mistake we'd made.\n\nGwen gasped in what I could only assume was a mixture of pain and pleasure. I was careful not to move, afraid that I might push deeper inside. At the same time, Gwen made no movement away from me, and I was afraid that pulling out might cause her more pain. And so I stood there, head and crown still sheathed in her slippery warmth.\n\nEventually, Gwen's breathing returned to normal, and I thought it safe to pull out. Slowly, I eased backward, listening carefully as I did. She gasped once more as I exited her body, but to my relief this one sounded more pleasure than pain. Perhaps I was being a bit paranoid?\n\n\"I'm so sorry, Gwen.\" I could already feel my erection beginning to fade. \"It was an accident. I just kind of slipped.\"\n\nShe straightened her back slowly, but when she turned to face me she was smiling. \"Not exactly how I imagined it would happen, your first time entering me. But don't worry so much, it's perfectly fine!\"\n\nI sighed in relief, glad to see she wasn't upset. \"Are you mad at me?\"\n\nAnother laugh. \"Of course, not silly! It was an accident, and I'm fine! Seriously, don't worry about it.\"\n\nWith that, she pulled herself in to me for another long, passionate kiss. Her breasts pushed firmly against my own chest, and the sweat on both our bodies caused her nipples to slide against the smooth skin. My erection was quickly returning, but I wasn't sure if that was such a good thing. As though reading my mind, Gwen broke the silence.\n\n\"Now come on, I'm not putting my clothes back on until both of us have had an orgasm!\"\n\nWhatever dread remained inside of me disappeared with her words, and I reached down to grab her hips, determined to make up for the little mishap. To my surprise, Gwen pushed my hand away gently.\n\n\"Actually, perhaps we should try a different position?\" she suggested. \"Might make it easier to avoid another slip. Besides, my arms are getting tired!\" \n\nGwen laid on the couch as she spoke, lifting her heels high above her, legs stretched out to nearly straight. Her thighs still glistened wet, and any reservations I had about making a mess on the couch were quickly overcome by my own horniness. I climbed up and put her ankles around my head, holding her thighs together as I searched for her thigh gap with the tip of my cock, careful not to repeat my earlier mishap. \n\nThe angle was quite different, but as I slowly slid back into position between her thighs, I was pleased to find that this would feel much better. Her clit would rub gently along the underside of my cock with each thrust, a much more sensitive area than the top. The smoothness of her mound was a welcome treat, and I realized now why Gwen had decided to shave for the occasion.\n\n\"Don't keep me waiting,\" she teased below me, playing with her tits. \"I'm so close to orgasm I can practically feel it. Come on Ryan, don't you want to make me cum?\" She bit a finger between those pouty lips, teasing me like a pro.\n\n\"Yes ma'am.\" With one leg off the couch and the other knee firmly planted on the cushion, I began to thrust again, careful not to slip out of her gap. It was much easier in this position, and her legs were angled to give me a glorious view of the action below. I picked up the pace, pushing faster with every second, and her moans grew louder in kind.\n\nWithin minutes Gwen's eyes were shut tight, and her hands flew to the arm of the couch above her. I watched her tits push higher as her back arched below, the first indications that she was on the cusp of orgasm. She was close, and this only fueled my desire to please her. I thrust harder between her legs, glad to feel the added juices from her body to make the task easier. The gentle sound of my balls smacking against her lips grew louder as I pounded, a reminder that I would probably cum soon as well.\n\nIt then dawned on me that in this position there were only a few places my cum could go. New images filled my head, but before I could push them away, Gwen's squeal announced her climax. She had finally cum, and suddenly the images in my head were becoming reality before me.\n\nMy eyes were closed as we came simultaneously, her moans and gasps giving way to a new sound altogether as the tingle in my cock became true release. Beneath me, Gwen began to tremble with pleasure as he waves of bliss overwhelmed her. I felt this despite the throbbing in my manhood as my balls began to empty on to Gwen's body. I didn't need to open my eyes to know I'd made a mess. I continued thrusting as I came, a soft groan the only other sign that I was cumming. I felt the powerful ropes leave my body every time I pushed through to the other side, until my orgasm came to a quiet end with my tip between her thighs. \n\nWhen I finally opened my eyes, the first thing I saw was the small pool of pearly semen gathering around Gwen's pussy, flowing around her lips as I finished ejaculating between her thighs. My eyes then traveled north along her body, from her tummy to her heaving chest, all of which I'd claimed with my own seed. I finally met her eyes, surprised to find that even her lips and chin were marked with pearly white.\n\nGwen had given me blowjobs before, but each had ended with her swallowing my load. I'd never asked her how she felt about finishing anywhere else, let along on her face. I felt a bit awkward at the moment, but her trademark grin flashed up at me as she traced a finger along her jaw, pushing my cum between her lips for a taste. \n\nHer eyes eventually went lower to study the aftermath on her slender body. \"Oh my, you definitely made a mess on me, Ryan, Marking your territory?\" she asked, still grinning.\n\nI laughed. \"Sorry babe. I probably should have asked.\"\n\n\"Don't be sorry,\" she answered. \"I'm definitely okay with this.\" Her hand traveled up to her breast now, where she found more of my semen to play with. My erection, which had slowly begun to fade, was quickly finding new life, though I doubted I'd be able to make use of it.\n\nShe giggled again, then slowly pulled herself to her elbows. \"Do you think I could get a towel or something to clean off with?\" \n\nI studied my handiwork one last time, impressed by how thoroughly I'd left my mark. Her body was like a canvas and this was my masterpiece. I'd almost be sad to see her clean, but her body was a work of art regardless. \n\nThere were clean towels in the dryer, but rather than let Gwen wipe herself off, I suggested we jump in the shower together. I'd had enough experience with personal lubricant to know that wiping it with a towel wouldn't be enough. Her thighs were still slick, and not just from the bottle of lube. \n\nIt wouldn't be the first time we'd bathed with one another, including a particularly risky moment in the communal shower back at her dorm. She quickly agreed, and after a brief cleanup with a paper towel, we were off to the bathroom, our clothing still on the floor.\n\nMy shower, like so many other features in this cookie-cutter apartment, was not built for more than one person. For once this worked in my favor, forcing us to squeeze past one another fairly often as we traded turns beneath the water. Lucky for her, I'd narrowly missed her lovely hair, saving her the trouble of washing it. She kept her hair in a bun while we rinsed, a sight that I found quite adorable.\n\nWe took turns washing one another. If she preferred a different scent of soap to the one I had to offer, she didn't complain, as I gently lathered her body from shoulder to toe. I reached around to wash her back, and butt, pulling her body against mine a bit longer than necessary. We were slippery and I enjoyed myself, watching the suds drip down her curves before vanishing under the flow of warm water. \n\nI didn't need to tell her this with words. While my hands were busy with her curves, her delicate fingers had found something to play with down below. It was impossible not to grow harder to her touch, and Gwen seemed extra determined to ensure that I was clean. When the suds began to die, she added more soap to her palm, stroking my many inches again and again as we began to make out against the cool tile of the wall. Her hair would get wet, but Gwen didn't complain as I parted her lips with mine and introduced my tongue to hers.\n\nWe stayed in the shower far longer than I'd anticipated. My hands eventually wandered lower on her body, slowly working their way down to her womanhood. She parted her legs for me, allowing a quick tease with my hand before sliding a finger in to her pussy. She moaned and writhed beneath me, pinned to the wall now as she continued to stroke. She was trying to make me cum again, but I knew I would be the winner of this particular race. I was still in recovery, but she would soon be begging for orgasm once more.\n\nJust as I predicted, her body began to quake in my arms just seconds later. My finger continued to work her g-spot as my palm massaged her clit. She held on to my cock but was no longer stroking, her mind unable to focus on anything but the bliss I was causing. It didn't matter, not to me.\n\n\"Oh Ryan! You're so fucking good at that!\" she moaned into my ear as I held her against the wall. I didn't relent, continuing to tease her from both inside and out, until finally the release came. She gasped in my ear and pulled my body tighter against her own, her nipples hard against my chest. The orgasm washed over her like water, warming her body in ways that the shower head could not. \n\nMy finger continued to wiggle, driving her orgasm as far as she'd allow, only giving in as her thighs clenched tight around my hand. Her body reacted on instinct, unable to withstand the amount of pleasure I was delivering. It was a proud moment, and one that I finished with another long, passionate kiss.\n\nWhen our lips finally unlocked, Gwen's blue eyes were shinning back into mine, her smile unlike any I'd ever seen before. Her breathing began to slow, and her trembling legs were slowly regaining their strength. There were no words exchanged. Everything important had already been said, now washing down the drain as the water rinsed her thigh.\n\n\"Well,\" I finally said, \"I think you're clean now.\"\n\nShe giggled. \"Then why do I feel like such a dirty little girl?\" She said it with a smile, hinting that this wasn't necessarily a bad thing.",
        "\"We should probably get dried off before the hot water runs out,\" I answered. We had been in there for quite a while now, and the tank wouldn't keep up much longer.\n\n\"After you then,\" she replied, waving to the glass door. I shut off the water and stepped out first, handing a towel back to her before retrieving my own. \n\nWith it being February, we were quick to dry off. The heater in this unit worked fine, but the chill of winter air still managed to creep in through the window, especially if you were wet. As much as I enjoyed watching the droplets of water cling to Gwen's curves, I diligently patted her dry, ensuring no spot had been left untouched before throwing the towel over the rod to dry. \n\nGwen's clothes were still in the living room, and I cautiously stepped into the den, still nude, to retrieve them. She wasn't planning to slip back into her dress just yet, however. This was mostly to avoid any awkward questions from my roommate should he return earlier than expected. We had a rule regarding sex on the shared furniture, though technically Gwen and I hadn't actually had sex. \n\nWhen I reentered my bedroom Gwen was already comfy in one of my button up shirts and a pair of my socks, vibrantly colored and coming up almost to her knee. The hem of the shirt covered just below her waist, but I didn't have any underwear here for her to wear, which meant she was still bottomless. I handed her the pair of lacy pink panties, watching from the corner of my eye as she gracefully slipped them back on while I put her dress on a hanger.\n\n\"Cuddle time?\" I asked, already knowing the answer.\n\n\"That sounds lovely,\" Gwen replied, already flopping down on my mattress while I hunted for a pair of boxers and the TV remote. A shirt would just make me uncomfortable, and I knew she would prefer laying against my bare skin, smelling just like the soap she'd cleaned me with. \n\nJust a few minutes later we were curled up beneath my sheets, my arm already going numb beneath her as she lay with her head on my chest. The TV was on and one of her favorite chick-flick movies was playing, but neither of us paid it any mind. She curled up tight against me, throwing her leg over my own, the smooth, warm skin feeling great against me. \n\nHer fingers began to trace little circles on my abdomen, teasing the muscles I'd worked so hard to acquire. It tickled, nearly as much as her eyelashes against my skin, and I loved every second of it. Gwen was by far the best thing to ever happen to me, and I was thrilled to have shared something deeply intimate with her on this special day. I couldn't possibly ask for more, but Gwen was determined to give it to me anyway.\n\n\"Ryan?\" she asked in her sweet little voice.\n\n\"Hmm?\" I answered,\n\nShe hesitated before she spoke again. \"You didn't get to cum again, in the shower.\"\n\nI laughed softly, careful not to hurt her neck as my chest moved. \"No, I didn't, but that's perfectly fine. I just wanted to make sure you were completely satisfied.\"\n\nShe giggled, and her hand continued to trace the circles, the fingers now wandering a bit lower down my waist. \"Oh believe me, I am beyond satisfied!\" Her eyes met mine now, still shining blue. \"But it doesn't seem fair, you giving me two orgasms and only having one for yourself.\"\n\nI thought I knew where this was going. I could see it playing out in my mind, the way her hand would travel lower until it slipped below my underwear, teasing me free until her lips came down to work their magic. I certainly wouldn't complain, but it really wasn't necessary.\n\nI shrugged. \"I'm perfectly content with how things are, don't worry.\" I then gave her another little grin. \"But if you're really feeling bad about it later, you can even up the score, okay?\"\n\nMore giggling, followed by the sudden sensation of her head leaving my chest to give me a kiss. I held her cheek in my hand, ensuring that it was a long one, finally releasing her only when I was satisfied. The look in her eyes was dripping with mischief by the time our lips parted. The warmth of her panties against my thigh informed me that she was dripping in other ways as well.\n\n\"I've been thinking about it, and I think evening the score is exactly what we need to make this Valentine's perfect. What do you think?\"\n\nAgain, I shrugged. \"I'm happy no matter what.\"\n\nShe rolled her eyes, knowing that I would happily welcome another orgasm, but then she bit her lip, a look of nervousness returning to her face for the first time since she arrived. It caught my attention quickly.\n\n\"Is everything okay?\" I asked, unsure of why she would suddenly be blushing.\n\nShe nodded, still biting her lip before speaking. \"I'm fine.\" That's when her hand finally breached the elastic barrier beneath the sheets, her warm fingers once again taking claim to my cock. I was already growing harder to her touch.\n\nThen, she asked me something she'd never asked before, and I was suddenly aware of why she seemed nervous. \"Do you have a condom?\"\n\nMy smile disappeared, replaced by a look of shock and confusion. \"A condom?\" I asked, as though I hadn't heard properly, though I was certain I had.\n\nShe nodded. \"Yeah. Do you have any in here?\"\n\n\"Why would we need a condom?\" I could already guess the answer, but I was still in disbelief.\n\nGwen rolled her eyes again, but giggled soon after. It was a good sign that her nervousness was beginning to ease. \"What do you think?\"\n\nI sat up higher on the bed, ensuring that I could look her directly in the eye before I spoke. \"Gwen, are you sure about this?\" I asked, genuinely concerned that she might be feeling pressured to do something she'd rather not. \"I mean, if you're worried about me having another orgasm, you really don't have to.\"\n\nHer fingers continued to play with me, slowly reviving the erection that had wavered at her words. \"I'm sure. I've been thinking about it since we climbed in to bed. You've been so patient with me, Ryan, and you've proven time and time again that you're with me for more than just the sex.\"\n\nI touched her cheek with my fingers, feeling the warmth of her blush as her smile widened. I didn't know what to say in that moment, except for the one thing that I knew without a doubt.\n\n\"I love you, Gwen.\"\n\nHer eyes grew brighter, the tears catching the light of the TV just right. \"I love you too, Ryan!\"\n\nI pulled her up for another kiss, the most passionate one we'd ever shared. I'd never kissed another woman like this in my life. If my words weren't strong enough, I was going to make damn sure this kiss would deliver the message. My hand instinctively wandered down her back, sliding under the shirt to feel the warmth of her spine.\n\nWhen we finally parted, I was still determined to protect her from doing something she might regret. \"I do have condoms. That's not a problem, but Gwen, are you certain this is what you want? I would gladly wait another year, or however long it takes, so long as you're still my girl in the end.\"\n\n\"I know you would, and that's what makes this such an easy decision,\" she answered. \"When you had your little slip earlier, you were so worried about me. It was incredibly sweet, how you were only concerned about whether or not I was okay, and all that time I was debating asking you to just slide it all the way in.\"\n\nI cocked my head in surprise. \"Seriously? I honestly thought I'd hurt you.\"\n\nGwen shrugged, still smiling. \"A little, yes, but you wouldn't believe how good it felt at the same time. The pain was nothing compared to how badly I wanted you to push deeper, but you were sweet, and I decided to finish what we'd started instead.\" Another giggle. \"And that's a good thing, because you weren't wearing a condom, and I doubt either of us would have cared enough in the moment to go look for one.\"\n\nShe wasn't wrong. Birth control was something we'd discussed a few times, but until we were sexually active there had been little point in spending the money. I kept condoms in my drawer for this exact reason, though I hadn't quite expected to use any of them so soon. \n\n\"Well, I just...\"\n\n\"Ryan, you can ask me if I'm certain a million times, and the answer is always going to be 'yes,'\" she replied, before I could continue. \"I really do love you, and I can tell that you love me too. If my first time is going to be with anyone, I want it to be with you. And it's Valentine's Day! This is one of the few gifts we can give one another that isn't owned by the jewelry or candy industries.\"\n\nShe had a point, though I imagined the lingerie company that made her panties would want at least some credit for tonight's excitement. I didn't mention that, of course, and instead brought my lips down for one more kiss. It was all the answer Gwen needed, but to seal the deal I allowed my hand, still beneath her shirt, to explore new territory.\n\nMy other hand was instinctively undoing the buttons of my own shirt, slowly revealing Gwen's breasts as her hand pulled me free of my boxers. She stroked faster now, emboldened by the throbbing of my cock as it grew harder in her grasp. The shirt parted down the middle, and her nipple was too tempting to ignore. I left her lips and traveled south, nibbling my way down her neck, teasing her collar bone before finally diving to take the tiny pink bud in my mouth. She moaned as my tongue swirled around her nipple, teasing it to erection before coming back up to silence her with a kiss.\n\nGwen then decided that my boxers were an unnecessary obstacle, releasing my meat just long enough to help me wiggle free of them. She took a second to slip the shirt free of her arms before climbing back on top of me, pressing her body against mine as we kissed and touched.\n\nI loved the way she felt against me, but I was ready to take control. In an impressive show of strength, I pulled Gwen's slender body beneath me, rolling on top of her as she squealed from below. I was fully nude above her, but there was still one barrier I had to take care of, and it was made of pink lace. The socks could stay where they were for all I cared.\n\nLifting myself up on my knees, I took hold of Gwen's panties and began to pull them off. She lifted her butt from the mattress to make my job easier. Earlier I had taken my time undressing her, patiently tugging away the thong to reveal the treat waiting for me below. This time, however, I was hungry, and the panties quickly disappeared over the side of the bed with the rest of our clothing. Gwen's legs came back to rest on the mattress, still parted around me as I began to kiss a path up her thigh.\n\nI'd never gone down on Gwen before, but if we were going to have sex tonight there was no point being coy. She didn't argue, guessing my intentions as my lips kissed and nibbled their way closer to her pussy. I listened for her objections, but heard only the sighs and moans of a young woman aching with lust. I saw no reason to keep her waiting.\n\nMy tongue parted her labia with one slippery motion, tasting her for the first time. Her moans betrayed her eagerness for more, her legs parting wider in invitation. I accepted, giving another lick along her opening before moving to flick her tiny clit. I was teasing her, pleased with the way her body twitched to my every touch, her moans persuading me to continue. In mere seconds, Gwen was writhing in ecstasy before me, my hands holding tight to her thighs to keep her still. \n\nI flicked faster and harder, pulling myself close as I worked her virgin pussy with my tongue. I licked along her lips, thankful to find them slippery and smooth, the unique taste of her juices waiting for me. I kissed her, giving the same attention to her now as I had with her lips above, sucking her labia and parting her with my tongue. Her moans grew louder, gasping with every new sensation as I showed her all that she'd been missing. It was all very revealing, and in just a few minutes I knew exactly how to make her cum. Gwen, however, had other plans.\n\nShe relaxed the arch of her back to peer down at me, still licking and sucking between her legs. \"Condom! Where is it?\"\n\nI laughed as I rose to my knees once more, wiping her juices from my lips with my hand. \"Someone's being a bit impatient,\" I replied with a smirk. Without waiting for her retort, I reached over to my nightstand, opening the drawer and retrieving an unopened box. The packaging came apart with ease, and I quickly removed a single condom wrapper from its contents. \n\nGwen watched with curiosity now, her lack of patience overridden by a desire to learn. I ripped open the foil package and placed the condom on the tip of my cock, rolling it down with practiced hands under her gaze. They were a lubricated brand, but my tongue had ensured this wouldn't be necessary. Still, I knew that what came next would be a lifechanging, and possibly painful, experience for Gwen. It wasn't something I took lightly.\n\n\"This is it. It's not too late to back out now. Are you sure?\"\n\nHer smile was the most reassuring thing I'd ever seen. Blue eyes met with mine, telling me her feelings before her lips parted to form words. \"I know you'll take care of me. I'm ready.\"\n\nI gave her a nod, excitement finally winning the battle with my nerves. Holding myself up with one hand and guiding with the other, I slid higher between her legs and placed the tip of my cock against her. Gwen's breath tightened in anticipation as I began to tease up and down, coating myself in her juices. She bit her lip as the teasing slowed. The moment had come. \n\nI gently guided myself in to her, pushing slowly and carefully between her lips. She grimaced slightly, but Gwen was soaking wet and well prepared for what was to come, allowing for a smooth entry. I worked my way deeper inside, stretching her virgin walls as I penetrated further and further with each thrust, covering my shaft in her arousal. I studied her face as I filled her for the first time, certain that I'd find blood on my sheets when we were finished, but her eyes were quick to dispel any of my concerns. The little pain had been brief, and now her only expression was one of pure joy and pleasure.\n\n\"Congratulations,\" she whispered up to me, her hand coming to my cheek. \"You're officially my first.\" \n\nI offered a smile before leaning in for a kiss. The worst was over, and now the fun would truly begin. With both hands now free, I held myself up and began the slow withdrawal, watching her smile vanish into another moan as my cock retreated. It was incredibly easy, and I couldn't help but smile. Gwen was dripping with arousal, and I was eager to take advantage. No lube would be needed for this.\n\nI pushed back inside, filling her void and forcing another gasp from her lips. Her hands traveled to my waist, urging me to continue. I pulled back once more, reminding her of every inch I had to offer before thrusting it all back in. Gwen squealed in delight, dispelling any nervousness that might have remained. Her legs parted wider, begging for more.\n\nDespite my carnal desire to fuck Gwen harder and faster than I'd ever fucked a woman before, I kept my thrusting at a modest pace, making love to her instead. I kissed her whenever possible, occasionally coming up to breath while continuing to slide in and out of her body beneath me, listening to her every noise and finding only sounds of bliss.\n\n\"Oh, Ryan, that feels incredible!\" she moaned between kisses. \"I can't believe I waited so long for this!\"\n\nTo be honest, I was proud of myself for never pressuring her. No one had ever given me their virginity before, and sharing this moment with a girl as beautiful and sweet as Gwen only fueled my lust for her body. And damn, what a body it was. My fingers found a new appreciation for her slender frame as I rediscovered her curves. Everything felt new, from the gentle sway of her breasts to the subtle squeeze of her legs around me. Her body was tight in more ways than one, and soft in all the right places. \n\nBut as I looked deeper into her sparkling blue eyes, I realized that the best part was this was all mine, a moment Gwen and I would share again and again, renewing our love with each passing night. I could only hope that she craved my body as much as I desired hers. Her eyes spoke for both of us. I wanted this moment to last forever, but sadly, I knew it would come to an end soon.\n\nThe familiar tingle began in my balls, and I knew that despite the added layer of latex, sex with Gwen was destined to be a short endeavor. Her teasing in the shower had stirred an aching inside me, an ache that would likely cause me to cum inside of her any minute. If I wanted this moment to last, I'd have to switch things up. My thrusting slowed, and, sensing the change, Gwen peered up at me with curious eyes. \n\n\"Would you like to try something different?\" I asked, hoping she would understand my meaning. Gwen, ever the mind reader, returned a knowing smile.\n\n\"I'd love to,\" she whispered, giving me another kiss. \n\nI slowly retreated, creating a sensation of emptiness that Gwen hadn't quite been expecting. She gasped, her back arching slightly higher as the tingles rushed up her spine. I took advantage, reaching under her with my right arm as I rolled over on my side, pulling her on top of me with a delightful squeal from her lips.\n\n\"Show off!\" she said, grinning and giggling as I took hold of her hips and put her exactly where I wanted. \n\n\"You haven't seen anything yet,\" I promised. \n\nGwen was quick to catch on. She pushed herself up with her palms, bringing her knees up along my sides until she was straddling my hips. She gave me one last kiss before sitting up, her breasts leaving their place against my chest to tempt me from above. I reached up with one hand to play with her while my remaining hand took hold of her hip, fingers firm on her ass. \n\nMy cock was flat against my stomach, the slippery warmth of her pussy now pressed against the underside of my shaft. The hand on her hip was already moving on instinct, pulling and pushing gently until Gwen was rocking back and forth on top of me. Soon, she was moving all on her own, her moans growing louder as she rubbed herself against my manhood. It was an incredible feeling for both of us, a reminder of the similar scenario we'd found ourselves in just an hour before.\n\nI was thoroughly enjoying all of this, the way her folds stroked me in her own juices, her palms against my chest for leverage. But there was so much more to experience, especially for her, and I had no intention of finishing her off like this. Besides, I didn't want her to work the condom off me before I had a chance to use I again.\n\n\"Are you ready?\" I asked, reminding Gwen that she could be writhing to something more.\n\n\"You'll have to help me figure this out,\" she answered, lifting herself higher as she took hold of my cock. \"I'll probably be a bit awkward at first.\" She blushed slightly, embarrassed at her own lack of confidence.\n\nI smirked, trying to ignore the fact I was so close to being inside her once more, hovering just in front of her dripping orifice. \"Don't worry, babe. It's your first time, its supposed to be awkward!\" I replied, hoping the truth would make her feel better. \"But just so you know, you're doing a wonderful job.\"\n\nGwen thanked me with her eyes, and with her confidence growing strong, she leaned slightly to her right to make room for me. I let her take control, remaining perfectly still as she pushed me back into her body, slowly impaling herself on my cock, inch by inch. She closed her eyes, moaning all the way down until she could fit no more of me inside.\n\nI studied her, searching for any sign of discomfort and finding only the shine of a very happy woman. Her hands went back to my chest as she leaned forward, sighing with pleasure as she felt me from a new angle. My hands returned to her hips, guiding her body as I resumed the gentle sway. ",
        "Gwen didn't require my assistance for long. She'd quickly discovered that by rolling her hips in this manner, she could simultaneously grind her clit against my pelvis while my dick continued to please her from inside. \n\n\"How does that feel?\" I asked, my hands finally free to explore. From this angle, her chest was practically begging for my touch, and I was eager to comply.\n\nGwen answered between moans. \"I could definitely get used to this.\" She quickened her pace now, grinding harder against me as her hips rolled, my cock sliding in and out just enough to remind her of its presence. \n\n\"It's not so bad, having a bit of control,\" she continued, her voice soft as she caught her breath. \n\n\"I don't mind giving you the reins,\" I answered. \"Do the things that make you feel good.\"\n\nShe came in closer now, still making love to me as she leaned in to whisper in my ear. \"You know what would make me feel really good right now?\"\n\n\"What's that?\"\n\nShe moaned. \"If you were to grab my ass and fuck me as hard as you've been dying to for the last few minutes.\"\n\nNo further encouragement was required. I dropped my hands from her breasts, reaching around to her rear where I found new curves to play with. I dug my fingers into the soft flesh, lifting Gwen up my shaft and holding her in place above me. I planted my feet as she grew quiet in anticipation, and with a single thrust I forced a gasp from her lips to split the silence.\n\n\"Lean back and put your hands on my legs,\" I commanded, knowing she would obey.\n\nGwen did as she was told, maneuvering her body to a new angle, moving to her feet for support. In this position I would easily be able to grant her wish, pounding into as hard and fast as her body could handle. With my grip still tight on her bottom, I began to thrust once more. I didn't start slow, determined to show her the difference between making love and being fucked. Her gasp and moans told me she understood.\n\nI drove into her over and over, the head of my cock descending just far enough to tease her g-spot before slamming back into her depths. Her moans became profanity very quickly, her words pleading for me to keep fucking her, a plea I was quite willing to accept. Our bodies were soon glistening in sweat, but I refused to let go. I fucked her harder now, pulling her down my shaft with every thrust, meeting her halfway with the satisfying smack of ass on thigh. The mist of her juices now covered my balls.\n\nI'd nearly forgotten that I was wearing a condom. I was beginning to worry about tearing when I felt a slight pain in my leg, the subtle sting of Gwen's nails digging into my skin. It wasn't because she was in pain, but quite the opposite. \n\n\"Oh yes! Ryan, I'm going to cum again!\" she squealed, her voice breaking as I pounded without relent. \"Please, don't stop!\"\n\nI had no intention of slowing down. Instead, I mustered every bit of energy I had left, thrusting faster and harder, determined to give her an orgasm she would never forget. Then, after a sudden intake of breath, Gwen came, moans growing silent as the bliss overwhelmed her.\n\nHer cum flowed gently over my balls as I continued to thrust, the warmth of her juices proving that I'd done my job well. Her eyes remained shut, her lips still parted in a silent moan as her body trembled above me. I focused on nothing else but maintaining that ecstasy for as long as humanly possible, holding her steady as I continued to pound my dick into her dripping pussy. Her orgasm continued, fueled by the constant assault agasint her g-spot, until finally the trembling began to calm. \n\nGwen shifted forward now, bringing her palms back to my chest as her thighs squeezed tighter around me. Her body could take no more, no matter how hard I continued to fuck her. And now, as I stared into those beautiful blue eyes, the familiar tingle manifested in my balls. They tightened in to my body, preparing for release, signaling once and for all that it was my turn to cum.\n\nThe tingle spread quickly up my shaft, swelling with semen as I grew closer to the point of no return. I groaned, gripping tighter into Gwen's ass as I gave one final thrust, burying my cock deep inside her body as I came. She gasped somewhere above me, feeling for the first time the sensation of a man draining his balls inside her pussy. The thin barrier of latex did nothing to mask the throbbing against her walls, powerful and rhythmic as I gradually pumped her full of warm, pearly white cum. \n\nAs much as I wished my orgasm could last as long as Gwen's, I knew it would be a short stay in heaven. I also knew I wouldn't complain, and neither would Gwen. She was fully recovered now, though still flush, and her hips rocked gently in tandem with the pulses coming from within. I was locked in place, groaning with every pump, unable to move as the pleasure warmed me. Eventually, the throbbing began to ease, and in just a few seconds Gwen had managed to tease out the last few drops of cum I had to offer. I silently prayed it was all safely contained within the condom.\n\nThe pulse became a gentle tingle as the orgasm passed. She sat there on top of me, staring happily into my eyes and biting her lip as we caught our breath. Neither of us dared move, deciding that the only way to make this moment last was to stay right where we were for as long as possible. Eventually, Gwen leaned down, her breathing now normal enough to give me another kiss. I'd missed those lips, just as I'd missed her chest against mine, her heart beating furiously just below.\n\nI remained inside her for a few more seconds, until finally Gwen found the courage to lift herself up. She gasped one last time as I left her body, her walls slowly adjusting from the stretch. I sighed in relief as I looked down, happy to see the condom fully intact, my cum still visible in its prison. Gwen rolled over now, collapsing beside me as her heart pumped blood to the rest of her body.\n\n\"This is the sort of thing you don't see in the romance movies,\" I said as I slowly pulled the condom off, careful not to make a mess.\n\nGwen giggled. \"Well it's my first time,\" she said, her voice soft as she turned to look at me. \"It's supposed to be awkward.\"\n\nI laughed, tying the rubber in a seal and placing it back into the torn wrapper. \"Are there any other words you can think of to describe how this went?\"\n\nHer smile brightened the room. \"Wonderful! Amazing! Spectacular! Everything a girl could ever hope for! I could go on and on...\"\n\nI cut her off with a kiss, caressing her cheek as I took her lips in mine. Mine were dry from exhaustion, but she returned the kiss with the same energy and passion as any that came before. When we parted, I brushed loose strands of hair from her eyes, wanting a clearer view of those cerulean gems.\n\n\"No regrets?\" I asked, hoping for the obvious answer.\n\n\"Not a one,\" she replied, Then, with her trademark mischievous grin, she added, \"So, are there any condoms left in that box for later? You know, for practice?\"\n\nLaughter filled my lungs, nearly choking me as I rolled. \"Don't worry, there are plenty in the drawer, but I'm gonna have to ask for a small break first, okay?\"\n\nShe raised her brow, as though considering her options. \"Deal. You waited patiently for me. I suppose it's only fair I return the favor.\"\n\nIt was difficult not to laugh, and impossible not to feel in love. It would seem I'd unlocked Gwen's sex drive, and now my only worry was whether I could keep up. I'd have fun trying, if nothing else.\n\nGwen wiggled beside me, pulling herself closer to my body for cuddles. I wrapped my arm around her and held her tight. Few things were better than sex, but holding her in my arms was a worthy contender. \n\n\"Happy Valentine's Day, Ryan. I love you.\" Her voice was soft and betrayed her exhaustion, and I knew she would likely fall asleep in my arms soon. \n\nI kissed her forehead. \"I love you too, Gwen. Happy Valentine's Day.\" "
    ],
    "authorname": "Vaginalpuppetry",
    "tags": [
        "valentines day",
        "cupid",
        "thigh job",
        "virgin",
        "virginity",
        "love",
        "blond",
        "blonde",
        "shower",
        "college"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-virgin-valentine"
}