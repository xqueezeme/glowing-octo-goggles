{
    "title": "When We Were Married Ch. 03D",
    "pages": [
        "Chapter 03D\n\nFOOLS RUSH IN\n\nMy name is William Maitland. I'm an Assistant State Attorney in Jacksonville, Florida. I'm the poster child for workaholics, having thrown away one of the hottest women in Jacksonville and my two children and a 20 year relationship because I couldn't maintain a life apart from my job as the top working prosecutor in Jacksonville \n\nThree months ago I had a wife. In another month or so I won't. I haven't taken the break-up well, although it has done my physical conditioning a world of good. It also led me to a mini-breakdown which in turn led my boss, the real top prosecutor, to exile me from my job and troubles for a week-long cruise on the French operated cruise ship, Bonne Chance.\n\nThe cruise has done me a world of good. I have met a poor little rich girl who really does have more problems than I have, which at least showed me that I didn't have the shittiest life on the planet. And I have also met the luscious and lovely Aline des-Jardins, one of three cruise directors on the ship who has been flirting with me, raising my ego and libido for the past three days.\n\nUnfortunately, when my suspicions that her attentions were based on her being assigned to watch me to make sure I didn't do anything stupid like jumping overboard as a result of depression were confirmed, I didn't take that news well either. Which led the lovely Ms. des-Jardins to tell me forcefully to go fuck myself, instead of possibly getting the chance to plumb her depths.\n\nAnd that is why at 12:30 a.m., after royally pissing off the first woman other than my wife that I have seriously considered going to bed with in 18 years, I have showered and I'm my way over to the Alpha Lounge at the bow of the ship where I expect Ms. des-Jardins to be having a good time without me. I will probably be insulted and crushed in a way that hasn't happened since Junior High when Missy Cartwright laughed loudly at me when I asked her to dance at the first formal dance I'd ever attended.\n\nBut no matter what happens, I will at least be doing SOMETHING as my life circles the Big Toilet Bowl of fate. I may go down, but I will go down fighting.\n\n####################### \n\nMonday, July 18, 2005 -- 12:35 a.m.\n\nI walked out of the elevator which ran from the sixth to seventh decks of the Bonne Chance and saw down the corridor a knot of five men and women drinking and smoking and generally fooling around. Three of them were female passengers I vaguely recognized. Two of them were younger male staff officers.\n\nThe doorway behind them was open and I saw smoke and lights and heard music. I didn't need the sign overhead that said \"Alpha Lounge\" to let me know that my moment of truth was about on me.\n\nI had faced a mob of horny frat boys with a fire poker and millionaires who had threatened my family and serial killers who had very sincerely told me they would escape prison and flay the skin from my body while I was still alive, and I don't think I was ever more frightened than I was walking down that corridor.\n\nThis woman, and the power she had to crush what lingering remnants of a male ego I still possessed, would have given even the Angel of Death pause....but as the old saying goes, fools rush in.....\n\nThey looked at me curiously as I approached them. I had dressed in black slacks and a black turtleneck that I'd had cleaned on board. One of the taller male officers stepped forward to intercept me as I drew near the doorway.\n\n\"I'm sorry, M'sieu,\" he said, interposing his body between me and the doorway without being too obvious about blocking me. \"The Alpha Lounge is restricted to invited guests. There are many other lounges and bars open at this hour elsewhere on the ship.\"\n\n\"I've been invited. Ms. des-Jardins invited me. Would you check with her and let her know I'm here. My name is William Maitland.\"\n\nHe looked at me and then at the other male officer. A look passed between them and I knew what he was going to say.\n\n\"I'm sorry sir, but Ms. des-Jardins informed us that you might be coming and told us to tell you that you were not welcome here.\"\n\nNow that I was here, being crushed wasn't all that terrible.\n\n\"Women can change their minds. Often do. Tell her that Mr. Maitland would like to apologize. You can do that, can't you?\"\n\nHe tried to stare me down but men a lot tougher than him had failed and he finally shrugged and said something in French to the other officer that probably translated to \"keep the asshole out while I check,\" and walked into the lounge.\n\nWe just stared at each other while the three women stared at me and giggled and whispered among themselves. It didn't seem to be too long before the tall officer walked back out.\n\n\"I'm sorry sir. She said she hasn't changed her mind and won't. She said you should seriously consider her last suggestion.\"\n\nWell, that was clear enough. She was pissed. All those romantic fantasies I had spun in my mind were crashing to the hard cold earth. But, the odd thing was, I didn't feel too badly. I had tried. There was probably less than no chance that anything could have ever happened between a woman like her and a man like me. But at least I would have no regrets about what could have been.\n\nI looked back to the elevator and then changed my mind. She might be able to keep me out of the lounge, but she couldn't keep me from looking down at the ocean from this side of the ship. The railing ran around three-quarters of the section.\n\n'How do you get to the deck railing from here?\"\n\n\"You can take the elevator back down to the sixth and get out to the deck from there.\"\n\n\"I want to go out on this deck's railing.\"\n\n\"I'm afraid...\"\n\n\"Yeah, as the punch line goes, be very, very afraid. You can keep me out of the lounge with no problem. I doubt very seriously you can keep a paying guest from walking on the outside railing anywhere in this ship. And if you try I am going to raise so much hell that your company will be very sorry they ever sold my boss a ticket for this cruise.\"\n\nHe looked at his fellow officer and they frowned, undoubtedly thinking so hard I expected smoke to start billowing out of their ears. The tall one finally said, \"follow me,\" and led me down the corridor beyond the entrance to the lounge and to a closed door. He pushed on the metal bar across the door and it opened with a creak, revealing the outside railing that ran around most of this section. \n\n\"It locks from this side,\" he said, grabbed a metal rod wedged into a metal stanchion near a glass-encased fire extinguisher, and propped it in the doorway. The door couldn't close and couldn't lock.\n\n\"You won't be locked out. When you come in, please remove the bar and replace it where it was, if you would. Oh, and..\"\n\n\"I'm not going to try to crash your intimate little orgy,\" I said, looking back at the three female passengers who were stroking the other male officer in a fairly obvious manner. \"I just want to get some fresh air and a fresh perspective and then I'll be out of your, and Ms. des-Jardins', hair. If you would, tell her I hope she has better luck with her next assignment.\"\n\nI walked out without waiting for a reply. I walked to the railing, taking one look back at the lounge. I could hear strains of something like a romantic ballad French style being sung inside, but no words. Then I looked back down and out at the waves. The view was the opposite side of the ship. \n\nFrom the other deck I had watched the ship cutting through the Caribbean. From this deck I watched the waves fall away behind us as the ship moved forward. It was cool but pleasant as the winds whipped along the deck. It could have been raining or it might have been sea foam, but drops would hit my face from time to time. The ship was obviously not moving as fast as it had been on other nights.\n\nMarsh Harbour in Abaco wasn't that far away so they were obviously taking their time getting there to make it in six or seven hours.\n\nI lost track of time and when I glanced at my watch next, it showed that it was 1:30 a.m. Where had the time gone?\n\n\"You are not only a very unpleasant man, but stupid as well. Most men would have taken the hint they were not wanted and simply have slunk off with their tails between their legs.\"\n\n\"Probably too stupid to know when I'm not wanted. Anyway, I hoped you'd be aggravated enough to come out to talk to me.\"\n\nShe had changed out of her standard blue and gold uniform and was wearing a light blue low-necked blouse that showed she did have breasts and a pair of blue slacks. She stared at me with her characteristic stone-faced expression, or lack of one. \n\n\"Why? I think I made my feelings about you clear, and you made your feelings about me crystal clear, Mr. Maitland. What do we have to talk about?\"\n\nI turned my body to her and reached out to take her hand. She stiffened, but did not pull away.\n\n\"I just wanted to apologize, Aline. Then I'll leave and I'll do my best to make we don't run into each other again. I am sorry. Sorry that I misjudged you. Sorry that I insulted you, when you were just trying to do a job. I..uh...I reacted badly because I have to admit I was spinning some pleasant fantasies about you. You are a beautiful woman and I'm sure I'm not the only man that's ever been...smitten with you. I was hurt. But I know I had no cause to insult you the way I did.\"\n\n\"No, you didn't. It hurt more because I did...like you. You seemed like a different kind of man. When you....said what you did....you caught me off guard. \"\n\n\"I know this won't make a difference in how you feel, but the only excuse I can give you is that I'm in strange territory here.\"\n\nShe looked at me quizzically.\n\n\"I've been married for 18 years and in a committed relationship for almost two years before that. I've forgotten how to do the man-woman thing.\"\n\nShe stepped closer.\n\n\"The captain said your superior told him you were in the middle of a very bad divorce. That you were hurt very badly by your wife's actions.\"\n\n\"It all started when my wife said four words to me that ended our marriage...\"\n\nAnd so I told her everything. I told her about the emails, which I could almost recite word for word. I watched her face as I told her my story, leaving nothing out. I told her about how Debbie and I had met. And how I had never truly believed she loved me, but that instead it was a marriage built of gratitude and hero worship.\n\nWhy I felt free to tell her, a stranger, of all the people in the world, about the emails and what they revealed about my marriage, I could never say for sure. \n\n\"And that's why I'm on the cruise. That's why I am probably more of an asshole than I have been. Why I put people off. I didn't want this life. I don't want it. I want what I had, but I can never have it again. I still love her, even while I hate her. I don't know that I'll ever stop loving her, but I pray every night that that day comes.\n\n\"And that's why what you said hurt so bad. I was married to and loved a beautiful woman who I don't think ever loved me the same way and is fucking a younger man in our bed tonight, I'm sure. And then I met you and I started thinking for the first time since all this shit started happening that life might not be so terrible. And then you tell me that I was just a job. Nothing more.\"\n\nShe hadn't said a word, but she hadn't pulled away. I dropped her hand from mine.\n\n\"And that's the story. And my apology. I'm sorry I kept you away from your friends and your party. I'll head back now. And I really will try to stay out of your way for the rest of the trip. It's only a few days.\"\n\n\"You weren't just a job, Mr. Maitland,\" she said. She stepped into me and before I knew it she was searching for my tonsils with her tongue. I returned the favor\n\nSomebody, I think it was the science fiction writer Robert Heinlein in one of his books for younger readers, once wrote that 'girls don't have bones,' because it feels that way when you're kissing one. Guys are all sharp angles, hard surfaces. Girls are soft and round and where they're the softest and roundest is where they're the most fun. I had read that when I discovered his books in the 7th grade and I'd never forgotten that description. \n\nThat's the way the woman in my arms felt in this moment. I remembered watching her across the way the other night in that moment of the storm and feeling that I had stepped out of my old life. I felt the same way now. This was not Debbie. I had to keep reminding myself. She felt, and smelled and tasted different. And she was in my arms and she was playing tonsil hockey. This could not be happening.\n\nShe broke the kiss and stepped back from me, then reached out with one finger to rub her lipstick from my lips. I tasted mint. Debbie had never tasted of mint.\n\n\"I accept your apology, Mr. Maitland, William.\"\n\n\"William is my name, but my friends call me Bill.\"\n\n\"I accept your apology, Bill. If I had known, I would not have acted like such a bitch. I know what it is like to love someone like that, and I cannot imagine what it would feel like if he were to betray me in such a fashion.\"\n\nI touched my lips.\n\n\"Then why...how?\"\n\n\"Friends don't kiss in your country?\"\n\n\"Not like that.\"\n\nShe smiled in the darkness and I felt something cold and hard deep within myself begin to crack and I told myself, \"You will not fall for this married woman.\"\n\n\"But I am French, and you are standing on a piece of French soil, We do things differently here.\"\n\nThen, \"the party continues. Come inside and have something to eat and drink. We can talk.\"\n\nShe held her hand out to me and, knowing this was going to lead to disaster, I took her hand and followed her into the Alpha Lounge. \n\n######################### \n\nMonday, July 18, 2005 -- 12:45 a.m.\n\nDebbie rolled to her back and gasped for air.\n\n\"My God.....\"\n\nDoug placed one large hand on her breast and squeezed it rhythmically. \n\n\"My God is right. You have got to be the hottest woman in the Western World. It's been more than three months and every time I get inside you it feels like the first time all over. That's never happened with any woman I've been with. \n\nShe couldn't help smiling a little.\n\n\"Doug, you've already got me. You don't have to keep seducing me.\"\n\n\"It's the truth.\"\n\nHe squeezed her breast again and said, \"You want to...\"\n\nShe shook her head.\n\n\"Jesus Christ, Doug, it's going to fall off if you keep using it. I'd forgotten what it was like to be with a young man. But...I...I'm tired. I've got to go in for that early morning department meeting at 8. You can stay here tonight. Kelly and BJ shouldn't be back here until late afternoon, but I want you out of here before they get here.\"\n\n\"I should be up and out by 9 at the latest. I'll try to avoid Little Miss Hot Pants...\"\n\n\"Doug....\"\n\n\"I was just teasing. I don't want to have her catch me alone here either, Deb.\"\n\n\"Make sure she doesn't. She and Bill Jr. are both spending the night out so there shouldn't be any chance of your crossing paths with either of them.\"\n\n\"You sure you....\"\n\n\"No, Doug. It was great, but I have got to get some sleep. Anyway...\"\n\n\"Don't tell me, now you're worried about Bill again. Or guilty. Or both.\"\n\n\"It's stupid, but...I'm here with you and Bill hasn't been with anybody that I know of. And now he's alone on that cruise ship with a bunch of honeymooners and people are probably getting laid all around him and I can't see Bill getting into that. Or him having any luck getting somebody into bed.\"\n\n\"Deb, people change. Just because the two of you lost it, doesn't mean there isn't ANYBODY that would fuck him. Shit, I've been on those cruises. Must be something about the sea air. A hunchback dwarf could get laid. Trust me, I'll bet he's banging some horny broad right now. You'll see. He'll come back relaxed and a lot more human. That's probably a lot of what's been wrong with him. He just hasn't gotten any ass in a long time. That will make anybody grumpy.\"\n\n\"Probably.\"\n\nWhich should have been reassuring, but as she turned in the bed to spoon against Doug's lean, muscular frame, she wondered why the thought of Bill fucking another woman was more than a little disturbing. It wasn't jealousy. But...\n\n######################## \n\nMonday, July 18, 2005 -- 2 a.m.\n\nThe Alpha Lounge was smoky as hell. The French would never give up their cigarettes and while they might comply with U.S. health laws in public sections, any purely French bastion was going to be awash in carcinogens. It seemed like every crewmember, except Aline, was puffing away and half the invited guests were as well.\n\nI thought about dropping to the floor to get a gasp of fresh air, but Aline hadn't let go of my hand since we had entered the Lounge. I felt like a high school kid trooping along behind his girlfriend, which was at the same time embarrassing and a source of pride. I saw the way most of the male staffers and a few of the male guests stared at her, and then at me, and I realized there wasn't a one of them that didn't want to be the one holding her hand.\n\nA male and female were on piano and guitar and playing everything from 60s American oldies to some things that sounded like they might have been sung by \u00c9dith Piaf in the 50s and maybe Billie Holiday in the late 30s. I thought I recognized \"La Vie en Rose.\" I'd always liked that.\n\nThey had a bartender and a fully stocked bar as well as a table groaning with what looked like caviar, lobster tails, what was probably Duck a l'Orange in a thick sauce and, if I didn't know any better, trays of what had to be escargot.\n\nI'd been introduced to escargot on my first trip to Paris and oddly enough for a Florida boy who came from a small West Virginia mining community, I loved them.\n\nAline led me first to the food table where I grabbed a few escargot to her amazement, spooned up some caviar.\n\n\"Are you sure you're not French?\"\n\nShe dragged me around to introduce me to staff and guests, making sure she held my hand. We were greeted with knowing glances. One male staffer was sitting in a chair near the side of the lounge and doing everything but fucking a half-naked woman about 20 years his senior in the chair. Aline slipped up next to him and kicked him in the calf. He tore his mouth away from the woman's neck which he'd been nuzzling.\n\n\"Ren\u00e9, get a room.\"\n\nHe started to say something, then sheepishly pulled the older woman to her feet and took her out of the lounge.\n\nShe looked at me with an embarrassed expression.\n\n\"This is not a private orgy for staff and guests. Some...romancing... takes place on every trip, but staff and especially male staff are warned to be discreet. He was being a pig. He's fortunate the captain or one of the upper echelon officers didn't pop in.\"\n\nAs we walked I finished the Hors d'\u0153uvre I'd grabbed and Aline pulled me toward the open area in front of the musical duo. They were playing something vaguely Spanish and thrilling, but it was okay for slow dancing.\n\n\"Dance with me,\" she said and molded her body next to mine. She was as tall as me and rested her chin and neck on the side of my face. I had never been any great shakes as a dancer, but I was able to move her and myself around the floor without stepping on her toes. I could feel what I knew were nipples popping up and rubbing in circular patterns against my chest.\n\nFor the first time in months I felt stirrings and my pants began to get tight in an area that wasn't usually affected. I felt again like a 7th grader getting a hard-on at a school dance, terrified to step away from the girl I held because my condition would be obvious, but also petrified that my condition was so obvious I'd rub it all over my partner and she'd slap my face or run screaming.\n\nShe whispered into my ear, \"It's alright. I'd be a little insulted if I had no effect on you.\"\n\nI kept my mouth shut and concentrated on abstruse mathematical problems.",
        "After awhile, when my condition had abated, she took my hand and led me to the bar, where I ordered a Bloody Mary, what else, and she a white wine.\n\nAs we stood there drinking and talking, a tall redheaded woman in a dress with what looked like hundreds of thousands of dollars of real diamonds and gemstones embroidered into the fabric walked up to Aline and, glancing at me, asked, \"Aline, darling, who is your friend? Your very close friend, it appears. Do you realize you haven't let go of him since you two walked in here?\"\n\n\"Ms. Stein, let me introduce you to Mr. William Maitland. He is a barrister.\"\n\nShe looked at me with only a little disdain and asked, \"An attorney? Mergers and acquisitions, stocks, international affairs? Entertainment? Are you located in New York or Los Angeles. Who do you represent? Anyone I'd have heard of?\"\n\n\"Criminal law,\" I answered before Aline could say anything. \"And I represent clients who've been murdered, raped, robbed or maimed.\"\n\nShe looked at me and her jaw almost literally dropped.\n\n\"Criminal law? Murder and rape and robbery?\"\n\n\"Fraid so. Not as exciting as corporate or entertainment, but somebody has to do it.\"\n\nAline fought to hide her smile.\n\nMrs. Stein, whose big breasts and nice behind had obviously been poured into her dazzling dress, took a deep breath and purred, \"A prosecutor. You know...I think...you are The Angel of Death. Aren't you? I saw your story on a web news site. \"\n\nShe stepped between Aline and myself and grabbed my free hand, placing it squarely over a heaving mound of soft breast flesh.\n\n\"That is so exciting. When I saw your picture, all in black, you looked...hard...and powerful. Are you that hard...and powerful...in all areas of your life, Mr. Maitland?\"\n\nWithout being too obvious, Aline pulled me toward her and at the same time interposed her body between myself and Mrs. Stein. With a sweet smile, she said, 'I'm afraid that is all media hyperbole, Ms. Stein. Mr. Maitland is a very sweet man in all ways. Oh, Bill, didn't you say you had an early appointment tomorrow? I'm so sorry, Ms. Stein, but I'd better get Bill out of here.\"\n\nWith that she whisked me away before the diamond lady could spell out an objection. We approached the outside rail and I just raised my eyebrows. Aline laughed and said, \"I'm sorry, but in another moment she would have been unzipping you.\"\n\nI felt like I was 18 again and couldn't help asking, \"And that would be a bad thing -- why?\"\n\nThe smile flickered.\n\n\"You would have wanted that fat old cow touching you?\"\n\n\"Not her.\"\n\nI stared into her eyes and she dropped her gaze. I would have sworn she blushed.\n\nI didn't know where the dialogue was coming from. I should be tongue tied and awkward, but I was able to spar with this gorgeous woman in the eternal joust that was male/female relationships. I began to wonder if the 20 year-old I had once been had just been sleeping for the past 20 something years and had decided to come back to life. Or if it was simply being around this woman.\n\nI turned back to look at the waves dropping away in our wake/ The stars were brilliant points in a jet-black sky. There were no clouds. A fat, gibbous, almost completely full moon hung seemingly over the stern of the ship, looking big enough and close enough to touch.\n\nThe moonlight washed across her face. It made her flesh look more than living stone than human flesh.\n\n\"She walks in beauty, like the night, of cloudless climes and starry skies, And all that's best of dark and bright, Meets in her aspect and her eyes,,,\"\n\n\"You remember your Byron. Do you use that line often with impressionable young ladies?\"\n\n\"I might have, once, 20 years or so ago. I don't know why I said that. It just came out.. Something about the way you look tonight brought it out.\"\n\nI put my hand on the side of her face and she leaned into me.\n\n\"Don't do this, don't do this, don't do this,\" the better angels of my nature screamed at me as I leaned forward and captured her lips. \n\nThis wasn't a frantic, tongue twisting against tongue kiss like the first one we had shared. This was soft and yielding and there was only a little tongue. \n\nI thought back to Debbie and I wondered when was the last time we had shared a sweet, loving kiss. Not a husband/wife kiss, but one like this. Where had those kisses gone?\n\n\"Go away Debbie,\" I said in my mind, casting out the ghost of really good and really bad times. She was my past and she had no right to keep dragging me back to a life she had shattered.\n\nI finally got the willpower to push Aline away gently. I tasted mint on my lips. What in the hell was I doing?\n\n\"I'm sorry, Aline. I shouldn't have done that.\"\n\n\"Sorry for what? It was just a kiss.\"\n\n\"I'm still a married man, for awhile longer. And you apparently are happily married.\"\n\n\"Most men learn when they're in their teens...if a woman doesn't tell you to stop, she probably wants you to keep going.\"\n\nShe resumed the kiss and this time it was a harder, more insistent kiss. She pressed herself against me and again I started to get hard. Just my luck. I'd been limp for more than three months and the one time I start to get hard, it's with a woman that I can't use it on. Or, at least, I shouldn't.\n\nAs the kiss continued she moved so that she was pressed against me and I know she was deliberately rubbing her groin against me. They say a stiff dick has no conscience. Mine did, but not enough willpower. I pushed back against her and she moaned in her throat.\n\nI had to stop this....but she had said, she was French. And we were on French soil. And they did things differently here.\n\nWhere in the world is it okay to bed a married woman when her husband is far away? No country I was aware of. \n\nI finally summoned up the strength from God knows where to push her back. We became unattached and we both tried to catch our breath.\n\n\"Before we retire, would you like to walk the ship, Bill? It is a different world in the early, early morning. Almost all the passengers are in their beds soundly sleeping and the staff is either sleeping or working below decks preparing for the coming day. It is as if we have the ship to ourselves. As if we are in our own little world.\"\n\nWalking was better than remaining here because if we stayed here, I was afraid that my dick would not only lose any shred of willpower it still had, but my conscience was also going to retire for the night. \n\nAnd that would mean one of two things: the first that I would further insult and possibly lose the chance to spend time with this woman, because it was possible this was just the way married French women flirted with male friends and she didn't really want my middle-aged body in bed with her.\n\nOr worse, we would wind up in bed, and if that happened, how was I any different from Doug?\n\nWe went back in through the door that had been propped open and replaced the metal bar. As we walked past the Lounge entrance, I heard music and what sounded like loud female moaning.\n\nShe gave me a small smile.\n\n\"When it gets very late, I'm afraid things sometimes get a bit...wild.\"\n\n\"Well, Heaven knows, we don't want to be in there right now. It might be...catching.\"\n\nShe just poked me in the ribs with her elbow and said, \"Are you sure you're just an old married man? Or is that a ploy you use to throw suspicious women off their guard around you?\"\n\n\"I was...more married than you can imagine. 'Was' being the operative word.\"\n\nWe went down the elevator to the sixth deck and walked out to the bow of the ship. Now I could imagine we could see lights in the far distance, many miles away. Then I realized it was light, but not the constant light of buildings or the winking light of buoys.\n\nThis was a faint flickering of light that seemed to grow from the horizon into the dark sky, and then snaked back, casting a pale aura in all directions. Since we were heading for Marsh Harbour I figured the lights were coming from that direction. \n\n\"It is storming over Abaco,\" she said. \"That is lightning. It should be ending by the time we get close.\"\n\n\"Is there anything that happens out here that isn't flat out beautiful?\"\n\nDespite the distance, I felt the first few drops of rain begin to pelt us. I didn't consciously think out what I did, but I held my arm up and she moved into it. We stood together watching the lightning without words as the breeze picked up.\n\n\"Why did you accept the babysitting assignment, Aline, really? If you hadn't, there is no way we'd be here right now, like this? I know you wouldn't have given me a second glance.\"\n\n\"Why do you do that?\" \n\nShe placed her hand over mine.\n\n\"I know women have approached you, despite the pall you cast about you. And you turn every one down. You assumed I was interested in you simply because I had taken on the assignment of watching you. Why do you automatically believe no woman could be attracted to you, for yourself?\"\n\n\"Because I'm not blind and I can look in a mirror. Because I'm not tall, and I'm not hung and I'm not a hunk. I faced that fact a long time ago. In my world, if a woman approaches me, I know it's because I can do something for her in my official capacity or in some other way. I do not turn women on. \n\n\"And the one woman I ever really thought or hoped might love me, told her lover that she couldn't stand being around me anymore. She had to build a life away from me. That kind of shakes your confidence.\"\n\nShe turned into me and with her hand on my chin made me look into her eyes.\n\n\"You want me to tell you that looks don't make a difference in how women respond to men? I won't insult your intelligence. Of course an attractive, well-built man with confidence attracts women. But it's only among men that looks tell almost the entire story.\n\n\"Where women are concerned, we respond to strength, to power, to confidence, sometimes to arrogance. A woman sometimes wants to feel controlled by a man, no matter what women liberation types will tell you. We also respond to caring, to courage.\n\n\" I think you're probably right that your wife loved you for what you did that night. You might call it hero worship, but it is deep within all women to respond to that kind of male courage. It didn't last with her, but Bill, she is not all women. She is ONE woman, and there are a whole world full of women who would be interested in you.\"\n\nShe leaned into me and brushed my lips. It wasn't even a full kiss, but my cock twitched.\n\n\"I had your picture when you first came on the Bonne Chance. I was looking for you. I watched you. And...this will sound strange, but there is something about the way you move. I can't put it quite into words, but you move...with grace...and balance. Even walking among other passengers I noticed it.\n\n\"And...if I say that you made me think of a tiger, a great cat, you will laugh. But, it's true. You moved as if you saw everything around you at one time. When you looked at people, it was as if you were looking through them. \n\n\"You are not a bad man, Bill, I can say that from knowing you only a few days, but I would not want to be around you if you were a bad man. There is something inside you...\"\n\n\"Now I know you're imagining things,\" I said, knowing that part of what she was talking about had to be the training Carlos had imposed on me. There is a grace and balance to boxers that you don't realize if all you ever concentrate on is muscular men pounding on each other.\n\n\"And the other thing, which I also think you never realize, is the air of command about you. You remind me of the Captain. He does not have to raise his voice. He expects people will do what he tells them to do, and they do. I think in your professional life that is the way you act. That kind of strength and power is very attractive to some women. Maybe if you had brought that strength to your home...\"\n\nWe stood there in silence watching the approaching storm until I said, \"When I saw you for the first time that afternoon, the hairs on the back of my neck rose. Usually that only happens when you sense a threat, some terrible danger approaching. Are you a terrible threat?\"\n\nShe turned her back and nestled against me.\n\n\"When you looked back at me and I realized you knew I was watching you it was as if an electric shock ran through my body. There is only one other time I have experienced that sensation....It was the first time I saw Philippe, my husband, at a party in Paris. We looked at each other across a friend's apartment. He was gorgeous and I knew without any doubt we would be leaving together.\n\n\"The reaction I had to you frightened me. I couldn't understand it. You were a stranger. I'm still not sure I understand it. Except that meeting someone who will be important in your life....is a frightening thing.\"\n\nI thought about her words. Could I see myself as a tawny beast of prey moving through the human herds, making women wet with my aura of power? Even putting it into words made me want to laugh. \n\nBut, why would she say it? I realized that if she was doing all this just to get me into bed and get a bonus from Edwards, that made her nothing but a whore. And if I had any instincts at all after 10 years as a prosecutor, I didn't sense that. \n\nMaybe the boxing and the loss of weight and the new fitness and the bald head and a sense of authority I carried over from my job might make women look at me differently, but that much differently? From dud to stud? Except, as divorcee Lee had told me, I had been married and off the market for nearly 20 years. Now I wasn't.\n\nI nestled my face in her dark mane and breathed in an unfamiliar fragrance. If this was friendship between a man and a woman French style, I could live with this. \n\n\"You never did answer my question. Why did you really accept the babysitting assignment?\"\n\nShe moved in my arms to face me, her ass rubbing my cock as she did so and this time it jerked against her. She grinned and said, \"Down, boy.\"\n\nThen:\n\n\"I told you the truth the other night...just not the entire truth. I did see the story about \"The Angel of Death.\" Your reporter, Mr. Cameron I think the byline said, did a great job of painting you as a little more than human. I was intrigued, but I had a more personal reason for being interested in you. I told you I had an interest in legal matters.\n\n\"My husband, Philippe, is a prosecutor in Paris, one of what is called the avocats g\u00e9n\u00e9raux -- deputy prosecutors - in the office of the Procureur de la R\u00e9publique, the Chief Prosecutor. We have been married for near 10 years and through him I have come to know a great deal about prosecutors and the courts.\"\n\nI felt as if the deck of the ship had suddenly evaporated under my feet and I was floating in the air.\n\n\"Would that be Philippe des-Jardins, in the Paris office?\"\n\n\"No, des-Jardins is my maiden name. I have kept it because I was employed by the cruise line before we married.\"\n\n\"Could it be....Philippe Archambault?\"\n\nShe gave me a surprised look.\n\n\"How did you know?\"\n\nGod, please make this be a nightmare.\n\n\"I met him about three years ago, in Paris, Aline. It was on my first trip to France. We were working a human smuggling ring transporting young Muslim girls from poorer sections of France, primarily around Paris, for prostitution in Florida and the U.S. Philippe was my liaison. We worked together for a week.\"\n\nThe big, good-looking, friendly Frenchman had taken me out drinking and to some local dives after hours. He had introduced me to Escargot and other delicacies and some interesting sections of Parisian low-life. I had asked about his wife one time and he had simply said she was away on business.\n\nHe had been very friendly, too friendly, to a secretary and a junior female barrister in his office, as well as an attractive lady cop and a female bartender at one of the dives frequented by cops, crooks and prosecutors. I figured he was banging them all, but it was none of my business and he seemed like a good guy. Definitely a hard as nails prosecutor and we worked well together.\n\nIt was still none of my business, but holding his wife in my arms wasn't something that made me feel good about myself. He might be a cheating asshole, but...\n\nI had released my hold on her and I stepped back away from her.\n\n\"What's the matter, Bill. You know my husband? So what? We haven't done anything terribly wrong. A little flirting, a little dancing. Is that so terrible?\"\n\n\"Maybe not in your world, but in mine....that's how my life fell apart.\"\n\nShe stepped up to me and lacing her fingers behind my neck she literally forced my lips to meet hers. I could have stopped her, but I didn't. I didn't want to.\n\nShe let me go and said, \"We have not gone to bed, Bill. And I know that Philippe, if he isn't in bed with another woman, will be tomorrow or the next day. Don't waste any of the precious little time we have left worrying about endangering my virtue. You know very little about me, or my marriage. Can you just enjoy the next few days? Don't think. Just be with me.\"\n\nI remembered the Big Man's admonition, \"let yourself be surprised.\" I was sure as hell surprised. And had been since the Bonne Chance had left its Jacksonville berth. \n\nIn my wildest dreams, I never could have imagined myself holding a woman like this in my arms; a married woman, a married woman whose husband had befriended me, a cheating husband who was screwing around on this beautiful woman while I seriously considered sleeping with her.\n\nNo, not sleeping. I might as well be honest with myself. I was thinking about and a large part of me was hoping I'd be fucking her at some time in the near future.\n\n\"I'll try.\"\n\nWhen we reached my suite she kissed me after I'd opened the door and then backed away.\n\n\"No, I'm sorry, Bill. It's not that I don't want to, but...\"\n\n\"Goodnight, Aline. Thank you for this night. And for the last few days. You don't have anything to apologize for.\"\n\nAs I laid myself down on the that huge circular bed a part of me was disappointed that she wasn't with me, and another part was glad she had walked away. Damned if I could figure out which part of me I really agreed with.\n\n###################################################\n\n.\n\nMonday, July 18, 2005 -- 8:30 a.m.\n\n\"Oh shit!\"\n\nShe sat upright in bed as she realized what had disturbed her subconscious. Light was shining in through the bedroom window. It was too light for 6 a.m., which she'd set the alarm for. She looked over at the alarm clock. It was flashing. It had stormed during the night and knocked the power off just long enough to turn the alarm off.\n\nDamn, she couldn't afford to be late for this meeting. She had the feeling they were just waiting for cause to take action against her, and missing a critical planning session would be one of those causes. Doug raised his head and stared at her sleepy-eyed.\n\n\"I overslept. You can sleep a little longer, but I need you out of here within the hour, okay?\"\n\nHe grunted and fell back to sleep. She had an outfit ready and had showered the night before. But it still took time to get dressed, brush her teeth, get her hair ready and grab a mini-bagel on the way out the door.\n\nShe was twenty minutes down the road before she realized she had rushed out without a folder on the bedroom dresser. Even if it made her late, she needed the papers in the folder or she really would look like the dumb blonde she had always thought some of the senior male professors regarded her as. Shit, shit, shit.\n\nShe had the motor off and the driver's side door open even before her 2004 Nissan 350Z had come to a complete halt. She was inside the front door and headed up the stairs to her bedroom and had her hand on the doorknob when she froze.\n\n\"mmmmm...ohhhhh.....god baby...that feels so good...damn suck it....\"\n\nFor a moment she wanted to back away and then when she wanted to open the door it was as if she were paralyzed. She just stood there with her hands on the doorknob.",
        "\"You like that, dougie...oh yeah...I see you do. God you're so huge....\"\n\nThere were more sounds of licking and slurping and then....\n\n\"JESUS CHRIST! Kelly? What the- what the fuck are you doing?\"\n\n\"What does it look like, dougie......just what your big fat beautiful cock needs....you can squirt...\"\n\nShe could hear sheets and blankets moving and....\n\n\"Oh, you meanie...give it back...I want to play with it.\"\n\n\"God damn it, Kelly. Get away.\"\n\n'It's okay, baby. She's gone. I heard her driving out. We've got plenty of time. Come here...\"\n\n\"No. What the hell are you doing in here anyway?\"\n\n\"What does it look like. I'm going to suck your big beautiful dick dry and then you're going to fuck me.\"\n\n\"Go back to your room, right now Kelly. I've got to get dressed and get out of here before your mother gets back. She'll never believe we weren't doing something.\"\n\n\"Doug, you know you want me. I'm not a kid. I've seen the way you look at me when you don't think she's looking and in the pool that day....\"\n\n\"Look. I look at you when your mom doesn't notice because I'm a guy. You are gorgeous. But that's all it is. And that day in the pool...that was a mistake..I just...it was a mistake. Now please, put some clothes on and get out of here.\"\n\n\"That's so stupid. She's too old for you. Don't you think I'm prettier?\"\n\n\"Oh fuck. Listen to me Kelly. Please. If anyone finds out what you were just doing, if they thought I was having sex with you, I'll go to prison. You are jailbait, a minor under the age of 18. You are a heart stopper and you will be something else in a few years, but you're not worth going to prison for.\"\n\n\"I'll never tell anyone, Doug. I promise. I really do like you.\"\n\n\"That's not the only reason. I really do care about your mother.\"\n\n\"Oh please, she's old. Her boobs are starting to sag.\"\n\n\"She's not you, but she's not old. And I -- if she'd move with me I'd make it permanent.\"\n\n\"Gag me. Yuck. That's disgusting.\"\n\n\"Put some clothes on.\"\n\nBoth of them jumped as Debbie spoke. Kelly sat nude with her legs folded under her on the edge of the bed. Doug was obviously nude but keeping a bed sheet on him.\n\n\"You heard me, Kelly. Get your clothes on and get out of here.\"\n\n\"But-\"\n\n\"Do it. I'll be in to talk to you in a minute.\"\n\nThey engaged in a staring contest for a minute and then Kelly got off the bed, picked up her pajamas off the floor and glanced at Doug, then flounced naked out of the room. \n\nDoug waited until she left, then got up nude and started walking toward Debbie.\n\n\"Baby, listen, it's not what you think. I swear to God, nothing happened.\"\n\n\"I know. There's a Glock in the wall safe. The fact that you didn't do anything is the only reason I'm not getting it out right now and blowing your brains out.\"\n\nHe reached out to her and she stepped back abruptly.\n\n\"No, don't touch me. Get your clothes on.\"\n\n\"But-\"\n\n\"Get dressed Doug. Now.\"\n\n\"How long were you out there? Did you hear? I swear to God, I didn't know it wasn't you at first. She got to me while I was asleep. As soon as I woke up I pushed her off.\"\n\n\"I heard enough, Doug. Now put some clothes on. I still need to get to that meeting.\"\n\nHe pulled his pants on and then slipped loafers on and went to grab his shirt out of the bathroom.\n\n\"Debbie -\"\n\n\"Leave, Doug. No, on second thought, look around and grab anything of yours you might have stowed here. I don't want you to have to come back.\"\n\nHe looked at her as if stunned.\n\n\"Not coming back? What -- If you heard...\"\n\n\"We're through Doug. We'll have to work together, but...I hope you'll go ahead and find another job somewhere else.\"\n\n\"I don't believe this. Why are you doing this?\"\n\nHe grabbed her by the shoulders and pulled her to him. She let him kiss her and let herself enjoy it for a moment. It didn't matter anymore. She felt his cock start to get hard and herself start to get wet. It was just that easy and quick. She pushed him away and despite his strength when she wouldn't stop he backed off.\n\n\"Why Debbie? You can't be serious. Why are you doing this?\"\n\n\"I know you didn't plan this. You had no way of knowing I'd be coming back. If you were going to mess around with her this would be the perfect opportunity. That's the reason why I'm not going to tell Bill about this.\"\n\nShe backed away and tried to hold back tears. She had to be iron. She couldn't give him the slightest hint of encouragement that she might change her mind.\n\n\"I'm not going to tell him because I think he might kill you, and I don't want to see his life destroyed. And I don't want you murdered. Bill could do it. He doesn't think I know anything about his life, but he has people that would see that you vanish. \n\n\"But I don't want that either. You can't help being who you are. You can't help flirting. You can't help attracting women. I blame you for starting things with Kelly. You didn't have to do that, but expecting you to be any different would be like expecting a pig to fly. It's not in your nature. But we can't keep seeing each other.\"\n\nHe shook his head.\n\n\"I'll get out of here. I won't come back and we can see each other at my place. Or we can go on regular dates. Hell, I'll meet you places. As far as Kelly, I won't take her calls and I'll treat her like cancer. No contact. I haven't lied to you. Ever, except not letting you know I planned to get you into bed. And you knew that all along anyway.\"\n\nHe pulled her to him again.\n\n\"This is crazy. We have a good thing going. I hate it that this happened, but don't do this.\"\n\nShe pushed him away.\n\n\"I'm not going to change my mind, Doug. It's not you. It's me. I shouldn't have started this, not till I was completely through with Bill. Remember, I told you I wanted to wait until we were through. But I didn't. I went to bed with you before I even told him I was divorcing him. I brought you into our -- Bill's bed. I told myself the kids were old enough to accept it. But you can see how well that went. BJ spends less time here than he ever did and Kelly is trying to get you into bed.\"\n\nShe reached out to touch his cheek and she felt more than ever the real gulf between their ages.\n\n\"I told you this wasn't going to last, Doug. It just would never have worked out. I've loved our time together, but I can't take the chance of something happening with Kelly. I was 17 once, and a lot wilder than she has ever dreamed of being. She won't stop. She's enamored with you. She probably thinks she loves you. And I'm her mother and I've got you. That's an irresistible challenge to any 17-year-old.\"\n\n\"This just isn't fucking fair, Deb. And you know it.\"\n\n\"I wasn't fair to Bill when I went to bed with you while I was still married to him. I wasn't fair to him when I shaved my pussy for you and lied to him about it. I haven't been fair about a lot of things. Fair doesn't matter. I can't have you in my life anymore, Doug.\"\n\n\"How can you be so fucking cold, Deb? I know you said you didn't love me, but you don't have any feeling for me at all?\"\n\n\"Because I let myself forget I'm a mother. I was selfish and I was only thinking about that wonderful dick of yours. I put my kids second to you. But, you were never going to be around forever. My kids will be here when you're gone. They'll be here when Bill is out of my life permanently. No matter who I meet in the future, they're what counts.\"\n\nHe looked like he wanted to say something, then just stopped and walked toward the bedroom.\n\n\"Have a good life, Deb. If you change your mind, call me.\"\n\nWhen she heard him walk out she went to Kelly's room. She had put on short shorts and a low cut blouse. She was pretending to look at something on her laptop.\n\n\"I'm not going to give you a lecture because I was 17 once. But, he's almost twice your age. Even if he had sex with you, you're just a kid. You think he's going to be interested in you for anything but sex?\"\n\n\"That seemed to be more than enough for you, Mother. Or were you going to marry him and let him make an honest woman out of you?\"\n\n\"I'm not you. I'm a grown woman.\"\n\nShe flung the laptop down on her bed.\n\n\"You're an old woman. Old. Your beasts are sagging. You're getting wrinkles. You know that? And you walk around in those damn tight blouses pushing your tits into every man's face that will look at you? You flirt with my boyfriends. Do you know that, you damned bitch? They all call you their favorite MILF. You know what that is? All my girlfriends laugh at you behind your back.\"\n\n\"I can't help the way I look, Kelly. Guys look at my tits. They have since I was younger than you. What am I supposed to do, wear a Burqa or a potato sack? You're going to be the same way. Guys will never look you in the eye. And they're going to be try to grab a feel anytime you turn around. Your teachers and professors in college will be offering you all kind of opportunities for easy grades. You just have to be a little friendly, that's all. I've been there. I don't have to flirt with guys, they do enough of that.\"\n\n\"You make me sick. You do it deliberately. You've been flirting with guys behind Dad's back since I was old enough to realize what you were doing. I'm glad he's left you. You don't deserve him. Yeah, he's stuffy and a wet blanket about a lot of things, but he's never messed around on you. And I don't know how many fathers of my girlfriends that I could say that about.\"\n\nDebbie stepped back. No matter what, she was going to be late to her meeting. Doug was gone. It was going to be a bad day all around. But this shit still stuck in her craw.\n\n\"Stick up for Saint Bill. Why don't you go live with him if you're that crazy about him? Oh, I forgot, he didn't want you, did he? Plenty of time for other people's kids, but never for you and your brother. How many school events has he been to? How many has he missed? I know you love him, Kelly, even if he doesn't. But that's blinded you to the truth about him. If you were in my shoes you would have left him a long time ago.\"\n\n\"He's got a busy life, Mom. But maybe I'll go move in with Doug?\"\n\nShe smiled.\n\n\"I'm going to be 18 in three weeks, Mom. I'll be legal. You can't keep me here. And when I show up at Doug's apartment with something real low cut, showing off my tits -- that don't sag -- you think he's going to throw me out? I don't think so. I'm going to suck that big fat dick that I've heard you moaning about at night. You know you guys have sex so much at times the whole house stinks of it?\n\n\"I'm closer to his age than you are. I'd be a much better match for him. I might even go to UNF for a four-year program. I could cut expenses by living with him. I think he'd like that. I think I've got a shot mom. He's young, hot, he's got a great job and he makes decent money. I think he'd be a good dad.\"\n\nShe stepped off the bed, those proud young breasts pointing out ahead of her, the way Debbie remembered hers doing once upon a time. She was almost Debbie's height and so she was staring eye to eye as she said, \"I think I can grab him. And if I do give him a baby, I'll be Mrs. Doug Baker and you'll be his mother-in-law. Wouldn't that be sweet?\"\n\nShe was lashing out before she could stop herself, drawing her stinging right hand back as Kelly almost fell back to the bed. There was a bright red outline of a palm against her cheek.\n\n\"You stupid little bitch....\"\n\nKelly rubbed her cheek, and fought back tears.\n\n\"Good shot mom. You really are a jealous bitch, aren't you. Did that feel good? Too bad Dad didn't bat you around years ago. You might have stayed married.\"\n\nShe sat back on the bed.\n\n\"Why don't you go on to your meeting, Mom. I won't be here when you get back.\"\n\n\"Kelly, don't be stupid. I don't want to have to call the cops..\"\n\n\"Oh yeah, right, you want the cops coming in to this. I'll just take a picture of this hand mark on my face so Children and Family Services will come in and remove me and BJ. I know that will do your job situation a world of good: UNF Professor investigated for child abuse. I can see the story now. Of course, dad will have to recuse himself if they file charges. Couldn't have him prosecuting his ex-wife. \n\n\"Don't talk shit. I'll let you know where I'll be. I'll probably go stay with Grandma and Granddad Bascomb until after I turn 18 and then I'll look for a roommate. I think Dad will probably pay for me to get an apartment. Especially when I tell him that I can't stand living with your slutty ass another minute.\" \n\nDebbie just stared at her daughter for a long moment. It was amazing how much she sounded like Debbie at 17. Of course, the old saying like mother like daughter had a lot of truth to it. Unfortunately, she did remember what it was like to be 17, stacked and horny. Shit.\n\nAs she walked past BJ's bedroom she didn't notice the door open a fraction of an inch and then close.\n\nShe drove to UNF, knowing she was late and would be reamed out by her department head, knowing that she'd have to face Doug almost every day, knowing that Kelly would probably be gone when she got home and that Bill would probably know about it as soon as he got back and if he deemed to talk to her at all, would rub it in her face that Kelly couldn't stand living with the Mother of the Year.\n\nShe was too old to cry and it would wipe out her makeup, but she felt like it. It didn't help that Bill, that self-righteous prick, was probably enjoying the sea air and fucking some desperate divorcee's brains out. Doug was right. Sometimes life just wasn't fair.\n\nMonday, July 18, 2005 -- 11:30 a.m.\n\nI didn't wake up until 10:30 a.m. when the day was well underway for most passengers. But I hadn't gotten to bed till well after 3:30 a.m. which was way out of my normal routine. I woke up alone in that huge round bed and for a second I couldn't remember where I was. Then I tried to figure out where Debbie had gone to. Had she already left for work? But, we were on a cruise, so she wouldn't be leaving for work.\n\nShe's probably gone down to get an early breakfast and let me sleep in. I stretched and felt the muscles in my back and shoulders tense and relax. Damn, that felt good. I tried to remember why I felt so good. (It had been years, a lot of years, since I'd felt my body so intensely, felt the muscles flex and stiffen, then relax.\n\nI closed my eyes and I saw Debbie coming back in in shorts and a tee shirt, which was her usual garb on our cruises. Those immense tits bulged out and bounced despite the bras and I knew a lot of male passengers and staff had gotten whiplash swinging their heads around to watch them as she bounced along on the decks and the restaurant.\n\nEven with a bra, her nipples would be poking out insistently and she'd grin at me as she slipped into the room.\n\n\"Teasing the hungry animals?\" I'd ask as she came in and deliberately jiggled when she knew I was looking at her.\n\n\"Always, baby, but I brought the goodies home to you,\" she'd say as she slipped the tee shirt and bra off and bounced into bed with me. I'd suck her right breast and then left, milking her as I did and felt the vibrations run through her and I'd know if I slipped a finger down into that pussy that was already creaming I'd feel her wetness running out. More than any other woman I'd ever been with, Debbie's tits were the gateway to her pussy. Suck them and in a minute she'd be ready for action.\n\n\"Why are you so wet? Have you been a good girl?\" I'd tease her and she would rub those soft tits all over my face, pulling them out of my mouth and dropping to encircle my already stiff cock and begin to rub them up and down.\n\n\"Yes. It was exciting, watching all those hot hunky men staring at my titties and my ass. And it got me wet, real real wet, but it just made me want THIS more,\" she said, dropping down to swallow my cock in one motion and take it down to my balls.\n\nI lay back and let her make love to my dick with her mouth and those incredible breasts. It didn't make any difference if a lot of the heat and the wetness of her pussy came from the excitement of bouncing around in front of strange men. \n\nShe'd always been this way. She loved exciting men, and as far as I knew it was the excitement of exhibiting herself that made her wet, not the thought of fucking other men. But she always brought it back home to me and I knew I'd need at least one viagra, if not two, before the day was over because once her motor started running, it was a challenge to keep up with her.\n\nBut it was a hell of a fun challenge. \n\nI stretched again and then like a photo coming into focus, the memories fell away and I remembered that had been 1995 -- our last cruise to Hawaii. I rubbed my eyes to get the sleep and the tears out.\n\nWhat the hell had happened to the sexy, loving woman who couldn't get enough of my cock?\n\nTen years and the State Attorney's Office and life had happened. As I put away those memories, the memories of what had happened last night rushed in to take their place.\n\nAline des-Jardins. I still couldn't figure her out. We'd only known each other for little more than a weekend. And our association had started only because it was part of her job. Still, there were those kisses, and the flirting. If there was not a kernel of real feeling there, she was the best damned actress I'd ever seen or heard of.\n\nAnd she was Philippe Archambault's wife, for God's sake. What were the odds of running into Philippe's wife and getting involved with her. As I lay there I remembered the big Frenchman. It was like the way it had been with Lew Walters, only not as strong. I just liked the guy. He was easy to like. Despite having movie-star good looks and holding a powerful position that probably far outranked me because he was really a cross between a federal and a state prosecutor, he was just a good guy.\n\nHe got along with other attorneys, French cops, crooks, barmaids and heiresses. He didn't put on airs. If I hadn't known just how powerful he was, I'd have thought he was just another prosecutor. \n\nAnd like me, it was the job that counted, the people we fought for that mattered. He had been as doggedly determined to track down the scum that were snatching Muslim girls out of the slums of Paris to force them into prostitution as he was prosecuting kidnappers that had stolen and murdered the nine-month old male heir to one of the world's largest shipping empires headquartered in Marseilles.\n\nI suddenly remembered one of the organized crime thugs that we'd talked to in a Parisian dive trying to get a lead on the Muslim slave trafficking ring. As Philippe had walked to the bar to buy a round for three criminals and three prosecutors and cops, the old man with an impossibly bizarre wig and two gold front teeth and two fingers missing on his left hand leaned over and in broken English said, something about pitying the poor fools who had \"le Diable\" on their tail.\n\nThe Parisian cop who was with us leaned over and laughing, said, \"He means, 'The Devil' as you Anglais would put it. Most of the low lives around here do their best to stay in good with Philippe because he didn't get that nickname lightly. The few who disrespected him are serving life sentences or feeding the fish somewhere. He is a hard man, but one who I like having on our side.\"\n\nThere was no doubt that he was a good man professionally. Personally I was sure he was screwing around on this dream of a wife. How could you be a good man and a scumbag at one and the same time?\n\nProbably the same way I could be a good prosecutor and a scumbag that would consider, seriously consider, bedding a friend's wife at the same time.\n\nAnd yet, and yet, and yet, she'd told me that I knew nothing about her marriage. She wanted to be with me, regardless of whether it was for the job or any other reason. Maybe nothing would happen. Maybe nothing should happen.\n\nBut, I looked inside myself and tried to remember the man who had set foot on the Bonne Chance on Friday afternoon. I didn't feel like the same man. When I thought about Debbie, it still hurt. It hurt like hell. But I didn't feel like a walking pile of shit anymore. I felt like a live, breathing, 41 , almost 42-year-old man, and I knew now that 42 wasn't over the hill. I had felt over the hill, and my marriage was over the hill, but I wasn't.",
        "Amazing what a couple of days of sea air, a flirting, gorgeous woman, and a few stolen kisses could do to a man's head. I made up my mind that when I got back the first thing I was going to do was walk into the Big Man's office and plant a wet one on his lips. Just to see the look on his face. And because I owed him big time for forcing me on this cruise, however it ended up.\n\nI rolled out of bed, brushed my teeth, took a shower and headed for one of the nine distinct restaurants the ship boasted. I found myself at Le Abbec, the cleverly titled sushi bar on Deck Quatre. It was open 20 hours a day and I treated myself to a dozen mini sushi combinations.\n\nI liked every kind of sushi except the ones that were basically slabs on raw fish on rice. That was a little much even for me, but for the rest, anything that had the name sushi I generally liked. I'd order it sometimes in a restaurant just to see Debbie, Kelly and BJ wrinkle their noses in disgust. I'd tried to educate them for years but finally gave it up as a lost cause.\n\nWhen I finished I walked around for a bit trying to decide what I wanted to do. What I WANTED to do was find Aline and pick up unfinished business. But that was probably coming on too strong. I got to thinking about her and myself and decided to take one of the cruise excursion boats into Marsh Harbour.\n\nAbaco is a beautiful small island, the closest in the Bahamian archipelago to the U.S., and relatively unspoiled. There are a few hotels and some nice beaches, but it was nothing like the tourist trap that was Nassau. Still it had specialty shops and that was what I was looking for. I got in there about noon, looked around until I found the right shop and went in. \n\nI told the owner what I was looking for and they started presenting their wares. I couldn't find exactly what I was looking for, but I knew what it was and in three hours they had created it for me. I took the excursion ship back with me to the Bonne Chance, placed my purchase in my room, and went out to look around. \n\nThe casinos were closed because we were still in Bahamian territorial waters, as were the shops on the ship. They wouldn't open until we sailed out in about three hours. So there wasn't a whole lot to do. I could have gone looking for Aline, but I just felt uneasy about that. Despite the fact that she wasn't making any big secret of her time with me, I felt like there had to be something vaguely unprofessional about making it too obvious. \n\nI wandered the ship, looked at the smaller ships and sailing vessels approaching the Marsh Harbour docks. We were anchored about a half mile off. I was standing there watching a yacht that looked to be about 35 or forty feet pass below us with a bevy of sunbathing beauties waving the tops of their bikinis at us when I heard her say, \"Obviously, there is some part of you that isn't serious all the time. Or are you admiring the lines of that sailing vessel?\"\n\nI couldn't help grinning back at her. As usual, her face was serious and if it weren't for the tone of her voice I wouldn't be sure she was teasing.\n\n\"I was admiring the lines all right, just not the lines of the vessel.\"\n\nShe half-heartedly slapped me on the shoulder.\n\n\"Merde. As my mother once told me, all men are pigs. Even the good ones.\"\n\n\"You count me as one of the good ones?\"\n\n\"What do you think.\"\n\nI almost reached out to pull her to me to kiss her, but I stopped myself. She was dressed in her ship's garb again, passengers were walking around us, and she wasn't obviously flirting.\n\n\"I hope so.\" \n\nShe gave a slight smile which as always transformed her face. \n\n\"Would you like to be the Captain's guest at his table tonight? It's a signal honor to be invited to eat with him and selected guests, and he asked me to pass on the invitation.\"\n\n\"You had nothing to do with it?\"\n\n\"No. He is ...aware...of your background, who you are. He likes to have an eclectic mix of guests for dinner.\"\n\n\"Sure. What time?\"\n\n\"7 p.m. Wear a suit.\"\n\nAnd then she was gone. The woman who had rubbed me the right way the night before was missing in action. But it was still nice to talk to her.\n\nI managed to kill time until close to 7, then shaved and dressed in the only good suit I'd brought. I took the elevator to Deck Quatre and entered the main dining room at about 7:10 a.m. I hoped they believed in the precept of being fashionably late. I told the waiter I had an invitation to the Captain's table and he led the back to a door at the back of the room. It opened to a room containing one large round table with seats for twelve.\n\nThere were three officers in formal blue and gold uniforms and Aline. They were seated together and there was an empty seat beside Aline. She looked up at me and gave me a small smile, gesturing to me to sit beside her. I did so and looked around the table. Ms. Stein was sitting almost directly across from me. The dress she wore tonight was black and cut to the nether regions in all directions, revealing more flesh than you'd see in the typical Jacksonville strip joint.\n\nThere was a lanky, blonde guy dressed way too casual for a night at the captain's table, but he didn't seem to mind and he did seem to enjoy the way Ms. Stein was flashing those breasts at him. His name was Gil something and he was another Jacksonville resident I'd never heard of. In the introductions I learned he was \"just a guy that used to work in research for Bell Labs. I got a few patents on a few little things in the electronics communications field and I decided to spend the rest of my life taking it easy,.\"\n\nThere was a young couple who turned out to have won a lottery in New Jersey putting them on this cruise, a billionaire who had made his money in cell phones and his wife who weighed 300 pounds if an ounce and looked at the food set before us with a lust that most men would have envied. There was a priest, a short, ruddy cheeked, thin redhead, Father Dunleavy, who I learned had won the Nobel Peace Prize for his work in trying to stop the genocide of the Hutu by the Tutsi in 1994 during the Clinton years.\n\nI shook his hand, telling him, \"I'm honored to meet you, Father. I've read about your work. You're a brave man and there aren't many people who can say they personally saved hundreds and possibly thousands of innocent lives.\"\n\n\"I was merely doing what the Lord led me to do, Mr. Maitland. As I understand you have done as well.\"\n\n\"The Lord has little to do with it, Father. I'm not really sure a lot of times if there is a Lord out there in the clouds somewhere.\"\n\n\"The Lord guides our actions, whether we know it or not,\" he said. \"I have to admit that from a professional standpoint, I have to say it's interesting for a man in my line of work to finally meet the Angel of Death.\"\n\nThere were a couple of blank stares so everyone on the entire planet hadn't seen Cameron's story and its offshoots. I shrugged and said, \"My reputation has been greatly exaggerated, Father. I know that in your line of work you've had a much more intimate acquaintance with the Angel of Death. Mine is just a title. You've seen the real thing.\"\n\nDunleavy looked at the young couple who were looking at me as if I'd grown horns and smiled at them, saying, \"I was just teasing our friend here. He is a prosecutor in the District Attorney's Office in Jacksonville. That appellation came from a mercy killing case he prosecuted this past week.\"\n\nNaturally they wanted to know all about it so I sketched the background of the case, what I'd learned, what I'd done and the outcome.\n\nThe young wife looked at me in horror and said, \"That poor man.\"\n\nThe billionaire looked at his wife as if he wished she were the late Ms. Bingham and said, \"Poor man, bullshit. He killed her to be with his girlfriend.\"\n\nWhich started a wide ranging debate until the Captain, a barrel-chested man named Charles Morel with a white beard despite the fact that he didn't look any older than his late 50s, tapped his knife on his water glass and said, \"Ladies, gentlemen, this is a fascinating debate. And I think this will be an interesting evening, but for now, let's enjoy the work of our chefs and we can resume the discussion later.\"\n\nWe ate and indulged in cross table discussions for the next hour. I looked at Aline during one lull and said, \"You look very fresh today.\"\n\nStein looked at us both and said, \"It's youth, sweetie. Aline hasn't hit her 40s and can party all night like she did until the wee hours and still look fresh. Of course, a woman...in love...always has that blush about her. Any secrets we'd like to discuss, Aline.\"\n\nShe blushed and then directed a look like a dagger at Stein and said, \"Ms. Stein, I'm afraid most of the people at this table haven't spent much time around you and aren't familiar with your...humor. They won't appreciate the joke. And...it is somewhat indelicate. You know that I am a married woman.\"\n\nStein just grinned at her and said, \"Married women can't fall in love? News to me. I used to do it all the time when I was married to my third, actually my third and fourth, husbands. It's the best tonic in the world. Better than vitamins. Actually, there are a lot of vitamins and minerals in it...if you do it right.\"\n\nShe glanced over at the housewife lottery winner and said, \"I bet you've fallen in love while you were married, right, sweetie?\"\n\nThe housewife just blushed, glanced over at her husband's piercing stare, blushed again, and then occupied herself staring at the food on her plate. \n\nThe billionaire's wife looked up from her plate and said, \"There should be a no-sluts allowed policy on family cruises, which I thought this was.\"\n\nStein just stared at her and said, \"Make that a no-pigs allowed policy and I'll agree with you.\"\n\nThe cruise director, a tall youngish man with neatly trimmed bangs, headed off trouble by saying, \"I've read some web stories based on this case and I believe it must have been a difficult case for you to prosecute, Mr. Maitland. Did you have any second thoughts about your course of action?\"\n\n\"Of course I did. A lot of cases, no. They're open and shut. But then there are the hard ones, and this was one of the hardest. I still think I did the right thing, but...to be honest I've had doubts since then.\"\n\n\"I wouldn't have your job,\" Gil said, the first words he'd spoken during the meal.\n\n\"A lot of people wouldn't. But, as I've told other people, somebody has to do it.\"\n\n\"The law is bullshit,\" the billionaire said around a mouthful of choice French braised beef. \"People that can afford it can do anything and little people get shit on. It's the way of life, and the law doesn't change anything. It just lets the morons think that there is some fairness in life.\"\n\n\"I think you would probably differ with that opinion,\" Dunleavy said mildly to me.\n\nI looked at the billionaire and said, \"The son of a man with almost as much money as you is sitting in a cell in Raiford today because he thought money would let him do anything he wanted. His daddy thought so too, but he found out the hard way that there are some things money can't buy. As for the little people...\"\n\nI grabbed an escargot and popped it in my mouth and washed it down with hot bitter coffee before telling them the story of Lilly Mae Longstreet, the victim in the first case I ever argued as an Assistant SA.\n\n\"Her killer walked free. Stayed free for about two years until he tried to shortchange someone in a crack deal. They found parts of him around the Westside for months after that. The ME -- Medical Examiner - said there were strong indications he was still alive when they started dissecting him. Somehow, I think Lilly Mae is smiling somewhere about that.\n\n\"She left two sons, age 7 and 9. That was ten years ago. The older boy was shot dead in an abortive 7-11 robbery a year ago. The younger boy is in a wheelchair and in minimum security prison in the Panhandle because he made the mistake of insulting a gang boss in the middle of a drug deal. He won't ever walk again, but someday he'll be a free man. I know that he's in a high school diploma program in the facility so he might make something of himself.\"\n\n\"Why does something tell me that you had a part in getting him into that program, Mr. Maitland?\" Dunleavy said with a slight smile.\n\n\"A friend of his said that he never forgets about victims in his cases,\" Aline said. \"How many prosecutors would have followed a victim's family for ten years? I don't think many.\"\n\n\"Her husband remarried the next year. His wife left him in a couple of years and he remarried again. He started drinking heavily after Lilly Mae's murder and never stopped. They found him in bed a couple of years ago. The medical examiner said a heart attack. He was 45. Lilly Mae herself never completed high school. I don't think anyone in her family ever got a diploma. She was just a hard working lower class woman who loved her husband and kids.\"\n\nI stared at the billionaire.\n\n\"Just Southern white trash as some people would say. No great loss to society. But she was a human being. She lived and had a right to a better end than taking a couple of .38 slugs to the head delivered by a fucking crack addict. That's what the law is all about; making everybody's life count. Even little people.\"\n\nThere was a long silence around the table and finally Dunleavy said, \"I understand now why you are the prosecutor that you are, Mr. Maitland.\"\n\nI ate the last escargot on my plate and washed it down with the last of my coffee. God, the French and food and drink are made for each other.\n\n\"I'm nothing special, Father. I put on a suit and go to work every day. I've never faced down a mob of machete-wielding bloodthirsty savages armed only with a Bible and faith. There are a lot of people like me, not many like you.\"\n\n\"There are not many like you, Mr. Maitland,\" Aline said softly. Under the table she grabbed my hand and squeezed it.\n\n\"Actually, I envy both of you,\" said Captain Morel. The attention of the table turned to him.\n\n\"I love what I do, and I pride myself that I am proficient at what I do. I hold the lives of thousands in my care and I feel that responsibility. And yet...\"\n\nHe studied a goblet of red wine on front of him.\n\n\"My parents wished me to study medicine. My father dreamed of my becoming a physician, as his uncle was. But, from an early age the only thing I wanted to do was go to sea. Which I did. I have never regretted the life I've led, despite the sacrifices it has required.\"\n\nHe sipped the red wine as he had throughout the meal. Then he sighed and looked first at Dunleavy and then at myself.\n\n\"It is only when I meet men such as yourself that I have any reservations about the path I have followed. You, Father Dunleavy, have ministered to souls and saved the lives of innocents. \n\n\"You, Mr. Maitland, have fought to achieve justice for any who have come before you. Both of you have touched and changed lives, made the world a better place. I have simply conveyed shiploads of tourists from one vacation spot to another. I love what I do, but, it seems so trivial sometimes.\"\n\nThe table was silent again for a moment.\n\n\"Captain, my father died when I was eight years old. I don't remember a lot about him. I was too young. But I remember walking in the woods with him. I remember him putting a rifle in my hands for the first time and starting to teach me how to shoot. Only a few memories, but I would take nothing in the world for those memories.\n\n\"Since I've been on this cruise I've seen children running around, swimming in the pools with parents. I can tell you that for some of those children, the days they've spent here on your ship will be the highlight of their lives. They'll lose parents to divorce or death, and when they look back years from now, it'll be this cruise they remember.\n\n\"I've seen honeymooners on the ship, enjoying the ship and each other.\n\n\"I know...you know the reason why I'm on this cruise, Captain. This morning I suddenly flashed back on the last cruise I took, a trip to Hawaii that my wife and I took ten years ago. We were off Maui one evening getting ready to sail back when my wife called me to the rail. The whales were swimming off the ship, not more than a few hundred yards. They were beautiful. I held my wife while we watched them. We were young. We were in love. We had two children at home and nothing bad was ever going to happen to us.\"\n\nI had to stop and take a deep breath. \n\n\"So don't ever say that you don't do anything important, Captain. You feed people's souls. You give them memories they'll take down into the grave.\"\n\nI had to get up. As I walked away I said to the people staring at me, \"Sorry. Need to step away for just a moment. Be right back.\"\n\nWhen I came back there were a few curious stares and the sympathetic looks I'd dreaded from the female contingent. Aline looked up at me briefly with a look I couldn't read. As if that were anything unusual. The sphinx was a chatter box compared to her.\n\nThe Captain just nodded and said, \"Thank you, Mr. Maitland. I forget sometimes, that we all have tasks in this life. I appreciate your reminding me of the role myself and my staff play in the lives of people we see for a few days and then will never see again. Now, the chef has prepared some of the most caloric deserts known in the Western World. Please take a look at the desert menus.\"\n\nThe conversation continued for about a half hour before people began to make their good-byes. Ms. Stein gave the laconic Gil a questioning look and he just nodded, then got up and guiding her by the elbow took her away with a grin. I wondered if anybody would see them for the rest of the cruise.\n\nMost of the staff left, including the Captain with one last handshake for Dunleavy and myself. The lottery winning couple hadn't said a dozen words to each other since Stein's question to the wife and I could see storm clouds over their heads. He couldn't stop staring at her and she wouldn't meet his eyes. Finally she got up and all but fled without saying anything to her husband and with a curt nod he followed her out.\n\nThe billionaire and his wife left with just nods to us and then it was just Dunleavy, myself and Aline.\n\nHe looked into my eyes and said, \"The captain told us, very briefly, about your situation, Mr. Maitland. I can tell from just our time together that you are a passionate man; passionate about what you do, passionate about the people you fight for. And I'm sure, passionate about the woman and marriage you are losing. I will pray that God works things out for the best for both you and your wife, whatever that is.\"\n\nHe stood up and after shaking my hand, looked over at Aline who had been quiet and said, \"I will also pray for you, Ms. des-Jardins. You said you were Catholic, so you must know that God is slow to judge human beings and he is forgiving of our human frailties.\"\n\nThen we were alone.\n\nI didn't have to ask. \n\n\"I knew he was a passenger and would be at our table. I met with him to discuss...some questions I have. He is a wise man.\"\n\nWe had been left alone in the closed room. The cleaning crew hadn't even come in to start taking the glasses and dishes away. I could hear the chatter of conversation among the last seating and the clatter of the serving staff taking away the last dishes and bringing coffee and desert to the late comers.\n\nWe just stared at each for awhile. Finally, she said, \"I feel....awkward....Bill. I think...perhaps...you must have a very bad opinion of me.\"\n\n\"Why?\"\n\n\"I think you....are.....expecting....something...\"\n\nAt this rate the conversation would take a month to complete.\n\n\"You don't need to spell it out, Aline. I'll accept that last night was mostly you, and not the Assistant Cruise Director. It was late, you'd been drinking and were ready to party, I hit you with a real tearjerker of a sad story and you felt sorry for me. You let yourself go further than you now feel comfortable going. You're a married woman. I get it.\"",
        "\"Bill -- I\"\n\n\"I said I get it, Aline. I never really thought deep down anything would happen. I can't say I'm sorry. I can't say I didn't want it to happen, but I would have had mixed emotions anyway, doing something with Philippe Archambault's wife.\"\n\nShe dropped her eyes and avoided my gaze.\n\nI reached into the inside pocket of my jacket and pulled out a small three-inch by three-inch purple case.\n\n\"What?\"\n\nI grabbed her hand and placed it palm up on the table, then placed the case in her hand.\n\n\"Don't talk. Let me finish this.\"\n\nI tried to find the right words.\n\n\"When I walked onto this ship four days ago, deep down I thought that my life to all intents and purposes was over. I was going to keep going, because there was nothing else I could do. But I wasn't expecting to enjoy myself. I hadn't had an erection in four months. I hadn't kissed or been kissed by a woman that I cared about in nearly four months.\n\n\"The only thing that mattered to me was my job, and maybe, making a connection again with my kids. But the part of me that was a man, that part I shut down. I wanted to forget that it even existed. Because there was nothing there but pain and contempt for myself. I just wasn't man enough to keep my wife.\"\n\nI reached out and ran one finger down the side of her face. \n\n\"And then I met you. You started changing me before I even knew who you were, or why you were staring at me. And then we met and we talked on the deck Saturday night. And then, there was last night. Even if it was all an act, and I don't think it was, it changed me. For the first time since...that night...I started thinking like a man again. It didn't matter whether I had any real chance with you...at least I started wanting to be with a woman again.\"\n\nHer eyes glistened.\n\n\"That's why...it doesn't matter whether what you said and the way you acted was from you personally, or just you doing your job. Why you did it, doesn't matter. What matters is the way I feel. You changed my life, Aline. When I walk off this ship I won't be the same man I was when I walked on.\"\n\nI reached over and gently lifted the top of the case off. The lights in the ceiling played on the gold fleur-de-lis pin inside. I reached inside and pulled it out. Her eyes grew larger. I took the case out of her hand laid the solid gold and diamond pin in her palm. The heart-shaped diamond in the center at the base of the pin twinkled under the lights.\n\nShe shook her head.\n\n\"No, Bill. No. This is impossible. I cannot-\"\n\n\"You can. And you will. The Fleur-de-lis is something you can wear with your uniform or personal dress. The diamond in the center is a symbol of our friendship. It's as close to being eternal as any substance on earth.\"\n\n\"It is completely inappropriate. I could not accept something so expensive. And...how could I ever...\"\n\n\"Show it to Philippe. Tell him it was a symbol of friendship from Bill Maitland. I hope he'll remember me. Tell him you met me when I was at a low point in my life, and my life changed in a week. Tell him he's a lucky bastard to have you in his life permanently. And that I envy him.\"\n\nShe looked down at it and ran her fingers over the heavy gold.\n\n\"How much....\"\n\n\"Seven thousand American. The diamond is not great quality and they gave me a deal on it.\"\n\n\"Too much.\"\n\n\"I'm not a wealthy man, but I'm not poor either, Aline. And what do I need with money? I make enough to support my kids, and I've never cared that much for money.\"\n\nI stood and pulled her to her feet to stand beside me.\n\n\"The bottom line, Aline, is that you have changed my life and I will never forget you. I doubt we'll ever cross paths again. It would make me feel good to know that -- a piece of me -- will be close to you. And that maybe, one day, you'll be holding it and think of me. That's all.\"\n\nI leaned forward and kissed her on the cheek. It had been a nice dream, but I really had never expected anything to happen. \n\nI was on deck as we sailed later that night. From what I'd read the Bonne Chance would slowly sail back, stopping for a full day Wednesday at a small private island in the middle of nowhere and then chug back into Jacksonville Thursday morning. It would sail out of Jacksonville for the next month and then move on further south to a port in South America which would be its home port for the next three months. It was the ultimate gypsy life.\n\nI went into a bar, grabbed a Bloody Mary and walked slowly to the bow. It was 11 p.m. I hadn't seen or heard from Aline and wouldn't. I watched passengers pass me, walking the decks, most of them couples holding hands or kissing. It should have depressed me, but somehow it didn't.\n\nAs I moved along the deck I saw a familiar figure leaning over the rail. I tried to remember his name.\n\n\"First time I've seen you without your better half,\" I told him. \"I thought you were joined at the hip.\"\n\nDan Jenkins turned slowly to look at me. He looked different without the ever present smile on his face.\n\n\"We were both out late last night and turned in early tonight. She's sleeping now. I had....nightmares. Couldn't sleep.\"\n\n\"Been there, done that.\"\n\n\"Have you ever loved somebody so much it felt like they were part of your own body and had them ripped out of your life....felt like somebody had taken your heart out with a rusty spoon?\"\n\n\"Yeah.\"\n\n\"The worst part is...the part I can't get my head around...is I don't know why. I thought we had it good. And then one day she waltzes in and tells me she's fallen in love with somebody else and wants me out...of our house...of our life. And she's never told me why.\"\n\nI thought about what he'd said. I didn't think there was any way things could have been worse between Debbie and me, but that would have been worse. Poor bastard.\n\n\"This is your second?\" I gestured vaguely back to the cabins.\n\n\"Yeah. Uh..I hope I'm not getting too personal, but I haven't noticed you with that French lady. You were inseparable the last few days. I hope...\"\n\n\"We were just friends. She's married and I'm still married, at least for another month.\"\n\n\"Do you mind if I get personal for a moment?'\n\n\"Why not?\"\n\n\"I'm a salesman. I know people. I read them. You have to be able to do that to convince people to buy something they're damned determined they're not going to buy. And the way she was looking at you wasn't the way you look at a friend. The same for the way you were looking at her. I'd be the last man on earth to encourage anybody to break up a marriage...but...\"\n\nHe looked back out to sea.\n\n\"After my first wife, Holly, left me, my life turned to shit. I drank too much, chased the wrong kind of women, and really didn't much care if I lived or died. And then one day, I had to go into this office for business. Just business. And Caroline was sitting at a desk. She looked up and our eyes met. I know...a bad clich\u00e9. But something happened.\n\n\"Looking back I know I could have walked away, told myself it was just my imagination, that no damned woman was worth taking a chance on. But I didn't. I felt like I was going to fall off the side of a mountain if I didn't walk over and talk to her. So I did and here we are. She told me she felt it too. So no matter what the cynics say, it does happen.\"\n\nHe turned back toward me.\n\n\"What I'm saying is that we never know how many chances we're going to get in this life. I thought I'd be married to Holly for the rest of my life. And when that crashed and burned I thought I wouldn't get a second chance. If I hadn't taken the opportunity to talk to Caroline, who knows if another chance would ever come along?\n\n\"The French woman seems to be married and I can look at you and tell that your ex really torched you. But, there's still that connection with the French woman. You walk away from it and maybe you'll get another chance. Maybe you won't. But there are no guarantees.\"\n\nHe waved his hand in the air.\n\n\"Free advice. Probably worth as much as it costs. But you might want to think about it.\"\n\n\"I have. But I think it's a moot point right now. I think our relationship such as it was, is in the past. But I thank you for telling me about yourself. I wish you luck with...Caroline. And it's good to know there are second acts. Now, I don't want to seem like an elder father figure or something, but why in the hell are you out here talking to me when you could be in your room curling up next to something that looks like that? Keep your priorities straight, man.\"\n\nHe looked out to sea once more and then shook his head.\n\n\"I probably won't get much more sleep tonight. I usually don't when I get those...dreams. But maybe I will wake her up to let her know just how lucky a guy I think I am.\"\n\nHe left me alone on the deck with my thoughts. We take vows for life, but how many of us actually make it to the finish line. Like they say, marrying for life probably worked when most people didn't make it beyond their 40s or 50s and most of that time they were working their asses off just to stay alive. Not enough time to get bored with each other.\n\nI didn't feel like prowling the ship tonight and before midnight I was in my room. I slipped off my shoes, then the suit went and I finally pulled on some shorts. I decided I should make it back to the exercise room or at least see it was still open. I was getting ready to put my tennis shoes back on when I heard a knock at the door.\n\nI wondered who the hell would be knocking this late at night. The thought crossed my mind that the only reason anybody would be contacting me would be if there was some kind of emergency message from the mainland. And that meant Debbie or the kids.\n\nI opened the door and Aline stood there in her bright blue and gold uniform. The gold and diamond Fleur-de-lis pin sat over her left breast. She was crying. I wondered who I wanted to kill.\n\n\"You bastard,\" she said, stepping into the room. While I was trying to figure out what was happening, she was in my arms and trying to tickle my tonsils again. She was pushing me back as I returned her kiss and the next thing I know she was pushing me over on that big red bed.\n\n\"What-\"\n\n\"Son of a bitch,\" she moaned as she kissed me so hard my lips burned.\n\nShe slid down me and the next thing I know she had my cock which was hardening at the speed of light in both her small hands and was jerking at the same time she dived down to suck and lick it. I should have asked her what was going on, but I couldn't get my thoughts clear enough to form words.\n\nShe pulled and squeezed and rubbed and I felt my excitement rising. She licked up one side and down the other. I saw that beautiful face and those full red lips full of my cock, which was harder than I'd ever imagined it being. Then she sucked it in and began slurping like it was a straw in a milkshake.\n\nAnd she was still crying, tears running down over my dick and mixing with her saliva.\n\n\"Why?\" I croaked.\n\n\"Bastard...bastard...bastard....why did you have to be so fucking sweet....\"\n\nI knew I didn't have so long. The sap was rising and I didn't want to waste what was likely to be a nuclear explosion in her mouth.\n\nI pulled her mouth off me and basically threw her onto the bed. I yanked the skirt down and then she only had brief black panties on. She was so wet the panties were soaked through.\n\nI licked her through her panties and she gasped, then tried to push my lips through the fabric. I ripped them off. The fabric shredded under my fingers but I really didn't care.\n\nThen I buried my face between those luscious thighs and proceeded to feast on her French pussy. I held her fantastic ass in my two hands and opened her up to my tongue, I licked until I found a little nub and she started to scream. I took it in my teeth and nipped and she lost her breath in the middle of a scream. I felt like I was drowning.\n\nShe tried to scissor me between what turned out to be really strong thighs which probably would have strangled me but I held her legs apart with my arms and continued to lick and nip and bite as she bounced up and down on the bed.\n\n\"Aline,\" I said, making myself draw my drenched face away from her thighs.\n\n\"Shut the fuck up,\" she screamed. \"Shut up, shut up, dammit shut up. Just fuck me.\"\n\nI leaned over her and didn't move. She blinked and with one free hand wiped away the tears that streamed down her face.\n\n\"Please, Bill. Don't talk. Just fuck me. Fuck me hard. I want you so bad I'm hurting. I'm hurting.\"\n\nI had only a moment to think. This was a married woman. A woman married to a man I had considered a friend. A woman who obviously had severe doubts about what she was doing before she apparently got a monumental case of the hots for me. I had never cheated on my wife in 18 years even after she'd cheated on me. And now I was going to do to another man what Doug had done to me.\n\nAnd, deep inside above and beyond everything else, there was the fear that no matter how hard I felt, when the moment of truth came I'd wilt. I would not be able to stay hard long enough to satisfy her.\n\nShe answered with an argument I could not counter.\n\nGrabbing my cock she positioned it over the gorgeous slit between her legs, what some wag described as the most valuable 6 or 7 centimeters of human real estate in the world. Then she pulled me down and I gladly let her. I slid inside her -- about a half inch and came to a halt. She was so wet she was squirting fluid around my dick, but I had come to a screeching halt.\n\n\"Don't stop....don't stop,\" she said, grabbing me by the shoulders to pull me in deeper. \n\n\"I wouldn't have thought that Philippe would be that small..\"\n\n\"He isn't. I haven't been with a man in six months. Go on. I don't care if you hurt me. I want you inside me.\"\n\nI pushed and slowly I slid further inside her. I don't know what was better, the feeling of her around me or the look in her eyes as I filled her. God, I hadn't realized how much I missed that look in a woman's eyes. And there didn't seem to be any wilting where it counted.\n\nShe gave me a soft \"unnggh\" as I came to a halt as far in as I could go, then I held it there and then withdrew slowly. She gasped as I came almost out, but stopped and then slid forward again. She whimpered, and she even whimpered with a French accent.\n\nI lifted her legs over my shoulders which opened her up even wider and slid my cock in and out. I reached down and cupped her breasts in my hands and ran my fingers over her nipples, which plumped up. I ran my hands further to cup her face as I leaned over her.\n\nShe was a married woman and belonged to another man. But here, and now, she belonged to me. There's a reason we talk about making a conquest. In that moment, with her thighs opened to me, my cock buried deep inside her, her eyes locked on mine, she was mine.\n\nThis was the way Debbie must look when Doug had his big cock buried to the hilt inside her. This was the look she must give him. I felt something twist and break inside me and looking down into the beautiful eyes of the woman under me, I knew I'd never forgive my soon-to-be ex-wife, the miserable bitch who had looked at me that way once.\n\nI could still stop. Even now. I could let her jerk me off. Or even suck me off. And it wouldn't be the same as fucking her, coming inside her. What the hell was wrong with me that I couldn't just fuck a willing woman and let it be just a nice fuck. With this woman it would be more.\n\nAnd it wasn't just me. How could she ever look at her husband the same way after looking at me this way. She was going to give herself to me, and how could she ever go back to being the woman she'd been before tonight.\n\nShit. Why did I do this? I hadn't raped her, hadn't dragged her into my room, hadn't stuck my cock into her mouth.\n\nI knew what the right thing to do was. I knew. But with my father's example to guide me, I had done the right thing over, and over and over. God, I was so fucking sick of always doing the right thing.\n\nIf I burned in hell tomorrow, I was going to have this woman tonight. I thrust forward and began fucking her hard and fast.\n\n#"
    ],
    "authorname": "DanielQSteele1",
    "tags": [
        "cheating",
        "courtroom action",
        "romance",
        "divorce"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/when-we-were-married-ch-03d"
}