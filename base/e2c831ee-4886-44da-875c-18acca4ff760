{
    "title": "Ann: A Love Story Ch. 72",
    "pages": [
        "The aroma in the hotel room was intoxicating. First, there was the hint of the dinner Carol and I had enjoyed still lingering in the air. But that was faint compared to the sweet vanilla scent the candles had given off. Then there were the various smells of sex mingling about. The womanly fragrance of Carol, the direct result of at least a dozen orgasms I'd given her since I brought her to 'my place'; the musky odor of my cum; the unmistakable aroma of our combined sweat...all hanging in the room like a dense cloud of depravity. The various scents and smells melded together, creating an enticing bouquet...the very essence of two people that had spent the night using each other in the most delicious ways.\n\nWell...I had used Carol. There wasn't a whole lot she could actually do to me...not with what we had been doing. As I lay there in the early morning hours, knowing the alarm was going to go off at any time and officially alert me to the fact that I had to get up and start a new career, I thought about Carol, and I smiled. It was hard not to, considering what I'd put her through, and the way she'd responded. I couldn't help but think that she would have made Ann proud.\n\nSure, I hadn't been as hard on Carol as I had been on Ann that night in Colorado. Ann seemed to love the pain part of submitting to me a lot more than Carol did. Ann wanted to feel it...she loved being spanked, and having her nipples pulled and bitten. She loved feeling physically used and being exhausted when it was all over. Of course, there was a lot more to it than that...Ann loved the entire experience. But the pain was a big part of her pleasure. \n\nCarol was more into the idea of not being able to move. It was the ropes that made her excited...the feeling of being helpless. Not that she minded me torturing her nipples a little, or even spanking her occasionally. She knew that was part of the game, so to speak. But I knew that didn't turn her on like it did Ann, and so I kept those things to a minimum. Instead, I hit her mercilessly with an entirely different kind of blow...I used patience. And that drove Carol insane with lust.\n\nWith Ann, it was all about feelings...whether they were physical, mental, or emotional. But they were continuous. I had bombarded Ann with constant attention, feeding her different levels of pain, and painting her psyche with different textures of stimuli by taking away her sight and making her use all her other senses. There was barely a time when I wasn't doing something to Ann, in one way or another...and that's what she craved.\n\nCarol craved that attention too. But that's not what I found turned her on when we played together. What seemed to make her literally drip with excitement was the anticipation of what was going to happen...and having to think about it. It was getting her ready for something dark and wicked and then denying her that instant gratification. She got more worked up the longer I made her wait, to the point that she was writhing against whatever restraints I'd put her in, trying to find a way to satisfy her carnal needs on her own, to no avail. \n\nWhen I dangled the rope in front of Carol's eyes after we finished dinner, she smiled nervously and nodded that she wanted to resume our fun. I wasn't sure at first if she was up for it, since I'd already had her tied up to a chair for almost two hours in a very uncomfortable position. But even though she was a little scared, she never hesitated when she told me she wanted to continue. In fact, she stood up and practically offered herself to me.\n\n\"So...where do you want me this time?\" she asked, her eyes wide and unblinking.\n\nI led Carol over to the spare bed...the sex bed, as I was beginning to think of it. Stripping off the bedspread and the blanket, I lifted Carol off her feet in one quick motion, making her squeal as I cradled her in my arms.\n\n\"Fuck...you're strong,\" she said as she held on with her arms around my neck.\n\n\"Not really...you just don't weigh that much,\" I said as I put my knees on the bed carefully, and moved across the mattress to put her down where I wanted her. And I wasn't just saying that. She only carried about 110 pounds on her 5'5\" sexy frame. But that didn't stop her from blushing, even as I laid her in the center of the big, soft mattress.\n\n\"You're so good for my ego, Neil. I really needed to hear that,\" she said with a smile.\n\n\"It's true...I'm surprised you don't know that. You are one sexy woman, Carol,\" I said, breaking character for just a moment. A small tear came into Carol's left eye, and she smiled. \"Are...are you okay?\" I asked as I kind of hovered over her naked body, looking deep into those green, suddenly misty eyes.\n\n\"It took me a while to get back to this...and it's just nice to have someone admire me again.\"\n\n\"What in the world are you talking about? You're a babe, and you know it.\"\n\n\"I don't know about that,\" she said modestly.\n\nI moved next to Carol, curling my legs under my body a little bit as I gently rubbed her abdomen. She looked at me, in almost a loving way. Actually, I suppose it really was. Not love, like I had for Ann, and she had for me. It was more of a strong affection, the kind you have for a very close friend. Of course, that friendship seemed a little deeper when she reached up and took my shaft in her small, soft hand and slowly stroked me. Yet, I fought off that distraction and asked her what was on my mind.\n\nTaking my other hand and stroking the right cheek on Carol's beautiful face, I asked, \"What is it that you're trying to tell me, Carol?\"\n\n\"I need to tell you the reason my husband and I split up,\" she said quickly, like she couldn't wait to get the words out of her mouth. \n\n\"Maybe we should to stop...so we can just talk,\" I said as I took my hand off her stomach.\n\nCarol squeezed my cock hard, and said, \"No Neil...I need this. I want to tell you what happened. But I also need what you're doing to me...what we're doing together. I know it sounds really strange, considering what I think you might do to me. But I need to...I need to...\"\n\n\"I understand, Carol. We all heal in different ways.\"\n\n\"And you're helping me get there. If I didn't believe that, I wouldn't have said what I just said. I really need to get this out. But I need to get it out knowing you're not going to stop...and you're not going to change anything you were going to do. Does that make sense?\"\n\n\"Actually...yes, it does. So...why don't we do both?\"\n\n\"Both...what do you mean?\"\n\n\"I need to get you ready. While I'm doing that, you can tell me what a bastard your ex was.\"\n\nCarol smiled brightly and leaned up on her elbows. I knew what she wanted, and I leaned down as she grabbed the back of my head, giving me a long, tender kiss. Normally I would have felt guilty for kissing someone other than Ann like that, unless Ann was there too. But this was different...and I knew instantly that Ann would not only understand...she would approve. Carol needed to feel connected to heal, and she needed to heal to move on in her life. In some way, I felt like Ann already knew all of this.\n\nAs I went about securing Carol in a spread eagle position on the bed, she went about telling me what a complete jerk her ex husband had been. I was busy trying ornate knots on her wrists, and then attaching them to the frame of the bed. All the while, Carol was letting out the hurt and pain of how her relationship ended.\n\nHer ex had an affair. But I'd pretty much already deduced that, way back at the lunch Carol and I had during my interview. The instant I knew she was divorced, I knew the real reason why...it was a scar we both shared on our respective hearts. But mine had healed. Carol's was still on the mend, and she was looking to me to help that process. The details of how she got hurt actually hurt me. Yes...the bastard had an affair, and when Carol found out about it, one of the reasons he'd used to explain his infidelity was how she looked. \n\nCarol told me that she'd gotten pregnant. She wasn't really ready to have a child, and neither was her ex. But she decided the moment she knew that she was going to keep the baby. Unfortunately, just as soon as she started to show, putting on a little weight, she had a miscarriage. She said she was devastated...but her husband was more relieved than upset. Carol said she fell into a depression, and started eating to deal with the pain of losing her baby. She also ate to because of insensitivity she felt she was seeing in someone she loved. And that made her put on more weight. \n\n\"I wasn't fat...I was just a little thicker. I was...chubby,\" Carol said in her defense, not that she needed to. It was unbelievable to me that any man could be so callous towards the woman he was supposed to love and cherish until death do them part. \n\n\"You don't have to explain, Carol,\" I said as I started winding some rope around her left ankle.\n\n\"I just don't want you to think I was some cow.\"\n\n\"So what if you were...that doesn't justify him fucking around on you. Especially after what you'd just been through. I can't imagine how heartbreaking that was.\"\n\n\"Well, regardless...when he told me that the reason he started screwing around was because he didn't find me sexually attractive...I lost it.\"\n\n\"Lost it?\"\n\n\"I went off on him. I hit him a couple of times...and then I started breaking his stuff. He actually called the cops on me.\"\n\nI laughed and said, \"Really...what did they do?\"\n\n\"Well, he told them we were having an argument, and that I'd attacked him. So, one officer took his statement, while the other officer took mine.\"\n\n\"What happened?\"\n\n\"When I told them why I went off...what he'd said to me, the officer I was talking with took a look at me and shook his head. Then he talked to his partner, and they ended up telling my ex he should leave. He was pissed.\"\n\n\"They didn't arrest you or anything?\"\n\n\"Ha...no...they said he was in the wrong. They said he started it by verbally abusing me.\"\n\n\"Why did he have to leave though? I mean, you did hit him...and he was the one that called the police.\"\n\n\"Well, first, it was my house, and the cops knew that. It's been in my family for years...over a century, actually. Besides, he'd had a few beers, and they said that was part of the problem too...so they took him to dry out.\"\n\n\"So he left with them,\" I asked as I finished working on her other ankle, pulling the rope taught as I tied it to the frame at the foot of the bed.\n\n\"Not willingly. He pushed the cop that talked to me...so he ended up spending a couple of nights in the county jail. I had the divorce papers served to him while he was still inside, along with a protection order against him. And I had all his stuff moved into storage.\"\n\n\"Wow...that was quick.\"\n\n\"Well, I have a great friend that's a lawyer...and she never liked him. And what he did was just the icing on the cake for her. She helped me by getting him out of my life faster...but that didn't stop me from feeling hurt and betrayed...in a lot of ways. When I got myself together mentally a little bit, the first thing I vowed was that I was going to get myself back into shape. I wanted to show him what he was going to miss. But while I felt good about it losing the weight, I still hurt inside...I just didn't know why. Not until I met you.\"\n\n\"Me...what did I do?\" I said as I stuffed a pillow under Carol's ass, lifting her crotch into the air, making the ropes even tighter in the process.\n\n\"UNH,\" Carol groaned as she felt her limbs being stretched farther. Looking at me with a helpless, sexy stare, she groaned, \"You set me...free.\" \n\n\"Says the hot naked babe tied to my bed,\" I laughed. Walking over to Carol's purse, I grabbed the tube of magical stimulation cream that she had inside the big open pocket where she kept her vibrator. The one I'd found earlier in the day when I had to look for the keys to the plant to lock it up.\n\n\"I'm serious, Neil. You don't know how much this means...\"\n\n\"I think I do, Carol. I had someone help me too...remember. And I believe you. I really do. So...is there anything else you need to tell me, or shall we get started.\"\n\n\"Get started with what?\"\n\n\"I was thinking of making you beg me to let you cum again,\" I said with an evil grin as I held up the tube in front of her face.\n\n\"Oh...FUCK!\" she yelled out as she realized what was about to happen.\n\n~*~*~*~*~*~\n\nIt was amazing how energetic I was, considering I hadn't gotten that much sleep. And I was even more surprised that I wasn't nervous. Here I was, getting ready to start a new job, and yet I felt calm as I stood in the shower. I didn't know at all what I'd be doing during my day, but what I'd learned about the equipment I'd be in charge of over the last 24 hours had me soaring with confidence. Still, there was something that I felt I should be doing...or thinking. I just couldn't figure out what it was.\n\nThe first thing I thought about was Ann. The truth was, she was never far from my conscious thoughts. No matter what I was doing, Ann seemed to be with me, smiling. She was in my heart...I could feel her energy and her spirit, and I wondered if that was really what was making me so confident and self-assured. Yes...Carol had given me an amazing gift. Not only had she been amazing sexually all day long, more importantly, she'd been a real friend to me...and to Ann. And part of that was what she'd done to set up my training with Ivan, and him giving me a set of operator manuals for the production line I'd be in charge of on my shift. \n\nBut even more than that, Carol had been company. Instead of having to go through my first full day in a new town alone, sitting in a hotel room on a dreary, rainy day, Carol had been someone to be with...someone to talk to. If that were all we had done, all day long, it would have been a wonderful day. That we had sex, even though we didn't actually fuck...well, that was a huge bonus. But the truth was that I cherished just being with Carol all day, sharing the day together. \n\nWhen I thought about Ann...and then Carol, I realized what it was that was really deep in the back of my mind all along. It was...the mission. I was about to start my mission at the new company...and I smiled when I thought of the lengths Ann went to to create the 'mission' that Tina and I had went on when I interviewed for the job. Now, I was about to start the next phase of the elaborate fantasy came up with for me. \n\n\"I wonder if I should wear my gun today,\" I chuckled, thinking of the holster and toy Walther PPK that she'd gotten me to pretend that I was James Bond for the weekend.\n\nAnd while I knew I wouldn't...even though I brought the gun with me, I suddenly felt...well, Bondish. Somehow, I kind of got an air about me...that spirit I had when Tina and I covered the area on our adventure. As I shaved my face after I got out of the shower, I noticed I had kind of a confident swagger. Most of that was from feeling prepared, which had a lot to do with Carol. But as I looked in the mirror, I could feel Ann standing next to me in a way, smiling and nodding. She was a mirage in the mist caused by the steamy shower that I'd just taken, and I actually got a little chill from it.\n\nFeeling inspired by the thought of Ann, I dressed in a pair of black Dockers, and a light blue dress shirt along with a tie, and a pair of black dress shoes. I took along a sport coat, just in case, but since I didn't know what I'd actually be doing on my first day, I wasn't sure if I was overdressed or underdressed. But as I checked my look in the mirror one last time before I stepped out of the room, I felt confident, which was the goal. I took a deep breath and headed towards the elevators. A few minutes later, I was driving down the interstate, heading to the temporary headquarters of Armada Manufacturing where I'd first met Carol. Feeling like Bond again, I grinned as I thought about her sitting at the front desk, waiting to greet me. \n\nChuckling, I thought, \"I wonder if I'll be able to any rope marks.\"\n\n~*~*~*~*~*~\n\nLying on my bed, I was skimming over the last operator's manual a second time, knowing that I hadn't captured all the information in it very clearly when I'd read it the first time. After all, it had become hard to concentrate, considering I had a hot, naked woman moaning for me to let her cum just a few feet away from me. Oddly, as I turned a page in the notebook I had in my hand, I was having a d\u00e9j\u00e0 vu moment, and I turned to my left to look at Carol.\n\nShe was staring at the ceiling, her big chest rising and falling rapidly as she panted. Her tanned skin was shining with a slick sheen of perspiration, and I could see her body trembling a little as she pulled against the binds that held her in place. But it wasn't her movement that caused me to look at her. It was the little whimpers that were escaping from behind Carol's tightly pursed lips.\n\n\"How are you holding up over there Sunshine,\" I asked as I turned another page.\n\n\"I'm not saying...Lord only knows where the hell you'll put that stuff next!\" she responded tersely.\n\n\"Are you upset with me?\" \n\n\"I told you...I'm not saying anything else. I don't want you thinking I'm begging again.\"\n\n\"I don't know...sounds like you're upset with me. If you want...\"\n\n\"You know very well what I want! OH...FUCK...I didn't mean that!\" she said in a panic as I got up and grabbed the tube of stimulation cream off the nightstand between the beds.\n\n\"Sure you did,\" I said as I walked around the bed and climbed between her wide open legs.\n\n\"No...Please...Neil! I...\"\n\n\"I see a pretty pink little asshole that needs some attention,\" I said as I opened the tube and put some on the tip of my middle finger.\n\n\"OH GOD...NO!\" Carol screamed out. But her eyes told me another story. And she actually stopped wiggling when I reached between her legs and placed my finger against the puckered little bud of a hole below her pussy.\n\nI coated Carol's anal rim thoroughly with a big dollop of the clear cream, and then I slipped the tip of my finger past the opening, twisting my wrist around. Feeling me play with the entrance of her ass, Carol moaned and her eyes grew wider.\n\n\"You're not...\"\n\nAs soon as she started speaking, I rammed my finger as deep as I could into her unsuspecting ass, and I started fucking her with it. \"Yes...I am, Sunshine. I would think you would know better than to say anything by now. You don't have a choice in this...and you'll get to cum when I let you,\" I said with a wink.\n\nCarol closed her eyes and bit her lip as I abused her ass. Then, just as quickly, I pulled out my finger and went to the bathroom to wash the cream off my hand. I'd read the instructions on the tube carefully, and they stated that if you got the substance anywhere you didn't want it, to wash the area with warm water for a few minutes to dilute the effect. And I'd done that every time I'd applied it to Carol, which was now up to five. \n\nI'd started in the obvious place just after I showed Carol the tube in the first place, coating her swollen clit with it. Then I warned her that if she disturbed me by begging me to make her cum, or complaining about anything, I would apply it to other places. Of course, I knew firsthand what the substance did. And because Carol had it in her purse, I could only assume she did too. In my case, it not only made my cock harder than I'd ever remembered it being, it also got very warm, and it my skin tingled. About ten minutes after I coated Carol's clit, it started having the same effect on her. \n\nCarol started telling me her pussy was hot, and I kidded her, telling her that I already knew that. But she said it was on fire, and she needed to cum. Instead, I applied the cream to her left nipple, making sure it was hard first by sucking on it for a minute or two. I coated her other nipple shortly after because she started whining about the first one. ",
        "After that, I really thought she'd stop. Maybe she thought that I'd already covered all the areas that would matter to her sexually, or that I'd finally cave and give her what she so desperately needed. Whatever the reason, she obviously felt it was okay to beg me one more time. When she did, and I got up with the tube in my hand, Carol had a puzzled look on her face when I got between her legs. Smiling at her, I leaned down, getting my face close to her pussy, and I pulled at one of her open pussy lips, making her squeal a little. \n\nI coated the outside of Carol's labia, making sure I avoided the inside. I wanted her to feel the heat around her pussy and on her clit, hoping that would have some kind of impact. And ten minutes later, she was wiggling on the bed, her body shaking. And that's when the whimpering started up big time. But Carol wouldn't talk...she held her mouth closed tightly, fighting the urge to scream out her desires, or tell me how she was feeling at the moment. \n\nBut now, I had kind of set her up, asking how she felt, and then baiting her as she told me she wasn't going to say anything. Yet I could tell by the look in her eyes that she wanted to complain. She wanted to beg me to help her cum, even though she knew that would make me put the cream on her body again. I'm not sure where she thought I'd put it; where I'd chose to inflict those incredible sensations next, but I WAS sure she didn't anticipate me putting it on her asshole...and certainly not inside it. In fact, the way she reacted made me feel certain that she wasn't used to anal play...and as I sat down after washing my hands, I decided to see if I was right.\n\nPickup up my manual and opening it to where I'd left off, I said, \"So, Sunshine. Tell me...have you ever had anything up you ass before, sexually speaking?\"\n\n\"I...I'm scared to answer, Neil. I can't take any more of that...SHIT!\"\n\n\"Don't worry...I'm done with the cream. I just need let you simmer for a little while before I take pity on you. So...have you?\"\n\n\"You're sure this isn't another trick so you can put that shit in my ear or something?\"\n\n\"HA...no, Sunshine. I promise.\"\n\n\"Okay...well, the answer's no...not until five minutes ago when you were fingering me.\"\n\n\"Did you like that?\"\n\n\"I'm not sure. It was interesting...but now...oh my GOD, Neil. My ass if fucking burning...and it tingles.\"\n\n\"Yeah, but it feels incredible too, doesn't it.\"\n\n\"How the hell would YOU know?\" she asked.\n\n\"Because I've had that stuff up my ass too...that's how.\"\n\n\"WHAT...when?\"\n\n\"When I fucked you. Martina put it on her finger when she checked my prostate as part of my physical. And it felt amazing. So, be honest...how do you feel?\"\n\n\"Like I wish Ann would let you fuck me right now...I need your cock so bad!\"\n\n\"Do you want me to fuck you in the ass?\" I laughed.\n\n\"Whoa...I never said that.\"\n\n\"Well, if I were you, I'd start learning how to give myself an enema pretty soon.\"\n\n\"Why do you say that?\" Carol said as she turned her head to look at me.\n\n\"Because, if you intend for Ann and I to be with you on those dates you negotiated, at some point I'm going to fuck that pretty little ass of yours.\"\n\n\"Oh really,\" she said with a grin on her face. \"And what if I say no?\"\n\n\"What if we tie you up like you are now one of those nights?\" I smiled back.\n\nCarol's body shook, and she looked at me with an intense stare. \"FUCK...Neil! I need to cum...NOW!\"\n\n\"Patience, Sunshine. Let me get ready first,\" I said as I grabbed the tube and headed to the bathroom, leaving her there thinking about what I'd just...well, threatened in a sweet way.\n\nI took a deep breath as I looked in the mirror, wondering if I really wanted to do what I was thinking. Part of me didn't want to, knowing how the feeling lingered...and knowing I wasn't going to be able to fuck Carol. But at the same time, I remembered how my cock felt with that cream on it...and how it looked. And I wanted to show that to Carol again. Plus, I remembered just how much more intense my orgasm had been. Sure, I'd already cum twice...but I was hoping that since the last time was about six hours before, I'd have a good load built up. And maybe, just maybe, the cream would add to that.\n\nAny reason I could think of not to, was far outweighed by the reasons that I should. Truth be told, I knew I was going to coat my cock in the stuff when I picked up the tube. It was just one of those sexual moments where I had to talk myself into actually going through with something regarding sex. I'd done that a lot in my life, although most of the time it involved buying something...like a g-string in a sex shop, or a Penthouse or Playboy when I was barely old enough to purchase one. It was a mental game I played, sometimes going as far as to flip a coin just before I did whatever it was my dirty mind wanted to do. And if the coin came up wrong, I'd immediately go to two out of three flips, then three out of five...giving myself every chance to do what that tiny devil on my shoulder wanted me to do all along. The little angel perched on the other shoulder never won those battles.\n\nThis time, there was no coin flip. There was just a mental question, asked and then quickly answered. I had a naked babe waiting for me in the next room...which made it an easy choice to unscrew that cap one more time so I could squeeze out a line of cream onto my erect cock. I massaged the stuff all over the skin of my shaft and balls, covered ever centimeter of my crotch. Satisfied that I'd gotten the cream over my entire cock and balls the way I wanted, I spent a few minutes washing my hands again, making sure I got it all off. As I lathered up my palms, scrubbing away, I already started to feel the effects.\n\nTen minutes later, I emerged from the bathroom, letting my cock lead the way. It was huge, just like I remembered. The thick veins were bulging out, protruding more than normal as they pulsed life into the shaft. And it had turned a darker shade of purple as the heat from the lube started making my skin tingle. It had the same angry, almost menacing appearance it had when I'd fucked Carol.\n\nWhen she saw me coming toward her, she was both relieved and nervous. She was happy that I was back, because she knew it was that much closer to the time I'd let her cum. But when she saw what I'd done to my prick, her eyes got wide again. \n\n\"God...it's like you have the Hulk's cock, Neil. I'm surprised the damn things not green instead of purple.\"\n\n\"Do you like it?\" I asked as I knelt next to her, letting her see it close up again.\n\n\"God...yes,\" she whispered, more to herself than to me. She licked her lips, because they were dry...but I had a feeling it was also because she couldn't stop staring as my cock throbbed intensely in front of her face.\n\n\"Imagine what it would feel like buried in your pussy right now, Sunshine,\" I teased.\n\n\"Ooooooohhhhhh,\" she moaned as she squirmed a little against her ropes.\n\nI moved over her body, straddling her face as I hovered over it. I slowly lowered myself, letting my balls dangle over her open mouth. \"Imagine what it would feel like buried in that tight little ass of yours,\" I said as I took the shaft and held it down, closer to her eyes.\n\n\"Fuck,\" Carol whined.\n\n\"You like the thought of that, don't you.\"\n\n\"I...I don't know...it's so big.\"\n\n\"But you know I'm going to...don't you.\"\n\nCarol hesitated for a moment, thinking about what I'd asked. Then, she moved her head up, sticking out her tongue...licking my ball sack for a moment. \"Yes...I know that now,\" she said with a little lilt in her voice.\n\n\"And that excites you?\" I said, more of a question than a statement. I was leading her, but I wanted to know the truth.\n\n\"Yes...and it also scares me. But I trust you, Neil,\" she said as she licked me again playfully.\n\n\"Mmm...and I trust you too,\" I said as I lowered my body further, letting my balls rest on Carol's mouth. She giggled and started sucking on them one at a time as the hung down below my cock like low hanging fruit. I let her bathe my balls with her tongue, sucking and nibbling around as best she could. \n\nBut I had other ideas in mind, so I pulled up and moved back, looking into Carol's eyes. \"So...tell me the truth, Sunshine. Who should cum first...you or me?\"\n\nI knew how Carol wanted to answer...she'd been desperate to cum since I'd tied her up and put the cream on her ripe little clit. But she smiled and said, \"You should...I'm the sex slave, remember.\"\n\nI smiled as I moved down between her legs, grabbing my cock. She groaned when I rubbed the head back and forth against her pussy, splitting her labia a little with it...and that made her freeze. \n\n\"Oh God...Neil...NO. We're not supposed to fuck!\" she said in a panic.\n\n\"I know,\" I said with a laugh. I moved down lower, and placed the thick purple knob against her anus. Pushing forward my cock wedged further against it, making it start to open just a bit. \"She only meant I couldn't fuck your pussy.\"\n\nCarol groaned, but she didn't protest. She just took a couple of deep breathes so she could relax. Then, she nodded and said, \"Okay, I'm ready...just...go slowly.\"\n\nI leaned down over Carol, and kissed her as I pulled her nipples roughly, making her squeal into my mouth. When I pulled back, I said, \"I know the rules, Carol. I'm sure Ann doesn't want me fucking your ass either. And you're really not ready. But you will be when we get together with Ann, won't you.\"\n\nCarol nodded and said, \"Yes, I will. I promise.\" Then she bit her lip and waited to see what I'd do next.\n\nAnd the answer to that unspoken question was...I let her cum first. I crawled back down her body, and settled between those magnificent thighs, lying on my stomach as I brought my face close to her pussy. I was breathing on it, letting my hot breath exhale directly on her dripping slit. She shuddered a little and let out an erotic groan as she tried in vain to lift her hips up higher. \n\nCarol didn't have to. I'd tortured her enough for the last hour or so, using the cream to set the stage, and then ignoring her pleas. I had been testing her patience over and over, punishing her whenever she showed a lack of it by covering one area after another with the contents of that special medicinal tube. I didn't have the heart to continue drawing out the beginning of her latest orgasm, in large part because I now had an over stimulated sex organ of my own. Yes...mine was self inflicted, but I knew if I held out just a little longer it would totally be worth it.\n\nCarol started cumming almost the second I licked inside her pussy. I snaked my tongue deep inside that hot, wet hole, twisting and twirling it, using every move I'd ever learned. Carol held her reaction inside her heaving chest, trying not to scream out and wake the other people on our floor of the hotel. But that didn't stop her body from shaking violently, pulling at the ropes tightly as she twisted and twirled on her own. My hand went to her pussy, and I started fucking her hard and fast with three fingers while my mouth clamped down on her clit. And that's when she really exploded.\n\nThis time, she was more verbal...not holding back her words, or her cum. Carol unleashed a guttural moan, announcing her orgasm in a flourish of expletives that would have been more at home on a shipping dock. She was cursing over and over...but under her breath, still refusing to actually scream how she was feeling. And that made her body tense up, because she really wasn't totally letting go. When I finally pulled up, I looked at her from between her powerful thighs, which were straining, showing their muscular definition. Carol's eyes were kind of rolling, and her mouth was open as she sucked in oxygen to fill her lungs.\n\n\"Oh God, oh God, oh God,\" she said as she panted. I could tell her heart was racing, and I was a little concerned she might hyperventilate. Crawling up her body, I stopped and sucked on her nipples for a little bit, and just that new stimulation sort of brought her around.\n\n\"Thank you Neil...thank you so much!\" \n\n\"For what?\" I asked.\n\n\"For doing that...for doing all of this. I can't tell you how incredible this has been for me.\"\n\n\"I'm really glad you liked this\", Sunshine. So...do you want me to untie you now?\"\n\n\"That's not up to me...that's up to you,\" she winked.\n\n\"I'm more concerned if you're okay. You've really been pulling at those ropes, and I tied them tight.\"\n\n\"I haven't said the word yet, have I?\" she grinned.\n\n\"Good...because I need you to make me cum.\"\n\n\"And just how do you expect ME to do that?\"\n\nStraddling her body again, I flopped my fat, angry cock between her tits. Carol let out a giggle, until I pulled on her nipples to force her breasts together at first, and that made her let out a yelp. Taking those amazing melons in my big hands, I forced them around my shaft, and started bucking wildly back and forth, fucking her chest with a vengeance.\n\nWith Carol's ass still propped up by the big pillow I'd stuffed underneath it, her head was against the mattress, well below her chest. I was basically fucking downhill, the tip of my cock poking out just above her chin whenever I thrust forward. She watched my cockhead intently, hypnotized by the movement as I rocked my pelvis back and forth as fast as I could. \n\nCarol had been sweating almost from the moment I'd tied her to the bed. The stimulation cream I'd applied made the parts of her body I'd put it on become heated, and flushed. And that, in turn, made her entire body start to react to the changes...which meant she was hot just lying there. Of course, she had exerted a lot of energy struggling against her binds too, so all of those things made the big valley between her breasts shiny and slippery with beads of her perspiration. And that made for smooth fucking.\n\nPawing at Carol's tits, I continued to plow away, forcing them together to create the tightest hole I could. She started urging me along, telling me how great it felt, and how powerful my cock looked to her. Then she told me how much she wanted me to cum on her face again. \n\nAnd I was about to...when the phone rang.\n\n~*~*~*~*~*~ \"Hello?\" I said as I answered the phone. I was standing next to the bed, my cock bobbing up and down...pulsing so hard I thought it might actually pop a vein.\n\n\"Hi baby! How did you day with Carol go?\"\n\nSuddenly I had a flash of panic, although I really didn't know why. Ann had blessed us being together, but that didn't mean I didn't have a little pang of uncertainty. Pressed to answer her question, all I could manage to get out was, \"Uuuuuuuh...\" \n\n\"Uh what? Didn't you have a good time?\"\n\n\"Ann...we're kind of...still together,\" I said sheepishly.\n\n\"What...it's almost eleven o'clock, Neil.\"\n\n\"I know...but you said I was supposed to make her cum as many times as I could today...and it's still Sunday for another hour or so. You're not mad, are you?\"\n\nAnn started laughing, although it was quiet, which I was sure was because of being on the phone at her parent's house. \"Why would I be mad, baby? I told you that you could be with her today. I'm just a little surprised...because you have a big day tomorrow.\"\n\n\"I know...but I'm more prepared now than ever. Besides, this has kind of kept my mind off of it.\"\n\n\"What do you mean you're more prepared?\"\n\nI told Ann what Carol had done, setting up the training session with Ivan, and how Ivan had given me the set of operator's manuals for the production lines. I started talking fast, giving her details of some of the things I learned, excited to share my newfound knowledge. I was giving Ann a couple of examples of what I knew that no one else would know, and I kind of lost track of the moment. \n\nAnn reined me back in when she cleared her throat and said, \"Uh...baby, I love that you're excited...but you do know that I don't understand a thing you're saying, right?\"\n\n\"What?\"\n\n\"I've never seen what you're talking about, and I really don't understand all the terminology you're using. It's like you're talking some foreign language. I mean, I'm happy for you...but aren't you forgetting something right now?\"\n\n\"What would that be?\" I asked.\n\n\"Your guest. Where is Carol anyway?\"\n\nI looked over at Carol, who was back to being desperate. The orgasm I'd given her had taken the edge off for a while, but the cream was still working, especially on her clit. Carol was back to panting, her eyes begging me to give her relief once again. She was being quiet because I was on the phone, but I knew she wanted to say what her eyes were telling me.\n\n\"Uuuuuuuh...\" I said, unsure of how to explain to Ann how Carol and I had gone from her setting up a training session, to her being in the position she was in right now.\n\n\"Is she in the bathroom?\" Ann asked, thinking it was one of those moments where you really can't tell someone on the phone where the person they're asking for is, because it's not a polite phone conversation topic.\n\n\"Actually, she's...tied to the bed,\" I said, even more sheepishly than when I'd told Ann I was still with Carol.\n\n\"Oh my God...REALLY?\" Ann said excitedly.\n\nIt shouldn't have surprised me that Ann was okay with that little revelation. And not only was she okay with it, I knew instantly that it turned her on. She asked a couple of questions, and I gave her a quick rundown of how we'd gotten from point A, to, well...all the way to point Z really. And as I gave Ann the details, I realized that she was playing with herself.\n\n\"You're enjoying this, aren't you?\" I said as I finished telling Ann what I was doing to Carol just as she called.\n\n\"I told you, Neil...I was going to call you tonight so you could help make me cum. I'm getting close, but you're running out of time. It's late...and midnight is your curfew.\"\n\nI figured at first that with Ann on the phone, she'd understand if we went into Monday. But that statement let me know, in a loving, but honest way, that there would be no bending the rules in our little game...other than her letting me be with Carol this one Sunday. And Sunday almost over.\n\n\"Well, I guess I'll have to call you back when I'm done with her,\" I said as I looked back at Carol.\n\n\"No...I want to listen.\"\n\n\"What?\"\n\n\"Move the phone as close as you can to the bed, but don't hang up. Just lay it next to Carol so I can hear the two of you.\"\n\n\"I won't be able to describe anything, babe.\"\n\n\"I know...but you're going to be fucking her tits, and I have an imagination, baby. Please...do it for me. I'll know when you're cumming, and I want to cum with you.\"\n\n\"Okay...but I think I'm going to need to make her cum one more time. She's really suffering right now.\"\n\nI could feel Ann smiling on the other end of the phone. \"That's fine...I can cum with her too!\"\n\nI was a little surprised that the phone had such a long cord coming out of the wall. I had to move the nightstand out a little, but I was able to put the phone base on the bed, and then stretch the coiled cord out on the receiver, placing it next to Carol's head. At first I thought I'd be lucky to be able to get it within six feet of Carol, instead of the six inches or so it turned out to be.\n\nAs I climbed back onto the bed and got into position over Carol again, she turned her head a little and said hello to Ann. And I could hear Ann faintly say hello back, along with her infectious giggle. That was followed by Carol telling Ann that she was going to try and let her know what was going on by being Ann's eyes in the room.\n\n\"He just put that big fat cock between my tits, Ann. You should see it...I bet you've never seen it this big...that cream really makes it look huge. The damn thing is menacing.\"\n\nI heard Ann say something, and Carol smiled and winked at me. \"Sure...I'll let him keep it. I can get some more from Martina. Oh...and make him put it in your ass, Ann...oh my GOD it feels so incredible,\" Carol said with another wink.",
        "I pressed Carol's tits together, and started bucking back and forth. Carol gave Ann play by play coverage, trying to describe not only what she was feeling, but also what I was doing and what it looked like. Truth be told, she was doing a pretty good job of it...and that had me getting closer to my orgasm. It also helped Ann get closer to hers, in large part because Carol would stop describing every so often and tell Ann she should do something. Like finger her clit, or dip her fingers into her pussy. She was doing her part to help Ann and me cum together. There was no way Carol could have known that was what Ann wanted to do. She'd only heard my half of the conversation. But Carol was one smart woman, and she put two and two together rather easily.\n\n\"He's really fucking my tits hard, Ann. He's going to be cumming soon. I hope you're close too. Frig your clit harder...I can feel his cock ready to explode!\" Carol said with her mouth inches from the mouthpiece. \n\nIt was also inches away from my cock, which was indeed ready to explode. Carol looked up into my eyes as I gave her tits four or five more strong strokes, and she said, \"Neil's going to cum for us now, Ann. He's going to cum all over my face. I hope you're close, because he's cumming...right...NOW!\"\n\n\"Ooooohhhhhhh FUCK!\" I yelled out as I slammed forward one more time and held myself still. With Carol's face still below her tits, and my cock point up slightly, I started spurting. Shot after shot of white, steamy jizz blasted out of the tip of my cock, splattering all over Carol's face and hair. The intensity of the cream made me cum more than I would have otherwise, since I'd already had two orgasms earlier in the day. I felt my balls churning inside their sack, forcing more and more sperm to fly up my shaft and ejaculate high in the air.\n\nCarol was telling Ann where there shots were landing, and how good my cum felt on her skin, and tasted on her tongue. When my cock finally stopped pulsing, I could finally hear...and I heard Ann cumming through the phone. It wasn't loud, obviously...but I knew that sound...intimately. I'd heard Ann cum so many times that there was no mistaking it, even when she was doing everything she could to keep from screaming out. I'd heard Ann scream at the top of her lungs when she came, and I'd heard her do it when she had to be quiet...and while each was unique, they also had similarities to them. And I KNEW that Ann was cumming.\n\nI picked up the phone and said, \"That's it lover. Cum for me. Cum hard, baby!\"\n\n\"Oh...GOD!\" Ann said, through what I was sure was tightly clenched teeth. \n\nAnn came, and I knew it was an intense orgasm. I smiled as I listened to her thrashing around, knowing she'd been thinking about Carol and me all day, and what we might have been doing. But I'm sure she didn't count on getting a live show...even if it was just over the phone. Ann had just said she would call me at the end of the day, and that we'd cum together. That Carol had been a part of that only added to the experience.\n\nWhen Ann finally calmed down, and her heavy breathing becoming a little more normal, I said, \"So...how was your orgasm, baby.\"\n\n\"Which one...I had two,\" she said with a little laugh.\n\n\"Two?\"\n\n\"One when you came...and that sounded SO HOT! I just know you covered Carol's face all over, baby. I can close my eyes and see how hot that looks with her all tied up and helpless. And then I came again when you got on the phone and told me to. In my mind, I was pretending I was tied up...and you MADE me cum.\"\n\n\"YOU were thinking about being tied up?\"\n\n\"Hmm...I still am, baby. The week I come out to visit, I want you to keep Thursday night open.\"\n\n\"Thursday...why Thursday? I thought Sunday's were the days we were going to do that...if we do it.\"\n\n\"Sunday is the day we're going to do it the first time we're in our new place after we get married and move out there...because Sunday is OUR day.\"\n\n\"I'm confused Ann. Now you want to do it before that?\"\n\n\"I'm sorry if I'm confusing you, Neil. It's just that I've been thinking about it for a while, and just knowing you tied up Carol tonight has me ready to do it again...the Thursday after I get there.\"\n\n\"Okay...but why Thursday?\"\n\n\"That's the night we were together in Colorado. I'm thinking that's as good a night as any to try it again...and it will give me a date. I like knowing what day it's going to happen so I can prepare myself.\"\n\n\"Prepare...like what...and enema?\"\n\n\"HA...no...I do that now pretty much every day we're together anyway, just in case. I meant prepare mentally...just like when we'll do it after we're married. I love committing to it, and then knowing its coming up. The anticipation of it for me is a huge part of the excitement. I have to do it, because I gave you my word. It makes me feel like you love slave ahead of time, and that makes it hotter.\"\n\n\"Okay...but you know I have to work on Thursday, right?\"\n\n\"Yeah...but that will give YOU something to think about that day, won't it?\" she laughed.\n\nAnn had gotten me so focused on what we would be doing in the future, I'd forgotten the present. That is, until Carol made a sweet little moan. I grinned at her as I spoke to Ann. \"Right now, I want you to think about getting out a vibrator.\"\n\n\"Really? Why?\"\n\n\"Because, I'm going to use Carol's on her. She needs to cum again,\" I said as I winked at my cum covered sex slave lying on the bed.\n\n\"REALLY?\" Carol said, almost gleefully.\n\n\"Yeah...get a vibrator Ann. I'm going to put the phone down for a second, and then Carol's going to be on the other end.\" I untied Carol's right hand, and handed her the phone. \"I want you to tell Ann what I'm doing so she can do the same thing. And if you try to use your hand for anything other than holding the phone, I'm going to stop and you'll have to make yourself cum when you get home!\"\n\n~*~*~*~*~*~\n\nAs I drove down the interstate, thinking about how I'd made Carol cum with her vibrator, while she struggled to tell Ann what to do so that Ann could feel the same exact things Carol was feeling, I had a little chuckle to myself. Carol and Ann came almost simultaneously. I was fucking Carol with her vibrator, jamming it in and out of her pussy as fast as my arm would move. Carol was relaying that to Ann, who was doing the same thing to herself 500 miles away. And I actually heard Ann cum first as Carol held the phone away from her face when SHE started to cum. \n\nI couldn't have asked for a better ending to my day. I made the woman I'd spent the day with cum; the woman that had given me so much of herself during the day, most importantly her friendship. And in doing that, I made the love of my life cum too...from long distance. To me, it was perfect. \n\n~*~*~*~*~*~\n\nAnn was exhausted, and when I took the phone from Carol, she said I needed to get to bed so I'd be rested for the next day...reminding me it was important. I told Ann I'd call her when I got off of work and let her know how it went...and we told each other how much we loved what we'd done, and how much we loved each other.\n\nAfter I hung up the phone, I went about untying Carol, helping her get herself together so she could head home. I gathered her things, while she went into the bathroom, saying she needed to freshen up. I couldn't blame her, since I had no intention of making her go home with my load of cum on her face. But Carol surprised me when she walked out of the bathroom almost exactly as she had when she walked in.\n\n\"I thought you were going to clean up?\" I said with a confused look on my face.\n\n\"I did,\" she said with a grin. \"Can't you see...I re-did my lipstick and eyeliner.\"\n\nI let out a laugh, and carried her stuff to the front door. \"Here's your purse, and your coat. I put your handcuffs and the key in the center pocket with the vibrator.\"\n\nCarol slipped on her heels and said, \"Did you keep the tube of stimulation cream?\"\n\n\"Didn't you want us to?\" I said, thinking of the conversation I'd overheard her having with Ann.\n\n\"Yeah...I actually have another one at the house. But Martina can get me more anytime. I bet she'll do the same for you and Ann.\"\n\n\"Well, we won't be needing it for a while.\"\n\n\"I guess not,\" Carol said as she looked down at my rock hard shaft, still throbbing from the effects of the dose I'd massaged all over it. \"Do you want another blowjob before I go?\"\n\nI looked at my watch and said, \"Sorry...I can't. It's after midnight.\"\n\n\"Oh...you're right,\" she said bashfully. The she looked up into my eyes and said, \"Can I kiss you goodnight, though. I don't like the idea of...\"\n\nI took Carol by the back of her hair and pulled her to me, leaning in. \"I wouldn't have it any other way, Sunshine,\" I said as I pressed my lips against hers, parting them with my tongue. We shared a long, heavy kiss, and she moaned a little.\n\nWhen I pulled back, Carol smacked her lips and said, \"Ann is one lucky woman.\"\n\n\"And there's a lucky man out there somewhere for you, Carol. I can promise you that.\"\n\n\"I know, Neil,\" she said, her green eyes ablaze. \"And now I'm finally ready now to start looking for him. I've missed this. Thank you so much for an incredible day.\"\n\n\"You're welcome, Sunshine,\" I said as I opened the door to the hallway. \"Thank you for all you did for me today.\"\n\nAnd with that, I gently pushed Carol on the small of her back, nudging her towards the door. \"Wait...I'm not dressed,\" she said as she half heartedly fought against my hand.\n\n\"Your jeans should be dry by now...if they're still on the railing by the stairs.\"\n\nCarol's eyes got wide, and she said, \"What it they're not!\"\n\n\"Oh well...you came into my room naked...that's how you're leaving. See you in the morning, Sunshine.\" And then I pushed her a little more firmly and shut the door. I couldn't help but peek through the peephole. Carol just stood there for a few seconds, smiling as she stood in the hallway in just her heels. Then she gave a little wave, knowing I was staring, and she turned and walked through the door next to my room that led to the stairway.\n\n~*~*~*~*~*~\n\nThinking about how I'd left Carol the night before, I wondered what she'd look like when I saw her at work. Obviously, she'd be far more dressed than the last time I'd seen her. But would she be daring, or conservative. Would there be any telltale marks on her from the rope I'd tied her with? Would she have a kind of glow about her from cumming so many times? Would she even acknowledge that anything happened between us? I doubted that she would; and if she did, I was sure it would be understated...maybe a sly wink, or a knowing smile, wicked and sexy. I couldn't wait to find out.\n\nBut the fact was, I didn't even know what I'd be doing, or where I'd really be working. I wondered if I'd even see Carol. Maybe they'd hired a receptionist by now, and I wouldn't even have the opportunity. And that made me wonder what I'd say to her, whenever I got the chance to see her. I didn't want to dwell on what we'd shared, but I felt in my heart that it would be rude of me not to at least say high, and tell her once again what a good time I'd had. I wasn't thinking so much about the sex...it was more that I was grateful for the time we'd spent together. \n\nI got off the interstate, slowing down the off ramp as I banked towards the east, pulling onto one of the main arteries into the town. I was on the northern edge, on the outskirts of the city limits, and I had to stop when the light in front of me turned red. I glanced into the rear view mirror, checking my look one more time as I shifted up in my seat a little, looking into the back of the car.\n\nSmiling, I had a Bond moment, and I was suddenly back in that frame of mind. I knew now that I not only had to say something to Carol, I had a question for her...one that I had to ask, even if I had to seek her out.\n\nI pulled into the parking lot, seeing Carol's Nissan parked near the front door of the office. I parked a little farther away, and reached into the back of the car to grab my sport coat. Slipping it on, I checked my look in the window, adjusting my tie one more time, and then I took a deep breath.\n\n\"Time to find out what's really going on inside this company, Bond,\" I said, mentally psyching myself up by playing the role Ann created for me, including the mission she'd come up with for me. \n\nIn my warped little mind, I felt like if playing James Bond helped get me the job, then acting like him would only help me in making the right first impressions on my first day of work. Marching confidently toward the doorway to the temporary offices, I smiled when I caught a glimpse of Carol sitting behind the front desk.\n\nOpening the door with a suave confidence, I strolled over to the where Carol was sitting, and I sat down on the corner just like I had over three months before. Carol was wearing a low cut red dress that hugged her sexy curves, her long brown hair pulled up high on her head. I stared at her massive cleavage and offered her a sexy smile.\n\n\"Good morning, Holly,\" I said as I winked at her, calling her by the character she'd chosen to play on the adventure Tina and I had shared. \"How are you this morning?\"\n\nCarol didn't miss a beat, picking up right where we'd left off months before. She grinned and said, \"Good morning, James. I'm fine. How about you?\"\n\nI picked up Carol's right hand with my left, bringing it to my mouth. Kissing the back of it, I looked at the reddened skin around Carol's wrist, the marking from the ropes still very evident. \"I'm concerned about you...it looks like you got worked over pretty good. Pussy warned you about getting too close to an agent,\" I said, referring to Tina's character. \"You might end up...well...\"\n\n\"I was interrogated pretty intensely last night...but I didn't talk. I was able to use my womanly charms to escape,\" she smiled.\n\n\"That's good. Do you have the information I need?\"\n\n\"What information is that?\"\n\n\"I'm supposed to be Neil Thomas, remember? And, I'm supposed to open up an account today to set up my identity here in West Virginia. So I need to know how many?\"\n\n\"How many...what?\"\n\n\"Orgasms. I need to know how many times you came yesterday,\" I said with a naughty grin. \n\nI actually needed to know, so I could tell Heather later that night for the 'sex account' that Ann and I were going to share.\n\nRealizing what I was talking about, Carol flashed a naughty smile of her own, and said, \"Nine.\"\n\n\"Great work, Dr. Goodhead. But next time, you need to be more careful. You can't be leaving evidence behind...it could jeopardize the entire mission.\"\n\n\"Evidence...what are you talking about?\"\n\nI reached into my coat pocket and pulled out the silky red top that Carol had left in the back of my car. Placing it on the desk blotter in front of her, I stood up. \"Like I said, you've got to be more careful, Holly. Do try not to lose your clothing today.\"\n\nCarol knew the rules of the game Ann had set up for us to play. And we were still going to play it, even though I was back to thinking like Bond, at least for the moment. Knowing that, Carol moved her top and looked at the blotter, which had a huge calendar printed on it. I'd noticed that the dates of all the Wednesday's and Saturday's were circled with a bright red marker...the days she was supposed to be 'open' for me as a branch in the game. \n\nPointing at the calendar to the fourth of the month, which was two days away, she giggled and said, \"I'll try to wait until Wednesday.\""
    ],
    "authorname": "mimaster",
    "tags": [
        "bondage",
        "rope",
        "tit fucking",
        "pussy eating",
        "masturbastion",
        "vibrator"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ann-a-love-story-ch-72"
}