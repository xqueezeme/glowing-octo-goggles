{
    "title": "Love in the Age of Chemicals Ch. 07",
    "pages": [
        "Chapter 7\n\nI'd like to once again thank GaiusPetronius for his editing of this series, which went far beyond the \"scaffolding\" and whose suggestions considerably improved some of the weaker sections of the plot and narrative.\n\nAfter turning into the very monster I had wanted to protect Miranda from, I needed to get away and think. To do that, I needed my car. My car was waiting at the shop. And so I pedaled furiously, finding myself much more capable of the six kilometer trip than I was when I had begun biking the week prior. Still, it took me over twenty minutes, and I arrived breathless and thirsty.\n\nThe mechanic who welcomed me handed me a water bottle from a small fridge nearby. He looked at the chart for my car and said, \"Oh, it says I have to get the owner. Hold on.\" He disappeared and a few minutes later, a friendly-looking man in his late thirties came out. Wiping his hands on a rag tucked into his pocket, he then washed them in a nearby sink before coming over and shaking my hand. The name embroidered on his coveralls identified him as Andrew, who I remembered to be Dom's father by adoption. In his grease-stained work clothes, he only slightly resembled the family man I had seen in the photos on Miranda's phone.\n\nAndrew had the signs of gray hair establishing itself around his ears, and there were evident wrinkles behind his bespectacled eyes. But he otherwise seemed youthful, especially when he smiled.\n\n\"You're Deke? Miranda's Deke?\" he asked.\n\nUncomfortable being identified that way, I cleared my throat and said, \"I'm Deacon Kirsch.\"\n\nHe had earlier explained over the phone what had needed to be done to get my car running again -- not that I understood much of it -- so all that remained was payment. He looked for a moment at the carefully detailed repair order that listed the services performed and that also itemized the parts and labor that had been expended, then handed a carbon copy of it to me.\n\n\"Alright,\" he said. \"You're good to go. Just... next time bring it in as soon as Miranda tells you something sounds wrong. She'll never say 'I told you so,' but I can tell you... she told you so.\"\n\nI looked over the page and saw that the balance owed was zero.\n\n\"There are no charges on here,\" I pointed out.\n\n\"Yep,\" said Andrew. \"Just like on Miranda's tuition bill. You take care of her, I'll take care of you.\"\n\n\"But...\" I tried to object. I wondered how much he knew about my \"marriage\" to Miranda.\n\n\"Look,\" he sighed, glancing up at the clock, \"the birth mothers of my kids get special privileges in my shop. It's not a lot, but it's something. And if Miranda says no charge, then it's no charge.\"\n\n\"But this should have cost me hundreds... thousands...\"\n\n\"OK. You want to give me something?\"\n\n\"Well...\"\n\n\"An hour or two of your time,\" he said.\n\n\"Excuse me?\"\n\n\"I was just waiting around till you got here; I'm done for the day. You... look like you need to talk. And I don't see a bike rack on your car. Throw your bike in the back of my truck, follow me to a place where we can get some quiet, and let's talk. Then I'll follow you back to your place with the bike.\"\n\n\"That's... odd,\" I said, trying to gauge how serious he was.\n\n\"If I were the kind of guy to manipulate you, I would say something like, 'You owe to it Miranda to do this.' But I won't say that.\"\n\n\"But you did just say it,\" I pointed out.\n\nAndrew just shrugged. \"You coming or not?\" he asked, walking around the counter and handing me my keys. He pulled out a set of his own, then leaned out a door and shouted into the garage area, \"Hey Franky! I'm out of here! See you Thursday, OK?\"\n\n\"Thursday, got it!\" a distant voice hollered back over the noise.\n\nAndrew walked out of the building. I looked around. I knew I wanted to go think. But for the past few weeks I had done little else. Perhaps it was time to talk. And listen.\n\n*******\n\nI followed Andrew out of the college part of town, through the suburbs, and down a lonely road. He began to slow down when there was nothing in sight, then engaged his turning signal. I followed him down a service road and onto a large open field. Andrew's truck stopped in the middle of the field. I sat with my car still running and watched him get out. He pulled my bike out and set it on the ground, then climbed into the bed of his truck. He signaled that I should join him.\n\nI paused to consider my situation -- was it foolish of me to follow this near-stranger to such a remote place after dark? But Andrew seemed nice enough. Miranda knew him and trusted him. I didn't think I would be exposing myself to any danger by sitting with him. So I turned off my car and joined Andrew in the back of his truck. He was just opening up a cooler and said, \"I worked through lunch. Mind if I eat?\"\n\nThe growl of my stomach reminded me that I had missed dinner. I felt foolish for having chosen to argue with Miranda before eating the meal she had cooked for me. \"Go ahead,\" I told him, staring longingly at his food.\n\n\"Hungry?\" he asked.\n\n\"Yes,\" I told him. He tossed a sandwich to me, and it slipped through my hands. I picked it up from near my feet and opened the wrapper. As I started to eat, I saw Andrew was looking at his napkin and smiling.\n\n\"Note from my wife,\" he said, holding up the napkin, which seemed to have writing on it, though I couldn't make out the words in the starlight. \"She's got a sense of humor.\"\n\n\"So what are we here to talk about?\" I asked.\n\nHanding me a bottle of water, Andrew said, \"Come on, Deke. Even you can't pretend you don't know the answer to that.\"\n\nI took a drink, then said, \"Miranda. And me.\"\n\n\"Just so you know,\" he said, \"I don't really know what's going on. My wife probably has some idea, but she keeps those secrets well. I do at least know that Miranda's been upset lately. And I don't know you from Adam, but you walked into my shop looking like your world is in turmoil. It's not my business, exactly, what goes on between you and Miranda, but I care about her, and she's special to my family. If there's anything I can do to help her, well, I'd go so far as to spend my weekly stargazing night with a stranger.\"\n\n\"You come out here every week?\" I asked.\n\n\"Just about,\" he answered. \"It's a long story for another time. But my wife gets how important it is to me, and since she's actually the one who's usually working outside the home full time, it's OK by her if I take a few hours on Monday nights to get away. I was planning on cutting it short tonight, though, because Dom and Estelle have strep and Gina just gave birth to number five a month ago, so she's not at full capacity.\"\n\n\"Oh, I see,\" I replied, not knowing what else might be appropriate.\n\n\"But enough about my clan. What's happening over in the Kirsch household?\"\n\n\"It's... it's a little complicated,\" I said.<br> \"Then simplify it for me,\" he challenged, offering me one of his two bananas. I took one and began to peel it.\n\n\"I just feel angry lately. Some things at work didn't go as planned... in a bad way. And I can't help but think that if Miranda wasn't in my life, things would have gone differently.\" I paused to reflect on my summation. It seemed so inadequate to the complications involved.\n\n\"Of course they would have gone differently,\" Andrew said after a moment. \"Marriage changes everything. But those changes aren't always for the worse, right?\"\n\n\"But... it's more complicated than that,\" I protested. \"Our marriage... it's not exactly what you might think.\"\n\n\"You're legally married, right?\"\n\n\"Yes, but--\"\n\n\"And you live together?\"\n\n\"Of course, but--\"\n\n\"And you spend time together, share some meals together, talk, watch TV, that kind of stuff?\"\n\n\"Yeeeess...\"\n\n\"You've made adjustments, right? Changes to yourself and to your environment? Personal sacrifices, that sort of thing, because of her?\"\n\n\"Plenty.\"\n\n\"And... Now, this might be too personal, but I don't really care: you have sex with her, right? You share a bed?\"\n\n\"In a way. Technically, yes. Although--\"\n\n\"I'll take that as a yes on the sex question. So what you're saying is that you are legally married to a woman you live with, spend time with, share your life with, adjust your life to, and have sex with.\" Andrew straightened up and swept his hands outward as he concluded, \"That's a pretty standard marriage.\"\n\n\"Look, Andrew,\" I retorted, slightly agitated by his flippancy. Or was it by the unsettling truth he was pointing out? \"I don't know what all you know about us, but... the only reason we got married was for Miranda to have free tuition. There, I said it. The whole thing was supposed to be just something on paper. But we were forced to take it further in order to maintain the illusion. Sex entered the equation as a sort of... attempt to relieve some of the natural urges we had, since neither of us had recourse to pursue other options.\"\n\n\"So you'd prefer to not be having sex with her?\"\n\n\"No! No... I... I can't believe we're talking about this.\"\n\n\"Look, whatever the road that got you here, it doesn't matter. Where are you now? How do you feel towards her, how does she feel towards you, what do the two of you want out of this?.. Those are the questions you should be asking. The past doesn't determine your future. It just puts you on the road to it.\"\n\n\"But... but be reasonable! Can you seriously imagine a marriage that began under such circumstances actually working out? Doesn't that seem strange to you?\"\n\nAndrew smiled and looked off into the distance. \"I've heard of stranger things, believe me.\"\n\n\"I think you're just saying that.\"\n\n\"No... not at all. I swear,\" he objected, looking serious again. \"Dottie, for instance. You've met Dottie, right? Dottie married her second husband -- the guy she was married to before Thomas -- mostly so that he would pay for her graduate studies. It started as that, but the two of them ended up deeply in love for the rest of his life. And I know a, uh, friend, whose wife originally entered his life by renting a room from him in exchange for cleaning his house and having sex with him on a regular basis.\"\n\n\"My God. That sounds awful. He sounds despicable!\"\n\n\"He's got his flaws, no doubt, but it was a complicated situation. Eventually, though, they ended up very happy together. And that's my point. Sometimes it's weird things that bring you to the right person. You can't focus on those weird things. That's like not enjoying a trip to the beach because you drove an ugly car to get there. You've got to focus on hanging on to that right person. Hanging on at all costs.\"\n\nLooking up at the stars, which were so much more visible out here than in town, I asked him, \"How does one know when they've found the right person? It seems to be such a subjective thing.\"\n\n\"Well,\" he chuckled, \"for some of us, it's just finding a woman who seems happy to put up with us once they know all our secrets. Once they've seen all our scars and smelled all our bullshit.\"\n\nI considered the ways in which Miranda had adapted to my \"condition.\" The way she was sensitive to the things that bothered me and the way she seemed to be a student of my behavior.\n\n\"But another good sign,\" Andrew continued thoughtfully, \"is when you find yourself really, really mad at her -- like storming out of the house kind of mad, like 'this chick has serious issues' kind of mad. And once you get far enough away, you realize that all you really want to do... is go back.\" He took a long drink from his water bottle, then stared up at the stars awhile.\n\n\"But I still feel so angry,\" I said after a few silent minutes.\n\nAndrew continued looking up a moment, then turned his pensive gaze towards me. \"Think about what's below that,\" he said.\n\n\"What do you mean?\"\n\n\"Whenever I'm angry, it's usually just covering up either pride or fear. Sometimes both.\"\n\nI knew without needing to think about it that my anger was an expression of fear. Fear over the way my life was out of control. Fear over never achieving what I had set out to achieve. Fear that as a scientist I would be insignificant, that my life and work would count for nothing. Fear of letting Miranda deeper into my life only to lose her next year.\n\n\"And is there anything beneath fear?\" I asked, shivering at the chilly winter air.\n\n\"Probably,\" he said. \"We're usually afraid when we're exposed. When we feel vulnerable.\"\n\n\"Vulnerable,\" I mused. \"That's exactly what it is when someone has the power to hurt you.\"\n\n\"And we're never more vulnerable, never more exposed to being hurt, than when we love,\" Andrew concluded.\n\nI looked for familiar constellations, but found none. Astronomy has never been my brand of science. I pondered Andrew's suggestion. \"So you're saying I'm angry because I love Miranda? How counterintuitive!\"\n\n\"Maybe,\" he shrugged. \"I'm not saying anything for sure. But does that feel right to you? Does that seem like it describes what's been happening?\"\n\n\"Yes, it... but, no. No! That's the problem. I'm a scientist. My field of expertise is the chemical patterns in the brain that account for things like fear and shame and anger and love. They're not real to me. They are just chemicals.\"\n\n\"Well... shouldn't they be more real because they are chemicals? I mean, you, of all people... you can point to love and anger and happiness. Who else can actually touch emotions? That's pretty cool if you ask me.\"\n\n\"You're missing the point,\" I argued, not sure how to explain such things to a simple mechanic. \"I can't believe in love or fear or shame or any of those things. They're only pre-scientific descriptors given to identifiable chemical reactions in the brain. If you consider how--\"<br> \"Let me ask you this,\" Andrew interrupted. \"It'd be safe to say you believe in evolution, right?\"\n\n\"Yes, obviously,\" I snorted.\n\n\"Have you considered why the human brain evolved to include those chemical reactions? Why they're not aberrations or artifacts, but rather essential components of human survival?\"\n\nI felt blindsided. I didn't expect my mechanic to ask such a question. Especially a question that zeroed in on the very heart of my life's work, one that called my research into account. This was not something I had given thought to. I had assumed the weakness of emotions, the problem of passions. Andrew was suggesting the opposite: that feelings were not a nuisance, but rather a necessity.\n\nAnd with that revelation, my thoughts pursued two paths. The potential implications for my research was one path. This was a glaring hole in my approach. I was considering the reactions in isolation from other functions, as if the whole system would perform better without them. But if the body had evolved them for a purpose... The implications were... wow.\n\nThe second path was Miranda. Once again, my reasoning moved faster than my conscious mind, and I knew I would need time for the two to come together. I only hoped I could attain some clarity before I saw Miranda again.\n\n\"Look, man, I'm not going to keep you out here all night,\" Andrew said, putting trash inside his cooler. \"It's cold and I've got a newborn at home.\"\n\nI paused my train of thought. \"Thank you,\" I blurted out.\n\n\"Anytime, Deke. Just... please, try to fix things with Miranda, whatever that needs to look like for you two.\"\n\nI nodded and sighed.\n\n\"And, uh... stop parking your car under a tree. You usually won't see the sap, but it's killing your wiper blades.\" I had been changing my blades at least every other month. How did he know?\n\nAndrew stood up and I helped him put my bike back in his truck bed. We returned to the warmth of our respective vehicles. He followed me back to my place and dropped off my bike. Before driving away with a wave, he pointed up above my parking spot. \"See?\" he smiled. \"Trees. I know a guy who does landscaping, if you want a number.\"\n\n\"Thanks, I'll let you know,\" I said, expressing the assumption that I would probably be seeing Andrew again.\n\nWhen I walked into the house, Miranda's door was shut and all the lights were off. I got ready for bed and lay in that empty expanse, staring at the ceiling, putting thoughts together like ill-fitting puzzle pieces, sometimes pulling them all apart and starting over from scratch. I fell asleep shortly after figuring out what I wanted but before figuring out what to do about it.\n\n*******\n\nI spent Tuesday going about my external routine while my mind processed the previous night's conversation with Andrew. I returned home that evening and looked around. If I went through with my plan, there would need to be some changes. I would miss the order I had always worked so hard to maintain. But it was for Miranda...\n\nOn Wednesday, I sat across from Miranda at breakfast. After a minute of silence, we both began to speak at the same time.\n\n\"I'm deeply sorry,\" I said.\n\n\"You got your car back,\" she said.\n\n\"Yes,\" I replied just as she said, \"What?\"\n\nMiranda looked at me, and I repeated, \"I'm very sorry for my words and my behavior the other night. I'd like us to talk this evening. Is that OK?\"\n\n\"Yes,\" she said quickly. \"Yes, that's fine.\"\n\n\"I have some errands to run before then,\" I informed her, \"so it would be best to drive separately.\"\n\n\"That's fine,\" she answered.\n\nNothing more was said that morning.\n\n*******\n\nI spent the afternoon visiting a few stores; it took some effort to find all that I was looking for. Returning to the house, I put everything in the garage. Then, fearing the effects of the cold, I moved it all into the laundry room. Then I washed up and started making dinner. Miranda returned a little before five and was surprised to find dinner nearly ready. We sat down to eat, her mood slightly better. Seeming nervous, she didn't eat much, though she assured me that my cooking wasn't to blame.\n\n\"I have ice cream for dessert,\" I told her. \"Would you like to take it to the couch and we can talk?\"\n\n\"Ice cream sounds amazing right now,\" she said, her hands trembling. In a few minutes we were set up on opposite ends of the couch and Miranda had almost finished eating her dessert. I was taking small bites, trying to determine how to start the conversation. Despite planning all that I wanted to say, I had never been able to decide just where and how to begin. I took a deep breath in, but before I could speak, Miranda started crying -- heavily. Her body slumped forward as she sobbed.\n\n\"I'm so sorry, Deke, I'm sooo sorry!\"\n\n\"I thought that was to be my line tonight,\" I said, confused.\n\n\"No... you don't understand,\" she said through tears. \"I've messed everything up: I should have read the warnings. I didn't know! It's all my fault! I swear, I didn't want this to happen.\"\n\nClearly, all the things I had planned to talk about that evening would have to wait until Miranda had the chance to tell me whatever was upsetting her so much.\n\n\"What warnings?\" I asked.\n\n\"On my antibiotics,\" she answered. \"For the tuberculosis, remember? It was written on the information sheets, as plain as day, but I didn't read them, even after Denise told me, 'Make sure you read all the warnings first.' And Dr. Malpan -- Thomas -- asked if I was on any other medication before he gave me the prescription, and I said 'no' because I don't even think about my birth control as medication. But the Rifampin... It can mess with the Pill. You can't take them together, but I did. I'm so sorry, Deke.\"\n\n\"Miranda, what happened?\" I asked, trying to piece together what she was apologizing about. \"Are you sick?\"\n\n\"No! Well, yes, kind of, but that's not it,\" she babbled. \"I'm going to have to drop out again and everything. And that's not fair to you because I can't just keep dragging this out when you want your life back. It's not fair to you at all.\"",
        "\"Miranda, I don't understand,\" I said, raising my voice and speaking slowly. \"Why do you need to drop out? What happened?\"\n\nShe paused, wiping tears and looking at me in frustration. Throwing her arms down in exasperation, she shouted, \"I'm pregnant, Deke! Probably from New Year's Eve... or that shower we took on New Year's Day. The antibiotics overrode my birth control. I wasn't thinking and I screwed everything up! I'm so, so, so-so-so sorry.\"\n\n\"Pregnant,\" I whispered in shock.\n\n\"So I can finish this semester, I guess,\" she began, speaking rapidly. \"But I'm due in September... again... so the fall semester is out of the question. But even if I took summer classes before that and then a full load in the spring, there's no way I could graduate in May. And I don't know how I could take classes anyway once there's a baby, because Isa said they have to be at least six months old before her childcare co-op will watch them. And I just can't bear the thought of giving up another baby, even to an awesome family. And Gina said they can't take any more kids now that they're up to five. But I couldn't do it anyway, it would just break my heart all over again, Deke. But I'm not assuming I can stay here once I'm out of school, I get that. But I don't have a plan yet, that's what I'm trying to say. And I've been talking to...\"\n\nThe whole time she was rambling on, my eyes were drawn to her belly -- to that magical place where new life was forming even as we spoke. I moved across the couch and knelt on the floor next to Miranda.\n\n\"Deke... what're you doing, Deke?\" Miranda asked nervously.\n\nI slowly reached out my hand and rested it right above her scar, wishing her shirt wasn't keeping my skin from hers. \"Our baby... is in here right now?\" I asked.\n\nMiranda took my wrist and lowered my hand a bit. \"More like here, Mr. Science,\" she said wryly. Her expression was hesitant and confused. Mine was just sheer amazement.\n\n\"Right now, it's growing in there,\" I commented. \"Cells are dividing, DNA is replicating, vital systems are taking shape. And your...\" I glanced up at her face and laughed from sheer excitement, \"your amazing, incredible body is giving it everything it needs. Protecting it. Nourishing it. It... it's beautiful!\" I could barely contain my elation. Miranda gasped as I leaned in and kissed where my hand had just been. \"And you'll keep growing,\" I went on. \"Your body will adjust and make room for that new life. Our baby. That we made. When we shared a special, perfect moment together.\" I moved my hands up along her belly. \"You will be so beautiful,\" I assured her. \"Like in that picture from three years ago. I wanted to touch the woman in that picture -- she was radiant with life. And you'll look that way again.\"\n\nMiranda giggled nervously, still wiping her tears. \"Deke, you are taking this pretty well.\"\n\n\"And these,\" I said, lightly touching her breasts through her shirt. \"These beautiful orbs will produce all the nourishment our baby will need after being born. I can... Oh, Miranda, I can see it. I can see you holding her to your chest, your hair tickling her face as she feeds.\"\n\n\"Her?\"\n\n\"I don't know,\" I said, staring at Miranda's chest. \"It just came out that way.\"\n\nThen straightening up, I climbed onto the couch next to her. \"Miranda... this is... this is amazing. This is nothing to apologize for.\"\n\n\"You say that now, Deke, but once you have time to think about it, you'll understand. A baby should be something you plan, not something that happens in the midst of all the confusion and uncertainty we're in right now.\"\n\nI shook my head. \"No confusion,\" I said. \"Not like before.\"\n\n\"What do you mean, Deke?\"\n\n\"I mean... I'm ready to acknowledge the point that we had in all practicality arrived at already. We're married, Miranda, at first only on paper, and then only for show, but this is what I want. You are what I want. That idea frightens me. It frightens me so much.\"\n\n\"And that's why you've been ignoring me?\"\n\nI sighed. \"No, there's more.\" I went on to tell her about being rejected for funding and of the maelstrom of emotions and fears that had consumed me when my professional pride was injured and my career prospects seemed threatened. I told her about my attempt to reclaim the time when my life made more sense and seemed more under control. She listened well, asking questions to help her understand my state of mind. In the end, I apologized again for treating her so poorly.\n\n\"To be honest, Miranda, I was never more content than when we were going about our routine last month. Just living and working together in peace. And if I'd known there was a baby growing inside you that whole time... I would have been more than just content.\"\n\nAt the mention of the baby, Miranda, who had smiled at the memory of the previous month, looked sad again. \"There are still so many questions, Deke. I mean, this affects my whole plan. I don't know when I'll be able to graduate, and I can't keep invading your life indefinitely.\"\n\n\"Aren't you listening to me?\" I chided her. \"I'm done pretending. This isn't about your tuition anymore, or about convincing other people. This is the real thing now.\"\n\n\"You say that now, but I'm scared that eventually you'll backtrack and say it was all just chemicals. Just 'the evolutionarily programmed male response to a successful breeding' or something like that. You're high on dopamine right now, and when that wears off, you might think differently.\"\n\n\"Miranda, I came to this conclusion two nights ago. I knew for sure back then that I want you here for more than just appearances.\"\n\nShe sighed and bit her lip. \"Oh Deke, I really want that to be true, but my heart just... my brain is just experiencing the reaction associated with fear,\" she said mockingly.\n\n\"Well, I don't know what else I can...\" I started, then remembered something. \"Oh wait. Stay right there,\" I instructed her.\n\nI went to the laundry room and opened the door. Then I walked back to the living room. Miranda looked at me curiously, especially when she heard the jingling sound that followed me. I knew she had seen the first part of my gift when her eyes widened in shock. I picked up the animal and handed it to her.\n\n\"You got a puppy?!\" she squeaked.\n\n\"You said you always wanted one.\"\n\n\"But a puppy? In this house?\" she asked. \"You know dogs make a mess of everything, right?\"\n\n\"Yes, I'm aware of that,\" I assured her. \"That's the point, actually. Being... in...\" I sighed. \"Being in love with you is something that will force me to change a lot. It messes up my world, over and over again. And I'm choosing that. I'm choosing you.\"\n\n\"Aww, Puppy,\" she said, laughing when she realized the confusion her nickname for me might create.\n\n\"Besides,\" I added, \"I was going to use this as an excuse to keep you around after you graduate. Because you couldn't just abandon the dog. And I would refuse to give up custody.\"\n\n\"But my little surprise changed that?\" she noted, putting her hand to her belly.\n\n\"Yes, it did,\" I agreed. \"And it sort of preempted part two of my surprise for you... on his collar.\" Miranda quickly grabbed the collar and found the diamond engagement ring. Her features melted. \"To replace the fake one you've been wearing,\" I explained. \"And I'd like to replace the fake wedding band, too. Real rings... for a real wife.\"\n\n\"Oh my God,\" Miranda laughed as the puppy licked her face. \"What an evening!\"\n\n\"Not the discussion either of us had planned, I think.\" And Miranda simply shook her head.\n\nAs Miranda played with the puppy, trying out name after name, we planned our future. Or rather, we began discussing options for the future. What to do about Miranda's schooling, childcare options, furniture rearranging, where to put the puppy, when and if to have a wedding ceremony, and anything else that came to mind. Every now and then I had the nagging thought that I should be seeing to my research. But I learned to quiet those thoughts with one touch to the belly that would soon swell with my child.\n\n*******\n\nInevitably, the excitement of our newly established relationship gave way to another kind of excitement. I knew pregnancy would change many things in our relationship, but I wasn't sure how many things.\n\n\"Miranda... while you're pregnant, can we still...\"\n\n\"Yes,\" she smiled. \"You can still give me all the back rubs and leg rubs and foot rubs in the world! And I'm gonna need them. I have to warn you, I'm a pretty needy pregnant woman. And this time I have a man to go through it with me.\"\n\n\"No... I was asking...\"\n\n\"And yes, silly,\" she rolled her eyes, \"we can still have sex. I'm not that fragile... yet. We might need to use different positions once Junior starts making his presence obvious, but the doctor last time told me sex was OK up until labor, unless he tells us otherwise. Not that I got to make any use of that knowledge last time.\"\n\nI sighed in relief. It had been seven weeks since we had been intimate. Despite my conviction that I could return to the lifestyle I had led before meeting Miranda, I had not fared well during my self-imposed sexual exile from my wife. After speaking with Andrew, I thought I was beginning to understand why.\n\n\"Would you be OK with going to bed now?\" I asked, shifting anxiously in my seat.\n\n\"Only if we won't be sleeping,\" she replied, standing up and carrying the puppy to the laundry room. \"Good night, Doctor Fuzzyface,\" she whispered.\n\n\"Doctor Fuzzyface?\" I asked as we walked through the kitchen and towards our bedroom.\n\n\"Yeah, I think that will be his name,\" she said confidently.\n\n\"Does it matter to you that calling him a doctor demeans the value of my Ph.D.?\"\n\n\"Awww... don't get jealous,\" she teased. \"I'm sure you'll get tenure before Dr. Fuzzyface does.\"\n\n\"I think I will just call him 'the dog.'\" I remarked, putting my hand on her lower back and guiding her into our bedroom.\n\n\"He won't answer to that,\" she asserted, turning around and quickly touching her lips to mine.\n\n\"Well, you're just going to confuse me and him whenever you say 'Puppy,'\" I stated, gripping her elbows to keep her close.\n\n\"He doesn't understand English, Deke,\" Miranda replied with a serious expression, beginning to unbutton my shirt. \"Don't be silly.\"\n\n\"I'm not the one who keeps talking to the dog,\" I pointed out, slipping my hands under her shirt and holding her sides. I closed my eyes as my stomach fluttered with the sensation of touching her skin again. I began trembling as I thought about what was happening in the space between my hands, deep inside her. She said she wasn't fragile, but I feared doing anything to harm the life growing inside her.\n\n\"Do I get to sleep in the big bed tonight?\" Miranda whispered, putting her face against mine and closing her eyes.\n\n\"Tonight and every night, Darling,\" I answered, feeling even happier than I had when I first bought the bed.\n\nShe giggled and raised her shoulders for a moment. \"It doesn't feel real,\" she sighed. \"I didn't think it would go this way.\" As she spoke, she began backing up towards the bed, pulling me with her. Just before she fell back onto the bed, she pulled her shirt off. Then rolling backward, she slipped her shorts and panties off, tossing them towards the bathroom.\n\n\"Didn't think what would go this way? Tonight? Or getting married in the first place?\" I asked, curious as to when she had begun to consider our marriage as having the potential for more than its intended purpose.\n\n\"Neither... both... whatever,\" she answered, wiggling backwards until her head was at the pillows. Then she slipped her feet under the covers and followed them with the rest of her body.\n\n\"I don't know,\" I replied, pushing my pants to the floor along with my briefs, then climbing in after her. The sheets felt almost too cool to the touch, driving me even more urgently towards Miranda's warmth. \"I suspected a few times that you had this ending in mind from the start. That the tuition excuse was a convenient way to trick me into marrying you, and that you've been manipulating me ever since.\"\n\n\"You give us both too much credit, Puppy,\" she laughed, spreading her legs as I climbed over her. \"I'm not that devious. And you... well... Let's just say, I love you dearly with all my heart, but I was not interested -- romantically at least -- in the Dr. Kirsch of a year ago.\" Then reaching between us and taking my erection in her hand, she squeezed it gently and lined it up with her entrance. As her other hand brushed through my hair, she said, \"I'm OK skipping foreplay tonight, since that seems to be the direction you're heading.\"\n\n\"I can make it up to you later,\" I promised.\n\n\"You will,\" she assured me. She wiggled my tip through her folds, which were beginning to feel wet with arousal. Then I felt the unmistakable warmth of her entrance on my tip, and Miranda pulled her hand away slowly. \"Go ahead, Baby,\" she encouraged me.\n\nI pushed in a little bit, hesitant, still worried about hurting her or the baby. But Miranda pushed up along with me. It took a few nudges before I was securely inside her, and I felt the tight ring of muscles around her entrance gripping the middle of my shaft. Pulling out again until only my tip was not exposed, I pressed down firmly, slipping my arms under Miranda as she arched her back in response.\n\nOnce we were fully joined, I spoke softly in her ear, \"What has changed to make me so different now than I was then?\"\n\nShe giggled and squeezed her walls around me playfully. \"On the surface,\" she replied, \"there's the new look. Much better all around, and I do get compliments on my handiwork. And the extra twenty or thirty pounds really help.\"\n\nI tried to look down at my body. I hadn't noticed gaining so much weight. But the position we were in did not allow for much adjusting or self-inspection. Miranda saw my attempt and laughed. \"Trust me,\" she said, \"you've put on some weight, but in a good way. You were scrawny last year. Now... you look healthy. Why do you think I kept making you dinner?\"\n\nIt had never seemed strange to me that Miranda was so consistent in feeding me. Just one of the ways I had grown to accept her presence in my life as if it was normal and natural. I began a slow, gentle rhythm of thrusting.\n\n\"But you've changed in other ways, too. You joke around sometimes...\"\n\n\"Only because your laugh is so beautiful,\" I said, earning a prolonged kiss.\n\n\"And you've been good about learning how to think about my needs, and how to make conversation. You sometimes even show that you care...You've just... become a much better person. And that's an even bigger deal because I know how hard some of these things are for you.\"\n\n\"Because of my condition,\" I stated, sighing as I held a particularly deep thrust.\n\n\"Because you're wired differently from most people, and the world isn't designed to handle that. So you have to work harder just to keep up. It's not fair, but that's the hand we've been dealt.\"\n\nI needed to kiss her. One hand held the back of her head, forcing her to keep her face close as our tongues danced. My thrusts sped up in the excitement of that exchange, and I felt Miranda's hands grip my bottom and pull me towards her. But I wasn't ready to finish, not yet. I could have, but it was too soon. I reluctantly released her head, which lowered to the pillow again. Slowing my motion, I pulled most of the way out and paused. Miranda wiggled slightly, whining in desire.\n\nSeeing that I was holding back on purpose, she cocked her head and gave me a questioning look.\n\n\"Just taking in a beautiful sight,\" I explained. Miranda rolled her eyes and grinned. With one more look at her abdomen, and with further thoughts of the miracle contained within, I pushed slowly back inside her and held still. She moaned as I slide home and grunted at the slow joining of our pubic bones.\n\nI was torn between two desires: I wanted to push myself towards release, a release that had been building for weeks. But I also wanted to rest in her arms and to enjoy the soft touch of my flesh against hers.\n\n\"Kiss me, Deke,\" Miranda whispered, putting a hand behind my head to guide my face towards hers. I followed her cue, slipping my arms under her body to keep her close as our lips met. We kissed passionately, our mouths readjusting, ever unsatisfied with the way we were touching, ever seeking to find a way to perfectly join mouth to mouth. Air hissed through our noses and was sucked back in gasps whenever our lips separated. Slowly, imperceptibly at first, our hips began moving.\n\nWanting to experience again the sensation of entering her, I pulled back, almost completely vacating her slickness until I could feel the tickle of hairs just below my crown. Then I cautiously re-entered her, savoring the feeling of her outer ring squeezing along my shaft. We had stopped kissing for me to moan at the sensation. Miranda, too, was gasping, her eyes closed.\n\n\"Do that again,\" she whispered. I happily obliged, repeating the motion a second, third, and even fourth time. Once I was securely inside her again, Miranda rolled her hips up. The new angle brought her thighs closer to my arms, and I took advantage of their new proximity to feel the skin on the back of her legs. Instead of putting her legs back down, Miranda slowly thrust back and forth, moving along my shaft no more than a few centimeters but giving me an exquisite feeling of depth. I grunted at the pressure I felt. She was doing all the work as I rested on top of her, concentrating on restraining the urge to take her more forcefully.\n\nMiranda began kissing me again, her breathing agitated. \"Keep going, Puppy,\" she mumbled between kisses. \"I'm getting close.\" Her hands squeezed my ass and urged me to push. I started pressing deeper, excited by her sharp intakes of breath each time I bottomed out. Miranda spread her legs more and, grabbing under her knees, pulled her legs back. \"God, you're so deep,\" she moaned, pushing up against me each time I pressed down.\n\n\"You feel amazing,\" I gasped. \"So tight and warm. I never want to leave.\"\n\nShe gave me a grimacing smile and an affectionate moan. Then her face suddenly tightened in concentration. \"Are you going to cum with me?\" she whimpered. \"Try to... try to cum soon. Can you?'\n\nI sped up in response. I had been avoiding pushing myself over the edge, but she seemed intent on bringing me there. She released her legs and wrapped them around my back, pulling me towards her with her heels on my bottom. I had no intention of slowing or stopping, but I couldn't have even if I had wanted to.\n\n\"Are you close?\" she asked, her voice rising in pitch. She was panting, frantically kissing around my neck and jaw.\n\n\"Getting there,' I gasped, pressing harder. Pushing deep into her. Feeling her clenching at my base when I lifted up.\n\n\"Are you thinking about our baby?\" she whispered urgently. That certainly helped. My body sped up, driving deeper into her. \"Thinking about the life we made? Thinking about how you filled me with your seed? Thinking about how you made me your woman?\" Miranda certainly knew what she was doing. The thought of breeding her, of our intercourse producing what it had always been designed to produce -- it excited me.\n\n\"Yours,\" she whispered as my pounding into her turned manic. \"Yours. I'm yours. My pussy is yours. My breasts are yours... Oh God, Puppy, I'm cumming! My baby is yours... Oh God! I'm all...\"\n\nShe cried out and started shaking just as I held deep and released. Her mouth next to my ear, I heard each small cry of joy, punctuated as they were with groans of pleasure. Those sounds accompanied my pulsing inside her, each pulse magnified by the milking clenches of her tunnel, welcoming my spray. There was nothing more for my sperm to do in her warm, welcoming womb, but they raced to find their home there nonetheless.",
        "I wanted to touch, to kiss, to taste her breasts, which had been pressing up against my chest that whole time, but my mouth was frozen in place and my hands could only pull Miranda urgently towards me, driving her hips down for one more bit of depth to ensure the best possible planting of my seed inside her. Even as my excitement plateaued and I could properly take in the sensory input around me, Miranda still trembled, her pleasure prolonged and magnified by sharing it with me. I slowly leaned down and seized a hardened nipple with my lips, teasing it with my teeth and caressing it with my tongue. Miranda fell into one more spasm, which I experienced all over my body, then she relaxed. Draping her forearm over her eyes, she breathed deeply a few times.\n\nI watched a satisfied smile form on her face. The rise and fall of her breasts as her breathing slowed was soothing to feel against my chest. I thought of how odd it was that being naked next to her was at the same time so comfortable and yet so exciting. I hesitated to break the silence.\n\n\"When did you start to see me differently?\" I asked, resuming the conversation that our love-making had preempted.\n\nShe exhaled loudly and stopped wiggling. \"Probably early on. Probably around the dinner party was when I first started to notice a little bit that I looked forward to seeing you each day. Not just as a friend or potential sex partner, but as something more.\"\n\n\"But we'd already had sex by then,\" I pointed out.\n\n\"Well, yeah. I was honest about why I was suggesting sex in the first place. It was about working off that horniness that was so distracting. I hadn't had sex in over a year and I missed it. I missed human touch. But you were right, chasing that experience was taking its toll on me -- academically and emo-ohhhh-tionally.\" I interrupted her with another long, slow thrust of my softening member. Reluctantly, I withdrew and lay on my side next to her.\n\nMiranda continued, \"I don't think I can say there was a moment when I fell in love with you. It was gradual. Like I looked around one day and knew everything was different. That my heart had already changed and I was just noticing it. Mmmm...\" she paused as I kissed along her neck while rubbing her belly. \"I think I knew for sure that time in the shower. After we had both opened up about... about our pasts. And realizing I had real feelings for you, maybe that's why I was all worked up. I was starting to think you felt the same, and... and it was just such an exciting thought.\"\n\nWe kissed softly, tenderly, enjoying the afterglow of our coupling. \"I think I was the same,\" I said, lifting my head. \"It was a slow revelation. I wouldn't have even called it love or anything like that -- perhaps because I lack the emotional vocabulary, or perhaps it was self-deception.\" I paused, rolling onto my back. Miranda followed, curling up next to me and tracing patterns in my chest hair. \"And even when I decided to buy this bed... I justified it with practical reasons... things that were accurate and factual and that didn't trace back to my feelings for you. But by then I was unable to envision a future without you in my home. It would have been wrong. And I knew I wanted to keep things the way they were. I knew I was buying this for you.\"\n\nMiranda giggled and said, \"Well, I hope you know that the bed is not the last thing we'll need to be changing around here.\"\n\nI sighed and turned to face her. \"Another 'one more thing?'\" I asked.\n\n\"One at a time, at least,\" she said dreamily. \"One step at a time.\"\n\n*******\n\nEight months later:\n\n\"And so you see, notions such as love or fear or depression are really just outmoded ways of describing specific synaptic activity -- activity which we are approaching the point of being able to stimulate and activate almost at will.\"\n\nI smiled to myself as I felt a flash of d\u00e9j\u00e0 vu. I could remember two years earlier, reading that same line from my lecture notes. A line that inspired a young lady to raise her hand and...\n\n\"Professor... Doctor... Dr. Kirsch?\" Startled out of my reminiscence, I looked up at another young lady, in some ways not much different from the one two years earlier, but in truth, worlds apart from her.<br> \"Yes, Miss...\"\n\n\"Andrea,\" she stated. \"So what's to keep us from saying that emotions aren't real? If it's just a chemical reaction, do fear and love and other feelings actually exist as we know them?\"\n\n\"Excellent question, Andrea,\" I said, looking to the back as the door opened slowly. I paused to smile as Miranda slipped into the room, Rosalind sleeping in her arms. Mother and daughter took a seat in a chair against the back wall.\n\n\"The answer, Andrea, is that they exist only as we know them. What I have described are the emotions viewed from one perspective -- the perspective of the neurochemical process. What we are more familiar with is the experiential perspective -- emotions as they affect us, as we feel them.\"\n\n\"So which perspective is real... or, or right?\" another student asked.\n\n\"It's the chemical one, dummy,\" Andrea said teasingly, half-turning her head to view the questioner. \"We're in a science class, so of course it's the science-y one.\"\n\nThe young man who had asked the question blushed at the sound of muted laughter.\n\n\"Actually,\" I began, trying not to watch my wife and daughter the whole time, \"neither perspective gives the whole picture, and each complements the other. The chemical process tells us why we experience fear or shame or anger or love the way we do, why, from a physiological standpoint, it causes our body to react in certain ways. Why we blush when embarrassed or cry when sad. But the chemical process doesn't explain itself. It cannot account for its own existence. Unless we are to write off emotions as glitches in the system of the human brain, we must assume they are part of our evolutionary design, an intended component of our neurological functioning. The questions then become, 'Why do we fear?' or 'What purpose does love serve?'\"\n\nI paused and looked around the room. Despite having reached the end of our allotted time, I did not see anyone packing to leave. I saw instead an unfamiliar scene: eyes around the room, eagerly awaiting my words. So I continued.<br> \"I am a scientist and not a philosopher. My professional qualifications do not equip me to answer those bigger questions, I think. But as a human being, I can posit my own suggestions on a topic to which I have devoted considerable attention over the years. I would suggest that fear, for example, protects us from danger. Shame serves to reinforce social norms that protect us. Or... or hopefulness motivates us past difficulty by giving us a mental image of better possibilities. Our emotions, far from being chaotic and disruptive factors, as we may be tempted to see them, are instead highly developed survival tools. And so, to limit our understanding to just the chemicals we see and measure is to hold an incomplete view, no less so than refusing to acknowledge that chemicals are at work when your heart flutters when the object of your affection passes by.\"\n\n\"And so what purpose does love serve?\" asked a voice from the back. The class seemed to assume it was one of their own number asking that question, but I could see the teasing smile form on Miranda's lips.\n\n\"Love,\" I began with a sigh, \"is merely to ensure procreation.\"\n\nThe nervous laughter in response to my answer was interrupted, appropriately, by Rosalind's sharp cry as she woke from her nap. Twenty-six startled heads turned to see Miranda gently rocking our daughter back to sleep.\n\n\"Apparently my daughter wishes me to reconsider my answer,\" I joked. \"So I will say instead that love pushes us towards one another. It serves to bind us to the person who will guard and protect and accompany us through our journey. It's the most powerful survival tool we have. The intensity of our early infatuations often causes us to misunderstand the goal of those feelings, and so we may believe we are merely lusting for the body of another, that we are being driven to reproduce. But as every lover learns, no matter how far we distance ourselves from our beloved, physically or emotionally, that compulsion to return does not abate. Even when other sexual opportunities present themselves, we find them inadequate. Because lust is a tool. A tool our chemically-powered brains use to push us towards another person. When our bodies are experiencing the chemical process we call 'love,' we are not, at the root, lusting after a body. We are instead wanting to be close to the whole person. Lust drives us closer in one sense so that we can be closer in other, deeper, more important senses.\"\n\n\"But isn't your whole field of research, your specialty, focused on manipulating those processes?\" another student challenged me. \"Why mess with them if they're so important?\"\n\nI sighed, thinking of the circumstances years and years ago that had set my research in motion. As a younger man, I would have given a much different answer to the question my student had posed from the one I was about to give. That younger man would have been both unwilling and unable to reframe his scientific inquiries in the way I had done, inspired by Miranda, Andrew, and my evolving perspectives. Those adjustments had not only borne fruit in my personal life; professionally, I had secured my research when I received a favorable response to my carefully reworked and resubmitted grant application. With five years of guaranteed funding and the prospect of more if my results were encouraging, I was just beginning to explore the possibilities in the next phase of my research.\n\nThe sound of Miranda clearing her throat startled me back to the present, where my students still awaited my response.\n\n\"Why does a doctor 'mess with' a patient's body?\" I asked. \"One of the advantages of understanding our chemical brains and the chemical passions they give rise to is that we can identify true errors -- not the emotions themselves but emotions that are behaving anomalously, harmfully, or pathologically. Chronic depression, rage, unhealthy fixations -- are they not to our emotions much like cancerous growths in our organs? Natural elements that have grown unchecked and which have begun to do harm instead of good?\"\n\n\"So you're an emotional oncologist!\" suggested a playful voice from the front row.\n\n\"Well,\" I blushed, \"I wouldn't put it in quite those terms, but the analogy is apt, so far as it goes.\" Then glancing at the clock, I dismissed the class and waited for the room to empty. A minute or two later, I walked to the back of the room, and Miranda rose to greet me with a kiss.\n\n\"I just fed her,\" she told me, slowly passing the infant into my waiting arms. \"So she should be good until my class is over. Are you taking her to the lab?\"\n\n\"Not today,\" I answered. \"Having recently lost my research assistant to motherhood, I'm going to head home and try to get some reading done. Apparently I had not noticed when someone pointed out a few potentially helpful articles on the evolutionary purposes of emotion and cognition.\"\n\n\"I told you to read those articles a whole year ago,\" she chided me with a roll of her eyes. \"I guess you just weren't ready to know it.\"\n\n\"Nonsense,\" I objected. \"How can someone not--\" I was cut off by a look of warning. Thinking carefully for a few seconds, I tried again. \"I suppose that someone may at times lack the cognitive network to accept certain information. Lack the conceptual pegs upon which to hang things, so to speak.\"\n\n\"That's better,\" she said, setting the diaper bag on a chair and pulling her bookbag onto her shoulder.\n\n\"Or you need to work on writing more clearly,\" I teased as she turned to leave.\n\nSpinning back to face me with a defiant smile, Miranda pointed her finger in my face and said, \"You watch it, Buster. I had my six week check-up this morning, so you'd better be nice.\" Her bluster dissolved, though, as we both leaned in and listened to Rosalind's soft breathing.\n\n\"I'll see you at home, OK?\" she whispered, her face nearly touching mine.\n\n\"Of course,\" I whispered back. Then touching her lips with a hint of a kiss, I added, \"I love you.\"\n\n\"Me too, Puppy,\" she assured me as she turned again to leave. \"Me too.\"\n\n*******\n\nEpilogue:\n\nDeacon's vows\n\nTo be read with much trepidation on the occasion his wedding, celebrated on the second anniversary of his marriage, at a much-too-large gathering of family and friends, with Reverend Oswald Duncan officiating:\n\nMy dear wife, Miranda,\n\nI was urged by some wise friends to consider using this opportunity to talk about the many things you have brought to my life in the two short years that we have spent together. But I have chosen instead to consider all the things you took from me.\n\nYou took from me a world I understood and thought I could control.\n\nYou took from me a narrow view of life, shaded only in black and white.\n\nYou took a life turned in on itself with no room for others.\n\nYou took my routine of lifeless, mindless activity.\n\nYou took a quiet home, a sanctuary of one.\n\nYou took my solitude.\n\nYou took all those things from me, and I hope they never return.\n\nI will take instead the uncertainty of love, and the vibrant colors of change. I will take a life looking outward with room for you, for our precious daughter and her future siblings, and for our friends. I will take a home that stirs with the noise of life. I will take companionship, friendship, family, and even Doctor Fuzzyface.\n\nI promise to you that I will learn new habits and routines that affirm your beauty and your worth. I promise I will cling to you like a drowning man clings to a life preserver. I promise to be a faithful student of the foreign language you are teaching me. I promise to never stop trying to understand you, so that I can never stop trying to demonstrate my love for you.\n\n*******\n\nThe End\n\nA note on the context for this story:\n\nAs with all my stories, Love in the Age of Chemicals has crossovers with other stories. Dottie and Thomas's story can be read in \"Of Hope Lost and Found;\" Gina (Dom's mother) tells her and Andrew's story in \"A Strange Arrangement;\" and devoted readers may catch a few of the other references scattered throughout this tale. Thanks for reading, thanks for commenting, and thanks for voting. This one took a lot out of me, so I may go on hiatus for a few months, but fear not. Many more stories are already in the works.\n\nA note on Asperger's:\n\nThe narrative tone of this story was intentionally crafted to express Deacon's style. He is literal, and so there are few (if any) cases of metaphors, figures of speech, or imagery in his account. He thinks in metric. He values precision. He is seldom colloquial. At times, I had to fight the urge to write more descriptively in order to remain faithful to his perspective, and I thank you, readers, for your patience.\n\nI do not write as an expert on this topic, but I have worked with and counseled people with Asperger's and (more often) their families. Asperger's is still not well understood and it exists on a spectrum, meaning one person may be very different from another and yet both have the same condition. Also, people with Asperger's sometimes have other complications -- Deke has a moderate Social Anxiety Disorder that interacts with his Asperger's.\n\nSome have asked how he is able to perceive emotions in others. In Deke's case, I picture him doing what an acquaintance of mine did: investing months and even years recording and charting facial expressions, tones of voice, hand gestures, etc. in order to have a scientific study of emotional expression. Given Deke's field of study, this seems plausible.\n\nPeople with Asperger's are not incapable of giving and receiving love, but the way they do so will often be different. It usually involves studying and learning new habits, learning consciously many of the things that other people do instinctively (ask about someone's day, hug a person who is sad, consider what the other person would like). It can be exhausting, as Deke noted, but when the other person is patient, persistent, and forgiving, it is surprising what can happen over the years. Asperger's doesn't get \"fixed,\" nor does it need to. Love and marriage do not rest on the shaky foundation of our feelings for one another but rather on the bedrock of commitment, out of which flows mutual self-sacrifice, service, and yes, loving feelings. This, I promise, will be Deke and Miranda's experience, as I hope you'll see when they pop up again in later stories."
    ],
    "authorname": "nageren",
    "tags": [
        "asperger's",
        "conversation",
        "drama"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/love-in-the-age-of-chemicals-ch-07"
}