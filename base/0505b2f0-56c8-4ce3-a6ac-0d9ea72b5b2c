{
    "title": "Assassins MC Pt. 14",
    "pages": [
        "This is a work of fiction. Unless otherwise showed, all the names, characters, businesses, places, events, and incidents in this story are the product of the author's imagination or used fictitiously. Any resemblance to actual persons, living or dead, or actual events is purely coincidental.\n\nIsabella\n\nPenny rested for the rest of the weekend. Julie tended to her and ensured Penny had everything she needed. I monitored how she was doing, along with Beth and Nicole. Susan came by at least 5 more times to check on her. I lost count from being so tired, as I hadn't slept well since Thursday night. Penny slowly grew stronger until she could walk around herself. By Monday she was looking much better, but still slow. It would take another week before she returned to school.\n\nPenny had to drop out of sports. Her injuries, while not stopping her from attending school, still didn't allow her to put a strain on herself. What was worse was her emotional trauma. She was afraid to be anywhere by herself. Penny was always a brave, self-assured woman, and to see her like this was difficult. She would eventually return to normal, but that would take time and support from all of us, but mostly from Julie, who hardly left her side.\n\nI talked to Beth and Nicole together to tell them I would take more of an interest in their lives, including work. I wanted to attend work with them to get a basic understanding of what they did. Beth was understanding of it, but Nicole was unsure what my motives were. Both women liked the fact I was taking an interest and welcomed the attention.\n\nI also talked with Julie and Penny, explaining to them my plan to get more involved. I brought up to Julie the idea of teaching everyone some basic self-defense. She liked that idea, and Penny was all for it. Julie even suggested getting Susan involved, since she had more experience. I told her that was a great idea, and I would investigate it. When Susan came by one night, I asked her about the classes. She told me she could spare one night a week, and since we had a gym in our basement, she could do it in our house.\n\nFor the next two weeks, I made it a priority to visit Beth and Nicole at work. Penny was still in school, nothing much I could do there, and Julie had her school and training. I attended training with her twice to observe. Julie was becoming very proficient, and I didn't think was long before she would graduate to other disciplines. She was becoming extremely dangerous, and I was sorry for anyone that crossed her the wrong way.\n\nI visited Beth a few times two weeks at Santana. I wanted to wear my club vest to work with her, but she told me that was a bad idea. The president and CEO didn't know who was calling the shots, and if I walked in with my vest, it would put a huge target right on her. She explained anonymity protected her in case the president turned on the club if he was arrested. I told her we pay him to get arrested. A sizeable amount of money, in fact, but she told me she never trusted the man. I went along with her recommendation, and I became an intern working with her for a few days.\n\nShe worked in a large office area comprising around thirty employees on the second floor. I was less than impressed when she took me to her cubicle where she worked; she didn't even have the big office in their division. She explained again about the importance of anonymity, and I realized how little I knew about how everything operated. The only people who understood who Beth was were all associated, and they ran the distinct divisions within Santana.\n\nAt least she had a nice cubicle. She had the usual chair and computer and had pictures of her, my father, and me. She had a bunch of pictures of us during the two years I lived with them before he died. She missed him and that time a lot, judging by the number of pictures. She had little figurines of animals around her desk, with some fake plants hung from the top of the dividers. It was cozy and almost exactly what I expected. She even had a diffuser spraying tea tree oil; it smelled nice.\n\nShe would send a daily e-mail to the president telling him of any business decisions that he would then announce. They routed these emails to look like it came from the Assassins directly. Once the president sent out the directions to the distinct divisions, the women who were division leaders would answer to Beth, also routed to look like emails went to the Assassins. It all seemed way too complicated, but I would come to see the wisdom of anonymity in the future.\n\nWhile I was there, I noticed some men hitting on her, no doubt a reaction to the sexier clothes I told her to wear. She was always abrupt with them when I was with her. A few times when she wasn't aware, I noticed Beth act differently. They would touch her ass or her legs, and she would laugh it off. When I asked her about it, she seemed embarrassed but told me that's the price of doing business and staying anonymous. I didn't buy that, but I let it go.\n\nThe big event that stood out to me was when she was called into the supervisor's office, the guy who occupied the big office I thought Beth should have. I could position myself to see into his office, but blend into the rest of the employees in the outer area. I couldn't hear what he was saying, but Beth's demeanor told me all I needed to hear.\n\nAs he was berating her for something, she just put her head down and put her hands behind her back. That was an odd reaction for Beth. He continued to talk to her, obviously upset about something, and she just stood there taking it, looking meek. When she came out, I thought I saw a smile on her face. I asked her about what he wanted, and she told me he was mad about some missing report. She could pull it up and give it to him within ten minutes.\n\nI thought nothing else about it. But later that night when we're having sex Beth was more animated than usual, really getting into it, but it looked like she was a million miles away. She was imagining something that didn't have to do with me, but it was working for her. She had a rocking orgasm from whatever it was. Only much later would I piece together what had made her that excited, humiliation. She played coy about what excited her so much, telling me she was imagining me taking her at work, but I knew she was lying. This was the beginning of her quest chasing humiliation, and when it ended, it almost destroyed her.\n\nI also visited Nicole a few times over those two weeks, and this was my first time at Pillar. The building was rather large, occupying multiple floors. The labs were on the first floor and in the basement. The upper floors housed the administrative, sales, and executive offices. Nicole's office was on the second floor, as she was the head of the research division. However, she spent a considerable amount of time in the ten labs that occupied the building. She told me that was the only way she knew to monitor how each project was going.\n\nShe was way too busy, and that fact stood out immediately. She was being pulled between her supervisory duties and those of a chemist and researcher. I sat down with her at lunch one day and asked her about her hectic pace. She looked like she was about to break down crying, and said, \"Rich, this is becoming too much. I must approve projects, supervise them, and monitor them. I'm pulled in too many directions.\"\n\nI asked her, \"Where is your staff? You must have people working for you?\"\n\n\"I do, but I only have ten people.\" Nicole explained, \"I can't expect them to do everything, they're already overburdened as it is.\"\n\n\"Why don't you get a bigger staff if yours is too small?\" I asked.\n\nThat's when I learned I was not doing my job correctly. Nicole explained she didn't know that she could do that and didn't want to cause any trouble. She didn't know exactly what she could do beyond approving projects, monitoring them, and reporting the results back to the club's representative, who was a club associated woman.\n\nI called Roger and inquired about Nicole's authority. He explained she could do what I approved. If I approved a bigger staff, then we could gain people. It was ultimately up to me. Up to me? I'm a young kid, what did I know. Roger explained it was best to take Nicole's counsel of what she needed, but the ultimate authority rested with me as a club member. That was how everything was set up. Even with Beth, I had the ultimate authority to approve or reject her directives she sent to the president. I didn't think I knew enough to override Beth, but I could help Nicole.\n\nIt turned out that Nicole started this job with little guidance. I thought the club provided the guidance, but it was supposed to be me. Roger knew I was clueless, but didn't let on to see what I would do. This would be my first test. He knew Nicole was spinning, but if it didn't interfere with the profits, he let it go. He wanted me to know what my inattention was costing one of my women, and the message came across loud and clear.\n\nI took Nicole's recommendation for the size of her staff and made it happen. I notified Roger I needed fifteen more people, five of which needed some advanced schooling, and over the next month gained the women for those spots. We sent five to training, and Nicole could finally be only the head of the research division and not hold five other jobs at the same time.\n\nI spoke with the IT department at the company about the location app. They taught me how to set up places. These would be where each woman would normally be during the day and night. I could set it up to give me a notice when they arrived and left each location. I could also set an alarm when they were outside of a set zone, wandering into a part of town or place where they wouldn't have any business being in. I didn't know this existed. They could have warned me Penny was in trouble. I kicked myself for not paying closer attention. I set up places for each woman and explained to them what I expected their routine to be. I also told them to vary their routine slightly each day, driving home a different way, leaving a little earlier or later. This way someone would have a harder time keeping up with them and not knowing their exact locations.\n\nI brought back the morning inspections. I still required the women to wear the clothes I approved of, but this wasn't for that. Each woman would inform me of their plans for that day, and if they were doing anything or going anywhere unusual. I wanted to ensure I was up on everyone's daily schedule so I wouldn't be surprised like I was with Penny. Everyone appreciated that and was happy I was paying close attention to them.\n\nA less popular decision was to enforce the home attire. I had been lax on them, wearing their corsets at home, letting them wear casual clothes. I was seeing an uptick in attitudes from everyone when it came to chores around the house. The jobs were not getting done or would take days to complete. The cleanliness of the house was going downhill fast, with regular cleaning not getting done unless I became upset. A few times I had to administer punishments; either more chores, a spanking, corner time, loss of privileges, or a combination of those.\n\nI didn't totally agree with the club's treating of women as property, but to adhere to the club's rules, and have the house and their jobs run smoothly, the women would need to be more obedient. What I noticed was that being in charge removed responsibility from women to monitor themselves. If didn't require them to do something, they didn't have to do it. I had the responsibility to make the rules, to enforce the rules, and to bring down punishment if they did not follow the rules. When I became lax, everything slid.\n\nI started becoming stricter, punishing more often when a job wasn't done on time, wasn't completed, or wasn't done properly. I thought the women would fight back, but the opposite happened; they became happier. When I asked them about it, I was told they liked the attention, and they didn't feel the pressure or the responsibility of running the house if I was doing it. It left them free to concentrate on their jobs, leaving them with more free time. They wanted me to be in control, so they didn't have to be. They also didn't mind the punishments, especially Julie and Penny. Those two were unique, and I was sure they purposely tried to get in trouble just to get punished.\n\nI know this is all boring stuff, but it leads somewhere. While I was learning the full scope of my responsibilities, all of which were not given to me at once, everyone was working out our relationships. I was straddling the gap between how the club operated and how I felt about the club's treatment of women. I couldn't play both sides forever, and eventually, I would need to step in one direction. I decided to not jeopardize being removed and exposing the women to new guardians. I would need to embrace the club. The women seemed happier when I became stricter, but I was sure if I gave them the choice, they would choose not to be property.\n\nAfter a few weeks, they informed me to be at the clubhouse for a meeting. I was worried I would get my ass handed to me for letting Miguel live and for not noticing Penny was missing for hours. I was dreading this meeting, but I knew it was inevitable. Time to face the music. I just hoped I wasn't in too much trouble.\n\nWhen I arrived and entered, Roger and John greeted me. There were 5 Mayans and a few club members in the room. John told me to follow him and Roger upstairs to his office, which I did. Noticeably absent was John's entertainment women. His secretary wasn't even at her post. This was in the middle of the afternoon and very odd. I was getting vibes from gangster movies, and I half expected a plastic tarp on the floor of John's office.\n\nWhen we entered his office, Thomas Rodriguez, the leader of the Mayans, was sitting in one chair. Sitting next to Thomas was a beautiful Latina, absolutely breath-taking. She looked to be about my age, and she wore a form-fitting white dress. Everyone stood up to greet me, but I couldn't take my eyes off this beauty. Her skin was light brown and almost glowing. She had blue eyes, near teal in color, with long black hair that came down to her lower back. She stood about 5'8, but in her heels, she was almost 6'. She had on dark eyeshadow which made her blue eyes more striking. Her lips were dark red, and she wore gold earrings. When she turned, I could see she had nice, rounded hips, and her ass was something out of a wet dream.\n\nThomas came over and shook my hand, but the woman just stood back.\n\nThomas spoke first. \"Rich, it's good to see you. How is Penny? Roger told me she recovered, but I wanted to make sure she was ok from you.\"\n\nI answered, \"Penny is doing well. She's back at school now. Physically she's good, but still not up to 100%. She had to drop back from sports for the time being until she's fully healed up. Psychologically, she's having a harder time. She's nervous about being on her own, but luckily Julie is stepping in to help her, driving her to and from school. I'm sure she will fully recover, but it may take a while.\"\n\nThomas looked a little sad and shook his head. He continued, \"Tell her I wish her a speedy recovery. Just so you know, I have sent away Miguel. He is back living with some of our relatives in another country and will no longer be bothering you. He's no longer associated with the Mayans.\n\nI answered, \"Thank you for taking care of him, getting him to a place he can no longer cause us any problems.\"\n\nThomas asked, \"That brings me to my next question. Are you married to any of your women? I don't mean to be too forward, but you must have at least one of them you plan on marrying if I may ask.\"\n\nI thought this an odd question, but I answered truthfully, \"I thought I was, but circumstances as of late have me leaning against that.\"\n\n\"Hold on Rich, I thought you were marrying Julie?\" Roger asked.\n\n\"Roger, I haven't kept you in the loop with our relationships, but I think you should know, being her father, that Penny and Julie are a couple now, much more so than Julie and I were.\" I answered.\n\nRoger looked surprised, but it didn't seem to bother him. He answered, \"Well, I'll be damned. I didn't see that coming. I'll have to tell Susan then. What do you plan on doing?\"\n\nI asked Roger if something like this had come up before: Two women-owned by the same guardian falling in love with each other. He didn't think he'd ever heard of it happening, and neither did John. They both looked perplexed of what to do about the matter. It was always the man that was the focal point for the women, not each other.\n\nI spoke up, \"I can tell you this. I don't plan on doing anything to stand in their way. If I understand my job as guardian correctly, it's monitoring them and keeping them focused on their jobs for the club. They can do that, serve me, and be dedicated to each other; I don't see those as mutually exclusive. If they wish to be married, I will support that.\"\n\nJohn and Roger looked at each other and shrugged their shoulders. \"Well, it's a brave new world,\" John said. \"I'm sure this will come up more in the future, so you'll have to keep us informed on how things go. Now down to business, take a seat everyone.\"\n\nWe all sat down. I was still trying to catch glimpses of this new woman and what she was doing here. I just couldn't keep my eyes off her.\n\n\"Rich, we finished up a deal with Thomas a few days ago,\" John informed me. \"We are going to combine resources, so to speak. We will take over the human trade from the Mayans, and they will get our narcotics business. We will provide logistical support for them and pass on any discoveries we get from our research labs. For this, they will pay us a percentage of their sales, and we will do the same for our human trade. There are many more details, but that's the focal point. For this, the Mayans and the club will each have a liaison. Rich, you are our liaison for the Mayans. Thomas requested you personally and said there would be no deal unless we agreed to that.\"\n\nJohn continued. \"You will coordinate everything I just mentioned, and you will fix any problems that may arise. Roger will help you if you have questions at the beginning, but I expect you to pick this up quickly. You've shown good instincts, and this partnership results from those instincts. No offense, Thomas, but I would have killed Miguel. Rich, you saw something that I wouldn't have seen, and now we're able to benefit financially.\"\n\n\"Before I forget to say it, good job.\" John continued, \"We plan on using this as an example and reach out to other clubs and associations to foster better relationships. The less time-fighting turf wars leave more time to make money. You'll also spearhead those negotiations when they come. Don't worry, we'll get you some training in that and teach you some languages. Well, not Spanish. You'll have a private tutor that speaks it fluently and I'll let Thomas explain that.\"\n\nWell, I know what job I'll have now. A liaison. I had little idea what that means exactly, and I hoped it was something that I could pick up fast, as John said. After failing in my guardianship duties, I didn't want to fail at this; I needed to be successful in my confidence.\n\n\"Rich, I am an old-fashioned guy.\" Thomas explained. \"We have old customs that aren't followed in these modern times. I, however, still think the customs have a purpose. For example, when two families wanted to combine businesses, they would have one of their kids marry into the other family. This formed a bond stronger than any business deal, and any kids they would have bridged any differences that arose. After all, everyone was one extensive family by that point, and this is something I want to do, and John has agreed. I would like you to meet my daughter, Isabella. If you approve, she will be your new wife.\"",
        "I must have looked like I was going to pass out. Did I hear him correctly? My new wife? I didn't even know her. She was gorgeous, but what if she was a bitch? What if she didn't like me? What the hell? I looked at John and he was just smiling, Roger the same. I looked at Isabella and she was looking directly at me. We made eye contact, and I momentarily got lost in her blue eyes, the most gorgeous I've ever seen. She gave me a small smile and looked down slightly, blushing.\n\n\"I think we need to get Rich something to drink, maybe some air.\" Thomas interjected. \"I think he's going to faint.\"\n\nI spoke up, awkwardly at first, trying to find the right words. \"Thomas, I don't know what to say. I mean, I don't know what to say.\"\n\nEveryone laughed at my expense, and Bella sat there giggling. Great first impression! Now I had Isabella 'given' to me as a wife, but why did I have the impression that I was also 'given' to Isabella. I was thinking I didn't have a choice. I felt like a sacrificial lamb, given to Thomas to appease him because he liked me. He was putting up his daughter so he would have a connection to the Assassins. Where would her loyalties lie? I was chafing at some of the club's rules and treatment of women. What if she also chafed and held her loyalties to the Mayans? Which side would I take, because the Mayans didn't treat women that way, and I could see myself falling fast for Isabella?\n\n\"Thomas, uh, do you know the role of women in the Assassins?\" I asked, \"Has John explained that to you?\"\n\n\"Yes, Rich.\" Thomas answered. \"That has already been discussed. While they set your organization up unorthodox, I can see why it is. John gave me a brief insight on how extensive the Assassin's business ventures run. I did not know your club has the reach and scope it does. That you use women to run your businesses is genius. I would have never thought about that, but I may need to put something like that in place in the Mayans.\"\n\nI moved my chair closer to Isabella spoke to her. \"Isabella, do you know the role of women in the Assassins?\"\n\nI would give her the unvarnished truth and see how she answered. This was a woman that looked to be independent, and I was sure she would not like being treated like property.\n\n\"Women in the Assassins are property,\" I continued. \"If something happens to me, you will be given to another club member and your work continues. You may marry me, but you will give yourself to the club. You can never leave, and you will give up your right to decide for yourself. I will be your guardian, and I will make all the decisions for you. You can't decide a year from now you don't like me, then go back to your father; there is no going back. I can't stress that enough. There is no divorce. Do you understand your position if you go through with this?\"\n\nIt sounds like I was talking her out of it because that is what I was doing. I had four women, which I was just barely able to hold on to and manage. A fifth woman would be too much, but they were not leaving me with a choice. If she backed out, I could still be a liaison, and life would go on.\n\nIsabella sat for a moment and examined her thoughts. She answered, \"Rich, first, you can call me Bella, and yes, they have explained all of this to me. We are entering this to bring the two organizations together. I have a strong sense of duty; I was raised that way. You don't have to worry about me being loyal. I will be devoted to you, and I understand if something happens to you, I'll still be owned by the club. That is why I will take care of you and not let anything happen.\"\n\nWell, that didn't work. Let me try something else. I continued, \"You will move into a house with 4 other women who I'm also a guardian for. Even if you're my wife, you will follow the same rules, be treated the same, and disciplined the same. Not to sound too callous, but these women also serve me, including sexually. That will not change. I will care for you, take care of you, and protect you, but you will not be the only woman in my life. Can you live with that?\"\n\nI was running out of ways to talk her out of it. My head spun, and I was getting a headache. Isabella continued, \"While not what I was expecting from my marriage, like my father said, you and your club do things differently, and I will accept that. If you care for me and love me, I will be ok. I just don't want to be neglected and left alone by myself. If you can promise me that will never happen, then I'm in.\"\n\nWell damn, I guess this is happening. Like the women, I didn't have a choice in my life either, if I was being honest. The club members also can't leave on their own. The old leader gave up his place as head of the Assassins, but stayed in the club doing minor jobs. That was as close to retirement as any of us could expect. The only way to leave is death, and I wasn't choosing that. I didn't have a choice, so I was stuck. I gave up trying to convince Isabella it was a bad idea and went into club mode.\n\n\"I promise I will not leave you alone or neglect you.\" I promised Isabella, \"Keep in mind, I'll have five women now that demand my attention. You will get no more or no less than anyone else. I must be fair to all for our family to work. You will also be a member of our family, and while I'm gaining a wife, you'll be gaining a husband and four sisters.\"\n\n\"I like the idea of sisters.\" Isabella answered, \"I grew up with a brother. The thought of having other women around sounds great.\"\n\n\"Well, it's settled then.\" John announced, \"And Rich, Isabella already has a job. She will work as a liaison with you. You two will go through training together. You remember Brenda, my assistant, and I mentioned right hand? Isabella will act in the same role. She will be your assistant and right hand. Now, we have one more matter to attend to. Roger, if you will.\"\n\nRoger turned and walked out the door. We all sat there until he walked back in with a pastor from one of the local churches. I wasn't expecting this to happen so suddenly. Roger even had the marriage license and paperwork ready. These guys had this planned and kept me in the dark. Isabella was even wearing a white dress. Although it wasn't a wedding dress, she was prepared. This must be what a woman feels like when the Assassins buy her; no choice but to go along.\n\nEveryone stood up, and we performed the ceremony. After the 'I do's' I kissed my bride. I was married before I kissed my wife for the first time. My head was spinning. I was wondering if I was making a mistake and if I could have said something more to change her mind. Was I even ready for this? What would Julie say; I was supposed to marry her. I could tell she loved Penny, but we never discussed it. What about Nicole? Would it upset her if I didn't marry her daughter? And Beth, she wasn't at the Ceremony. Did she want to be here?\n\nThese thoughts were circling my head like vultures, ready to pick my bones clean. Then I kissed Isabella, and the world stopped. I mean, it stopped. I enjoyed kissing Julie, always had, but it was never like this. When our lips met, it left me with only the feeling of her lips, and I could suddenly smell the lilacs in her perfume. I reached up and touched her face, and it was the softest skin I had ever felt. I lost myself for longer than I should have and pulled back. When I did, Isabella still had her eyes closed and looked like she was going to lose her balance. I put my arm around her to steady her. She opened her eyes and took a breath. She looked up at me with what I can best describe as lust mixed with adoration. I was locked in her eyes when Roger slapped me on the back.\n\n\"Congratulations Rich!\" He exclaimed, \"You're now a married man. How does it feel?\"\n\nI didn't know how to answer. I just stood there with my arm around Isabella and gazing into her eyes. I shook my head to snap myself out of it. Married. Was that even real? It didn't feel real, but none of that mattered. All that mattered right now was Isabella. Her gravity pulled me in and it held me to her. I answered, but I was speaking slowly, barely able to get my thoughts together as I stared into Bella's eyes.\n\n\"I don't know, to be honest.\" I explained, \"I came in here an hour ago single and I'm leaving married. I'll need some time to wrap my head around it. I will say this though, I never thought I would have such a gorgeous wife. I'm sure I'll make all the men jealous with Isabella on my arm.\"\n\nShe seemed to like that. She blushed a little, and we never lost eye contact. I leaned in and gave her another kiss and said, \"Sorry, Isabella, but I just had to get another one. The first was too good!\"\n\nEveryone laughed and applauded, including her father, who said, \"It looks like we have love at first sight! I've never seen my daughter have this reaction before. You better get Isabella home before she jumps you right here!\"\n\n\"Daddy, stop!\" Isabella exclaimed. \"You're embarrassing me!\"\n\nThat elicited more laughter and applause. Isabella was embarrassed and looked like she wanted to get out of there, but we had more celebrating to do. We all went downstairs to celebrate with a cake and some drinks. We all stayed around for another hour enjoying each other's company, and Isabella and I were never more than a few feet from each other for the rest of the time; we just couldn't get enough of each other.\n\nJohn came up to me during the celebration and took me aside. He started, \"Rich, you are a young man. Let me give you some advice. You now have 5 women to look after. Men don't normally have that many until they are much older and used to the lifestyle of the club. That's a lot for anyone to manage, let alone someone of your age. As you know, I have 10 women that answer to me. Four live in my house while the other six are in separate houses with their kids. There is no way I can manage all of them; there just aren't enough hours in the day. That's why I have Brenda as my right hand. She doesn't just help me manage the club, she helps me manage my home life and the other women. They all know Brenda speaks for me and they listen to her.\"\n\n\"You mean Brenda tells them what to do just like you do?\" I asked, \"Doesn't that cause resentment?\"\n\n\"At first it did.\" John answered, \"I had 3 other women when I brought in Brenda. They were submissive, and while Brenda was obedient and did what she was told, she wasn't submissive. I could tell she was more dominant. That didn't mean she fought me on things, quite to the contrary, she always did what I ordered. I noticed the other women yield to her when they were around each other. They could sense Brenda was different, stronger than they were. I used that when I picked up another woman who had a family. The husband had died, a club member, and she was alone with her kids. I put Brenda in charge of the house while I spent time with the new woman to get her straight.\"\n\n\"The other three didn't like it at first since they had been there longer, but it wasn't long until they grew to appreciate it.\" John continued, \"Brenda was fair, never took advantage of the situation, and the women had someone they could go to if they had a problem, and I wasn't available. And honestly, sometimes it's easier for a woman to talk to another woman. The women flourished and were much happier and relaxed. Brenda always seemed happy before but came into her own when she could let her dominant side out. She even became more submissive to me. I suppose when she didn't have to suppress that side of herself, she could relax and serve me when I needed it. The other women who came in later just accepted her in that position and never questioned it.\"\n\n\"What does she do?\" I asked, \"Does she just pass on instructions from you, or does she act more independently? What about punishments and sex? How do those fit in?\"\n\n\"She has the autonomy to do what she needs to.\" John replied, \"If a woman steps out of line, she tells me if it's something major, as in their job or money. If it's small, like not finishing housework, or with the women living with their kids, not paying a bill, she takes care of it; she counsels and punishes them as she sees fit. With the kids around, it can get tough, but she works it out. The kids just look on her as an aunt that helps their moms with problems. She enjoys being called Aunt Brenda and likes to spoil the kids since she has none of her own. She had some medical issues in the past that required a hysterectomy, incredibly sad.\"\n\n\"After having the procedure, she spiraled out of control.\" John continued, \"She started abusing prescription drugs, then moved on to harder stuff, finally finding herself turning tricks to score her next high. That's when we found her; she owed money to a drug dealer, and he sold her to us. We cleaned her up and medically checked her out. That's when we found out she had been an administrative assistant and had an associate degree in business.\"\n\n\"I couldn't pass her up.\" John explained, \"I needed someone just like her and, when offered the position and associated status, she took it. It was a way for her to get a life back, and any life was better than what she had. We've since fallen in love, and to be honest, I couldn't do what I do without her. She's every bit as responsible for this club's functions as I am. She lets me have my fun with the women I have around here, figuring its better I do it here than somewhere she can't make sure I'm safe, and she can monitor me. She not only manages the women; she also keeps me straight.\"\n\n\"I talked with Thomas and Isabella before you arrived, and let me tell you, you may have your answer right there.\" John told me. \"Isabella carries herself proudly and is a powerful woman. Isabella gave the impression that she has a deep sense of loyalty but isn't naturally submissive. She's highly intelligent and articulate. This woman will be a tremendous benefit to both you and the club. I would recommend you use her and her abilities. It's up to you how you do so, but I wouldn't recommend keeping her down. Let her spread her wings and see what she can accomplish. Of course, you must keep her obedient to you and the club, and ensure she remains loyal. Watch closely that there are no allegiances left to the Mayans. She must understand her world is now you and the club.\"\n\nThat gave me something to think about. I would have a hard time monitoring everyone and giving each of them personal time and still be able to do my job. Would Isabella be willing to help me with this, and if she did, how would the other women react? I had to monitor the situation closely. I thanked John for the advice and went back to socializing. He seemed like a nice guy. I just don't think I could use women like he does and wondered how he reconciled it within himself. He rescued Brenda, yet he uses women he will just throw away, eventually selling them.\n\nAt the end of the celebration, we departed. Thomas said they would send over Isabella's things the next day, but she had brought a few suitcases with her in case things went well. We packed that up in the truck and I drove her to her new home and family.\n\nI called ahead and told Beth to break out some wine and food. I had some news, and we were celebrating. I didn't say what it was because, to be honest, I didn't know what I was going to say. I told Beth to have everyone dress in their normal clothes. No sense shocking Isabella on her first night.\n\nWe talked on the way home, and I told her about the other women and what they did. She told me about her childhood and her likes. The conversation got around to her sexual experience. She told me she wasn't a virgin, but not to tell her father. She looked worried that her not being a virgin would bother me, but she explained she didn't want to start our life together with a lie. I told her it was no big deal, and it didn't bother me. She looked relieved and explained it was an old boyfriend from high school. She thought he was the one, but he thought her friends were the ones, so she ended it. She's had a few boyfriends since then, all behind her father's back, but nothing serious.\n\n\"So, why did you agree to marry a man you'd never met?\" I asked her, \"That just sounds crazy to me, and you seem like a very smart woman who can take care of herself.\"\n\n\"I was raised to be loyal to family.\" Bella answered. \"I knew eventually my father would arrange a marriage for me, and that's why I had my fun younger. After my first love loved my friends more, I became disillusioned and figured an arranged marriage was just as good as any other. I didn't know who I would marry but knew it would not be for love, but for business. So, when my dad sat me down last week and told me, I wasn't surprised. He described you to me and told me what you did, or rather didn't do, to Miguel. I appreciate you not killing my brother. I know he can be an asshole, but I still love him.\"\n\n\"So, what do you think so far?\" I asked her with a smile, \"Do I meet your approval?\"\n\n\"I'll say this.\" Isabella answered back. \"You're easy to look at, a little skinny for my taste, but we can work on that. I like guys in shape. Sorry, just being honest. That kiss at the wedding almost knocked me off my feet. I've never felt that, so I have an attraction for you. Now, your turn, how about me?\"\n\nHow do I answer that? She's beautiful, but I don't want to come across like a star stuck schoolboy. She was straightforward and told me what she likes, I should do the same.\n\n\"I can't find one fault with your physical appearance.\" I explained, \"You're beautiful, there's no other way to put it. And when I kissed you everything melted away; all it left me with was you. It had quite the effect on me. I look for more than a pretty face, however. I need a woman that will take care of me, and love me for who I am, not what I can give them. I also like a woman that is loyal. I've found throughout my time with the Assassins that I like to control women; I enjoy being in charge. I need a woman that will be subservient to me, yet strong enough to set me straight when I need it. I need a partner that has my best interests in mind and takes care of me so I can take care of her. Too many times people are only interested in taking care of themselves, leaving their partner no choice but to do the same. I don't want that.\"\n\n\"That's good to hear.\" Bella answered. \"I am a strong-willed woman, but I need to be controlled. It takes a powerful man to keep me in line, but I like it better when I am. I can be a little brat and act out, and afterward, I always feel guilty about it. I would rather not feel that, but to have a man that can keep me straight yet be caring while doing it. I guess it's the same as you want a woman to control yet have her firm enough to stand up to you when needed. It seems what we need from a partner is what we have in each other, as long as you can be that powerful man I need.\"\n\n\"Bella, if I'm not strong enough for you initially, I promise I will not rest until I am or I die trying.\" I promised, \"With a body like yours, I'm not giving up!\"\n\nShe laughed when she heard that, easing the atmosphere a bit from the serious talk. We made more small talk, and she asked me if she heard right and I had told Beth what to wear, and I answered, \"Yes, I did. I tell them what I want them to wear, and I'll do the same for you. That's a conversation we can have later. For now, just relax; we're almost home.\"\n\nWe arrived and walked through the door to find the women waiting for us in the living room and told everyone to sit down. I introduced Isabella to them and explained everything that happened. They all sat stunned, not sure what to say, but kept looking at Bella, me, then at each other. I asked Bella if she wanted to say anything, and she did.\n\n\"I'm here as Rich's wife, but I don't want to get in the way or diminish what he has with any of you.\" Bella addressed everyone, \"We were married to satisfy my father and to help smooth the alliance between our two organizations. I am here in the same status as you are. I am also owned by the Assassins now, and I understand that. I will be loyal to Rich, to each of you, and to the club. I left my family today when I drove away with Rich, and now I am with my new family. I hope you all can welcome me into your home, and I look forward to having four new sisters.\"",
        "\"I know this is sudden, and I didn't know about it until I walked into John's office today.\" I explained, \"Bella and I were married today, but I consider each of you my wife. For me, there doesn't have to be a paper to tell me who I love and want to spend my life with. I have been, and always will be, devoted to all of you. I love you all, and I hope that Bella and I will learn to love each other just as much, as I hope you will learn to love her.\"\n\nI told everyone it was time to celebrate and for everyone to get to know each other. They all stood up, and each hugged Bella and welcomed her to the family. I stepped back and let the ladies talk. They spent the next hours asking Bella questions, and Bella had plenty of questions herself. After things looked to be calming down and we all had some alcohol in us, I figured it was a good time to address sleeping arrangements. I was more nervous about that than I was getting married. I had everyone take a seat in the living room and began, \"I have to address our sleeping arrangement and an elephant that has been in the room for a while now. What I'm talking about are Penny and Julie.\"\n\nPenny and Julie suddenly lost their smile, started looking nervous, and glancing at each other. I continued, \"First off, let me say that everything is good. I just want to discuss your relationship. It has been obvious to me you two love each other. I know we all love each other, but what you two have is not the same. I can tell you are deeply in love, never wanting to be apart, and happiest when in each other's company. I see you in bed with me, often taking more interest in each other than in me. Let me reassure you I'm not upset. Quite to the contrary, I want you to be happy, and if it's with each other, then I want to support that.\"\n\n\"That brings up you two sleeping with me.\" I continued, \"We have another room available, and we can extend it the same way we did for Beth and Nicole, and you two can move in there. You'll still get attention from me, but you'll be together in your room. And, if one day, you two want to get married, I'm all for it.\"\n\nJulie and Penny looked at each other, started smiling, then both shot off the couch and almost knocked me backward off my chair. They flew in and both hugged me. They were downright giddy. Penny spoke up. \"Rich, I was afraid to say something. I thought you noticed, but you said nothing. I fell in love with Penny almost right away, and she feels the same as I do.\"\n\nJulie nodded in agreement and she said, \"I feared what you would say and do. Rich, we agreed we would get married, but the more time I spent with Penny, the more I saw myself married to her. I didn't want to hurt your feelings, but that was what my heart was telling me. Rich, I still love you and will never leave you, but Penny is who I want to marry.\"\n\nPenny spoke up, almost crying. \"Yes, I feel exactly as Julie was describing. I thank you for bringing me into your family, and I love you more than when I first moved here, but Julie holds my heart. I just can't stand to be away from her. I just feel empty when she's away. I hope you understand and don't love us less because of this.\"\n\nI answered, \"Of course not, how could I. I love both of you. I don't see any reason that you can't be obedient and serve me while you're married to each other. I asked around, and no one thinks this has happened within the club's organization; two women getting married to each other while serving their guardian together. John said you two will be a test, so to speak, to see how it turns out. I know it will succeed, and we can continue to be one family.\"\n\nAt that, Beth and Nicole came over and hugged Penny and Julie. Isabella was sitting on the chair next to me, just watching and listening. She got up and congratulated them. I knew it would be awkward for Bella at first until she found her place. We all helped Julie and Penny move their clothes and things to the guest room, and Beth told me she would arrange for the contractors to come out tomorrow to begin the renovation. The night was getting late, and after moving Bella into the master bedroom, everyone went to bed. That just left me and Bella to consummate our marriage.\n\nI started by turning down the bedroom lights to set a romantic mood. I brought out some candles, thinking it would help her relax, pulled her over to the bed and we started kissing. I felt the same as I did when we first kissed; the world seemed to stop. Everything just melted away, and it left me with the feel of her lips and her lilac perfume. I was growing to love that scent.\n\nI stood her up and slowly unzipped the back of her dress. I peeled it off her shoulders and pulled it down until her breasts were exposed, then stopped. She had a strapless bra on. I reached behind and unclasped it, pulling it forward and off her. When her breasts came into view, I paused and took in the sight. She was a solid C cup, round and firm. They looked like they were sitting up at attention. I had seen breasts like this online when women had implants. I asked her and she said they were natural. Breasts like that ran in her family. I thanked God for those family genes before I put my lips to her erect nipples and started tonging them. They were soft, and I could have stayed there for the rest of the night.\n\nShe enjoyed that, grabbing my head and pulling it in tight to her. She started moaning, and I realized I discovered one of her triggers; she had extremely sensitive nipples. I pulled back and continued to pull her dress down her body, past her thighs, and then dropped them at her feet. She stepped out of them and stood in front of me. She was wearing a pair of thong panties, high cut on the sides, and a thin piece of material that just barely covered her vagina and disappeared between her legs. From behind, it looked like she wasn't wearing anything at all, so there was no worrying about panty lines for her. She went to take off her heels, but I told her to keep them on. She was wearing closed-toe shoes that laced about halfway up her calf, with a thin heel.\n\nEverything she wore was perfect, as if she knew exactly what I liked before I told her. When helping her unpack, I noticed all her clothes looked like they came out of a fashion show. There was not one piece that I would consider plain. They were all sexy, but nothing that looked slutty. This girl was into fashion and I saw where more of my money would be going.\n\nShe smiled and lifted her leg and placed her foot right next to my leg on the bed, making sure her shoe was visible to me. This had the effect of making her vagina open to me. In her heels she was tall enough, so her vagina was right in front of my face as I sat on the bed. Looking at her and seeing her foot in high heels was making me hard. I still hadn't undressed so my cock was still in my pants; if I kept this up, it would jump out on its own.\n\nI leaned forward and placed my mouth over her vagina and tongued her clit. Her vagina had a pleasant smell, and her taste was strong but not overbearing. She was getting excited, and by the time my tongue met her, she was wet. She approved of my tongue, moaning, grabbing my head, and grinding as hard as she could against me. I kept this going until she stiffened, jerked her body forward, and orgasmed all over me. None of the other women ever got extremely wet when they orgasmed. Not so with Bella. I felt like a geyser opened and it sprayed me down. She jerked a few times and collapsed forward onto me.\n\nAfter she caught her breath she said, \"Rich, I'm sorry if that caught you off-guard. I didn't plan on an orgasm from that, but you have one talented tongue. I hope you didn't mind my squirting. I've always done that, it's not something I can control.\"\n\nI had seen that online quite a few times, and to be honest, the way most of the women did it in videos, it just looked like they were peeing. Bella didn't have near that amount, still enough to wet my face down, and it certainly didn't smell bad. I told her I didn't have a problem with it and looked forward to making her squirt more often. She looked relieved, then sat up and straddled me.\n\nShe almost ripped my shirt, pulling it over my head. She leaned forward and started kissing me, then dropping lower, licking her way down my chest. Her hair smelled wonderful, a nice herbal scent. I took in a deep breath, getting a wonderful smell, and it went beyond her shampoo to her. I temporarily lost myself in that smell, and throughout the years that was the smell that would always relax me. When she reached for my pants, she unbuckled my belt and pulled them off me. I was leaning back on the bed with my feet still on the floor. She reached up and pulled down my boxers and took them off.\n\nShe reached up and placed her hand around my cock, lifting it and moving it around and looking at every side. She slid up as close as she could get and leaned forward. She started licking it, starting at my balls and rising to the tip. She continued the tongue dance, up and down on all sides until it was wet, then dropped her mouth down over the top and took it into her mouth. She started slowly, going up and down just the top half, then little by little taking more in. When I felt the tip of my cock pass into her throat, I thought I would climax right there. She stopped for a moment, pulled back, then pushed it down a little further. She was trying to deep throat me. She did not gag once. Her rhythm was steady, rising, then back down a little further, then back up, then back down. She repeated this until she had it in.\n\nI couldn't believe it. None of the other women ever reached anywhere near this. I was in heaven, but there was more. When she reached the bottom, she started a faster motion that just involved rubbing my dick up and down in her throat. It was like her throat was massaging my cock. I couldn't help myself, and I came directly down her throat. When I finished, she pulled back and gave me a big kiss. That was easily the best sensation my cock has ever felt. I had to ask her. \"Bella, how the hell did you breathe during that?\"\n\n\"It wasn't easy, and with your width, I didn't know if I could.\" She answered, \"I just breathe through my nose and make sure I relax when I do. You are one wide man. I can't wait to ride that horse!\"\n\nAsk ye shall receive. I recovered and got hard again. We moved further onto the bed and Bella started stroking me to get me fully erect. During this time, I fingered her as she lay next to me, toying with her clit so she would get wet. When both of us were ready, she climbed on top. I had seen four women have a hard time mounting me, and I was sure Bella would be the same. I was wrong.\n\nIt was as if they made her vagina for me. She placed my cock into her and slid down. Not exactly fast, but she went straight down without pausing. When she got to the bottom, she spoke up. \"Rich, I have to be honest. The women in my family have always had wider vaginas. It helps in childbirth I suppose, at least we start wider, but it makes it harder to satisfy with smaller dicks. We also have deeper vaginas; our cervix sits a little further back. I have never felt full of the others I've had intercourse with until right now. My God Rich, you feel wonderful. I can feel your cock in my cervix, and it's stretching me. When I tell my mother, she will be jealous. She's told me she loves my father, but he just isn't big enough for her.\"\n\n\"Bella, I have always been sensitive about my penis width.\" I explained, \"I'm slightly above normal at eight inches, but my width is well above average. I was always afraid of being made fun of and never dated until Julie. All the other women had a hard time getting it in, eventually getting used to it thankfully. I was worried what your reaction would be.\"\n\n\"Rich, you should never feel sensitive about that.\" Bella reassured me, \"You're my first eight-inch cock. The biggest before you were about six inches. This feels great. Now, enough talking, let's put this monster to work.\"\n\nAnd work it she did. She started bouncing up and down with an energy I haven't seen before. She had a look that bordered on ecstasy and determination. I was pushing my hips forward to meet hers, but she was outpacing me and doing most of the work. This woman was going to get her to fill, and I was just along for the ride. She would occasionally bend forward and start kissing me, all the while pumping her hips up and down, back and forth, never losing rhythm. I was getting close when she jumped off, got on all fours, and told me to fuck her from behind.\n\nI did just that. I got behind her, pushed into her, and started fucking her as deeply as I could. She pushed back, telling me faster and harder. I obliged. She told me to grab and pull her hair, and don't be afraid to pull hard. She'd tell me if it was too much. I grabbed a big handful of her hair and used it as a grip to pull her back when I was thrusting forward. She then told me to slap her ass and anything else I wanted just to do it hard. This woman was an animal, and I was all for it!\n\nI did as she asked, fucking her, pulling her hair, and smacking her ass hard enough to leave handprints on her gorgeous light brown skin. I bent forward and slapped her face; she loved it. I smacked her thighs, and she just told me harder. I started smacking her sides, and she moaned louder. This woman, my wife, liked it seriously rough. The word wife still sounded weird, I thought when I heard Bella cry out, \"I'm Cumming baby, keep fucking me through it!\"\n\nShe was insatiable. She knew what she wanted and didn't hesitate to tell me. I kept fucking her as I felt her body tense and convulse from the orgasm. This pushed me over the top and I came, filling her full. She felt when I did and pushed back harder, pushing me right into her cervix, tensing up and pulling everything I had from my cock. We both continued fucking until I had nothing left to give, then we collapsed on the bed. I noticed she still had on her heels. This was my kind of woman! She laid her head down on my chest, looking up at me.\n\n\"Rich, that was amazing.\" Bella said, \"However, I sensed your hesitation when I wanted you to get rough, and to be honest, you could have been rougher. That's why I like muscular guys; they can manhandle me better. You were slapping, but don't be afraid to do more. I had a boyfriend that would get seriously aggressive with me. He would get turned on and just use me however he wanted. He would slap, hit, pull hair, and pound every hole I had. I didn't know whether I was coming or going.\"\n\n\"I would fight back, pushing him off, but he would hold me down and take me.\" She explained. \"It was a game between us, both of us being aggressive and getting off. He understood it was a game, but I was certain he would have done it, anyway. That turned me on more than it should in that case. I guess I'm twisted. It was a little worrying because I wasn't sure if it hurt me he would stop. I want you to do that to me, but this time I know you won't take it too far.\"\n\n\"I want you to get stronger so you can kick my ass during sex, hold me down, and show me you're the boss.\" Bella continued, \"I would get excited when I was with him because I didn't know when he would throw the switch and start dominating me. I purposely instigated him to piss him off and make him aggressive. I grew to love it, so I hope you don't mind me critiquing you or telling you what I want during sex. I know guys like to feel they have the lead. I didn't overstep, did I?\"\n\n\"No Bella, not at all.\" I answered, \"I enjoyed getting rough with you as much as you enjoyed it. I do that a little with the other women, but not to the extent as you had me do it, and to think you want it rougher. You don't have to piss me off to get me to be rough, just tell me.\"\n\n\"I could do that, but half the fun was not knowing when he would be pushed over the edge.\" Bella explained, \"Besides sex, he didn't pay too much attention to me. I think if you pay attention and dominate me constantly, I won't need to play those games. As I've said, I can be headstrong, a little brat. My ego will get the better of me and I'll lash out, or I'll feel entitled. Use those times to put me in my place, please. It helps to keep me straight, and I get sexually excited when someone does that. Just understand, when you do, I'll be burning up inside from lust, even if I look humiliated.\"\n\n\"And just taking me because you want to.\" Bella instructed me. \"I've always gotten hot imagining being thrown down and ravished. Just the idea of a man ripping my clothes off, flipping me over, and fucking me rough gets my blood going. I don't mind being slapped, hit, hair pulled, or spanked. I enjoy some pain with sex. The pain just heightens the feeling. I'll tell you if you're too rough or go too far.\"\n\nI promised I would do just that, but that was for another time. It was late, and we had a full day tomorrow moving in the rest of her stuff. We took a shower together and went to bed. I woke up this morning with Julie and Penny, a single man, and I was falling asleep with Bella, my new wife. Life comes at you fast."
    ],
    "authorname": "AssassinWolf",
    "tags": [
        "blowjob",
        "deepthroat",
        "gang",
        "harrassment",
        "humiliation",
        "office",
        "rough",
        "sex",
        "wedding"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/assassins-mc-pt-14"
}