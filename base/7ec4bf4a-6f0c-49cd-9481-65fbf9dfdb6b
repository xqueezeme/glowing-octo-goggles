{
    "title": "Beneath the Ice Ch. 02",
    "pages": [
        "\"The nerve of that man!\" Charlotte was still fuming over her last exchange with Alexei three days later as she sorted through new stock with Sarah at the store. She turned her face into her sleeve and coughed.\n\n\"I can't believe he said that either, honey.\" Sarah hummed in commiseration and sliced into a new pallet of product with her box cutter. \"He actually asked about her dad?\"\n\n\"Yes!\" Charlotte turned her head to cough again, the force of her response aggravating her already sore throat. \"I wanted to hit him, Sarah.\"\n\n\"I'm sure you did.\" Sarah peeled away the shrink wrap. \"Maybe he didn't mean it the way it sounded. You did say he's Russian, so English isn't his first language.\"\n\n\"That's no excuse.\" Charlotte grumbled and cleared her throat a few more times. \"Other than a slight accent, his English is fine. He knew exactly what he was saying.\"\n\nThey fell silent as they worked together, years of knowing one another giving them an easy rhythm.\n\nCharlotte sniffled and coughed her way through another hour, until Sarah had finally had enough.\n\n\"Girl, you're sick. Go home.\"\n\n\"I'm fine.\" Charlotte couldn't even get the two words out before being hit with a sneezing fit that made her eyes water. \"It's just allergies.\"\n\n\"Allergies? The first week of November?\" Sarah planted hands on her hips and faced Charlotte, her dark eyes stern.\n\n\"Fine. Maybe it's the dust in here.\" Charlotte wiped her nose with a tissue, trying and failing to hide her wince. Her nose was already so raw from how much she'd been wiping and blowing that morning.\n\n\"Charlotte Evangeline Woods.\"\n\nCharlotte squinted at her friend. \"That's not my middle name.\"\n\n\"Whatever. You're going home.\"\n\n\"I have to get Zoe in three hours.\"\n\n\"Fine. Go home and sleep until then.\"\n\n\"Franny isn't here yet for her shift.\"\n\n\"Ursula is here. And she'll agree with me when I go tell her you're soiling all the new kitchen towels.\"\n\nCharlotte gasped and started coughing all over again. Rolling her eyes, Sarah nudged her with an elbow.\n\n\"Get out. Now. Before I call the CDC and have you declared a danger zone.\"\n\n\"Pretty sure that's not how it works.\" More sniffling. She stifled a cough. For a second.\n\n\"Charlotte.\"\n\n\"Fine.\" Another cough. \"I'm going.\"\n\nIn truth, she knew she'd been fighting something off for days. Maybe a quiet afternoon before she had to get Zoe would help.\n\nShe grabbed her things and headed out, coughing as she waved with her free hand to Sarah and Ursula.\n\nAt home, she tried to be quiet, ever conscious of Grumpy Russian downstairs. The last thing she wanted today was a confrontation with him. She changed out of her work outfit and into sweats and a long-sleeved Henley T-shirt before collapsing on the couch. Before she drifted off, she remembered to set the timer on her phone, so she wouldn't sleep through Zoe's pick-up time.\n\nThen, she let herself relax. In between some more sneezing and coughing.\n\n\u2500\u2500\u2500\u2500\u2500\n\nAlexei thought it was very quiet when he got home from his team meeting late in the afternoon. He stood in the center of his apartment and frowned at the ceiling, wondering if Charlotte and Zoe were out for the evening, which would be a first. Shrugging, he wandered around, changing out of his khakis and polo shirt and into his usual sweats and T-shirt. He thought he might hit the gym down the block for a light workout.\n\nAs he was checking his headphones to see if they were charged, he heard a more familiar thump from overhead and found himself smiling. There was something he'd have never thought a few weeks ago, that he'd be pleased to hear signs of life from upstairs. As he walked over to grab his runners from the closet, there was another bang from overhead. Then another, a series, as if Zoe were stomping with long, heavy steps across their apartment. Then back in the other direction.\n\nAlexei paused, one shoe on, the other in his hand, and frowned as he listened. It kept up, the stomping-slash-pacing, back and forth. Her footsteps stuttered, then started again.\n\nThat wasn't normal. Or at least, not as normal as one would find a nearly four-year old's noise, and he was quite familiar now with Zoe's usual noise.\n\nSliding his other shoe on, Alexei grabbed his keys before heading upstairs. He didn't bang on the door as he normally would have. He knocked twice, quick, light raps. The stomping from inside stopped and a few seconds later, the lock twisted.\n\nWhen the door opened, he expected to see Charlotte's face, but instead had to look down into Zoe's wide eyes, so blue like her mother's.\n\n\"Hey.\"\n\nAt his single word, Zoe's lower lip trembled right before she opened the door wider and threw herself at his legs.\n\nAlexei hissed out, not in pain, but in a sudden rush of true worry. He bent, sliding his hands over Zoe's small shoulders, cursing a blue streak in Russian under his breath. Grasping her under her arms, he lifted her up and held her against his chest.\n\n\"Zoe, what's wrong?\"\n\nZoe shook her head, her little arms going around his neck in a tight grip. \"I knew you'd come if I stomped. Did you hear me? I was going stomp-stomp-stomp all over.\"\n\nAlexei breathed out, patting her back as he strode into her apartment, closing the door behind them. He looked around for Charlotte and didn't see her.\n\n\"Zoe, why did you want me to come up here? Where's your mom?\"\n\nZoe finally lifted her face, tears on her flushed cheeks. \"She's in the bathroom. She was throwing up. A lot.\"\n\nAlexei's stomach lurched. He didn't do well with illness, but hard on the heels of that revulsion was concern.\n\nHe rubbed a hand over Zoe's face, rubbing one cheek dry with his thumb. \"Can you show me?\"\n\nShe nodded and pointed, but seemed in no rush to climb out of his arms. He indulged her for now and followed her directions across the apartment, into the bedroom. It was indeed a near exact copy of his own unit downstairs. Turning right in the bedroom, barely acknowledging the big messy bed, he looked into the master bathroom.\n\nThere was Charlotte, leaning against the bathtub, one hand over her eyes, her hair a mess around her face, half in a ponytail, and what he could see of her cheeks at once pasty and flushed.\n\nSucking in a breath, he bent and gently set Zoe on her feet. He cupped her little face in one hand. \"Can you go watch some television for a few minutes, zaya?\"\n\nShe nodded, sniffling once, and backed out of the bathroom.\n\nAlexei turned to Charlotte and moved closer. She looked up as he stepped into the little space, her eyes going wide and her whole body jerking back against the side of the tub.\n\n\"What--\"\n\n\"Zoe called me.\" His lips pulled to one side. \"In a way. Come on. Let's get you into bed.\"\n\nShe jerked out of the reach of his hands, then groaned, holding her stomach. \"No, I--\" She clamped a hand over her mouth, then lurched over the toilet, her body convulsing with heaves.\n\nAlexei closed his eyes for a second, sucking in a hard breath. He reached down a moment later, holding Charlotte's hair back from her face. She lifted a hand from her braced position on the toilet bowl and flapped it towards him once, as if to get him to leave her alone, but heaved again, requiring the support against the toilet once more.\n\nA few minutes later, when she was done, he reached down and pressed the handle to flush. It didn't seem like Charlotte was heaving up too much, but she was shaking all over like she'd run a marathon. Straightening, Alexei turned on the taps over the sink and filled the cup there with water. He handed that down to her, looking around for a face cloth or something. One was on the shelf over the sink and he grabbed it, wetting it with cold water before handing that to Charlotte as well.\n\nShe eyed him as she accepted it, her hand shaking and her eyes narrowed on his face. \"What are you doing in here?\" Her voice was weak and raspy, making it apparent that she'd been throwing up for some time.\n\n\"I told you. Zoe called for me.\"\n\nThere was a noise behind him and they both turned to see Zoe peering around the corner, her eyes wide and scared.\n\n\"Oh, Zoe.\" Charlotte sighed and placed a hand on the edge of the tub, trying to climb to her feet. She shook too much to get a good handhold though, so Alexei stepped forward and put his arm around her, helping her to her feet.\n\nShe tried to jerk out of his hold but in her state, she had no hope of shaking him off. Even if she wasn't suffering from what was apparently a bad flu, he knew he could hold her still if he wanted. Whether he really wanted to or not was something he would revisit later.\n\n\"Come on. Let me help.\"\n\n\"I don't need help.\" But her voice was as weak as the rest of her and she leaned on him for the ten steps to her bed.\n\nThere, she sank down, struggling to pull up one of the covers as shivers wracked her.\n\n\"Mommy?\" Zoe stood at the foot of the bed, her face full of worry.\n\n\"I'm okay, sweetie.\" Charlotte managed to lift her head. \"Climb up and we'll watch something together.\" She did have a smaller, older television on a small cabinet across the room.\n\nShe patted the bed beside her but instead of clambering up beside her mother, Zoe looked up at Alexei, who hovered at Charlotte's side.\n\nAlexei put his hands on his hips. \"You stay in bed. Zoe and I will watch a movie out there.\"\n\n\"You're--\" Charlotte tried to sit up but her elbow wouldn't lock under her. \"You're not staying.\"\n\nHe shrugged. \"I'll watch Zoe. You sleep.\"\n\n\"Alexei--\"\n\nBut Zoe was already reaching up for him and he picked her up. With one arm holding the little girl, Alexei tugged the bed covers up around Charlotte and patted the edge of it, near her hand.\n\n\"Sleep.\"\n\nCharlotte's mouth opened like she was going to protest some more, but Alexei backed away, shutting the light off. In the light coming in from the front room, he could see her face, her eyes blinking slow and heavy. Then closing.\n\nShe was out, quick as a flash.\n\nBreathing a sigh of relief, Alexei shut her door and carried Zoe over to the couch.\n\n\"Is my mommy going to die?\"\n\nAlexei's arms clenched around her for a second and he shook his head. \"No, zaya. She just has the flu. Do you know what that is?\"\n\nZoe made a face as she dropped off Alexei and onto the couch. \"I get sick sometimes. It's no fun.\"\n\n\"No. It's not.\" Alexei sank down on the cushion beside her. \"But you get better, right?\"\n\n\"Yeah. Mommy watches me.\"\n\nAlexei nodded. \"And we'll watch her, right?\"\n\nHer little chin trembled but she gave him a nod and snuggled into his side as if she'd been doing it forever. And just like that, he was a goner.\n\nAlexei ignored the tightness in his chest and reached for the remote control. \"Now, what's your favorite movie?\"\n\n\u2500\u2500\u2500\u2500\u2500\n\nAlexei checked on Charlotte several times throughout the evening. She told him to go repeatedly but he must have convinced her at some point that he was trustworthy, because she didn't bring it up during his the last couple visits. He made a simple dinner of soup and grilled cheese for Zoe after rummaging through their fridge. They didn't have a lot but maybe Charlotte was between trips to the grocery store.\n\nWhen Zoe started yawning and sagging against his side, halfway through their second movie, Alexei got her up and into her bed, in the room across from Charlotte's. Zoe was out like a light, the second her head hit the pillow. Alexei brushed a wisp of red hair from her forehead, frowning when he felt the warmth of her skin.\n\nWas she feverish too? It would make sense if she got sick at the same time as her mother.\n\nSighing, Alexei backed out of the room and closed the door. He went back to Charlotte's room to find her struggling to get up.\n\n\"Hey. Here, let me help.\"\n\n\"I'm going to--\" And before she could get the words out, she was covering her mouth and stumbling for her bathroom. She hit the toilet just in time, dropping down and heaving over the porcelain bowl.\n\nSwallowing his own visceral reaction, Alexei brushed her hair off her face and held it as he had earlier, rubbing her back between her shoulders until she stopped retching. As she sank back against the tub, one arm stretched along the edge, and her head resting on her bicep, Alexei turned to pour her cold water. She took it and the washcloth without arguing, her whole body shaking.\n\n\"Come, drink more water.\" He was seriously concerned about her level of hydration at this point. Even more concerning, the way she'd utterly given up arguing with him. After their last proper face-to-face interaction, he never thought they'd talk again.\n\nShe drank more water as he handed her the glass two more times, quiet and shaky. At last, she let out a breath and tried to stand. Her hand slipped on the tub's edge and she stumbled against it with a grunt.\n\nAlexei scowled and picked her up, right off her feet, before she could hurt herself further. She made a surprised sound but sagged in his grasp. He carried her the few steps to bed and laid her down. Returning to the bathroom, he soaked the face cloth in cold water again. He carried it out to the bedroom, where Charlotte was already drifting off, pressing it to her hot forehead. Her eyelids fluttered but she said nothing, her head turning an inch before her breathing deepened and evened out into sleep.\n\nStanding up, Alexei stared down at her for a long moment. Backing away with quiet steps, he tidied up the bathroom and then left the bedroom, leaving the door open a crack so he could listen for her.\n\nThen he made himself comfortable on the couch. He wasn't going anywhere for a while.\n\n\u2500\u2500\u2500\u2500\u2500\n\nCharlotte wasn't sure how much time passed between the afternoon she left work early and when she woke without feeling like throwing up for the first time. She blinked her eyes as she woke and yawned, which led to a dry cough that had every part of her body jolting in pain.\n\n\"Agh.\" She gasped and tried to stifle the cough, which didn't help with the body aches. It subsided and she managed to roll to her side and get up from bed.\n\nIn the bathroom, she splashed some cold water on her face and drank two cups of water before taking a breath. After she brushed her teeth, she popped some extra vitamins, sure she hadn't had enough in the last however long it had been, hence the vomiting and sniffling. Then she washed up and grimaced when she took in the appearance of her hair. Brushing it out as best as she could, she tugged it into a ponytail and drank two more cups of water.\n\nAs she walked back into the bedroom, she checked the time. It was a little after eleven and from the light at her window, it was morning, not eleven at night. As she straightened out the bedsheets, she heard a low murmur of voices from outside the bedroom and wondered if Zoe had a movie on.\n\nShe wasn't too concerned. She had vague memories of Alexei saying he'd watch Zoe, and if it meant an impromptu night on her couch, she was sure he'd have done it. He might indeed be a grumpy jerk about their noise level, but he wasn't a bad guy, really.\n\nShe sighed and walked out, bracing herself for his scowl. Instead, she stopped and stood still, her eyes widening with every second that passed.\n\nAlexei stood at the stove, moving a spatula around in a pan, making scrambled eggs, it looked like. In his other arm, he held Zoe against him. One of his strong arms was under her bottom and she had her head resting on his shoulder, her forehead pressed to his throat on that side. Her little arms were looped loosely around his big shoulders and she nodded once at whatever he was saying to her in a low tone.\n\nAs if sensing her appearance, Alexei lifted his head, his chin brushing Zoe's hair. His eyes met Charlotte's and his lips pulled up on one side in a smile. Or at least, as much of a smile as she'd ever seen him flash.\n\n\"Hey. How are you feeling?\"\n\nZoe twisted a bit to look over as well. \"Hi, Mommy.\"\n\nCharlotte swallowed with difficulty, her heart thudding a hard, quick rhythm in her chest as she took in the scene. \"Hi, sweetie. I'm tired, but okay, I think.\"\n\nAlexei's eyes swept over her and he turned back to the pan. Reaching over, he flicked the element dial off, careful to hold Zoe away from the heat. \"We made eggs. Are you hungry?\"\n\nCharlotte was about to shake her head but her stomach gave a low rumble and she realized she probably hadn't eaten in twenty-four hours. Anything she'd had before work the day before was long gone anyway.\n\n\"I am hungry.\"\n\n\"Sit.\" Alexei pointed with his free hand at the kitchen table. \"We'll get it for you.\"\n\nZoe hadn't reached for her once yet. She hung in Alexei's capable grasp as the big man grabbed plates, forks, and glasses from her cupboards. He poured orange juice for the three of them and dished up the eggs into three portions, giving Charlotte what looked like the most.\n\nAt last, he gave the little girl a firm squeeze before transferring her down to the kitchen chair beside Charlotte. Zoe didn't stay there though. She crawled into her mom's lap and Charlotte started when she realized how warm her daughter was.\n\n\"Zoe, are you not feeling well?\"\n\nZoe shook her head, burying her face in Charlotte's neck, sagging in her grasp.\n\n\"Poor thing. I guess I made you sick, huh?\" Charlotte pressed her lips to Zoe's hot forehead and sighed. She didn't have the strength to deal with a sick Zoe. Not that she had much choice. Such was the life of a single mother.\n\nAcross from her, Alexei sat down and passed over the salt and pepper shakers. \"Here. Eat, please. You must be starving.\"\n\nCharlotte nodded and picked up her fork. She managed a few mouthfuls and even Zoe had a couple, but even lifting the fork to her mouth a few times was wearing her out. She kept looking at Alexei, his big, quiet presence filling the kitchen. Not that he made her nervous. Oh no, it was far worse than that now, after seeing the way he'd been holding her daughter as he cooked them eggs.\n\n\"You look tired.\" Alexei's eyes scanned her face, flickering to her eyes and down. \"Did we wake you?\"\n\n\"No.\" Charlotte put her fork down and cuddled Zoe closer to her as she sat back in her chair. \"I still feel like I could sleep for a week, though.\"\n\nHe nodded and finished his orange juice. Charlotte gave him a good look as well, noting his unshaven face and messy hair. It must have been a rough night for him as well.\n\n\"I'm sorry you had to stay all night.\"\n\nHis eyebrows shot up and he lowered his empty glass to the table. \"All night? It's Sunday.\"\n\nCharlotte blinked as his words sank in. Sunday? But she'd left work early on Friday. No. No way could she have slept through Saturday. Had she? She had been pretty out of it, but a whole day? \"I don't understand.\"\n\nAlexei shifted on his chair and lifted one hand to rub his stubbly chin. Charlotte realized it was thicker than a single night's growth. \"You were pretty sick. You slept a lot.\"\n\n\"And you stayed?\" Charlotte cleared her throat, her voice hoarse. \"Since Friday night? You've been here?\"\n\nHe shook his head. \"Not the whole time. I took Zoe to the grocery store.\"\n\nZoe twisted in Charlotte's grasp and nodded once. \"He let me carry the eggs.\"\n\nAlexei's eyes dropped to Zoe and his whole face softened, the harsh lines evening out and his lips curving in a smile. \"She was very good.\" He lifted his gaze back to Charlotte's. \"And we went downstairs for a bit too while you were sleeping yesterday so I could get my phone and change my clothes.\"\n\nCharlotte's mind spun. \"But, you watched her? For two nights? And all day yesterday?\"\n\nHe hesitated and nodded once. \"We didn't do much. Watched movies, played Candyland.\"\n\nZoe nodded again, her hair tickling under Charlotte's chin. \"He didn't win once.\"\n\nAlexei agreed with a solemn nod. \"She is the world champion.\"\n\nCharlotte tilted her chin down to look into her daughter's face. Zoe was smiling at Alexei, her cheeks flushed. She was very warm and sniffed every few minutes, but that she was awake and still talking was a good sign. Maybe she wouldn't be hit as hard as Charlotte had been.",
        "\"Alexei, I--\" She paused and shook her head, wondering how she could ever repay him. \"Thank you so much for your help.\"\n\nWas she imagining things or did his cheeks turn pink? He cleared his throat and jerked to his feet. \"Are you finished?\"\n\nShe nodded and he took away her half-eaten eggs.\n\n\"You need to eat more.\" He eyed her plate and gave her a stern look. \"I'll make toast.\"\n\n\"I don't have bread.\"\n\n\"Grumpy bought that, too,\" Zoe said.\n\n\"Zoe.\" Charlotte sighed and squeezed her daughter. \"Don't call him that.\"\n\n\"He said I could.\" Zoe shifted so she could look up. \"And he calls me zaby.\"\n\n\"Zaya.\" He chuckled as he popped two slices of bread into the toaster. \"It's zaya.\"\n\n\"And what does that mean?\"\n\nAlexei turned and rested a hip against the kitchen counter. \"It's Russian. It means little bunny, but it's more like you Americans would call someone honey, or dear.\"\n\n\"Ah.\" Charlotte smiled. She liked that. \"And don't I get a nickname too?\" She tickled Zoe's side with gentle fingers, making the little girl giggle once.\n\n\"You're Mommy.\"\n\nCharlotte blew a raspberry that turned into a harsh cough for a second. Alexei swooped down with a cup of water and she lifted startled eyes to him. \"Thank you.\" She swallowed it all and rested her cheek on Zoe's soft head. \"Mommy, huh? That's boring. I want to be Wonder Woman or something fun like that.\"\n\n\"Krasotka.\"\n\nCharlotte looked up at Alexei's rough voice to find his golden-brown eyes on her. She sucked in a breath at the look on his face, then shivered. Was she feverish again?\n\n\"What does that mean?\"\n\nHe blinked, as if not expecting the question. Behind him, the toast popped up and he turned away, not answering her.\n\nWell, she'd ask again later. Knowing him, it might mean something like 'mud pie' or 'ginger-haired'.\n\n\"Here. Eat.\" He set the plate down as a phone chimed somewhere in the apartment.\n\nCharlotte realized that was hers and looked over her shoulder. She couldn't set Zoe down but Alexei was already moving away. He grabbed it off the coffee table and brought it to her.\n\n\"Before I forget, I did answer it yesterday when your friend Sarah called.\" Alexei handed it to her, his expression wry. \"She called three times in ten minutes so I thought she must be worried. I'm not sure I made her feel better, but she didn't call again or call the police.\"\n\nCharlotte snorted out a laugh and nodded. That would be something Sarah would do, or show up with a baseball bat. Looking down at the phone screen, she saw that she had a few text messages, from Sarah and Ursula. They, and the daycare, were pretty much the only people who ever called or texted her.\n\n\"I'll respond in a few minutes.\" She set the phone down and ate the toast, managing to get Zoe to have a few bites as well. As she ate, Alexei moved around her kitchen, cleaning the pan and spatula he'd used for the eggs. He loaded the dishes in the dishwasher and wiped the counter, all as if he'd been there for years, not two days.\n\n\"Alexei.\"\n\nHe stopped and turned to look at her, one dark eyebrow cocked.\n\n\"I can't--\" She shook her head and looked down, running her hand over Zoe's back. \"I don't know--\"\n\n\"Mommy.\" Zoe's weak voice had Charlotte clutching her closer. \"My tummy feels funny.\"\n\nAlexei's eyes narrowed on the little girl and he came forward, dropping to a crouch beside their chair. \"Does it feel like you're going to be sick?\"\n\nZoe's eyes filled with tears and she nodded. Alexei's hand reached out to cup the little girl's face, brushing gentle fingers over her cheek.\n\n\"You're very warm now, zaya.\"\n\n\"Mommy...\" She turned her face to Charlotte's chest again, her breathing shaky.\n\n\"Okay, sweetie. Let's go to the bathroom.\" She kissed Zoe's hair and shifted, trying to stand. But with the last few days she'd had, and Zoe's all but dead weight in her arms, Charlotte couldn't manage to get up.\n\nAlexei rose, plucking Zoe from her arms and cradling her close. Zoe didn't even flinch. She curled against Alexei's broad chest, whimpering a little.\n\n\"Come, let's go drink some cold water.\"\n\n\"Okay.\"\n\nCharlotte wanted to burst into tears. Her little baby was hurting and she could barely stand up on her own. What kind of mother was she? She wasn't fit to be the sole adult responsible for Zoe's life.\n\nAlexei carried Zoe into the second bathroom and Charlotte heaved herself to her feet, swaying for a moment before she followed. She leaned on the doorway as Alexei propped Zoe on the counter and gave her a cup of cold water from the tap in there. Zoe drank it in little sips, her little body hiccuping every few seconds. After she finished the water, she reached for Alexei and he lifted her again, cuddling her against his chest.\n\nCharlotte watched, tears in her eyes as Alexei rocked her daughter to and fro. After a minute or so, Zoe sagged in his hold, out cold. He glanced at Charlotte over Zoe's head and carried her to her bedroom. There, he set her down in her bed and drew the blanket up to her chin.\n\nCharlotte stood back and watched it all, her heart squeezing. Alexei took her arm and led her away from Zoe's bedroom, closing the door.\n\n\"Come. You need to sleep too.\"\n\nShe wanted to argue. She wanted to stay and watch her baby girl sleep. But Alexei was too strong. He all but carried her to her bedroom and guided her into bed.\n\n\"Sleep. Don't worry about anything.\"\n\n\"But, I--\"\n\nAlexei shook his head, tucking the covers up around her. \"It's all right. Everything will be fine. Sleep, krasotka.\"\n\nShe yawned. \"What does that mean?\"\n\nHe didn't tell her.\n\n\u2500\u2500\u2500\u2500\u2500\n\nCharlotte didn't stay asleep long. She woke after an hour, finding a hand-written note on the kitchen table from Alexei.\n\nHad to work. I took one of your spare keys to make sure I locked up behind me, I hope that's okay.\n\nUnder that was a phone number, one that she assumed was his.\n\nDisappointment lodged in her chest. Of course he had to work. He must have a game, or practice at the very least. She'd obviously monopolized his time long enough. With a sigh, she set the note down and checked on Zoe. She was still sleeping, her skin warm but not damp, and her breathing deep and even.\n\nFinally, Charlotte sat on the couch and checked her text messages. She responded to Ursula, saying she would hopefully be back to work by Tuesday, as normal, but it would depend on how Zoe fared for the next day and a half. She answered Sarah's concerned messages, assuring her friend she was all right, but exhausted.\n\nAfter she hit 'send', her phone rang, Sarah's name flashing across the screen.\n\n\"Hi, Sarah.\"\n\n\"Girl, you've been holding out on me.\"\n\n\"What are you talking about?\"\n\n\"You didn't tell me you were shacking up with your grumpy Russian.\"\n\nCharlotte barked out a laugh that turned into a hoarse cough. She caught her breath and shook her head. \"Oh, my God, Sarah. Whatever gave you that idea?\"\n\nSarah snickered. \"He answered your phone at nine in the morning yesterday. What was I supposed to think?\"\n\n\"He was watching Zoe.\"\n\nThere was a pause and Charlotte knew Sarah was trying to decide which questions to pester her with first.\n\n\"Okay, I'm going to need so much more. Start at the beginning.\"\n\nCharlotte frowned. \"Honestly, I'm not entirely sure. I left work early on Friday, napped a while, picked up Zoe from daycare later, and I was fine. Pretty much. Then we got home and started to watch some show, and I felt nauseous.\"\n\n\"Oh, gross.\"\n\n\"Yeah. It was. I started throwing up, so much.\"\n\n\"Okay, stop. I get it. Nasty. How did Alexei end up in your place the next morning?\"\n\n\"I guess my puking freaked Zoe out pretty bad and she got Alexei here.\"\n\n\"How?\"\n\n\"I don't really know. Maybe she went and knocked on his door?\" Though Charlotte couldn't really see that, never mind the absolute horror that filled her at the thought of her daughter wandering out of the apartment alone. It was all fine now, Zoe was safe in her bedroom, but still. Shoving the doom and gloom thoughts aside, she rubbed her eyes. \"Anyway, he showed up and helped me as I threw up some more.\"\n\n\"Oh. My. God. He saw you like that? All pukey and gross?\"\n\n\"Yep.\" Charlotte leaned her head back on the couch and sighed. She hadn't given it much thought earlier when she'd woken but she was pretty sure she wanted to die before she ever faced him again. \"He sure did. Then he made me go back to bed and said he'd watch Zoe.\"\n\n\"For two days?\"\n\n\"I guess so. Yeah. He did. I woke up this morning and they were cooking together.\" Warmth flooded Charlotte as she recalled the scene when she'd finally crawled out of bed.\n\nAlexei and Zoe. Alexei holding Zoe like she was the most precious creature. It did so many things to her heart.\n\n\"Char, oh my God. What kind of guy does that?\"\n\nThe best guys. Charlotte yawned, still so exhausted. Turning, she stretched out lengthwise on the couch and got comfortable. \"He was nice, for sure, but I never thought he was a bad guy, even when he was all grumpy with us.\"\n\nSarah let out a light laugh. \"Are you sure? You had some choice opinions on his behavior before.\"\n\n\"Well, yeah. He's rude, but I don't think he's all that bad, not really. He was nice to Zoe before all this.\"\n\n\"That's true.\" Sarah was aware of their previous encounters. \"But so lucky that he was around, Char. What if he'd been playing a game? Why didn't you call me if you were feeling so shitty? I'd have come to at least take Zoe off your hands.\"\n\n\"I didn't even think of it, I'm sorry. I didn't have my phone in between bouts of emptying my insides.\"\n\n\"Ew. Don't ever mention that again.\"\n\nCharlotte smiled. \"What did Alexei say when you talked?\"\n\n\"He was nice, but very abrupt. When I got all shrill, he put Zoe on the phone and I managed to get some more details from her.\" Sarah sighed. \"She was super excited that they were going to walk to the grocery store, and I thought, any guy who promises to let a little girl carry eggs must be all right.\"\n\n\"Sure. Or very clever.\"\n\n\"He's both, yes?\"\n\nSighing, Charlotte threw an arm over her eyes. \"Yes.\" Clever, kind, thoughtful. So sexy it hurt.\n\n\"Well, listen, since we're off tomorrow, I can come over tonight and spend the night. Unless your babysitter is still there?\"\n\n\"No, Alexei is gone.\" Charlotte yawned. \"But you don't have to come over, Sarah. We're fine. Zoe is napping right now, and I can manage something easy for dinner.\"\n\n\"Are you sure?\"\n\n\"Yeah, totally. We're fine. Besides, don't think I've forgotten about your grandmother's eightieth birthday tonight. And you promised to take your sister to that thing tomorrow at noon. Something to do with school?\"\n\nSarah made a noise. \"Right. I could so get out of all of it, if you really needed me to, honey.\"\n\n\"I know you could, and I appreciate the thought, Sarah. You're the best.\"\n\n\"I am.\"\n\nCharlotte could hear the smile in her friend's voice as she yawned again. \"Look, I'm going to nap now while Zoe is still down. I'll text you later if I need anything, I promise.\"\n\n\"Okay. Yeah, get some rest and if you need Tuesday off still, I can totally manage without you. I'll let Ursula know.\"\n\n\"Thanks, Sarah. Talk to you soon.\"\n\n\"Bye, hon.\"\n\nThe call ended and Charlotte had enough strength left to toss the phone on the coffee table before fading out.\n\n\u2500\u2500\u2500\u2500\u2500\n\nZoe called for her before she could sleep for too long and they spent a few hours shuffling between the couch and bathroom. Zoe still hadn't thrown up, but she was whiny and lethargic until Charlotte finally put her down shortly after a light dinner of toast and cereal.\n\nAs she crawled into her own bed, Charlotte had the brief thought that she should shower, but she wasn't sure she had the energy to stand there and wash. Maybe in the morning. She was reaching to turn off her bedside lamp when there was a light knock from her front door.\n\nFrowning, she threw the covers back, tugged her sweater back on over her pajamas and shuffled to the front door. When she saw Alexei through the peephole, her stomach lurched, and she opened the door with a shy smile.\n\n\"Hi.\"\n\nHe looked her up and down once and let out a breath. \"You look terrible.\"\n\nShe pressed her fingers to her lips to keep from bursting into laughter. This man had no filter whatsoever. \"Thank you.\" She eyed him up and down as well and shrugged. \"You're no treat yourself.\"\n\nHe glanced down at his outfit of track pants and long-sleeved shirt. \"What's wrong with me?\"\n\nNothing. Not a damn thing. Charlotte leaned on the door and took a step back. \"Are you coming in?\"\n\nHe hesitated before nodding once and stepping inside. He closed and locked the door before following her to the couch, even though she'd been in bed when he'd knocked.\n\n\"How was your day?\" she asked as she tucked her legs under her on one end of the couch.\n\n\"It was fine. I have to leave tomorrow.\"\n\n\"Okay.\" She frowned until she realized what he meant. \"Oh, road trip. Where to this time?\"\n\n\"St. Louis and Nashville.\" He sat beside her and turned his body to face her. \"I'll be back Friday.\"\n\n\"Okay. Did you need me to do something while you're gone?\"\n\nHe blinked and shook his head. \"Why would you ask that?\"\n\nShe shrugged. \"I don't know. You've never come to tell me you're leaving before.\" Granted, he'd only been on a few road trips since they'd met, and they'd hardly been bosom companions. \"Maybe you want me to water your plants?\"\n\n\"No. I wanted to make sure you'd be okay while I'm gone.\"\n\nCharlotte's breath caught and she looked away. What in the hell was going on? \"I think so.\"\n\nHe said nothing for a long moment and when she finally lifted her eyes, he was watching her.\n\n\"You look tired.\"\n\nShe stifled another laugh, not wanting to wake Zoe. \"You've already mentioned that I look awful.\"\n\n\"Not awful.\" He sighed and stood up, holding a hand down in front of her face. \"Come on.\"\n\n\"Where are we going?\" She was too tired to argue or even question what he was doing here. Again.\n\n\"You need to shower.\"\n\nAt that, she did laugh, even as she tottered after him to the bathroom in her bedroom. \"And you're going to help me with that?\"\n\nHe turned to her as he flicked the light on in the bathroom and the look he gave her warmed her from the top of her head to the tips of her toes, with so much of it pooling low in her belly. It had been a long time since anyone had looked at her like that. Years. Almost five, considering that Zoe's fourth birthday was in a few weeks.\n\n\"I would if you asked.\" Alexei's voice was low, his accent growing thicker. \"But you aren't in any shape for that.\"\n\nSomething had happened over the past few days, something beyond the nature of their interactions up to this point. She knew it and apparently he knew it too, she was just too chickenshit to say anything about it.\n\nInstead, she propped herself against her vanity and watched as he pulled the shower curtain and leaned in to turn on the water. He tested the temperature for a few seconds before backing up and turning to her. Again, those eyes of his swept over her.\n\n\"You can undress?\"\n\nGod, how badly she wanted to say no, that she needed help. She shivered and nodded.\n\nWith that, Alexei left her alone in the bathroom, closing the door behind him. She stared at the water, watching as steam started to curl out around the shower curtain. With slow movements, she took everything off and stepped into the tub.\n\nAs soon as the water hit her skin, she let out a sigh. Tired or not, it already felt incredible. She took her time, working shampoo through her hair, rinsing, and doing it again. Then she worked up a good lather with her body wash and the loofah, making sure she scrubbed every inch of her skin. By the time she stepped out and dried off, she was pink all over. She pulled out fresh clothes and combed her hair before walking out to find Alexei, wondering if he'd stayed.\n\nHe was there all right. Apparently Zoe had woken while she'd been in the shower and Charlotte found them together on the couch.\n\nAlexei was stretched out on his back, his head tilted towards the TV for whatever show he'd put on. Sprawled out over his chest, tucked halfway between him and the back of the couch, was Zoe, her cheek pressed right over Alexei's heart. Alexei had one arm around Zoe's waist, holding her in place, the other was rubbing in slow circles around her upper back.\n\nCharlotte must have made some noise because Alexei looked up at her. They didn't speak. He stared at her, and she stared back, her heart speeding up with every moment that passed. Alexei gave a slow blink, those golden eyes dipping over her face, snagging on her lips, then traveling down. By the time he made it back to her eyes, she was flushed all over, from more than her recent shower.\n\nWith slow movements, so he didn't disturb the child he held, Alexei turned the TV off, sat up and rose to his feet. He carried Zoe back to her bedroom and returned to Charlotte after, who remained rooted to the spot. Taking her hand in his, he led her to her own bedroom and pulled back the covers on her bed.\n\n\"In.\"\n\nShe hesitated but nodded once, climbing in. Alexei followed and she shimmied over to allow him more room. He dragged the covers back up over them both and Charlotte rested her head on the pillow, watching him with wide eyes.\n\n\"Here, Charlotte.\"\n\nHis strong arm reached for her and she went. Even without being as weak as she was, she would have gone willingly. In all honesty, she'd had to fight off some intense jealousy each time she'd found Zoe snuggled in Alexei's arms. She just hadn't wanted to admit it.\n\nHe was so grumpy, with his demands for quiet, and his hard stare. But as she pressed her cheek to the warm curve of his chest, she thought about how thoughtful he was. How gentle he was with Zoe, and how sweet.\n\n\"Sleep.\"\n\nHis single word demands were doing something else to her. As she closed her eyes and let her mind wander, Charlotte imagined him saying other words.\n\nUndress. Kiss.\n\nMore.\n\nCome...\n\n\u2500\u2500\u2500\u2500\u2500\n\nAlexei hadn't intended to spend the night in Charlotte's bed. He'd only meant to see how they were doing, and make sure Charlotte did go to bed early. Instead, he'd taken one look at her flushed post-shower face and hadn't been able to make himself leave.\n\nConclusion: he'd lost his damn mind over Charlotte and Zoe and the way Charlotte's curves fit against him was pretty much the best memory he carried with him now.\n\nGetting on the flight to St. Louis was hard. Harder than he'd been when he'd crawled out of Charlotte's bed before dawn on Monday morning.\n\n\"What's with the face, Alexei?\" Olle elbowed him as they took their customary seats on the plane.\n\n\"What face?\" Alexei scowled at his team captain. \"It's my face.\"\n\n\"It's this face.\" Olle proceeded to demonstrate, hanging his chin down, his lips pulling down on either side, like an exaggerated sad clown. \"Is it because of your girlfriend?\"\n\n\"She's not my girlfriend.\"\n\nOlle snickered and tugged out his headphones. \"Sure. Your noisy upstairs neighbor who seems to have snagged enough of your interest that we didn't see you for three days.\"\n\nAlexei scowled at the man and then proceeded to ignore him. His phone chimed a moment later and he looked down to see a message from Joelle, Olle's wife. She was on her way to the building now, which relieved some of the pressure that was building up in his chest.\n\n\"Is that Joelle?\" Olle nudged him with his elbow. \"I knew it was a mistake letting you two exchange numbers.\"\n\nAlexei rolled his eyes. He knew Olle didn't mean it. Olle and Joelle were just about the poster-children for the perfect marriage, no real jealousy at all. When Alexei had asked for Joelle's number, and explained why, Olle hadn't hesitated, nor had Joelle. It was simply that teammates couldn't go a day without ribbing each other.",
        "And Alexei could give it back just as good. He shot Olle a narrow look. \"It was a mistake. I'm ten times the man you are.\"\n\n\u2500\u2500\u2500\u2500\u2500\n\nCharlotte was pretty sure neither of them were ever going to move from their nest on the couch. Zoe was snuggled up to her side, a flannel blanket wrapped around her slender form. Charlotte got up now and again to grab snacks or drinks but other than that or bathroom breaks, they spent the whole of their Monday binge-watching a couple of anime shows on Netflix. Charlotte had decided now was the time for the streaming service's free trial and she was glad she'd done it.\n\n\"You want some more crackers, sweetie?\" She brushed her palm over Zoe's forehead as she asked, testing the girl's temperature. She wasn't nearly as warm as she'd been the night before and while she remained mainly lethargic, she was a little more animated as well.\n\nZoe nodded and Charlotte got up to dig around in the pantry for another sleeve of the saltines she always kept on hand. As she did that, and refilled her water glass, there was a knock on the door.\n\nFrowning, Charlotte turned to walk over and look through the peephole. She wasn't expecting anyone and Alexei wasn't back until Friday, or so he'd said.\n\nThere was a woman standing there, tall with ash-blond hair up in a messy bun, and blue-framed glasses on her pert nose.\n\nCharlotte unlocked the door and peered out with a neutral smile on her face. \"Yes?\"\n\nThe woman grinned. \"Are you Charlotte?\"\n\nBlinking, Charlotte opened the door wider. \"Um, yeah. Do I know you?\"\n\n\"I'm Joelle Norberg, Olle's wife.\"\n\n\"Olle?\"\n\nJoelle tilted her head to the left, her already wide grin growing bigger, her blue eyes dancing. \"Ah, haven't got around to talking about anyone else, have you?\"\n\nCharlotte was lost. \"I'm sorry, I don't understand.\"\n\nJoelle laughed and nodded. \"No, I'm sorry, I'm talking in circles. Olle is Alexei's teammate on the Blackhawks, and a good friend of ours.\"\n\n\"Oh.\" That explained some, but not everything.\n\n\"He told me about how you and your little one have been sick for a few days. With them heading out of town, he asked if I could drop by and see if you needed anything.\"\n\nWarmth swamped Charlotte and her throat closed up with some unnamed emotion. Her eyes watered and she blinked hard a few times, jerking her gaze away from Joelle's friendly and far-too-knowing smile.\n\n\"That's so kind of you.\"\n\n\"It was all Alexei's doing.\" Joelle clasped her hands in front of her. \"Now. Are you going to let me in? I totally understand if you'd like me to go, but I really only want to help. I know what it's like to be sick and not have someone helping out.\"\n\nCue more waterworks. Charlotte was seconds away from sobbing altogether. She couldn't remember being on the receiving end of so much well-meaning kindness. She swallowed hard a few times, staving off the tears as she backed up a couple steps. \"Come in, please.\"\n\n\"Great.\"\n\nClosing the door behind Joelle, Charlotte looked over to see Zoe had sacked out on the couch, her eyes closed. Clearly, she wasn't back to her usual self, or she'd have been right up at the door with her.\n\n\"Is that Zoe?\" Joelle asked in a soft voice after she'd pulled her coat off.\n\nCharlotte didn't know what to think that this friend of Alexei's already knew who she and Zoe were. What else had he told Joelle? How had he explained who they were to him? Charlotte didn't even know what they were.\n\n\"Yeah. She's been sleeping a lot and thankfully not throwing up like I did.\"\n\nJoelle winced, her expression turning sympathetic. \"Thank goodness for that.\"\n\n\"Let me put her to bed and I'll make some coffee for us.\" Charlotte crossed to slide her arms around Zoe. She didn't have all her own energy and strength back but she managed to carry her daughter to bed and closed the door behind her as she rejoined Joelle in the kitchen.\n\n\"Oh, I would have done that.\" Charlotte watched as Joelle poured water into the coffee maker, having already discovered her coffee stash.\n\n\"Hey, I said I'm here to help, I'm helping.\" Joelle threw a wink over her shoulder. \"Now, you sit down and wait for this to brew, and I'll attack these dishes.\" She waved a hand at the full sink.\n\n\"No, I can't let you do that.\" Charlotte tried to move around Joelle to the sink but the other woman wasn't having it.\n\n\"Charlotte, Alexei specifically asked me to come help you, not stand by while you clean up around me.\" Joelle's voice took on a stern edge that almost made Charlotte laugh. If this Joelle wasn't a mother yet, she was already halfway to being one. \"So park it on the couch and I will tidy up in here. After coffee, you will go have a shower, and we'll talk laundry. Am I clear?\"\n\nCharlotte covered her smile with her fingers and nodded. Joelle winked again and turned back to her task.\n\nTrue to her word, the other woman made quick work of the dishes and kitchen counters while the coffee brewed. Then she did join Charlotte on the couch with two mugs of coffee, after asking if Charlotte took cream and sugar.\n\n\"I'm not sure how I'll ever let you go after today.\"\n\nJoelle grinned and saluted her with her own mug before taking a sip. She lounged back on the couch cushions and eyed Charlotte, her expression becoming more pointed.\n\n\"So, let's talk, shall we?\"\n\nCharlotte didn't know why, but she turned nervous in an instant at Joelle's words. \"Okay.\"\n\n\"How did you and Alexei meet?\"\n\n\"Oh, well, that's not very interesting. He lives downstairs, in the apartment below us and came to complain when Zoe got really loud one day.\"\n\n\"And the rest is history?\"\n\nCharlotte smiled and shrugged. \"I suppose. We had a few more encounters, and he happened to be here when I got really sick the other day.\"\n\n\"He told me that Zoe stomped around until he showed up at the door.\"\n\n\"Was that it?\" Charlotte sighed. \"All this time, I haven't been sure on that. He said Zoe called him but I was throwing up too much to look into it any further.\"\n\nJoelle nodded. \"Understandable. You couldn't have found a better babysitter. Alexei would never say it himself, because he thinks he's anti-social, sweet man.\"\n\n\"I could kind of see that.\" Charlotte sipped her coffee as she considered. \"He never smiles. Well, almost never.\"\n\n\"You've seen him smile? What a treat. What's it like? I've known him three years and I don't think I've ever seen it.\"\n\n\"Really? He smiles at Zoe all the time.\"\n\nJoelle clutched a hand to her chest. \"Of course he does. Big ol' softie.\"\n\nCharlotte giggled. \"Maybe he is, under all the bluster.\"\n\n\"Oh, of course he is.\" Joelle nodded, adamant. \"Would a real jerk have spent all that time taking care of you guys?\"\n\n\"No.\" Charlotte could barely wrap her head around the fact that Alexei had done anything at all for them, never mind the length of time he cared for her and Zoe. \"He's really bonded with Zoe, I think.\"\n\nJoelle's smile softened. \"That's so sweet.\"\n\n\"It really is.\" Charlotte could admit that. \"It's been just me and Zoe since she was born. Since before that, really.\"\n\n\"Before?\"\n\n\"Well, I got pregnant when I was nineteen. My parents didn't like it.\" Charlotte looked down into her coffee, swirling it around a bit. \"They said since I got myself into the mess, I could get myself out of it.\"\n\n\"Wow. I'm sorry you had no support from them. Not even now?\"\n\n\"I call them at Christmas every year, but they don't seem to have any interest in me, or in getting to know Zoe.\"\n\nJoelle frowned and leaned over to squeeze her hand. \"That's shitty.\"\n\nCharlotte agreed but she shrugged. \"They're pretty old-fashioned and all, so I get it, but I have Zoe, and she's family enough for me. We make it work.\"\n\nThe other woman got a funny look on her face, as if she wanted to say something. She gave her head a shake and pushed her glasses up her nose. \"So, Alexei and Zoe are friends now?\"\n\n\"Yes, so it would seem.\"\n\n\"Because he had an awful lot to say about you as well.\"\n\nCharlotte squirmed on the couch and looked away, her cheeks burning. \"I bet he did. Did the words he use rhyme with itchy witch? But with Bs?\"\n\nJoelle snickered and shook her head. \"Not at all. He was very concerned about leaving you on your own but he couldn't get out of the road trip.\"\n\n\"Of course not. I don't imagine they could just not show up for games.\" Charlotte took another long sip of her coffee then paused when she saw Joelle's expression. \"What is it?\"\n\n\"You don't know? He didn't tell you?\"\n\n\"Tell me what?\"\n\nJoelle looked away and bit her lip. \"Oh, um, well, he did miss a game. Saturday night.\"\n\nSaturday night. When Charlotte had been so out of it, she hadn't realized it was Saturday. When Alexei had watched Zoe all day and night, taking her grocery shopping and letting her carry eggs.\n\nSwallowing with some difficulty, Charlotte stared at Joelle. \"He didn't play in a game?\"\n\n\"Yeah. It was all anyone talked about during the commentary. They were speculating that he'd been injured somehow.\" Joelle let out a light laugh. \"But that's only because Alexei is one of the league's iron men.\"\n\n\"Iron men?\"\n\n\"Yeah. Iron man is what they call the guy who play the most consecutive games in a row, no injuries, illness, or whatever. Alexei was one of the top five, with five hundred-something games. I can't remember exactly.\"\n\n\"And he missed a game.\" Charlotte's hands started to shake and she leaned forward to set her mug down on the table. \"Oh my God, he must hate me.\"\n\n\"Of course he doesn't.\" Joelle touched her arm, her blond brows pulling together. \"I'm sure he doesn't regret it at all.\"\n\n\"Why would he risk that for us?\"\n\n\"Risk what? Oh, sweetie, his career is in no danger for missing one game. They're allowed sick days, like anyone else. Alexei just happens to be someone who's never had to use one. Or at least, not for some time.\"\n\nCharlotte shook her head. \"I don't know why he'd do that.\"\n\n\"Don't you?\" Joelle grinned and gave her shoulder a last squeeze before sitting back. \"Now, let's change the subject so you don't keep swimming in your misplaced guilt. Where's your washing machine? And dirty laundry? Give me all of it and I'll take care of that while you shower.\"\n\n\"You really don't need to do that. I can manage.\"\n\n\"The thing is, Charlotte, you don't have to. I'm volunteering and I'm not going anywhere.\" Joelle stood up. \"So you can tell me where everything is, or I can find it myself. It's up to you.\"\n\nSeeing that Joelle was serious, and with tears clogging her throat again, Charlotte stood and gave the woman a quick tour. Leaving Joelle sorting Zoe's many shirts and leggings, Charlotte did go have a shower.\n\nThe whole time, she thought about what Joelle had told her.\n\nAlexei missing a game. Choosing to miss it, for her and Zoe. Who does that? They were nothing to him except a source of annoyance. Still, she recalled the way he'd been so sweet and gentle with Zoe, and how he'd tucked Charlotte into bed. With him.\n\nNo. Don't get carried away. Last time she'd had her head spun by a man, she'd ended up pregnant and on her own in the city.\n\nSomehow though, she couldn't see Alexei being able to walk away from her like Zoe's absent biological father.\n\n\u2500\u2500\u2500\u2500\u2500\n\nIt took her a couple days, but Charlotte eventually texted Alexei at the number he'd left for her. She wasn't sure if he was a texter, but she had to thank him for sending Joelle to her place and didn't want to wait until he was home. Lucky for her, he didn't leave her hanging.\n\nCharlotte: Alexei?\n\nAlexei: Yes. This is Alexei. Is this Charlotte?\n\nCharlotte: Yes.\n\nAlexei: Is everything all right?\n\nCharlotte: Yes. Thank you for sending Joelle over. She's the best.\n\nAlexei: She really is. I'm glad you didn't turn her away.\n\nCharlotte: Couldn't if I'd wanted to. She's got more energy than Zoe.\n\nAlexei: Not sure I believe that.\n\nCharlotte: It's a close call, I'll leave it at that.\n\nAlexei: How are you feeling? Both of you?\n\nCharlotte: Much better. I went back to work on Tuesday and Joelle volunteered to watch Zoe for an extra day before I sent her back to daycare on Wednesday.\n\nAlexei: Zoe was still sick then?\n\nCharlotte: She was mostly better but I thought it was better to be safe than sorry. And Joelle offered, so I figured why not.\n\nAlexei: I'm glad someone was there to help while I'm gone.\n\nCharlotte: It was very thoughtful of you to ask Joelle.\n\nAlexei: I was worried about leaving you.\n\nCharlotte:...\n\nCharlotte: Why?\n\nAlexei: ...\n\nAlexei: We'll talk when I get home.\n\nCharlotte: Talk about what?\n\nAlexei: Many things. Go to bed, Charlotte. It's late.\n\nCharlotte: I'm fine for a little while.\n\nAlexei: Bed. Now.\n\nCharlotte: ...\n\nCharlotte: Good night, Alexei.\n\nAlexei: Good night, krasotka."
    ],
    "authorname": "MugsyB",
    "tags": [
        "hockey",
        "hockey player",
        "hockey team",
        "athlete",
        "sports",
        "sports team",
        "single mom"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/beneath-the-ice-ch-02"
}