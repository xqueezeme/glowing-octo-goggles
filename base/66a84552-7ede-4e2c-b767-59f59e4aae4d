{
    "title": "The Twelve Zenati Pt. 03",
    "pages": [
        "Authors note: Hello everyone. Welcome to the new Twelve Tables series and the new family I have for you all to meet. I hope you come to know and like them as much as the families from the past series. Please understand this is a work of fiction and I am in no way an expert on mental illness or PTSD. This story is not based on real people or situations and any resemblance to anyone living or dead mere coincidence. Thank you once again to David and Kate for being my second set of eyes. Enjoy! ~ellie. \n\n*****\n\n\"You're both here!\" Genesis gave a whispered exclamation and stood from where he had been sitting, staring at Serena, lost in thought.\n\n\"Watching the leaders work together is pretty humbling. Ours and the Vitali leaders. We thought we should probably give it a shot,\" Xavier grinned. \"Besides, rumour has it that you found your curse breaker, and she's not just a little bird with a broken wing.\"\n\n\"If that's what I need to tell the old man to get the help I need, then sure. But you both know that curses aren't real, right?\" Genesis asked seriously. \n\n\"You're asking the next Oracle if I believe in things I can't see or prove?\" Dominic chuckled, making Genesis groan. \n\n\"You know what happened when I got that warning text out of the blue, from someone I barely knew, right?\" Xavier shrugged. \"It pays to listen when the universe is trying to tell you something. So let's just go with the fact that you had the gut-twisting, heart-stopping moment and move on from there.\" He smiled knowingly at his cousin. \"Hurts like shit, doesn't it?\"\n\n\"Yeah,\" Genesis admitted, grudgingly. \"Still not a curse, probably just some genetic heart irregularity or something.\"\n\n\"Whatever you need to tell yourself,\" Xavier chuckled. \"So, do you need to talk to him privately or can I hang out? You know he's only going to tell me later anyway, right?\"\n\n\"Honestly, I wanted to talk to Claudio but figured he'd be too busy,\" Genesis chuckled, \"And Dom was the next best choice, because he has access to the Tatar.\"\n\n\"Serena says Remington Royce's brother is dead. Murdered down on the docks. Apparently she witnessed it, and Remington saved her from the goons. She says that we're looking for a dead man, but she also mentioned an Aunty Bea who seems like a housekeeper, but I get the feeling she may have really been Remington's Aunt,\" Genesis explained. \"Someone needs to turn the machines off, and it can't be Serena. It would be too hard for her to let him go, even though he is dead in every other way.\"\n\n\"I thought her name was Olivia,\" Xavier frowned.\n\n\"It's a long story, but she prefers Serena at the moment,\" Genesis said and sighed, as he looked at the girl. \n\n\"We've got the time,\" Dominic said, reaching out a hand to touch her face to try and get some read on the girl. \n\n\"No!\" Serena gasped, her eyes snapping open as she cringed away from his hand. \"Don't touch me!\" She looked around wildly, her eyes falling on Genesis as he stood and went to soothe her.\n\n\"I'm here, you're safe. It's my responsibility to keep you safe now, remember?\" Genesis crooned and stroked Serena's hair, sitting on the edge of the bed. \n\n\"Remy's gone. He's not just asleep?\" she asked sadly, as if needing it confirmed again before she would believe that Genesis would keep her safe. \n\n\"He's brain-dead, little one. He won't ever wake up again,\" Genesis confirmed. \n\n\"But you will take me to say goodbye before they...\" she frowned at Dominic, \"get Aunty Bea to turn the machines off,\" she said as if reminding herself of all that had happened this afternoon and placed a hand over her chest and closed her eyes briefly, as if in pain.\n\n\"These men will not turn the machines off, but they will try and help to find Aunty Bea. Can you tell them what she looked like?\" he asked gently, continuing to stroke her hair. \"She looked after you at home, made food for you?\" he asked and was satisfied when she nodded calmly.\n\n\"Ex, go call Papa and tell him about Aunty Bea, and tell him we need her here as soon as possible,\" Dominic said, trying to untangle the words and images that assailed him while watching the scene with Genesis and Serena. \"I've got this, and I have a feeling I need to talk to them, alone.\"\n\n\"I'll be back in a bit then,\" Xavier said easily. He had learned not to dismiss his brother's feelings. No one was surprised when Dominic was named Oracle. He had an otherworldly way of seeing into the heart of matters like these.\n\n\"She's a good girl, Genesis,\" Dominic spoke about her but not directly to her, rather making his comments to his cousin. \"A sweet girl,\" he smiled, pulling the keyword out of the images in his mind as he searched for another. \n\n\"She is,\" Genesis agreed and swung his head toward his cousin with a raised eyebrow as he felt Serena calm under his soft petting.\n\n\"Perfect,\" he pulled the word out, saying it to feel it. \"Serena was Remy's perfect little slut,\" he said to Genesis and noted the shiver run through the girl. \"Now she will be your perfect little slut,\" Dominic announced. \"Once she learns how to make you happy.\" He stepped closer and spoke directly to Serena then. \"I can see that Remy made you the perfect little slut for him. Such a lady to everyone who saw you, but for him you were perfection in public and in private. If you want a great and powerful man like Genesis to think you're perfect like Remy did then you must try harder to make him happy, or he may choose to give you to someone who would not keep you as safe and care for you as well as he will.\" The threat was evident in his voice. \"Do you understand, little one?\" he asked, and she nodded silently. \n\n\"Who needs the Tatar when I've got you?\" Genesis said once the shock of what Dominic had just done wore off. He's managed to hit on most of her trigger words and some that had given her a strong physical reaction and, from what he could see, a strong mental jolt. He was impressed, more so than he had been already with his cousin's abilities.\n\n\"At your service. You're the boss,\" he said meaningfully, giving Genesis the position of power, that Serena needed to see. \"I will get that nurse and wheelchair you wanted so that she can say goodbye to Remy and accept her place with you. Only then will she truly try to be your most precious possession, the treasure Remy promised you.\" \n\nDominic walked stiffly to the door and left. Once outside the room, he shook himself to shed the dark and evil images that assailed his mind. That man, Remington Royce, had been a psychopathic monster with the power he held over her. Genesis was in trouble if this was his curse breaker. Dominic would need more help to unravel it all, but he could at least give Genesis some inkling of the depth of the damage and how to start to heal the girl. He doubted that his cousin had a dark- enough soul to rescue this girl from the depths of hell, where she had been living for the last month as Remy tested the absolute limits of her training and mental conditioning.\n\n\"Geez, Dom, you okay?\" Xavier asked. He saw his brother shudder, as if shaking something disgusting from his mind.\n\n\"That girl has been seriously fucked up. I don't even know if there is a way back from what Remington did to her,\" Dom said in a low, quiet voice. \"The man always gave her choices so that, when asked, she would say that she wanted what he did, even begged for it, if she was ever questioned by the authorities. But she had no choice. The consequences of baulking were too horrible. Did you find Aunty Bea? I have a feeling that she was like a field medic in a battle zone with that girl.\"\n\n\"Yeah, they're bringing her over with one of the Tatars. I could tell this was going south when you asked me to leave, and Gen had said that the Tatar may be able to tell if she really is an aunt, or if it was just an affectation,\" Xavier continued the soft conversation.\n\n\"How soon?\" Dominic asked. \n\n\"They're on their way, so I guess an hour or so,\" he said thoughtfully. \"Maybe longer. The Tatar have strange ideas sometimes, and Orlando seems to be listening to them.\"\n\n\"Okay. We need a wheelchair and a nurse to prepare her to move. Possibly clean her up a little first, though Gen should probably be the one to do that if he wants to bond with her properly. Any physical contact should come from him.\" Dominic thought his way through the situation.\n\n\"Okay leave it with me. I'll organise a nurse and wheelchair and wait for Aunty Bea. You deal with them,\" Xavier said, feeling for the first time that they were truly working as a team to handle family business without their fathers looking over their shoulders. \"Maybe music will work to drown out the horrors in her head?\" he suggested. It was something that worked for his wife when the night terrors came during the day. It was rare that she experienced those now, but they both carried earbuds and had playlists on their phones for her. \n\n\"Worth a try,\" Dominic said and patted his pockets, always having a spare set or two of earbuds on hand. \"Let's hope Genesis has some decent music on his phone.\" It seemed so unfair that the men of this family were destined to fall in love with women who were broken in some way. Xavier's curse breaker had been in a bad car accident and Dominic had shared in the feelings that he had during the breaking of the curse, and he felt the jealousy and anger until they fell in love. While not the same as going through it himself, it had strengthened their bond dramatically. He headed back into the room.\n\n\"Music soothes the savage beast, even the ones trapped in our heads sometimes,\" Dominic said quietly, passing Genesis the small plastic packet of earbuds. \"We probably should talk so you can tell me what you need me to do, and I can give you an insight into what is in my head.\" He shook his head sadly, letting Genesis know that it wasn't pleasant. \n\n*****\n\n\"You were right,\" Vivienne admitted, as she sat across the table from Gideon, sipping her wine. \n\n\"Geez, seriously? That doesn't happen often enough,\" he chuckled, then looked at her seriously, noting that the smile was gone and so was the pleasant demeanour she had over dinner. \"What about exactly?\" He leaned back in his chair. He had picked her up at six, and they had been enjoying dinner, talking about generalised, non-important stuff, mutual acquaintances and family ties to the various Tables. It had been interesting, and Gideon found that the more time he spent with Vivienne, the more he liked her.\n\n\"Let's stop ignoring the elephant at the table,\" she sighed. \"I fucked up this afternoon, and you were right. I don't have as much hands-on experiences with cases like this as I would like.\"\n\n\"Oh, but the elephant was behaving so nicely and was easy to ignore while we got to know each other better.\" Gideon made light of the reprimand that he had given her at the hospital by pouting at her.\n\n\"You're very charming Gideon, but that is not why I accepted this invitation,\" she said with a roll of her eyes. \n\n\"It was my blinding smile, wasn't it?\" He grinned at her and, when she shook her head, he went on. \"My sense of humour? My astounding good-looks?\" Eventually he stopped guessing and feigned being wounded, with his hand over his heart, as she continued to shake her head.\n\n\"I want to be part of this girl's treatment. Genesis called me to consult and, if what you said is true, then he could just as easily send me home if I fuck up again,\" she said. \"That is not in Serena's best interests, so I would like to avoid that if possible. What I need to know is how to ensure that doesn't happen.\" Vivienne took another sip of her wine after laying her cards on the table with this man. The truth was that he was all the things he had joked about, tall, good-looking, funny and with a killer smile, but finally consulting on a real-life extreme trauma case like this was her priority right now, not flirting with one of the reclusive Zenati men.\n\n\"I don't think anything that I say can help you because, once again, you're trying to control the situation, and that's dangerous for Genesis and his Pixie. I get that you are used to doing things your way and bullying people into what you want them to do, but you can't do that here. I imagine that once the Pixie is cleared to leave the hospital, you and the other doctors who have been treating her won't be needed. Genesis has what the girl needs. You can trust me on that,\" Gideon said, not entertaining her belief that she could control his brother and insinuate herself into the care of the brainwashed girl.\n\n\"What?! She will need ongoing intensive treatment and care! Genesis isn't qualified to do that! I am!\" Vivienne gasped, her eyes widening.\n\n\"She will get exactly what she needs from the man who is at the hospital still doing everything he can to help her, while we are here having a lovely dinner. He has barely left her side since Father Bob approached him for help. He won't just pick her up and put her down, according to scheduled appointments and dinner dates. Not now that he has her attention, and she is starting to follow his commands instead of refusing to interact with anyone who wasn't handpicked by Remington Royce,\" Gideon said.\n\n\"She's doing that because of me. Or because of my advice based on research into past cases,\" she exploded indignantly.\n\n\"Then you did a very good job as a consultant,\" he shrugged. \"He is beginning to bond her to him. Honestly, you probably don't want to be there through what he will have to do to strengthen and ensure that bond before he can help her become independent again. You asked him if he was ruthless enough. I would ask the same of you. Can you put aside the soft heart that made you criticise him for feeding her bread with her soup and harden up? Can you trust him to know what he is doing here?\" Gideon pulled no punches. \"Can you give up to control to him, is what I am asking. You cannot be an expert here. He needs to be the all-powerful, unassailable ruler of her and the world around her, including all of the people in it, just like Remington Royce was.\"\n\n\"And Royce certainly wouldn't have treated any woman as his equal or better,\" she sighed finally getting what Gideon was saying. She couldn't be the expert or continue to consult with the girl the way she had been, but neither could she just walk away. Perhaps she could watch from a distance, continue to advise Genesis when he needed help or support. She placed the tip of her thumb between her lips and, turning it sideways, clamped her teeth around it as she thought about the situation.\n\n\"Are you sucking your thumb?\" Gideon asked with genuine amusement.\n\n\"No,\" she scowled and pulled her thumb from her mouth, flapping her hand in an endearing gesture. \"I need to stay. I need to watch her progress. What if I promise to stay in the background and just watch how Genesis interacts with her? It could be important to future cases, if he manages to bring her back from the shell she is,\" Vivienne tried to compromise.\n\n\"It's not my call and, from what I could see, Gen was seriously pissed off with you this afternoon. Let's say my cousin Helena visited your family and began to tell your brothers what to do and how to do it? We table men have pretty firm views about our place in the world,\" he shrugged noncommittally.\n\n\"That's a nice way to say that you all have big ego's and believe a woman's place is in the home,\" she scowled again, realising that they wouldn't listen to her and that she would have to start throwing her professional weight around the hospital to ensure that she took charge of Serena's treatment.\n\n\"That's not true and more than a little unfair, considering that I just mentioned Dr Helena Zenati with some pride,\" he sighed as his phone buzzed quietly on the table. \"But that is an argument for another day. Gen needs me, and you have had more wine than a consulting doctor should have, so I will take you back to your hotel.\"\n\n\"Like hell, you will! I'm coming with you!\" Vivienne said.\n\n\"Oh yeah? That will make me believe you could let Gen do his thing and stay in the background.\" He shook his head sadly. \"Go back to your hotel room, Viv. Rest tonight and start fresh with Gen in the morning. That is the best advice I can give you because if you go walking into the hospital with that attitude, he'll send you home to your family and Papa will make it happen, regardless of the needs of the Vitali.\" He made sure that she understood the threat was real. \"You don't know us or our ways, but trust me, you cannot bully us with your expertise on this issue.\"\n\n\"We'll fucking see about that!\" she said indignantly, picking up her bag and leaving the restaurant. \n\nGideon sighed and made a call. She just didn't get it. She was a typical table princess. That was harsh, he admitted. Her heart and her motives were right; she was just going about getting what she wanted in the wrong way. \n\n*****\n\n\"You asked Gideon, of all people, to call me?\" Serafina grumbled as she bustled into the room with a large overnight bag full of everything her brother's curse breaker would need for her hospital stay. \"Do you think he knows that there is no size equivalent to Pixie?\" she laughed. \"I did what I could. If you need me to change anything, just let me know.\"\n\n\"Thank you, Sera,\" Genesis stood and embraced his little sister, kissing her cheek. Then he took the bag and unzipped it, rifling through the contents briefly. \"You've done well. I am sure Serena appreciates it as much as I do.\"\n\n\"You're welcome,\" she said as her eyes flicked to the bed and back to Genesis again. She'd been warned to not engage with the girl. \"Now that I have seen her, I am guessing that I got the size right. I hope that I will see you once your girl is recovered enough to go home?\"\n\n\"My sweet girl has made good progress today,\" Genesis said, laying a hand on her thigh. He felt her eyes looking up at him as he continued to speak with his sister. \"You did well,\" he nodded. \n\n\"Alright. Well, my job here is done. I'll send you the bill,\" she grinned and left.\n\n\"Now, sweet girl, we will start your transformation into something resembling a precious possession,\" he said. \"You look like a homeless whore instead of the treasured little slut that Remy promised me. If he could see you now, he would be very unhappy, and your punishment would be severe. As this is your first day belonging to me, I will show you what I require, and you will ensure that your appearance is pleasing at all times.\"\n\n\"Yes, Genesis,\" she said dropping her head and fiddling with her nails again. She was confused and embarrassed. She had none of her belongings to make herself presentable, and she felt the weight of that mistake settle heavily on her. Did she truly look so awful to him? Remy loved her and told her how beautiful she was, even when she was in pain, sweaty and covered in his cum and pee. He would not be happy, she acknowledged, that she was in public, looking like anything but a perfect lady, and the thought made her feel worse than Genesis' words alone.\n\n\"Picking at your nails like that is also a bad habit that we will have to correct,\" he said sharply, immediately making her pull her hands behind her back. Genesis smiled at her automatic obedience, as he buzzed the nurse. His talk with Dominic, while illuminating, had sickened him as well. He might be a harsh and demanding bastard at times, but he was a kitten compared to what Remy had dished out to her. \n\nSince Kairos' visit he had given her little respite, constantly touching and talking to her about being her new owner, and his expectations of her. He was becoming more adept at using her trigger words and knew that he would have to look into that further and try to change them to something more suitable. He also knew that it would take time and that there would be lapses on her part, but he needed to prove that he could do this, especially to Vivienne. She had great research knowledge, but she seemed totally unprepared for the Master-slave dynamic that this girl needed to feel secure right now. He needed to continue to push his own agenda on Serena if he wanted her to accept him beyond this first, intensive, few hours.",
        "\"You buzzed?\" A matronly-looking nurse that Genesis hadn't seen before entered the room with the softly spoken question.\n\n\"I would like you to disconnect this while I bathe her and dress her appropriately,\" Genesis said in a tone that brooked no argument as he pointed to her intravenous line.\n\n\"Of course, sir,\" she smiled softly and moved toward Serena. \"I know you don't like to be touched, sweet girl, but I need to hold your arm to do as Mr Zenati has asked,\" the nurse said in a kind but authoritative voice to Serena, who eyed her warily. \"We do want to make him happy, don't we, sweet girl?\" she soothed as she picked up Serena's arm. \n\nSerena put up no resistance after the rebuke she had just received, that Genesis was not happy with her at all. She wanted to make him happy. Remy would expect her to make him happy, wouldn't he? Remy was still alive though, and there was still a chance he could wake. Would he be unhappy if she hadn't pleased Genesis? Her thoughts whirled in her brain as she meekly allowed the nurse to hold her arm.\n\nGenesis hid his surprise and mentally thanked his cousins for ensuring that the nurse assigned to this room understood the dynamics involved between him and Serena. He watched as the nurse moved swiftly and disconnected the intravenous drip, leaving the cannula in her arm and securing a temporary gauze bandage around the site to protect it. \n\n\"Will there be anything else, sir?\" she asked. \n\n\"No, I can manage from here, thank you,\" Genesis said. \"If you could ensure that nobody interrupts us until we are done.\"\n\n\"Of course, sir. I will see to it,\" she said in the same soft tone and left quietly. Once he was done and his girl was safely tucked in and asleep , he determined that he would see about keeping that nurse close by. It seemed that it was the first time in days that he wasn't second-guessed about his actions or feelings for Serena's welfare.\n\nHe bent and picked her up easily, surprised at how light she was, and scooped up the handles of the overnight bag in the hand that rested under her legs. She squealed and wrapped her arms around his neck. Pulling her close to his chest, he walked toward the bathroom, determined to do what needed to be done even though he would prefer a different time and different setting to explore this girl's body for the first time.\n\n\"Can you stand unassisted?\" he asked as he walked to the bathroom.\n\n\"I don't know,\" she said into his chest. She hadn't been allowed to move from the bed, and she'd had to use a bedpan for toileting, which she hated. Perhaps this man would let her use the toilet while he had her out of bed.\n\n\"Try, sweet girl. I will not let you fall,\" he instructed and lowered her feet to the floor while supporting her upper body. She grimaced but did not complain as he allowed her to take her weight slowly from him. \"Your wound is like a deep cut along your side, running from your hip here in a jagged line up to here.\" He ran his finger over the wound dressing in a diagonal line from her hip to under her rib cage. \"Do not twist your body or bend too far to the side or you will risk damaging the wound further. Do you understand, little one?\"\n\n\"Yes, Genesis,\" she whispered, feeling the stitches in her side pull against the dressing as she put more and more weight on her feet. \"May I use the toilet, please? I have not been allowed since coming to this place.\"\n\n\"You may,\" he granted easily and picked her up again, walking the two small steps and depositing her on the toilet before turning back to the sink and bench and preparing what he would need to bathe her. He silently thanked his sister's thoughtfulness as he took the large soft sea sponge from the smaller bag that he found within the overnight bag and began to run warm water into the sink, adding a small amount of the fragrant liquid soap.\n\nSerena felt immediate relief. She had not wanted to use a bedpan in front of Genesis, and he had not left her alone since she had been told that she belonged to him now. She watched as he moved with confidence, and though he stood only a step away, he constantly checked on her over his shoulder to ensure her safety. She finished, and not wanting to twist her body to flush, she waited and watched Genesis for another moment.\n\n\"Could you help me stand, please? I can't reach the button without twisting,\" she asked quietly, the flush of embarrassment colouring her cheeks.\n\n\"Good girl,\" he praised her and moved toward her, picking her up and taking her back to the basin after flushing for her. \"If you need to see me you can look in the mirror from this position. There is no need to twist. Once I have removed the gown, you can hold the bench to steady yourself if you need support while I see just how damaged my new treasure is,\" he instructed. He undid the ties at the back of her gown and slipped it from her shoulders. The small bandages on her left breast and left wrist and the larger bandage of her left side hid her obvious wounds. He gently swept her hair across her shoulders to fall down her front over the damaged breast as he began a slow inspection of her back.\n\nSerena shivered as she felt his fingers trail over her neck and shoulders, then slowly trail down her back, touching every inch of her. She widened her stance, feeling her need and the ache in her belly grow as he squatted behind her and inspected her ass closely, parting the cheeks and running his fingers over the dark star there. Then he made his way down her legs and picked up each foot to inspect the soles of her feet. Satisfied, he bathed her back, ass and legs and gently patted her skin dry. \n\nGenesis stood and turned Serena toward him, noting her ragged breathing as she submitted to his inspection. She certainly was needy, and he wondered if the ache she felt was artificial and would be dispelled from her body given time. He certainly wouldn't mind having such a needy partner to play with, but he was concerned that the need caused her physical discomfort.\n\n\"The ache is becoming worse, little slut?\" he asked in a husky voice and cursed himself as he tried to swallow down his own arousal. Serena was truly beautiful, and he desired her in every way. But he had spoken to the doctors, and her major wound was deep and long, needing more time to heal before risking it with any physicality from him. He could perhaps ease her ache if he was soft, gentle and warned her of her movements, as well as safeguarding and supporting her himself. \n\n\"Yes, Genesis. I need to... cum, please,\" her voice became edged with desperation.\n\n\"There can be no painful pleasure for you this time, and I will not use you the way I wish until you have healed further,\" he began, and seeing her face fall he continued. \"However, during my inspection and bathing of you, if you are able to climax, I will not punish you. You will tell me if you feel the need overwhelm you so that I can make sure no damage comes from it. You will not, however, touch yourself. That is forbidden, as you know,\" he warned.\n\n\"Yes, Genesis. Thank you, Genesis,\" she said eagerly. \"I will tell you what I am feeling. I will be good, I promise. I will not damage your property any further.\"\n\nHe groaned inwardly. A precious possession, he could deal with, even a treasure, but he refused to call her property regardless of what Remy had done. Sweeping her hair back over her shoulder, he began his inspection with her face, his fingers gliding over her features as if reading braille there. He followed the slow progression with a kiss to her forehead, her nose and a brush of her lips. As he once again lowered himself to complete his close inspection of her body, he kissed the one exposed nipple. He was shocked at the number of deep bruises that still showed even after several days in the hospital. Remy had obviously enjoyed torturing her breasts more than any other part of her body, except perhaps her mind. Seeing her breath quicken as he inspected her breasts, he moved on, and his hands trailed down her rib cage and over her belly. He didn't want to be the cause of any further harm tonight.\n\n\"You must try to stay calm. Breathe deeply,\" Genesis commanded as he spread her thighs and saw her glistening lips telling of her escalating arousal and need. Concerned that she might arch or twist beyond what was safe, he lifted her to sit on the bench and guided her to lean back against the mirror as he inspected her pussy. \"Breathe, little slut,\" he murmured as his hands stroked down her body once again and his eyes fell on the small patch of short pubic hair and the glistening lips below it. His too-tight jeans made him groan involuntarily at the sight.\n\nSerena felt her insides melt. She liked the soft touch. When he had pushed her too far and she needed to rest, Remy would touch her softly and ensure she had what she craved. Not all of their lovemaking was bound to painful pleasures, although the frequency and need for those softer touches had escalated over time, as had his harsh treatment of her that caused the damage. She hoped Genesis did not have a room like the industrial room at Hermione's. The thought of the last time she was there and had been pushed beyond anything she thought she could endure sent her arousal higher, with the feel of his hands skimming over her thighs. A single finger parted her lips, stroking her clit, and she gasped.\n\n\"Oh God, I need...\" she gasped. \"I want...\"\n\nGenesis watched her thighs shake with her impending climax. He had given her permission already. She needed no further instruction from him. He continued to stroke his finger between her folds, wondering if asking her to tell him when she was close had made her seek his permission again, or if Remy had played cruel games with his permissions.\n\n\"Oh God, please, please, can I cum,\" she gasped. \"Please my lo...\" \n\n\"Yes. Cum for me, little slut. Cum for me, I will be your love.\" He thrust two fingers into her, and her eyes flew open; then she whined in a high pitched keen. He ran his free hand around her waist, holding her in a stable position, as she came on his fingers, his thumb brushing her clit, prolonging the orgasm. It was hardly the soft, gentle climax that he had thought to give her, but her words had made him want to take advantage of the opportunity to claim her pleasure as his own.\n\nSerena felt the pain in her side flair, adding to her climax, and then he was there, holding her steady and supporting her as delicious waves rolled through her. She heard his words. Could it be true? Could she love him the way she had Remy? She belonged to him now, and he wanted her to use the words. Could she? Would she? She lifted her eyes to his as he petted her hair and instructed her to breathe deeply. She couldn't say the words he wanted. Remy was her love, and he was alive.\n\n\"How do you feel?\" Genesis asked once again, hating that his voice was so husky with desire for her. \n\n\"Thank you,\" she whispered. \"I feel good now. Much better than before. Thank you very much.\"\n\n\"I am your love now. Remy is gone. You must remember that and not baulk at using those words. I have used all of the endearments that you expect from the one who loves you and will care for you, haven't I?\" Genesis asked with an edge to his husky voice.\n\n\"Yes, Genesis,\" she said. He frowned at her, but she couldn't say the words to him. Not when Remy still lived. Remy was her love. The love of her life, and she was here with this man. Tears stung her eyes as he began to bathe her again.\n\n\"I understand that it is hard to say goodbye to the people we love. I will give you some leeway today. Tomorrow, however, you will belong to me body and soul, and I will expect you to treat me with the same respect and love that you showed Remy,\" he said, wondering if he had pushed her too hard but pleased to see her react emotionally rather than just fight what was happening to her and shut down. That meant she was thinking and processing the situation at the very least. He was pleased by that.\n\n\"Yes, Genesis,\" she said, sadly dropping her head. He noted her fingers twitching as she sat and allowed him to finish bathing her.\n\n\"If you are a good girl and complete the tasks that I have set for you this evening, I will help you ease the ache again before you sleep, now that you have shown me that you can be trusted not to put strain on your wound,\" he said, making her look up at him again with her teary eyes. \n\n\"I have to say goodbye?\" she asked, her lip trembling.\n\n\"Yes, you must say goodbye because, if you don't do it tonight, you may not have another opportunity if there are complications and he dies,\" Genesis explained. \"You must also eat again before you sleep tonight. If you can continue to eat and drink what I provide then the doctors will remove this cannula and drip.\" He touched her bandaged arm.\n\nGenesis looked at her as she said nothing and a fat tear rolled down her cheek. Maybe the brainwashing wasn't as complete as they all thought. Maybe she allowed Remington to have complete power over her life, and had been frightened of the consequences of breaking his rules and the alternatives of not being with him if he chose to set her free. Genesis would still carry on as he planned, but he reconsidered the rules that he would give her to test his new theory. Was her life as Olivia Gambaro truly so bad that she would let herself be tortured rather than ask for help from her family?\n\n*****\n\nVivienne was furious. How dare Gideon call her a bully and tell her that she had no right to be here when she had tried, really tried to act conciliatory, so that she could remain as a consultant on the girl's case? She would just pull her weight at the hospital. She was a leading expert on psychological trauma, and they should be grateful that she was here at all, not threatening her and giving her ultimatums. How dare that man send her home to bed like a child?\n\n\"Order me a cab,\" she barked at the ma\u00eetre d' as she got to the front of the restaurant. \"It's an emergency! I'm a doctor, and I need to get to the hospital.\" She spun to see Gideon walking toward her, shaking his head in the negative while speaking on his phone.\n\nShit! She was at a family restaurant. That shouldn't surprise her. That's how her brothers worked as well. Always keeping the home ground advantage. Fine, he could take her back to the hotel, she seethed. Then she would get a cab to the hospital. She wasn't about to let him tell her what to do. She was Vivienne Papillo, goddammit, and that meant something in the medical and psychiatric world.\n\n\"I will take you back to your hotel,\" Gideon said with his usual cheery voice but his eyes were hard and cold, rather than their usual warm, dancing brown. He guided her to his car in steely silence and opened her door for her, then he went around and slid into the driver's seat.\n\n\"You still there?\" Gideon asked loudly after starting the engine and being sure that his phone had synced up. \n\n\"Vivienne?\" the voice asked, and the red fury that had driven her for the last few minutes abated. \"You don't think that I have enough on my plate right now without you overstepping your bounds with another Table? Listen to me carefully. You were in that hospital to help the Vitali. You were asked to advise Genesis purely because of proximity. They didn't request you personally. You have no rights in this case. The girl is not your patient. Let it go,\" Leighton Papillo sighed. \"If you interfere with Genesis Zenati or his brothers and the girl they are caring for in any way, then I will have Trent pick you up and taken to the Battaglia for a retrial. Do I make myself clear?\"\n\n\"You can't do that, Leighton! You have no right!\" she spluttered. \n\n\"Every Table in this country is on high alert. You think I want to be dealing with your tantrum? Do you seriously think that the rules of our family and the other families don't apply to you? Fuck, Viv, tell me you didn't challenge the Zenati's authority there, in their home,\" he sighed with disappointment.\n\n\"He was sending me home to bed like a naughty child!\" Vivienne exclaimed. \"I was trying to play nice, but he just wouldn't listen. I'm the expert here. They need me, not the other way around.\" She tried to reason with her brother.\n\n\"Pete Donati has hands-on expertise in this field, so does Nero Battaglia. Both men would be there at a simple request from Genesis. They don't need you. You were convenient, and now you have been rude and dismissive of their traditions and values. Now, instead of accepting that Gideon knows best in this situation, you have refused to go home to rest and go back to the hospital in the morning to speak to Genesis. You pushed your own agenda. Now I think it's best that you come home. I will send someone else to care for the Vitali leaders.\" He sighed again.\n\n\"You can't be serious!\" Vivienne was horrified.\n\n\"I am, and I have already told you that I will send Trent, if you don't do what I ask now,\" Leighton said sternly. \"Gideon, man, I'm sorry. She gets invested in cases and takes over, but she was at the hospital when Theresa Vitali was airlifted, and she went with them without checking with either the Vitali or us. If she doesn't stay put tonight, put her on an aeroplane in the morning and let me know.\"\n\n\"No worries. Now that she's been reminded whose city she is currently in we may be able to work something out,\" Gideon said. \"Sorry to call like this. How's Lydia doing? I can't imagine how she must be feeling, having witnessed all of that shit at the airport.\"\n\n\"She's strong, like all the Mothers. She and Cat were inseparable until they took her back to Melbourne. She's amazing, you know,\" Leighton chuckled.\n\n\"Yeah, I know. You got lucky there. You're still a loser though, no matter how good your wife makes you look,\" Gideon chuckled and ended the call. \"Did you know we went to school together?\" He glanced at Vivienne who gave him a scathing look. \"Look, you can't just come into someone else's house and start ordering them around. That girl is Genesis' house, and he allowed you to visit, not move in and start restyling. If you want to stay, I would think very carefully about what you do next,\" he advised, pulling into the hotel valet parking area. \"I'm not above putting you on a plane in the morning if you cause my brother one moment of grief.\"\n\nVivienne said nothing as she stepped out of the car. She had never felt more humiliated, and she was furious that Gideon had done this to her. She walked off with her head held high, and Gideon stayed long enough to watch her disappear into the lift foyer before he headed back to the hospital, swearing at the delay she had caused.\n\nConsidering her options as she rode the elevator up to her room, Vivienne let out a torrent of curse words and felt no better. She felt humiliated by being chastised like an errant child. She wasn't throwing a tantrum; she was making a stand. She was the expert here at this moment. Yes, there were more qualified people with more hands-on experience, but they had their own families to look after in the wake of the attacks on the Tables. Genesis was a reporter, not a doctor. How could he possibly help that girl better than she could? She shook her head and went to the mini bar. She knew she was right. Why couldn't they see that she was doing what was best for the patient. \n\nVivienne brooded through her first glass of wine, hating that Leighton had pulled the Family Chair card on her instead of just being her brother. She was pouring a second glass of wine when her phone buzzed with a text from Gideon.\n\n\"Finally!\" she said out loud, thinking he and Genesis had come to their senses and decided they needed her. She put the wine down and opened the message and stared unbelievingly at the photo attachment. Serena sat up in her bed eating a small plate of risotto. It wasn't the food that startled Vivienne but rather the girl herself. Her hair had been brushed and styled into a low clip that held her hair over her left shoulder. She wore a soft, silky-looking chemise in green, and her expression was more relaxed than she had ever seen it. ",
        "\"Fuck!\" Vivienne swore and went to pour another glass of wine. He had been right again. While she had left and gone about her business with the Vitali this afternoon, and dinner this evening, Genesis had continued to help Serena. He had ensured that she was clean and comfortable and well-fed. The necessities of life that she would need to be able to heal, including feeling safe with the people who were looking after her. When she'd last seen the girl early this afternoon, she had looked terrified and was barely interacting with even the hospital staff who, every patient should know, were there to look after them. Yet Genesis had accomplished this transformation in less than a day.\n\n\"God, as if I don't feel shitty enough,\" she thought and collapsed into a chair, staring at her phone. It was only then that she noticed the words typed below the picture. \"Genesis has some information he wants to discuss tomorrow if you are willing. He believes your initial prognosis might be flawed,\" she read. \"Fuck! Could this get any worse?\" she asked the emptiness of her room and drank deeply from her glass.\n\nShe needed to go home. She was in control at home. No one questioned her credentials or authority at home. She didn't meet passionate and forthright people like Genesis and Gideon at home. Life was boring at home. She didn't want to go home even though she could see now that she needed to, if only to save face from having to admit to Gideon that he was right, once again.\n\n*****\n\nGenesis wheeled Serena into the room where the body of Remington Royce lay. The doctor had explained the man's injuries and that his brain had been starved of oxygen and blood for too long as he was rushed to the hospital for life-saving surgery. She sat unmoving throughout the explanation, her engagement ring clasped in her left hand. Genesis said nothing but remained beside her with a hand on her shoulder as she listened. He could feel the tell-tale shudders as Remy's injuries were described that told him that despite her blank stare, she was taking in what was being said.\n\nBeatrice Schwann, who Serena had known as Aunty Bea, had signed the paperwork required to cease the life-saving measures, but had declined to attend the hospital to see either Remington or Serena, while under guard. She had relented and signed the paper after a similar conversation to the one Serena had just endured. He wouldn't tell Serena that the woman she knew and trusted had refused to see her. It was enough that she knew that Bea had signed the paperwork to turn off the machines. Genesis wheeled her closer to the bed.\n\n\"I'm going to leave you to say goodbye,\" Genesis said, gently placing a hand on her shoulder. \"I will be close by. All you need to do is say my name and I will return to you. You are safe here, sweet girl. I will protect you and keep you safe, little one.\" He withdrew his hand and stepped backwards, watching her intently. \n\nSerena said nothing but felt the almost painful loss of Genesis' touch again. She needed that connection, she realised. His touch grounded her and soothed her anxiety. She had nowhere to go, no one else who loved her now. No one else wanted her except the man Remy had chosen to look after her. Even in death, Remy was still taking care of her. She looked at the man whom she had loved completely lying so still on the bed and attached to several machines that worked noisily to sustain his life. It was cruel to keep him here with his strength and powerful persona gone. She reached out and touched his hand. It was warm but lifeless. The fingers hung down as she lifted his hand, and she felt real grief and fear twist in her gut. He was gone, and now she had to make another man happy so that he would look after her and keep her safe. A man she had seemed to constantly disappoint so far.\n\nThe alternatives didn't bear thinking about for Serena, but she sat quietly holding Remy's hand as tears ran down her cheeks. Without him, she was nothing. She was that weak, stupid little girl, living day to day on a run-down little boat and working in the worst of places for a lecherous boss. She was the discarded and irredeemable daughter and sister from a great and powerful family that she had turned her back on and betrayed. She couldn't, and she wouldn't, face them again. The shame and guilt would be far too much to bear No, Olivia Gambaro was dead, and now she would be whoever Genesis needed her to be to survive. She sighed heavily and pulled her hand away from the dying man who had failed, not only to protect her, but to protect himself.\n\n\"When will they do it?\" Serena asked out loud, knowing Genesis was close enough to hear her.\n\n\"As soon as you have said goodbye,\" Genesis answered, stepping forward to place a comforting hand on her shoulder.\n\n\"Can I stay while they do it?\" she asked. in a choked voice. \n\n\"Are you sure that is what you want, sweet girl?\" Genesis asked.\n\n\"I need to know that there is not even the smallest chance that he will recover before I accept anything else from you. I need to know he won't come back to punish me for breaking all his rules by leaving me for a truly perfect woman, one who wouldn't betray him the way I have today,\" she let out a sob and blinked another fat tear onto her cheek. \n\n\"If that is what you need, then I will provide it,\" Genesis said, his concern for her over-riding his initial belief that she wouldn't be able to handle seeing Remy's death first hand. \"I will be the one to ensure that you get what you need and want now.\" He nodded over his shoulder at Gideon, and his brother went in search of the doctor to carry out the cessation of the life-saving measures that had been undertaken for Remington Royce.\n\nThe whole process took less than half an hour, and as the doctor called the time of death Serena let out a shuddering breath and gripped Genesis' hand hard, as if to draw strength from him rather than fall apart. He watched her from his position beside her and saw the tension and relief war within her posture.\n\n\"He's gone now, little one. My brothers and I will make the funeral arrangements for him, if you like,\" he offered. To his knowledge, all of Remington's friends and family had been arrested, and there would be no one to mourn him, but if it gave Serena closure then he would do it gladly. \n\n\"No,\" she said softly. She couldn't face Kairos, Aunty Bea or anyone from her life with Remy now. Not without his love and protection. Not with this new man who would take the love she held for Remy as his own now. Those people were never her friends or family anyway; they were his and she had been told to treat them as if they were invisible. She was all alone now, just as she had been when she had run into Remy's arms that fateful night. She turned to look at Genesis. She was his now, and she had to trust him. Remy would have wanted her to trust him, and she didn't want to be all alone again and struggling to live each day. \n\n\"You don't want a funeral for him?\" Genesis asked, taken aback by the single softly-uttered word.\n\n\"Others will do that. He was respected and loved by many, not just me. I don't belong to him anymore,\" she said as if this made perfect sense. \"When can we leave the hospital?\" she asked, looking up at him. \n\n\"I haven't decided yet. I will need to speak to your doctors again tomorrow, and there are still a few tasks that I need you to perform for me,\" he said, covering his shock at her words with an authoritative tone. \"I will take you back to your room so that you can sleep. It is late, and you have had an emotional day.\"\n\n\"You said that if I was good that you would ease the ache again,\" she practically whispered.\n\n\"Yes, I did,\" he agreed and began to wheel her back to her room without committing to whether he would follow through on his offer to let her climax again before she slept. Once again, he marvelled at how needy she was, that she would ask for this after watching the man she loved die. He wondered at what sort of drugs Remy had used on her that had left this sort of side-effect in their wake. \"Give me half an hour to get her ready for bed,\" Genesis told Gideon as he passed through the doorway. \"Then we can talk about what just happened. Can you leave a message for Noah to come to meet us in the morning and possibly bring something decent for breakfast with him?\"\n\n\"I have something that I need to do first up, but I'll let Noah know,\" Gideon responded, falling into step beside Genesis. \"Just buzz me when you have got the little Pixie all tucked into bed with visions of sugar plums dancing in her head.\"\n\n\"Will do. Thanks, Gideon,\" Genesis said seriously and gave his brother a wan smile.\n\n\"You'll do it for me when I find my curse breaker,\" Gideon chuckled and moved on toward the waiting room on that floor while Genesis took Serena back to her room.\n\n\"Do you need to go to the bathroom while you are out of bed?\" Genesis asked Serena as they entered her room.\n\n\"Yes, please,\" she agreed easily. Knowing that this was a possibility all the time was more than a relief for her, now that she was eating and drinking what Genesis asked of her. She wrapped her arms around his neck and curled against his chest, feeling his muscles bunch as he lifted her from the chair and carried her into the bathroom. He didn't leave her alone, rather sitting her on the toilet, returning to lock the door and then standing at the sink until she told him she was finished.\n\nGenesis picked her up once she was done and helped her to stand at the wash basin as she washed her hands and face, then brushed her teeth, after his gentle command to go through the regular bedtime routine. Then he sat her up on the bench again and stepped between her legs. His left hand stroked over her cheek and neck before wrapping around her nape, gathering her hair between his fingers to tug, not so gently, tilting her face up to his to kiss her.\n\n\"You do not need to remind me of my duty to meet your needs, little slut. That is another transgression you will pay for once you are healed,\" Genesis growled softly. The fingers of his right hand tickled over Serena's neck to her right breast, noting the hardening nipple poking at the silky fabric covering it. \"You will learn very quickly that I can be just as harsh as Remy obviously was when you deserve it,\" he continued to growl and pinched the nipple, disliking that the other one was still covered by a bandage. \"Your body, however, needs time to heal. I won't damage it further to teach you a lesson just yet, but do not think me weak or unwilling to do so.\" He punctuated his words by twisting the nipple and swallowing her whimper of pain with his kiss. \"I know and understand what you need. You must trust me to do what is right for you, not what you believe I should do.\"\n\n\"Yes, Genesis,\" she whined as his fingers finally released her nipple to trail down over her rib cage and undamaged hip. \n\n\"You were a very good girl up until that point, however, so I will give you the respite from the ache that plagues your body and thoughts.\" He pushed the hem of the chemise up her legs, baring the flimsy lace panties. \"You cannot twist or flex too much. If you do, there is the risk of further damage to the wound on your side, so I will need to support you. Keep your eyes on mine at all times,\" he instructed, removing his hand from her neck and hair and lowering it to curl around her waist and hold her in place. The fingers of his other hand pushed aside the lace covering her pussy and stroked into her slit, finding her already wet and warm as he had expected. His fingers glided easily over her clit, making her breath quicken and her body stiffen in his arms. His finger slipped into her easily, and keeping his thumb on her clit, he fucked her with first one, then two fingers, feeling each tremble run through her body as he held her in place.\n\n\"Oh God, I need...\" she gasped. \"I want...\" Her eyes closed momentarily, making him growl at her until they popped open again. \"Oh God, please, please, can I cum?\" she gasped. \"Please, Genesis!\" \n\n\"Yes, my needy little slut. Cum for me and only for me from now on.\" he ordered and continued to fuck her with his fingers as the first spasm rocked her body, leaving her gasping and whining in pleasure, tinged with the pain from her wounds, as he held her. \"You're mine,\" he growled. \"You will only cum for me now. You are still forbidden from touching yourself, and if you need help to follow that rule, you will ask me,\" he growled softly bending to kiss her again. Withdrawing his fingers as she calmed down from the small high, he offered them to her to clean and watched avidly as she licked and sucked on them. \n\nHe cleaned her gently before picking her up and taking her back to her bed. The nurse he had approved of earlier that evening had returned and waited patiently with the medication to help Serena sleep as well as the muscle relaxant. She reattached the drip and left the room without saying more than the few words she had used to explain the medication that Serena was being given and to settle the girl before she touched her arm.\n\n\"Sleep now, my sweet girl. You have made me very happy today, despite the occasional misdemeanour,\" he said as he leaned over to kiss her softly.\n\n\"Thank you, Genesis. Good night my lo... ve...\" She drew out the word, testing its sound and value. It was too early, perhaps, to say such things, but Remy was dead now. The love of her life was gone, and she needed to trust that Remy would only have given her to someone that he respected enough to let her love him in his place.\n\n\"It will become easier,\" Genesis soothed, stroking her hair and smiling down on her. \"You make me very happy. Sleep now.\"\n\nHe continued to stroke her hair as the medication took effect. Content that she would sleep through almost anything now, he buzzed his brother and wasn't surprised when Dominic walked in with him to discuss his own plans about what was happening in the family now.\n\n\"I wasn't able to speak to Nathanael, but he is recovering well from the wounds he received protecting the new Mother of the Gambaro. So I spoke with his father briefly. Olivia's family are second cousins to the Table one or two generations removed, I believe. Her father is a hard-ass for the old laws and traditions, so he wiped his hands of her when she left. Those that kept an eye on her believed her dead. The man she left home with filed a missing person report just over a year ago, claiming that she and the little boat sailed out into a storm and hadn't been seen since. They buried her or at least an empty casket with her name on it.\" Dominic explained all the extra information that he had gathered about the family of Olivia Gambaro. \n\n\"I see, and the sister who is arriving tomorrow?\" Genesis asked. \n\n\"She asked permission to be the one to come. The men of the Table never really knew Olivia well and this sister, Marcella Gambaro, was apparently close to Olivia before she left. She's a lawyer, a good one apparently. Her father refused to pay for her to go through university, claiming it was a waste of time and money when she was pretty enough to marry into a Table,\" Dominic chuckled. \"So, she put herself through university on student loans and part-time jobs.\"\n\n\"Other siblings?\" Genesis asked even though he knew this information from the small amount of snooping that he'd been able to do in the last two days.\n\n\"Two brothers, both professional and succeeding in their chosen fields, and a sister who married into the Farnese Table. Both Marcella and Olivia bucked the traditional roles set out for them, it seems,\" Dominic nodded. \"I don't think Marcella will be a problem with letting you care for her sister. Somehow, I don't think her father will welcome her back with open arms.\"\n\n\"We'll see, but forewarned is forearmed,\" he gave a half smile. \"What is wrong with you?\" he asked Gideon irritably, noting his grimace and continual rubbing of his tummy.\n\n\"Bellyache,\" Gideon grimaced, putting his phone away and taking his hand from his stomach. \"Musta been something I ate at lunch. It's been twisting and turning since then.\"\n\n\"What's her name?\" Dominic asked. \"The woman you had lunch with?\"\n\n\"I didn't. I ate on the run and brought food here for the little Pixie,\" he indicated the woman in the bed in front of them.\n\n\"Yeah, well, who did you get the food from or meet here when the belly ache started?\" Dominic chuckled and winked at Genesis.\n\n\"Oh no. You aren't pulling the curse breaker stuff on me, Dom. Besides, I haven't had any heart attacks today and don't plan to start now. He's the one with the curse breaker, not me,\" Gideon said adamantly.\n\n\"Maybe you went out in sympathy for him. You are oddly close for brothers,\" he chuckled.\n\n\"Her name's Vivienne, and he was in lust at first sight. She agreed to a pity date with him, and he didn't even have to beg,\" Genesis chuckled. \"How was the dinner tonight, Gideon?\"\n\n\"It's not like that. I doubt Vivienne will even talk to me tomorrow, after I gave her a few home truths,\" he grimaced. \"Like I said, my heart is safe. I just feel a bit queasy, that's all. No pain, no knife twisting in my gut. You two are way off base.\"\n\n\"I don't think so, but you believe what you want,\" Dominic shrugged. \"You can't fight fate when she has you in her sights.\"\n\n\"I believe that I said similar words yesterday to you and Papa,\" Genesis said teasingly. \"Yet I'm supposed to accept there is a curse, and you get to brush it off as nothing?\"\n\n\"You went and saw Helena because you thought you had a heart attack. Geez, Gen. You had us all worried that you were going to die just because you found your curse breaker,\" Gideon grumbled. \"You have no idea how much I want to find mine, but she's just not out there.\"\n\n\"Your belly begs to differ. Maybe you should listen to it, if you won't listen to me. You do remember I am the next Oracle, right?\" Dominic chuckled. He liked the title and liked it even better when people trusted his instincts.\n\n\"I plan to see her in the morning and apologise for being so harsh with her tonight. If she forgives me, I will consider what you are saying might be true. She's pretty hot, so I wouldn't be upset if she is the one meant for me,\" Gideon grinned widely.\n\n\"I get the feeling that Noah is about to find his curse breaker too. Do you three ever do anything alone, anymore?\" Dominic shook his head. \"You should have been born triplets, then you could have had all the childhood milestones together as well.\"\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "recovery",
        "family",
        "arguements",
        "tantrums",
        "ptsd",
        "dominant/submissive",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-03"
}