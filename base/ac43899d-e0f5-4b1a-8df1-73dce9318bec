{
    "title": "Hunting the Hunter Ch. 04",
    "pages": [
        "Thanks for your patience. I really do hope you enjoy this installment.\n\nyours, enithermon.\n\n***\n\nSilence. \n\nIt filled every crack of the dense, pine scented woods which cut a swath of grey green across the treacherous terrain of northern Cyrodiil. Filled it near to bursting. No sign of life, no wolves, no squirrels, no birds...even the wind which usually rattled through these cliffs was apparently on vacation, leaving the air heavy and still. \n\nSilence. Some people worshiped it, some people were afraid of it. Inanna was just plain old sick and tired of it. They were half way to Chorrol and she could still count the number of words spoken between them on her fingers. The fingers of one hand no less. Pathetic.\n\n\"Ok, this is getting old fast.\"\n\n\"Tell me about it.\"\n\nShe turned back to look at him, startled by the response. So far he'd stuck to his lion, aka 'I don't want to talk about it,' form. She stopped and pulled her pack off, fishing out his clothes for him before tossing them at him indecorously. \n\n\"I am telling you.\"\n\nHe looked at her, his face calm and stoic and unreadable. \n\n\"Nice poker face...remind me never to play with you.\" She re-tied her bag and slung it back over her shoulder, and waited just long enough for him to get his sandals done up before moving again, intentionally veering their path and taking them down the hard way over a series of high mossy boulders. They were kind of pretty with the waterfall of moss cascading over them and little rock flowers blooming around them, but they looked tricky as hell to get down. She tightened her pack straps before hopping quickly down, skipping from boulder to boulder in rapid succession, landing finally in a light crouch in the soft forest floor below. Ha, beat that sucker. She turned around and looked back up at him with a mild smile. She wasn't bitter...no sir, not little ol' her.\n\nHe looked down, looked back to her, then down again at his sandals.\n\n\"You know, this would have been easier if I hadn't changed. You did that on purpose didn't you?\" He grinned, his white toothed smile lighting up his face and making those blazing green eyes dance. It lit hers up too. Dunmer see, Dunmer do, she couldn't help herself, a smile like that is catching...catching and addictive.\n\n\"I admit nothing.\" She put her hands on her hips and cocked them. \"What? You're two feet not good enough to beat mine...you're going to let a girl beat you?\" He narrowed his eyes, but his smile barely faded. \n\nHe arched a brow at her. \"Come now, you know I don't mind being beaten by someone worthy of it, or either sex...\" he smirked deviously, \"but it ain't gonna be you sweet heart.\" She blinked in surprise at that. \n\nShe was still laughing when he landed, admittedly with every bit of ease as she had, in the soft loam beside her. \n\n\"Ha!\" He crowed playfully. She shoved his shoulder. \n\n\"You got lucky.\"\n\n\"I don't need luck.\" \n\nShe rolled her eyes and continued on, picking her way around a few lesser boulders, occasionally letting a branch or two snap back behind her. One finally caught him and she heard him curse softly.\n\n\"You ok back there?\" she asked sweetly. \n\n\"Brat.\" \n\nShe smiled at the trees in front of her. \"What happened to 'sweet heart'?\"\n\n\"It was just payback for that pussy cat crack.\" She chuckled and threw him his hard earned smile over her shoulder. He returned it.\n\n\"Does this mean we're friends again?\" she asked lightly.\n\n\"Were we not before?\"\n\n\"You tell me.\" She cast him another look, this one a touch more arched.\n\nHis gleaming smile dimmed, unfortunately, and he sighed. \"I'd like to think so. I don't want that to change.\"\n\n\"If you tell me this is a 'let's just be friends' speech, I swear I'll gut you.\"\n\n\"Ok. I won't tell you.\"\n\nThwap.\n\n\"You know, pine needles don't taste nearly as good as they look. Just so you know, for future reference.\"\n\nShe could only laugh. And boy did that ever feel good.\n\nThe trees were thinning a little as they approached what appeared to be the Gold Road. She paused to let him catch up, casting her eyes to the sunset hues of the sky. \n\n\"What do you think? Should we keep going and push through, or just call it a day?\" he asked as he skirted a stump to come up next to her.\n\nShe frowned at the setting sun. \"These woods can get pretty dicey, and the terrain is...interesting in the dark.\" He nodded. \n\n\"I think I remember passing an Alyeid well once in this part of the world, does that sound about right to you?\" \n\nShe nodded. That would give them cover and a convenient source of power if things got ugly. \n\n\"You read my mind boss.\" \n\nHe gestured for her to lead the way.\n\n\"So?\"\n\nShe turned back and arched a curious brow at him.\n\n\"So what?\"\n\n\"Do we get to be friends again...even though I'm pissing you off?\"\n\nShe blinked at him a moment then grinned. This delightful creature sure was full of surprises. \n\n\"Only because you just said that.\" She pursed her lips. \"But don't press your luck bucko.\" \n\nHe looked so relieved that she felt she was in instant danger of softening again. It was going to take some work to be a hard ass about this. But she had plans for this pussy cat of hers, and she wasn't going to let a little thing like pity get in her way. Nope, not her. And they were lovely plans too; he was going to be sooooo mad at her for it...but lord was he going to enjoy it while it lasted. She had to resist the urge to cackle manically. \n\n\"I'm not sure how I feel about that expression on your face.\" he gave her an appropriately cautious look. He might be sweet, but he sure wasn't stupid, this one. \n\n\"Oh, nothing to worry about, I assure you.\" He let out a single dry chuckle. \"Why doesn't that reassure me?\" \n\n@@@\n\n\"Hon, baby!\"\n\nThe willowy mer stiffened and turned, one pale brow arching impossibly high over a crystal blue eye, which had narrowed somewhat, matching the sneer which twisted his lips. \n\n\"It's Honditar. How many times must I remind you? You insufferable child.\"\n\nFeric could practically feel the acid seeping out of the Altmer's pores. He was typical Altmer: tall, slender, with gold skin and pale silvery hair and, of course, he oozed condescension. However, as they approached him as he stood idle under the canopy of the great oak which defined the central square, Feric did notice a few unusual traits. At just a few inches over six feet he was actually a little short for an Altmer male, many of which were as tall as seven feet, though equally slender as to make them less imposing. With his mane of silver hair, this mer looked a little wilder and unkempt than was typical as well. That's not saying much of course, Feric still felt like a ruffian next to him, but high elves were renowned for their almost obsessive fastidiousness. He was also wearing the dark greens and browns of a woodsman and a fine elven bow was hanging off one of his shoulders. \n\nHe glanced at his companion who was giving the mer an ear to ear grin, clearly unphased by the less than warm welcome. Not that Feric was terribly surprised by that.\n\n\"Oh don't be that way, luv. You're not still sore about me kicking your shiny gold ass half way across the empire are you?\" The mer's brow arched even higher, though how was a wonder.\n\n\"Gods only know what you're talking about.\" She mimed taking a shot on a bow, aiming the invisible arrow at the rose window decorating the front of the mages guild. \n\n\"I seem to recall you cheating.\" He murmured with a sight sneer.\n\nShe was still grinning. \"All's fair in love and bouncy-bouncy.\" She turned and winked at Feric. \"War too.\" He kept his face placid and his eye rolling to himself. She'd been so quite for so long that it was odd to see her hamming it up for someone again. Still, he couldn't fault the performance. It was tough to tell sometimes what performance was for whose benefit. If he hadn't already seen her turn it off and on with so many others he'd have jumped to some conclusions about her himself. As it was he was just mildly confused.\n\nHonditar let out a sigh and crossed his arms, rolling his eyes in a very un-Altmer like way. \"It was an archery contest, and you jumped the hind with a knife.\"\n\n\"Ah, ah, ahhh, not until after I'd already slowed it down with arrows...I did technically shoot it, eventually.\" The mer turned to Feric and scoffed, gesturing to Ina with an open palm. \n\n\"Incorrigible. Clearly you see what I mean.\" Feric hadn't really realized it but he'd been chuckling to himself and shaking his head at her, easily picturing her leaping from some tree like a feral thing. Hell, he'd already seen it firsthand. Feric gave the Altmer his best smile and held out a hand. The mer took it. \n\n\"Feric, and yes, I'm beginning to feel your pain.\"\n\n\"Honditar. Don't let her suck you into one of her games, and if you do, pay very close attention to the wording of her bets.\"\n\n\"Speaking of which you still owe me money.\" Ina interrupted poking Honditar in the shoulder and earning another glare from him. \n\n\"Ah, is that the reason for this particularly charming visit?\"\n\nFeric watched her eyes go wide in mock innocence. 'Honditar! Is it so shocking that I'd just want to say hello to a good friend?\" The pale brow jumped again.\n\n\"Friend?\"\n\nShe shrugged. \"Honoured acquaintance then.\" Feric watched curiously as her face shifted to something a little more somber, \"I always make time for people who take their archery seriously.\"\n\n\"Ironic, since you don't.\"\n\n\"Hog wash.\" \n\nThe high elf clasped his hands behind his back and began making a circling inspection of Inanna. Feric stepped back to let him pass, and Honditar inclined his head politely in acknowledgment.\n\n\"No bracers, no gloves, Imperial fletching on,\" he paused and drew an arrow from her quiver with delicate fingers, as though he were pulling something unsavoury out of his soup, \"Ye gods, what is this?\"\n\n\"Chitin, that's eons of tradition right there Hon baby.\"\n\n\"Ugh. With glass heads?\"\n\n\"Don't knock it till you try it.\"\n\n\"I'd rather not\"\n\n\"Is that a bad thing?\" Feric asked politely. Both curious and inclined to get on the mer's good side, even if Ina wasn't. The last thing he needed right now was another enemy.\n\nThe mer was still giving the little imp a look of supreme distaste. \n\n\"That depends...would you consider a necromancer sewing a Bosmers head on an Argonian body with Orcish legs a bad thing?\"\n\n\"More like human legs,\" Inanna interjected. \"Let's be accurate in our criticism now.\"\n\n\"More like disturbing, if not horrific.\"\n\n\"Precisely.\"\n\nInanna threw back her head and returned the fair mer's haughty look.\n\n\"I...am an artist!\"\n\n\"You're a hack.\"\n\n\"I could still take you.\" She narrowed her eyes at him and tipped her face up to his. \"I bet those slender Altmer bones of yours would snap like dry twigs.\" He leaned in.\n\n\"I'd like to see you try it with a cranium full of my arrows.\"\n\n\"That a dare?\"\n\n\"Try me.\"\n\nFeric cleared his throat, suddenly concerned that this was getting a little out of hand. They seemed like old acquaintances, but he wasn't sure just how good or bad the blood actually was between them. They both turned towards him. He nodded toward a city guard who'd thankfully chosen to pass by at that moment. Inanna grinned and Honditar gave him a mild smile and straightened.\n\n\"Fear not Feric...I wouldn't do more than take the little twit over my knee. That is how one deals with children is it not?\" \n\nIna stuck her tongue out at him and Feric suppressed a chuckle and the Altmer's lips twitched in an obvious attempt to suppress his own mirth.\n\n\"Honestly though, what brings you to my corner of the province?\" He gestured to a stone bench. The two of them sat, but Feric opted to remain standing and kept an eye out for interested eyes and ears. They were in the guild district so most people were going about their business in a brisk manner, unconcerned by the reunion taking place in front of them. So his job was pretty easy.\n\n\"I'm actually looking for Glistel, but that slippery little minx is never around when I want her.\" \n\n\"What makes you think I know where she is...it's a big town. Other people's business is hardly my concern.\"\n\n\"A little birdie told me you and Glistel have an understanding.\"\n\nThe mer pursed his lips again. \"Next time you see said birdie you should tell him he needs to keep his big Dunmer mouth shut.\"\n\nShe chortled. \"You should know better than telling him anything Hon, he's worse than a Dres courtesan.\" He sighed and his shoulders slumped slightly.\n\n\"Yes, yes he is. S'wit.\" \n\nShe laughed and patted him on the arm. \"You need to stop hanging out with us Dunmer, we're wearing off on you.\"\n\n\"Well, dare I ask what you want the esteemed Lady Glistel for?\"\n\n\"Oh you know...girl stuff.\"\n\n\"Very likely.\"\n\n\"What can I say, it's 'that time of the century'\" she husked out in a loud whisper.\n\n\"Is it indeed? Our little Ina is all grown up is she? How terrifying.\" He paused and looked down his nose at her. \"You know it's often a false start the first time around, so don't be disappointed if it doesn't pan out for you...so to speak.\"\n\n\"Gee thanks dad.\" \n\nHe shrugged.\n\n\"Alright then. I'll get a hold of her for you. The Oak and Crosier at midnight?\"\n\n\"Why there?\"\n\n\"The pretty little Khajiit who runs it makes a superb venison pie. You'll like it. And her too, she's an affable sort of girl.\" Feric could have sworn the mer accentuated the word affable, and raised his own eyebrow at the high elf, who only gave another mild smile in return.\n\nIna just nodded. \"Gottcha.\" \n\nThe mer sighed again and patted her on the knee, an affectionate gesture which surprised Feric, though he kept it to himself.\n\n\"Good to see your head's still attached little girl. Try to keep it that way....Glistel would be put out to lose another gossip, and you know how unbearable she is when she's upset.\"\n\n\"To spare you the inconvenience, I will try.\"\n\n\"Very kind.\" He stood, brushing smooth the non existence wrinkles from his clothes. He bowed slightly to Feric to who nodded back. \n\n\"A pleasure.\"\n\n\"Indeed. Till we meet again.\" The mer gave him a quick glance. \"Nice to see your taste in company is improving with age, Inanna.\" He smiled slightly when Feric let out an involuntary cough. \"Good day to you both.\" He called over his shoulder as he strode leisurely away with a wave.\n\nIna jumped up off the bench. \"Faaaantastic. One down. Let's go find Modryn.\" She sidled up next to him and slipped her arm under his. He obediently accepted it. So much for not touching her, he mused...but then, he had to pick his fights, didn't he? Besides, she felt rather nice pressed up against him, and she smelled like...damn it. For the love of Kyn, why did she have to smell so bloody good all the time.\n\n\"You ok in there big guy?\" \n\nHe cocked his brow at her. \"Pardon?\"\n\nShe motioned to her head with a spinning finger. \"I can see the wheels turning.\"\n\n\"Ah. Yes...I'll live...probably.\" he groused. She chuckled.\n\n\"You're an odd duck, kitty cat.\"\n\n\"Says the insane Imp.\" \n\n\"Admit it, we'd make a cute couple of weirdos together. We can run away and join a circus...be the freak show.\" He suppressed another chuckle.\n\n\"Like you, I admit nothing. Who's Modryn?\" he changed the subject. She narrowed her eyes at him then cleared her expression.\n\n\"He's the little birdie who can't keep his beak shut, and he's our man in the Fighter's guild. He's also why I had to drop in to the book store earlier.\"\n\n\"If he can't keep his mouth shut should we really be talking to him?\" \n\nShe grinned. \"Clever boy. No, he's good about the real stuff, he's just a sucker for a romance. Deep down in that black heart of his, he's really a big softy.\"\n\n\"We need them for this? The fighter's guild?\"\n\n\"Not necessarily, but we're already here, might as well make introductions before things get hairy. He's a good guy, and well respected in the guild. He's even a family friend of the new Guild master and his kin, every member of which is in the guild, even their teeny tiny little sister, who is surprisingly scary in a fight. Big things in small packages, you know? Anyway, there is no one better than Modryn to have next to you in a scrap, he's utterly fearless...well maybe you want him out of sword range if he IS literally next to you, he gets a little wild, but definitely good to have on your side nonetheless. I wouldn't want to fight him, that's for sure.\" \n\nShe had walked them over to a long three story building nearby and led them inside. To the right was an impressive arrangement of weaponry arranged tidily on tables and racks, to the left a huge circular table covered in baskets of bread, fruit, empty bottles of ale, and a large half naked Orc. Ahead was a wide stair case and on it a sight imposing enough to make the arsenal and the drunk Orc look like doilies and kittens.\n\nA Dunmer, at least 6'3, not including the rise of a bluish black Mohawk over an otherwise bare skull, clearly dressed for action in less than polished steel mail, with a claymore strapped to his back and a mace to his hip, was making his way towards them, his blood red eyes flashing furiously. A scowl that could churn the stomach of a hardened soldier plastered to his lean well worn face, a face which bore the signs and marks of many years, and many more battles.\n\n\"Gro-ba!\" He shouted, loud enough to make them both wince as it filled the room and bounced off the walls. \"Get the hell off the table before I rip off your head and piss down your neck, you sniveling, pointy-toothed, guar-herder.\" \n\nAt the sound the sleeping Orc startled awake and rolled indecorously onto the floor. The dark skinned elf clunked down the stairs, his snarling face turning on them. Feric had to fight the urge to turn around and walk right back out. In the corner of his eye he saw Ina catch her bottom lip in her teeth. The Orc stumbled to his feet and trotted past them out the door, his head bent low as if expecting something to come winging by it any second, and giving them a sheepish smile and nod.\n\n\"Raised in a god-damn barn. \" He stopped in front of them and tilted his head, looking down at Ina. \"Ashlander. What do you want from my life now? Skingrad run out of vampires?\" \n\nInanna stepped forward, her face placid and bowed slightly, holding out a folded leather skin in both hands. He lifted the corner and peaked in. Feric knew from seeing her buy the stuff that all it contained was a set of paint brushes. His scowl lessened slightly, though it remained for all intents a nasty unwelcoming expression. He nodded at Feric. \n\n\"Well, you going introduce me woman, or are you just going to stand there gaping like a Nord with a leaky brain pan?\"\n\n\"Serjo Modryn, this is Serjo Feric. Feric, Modryn.\" \n\nSerjo? He'd never heard her call anyone else that yet, it definitely piqued his interest. Feric offered a hand to shake. The Dark elf had a grip like a bear on scooma. It was no wonder she called him Serjo. He was half tempted to check for broken bones. The grim dark elf gave him the old up and down. \n\n\"You looking for work? You look like you might last an hour or two.\" Feric arched a brow at him, but followed Ina's lead and said nothing. The guy wasn't endearing himself very fast, though like Ina said, it was probably better to have this one on your side. He sighed internally, if these were Ina's friends he'd hate to see her enemies, he felt like he was perpetually walking a razor thin line with her, and them. Modryn tilted his head towards the stairs. \n\n\"Head up, show your friend here around, I'll be up in a minute.\"\n\n\"Is the old lady around?\" She asked as she started towards the stairs.\n\n\"What do I look like, a watch dog?\"\n\n\"Kinda. You do bear a passing resemblance to a nix hound.\"\n\nTo his surprise the Dunmer warrior laughed, a low gravelly sound. \"Watch your tongue or I'll watch it for you.\"",
        "She fluttered her lashes over her shoulder. \"Oooh, promise.\"\n\n\"Yeah, I'll cut it out and nail it to my desk for safe keeping. Now get a move on woman.\" He nodded to Feric and strode out the door after the Orc. Ina smiled at him. \"Is Gro-ba ever gonna get it. Modryn swears like a sailor, but he has very particular ideas about proper behaviour. He almost cut my feet of for putting them on his desk once.\"\n\nHe smiled back, not doubting her words. \"How did you talk him out of it?\"\n\n\"I didn't. I'm lucky I can run so fast.\" She shuddered dramatically. She led him up a couple of flights and into a large office, plopping into the chair and waving him into the one next to her. \"I think he likes you though, so that'll help.\"\n\nHe gave her a disbelieving look. \"He said I'd last hour or two, that's hardly encouraging.\"\n\n\"Trust me...that's high praise. He told me he could break me over his big toe when I first met him.\" \n\n\"You're sure this is a good idea?\"\n\nShe rolled her head back and toward him. \"Oh yeah. At least...I'm pretty sure.\"\n\nAh, brother.\n\n\"If it's not you do know that Mirisa will kill us both? Or rather she'll kill me after I kill you.\" She saluted. \"Aye aye boss man.\" She swung her legs up onto the desk in front of her and crossed her ankles. Feric rolled his eyes and leaned forward, pushed her legs off the furniture. \n\n\"Hey!\"\n\nHe gave her a low growl. \"I don't particularly feel like going for a run, thanks. So keep your feet on the floor or I'll hold you down while he removes them.\" She gaped at him like he'd just turned pink and grown gills.\n\n\"Sounds like he's not a total idiot. Funny he's working with you, Ashlander.\" Feric smirked at her. She may not have noticed him sneaking up the stairs, but he did. Her eyes widened then narrowed slightly glittering with sudden awareness, as though she was coming to the sudden realization that two can play at that game. If she wasn't...she should be. She turned her lopsided grin on Modryn.\n\n\"Yeah, but I'm not looking for work, and neither is he.\"\n\nModryn dropped into the big chair behind the desk with a heavy sigh and the noisy clank of armour. Interesting how he had been so quiet coming up the stairs. Full of surprises these Dunmer. He suspected that like Ina, there was far more to this mer than met the eye. \n\n\"Then what are you bugging me for, I've got a ton of jobs and not enough people. We're still dealing with the fallout from all that Blackwood nonsense. First they steal all our jobs, then all our people, and to top it off they go and get themselves blown up by junior. He could have left some of them alive, enough to come crawling back and up our body count at least.\"\n\n\"He's working out of Leyawin these days right?\"\n\n\"Yep. And I'm stuck up here doing all the work. Fetcher.\"\n\n\"I'm sure he'd disagree. \" She grinned again and he shrugged then leaned down and pulled a bottle out from one of the desk drawers along with three absolutely miniature glasses. He filled them and passed them out as he talked.\n\n\"I bet he would, the lunkhead. Not as bad as his brothers mind, but a lunkhead Nord regardless.\"\n\n\"I thought they were half Nords?\"\n\n\"Whatever. The other half is imperial, just as bad.\" He glanced at Feric and took a tiny sip from his glass. \"No offense.\"\n\n\"None taken.\" Feric took an equally small sip from his own glass. He was glad he did. It burned like hell going down. He looked down at it. It was mostly clear with an unwholesome greenish tinge.\n\nModryn raised his glass. \"Good eh? Aged Greef, spiked with black anther.\" Feric glanced at Ina and she shrugged.\n\n\"It's a Vardenfell thing, very popular with those crazy Redoran kids. But hey, whatever doesn't kill you...doesn't kill you.\" She saluted them both with her glass and tipped it back.\n\nThey carried on with a good deal of guild gossip for a few minutes and Feric took a moment to look around. The office was actually quite nice, everything seemed clean and well organized, the furniture was heavy but ornate, and the walls were covered with elaborate hangings, unsurprisingly with primarily combat related imagery. Over all it was an unexpectedly pleasant space, not something one would expect from people who fight for a living. The two of them stopped chatting and placed their empty glasses on the table. Feric dutifully killed his as well and waited with his hands folded in his lap, wondering, and not for the first time, why it was he was letting Ina drag him along. He was beginning to share Mirisa's concern that he really wasn't thinking straight after all. He watched her, wondering if the pull of mating hadn't finally gotten to him and over rode all of his better sense. He knew he wanted her, that was painfully clear, and her perpetual nearness over the last couple of days had only exacerbated that fact, turning uncomfortable urges into excruciating ones. More than once today he'd been forced to tear his eyes from hers, from her mouth, the line of her neck, or the curve of her hips. Even her slender, agile hands drew his admiration. He literally had to force himself to look for faults just to keep himself from pulling her behind the nearest tree or building and having his wicked way with her. The worst part was the knowledge that she'd be more than happy to try turning wicked into something closer to downright depraved. That little bit of information did nothing for his self control. To say the least.\n\nHe swallowed and cracked his neck, attempting and failing to change the course of his thoughts by trying to find the conversation interesting. It really didn't help.\n\nModryn lifted a hand and muttered something inaudible. Feric couldn't tell what he did, but the air changed somehow, felt thicker, quieter. A heavy silence.\n\n\"Ok. Enough small talk. What's all this about. This might be a social call, but I know you like mixing business with pleasure, so get on with it.\" \n\nIna smiled and tilted her head back, as though she were listening to some distant sound. Feric frowned. He could hear nothing, which was disconcerting in itself since he could usually hear a good deal more than most. She nodded, satisfied, and cleared her throat.\n\n\"You want the song and dance, or can I count on you to say yes no matter what?\"\n\n\"Neither, but I lean towards the latter.\" She nodded again.\n\n\"In that case, Feric is part of a rare race of shape shifters who are being killed off by some unknown faction, for unknonwn reasons, and they need friends, badly. So I'm going around giving them my friends.\" If he'd still been drinking he would have spit it out. He had expected a lot of things to come out of her mouth, but the naked truth hadn't been one of them. Modryn seemed unaffected.\n\n\"Why, what's in it for you?\"\n\n\"My good deed for the day.\" They both stared at her. Modryn with suspicion, Feric in shock. She turned to Feric first. She didn't say anything, but the look in her eyes was unmistakable, he could practically hear the unspoken words rattling around in his brain. 'trust me.' \n\nCould he? Or better yet, should he? He knew what he wanted to do, but he wasn't so sure he could trust that anymore. Everyone who knew her seemed to look at her a little askance, if indulgently, why should he be any different?\n\nInanna could see that Feric was not thrilled that she'd just outted him. For a moment she regretted not giving him more time to get to know Modryn, but then, an instant later, she remembered that they didn't have any freaking time. She knew this Dunmer, better than most, and she knew that Modryn was a sure thing, and she'd stake her life on it. Feric was just going to have to trust her and deal. She hoped for his sake, and for hers, that he could. Modryn was still looking at her like she was going to rob him blind...which was really annoying 'cause it sure as hell wasn't going to earn her any points with Feric. Was he trying to mess up her game here? He probably just didn't give a damn.\n\nShe sighed and leaned forward, her elbows on her knees. \"Look, I do have my reasons, and no I'm not trying to screw you over, and yes there might be a something in it for you, including a good fight and possibly good recruits, and yes...I will owe you one, personally...maybe two. Are we good? Are you in?\"\n\nHe leaned back. \"Two?\"\n\n\"Maybe.\"\n\nHe grinned. \"Yeah, alright, let's hear it. What do you need Ashlander?\"\n\n\"Nothing yet, a safe house maybe, just in case. Maybe back up in the future. It'll all be short notice since we're figuring it out as we go along.\" She licked her lips and considered how much she should fill him in on. He was a tough nut, and Dunmer to the core, he always knew when she was screwing with him, or when she was holding back. He was one of the few who hadn't been soften by easy living in the lap of the empire. \"I'm currently in the process of hunting down the culprit, and I don't intend to stop until they're eliminated.\" She shrugged and leaned back, crossing her arms. \"We'll see how that pans out and go from there I guess. I'm also asking you not to take them up on any job offers...\"\n\n\"I see.\"\n\n\"So?\"\n\n\"Two favours.\"\n\n\"Fine...jerk.\"\n\n\"Done.\" He leaned forward and they shook hands, a single solid pump.\n\nShe beamed at him. \"You're the best second cousin twice removed a girl could have.\"\n\nHe rolled his eyes and ignored her, turning to Feric. \"So what's this about shape shifting?\" \n\n**\n\nTo his credit Feric didn't rip her head off when they left the guild hall. Though he had remained rather quite as they sat upstairs in a comfy corner of the inn gradually making the most of a bottle of Surille's finest. A little sweet for her taste, but she still liked it better than Tamika's which was just a smidge too fancy schmancy for her. Honditar had been right about the venison as well. Now that dinner was over and the wine almost gone she found them sitting and waiting for her contact in not quite comfortable silence. He was toying with his glass, watching the table top contemplatively when two lanky figures plopped down beside them. \n\nHonditar and Glistel. Honditar had lost the bow, but that was it. Glistel was also dressed for work, though her clothes consisted of a tight silvery grey blouse and long grey silk skirt which complimented her dark, almost bluish skin and short black hair admirably.\n\n\"While I live and breathe. How are you doing you old dog?\" Glistel punched her in the arm and grinned. She was her usual friendly, in your face, self. She flopped an outstretched hand down on the table top and offered it to Feric to shake. He took it. \"Glistel. Pleasure. What's your deal partner?\"\n\nShe watched him shrug as he withdrew his hand and motioned it toward her. \"Just playing her shadow.\" An almost smirk pulled at his lips. \"And waiting for the other shoe to drop.\" Glistel chortled.\n\n\"Yah, I'll bet. So I've been told you want to chat?\" She asked turning rapidly back to Inanna.\n\n\"Indeed. I've got a project that may require calling in a few favours. I was hoping you might know some people who owe me favours.\"\n\n\"Oh?\" Glistel's eyes twinkled.\n\n\"Yeah, you know...the green rabbit...the purple muskrat, the orange hamster...those guys.\" They all stared at her a moment before Glistel broke into howling gales of laughter. Honditar rolled his eyes and Feric looked confused. Eventually the laughter calmed and Glistel wiped her eyes. Inanna smiled placidly.\n\nGlistel leaned forward on one elbow and pointed a finger at her. \"Listen...I can do you one better.\"\n\n\"What...better than the fuchsia weasel? Impossible!\" Her sarcasm was less than subtle. It was well known by many in 'the guild' that she wasn't too hot on their fearless leader, the infamous 'Grey Fox.' Truth was she couldn't stand the guy. She couldn't quite put her finger on it, but something about him just rubbed her the wrong way. He just wasn't smart enough, clever enough, or interesting enough to be the leader of such an interesting group of smart clever people. It made no sense to her. She couldn't believe for a second that such a dullard of an imperial could have found it in himself to steal anything from a Daedric prince, let alone an artifact of any real power. Ah well, one of life's little mysteries.\n\nGlistel gave her another grin. \"Yeah, tell me about it. The deal is, M has been wanting to talk to you, so if you're needing favours, M's the fella you wanna talk to.\" \n\nInanna leaned back giving Glistel her best 'I know what you're up to' look...even if she didn't. \"Does he now? Should I be worried? This isn't something to do with the blue squirrel is it?\" Glistel rolled her eyes.\n\n\"Jeeze, will you cut that out already, some one'll hear you.\"\n\n\"So?\"\n\n\"So, not everyone shares your feelings on that particular matter. You're not even in the club for Pete's sake, what do you care anyway?'\n\n\"He irritates me.\" She enunciated the three words carefully. \"M should have his job. Or better yet, the A-man should. That guys talents are being wasted playing nanny to all the youngsters.\"\n\n\"Again I ask why you care?\" Inanna shrugged and glanced at the others at the table. Feric was still toying with his glass, feigning interest in it and Honditar was downright ignoring them and waving over the railing at the proprietor with a peculiar hand gesture. She gave him an 'all clear' sort of nod. \n\n\"Honditar...I didn't know you were a club member.\" He cocked a brow at her. \"I'm not.\"\n\n\"Then what's with the secret hand shake?\" He smirked at her. \n\n\"Like you, my dear, I am a free agent, and though I find myself in particular company from time to time, I don't care to be tied down. I still know how to play the game...and the field.\" Glistel shot him a side long glance.\n\n\"Oh really?\"\n\nHis smirked widened. \"Professionally...of course.\" She arched a brow at him and turned back to Inanna.\n\n\"So, are we good to go? You eaten?\" she looked to Feric who nodded. \"Alright then Mr. Shadow, why don't you two walk this way?\" She stood and Honditar rose as well. Inanna and Feric followed suit.\n\n\"Green.\"\n\nGlistel was just turning away and she paused.\n\n\"It's Mr. Green.\" he repeated with a mild smile. Glistel raised a brow and nodded, giving him an appraising look. Inanna felt her stomach tighten a little and she sidled up next to him, slipping her arm under his. Did that mean he wasn't cross with her then? He didn't spare her a glance though, so she couldn't tell for sure.\n\nThey followed them out of the inn at a leisurely pace, looking for all the world like a group of friends strolling home from a late dinner. She squeezed his arm and he glanced down at her. She gave him a questioning glance...the 'you ok type,' and he gave her a small smile and brief nod...the 'for now' type. She was getting the feeling she was starting to tread on thin ice. Well she'd done nothing but right by him so far, hadn't she? He just needed to loosen up and have a little faith. He said he trusted her, and she knew he wasn't BS-ing her about that, but something was up. She could sense the wariness in his body, like a ripple of tension that ran like a current from his body to hers, making her skin twitch in ways she did not like. She wondered if he wasn't in some way afraid of her. That was a weird thought. It felt some how wrong. Terribly wrong.\n\nA guard walked past them as he made his rounds through the church district. He eyed them up carefully, particularly taking note of Glistel, something Inanna could help but catch. That wasn't too good. She must be getting a reputation. Feric leaned in, his mouth against her ear, his lips brushing the sensitive ridge and making her insides tingle. \n\n\"Turn and look at me like I've just said something terribly sweet, and possibly suggestive.\"\n\nShe glanced up at him, doing just that. The tingle made it easy. \"Suggestive of what,\" she murmured back, pressing into him a little more with her own rather evocative wriggle.\n\nHe winked and gave her a smile which turned the tingling into an all out throb, then glanced up at the guard who was now watching them instead of Glistel. Feric gave him one of his sun-bright smiles and a macho nod. The patrol man seemed to be as fond of those smiles as she was because she literally watched as his guard fall as he returned the smile with an 'attaboy' smirk of his own. \n\nBoy maybe she was the one who should be afraid of Feric, that was some heavy duty charisma he was oozing, and she had just proved her own lack of immunity to it. She wouldn't have thought it, but he was a born lady killer. And here she thought she was the charmer...she could only hoped that he used those powers for good. Inanna watched out of the corner of her eye as the guard went back to ignoring them.\n\nWhen they arrived at the small non-descript house at the end of road, one of many small non-descript houses clustered on this side of town, Glistel turned and made a sweeping bow, indicating that Inanna proceed. Honditar plopped himself...well he plopped about as much as any mer with altmer blood can plop, onto a long bench near the door and made a similar waving gesture, only to Feric instead.\n\n\"Have a seat Feric, Glistel will do our prowling for us.\" He glanced at Glistel and she winked back at him. Feric looked to Inanna for her thoughts and she tipped her head. \n\n\"It shouldn't take long, but it sounds like it might be touchy business. He might not like the extra company.\" If he was unhappy with that plan he didn't show it. \n\n**\n\n\"Muthsera Inanna, just the woman I was looking for.\" Malintus smiled as he came out from behind the bed screen, his boots in his hands and wearing his simple leathers and a wool shirt. He was one of those people with the natural ability to simply blend in. There was nothing about him that stood out, just your average uninteresting imperial...well at least on the outside. She nodded to him.\n\n\"Did I wake you friend?\"\n\n\"Nah, just getting up. There's only one bed, so I got used to sleeping in shifts.\"\n\n\"Got?\"\n\n\"Heh. Well Glistel doesn't sleep here much anymore, just enough to keep up appearances.\" She chuckled. \"I love how you have to 'keep up the appearance' of being an interracial couple living in sin. Usually it's the other way around. This is why I picked Cheydinhal instead of this place...they could give a flying leap who I have living with me.\" \n\n\"Oh they'd notice...they'd just keep the rumours circulating behind your back and be a little more subtle about it.\"\n\nShe shook her head. \"Funny how that crap still matters to people.\"\n\n\"Well it's working for us. They're all too busy asking the stupid questions to ask the real ones.\" He chuckled and waved her into a chair at the kitchen table. \"Can I get you anything, food? Drink?\"\n\n\"No, I'm stuffed. But thanks.\"\n\n\"Venison?\" he asked as he plucked an apple out of a basket and started peeling it with a nearby paring knife. \n\n\"Yeah, at the Oak and whatchamacallit.\"\n\n\"Good stuff that.\" The peel curled in out in one long unbroken rope onto a tin plate.\n\n\"Neat trick.\" \n\nHe grunted. \"Thanks.\"\n\n\"So...\"\n\n\"So.\"\n\n\"You want something?\"\n\n\"Do you?\" \n\nOi, this was going to be a long conversation.\n\n\"Glistel told me you wanted to talk.\"\n\n\"And you're here looking for favours.\" \n\nShe narrowed her eyes at him. \"Now how do you figure that?\" She didn't remember anyone having time to let him in on what was going down. Unless the sneak had been pulling some kind of invisibility spell at the inn. Shocked she would not be.\n\nHe sliced into the apple and lifted it to his mouth with the blade, pausing when he noticed her expression. He chuckled and lowered the blade.\n\n\"You know it's looks like that which give you away. You like to think you're sly, but you're as open as a bloody book sometimes. I was only making an educated guess. Usually we come to you, it's rare that you come to us. Honditar told us you were asking after Glistel. I just put one and one together. I also heard from a mutual friend in the waterfront that you had some kind of run in...and that someone none too friendly is looking for you. Apparently they've been asking a lot of interesting questions about a feisty little Dunmer with red hair in the company of a tall Nord type individual. Sound familiar?\"",
        "She gave him a sour look. \"And what did you tell them...and I use the 'royal' you.\" He smirked and gnawed his apple thoughtfully. \n\n\"Nothing yet.\" \n\nShe sighed heavily. \"What is 'yet' costing me pray tell.\" His smirk turned into a grin.\n\n\"Nothing...yet.\"\n\n\"So evil.\" \n\nHe chuckled. \"Listen here girl,\" he left his apple on the plate and leaned in on his elbows. \"You're half way in already darling, you're practically family. God knows Armand has been trying to get you in for years.\"\n\n\"I have commitment issues.\" She smiled playfully at him.\n\n\"That you do. My point is...we'll keep your secrets, 'cause you keep ours.\" She softened a little at that. He was right. Mutual dirt is safe dirt. They were stuck with each other.\n\n\"Yeah ok. Listen...I need some secrets, and I'm willing to bet you're just the folks who can help me with the leg work. I'm trying to find some people.\"\n\n\"The people who are hunting you down?\"\n\n\"Yeah...that 'Nord looking' fellow, he's a good friend and they were after him first.\"\n\n\"What he do?\"\n\n\"Nothing. They just want him and his family dead. The why is still in question. They're...special, so in a way it makes sense, but the exact way it makes sense...I just don't know. I'm headed to Wariel, to see if I can't find out more...they have a headquarters or something there, or I hope they do. I was thinking you could get someone to watch for anyone, like a messenger coming or going...and where they come and go. Don't even need to get dirty...that's our job.\"\n\nHe looked at the table thoughtfully. \"What you want is access to our information networks.\" She shifted slightly as he waited for an answer.\n\n\"Yeah, pretty much.'\n\n\"Big favour.\"\n\n\"Yeah.\"\n\nHe looked up at her from under his brows. \"We'll do it, that and more, if you do us a favour...but it's a doozy.\" She took a breath and steeled herself.\n\n\"Let's hear it.\"\n\n\"Well...I guess I'll just come out and say it. We need someone dead, and we need the dark brotherhood to do it...and we may need them again in the future. What I'm thinking of here is a sort of...professional arrangement, one business to another. 'Cause deep down, that's what we both are, and the not so legal sort at that.\" He made a dismissive gesture. \"We have enough in common.\" He paused again and clasped his hands. \"We're going to need someone to be our contact and we need someone who is both inside and outside of our 'organization.' Someone like you.\"\n\nShe swallowed. \n\n\"Why not someone like Hon?\"\n\n\"Honditar?\" he only said the name, but the subtext read, 'are you fetching kidding me?\"\n\n\"Why someone outside?\"\n\n\"You know the policies, no killing. No blood on our hands. We're not assassins and we're not thugs. Plus a lot of guild members aren't big on the brotherhood. Hell most sane people aren't.\"\n\n\"And the Grey Fox is sanctioning this?\" \n\nHe cleared his throat.\n\n\"Well that's the other thing...he has not. He doesn't believe we should have business dealings with their particular kind.\" He opened his hands in a helpless gesture. \"However, no other options seem to have availed themselves. I feel compelled to do what I feel needs to be done for the sake of the organization.\"\n\nHe didn't like it did he? Well she didn't either...but she liked it better now that she knew the Fox didn't. \n\n\"You're perfect for this Ina. You're smart and tough, and more importantly you don't scare easy...besides from what I hear the dark brotherhood is more or less an on the books institution where you come from.\"\n\nShe sighed. \"Yeah...but in Morrowind they're a business first, and crazy cult second. They seem to be the opposite here. There, if you want to do business you walk up to them and ask for a contract and voila, all done. What's more the night mother is an actual woman so if you don't like the way she does business you can track the bitch down and take it up with her personally...from what I hear they've got some kind mystical spirit crap going on here, and you have to 'summon' them with some kind of nutty deadric ritual. Not my cup of tea, let me tell you. I got out of that mess none too soon, and I don't fancy going back, thank you kindly.\"\n\nHe nodded. \"The Night Mother ritual.\" He pulled something out of his front pocket and unfolded it, smoothing the parchment before turning it towards her with the tips of his splayed finger. She read it. She'd need a skeleton, a human heart, nightshade, four tallow candles...\n\n\"You're kidding me. You want me to do this?\" She looked at him, very seriously. \"Do you understand what you're asking me? This is boarder-line necromancy!\" She stabbed her finger at the paper. \"A corpse! It needs a bloody fetching corpse! You are aware of how completely unacceptable that is to a Dunmer, don't you? Never mind an Ashlander?\"\n\nHe shrugged apologetically. \"You take out bandits all the time...couldn't you...you know...\"\n\n\"Luv, there is a world of difference between taking a life, and desecrating the corpse afterward with creepy hoodoo.\"\n\nHe sighed and folded his hands on the table. \"Please Ina...I'm pretty much begging here. The world is changing, faster than we can keep up with, sometimes we need more than the old rules can offer...sometimes we have to bend them. But I need you for this Ina.\" His serious expression broke again. \"And hey...think about it, you do this and we're over your knee girl. Especially me since I did the asking. All you have to do is tell the wrong person and I'm up the creek.\"He grinned and spread his arms, \"I'm your bitch.\" She really didn't want to do this. Of all things she could do, this was sooo the last one, or damn near. \n\n\"Tempting.\" She gave him an award winning smirk. Not sly my ass, she thought through her perfectly believable smile.\n\n\"Isn't it though?\"\n\nNot really she mused. Well...having the whole guild available to her was an interesting thought...useful...very useful. She gnawed the inside of her lip, reaching out and toying with the strand of apple peel. She thought of Feric sitting outside, waiting for her...counting on her. Then she thought of Lucas and Aina, of the cubs, of all of them. The last of their line...the last of a race perhaps. \n\n\"Times are changing.\" She repeated softly, still fingering the shiny red peel. Would she bend her own rules to save a people? Could she walk away if she didn't? How many lines would she cross? She had a sinking feeling there would be very few left to cross when all was said and done.\n\n\"Ah hell...Azura take me...let's do it. Give me about a week though...alright?\" She looked up at him. He looked surprised. \"You look like you weren't expecting that response.\"\n\n\"Part of me wasn't. I know how your people feel about messing with the dead...\"\n\n\"Yet you still ask me?\" He shrugged again. Not dismissive, she decided...just uncomfortable. She let it drop. \"Here's the deal. The people looking for Feric's family are hunters, hired swords and mercs mostly, and they are hunting lions.\"\n\n\"Lions?\" he frowned at her.\n\n\"That's right. So if you hear about anyone looking to hire lion hunters...you let me know.\" He gave her an odd look but nodded.\n\n\"And watch Wariel...anything going or leaving?\"\n\nShe nodded. \"I suspect after we're done with them they'll be sending word back to whoever hired them, letting them know there's been a problem, so you'll have to work quick. Is that going to be ok?\"\n\n\"Your wish is my command my lady.'\n\n\"Hmm, I like that, I could get used to this upper hand business.\" \n\nHe chuckled. \"You're doing us a huge service. You're doing me one as well.\"\n\n\"Tell me about it.\"\n\nShe wondered how much of her soul she'd have left to barter by morning. Pretty soon she'd be handing out IOU's. Get it while it's hot people, it ain't gonna last long. \n\n**\n\nFeric watched as Glistel wandered off behind the house, her hands behind her back, her heel scuffing idly in the dirt. Inanna was one of the few dark elves he'd spent any real time around, so it was interesting to see how very different the two seemed to be. They were both confident and easy going, and of course shared a very similar sly smile when they thought they were getting away with something, but Glistel was dark skinned, blue black in colour rather than the lighter grey, and dark haired, with a heavier, curvier build and was nearly half a foot taller than Inanna. Her voice was also very different. Inanna had a smooth, rolling accent, and something dark and rough, quicksand he had once thought it. Glistel's was higher, more nasal, and her accent almost twangy, though in a charming, friendly way. \n\n\"Say, where is Glistel from?\" He asked leaning back against the wall, and stretching his legs out in front of him. Honditar glanced over at him a moment then looked back up the road. \n\n\"Morrowind.\"\n\n\"She sounds different from Inanna\" and Modryn he added to himself.\n\nHonditar nodded. \"Inanna is an Ashlander from the north of the island Vardenfell. The people, and culture, are very different there. Glistel was born into house Dres, a dying house...though not to any family of great wealth or repute, and in the south, on the mainland. Morrowind is a large province, it stretches from the Nord territories of Solthsiem to the Argonian swamps. Each house and region is unique, though they are all a force to be reckoned with.\" Feric arched a brow at him. \n\n\"Then how was the empire able to overcome them so easily?\"\n\nHonditar chuckled. \"Indeed.\" He nodded. \"They are a strong people...but they are also a divided one. The houses have been divided since the making of the tribunal...now that their gods are dead, and the Neverar returned to unite them...well, it remains to be seen how long they will be held under the foot of an aging emperor. Inanna is convinced it will not be long.\" He paused, his eyes tipping up to the star filled sky. He sighed. \"But she is young and an optimist I suspect, and her relationship with the Neverar gives her greater faith in her impact on the Dunmer than is perhaps realistic.\" That caught Feric's attention.\n\n\"Inanna has mentioned this person to me, but has said very little. She said only that she met her, that she acted as her guide in the Ashlands, but little more.\"\n\nHonditar arched his own brow at that. \"Surprising, for a while it was all she wanted to talk about...or brag perhaps is the right word.\" He smiled that indulgent smile Feric remembered from before. \"From what I have heard the three of them, Inanna, Emily...that was the Neverar's original name if I recall, and her sister, another Breton, something starting with a Desire...or something, I think. A bard of some sort. How a scout, a bard and a twenty year old mage's apprentice managed to defeat the entire house Dagoth, and destroy the tribunal as the cherry on top...well, it seems far fetched to say the least. Inanna has told some very tall tales about their adventures.\" He smirked a little, and Feric found himself slightly and irrationally irritated by it, perhaps for Ina's sake. \"Though some are so outrageous one is almost forced to believe they are true.\"\n\nHe looked away and nodded.\"Truth is stranger than fiction...or so I've heard.\" he gave his own smirk. \"I'm sure if you asked her what she was up to now, she'd tell you something like...oh, I don't know, like she's been adopted by a pack of werewolves,\" he paused with a small smile, \"and, after stealing Daedric artifacts from a coven of vampires...and having battled a few necromancers, swam the Rumare with a giant mountain lion.\" He gave the mer a smirk to match the sardonic tone of his voice. Honditar laughed lightly. \n\n\"Your imagination is almost as wild as hers.\"\n\n\"I suppose she's wearing off on me.\"\n\n\"They do tend to do that.\" He cleared his throat. \"So where are you headed after this?\" \n\n\"Toward Kvatch, I believe.\"\n\n\"North or south.\" Feric looked at him again. The mer looked curios, but not in a way that made Feric uncomfortable. \n\n\"North.\"\n\nThe mer nodded. \"You'll want to keep north of the cities then, there are some decent paths through the mountains, clear and unoccupied. I've heard that the two of you are being looked for so it's better to stay off the roads. There is a good camp, usually empty though occasionally a roost for bandits...Last Chance I think it's been called, or something of the sort. It is almost directly north of the city, far from habitation and close to an Ayleid well. It will probably serve you well if you need to find shelter for the night.\" The Altmer paused and stroked his chin thoughtfully. \"I think there is an Ayleid ruin to the west and a fort to the east, you'll know you've overshot if you hit the western ruin. Would you like a map?\"\n\nFeric smiled and shook his head. \"I've been through that area...I think I even remember the camp you speak of, though faintly. With your directions, it should be easy enough to find again. Thank you.\" \n\n\"You're very welcome. Oh...and steer clear of any small settlements you find on the way...there are many dangerous people living out in the forests between us and Skingrad. I'm sure Inanna will guide you, but be wary.\"\n\n\"I will.\" And he would.\n\nThe door swung open behind him with a loud creak and a small hand came down on his shoulder, giving it a faint squeeze.\n\n\"Feric, this is M.\"\n\n**\n\nInanna had indeed led them north as Honditar had suggested, keeping them both entertained with her unending stories of the many near misses had by herself and acquaintances in the places they passed through and around. The forests they travelled through toward Skingrad, though apparently dangerous, were beautiful. The trees were tall and lush and the spaces beneath open and covered with mosses, ferns, and a wide variety of brilliantly coloured flowers. As they moved into the mountains the terrain became less verdant, more rocky, and much more familiar. It tugged at something deep inside him to be here, in a place so similar to the home he had been forced to flee. \n\nThey found the camp easily and finding it empty made a small fire. It was clearly a well used hunting camp, so a fire, even if seen, would not look out of place or suspicious. They'd eaten and Feric watched Inanna as she crouched, knees up, on a well worn log near the fire, drawing lines in the sandy earth with the head of an arrow as she dangled it loosely between her hands. \n\n\"What are we doing Inanna? Are those people trustworthy?\" She looked up at him and smiled gently.\n\n\"Modryn is. The others...trustworthy enough, though it's best to go with your gut on it...I didn't tell them everything, and they're sort of beholden to me.\" She gave him a pointed look. \"But really, if you need something from that group, go to M first, and to a Redguard in the waterfront named Armand. Don't tell anyone else too much.\" She looked thoughtful. \"Actually you remember that Orc?\" \n\n\"Gro-ba? The drunk one?\"\n\n\"Yeah, I've worked with him a few times while doing jobs for the fighter's guild, and trained with him a bit. He's good too, friendly, doesn't ask too many questions, doesn't hold stuff over your head...everything is on the up and up with him, just say you're a friend and that should be enough....and you know Max. Max is good people. But you probably got that already.\" She smiled again.\n\nHe nodded. It was pretty much what he thought. He was glad she thought so to, there was a lot more at stake here then his sorry hide...and he was beginning to feel the weight of the risks he had been taking, controlled though they were, and the burden of failure if he miss stepped. \"And what's the plan for tomorrow?\"\n\nShe grinned at him. \"Well we can do the stealth thing...but I thought it might be more fun to kick ass and take names...plus it might be hard to sneak in with the two of us.\" She raised the arrow and tapped the tip against her lips thoughtfully. \"It might be best if we take out as many as possible. Let them know you're not screwing around any more...send an unmistakable message. They aren't safe until you are.\" She gave her patented sideways grin. \"That ought to fuck with their heads eh?\" \n\nFeric felt a pang of something, annoyance perhaps, frustration...they needed to get this done quickly, to flush them out and ended this madness before he lost what little remained of his family. He sighed and leaned forward on his knees rubbing out a growing headache which was rapidly forming in his temples. \"I don't know...I don't want them to think I'm throwing down the gauntlet, that might just bring more heat down on us, and there's too much at stake for that.\" She lost her grin and came over to him, plunking down on the log and placing a hand on his shoulder.\n\n\"Listen, Feric...I get that you're worried, I'm worried about them too, that's why we're here, but you can't let them cow you anymore. This is what they want, for you to keep running and hiding, and you must have noticed by now how that's working for them. If you don't make a stand and show them you're going to be pushed around, then they will continue to hound you.\" He glanced at her face, she looked excited, eager. \"This is your chance to turn this game around, to be the hunter and not the prey. The prey never wins Feric...they just keep staying alive until the next round. If you want to come out on top, you need to own them, now.\" \n\nHe gave an exasperated sigh and shook his head. Was this a game? Did she take nothing seriously? Didn't she understand what was at stake here? \n\n\"Grow up Inanna. That's not how it works. This isn't about winning or making a point, this is about survival, about making sure our children have a place in the world where they can grow and thrive. This isn't one of your games.\" He gave her a derisive look and was about to continue but paused when he saw her expression change, or rather vanish. She blinked once and her face became as smooth and still as polished stone, flat and empty. She pulled away slowly, sitting up. It was a look he'd never seen on her face and he felt his heart drop suddenly into his stomach. \n\n\"Inanna, look, I didn't mean...\" she held up her hand.\n\n\"Of course you did. People don't say things they don't mean only to take it back, they say things they haven't the tact or duplicity to keep to themselves.\" Her voice wasn't angry or hurt, just smooth and even. He wished she were angry. He'd never seen her face and body so empty of expression, so very still, it alarmed him.\n\n\"Inanna, I just meant...\" She stood before he could reach out to her, incredibly anxious to take back the insult that had made her withdraw. She smiled slightly, it wasn't tight, but it was polite, empty, and her eyes whirled with nothing he could recognize.\n\n\"That you don't think I take anything seriously.\" She finished for him. Her smile did turn tight then. \"I understand that I come off that way to most. Don't trouble yourself too much. More often than not it's intentional, so I shouldn't be surprised.\" She turned her head away from the fire and towards the darkness of the starless night. \"I think I'm going to do a perimeter sweep before we settle down for the night. We're a little exposed up here.\" He could only nod when she turned back to him, her face serene. She tilted her head and walked away to collect her bow.\n\nShe stooped to pick it up then walked in the direction of the ridge. He watched intently as she stopped just before disappearing into the shadows and paused a moment only to turn and walk back. She came to stand in front of him and squatted down, resting her arms on her thighs. He watched her uncertainly, expecting her to finally lay into him, almost hoping she would, but her demeanour remained unchanged. \n\n\"I understand that you and I barely know each other, really, and that you're unused to dealing with Dunmer, so I will tell you something that most outlanders rarely learn, unless their observant or smart, because it's not something we ever bother telling them. It will be very useful to you in dealing with my people should you need to in the future, and with me if you wish to continue to do so. Don't, ever, assume, anything.\" Her gaze was even and intense. \"We were led, and shaped by Boethia, Mephala, and by Azura, the lords of deceit, webs, and of the hidden doors of knowledge, among other things, and we've been woven by their clever fingers into the image of their servants. Have you ever seen a Spider Daedra or the Winged Twilight?\" ",
        "He continued to meet her fiery gaze as he shook his head. \n\n\"If you do, then in that brief moment between surprise and fear, you might see something very familiar.\" Her mouth lost its hard line and curved slightly. \"When Azura cursed us with our black skin and red eyes, she did not turn us 'into' 'dark' elves, she was merely exposing one of our many secrets as punishment for harming one of her favoured heroes, for not fearing her wrath. We were dark and strong long before we were ever Dunmer. As Chimer, our golden beauty was only one more illusion, one more thread in our web, a toy and tool we had taken away for being naughty children. \n\n\"What I'm saying, Feric, is don't trust what you see, what you hear, there is no way to know how much of it is real. When we wish it we can do laughing what others do in terror or tears, and we can seem cold to what would fill others with joy. Take it for what it is, nothing. I may be young, but I'm old enough to understand this at least.\"\n\nHe felt his throat close. \"Are you suggesting,\" he asked, a little hoarsely, \"that I shouldn't have trusted you?\"\n\n\"I'm saying, trust what you know.\"\n\n\"And how am I to know, if everything has been a lie? Do I just hope to eventually understand the nature of the beast?\" He felt his anger rise once more in his chest.\n\nShe chuckled, but without humour, \"There is no way to be sure of that either, even we surprise ourselves occasionally, and not everything is a lie Serjo, that would make it easy.\" She smirked, but briefly. Her voice remained cool. \"If you need to know the truth, then know it with that one thing that has kept you alive this long, despite the challenges, despite the hunters, and it will keep you alive after this night. Trust in that Feric, whatever it is.\"\n\nHe remembered something young Lucas had said about her when she first arrived. He hadn't trusted her, and said she wouldn't do anything for free, that she must have some other motivation. Feric couldn't help but wonder now, as he met her steady gaze, what that motivation was.\n\nShe stood and looked down at him her face cool and sober again. \"I will take your words under advisement Sera, take care you do the same.\"\n\n**\n\nInanna watched him as he slept, surprised but pleased that he hadn't changed back to his lion form as he normally did. It would make her plan easier this way. She fingered the length of rope as she padded slowly and quietly over to him, careful not to wake him. She knelt at his head and dropped the rope beside her, running her fingers lightly through his hair, murmuring the words of a light spell. He continued to breathe evenly and deeply. She sat there for a while, considering, and reconsidering her actions. She knew it was probably just the fertility that was making her crazy, that made it impossible for her to keep him out of her mind for more than a few minutes and which drew her to him like an especially foolish moth to an especially bright flame, but she couldn't be bothered to care. Something in her wanted this, and wanted it badly...who was she to question the purgatives of nature, picky hormones or not. She could have done a hell of a lot worse. \n\nShe knew what she wanted, and she was loathed to be turned away, but his recent response to her made her hesitate, made her sit and watch, made her cautious. He had told her he trusted her...and yet...\n\nThen again, she thought with another smile, what better way to help him get over it. To reassure him of...her affections. She had been a little harsh...and maybe, yes, a little dramatic...so she did sort of owe him one. She'd had time during her watch to contemplate his words. She'd been a little unfair to him. He had been witness to her playing so many roles with so many people, what was he to think? And she'd never really played a role with him...though she was apt to tease and play, it was for no other purpose than their mutual pleasure. She had never given him some clear design of who she...for him she just was. And that was why his words had stung more than they should, and why she'd been so petulant in response. Maybe she did need to grow up a little, but he needed to trust his instincts. She didn't know how she knew what they were, but she did know. Beyond a shadow of a doubt. She knew they were the same as hers, identical. She couldn't explain it...and she didn't seek to. \n\nBesides, he still owed her one...with interest. Her smile turned into a mischievous grin. \"To hell with it.\" She whispered, and picked up the rope. \n\nFeric shivered as a cool breeze ran over his chest. He turned to escape the sensation and felt his hand catch on something. His blinked his eyes opening slowly and groggily only to find another completely different sensation, something soft and wet and hot wrapped around something a lot lower than his chest. He groaned and squeezed his eyes shut again, bucking his hips up toward the source of the heat and felt it tighten and grip exquisitely around his cock sending a shock of pleasure up the shaft and skittering swiftly through the rest of him. \n\nHis eyes shot open again and he jerked awake, completely this time, and swore as his arms remained where they were tugging painfully back in the sockets. He repeated the curse, and was stopped from struggling only by the heart stopping view between his thighs. \n\nHe watched, agape, as her full red lips slid with painfully deliberate ease up his length until they finally released him with a gentle pop and curved into a seductive grin. Her ruby eyes glittered, beautifully framed by her liberated locks of dark hair. She raised herself up from between his legs, her naked obsidian body snaking along his, glowing softly in the moonlight. He caught a hiss between his teeth as she hovered over him, dragging her pert breasts and smooth flat stomach over his engorged cock. Apparently she`d started without him. He clenched his jaw and resisted as best he could as that silky skin kept gliding across his, hot as a fire brand, and just as hard to ignore. The worst came when that smiling face appeared over his, and she arched her back, rubbing the slick flesh of her sex up along his shaft, teasing the head by rotating her hips, and forcing a moan from his throat.\n\n\"Ina...\" He growled in warning, contemplating trying to buck her off, but deciding instantly that the little minx would probably take that as an invitation. \"What in the sixteen hells do you think you're doing?\" He managed in a rasping voice.\n\nShe leaned in, giving him a pouty look. \"I should think it's pretty obvious.\" She chuckled, a low wicked sound, akin to a stage villain about to toss a blond-haired blue-eyed maiden off a cliff. \"Though thinking of pressing charges, I believe the legal term is...raptus violentiae?\"\n\nShe twisted her hips again and flicked her tongue along the valley of his lips. He let out another involuntary sound of pleasure but managed to hold himself still, even if it meant every inch of him was a taunt with the effort of it. \"Inanna, stop this.\"\n\nShe shifted her hips again, this time pressing harder against his cock, engulfing the pulsing head ever so briefly in her tight flesh. His breathing became rapid as he strained to fight the electric sensations beginning to pulse through him as her body gripped him, his own body betraying him by twitching and flexing enthusiastically against her. His flesh knew hers, remembered the feel of her body, and recognized it as somehow his.\n\n\"You're mouth says no...\" she whispered huskily against his ear, the diamond hard nubs that graced her perfect breasts leaving burning trails as they skimmed across his chest. He tried the ropes again, finding them surprisingly loose. It made him pause and he looked deeper into her eyes as she rose up over him again, straddling his middle with her tight muscular thighs and rubbing her glistening pussy against his stomach. He could catch the sweet and musky scent of it already. The scent mixed with the enticing sight and threatened to overcome his senses completely. That red haze that always seemed to follow the sight of that sweet, glistening pussy crept slowly into his mind.\n\n\"I can break out of these bonds easily. All I have to do is shift...if that.\" It wasn't so much a threat as an observation, but he knew it sounded like both. She was welcome to take it that way.\n\nShe shifted her hips, pressing them back until his erection was tucked soundly against her taut little ass. Damn but she all heat and silk this girl...he wasn't sure how long he was going to hold out at this rate. Another thought overcame to him as the fog slid deeper into his mind...should he even bother holding out? He couldn't go through with it, yet how could he not? He had to...\n\nShe rubbed herself up and down his length again, her soft lips tracing the line of his jaw, his neck, down his chest...\n\n\"Then do it.\" She murmured huskily before taking one nipple lightly between her teeth and sending a shard of sensation through his back and right to his groin. He arched under her reflexively, nestling his manhood deeper into the smooth globes. She gasped slightly, her finger curling up on his chest as she gripped him to keep from being bucked off, scoring him lightly with her nails and earning another hissing growl of a moan from him. \n\nShe was worried for a moment that he might actually hold out on her again, but the look in his eye as he glared up at her was filled with more lust than irritation, so she decided to persevere. If she was anything, it was persistent. Of course it was hard not to be motivated when the prize was as sweet as this one. She rocked against him, and took a moment to begin mapping out his sculptured body with the tip of her tongue, and occasionally her fingers when the sheer size of him seemed too much for her mouth alone. She took in the clean male taste of him with unending pleasure, humming her approval as she eagerly devoured every inch of the broad chest that lay before her. He seemed to be content enough to let her, that is if his low sexy moans where any indication of his mood. But he was by no means her prostrate victim, not by a long shot. She could feel the tension running through him as he strained against her mouth and hands, every fibre and tendon alive with the same dangerous potential as his dark expression. And they both promised so many delightful things.\n\nShe liked that look, those intense green fires burning into her own, it made her insides quiver with a rare and electric fear. This was no broken gelding bucking beneath her. She briefly recalled the way he'd pounded her into her kitchen table and experienced another delicious shudder. Definitely not broken...no, he was working just fine.\n\nShe wet her drying lips and arched her back again, longing to feel him pressed against her now aching center and quivered as he let out a low growl and raised his hips to meet her. She twisted deliciously, teasing them both with the almost spread of her sultry folds around that rock hard staff. \n\nHe growl again, tensing against the ropes. \n\n\"Dangerous to play with fire.\" He snarled out in a voice which made her flesh jump with more of that thrilling menace. She smiled back and slid a hand down over her belly, letting it linger over the pearl of her clit, her lids fluttering closed as she made a show of grinding her fingers against it, causing her hips jerk, pulling the thickly swollen head a little deeper into her heat. \n\nShe gave in. She had to, unable to resist the screaming need inside her as it rapidly became all consuming. She rotated her bottom once more, pressing back and down against his pulsing cock until she could finally feel it stretching her entrance with its more than impressive girth. Size might not be everything, but it sure as hell was something. By all that was holy, was it ever. She panted softly as she let the wide head linger, holding that tight ring of muscle open and aching. \n\n\"I Am fire,\" she managed to husk out as she returned his hot gaze with one of her own, her fingers twining in the short soft hairs of his chest. \"Would you like to play with me?\" She grinned before letting out a soft groan as she twisted her hips one more time, still torturing them both in the most wonderful ways.\n\n\"Are you giving me a choice?\" His gravel voice was dripping sarcasm, but his body sent another message as his hips shifted up, driving another inch or three into her with a decisive shove and pulling an involuntary whimper from her throat. \n\nHer laugh, already husky and broken, hitched as he drove his hips up to meet her yet again. \"If I wasn't...giving you a choice...you'd know it...Serjo.\" She panted out as she slowly began to answer his thrusts with her own, impaling herself with short eager strokes until he was buried deeply, and so perfectly inside of her, filling her completely. She groaned as he shifted, grinding into her, his lips curving into a sinister smile which matched hers with unnerving accuracy. \n\nShe started to slide herself off his length but he drove up hard in a jarring thrust. She gasped and felt the air pushed from her lungs as he slammed into her depths, catching her and sending her falling forward onto his chest. She let out a surprised and breathless cry, gripping him with her legs to keep herself astride his still tensed thighs. \n\nHe drove up into her before she could fully right herself. Then he did it again, and again, mercilessly forcing himself up to the hilt each time. \n\nShe fought to regain control of herself with a growling moan of frustration and desire, thrusting back, matching his fierceness with her own until she was giving back as good as she was getting. And lord but it was good. Each driving push was like being bucked off a wild stag, and just as unforgiving...near painful...but breathtakingly so. \n\nShe could feel the corded muscles of his body bunching and rolling under his skin, feel the silky hair which trailed the length of his chest and stomach against her breasts each time she fell forward. She wanted him, she wanted all of him...and she never wanted it to stop. She let out an abandoned groan as she drove her hips back to meet his primal rhythm, all the while fighting for air with ragged gasps. \n\nShe took hold of herself enough to register his reaction and it brought a fierce smile to her lips. His own head was back, his jaw tight with strain, his face contorted with pleasure as he too was conquered by the intense heat of their coupling. \n\n\"See...that wasn't so hard was it?\" She managed with a thick purr, letting her eyes fall shut as she fell back into the delicious throb of pleasure which was already building higher towards its pinnacle with every rocking bounce of her body against his. \n\n\"You have no idea.\" He growled back, his voice low and raw, vibrating like a dessert drum through her body. \n\nShe grinned again and slowly opened her eyes, ready to ask him to show her just how hard it was, when a rough tug on her thighs made her start. She looked down at him, golden and shining in the moonlight, and realised, rather quickly, that the ropes were no longer where they should be. His hands were on her legs, and he gave her that wicked cat grin as they grasped her ass tightly and she found herself very suddenly on her back, her lungs empty, and the rest of her very, very full. \n\nAll she could manage was an involuntary cry of pleasured pain as he drove ferociously into her. She half expected him to pound the living daylights out of her in some sort of wild and utterly twisted punishment, so she was staggered when he paused there instead and leaned into her, pinning her to the ground with his body and whispering hotly in her ear. \n\n\"Hard enough for you?\" \n\nOh, was that a challenge? Her whole body lit up in elation. The answer was most certainly yes, but she was never one to turn down a dare. She gave him as haughty a look as she could muster and cocked a brow as he pulled back just enough to catch her expression. \n\nHis response was to wipe her smirk right off her face with a deep kiss, turning her response into a helpless whimper. It was nothing but teeth and tongue, and he bit at her lip roughly before claiming her mouth in a back twistingly raw tongue fuck. \n\nThat alone was enough to make her eyes roll, but he didn't bother stopping there. One hand left her thigh to slide up her belly, engulfing one breast in a rough hand, squeezing carelessly, and pinching hard at her nipple, tugging the pebbled flesh until she was moaning hard against his mouth. She whimpered and squirmed beneath him, grinding ecstatically, her nails coming up to dig into his backside, her own mouth tearing from his to catch his lobe in her teeth. He groaned in her ear and she smiled through another soft cry as he ground right back, pressing deep into her core. She bit her lip to keep herself from crying out again. He wasn't going to win that easy.\n\n\"I don't know,\" she whispered back in a panting voice, \"I expected more from an alpha male.\" The sound he made caused the hairs on her next to stand on end, her stomach to flip flop, and her already slick center to flood with liquid flame. She might have called it a growl, but it was too ragged, too furious, and too wild to be contained by such a small word. \n\nThat sound was all the warning she got before he grasped the backs of her thighs and pulled her up and back against him, forcing her ass into the air as he rose to his knees and plunged straight back down into her. She grasped futilely at the bare ground for a hold, finding only the edge of sleeping roll she was laying on. She gripped at it for lack of anything better and held on for dear life as he slammed her violently into the ground.\n\n\"Better?\" he grunted, continuing to plough into her, his movements gaining speed and rapidly becoming unrestrained and erratic. She struggled to think of some clever comeback, but she was done for. The waves of pleasure and need were too powerful to fight and she was simply overwhelmed with it as her body crested towards climax.\n\nShe groaned, a low animal sound, \"God, yes, Feric...please. Going to...\" \n\nShe cried out in her own tongue and her hips bucked and jerked wildly, her eyes widening and staring unseeing into the night sky above them. He gripped her that much tighter, still thrusting hard into her, forcing more and higher cries from her gasping lips. \n\nFeric shuddered at the sound of her voice and watched with primitive satisfaction through his lust hazed vision as she writhed helplessly and erotically beneath him. Her head was thrown back and she hunched her lithe body against his with desperate need while she rode out his brutal onslaught. He clenched his jaw as the feel of her silky wetness tightening and contracting around him sent lightning through his blood and lit up every nerve in his body. Once again all he could see was her, and all her could feel was the ecstasy of her sweet, hot sex pulling at his cock in hungry spasms.\n\n\"Feric...\" her moan sent another pulse through his spine and he felt his sack tighten in response as she pushed him so dangerously close to his limit. A little longer...he wanted to stay with her a little longer...Ina...his mate...his... He dug his fingers into her thighs as he plunged one last time into her depths, a raw cry ripping from his throat as his release was finally torn from him and pulled greedily inside of her by those pulsating walls. Filling her...the thought made him groan and shiver with erotic pleasure. \n\nHe gasped as the last rope of cum pulsed deep inside of her and half collapsed over her, panting hard to catch his breath and slow his racing heart. \n\nHe held himself up by his elbows, but just barely. Her legs were still bent back between them, her slick thighs pressing tightly against his ribs. She made no move to untangle herself, but clenched her legs tighter and ran her fingers between them and over his sweat slicked chest. His head fell forward into the crook of her neck and remained there a long time as he listened to the sound of her own slowing heart and breathed in her rich scent as they gradually cooled in the night air. ",
        "\"Do you even understand the meaning of the word 'no'?\"\n\nHe felt her lips brush his ear. \"Oh come on, you wouldn't like me as much if I did.\" Her voice was still raw and breathy. He shivered as she ran her tongue up the side of his neck and her fingers trailed lightly through his hair. He nipped her shoulder in return and pulled away, rolling off of her and onto his back, laying still on the hard packed earth, his vision filled with a clear star filled sky. \n\n\"We shouldn't have done that.\"\n\nHe heard an exasperated sigh beside him.\n\n\"You can't be serious.\"\n\nHe turned to look at her and she rose up on one arm to glare down at him. His eyes automatically followed the long line of her body over the curve of her waist and hip and along her slender legs. Her skin still shone with sweat and sex. She looked like a nymph carved from the night itself, perfect and surreal. Gods but she was beautiful. He was utterly doomed.\n\nHe smiled slightly, but he could feel it was a pained smile. Up was down, right was wrong...he didn't feel like he was living in his own head anymore. His smile vanished and he shook his head to clear it. He looked away. \n\n\"I am. I care for you Ina...but we can't do this again. Alright?\"\n\n\"Why?\" he arched a brow and turned to her once more, surprised by the plaintive quality in her voice.\n\nHe didn't answer the question. \n\n\"I thought you were mad at me.\" He said after a long moment. She pursed her lips and he tried not to stare at the full red rose of it.\n\n\"Was...and am going to be again soon at this rate...\" She rolled her eyes and sighed with a frustrated wave of her hand. \"Fine...whatever. Thanks for not sending me to bed without my supper this time at least.\" She groused with a pout and lay back down, turning away from him, muttering something under her breath in a language he didn't recognize. He was pretty sure he didn't want to understand it. \n\nShe had been angry with him, and cold...so why would she suddenly want him again? He frowned, the creeping feeling of insecurity he'd had earlier returning as the warm lingering glow of pleasure slowly faded. He didn't like this feeling, this not knowing. He was going to have to fix it.\n\nShe squeaked as he rolled her onto her back pinning her arms and legs with his own, using his mass to hold her down. Her momentary surprise was replaced with a soft, lazy smile. \n\n\"I thought you said we weren't going to do this again.\"\n\n\"We're not.\" He looked down at her with a deadly serious expression. Her smile faded and she cocked a brow at him.\n\n\"I know you're bigger and stronger than me...but I can still roast you if I wanted to.\"\n\n\"You won't\" he answered, his voice still quiet and serious.\n\n\"Oh?\" Her own expression turned a little harder. A little more like the one she'd given him earlier that evening, the one that had prompted him to do what he was doing now. But a little bitter-sweet smile tugged at the corners of his own mouth.\n\n\"You can no more hurt me than I could hurt you.\"\n\n\"Isn't that what you're doing right now?\" He returned her cold smirk. \"Are you in any physical pain?\" She didn't answer, but narrowed her eyes. \"I didn't think so.\"\n\n\"What are you doing Feric?\"\n\n\"I'm going to ask you a question and I want an honest answer.\" Her expression shifted again to something he didn't quite recognize.\n\n\"Do you now.\"\n\nHe gave her another hard look and tightened his grip on her wrists.\n\n\"Yes.\"\n\nShe tilted her head to the side and shifted underneath him, though she retained eye contact. His jaw tightened as he tried to ignore the softness of her body underneath him and the sleek smoothness of her damp skin against his, not to mentioned the lingering cloud of scent, of arousal and sex, still clinging to their bodies. She softened a little and almost smiled, though it looked almost melancholy, disappointed.\n\n\"I've never lied to you, Feric.\"\n\n\"But you haven't told me the whole truth either.\" He challenged, willing himself stick to his goal. The temptation to just release her, trust her, and let her have her way was very real at that moment. Not just because his mating instinct asked it of him, but he really did trust her, right to the core of him he trusted her. Despite what she had said, he knew he could, he was as sure as he was the sun would rise in the morning. But this was something he needed to know, that he needed to hear. He sighed when he saw her face harden again. \"Ina...\" he paused and took another breathe, \"look, I trust you. I don't care what you said earlier. I do, but there's something I need to know, and I need you to tell me.\"\n\n\"Need or want?\"\n\n\"At this point I'm not making the distinction.\" \n\nShe did smile at that.\n\n\"You don't need to hold me down...I promise I won't run away.\" Her smile widened and her voice took on a low purring quality. \"Unless you like having me pinned under you, Serjo.\" He closed his eyes and turned his head away as she emphasised her point by writhing underneath him again, this time deliberately pressing her body against his. He gave her a warning look and grunted. It was half a sound of admittance, half of annoyance. She sighed when he remained still and tense above her.\n\n\"Alright Serjo, what is it you want to know?\" He turned his gaze back to meet hers. \"What do you want Inanna? Why are you helping us?\" She cocked her head at him and gave him an appraising look.\n\n\"I told you...I like you.\" He sighed.\n\n\"That's not the answer I'm looking for.\"\n\n\"It's true.\"\n\n\"But what is in it for you? What are you hoping to get out of this?\"\n\n\"Someone's been spending too much time with Lucas.\" \n\nHe let out a dry laugh. \"Tell me.\"\n\n\"No.\" He blinked. He had expected a run around, hints and intimations, half truths and equivocation. He had not expected an outright denial.\n\n\"No?\"\n\n\"No.\"\n\n\"Why not?\" he asked in disbelief, his shock and dismay ringing clearly in his ears. She laughed, obviously hearing it to.\n\n\"You want honesty? Here's honesty-- I won't tell you what I want because admitting it will give me a strategic disadvantage, and frankly I already have enough of those with you already.\"\n\n\"With me?\"\n\n\"Yes with you.\"\n\n\"Are we in competition?\"\n\nShe smirked. He released her hands and raised himself so that he was kneeling over her, still looking down at her face, though this time in confusion.\n\n\"Well that's a pretty picture.\" she murmured, her eyes tracing the length of his body appreciatively.\n\nHe sighed and got off of her, picking up his discarded robe and wrapping it around himself. She watched him. \n\n\"You said I couldn't hurt you...you said you trusted me...so what's the problem Feric?\"\n\n\"What is it you want from me Ina?\"\n\nShe sat up, pulling up her knees and wrapping her arms around them. \n\n\"Haven't I made myself explicit?\"\n\n\"If you're so explicit, then why won't you say it...another game?\"\n\n\"Oh Serjo, everything is a game...but unlike most people, I take my games very seriously.\" Her smile left her face. \"You know what I want.\" She paused to watch him watch her right back. \"I think you want it to.\" She laughed lowly and sighed. She gave him a genuine smile, though as sad as the one before. \"More often than not it's the prey that leads the chase.\"\n\nAh. Was that really it? Just the call of mating? He supposed it made sense. He turned away and sat heavily on a nearby log. He'd half hoped it was something else, this only confirmed his fears and deepened his guilt. As if reading his mind she continued on. \n\n\"Are you disappointed, Muthsera? Were you hoping for a more exciting answer?\"\n\nHe leaned forward and rested he elbows on his knees, looking over at her.\n\n\"Different perhaps. I...I can't Inanna. If I could tell you why...\" he trailed off, uncertain of where he was going to go with that. He could tell her, there was nothing stopping him but his own fear.\n\n\"Why can't you?\"\n\n\"I'm a coward.\"\n\nShe laughed. \"At least you're honest.\" He smiled wryly down at his hands. \"Tell me, since we're being so earnest right now...do you want me Feric?\"\n\n\"I think that's pretty apparent.\" \n\nThey looked at each other a long moment, the air between them heavy with their silence. Her voice was soft. \"Where I come from, when we want something, we take it. No hesitation, winner takes all...that sort of thing.\"\n\n\"I noticed.\" he muttered. She chuckled a little only to sigh and shake her head once more.\n\n\"I really don't understand Feric. Are you planning to explain it to me eventually?\" He nodded, still looking at her.\n\n\"I will.\"\n\n\"It's really bothering you isn't it? Whatever it is you can't tell me.\"\n\n\"You have no idea.\"\n\n\"Well...I guess I'll have to trust you on that as well. But,\" she raised a finger and gave him a warning look, \"I'm NOT going to like it, and you better bloody well tell me Everything when all this hunter crap is dealt with....understood? And it had better be Real good.\" He gave her a half-smile and nodded again.\n\n\"Yes 'mam.\" She huffed out a breath and looked very put out, giving him a peevish look. \n\n\"I am not happy.\" She leaned over and grabbed her discarded silk shirt, pulling it over her head, and laying back down on the roll. She turned away and he couldn't help but notice the way the material clung to her hips and backside, accentuating her long bare legs by just barely covering what lay beyond. He wasn't too happy either.\n\n\"Wake me up when the Masser is done.\" She muttered into her arm. He glanced up to the night sky. The great red body loomed high overhead, the smaller, paler one tucked timidly behind it.\n\n\"Yes 'mam.\" He murmured softly. \n\n**\n\nInanna lay belly down on a low hillock watching the fort with narrowed eyes. Nothing. No one in or out all morning. Maybe they travelled at night. Geez...not more vampires...Yeah that fetcher probably set her up. No honour among thieves anymore. What was the empire coming to? She glanced to another of the rolling hills which surrounded the fort and tipped her bow up slightly. The long yellow grass waved back. She nodded to herself. Alright then, here goes nothing. \n\nShe was on her feet and moving in, keeping low, dodging from bush to bush and finding cover where she could. The fort was naturally well placed, sitting on an especially high rise in the landscape to afford better lookout views and minimize an enemy's ability to catch the forts residences unawares. Luckily the landscaping had gone to the birds over the last few centuries, so there was plenty of long grass and low scrub to hide the lone enterprising sneak. She hoped Feric was keeping up because she could catch no sign of movement on his part. He could be anywhere as far as she was concerned...but then it was as far as the enemy was concerned as well...so bonus. Soon enough the high broken tower was looming over her, its crumbling walls providing tantalizing and convenient views of the court yard. From her position she was able to count three, one up and two down, making rounds within the walls. It was more than she expected to be outside on guard, and that fact made her a little nervous. Then again these weren't your normal brain dead bandits, so she should have expected a little more organization and care. \n\nShe squinted up at the top guy. It looked like a human of some kind, bowman, fair skinned, but that was all she could catch. The two inside were wearing helms, one of fur, which was good as it made him easier to pick off, and the other looked like it might have been chain...but her glimpse had been brief, so it was hard to tell. She decided the bowman needed to come down first. They were circling the walls and the only way she could see them was when they were on the far side of the yard from her, and even then it was through a crumbling break in the wall, and not a hugely wide one at that, so she'd have to time it carefully. \n\nShe readied herself when he came around, lining up the shot with one of the distant bricks to keep her arms steady while she waited for him to circle around again, counting out the seconds it took to make the round. It was a long shot, so she tensed back the bow as tight as it would go. Finally the glinting tip of a carried bow came into view, she breathed in, let out a little air, and fired while the iron was hot. \n\nShe half expected it to miss, or hit a shoulder and do just enough damage to cause an alarm to go up to spur the others into action. But it didn't. It nailed the guy and she watched with baited breath as the arrow caught him in what looked like the throat and even lifted him backwards into the wall from the force of the blow. She released her breath and watched him go down, waiting uneasily for an outcry. She would have given him the extra arrow treatment, just in case, but the walls obscured her view, and randomly shooting arrows through cracks in the walls might catch a little more unwanted attention than she needed.\n\nThanks be to enchanted weaponry. One more thing never to leave home without. There was no sound so she slipped up to the base of the wall, creeping her way around the back end of the fort where the grass was longer and a few bristly pines provided some small amount of cover. She paused at a ragged V shaped gap where the wall had crumbled. Some of the well aged stones still bore faint traces of some massive blast which had tore the fort a new one back in the day. She ran a hand over the scarred stone and wondered how many spell swords and battle-mages had teamed up to make such a mess. She paused and listened when two voices drifted towards her from the other side of the gap. Male and female. She had thought the two downstairs were both men. Either she was mistaken, or there were more than two. She glanced into the courtyard. It was a mess. Most of the second tier was in pieces, and there was nothing at all left of the higher levels. She spotted someone moving into her field of vision and set another arrow in her bow. She couldn't see where the other two were...but what the hell, she'd shoot and run...they'd be easier to pick off once she'd lured them out. Where was Feric anyway?\n\nShe took the shot. The hunter stumbled, but didn't quite go down...letting out a shout of alarm and pain which set off the others, one of whom suddenly appear directly in front of her. She jumped back and released the arrow she was readying in her bow. It barely pierced the leather armour. The woman stumbled back, yarding the arrow out of her armour and pulling a sword at the same time. \n\nIna suddenly wished, and not for the first time in her life, that she was better at distance magic. She could see the one she already shot pulling himself together and moving towards them, and knew the other one was there somewhere as well. She could turn and run...but she had the sudden notion that doing the opposite of what was expected was what this situation called for. She swallowed her nerves and lunged at the woman just as the sword was fully freed from its sheath. They went down like a ton of bricks. Ina rolled off her and sprung towards the broken stairs on the other side of the courtyard. She pulled up a ball of fire in her hand and leapt up onto the center of the staircase whirling with her bow in one hand and a growing ball of flame in the other. She made it as big and flashy as she could...they didn't know she couldn't get much distance on it, and she wasn't about to tell them. \n\nShe gave them her craziest grin. \"If you want me...you're gonna have to come get me N'wah.\" They hesitated, and for a moment she thought she had a good plan formulating, involving a lot of jumping around maybe, but good...but a shadow came at her from an angle she had thought clear a moment ago. The Bosmer must have just come out when he heard the shouting. She was about to whirl on him and unload the mass of flame she'd worked up but something else came out of the air from behind them all. \n\nA massive, silent body slammed into the wood elf who let out a brief scream before falling silent. They all whirled to look down at the mangled body, two of the hunters stumbling back and away, gazing in horror at the mangled corpse and looking around for whatever did the damage. She could take a guess, but he was already gone. She took the lull to dock her bow and leapt at the third hunter, giving him a chest full of fire ball. He stumbled away screaming, falling to the ground desperately trying to claw away the unnatural heat which she knew was eating him up, inside and out. She rolled away and to the side, pulling her knife and waiting for the next comer. There wasn't any. She heard a scream beside her, and turned just fast enough to see the blur take out the last hunter before coming to a skidding halt, clods of earth and grass flying out from under long gouging claws. She'd barely registered the sight when the door next to her swung open and the dagger in her hand was flying toward an angry face. She was a little slow and the spell that hit her got her square in the chest, knocking her onto her back, her body jerking violently as the electric pain coursed through her body and a scream ripped through her insides, tearing her apart, but dying on her tongue as she gaped open mouthed at the blue sky. \n\nIt felt like her lungs had been wrung empty like a damp rag. There was a snarl behind her, and another scream. A golden head appeared over hers and she grinned up at it with a wince. \n\n\"Hey don't give me that look...I'm invincible don't you know?\" She ruined her bit of swagger by immediately coughing up what felt like half her lung. \n\n\"Ow.\" She rolled up onto her knees, her limbs shaking and skin still buzzing with the lightening currents that had just made a respectable attempt at cooking her alive. \n\nSomething felt wrong...something inside...that couldn't be good. She coughed and grabbed a large vial from her belt, choking the bitter liquid down with another wet cough. It was a shame she needed this so soon. This was why she worked alone...it got too damn confusing when other people were involved. He was pretty scary though, which made her feel a bit better about the whole mess...she wouldn't have to watch his back quite as hard as the thought she might. \n\nShe got to her feet and checked her equipment, looking around at the same time. Six...no seven bodies already, he must have got a new one when she keeled over. Well whether he liked it or not, they were definitely making a point. The place looked like a war zone.\n\nLuckily there wasn't much to the rest of the fort. It was smaller and half collapsed making it easy to navigate as there were only so many viable paths. They only encountered two people on their way through the winding corridors, both of which she nailed before they could send up an alarm. It made her wonder why they'd all been at the entrance. Preparing to leave? \n\nThey finally came to a heavy set of doors which in her experience indicated that they were nearing the heart of the place. If there was anything here to help them out it would be in here. Feric was prowling around behind her and she heard him huff. She looked back over her shoulder, her hand on the door ring. He lifted his head and jerked it toward the door. She released it and threw out a life detect spell. She smiled as Feric lit up before her like a night-market light show, shimmering with the reddish glow of the living, the brilliant light marking the impressive strength of his life force. Through the door a number of small shimmering lights appeared as well. Maybe another three, and relatively close. She held up a hand to indicate the number and nodded at the door. She cracked it, just the tiniest bit and saw a large well lit space with a figure moving about. He was in mixed armour...freelance rogue type no doubt. The still shimmering spell told her the other two were just around the corner. She closed the door and backed away.\n\n\"What do you think...should we wait until they leave and ambush, or go in spells blazing?\" His eyes darted to a side corridor and she was about to nod agreement when he whirled again and the hair on his neck stood on end. The spell was just starting to fade, but not before she caught several glowing lights hovering through the walls around them. Crap. Someone came home, and they were being quite about it. She motioned to the corridor and then took up a position against the wall next to the second passage. She renewed her spell and watched as the place lit up again. They were everywhere. Damn damn damn. ",
        "To her consternation the figures near her side of the passage halted at the bend in the corridor...they must have someone casting similar spells. To hell with that noise. She tipped out her bow and cursed softly as a rather impressive fireball scorched the wall facing her. She was lucky they were using fire, it had been big enough to let her feel the heat of it, and had she been anything but Dunmer the backlash would have hurt like nobody's business. She let out a groan of pain, then turned to wink at Feric to let him know it was for show. If they thought fire was working they might keep using it. He nodded and crouched low. She held up two fingers and pointed to his passageway indicating the lights she saw moving in towards them from that direction. Luckily most of them seemed to be coming up her way. She tipped out her bow again and another fire ball came winging down the aisle. \n\n\"Feric,\" she whispered. \"If things get ugly, I'm going to yell 'I give up,' after I do that you'll have four seconds to get your ass down one of those corridors and as far from here as possible.\" She noted his expression. \"Trust me, I'm going to make a mess, and you don't want to be in the middle of it...K?\"\n\nHe made an affirmative nodding gesture and she cocked her head at the fading lights coming up his alley. They both got ready. \n\nShe turned her back, and slid down the wall, tipping an arrow into a vile she'd found on one of the bodies near the entrance. She was no alchemist but she could usually ferret out the difference between a potion and a poison by smell, and this particular item smelled none to healthy. She adjusted the bow and stuck a hand out, waiting for the sensation of a nearby cast to come, then twisted into the corridor before the flame even hit the wall, knowing the mage had yet to recover and would be blinded by their own light as the spell exploded behind her. She fired into the middle of the robed figure and watched just long enough to see them go down. She readied another arrow even as she ducked behind the wall. Another fire ball came and she repeated the shot, noting the mage was still kneeling. She made for a head shot and fell into a crouch as the two big figures came around the other corner. One came at her, the other went down as Feric leapt on his back, his teeth burying soundly into his throat, ripping it open with a single, violent twist. \n\nIn a mind-blowing stroke of bad luck the three that she had detected behind the door chose that moment to join them, no doubt hearing the shouts. Feric whirled to meet them. She offered him what help she could, sending her next arrow into their midst, but taking a nick to her shoulder in the process as the hunter who was originally going to get the arrow got his stay of execution. Luckily most of it was deflected by her armour, but it still didn't feel too hot. She caught the next blow with her bow, using the ebony curve to turn the blade as she caught one of her daggers up in the other hand to slash the big warrior across the face. His heavy armour didn't give her many options so she jumped at him as he was stumbling back, clawing her fingers towards his face, letting her fire sear through her fingers. They went down in a pile, rolling away from each other, him whimpering in pain and searching for something on his belt, her already reaching for another arrow. Feric was pinned back against the door, snarling and trying valiantly to dodge lunging swords, taking swipes at them where he could. She lodged an arrow in to the back of one skull giving him some space, and he used it to lunge at the leg of a khajiit with a long spear. He got his leg, but he also took a nasty looking wound from the spear as well. \n\nA holler behind her and the sting of an arrow tearing at the flesh in her leg made her turn from the scene. A bow woman, also Dunmer, was loading up another shot, and the mage she thought she killed was closing in as well, looking a little worse for wear, but still on his feet. Behind them were at least another two bodies worth of backup. \n\nShe dodged the next arrow only to find the big knight she'd grappled with back up and slicing at her with his sword. The khajiit was behind her as well, though on the ground and bleeding profusely. She snapped up the spear from his weakened grasp and thrust it up to block a powerful overhead swipe from the knight. She managed to keep her head, but was forced to her knees. She twisted the spear, sending the blow off to the side and swiping it down to catch one of his legs, taking him down just long enough for her to whirl the spear towards another attacker. She knocked another blow away by a second hunter and was about to make a thrust when a fiery blast hit her from the side, tossing her rag-doll style into the wall. It hurt, but it didn't kill her. She was up a moment later, the spear still in hand, thrusting the shoddily made thing into the nearest soft body. She'd do just about anything to have a decent chitin spear right about now. It hit home, despite its inferiority, and she jerked it back, pulling said body toward her and using her free hand to finish the job with a lesser dagger, seeing as her good one was already lodged somewhere in some one. The manoeuvre did the trick but at the high cost of leaving her flank open. \n\nThis was absurd. She couldn't fight locked in like this. Did she look like the muscle? No, no, she didn't, thank you very much. No, he was busy playing pin cushion in another corner somewhere. Screw this noise. She parried another thrust and went for the legs, trying to make a move for the door to find some more room for this Punch and Judy show. She was almost ready to make a dash when a terrible sound or pain rang out, reverberating through the halls and making her innards twist in disturbing ways. She turned and saw Feric rolling away from an opponent, a swath of red cutting across his side in a way that made her nothing less than sick to her stomach.\n\nThat moment of distraction cost her and she felt the tip of a blade make itself at home in her back. She thrust the butt of her spear backward and into her attacker, twisting to wrench the offending blade out with a shock of searing hot pain. She felt it all the way to the ends of her hair. She let out her own terrific shout, though hers was a battle cry as she lunged at the fresh bunch of hunters cornering Feric again. They both started at her shout and turned to face her, one paying for it as claws tore into her back, another going down beside her as the spear whipped under his leg. She whirled again, letting Feric finish them off.\n\nShe gazed wide eyed at the crowd choking the hall. There was still at least half a dozen of them, seemingly manifesting from thin air, and a few of the injured seemed to be reaching for potions as they crawled to safety. She could feel her own body weakening with pain and blood loss, and knew that wound of Feric's wasn't going to let him keep going for much longer. She took a deep breath and shouted.\n\n\"I give up.\" The two nearest her paused in surprise. One-one thousand. She lunged at them, sword in one hand, spear in the other. Two-one thousand. She batted away a sword with the spear shaft, only to have the damn thing break under the force. Cheap imperial garbage. Three-one thousand. She tossed the fractured butt into one hunters face, ducking under his arm as he swatted it away, and swiped wildly at another with the sword, forcing them back. Four-one thousand. She tossed herself back into the corner she'd just tried to escape. She wondered if they were confused yet.\n\nHer darting eyes couldn't find the tawny gold hide anywhere. Now or never. \n\nShe took a deep breath, raising her hands over her head and thought hot thoughts. Something sharp and painful came down on her arm, and something heavy slammed into her ribs. She forced herself to ignore it, easy now to do as she felt every square inch of her flesh light up with molten heat, filling her mouth with the taste of flame, blinding her with its light. It was only seconds but the build felt like ages. There was so much of it, and so hard to control, it took every ounce of her will to contain the swelling blast, not to mention the murmur of a cast. Yeah, it was that kind of spell, too big to just feel it out. Somewhere in the distance between the depths of her mind and the outside world she heard a call of alarm, slow and deep as if through water. \n\nShe blocked it, blocked everything and opened her eyes. She opened her eyes and let go. \n\nIt raced through her, spilling out of her. She could feel the heat of it, knew by its intensity that if it hadn't been her own heat, it would have seared the skin off of her in seconds. She was still too blinded by the massive explosion to know what it had done to anyone else, all she could do was hold on as the spell ripped through her endlessly and at lightning speed and filled the space around her, forcing its way down the two facing passages. She prayed hard that Feric had made it far enough down the third. \n\nShe couldn't tell how much time had passed, how many seconds or minutes, but it did pass, and eventually the last courses of power whisked suddenly from her body, deflating her instantly and dropping her like a master-less puppet. She crumpled against the wall her head lolling in a sick and dizzy way. She was groaning. She knew it only because the sound was giving her a head ache. \n\nShe slowly opened an eye, expecting the sight that greeted her, but still having to swallow hard to repress the urge to gag. The smell didn't help. She got to her knees and crawled her way out of the corner, trying to turn her mind toward finding Feric, keeping her eyes away from the broken black and red skin, and holding her breath against the unappetizing scent. The ones closest to her had taken the brunt of it, and it showed. She made it as far as the entrance to the side corridor before she had to stop and rest against the wall, her breath coming in short painful gasps. She was shaking and realized quickly that she couldn't really move one of her arms. Broken. She felt up her arm and found the break. It seemed like a sharp, clean break. Things were looking up. \n\nRiiiight. \n\nA huff made her look up from her arm. Feric was padding, or rather limping down the hall toward her. She started to smile, more grateful than she could say to see him still on his feet. Her relief faded fast when he looked up at her and she saw the fog of pain that dulled them to a dismal grey colour. His eyes rolled a little and he shuddered, his body transforming in slow motion, as if it took all of his energy to do so. \n\n\"Feric?\" she called softly, moving to go to him, but finding her body too broken to let her. He was on his hands and knees, panting softly in pain. He shifted so that he was leaning in a half sit against the now slightly blackened wall behind him, opening his eyes to gaze into hers from across the hall. \n\n\"You look like hell warmed over. I thought you said you were invincible?\" He rasped, giving her a weak smile which contorted rapidly into a grimace.\n\nShe would have laughed, but something in her chest hurt too much. She lifted her unbroken arm and pressed lightly into the firm leather. Oh, god, there it was. Broken rib. She was lucky her lung was in one piece. She breathed in, and squeezed her eyes shut against the terrible aching, throbbing... fuck it, maybe she'd just die here and leave it at that. Then again, her ancestors would never let her hear the end of it. Fetchers. They'd have all of eternity to rib her about it too. She opened her eyes and appraised Feric. He was bleeding. A lot. Her stomach turned violently again at the sight. She whimpered and coughed. \n\n\"Yeah well, I usually work solo. I would have been just peachy...if I hadn't been watching...your...fine ass.\" She managed a half smirk. There was so much blood. \n\nHe snorted. \"Well, thanks ...for watching it then.\"\n\n\"My pleasure.\" \n\nHis eyes darted over towards the chaos of bodies. \"What...what did you do exactly?\"\n\n\"Something a friend taught me...invented. Effective...but exhausting\" she grunted and let her head roll against the stones. There was a long pause filled with the sound of laboured breathing.\n\n\"Let's...let's not do that again.\"\n\nShe nodded weakly. \"Agreed. Feric?\"\n\n\"yea?\" He gasped out through another wince as he tried to move against the wall. He left a smear of bright red across it as he moved. She swallowed hard.\n\n\"Can...can you\" she paused to take as much a breath as her ribs would allow her, \"heal?\"\n\nHe furrowed his brow and closed his eyes for a few seconds before snapping them open with a soft moan. She felt the sound somewhere deep in the center of her. She dug deeply into her own mind, reaching for whatever will might yet be dredged out of it, but it lashed back at her making her head swim. Tapped out. \n\nNo. \n\nNo, no, no, and no. This was not going to go down like this. HE was not going to go down like this. She turned her eyes to the group of bodies. Alright. She could do this. Someone had to have something. She would have taken a deep breath to steel herself, but the effort might have killed her. She rolled over onto her knees and let out a shocked cry of pain when her right hand touched the ground. Oh that's right, broken. Inanna felt the overwhelming urge to just scream the pain out until she just lost consciousness. She was panting almost to the point of hyperventilating, which did little to ease the pain in her chest. She just couldn't win could she? She needed something, something to distract her from the pain. \n\nShe dug into her hazy shattered mind and found a thought. An old Ashland poem, it was the first thought that came to her. 'Good enough.' She recited it to herself. She recited it again. And again. \n\nShe was at the first body, leaning on her left arm. Dammit, an archer. She'd only have God damned poisons. There was another close by, big, lots of armour...oh that's right, him. Good, that was good. She dragged herself over to the body, using her legs to push herself and her one good arm to pull. She leaned against this body as well, propping herself against the charred ridged plate mail. If it was hot to the touch, she couldn't tell. A wave of nausea washed over her and her vision fuzzed in unsettling ways. She let out a low groan. She must have over extended her will. As if confirming the thought, her head pounded unkindly. Dammit, and she lost the poem. She reached for it again, but it was gone. Everything was gone but the blinding pain. She'd just have to do this the old fashioned way...grit her teeth and bear it.\n\nShe started searching the body, looking for a pouch or belt, grunting and whimpering through the pain. Oh, thank the gods, any of them, all of them. She tugged the little pouch open. There were two small vials. She grabbed one and popped the top with her teeth, tears trickling down her face as a whole new pain made itself known. She ran her tongue over her teeth after letting the stopper fall into her lap. None were broken...it must be her jaw, she twisted it. Well it wasn't broken at least, fractured and bruised maybe, but not broken or dislocated. She sniffed the potion. It didn't smell too bad, but she wasn't much of an alchemist, especially not with foreign ingredients. She tipped a little into her mouth. It didn't taste too bad either. A little medicinal, but that was expected. She waited a moment, swishing it in her mouth as best she could before swallowing. The new throb in her jaw seemed to dissipate slightly. Well that could have been in her head, but she wasn't feeling any worse. 'As if that's possible.'\n\nShe gripped the open vial in her teeth and grabbed the second one before swaying up onto her knees. She pulled the second vial out of her mouth and shuffled awkwardly on her knees to where Feric lay half propped against the wall. His eyes were closed. There was even more blood. Far too much blood.\n\n\"Feric?\" She called as firmly as her body would allow without knocking herself out with the pain. Nothing.\n\n\"Green?\" Her insides roiled, and she had to work to keep her hand steady. She was still moving toward him, but the last few feet may as well have been as vast as the Sea of Ghosts itself.\n\n\"Feric!\" She practically hollered, ignoring the pain, as well as the tears that ran freely in streaks down her face, \"open your fetching eyes, god damn it!\"\n\nAnd he did. She let out a gasp of relief...but the relief was short lived when she saw his eyes. They were so dark, staring, focused on nothing. She crashed down next to him and dropped the stopped vile into her lap, awkwardly lifting the open one to his lips with her left arm while the other lay useless beside her. \n\n\"I need you to open your mouth and drink.\" He made a murmuring sound.\n\n\"Drink.\" She insisted pressing the lip of the tiny jar against his mouth. He murmured again and something like 'can't' came to her ears.\n\n\"Fuck that. Drink damn you. Open.\" She grunted and slid back onto her knees. Her heart was slamming hard into her throat, as fast as a rabbit's. She was hyperventilating again. She wasn't going to stay conscious much longer like this. There was...just too much pain...\n\n\"Drink!\" She cried desperately. \"You are not dying on me you son of a bitch. I am NOT dragging your sorry corpse back to your daughter. Drink! Please...don't do this to me Serjo.\" She breathed this last thought out with a choked sob of pain and frustration. \n\nHis lips parted, just a tiny bit, just enough, and she tipped the vial and shoved her arm under his chin, forcing it up. He choked and coughed, but eventually it went down. She grabbed the other off the floor from where it had landed. Her vision was spinning wildly now. His face was a blur, just smudges of colour, she uncorked the vial, feeling the cork out with her lips and yanking, pointing the business end of the vial at him before stopping herself. She spat out the cork and brought this one to her nose and lips. It smelled and tasted the same, she thought, but then she could hardly see or think, oh Azura...don't let her kill him now. She blinked the stars away and aimed for the long straight smudge of dark colour where she thought his mouth should be. Her fingers brushed along it. It was warm, slightly damp. She felt breath, that meant his lips were still parted, she hoped. \n\nShe swayed once, then steadied herself. She couldn't really feel much for the moment, it was like being really, really, sick drunk. That wasn't good. She was shutting down. Poem, poem, where was the poem. Stay a-wake. She tipped the vial a little, her fingers making sure it went in. Some words came to her \"weal and woe\" she whispered in Dunmeri. \"two souls...in faith...with never...\" no that wasn't right. She tipped the vial all the way up. Her fingers were on his jaw. She could feel the warm skin, but she couldn't really see it any more. Stay awake you stupid chit, don't go passing out now. \"To bind two souls...\" yeah that was right. That wasn't the first line was it? \"First and last?\" No, that was the last line...how Did that stupid thing go again? \n\nThere was something warm on her face. \n\n\"Ina?\" A voice...careful...shaken...male. \n\n\"What is it?\" She asked still murmuring in Dunmeri. \n\n\"I...I don't understand you...are you...can you hear me?\"\n\n\"Hmm? Yes.\" She frowned, what was he speaking? \"Yes.\" She answered again in common. \"Can you hear me?\" Her eyes were open again, she was looking at a shifting blur. A shifting blur with stars. It might have been pretty if it didn't make her want to throw up. A short, disbelieving laugh.\n\n\"Feric?\"\n\nA sigh.\n\n\"Thank Lady Kyn.\"\n\n\"Heal yourself.\"\n\n\"What about...\"\n\nShe frowned hard at the blur. \"You're no good lame...heal yourself, before I ...really put the hurt on... you.\" She threatened lamely.\n\n\"Woman,you're mad, you know that?\"",
        "She grunted and swayed. \n\nThe warmth on her face disappeared and she felt a cold hardness against her back. She was throbbing...no, beating, like a drum, hard and fast. She was fire, burning. Ooohhh, but not in a good way, oh no, not good at all.\n\nHang on, hang on.\n\nWarm again, but good warm. On her face and neck. \"Good?\" She asked softly.\n\n\"Enough. We have to get you out of here.\"\n\n\"Heal me.\"\n\n\"I can't.\"\n\n\"Heal me.\"\n\n\"Inanna, I can't. We can only heal ourselves.\"\n\n\"No. You can. Aina can. Just do it. Don't argue.\" She opened her eyes one more time. Still just shifty colours...and that pounding drum. What was she doing?\n\n\"Aina can?\"\n\nAh, yes. \n\n\"Come on green. Lay it...on me.\"\n\n\"I...how? I've never...\"\n\n\"Like you do for yourself, same thing... I mean. Damn, I...it...\" She paused to breathe...but that made the drum pound louder in her ears. \"ugh, same as...just, just transfer it out of you...think of me...instead. Think it. Send it out. You...just...have to, uh, want it enough. Right?\" She fumbled for the warmth on her face and pressed it into her. \"Focus.\"\n\nShe waited, and she listened to the drums, and she thought about the broken poem. And then she was warm. Warm in her face and neck. Warm in her shoulders and arms. Her arm popped in a funny way, and then there was pain. Pain everywhere. She cried out. Screamed. She had to, there was just so much of it, so much pain; In her arm, her chest, her head. Something warm and sticky was on her back, something stinging in her thigh. She vaguely recalled a sword wound and an arrow to match the sensations. \n\nHer eyes snapped open. Her vision was still fuzzy, but only around the edges. Feric was looking down at her, his eyes looked drawn and grey, his hands weren't warm anymore, but they still held her face. \n\nShe blinked a few times, then lifted her arm. It still hurt, but it wasn't broken. Just bruised probably, maybe even the remains of a fracture. But better. Functional. Good enough. She grinned wearily at the worried face looming over hers. \n\n\"See? I'm always right.\"\n\nHe let out a little sigh.\n\nShe watched his worn out eyes as he gazed back down on her, his brow furrowed in concern.\n\n\"I hope you didn't over-stretch. How... I mean, how's your head? Dizzy? Vision?\" She gave him a once over. Except for the worn out look, he seemed ok. Nothing broken or bleeding, that's what mattered.\n\nHe shook his head. \"I'm fine, I'm alright. I'll live\" He blinked and his fingers tensed against her face. His voice softened. \"Thank you.\" \n\nShe nodded, and swallowed. \"Right back at you.\" She took a deep breath. It didn't feel great, but she could do it without bursting into tears. Faaaantastic! She reached up and covered his hand with hers and closed her eyes, enjoying for a few moments the feel of his fingers on her skin and the divine joy of being able to breathe deeply. She felt his forehead come to rest against hers and a different kind of pain tightened her chest. She clenched her jaw and fought the urge to get all weepy and emotional. \n\n\"So...let's get this show on the road than shall we? The super-secret plans aren't going to steal themselves. Not that we've been very good thieves so far.\" He released her as she pushed forward and started making motions to get up.\n\n\"Come on, we have to get you to a proper healer.\" He reached for her again, holding her elbows and pulling her up against him. She chocked back another wave of emotion and forced her face into a wry grin, gingerly untangling herself from his protective arms, careful not to look him in the eye lest what she see there undo her entirely. She took a deep breath and collected herself.\n\n\"No, no, we've come this far, we need to see if we can find anything. Besides, I don't think we left anyone alive down here.\" She sighed and looked at the disaster in front of her, both happy she could actually see again, and disheartened at the sight. \"Pretty damn impressive of us, I've got to say.\" Her voice shook slightly as an uncontrollable shudder, caused by her over-draw, jerked through her. She passed her eyes over the carnage and spotted a singed grey blue robe a few feet down the hall. \n\nShe tottered on her feet using the wall as support. \"Oi.\" She groaned. \"Feels like a chunk of my brain exploded.\" He stood with her, holding her shoulders to steady her, his face a mask of concern. 'Oh Serjo, you're such a dear.'\n\n\"Inanna, you're still hurt, if they come back...\" She smiled through her head ache, which was a hell of a feat if she didn't say so herself, and patted his arm. Well at least the pain was keeping her too weak in the knees to go...well, weak in the knees, at his touch. Oh joy. If those were her two options now...'then someone, please, resurrect yourself and put me out of my misery.' Where was a necromancer when you needed them?\n\n\"I'll be O.K. , we'll just have to keep our collective heads down. Besides, if we leave now, there's no way we'll get back through here a second time. Right?\"\n\nHe didn't look convinced, and shook his head. He looked around huffing out a frustrated sigh.\n\n\"Oh, don't be such a baby. Don't tell me that was your first near death experience? What are you, some kind of rank amateur?\" She grinned as hard as her mind and body would let her without either shattering. Frankly she was in a mood to feel sorry for herself, but she knew he couldn't take it just now. He looked ready to toss her over his shoulder and march her to the nearest priest. Which, under other circumstances, might be charming as hell...but they had a work to do. She'd mope later, on her own time. Maybe he'd want to comfort her, the old fashion way...right, not with her luck. Her grin threatened to falter, but she was a stalwart soldier.\n\n\"We better move then.\"\n\n\"Good man.\" She slapped his shoulder, harder that she should have, because they both winced, and she pulled out of his hands with an apologetic grimace. \n\nHe shifted, though it seemed slower than usual, like he had when he was injured, as though it took more effort. He made his way to the door they'd been aiming at before all hell broke loose and looked back at her over his shoulder.\n\n\"Hold on a minute.\" She called. He paused and waited as she pushed herself off the wall, willing her legs to keep her standing. Her head swam a little, but she made it to the bluish robe and ignored the wide staring eyes and contorted death mask that belonged to it as she went through the pockets.\n\n\"Aha!\"\n\nShe found a wax paper package and opened it revealing small roundish disks. They were brittle and dry to the touch. Ugh. It looked really, really healthy. She screwed up her nose as she bit into it and made a face. Flax cookies with dehydrated bits of what she could only assume were once blueberries, at least in a former life. It was worse than it looked, there was something odd and bitter underneath, something plant like, something not really meant to be eaten. She pulled out her water, which sadly was still quite warm from her little imitation of a bomb, and washed it down as best she could before snapping the lid on her skin closed with a pop, and thrusting another cookie in her mouth. God was this mage a masochist or something? Hadn't they ever heard of honey? \n\nIn the poor dead bastard's defence, it seemed to be doing the trick. The fuzz on the edge of her vision seemed to be dispersing, and her legs had stopped wobbling, or at least the wobble had been reduced to a mild muscular spasm of some kind. She even felt the first distant sizzles of fire in her blood. Potent stuff these cookies. Too bad they tasted like the wrong end of a rough night. She walked up to Feric and returned his quizzical look with a cocked brow and a shrug, then gestured to the door. \n\n\"Awer ouu.\" She muttered through the hunk o' sawdust still crammed between her teeth. She just couldn't bring herself to start chewing. Ugh. \n\n**\n\nHe was livid. \n\nHe looked up at Inanna who was giving the stump next to him a fixed glare from across the tiny glade. The look in her eye was so intense he shifted away from the hunk of wood, imagining it might burst into flames at any second. They sat in the dark in silence, both of them mulling over their thoughts with clouded expressions on their faces. There was no fire as she was concerned about attracting attention. He had to agree though it worried him knowing she was still recovering from her wounds. He wanted to take her to a healer, but she insisted it would lead the hunters back to them. She was right, but he didn't like it. He had even tried again to help her heal with his own powers, but exhaustion and inexperience made him barely more than useless. \n\nAnd all of that for an Initial. A God damned initial. He sighed. Then growled. Then paced.\n\n\"What's wrong Serjo?\"\n\nThe calm caress of her voice washed over him, settling the hairs on his neck, and he paused to look up at her as she stood from her crouch, turning her gaze to the darkness.\n\n\"Did you scent something?\"\n\nShe turned back to him, and he responded in the negative. She rubbed her hands against the tops of her thighs and cast her eyes into the darkness one more time before coming to his side and sitting on the stump. She propped one naked heel on it and laid her cheek against her knee, turning her head to look at him. She smiled a tired smile. She was only wearing pants and the wrap again, having removed the torn and bloodstained layers of leather and silk in order to tend to the wounds not completely closed by his attempt to heal her. He had been a little stunned to find he could, but then when every one of the pride could heal themselves, there was no need to learn to heal others.\n\nFrom this angle he could see remains of the sword wound she'd taken in the back. It had gone deep, and despite his efforts, and a vial of whatever she'd fed him found in a store room, had only just stopped seeping. He was amazed she'd found the strength to drag herself over to him, never mind get up on her knees and force feed him potions.\n\nHe padded over to her, the urge to be near her easily overwhelming his perpetual caution. Everything else just seemed to cease mattering. She was injured. His mate was injured. He needed to be reassured that she was going to be ok. She watched him and lifted her head. As he neared her the scent of her filled his mouth. To hell with it, he could care less right now. He needed this. Needed her. \n\nHe reared his head gently, brushing her shoulder and face with his cheek. She wrapped her arms around his neck and buried her face against it, squeezing and caressing him back. Apparently he wasn't the only one in need of comfort. She kept her face buried against his neck, breathing slowly.\n\n\"I know I'm supposed to be cut off and everything, but I can think of a better way to...assure each other of our mutual good health.\" He lifted his head from her lap to regard her. Her face was soft, open, and gentle. He was more than tempted. \n\nShe didn't wait for an answer but slid to her knees in front of him, mimicking their positions on their first night together by the waterfall as she smoothed her hands over his head and neck, nuzzling his cheek with her own. He let out an involuntary purr and nuzzled her back, flicking the length of her ear with the tip of his tongue, his growling purr mounting when he felt her shiver in response. Sensitive elven ears. He smiled to himself and nestled his muzzle against her neck and shoulder, flicking her warm salty skin with a tender lap before brushing lightly down her shoulder over the bruises and scratches. She whimpered, an almost inaudibly sound, unconscious, he knew, and he looked back up to her. She gave him a small smile. \n\n\"It was broken.\" She raised her other arm to run her fingers over her ribs. She fingered open the knot holding her wrap and loosened it, letting it slide from her body. He was only momentarily distracted by the vision of her bared breasts. Far more immediate was the sight just below her right breast, a broad pool of blue black against her dark grey skin. \"I broke one of these too. It's alright now though...just bruised.\"She touched it carefully, her eyes looking down to assess the damage. The sight made his heart ache that much more. \n\nHe pressed against her again, careful not to get too near her bruised side, rubbing his cheek against her left breast, catching one soft nipple with his tongue, feeling it harden instantly in response. She gasped and curled her fingers into the short fur behind his ears. He took it as encouragement and rubbed a little harder, tickling the skin of her neck with his whiskers. She laughed softly, then groaned. A small hand slapped his shoulder lightly. He growled back playfully.\n\n\"Don't make me laugh,\" she murmured against his ear, \"it hurts.\" \n\nHe pulled away a little and she grinned at him, cupping his face and kissing his bridge of his nose and between his eyes. He gave a mild head toss in his own expression of amusement. She chuckled again. \n\n\"I told you to stop that.\" She gave him a mock pout, then blinked when he pulled away and turned from her. She frowned at his retreating back, getting to her feet confused by his sudden change in attitude.\n\n\"Feric? I was only teasing...\" He turned back to look at her over his shoulder, his eyes gleaming. And what have we here, was that mischief they were gleaming with? \"I'll be damned\" she whispered to herself with a smile and followed him in to the darkness, her wrap forgotten, wearing only her clinging leather pants and a mischievous grin of her own. \n\nShe narrowed her eyes and peered into the darkness. All around her loomed huge boulders skirted with long waving grass. The overcast sky turned everything into shifting shadows, dark shapes in the night. Even so she was amazed that 400 pounds of muscle could vanish so easily before her. She stepped forward cautiously, her skin tingling with excitement, goose bumping despite the warm humidity that hung in the summer air. Her ears perked at a sound, a rustle, out of place among the hum of crickets and peace beetles. The air was heavy with impending rain and windless...something was moving out there. \n\nIt came again and she whirled to the right, dropping naturally into a ready stance, instincts taking over, her aches and pains forgotten as her adrenaline surged. She listened hard for another movement. Something brushed the back of her thighs and she bit back a cry, whirling and finding the space behind her empty again. Her heart pounded in her chest and she twisted her head about the grass with a grin. Sneaky kitty. She caught a shadow move in the corner of her eye and pretended to ignore it, scanning the darkness under the overhand of a nearby boulder instead, silently sidestepping her way toward the initial movement. She thought for a moment she could make out a denser shadow hidden in the tall grass. She licked her lips and lunged toward it. It darted away to the right and she grinned turning to the left. That ought to mess him up.\n\nShe tore around the side of a sloping boulder and climbed atop the craggy thing peering out over the edge for her quarry. She chuckled silently to herself. Looks like he was taking her prey analogy literally. Well that was ok by her, so long as he was still willing to play once he got caught. \n\nThere. He was crouched low under a boulder across from hers, no doubt waiting for her to come out from behind it. She waited, breathing as quietly as her excitement allowed her, and gazed down at his patient figure. Finally he slunk forward, vanishing intermittently in the shadows, until he was almost under her. She wondered if he'd seen her already and was toying with her...it was a low enough ledge that she was on after all. She decided to risk it and dropped from the rock. He saw her coming too late, and fell into a crouch beneath her.\n\nShe wrapped her arms and legs tightly around him, letting her fingers dig into his fur like the claws of a mountain lion jumping a deer. He snarled and dropped his front to shake her off. She slid forward on his back, feeling the bunch and ripple of his massive body beneath her, straining between her thighs and causing a shiver of desire and fear to course through her. Not the least of all because of the memory of last night's activities which were still oh-so fresh in her mind. \n\nShe wrapped her arms around his neck and buried her face there as well, clinging for dear life. He reared up and she let out a small squeal, but didn't let go, her arms still tight around the corded muscle of his neck. He landed again and stood there, his body tense and legs splayed defiantly. She wriggled forward again and brushed his ear with her mouth. \n\n\"Does this mean I win? What's my prize Serjo?\"\n\nFeric suppressed a shudder at the husky sound of her voice whispering in his ear and rolled his shoulders under her, enjoying the strange but delightful feel of her writhing weight against his back. She tightened her legs about his waist and he growled with pleasure. He was almost sorry to have to do what he did, but he grinned as he did it nonetheless. He twisted suddenly, and shook, sending her rolling off of him with a soft thump. He twisted again and was on her before she could open her mouth to complain. She let out a soft cry as his jaws came down around her throat and she stilled. His mouth watered slightly as he stood there, her slim throat held tenderly in his jaws, her breathing short and frightened, her scent a deep and heady musk, tinged with fear and an intoxicating dose of arousal.\n\n\"Yield\" she whispered softly and he slowly released her, licking the unscathed skin of her throat. She returned the gesture by running a hand over his neck and squeezing the back of it. \n\nHe continued to caress her as he had earlier, scenting and marking her stomach and breasts, watching with pleasure as her eyes grew heavy and her breathing laboured. He chuckled to himself and nuzzled back down to her waist, taking the band of her leathers in his teeth and tugging before releasing it again, lapping at a scratch over her hip. His way of saying he'd do it himself, but there was already enough damage done to her tonight. She giggled, a light playful sound, almost girlish, so rare to hear on her lips, and reached down to untie the bindings and slid the tight material down over her lifted hips. Instead of laying back as he expected her to, she got up on her hands and knees. His own arousal flared to life and he felt his cock twitch anxiously as he watched her, admiring the slow sensual movements of her lithe body.\n\nHe growled in consternation when she didn't immediately turn her back to him, but crawled forward and he watching in confusion as she skirted around him. He was about to turn and follow when an unexpected sensation stopped him, and a small hand wrapped around his already engorged and intensely sensitive cock. He growled low in his throat and hunched his hips reflexively, digging his hind claws into the dirt. She was undeterred and he shuddered as what could only be her mouth wrapped hot and wet around the tip before slowly sinking his now pulsating member deeper, swirling her quick and talented tongue around the length as she went. He tried to look back to see her and caught sight of her small rounded ass instead, rocking gently as she moved her mouth over his heat. \n\nThat sight was more than enough to set him off and he bowled her over with a side step, forcing his tongue between her thighs without even bothering to right himself. He ran his tongue down the length of her, eager and hungry for the spiced nectar he could scent so clearly in the air around them. Her legs fell open without resistance and he heard her moan softly as she arched her hips up to meet the next stroke of his tongue. The next moan was muffled by his own growl as he felt her return the favour once more and the head of his prick dipped back into her waiting mouth. He pressed forward automatically, pushing deeper and her hands grasped his hind legs to try and slow the thrust. He shuddered and recalled his control as best he could, forcing himself to still. He managed it, though his body shook slightly with the effort, and he returned with renewed vigour to the swollen lips spread invitingly before him, grinding his tongue against her clit and purring as he felt her moan in response. ",
        "Inanna groaned deeply around the stiff wet cock as he attacked her again with his tongue, this time almost aggressively, flicking the nub of her clit and pulling at the slick folds in a way that made her hips jerk and toes curl. She tried to use her own tongue to drive him as mad as he was making her, but she couldn't seem to keep her head long enough to do more than suckle at him erratically, her rhythm decimated by the jolts of pleasure that surged through her each time he lashed at her with that long incredible tongue of his. She was finally forced to give up, releasing him and panting as she pressed her hips up for more, her fingers still biting into the thick fur of his haunches as she twisted and bucked in pleasure.\n\nShe let out a whine of protest when she didn't get the 'more' she was looking for. He backed off of her and turned. \n\nHe gave her that predatory look. The one she had once mistaken for 'I'm going to devour you.'\n\nWell, perhaps 'mistaken' is too strong a word. \n\n\"I thought you were supposed to be the prey Serjo.\" She whispered softly even as she rolled back onto her hands and knees, the long grass brushing her stomach and legs. She moved into the space she'd already partially flattened with her body and held her breath, her eyes following him as he made a slow circle around her. He paused when he was nearly behind her, turning and approaching, still slow, his head low and shoulders roiling dangerously. She swallowed hard, her body already shaking with apprehensive excitement. \n\nShe turned her eyes away as he came up behind her, his warm breath rolling over the small of her back. She blinked as something cold and wet hit her shoulder, then another one on her back. Her eyes turned upward to catch another large droplet on her cheek. She grinned up at the dark sky. He paused behind her and she hunched her hips up toward him, thrusting her rear as high into the air as she could. This was no time for mixed messages, and her message was that she wasn't going to let a little thing like rain get between her and paradise. \n\nHe responded with a purr that she felt down to the souls of her feet. She hummed her own pleasure as he slid over her, the silky fur of his belly caressing her skin and causing her to arch her back into him for more. He gave it to her by leaning forward over her, his huge front paws sliding down into the dirt, pinning her and covering her so completely that she could no longer feel the rain which cooled the air around them. \n\nShe took a deep breath and closed her eyes, relishing the sensual combination of cool air and warm satiny body against her, inhaling the rich scent of dampening earth, and the faint musk of their joint arousal. She only had a moment to enjoy it before another sensation distracted her and made her let out a deep and involuntary moan. His cock was already slick with his arousal and her own saliva and slide easily into her equally wet sex. She shifted her hips back as much as she could to meet him, but found herself almost motionless as she was pressed to the earth by his massive body.  \n\nHe pulled away, causing another groan to tear from her throat as she wiggled her hips uselessly beneath him. He purred again, a low rumbling sound, and nosed the back of her neck. She could almost feel the laughter in him, could sense the thoughts, though he made no sound but that quiver inducing purr. 'What's your hurry', it said, and she could feel the thought in his motions, his body, as it shifted teasingly over her, his hips jutting only enough to press the heat of his cock against her swollen lips before rocking away. \n\nShe made an incoherent growling sound and bucked up against him, utterly futile except to express her most heartfelt desire that he quit his toying and get to the part where he fucked her senseless. \n\nHe brought his teeth gently but firmly down around the back of her neck, pinning her more properly and keeping her eager body from twisting out of his grip. She stilled her writhing, though he could still feel her hips anxiously grinding at the air. She giggled again, very softly.\n\n\"chew toy.\" She murmured.\n\nHe chuckled to himself and tightened his grip on her neck in acknowledgement, letting her feel them there without puncturing the skin. The sound that came out of her, a soft cooing moan, sent a chill of excitement straight through him and he instinctively pressed forward, shoving himself indecorously inside of her, spearing her silky heat instantly and deeply. This brought another cry from her lips, one that made him thrust that much harder, burying himself until he was pressed against the barrier of her womb. \n\nHe growled and she whimpered. Their hips jerked simultaneously and she thrust her sweet ass up, driving him deeper as her body accommodated him, shifting and stretching around his girth until he was driven to another long growling purr as her body finally accepted him, nestling his throbbing head in the tight flesh under her womb. He remained still, small tremors of pleasure running through his body as her own throbbed around him. \n\nAnother faint whimper made him move once more, gradually pulling himself from her as she gripped him, her tight walls clinging, until just the tip was inside of her. He paused again, tasting her desire on her skin. His jaws tightened by a fraction as he slowly sheathed himself, sawing back and forth into her body with long firm movements, relishing her soft sounds of pleasure and disappointment as he filled and emptied her in turn. He shuddered convulsively. She was good for a man's ego, this sweet nymph. \n\nInanna let out another strangled sound as he trembled over her, his teeth digging in again, his heavy cock jostling her skewered body. She felt the change come over him, wordless, but his body was screaming with it. He shuddered again, this time as he pulled out, and without paused thrust full up into her, raising her knees right off the ground with the power of the thrust. She gasped as a shock of pain jolted through her and dug her fingers into the earth, tearing the grass beneath her as she fought to keep steady.\n\nThe next thrust overcame her and she fell forward, his body following her, his teeth digging deeper, drawing tiny points of pain, but also making her body throb with that indescribable something she could quite place. She was trapped completely now, and he kept her filled to bursting, crouching low over her splayed body, fucking her repeatedly with short hard thrusts. \n\nShe gripped the earth beneath her, her fingers finding fur, and she clung to it desperately, panting softly as the shocks of pressure-pain finally became nothing but pleasure. She dare not meet his thrust but clung still and shaking, her mind focused on the growing ball of light inside of her. It swelled and throbbed, filling her sex, her chest, her head....right to her finger tips, growing until it consumed her and she was suddenly lost in its fiery glow, trembling in its wake like a wren lost in a tempest. It took her completely and she let it, let her body fall limp, her mind go numb, empty. \n\nBut not empty, there was something there, another feeling, far away and dim, sensed not thought. She couldn't even say if it was hers, like separate voices whispering at once, vague and insubstantial...but it made her whimper with need and fear one last time before she lost herself in the torrent of sensation and the world went blank.\n\n'my mate...my love' "
    ],
    "authorname": "Enithermon",
    "tags": [
        "nonhuman",
        "were",
        "dark elf",
        "oblivion",
        "elderscrolls",
        "rough sex",
        "adventure",
        "fantasy",
        "magic"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/hunting-the-hunter-ch-04"
}