{
    "title": "Midnight Movie Club Ch. 03",
    "pages": [
        "Previously on \"Midnight Movie Club\" - Four college students cross paths at the beginning of their freshman year at Farragut College; military brat and film lover Julie Wyndham, laid back musician Cole Scales, modern-day flower child Eleanor Freeman, and kind and outgoing Alexander de'Armound.\n\nThe first Saturday night at college ends with the sharing of a dorm room for passionate sex between Cole and Eleanor, and Julie and Alexander. A get-together the next night to discuss matters leads to another round of vigorous lovemaking between the pairings before the first week of class begins.\n\nAs classes finish on Friday, a severe thunderstorm hits campus, causing Julie and Cole to seek shelter in her dorm room as the power goes out. The pouring rain provides the catalyst for the two freshmen to sleep together. Having drifted off to sleep as the storm continues to rage, neither of them is aware of Eleanor coming into the room and seeing them intertwined in Julie's bed...\n\nX X X X X\n\nIlluminated by the blue-white glow of the nearby lantern, the young woman looked like a vengeful spirit as she jabbed a finger in Alexander's direction. \"This is our year!\"\n\n\"I think being in the dark has affected your perception of reality.\" Alexander crossed his arms and stood his emotional ground, keeping his cool despite his passion for this particular topic. \"The Cup is coming to Seattle. The only thing the Timbers are taking home is that stupid chainsaw your mascot uses.\"\n\nThe young woman leaned forward, looming like a gargoyle. Alexander gauged her height to be a shade more than six feet tall, although it was hard to tell with her sitting down. \"Who knocked who out of the playoffs last year? Oh, that's right, we did.\"\n\nAlexander waved a dismissive hand. \"You won on penalties. That's like kissing your sister.\"\n\n\"A win in a win,\" she responded.\n\nA proud smirk crossed Alexander's face. \"Oh, like how Seattle beat Portland three weeks ago?\"\n\n\"Don't you mean how Portland beat Seattle back in July? Oh, wait.\" She tapped a finger against her chin. \"Don't you mean how Portland knocked Seattle out of the Open Cup back in June?\"\n\n\"Let's count.\" With a cocky look on his face, Alexander held his arm straight out, fingers extended from his hand. He curled each finger down one at a time as he talked. \"Four US Open Cups, one Supporter's Shield...\" With one hand curled into a fist, Alexander lifted the index finger on his other hand. \"...and one MLS Cup. The Timbers have, what, one MLS Cup?\"\n\n\"Which we won in 2015. Before you won yours. But hey, follow the leader.\" The young woman's smile was almost predatory in the lantern's light. \"There's no pity in Rose City.\"\n\nAlexander met her challenge. He leaned forward with a steely glare in his eyes. \"Roll on Columbia, roll on.\"\n\nFrom a couch off to the side, a male voice said quietly, \"I don't even like soccer, but I could watch these two argue all day.\"\n\nAlexander stared at the young woman, who looked back without flinching before offering him her hand. \"Susan Woods, Timbers Army. Don't call me Sue.\"\n\n\"Alexander de'Armound, Emerald City Supporters.\" Alexander managed not to wince as Susan gave him a firm handshake, complete with a tight squeeze of his hand. \"Please call me Alexander.\"\n\n\"You two going to kiss now?\" a female sitting nearby called out.\n\nSusan let go of Alexander's hand, smiling proudly as he rubbed his wrist. \"Not my type,\" she answered. \"Alexander here doesn't look like he knows how to use a chainsaw.\"\n\n\"Probably for the best,\" Alexander laughed. \"I like having four limbs, all ten fingers, and one important male body part attached.\"\n\nHis comment brought about a round of chuckles and a handful of groans from the dozen or so young men and women gathered in the dark lobby of McMaster Hall. With power disrupted from the storm that was blowing through the area, the only source of light came from the electric Coleman lantern provided by the dorm's security guard, Sherry. At the moment the guard was walking the building, checking in with the Resident Advisor on each floor to ensure everything was OK, leaving the students in the lobby to pass the time while waiting out the bad weather. The wind had died down and the booming thunder had quieted to dull rumbles. However, the heavy downpour that was in the process of turning the grassy square outside the dorm into a shallow pond offered proof that the storm still had teeth.\n\nAlexander had been sitting quietly in the lobby, watching the storm from the comfort of a loveseat along with several of his dorm mates when the power went out. After a few seconds of darkness, an intense blue-white glow filled the lobby as Sherry placed a Coleman lantern, the kind used by hikers and campers, on the counter of the security desk. As the bright light from the lantern met the dull silver of the storm, Alexander settled back in his love seat. \"So,\" he asked as he stretched his legs out, \"who's got some scary stories to tell in the dark?\"\n\nNo one offered a campfire tale, but Alexander's comment proved to be an icebreaker. The small group of students began lightly chatting with one another. The lack of electricity proved to be a potent social lubricant. The polite conversation about the powerful storm gave way to talk about the first week of classes, before slowly morphing into a discussion about the first week of campus life. Over the next two hours, the composition of the group changed, some participants leaving to be replaced soon after by a passerby or curious onlooker, attracted by the Coleman lantern that Sherry had placed in the middle of the group before heading out on her rounds, flashlight in hand. The crowd would top out at a dozen people, a baker's dozen for a few minutes at one point, and not everyone took part in the conversation. Some were content to just listen.\n\nAt the center was Alexander, but not as a speaker. The blackout was a great opportunity to get to know people while also learning about them, and the young man took full advantage. He kept quiet for the most part aside from offering comments or answering a question directed towards him. Instead, he facilitated the conversation, smoothly interjecting when a lull was evident and chaining topics together to keep the conversation flowing and civil.\n\nUntil a tall, muscular brunette sat down directly across from Alexander so that the lantern illuminated the fitted green cap she wore. As soon as he noticed the white woodman's ax set atop a yellow symbol, Alexander couldn't help himself. \"Portland Timbers, huh?\" The brunette nodded. \"Well,\" he shrugged. \"Nobody's perfect.\"\n\nThe comment had immediately gotten the young woman's attention. She studied Alexander for a brief moment before responding. \"Ugh,\" she said, drawing out the word, \"don't tell me I'm dealing with a Whitecaps supporter.\"\n\nThe alluded association with Vancouver, the hated rival of both Portland and Seattle, immediately caused Alexander to sit up straight in his chair. \"Sounders supporter, thank you very much.\"\n\n\"God, that's even worse.\"\n\nThe resulting smack talk, despite the passion that underlined it, was all in good fun. \"Next Saturday night,\" Susan told Alexander as she settled back in her chair, \"a bunch of us are getting together in the student union to watch Portland vs. Real Salt Lake. You're more than welcome to join us, Alexander. I won't even mind if you root for Salt Lake.\"\n\n\"Are you kidding me? There's one personal rule I'll never break, and that's never date inside your conference, let alone cheer inside of it.\"\n\nSusan laughed quietly at Alexander's comment. \"Good luck finding a Toronto FC supporter on campus.\"\n\n\"Whoa.\" Alexander put his hands over his mouth as he burst out in laughter. \"That's just cold, Susan.\"\n\n\"I don't want to be rude,\" a young man said from the edge of the circle, \"but can we move on from the soccer talk? It's like a foreign language to me.\"\n\n\"Sorry, sorry.\" Susan gestured towards the young man in apology. \"Alexander here hit a button. So, anyone else here from Oregon?\" As the conversation switched gears, Alexander's phone vibrated in his pocket. He pulled it out to see a text message waiting for him.\n\nIt's Eleanor. I'm bored. Mind if I come hang out?\n\nSure, he responded. It's just me though. I don't know where Cole is.\n\nThat's fine. You'll do in a pinch. Eleanor's comment was followed by a winking emoji.\n\nI'm in the lobby. Let me know when you're on your way. Be careful with the rain.\n\nThanks. On my way now.\n\nDuring a momentary pause in dialogue, Alexander got to his feet, his legs protesting after sitting for nearly two hours. \"Pardon me for a moment,\" he told the group. \"A friend of mine is coming over to hang out and I don't want to leave her in this rain longer than necessary.\"\n\n\"Her?\" Susan rested her elbow on the armrest of the couch. \"Friend of yours, or a 'friend' of yours?\"\n\n\"A friend,\" Alexander said with a smile. \"No quotation marks involved or implied.\" With that, he headed towards the front doors of McMaster Hall. The light from the Coleman was little more than a faint brushstroke of blue against the remainder of the lobby as any source of illumination, be it electrical or natural, was swallowed up by the storm. Through the windows Alexander could see the clouds moving to the south, however, heralding the oncoming end of the foul weather even while it attempted to maintain its fury.\n\nSamuelson Hall across the square was obscured by the pouring rain. Alexander didn't notice the figure running towards his dorm until they were passing the statue of Admiral David Farragut in the center of the commons - Eleanor, soaking wet from the downpour, with a backpack slung over one shoulder. He immediately opened the doors for her. The quiet conversation of the nearby students was replaced by the rapid sound of raindrops hitting the ground. \"Come on in,\" he urged, waving her inside. \"Why don't you have an umbrella?\"\n\n\"I forgot to pack mine from home,\" Eleanor groused as Alexander closed the door behind her, \"along with my freaking poncho.\" Her dirty blonde hair was pressed flat against her scalp, weighed down by the rain. The sundress she wore, a pale green number covered with small pink flowers, clung to her body. Water dripped from the hem, soaking in the textured rubber mat. \"I threw some spare clothes in here,\" she said, tugging on the strap of her backpack. \"Can I change in your room?\"\n\n\"Of course.\" Alexander gestured towards the back of the lobby. \"My room is one flight up. Come on.\" With a friendly wave of au revoir to his fellow students, he led Eleanor towards the stairs.\n\nEleanor reached out to take his arm. \"One sec,\" she told him. \"Wet sandals on a tile floor. Not a good combination.\" Using Alexander for balance Eleanor stepped out of her sandals and placed them in his offered hand. She kept hold of his arm as they resumed their trip across the lobby towards the door leading to the second floor of McMaster Hall.\n\nThe emergency lighting in the stairwell painted the narrow space with an eerie orange glow. Thoughts of the horror movie Alexander had watched with Julie pushed their way into his head as they climbed the steps. The fact that the second-floor hallway was also flooded with the same muted radiance did little to soothe what Alexander knew was an irrational discomfort. Still, it was a relief that his dorm room was located almost directly across from the exit to the stairwell. \"Nice location,\" Eleanor stated as Alexander unlocked his door.\n\n\"I haven't taken the elevator since moving day.\" He swung open the door and motioned for Eleanor to step inside. \"After you. To warn you, it's a bit cluttered. Saturday is when Cole and I take the time to clean.\"\n\n\"You don't have to worry about me judging you guys. The darkness is doing a great job of covering up the mess.\"\n\nAlexander peeked over Eleanor's shoulder as he followed her inside. \"I'm in utter agreement with you,\" he said as he closed the door behind him. The curtains on both windows were drawn, cutting off even the meager light spilling in from the storm outside. The dorm room was a collection of outlines of furniture edged with threads of black and the palest white. \"Would you like me to turn on my cell phone light?\" he asked.\n\n\"Nah. This won't be the first time I changed clothes in the dark.\" Eleanor dipped her shoulder to allow the backpack to slide down her arm onto the bed. \"So you have no idea where Cole is?\"\n\n\"Not a clue. He was going to the library to listen to music for the History of Jazz class he's so... well, jazzed for. What about Julie?\"\n\n\"She's somewhere around,\" Eleanor answered. \"Anyway, I'm bored. Wanna fuck?\"\n\nX X X X X\n\nEleanor's smirk was lost in the dark as she could practically hear Alexander's brain freeze up at her question. \"I'm... sorry? What did you just ask me?\"\n\nHer response was to reach down and grip the bottom of her drenched sundress. A wet squelching noise accompanied the motion as Eleanor peeled the clothing from her body. The fabric tugged at her skin like Saran Wrap as she dragged it over her head. The warm stuffy air of a dorm room without air conditioning reacted with the residual water of the storm on Eleanor's skin, providing her with a pleasant external tingle that coordinated with the internal one that had built between her legs in the past half hour. \"I asked,\" she proclaimed while dropping the sundress to the floor, where it landed with a wet thud, \"wanna fuck?\"\n\nA sharp gasp came from the young man once he realized that Eleanor had been nude underneath her sundress. \"I... um... yes. Yes, I do. As often as possible. Wait, are you offering?\"\n\nEleanor's reaction was a genuine facepalm. She pinched the bridge of her nose as a slight headache began to form. \"Yes,\" she sighed. \"I am offering to both fuck you and let you fuck me.\"\n\n\"Oh. OK... sure. Sure.\"\n\n\"Your lack of enthusiasm is making my vagina drier, Alexander.\"\n\n\"Sorry! I'm sorry.\" Eleanor's eyes had adjusted to the darkness enough so she could see Alexander's shoulders slump. \"You caught me off guard,\" he explained, \"that's all. I honestly expected to just hang out with you until the power came back on.\" He made a rolling motion with his hands. \"I needed a second to mentally switch gears.\" Alexander rolled his shoulders back before squaring up with Eleanor. \"Would you mind asking me again?\"\n\nEleanor couldn't help but laugh at the sincerity of Alexander's request. \"Sure,\" she chuckled. \"Wanna fuck?\"\n\n\"Yes.\"\n\nEleanor nodded at Alexander's confirmation. The sultry confidence in her body language gradually morphed into confusion as Alexander remained in place, looking her in the eyes instead of at her naked body. \"What are you waiting for?\" she inquired after a moment.\n\n\"I'm waiting on you,\" he answered with uncertainty. \"Are you waiting on me?\"\n\nFor a brief moment, Eleanor debated peeling her inundated sundress from the carpet and heading back to her dorm. Instead, she gave Alexander a simple nod. He hesitantly stepped forward. Eleanor placed her hands on her hips once more, reassuming her alluring posture. The young man nervously licked his lips before reaching out to touch her boobs.\n\nThe word 'boobs' seemed appropriate considering the cautious nature Alexander displayed as he ran his fingers over, along, and under her firm mounds. Flashbacks to eighth grade and her then-boyfriend's clumsy hands in the loft of her family's barn rolled through Eleanor's head at Alexander's touch. Even the brush of his fingers against her nipples failed to provide any hint of a spark.\n\nGrumbling annoyedly, Eleanor grabbed Alexander's wrists and pulled them away from her chest. \"I know you're not a virgin,\" she groused. \"I've watched you and Julie bang.\" Even in the deep gray of the lightless dorm room, the look on her friend's face immediately brought to mind the image of a wounded puppy. \"Oh, my stars ...come here.\" She took Alexander's hands in hers, letting them fall in between their bodies. Idly swinging their arms back and forth, Eleanor smiled at him reassuringly. \" Am I coming on too strong?\"\n\n\"It's that you're coming on at all.\" Eleanor gave him a puzzled look. \"It was never the girls who initiated physical relations with me in four years of high school. Now I haven't even finished my first week of college and two incredibly alluring young women have propositioned me.\" He nodded to the downpour outside before inclining his head towards Eleanor's naked body. \"Half of me is afraid this is some beautiful dream and I'm going to wake up any minute.\"\n\n\"And the other half?\"\n\n\"The other half is worried about not performing up to your expectations and messing up our friendship.\"\n\nAlexander's skin was warm as Eleanor reached up to gently place her hand against his cheek. \"You're sweet,\" she said honestly. \"And you're way too zeroed in on keeping people happy when you should be focused on making people happy.\" One finger gently tapped against his chest. \"Or, you know, making yourself happy. And fucking me would make both you and me happy.\"\n\nWith a firm squeeze of Eleanor's hand, Alexander took a step backward. \"Would you mind offering your proposition one more time?\"\n\n\"Final time,\" Eleanor stated, holding up a finger for emphasis. \"Say 'no' and I'm going down to the lobby and finding someone who will say 'yes.' Boy or girl.\" Alexander grinned at her joke. His amusement filled her with relief. She once again cocked her hip, put a hand against her body, and pressed her lips together. \"So,\" she said, her voice low and sultry, \"wanna fuck...\"\n\nNo sooner had the hard 'k' left Eleanor's mouth when Alexander yanked his t-shirt over his head. Eleanor blinked in surprise as even with the t-shirt drifting through the air the young man was shoving his cargo pants and boxers down his legs while kicking off his sandals at the same time. In a matter of seconds, Alexander was stark naked in front of an equally nude Eleanor, panting slightly from the sudden burst of energy. Threads of pale gray highlighted the eagerness on his face.\n\n\"Well,\" she teased, \"I'm waiting.\"\n\n\"This isn't answer enough?\" One hand gestured towards the erect penis jutting out from between his legs.\n\n\"I want to hear you say it.\" Eleanor took hold of his cock. Alexander's hiss was mixed with a full-body shiver as she slowly stroked him. It was smaller than Cole's in both length and girth, with more of a curve to the shaft, however the fact that it was as hard as diamond between her fingers was a fair trade. \"Just to ensure there's...\"\n\n\"To quote, I wanna fuck.\"\n\n\"...when you switch gears, you don't hold back.\" Before Alexander could comment, Eleanor dropped down to her knees. She reached around Alexander's body and firmly grabbed his butt with both hands to keep him in place. Another tremor ran through Alexander, this one of searing excitement, as Eleanor leaned forward and engulfed the tip of his cock with her lips\n\nHis body tensed up like a steel cable. As her fingers dug into the soft flesh of his butt, Eleanor was caught off guard by the firm glutes underneath. Every muscle in the young man's body was taut but he still somehow trembled under her touch. She carefully slid her mouth down his rigid shaft, eliciting a long, drawn-out moan from her lover as she slowly worked her way down to the base of his throbbing cock. His penis was just short enough to not set off her gag reflex. She held in her mouth for a handful of moments before pulling back. This time Eleanor added her tongue to the mix, dragging it along, under, and over Alexander's erection.\n\n\"That feels... wooooooooooooow,\" he breathed as Eleanor licked the tip. \"That feels so damn good.\"\n\nShe looked up at him with a prideful smirk. \"You're acting like I'm one hard lick away from having to swallow.\"\n\n\"I'd warn you first,\" he answered in alarm. \"You don't have to stop what you're doing...\"",
        "\"I wasn't planning on it.\" Although she was on her knees in front of Alexander with his rock-hard penis inches from her face, Eleanor found herself laughing. \"Don't tell me this is your first blow job, Alexander.\"\n\n\"It's the first one I've ever had standing up,\" he answered sheepishly. \"I have no idea where to put my hands.\"\n\n\"You can put them on my shoulders. But don't touch my head,\" she advised the nervous young man. \"Let me set my own pace. Otherwise, you might cause me to gag. And don't pull on my hair unless you want me to accidentally bite your dick off.\" Alexander nodded in understanding before placing his hands on Eleanor's shoulders, using just enough pressure to help maintain his balance. She gave his butt a reassuring squeeze before once again taking his cock into her mouth, easily setting a pace that drew a variety of grunts and sighs from Alexander.\n\nWith her hands on her butt, using only her lips and tongue, the sight of Eleanor giving Alexander a blow job could have come from a softcore porno or an old Friday night Skinemax movie. The anticipation Eleanor had felt since leaving her dorm room finally caught inside of her, made evident by the quiver she began to feel between her legs. Alexander's fingers occasionally pushed into her shoulders as she worked him over, always just for a brief moment, before going back to a light touch.\n\nEleanor took her time. Her tongue swirled around Alexander's shaft, from base to tip, as she applied gentle pressure with her lips. The sensations were still strong enough that after a few minutes Alexander shuddered. \"Stop, stop,\" he said, gently moving his hips to free his cock from Eleanor's mouth. He took a step back. His fingers clenched at the empty air as he tried to catch his breath before letting out a deep sigh. \"Oh boy,\" he managed to say.\n\n\"Perfect timing. My jaw was getting sore.\" Eleanor sat back on her haunches. She looked up at Alexander and asked in a flirty tone, \"Were you about to blow?\"\n\n\"No. It was just too much. I couldn't bear how good your mouth felt on me.\" He smiled down at her. \"That was the best blow job I've ever gotten.\"\n\nA confused look crossed his face as Eleanor chuckled. \"That wasn't even my A-game. I was blowing you with both hands behind your back. Wait until I make you make me swallow.\" She reached out with one arm. \"Hand please.\" He stretched out his hand, helping the young woman get to her feet. Alexander's nervous tension had dissipated, however, there was still a hint of apprehension under his emotional surface. \"Do you need a break for a minute?\"\n\n\"Actually, I'd like to make out. I'm being serious.\" Eleanor couldn't help but laugh heartily at the sincerity of his request. \"I enjoy making out. Kissing, tongue action, heavy petting, attention to certain body parts of interest... \"\n\n\"Like my tits.\"\n\n\"I was honestly about to say the neck. And then the breasts. And any other erogenous zones. I knew a girl who got turned on when someone kissed the inside of her elbow. Half the enjoyment of a physical encounter is the exploration.\"\n\nEleanor nodded. \"I get it. Hell, it's kind of flattering.\" She slid onto the thick quilt covering Alexander's bed. \"Come here,\" she said, rolling onto her side and patting the mattress next to her. As Alexander climbed into bed however Eleanor held up one hand. \"Wait. Would you mind opening the curtains? It's too dark for my taste.\"\n\n\"It is a little Green River Killer in here, isn't it?\"\n\n\"Mentioning a serial killer while you're with a girl doesn't exactly keep her in the mood,\" Eleanor snarked as Alexander walked towards the window opposite his bed, \n\n\"Depends on the girl.\" Alexander pulled open the curtains, revealing the downpour outside. Even the meager amount of light that managed to force its way through the storm was enough to brighten the room. The illumination was joined by the heavy patter of rain as Alexander cracked the window several inches. He did the same for the window on Cole's side. The fresh scent associated with a storm began to fill the dorm room.\n\n\"Mmmm,\" Eleanor purred. \"I love the rain. I'd sit on our screened-in porch back home and watch it rain all the time.\"\n\n\"You might enjoy Seattle then.\" Alexander climbed onto his bed, laying on his side opposite Eleanor. \"It rains 150 days a year, and I'd say maybe 50 of those days we get an inch of rain.\" He scooched his body closer to Eleanor, who held out her arms and took him in a loose embrace, his erection brushing against her leg.\n\nEleanor pulled him close to kiss him. Their tongues lightly darted into each other's mouths before pulling back. The young lovers kept the same gentle, easygoing pace over the next several minutes. Eleanor ran her fingers down Alexander's spine and along the nape of his neck. He returned the favor by dipping his head and kissing her throat, taking care not to leave marks. She stiffened as Alexander's lips ran over a sensitive spot on her shoulder just below where it met her neck. To the young man's credit, he didn't focus solely on that area, but continued his explorations, only occasionally lifting his head to kiss her there and causing her to shiver. His hands roamed her back. Trimmed fingernails trailed down her spine with a feather touch.\n\n\"I appreciate a man who doesn't have any problems kissing a girl after she's gone down on him,\" Eleanor said quietly while he kissed her neck.\n\n\"It's just one more bodily fluid. As long as it's passive transfer and not active transfer.\"\n\nThe vibrations inside of Eleanor grew stronger as they continued to make out, inflaming her desire. The relatively cooler air of the storm flowed into the stuffy dorm room, causing her skin to tingle pleasantly as well. She molded her body to Alexander's, pressing against him as their kisses took on a heightened passion. His cock was as hard as it had been while it was in her mouth. It pushed against her, just above the junction of Eleanor's legs. Her hands dropped to Alexander's butt once again as she pulled his hips towards hers, while his hands slid between their bodies...\n\n\"Oh!\" Eleanor gasped as Alexander's fingers brushed against her breasts. Her nipples were as hard as Alexander's cock, tight nubs that buzzed with the same sensation she was feeling between her legs. The gentle touch of his hands sent a lightning bolt through her body that grounded itself inside her pussy.\n\n\"Whoa.\" She opened her eyes to see Alexander looking at her, his hand now resting against her ribs. \"Where did that come from?\"\n\nEleanor couldn't help but sigh as she prepared to have the same conversation that she had with all of her male lovers and a handful of her female ones. \"I have sensitive boobs,\" she told Alexander. \"Like, if you play with them eventually it will set me off.\"\n\nShe expected a familiar look of wide-eyed wonder and wild imagination from Alexander at her revelation. Instead, Eleanor was caught off guard as Alexander asked, \"Is that good or bad?\"\n\n\"Oh... huh. No one's ever asked me that before. Most guys act like they just won the fucking lottery. Uh... wow.\" Eleanor patted the side of Alexander's face with a wry grin. \"Congratulations. Now I need a second to switch gears. Let me stall for time here. Why are you asking?\"\n\n\"Remember how I asked you to stop going down on me because it was too much to take? It... feels like the same kind of situation when it comes to your... boobs, to use your words.\" Eleanor felt his hands moving across her body, and this time her sigh was one of pleasure as Alexander carefully brushed his fingers against her erect nubs. \"Besides,\" he said as he caressed her, \"I prefer posteriors over breasts if asked to decide.\"\n\n\"So... mmmmmm... so noted...\" Eleanor purred as Alexander's hands moved behind her to firmly grab her butt. Her arms wrapped around his back as he kneaded the soft flesh. \"And while our conversation has been fun, I came over here to get laid.\" Gripping his body tightly, Eleanor rolled over onto her back, pulling Alexander on top of her in the process.\n\nAs he settled in between her legs, Eleanor noticed the apprehension of earlier was beginning to creep back into his body language. \"Hey,\" she said, heading it off at the pass, \"don't worry about fucking me and just fuck me. Got it?\"\n\n\"I got it. Sorry, I was having the exact self-doubt the other night with Julie...\"\n\n\"And never mention another girl's name. Even in a threesome, it's all about the girl you're fucking.\" She settled on the mattress, opening her legs before reaching down and grabbing Alexander's cock. Despite his apparent hesitancy, his cock felt like forged steel, warm and hard. \"Or,\" Eleanor said as she guided the tip of his penis to her waiting vagina, \"the girl you're about to fuuuuuuuuuuuuuuuuuuuuuuuuuuuck...\"\n\nAlexander didn't wait before pushing forward. His cock easily slid between her soaked lips, causing Eleanor to push off the bed slightly, hissing at the sensation of her silken walls being gently pushed apart. An insolent smirk crossed Alexander's face as he pushed himself up on his arms. \"You did say you didn't come here to talk...\"\n\nEleanor cut him off by lifting her head and kissing him, nipping at his tongue for a brief moment before he responded. He began to slide his cock in and out of her wet pussy, rapidly at first before falling into a slow, steady rhythm. Eleanor adjusted her lower body, spreading her legs to allow Alexander easier access. \"Ooooooh yeah,\" she groaned as her lover shifted in response, angling his hips to drive into her deeper than he had before. After a few strokes, a rush of euphoria shot through Eleanor as Alexander's cock brushed against a reactive spot on her velvet walls. Her fingers and even her toes curled for a brief moment, bunching up the fabric of the quilt. \"Oh yeah, right there,\" she proclaimed. \"Just like that.\"\n\nIn response, Alexander's thrusts became harder and faster. Doing so, however, changed his angle of penetration. The blissful pulses lessened in intensity. \"No, no,\" Eleanor told him, \"slow down... yes, that's it!\" She arched her back, gasping with each thrust as her lover's erection hit all the right places inside of her. Her new lover was proving that size didn't matter as places inside her pussy that rarely received direct stimulation were now being put to a full workout. The familiar vibration she had experienced while making out with Alexander was now a constant buzzing. Her body quivered and shook with each thrust. \"Don't stop,\" she commanded her lover, \"don't stop...\"\n\nAlexander leaned down and eagerly kissed her at that moment. Her hands wrapped around his shoulders, holding him close as he fucked her. His breathing was heavy and she could feel his arms shaking as he tried to keep his weight off of her body. In response, Eleanor shifted her hips and spread her legs wide. She pushed back against his thrusts, writhing underneath Alexander, their bodies slick with sweat. She tightened her grip on his shoulders as their tongues danced and intertwined with one another. He eventually broke their kiss and rested his forehead against hers for a moment. \"This feels good,\" he said between panting breaths. \n\n\"You're... oh, shit... you're not so bad yourself, Alexander.\"\n\nHis mouth opened, and for a split second, Eleanor thought he was going to say something. Instead, he kissed her again, this time with enough force to drive her into the mattress. A drop of sweat fell from his forehead, splashing against her chest as Alexander pushed himself back up and continued to fuck her. He maintained the same pace, however, his thrusts became longer, deeper, and harder. His hips pushed against Eleanor's. She began to rock in time with Alexander as her passion quickened inside of her. \"Yes, yes... hell yes... oooooooooooooh...\"\n\nSoon, Eleanor teetered on the edge of blissful orgasm. The powerful vibrations inside of her pussy crested and fell, her own body teasing her by denying her the release she was beginning to crave. \"Come on,\" she urged Alexander as he continued to drive his hard cock in and out of her warm, wet, slick pussy with intense, forceful thrusts. \"Come on Alex...\"\n\n\"...Alexander,\" he panted before dropping down to once again kiss her. His thrusts slowed down. Eleanor felt a brief bang of disappointment even as she returned his affections. As they kissed, however, an all-consuming rush of ecstasy shot through Eleanor as Alexander firmly squeezed her nipple. What started as a single arrow of undistilled bliss quickly became rapid-fire bursts as he pinched her erect nub in time with his thrusts.\n\nHer climax was on her before she realized it. Eleanor's fingernails dug into the skin of Alexander's upper back as she came with an orgasm of unexpected force, her pussy clenching tightly around Alexander's cock. Her intense cries of passion were muffled from his forceful kiss. All the while he continued to squeeze her nipple as he fucked her, causing the potent euphoria inside of her to spike each time he did so. The writhing of her body tore Eleanor's lips away from his. Her fingers wrapped themselves in Alexander's short brown hair, pulling on his scalp as she hit the peak of her climax. \"Oh fuck,\" she rejoiced underneath him. \"Oh fuck, oh fuck...\"\n\n\"Oh fuck,\" Alexander chimed in, \"I'm... oh God, I'm about to cum...\"\n\n\"You can cum inside me,\" Eleanor gasped, \"I'm on the pill.\"\n\nWith those magic words, Alexander drove inside of her several more times before his face twisted in an expression familiar to Eleanor. He cried out as he pushed as far inside of her as he could. The twitching of his cock inside her soaked pussy brushed against her velvet walls, sending a low-intensity pulse of pleasure through her body that caused her to hum contently. With a final grunt, Alexander collapsed on top of Eleanor. Sweat coated their bodies. The sound of their vigorous fucking was replaced by the sound of heavy panting and the relentless downpour outside the open windows.\n\n\"OK,\" Eleanor said after a moment, \"please get off me. You're crushing my boobs.\"\n\nAlexander pulled his softening penis from her vagina before carefully rolling over. He and Eleanor laid side-by-side on his bed, the quilt rumpled from the passion of the previous few minutes. She felt a delicious soreness in her lower body, both from Alexander's lovemaking and the intense orgasm she had experienced. A long, deep sigh escaped her body as she reached over and flopped one hand against his slick chest.\n\n\"Holy shit,\" she breathed. \"That, I did not expect.\"\n\n\"Really?\" Eleanor felt Alexander's hand loosely cover hers. \"I had the feeling you had something like this in mind when you came over here.\"\n\n\"I came over here to get laid, not to get good and properly fucked.\"\n\n\"Huh.\"\n\nEleanor once again heard the intake of breath that usually preceded a question. But instead, Alexander lightly squeezed her hand. \"That's the second time you went to ask a question and didn't,\" she said. \"What's on your mind?\"\n\n\"And here I thought I was showing self-restraint.\" Alexander rolled onto his side. He propped his head with his elbow. \"I was about to ask you how I was compared to Cole. However, discretion became the better part of valor, albeit a bit late if you noticed.\"\n\nShe responded by poking him in the stomach, causing him to laugh and his body to jump a little. \"I'll give you points for realizing a mistake as you were making it. Never ask a girl to compare you to another guy. Because then she's going to think about the guy she used to fuck instead of the guy she's going to fuck, is fucking, or is going to fuck. Got it?\"\n\n\"Fuck yes.\" Alexander and Eleanor shared a laugh at his profane joke. \"I feel like I should be taking notes,\" he added.\n\n\"And I feel a gummy taste in my mouth. Do you have any mouthwash? I like to rinse after blowing a guy.\"\n\nAlexander crawled over the foot of the bed and walked to what she assumed was his closet near the front door. His body glistened somewhat in the dim gray light pushing its way through the open windows. He came back a moment later with a bottle of Colgate mouthwash, a small Dixie cup, and a towel. After Eleanor rinsed her mouth out and wiped up between her legs, Alexander proceeded to toss the cup in the trash and the towel in a nearby laundry basket.\n\nEleanor rolled onto her back, stretching out her arms and legs, soaking in the warm feeling of afterglow, enhanced by the rain continuing to fall outside the window. \"So,\" she asked as he sat down on the edge of the bed, \"what do you want to do now?\"\n\n\"You said you wanted to come over and hang out.\" Alexander reached out and gently ran his hand along Eleanor's scalp, drawing a purr from the young woman. \"How was your first week of classes?\"\n\n\"Seriously,\" Eleanor remarked as she stroked Alexander's lower back. \"You just want to hang out?\"\n\n\"To quote, you were just good and properly fucked. My job here is done.\"\n\n\"For now,\" she said with a smile. First week of classes was OK,\" she remarked as Alexander lay down beside her. \"But wow, my Creative Writing teacher is a trip...\"\n\nX X X X X\n\nThe sun had disappeared behind the mountains across the lake by the time Eleanor left McMaster Hall. She groaned with disapproval as the muggy remnants of the rainstorm wrapped their tendrils around her. A few clouds lingered overhead, thin wisps of slate left behind in the wake of the storm. Hands the pockets of her faded gym shorts, Eleanor stepped off to the side. Thanks to the utter absence of light pollution, the sky overhead was Mother Nature's canvas for the evening, and She was going all out. It was as if She had scooped up two handfuls of glitter and hurled them into the air to make the stars. Pale dots and twinkling points of light served as the backdrop for the impressive sight of the Milky Way's shadow as it stretched from the horizon up towards the heavens, a thick purple ribbon wrapped in bronze and white gold.\n\nEleanor wasn't the only one with eyes turned skyward. A number of her fellow students were taking advantage of the lack of electrical lighting to enjoy some impromptu stargazing. They avoided the saturated grass of the square for the puddle-strewn sidewalks, a handful standing by their lonesome but for the most part, huddled in small groups. The absence of illumination was accompanied by a subdued level of conversation. At best the students communicated in whispers, as if raising their voices would unweave the natural magic around them. During moments of complete silence, Eleanor swore, even though she knew better, that she could hear the waters of Lake Pend Oreille lapping against the shoreline half a mile to the north.\n\nThe edifice of McMaster Hall looming overhead cut off nearly half the night sky to Eleanor. She walked down the front steps, one hand on the guardrail to avoid falling on the slippery concrete. Her sandals splashed through the pools of water dotting the sidewalk as she headed for the statue of David Farragut at the center of the square, where she could look up at the night sky with the fewest number of obstructions...\n\nAs he approached the statue, a familiar form caught Eleanor's eye. Cole was standing off to one side, looking up at the night sky. Eleanor quietly walked towards him, taking care not to stomp through puddles and disturb any of her fellow students. Stepping onto the brick circle surrounding the statue, Eleanor came up to Cole's side. The young man slowly lowered his head as he realized someone was standing next to him. A friendly smirk crossed his face when he recognized Eleanor. \"Some enchanted evening,\" Cole whispered, \"you may see a stranger.\"\n\n\"You may see a stranger across a crowded room,\" she responded. \"And my mother told me never to talk to strangers. They could get me in all kinds of trouble.\"\n\n\"Trouble? Me? Nah, I'm harmless. Meanwhile, my mother told me, yes she told me, I'd meet girls like you.\"",
        "Eleanor put her hand against her chest, a look of mock astonishment on her face. \"Me? Cole Scales, I am a perfect angel.\" She pointed at a spot a few inches above her head. \"Don't you see my halo?\"\n\n\"See the horns propping it up.\" Eleanor covered her mouth with her hand as she laughed silently at Cole's teasing. \"Enjoying the view?\"\n\n\"Heavens, yes.\" She looked up into the night sky. Even the moon decided to take tonight off so we could appreciate this. My girl Luna knows what's up.\" Cole raised his head, joining his friend in appreciation of the scenic natural beauty. \"It's awe-inspiring,\" she proclaimed. \"Between this sky and that storm, tonight is a reminder Mother Nature's the one in charge around here.\"\n\n\"Saw a sky like this last week in Yellowstone. Seeing it here though, middle of a college campus without power? Lot more special.\"\n\n\"Have you ever been down to Sawtooth? There's a place in the valley where there's no artificial light. It's called the Dark Sky Reserve\" She motioned towards the galactic ribbon woven overhead. \"It looks like this all the time. It's amazing.\"\n\n\"Good reason to head out that way next summer.\" Standing side-by-side, Eleanor with her arms crossed and Cole's hands clasped behind his back, the two friends stargazed in silence for the next few minutes, watching the Milky Way's shadow as it gradually made its way across the sky. Observing the vista above her filled Eleanor with pure and simple joy, providing her with an emotional complement to the bliss of the past hour with Alexander. The memory of his initial confusion and hesitation brought a smile to her face as she continued to watch the universe go by.\n\nA dim shine in the corner of Eleanor's eye caught her attention. Across the lawn, light was now shining from several windows in Perry Hall. They were quickly joined by more rooms, not just in Perry Hall but also in the three other dorms surrounding the grassy square. The lamp posts that lined the four sidewalks branching out from the Farragut statue slowly began to come on, a white glow blossoming in the metal-and-glass globe atop each one. Eleanor quickly glanced up at the sky, trying to mentally preserve as much of the view as she could. The ribbon slowly unraveled, fading into blackness, leaving behind only a handful of the brightest stars. \"Well,\" she sighed, her shoulders slumping as ambient light took dominion over the sky, \"it was nice while it lasted.\"\n\nA hand on her forearm gently pulled Eleanor from her melancholy. \"Make you a deal,\" Cole said, \"try to find a way onto the roof of one of these buildings so next time you and I and ours can have one hell of a private viewing.\" Eleanor's fingers rested atop of Cole's hand as she gave him a glum nod. \"Eaten dinner yet?\"\n\nAt his question, a rumbling gurgle boiled in Eleanor's stomach. \"I'm starving now that you mention it. Problem is...\" She pulled her smartphone from her gym shorts. \"...one, Julie has been texting me wondering where I am.\" As Eleanor texted Julie to let her know she was with Cole, she added, \"and two, it's pushing 9 o'clock. The cafeteria's closed and Lake House is twenty-one and over after 9.\"\n\n\"Didn't think of that... wait. Said 9 o'clock?\" At Eleanor's nod, Cole gave her an easy smile. \"Idea.\"\n\nX X X X X\n\n\"The cheese is dripping with grease, there's who knows how many preservatives are in the pepperoni, and I'm going to get black lung from all the carcinogens in that oven. This is probably the best damn piece of pizza I've ever had in my life.\"\n\n\"Top three on my list.\" Cole's paper plate was almost see-through as he took another bite of pepperoni-and-sausage pizza. \"Delicious,\" he muttered as he chewed, forgoing social niceties for the moment thanks to the gooey joy in his mouth. \"Got a feeling gonna have to ask Julie for tips on avoiding the freshman fifteen.\"\n\nEleanor leaned over and gently knocked her shoulder into his. \"Sex is a great fucking way to burn calories, pun intended.\"\n\n\"Pretty sure it is indeed,\" he chuckled. \"Meant watching my diet. Can afford to put on a few pounds, don't want it going to my belly.\"\n\nThe college freshmen sat on a wooden bench near the north end of campus as they ate their pizza. Across the street was the town of Bayview, a small residential town built around the twin institutions of the Navy's Acoustic Research Detachment and Farragut College. Between them and the town were several food trucks, each of them turning a brisk business this post-storm evening. A long line of college students, along with several locals, snaked from the windows, waiting patiently to order and receive their food. Cole and Eleanor had been one of the first in line for a food truck named Speedini's that proudly proclaimed \"HOT, FRESH, FAST ITALIAN FOOD,\" complete with a Roman Centurion with the spinning circles around his feet to show that he was moving really, really, really quickly. By the time Cole and Eleanor received their pieces of pizza, over a dozen of their fellow students were standing in line behind them. The wooden bench nearby was a little damp, but a swipe with a handful of napkins removed the excess water. The remaining moisture slowly soaked the butt of Cole's jeans but being able to sit down and enjoy a hot, fresh, fast piece of pizza was worth the slight discomfort. Besides, it wasn't the first time he sat in the wet spot.\n\n\"How did you know these food trucks were here?\" Eleanor asked, dabbing her lips with a napkin.\n\n\"Last Friday night, respect to Miss Katy Perry. Went for a walk, found these guys all lined up. Perfect place to catch people going to parties sober and coming home drunk.\"\n\n\"Good find, Mr. Scales. So, what did you do during the storm?\"\n\nThere was no hesitation in Cole's answer. What happened was going to come up sooner or later. Sooner meant a lesser chance of hurt feelings, he thought. \"Honest answer, fucked Julie.\"\n\nEleanor's sharp intake of breath caused a tightness in Cole's chest. \"Oh good,\" she sighed with relief, a feeling mutually shared by Cole as the knot loosened. \"I was worried there was going to be a lot of beating around the bush.\" Eleanor sat her paper plate on the bench between them, putting her used napkins on top. \"I slept with Alexander during the storm,\" she admitted.\n\n\"Huh. How did that come about?\"\n\n\"It started when I walked in on you guys cuddling together. You were both fast asleep however it was pretty obvious what you guys had been up to.\"\n\n\"Didn't plan on it. Got caught in the storm when it started. Sky opened up and your building was the closest bit of shelter. Wasn't worth the risk to limb and life to run across the square to my dorm, so headed upstairs to hang out and dry off.\"\n\nEleanor smirked. \"I saw the clothesline with all your stuff on it. Your idea or my roomie's?\"\n\n\"Julie's. Believe she was being her practical self, seeing both of us were drenched to the bone.\" Cole tapped his chest. \"Even had water trapped in the cups of her bra. Decided best to dry off, got starkers, asked for a towel to cover up, Julie asked why, and biology took over from there.\"\n\n\"Sounds like Julie.\" Eleanor shook her head. \"Clinical and kind of creepy. But... it's creepy in that she doesn't do small talk or flattery. She's 100% upfront and honest about everything.\"\n\nCole nodded in agreement. \"Explains why she told us she's not good at making friends. Between moving around so much and guessing telling people exactly what she thought of them, ain't exactly the most conducive combo for surviving high school. So,\" he segued to get back on topic, \"you and Alexander, huh?\"\n\n\"Me and Alexander,\" Eleanor said as she took a drink from her bottle of water. \"As I said, I walked in, saw you and Julie sleeping in her bed, and... well, I took it to mean Alexander was fair game.\"\n\n\"Fair game?\"\n\n\"Yeah. Fair game. We all agreed, the four of us, that no one was exclusive to anyone else. But when I saw you and Julie together...\" Eleanor slowly rotated her hands in front of her as she tried to explain. \"...she's slept with both you and Alexander. And I've slept with you, so...\" Her hands continued to move as if she was trying to weave an answer from her mental ball of cognitive yarn. \"...sleeping with Alexander kept things in... balance? That I and Julie are... even? Somehow?\"\n\n\"You knew that answer was bullshit the moment you began. Ain't a competition, Eleanor,\" Cole emphasized.\n\n\"I know. I know it's not. It's just...\" She leaned forward, elbows on her knees as she put her face in her hands. \"I know it's not.\" There was a noticeable lack of belief in her muttering.\n\nHaving finished his pizza, Cole set the paper plate on top of Eleanor's. \"Well, might as well ask. How was Alexander?\" he inquired.\n\nEleanor's entire body shook as she snorted in response. \"Heh. He was good,\" she stated. \"He was really good. Now I know why Julie gave him another go-around last weekend.\"\n\n\"Asking because it's on my male brain. Better than I was?\"\n\nNow her body shook from the short, barking laugh. \"Oh my God.\" Eleanor looked up at Cole with playful disapproval on her face. \"Alexander asked me the same question. To quote yourself, Cole Scales, ain't a competition.\"\n\nCole sighed. \"Know as much,\" he agreed. \"Curiosity, that's all.\"\n\n\"Boys.\" Eleanor squeezed Cole's knee, giving him a friendly smile. \"You both were incredible. I'll put it this way. Alexander's a sprint, you're a marathon. Does that make sense?\"\n\n\"Reckon it does.\"\n\n\"I will say one thing. You are way more self-assured than he is. To be honest, I'm thinking his whole self-confidence act is actually a confidence job.\"\n\n\"Politely but hard disagree. Seen Alexander meet people and be all friendly-like. That's legit. Maybe he's just nervous when it comes to girls. You and Julie are intimidating. She's upright, you're upfront. Might not be used to girls like you.\" Cole finished his bottle of water. \"Plans for the rest of the evening?\"\n\n\"No clue. Probably go back to the dorm, hang up my clothes to dry.\" She hoisted her backpack for emphasis. \"Talk to Julie if she's still awake. What about you?\"\n\n\"Thinking about trying to burn off the pizza. Interested?\"\n\n\"No thank you,\" she laughed. \"Not counting a threesome, fucking two different guys in one day is a level of sluttery I'm not ready to attempt.\"\n\n\"Meant going for a walk around campus,\" Cole responded with a smirk. \"Enjoying the night. Lights might be back on, but there's still that post-storm calm in the air. Gonna soak it all in.\"\n\n\"Is that what you were really asking me to do with you?\"\n\n\"Absolutely.\"\n\n\"Well, thank you for the offer, however, I'm gonna head back to my room. And thank you for the pizza.\" Cole nodded as Eleanor grabbed the pile of plates and the empty bottles of water. \"Enjoy your walk.\"\n\n\"Try my best. Good night, Eleanor.\"\n\n\"Good night, Cole.\"\n\nX X X X X\n\nJulie looked up as Eleanor stepped into their room. \"There you are,\" she said, taking out her Airpods. \"Before you texted me I was wondering if the storm had blown you away.\"\n\n\"Nope. I wasn't taken by the wind.\" Julie had been sitting at her desk when Eleanor arrived, watching a movie on her Nexus that seemed appropriate for the evening, a heist movie from 1998 titled Hard Rain, starring Christain Slater and Morgan Freeman. Freeman considered it an old shame, telling people years later, \"Did any of you see this movie? Don't. Just don't.\" Julie didn't find the film that bad, but it was one of the more forgettable movies from the late 1990s. Before sitting down to watch the movie, Julie had opened the windows to air out the dorm room. Along with the crisp post-storm scent, the faint sound of dripping water was evident as Farragut College began to dry out, buildings and trees alike.\n\nAfter closing the door, Eleanor tossed her backpack onto her bed. \"I'm sorry for not getting your texts. My phone was on Do-Not-Disturb for class and I had it shoved in my backpack so it wouldn't get wet from the rain. I have to remember to set your number to bypass Do-Not-Disturb.\"\n\n\"Thank you for texting me back when you eventually read my message,\" Julie replied. \"I apologize if I acted like a mother hen.\"\n\nEleanor waved her hand. \"Don't apologize,\" she said as she opened her pack to pull out the soaked sundress from earlier in the day. Julie gave her a puzzled look as Eleanor proceeded to hang her sundress over the railing at the foot of her bed. \"You wanted to make sure I was OK after the storm. That's what roommates do. That's what friends do.\"\n\n\"Good. Because there is something I want to tell you, however, I'm trying to make sure I know the parameters of the situation so I determine how to tell you without risking our friendship.\"\n\nIn response, Eleanor turned and grabbed her desk chair. Sliding it across the carpet, Eleanor placed the chair in front of Julie and sat down, straddling the back to look at her friend. \"Unless you tell me you committed a felony, support fracking, or voted for Donald Trump, you're not going to lose my friendship over how you tell me something.\" Eleanor threaded her arms through the back of her chair and softly took hold of Julie's hands. \"What do you want to tell me?\"\n\n\"I slept with Cole. I believe you already knew that, however.\"\n\n\"I was 99.94% sure,\" Eleanor nodded. \"There could have been a chance you both just decided to take a nap together.\" Eleanor gently squeezed Julie's hands as her friend let out a relieved breath. \"I ran back here once the storm let up. When I came in you and Cole were fast asleep, and it was a no-brainer that you two hooked up.\"\n\n\"How so?\"\n\n\"Well, your perfectly made bed was in tatters, the two of you both had wicked cases of sex hair, and... I could smell it.\"\n\n\"You made the same observation last weekend when you arrived just after I finished masturbating. Is my scent that pungent?\"\n\nEleanor shook her head. \"It's not you, Julie, it's me. I've got a heightened sense of smell. Great after a rainstorm. Lousy during allergy season.\"\n\n\"Oh. I didn't know that about you. If I may ask, is to make up for a deficiency in your other senses?\" \n\n\"Not even close. 20/15 vision, great hearing, I can tell the difference between sea salt and kosher salt by touch, and if I don't brush, floss, and use mouthwash every time I go down on someone I'll get a gummy taste in my mouth that lasts for hours.\" She shrugged. \"On the other hand, good food tastes amazing, and amazing food is ambrosia to me.\"\n\n\"So noted. I will endeavor to keep my body odor down and do my best to circulate the air in this room as often as I can.\"\n\n\"Don't sweat it,\" Eleanor joked. \"If it becomes a problem I'll say something.\" The smile fell from her face as it was now Eleanor's turn to sigh. She kept hold of Julie's hands, swinging them from side to side in between them. \"And since we're friends, I have something to say as well. When I came in and saw you and Cole together, I... well, I decided to let you guys be and go hang out with Alexander.\"\n\n\"I didn't mean to bar you from our room in such a manner.\"\n\n\"And how weird would it have been to wake up and see me taking a nap or working at my desk?\"\n\n\"I concede the point. So you braved the storm to meet with Alexander?\"\n\nEleanor nodded. \"It was still pouring something fierce so I kept my sundress on since I was going to get soaked anyway and threw these clothes in my backpack so I could change into some dry clothes once I got over to his dorm.\"\n\n\"Ah. I understand now. What did you and Alexander do while you visited him?\"\n\n\"We fucked.\"\n\nJulie blinked at Eleanor's words, before slowly nodding as they sank in. \"I see. Was that your plan when you left here to go see him?\"\n\n\"Kinda. No, yeah. Yeah, it was,\" Eleanor conceded.\n\n\"Did your plan come about because you saw Cole and me and determined we had sex?\"\n\n\"Yeah. But not because I was upset or mad,\" Eleanor quickly added. \"It was because... OK, I know the four of us agreed that there were no commitments or any kind of exclusivity between us. I saw you with Cole though, and there was this brief flash of...\" Eleanor let go of Julie's hands. She spoke with confusion and uncertainty, eyes closed and hands moving in slow circles, trying to draw forth the words she was looking for. \"This brief flesh of...\"\n\n\"Envy?\" suggested Julie.\n\n\"Competition.\"\n\n\"I wasn't aware our sex lives were competing.\"\n\n\"They're not, but that's the best word I can come up with. It's what I told Cole earlier and he called me out on how bullshit a reason it is... oh yeah,\" Eleanor said, \"Cole told me he slept with you and I told him I slept with Alexander. We crossed paths on the square and talked for a bit. So I think only Alexander's in the dark about you and Cole, and I have a feeling Cole's gonna tell him.\" The young woman laughed. \"So much for keeping secrets in this group.\"\n\n\"Benjamin Franklin once said, 'three may keep a secret if two of them are dead.' Not that I was attempting to keep Cole and I's physical encounter a secret from you.\"\n\n\"When I saw you and Cole together, I guess I had this moment of... that you were up two-to-one on me and I needed to even the score to keep in the game.\" Eleanor sighed. She dipped her head down and leaned forward against the back of her chair. \"I know this isn't a competition. I know that here in my heart,\" she said, tapping her chest with two fingers, \"but not in my brain.\"\n\n\"Because brains are stupid?\"\n\n\"Because brains are stupid.\" There was a weariness in Eleanor's eyes as she raised her head to look at Julie. \"We're OK, right?\"\n\nAfter a moment, Julie replied while wearing a teasing grin, \"this would be the kind of situation where it would be acceptable to hug it out, right?\" Eleanor nodded. She put her head against Julie's shoulder as her friend wrapped her up in her strong arms. \"We're OK because we can talk about things like this instead of hiding them, or worse, letting them fester like open wounds. Thank you for being honest with me about sleeping with Alexander.\"\n\n\"Same with Cole. Took us a roundabout way to get there, but...\"\n\nA text tone from Julie's phone interrupted Eleanor.\n\n# But the Colorado rocky mountain high #\n\n# I've seen it rainin' fire in the sky #\n\n# The shadow from the starlight is softer than a lullaby #\n\n# Rocky mountain high #\n\n\"Of course you'd have John Denver as a text tone,\" Eleanor said as Julie let go of their embrace to pick up her phone.\n\n\"Not because I'm from Colorado,\" Julie responded, \"but because it's the warning song from the first Final Destination movie that Death is approaching.\" A smile crossed Julie's face as she saw the picture and adjoining message on her screen. \"It's from my ex-boyfriend Mark,\" she told Eleanor, holding the phone up so she could see. The photo was a selfie of a lean and muscular young man standing on a running track inside of a floodlight-illuminated stadium. He was coated with sweat, his hair soaked and the red tank top he wore dark with perspiration wicked from his skin. Despite the exhausted look on his face, he was giving the camera his best smile and an enthusiastic thumbs up. \"You were right,\" Julie read out loud, \"skiing did not prepare me for trying to jog at 7800 feet above sea level.\" She smirked. \"I warned him about that.\"\n\n\"Ex-boyfriend, huh?\" Eleanor inquired while eyeing the attractive young man.\n\n\"Yes,\" Julie said as she began to type out a reply. \"We dated throughout high school. Nice guy. Incredibly appealing body.\"\n\n\"I can tell. So why is he your 'ex-boyfriend?\"\n\n\"Because of distance. He's attending Adams State College in southern Colorado. There are about twenty hours of driving between there and here. There was no chance of a long-distance relationship working out between us so we decided it would be better to break up and remain friends than try to make it work over... I think it was 1250 miles... over such a long distance and end up bitter with each other.\" After texting Mark back, Julie put her phone on silent and set it back on her desk. \"So, now that we've established that the waters are calm between us, I must ask. How was Alexander?\"",
        "\"Oh, my Goddess.\" Eleanor shook her head in disbelief. \"I went over there expecting a simple roll in the hay. Instead, I got a second name to add to my college black book.\"\n\n\"Black book?\"\n\n\"Yeah, black book. Like, a list of the people you'd call when you're horny and want to get fucked.\" Eleanor held up both hands horizontally. \"For now, Cole is #1, but Alexander's #1a, no doubt.\"\n\n\"Really? What're your criteria for comparison?\"\n\nEleanor blew her hair away from her forehead as she debated her answer. \"Cole's got experience and stamina, but Alexander has eagerness, and he hits all the right places better than any other guy I've been with. And what about you, Julie Wyndham?\" Eleanor leaned forward again, waggling her eyebrows and making Julie laugh as she asked in a conspiratorial tone, \"how was Cole?\"\n\n\"The best sex I've ever had,\" she answered simply.\n\n\"Really?!?\"\n\n\"No exaggeration or hyperbole.\"\n\n\"Hell girlfriend, spill the tea!\" Eleanor shoved her chair back against her desk before flouncing over and throwing herself on the bed. \"One of the things friends do is dish about getting laid.\" Eleanor grabbed a stuffed red Grateful Dead bear from the head of her bed and hugged it to her chest. \"You tell me about Cole and I'll tell you about Alexander. Tit for tat.\"\n\nJulie laughed as she turned her chair to better face Eleanor. \"You've seen my tits and I don't have any tattoos yet. So,\" she began, \"I ran into Cole after you split off to go to class, and thirty seconds later it began to storm...\"\n\nX X X X X\n\n\"Yo.\"\n\n\"Oh, hey Cole.\"\n\n\"Looking at yourself in the mirror?\"\n\n\"Seeing if I got something caught between my teeth. Where are you coming from?\"\n\n\"Ran into Eleanor. Watch the skies for a bit before the power came back on. Got a bite to eat. Fully disclosing, was coming from sleeping with Julie. Talked to Eleanor about that.\"\n\n\"Oh. Well, full disclosure on my end, I slept with Eleanor. I was going to tell you, but you beat me to the punch first.\"\n\n\"She did mention that. Said you weren't half bad.\"\n\n\"Which is what every guy wants to hear.\"\n\n\"You plan on telling Julie about Eleanor? Not the kind of info friends keep from each other.\"\n\n\"Julie said she was going to the expo tomorrow at the student union. If I don't see her there, I'll text her and ask to meet up with her. This is the kind of information I'd prefer to not give over text if possible.\"\n\n\"Clever man.\"\n\n\"So what do you plan to do for the rest of the evening?\"\n\n\"Get my headphones, listen to music. Yourself?\"\n\n\"Much the same. Putting on my headphones and going down a YouTube rabbit hole.\"\n\n\"Sounds like a solid notion.\"\n\n\"So are we cool?\"\n\n\"As the other side of the pillow.\"\n\n\"Outstanding.\"\n\nX X X X X\n\n\"The Farragut College Student Expo,\" Alexander remarked. \"You will never find a more wretched hive of scum and villainy.\"\n\n\"We must be cautious.\"\n\nWith one eyebrow raised in pleasant surprise, Alexander turned to glance at his roommate. \"Points for recognizing the Star Wars quote, Cole.\"\n\n\"Speaking the truth. Wasn't going for a quote. That one from The Last Jedi?\"\n\n\"I'm not even going to dignify that with a response.\"\n\nThe main floor of the student union was packed with a mix of vendors and representatives from various student organizations. Just inside the main entrance were a variety of merchants and company representatives. The merchants hawked a wide assortment of goods, from movie posters to CDs, DVD's and Blu-Rays, with rugs, wall tapestries, and beaded curtains in between. Alexander's initial comment, however, had been directed towards a group of tables near the middle of the union. A substantial group of students was crowded around representatives from companies such as Visa, Discover Card, and AT&T, each attempting to sign first-year college students to ironclad service contracts dedicated to taking advantage of their naivety.\n\n\"My father warned me about those kinds of vendors,\" Alexander noted as he and Cole began to make their way towards the nearby merchants. \"They prey on freshmen and sign them up for high-interest credit cards and long-term cell phone service. Why are they be allowed on campus?\"\n\n\"Because they pay Farragut money. Hail the almighty buck.\"\n\n\"That's probably the biggest reality check of college so far. So, are you looking for anything in particular while you're here?\"\n\nCole gestured towards the middle of the hall. A pair of middle-aged men sat at a long table, surrounded by stacks of narrow paper. \"Menus for all the local restaurants and any place doing DoorDash. Cafeteria food's cheap and filling, sometimes though want a good meal that wasn't bulk cooked.\"\n\n\"Make sure to grab one from every stack. I'll try anything once.\" Alexander motioned towards a nearby vendor. \"I'm gonna look at some wall tapestries for my side of the room. I'm a little sick of looking at white cinderblock all night. You have a preference since you're going to be stuck looking at it all year?\"\n\n\"Whatever catches my eye,\" Cole answered. \"Was thinking about maybe stringing Christmas lights along the ceiling, cheer the place up a bit. Something that'll complement that maybe?\"\n\n\"Let's see what they have then.\" With mutual nods, the pair made their way towards a nearby pair of tables. A variety of colorful rugs and small tapestries were folded on the table, with several larger pieces hanging on a display behind the vendors. After browsing for a few minutes, Alexander and Cole decided on a tapestry that would cover the wall beside Alexander's bed, a piece of tie-dyed canvas stained with the primary colors mixed at the boundaries. After paying and making arrangements to pick it up on the way out, Alexander turned to Cole. \"Well,\" he said, \"I've done what I came here to do. You thinking about decorating your side of the room?\"\n\n\"Wasn't before, but now, a poster or two wouldn't hurt. Think they're selling some down this way.\" Alexander followed Cole to a grouping of tables spread out on opposite sides of the hall. The tables were home to several vendors selling a wide variety of posters ranging from movies and music to famous quotes, photographs, and slices-of-life, with humorous pictures and college-related topics mixed in.\n\nCole went directly to the music posters. He idly flipped through the stack, eyes focusing on each picture before moving on to the next one. Alexander stood off to the side watching his roommate as he deliberated. The tapestry was the only purchase he had planned to make at the expo. The remainder of his time here would be spent practicing willpower and self-restraint to ensure he didn't spend any more cash on impulse buys or regrettable purchases. \"Eyeing anything in particular?\" he inquired.\n\n\"Thinking of Johnny Cash. Always been an idol of mine.\" Cole gave an annoyed grunt. \"Problem is, every poster here's the same one.\" He lifted one of the posters, showing Alexander a picture of an angry man, guitar slung across his chest, giving a profound middle finger to the camera. The obscene gesture blazed with intensity. To Alexander, it felt like the man was shoving the middle finger directly in the face of damn near everyone in authority. \"San Quentin, 1969. Photograph asked for a picture for the warden. Great picture, sums up Cash perfectly, but looking for something different.\"\n\n\"How about this one then?\"\n\nAlexander and Cole both turned. A slender redhead with pale, freckled skin had pulled a poster from the stack she had been looking through. Turning it to face them revealed another picture of Johnny Cash, this one in color, that appeared to have been taken at the drum kit. Cash was sitting in a chair with his guitar on his lap, looking out over an audience in blue denim prison uniforms. \"Looks like it's from the Folsom Prison concert,\" she mused.\n\n\"Like it.\" Cole stepped towards the young woman. \"Take it only if you ain't.\"\n\n\"I already have mine.\" The redhead handed the poster to Cole before motioning to two posters sitting at her feet. \"Got the covers to two of my favorite albums of all time. Dark Side of the Moon, and Benny Goodman's 1938 concert at Carnegie Hall, AKA the reason I got into jazz music in the first place.\"\n\n\"Big band era, huh? You a fan of swinging?\" Cole punctuated his question with a raised eyebrow, causing the redhead to laugh.\n\n\"Sorry Cole, you don't know me well enough to get an answer to that question.\"\n\n\"Shame. Alexander, this is Lynn, from my History of Jazz class.\" Cole motioned to Alexander with both hands before turning his body towards Lynn. \"Lynn, Alexander, friend, and roommate.\"\n\nThe well-practiced smile was on Alexander's face as he leaned forward, hand outstretched. \"Alexander de'Armond. It's a pleasure to meet you.\"\n\n\"Likewise,\" she answered, answering with a firm handshake. \"Lynn Reed.\"\n\nWith the introductions out of the way, Cole and Lynn fell into a conversation regarding the collection of posters mixed with observations about the first week of school. Alexander stood quietly to the side, pretending to flip through the stacks. In actuality, he was paying attention to Lynn. Wearing a loose gray blouse and blue jean shorts, the willowy redhead had an inch or two on Cole. Her hair was slightly wavy, with the ends falling just below her shoulders as they curtained her graceful neck. \"My roommate's OK,\" she told Cole as Alexander listened. \"I think she's having trouble adjusting to college life. But it's only been a week,\" she added. \"I'm sure she'll get a handle on it by midterms.\"\n\n\"I don't want to strangle Alexander,\" drawled Cole. \"Taking that as a positive sign.\"\n\n\"And I don't want to put a pillow over Cole's face in the middle of the night,\" Alexander responded. \"Although now I've made myself a suspect if he dies mysteriously.\"\n\nLynn drew a single finger across lips coated with a shiny gloss. \"My lips are sealed.\"\n\nCole gave an exaggerated sigh. \"And here I thought we were close enough for you to be a material witness.\"\n\nThe comment drew a chuckle from Lynn and Alexander along with a quick smirk from Cole. As Alexander laughed, he noticed a familiar black-haired female several tables up the row. \"If you'll excuse me, I'm going to go look at some movie posters. Again, a pleasure to meet you, Lynn.\" With a friendly wave, Alexander stepped away from Cole and Lynn. They resumed their conversation as Alexander made his way further along the main floor. He came up beside the young woman who, at the moment, was carefully looking at a stack of movie posters. Her eyes were focused on the posters, keenly studying each one for several seconds before moving on to the next one. \"Hello Julie,\" he said in way of greeting.\n\nA rolled-up poster tucked under one arm, Julie, wearing tan shorts and a blue tank top that showed off her toned arms, looked up, a warm smile crossing her face at the sight of her friend. \"Good afternoon Alexander,\" she said brightly. \"How are you?\"\n\n\"I'm doing my best. How about you?\"\n\n\"Would you believe having trouble trying to decide between movie posters?\"\n\nHe leaned over to look at the stack she had been perusing. \"Looking for one in particular?\"\n\n\"Something obscure and unique,\" she said as she took hold of the poster under her arm. \"I've already been lucky with this one.\" Unrolling it revealed what Alexander recognized as a submarine from World War II plunging bow-first into the depths. The title of the movie was on the bottom of the poster - Below, while the upper left corner had the words \"Six hundred feet below the surface, terror runs deep.\" \"It's a ghost story set on a submarine,\" Julie explained, \"directed by David Twohy and written by Darren Aronofsky.\"\n\n\"I've heard of Aronofsky,\" Alexander said as Julie rolled up the poster, \"but not the other guy.\"\n\n\"Twohy directed the three Riddick movies,\" Julie explained, \"as well as A Perfect Getaway which I highly recommend if you haven't seen it.\"\n\n\"I'll add it to the list.\"\n\n\"What list?\"\n\n\"The list of movies I say I'll add to the list of movies I need to see however will probably never get around to seeing.\"\n\nJulie answered with a warm smile. \"Stick with me, Alexander, and we'll knock that list down to size by the time freshman year is over. While I have you here, any interest in helping me find another movie poster?\"\n\n\"Sure.\" Alexander stepped up beside Julie as he said, \"Though you have way more movie knowledge than I do. The best I can offer you is a second opinion on whatever you pull.\"\n\n\"Sometimes a neutral observer has the best vision.\"\n\n\"Good point.\" Julie began to flip through the stack again. She took her time studying each poster before moving on to the next one.\n\n\"So,\" Alexander asked, \"are we all still on for dinner tonight?\"\n\n\"As far as I know,\" Julie replied, staring for several seconds as a poster for a movie called Secretary. The poster consisted of a bent-over woman, ankles crossed, butt prominently displayed. After a moment, Julie shook her head. \"Good movie, better than Fifty Shades of Gray by several miles, but not something I'd want on my wall.\" She gave the young man another grin. \"Maybe we should add it to your list.\"\n\n\"I'll read up on it and get back to you.\" Alexander took a deep breath. \"So look, I want to tell you something you probably already know, however, I wanted you to hear it directly from me face-to-face rather than over text...\"\n\nJulie didn't look up from the posters as she cut him off. \"Because we're friends and you wanted to make sure everything was OK between us via a face-to-face conversation rather than...\" She looked up, frowning. \"I'm sorry Alexander, that was incredibly rude of me. I should have let you finish before interjecting.\"\n\nThe sudden change in Julie's dialogue threw Alexander. \"Apology accepted,\" he eventually said with a disarming smile. \"You're correct. You can't gauge someone's reaction over text, plus depending on what's said one might come off as cowardly.\" Julie nodded in agreement. \"And yes,\" Alexander continued quietly, \"because we're friends. Eleanor and I hooked up last night, and I know you and Cole hooked up during the storm as well.\"\n\nAfter a moment, Julie leaned forward. Warm lips softly pressed against Alexander's cheek as she gently kissed him. \"I did know that information,\" she whispered so no one else could hear. \"But thank you for telling me. I appreciate your forthright manner as much as I appreciate your burgeoning friendship.\"\n\nAlexander sighed in relief. \"I was afraid you were going to be upset. I sort of knew you wouldn't be, but I was still afraid.\"\n\n\"Because brains are stupid?\"\n\n\"Because brains are stupid,\" he laughed heartily. \"We're OK then?\"\n\n\"For now. Let's put a pin in this conversation for now, shall we? We will pick it back up during dinner when Cole and Eleanor are involved.\"\n\n\"Agreed.\" Alexander took a quick look around. \"Speaking of your roommate, where is Eleanor?\"\n\nX X X X X\n\n\"We don't just focus on nature.\" The young man behind the table handed a color pamphlet to Eleanor. \"During the winter we organize trips down to Coeur d'Alene or over to Spokane and help out there. Soup kitchens, meal packing, stuff like that.\"\n\nEleanor couldn't help but be impressed as she studied the pamphlet for the Farragut Environmental Society. Aside from the standard pictures of nearby Lake Pend Oreille and the surrounding mountains, the interior held photographs of college students performing activities filling boxes with non-perishable foods, and unloading a truck of second-hand clothing. \"So you guys are more of a community group than an environmental club?\"\n\n\"To us, human beings are part of the environment.\" The young man, his long brown hair pulled into a ponytail, tapped the pamphlet. \"Our motto is 'think smaller, give a dollar.'\"\n\n\"Oooooh,\" Eleanor whistled, \"I like that. Did you come up with that?\"\n\nThe young man laughed. \"I wish,\" he answered, shaking his head. \"It's from a webcomic called Least I Could Do. Hopefully they won't sue us! It was a perfect fit though, too good to pass up.\"\n\n\"Oh, I know all about perfect fits,\" Eleanor said. \"Do you guys have a Facebook group?\"\n\n\"Yep! All that info is on the back page. Next Saturday,\" the young man continued, \"we're going to be heading over to the lake for clean-up. If you're interested, the Facebook group will have all the details.\"\n\n\"Cool.\" Eleanor nodded. \"I'll go ahead and check it out.\"\n\n\"Great! I hope to see you next week then!\"\n\nX X X X X\n\n\"...mainly we play board and card games,\" the young woman explained, \"both one-offs and legacy. Last year some of us did an entire Gloomhaven campaign and another group played Imperial Assault. We've also got Cards Against Humanity, Betrayal at the House on the Hill, Throw Throw Burrito...\"\n\n\"Good and well,\" Cole responded. \"How about Dungeons and Dragons? Or anything else pen-and-paper.\"\n\n\"We also do those, although we tend to do one-shots.\"\n\n\"Not full campaigns? That's kind of what I'm looking for, to get in on something long-term.\"\n\nThe young woman nodded dejectedly in agreement. \"You're not alone,\" she bemoaned. \"The reason we're the Gaming Club and not the Role-Playing Game Club is because it's nearly impossible to keep an RPG group intact. Between studying, tests, papers, and partying, people tend to drop out mid-campaign, either outright quitting or worse they just stop showing up. Either way, it kills the momentum.\"\n\n\"Yeah,\" Cole sighed, \"makes sense. Sucks, makes sense.\" He looked at the stack of empty game boxes behind the young woman that served as the display for the Gaming Club. \"Eh, heard good things about Gloomhaven. Suppose it's worth a spin.\"\n\n\"Look at it this way,\" the young woman offered. \"Maybe you'll meet enough people to start a dorm room game. I'm not a D&D girl but my boyfriend is, and I want to say half his group is people he met here at Gaming Club. And no,\" she said, giving Cole a disarming smile as she held up one finger, \"they're full.\"\n\n\"Promise wasn't going to ask. Feeling that gotta audition for a gaming group like auditioning for a band.\"\n\nThe amicable smile on the young woman's face put Cole at ease. \"That's a solid analogy. Well, if you want to play with us... gaming, not music,\" she teased, \"we're up here on the second floor, every Wednesday night, 7 pm until we feel like stopping.\"\n\n\"Sounds good. See you next Wednesday.\"\n\nX X X X X\n\nJulie politely waited to be noticed before speaking. \"Hello,\" she said to the young man standing behind the table, \"I'm interested in discussing the Farragut Film Society.\"\n\nAs the young man looked up from his phone, a pair of thoughts immediately came to Julie's mind. First, the young man was the very definition of 'movie star handsome' with his dark hair, brown eyes, high cheekbones, and a wicked jawline to go along with his white shirt, black vest, and gray slacks. Julie couldn't help but imagine an old-school actor named Farley Granger, best known for his two collaborations with Alfred Hitchcock - Rope and Strangers on a Train - and familiar to Julie via his part as the Sheriff in the 1981 slasher movie The Prowler.\n\nSecond, Alexander's wide, beaming, rehearsed grin failed to hold a candle to the minimalist crease that touched the young man's lips as he laid his gaze upon Julie.\n\n\"You are? Fantastic.\" The young man set his phone face down on the table before motioning to a folding chair. \"Please, have a seat.\" Julie sat down, as did the young man. He set his arms on the table and folded his hands together, his shoulders back and spine straight. His posture was almost a mirror image of Julie's, save that she kept her hands in her lap. \"So,\" he inquired, \"are you a film buff?\"\n\nEven his voice was from the Golden Age of Hollywood, quiet confidence woven into the smooth enunciation of his words. \"Yes,\" Julie replied after the briefest of hesitations. \"Movies have provided my life with stability. I enjoy both watching movies and learning the various behind-the-scenes information and trivia that go along with the filmmaking process.\"",
        "The young man nodded in agreement with Julie's words. \"You said that films provided you with stability?\"\n\n\"I moved around a lot as a child,\" she answered. \"The two main pillars of stability were movies and, later on, running. What began as a childhood infatuation turned into a lifelong love.\" Julie smiled warmly at the young man. \"Now that I think about it, I just described a cliche from a romantic movie.\"\n\n\"Cliches do become cliches for a reason.\" The young man leaned forward. \"The Farragut Film Society is open to all students. However, there is one vital question we invariably request neophytes to answer.\" Dropping the volume of his voice so that only Julie could hear, the young man asked, \"What's the best movie of all time?\"\n\nThis time, Julie's smile was playful. \"The best movie of all time is 12 Angry Men. The most important movie of all time is Citizen Kane. The most influential movie of all time is the original Halloween. My favorite movie to sit down and watch is The Good, the Bad, and the Ugly. And my favorite movie to put on as background noise is The Hunt for Red October.\" Julie kept the smile on her face as the young man processed her statement before nodding with approval. \"Sorry,\" she said. \"I'm asked that question a lot.\"\n\n\"No apology required. That answer was nothing short of par excellence.\" The young man pressed his lips together as he studied Julie for a moment with an inquisitive look. \"I see the merit in three of your choices. I have never seen The Hunt for Red October so forgive me for not expounding on that movie. But why,\" he asked with curiosity, Halloween as the most influential?\"\n\n\"It kickstarted an entire genre that's still going four decades later.\" Julie could hear the eagerness creeping into her voice as she continued. \"I'm not implying the influence was positive across the board, but Halloween spawned scores of movies with the same formula - a masked killer stalking his victims who smoked, did drugs, and had premarital sex. It gave us icons like Michael Myers, Jason Voorhees, and Chucky. Slasher movies became a studio staple for years because they rarely, if ever, lost money, and the profits often went towards prestige films and Oscar bait. There's a reason New Line Cinema is called 'The House That Freddy Built.'\"\n\nThe young man watched her with keen interest as Julie hit the crux of her argument. \"Most important, it introduced a genre that will not die. Big budget musicals, disaster movies, Harry Potter knock-offs, they each made Hollywood a lot of money before their popularity waned and the genre died out. Slashers? They wax and wane but they never go out of style. Wes Craven wanted to kill the slasher genre when he did Scream. Instead, he gave us a cycle of self-referential horror films, and when those became passe it was nothing but remakes for a few years, and when those died out television shows like Bates Motel and Scream Queens carried the flag before the 2018 version of Halloween kickstarted a whole new cycle. Jordan Peele's remaking Candyman, LeBron James managed to pull the rights to Friday the 13th out of legal hell, and they're even talking about making a fifth Scream movie. Not to mention that a good number of actors, actresses, writers, directors, and crew got their start working on cheap slasher movies.\"\n\nJulie leaned back in her chair and let out a deep breath. \"I honestly believe that if Halloween hadn't caught on as it did, the landscape of modern-day Hollywood would look substantially different. And,\" she concluded, \"we probably wouldn't have gotten John Carpenter's version of The Thing, and to me, that's the best horror movie of all time.\"\n\nBy the end of Julie's the young man was leaning forward, elbows on the table as he listened intently to Julie. \"Slasher movies are not my cup of tea, but you laid out a unique and compelling discourse that grabs me as a film buff. Is horror your preferred genre?\"\n\n\"I love all genres,\" Julie answered. \"I love movies. As long as they're entertaining on some level, what kind of movie they are doesn't matter to me.\"\n\n\"A solid viewing philosophy. One more question. How would you say Halloween is more influential than Black Christmas or The Texas Chainsaw Massacre? The originals, of course.\"\n\n\"The Texas Chainsaw Massacre isn't a slasher movie.\" Julie held up her hands as the young man tilted his head. \"A lot of people and critics categorize it as one,\" she admitted, \"however I say it's an exploitation movie. And Black Christmas has all the elements of a slasher movie. It also influenced Halloween which is the movie that brought those elements to the mainstream.\"\n\nThe young man was silent as he stared at Julie before lowering his hands from his chin. He slowly clapped at Julie, an impressed smile on his face. \"That was perhaps the best defense I have ever heard regarding slasher movies.\"\n\n\"If I ever make the foolish decision to obtain a doctorate in film studies, you've just heard the rough outline of my thesis.\" She reached across the table. \"Julie Wyndham.\"\n\n\"It's a pleasure to meet you, Miss Wyndham. Jaxon Oglesby, at your service. Please, make yourself comfortable, and let me tell you about the Farragut Film Society.\"\n\n\"Before we proceed, allow me to ask you a question. What do you believe is the best movie of all time?\"\n\n\"Easy. Roman Holiday.\n\nX X X X X\n\n\"Alexander.\"\n\n\"Gah!\" Caught off guard, Alexander jumped at the unexpected voice coming from behind him. He turned around, hand on his chest, to see a young woman with wavy chocolate brown hair and pale blue eyes looking at him with surprise. \"Karen,\" he managed to get out.\n\n\"I'm sorry,\" she said with concern, \"I didn't mean to frighten you.\"\n\n\"No, no, it's OK,\" he said, finally able to catch his breath and throw on a smile. \"You caught me off-guard and woolgathering, that's all.\"\n\n\"Oh good. I was afraid you might be one of those nervous guys who freak out when a girl says 'hello' to them,\" she teased, answering his smile with one of his own.\n\nAlexander shook his head. \"You didn't say 'hello,' you said my name. There is a difference.\"\n\n\"Four more letters and two more syllables. Perhaps it's not the word itself but its linguistic makeup that frightens you.\" Karen tilted her head slightly as she studied him. \"Did you loathe high school English, Alexander?\" she asked in a low voice.\n\n\"One, you can't psychoanalyze me yet. We've only got one week of Intro to Psych under our belts. And two, yes I did, but that was because of my fellow students, not the coursework.\"\n\n\"Noted.\" Karen added a friendly laugh to her words. The young woman was clad in black jeans and a green-and-blue striped shirt, which almost went along with Alexander's blue jean shorts and his light green t-shirt. \"So, why the woolgathering? The sights and sounds of the student expo don't appeal to you?\"\n\n\"Oh, they do. Rampant commercialism on one side and cult recruitment on the other?\" Alexander punctuated the back half of his sentence by gesturing towards a distant part of the student union. Underneath a group of colorful banners emblazoned with Greek letters, several groups of older students were drawing in a substantial number of freshmen. \"How could I possibly resist?\"\n\n\"The appeal of fraternity life doesn't draw you in?\" Karen playfully asked.\n\n\"I managed to escape high school with my sanity intact. I am not,\" Alexander said firmly, \"going to willingly subject myself to more social ladder bullshit by buying my way into a friendship pyramid scheme.\"\n\n\"And here I thought you'd look cute with a popped collar and backward baseball hat. So why are you still here?\"\n\n\"Waiting on my roommate,\" he answered. \"We're having dinner with some friends so he's grabbing a bunch of menus so we can decide where we want to go. What about you?\"\n\n\"Waiting on my roommate to finish getting recruited by a cult.\" Karen pointed towards a nearby table, where a black-haired waif of a young woman, her shorts and tank top showing off her scrawny legs and arms, was holding a conversation with a regal, severe-looking young woman. Her hair was raven-black, with a velvet shimmer evident even at a distance. \"The University Group for God,\" Karen explained. \"Gwen came here today specifically to talk to them. Wanted to see if they were worth joining.\"\n\n\"Gwen. The girl who drank an entire party under the table last weekend. Is talking to what I'm guessing is the campus Christain group?\"\n\n\"Gwen,\" Karen responded, \"the girl who got up early and bought me coffee and donuts the next morning. Turns out she's... actually,\" she said, motioning with her chin, \"why don't you find out for yourself?\" Alexander turned to see Gwen nodding in goodbye to the regal young woman, adding a friendly wave before moving in his and Karen's direction.\n\nAs Gwen met Karen's gaze, the petite woman gave an exaggerated shrug accompanied by a weary smile. \"Yeah,\" she said as she joined Karen and Alexander, \"they're not my style.\"\n\n\"I'm sorry. Gwen, this is Alexander de'Armound. Alexander, please say hello to Gwen Crutchfield.\"\n\n\"I vaguely remember you,\" Gwen said as shook Alexander's hand. \"You're the one who helped Karen bring me back to our dorm last weekend. Thanks for being a gentleman.\"\n\n\"Thanks accepted, however not required.\" Alexander grinned. \"It's a pleasure to remake your acquaintance. So, University Group for God, huh?\"\n\nGwen sighed dejectedly as she glanced over her shoulder. \"They seem nice on the surface, but I could tell right away they are fundy as fuck. Too much 'do what we say' and not enough 'do what Jesus said.' I'd be tempted to drink if I hooked up with them.\"\n\n\"So why were you checking them out?\" inquired Alexander.\n\n\"Looking for a campus church. My first Sunday at college and I end up not going to church? My Dad's going to chew my ear off about it the next time I talk to him. Maybe I can find an online one to tide me over until I find a local congregation...\" Gwen stopped talking as she saw the puzzled look on Alexander's face. She shot Karen an amused glance. \"He doesn't know, does he?\"\n\n\"Nope,\" Karen smirked.\n\nGwen shook her head as she turned back to Alexander. \"Sorry. Turns out my roommate is a sociopath-in-training, with the way she likes to mess with people. I'm a preacher's daughter.\"\n\nAlexander idly scratched the back of his head. \"That's cool. Not what I expected, but cool.\"\n\n\"Let me guess,\" Gwen said, \"Good Christian girl comes to college, goes to her first party, gets wasted, heads down a path of sin and debauchery? Too late.\" Gwen tapped her chest with two fingers. \"I started down that path in high school. Just have to find my alcohol tolerance and I'll be a well-rounded party animal.\"\n\n\"Remember how I said at the party that my roomie had a sheltered upbringing?\" Karen chuckled. \"Turns out I was waaaaaaaaaaaaaaaay off.\"\n\n\"And on that note, please forgive me for being rude Alexander, but I'm starving.\" Gwen motioned towards the steps just inside the front door of the student union that led downstairs to the cafeteria. \"You want to maybe join us for dinner?\"\n\n\"Thank you for the offer,\" Alexander said appreciatively, \"however I have a prior reservation with my roommates and some friends. I'll accept a rain check if you offer one.\"\n\nGwen shook her head. \"Considering the weather yesterday, I'll offer you a meal to be named later. Good to meet you, Alexander. Or do you prefer Alex?\"\n\n\"Alexander, please.\"\n\n\"See you in class!\" Karen waved to Alexander as she and Gwen began to make their way towards the cafeteria. As Alexander turned away, head craned looking for Cole, he managed to catch a snippet of the conversation between the young women. \"See,\" Karen proclaimed to Gwen, \"told you he was kinda cute.\"\n\n\"Cute-ish,\" was Gwen's reply before the girls and their conversation were swallowed up by the crowd.\n\nAlexander felt an unfamiliar sense of pride welling up inside of him. \"Cute-ish? I'll take it!\" The grin remained on his face as he resumed scanning the hall for Cole. It wasn't long before an arm leisurely raised from the crowd and beckoned Alexander. He headed in that direction, weaving his way through his fellow students, eventually finding Cole slouching against a wall. As he approached, Alexander paused for the briefest of moments when he noticed Julie and Eleanor accompanying his roommate. The smile faltered just for a second at the sight of his two lovers before Alexander managed to push his nerves down and join his friends. \"Hello,\" he said in greeting. \"Find what you were looking for, Cole?\"\n\n\"That I did.\" Cole held up a fistful of colorful paper menus. \"Also found our dinner guests.\" Julie gave him a polite nod while Eleanor daintily twirled one foot back and forth as she flashed him a saucy grin.\n\nWith a nervous grin to his previous evening's lover, \"Hello, Eleanor. Once again, you have great choices in attire.\"\n\n\"Thanks,\" Eleanor grinned, motioning to her long-sleeved, off-the-shoulders loose white blouse and ankle-length black skirt. \"Goodwill, Spokane. I always try to buy one piece of clothing for every two or three I donate.\" She twirled in place, flourishing her outfit for Alexander. \"\n\nFrom off to the side, a voice began to sing.\n\n# You wear it well #\n\n# A little old fashioned but that's all right #\n\nEleanor's face took on a red tint, picking up an appreciative grin as she turned, along with Julie and Alexander, to look at Cole. \"You're making me blush in public,\" she said. \"You know, I think that's the first time I've ever heard you sing, Cole.\"\n\n\"Lead guitarists exception rather than the rule comes to singing in bands. But Alexander had it right. Approve of the attire. So, food.\" Cole tapped the menus against his other hand. \"Got all kinds of options here,\" he offered. \"Italian, Indian, Kabob, Chinese, American, which is burgers and subs, Japanese, Chinese, Japanese and Chinese... ain't even counting the food trucks. Plethora of eating establishments for a small town.\"\n\n\"A small college town,\" Eleanor stated. She held up three fingers and ticked them down one at a time as she talked. \"A small college town, a small military town, and a small resort town for vacationers who think Coeur d'Alene is too much to handle.\" Bumping both hands together, she added, \"Three small towns, one culinary melting pot. There's also a good chance some of those places are brand new for this school year,\" she added.\n\n\"What's everyone in the mood for?\" inquired Alexander.\n\n\"Suggestion.\" Cole pointed towards the front doors of the student union. \"Instead of standing here deciding, people up for going to one of our rooms and calling for delivery?\"\n\n\"That is a sound plan,\" Julie said. \"It would provide an appropriate level of privacy to discuss the events of both last weekend and last night. The discussion of our sexual proclivities should go hand-in-hand with discretion.\"\n\n\"In other words, we should make sure no one overhears what kind of sluts the four of us are.\"\n\nJulie responded to Eleanor with a sly expression. \"Why give such information away for free?\"\n\nX X X X X\n\nAs Eleanor scraped the remains of her sweet-and-sour chicken into the Tupperware container, Cole told Julie, \"Thinking I should be taking notes on your practicality.\"\n\n\"I already have,\" admitted Eleanor as she put the sealed container in the mini-fridge. \"Not just for storing leftovers but for bringing extra food back from the cafeteria in case I get the munchies in the middle of the night.\"\n\nFrom his spot on the floor, Cole motioned in Alexander's general direction. \"Make a note on the board to get Tupperware. First though, make a note to get a board to make a note on the board to get Tupperware.\"\n\nAlexander pulled his iPhone from his pocket. \"Reminder,\" he muttered, \"get a dry erase board for the door.\" After a moment the young man looked across at Julie. \"You haven't visited our room yet, have you? Would you be willing to swing by this week and do a... I guess call it a practicality sweep?\"\n\n\"I will come by tomorrow if that's a convenient time for you.\" Julie tapped her spoon against the side of the plastic container holding the last remnants of her wonton soup. \"It's the least I can do to pay you back for covering dinner tonight.\"\n\n\"Thanks from me as well,\" added Cole. \"Ain't gonna run you in the red, is it?\"\n\nAlexander shook his head. \"It's money I was planning to spend at the expo anyway. Buying you guys dinner felt like the perfect capstone on our first week of college. Just don't expect it all the time,\" he teased.\n\nHaving climbed back onto her bed, Eleanor reached over and put her hand on Alexander's forearm. \"Aw,\" she said with faux sweetness, \"and here I thought you were trying to get me to put out again.\"\n\nThere was the barest of hitches in Alexander's throat before he patted Eleanor's hand. \"Appreciated,\" he said with a single waggle of his eyebrows, \"but not expected.\" His words drew a chuckle from Cole and a hearty laugh from Eleanor as she settled back on the bed.\n\nThe four friends were gathered in Julie and Eleanor's dorm room, finishing up their dinner of Chinese takeout from a restaurant called the Village Wok. Julie sat at her desk, spooning out the final drops of her wonton soup, while Alexander had taken Eleanor's desk for his sushi dish of salmon rolls. Eleanor lay on her bed, balling up the towel she had eaten her sweet and sour chicken on and easily making an overhand toss to throw it into the nearby laundry basket. Cole, his crab rangoon devoured almost immediately, sat on the floor, his back against Julie's bed, legs leisurely stretched out in front of him.\n\nCole waited for Julie to finish her soup. After she placed the plastic container, her spoon, and several used napkins in the garbage can under her desk, he coughed politely. \"Reckon we got a conversation to have.\" He slid down the side of Julie's bed, moving to a spot where he could see the other three. \"So,\" he said as he looked at his friends, \"anyone want to kick this off?\"\n\nSave for the routine noises of a college dorm, a heavy curtain of silence draped over the quartet. Julie had turned her chair to face everyone, her back straight and hands folded in her lap. Alexander leaned against Eleanor's desk, rubbing his lips with one finger. It looked to Cole as if his roommate was trying to mentally categorize his thoughts. Before Alexander spoke, however, Eleanor sighed anxiously. \"I'll break the ice.\" She rolled over and sat on the edge of her bed. Her hands gripped the edge of her mattress. Her legs kicked slightly, bare feet bouncing gently against the wooden bedframe.\n\n\"Let me preface this,\" she began, \"by saying I have absolutely no regrets over last weekend. Or last night, for that matter.\" Her smile towards Alexander was an attempt to put him at ease before she continued. \"This dynamic the four of us have. I've known the three of you for a little more than a week and already I feel incredibly at ease around all of you. I looked forward to tonight because it meant a chance to hang out with you guys again,\" she said, nodding towards Cole and Alexander before a saucy grin crossed her face. \"Oh, yeah, and the two of you are top-shelf lays.\"\n\n\"I agree with Eleanor's assessment,\" added Julie, \"both in terms of our growing friendship and your sexual prowesses.\"\n\nThere was pride in Alexander's body language as he sat up straighter in his chair. \"Thank you. You two ladies are also excellent between the sheets.\"\n\n\"Concur,\" Cole concluded succinctly.\n\n\"Good. We all want to be friends, the girls want to bang the boys, the boys want to bang the girls. So before we go any further, we need to set some ground rules.\" Eleanor glanced at each of her friends in turn before continuing. \"I'm proposing them so we can talk about them. Nothing is carved in stone yet. First,\" she began, \"we are not exclusive between the four of us at this moment. Any of us can sleep with any other of us without drama.\"",
        "At that last sentence, Julie raised her hand. \"Would that cover if you and I or Cole and Alexander slept together...\" The question faded to silence as all three shot Julie roughly the same quizzical look. \"Better to know now than after the fact,\" she said. \"If we're going to have this discussion, all contingencies should be prepared for to the best of our abilities.\"\n\n\"'By failing to prepare, you are preparing to fail?' Benjamin Franklin,\" Alexander smiled, \"once again via my US History teacher. And I agree with Julie. All possible combinations should be on the table.\"\n\nWith a wry smile, Cole spoke up from his spot on the floor. \"Including threesomes and foursomes?\" Cole's grin showed just a hint of teeth as he saw Alexander's eyes drift to one side as he processed Cole's question. \"Ain't sayin' it's gonna happen, nor sayin' you're gonna get Julanor or Colexander, just if we're putting all options on the table, putting all options on the table.\"\n\nEleanor pointed at Cole. \"And that,\" she said gratefully, \"is why we're having this conversation, so we all know what's acceptable and what isn't. So is everyone OK with the first rule?\" Nods and words of acknowledgment greeted Eleanor's question. \"Second rule then. If two of us want to become exclusive, we let the other two know first. This arrangement?\" She gestured with her hand, a circular motion that encompassed everyone. \"It might not last. We've got four years together, hopefully. Things might change in that time. If they do, we all need to know so no one gets blindsided.\"\n\nAt that, Cole motioned for Eleanor's attention. \"Say find someone outside the group wants to be exclusive with. Goes without saying, make sure that tale gets told too.\"\n\nWith a nod, Eleanor said, \"That ties into rule number three. Final rule for now, if one of us does sleep with someone outside the group, they have to tell the others. Not all the gory details,\" she clarified, \"not even who you slept with, just that you slept with somebody. As of right now, all four of us are clean. No STDs. Let's keep it that way.\"\n\n\"I back that rule 100%.\" Alexander combined a smile and a sigh, reaching out to squeeze Eleanor's hand. \"I back all three rules, but that one's the clincher for me. The last thing I want to do... the last two things I want to do is dirty someone up and ruin a friendship in the process.\"\n\nJulie brushed the hair back from her ear. \"I would like to propose that STD tests be mandatory for as long as this arrangement is in place. They're available at the student clinic and are part of the process of donating blood and plasma. Doing so will not only ensure we remain free of disease, since this arrangement is, at its core, based on the mutual exchange of bodily fluids, the least we could do is donate some of those fluids in return. Make it the fourth rule. STD results every three months.\"\n\nWhy Cole and Alexander nodded, Eleanor stared at her roommate in bewilderment. \"That is the most unique way I've ever heard the act of fucking described. But it makes sense. Alright, that's the fourth rule.\" She held up four fingers on one hand. \"First rule, it's cool for any of us to sleep with any of us. Second rule, if people want to become exclusive, they have to inform the others. Third rule, if you sleep with someone outside the quartet, let the other three know. Fourth rule, STD tests every three months. We all in agreement here?\"\n\n\"I feel like we're having a constitutional convention here,\" Alexander said. \"Anyone got a quill and parchment?\"\n\n\"Charter.\" Cole slowly got to his feet, using the back of the bed more than his body to do so. \"Just crafted a charter. Need a moniker and all good to go.\"\n\nEleanor's body suddenly rocked forward as she barely managed to hold back a guffaw. \"OK,\" she said, one hand in the air as she caught her breath, \"there's no way in hell we're calling it this, but the first thing that came to my mind was 'The Bang Club.'\"\n\n\"It's accurate.\" Alexander pointed across the room to Julie sitting at the opposite desk. \"But to me, this whole friendship with benefits kicked off because of a movie. How about we call ourselves the Movie Club?\"\n\nHands folded in her lap, Julie closed her eyes, a look of intense concentration on her face. \"To borrow from Mark Wahlberg,\" she said with nervous excitement, \"when I close my eyes, I see this thing, a sign, I see this name in bright blue neon lights with a purple outline. And this name is so bright and so sharp that the sign - it just blows up because the name is so powerful...\"\n\nWhen Julie opened her eyes, a mischievous smile appeared on her face. \"It says, 'The Midnight Movie Club.'\"\n\nAlexander stood up from his chair. \"The Midnight Movie Club,\" he proclaimed as he took a step forward and held his arm out, palm facing the floor. Julie, Eleanor, and Cole stared at him, causing the young man to slouch awkwardly. \"Seriously? No handshake-type gesture to seal the charter?\"\n\n\"Sign charters, not seal them,\" Cole said, teasing his roommate as he also stepped forward. \"Gesture's appropriate though.\" With a friendly smile, Cole put his hand on top of Alexander's. After a moment, Julie did the same, her hand on Cole's, and finally, Eleanor joined in, placing hers at the bottom of the pile, palm turned up, squeezing the three hands above hers, sealing the bond that had been formed over the first week of college.\n\n\"This makes it as official as it can be without quill and parchment,\" Julie said as they pulled their hands back. \"And it's still early,\" she added, motioning to the final rays of sunlight outside the window. \"Does anyone have any suggestions for post-dinner activities?\"\n\n\"Well,\" Cole suggested, \"could watch a movie.\"\n\nX X X X X\n\nEleanor leaned in to kiss Alexander. Instead of her mouth pressing against his, however, a single finger pushed firmly against her lips. \"Not yet,\" he told her softly. \"Wait until the movie's over.\"\n\nOne hand slid up his thigh. Alexander shivered as Eleanor's fingers brushed against the bulging denim between his legs. \"Are you sure?\"\n\nThe voice inside of Alexander's head said to forego his previous statement and give in. He pushed that voice down, as he had since graduation, despite his body quaking at the feeling of Eleanor's hand caressing him between the legs. \"Yeah.\" Hoping his flirtatious grin would set Eleanor at ease, he gently took Eleanor's hand from his lap and lifted it to his lips. A soft kiss on the back of her hand preceded him saying, \"I'm enjoying this movie and while you would be the most pleasant of distractions, I want to see how it ends.\"\n\nEleanor sighed, turning around and flopping back against Alexander's chest. \"Fine,\" she playfully groused, crossing her arms with an exaggerated huff. \"I'll just sit here and get more turned on. Once this movie's over though Alexander, you are in so much trouble.\"\n\nHis hands wrapped around her waist. Teasing the bottom of her loose white blouse with his fingers, Alexander gently stroked the patch of exposed midriff. \"How about a compromise?\" Eleanor's hum somehow mixed fake annoyance and genuine affection as Alexander kissed her exposed shoulder. \"Under the clothes, over the underwear, no kisses with tongue, until the credits start to roll.\"\n\n\"Acceptable,\" Eleanor murmured as Alexander kissed the sensitive spot on her neck. \"Should we check with Julie and Cole, see if they're up for keeping tradition?\"\n\nAlexander retorted by lightly nibbling Eleanor's earlobe. \"Where do you think I got the idea from?\" Eleanor turned to look across the room at her friends, Alexander taking advantage to work over her exposed neck. Cole and Julie were lying on their stomachs, sharing a pillow as they watched the movie. In the colorful light of the television, both Eleanor and Alexander could make out Cole's hand down the back of Julie's shorts. He was making slight movements, squeezing her firm butt underneath the black fabric, causing Julie's eyes to flutter.\n\n\"Fair enough.\" Eleanor turned to face Alexander. This time she grabbed the back of his head and pulled him towards her. True to the arrangement there was no tongue, however, the forcefulness of the kiss was enough for Alexander to breathe heavily for a moment as Eleanor pulled away. \"Just remember, what happens after the movie's over, that's on you.\"\n\nWith Julie having chosen The Burning and Cole picking Bulletproof the previous weekend, a quick game of Paper-Rock-Scissors determined that Alexander would have the choice of movie genre for the evening. His answer had been immediate, requesting a specific movie that Julie had mentioned earlier in the day at the expo - A Perfect Getaway. The wide smile on Julie's face at his suggestion was almost been reward enough to Alexander. \"2009,\" she gushed as she pulled up the movie on her smartpad. \"Timothy Olyphant, Mille Jovovich, Steve Zahn, and Chris Hemsworth in his first movie role. It was filmed in Hawaii and Puerto Rico. Underrated thriller, underrated cast. I'm excited that Alexander picked this one.\"\n\nEleanor leaned towards Julie, lowering her voice to a stage whisper that the entire room could hear. \"How much shirtless Chris Hemsworth is in this movie?\"\n\n\"I would say,\" Julie mused, \"just the proper amount of shirtless Chris Hemsworth.\" She punctuated her answer with a sly grin, causing Eleanor to respond with one of her own and Alexander to feel a grain of self-consciousness.\n\nWhile Julie synched her smartpad to the television, Alexander felt a firm grip on his hand. \"You're with me.\" Eleanor pulled him towards her bed. He managed to keep his balance by catching himself on the edge of her mattress. By then Eleanor had climbed up onto the bed, ending up on her hands and knees. Her black skirt fell over her hips and shapely rump. Alexander's noise of appreciation caused Eleanor to glance over her shoulder, which in turn caused Alexander to rip his gaze away from her butt. A low heat brushed across Alexander's cheek as Eleanor's laugh caused him to blush. \"It's OK to look when it's just the two of us, Alexander,\" she told him. \"And if you want...\" Eleanor wiggled her bottom back and forth. \"...you can even leer.\"\n\nAlexander shook his head, chuckled, and sighed all at the same time. \"Discreetly in public, blatantly in private. Is that acceptable?\"\n\n\"Sit here.\" Eleanor patted her pillow. \"And spread your legs.\" After untying his shoes and setting them underneath Eleanor's desk he followed the young woman's instructions. The instant his back was against the headboard, she was sitting down between his legs. \"Get the lights, Cole,\" Eleanor stated while she grabbed Alexander's hands and locked them around her waist. He pulled her close, molding his chest to her back, his sock-covered feet brushing against her bare ankles.\n\nCole turned off the lights and pulled the curtains closed. For a moment the light from Julie's smartpad was the only source of illumination until the menu for the DVD-rip of the movie popped onto the television screen. Julie started the movie, plugged her smartpad into the charger, grabbed two pillows, gave one to Cole, and after Cole flopped onto her bed lay down next to him.\n\nThe Burning had grabbed Alexander by the throat for its sheer brutality. Bulletproof was over-the-top cheese that had entertained the hell out of him. A Perfect Getaway turned out to be an enjoyable thriller, with a small cast, solid acting, a tight script, beautiful scenery, and most importantly, enough twists and turns to keep Alexander's interest throughout. While Alexander's focus had been on the movie, Eleanor's focus had been on the actors and actresses. He could feel Eleanor shift slightly at the introduction of Chris Hemsworth's character, and there was no denying the firm \"oh my\" that escaped her the moment his shirt came off. Once again Alexander, even though he knew both Julie and Eleanor hadn't seemed to care about his physical appearance, couldn't help but to compare himself to the trio of actors in the movie and fight a losing mental battle against his self-consciousness.\n\nOn the other bed, Julie and Cole quietly watched the movie. The only physical contact, aside from the proximity of their bodies, came when at some point Cole began to idly scratch Julie's back. In contrast, Eleanor pressed against Alexander's body from nearly the beginning of the movie. Her hands drifted along his legs. Her dirty blonde hair brushed against his neck and the woody fragrance of Eleanor's patchouli oil perfume tickled his nostrils as she got comfortable.\n\nThroughout the movie, Eleanor's casual touches became bolder. She slowly rubbed her backside against Alexander's body as she sat between his legs. His penis responded accordingly, giving Eleanor a firm target to press her butt against. Alexander's shivering was the catalyst for Eleanor to turn and attempt to kiss him, only for the movie to beaverdam her on Alexander's behalf.\n\nDespite her playful annoyance at being turned down for the moment, Eleanor perked up at the revelation of the movie's villain. \"That was pulled off really well,\" she proclaimed. Alexander murmured in agreement. As he did so, his hands slipped underneath the bottom of Eleanor's blouse. The loose material easily allowed him to gently drag his fingers up Eleanor's stomach, the skin warm under his touch as he went to trace the underswell of her breasts...\n\n\"You're not wearing a bra,\" he said with surprise.\n\n\"No panties either.\" There was a smugness in Eleanor's voice as she let the back of her head rest against Alexander's shoulder. \"So much for over the underwear... ooooooooooooooooh...\"\n\nEleanor's hips rose off the bed as Alexander swept his fingers across her nipples. It was her turn to quiver as he tortured her for several seconds by squeezing her breasts. Her sensitive nubs quickly stiffened under his attack. After Alexander let his hands fall away, Eleanor's breath escaped in a rapid staccato as she recovered. \"You... are... so getting laid when... this movie is over.\"\n\nIt was Alexander's turn to sound pleased with himself as he settled back against the headboard. \"You make that sound like a threat.\"\n\n\"Oh, it is,\" Eleanor answered, grinding her butt against Alexander's rigid cock\n\nThe last twenty minutes of the movie was an intense chase through the jungle. Alexander felt Eleanor tense up (and he was sure she sensed him doing the same) as the movie built towards its climax. On the other bed, Cole and Julie were also both enthralled. The self-proclaimed Midnight Movie Club watched as the final moments of A Perfect Getaway wrapped up the mystery in a manner that Alexander found satisfactory. \"You were right, Julie,\" he began, \"that was...\"\n\nBefore he could say anything else, Eleanor turned around, dropped down the bed, grabbed his ankles, and pulled him away from the headboard, dragging Alexander onto his back. His eyes took in the textured acoustical ceiling tiles for the briefest of moments before Eleanor pounced on top of him. She planted her knees on either side of Alexander's hips. Leaning over him, her dirty blonde hair hanging down, framing her, an evil smirk was painted across Eleanor's face. Alexander, stunned by the quickness of Eleanor's actions, could only watch as she took hold of his wrists and pinned him to the mattress. His hands were pressed into the thick quilt with a force that surprised him. \"I warned you,\" she said in a low, husky voice. \"You are in so much trouble right now, Alexander de'Armound.\"\n\n\"I find myself both regretting and standing by my early decisions.\" Alexander turned his head. Cole and Julie were still lying side-by-side. Both of his friends were currently staring at him, both of them appearing intrigued by his current predicament. \"So Cole,\" Alexander joked as Eleanor began to nuzzle his neck, \"what did you think of the movie?\"\n\n\"Enjoyed it,\" Cole answered, throwing Alexander a half-hearted thumbs up. \"Wishing we watched in winter when wicked way below zero.\" Alexander attempted to respond, only for Eleanor to choose that moment to shift her hips against his, causing him to let out a drawn-out hum of approval. A quiet chuckle escaped from Cole before he pushed himself up onto his elbows. He dipped his head and kissed the nape of Julie's neck. \"Thinking it's time to let them be. With me?\"\n\n\"Actually...\" Julie rolled over onto her back. \"...I have an unusual request,\" she said warily. \"Before you and I become intimate, I would first like to watch Eleanor and Alexander as they become intimate.\"\n\nJulie's statement caused Eleanor to stop grinding against Alexander. She turned to look at her roommate. Alexander did so as well, both of them joining Cole as he glanced down at an anxious Julie. \"Unusual, yeah,\" he laconically admitted. \"Intriguing, also yeah.\" His hand brushed Julie's short black hair. \"Saying you need the pump primed before being with me?\"\n\n\"Absolutely not,\" Julie immediately answered. \"Based upon my experiences since arriving here at Farragut, I find myself debating if voyeurism is a previously undiscovered kink.\" She gestured towards the opposite bed, spreading her hands for emphasis. \"This is a perfect opportunity for confirmation or denial. If I am not a voyeur, then you and I, Cole, will still have fun. If I am...\" Julie reached between their bodies and ran her fingers over Cole's abdomen. \"...then you and I will have an extraordinary amount of fun.\" The final three words were stressed by Julie's hand moving lower, a single finger running between the waistband of Cole's jeans and his boxers.\n\n\"I'm on board. Suggest checking with the actor and actress though. See if they're willing to climb on the crazy train.\"\n\n\"Oh!\" Julie's face reddened with embarrassment. \"I was so focused on my own needs that I completely neglected to ask if you were comfortable with my proposal. Are you?\"\n\nAlexander looked at Eleanor. She was still atop him, bent at the waist, hands and legs pinning him to the mattress. \"Are you comfortable with this?\" he asked hesitantly.\n\nHer response was to kiss him firmly, her tongue immediately sliding into his mouth. Eleanor's fingers gripped his wrists tightly and she squeezed her thighs against his hips. When she pulled back a few seconds later, Alexander had to catch his breath, almost panting from the force of the kiss. \"I'm absolutely game,\" she whispered, tickling her ear with her hair, her breath, and her tongue in quick succession. \"I've never had someone watch me fuck someone else before.\" Eleanor rocked her hips back and forth, rubbing herself against Alexander's cock as it bulged against the denim of his jeans. \"It sounds kind of hot. I'm up for it if you are.\"\n\nEleanor dipped her head and nuzzled the side of his neck, teasing Alexander by barely touching him. \"I will admit to some performance anxiety...\"\n\nBefore Alexander continued, Eleanor sat up and pulled her top off in one fluid motion, throwing the blouse into the air with a flourish. Her nipples were already rock hard, almost begging Alexander to reach up and grab them. \"How about now,\" she teased as she put her hands behind her head. Eleanor wrapped up her hair, holding it in a loose ponytail, posing as if she were a supermodel.\n\nAlexander's singular whisper of doubt was quickly overwhelmed by the raving shouts of his libido. \"What performance anxiety?\" he said, giving Eleanor his well-practiced smile.\n\n\"I think that's a yes,\" Eleanor called to her roommate.\n\n\"Outstanding.\" Julie rolled to a sitting position, followed by Cole. \"Just... do what you would normally do,\" she told her friends as she leaned against the wall. \"Act as if Cole and I aren't here.\"\n\nCole was in the process of pulling off his shirt as he added, \"Concur.\"\n\nOnce again Eleanor leaned down towards Alexander. She let her hair go. It fell around Alexander's face, covering it like a pair of curtains. \"Hey, if you don't want to do this,\" she said quietly, \"we can just go over to your room. I know you're concerned about being pressured...\"",
        "\"I want to do this,\" Alexander interrupted. \"I'm not feeling pressured at all. Promise. I'm...first two stunning young women sleep with me, and now one of them wants to watch me have sex with the other one. College is AWESOME.\"\n\n\"It is, isn't it?\" Eleanor slid her hands down the sides of Alexander's chest. \"Let's give them a show,\" she breathed into his ear. \"Something award-winning.\" Alexander's answer was to turn his head and kiss her neck. With a hum of approval, Eleanor took hold of Alexander's t-shirt and slowly lifted it up his body. Once his stomach was revealed, she gave her lover a wry grin before moving downward. Alexander sighed as Eleanor began to kiss the exposed skin. Her actions were more for show than erotic, however, just the mere action caused Alexander's erection to push against his jeans. He was rock hard, almost to the point of discomfort, and each press of Eleanor's lips against his skin only served to stiffen both his resolve and his cock.\n\nEleanor continued to push Alexander's shirt up his body, following the hem of his t-shirt with her lips. His stomach and chest rose and fell, his breath quickening and his heart rate rising with the warm sensation of Eleanor's tongue dragging its way over his stomach and lower chest. He gently rested one hand on her shoulder, like he had the other night when Eleanor had gone down on him. His other hand brushed her blonde locks, sweeping them off to the side so Alexander could watch Eleanor as she worked her way to his chest. Eleanor looked up at him, her eyes meeting his. She didn't look away as she stuck out her tongue and flicked one of his nipples. Alexander's entire body snapped as if he had just been shocked by a doorknob, at the sensation. It felt like a sharp tickle, a hypothesis confirmed as Eleanor licked the now-erect nub a second time.\n\nHis head lolled to the side, eyes closed as Eleanor began to kiss along his upper chest. Her breasts pressed against his body as she took her time and made a show of it. Having his nipples worked over was a new sensation to Alexander, one that he found himself getting used to. When he opened his eyes, Alexander saw Julie and Cole looking back at him. They were sitting side-by-side, backs against the white cinderblock wall. Cole was shirtless, the side of his hand pressed against his mouth, while Julie was staring intently, keen interest sparking in her eyes. \"Don't worry about us,\" she told Alexander quietly. \"Focus on yourself and Eleanor.\"\n\n\"You heard the woman.\" Eleanor followed her statement by lifting Alexander's shirt over his head. He lifted his arms, allowing her to pull the shirt free from his body. Before she could get it completely off, however, Alexander caught the fabric with his hands. In one smooth motion, he slung the shirt around Eleanor's shoulders and pulled her down towards him. This time he was the one who kissed her firmly. The unexpected action caused Eleanor to gasp just before he pressed his lips against hers. He brought her close, passionately kissing her as she responded by digging her fingers into his shoulders as their tongues danced in each other's mouths. Alexander managed to wrap his hands around the shirt, giving him leverage to keep Eleanor bound to him. Her thighs squeezed him tightly. Slowly, Eleanor began rocking back and forth, rubbing her hips against his. He answered by raising up. His erection pushed against the black fabric of her skirt, causing Eleanor to moan hungrily as they kissed.\n\nX X X X X\n\nFrom the moment Eleanor had begun to remove Alexander's shirt, a wave of pleasure began to flow through Julie's body like lava. It slowly flowed from her lower body, up through her chest and down her legs, until a soft heat touched every fiber of her being. The fact that she was in a room with three people she had known for just over a week hadn't stopped Julie from softly running a hand over her chest, as she would have if she had been alone and preparing to pleasure herself. Cole, having stripped his shirt off, sat next to her, motionless, letting the scene unfold in front of him. He just watched Eleanor and Alexander, making no effort to make out with or touch Julie. She appreciated that. This was her experiment, and Cole joining in risked skewing the results.\n\nX X X X X\n\nAlexander was beginning to feel warm when Eleanor put her hands against the mattress and pushed herself into a sitting position, using the shirt to bring Alexander with her. Without breaking their kiss, Eleanor adjusted herself so that she was straddling his lap. Her arms wrapped across Alexander's back for both balance and to keep him in place. His t-shirt fell from his hands, drifting onto the mattress as Alexander wrapped Eleanor's hair around his fingers. When he pulled the strands, she hissed in pain. \"Careful,\" she told him. \"Don't pull on the ends of the hair. Pull closer to the scalp.\"\n\n\"Like this?\"\n\n\"Definitely like that,\" Eleanor exclaimed as Alexander pulled the hair along her scalp in his hand. This time, he gently tightened his fist. A long, drawn-out groan was Eleanor's response. She buried her head in his shoulder. Fingernails lightly dug into Alexander's back as he carefully released the tension, only to repeat the process with the same agonizing slowness. \"Mmmmmmm,\" Eleanor hummed before beginning to kiss his shoulder and neck. He turned his head, kissing along her ear and cheek before their lips met once again.\n\nAs they made out, Eleanor began to rock her hips against Alexander's. He quickly found his rhythm, pushing up to allow Eleanor to rub herself against his cock. A series of grunts, moans, and sighs emanated from the pair of college freshmen. Eleanor wrapped her ankles around his waist as Alexander lifted his lower body to provide her a stable platform to grind her pussy against him. His cock ached as it pushed against his jean shorts. \n\nEach motion of Eleanor's body against his sent a trembling wave of anticipation surging through him, pushing his desire to new heights. Managing to tear his lips from Eleanor's, Alexander began to kiss her throat, down to her lower body. With a gasp, Eleanor held his head to her chest, urging him on as he worked his way to her breasts. The moment Alexander's found her nipple, Eleanor started as if zapped by static electricity. Her breath came out in shivering gasps as he assaulted the erect nub, as hard as diamond atop the firm mound. \"Ooooh fuck,\" she groaned. Alexander took his time, alternating between short flicks and long, drawn-out licks with his tongue.\n\nAs Eleanor's fingers gripped at his short brown hair, Alexander opened his eyes and cast another look towards the two would-be voyeurs on the other bed. To his surprise, Cole was now completely naked. His roommate was leaning against the wall, arms crossed, cock jutting out from between his legs, looking comfortable and blase in his casual nudity. Julie, sitting next to him, had slid one hand into her tank top. It looked to Alexander as if she was gently massaging her breast. As their eyes made contact, Julie smiled before giving him an eager nod.\n\n\"Hey Julie,\" Eleanor called out, \"who was the cute guy with glasses in that movie we just watched?\"\n\n\"Steve Zahn,\" she answered.\n\nEleanor took Alexander's face in her hands and pulled him away from her chest. Looking down at him for a moment, she ran her hand through his short brown hair. \"Did anyone ever tell you you've got a Steve Zahn thing going on, Alexander?\"\n\n\"No. I don't wear glasses.\"\n\nPutting her forehead against his, Eleanor chuckled. \"I don't mean the glasses. Julie, do you see the resemblance?\"\n\nAfter a moment, Julie nodded, her hand still working underneath her tank top. \"I do see it, however only because you pointed it out,\" she admitted.\n\n\"That's a good thing,\" Alexander asked, \"right?\"\n\n\"I said he was the cute guy in glasses, didn't I?\" Eleanor wiggled her hips, causing Alexander to hiss, his back arched, which in turn saw Julie close her eyes and hum contently. A sly grin crossed Eleanor's face just before she pushed Alexander down to the mattress. Once he was prone, her hands glided down his front before grabbing at the waistband of his jean shorts. Alexander raised his hips to allow Eleanor to unbutton and unzip his pants. Taking his shorts and his boxers in hand, Eleanor worked them down his legs, pulling them off his body along with his socks. She casually tossed them onto the floor, followed by his discarded shirt, leaving him naked on her bed.\n\n\"Look at you.\" Eleanor reached out with one finger and ran it down the shaft of Alexander's cock. The simple act of touching his manhood caused Alexander to inhale sharply. A shiver ran through his entire body at the overwhelming sensation. \"Wow,\" Eleanor said in awe, \"you are as hard as a rock.\" She wrapped her hand around his cock and squeezed. A tortured moan of pleasure escaped from the young man. \"All nice and slick too.\" Her fingers spread the drops of precum over his tip. \"I'm glad you made me wait until the end of the movie if this is what was waiting for me.\"\n\nAfter pumping her hand up and down his shaft a few times, Eleanor got onto her knees. Keeping eye contact with Alexander, she proceeded to shimmy her black skirt down her legs, lifting her knees to remove the garment and throw it to join her blouse in the tangled pile of her and Alexander's clothing on the floor of the dorm room. Alexander lifted his head, looking down his body past his throbbing erection. As he watched, Eleanor ran her hands up her body, showing off both for him and Julie. Her fingers glided along her thighs, teasingly brushing against the bare center between her legs before moving towards her abdomen and stomach. A familiar saucy grin was thrown in Alexander's direction, returned in kind by the young man, as she slid her fingers in the valley between her breasts, along the sides of her throat, and finally through her dirty blonde hair. She pulled it up as she had earlier, teasing it into the air before letting go, allowing it to spill around her face.\n\nAlexander's cock noticeably twitched as he watched Eleanor display herself proudly. He was jealous of her self-confidence. However, before he could dwell on the negative emotion Eleanor shuffled forward and threw her legs over his upper body. For the first time in their relationship, Alexander had an up-close and personal view of Eleanor's womanhood, her thin lips pressed firmly together, free of hair, the smell of her arousal prevalent as she settled her hips above his face. \"This is new for me,\" he told Eleanor.\n\n\"I told you I was going to make you pay,\" she replied, her voice muffled somewhat by her thighs pressing gently against his ears. \"Are you up for this?\"\n\n\"Hell yeah... I mean, of course,\" Alexander managed to say, jokingly adding, \"I don't know where I should put my hands, though.\"\n\n\"Just put your hands on my butt and do what comes naturally.\" A sudden jolt of bliss shot from his cock as he felt Eleanor's hands running along the shaft and pressing softly against the skin surrounding the base before moving back up to the tip. The sensation of her hands on his erection ceased, but a moment later a warm, wet pressure surrounded the tip and upper portion of Alexander's cock, courtesy of Eleanor's mouth.\n\nX X X X X\n\nJulie hadn't realized she had slipped her hand underneath her tank top until she felt herself squeezing her breast. The heat covering her body was growing in its intensity, with the pressure specifically beginning to build between her legs. The sensation of her fingers circling her breast, briefly teasing her nipple, served to increase her arousal. Her eyes focused on Alexander, watching his reactions, but she couldn't deny the glances at her roommate's tan, freckled body.\n\nWatching Eleanor strip Alexander before removing her skirt, leaving both of them naked, helped to spark Julie further. She pulled her tank top off and set it on the bed next to her before settling back against the wall. Cole glanced over as Julie's fingers glided down her flat, toned stomach. She pushed them underneath the waistband of her shorts, dragging her hand over her cotton panties. \"Hmmmmmmmmm,\" she sighed as she pressed against the soft fabric covering her womanhood. The sensation of the fabric rubbing against the sensitive skin caused Julie to writhe. She moved her fingers in a slow circle, over her underwear, as a wet spot grew underneath her fingers. When Eleanor climbed atop Alexander, holding her hair above her head and giving Alexander and Julie, as well as Cole, an unobstructed look at her body, Julie's fingers moved to push against her clit. Despite being obstructed by her underwear, Julie bit her lip at the feeling of minor bliss that rolled through her body with each press of her fingers.\n\nX X X X X\n\nAlexander's head dropped back against the bed. His eyes squeezed shut as Eleanor began to bob her head up and down his shaft. As opposed to their previous encounter, this time she used her hands. The tension in his cock quickly gave way to intense ecstasy. She drew her head up, leaving only a sliver of his erection between her lips before giving the head of his penis a long, slow, firm lick. Her tongue swirled around the tip, alternating between licks and swirls. His hands clawed at the quilt, fingers digging into the fabric. Alexander wasn't in danger of cumming, but the feeling of Eleanor blowing him was causing his entire body to shake from intense bliss. It was all he could do not to ask her to stop.\n\nManaging to open his eyes, Alexander took in the sight of Eleanor's pussy inches above his face. He remembered her earlier words and took her rump in both hands. A firm squeeze drew a hum of approval from Eleanor as she took more of his cock in her mouth. The next sound she made was one of pleasure, caused by Alexander lifting his head and hesitantly running his tongue against her lower lips. The faintly bitter taste was a new experience for him, but he repeated his action, this time with more certainty and added pressure. Eleanor shifted her hips, tilting them toward his mouth. Alexander felt her hands twist the shaft of his cock, slippery with a mix of her saliva and his precum. The sensation spurred him on. Drops of her essence gathered on his tongue as he greedily began to lick at the thin lips of her vagina.\n\nWhere Alexander lacked experience, eagerness filled the gap. His tongue slowly parted her lips, revealing the soft, wet flesh underneath. Fingers squeezing the soft flesh of Eleanor's butt, Alexander showed no hesitation in pushing his tongue into her pussy. For a brief moment, the pressure on his cock was too much to bear as Eleanor's entire body shook. Then she pushed down, knees spread, her pussy square against Alexander's face as she surrendered complete and total access to her womanhood to his rapid tongue.\n\nWhat happened next was an accident, however a welcome one. As Alexander adjusted to Eleanor's new position, the tip of his tongue brushed against a bumpy spot near the top of her lips. This time, Eleanor convulsed on top of him. Her hips lifted away from his face for a brief moment before coming back down. Alexander had taken advantage to catch his breath, and as soon as Eleanor's pussy was against his lips he tried to find the same spot again with his tongue. It took him a few tries, but when he grazed it with the side of his tongue it brought about nearly the same reaction.\n\nThis time however Alexander grabbed hold of Eleanor's butt when she settled back down and kept her in place. Guessing he had found her clitoris, Alexander focused his efforts on the fleshy nub. After several passes with his tongue, each one causing Eleanor's body to tremble, she shoved herself into a sitting position, taking her mouth from his cock and bracing her hands against his chest. \"Oh hell yes, right there,\" she cried, beginning to rock her hips in time with Alexander's fervent licking of her pulsing button. Sweat ran down Alexander's face. Without Eleanor's attention, his cock began to ache again. It was becoming difficult to breathe as his lover ground her bare pussy against his lips. None of that mattered, though. His entire focus was on making her cum, and cum hard. He lashed her clit with his tongue. Fingernails dug into his skin as Eleanor's cries became a rhythmic chant. \"Oh God, oh God, oh God, oh God... OH, GOD!\"\n\nEleanor's thighs squeezed tightly against Alexander's head with incredible tension for a brief moment before her hands scratched against his chest. She collapsed pulling her pussy free from his tongue. Able to once again breathe freely, Alexander rubbed the back of his neck as he watched Eleanor's entire body shudder atop him. Her body was covered in a thin sheen of sweat, and her hair was matted to her scalp. After a few seconds, she went limp. Her body was dead weight on his. \"Holy shit,\" she gasped as her rapid breathing slowly returned to normal. \"What the hell, Alexander?\"\n\nHe almost took the question at face value and asked if he had done something wrong. Instead, Alexander threw up the cocky smirk he had started practicing after Eleanor had left the night before. \"I just did what came naturally,\" punctuating his words by lightly smacking Eleanor's butt.\n\nShe gasped again and gave a slight shudder. \"I... your tongue... that was...\" With a groan of effort, Eleanor peeled her sweat-covered body from Alexander's. She flopped onto her back, one arm splayed across his legs. Her chest, covered with a flush that reminded Alexander of red wine, rose and fell with heaving breaths. She managed to raise one hand into the air. \"Julie, please tell me that was what you were looking for.\"\n\nThere was only silence. Eleanor pushed herself up onto her elbows as Alexander turned his head. On the opposite bed, Julie had removed her shirt at some point. Her head was against the wall, eyes closed, her breathing heavy. The button on her shorts was undone, exposing the white fabric of her underwear. Currently, two hands were shoved into her panties - one Julie's, and the other Cole's. Along with helping Julie masturbate, Cole was also kissing her neck.\n\nX X X X X\n\nIt was when Eleanor set her face down on Alexander's that Julie had confirmation that indeed, she possessed voyeuristic tendencies. An erotic heat flowed through Julie, her nerves on end as she watched her roommate and her friend mutually pleasure each other. She could feel the sweat beginning to coat her skin. Her breathing became rapid as if she was jogging to warm up for a hard run. When she spread her legs, her thigh brushed against Cole. Her head lolled to the side to look at the young man. He was still focused on Eleanor and Alexander, a neutral expression on his face. He noticed Julie staring at him and turned to look at her. His eyes narrowed for a moment before he glanced down at where Julie's hand was furiously working beneath her shorts. Raising his head, it only took one look at the hungry expression in Cole's eyes for Julie to crave her friend and all the pleasure he could offer her.\n\nLicking her lips seductively, Julie reached over and took Cole's hand in hers. He offered no resistance as she put his hand down her pants, putting her fingers atop his. Immediately he dipped his fingers down, rubbing the outside of her pussy, which by now felt as if it was filled with liquid fire. Julie tried to push with her hips to catch his finger inside of her tunnel, but after making sure his fingers were properly lubricated Cole moved his hand and began to gently rub her clit.\n\n\"Yes...\" Julie assisted, her fingers adding the pressure and Cole's motion. Each time Cole's finger circled the fleshy button, a spark of pleasure attempted to turn the heat inside of her to catch into a firestorm. \"Yes... yes...\" she repeated as she urged Cole to rub faster.\n\nDespite their best efforts, the heat inside of her remained just under a fever pitch. The pleasure Julie felt was quickly becoming a tortured ecstasy. She groaned and writhed under her and Cole's touch, release still out of reach. As she pressed down with her fingers, warm lips pressed against the side of her neck. Her other hand grabbed the back of Cole's head as he kissed her neck and shoulder. Her hips came off the bed as for a brief moment relief from the blissful agony hovered just out of reach before disappearing into the depths of her body. \"No,\" Julie whined, closing her eyes in frustration.",
        "\"Oh hell yes, right there.\" At the sound of Eleanor's cry, Julie opened her eyes. Her roommate had sat up, forgoing Alexander's cock as she bore down with her hips on the young man's face. Her cries deteriorated into a steady repetition of \"oh God.\" Eleanor's body tensed up, her hands digging into Alexander's chest while her torso flushed red. With a final scream of \"OH GOD,\" Julie watched her roommate have what could only be described as an extremely immodest orgasm. Eleanor collapsed on top of Alexander like a puppet with freshly cut strings, all muscle control lost for a brief moment as she came.\n\nJulie's brain compartmentalized into three separate trains of thought for a brief moment. First, was that the most intense orgasm Eleanor had ever experienced? Second, if so, how had Alexander given Eleanor a more intense orgasm than Julie had experienced with him during two separate sexual encounters? Third, would it be enough to push Julie into her own climax?\n\nThe first two questions were noted and mentally saved for a later date. The third question was answered for partial credit as Julie's arousal shattered the plateau it had been hovering at, but it wasn't enough to crest the mountain. If anything, despite her and Cole's best efforts the frustration Julie was feeling only intensified.\n\nX X X X X\n\n\"Hey, Julie.\" Eleanor turned her body, putting her arms across Alexander's stomach and her legs against the wall. \"Confirm or deny, are you a voyeur or not?\"\n\nThrough the haze of pleasure that tinged her vision, Julie managed to construct an answer. \"I have concluded... that I most definitely am. Thank you very much for your contributions. Cole and I will take it from here.\"\n\n\"Happy to help.\" Eleanor gave her roommate a tired wave as Julie turned and passionately kissed Cole on the lips. She turned to Alexander, a look of quiet puzzlement on her face. \"I don't know what you did, but you... is it OK if I just give you a blow job?\"\n\n\"A blow job is fine,\" he told her. \"You can even use your hands if you want.\"\n\n\"Good.\" Eleanor grasped his cock with one hand, causing Alexander to groan. \"Because I don't know if I could handle sex right now. You...you fucking wore me out. With your tongue. What the HELL?\"\n\n\"Is that a good thing or a bad thing?\"\n\n\"Ask me the next time your face is between my legs,\" she told him as she lowered her head.\n\nX X X X X\n\nAs Eleanor waved and turned back to Alexander, Julie turned her head and looked Cole dead in the eyes. \"If you would be so kind, strip me bare and let biology take over.\" After taking his and her hands from her pants Cole climbed off the bed. Julie slid forward, sitting on the edge of the mattress as Cole assisted her in ripping her shorts and panties off. He pulled them down her legs and tossed them on the bed, joining her tank top and leaving her completely nude. Almost immediately his hand was once again between her legs. Julie groaned at the feeling of two fingers slipping into her wet pussy without underwear in the way. She spread her legs as her hands slipped under his shoulders, pulling the musician against her body. Cole's determined breathing was warm against her ear. His fingers easily slid in and out of her soaked womanhood. The sensation of her inner walls yielding to his fingers caused Julie's head to drop against his shoulder. \"Oh yes,\" she breathed, \"keep doing that.\"\n\n\"Doing what?\"\n\n\"Fucking me with your fingers.\"\n\n\"Was planning on it.\" Cole pushed his fingers deep inside Julie, burying them to the knuckles, before gradually pulling back. The change in sensation caused Julie to moan. Her walls clutched against him. The moan turned into a gasping cry as Cole waited until the last moment to curl his fingers, rubbing them against the textured flesh just inside her velvet tunnel. Her entire body tensed like a coiled spring, becoming slack only when Cole pressed against the spot once again as he resumed fingering her with deliberate slowness.\n\nEventually, Julie couldn't stand it anymore. She reached down to grab a hold of Cole's hard, thick erection. He grunted as she moved its tip to the entrance to her vagina. Without hesitation, Cole pushed forward once his cock was in place. Julie sighed with relief at the feeling of being penetrated, her fluttering pussy finally with something to clench against.\n\nHe was able to easily slide inside of Julie's body in one fluid stroke. Putting his hands on her hips, Cole began to eagerly fuck her. There was no resistance to his cock as it moved in and out of her wet tunnel. Each thrust sent an intense, white-hot tingle through her body. Julie wrapped her arms around Cole's shoulders, spreading her legs to allow him better access. She did her best to hold on as Cole's thrust quickly became more forceful. \"Yes,\" she urged him, teeth nibbling his earlobe. \"Yes, Cole. You feel so good inside of... oh yes... inside of me.\"\n\n\"Ditto,\" Cole responded between gritted teeth. \"Save you feel good around me.\" He pulled out and drove forward once again. Julie almost was shoved backward on the bed as Cole slammed into her with several hard, forceful thrusts, each one eliciting a sharp cry of pleasure from Julie. Her lips found his. Their tongues danced as he resumed his previous pace, sliding his cock in and out of her pussy with steady, determined effort.\n\nJulie ran a hand through her hair, pushing the sweat-soaked black strands away from her eyes, The pleasure inside of her was beginning to double and redouble. The heat of her arousal threatened to crest and turn into a raging firestorm inside her body. Julie tilted her hips forward. She crossed her ankles behind Cole's thighs and rested her chin on his shoulder. His strokes became shorter and more frequent, pushing Julie closer and closer to the climax she craved.\n\nAt one point she focused long enough to look across the room. Alexander's head rested on a pillow. His eyes were closed, with one hand balling up the fabric of Eleanor's quilt. Her roommate had taken all of Alexander's erection in her mouth. Her mouth moved up and down his shaft at a steady pace, punctuated by her hand twisting and rubbing his cock or gently cupping his balls. While Julie watched, Alexander raised his head and said something to Eleanor, whose response was to begin bobbing her head quicker. \"Oh God,\" Alexander gasped before he dropped back into the pillow. His breath reached a crescendo before he squeezed his eyes shut and his hips rose into the air. Eleanor's head went still, her mouth still wrapped around his cock as a handful of semi-clear droplets dripped from her lips.\n\nThe sight of Alexander cumming was what pushed Julie over the edge. She found herself biting Cole's shoulder. No noise of protest came from the young man as he continued to thrust at the same firm pace. Pure, undistilled bliss welled up inside of her, making Julie feel like she was going to burst. Her eyes were on the other bed as Eleanor pulled her mouth from Alexander's cock. She wiped her lips with the back of her hand and moved to kiss Alexander, who let her kiss him with no hesitation or disgust despite cumming in her mouth seconds earlier.\n\nHer climax slammed into her with the force of an out-of-control tractor-trailer. One second Julie was watching her friends kiss. The next it felt like her entire body clenched at once. Her muscles tightened and her pussy gripped Cole's driving cock as a firestorm of rapture ignited inside of her. Grasping his shoulders, Julie embraced the fierce orgasm raging through her. \"Yes Cole,\" she cried, \"yes!\" His thrusts slowed as Julie shook in his arms for several moments before going limp. \"Oh my,\" Julie shuddered. \"That was some kind of wonderful.\"\n\n\"Glad you liked.\" After a light, sweet, tender kiss, Cole began to thrust in and out of Julie again. Julie smiled before letting go and laying back on the bed. Cole put his hands back on her hips and pulled her forward slightly, allowing him to drive his cock in and out of her pussy without the risk of banging his thighs against the bed frame. Julie coasted down from her climax, no longer enthralled by the promise of the impending release, while Cole continued to fuck her.\n\nAfter a few minutes, the gentle waves of pleasure were threatening to come together once again into another climax. Sweat dripped from Cole's head and chest. \"Mmm, yes,\" Julie hummed. Her fingers began to twist and flick one of her still-erect nipples. \"Oh Cole,\" she told him, \"you're going to do it again...\"\n\n\"Again?\" Eleanor's voice called out from the other bed. \"This is a great night for all involved.\"\n\n\"Seconded,\" chimed Alexander.\n\nLooking past Cole's thrusting hips, Julie saw Alexander and Eleanor both looking at her. The sight of her friends watching her have sex was the catalyst for Julie's orgasm. A pleasurable heat flared up inside of her. She kept eye contact with her friends, who in turn maintained theirs, and after several more thrusts Julie found herself cumming again, a smaller, more focused orgasm that caused her to close her eyes and her hips to move up and down from the sensation.\n\nNot soon after, Cole began to thrust with intent. Julie looked him directly in the eyes, licking her lips. Cole returned her gaze with a shuddering breath and gritted teeth as he pushed his cock inside Julie's pussy, giving a muted cry as he finally came. \"Oh yeah,\" he groaned. \"Ooooh, that's good...\"\n\nCole slouched after a few moments. He smiled at Julie before carefully pulling his cock from her pussy. She could feel some of his cum dripping from between her legs and made a mental note to scrub the carpet as a sense of afterglow came over her. \"Cole,\" she said, \"would you mind handing me a towel?\"\n\n\"And could you grab the Scope from my closet?\" asked Eleanor from her bed.\n\n\"Anyone want water while I'm servanting?\"\n\nCole threw towels and bottles of water to his friends as well as handing a bottle of spearmint Scope to Eleanor. After cleaning up, all four towels went into Eleanor's laundry basket.\n\nJulie was in the process of opening her bottle of water when there was a furious knock on the door. A second later, the knock repeated itself, the door shaking its frame from the force of whoever was pounding on it.\n\n\"I got it,\" Alexander said, slowly getting up from the bed. \"I can get dressed the quickest. One moment,\" he called out. In response came another hard, forceful knock. \"Wow,\" he said as he pulled his jean shorts on, \"someone really wants to talk to you guys.\"\n\nThe knocking continued as Alexander pulled his t-shirt over his head. He smoothed it out before opening the door. \"Hey,\" he said with a bright smile, \"what's...\"\n\nA tall, regal-looking young woman with raven-black hair jammed a finger into Alexander's chest. \"Must you turn this dormitory into a decedent whorehouse!\""
    ],
    "authorname": "PoisonPen33",
    "tags": [
        69,
        "friends",
        "idaho",
        "movie",
        "movies",
        "oral",
        "storm",
        "thunderstorm",
        "voyeur",
        "voyeurism"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/midnight-movie-club-ch-03"
}