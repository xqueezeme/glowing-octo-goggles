{
    "title": "Pool Boy Ch. 20",
    "pages": [
        "Alexis' dad has been arrested for numerous offenses and the Police and FBI got a search warrant for the house. Police Officers Erin and Samantha meet Alexis during the search and are infatuated with her. Alexis is working with me cleaning pools so we are in the van together frequently now. It's only a question of when Erin or Sam or both pull us over and Alexis and the two cops get it on.\n\nAlexis and I had worked the same routine for several days now with a visit to Olivia's every other day. We hadn't seen hide-nor-hair of Sophia and Alexis asked why. Olivia told us that Sophia was having a lot of problems with her husband, Paul. He was beating her up and she didn't want anyone to see the bruises.\n\nSo, we were surprised today when we carried our equipment and buckets into Olivia's pool area Sophia was sitting there with a drink in her hand talking with Olivia. When she saw me her face lit up. She knew Alexis a little but not the way Alexis wanted to know her. I set the equipment down and went straight to her and pulled her up out of her chair and hugged and kissed her. Alexis stood back and watched as she stripped down to her bikini to start work. \n\nOlivia went straight to Alexis and they hugged and kissed. Alexis loved the way Olivia pushed her huge tits into her when they embraced. Both Sophia and Olivia were dressed in tank tops and shorts. I think there was more of Olivia pushing out of her tank top than was held in. \n\nOnly a hint of an old bruise showed on Sophia's right cheek and chin. She had covered it up pretty well with makeup. I asked if she was okay and she nodded as moisture appeared in her eyes. I lifted her up in my arms and kissed her again. She said, \"I've had a few days reprieve at least. He hasn't been home in nearly a week. Today was the first day I was able to cover up the bruises enough to go out.\"\n\nI set Sophia down and she sat back in her chair. I sat beside her and gently wiped an escaped tear that was slowly moving down her cheek. She smiled and looked away toward Olivia and Alexis. She said, \"Hello Alexis. It's wonderful to see you again. It's been a while.\" Alexis left Olivia's side and came over to bend down and hug and kiss Sophia.\n\nAlexis said, \"I guess we have both had a rough time lately. You must know about my dad by now.\" Sophia frowned and nodded as she looked away.\n\nOlivia came over to the group and said, \"Sophia and I were just discussing your dad. Ron left for what he told me was a business trip about the same time as Paul disappeared without a word. It's curious that the credit card bill, which arrived in the mail this morning, shows a charge for an Airline ticket. I called the card company to complain about what I thought was an incorrect charge. They told me the charge was for a one-way ticket to Brazil. It was charged the day before I last saw him.\n\nThe first thing that came to mind about Brazil was that it's a non-extradition country. \"Holy Shit Olivia. Could Ron have been associated with Jim's businesses?\" I looked at Sophia and asked, \"Did Paul have some connection with Jim's business?\" Their mouths came open and a terrified look washed over both of them. It was obvious that both Ron and Paul were in league to some degree with Jim's unsavory businesses. \"I looked at Alexis and said, \"Jesus Christ. They've run before Jim gives them up.\" I asked Sophia to use her cell phone to log into her credit card company and sure enough, Paul had charged a one-way airfare to their account. Her card company confirmed that the ticket was to Brazil and it was booked the same day as Ron's. I told them both that they should contact their attorneys right away and get whatever needed to be done to protect themselves personally and financially.\n\nAlexis was disappointed that her plans for her and Sophia were scuttled when both Olivia and Sophia kissed me and then Alexis and hurried back to Olivia's house. I checked the water in Olivia's pool with the test kit and added some chemicals. I doubted anyone had used the pool since we cleaned it last. We gathered up the equipment and chemicals and returned to the van. \n\nWe drove over to Alexis' house to see if Emma was there putting her destroyed home in some kind of order. Her car was in the driveway. When we entered through the Foyer door Emma was in the kitchen. She said, \"Alexis, Honey. I forgot to tell you. You received a package a few days ago. I totally forgot.\" Alexis opened the package and it was the 'Black-mail' thumb-drive. I followed her up to her bedroom where she plugged the drive into her laptop. Sure enough, it was the same video Jim had showed us on his yacht. It had been edited to just show only me and Rachel having sex. I figured Dee must have got an edited version showing just Jarrod and Izzy.\n\nAlexis watched the whole thing and then started it over again. As it played the second time, Alexis said, \"Wow. She is tall isn't she? With those shoes on, she's taller than you. She's very pretty and I love her figure. I'm bummed that it doesn't show Jarrod and Izzy.\" She picked up her cell phone and dialed Dee at work. Dee wanted to know how things were going cleaning up the house. She had been devastated by the revelations about her dad. Dee had received her drive in the mail a few days ago and she and Jarrod had a big laugh about it before they had great sex while watching it on a loop. They agreed that we would make copies and send them to each other. Dee was very interested in my video after Jarrod described Rachel.\n\nAlexis clicked a few keys and the mouse and presto, the video of Rachel and I was sent to Dee's email address. She logged off her computer and then turned to me. My cock had become hard while we watched the video. Alexis had that look on her face as she came over to me and unzipped my shorts and released my cock. She went to her knees and pushed my cock past her lips. She held it there as she untied her bikini top and bottom. She pushed me back until I fell on her bed. She crawled on her knees to follow me to my back. She went from handjob to blowjob to throatjob and mixed them all up and I was groaning hard.\n\nShe motioned for me to move into the middle of her bed and then she crawled up over me in a reverse cowgirl position and used her hand to guide my cock to her pussy. She pushed herself on and moaned loudly as she sank her pussy down to the bottom. She started a fucking motion for a couple minutes and then pulled off and guided my cock to her anus and dropped down just hard enough to push my vaginal fluid lathered cock into her bowels before she screamed and stopped. I groaned hard from the pressure. Alexis' mouth dropped open as she wagged her head from side to side and descended slowly down the length of my cock. She hit bottom and immediately started into a steady fucking motion. When she was relaxed enough, she ramped up her pace.\n\nHer bowels were dragging my orgasm out of me and I began humping my hips up to match her pace. Alexis screamed when my cock surged harder. She reached back and separated her ass cheeks as though that was going to make more room for my cock. When cum launched up my shaft into her ass, she screamed out loudly and her own orgasm rocked her hard.\n\nWhen Emma burst in, we were both a mass of quivering muscles. My cock was trying to split her wide open and she was trying to crush it with our uncontrollable muscle spasms. After my last shot, Alexis collapsed forward onto my legs taking my rock hard cock with her. It hurt me because my cock was so hard it wouldn't bend that way. I had to follow her forward as I sat straight up.\n\nEmma sat down on the side of the bed and watched the finale of our fuck session. She had one hand up under her dress frigging herself. My attention left Alexis' and moved over to Emma working her pussy. I adjusted my position so I could get my cock out of Alexis and when it popped out of her, she rolled off my legs and lay face up on the bed with her chest heaving as she gasped for air. I glanced up from Alexis' gaping anus to Emma's face. She was staring at my boner which hadn't diminished one bit. She maneuvered around on the bed to take a doggy position beside Alexis. She turned her head to look over her shoulder and said, \"Fuck my ass.\" I pulled my legs out from under her and moved to kneel behind her. I leaned down and scooped up a glob of cum oozing out of Alexi's ass, which was still gaping wide open. I pushed the cum as lubrication into Emma's anus and she yelped. I pushed my finger into the second knuckle and twisted it back and forth. I gently pulled my finger out and guided my cock to her rosebud.\n\nAs I pushed forward, Emma pushed back and the glans moved suddenly past her sphincter. She yelled out, \"Oh fuck. Your fatty hurts so good.\" I stopped and waited for Emma to relax. Alexis had fully recovered and she had rolled onto her side facing us. She was smiling at me. After several moments, Emma pushed back again and I pushed another few inches in and stopped as I felt her clamp down hard on my cock. Emma relaxed again and I pushed the rest of my cock in and held that position.\n\nEmma's torso had collapsed so her forehead was on her arms and her tits hung onto the bed. She was groaning continuously. Alexis, that little minx, decided she was going to tease her mother as she ran a hand from Emma's tits up to her crotch and began fingering her mother's clitoris. Emma's torso surged back up from Alexis' touch and drove her ass hard against my cock. She screamed and Alexis giggled. Emma turned her head toward Alexis and said, \"You are a bad girl, teasing your mother like that.\" Alexis blew her an air-kiss and Emma smiled as she pulled forward extracting my cock to the glans. She groaned the whole way out and then she pushed all the way back on again. I took the hint and started to slowly and gently fuck her ass; first with short strokes and then lengthened them until I was fucking her with full length strokes. The pressure was unbelievable and I could feel cum boiling in my balls again. It was going to be only seconds before I was blowing my load in Emma's bowels. She felt the new surge of my cock and she ramped up the pace. \n\nI shot six long ropes of cum into Emma's ass and she screamed with the arrival of each one. I was a little disappointed that she hadn't had an orgasm. I always tried to give my girls at least one orgasm before I get off. I had tried to hold off but Emma was an expert at sex and she had her ways to extract my cum before I wanted to.\n\nEmma fell forward pulling her ass off my cock. She trapped Alexis' hand under her in the process. Emma and I were both breathing hard. I sat back on my ankles and watched Emma's wide open rosebud oozing pearly white cum onto Alexis' bed. Emma reached back over her ass-cheeks and scooped up what she could get and pushed her fingers in her mouth. She did it again and offered her fingers to Alexis who sucked them in and cleaned them all off with her tongue.\n\nMy cock bobbed up and down as it slowly deflated. We all headed for the shower in Alexis' room. Emma let Alexis wash my cock this time while I was pushing my soapy middle finger into Emma's anus. We dried each other off and dressed again.\n\nEmma left Alexis' room and I sat on her bed while she cleaned up her room from the Police search. Her clothes were on the floor in the closet and on top of the desk from the bureau. She finished picking it all up in about a half-hour and then we went down stairs. Emma was in Jim's office just standing in the doorway with her hands on her hips. It was such a mess she didn't know where to start. She grabbed the doorknob and left the room shutting the door behind her. The kitchen was put back together. Alexis offered to help Emma with the rest of the house but Emma shooed her and me out and told us to go have some fun. Alexis protested but Emma was adamant so we went out to the van. Alexis had pulled on her clothes that she had worn over her bikini.\n\nAs we approached the security gate of the community, the guard was standing outside talking to someone. As we drove by I could see that the \"someone\" was Officer Erin. Her cruiser was parked behind the guard shack and we hadn't seen it until we were past. She watched us approaching and her face lit up as we drove by. In the side-view mirror I could see Erin break off her conversation with the guard and hurry toward her cruiser. She did a u-turn and quickly closed the gap with us. She just followed for about five minutes until we got into the area were houses were sparse. I noticed that Alexis was looking out her side mirror. When the cruiser lights came on, I slowed and pulled off to the side of the road. Alexis turned her head to look at me and she had the biggest grin on her face. It was like the smile of a six year old when she sees the Christmas tree with all the presents for the first time.\n\nI smiled at Alexis and decided to tease her a little, \"What do you think? Should we tell her we just don't have time right now?\" Alexis had a horrified look on her face that caused me to laugh. She frowned when she realized I was just busting her. She was a bundle of energy as she gyrated around in her seat.\n\nErin turned off her flashing lights and walked around behind the van to the passenger window. Alexis saw her coming in the mirror and rolled down her window. Erin leaned against the passenger door and looked in at Alexis and then me. She grinned and said, \"Is this a bad time?\" Alexis vigorously shook her head and startled Erin when she pushed her lips onto Erin's. Erin recovered quickly and in seconds they were kissing each other passionately through the passenger side window. \n\nMy cock was pushing hard on my shorts as I watched these two sexy ladies. I got up from my seat and moved into the back of the van and pushed the sliding door back and stepped out. Erin broke the kiss and looked to see what I was doing. I motioned with my hands for her to join us in the van. She grinned and pushed her body up to mine and stretched up for a kiss. She squeezed my obvious boner through my shorts and stepped up into the van pulling me with her. I slammed the sliding door shut. \n\nAlexis was already in back rolling out the yoga mat and I pulled the curtain closed. We had complete privacy. I sat down on an overturned empty bucket to watch what was about to happen. They both were breathing very heavily. I realized that I was too. Alexis went after the buttons on Erin's uniform. Erin had already removed her gun and equipment belts and left them in the cruiser. She still had on her radio microphone pined to her left shoulder. \n\nAlexis apparently wasn't moving fast enough because Erin took over undressing herself. Alexis stepped back and watched. When Erin was down to her bra and thong, Alexis pushed herself back into the process. Alexis reached around behind Erin and unhooked her bra and let it drop down her arms to the floor. She kissed the swell of Erin's breasts and she moaned hard and wrapped her arms around Alexis' head and pulled her face in hard to her tits. Alexis' lips went to Erin's nipples and Erin moaned again. \n\nErin pushed Alexis back a step and pulled Alexis' tank top off and untied her bikini top. Without hesitation she launched her face to Alexis' tits and nipples which were like pencil erasures. Alexis moaned and held Erin in place. These two ladies were in-heat for each other. I unzipped my shorts and let my cock push out into my hand. I stroked it slowly from tip to balls. Neither Alexis nor Erin paid any attention. \n\nErin moved down to lie on her back on the mat and lifted her hips so Alexis could pull off the thong. Alexis' lips went immediately to Erin's pussy. Erin let out a loud groan as she lightly pressed her fingers to the back of Alexis' head. She didn't try to guide Alexis' head. Apparently Alexis was applying attention to exactly the right spot. Erin's head lolled to the side as she groaned again. Alexis was using all her skills on Erin from her clitoris to her anus.\n\nIt couldn't have been two minutes before an orgasm crashed over her. She let out a scream as her head flailed from side to side. Her hips fired up into Alexis' face forcing her curled tongue in deep. Her hips slammed to the mat and her chest lifted. She grabbed her tits as they were moving all around from her vigorous movements. Alexis stayed right there throughout Erin's massive climax. \n\nWhen Erin's body settled down again, Alexis sat back on her ankles and grinned down at Erin who was not content to ride her orgasm down to zero. She wanted at Alexis and she rolled off the mat and knelt to maneuver Alexis to take her place. She pulled Alexis' shorts and bikini bottom off. I don't think I had ever seen Alexis' pussy as wet as right then. Erin moved in between Alexis' upraised and splayed wide knees and burrowed her lips into her pussy. Alexis moaned hard and thrust her hips up. Alexis guided Erin's face to where she wanted it and Erin tongue-fucked and clit flicked her for several minutes when Alexis' body lost all control and she burst into her orgasm with a small squirt that was enough to soak Erin's face but it didn't spray everywhere like usual. Erin stayed right there and sucked in what she could collect and went back to tongue-fucking as she flicked her finger tip on Alexis' swollen clitoris. Alexis was groaning and so was Erin.\n\nErin reached up and grabbed Alexis' tits and rolled her fingertips around on her nipples. Alexis clamped her hands down on top of Erin's and mashed them. Alexis' pussy was pushing Erin's tongue out and then letting it back in. Alexis screamed hard as her climax crested and then gasped for air as she started down the back side. \n\nErin abandoned Alexis' pussy and crawled up over her and pushed her crotch down into Alexis' crotch. They both ground their hips into each other with their hips cocked so they were grinding their mons pubis on each other. They were in a passionate embrace for nearly two minutes before they came up for air. \n\nI adjusted my position so I could see their tits mashed together and increased the pace on my cock. There couldn't possibly be a more erotic scene than I had just witnessed and my cock was incredibly hard in my hand. The sounds of sex were spiraling down and all was quiet with the only sound being my hand jacking from my balls to the glans.\n\nSuddenly, the silence was broken by a squawk on her lapel radio lying on the floor. A voice came through. I couldn't make out what it said, but Erin apparently understood. She yelled out, \"Shit!\" and rolled Alexis off her as she quickly got to her knees and grabbed her uniform top. She keyed the microphone and said her name. Some more squawking and words and Erin was on the move. She jumped up and pulled her pants and shirt on. She didn't even bother with her thong. In less than a minute she was fully dressed and pulling her shoes on. \n\nErin turned to Alexis and said, \"Sorry, I have to go. I hope we can do this again soon.\" Alexis grinned and nodded her head like a bobble-head doll. Erin looked over at me with my hard cock in my hand and said, \"Jesus, I'm sorry I don't have time to get some of that,\" as she pointed down at me cock. She slammed the side door back and stepped out and was gone. Seconds later her cruiser spun tires onto the pavement and squealed away. The roar of the high power engine was deafening. In another second her siren came on \"whoop, whoop, whoop\" which then changed to normal siren sound which we could hear for nearly a minute.\n\nAlexis was still on her back on the yoga mat. She pulled a second rolled up mat to use as a pillow and she smiled when she noticed my rock hard cock in my hand. She lifted a hand and flexed her index finger for me to come down. I stood over her body with my feet on either side of her waist. She reached up to grab my cock but she couldn't reach it. I went down with my knees on either side of her chest. She watched as I put my cock down on her chest between her tits. She grinned and grabbed the outside of her tits and compressed them around my cock. She pushed her fingers in to hold my cock between them and I started rocking my hips forward and back driving my cock up and down her cleavage. The glans disappeared between her tits and then pushed in to her cleavage. Alexis adjusted her head on the mat and let the glans push into her mouth as I pushed forward and then pull out and down between her tits again. Occasionally my cock missed her mouth and slid past her mouth and up her cheek. ",
        "I ramped up the pace and Alexis held my cock between her tits with one arm and hand and guided the head into her mouth with the other. Alexis has very nice tits but I could envision this scenario with Olivia's massive tits or even Emma's huge tits. I continued to drive my cock up into her mouth for several minutes before my balls pulled up tight and cum burst from my cock into Alexis' mouth. As I pulled back, my cock came out of her mouth and I spewed several shots of cum onto her neck and then down between her tits. All the remaining shots either hit Alexis in the chin or up onto her face or trapped between her tits. She was trying to catch the flying cum in her mouth but wasn't very successful.\n\nAfter I finished my last salvo, I sat back on Alexis' stomach being careful not to put my weight on her. She released my cock from her cleavage and scooped up gobs of cum and pushed her fingers into her mouth. There was a lot of it and she repeated her finger-cleaning several times. I bent forward and kissed Alexis tenderly on the lips. She pushed her cum tasting tongue into my mouth and giggled. \n\nI lifted one leg over Alexis and stood up and pulled her up beside me. I grabbed my jerk-off towel from under my seat and wiped Alexis' face, tits and pussy. I pushed my cock back in my pants and zipped up. Alexis put on her bikini and then her tank top and shorts. We took our seats and continued on our way.\n\nWe stopped at a restaurant and had a pizza for dinner. We talked about Dee's and Jarrod's wedding that was coming up soon. Planning got put on hold with her dad's legal problems. We had officially heard very little but he was arraigned with no opportunity for bail. My contact with Heather was providing some information but not much. I still hadn't told Alexis or Emma everything I knew. \n\nAfter our meal, I took Alexis back to their Hotel. Emma had made a lot of progress in the house and they would likely move back home tomorrow. Alexis asked me to stay the night with them but I didn't want to be too obvious with my parents. It was okay if they had reason to think I was sleeping with Alexis. They would be suspicious of that anyway, but giving them reason to think I was sleeping with her mother too was way beyond their capacity to cope.\n\nWhen I got home I told my mom that I had eaten out already and went to my room. Mom had done the laundry and my clean clothes were on my bed. I opened the dresser drawers to put them away and the ring box I had bought in Las Vegas was in a different spot than I had left it. Mom didn't usually get into my dresser. She left that to me to put my own clothes away. I took the box out and opened it. Even in the low light conditions of my bedroom with the one desk lamp on, the sparkle and refraction into all the colors of the rainbow was intoxicating. \n\nI had spent a fair amount of time since Alexis and I came back from our trip thinking about when was the right time to pop the question. My mind ran through all the pros and cons of sooner or later. Dee's and Jarrod's pending marriage was an issue. I didn't want to throw shade on their day. How long should the engagement be? I still didn't know what Alexis was thinking about college when or where. I know she loves me and she knows I love her. We tell each other that all the time. I needed to get some answers to some of these questions. I decided that I would find some way to sit down with Emma without Alexis present but that was nearly impossible lately. Since day one, I had always liked talking with Emma. She was always practical and caring and thoughtful. \n\nI dialed Emma's cell phone to see if she was still working at the house. If so, I could go there now. Alexis was at the Hotel. She answered on the second ring and said, \"What's up. Is Alexis with you?\" I told her that Alexis was at the Hotel and if she was still at the house I wanted to come over and talk with her. She said, \"Sure. I plan to be here another hour or two.\"\n\nI told my mom I was going out for a while and not to wait up. I was at Emma's house in twenty minutes. I knocked on the rear Foyer door and Emma came out of the kitchen to open it. I wasn't sure how much I would get into my plans with Emma but I had stuffed the ring box in my pocket just in case the conversation went there. I wanted it to, but then I didn't. I was a mess with indecision. Emma had never indicated that she ever had the 'indecision gene'.\n\nEmma led me into the living room and we sat down on opposite ends of the sofa. From what I saw the house was pretty much back to normal. Emma asked if I wanted a drink and I declined. I wanted to get into it. I sat there inspecting my hands for several moments until Emma asked what I wanted to talk about.\n\nI said, \"I need to talk to you about Alexis.\"\n\nShe smiled and said, \"Ah yes. One of my favorite subjects.\" I was looking at my hands again and Emma slid over closer and took my hands in hers and bent down to get my attention. I looked up from my hands and she said, \"Hunter. You know we can talk about anything. You are like a son to me.\" She chuckled a little and then continued, \"Well. It's a lot more than that. You're troubled about something and I want to help any way I can.\"\n\nI smiled at her and maintained eye contact as I started. \"You know I love Alexis with all my heart, right?\" Emma nodded. \"And I know she loves me just as much.\" Emma smiled and nodded again. \"We have only been together this summer and I don't want it to ever end, but I have to go back to college in a couple weeks and Alexis has never said what her plans are for college or no college or what. I don't know. Do you?\"\n\nEmma grinned and said, \"When Jim was here, he bullied her into applying to all the ivy-league colleges back east but she didn't want to go there even before you came on the scene. She got acceptance letters from several but to my knowledge she has never responded to any of them. I do know that she applied recently to the college you go to. I don't know if she has been accepted or not.\" I was surprised at this development. She had never said a thing about it.\n\nEmma squeezed my hands and looked in my eyes and said, \"Alexis wants to be with you.\" She squeezed my hands again and smiled at me. I grinned back. My heart was soaring and tears burst into my eyes. I couldn't have heard six words that would have as much emotional impact as those. She came closer and hugged me and said, \"Does that surprise you?\" I shook my head and wiped an escaped tear from my cheek. \"Hunter, in your heart, you know all this. What are you so troubled about?\"\n\nI reached in my pocket and felt the velvety box and still contemplated whether to share my dreams with Emma. I made the leap of faith and pulled the box out and held in my open hand for Emma to see. She looked down at the box for several moments and then back up at my face. She was grinning so hard that it brought a smile to my face. She started to reach for the box and then snapped her hand back like it tried to bite her. She looked back at me and said,\"I'm sure I know what this is. May I see it?\" Rather than let her take the box, I turned it to face her and opened the lid.\n\nEmma's eyes went wide and her hands went to her mouth as she gasped. She pulled her gaze away from the ring to look up at me. She said, \"Oh my God. Hunter. That is the most gorgeous ring I have ever seen. Oh my God.\" I smiled. I was pleased that she thought it was as beautiful as I had. Her eyes dropped back to the box and she said, \"Alexis will love, love, love it. When are you going to ask her?\" \n\nThat, of course, was the sixty-four thousand dollar question. I said, \"That's where I need your advice. Do you think we are too young to contemplate such a serious step? Dee's wedding is coming up soon and I didn't want to diminish her day. I was thinking about after the wedding. I thought if we were married before school started we could get a place together on campus for married students. If it's later we can get a place off campus. Oh hell. There are a million things rattling around in my brain.\"\n\nEmma smiled and said, \"If I didn't know either of you, I'd say you were too young but I know how much you love each other and you are so compatible it's uncanny. As for Dee's wedding, don't worry about that. Dee would be thrilled if you two were engaged at her wedding. In fact, I would predict that she would lobby for a double wedding. Hunter, there are a million questions that can't be answered before-hand because they get answered over time. These questions that are troubling you about timing are non-issues. If you want to ask her, then ask her. You know what her answer will be. Nothing else is that important right now.\" She leaned in and kissed me gently on the lips and pulled back. \"If she doesn't want to marry you I will.\" She giggled and I smiled at her. I kissed her this time and she said, \"You engineers think too much.\"\n\nMy mind was made up. I closed the ring box and put it back in my pocket. I said, \"If Jim were here I would have asked him for permission to marry his daughter. He would have said no and I would have considered that I met my obligation even if it is an outdated tradition. I'll ask you instead. May I have your permission to marry your daughter?\"\n\nShe laughed and said, \"You are such a dear boy. Of course you have my permission.\" She stood up and pulled me up and pulled herself into my arms and stretched up to kiss me. I bent low to kiss her on the lips. We broke our embrace and then she threw her arms around my back and hugged me as hard as she could.\n\nI helped Emma with some of the heavier items before I kissed her good-night and thanked her profusely for her council. She smiled and I left by the rear Foyer door and drove back home. It wasn't too late and my parents were sitting in the living room watching TV. When I came in I sat in a chair and said, \"Mom, Dad. Can we talk?\" Dad picked up the remote and muted the TV. I looked at Mom and said, \"I know you found my ring box in my dresser.\"\n\nMom had a sheepish look on her face as she looked at the floor. She said, \"I'm sorry Hunter. I wasn't snooping but a woman can't resist a velvet box. I swear I didn't look inside but I wanted to really bad.\" I smiled at her and pulled the box out of my pocket and handed it to her. Her eyes lit up with excitement. Dad was listening intently as he understood the significance of this moment. Mom took the box and lifted the spring loaded top. I watched for her reaction and I wasn't disappointed. She burst out a gasp that got Dad's attention. Mom stared at the ring for several moments and then passed the box to my Dad. He looked at the ring and whistled. He looked up at me for a moment and then back at the ring. Mom said, \"That can only be what I think it is.\" I just nodded and grinned. Dad closed the box and handed it back to Mom. She opened it and looked at it again. She said, \"You must have bought this in Las Vegas. There is no where around here that would have something as beautiful as this.\"\n\nI told her about my dream that seemed more than a dream and how I didn't even know what it meant until I saw the ring in the jewelry store. \"I'm going to ask her to marry me probably tomorrow. If we can get married soon we can live on campus. If not, we will have to find a place off campus. I wanted to tell you guys before. If you want to talk me out of it, you'd better have some good arguments.\n\nDad spoke up, \"The only argument I have is that you both are pretty young but I'm sure you have weighed that argument to hell and back. Alexis is a wonderful girl and you guys are great together. We would be honored to have Alexis as a daughter-in-law.\" I could tell that Mom was a little fearful of what Dad was going to say and she was relieved with his response. She looked from Dad to me and nodded her head with an ear-to-ear grin on her face. I got off my chair and went to Mom and knelt down and hugged and kissed her. Dad got up and offered his hand to help me up. I took it to shake his hand but he pushed past my hand and gave me a big man-hug and kissed me on the cheek. This was an unusual show of affection for him. I hugged him back. Mom was tearing up with happiness.\n\nI said good-night and told them I loved them very much. They both said the same to me. I put the ring box on my dresser and smiled to myself as I undressed, took a quick shower and climbed into bed. Now the only immediate detail left undecided was where and when to ask Alexis the big question.\n\nThere was a light knock on my door and after I responded, Mom opened the door. I sat up in bed and turned on the lamp on my nightstand. Mom sat on the edge of my bed and said, \"We would be lobbying for a big wedding if you had been our daughter instead of our son. We are fine with whatever Alexis wants for a wedding. Okay?\" \n\nI nodded and said, \"Thanks Mom. I don't have any preferences. Whatever Alexis wants, she'll get. Be thinking about who we should invite. Things could be moving fast from here.\" Mom smiled and stood up. She bent down and kissed me good-night and closed the door on the way out. I turned out the light and not so promptly, fell asleep.\n\nI ate breakfast with Mom and Dad the next morning. Mom had made a full meal of eggs, bacon, sausage and toast. Everyone was in a great mood. Conversation was lively. There was extra energy radiating from all of us. Dad went to work and I followed closely behind. Mom had a smile that seemed permanently plastered on her face. It made me smile too.\n\nI picked up Alexis at the Hotel parking lot. She had two cups of coffee that she struggled with to open the van door and climb in. She was dressed in her one piece, high cut bathing suit with a cotton gauze top and cargo shorts and sandals. I dressed as usual in my nylon shorts with the company logo tee shirt and sockless sneakers. She got situated and then leaned way over to offer a kiss and I leaned to her to press my lips on to her. I flicked my tongue on her lower lip and she moaned softly. \n\nAt the town pool we did our jobs. My mind wondered off several times as I gawked at Alexis' incredible body in that sexy bathing suit. It was cut very low in front and very high on her thighs. It wasn't a thong but it wasn't far from it. She knew what she was doing to me. I was getting hornier by the second. My cock was hard and lifting the leg of my shorts as it bobbed up and down. She was ignoring my condition to tease me. She wouldn't look at me as she stayed right on her jobs. We had extra things to do today and we finished up just as the Pool Administrator opened the gate to the public. It was particularly hot today and I had stripped off my tee shirt before I even started. \n\nWe were carrying all the cleaning equipment and chemicals back to the van when a group of girls came through the gate. I recognized most of them. They had been cheerleaders last year and one class behind me. They all waved at me and some of them wolf-whistled. The whistling was probably for Alexis though. They giggled to one another when they saw my boner pushing my shorts out even though I was trying to hide it. Alexis decided to tease me some more as she walked over to me and squeezed my cock as the last of the group went by. They all giggled and gave Alexis a thumbs-up. I pushed her hand away as I'm sure I turned a shade of red. I pulled on my tee shirt.\n\nAlexis grabbed my cock again and pulled herself in close and said, \"Jesus Babe. You are in a bad way. I didn't do that to you did I?\" She smiled at me. \"Meet me in the ladies room in three minutes.\" She turned and headed into the support building. I stored the gear and buckets of chemicals and slammed the sliding door. I looked around. A lot of people were coming from the parking lot. I adjusted the position of my cock, waited the prescribed time and headed inside. There were rest rooms in each of the locker rooms and separate men's and ladies rooms in the general public area. I walked down the hall to the general ladies room. I acted like I was checking out the bulletin board and when no one else was around; I pulled open the door and stepped inside. It was totally quiet. I heard a 'pssst' coming from the last of five fully enclosed toilets. The door was closed but not latched. A sign that read 'Out of Order' hung from the latch. I pulled open the door and Alexis was standing there totally naked. My cock pushed the leg of my shorts up over the glans as it bounced up and down. \n\nAlexis had both hands in her crotch which caused her arms to push her tits in close to create additional cleavage. Her nipples were as hard as nails and a half-inch long. She held open her labia with one hand as fingers of her other hand were working in and out of her naked pussy. Her eyes were closed and her mouth hung open. She was already breathing hard and looked like she was close to an orgasm.\n\nWhen she heard me step into her stall she opened her eyes and closed her mouth. She smiled when she saw my cock sticking out the left leg of my shorts. She came to me and pulled my shorts down my thighs where they fell to the floor. She ran her vaginal juice lubricated hand up and down my shaft several times. She looked from my cock to my face and said, \"Jesus Babe. You are so hard. Sit on the toilet. I'm so hot I'm going to cum soon. I pulled my tee shirt off and kicked my clothes over into the corner by the door. She kicked her bathing suit on top of my clothes.\n\nI sat down with my knees together and Alexis hurriedly straddled my hips and sat down on my thighs. She pulled my cock down and guided the tip to her labia as she slithered forward. My glans pushed into her pussy and true to her word she heaved an explosive breath and her hips began rocking forward and back driving her pussy on and off my cock. She groaned hard and muttered, \"OHHH OHHH. FUCK BABY. I'MM CCCUMMINNGG ALREADY.\" Her pussy was clenching hard. She buried her face in my shoulder and moaned as she furiously fucked my cock. Then she got spastic and couldn't maintain a pace any longer so I grabbed her ass cheeks and pulled her on and off. She let out a deep pitched groan that finished as a high pitched scream. She pushed her mouth onto my collar bone to muffle it. \n\nI knew this was going to be a multiple orgasm session because I hadn't even started yet. After a couple minutes, Alexis' breathing slowed to nearly normal and I was just about to take over the fucking motion when the ladies room door flew open and crashed against the wall. At least two women came in and based on the tittering and giggling going on between them, I figured they were members of the group that I had recognized coming through the gate. \n\nOne of them said, \"Go check to see if we are alone.\" I reached over and locked the stall door. One by one, the stall doors squeaked open as she checked each one. When she got to ours, she kicked it and it didn't open. The sign on the door seemed to be enough for her. She yelled back to the other one, \"its okay.\"\n\nWe were totally silent waiting to see what was going to happen next. The ladies room door opened again and we could hear the first one say, \"its okay. Hurry up.\" A third person came in and the door shut. A male voice said, \"Lock the door and get out of those bathing suits. Alexis shoved a hand in her mouth to stifle a giggle but her body jiggled in my lap. I motioned for her to be quiet. We could hear clothing being shed and then the male voice said, \"Now get on this.\"\n\nAlexis gave another silent giggle.\n\nThe telltale sounds of a blowjob filled the bathroom. This went on for a couple minutes and then we heard what I would describe as his penis slapping on a face. One of the girls said, \"Come on Loraine. Let me have some.\" The sounds of a blowjob and handjob combination resumed. He was groaning which accompanied the chorus of \"MMMMMM MMMM MMMMM.\" I was getting horny and I slowly started rocking my hips to drive my granite hard shaft up into Alexis' pussy. Her head tilted forward to my shoulder again and her breathing started to ramp up again. I wrapped my arms around her back and held her in place as I slowly pivoted my hips.",
        "The girl giving the current blowjob pulled off with a 'smack' and said, \"Jerry. You'd better not cum in my mouth.\" Alexis' body shuddered with a silent giggle again. I let out a silent chuckle of my own. Loraine spoke up and said it was her turn. \n\nAlexis whispered in my ear, \"You'd better stop doing that or everyone in this building is going to know that those three are not the only ones in here.\" Alexis was breathing hard enough to be heard from the sink area where the trio was if they weren't so enthralled with what they were doing. I didn't stop or even slow down.\n\nLoraine spoke up again, \"Come on Beth, you jerked off Chuck yesterday. You're a cock hog.\"\n\nBeth pulled her mouth off with a \"Pop\" and said, \"Jesus, speaking of hog. Did you see the size of that hog in Hunter's shorts when we came in?\"\n\nLoraine said, \"Fer sher. No wonder, his girlfriend is some kind of smoking hot. I wish I looked half as good in that bathing suit.\" Alexis was trying hard to keep quiet with that turn of conversation as her body wracked from her attempts to not burst out laughing. I admit. I was getting close to bursting out laughing too.\n\nThe guy, Jerry, spoke up and said, \"Who wants to fuck?\"\n\nNeither of the girls said a word for several moments and then Loraine said, \"Jerry. You say that every time. You know we are virgins and we ain't giving it up to you. If a double blowjob isn't good enough, I guess we are done.\" We could hear a zipper and then Jerry complaining that they were leaving him hanging. The door unlocked and we could hear Jerry complaining all the way out into the hallway outside the ladies room.\n\nI fully expected that Loraine and Beth would follow Jerry out as soon as they got back into their bathing suits. We listened for any telltale sounds and Alexis' eyes went wide and her hand went to her mouth when we heard the two girls moaning as they were obviously pleasuring each other. They moaned continuously until Loraine emitted a deep guttural groan, \"OH FUCK BETH. I'M CCUUMMINNNGGGG.\" The word 'cumming' climbed in pitch until it was a screech. About a minute later Beth announced her own orgasm. Their breathing was ragged for several minutes and then all was quiet.\n\nMy cock continued to grind into Alexis' pussy and she was getting close to her orgasm. She glared at me and whispered, \"Don't do it.\" I smiled at her and picked up the pace. Who was teasing who now? Soon there was skin on skin sounds added to the heaving breathing. Alexis was surging into her orgasm and she couldn't control herself any longer. She glared at me again as she went over the top. She groaned, \"YYYUUNNNGGGG. YUNNGGG. YUUNNGGG,\" with each throb of her pussy.\n\nThe jig was up. Loraine yelled out, \"Who is here?\" Sounds of Loraine and Beth scrambling up off the tile floor mixed with the moans, groans and screams coming from Alexis. She was not happy with me as I grinned at her effusive display of pleasure. She let it all go now as she furiously started grinding her pussy on my cock. I was trying to catch up with her but I was too far behind.\n\nLoraine or Beth was banging on the door to our stall. Alexis turned around and unlocked the stall door. It burst open and naked Loraine and naked Beth stood there open mouthed watching Alexis slamming her pussy on my cock. \n\nBeth said, \"Holy Shit. It's them.\" Alexis motioned for them to step inside. Alexis knew she was about to have another orgasm and she pushed her face down into my shoulder again and her whole body wracked for nearly a minute. Loraine and Beth couldn't take their eyes off her.\n\nAfter Alexis was nearly recovered she pulled herself off my cock and turned to the girls. She said, \"Now look what you've done. I'll never get him off now. You'll have to do it.\" I chuckled under my breath. My cock was as hard as ever and pointing straight up at Alexis, Loraine and Beth.\n\nLoraine looked at Beth and said, \"Holy shit. Look at the size of his cock.\" Beth just nodded but she didn't take her eyes off it. She moved around Alexis who moved over toward the door. Beth knelt down on her knees between my legs and struggled mightily to get her lips over the head. She was persistent though. It took three tries before the glans was fully in her mouth. Her hands came nowhere near encircling my cock but she used both hands on the shaft and her mouth on the glans. I groaned hard and Beth's eyes lit up from my response. I was curious to see if Loraine would want a go or not. I was getting close to my climax before Loraine moved down on her knees beside Beth who pulled her lips off and aimed my cock at Loraine as she flexed her jaw.\n\nLoraine only took two tries before she was able to get my glans in her mouth. She adjusted and pushed about half of my cock in before she gagged and pulled back. She did the same as Beth working a pretty good double handjob with a pretty descent blowjob. As she got up to speed I let out another groan and she smiled around my cock. She was pleased with herself. My orgasm was moments away and I remembered her admonition to Jerry about cumming in her mouth so I warned Loraine. She immediately pulled her mouth off my glans and flexed her jaw. Alexis moved to her knees between them and sank her mouth onto my cock and sank all the way to my balls. She was showing off now. She pulled back just as I started firing cum into her mouth. I was groaning loudly and they knew what that meant. They couldn't take their eyes off Alexis' face as she received and swallowed each shot.\n\nAlexis pulled back with a mouthful of cum when I was done. I was gasping for air. Alexis was struggling with her load and she swallowed half of it. With her mouth half full, she said with just enough clarity to understand her, \"Taste it. You'll like it.\" Loraine looked at Beth and then at Alexis as she puffed out her cheeks and pursed her lips. Loraine made her decision and leaned in and put her lips on Alexis' lips. Alexis pushed a small amount of cum into Loraine's mouth. She got more than she wanted and pulled back quickly. She swirled the cum around with her tongue and showed it to Beth. It was more of a challenge than anything and Beth was not going to be outdone. She moved her lips to Alexis' lips and Alexis repeated the transfer of cum. Beth didn't pull back immediately like Loraine did. She was apparently infatuated with Alexis and she pushed her tongue into Alexis' mouth. They kissed passionately for several seconds. \n\nWhen their embrace was broken, Loraine went back in for seconds and she also kissed Alexis for several seconds. Alexis washedd Loraine's tongue with whatever cum was left and continued the kiss until Loraine groaned and pulled back. Alexis bent forward and sucked on Loraine's right nipple and then did the same on Beth's left nipple. They both collapsed onto their asses on the tile floor. \n\nI said, \"You two can continue right here if you want but we have work to do.\" Alexis grabbed up her bathing suit and my clothes and we stepped by them as they were maneuvering into round two. I picked up their bathing suits from the counter by the sinks and dropped them where we had kicked out clothes. Alexis shut the stall door and we got dressed and left the bathroom. \n\nOutside in the hall was a young guy who curiously watched us step out of the ladies room. He said, \"Um. Um. Is there anyone else in there?\" pointing at the ladies room.\n\nI said, \"As a matter of fact there is.\" Alexis giggled and we went out the door and got in the van. We were behind schedule for the day. After I started the van, I promptly shut off the engine and said, \"I'll be right back. I have to see a man about a horse.\" I went back in the building. Jerry wasn't standing outside the ladies room anymore so he probably went back in for another round. I pulled my cell phone out of my shorts and called the restaurant that Alexis and I had our first date. I asked for a reservation for tonight. I explained the situation and got one for seven o'clock. I hung up and went back out and got in the van. Alexis was still trying to figure out what 'seeing a man about a horse' meant. I explained that that's what one says when you have to do something that you don't want the other to know about. She frowned. She didn't like being kept in the dark. I knew she would forgive me.\n\nWe finished the second pool and then stopped for a quick lunch. I asked Alexis if she would like to go out to dinner tonight trying to be as casual as I could. My heart was pounding like a jack-hammer. I was sure she could hear it as well as I could. \n\nShe looked at me and said, \"Is this casual dress or fancy?\" \n\nI said, \"Let's make it fancy. As a matter of fact, I'm remembering what you looked like in that long dress you wore the night of Janine's party. Can you wear that?\" She smiled and nodded. \"And all that underpinning you wore too?\"\n\nShe laughed and said, \"Underpinning? Seriously?\" I nodded. She laughed again and said, \"I think I can do that. Where are we going?\"\n\n\"I could say it's a surprise but it's just the restaurant that we went to on our first date.\"\n\nAlexis grinned and said, \"That was a nice place.\" As a vision of Alexis on that night in Vegas flashed through my brain, my dick grew in my shorts. I pushed it around to find a more comfortable position. She saw me do it and she said, \"Now what are you thinking about?\" I told her I was thinking about her in that dress. She said, \"Aren't you sweet.\"\n\nAlexis' cell phone rang. It was Emma. She called to tell us that she had checked out of the Hotel. She had packed Alexis' suitcase for her and she was now home. Alexis told her we had one more pool to do and then she would be home. The one pool was Olivia's and she was excited. She was hoping that Sophia would be there with Olivia. We finished lunch and headed over there. We carried our stuff around and pushed through the gate in the fence. No one was there. Alexis was obviously disappointed. I told her that they sometimes come out later. \n\nWe did our work. Alexis kept looking toward the house but there was no movement and no one appeared as we finished cleaning and treating the pool. Back in the van, I told her that they were pretty busy trying to take care of business. She understood but was disappointed none the less. I leaned way over and kissed her and said, \"I hope I can make it up to you tonight.\"\n\nShe smiled and said, \"I'm fine. There's nothing you need to make up for.\" I told her I loved her and she got out of her seat and came over and straddled me in my seat. She wrapped her arms around my neck and kissed me passionately for several moments. I moved my hands down her back to her slim waist and then out to her hips and pulled her to me. We broke our embrace and she said, \"I love you too.\" She rested her forehead on mine and rubbed my nose with hers. She flashed her eyelashes on mine and giggled. We called that a 'butterfly kiss'. It's kind of goofy but sometimes we are just goofy. She pulled her head back and looked into my eyes and smiled. She leaned forward for another kiss and then pulled herself out of my lap and moved back to her seat. She was quiet on the short drive to her house. \n\nEmma's car was in the driveway when we pulled in. I knew Alexis was feeling a little down so I didn't hesitate when she asked if I could come in. I could tell she wanted some love and I was always willing to give her some in any form she wanted. Sometimes she just wanted to be held or cuddled. Other times she wanted slow and sensuous sex and sometimes she wanted wild raucous hard sex. Many times we transitioned from one to the other.\n\nEmma was upstairs in her bedroom when we came in the house. We found her unpacking her suitcase. She told Alexis that her suitcase was in her room. Alexis turned around and headed for her room. I stayed in Emma's room and told her that I was going to ask the question tonight. She grinned and then said that it looked like Alexis was feeling blue. I told her she was hoping to see Sophia at Olivia's but no one was there. Emma told me they were both with their lawyers this afternoon. I told her I thought Alexis needed some love and she smiled. I headed down the hall to Alexis' room.\n\nShe was unpacking her suitcase. I crawled up on her bed and sat with my back against the headboard. When she was done, she crawled up and sat in my lap facing me. She kissed me and said, \"In some ways it's even worse for Olivia and Sophia than for Mom and me.\" I kissed her but didn't say anything. \"Dad has been arrested and we know he isn't coming home. Ron and Paul could show up at any moment even though it's unlikely they would take that chance.\" \n\nI said, \"Their lives are in complete chaos right now. They have to be pretty careful. We need to be there for them.\" She kissed me hard on the lips and her tongue told me that she was feeling passionate. I unbuttoned her gauze top and she let me take it off her arms. I untied her bikini top and she lifted it over her head. She stood up with her legs on either side of me and unzipped her shorts and untied her bikini bottom. She stepped out of them. I took the opportunity to push my shorts down and kicked them off. I pulled my tee shirt off and resumed my position. My cock was ready for action.\n\nAlexis sat down on my thighs and then slid forward so that her pussy lips trapped my cock against my stomach. She wrapped her arms around my neck and pulled her torso in close. I could feel her nipples press against my chest. I caressed her arms and shoulders and she shivered from my touch. Neither of us said anything as we sat there on the verge of sex with our foreheads and noses touching. I pushed out my lips to kiss her and she did the same to complete the embrace. I manually flexed my cock against her pussy and she giggled. That was a good sign.\n\nAlexis slid her hips back and pulled my cock down to her pussy and held it there as she slid herself forward again. Her head cocked back and she groaned as my cock slid into her. I could rock my hips but that just changed the angle of attack. Depth of penetration was unaffected. Alexis had total control of this fuck. \n\nShe just sat there for several seconds and I flexed my cock again. It seemed to remind her of what we were doing as she slowly started to pivot her hips forward and back. She moaned with each completed cycle. Her eyes were closed and her mouth hung open. Her teeth were closed as she seethed air through them. I put my hands on her hips and started to aid her movements but she reached down and took my hands and put them on her tits and then held my hands there with hers. She continued to slide my cock in and out of her pussy.\n\nAs my cock grew harder, the angle started to cause some pain. It didn't like pointing downward like that. I just grinned and bared it. I could feel the rumbling of my orgasm building way down deep inside. Her pussy was pulling my climax closer and the pain was pushing it back down. Alexis was oblivious to anything outside her self-contained world. She continued to moan and seethe as I watched her pussy slide on and off my cock.\n\nAlexis suddenly ramped up her pace and I looked from her pussy to her face. Her teeth opened and she began a constant deep guttural groan. Her eyes opened slightly but she was looking straight through me to something very far away. She pinched her nipples that were sticking through my fingers as I caressed her breasts. She increased her pace again. She was winning the tug-of-war with my orgasm as it became imminent. I let out a groan, \"UUNNNGGG\" that brought a smile to Alexis' face. She was in there after-all. \n\nAlexis' eyes opened and she said, \"Fuck me baby. I'm gonna cum.\" She took three more strokes and screamed out, \"OH FUCK. HERE I GO.\" So was I. The timing was absolutely perfect as we both surged over the crest of our orgasms at the same instant. All the air in her lungs exploded out of her in an instant. The air in my lungs caught in my throat as every muscle in my body seized tight for several seconds before explosively releasing as torrents of cum poured into Alexis' pussy. I sort of disappeared for a few moments like she always did. When I came back, Alexis was smiling at me as she kept right on fucking my cock. Her orgasm was as big as any but she seemed to be present for the whole thing.\n\nAlexis leaned forward and put her hands on my chest and lifted her hips a little. This improved the angle and reduced the pain at the base of my cock. She leaned her head toward mine and said, \"Should we go for another or save it for later.\" She had slowed as she waited for an answer. Her slick, velvety glove sliding smoothly over my cock felt amazing but I opted for later. She slowed her movement and then stopped. Her pussy was still clenching and releasing from her orgasm. She did one final manual clench with her pussy and the pulled back and off. My cock sprang out of her pussy and slapped down on my stomach. The relief was amazing and I groaned hard as my cock settled down on my left hip.\n\nShe slid further down my legs until her face was at my hips. She put one elbow on my thigh and lifted my softening cock with the other hand. She giggled as it steadily diminished in length and girth. She lowered her mouth to the glans and sucked it in. She pushed her mouth to my balls as she washed the shaft with her tongue. A \"MMMMMM\" hummed around my cock and then she pulled off with a smack. She grinned at me and said, \"How was that? Did that put you in a better mood?\"\n\nI laughed and said, \"You're bad,\" as I shook my head. \"You seem to be better too.\" She nodded and crawled back up my body trapping my dick between us and lowered the side of her head to my shoulder facing me. She kissed my neck and I held her tight with my arms around her shoulders. Her full body weight was on me and I loved every second of it. \n\nThe door opened and Emma stood in the doorway. She said, \"I didn't want to interrupt but if you guys are going out tonight, it's getting late. I glanced at my watch. It was 4:30. Two and a half hours to show time. Alexis mumbled something about what time it was into my neck and I told her. She instantly rolled off me and sprang to her feet as she hurried to her bathroom. In seconds her shower was on and I heard the glass door open and then shut.\n\nTwo hours was a life time for me to get ready but I did have to get home first to do it and then get back. I knew two hours for a woman to get ready was a catastrophe. Emma was still standing in the doorway looking at me lying in Alexis' bed. She had that look on her face and I motioned for her to come closer. She came in and sat on the edge of the bed and reached down and wrapped her fingers around my cock. She started stroking it slowly as she scanned me with her eyes from head to toe. My cock responded and she ramped up the pace of her handjob and I was rock hard again. She grinned and said, \"My ever-ready bunny.\" \n\nEmma shifted her position and stretched her lips over my glans and started an incredible blowjob and throatjob. She was breathing very hard and she had to pull off and get some air as she used both hands to guide my cock all around her face. She kissed my glans and then ran her tongue down the shaft to my balls. She sucked each one in and pulled her mouth off before kissing her way to the glans again. She round the head and pushed her lips around the circumference and steady pushed down to my balls again. I whispered, \"Do you need anything?\"\n\nEmma shook her head around my cock and pulled back off to say, \"I have everything I need exactly where I want it.\" She grinned and pushed back down the shaft again. She never broke eye contact with me until I groaned and tilted my head back against the headboard. She was the best at extracting cum from my balls and she was doing it then. She knew it was coming and she smiled around my cock as she slid up the length of my shaft and locked her lips around the ridge of my glans. She flicked her tongue in the 'eye' and then used her tongue to block the torrent of cum that I blasted into her mouth. She easily handled everything I had to give as she swallowed with each salvo. ",
        "I hadn't notice the shower turn off but with Emma's mouth still wrapped around my cock, Alexis walked into the bedroom with a towel around her hair. She said in a fake whiney voice, \"Mom. I was saving that for later.\"\n\nEmma giggled and after swallowing the last shot, said, \"You know he is never at a loss for cum.\" We all burst out laughing. Alexis came over to her mother and kissed her as she dipped her tongue inside for a little taste of cum. She pulled back and smacked her tongue around her lips and muttered, \"MMMMMM.\" Then she went to the source and pushed her lips around my softening cock and washed the shaft from top to bottom. She smacked her lips again and stood up. She said to me, \"Now get. I've got to be beautiful for my big date tonight.\" I rolled out of bed and pulled my clothes on and Emma and I left Alexis to her task.\n\nAt the bottom of the stairs in the Foyer, Emma came in close to me and wrapped her arms around my back and pulled herself up against me. I always loved the sensation of her huge tits pressing against me like that. She held me for several moments before stretching up for a kiss. I bent low to complete the embrace. I could taste cum on her lips. We broke the embrace and she said, \"I wish I could be there tonight. I'm so excited for you two.\" I kissed her again and we separated. \n\nI headed for the rear Foyer door and turned to say, \"I'm sure you will hear all the details soon enough.\" She grinned and threw me an air-kiss as I went out the door. \n\nAt home, I pulled the suit I had bought in Las Vegas out of my closet and removed it from the bag it came in. I checked it all over. Not a single wrinkle. I showered and shaved, etc and came down the hall from the bathroom to my bedroom with a towel around my waist. Mom came out of the kitchen in her apron and cut me off. She said, \"This is the big night?\" She had tears in her eyes as she looked up at me. I went to her and hugged her to me. She said, \"These are happy tears. You two are going to be wonderful together.\" I smiled and hugged her tight. Then she got serious as she looked at her watch and said, \"You'd better get going buster. You don't want to be late.\" She turned and headed back for the kitchen. She wiped away her tears as she went.\n\nI said, \"Mom?\" She stopped and turned around to face me. \"I love you very much.\" The dam burst as tears seemed to explode from her eyes. They streamed down her cheeks to collect on her chin before falling to her apron. I closed the distance between us and I held her tight as her tears flowed down my chest. I held her like that for a couple minutes until she pulled back. She lifted her apron and wiped her eyes and face.\n\nMom stretched up to kiss me. I bent to accept it. After the kiss, she smiled up at me and said, \"I love you very much too.\" She turned and went to the kitchen. I went to my room and shut the door. Fifteen minutes later, I came out in my new suit. For someone who was anything but a clothes-horse I thought I looked pretty good. I went to the kitchen for Mom to check me out. She looked me over from head to foot and wolf-whistled. I smiled. I had my mom's approval. I checked my watch and I had to go. I scooped her up in my arms and lifted her up to my face level and kissed her on the cheek.\n\nShe struggled in my arms and said as she giggled, \"Put me down you big lug. You'd better get going. The rest of your life starts right now.\" I laughed at her bumper-sticker but very prophetic statement. She smiled and I put her down. She reached up and put her hands on each side of my face and pursed her lips and gave me an air-kiss. \n\nI was on time but, as usual, Alexis was not. I sat in the living room with Emma. She kept commenting on my suit and how fantastic I looked. She said, \"I may have to make you a lot later,\" and laughed. She was kidding but she wasn't. Finally, Alexis came down the stairs. I was sitting back to the stairs. Emma's eyes went wide when Alexis came in the room. I turned to look and was floored. The word 'gorgeous' was totally inadequate. Her hair was set in long spiral curls. Her makeup was stunning. Her eyes popped from her beautiful face. She usually didn't put on eye makeup. She was braless and the V-top of her dress showed her cleavage. She wore the perfect necklace she had bought in Vegas. The dress flowed smoothly down her slender frame fitting to her tiny waist and out of the gradual curves of her hips and all the way to her lower calf in back and about a foot higher in front. Her stiletto heels brought her to six foot three or so. She carried a clutch purse that she had also bought on our trip. Emma stood up and gawked at Alexis. She said, \"Oh my God Alexis. You are stunning.\" The look on my face told her that I agreed. She lifted her long dress until she was displaying the garter belt and stocking. She wore no panties. Emma looked at me and said, \"I think additional plans have already been made.\" We all laughed as Alexis dropped the hem of her dress.\n\nAlexis looked me up and down and said, \"Hubba Hubba there big guy. I love your suit.\" I didn't hear a word she said. The blood pounding in my ears rendered me deaf. I wanted to say something about how beautiful she was but I couldn't get a single word out as my throat seemed to seize up tight.\n\nEmma broke the spell as she reminded us that we were late. Time started again and I moved in close to Alexis to kiss her. She pulled her lips back before I got there and said, \"You can't mess up my lip-gloss. I kissed her on the cheek. I offered her my arm and she giggled and wrapped her arm around mine and we headed for the door. \n\nEmma caught up to us and handed me the keys to her Mercedes. I looked at them and then smiled at Emma as I took them. I shoved the keys to my van back in my suit-coat pocket. I took the opportunity to verify for the hundredth time that the ring box was there.\n\nTwenty minutes later, I pulled the big Mercedes up to the valet parking attendant who quickly moved to the passenger door. I got out and stood in the open door to watch the attendant's face when Alexis stepped out of the car. She towered over him and his eyes nearly bugged out of his head. I came around the car and offered Alexis my arm again. She smiled at the attendant and said, \"Thank you.\" His tongue stumbled before he collected himself and mumbled that it was definitely his pleasure. I led her inside. I heard the attendant say to the guy slipping in behind the wheel, \"Holy Shit. What a fox.\" I smiled and followed her in.\n\nWe were promptly seated at a table right in the middle of the restaurant. Every man and most of the women gawked at Alexis as we were escorted in. I held out her chair and seated her and the Maitre D' did the same for me. We ordered a couple of cokes and then our meals. I planned to pop the question after dinner. We chatted as we waited. I was amused by the men in the restaurant all adjusting their seats so they could see Alexis without pissing off their spouses or dates. She knew what was going on. Every person she glanced at quickly looked away. She told me that she would rather have them just stare at her than that.\n\nOur meals were delicious. Alexis was her usual bubbly self as she laughed freely and giggled a lot. I knew I was a little anxious but I couldn't help it. She didn't comment on it so I guess I was okay. After the plates were cleared, the waiter appeared and asked if we would like dessert. As if on cue, the dessert tray showed up at our table. My throat seemed to be seizing up as the moment of truth approached. I declined but Alexis saw something on the tray that she couldn't resist. I couldn't wait for her to finish her dessert so it was game time.\n\nI excused myself and got out of my seat. I told Alexis I would be right back. I didn't really go anywhere. When I was out of sight, I pulled out my cell phone and clicked open the camera app and switched to video. I popped out the stand on the back and hid the camera in my palm as I walked back to the table. There was a table beside ours that was in the process of being setup again. I set the phone on that table aiming the lens toward our table. I went back to my seat. Alexis had not seen me come back in the room as she was watching another couple arguing because the guy was paying attention to Alexis and not his wife. I sat back down and Alexis turned her attention back to me.\n\nI nonchalantly reached into my coat pocket and pulled out the box below the table level. She turned to look at the arguing couple again. Blood was pounding in my ears again as I accidently on purpose pushed a spoon off the table. I tried to catch it, sort of, and the clatter brought Alexis' attention back to our table. I slid out of my seat and bent down on one knee reaching for the spoon. I moved further around the table and Alexis looked down to see what I was doing. I put the spoon on the table and I brought up the other hand with the box in it. I had practiced so that I presented the box with the hinges toward me so I could flip up the cover to present the contents to her. It went just as I had practiced.\n\nAt first she was confused about what I was doing down on my knee on the floor beside her. An old women at the next table five feet away was the first to recognize what I was doing and she screamed and then pushed her hand to her mouth. She was embarrassed by her outburst. Alexis turned to see what her scream was all about and she saw the women talking to her husband as she pointed at our table. He turned to look at what she was pointing at. Alexis saw me on my knee with the ring box open. She saw the ring and her eyes went wide. Suddenly she seemed to realize what was happening and she covered her mouth with both hands and let out a scream that brought everyone's attention to us. She looked down at the ring again and while it was relatively quiet in the restaurant, I said, \"Alexis. I love you more than I ever would have thought possible. Will you marry me?\"\n\nAlright; it was kind of a goofy proposal but Alexis and I are at our best when we are being goofy. I don't think I could have got anything else out anyway.\n\nShe jumped up out of her seat and screamed again. She spun around in a circle taking in all the grinning face around her. She didn't care about the ring. She launched herself into my arms as I knelt on one knee and I almost went over backward. The entire restaurant burst into applause. She kissed me on the lips and then on the cheeks and then on my eyes and then my forehead. She hugged me and kissed me on the neck. She screamed, \"Yes. Yes. Yes. A million times, yes.\" The tightness in my throat was lessening. I stood up and lifted her with me. All eyes were on us. I sat her down in her chair and got back down on one knee and took the ring from the box and slipped it on her ring finger, left hand. The recessed lighting in the ceiling, reflecting off our table, exploded into all the colors of the rainbow. It suddenly occurred to me that the full vision in my dream that I had in Las Vegas had just come true. Alexis' happy face as beams of color radiated everywhere around her. It was happening right then just as I had dreamt it. \n\nAlexis couldn't take her eyes off the ring as she held her hand out in front of her at arm's length with her other hand wrapped around her left wrist like the ring weighed fifty pounds. She screamed out, \"Oh my God Baby. It's the most beautiful thing I've ever seen.\" I grinned and moved back to my seat and just watched the show. Every woman in the place paraded over to see her ring and congratulate her and me. The men were either interested in what I must have paid for such a beautiful diamond ring or they just wanted to get a close up look at Alexis. I was finally breathing normally again.\n\nThe Maitre' D brought over a bottle of Champagne that one of the other tables had bought for us. He knew we were not old enough to drink but apparently he didn't care. He poured two glasses and handed one to Alexis and one to me. The old couple sitting at the next table spoke up and said that they were there on their sixtieth Wedding Anniversary. The old guy shook my hand and said, \"This scene brought us back to the pure love we felt for each other when I proposed to my bride more than sixty years ago.\" His wife was beaming with tears in her eyes. The old guy raised his glass and gave us a toast. We joined everyone else in the restaurant as we downed the glasses of Champagne. I shook his hand and thanked him. I had no clue what his toast was. My mind was going at warp speed. I looked over at my cell phone propped up on the next table and gave it a thumb- up sign. \n\nGradually, the restaurant's patrons went back to their tables and things settled down. Alexis had what may become a permanent grin on her face. She kept looking at her ring. I could see the beams of iridescent color flash across her face just like in the dream. Her dessert had been delivered but she had no interest in it now. \n\n'God, she's beautiful,' I thought as I watched her excitement radiate through the building. I caught the eye of our waiter and motioned like I was signing the bill. He smiled and came over and asked if there would be anything else. I told him I'd take the check. He said that the old couple sitting beside us had already paid our bill. I gave him a surprised look and he said, \"He said that you two gave them far more tonight than the value of your meal. They wished you a long and happy life together.\n\nI stood up and retrieved my phone and clicked off the video recorder. Mom and Emma would get their wishes to be there when I popped the question. I changed the camera app to photos and clicked off several photos of her. A woman from a couple tables to our left walked over and asked if she could take some photos of both of us on this special night. I handed her my phone and moved over and knelt beside Alexis and reenacted pushing the ring on her finger. She snapped several photos. I thanked her and she returned my phone. I looked at the shots in memory and they were great. I showed Alexis and she grinned broadly. She said, \"We'll be glad we have these later on.\" I didn't confess that I had video recorded the entire proposal and the pandemonium that followed.\n\nI helped Alexis from her chair and everyone burst into applause again as we walked out. It was kind of embarrassing but nice. Everything had gone even better than I had hoped. I gave the ticket to the valet parking attendant. It was the same guy that made the comment about Alexis being a fox. I couldn't argue with his assessment. He hustled off and in minutes Emma's Mercedes pulled up. He left it running as he ran around the car to hold the door for Alexis. I watched as she slid into her seat. I hand him a five dollar bill and then I slid behind the wheel and drove off. \n\nAlexis leaned across the center console and pushed her hand into my crotch. My cock responded instantly. She was looking up into my face as she stroked my cock through my pants. I glanced down and she had a constant grin on her face. I said, \"What are you thinking my love?\"\n\nShe laughed and said, \"I'm thinking that it'll take about fifteen minutes to get home, so I have about that long to suck this fatty in your pants until you give me my dessert. My second choice is still on the table back at the restaurant.\" I laughed and glanced over at her grinning face again. Her hands were pulling my zipper down and then pulled my rock hard cock out through the front of my boxer shorts. The cool air from the air-conditioner felt great but not as great as the heat of her mouth as she pushed her lips past my glans. I groaned hard. She adjusted for a moment and then pushed my glans into her throat.\n\nI groaned again and said, \"Oh fuck baby. That's fantastic.\" As she fucked my cock with her lips and throat her free hand pushed back into my pants and pulled out my balls. She rolled them around in her hand and then pulled off my cock and sucked one testicle into her mouth and then released it and did the same to the other one. My cock was throbbing from her attention. She popped the testicle from her lips and sank them slowly down my shaft. I groaned out, \"Oh my God. You're killing me babe.\" She increased her pace and I knew I wouldn't last much longer. When she was sure I was about to blow my wad, she pulled her lips back to lock around the glans and she started furiously jerking me off. I moaned out, \"YYYUUNNGGGG\" as my sperm rocketed up the shaft into her mouth. Alexis gagged a little but stayed where she was. She accepted three long shots before she thought it prudent to start swallowing. It was a good thing she did because I wasn't done until another four shots exploded with force from my shaft. When I was done she pulled off the glans and showed me the pearly white cum in her mouth illuminated by the dash lights. She pushed the glob out onto her lips and then blew a big cum-bubble and started laughing which caused problems as she struggled to swallow the rest with a loud 'gulp'. She burst out laughing. She said, \"Wow. I almost blew that.\" When she realized the pun, she burst out laughing again. So did I.\n\nWhen we got our breath again I said, \"I love you Alexis. No puns. No joking. I'm totally serious.\" I glanced over at her leaning on the console. She looked at me and then burst out laughing again. My statement was totally out of place and I burst out laughing too. I drove through the guard station and in minutes pulled up the driveway. The garage door opened and I drove in and the door closed behind us. Alexis went to push my cock back in my pants and realized it was still hard as granite.\n\nAlexis said, \"Well. It seems that I came prepared for this.\" She climbed over the console and threw her right leg across me and with cock in hand guided herself straight down my shaft. She was so wet. I grabbed her ass-cheeks and started lifting her up and down driving her pussy on and off my cock. Her forehead fell onto my shoulder as she moaned, \"OOHHH OHHHH. AAAHHHH. AHHH.\" Five minutes later, she groaned, \"FUCK. I'MMM CCCUMMMINNNGGG.\" Did she ever. Her pussy seemed to literally suck my orgasm out of me and I launched rope after rope of jizz deep in her pussy. I only shot four times but I felt like my head had just blown off my shoulders. Her pussy was still going and she was still groaning and screaming.\n\nShe should have started coming down by now but she was building higher and higher. She screamed right in my ear and lifted herself off my cock. She lifted her head and with an odd look on her face said, \"OH SHIT BABY. I'M GOING TO SQUIRT.\" She no sooner got the word 'squirt' out and I felt her let loose with a voluminous spray of squirt in my lap. She twitched and gyrated all around my lap for a minute or two before she settled down with her head on my chest. She looked up at me and said, \"Sorry Babe. I made a mess of your pants and Mom's car seat. I laughed and leaned forward and kissed her passionately.\n\nI said, \"You can squirt on me any time you want.\" I opened the driver's door and Alexis slid off my lap to the garage floor. Her dress was soaked too. I got out and looked around for a towel or something and I found one on the bench. I dried the leather seat and we headed into the house.\n\nIt was only 9:30 PM and Emma heard us drive in. When we didn't come in right away she knew what we were doing. She came out of the kitchen when we walked into the Foyer. She had a huge grin on her face as she anticipated the whole story. She saw the huge wet spot on my pants and Alexis' dress. She pushed a hand to her mouth and started laughing at the sight before her. I looked at Alexis and she looked at me and we joined Emma in laughter.\n\nEmma came over and bent down to look closer. She said, \"Your suit and the dress is dry-clean only. You're going to have to go home like that tonight.\" She started laughing all over again. \"Wow. Alexis. You're lucky you didn't drown him. That's a lot.\" Alexis was already heading up the stairs to strip out of her dress. She didn't even think to show her mother the ring.",
        "Emma knelt in front of me and loosened the belt and unbuttoned and unzipped my pants. She pulled them down to my thighs and they dropped to the floor. My boxers were soaked too and she pulled those down too. I couldn't help but wonder where Emma was going to go when my dick flopped into her face. She totally ignored it. She scooped up my wet clothes and took them to the bathroom. She pulled a hair-dryer out of a drawer and blow-dried my pants and boxers.\n\nAlexis came down the stairs in a bathrobe and when she saw me standing there in the Foyer bare legged with my dick hanging between the shirt tails, she burst out laughing. Emma came out of the bathroom to see what Alexis was laughing at and she joined in on the frivolity. I looked at both of them and raised my hands and said, \"Go ahead. Yuck it up ladies.\" That got them going again. \n\nI finished blow-drying my pants and boxers and pulled them on. When I came out dressed again. Emma was examining the engagement ring as Alexis told her the whole story. I pulled out my cell phone and called up Emma's phone number and sent the video to her. I told Emma what I had done and that I had to go. She came over to me and hugged me and kissed me and then hugged me again. I went over to Alexis and hugged and kissed her and told her I loved her. As I went out the door, I told Alexis that I would see her in the morning."
    ],
    "authorname": "BigZeke13",
    "tags": [
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pool-boy-ch-20"
}