{
    "title": "Pink Panther Ch. 03",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 15 - Pink and Crimson\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded reporterette at 7:00am, Monday, October 2d, from Courthouse Square. \"Fox Two News has learned that Eastern State assistant coach and former Bulldogs assistant coach Willy 'Speedy' Gonzales was found dead during the game between the visiting Spartans and the home team Wildcats! Let's go to Nick Eastwood for details. Nick!\"\n\n\"Thank you, Bettina!\" said Nick Eastwood, who was standing near University Avenue, with University Memorial Stadium visible behind him, as if the sports background was necessary for the story. \"Local police are not giving out many details, but they say that Coach Gonzales had gotten separated from the rest of the Eastern State team, and was later found dead in a storage room. Our own Commander Donald Troy was at the game, and was asked to assist the local Police with the investigation. He granted me this interview yesterday. Roll tape.\"\n\nTape rolled showing Nick talking with me in the TCPD HQ Press Room. \"Commander,\" Nick said, \"was foul play involved in the coach's death?\"\n\n\"There are indications of foul play,\" I said, in a massive understatement, \"but I'll have to ask you to contact the local authorities for more details.\"\n\nNick asked: \"Commander, you were taking your daughter to the game, and Police work followed you anyway. The Wildcats won the game, and there are rarely any issues with fans there, unlike State Tech. Can you give us any idea what might've happened?\"\n\n\"All I can tell you, Nick,\" I said, \"is that Coach Gonzales was found in a restricted area that is not accessible to fans, so this does not look like a random or spontaneous act by an angry or intoxicated fan. I really don't have any more, and I'm waiting to hear more details from the local Police just as you are.\"\n\nBack to Bettina live: \"Nick, why don't you give us the Sports report while you're with us.\"\n\n\"Sure, Bettina.\" Nick said. \"Of course our Bulldogs trounced Western State, 36-10, remaining undefeated. The Wildcats defeated Eastern State 24-14, and the Tigers blistered State Tech 49-3.\"\n\n\"And in SEC play,\" Nick continued, \"Georgia defeated Tennessee 41-0, their first shutout of the Volunteers in Knoxville since 1923, and the Volunteers' worst loss on Rocky Top since 1905. And Alabama annihilated Ole Miss, 45-6, in a game that was not as close as the score indicated, to easily remain No. 1 in the Nation! Back to you, Bettina!\"\n\n\"Thanks, Nick!\" said Bettina. \"In other news, Governor Val Jared unexpectedly released his Tax Reform plan over the weekend. The plan would reduce the number of tax brackets, give the Middle Class a large cut, and eliminate the State Estate Tax, known as the Death Tax. Democrats immediately attacked the plan as a handout for rich corporations and the wealthiest people, while the Republicans, of all people, viciously attacked the plan as hurting big businesses. Let's go to Dr. Romanov of the University's Political Policy Institute for analysis.\"\n\nDr. Romanov came on the screen, though it was obviously a taped segment. Bettina asked him \"Dr. Romanov, why are the Republicans not more enthusiastic about the Governor's Tax Reform plan?\"\n\n\"Bettina,\" said Romanov, \"the Republicans talk out of both sides of their mouths. They claim to be for the People, but when forced to actually take action, they take the side of the rich lobbyists that are funneling them money. The Establishment Republicans are 'crony Capitalists', beholden to their special interests that give them millions of dollars, not the People that don't give them nearly as much money. The insurance companies pay them millions to make sure health care is not returned to people and their doctors, and now the Special Interests are fighting to prevent meaningful tax reform, with the Establishment Republicans as their bought-and-paid-for Legislators.\"\n\n\"Dr. Romanov,\" said Bettina, \"it would seem that Governor Jared is actually keeping campaign promises, but Republicans as well as Democrats are fighting him every step of the way, and they're even talking about impeaching him. How will the People of the State that elected Governor Jared respond to this?\"\n\n\"Bettina,\" said Romanov, \"the People are mostly Sheep. They don't care who holds the whip, as long as they get their bread crumbs. They have no sense of what Freedom is, unlike our war veterans who are beginning to die off with time...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Ain't that the truth.\" I said as we drank coffee in MCD. \"And now Mr. Davis is becoming ill. I fear he does not have long left.\"\n\n\"What do you think about Coach Gonzales, Commander?\" asked Theo.\n\n\"Now that you mention it... Bettina sure mentioned the victim that time.\" I said.\n\n\"True, that.\" said Cindy. She and Teresa were the only ones so far that knew about the Pink Panther at the Wildcat Stadium crime scene, as I had told them the day before, October 1st. We'd been at little Pete Feeley's birthday party. Pete was now three years old, I thought to myself. How time flies...\n\nThen Detectives started coming in. I showed everyone the pictures I'd taken of Jamaal, having texted them to Theo and ADA Franklin Washington already. I also showed everyone a photo of a proud four year old girl in her own No. 10 Wildcats jersey. Theo said that Jamaal would be in Town during the Wildcats open date before the Bulldogs game, and he would bring Jamaal to HQ to meet Carole.\n\n\"That'll be nice.\" said Joanne. \"Did Carole have fun at the game?\"\n\n\"She loved it.\" I said. \"She absolutely loved it. But she was tired by the end of the day, and slept all the way home.\"\n\nI noticed that Teddy Parker was not in yet, and Joanne, Jerome and Theo kept furtively looking at his desk. A few minutes later, the Ole Miss alumnus Parker came in, looking pretty sad.\n\n\"My condolences, Teddy.\" I said. \"Coffee makes things better.\"\n\n\"Bourbon makes losses like that better, too, sir.\" said Teddy. \"I might've had some Saturday night. I might've had a lot.\" We all chuckled.\n\nHe sat at his desk and opened a drawer, and my Detectives were avidly watching. Parker groaned... the drawers of his desk were stuffed full with packets of 'Tide' detergent, the label clearly visible.\n\nBut that wasn't the worst of it... the packets had been slit, so that when Teddy picked one up, detergent poured out all over the place... into the drawer, on the floor and the desk. By now, everyone else was laughing very hard.\n\n\"You guys... are... a riot.\" Teddy said softly, not really amused. He did figure out that the top drawers could be pulled out and emptied into a trash can without much damage, but the bigger drawers with file folders... all stuffed with detergent packs... were much harder to do. Detergent was flying everywhere.\n\n\"Roll Tide!\" exclaimed Joanne happily, showing who the primary instigator of this little prank was.\n\n\"Around the bowl and down the hole, roll Tide roll!\" Teddy and I chanted together.\n\n\"I'm glad you guys didn't do the 'roll' part and toilet paper his desk like Toomer's Corner.\" I said, referring to the Auburn tradition.\n\n\"We're saving that for a better week.\" Cindy said, a certain wickedness in her voice. Teresa barked a laugh at that one. I cringed.\n\n* * * * * * * * * * * * * * * *\n\nIn the Main Conference Room were myself, Captain Ross, Chief Moynahan, SBI-SIS Lieutenants Chow and Orosco, FBI Special Agent in Charge Jack Muscone, FBI Special Agents Martin Nash and Julius Jefferson, and City Police Detective Robin Ventura, who was going to stop in and visit her dad, Campus Police Commissioner Dexter Robinson, later in the day. As of now, it was 9:30am, Monday, October 2d.\n\n\"Coach Gonzales was not shot, he was stabbed in the lower back with a large knife, which got his kidneys and cut his spinal cord.\" I said, my own back not feeling very well as I described the carnage. \"He bled out quickly. They also cut his throat, probably to keep him from crying out.\"\n\n\"Just like that guy at the Cub Club.\" Cindy said softly. I nodded at her. (Author's note: 'Eyes Only', Ch. 01.)\n\n\"Was there camera coverage of the area at all?\" asked Jack Muscone.\n\n\"Some.\" I said. \"But it was spotty and not good quality. We got one shot where what looked like a uniformed Police Officer was escorting Gonzales, but it was from their backsides, so we didn't get a facial image. They're going through the process of accounting for all of the police officers there at the time, which will take some doing at a big event like that. But the going theory is that it was a fake LEO that led Gonzales to his death.\"\n\n\"And you found a Pink Panther disc in the dead man's hands, is that not right?\" asked Chief Moynahan.\n\n\"Yes sir.\" I said. \"Just like the others... no fingerprints except the dead man's, and he was grasping it at the time. It looks like it was put in his hands as he was dying, from the smudges of his own fingerprints.\"\n\n\"I got a call from the Sheriff of that county.\" said the Chief. \"He said he was very impressed with your observations, as well as your professionalism in handling the crime scene and the evidence. So thank you for making us look good, Commander. In the meantime, any idea what links these four cases?... besides the Pink Panthers, of course...\"\n\n\"The only other link I see,\" I said, \"is that all four victims were connected to the University, the one across Town from us, here. Gonzales and Fulmer coached here, Dawson and Martinez were students here. Martinez was a student-athlete, so Dawson is the least connected of the group.\"\n\n\"In a strange way, he was connected.\" Cindy said. \"He was hostile to the Athletics Programs at the University, and wrote columns in the student newspaper to that effect.\"\n\n\"Yes.\" I said. \"Good point. And because of that, I am going to have to admit, as Sarek of Vulcan would say... it is possible that I was in error.\"\n\n\"What?!\" came a chorus. \"You?\" asked Jack Muscone.\n\n\"If I were perfect, I'd run for God.\" I said. \"Here's the deal, guys... I was thinking that Dawson was some kind of whistleblower, or the GOJ, or a reporter on a mission to expose BigAgraFoods or Senator Russell. But as I was driving home from the Wildcats game Saturday night, I asked myself 'What if Dawson was not a whistleblower, but was a loyal courier between BigAgraFoods and Russell, and he was killed for some other reason?'.\"\n\nAs everyone silently pondered, I continued: \"And then some things started making sense. I was always having trouble figuring out the timeline of the 9-1-1 call, how Dawson had time to make that call, but didn't try to barricade himself in the bathroom or something. And what I realized was that this was a staged scene, and it was not Dawson that made that 9-1-1 call!\"\n\n\"Ahhhhh.\" Cindy said, as she started to get it. The others were either in shock or beginning to be in deep thought.\n\n\"Think about it.\" I said. \"Have any of you ever heard Dawson's voice? Hell, I can't find anyone that knows him at all. So... what if the perps busted into his apartment, subdued him quickly, went through his desk, but had little time to do more as there were other people in the area... and then one of the perps calls 9-1-1, shoots Dawson during the phone call as his buddies make fighting noises? And then they all left immediately, instead of staying around to see if anyone head the gunshot. Will it hold?\"\n\n\"As good as anything else.\" said Julius Jefferson. \"But then there's the 'why?' of it.\"\n\n\"We'll get there in a second. I said. \"But to the points of the case, it also partially explains the data we found on Dawson. Nearly all of that stuff had already been released by The Guardians of Justice, and the rest of it didn't really lead us anywhere. So maybe they planted the data, and the cash as well.\"\n\n\"That's a lot of cash to let go of by planting it.\" said Martin Nash.\n\n\"True. But the Pink Panther at the crime scene starts to make some sense.\" I said. \"Someone was leaving those at the crime scene for us to find and ponder... for me to find and ponder.\"\n\n\"It's always all about you, Commander.\" Cindy said with just a bit of a gleam in her ice-blue eyes. A red crowbar was waved in her general direction, even as I chuckled at her comment. Chief Moynahan was laughing also.\n\n\"In this case, it well may be.\" I said. \"And I say that because I was in the area during the Wildcats game. If someone wanted to time it to kill Gonzales and to get my attention, they could not have had a better opportunity.\"\n\n\"Again, why?\" asked Jefferson. \"I mean, everything you're saying makes sense, Commander. But what are the motives?\"\n\n\"That's the $64,000 question.\" I said. \"And the answer will be in the links between these four victims, which I haven't found... yet.\"\n\n\"I would ask a different question.\" said Martin Nash. \"Who knew ahead of time that you were going to the game, and so was able to plan and execute the scheme to kill Coach Gonzales?\"\n\n\"Another great question.\" I said. \"But it wasn't exactly a secret that we were going.\"\n\n\"We didn't exactly advertise it, either, sir.\" said Cindy.\n\n\"So where do we go from heeeerrrreeee?\" asked the Chief.\n\n\"My FBI Team is going to become more involved, as this now crosses State lines.\" said Jack Muscone. \"But we're limiting ourselves to connections between the victims, and BigAgraFoods and Senator Russell's possible involvement. Obviously the murders themselves remain local jurisdiction crimes.\"\n\n\"Have you guys found anything at all?\" I asked.\n\n\"No.\" said Muscone. \"And the peculiar thing is how fast everything calmed down, especially in Washington. Russell is no longer making a big stink of things. Congress is back in session, so maybe that's one reason why. BigAgraFoods has this illegal immigrant thing with the Governor, so they're not trying to draw attention to themselves for anything else, and their lobbyists are hard at work in Washington and in Midtown, trying to fight the Governor on those civil rights charges.\"\n\n\"One thing you FBI guys can do to help us out,\" I said, \"is to 'follow the money'... check on the money found at the Dawson crime scene, see if it has any connections to anywhere else.\" Muscone nodded.\n\n\"Sir,\" said Norm Chow, \"what do you want us to do at the State level?\"\n\n\"Concentrate on the museum case.\" I said. \"Find out how the perps got into the museum in the first place, and of course continue to find out about Butch Fulmer. Talk to Detective Shane O'Brady, and let him think he's in charge and lecturing you, but don't take everything he says at face value. He tends to let his theories distort his facts.\" Chow gave what was for him a smile as he made notes.\n\n\"Also,\" I said, \"see if you can coordinate with Detective Ventura here, and also the University, and find out what you can about Selena Martinez that we don't already know. Robin, how much trouble are you going to get into for working with the SBI?\"\n\n\"If no one finds out, then it never happened.\" said Ventura. \"Let's keep this on the down low. I'll also talk to the Campus Police when I go visit my dad, see what they can get for me.\"\n\n\"Okay.\" I said. \"By the way, guys, it's still possible that Dawson was a whistleblower. I've just put out a new and possible theory for us to look into. So... let's go find out which one is right...\"\n\n* * * * * * * * * * * * * * * *\n\nMeanwhile, the MCD Detectives were poring over the whiteboards, looking at the Rusty Dawson case.\n\n\"If it weren't for these other Pink Panther cases,\" said Theo Washington, \"then we'd be considering this a whistleblower case, like the one down in Polk County.\"\n\n\"Even without those,\" said Jermaine Davis, \"so many things just don't seem to fit. That 9-1-1 call... he had time to make it, then the perps shot him, then they ransacked his room while they had to know that the Police were on the way.\"\n\n\"And no fingerprints on the jump drives.\" said Joanne Warner. \"But like you said before, Jerome, what a beautiful case right there in front of us... especially if we want to see a whistleblower case, or... or...\"\n\n\"Or?\" asked Teddy Parker.\n\n\"You know,\" Joanne said, \"doesn't this thing just look... staged? I mean, they're showing us what we want to see... and when one gets down to it, it starts not making sense.\"\n\n\"Yeah, yeah.\" said Jerome, his eyes lighting up as he thought about it. \"But again, how did they have time to stage it, with Police on their way after the 9-1-1 call.\"\n\n\"That's it!\" Joanne exclaimed. \"The 9-1-1 call... it can't be what it seems, either! How do we know Rusty Dawson made the call? What if... yeah, what if these guys busted in, surprised Dawson and captured him, then planted the stuff in the bed, went through the desk, then called 9-1-1 and shot him, then left?\"\n\n\"Then... maybe it's not what it seems to be at all.\" said Jerome. \"Maybe our theory was wrong. Maybe this guy was not a whistleblower, and they killed him for some other reason.\"\n\n\"Outstanding!\"\n\nThey all turned to see Your Iron Crowbar and the Green Crowbar standing behind them. The compliment was from me.\n\n\"I'm glad you told us the same thing in that meeting, Commander.\" said Cindy. \"Otherwise, I'd be saying they got one on you.\"\n\n\"Give them credit, Captain.\" I said. \"Guys, I cannot tell you just how happy I am to hear you come to that successful conclusion. That is Iron Crowbar thinking in Iron Crowbar real time. Here, hold this. Keep it for the day.\" I handed Joanne the red crowbar. I need not say that I had some very happy Detectives on my hands... except Teddy Parker, who was still trying to clean up the mess around his desk...\n\n* * * * * * * * * * * * * * * *\n\nBack in my office, Cindy, Teresa, and I talked about the cases.\n\n\"Martin Nash had a good point.\" she said. \"That is a lot of money to let go of, to plant on someone. So maybe it was Dawson's, after all?\"\n\n\"By that logic, they would've taken it.\" I said. \"And yes, it's a good point. That kind of money is not pocket change, even to a billionaire like Donald Trump. Definitely a 'strangeness'.\"\n\n\"The only time I've ever seen that kind of money is on drug cases.\" said Teresa. \"And that was captured, not planted.\"\n\n\"Who ultimately gets that money?\" Cindy asked.\n\n\"If anyone who shows they're a legitimate heir of Dawson makes a claim to it,\" I said, \"they'd get the money when the case is either solved and closed, or after seven years or so by filing a petition with the Court. If no one claims it, it can be claimed by the County or the State, again after five to seven years. Until then, it sits in our evidence rooms.\"\n\nCindy nodded. \"I was just wondering if someone thought they had a way of getting the money back, so leaving it there was just a temporary thing. Another thought: could Dawson still be a whistleblower, and he was killed by Russell or BigAgraFoods, and the others killed by someone else?\"\n\n\"I've had the idea that all four were killed by different hired perps.\" said Teresa.\n\n\"And the Pink Panthers?\" I asked, naming the one disc mold that in the darkness bound them.\n\n\"Maybe the same person or persons hired the different killers,\" said Teresa, \"and had them leave the discs there, possibly to confound you, Commander. I know I don't have much data to support that, but the data we have doesn't exclude it, either.\" ",
        "\"And there are some really good points in your thinking.\" I said. \"But... I'm going to suggest that Dawson was not a whistleblower and was not killed by the Russell-BigAgraFoods cabal. They would have 'disappeared' him, or just shot him and left; no reason to leave stuff in the box springs. And I do think his killing may be related to the others... and not just because of the Pink Panthers.\"\n\n\"Sounds like you have an idea of what's going on, sir.\" said Cindy, who obviously wanted me to share any such ideas that I had.\n\n\"No.\" I said. \"No, I don't. I can't see the end of the road in the darkness, but I can see the next step in the light we do have. We're going to have to investigate these four victims and their University connections...\n\nPart 16 - Compass Points\n\nI strode into MCD. Four Detectives were working on cleanup around Parker's desk. I would find out later that Captain Ross had 'suggested' that everyone help clean up the mess before the Police Commander became 'irritated'. Smart Captain, Cindy is.\n\n\"Okay guys,\" I said, \"I've got some assignments for you. Apologies, Captain Ross, for egregiously going around you, but I want them to hear this straight from the Wildcat's mouth.\" Cindy nodded.\n\n\"Parker, Davis,\" I said, \"I want you to find out who was working for The Silver Sentinel, the University's newspaper, at the time Rusty Dawson was. Then go find those people, wherever they are on God's green earth, and ask them about Dawson. Find out everything you can about him, his personality, anything of interest or not of interest.\"\n\n\"Warner, Washington,\" I continued, \"I want you to find out who all of the assistant coaches were under Coach Brian Harlan when he was the Bulldogs's head coach, and I want you to find them wherever they are, and interview them about Coach Butch Fulmer. Get everything you can. And Joanne, I'll be politically incorrect here: if you make the calls, these testosterone-laden coaches will likely talk to you before they talk to another man on the phone. Sorry, Theo, 'GQ' just doesn't cut it on the phone.\" Joanne laughed as Theo grinned his 'moving star handsome' grin.\n\n* * * * * * * * * * * * * * * *\n\n\"Hello, Darling.\" came the voice of my wife over my personal cellphone later that afternoon. \"I hope you didn't forget about the reception at the Wellman's home tonight. Professor Cornyn of Dartmouth is giving the Sigmund Freud lecture here tomorrow, and Dr. Wellman is hosting a reception for him.\"\n\n\"Psychology professor.\" I said. \"I guess I know where you will be tomorrow.\"\n\n\"In the front row.\" said Laura.\n\n\"Okay.\" I said. \"What's proper attire for me?\"\n\n\"Suit and tie.\" Laura said. \"It's all Academia, so the uniform would be a sore thumb.\"\n\n\"Gotcha.\"\n\n* * * * * * * * * * * * * * * *\n\nCity Police Detective Robin Ventura came to TCPD Headquarters before heading back home. She sat in a 'hot chair' in my office, while Cindy sat in the one to her left.\n\n\"I got a little bit on Selena Martinez while I was on Campus.\" Robin said. \"She was on the varsity softball team, on scholarship, and her grade point average was 3.12, which is not bad at all. She was majoring in Education.\"\n\nVentura continued: \"None of the coaches on any of the women's teams are still with the School, the last one from that time period to leave being the women's basketball coach after the Jayne Hallerton incident. But I did get in touch with a former coach, who now is at a Texas school, and she remembered Selena Martinez. She said Selena was popular with her teammates and was very social with all the athletes on Campus.\"\n\n\"Then she said that something happened.\" said Robin. \"Selena very abruptly left the team and left Campus, as well. The Athletics Department attempted to contact her family, but the family disappeared, as well. They contacted the Campus Police, who knocked on some doors. Their reports say that Selena had moved out of her dorm room and left nothing behind. Also, her classmates or teammates said she had been not been acting strangely at all before disappearing. \n\n\"After a few days,\" continued Robin, \"the Campus Police contacted the FBI and passed off the case as a 'Missing Persons' case, and there's no record of hearing anything back. And that's all I've got from this end. I'll work the City end when I get home. Oh, one more thing... this person I talked to, she said to get in contact with a Dr. Laura Fredricson at the University if I wanted any more information about Selena.\"\n\n\"Hmmm.\" I said. \"Captain Ross, do we know anyone who knows this Dr. Fredricson?\" I asked with a grin.\n\n\"We might know the guy that sleeps with her every night.\" said Cindy. \"I'll have to see if I can get in touch with him.\" Robin laughed at that one.\n\n\"Okay, Robin, this is great stuff, and I appreciate it.\" I said. With that, Robin Ventura made her goodbyes and left (yes, she was trusted to get to the front door without an escort).\n\n\"Interesting.\" Cindy said after Robin left. \"ALL of the women's teams' coaches are gone from that time?\"\n\n\"Not a huge surprise.\" I said. \"The Bulldogs and Wildcats have always been big football schools, and the Wildcats sometimes have a good men's basketball team, but in the by-and-large, neither School has done much in the Winter and Spring sports. So... what do you think of the Martinez disappearance?\"\n\n\"I think you're going to be talking to the FBI about her.\" Cindy said. I nodded. Cindy then said \"And I'll be willing to bet the pillow talk in the Troy household tonight will be... professional in nature.\"\n\n\"As my wife is a sex psychologist, that happens every night.\" I said. \"But you're right... it might be my profession this time...\"\n\n* * * * * * * * * * * * * * * *\n\nAs I was preparing to leave to go home and get ready for the reception, Myron Milton came to my office. \"Whaddya got?\" I asked.\n\n\"A couple of things, sir.\" said Myron. \"First, Selena Martinez had a concealed carry permit. She first applied for it about two weeks after disappearing from the University. But no record of her buying a gun.\"\n\n\"And the permit application didn't show up when people were looking for her?\" I asked, partially to myself. \"Interesting. Anything else?\"\n\n\"Just this, sir.\" said Myron. \"I've been working through the calls to and from Rusty Dawson's phone number. There aren't very many, as it seems he didn't have hardly any friends at all. A few from a BigAgraCorp number, a few from a Prodder, Ryder & Reems number. But there's one recent number, which is from a burner phone.\"\n\n\"Gotta love those burner phones.\" I said.\n\n\"This one was purchased from a Wal-Mart near the City.\" said Myron. \"Cash transaction. But here's the interesting thing. I went and found out the numbers that that burner phone has been calling and has been called by. And a very interesting name showed up: Jan Camp.\"\n\n\"The recently fired professor?\" I asked. \"Who is suing the University for wrongful firing, when she said that she was pressured to change athletes' grades?\"\n\n\"The same one, sir.\" said Myron. \"And this burner phone has only been in operation from about the time Dr. Camp first began her public accusations, which began right after Kendra Luskin's accuser was acquitted of rape. Word is that Dr. Camp was really pissed about that, and she also hates your wife.\"\n\n\"I've heard the same things.\" I said. \"Okay, this might be interesting information. Thanks for bringing it to me. Oh, one more thing. How are you holding up? With Mary in Vice, you're doing a lot of work these days.\"\n\n\"It's not too bad, sir.\" said Myron. \"Lainie and Sonali are handling the basic stuff for the Detectives. And we're simply not going to find anyone who is as good as Mary... with data, that is.\"\n\n\"I hear ya.\" I said.\n\n* * * * * * * * * * * * * * * *\n\n\"Commander and Mrs. Donald Troy!\" intoned the butler, introducing Laura and me formally as we arrived at the reception at the University President's mansion. As Laura and I strode into the main room, I was proud as always to have this lovely woman on my arm.\n\nI was wearing a basic dark gray suit and not-too-dark blue tie. Laura was wearing a clingy white dress with a dark blue sash belt and dark blue high-heel pumps, which shaped those gorgeous legs and that magnificent ass, and also made her tower over me in height. She also was wearing her hair high above her head, giving her even more height. I was not sure what was up with that, but I've never worried about being beside a woman that was taller than me.. Especially this woman.\n\nOur hostess Sally Wellman was the first to greet us. This wasn't really a formal affair, but Sally was so ingrained by the rules and protocols that she couldn't help but apply them anyway. Fortunately, Laura wanted to get right into the greeting line to meet Dr. Cornyn, the celebrated guest of the party.\n\n\"Ah, Dr. Fredricson, so good to see you.\" said Dr. Cornyn as we got to him, and he and she exchanged European-style two-cheek kisses. Dr. Cornyn had black hair, a roundish head, a trimmed mustache, beard and goatee at the chin, very perceptive eyes behind near-slits. His body was pear-shaped, almost rotund, and he was of medium height for a man.\n\n\"Professor,\" said Laura, \"may I present my husband, Commander Don Troy?\" Laura said in introduction.\n\n\"Ah, Navy Commander?\" asked Professor Cornyn as he shook my hand vigorously.\n\n\"Police Commander.\" I said. \"Former Army Captain.\"\n\n\"I see.\" said Cornyn. \"And escorting this lovely woman, I see. I have to know your secret, Commander.\" he said with a bit of a grin and a twinkle in his almost-black eyes.\n\n\"My secret is the best of good fortune.\" I said.\n\n\"I'll talk with you later, Professor.\" said Laura, as we had to move on through the line.\n\n\"Well,\" said Laura as we moved away, \"what are your impressions of Professor Cornyn?\"\n\n\"He's very perceptive himself.\" I said. \"I'd be careful around him with my facial expressions. He also has eyes for you, like every man and some women in this room now... including this University's lecherous President.\"\n\n\"Why Don!\" Laura said with mock shock. \"The very thought!\" She then said \"But you're right. Professor Cornyn is a brilliant research psychologist. He's done some experiments on my behalf, as well, confirming some of my research.\"\n\nI nodded, not asking if that was sexual research... or CIA research... he'd confirmed for her...\n\n* * * * * * * * * * * * * * * *\n\nSome minutes later, we came across Dr. Paul Berkshire and his wife. Dr. Berkshire had been awarded tenure after the death of Michelle Schelle. (Author's note: 'The Swap'.) He had brown hair and a beard and mustache, as well. He wore a brown plaid-'ish' sportscoat and solid beige pullover shirt and khaki pants. Yes, the 1970s and 80s were calling, wanting that attire back. His wife was rather plain but slender and in good shape. I remembered that they were both rugged outdoors-people.\n\n\"It's good to see you both.\" said Berkshire, a professor of pre-Law English. \"Commander, people are still talking about how you solved Dr. Schelle's death.\"\n\n\"Yes, that was an interesting case.\" I said. \"I always meant to ask you... what is 'pre-Law' English, as opposed to other types?\"\n\nDr. Berkshire smiled and said \"I basically teach very formal English and language that is used in the legal system, in contracts, and such stuff. There's also some history of it that I research, mixing judicial history, political history, and the English language of that. It became a niche in the 1980s, when a number of Law School candidates decided to major in English rather than Political Science or Judicial studies.\"\n\n\"And you filled in the need nicely.\" I said. \n\n\"Well, it did get me tenure, after Dr. Schelle died.\" said Berkshire. \"But it's a good niche, and I've enjoyed it.\"\n\n\"Wasn't Dr. Camp an English professor, and up for tenure at that time, also?\" asked Laura, and I sensed purpose and intent in her question.\n\n\"Yes, come to think of it, she was.\" said Paul. \"She then carved out a niche for herself in the then-new Women's Studies program. But she still never got tenure, and she was fired recently for making allegations about the University favoring student-athletes.\"\n\n\"So she was a former English professor.\" I mused. \"Interesting. What level of English? Basic? More advanced?\"\n\n\"Basic English, some English Literature, if I recall.\" said Dr. Berkshire.\n\n* * * * * * * * * * * * * * * *\n\n\"Hello, Commander.\" said Dr. Wellman as he came up to me and Laura. His wife Sally adroitly ushered Laura away, saying that Elsie Gringer wanted to speak with my wife.\n\n\"Hello, Mr. President.\" I said. \"And before you ask: no, I have no magic wand nor crowbar to wave that will help the Wildcats against the Bulldogs this year.\"\n\n\"I still don't trust those miracle-worker Wildcats.\" Dr. Wellman said with his sinister grin. \"Terrible thing about that Coach at the game down there.\"\n\n\"Yes sir.\" I said \"But you shouldn't be feeling bad about it. After all, it was Coach Gonzales, who was passing out PEDs to your athletes, and almost got you into some serious trouble.\"\n\n\"That's true.\" said Dr. Wellman. \"And thanks to you, more serious disasters were averted. But beyond the pain to the man's family, it's unfortunate for the Schools, and the Conference, to have a crime like that at a game. Any idea what it was about?\"\n\nI shook my head slowly. \"Noooo, no sir. I'm not really looking into it, either. Far away from my home and jurisdiction.\"\n\n\"I understand.\" said Wellman. Then he lowered his voice and said \"Yes, I would imagine that Coach Gonzales took many secrets to his grave with him. And as you know from when you first arrived in this Town, discretion and loyalty are things I admire and value very highly.\"\n\n\"Trying to tell me something, Mr. President?\" I asked, letting my gray eyes cut sideways to lock onto Wellman's.\n\n\"No, no.\" said Wellman. \"But if anything ugly from that dirtbag Gonzales's past came up, I'd hope you'd exercise... discretion... in its revelation to the Public.\"\n\n\"It might surprise you to learn, Dr. Wellman,\" I said, \"that I've always been much more discreet that I've been given credit for. Justice comes first, of course. But Justice and rote application of the Law are not necessarily the same thing.\"\n\n\"I'm glad to hear you say that.\" said President Wellman. He extended his and and I shook it as he said \"Well, I'd better greet the other guests, if you'll excuse me.\" I assented and he walked off, leaving me to ponder what secrets were out there needing... discretion...\n\n* * * * * * * * * * * * * * * *\n\nAs we drove home in Laura's Mercedes, I said \"There is something I needed to ask you, Dear. Did you ever know a student named Selena Martinez?\"\n\n\"Oh... that's the girl that was found dead in the City.\" Laura said, recognizing the name. \"I don't remember ever meeting her when she was a student here.\"\n\n\"The reason I ask,\" I said, \"is because someone that knew her here was being interviewed about her, and said to ask you about her.\"\n\n\"Me?\" asked Laura, sounding confused. \"I don't know why. She wasn't a student of mine.\"\n\n\"Never was a patient?\" I asked. \"Gynecology, or sexual trauma?\"\n\n\"Neither one.\" said Laura. \"Of course, I've never really handled trauma cases, not even immediately after a rape. and Dr. Yates does that now. My therapy with rape victims usually begins after the initial phase, and often only after the rapist goes to trial, if he does go to trial at all.\"\n\nI nodded. \"So maybe this person thought you would have handled such cases back then.\"\n\n\"Could be. So you think Selena Martinez was raped, and that's why she left school?\" Laura inquired.\n\n\"Not much gets by you, my dear.\" I said with a grin. \"And what's not going to get by you tonight is when I ravish you in bed like every man at that party wanted to do... especially Professor Cornyn.\"\n\n\"Mmmm, a promise I expect you to keep.\" Laura said, her eyes sparkling even in the dim light of the car...\n\n* * * * * * * * * * * * * * * *\n\nI did not even give her a chance to take off her navy blue lace underwire bra, lace panties, and stockings and high heel pumps. As soon as we got into the bedroom, we were all over each other, and I could tell Laura wanted cock as much as I wanted her pussy.\n\nI practically pushed her onto the bed as I let my pants fall to the floor and stepped out of them. Climbing onto the bed behind my wife, I sank two fingers into her twat, finding her labes swollen and her cunt very wet. She was hot about something, I thought, but I didn't care what it was... I just resolved to satisfy her sexual urges and fantasies with a hard, deep fuck. \n\nI gripped her hips and slid my throbbing hard prick along her labes, feeling her hand guide the helmet of my cockhead past her swollen labes and into her hot, wet depths.\n\n\"OH MY GOD!\" Laura cried out as I drove into her, balls-deep in ecstasy, until my groins smashed against her magnificent asscheeks. With one hand I pushed on her toned back until her shoulders and head were pressed into the mattress. And then I began fucking the living hell out of her.\n\n\"Oh God, that's so fucking good!\" Laura gasped out. \"Oh yeah, fuck me with that thing!\" I suited the deed to her pleas. I gripped her waist firmly, pulling her back into me as I drove forward with raw sexual power, plunging into her again and again and again...\n\nAs we rutted lustily, I looked over at the floor-to-ceiling mirror we'd installed on the wall at the foot of the bed. The sight of my half-clothed wife on the bed, her face pressed down and her ass turned up like the bitch in heat she was, her asscheeks jiggling back and fort as my groin slammed into them again and again, was an extremely hot visual to go with the intensely wet pleasure of her pussy clutching at my pistoning prick. I felt my nut rise.\n\nInstead of slowing down, I just drove on relentlessly, fucking Laura as hard as I could. She took every stroke and pushed her ass back for more, her body as well as her voice begging me to fuck her even harder. \n\n\"OH MY FUCKING GOD!\" Laura cried out as I felt her cunt clamp down on me like a vise. I had to push hard to keep from being expelled, though I knew there was no way my cock was leaving this heavenly hole. I pushed forward with short stabbing thrusts, staying nuts-deep in her, and my vision blurred as the building pain exploded into a mind-blowing release. I barely felt my jism being fired into Laura's depths. I did feel her beginning to collapse, and I rode her to the bed, lying on her and continuing to press down against her ass as I drained my balls, the final spurts of semen dribbling out of my cock and into her...\n\n* * * * * * * * * * * * * * * *\n\nAn hour later, we were naked and in bed. I was on top of Laura, my cock buried balls-deep inside her sopping wet pussy. Her long legs were wrapped tightly around me, and my chest was pressing against her large, milk-filled breasts. I was nuzzling her neck and whispering how much I loved her into her ear, and her arms wrapped around my neck indicated that she wanted me to continue doing that as our hips grinded together in a slow, deep fuck.\n\nAs I pumped Laura, images came into my mind. Images of me deeply fucking the Intendent, Adele Peabody, just as I was fucking Laura now. Laura moaned as I began thrusting harder, fucking her deeper as I thought about fucking Adele. I did not feel shame at thinking of another woman as I was fucking my wife; after all, Laura had been having a hot fantasy of her own while I was banging her from behind an hour before. Some people wouldn't understand, but our open marriage worked for us, and neither of us would have it any other way...\n\nPart 17 - Flow of Information\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded reporterette at 7:00am, Tuesday, October 3d, from Courthouse Square. \"Fox Two News has learned that The Guardians of Justice, the shadowy group considered to be either cyber-terrorists or whistleblowers, has released new information about the recently murdered Coach Willy 'Speedy' Gonzales and the PED scandal that embroiled him and the University!\"",
        "\"Fox Two News has learned that the new GOJ documents show collusion between Coach Gonzales and former SBI Agents under then-director Jack Lewis to frame Coach Erskine Marshall, now with the Wildcats Football program.\" said Bettina. \"The attempt to frame Coach Marshall was thwarted by Commander Donald Troy of the TCPD, and the information released by the GOJ is already known. But this breach of data raises questions as to the ability of the GOJ to obtain information like this from Government sources, and also gives law enforcement new things to think about in the murder of Coach Gonzales!\"\n\nBettina went on: \"Local authorities investigating Coach Gonzales's murder, as well as the FBI, have said that Coach Marshall is not a suspect, as he was in the presence of other coaches and players during the entire possible timeframe of Coach Gonzales's death. Former SBI Agent Richard Ferrell is now paralyzed from the waist down after his back was broken by criminals during a drug raid, but authorities are not focusing on whether anyone involved in the old PED scandal killed Coach Gonzales in retaliation for his role in that scandal.\"\n\n\"Meanwhile,\" said Bettina, \"U.S. Senator Samuel Russell issued a strong condemnation of Governor Val Jared, saying that Jared's lack of action is the reason the Guardians of Justice have not yet been captured. He continues to demand that Commander Donald Troy be personally assigned the case in his capacity as SBI Inspector.\"\n\n* * * * * * * * * * * * * * * *\n\n\"If they do assign you the case, sir,\" said Teresa as we drank coffee in MCD, \"I have a clue to the perpetrator.\"\n\n\"I can't wait to hear it.\" I said.\n\n\"He's eight feet tall, wears a black suit and tie, and has no facial features on his head.\" said Teresa. \"And Slender Man is going to be haunting you in your dreams while you work on the case, sir. He's coming for you, sir. It's inevitable.\"\n\n\"That's scary.\" said Sgt. Micah Rudistan, losing some of his joviality.\n\n\"The only scary thing is that Captain Croyle actually believes that.\" I replied. \"Of course, that's because she doesn't know the Powwwwer of the Crowbar, since she refuses to carry one herself.\"\n\n\"Don't need it.\" said Teresa flatly. \"Except to spank rowdy Police Officers during the Police Boxing Matches.\" As the winner and defending Champion of said Boxing Matches, she was entitled to say that.\n\n\"Commander,\" said Joanne Warner, \"will a crowbar be enough for the Wildcats when the Bulldogs mop the floor with them?\"\n\n\"GEEZ, Rudistan!\" I exclaimed. \"What did you put in this coffee to make this young Detective lose control of her mental faculties like that?\"\n\n\"Not a damn thing.\" said Cindy Ross, grinning. \"You should just worry about Slender Man, Commander. There's no point in worrying about the inevitable... you know, the Bulldogs mopping the floor with the Wildcats?\"\n\nI shook my head sadly. \"My entire Detective Force has gone mad. The Slender Man has affected your minds...\"\n\n* * * * * * * * * * * * * * * *\n\nAt 9:05am, I got a phone call. It was from Jack Muscone. I put it on speaker so Cindy could hear it.\n\n\"We've got a couple of things.\" said Muscone. \"First, that money in Dawson's mattress came from an armored car robbery in San Jose, California. They got over $50,000 total. There were some marked bills in the batch, that showed up in the Dawson stash. Our guys out there believed it was one of the white supremacy groups that robbed the armored truck. I'm emailing you the case files.\"\n\n\"Thanks.\" I said. \"What else?\"\n\n\"Selena Martinez.\" said Jack Muscone. \"She was an American Citizen, born in Austin, Texas. But her parents were in the U.S. illegally, so she was an 'anchor baby'. We think they fled when Selena was killed, either to California or to Mexico, since they knew authorities would be looking for them, if only to tell them Selena was dead.\"\n\n\"Starts to make some sense why they've disappeared.\" I replied. \"Wanna go three for three? Anything on Speedy Gonzales?\"\n\n\"Not really.\" said Muscone. \"We're getting good cooperation from the Wildcats people, from Eastern State, and from their respective State LEO organizations. He'd kept himself pretty clean after you busted his chops in the PED scandal. Now we've got the Guardians of Justice stirring the pot, so I expect the EAD will call me with assignments soon.\"\n\n\"No doubt.\" I said. \"Thanks for the info. I'll buy you double cheeseburgers the next time we have lunch.\" Jack eagerly accepted that, and we made our goodbyes.\n\n\"Okay, so we're clearing up a couple of things, at least.\" I said.\n\n\"Clearing up?\" Cindy said incredulously. \"Seems like we've just added to the mess. Now we have California and maybe Texas connections to all this.\"\n\n\"Yes.\" I said. \"But we now know why someone felt they could part with that much money... it was stolen, and it was hot, and by that I mean it was marked. And the reason for Selena's family disappearing is answered.\"\n\n\"You don't think she was killed because her parents were illegals, do you?\" Cindy asked.\n\n\"No.\" I said. \"No, I'd be shocked if that had anything to do with her murder.\" I was halfway in a reverie...\n\n* * * * * * * * * * * * * * * *\n\nAt 10:30am or so, City Police Detective Robin Ventura called.\n\n\"I've got some new stuff on Selena Martinez.\" said Robin. \"Our people talked to the hotel staff. The ones that knew Selena said she was friendly, but very guarded. She carried a gun on her person while working at the hotel, and was always very alert and aware whenever she was in a room with someone else, especially a man.\"\n\n\"Okay.\" I said. \"Anything else?\"\n\n\"Just that no one had any idea of her past.\" said Robin. \"That's not unusual, as some of her co-workers are probably undocumented and have forged green cards. So people don't talk of their pasts very much. Selena was no exception.\"\n\n* * * * * * * * * * * * * * * *\n\nNorm Chow of the SBI-SIS called about half an hour later. \"Sir,\" he said, \"I've got some stuff on Butch Fulmer and Selena Martinez. She was an anchor-baby; she was born in Texas, but her parents were likely illegally here.\"\n\n\"Okay.\" I said. \"What about Butch Fulmer?\"\n\n\"He was pretty much a loner.\" said Chow. \"He often took night-time duty assignments where he was alone, like in a parking lot guardhouse, or a building front desk, or maybe at the museum. But he did have an assignment where he was working with another guy, named Phil Layne, and I managed to get in touch with Layne.\"\n\n\"Great!\" I said. \"What did he have to say?\"\n\n\"He said that for a long time, Fulmer didn't talk very much about his past. Layne thought maybe Fulmer's wife had died and he just didn't want to bring up the memories. But one night, and not all that long ago, he told the guy he'd been a coach at the University under Coach Harlan. Fulmer told Layne that Harlan was a really, really bad man, and that Coach Speedy Gonzales was bad, too.\"\n\nChow went on: \"This was after the PED scandal came out, so Layne asked if that was why they were bad. Fulmer said that was part of it, but that it was worse. Fulmer said he thought Harlan didn't die of cancer, but was poisoned or something, and that he, Fulmer, might share the same fate if he wasn't careful. Fulmer also told Layne that if anything did happen to him, to Fulmer, then Layne should contact a 'Rusty Dawson' in your Town, that some information was in a safe deposit box at City & Counties Bank in the City, and Dawson knew what box it was.\"\n\n\"Wow, that's huge!\" I said. \"You got this on tape? Affidavit?\"\n\n\"Affidavit and audio recording, sir.\" said Chow.\n\n\"That's terrific, Norm!\" I said. \"You've done a hell of a job, here.\"\n\n\"Thank you, sir.\" said Chow, his voice not breaking past its normal flatness. \"Oh, one more thing, as Steve Jobs would say: rumors are circulating around the SBI. Director Conlan has talked to me and others about them. Everyone seriously believes that Graham Collins is going to make his move to get Jared impeached, and he wants to make it happen by New Years. Collins is already talking to Jack Lewis about returning here and to the SBI Directorship once Collins is Governor. Collins is going to pardon Lewis for past crimes, then re-install him as SBI Director, then shut down the Reserve Program and the SIS.\"\n\nPardon him...\n\nI was deep in a reverie, and finally came out of it as Chow was repeatedly saying my name. \"I'm here.\" I finally said. \"Sorry, you said something that triggered a thought within me...\"\n\n\"Give me credit for solving the case if that leads to the solution, sir.\" said Chow, in what was for him great humor.\n\n\"I'll be sure to.\" I replied. I thanked Chow again, then disconnected.\n\nPardon him... pardon... that was the clue I needed. I'd wanted Quint Danielson pardoned; the Governor had refused to do it...\n\n* * * * * * * * * * * * * * * *\n\nThe meeting in Classroom 'E' convened at 1:00pm, after I warned my Detectives to get lunch early and be on time for this meeting. They were not only punctual, but a few minutes early. Smart Detectives, they were.\n\nAttending were Joanne Warner, Theo Washington, Jerome Davis, Teddy Parker, Myron Milton, and their Captain, Cindy Ross. Also in attendance was Assistant District Attorney Paulina Patterson, and Chief Moynahan.\n\n\"Okay, anything new come out in the wash?---- oh, sorry, Mr. Parker.\" I said. Everyone else laughed at my zinger at Teddy Parker. He just shook his head.\n\n\"God only knows what they're going to do to you if the Wildcats lose to the Bullllll-dogs.\" warned the Chief.\n\n\"We'll just have to win, and preclude anything these bright young Police Officers might be thinking of doing.\" I said, my eyes firmly on the Green Crowbar. Her ice blue eyes were twinkling, though she said not a word.\n\n\"Okay, does anyone have any new information?\" I asked.\n\n\"Sir,\" said Jerome Davis, \" in cooperation with the Campus Police, we visited the offices of The Silver Sentinel, the University student newspaper. They might have the only newspaper in the State that actually gets read, but I digress. We got the names of a couple of the editors of that time, and we also got copies of all of Rusty Dawson's columns they had on microfiche. They're being uploaded to the servers now. I looked at a few of them. They were very hostile to the Athletics Department, and Dawson was constantly asking why they got to register for classes first, get all the good classes, stuff like that.\"\n\n\"I also got Rusty Dawson's school records.\" said Jermaine. \"There's nothing out of the ordinary, just the classes he took, mostly 'B's and 'C's in Journalism. No disciplines, no incidents.\"\n\n\"What about people that knew him?\" I asked.\n\n\"I've been trying to contact them, sir.\" said Teddy Parker. \"I also contacted people at KCTY where he worked, and also people from the law firm he supposedly was a part of. So far, I've gotten no returned calls, at all. We may have to make personal visits.\"\n\n\"And the law firm will tell you everything's privileged,\" I said, \"and you won't get to talk to anyone worth talking to among the journalists. Keep making phone calls, including to personal residences and to personal phones, and we'll talk about visits at a later time. Okay, Warner, Washington?\"\n\n\"I'm sorry, sir.\" said Joanne. \"We have nothing. We got the names of the coaches on the Bulldogs's staff at the time Coach Butch Fulmer was there. We also called the Tigers's Athletic Department, and got a confirmation that he never worked there. The coaches that we got are either dead, in the cases of Coach Brian Harlan and Coach Speedy Gonzales, or else we got a runaround like Teddy and Jermaine did. These coaches are all over the country, from Florida to Washington State. We might need the FBI to help us with these if we want personal visits.\"\n\n\"I'm not surprised they're not rushing to talk to us.\" I said.\n\n\"Maybe we should invite them all to a Disc Golf tournament.\" said Cindy. I smiled a wan smile.\n\n\"Not a bad idea, there.\" I said. \"Which reminds me... I understand that no one at the Disc Golf Course at Ronald Reagan Park over several days remembered or recognized Rusty Dawson?\"\n\n\"That is correct, sir.\" said Cindy. \"And since his murder was not mentioned on the news, that actually helped us. No one remembered him at all, even those that play Disc Golf every day.\"\n\n\"Doesn't really eliminate him.\" said the Chief. \"There's a Disc Golf Course at MLK Park, also. And on the University Campus.\"\n\n\"We canvassed that, also, Chief.\" said Cindy. \"It's not used very much at all, and people walk or run along the trail, there. Nobody remembers seeing Dawson. And the one on Campus runs through the Athletic Complex, which is mostly fenced in. You have to sign in at the front gate to play it, and Dawson never did.\"\n\n\"I think we can safely say that Dawson did not enjoy the fun of playing Disc Golf,\" I said, \"though I recommend it to all of you. Okay, anything else before I tell you what we're going to do?\" No one replied.\n\n\"Paulina,\" I said, \"Data Guru Milton here has found that a burner phone that communicated with Rusty Dawson's phone also communicated with Dr. Jan Camp's phone. I'd like for you to get a warrant to bring Dr. Camp in as a material witness.\"\n\n\"Captain Ross,\" I said, \"when the warrant is secured, I want you personally to lead the team to bring Dr. Camp in for questioning. Detective Warner an an all-female team of Uniformed Officers will go with you; yes, I do have a reason for this blatant discrimination against men.\"\n\n\"Don't mention the warrant unless you have to.\" I continued. \"Just ask her to come to the Station. If she wants a lawyer, tell her she can call one at the Station. If she refused to come, then produce the warrant and arrest her and bring her down here in handcuffs. If you don't have to arrest her, put her in I-A. If you do have to arrest her, put her through full booking, then in I-1. Any questions?\"\n\n\"No sir.\" said Cindy.\n\n* * * * * * * * * * * * * * * *\n\n\"Myron,\" I said, once we were back in my office, \"can you access Campus Police records going back some years?\"\n\n\"Yes sir.\" said Myron.\n\n\"I want you to look something up.\" I said. \"You may not find it, but I'm hoping that there's a backup you can access that our enemies didn't think about...\"\n\nPart 18 - Camptown Ladies Sing This Song\n\n\"This is an outrage!\" said Dr. Camp's attorney, Gwen Munson. \"This is just the University trying to harass my client because of the lawsuit we're going to win against them!\"\n\nCindy and Joanne were in Interrogation-Alpha with Dr. Jan Camp and her attorney, whom she had called immediately upon arriving at the station. Patrol Officer Lydia Green was the Uniformed presence. The lawyer was now trying to bluff her way through this.\n\nDr. Jan Camp was a brunette, tall and slender, but not quite as elegant as Laura Fredricson in any way. The attorney Gwen Munson was shorter, stockier (but not fat), had blonde hair, and a voice that could, should, and did sound sweet and feminine, and did not fit the persona of a fiery trial attorney.\n\n\"Ms. Munson,\" said Cindy, \"your client has been asked to assist us in an investigation, and I do not see the reason for your blatant hostility towards us nor towards our purpose.\"\n\n\"Come on, Captain Ross,\" said Munson, \"your Commander's wife is a University professor, friend of the University President, and you know damn well we're suing him and the University for my client's wrongful firing and for being a whistleblower. We're going to barbecue him in Court, and so he uses the Police as his attack dogs---\"\n\n\"Ms. Munson,\" said Cindy, \"I don't give a rip about your lawsuit. I am trying to investigate---\"\n\n\"Is my client under arrest?\" snarled Munson. \"If not, we're leaving now.\"\n\nI was watching behind the one-way glass, and just as I was about to send Paulina in, Dr. Camp said \"Hold on, Gwen.\" She turned to Cindy and said \"At least tell us what this is about if you want me to cooperate with you.\"\n\n\"I'll shut this down and take you out of here if I don't like the questions they're asking.\" said Gwen Munson. \"We're not litigating our lawsuit here.\"\n\n\"Thank God for that.\" said Cindy, with no small amount of sarcasm. \"Dr. Camp, do you know a man named James Russell Dawson, a.k.a. Rusty Dawson?\"\n\n\"Should I?\" asked Dr. Camp.\n\n\"Just answer, yes or no.\" said Cindy. \"Do you know Rusty Dawson?\"\n\nAfter a moment of hesitation, Jan Camp said \"I think I need to talk with my attorney before proceeding further.\"\n\n* * * * * * * * * * * * * * * *\n\nAs we waited in the anteroom, Paulina said \"What do you think, Don?\"\n\n\"She knows him.\" I said. \"Right now I suspect they're getting their ducks in a row on what they're going to say. It will go one of two ways: the lawyer is going to start huffing and puffing, or Dr. Camp is going to recite a statement then decline to answer further questions. If the lawyer starts playing 'three little pigs', then Paulina will come in with the warrant, and we'll just book Dr. Camp without further ado. If not, then you guys can start pushing Camp.\"\n\n\"And Captain, Detective,\" I said, with some formality, \"I would prefer that I don't have to go in there. So drive a good, hard interrogation. Put the fear of God into Camp. I want her scared shitless and telling us exactly what we want to hear. Am I clear on that?\"\n\n\"Yes sir.\" said Cindy.\n\n\"Sir,\" said Joanne. \"What is it that you want to hear?\"\n\n\"The truth.\" I replied. \"And I will know if she's not telling it. I hope you two can discern that, as well.\"\n\n* * * * * * * * * * * * * * * *\n\n\"My client is going to make a statement.\" said Gwen Munson. \"After that, follow-up questions will be limited to her statement. Anything outside of that, and we're finished with this.\"\n\n\"Start talking.\" said Cindy. She could project toughness. Joanne looked too pretty, too sweet, and too good-natured and happy to really project that. Joanne was a good Detective, I thought to myself, but she is not God's gift to interrogations.\n\nDr. Camp started: \"I do know Rusty Dawson. Several years ago, he was a student and worked for the student newspaper. At that time, he approached me for an interview about preferential treatment given to student-athletes, particularly those on the football team. At the time, I was trying to get tenure, and told him that I could be much more forthcoming once I got tenure. He gave me his number to call, and left. I never saw him in person again.\n\n\"Recently I informed the Press and my colleagues at the University that football players were indeed getting preferential treatment, and that professors like myself were being pressured to give the athletes good grades, even if they were failing.\" said Camp. \"I had failed two players, and the Trustees' Board upgraded their grades after they appealed the grades, even though I clearly showed they had failed to do the required work to pass.\"\n\n\"After I went public with the accusations, I was wrongfully terminated by the University.\" said Camp. \"I am suing them, as well as pursuing the case through the State whistleblower system, though I do not expect a fair or impartial hearing from them. As part of my attempt to obtain Justice, I attempted to contact Mr. Dawson, who still lived in Town, as I hoped that he would have information that would help me in my lawsuit against the University.\"\n\n\"Did you talk to Dawson?\" asked Cindy.\n\n\"Not directly.\" said Camp. \"I spoke through intermediaries, who I will not name, and whose names might be privileged, as well. However, I never obtained anything, and my intermediaries reported that they'd lost contact with Mr. Dawson, that they'd not heard from him and he'd not returned their calls.\"\n\n\"Who are the intermediaries?\" Joanne asked.\n\n\"That's privileged.\" said Munson.\n\n\"That's a load.\" said Cindy. \"Why didn't you talk to Dawson directly?\"\n\n\"That was my advice to my client.\" said Munson...\n\n* * * * * * * * * * * * * * * *",
        "\"She's lying.\" I said. \"They're both lying.\"\n\n\"How can you tell?\" asked Paulina.\n\n\"I could say 'their lips are moving', and I'd be right.\" I said. \"But their story does not make sense. And that 'privileged' bullshit ain't gonna hold up.\"\n\n\"If the communication was through lawyers,\" said Paulina, \"then she's correct, and you won't be able to break it.\"\n\n\"We'll see about that.\" I said. I knocked on the glass as Munson was playing 'three little pigs', demanding her client be allowed to leave.\n\n* * * * * * * * * * * * * * * *\n\nOfficer Lydia Green had blocked the door, preventing the women from leaving. The anteroom door opened, and in walked ADA Patterson, followed by Your Iron Crowbar. Paulina had papers in her hand. And I had one very unhappy look on my face.\n\n\"So, Commander Troy finally shows up!\" said Munson. \"Commander, either let my client go or arrest her. I want out of here, and we're being detained against our will.\"\n\n\"Ms. Munson,\" I said, not yet sitting down, \"you may be a great lawsuit attorney, but you are a lousy criminal attorney. When an Assistant District Attorney walks in the door, you should take that clue, and you should be sitting back down and doing your job of representing your client. Oh, and don't start any 'bias' crap with me, unless you want to be booked and criminally charged with Lying to Police and Obstruction of Justice. Now sit down, both of you.\"\n\n\"Let us out of here, or arrest my client.\" said Munson.\n\n\"As you wish.\" I said. \"ADA Patterson----\"\n\n\"Hold on.\" said Jan Camp, realizing that the document in Paulina's hands was an arrest warrant. \"What do you want, Commander?\"\n\n\"I want you to sit down.\" I said, doing so myself, followed by Paulina. Jan Camp warily sat down, and Munson finally did the same. Once seated, I said \"Now I want you to understand very clearly the magnitude of your problem. First, I am going to read you your rights.\" I began doing so from the card.\n\n\"You're kidding!\" said Gwen Munson. I just glanced over at her, then finished reading the rights.\n\n\"Do you understand the rights I've just read to you, Dr. Camp?\" I asked. When she didn't answer, I said \"One more time... do you understand the rights I've just read to you?\"\n\n\"Yes.\" Jan Camp finally said, her eyes beginning to show her hatred.\n\n\"Let me explain to both of you why you should not be playing games with me.\" I said. I began displaying the papers. \"These phone records show that this number called or was called by Rusty Dawson several times in the past few months. And then this number calls and is called by Dr. Camp's number---\"\n\n\"You got my phone records without a warrant?\" Camp almost screamed.\n\n\"Oh no, I have the warrants, of that you may be sure.\" I replied.\n\n\"On what grounds did you obtain that warrant?\" snarled Munson.\n\n\"If you'll shut your traps long enough for me to tell you...\" I said. Finally, I heard silence from them. \"The problem is that Rusty Dawson was found murdered in his home some days ago...\"\n\n\"How do you know he was murdered?\" thundered Gwen Munson.\n\n\"Well,\" I said, \"I've been told I'm pretty good at solving crimes. My first clue in this case was the gunshot wound in the back of Dawson's head. Yes, Dr. Camp, Rusty Dawson was murdered, and we have records of his phone and your phone being called by the same phone. So, you might want to begin answering some questions to clarify your position in all of this, to dispel my notions of your involvement in Dawson's murder.\"\n\n\"I didn't murder anyone!\" exclaimed Jan Camp.\n\n\"Good!\" I said. \"Then you won't mind telling me whose phone number is, the one you and Mr. Dawson have in common contacting you both. Oh... don't say it's 'privileged', because only conversations are privileged, not meta-data like this. So... whose number is this?\"\n\n\"I don't know.\" said Camp.\n\n\"You spoke to someone when that number called.\" I said. \"Or you called that number. Now lying to Police really is a criminal offense in this State, Dr. Camp. So once again... who were you talking to.\"\n\n\"It was someone in my office.\" said Gwen Munson. \"As we've said already... its privileged.\"\n\nI turned to Paulina. \"I don't know. I don't know. Maybe I'm just not making myself clear.\" I then turned to Gwen and said \"Okay, then, produce the phone.\"\n\n\"No way in hell I'm turning it over to you.\" said Munson.\n\n\"Then you're going to jail, too.\" I said. \"Once again, that 'lying to Police' thingy.\" Gwen's eyes recoiled in horror, and she realized I wasn't bluffing. \"Okay, so produce the phone... call my number, just to show it's the same number; I won't even try to confiscate it... Oh, is something the matter, Ms. Munson? Still want to stick to the story that it's yours or your law firm's?\"\n\n\"I need to confer with my client.\" said Munson.\n\n\"Do so quickly.\" I said. \"I'm getting bored with you two, and ADA Patterson will be calling the judge... for your arrest warrant, Ms. Munson.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Of course she's lying.\" I said. \"It was a burner phone, but she didn't seem to know that. And all she had to do was produce it, call my phone, and she's off the hook, pun fully intended.\"\n\n\"So it's not her nor her firm that was calling Dawson and Camp?\" asked Joanne.\n\n\"That is correct.\" I said. \"And Camp knows who was on that line. Either she's going to tell us... or things will get a lot worse for her. A lot worse.\"\n\n\"It's starting to be a mess now.\" said Paulina. \"They've both lied to Police, they may want immunity from that in exchange for telling the truth, and then we won't know if what they tell us next is the truth. And on top of that, anything we do to them, while correct in every way, and they'll spoon-feed the Press with the story that the Iron Crowbar is Wellman's personal Gestapo, and is just harassing their poor client.\"\n\n\"No.\" I said, almost absentmindedly. \"No, they won't do that. It's way past that now. Jan Camp is scared. She knows it's her life now. And that's the choice she's trying to decide to make...\"\n\n* * * * * * * * * * * * * * * *\n\nMyron Milton popped his head into the anteroom from the hallway. I went out to hear his report.\n\n\"It was just as you said, sir.\" said Myron. \"There was no incident report on file, but I accessed a backup tape. The complaint was in it.\"\n\n\"Call State Attorney Jenna Stiles.\" I said. \"Ask her to quietly get a warrant for you to collect that and put it into our evidence servers...\" Myron nodded and left to execute the mission.\n\n* * * * * * * * * * * * * * * *\n\nGwen Munson came to the door of the anteroom and opened it, then came on into the anteroom despite it being a flagrant breach of protocol.\n\n\"I have to speak to you, Commander Troy.\" she said. \"Only you.\"\n\n\"That can't happen.\" I said. \"But if we bring ADA Patterson along, I'll be willing to listen.\" That was accepted. We went into Headquarters and to the Pastor's Room.\n\n\"Is this room bugged?\" Gwen asked.\n\n\"No.\" I said. Well, hell yes, it was chock-full of microphones that I.A. could listen into... but my favorite bug-killer was on.\n\n\"Here's the deal.\" said Munson. \"You can try to fuck with me over saying it was my phone, and I'll just say something like 'I thought you meant the other phone', and so on.\"\n\n\"I'm not interested in that crap.\" I said. \"I'm looking for the truth... and for a killer. And I think your client is figuring out who that killer's next victim just might be. So let's cut through the clutter. Off the record for the moment. Start talking.\"\n\nSeeing that I was not brooking much more, Gwen Munson said \"I've told my client that I might not be the best legal representation for her in this situation. I can win her case against the University easily, but this criminal stuff and dealing with the Iron Crowbar is not my fort\u00e9. So she may ask for a new lawyer.\"\n\n\"But if she doesn't,\" Munson continued, \"she might be willing to tell what she knows... but as some kind of hypothetical or off-the-record statement. And only to you, Commander Troy. You'll understand why after she makes the statement.\"\n\nI looked over at Paulina. She said \"It's your call. But it might be a legal disaster if you do.\" \n\nI nodded and thought about it. Then I looked up at Munson and said \"Okay. But if either of you are fucking with me, I'll twist both your caps around.\"\n\n* * * * * * * * * * * * * * * *\n\nI came back into Interrogation-A. Alone. I sat down opposite Jan Camp. She had conferred with her lawyer, who was now in the anteroom with my Officers and the ADA.\n\n\"First,\" said Camp, \"I really don't know who was on that phone. The voice was disguised, it sounded like a robot talking. I'd asked Ms. Munson and her law firm to get me in touch with Rusty Dawson through middlemen, and that's what I thought they were doing.\"\n\n\"Why all the hoops?\" I asked. \"Oh, never mind, I can tell you... you did not call Dawson to get corroboration on grade inflation for football players. It was something else. What was that something else?\"\n\n\"You're right.\" said Camp. \"I thought Dawson was still a journalist. I'd heard rumors of something, and I wanted him to get proof of it. Once he did, I was going to force the University to settle the lawsuit for millions of dollars, and one of those millions would be his... as well as the collateral damage he could do to the athletics program, which he utterly loathed.\"\n\n\"And he ended up dead.\" I said. \"So it's obviously something big, and ugly.\" After an ominous pause, I said \"I'm listening.\"\n\n\"Coach Brian Harlan was a bad, bad man.\" said Jan Camp. She leaned forward and told me the nature of her conversation with Dawson. As soon as I heard her words, I knew the answer to the Pink Panther crimes...\n\nPart 19 - Ethical Dilemmas\n\n\"Get out of my Police Station.\" I ordered Gwen Munson as I came into the anteroom. \"Get your client and get out of my sight.\" Munson quickly complied.\n\n\"Don, you okay?\" asked Cindy, looking concerned.\n\n\"No.\" I said. \"Warner, we'll talk later. Get back to work. Paulina, don't let me hold you up from completing any work you need to do.\" With that, I headed down the hall and to my office. Paulina's office was next door, so she came on into mine. Of course, the Green Crowbar followed the Red Crowbar, as well.\n\nI sat down in my Command Chair behind my desk, looking off to my left, then turning on occasion and looking out the window, over the parking lot and the Fairgrounds beyond. The sun was getting low in the southwestern sky beyond those Fairgrounds.\n\nCindy and Paulina were sitting in the hot chairs. Finally, I turned to them and said \"First of all, what she gave me is not going to help us find Dawson's killer. She has no knowledge. All she told me was rumor and innuendo.\"\n\n\"Some rumor.\" said Cindy. \"Some innuendo. I haven't seen you like this since Westboro was alive.\"\n\n\"Tell you guys what.\" I said. \"I need to think about this. Paulina, seriously, do what you need to be doing. I'll get with you when I have a case to present.\" Paulina nodded, knowing I wasn't going to tell her what I knew. She left the office. You get one guess who was not about to leave.\n\n\"Do I need to be your next-in-line subordinate,\" Cindy asked, \"or your blood kin at the moment?\"\n\n\"I'm not sure how well cousins are covered by family immunity privilege.\" I said. I then turned to face her. \"I'll put this much out to you: what is the motive for killing these four people?\"\n\n\"Geesh...\" said Cindy. \"We've been trying to figure that out for days.\"\n\n\"True.\" I said. \"And if the answer was a rattlesnake, it woulda bit us on the nose. Why kill these people?\"\n\n\"To silence them?\" Cindy guessed. \"Because they knew something?\"\n\n\"Yes. Good.\" I said. \"So... they know something, it's a secret they have in common, and they all died for it. Who benefitted by their death?\"\n\n\"Innova Discs.\" said Cindy. \"They're making a small fortune selling Pink Panthers.\"\n\n\"True, but that's another issue.\" I said. \"What's the other reason? What's the other link they had in common?\"\n\n\"The University?\" Cindy said \"Oh, wait... Dr. Camp is linked, too... she's suing them over being fired for whistleblowing... about athletes getting favorable treatment over grades!\"\n\n\"Okay, that's all I'm going to give you now.\" I said. \"I've got to get some seriously good advice about this, and you're not my lawyer.\"\n\n\"Wow, that big?\" Cindy asked. I didn't reply. I just left the office.\n\n* * * * * * * * * * * * * * * *\n\nI was sitting on the deck of the Cabin in the darkness. I could see the light of a train coming out of the western horizon, then making the curve south. The fire pot had come in; it was now installed in front of the furniture, with room to walk around it along the railed edge of the deck.\n\n\"Nice fire pot.\" I heard a voice growl from behind me. It was Chief Griswold. \"Your wife called, said you were acting weird... weird for you, that is. So what's up?\"\n\n\"Have a seat, Chief.\" I said. \"The fire does make things cozy. Can't cook trout on this thing, though.\"\n\n\"Har! No, you can't. So, what's up?\"\n\n\"I'm not sure I can tell you.\" I said, staring forward. \"If I tell you, you might consider yourself obligated to do something. Right now, the secret is mine alone.\"\n\n\"So you solved the Pink Panther crimes?\" asked Griswold.\n\n\"I have the answer.\" I said. \"Once I have the answer, the solution should be easy to find.\"\n\n\"But you're not sure you want to?\" asked the Chief.\n\n\"The damage that will be done,\" I said, \"may be far worse that solving these crimes; the original crimes will be exposed, and once that cat is out of the bag, there is no putting it back in.\"\n\n\"Well,\" said the old Chief, \"I've faced some tough choices in my time. Good cop crosses the line, for good reasons but he crosses the line... let it go, or destroy his career? I guess what you're thinking about is worse?\"\n\n\"Much worse.\" I said. \"The original perps are dead. But the ramifications of this will harm hundreds of people, maybe thousands. If I say nothing, maybe it goes away. But then there's the other problem... an innocent man is in prison, because of this. And if I say nothing, he stays in prison, falsely accused... or he's murdered in there.\"\n\n\"Ohhhh,\" said the Chief, \"Quint Danielson. You figured it out... Val said you would. And he said something about it being so ugly that you'd have this problem on your hands. Was he right?\"\n\n\"Yes sir.\" I said simply.\n\n\"Don,\" said the Chief, \"I'm not your blood kin, I\"m not your father... but you need to let this out. If not to me, find a priest or your lawyer, or Cindy, and let it out. If you don't want to tell me now, it's okay, I understand. If you do tell me, nothing will make me tell the secret. I'm an old man, my life is nothing in the balance anymore.\"\n\n\"Nonsense.\" I said. \"You've got a long life ahead of you... and one making a difference. But you understand that if I tell you, we're both in the same world of shit.\"\n\n\"I understand.\" said the Chief. \"And Clan Crowbar pinky swear, or whatever the hell it is you guys do.\"\n\nI smiled briefly, then the crushing burden took back over. \"Okay.\" I said, knowing the Chief was right, that I had to get this out. \"I've discovered that Coach Brian Harlan and Coach Speedy Gonzales were truly evil men, and for a lot more than peddling drugs. I can only summon up what they did in one word...\"\n\n\"...Sandusky.\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "big cock",
        "drama",
        "police drama",
        "crime drama",
        "iron crowbar"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/pink-panther-ch-03"
}