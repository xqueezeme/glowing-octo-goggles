{
    "title": "Savage Desire Ch. 05",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nJeremy Stanton vs. Ryan Hicks\n\nSorry for the late submission folks. Had to put this on hold to handle an urgent family issue. Do pardon me for all the errors you're likely to come across. I haven't been able to edit the chapter much.\n\nDedicated to I_am_Midnight\n\nBonding!\n\n***\n\nRyan heard the door to the washroom open just as he opened the tap to wash his hands. He turned his head to see which other lecturer was free like he was at that time of day and smiled in surprise when he saw a pretty curvy blonde in sportswear.\n\n\"You've got the wrong washroom Miss.\" Ryan said with a chuckle.\n\n\"Wanna bet?\" Sporty lady purred as she turned around to face the door. She recited some words and then turned around to fix a predatory gaze on Ryan. \"Professor Ryan Hick.\" She purred, slowly advancing towards Ryan as if she had all the time in the world. \n\n\"Do I know you?\" Ryan asked with a curious frown. Something was off about the lady. \n\n\"I haven't had the displeasure.\" She drawled. \"So you're the so-called mate huh? I can smell him all over you.\" She smirked.\n\nOh God! Ryan felt his stomach quiver and the hairs on the back of his neck stand up. Although he couldn't smell her, he would have bet his last cent she was a werewolf. And from the disdain in her eyes, one of Jeremy's lovers. Shit! 'Jeremy?' He quickly called his mate on their mind-link but couldn't get any response. Why wasn't Jeremy answering, Ryan wondered.\n\n\"Don't bother, little wolf.\" The lady said, accurately reading Ryan. \"Jeremy can't hear you.\" She turned to give the door behind her a cursory glance. \"You see... I've warded the door shut. He can't come in here and your thoughts can't reach him, thanks to the barrier. And Vincent...\" She chuckled. \"Let's just say the silly warrior saw every other person but me.\"\n\nWhat did she mean by that, Ryan thought confused. \"Listen Lady, whatever you're planning on doing, please don't.\" Ryan said quietly even as he felt the beast inside him crouch in readiness to attack.\n\n\"Ow come on don't be a pussy.\" Her short laughter didn't reach her eyes. \"It's very unattractive to beg. Name's Camille by the way. And I'm here to fight you.\" \n\nWith that short announcement, Camille opened her palms and pointed all ten fingers towards the ground, releasing very nasty looking claws.\n\n\"Oh my god...\" Ryan breathed.\n\n***\n\n\"What the...\" Jeremy gasped when he felt a sudden crackle of power in the air. He threw the magazine he was reading on the table and jumped to his feet. Someone was wielding so much power around, which was rather strange. 'Ryan?' He called to his mate through their link but there was no response. Shit! 'Vincent?' He called to Ryan's assigned bodyguard as he rushed out of Ryan's office. \n\n'Alpha, I'm out here.' Vincent started towards Jeremy when he saw his alpha emerge from Ryan's office with a worried look on his face. \"Is everything alright, Alpha?\"\n\n\"Magic.\" Jeremy breathed. \"Did you see Ryan?\"\n\n\"He went to the washroom.\" Vincent turned to follow Jeremy when the alpha started towards the washroom. \n\n\"Sure you didn't see anyone come this way apart from Ryan?\" \n\n\"No. My eyes were on him the whole time. He was alone.\" Vincent said as he tried the washroom door. But it wouldn't open. \"Why did he lock it?\"\n\n\"He didn't.\" Jeremy rasped. \"Camille is here.\" He growled.\n\n\"But I didn't see...\"\n\n\"You wouldn't. She cloaked herself.\" Jeremy rasped. \n\nBeings such as warlocks and witches could cast cloaking spells to mask their presence, preventing others from seeing them and learning of their activities. Camille was his only lover with that power. She'd obviously made herself invisible to Vincent. Camille was half werewolf, half warlock. Her mother, who was responsible for her warlock side, was one of the eight council members of the pack. She was a very powerful warlock who was over a century old. And like her mother, Camille was powerful and smart. But Jeremy hadn't thought Camille would attack Ryan too as she'd always been a very reasonable person. Apart from the fact that they hadn't even fucked in over three months, Jeremy thought she would rather use her powers to curb that thirst for a battle with his mate. He'd obviously thought wrong. \n\n\"The bitch!\" Vincent muttered. Then remembering who she was to the alpha, he added; \"Sorry Alpha.\" But it was obvious he didn't mean it. With an angry grunt he gave the door a hard kick. \n\n\"Don't bother.\" Jeremy muttered, looking furious. \"It's warded.\" He said as he climbed up the wall to see what was happening inside the washroom through the sealed mini windows.\n\nWhat he saw broke his heart.\n\n***\n\n\"Please stop.\" Ryan gasped as he tried to shield his face. His shirt was torn to shreds and there was blood all over. His blood.\n\n\"Shouldn't you be fighting back?\" Camille taunted. \"How disappointing. And you call yourself an alpha's mate?\" She brought her already bloody claws down forcefully to slash at Ryan's back. Blood gushed out. \"I honestly thought we were going to fight. But I guess this is going to be a kill. Works for me just fine.\" She sneered but surprisingly, never went for the kill.\n\nRyan went down on his knees. He wanted to fight back so bad. His wolf was going crazy inside but for some reason, he just couldn't get his body to obey his command to attack. Ryan had never been more confused since the night his life changed. Why couldn't he fight? Hell, even if he were human, he would have instinctively fought back to defend himself. So Ryan didn't understand why he seemed to be frozen. He felt exactly as he'd felt when Jeremy ordered him in that voice of his to stay put whilst he violated him. He felt so helpless. Maybe it was due to whatever magic Camille was using. But even she, seemed shocked at his behaviour. Ryan had a feeling Blondie would have taken him out already if she really wanted to kill him. The only positive thing was that although he'd lost so much blood and as a result, felt weak, the numerous slashes on his body seemed to be healing. But Ryan knew that unless he got out of the mess he was in right then, he would probably bleed to death. Where was Jeremy when he needed him, he wondered desperately.\n\nBehind the door, the alpha took a deep breath. \"Stand back, Vincent.\" He said quietly...too quietly.\n\nJeremy didn't know why his mate wasn't fighting back. Ryan was a smart guy. What his mother had taught him alone should equip him to take on someone like Camille physically. He knew Camille had only warded the door because she wanted no distraction as she challenged his mate. She sure as hell wouldn't immobilize Ryan with a spell and just beat him up. That was not the style of a werewolf. Fighting and defeating an opponent fair and square in a clean fight was what they saw as a sweet victory. They craved that. So he didn't understand why Ryan was not fighting back. And Jeremy knew that if he didn't get in there and stop the madness, his mate would bleed out. But Camille had used a magical shield to keep that door shut. And the only way he could get in there was to turn on his own magic...his Ojah powers. Much as he knew the madness that could follow if he turned his humanity off, the Alpha knew he didn't have a choice.\n\n***\n\nRyan heard the door crash open and looked up gratefully. But when he saw his mate, a gasp of terror tore out of his throat as his pulse raced with foreboding. No! He would pick the vicious Camille over a red-eyed Jeremy any day.\n\nCamille stumbled backward, barely catching herself with a hand against the wall. The raw power emanating from the alpha left not only Camille, but even Ryan completely weak from trepidation.\n\n\"Jeremy...\" Camille breathed, her eyes wide with fear.\n\nThe red-eyed alpha stretched out an arm and opened his palm. Both Ryan and Camille gasped at the purplish fireball that appeared in that palm. They didn't have to be geniuses to know where that fireball was going to land in the next few seconds. The direction of the murderous red eyes said it all. Camille's eyes were filled with terror. She knew her end had come. Even Vincent shook with fear.\n\n\"Jeremy, don't!\" Ryan screamed.\n\nRyan watched as Jeremy slowly turned his eyes on him. A whimper tore out of his throat as he stared into the eyes that terrified him to his very soul. The man standing before him was not his Jeremy at all. He was someone else...something else. And he didn't look like he even understood what Ryan said. The fireball got bigger. Ryan knew that if it dropped, there would be chaos. But most importantly, he knew Jeremy would hate himself afterwards. He had to do something to stop Jeremy from dropping that ball. But what could he do? Ryan turned to look at Camille and saw tears squeezing past her tightly closed eyelids. Definitely no help from that end. He looked past Jeremy to Vincent. The visibly trembling warrior raised his eyes off the cell phone in his hand and stared at Ryan with a look of absolutely helplessness. Ryan knew he had to act. He had to get over his fear of the monster and get to his mate. \n\nRyan pulled himself to his feet. Then he started towards Jeremy on shaky legs. When he got to his red-eyed mate, he wrapped one arm around his waist and placed the other on his chest...where he could feel his heart beating. Then with a voice throbbing with an emotion which brought warmth into the hearts of their audience, Ryan spoke to Jeremy.\n\n\"Come back to me Jeremy.\" Ryan said softly. \"I know you're in there. And I know you can hear me. Please, come back to me.\" He laid the side of his face against Jeremy's chest. \"Please I need you. I need you to take care of me. No one can do it as you do. I don't want anyone to. That's your job. So please come back to me.\"\n\nWhen Ryan heard a whoosh sound, he tensed up, thinking Jeremy had dropped the fireball. He squeezed his eyes tightly shut, ready for the worst. But then he felt Jeremy's arms wrap around his shoulder and cradle the back of his head. And even before he heard his mate's voice, Ryan knew he was back.\n\n\"Thank you.\" Jeremy whispered shakily, burying his face in Ryan's hair. \"Thank you. Thank you.\" He kept whispering.\n\nBehind them, a shocked Stan stared with huge eyes. When Vincent had sent both him and Philip messages telling them about the situation, they'd both panicked. He had been closer to the school so he'd quickly rushed there. And he'd gotten there just in time to hear Ryan talk Jeremy down. That had never happened in the history of Ojah. They didn't get talked down. They snapped back in their own sweet time or when something forced them to. Definitely not a talk! \n\n\"Take her to the pack house, Vince.\" Stan ordered curtly. Camille lived in her lovely house outside the pack house. She was a medical doctor and a very brilliant individual. But of course when the beast inside wanted to have its way, there was no stopping it.\n\n\"Jeremy, I'm sorry.\" Camille sobbed as she was led away.\n\nBut the alpha didn't even raise his head. His massive body shook against his mate as he tried to calm down. Besides the fact that he'd seen his mate being hurt, he'd almost killed a pack member for something she had no control over. Jeremy knew he had to get Ryan to the pack hospital to be checked out but he just couldn't bring himself to release his hold on him.\n\n\"Why didn't you fight back?\" Jeremy's voice shook.\n\n\"I couldn't.\" Ryan signed, feeling very weak. \"I wanted to but my body just wouldn't obey my mind.\"\n\n\"How so?\" Jeremy whispered.\n\n\"I don't know how to explain it.\" Ryan raised his head but Jeremy put it back on his chest. \"It was like that time.\" He said quietly. \"When you compelled me to...stay put whilst you...\" Ryan trailed off.\n\n\"Shit.\" Jeremy gasped. \"She couldn't have compelled you. She can't.\"\n\n\"She didn't.\" Ryan responded. \n\n\"Jer, you did.\" Philip said from behind Jeremy. \"We have to take Ryan to the hospital. He's lost a lot of blood.\"\n\n\"I'm fine.\" Ryan said quietly. \"Just weak. I just need to change my clothes and lie down for a while.\"\n\n\"No, Prof.\" Philip countered. \"You're going home and that's final. I can't...\"\n\n\"What do you mean I did, Lip?\" Jeremy turned eyes filled with worry and confusion onto his friend.\n\n\"You compelled him the day he shifted for the first time not to ever attack a pack member.\" Philip said quietly. \"Camille is pack.\"\n\n\"Oh my god.\" Jeremy gasped. \"I caused this. And I almost killed...fuck. If I'd dropped that...\"\n\n\"Hey, listen to me.\" Ryan reached up to cup Jeremy's cheeks in his palms. \"If you'd really wanted to drop it, you would have.\" He said with conviction. \"You didn't have to wait till I tried to stop you Jeremy. Think about it. You didn't want to hurt us. So snap out of whatever self-hatred you're sinking yourself in and take charge like you always do.\" Ryan gave a slight smile then. \"I find that very sexy.\" He murmured. \n\nJeremy visibly calmed down after hearing Ryan's words. \"I need to fix this.\" He whispered. \"Otherwise you can never defend yourself. I can't believe I forgot that.\" He groaned.\n\n\"We all forgot, Jer.\" Philip said quietly.\n\n\"Yeah, but he's my mate Lip. I shouldn't have forgotten.\" Jeremy muttered.\n\n\"In your defense, you were not exactly...you when you compelled him.\" Philip drawled. \"But I agree the earlier you fix it, the better for all of us. And that is why we have to get back to the house immediately.\" \n\nPhilip was still shocked at what Stan had told him. He couldn't believe Ryan had actually talked Jeremy out of that Ojah influence. To the Beta, Ryan had instantly become the most important individual in the pack. Being able to control an Ojah was a very big deal. And Philip resolved to ensure that no harm ever came to Jeremy's mate. That suddenly became his number one obsession. \n\n\"How are you going to fix it?\" Ryan asked quietly, stepping out of Jeremy's arms. Ideally, he would have handed Jeremy his arse for taking away his will and almost getting him killed by none other than his lover. But he didn't want the man to feel any shittier than he already did so he curbed that urge.\n\n\"Same way he got you to see the pack as untouchables.\" Philip rasped. \"Come on Prof. We have to get you home.\"\n\n\"I'm not going Philip.\" Ryan said stiffly as he looked down at his tattered shirt. \"I just need a shirt.\"\n\n\"Jeremy?\" Philip virtually growled, waiting for the alpha to back him up. \"A little help...\"\n\nJeremy looked torn between his Beta who was clearly exasperated, and his adamant mate. But in the end, safety for his mate reigned high.\n\n\"Ryan please...\" Jeremy sighed.\n\n\"No. It's just an hour lec...\"\n\n\"You're not safe here.\" Philip growled with clenched fists. \"Anyone can attack again. And again you'll be a sitting duck. Jeremy needs to take care of that immediately.\" \n\nSince Jeremy had compelled Ryan in his wolf state, Ryan needed to shift into a wolf for Jeremy to undo what he'd done. And since it wouldn't be appropriate for Ryan to shift at their current location, they needed to go back home immediately. Philip had expected Jeremy to simply order his mate to go home. But guilt was obviously eating at the Alpha, making it difficult for him to be firm with his mate. It was therefore up to him to get Ryan to see reason. \n\n\"Your life is more important than some one hour lecture, Ryan.\" Philip sighed. \"I don't want anything to happen to you.\" He whispered with so much feeling Jeremy reached out to grasp the shoulder of his visibly shaken Beta.\n\n\"Hey...\" The alpha rasped.\n\n\"I thought we agreed you wouldn't take your eyes off him.\" The veiled accusation from Philip made Jeremy's jaw clench.\n\n\"It was my fault Philip. I asked him not to follow me in here.\" Ryan defended.\n\n\"The Jeremy I know would have come anyway.\" Philip growled. \"No one tells him what to do and what not to do.\" The Beta fixed his intent gaze on his alpha. \"You're getting soft.\" His mumble was directed at the alpha. \"More than soft actually. Your brain is liquefied.\" \n\nAn angry growl erupted from Jeremy. \"Are you...\"\n\n\"You know I'm not challenging you.\" Philip said evenly, cutting Jeremy off. \"I can never do that. I understand that you feel you have to allow him to have his way. But know that it can...\"\n\n\"Hello... Will you stop talking about me as if I'm not here?\" Ryan cut in, actually amused. It was surprisingly refreshing to see the friends disagreeing on something. It made them seem...normal. \"Alright, you win Philip. I'll go home. But we need to fix the...\" He trailed off when he noticed that the door was actually intact. He turned to look behind him and saw that there was no trace of his blood on the floor. Had he imagined what had taken place? \"How...\"\n\n\"Stan made Camille fix it before taking her away.\" Philip informed Ryan as he led the way out of the washroom.\n\n\"Is she a werewolf or a magician?\"\n\nPhilip couldn't help his laughter. \"Both. Half warlock, half wolf.\" \n\n\"Really?\" Ryan looked shocked. \"You have those too? Her parents...\"\n\n\"Uh-huh.\" Philip seemed to be enjoying Ryan's shock.\n\n\"A werewolf married a war...\"\n\n\"Mated, Prof.\" Philip cut in smoothly. \"Get your terminologies straight.\" He drawled, making Ryan laugh.\n\n\"She must be pretty powerful then.\"\n\n\"She sure is.\" Philip nodded. \"But don't worry, the next person to come at you is not going to live to tell the tale.\"\n\nA frown marred the space between Ryan's brows at Philip's words. \"This is about me, Philip.\" Ryan said quietly. \"I'm not you. In my world when someone gets in your way, you outthink them. You don't end them.\"\n\n\"Yeah, yeah, yeah we'll see.\" Philip said dryly as he opened the door to Ryan's office.\n\n\"Jeremy...\" Ryan turned to implore Jeremy to help him sway Philip but the dejected look on his mate's face stopped him. He waited by the door till Jeremy entered the office. Then he locked the door, grabbed the alpha's hand to draw him to the couch, and then gently pushed him into it. \"Hey, you okay?\" He asked softly.\n\nJeremy raised his eyes to look at his beautiful pale mate. He'd lost a lot of blood, thanks to him. \"I'm so sorry Ryan.\"\n\n\"For what?\" Ryan asked, crouching before Jeremy.\n\n\"Everything.\" The alpha whispered.\n\nRyan went quiet for a moment, and then got to his feet and began to shrug out of his ruined shirt. \"I still need a shirt.\" He muttered, reaching for his blazer. \"Should have made her fix my shirt too.\" He mumbled. Surprisingly, he didn't feel as weak as he'd been immediately after the attack. \n\n\"Vincent is bringing a change for both of you.\" Philip assured him.\n\n\"Great.\" Ryan said as he sat beside Jeremy on the couch and cuddled against him as if it was the most natural thing in the world. All he wanted to do was offer comfort to his troubled mate. And when Jeremy's arm went around him, he gave a sigh of contentment and turned beautiful green eyes on Philip. \"Now tell me all about warlocks.\"\n\nPhilip laughed. Even Jeremy couldn't suppress his amused chuckle. But even that light fun couldn't get rid of the alpha's unease. Was he really going soft as Philip had said? Was he being too soft where Ryan was concerned? Coming from Philip, it had to be true. If the other wolves got any hint of the possibility of their alpha going soft, there would be challenges. Jeremy wasn't afraid he would lose a challenge. He just didn't want to hurt any member of his pack. To avoid any of that, Jeremy knew he had to be firm. How he reacted to his mate when they were alone was his business. But where people were watching and listening...expecting him to act in a particular way...the right way, Jeremy knew he had to act right. It was time he made Ryan know his place.\n\n***\n\nRyan couldn't help but feel sorry for the doctor as he checked his vitals. Dr. Sanders, the head doctor, wasn't in so one of the junior doctors was attending to Ryan. It was obvious the man was nervous. Who wouldn't be with Jeremy, Philip and Stan standing around with grim looks on their faces? ",
        "\"Gentlemen, why don't you sit down?\" Ryan tried but couldn't mask the amusement in his voice. When none of the men acknowledged his suggestion, he sighed and looked at the doctor. \"I think those three need medical examination even more.\" He muttered.\n\nThe doctor looked alarmed for a moment, then a chuckle burst from his throat. \"I'll pass.\" He muttered.\n\n\"You know we can hear you right?\" Stan asked just as the door opened to reveal a regal looking Gloria. \"Everything alright, Mama G?\" He asked.\n\n\"Couldn't be better.\" Gloria responded as she placed her handbag on the table in the room and started towards the bed. \"Hey sweetie.\" She smiled as she sat beside Ryan on the bed. \"How are you feeling?\"\n\n\"I'm good.\" Ryan grinned. \"But these three insisted I get checked out so... Looking good.\"\n\n\"Thanks. Not looking too bad yourself. Lovely shirt. But you do reek of blood.\"\n\n\"I know. Lost a lot, thanks to your son and his...Camille.\" Ryan grunted as he sat up.\n\n\"He's okay Alpha.\" The young doctor informed Jeremy. \"Nothing a good rest can't sort out.\"\n\n\"Good.\" Jeremy nodded, moving from where he stood. \"Come with me to the bathroom Ryan.\" The alpha walked briskly towards the en suite washroom.\n\nRyan looked at the others and blushed. He knew that at least Philip and Stan knew the reason Jeremy needed him in the bathroom but that didn't stop him from being embarrassed. What would the doctor and Gloria think? \n\n\"Can't we sort that out when we get back to the roo...\"\n\n\"Now Ryan.\" Jeremy ordered as he entered the washroom.\"\n\n\"The earlier the better, Prof.\" Philip said quietly as the doctor hastily left the room.\n\n\"I'll be waiting for you.\" Gloria said softly as Ryan got out of bed. \"It's necessary he rectifies it now.\"\n\n\"You know?\" Ryan whispered. And at Gloria's nod, Ryan gave a sigh of relief and went into the washroom.\n\n\"You really should stop challenging me when I say things.\" Jeremy said immediately the door shut behind Ryan. \"If you hadn't stopped me from accompanying you to the washroom, that attack could have been prevented.\" His angry growl shocked Ryan.\n\n\"Jeremy...\"\n\n\"Is it too much to expect you to just do as you're told?\" Jeremy's eyes flashed angrily. \n\n\"I don't think you're being fair to me right now Jeremy.\" Ryan gasped. \"Let's not forget that if you hadn't compelled me to leave your pack alone, I would have been able to defend myself.\" Ryan said in a voice filled with pain and shock. \n\n\"Do you have any idea what I would have done to you...in that state...if you had attempted to attack any member of my pack as freshly shifted werewolves are known to do?\" The alpha snapped.\n\n\"That didn't give you the right to fuck with my mind and forget about it.\" Ryan retorted, his fists clenching by his sides.\n\n\"I admit I shouldn't have forgotten.\" Jeremy answered smoothly. \"But I would appreciate it if you don't question my directives where you are concerned. As alpha and your mate, I know what's best for you and you'll do well to remember that.\" He said curtly. \"Now strip and shift.\"\n\n\"You can't throw orders as...\"\n\n\"Now!\" Jeremy bellowed. It wasn't his compelling Alpha voice but the authority it packed couldn't be ignored. \n\nRyan and the three inside the room who could clearly hear the argument between Jeremy and Ryan, gasped at the command. It was obvious the alpha was angry at Ryan. Without a word, Ryan began to strip with shaky fingers, the only indication of his anger being his flushed face. He was so angry he didn't want to be in the same place as Jeremy. In fact Ryan wanted to be so far away from Jeremy at that point that he literally felt a wall go up in his mind. When he was completely naked, he went on all fours and shifted. The beautiful white wolf stood quietly, its eyes downcast, waiting for the alpha to do whatever he wanted to.\n\n***\n\nBack in the room, Gloria, Philip and Stan were very worried. \"He's angry at himself for putting Ryan's life in danger.\" Gloria whispered. \"And he's taking it out on him.\" She sighed.\n\n\"I think it's my fault.\" Philip exhaled harshly and began to pace. \"I told him he was going soft.\"\n\n\"Why the fuck would you say something like that?\" Stan snapped as Gloria gasped.\n\n\"When Ryan told me Jeremy didn't go with him to the washroom because he asked him not to, I got angry.\" Philip groaned.\n\n\"Who would have thought someone would actually be bold enough to attack at such a place?\" Stan asked stiffly. \"Besides he knew Vincent was out there. He must have thought Ryan was safe just as we all thought.\"\n\n\"I wasn't thinking okay.\" Philip groaned, combing his fingers through his hair in frustration.\n\n\"They'll be fine.\" Gloria said softly, rubbing Philip's back soothingly. \"But wait till you find your mate darling. You'll see just how difficult it is to go against their wishes.\" She chuckled. \"Now my problem is that Jeremy always went in for really strong and brave women. I mean look at what Lara made me do to her. She just wouldn't listen to reason. She...\"\n\n\"What did you do to her Mama G?\" Stan asked with a naughty grin on his face.\n\n\"I broke her arms.\" Gloria said with an even wider grin on her face.\n\n\"What did I tell you Lip?\" Stan shook with laughter. \"I knew you would do something brilliantly outrageous like that Mama G.\" Stan laughed as Philip shook his head in amusement. Jeremy's mother had never liked the relationship between her son and Lara, who was her age. This was more like payback. \n\n\"So you see, his kind of women wouldn't care who is around or where they are. They would attack whenever they want to.\"\n\n\"Yeah, I know what you're talking about, Mama G.\" Stan said with a naughty smile on his face. \"SS for Life.\" He grinned, making Philip laugh despite himself.\n\n\"I've heard you idiots say that before.\" Gloria murmured with a curious look on her face. \"What's SS?\" She fixed her hard gaze on Stan when Philip groaned.\n\n\"Strong and sexy.\" Stan grinned.\n\n\"I see.\" Gloria said slowly. \"Well, it's come back to bite all of you in the arse hasn't it? You boys...\"\n\nShe trailed off when the door to the bathroom opened to reveal an angry and embarrassed looking Ryan, followed by Jeremy who had an unreadable expression on his face.\n\n\"Hey, are you okay?\" Gloria asked Ryan softly, glaring at her son who had the grace to look shamefaced.\n\n\"I'm fine. Thanks.\" He didn't go back to the bed. Neither did he sit. He just stood quietly, clearly waiting to be told what to do. He had to be careful in his actions in order not to invite any further humiliating treatment from his mate.\n\n\"Shall we?\" Jeremy said in a hoarse voice and left the hospital room, followed by his friends, mother and a mate whose thoughts he strangely couldn't read.\n\nThat was so unlike Ryan, the alpha thought. The Ryan he knew would be cursing him silly in his mind by then.\n\nWhen they got out of their cars in front of Jeremy's mansion, they met yet another challenger who stood between them and the entrance. This one was Katie Steven, a drop dead gorgeous black lady, who was not only a warrior but was also a famous model. She wore the tiniest jeans shorts, a sexy black tube top which covered just her boobs, and no footwear. She obviously meant business.\n\n\"Katie...\" Stan bellowed. Katie was on his squad. She was one of his best warriors and he sure as hell didn't want Jeremy or Philip wounding her.\n\n\"Leave her to me, Stan.\" Ryan said, shocking everyone.\n\n\"Ryan...\" The warning in Jeremy's voice was clear.\n\nRyan turned to face Jeremy. \"If I'm the alpha's mate, and I always have to stand aside whilst people handle my shit for me, will I ever gain the respect of the pack?\" He asked quietly. \"Would you respect me? Already, you don't.\" He said bitterly, noting the regret that flashed across Jeremy's face. \"Allow me to stand up for myself.\" With that, an extremely angry Ryan started towards Katie.\n\n\"Good.\" Katie said as she watched Ryan walk towards her. \"Let's get this over and done with, Pussy Boy.\" She began to strip, her intentions clear to everyone present. She was going to fight in her wolf form.\n\nA collective gasp went up from the people gathered, not only at Katie's words, but also at how she intended to fight. They'd already heard that the alpha's mate hadn't been able to defend himself against Camille. The alpha had to step in to save Ryan. A still shocked Camille had already told some friends of hers what had happened on campus. And the news had already spread like wildfire. So seeing a seasoned warrior such as Katie get ready to fight Ryan struck fear into the people. Some screamed. Philip shifted instantly, ruining his clothes. Gloria's hands clutching at her chest whilst Stan reached for a gun filled with silver bullets which he always kept inside his boots for rogues. Jeremy stood quietly, his heart pounding inside his chest, his wolf going crazy inside him. But he kept his cool. He had to trust his mate. Ryan was right. If he was going to gain any respect from the pack, he had to show them that he was strong enough to rule beside their alpha.\n\nPussy Boy? Really? The double meaning of that name wasn't lost on Ryan. He didn't need to be a genius to get the meaning behind the name. Obviously Katie was not only referring to the fact that he was Jeremy's bitch, but also to the fact that he hadn't been able to fight Camille. Ryan got so furious he began to shake.\n\n\"Stand down everyone.\" Jeremy commanded, shocking not only his friends and mother, but also the people gathered around watching the showdown. And it was quite a number of people.\n\n\"She's a warrior, Alpha.\" Stan rasped, his eyes widening with dread as he watched Katie leap towards Ryan, shifting midair. \"Oh god, Jeremy.\"\n\n\"Stand down!\" Jeremy repeated.\n\nRyan's eyes followed the she-wolf hurtling towards him. He could tell from the gasps and screams from some of the people gathered that they were scared for him. Ryan knew he should be terrified but somehow...surprisingly, he rather felt a sudden energy and calm fill him. He felt himself raising his hand...almost as if everything was happening in slow motion. And then to his amazement, the wolf, which was still in motion...hurtling towards him, froze midair. Ryan heard the shocked murmur that went up from the people gathered but didn't even turn to look at them. His gaze was riveted on the whining wolf which dangled midair as if it was being held up by invisible ropes. To say Ryan himself was shocked would be too mild a statement. He didn't waste time dwelling on it though. He would later, but at that very moment, he needed to tell Katie his piece. Ryan Hicks was no pussy boy.\n\n\"Katie...right?\" Ryan said with a tilt of his head. \"I've always been a gentleman, darling. And a gentleman doesn't fight ladies. The other thing is that I actually feel silly talking to a wolf though I know you can hear me. Last but not least, I'm a very reasonable person so I want to give you the chance to talk back. So I'm going to humbly ask you to shift back.\" \n\nWith that, Ryan slowly brought his raised hand down, lowering Katie's wolf to the ground. The wolf immediately shifted to a naked Katie. Although she didn't look frozen anymore, she didn't look like she was going to move from where she stood.\n\n\"Now I know you werewolves don't mind nudity.\" Ryan said. \"I'm one now, but I do mind and I don't think it's fair to the lady to remain nude whilst every other person is covered. Can someone please...\" Even before he could complete what he was saying, his friend, Clara appeared beside Katie with a kaftan which she gave to Katie. \"Thank you Clara.\" Ryan said with a quick smile in Clara's direction.\n\n\"What are you going to do to me?\" Katie asked after pulling on the kaftan. There was a note of fear in her voice. But then, who wouldn't be terrified if a mere werewolf was exhibiting so much power?\n\n\"Nothing.\" Ryan shrugged, moving closer to Katie. \"Like I said, I don't fight ladies. Besides I'm thinking you probably want to earn respect or points or whatever, from the pack by...taking me on. I understand. Really, I do.\" Ryan's intense green eyes bore into Katie's. He neither looked angry nor amused. But the power emanating from him could be felt by everyone present. \"Just a word of caution though.\" He took a pause...for effect. \"Don't fuck with me.\"\n\nWith that chilling caution, Ryan walked right past a stunned and shaky Katie, and entered the foyer. He didn't use the elevator. He went directly to the stairs and actually got to the twelfth floor faster than an elevator would have. He began to strip even before he got to his room. And he was under the shower even before his door slammed shut. And as the water poured over him from all six showerheads, Ryan's silent tears mingled with it. What had he become? Could wolves act the way he'd just acted? He didn't think so. Gloria hadn't told him anything of that sort. Besides, he could feel the shock from the people gathered. But it had felt so natural, not to mention exhilarating. He could still feel the adrenaline pumping through his veins. What was happening to him? What kind of monster was he turning into? He'd hated seeing the humiliation on that beautiful lady's face. Was that what he'd become now? Someone who wielded a lot of power and used it to humiliate others? Although he felt Katie hadn't given him much choice, he still hated what he'd done to her. \n\nJeremy was in Ryan's room, leaning against the door with his arms folded across him chest when Ryan came out of the bathroom with a towel wrapped around his waist. He didn't miss Ryan's slightly reddened eyes when their eyes met briefly. He didn't have to be a genius to know that Ryan had been crying. \n\n\"Are you okay?\" Jeremy's voice was gruff with concern. He was still shaken by the power Ryan had displayed downstairs. \n\nBut Ryan headed for the closet without answering him. He pulled on boxer briefs under the towel around his waist, and then went back to the bathroom to hang the towel. When he came back to the room, he went to pull on a pair of jeans and a t-shirt. Then he went to sit behind the huge mahogany desk in the room.\n\n\"How many more must I expect?\" He asked quietly whilst booting his computer. \"Two attacks alrea...\"\n\n\"Three.\" Jeremy cut in. \"Mum went to...fight one before she came to the hospital to see you.\"\n\n\"Really? She didn't look like someone who'd been in a fight.\" Ryan said, searching for a document on the computer as if he was not under attack. \"Do I take it your...lover is okay?\"\n\n\"Ex...lover.\" Jeremy rasped. \"I hear both of her arms are broken.\" He shrugged. \n\n\"Ouch.\"\n\n\"She'll heal.\"\n\n\"Sucks to be her.\" Ryan muttered staring at the screen. \"Is she also as hot as the other two?\"\n\n\"Ryan...\"\n\n\"What? You want me to trash-talk your lovers?\" Ryan abruptly got to his feet. He looked restless. \"Where's your mum?\"\n\n\"Downstairs.\" Jeremy responded. \"Why?\"\n\n\"I want to go for a run with her.\"\n\n\"This is not a good time Ryan.\" Jeremy groaned, rubbing his eyes. \"Besides, you heard the doctor. You need...\"\n\n\"I'm fine.\"\n\n\"You don't look fine to me.\" Jeremy said softly as he watched Ryan shutting down the computer. He could clearly see that his mate wasn't himself. All that power must surely feel unsettling. Jeremy wanted to hug him so bad but he just knew Ryan wouldn't welcome it. He was still angry at him for the way he'd spoken to him at the hospital.\n\n\"You just have to take me for my word, don't you?\" Ryan bent to buckle his sandals and headed for the door. \"Later.\" He threw over his shoulder.\n\n\"Ryan?\"\n\nRyan paused at the door with a hand on the handle. He didn't turn to look at Jeremy. \"What?\"\n\n\"Please answer me when I communicate on our link.\" Jeremy said hoarsely. \"I know you can take care of yourself but...please.\" He whispered.\n\nWithout answering, Ryan left the room and his worried mate.\n\n***\n\n'I hear you broke someone's arms.' Ryan murmured.\n\nThe wolves of the elderly warrior and the alpha's mate were lying beneath a tree, relaxing after sharing a deer after a long run. \n\nGloria snorted. 'She's had it coming for years. Trust me. What mother would be okay with her son fucking someone her age? Bitch had the nerve to tell me she planned on killing you. On hindsight I should have made her come and face you.' Gloria chuckled. 'What you did to Katie... Damn!' \n\n'That was awful.' Ryan groaned.\n\n'That was badass.' The brown wolf laughed. \n\n'What was that?' Ryan groaned. 'Am I okay? Jeremy told me I would gain some abilities after he marks me. But he hasn't even done that. Is something wrong with me?' The white wolf sounded worried. \n\n'You're perfect hon. You're the alpha's mate. And a powerful alpha at that. Don't be shocked at anything.'\n\n'It sure did feel good though.' Ryan sighed. 'Thanks Gloria. For taking care of the other...lady, whoever she is. I hope she's fine though.' He said quietly. 'I hate the idea of people getting hurt because of me. Katie...I could feel her humiliation. And I hated it. Even Camille... She could have killed me if she really wanted to. And I could feel her regret afterwards.' Ryan sighed. 'Jeremy says there're going to be more attacks.'\n\n'From what I saw you do today, you can handle any attack with cheeky ease darling.' Gloria said with so much pride in her voice.\n\n'Yeah, but I'd rather I didn't have to handle any at all.' Ryan groaned. Both wolves went quiet, lost in their own thoughts, till Ryan broke it. 'Tell me what happens during a mating ceremony.' He asked softly. She'd already explained sometime back that a mating ceremony was for only alphas who found their mates.\n\n'Ryan, Jeremy doesn't want you to feel you have to...'\n\n'Yeah, but his ladies won't give me a break. Your son sure does know how to pick em, Ma'am.' Ryan said, making Gloria burst into laughter. \n\n'Tell me about it.' Gloria laughed.\n\n'I just want it all to stop. Then I can also go about my work in peace. Tell me about the ceremony please.'\n\n'Well it's actually a celebration. If you must know, the whole pack is already looking forward to it.' She grinned. 'It begins by you picking any warrior of your choice to fight. Some people pick their mates. But like I said, the choice is yours. If you defeat the warrior, the alpha will declare you the winner and then present you to the High Priestess for blessings from Luna. Then he will proceed to show everyone just how proud he is of you.'\n\n'And if I'm defeated?'\n\n'That's not going to happen because your mate will step right in and save the day if he feels you're in trouble.' Gloria laughed. 'Then he'll still proceed to declare you the winner, present you to the High Priestess for blessings and...show how much he appreciates you.'\n\n'And what if I pick my mate to fight me? What then?'\n\n'He'll let you win. And still show how proud...'\n\n'You keep adding that showing how proud he is bit. How exactly is he going to show...'\n\n'He'll have sex with you Ryan.' Gloria sighed. 'Right there, in front of the whole pack.'\n\n'Oh my fucking god!' Ryan gasped. 'You must be kidding me.'\n\n'I kid you not, honey. He will mark you during the act, to show you're his. The way he takes you will show the pack how much he cares for you, wants you and how happy he's going to make you.'\n\n'Sex does not mean happiness, Gloria.'\n\n'Wait till you're given great sex.' Gloria muttered, making Ryan thank his stars he was in his wolf form. His whole body would have turned bright red in embarrassment if he were human.\n\n'That is preposterous.' Ryan couldn't believe what he was hearing. The whole pack would see his dicks. He couldn't have that. 'With all the pubs...'\n\n'No, Ryan. Only wolves from twenty-one going up will be present.'\n\n'That doesn't make me feel any better.' Ryan muttered. 'Then after the sex, what?'\n\n'The various heads will pledge their loyalty to you by kissing the back of your hand. The heads of the warriors, sentinels, hunters, assassins, medics, scouts, pup watchers, and the omegas. Each Beta and Elder would have to pledge to you though, not just their heads. Though they're supposed to kiss the back of your hand, some naughty ones may choose to lick you wherever they want to. It's allowed. It's fun and celebration.'",
        "'That's outrageous.' Ryan muttered.\n\n'Wait till they do it.' Gloria laughed. 'You'd wish everyone would actually take a lick instead of a mere kiss to the hand. The whole idea is to catch your scent and keep it. There are more potent places to catch a werewolf's scent than the back of the hand if you ask me.' She drawled.\n\nThe white wolf's eyes went wide. Everyone knew which part of the body was more potent. 'You think people will actually...'\n\n'Honey, we're werewolves. We thrive on getting down and dirty.'\n\n'Shit.'\n\n'So after all those kisses and lick, which will probably cause another bout of intercourse, the official part of the ceremony would be over. Then the real fun will begin. It's actually a short ceremony but fun-packed. Will begin around five p.m. and end the following day with virtually everyone passed out.'\n\n'I see. No exchange of rings?'\n\nGloria laughed. 'If you want a ring, tell Jeremy to get you one. We don't do rings.'\n\n'I was just asking, jeez.' Ryan muttered. 'Besides, I don't need anything from him.'\n\n'Settle down, sweetie. Everything of his automatically becomes yours too, after the ceremony.'\n\n'How do you mean?'\n\n'Just what I said. We're supernatural beings. And that ceremony is the highest level of bonding. What did you expect?'\n\nA shiver slithered down Ryan's spine at the 'highest level of bonding' part. He couldn't help the image that flashed through his head, of Jeremy fucking him. \n\n'Christ, Gloria, I don't...I don't think I can...take your son again.' Ryan whispered, grateful again that he was in his wolf form. 'He's...ugh...I'm sure you know what he's packing seeing as you lot don't mind nudity and all. If the pack expects to see happiness on my face, I think they're in for great disappointment because I can't pretend to love it when that thing is destroying me.' Not to mention the fact that his own dicks will be on display.\n\n'Ryan, I said he has to prove to his people that he can make you happy. So let him worry about that okay. How he makes you enjoy it is not your headache. You're just going to.'\n\nRyan didn't know what to do. Knowing what he knew at that moment, could he still go through with the ceremony? If he wanted the attacks to stop, he had to do it. If he wanted the violence and humiliation of pack members because of him to stop, he had to go through with the ceremony. Why make enemies when it could be avoided. If he wanted to be able to go to work in peace, he had to do it. He couldn't risk some crazy lover hurting any of his students. If he wanted to be able to move about freely, he had to do it. The thought of no bodyguards was too good to pass on. Basically if he wanted his life back, he had to stop thinking about his dread of Jeremy's dick and the dread of displaying his dicks for all to see, and simply get marked. \n\n'Fuck. The mark...it hurt like a son-of-a-bitch that time Jeremy bit me.' Ryan gasped, remembering the excruciating pain he'd had to endure.\n\n'This time, it's going to be the sweetest pain ever.' Gloria said wistfully. 'You've never experienced anything more intense and sweet, Ryan. Thrust me. You'll probably beg him to bite you every day after that. It's going to be an experience you're not going to forget for as long as you live. Get ready to get your mind blown.'\n\n'Shit.' Ryan buried his face between his front paws. Just the thought of what Gloria described was making him hard. 'Are you going to be there?'\n\nGloria chuckled. 'Don't worry, I'll leave after the blessings. The members of the council usually leave after the blessing if they want to. Seeing how the thought of my presence bothers you, I'll definitely leave.' Gloria couldn't mask her amusement.\n\n'I appreciate it. Thanks.' Ryan muttered.\n\n'So you're going to do it?' Gloria was actually surprised.\n\n'What choice do I have?' Ryan sighed.\n\n'You always have a choice Ryan.'\n\n'Fight those women till one of them finally sends me into the afterlife?'\n\nGloria laughed, but then sobered up and said quietly; 'Or reject him.'\n\nRyan gasped at the sharp pain that flashed through him at the thought. 'That's not an option.' He said breathlessly. He knew then, that Jeremy was already a part of him. And there was no way he could destroy part of himself.\n\n'Thanks Ryan.' Gloria said shakily. \n\n'Thank you, Gloria.' Ryan knew that Gloria would have been in tears had she been human at that very moment. \n\nThe white wolf moved closer to the brown wolf and quietly cuddled against her for hours till it was time to leave.\n\n\"Talk to Jeremy.\" Gloria walked slowly beside Ryan as they left the woods. \"You'll have to meet the council. I'll arrange for a meeting tomorrow morning.\"\n\n\"Why do we have to meet them?\" Ryan asked, taking a leaf out of Gloria's hair.\n\n\"Jeremy needs to officially introduce you to us. Then you have to tell us about your plans. Like...when you want the ceremony to take place and whether we're okay with the time.\"\n\n\"Okay. But I want it to be done tomorrow.\" Ryan said with all seriousness. \"The earlier, the better Gloria. I want all these attacks to stop. For as long as they continue, your son is not going to allow me to go anywhere on my own.\"\n\n\"Honey, you have both my good self and Joel on the council.\" Gloria drawled. \"That ceremony will take place tomorrow if that's what you want darling.\"\n\n\"You're an angel.\" Ryan kissed Gloria on the cheek. \"Thanks.\"\n\n\"Anytime sweetie. I'll call you in the morning to let you know the time for the meeting, okay?\"\n\n\"Sure. Thanks Gloria.\"\n\n\"That name had better change after the ceremony.\" Gloria growled, making Ryan laugh.\n\nAnd as he rode the elevator to his floor, Ryan was filled with indefinable relief. Although he was still pissed off at Jeremy for the way he treated him at the hospital earlier that day, he couldn't wait to tell him his news. For once, he was going to say something to his mate that he knew would make him happy. Ryan couldn't wait. \n\nWhen the elevator door finally opened, however, Ryan froze at what he saw! Right there in front of him stood a virtually naked Jeremy, with his fingers tangled in the hair of a very naked female whilst the two of them stared intently into each other's eyes.\n\nRage and pain slammed into Ryan, pushing him to the raw edge of violence. He couldn't have suppressed the angry growl that tore out of his throat even if his life had depended on it.\n\n***\n\nJeremy hadn't even heard the ping of the elevator because he was too engrossed in what he was doing...compelling Isabel to leave his mate alone. When he heard Ryan's angry growl, he felt his blood turn cold in his veins because he knew how the scene of him and the naked Isabel must have looked to his mate. Fuck! But before he could even speak, Isabel was torn forcefully from his grasp so fast it was almost a blur. He heard her terrified whimper and turned his head to see Isabel, held against the wall by an invisible force. She couldn't break free. Jeremy turned his eyes on his mate. This time, his hand wasn't even up as it had been with Katie. Ryan was holding Isabel with his mind.\n\n\"Ryan, it's not what you think.\" Jeremy said gently. \"Let her go.\" \n\n\"What am I thinking?\" Ryan asked with dangerous softness, his eyes on Isabel.\n\n\"I...I don't know.\" Jeremy gasped when it finally dawned on him. Ryan had blocked him out. Though they were linked, he couldn't read Ryan's thoughts because his mate had finally figured out how to block people out of his head. And just when he needed to know what his beautiful mate was thinking too. Just great! \"I don't need to read your mind to know what you're thinking Ryan.\"\n\nIsabel's whimpers turned into painful groans. \"Ahh...he's crushing my bones Alpha.\" She cried in pain.\n\n\"Ryan let her go now.\" Jeremy breathed, getting extremely worried. \"If you hurt her, you'll never forgive yourself.\" He took a step towards Ryan. \n\n\"Do I look like I care?\" Ryan asked quietly. All he wanted to do was destroy the woman who had dared come after his man.\n\n\"You do, Ryan.\" Jeremy began to panic when Isabel's cries of pain increased. \"Please don't. I'll explain what you saw. But only after you trust enough, to let her go. You can do it baby. Please.\" The alpha didn't even notice the endearment that fell naturally from his lips.\n\n\"But I know what I saw.\" Ryan growled, his breath coming out harshly.\n\n\"And you know me.\" Jeremy answered. \"Go with your gut.\"\n\nRyan suddenly looked like he couldn't catch his breath. He began to pant harshly through parted lips. Isabel fell to the ground and moaned her relief. Ryan finally turned his head to look at Jeremy with terrified eyes. He couldn't believe what he'd done. Jeremy quickly closed the distance between them, cupped Ryan's cheeks in his palms, and covered his mouth with his. The alpha's intention wasn't to kiss his mate. He breathed with him. When Ryan got his breathing back under control, Jeremy wrapped his arms around him and just held him. \n\n\"What have I become?\" Ryan whispered against Jeremy's neck. \"I could have killed her. I wanted to kill her. Oh my god. What's happening to me?\"\n\n\"You were angry.\" Jeremy soothed. \"She'll be fine.\" Then Jeremy raised his head to look at a miserable looking Isabel. He'd never thought someone like Isabel would feel compelled to attack Ryan too. She was an omega for fuck's sake. They were not violent. Besides, she was a really gentle person...nothing like Jeremy's usual preference. \"Are you okay, Isabel?\" At her nod, Jeremy gave a sigh of relief. \"Get out of here.\"\n\n\"She's naked Jeremy.\" Ryan said, stepping out of Jeremy's embrace. He took out his keycard and opened his door. \"Come in Isabel. I'll give you something to wear.\"\n\nThe girl looked shocked. She looked up at her alpha with wide eyes. At his encouraging nod, she stood up and followed Ryan into his room. Jeremy entered too and closed the door behind him. Then he watched as Ryan took out a pair of sweatpants and a t-shirt out of his closet and handed them to Isabel who quickly pulled them on.\n\n\"Thanks.\" Isabel said in a small voice when she finished dressing. \"I'm sorry I came to fight you.\" Her shaky voice was barely above a whisper. It was obvious she was close tears.\n\n\"I'm sorry I hurt you.\" Ryan said quietly. \"But know that he's mine. And I don't want to share him with anyone.\" \n\n\"No one would want to if he were theirs.\" Isabel said quietly. Then she turned to face Jeremy but wouldn't even meet his eyes. \"I'm sorry alpha.\"\n\n\"Take care of yourself Isabel.\" Jeremy said softly.\n\nThey both watched Isabel hastily leave the room. Then Ryan folded his arms across his chest and glared at Jeremy. \n\n\"Care to tell me why you were all over a naked woman?\"\n\n\"What do you mean I was all over...\" Jeremy sighed. \"She wanted to attack you too, Ryan. I was only compelling her to forget about you and go home.\" \n\n\"With her naked and you in fucking boxer briefs?\" Ryan stared pointedly at the ridiculously large bulge at Jeremy's groin. At least he didn't look hard. \"Was that the only way you could compel her?\"\n\n\"You know being naked in our world is not really a big deal Ryan.\"\n\n\"Well, put yourself in my shoes, darling.\" Ryan's sarcasm wasn't lost on Jeremy. \"She's naked, you're like that, you're staring into each other's eyes like you're about to lock lips...\"\n\n\"The only lips I'd like mine to be locked with are yours, Ryan.\" Jeremy said softly. \"And the sooner you get that into your head the better for all of us.\" He fixed his intent gaze on Ryan for a moment before explaining; \"Her brother called to tell me she was going into the woods to...deal with you.\" Jeremy couldn't suppress his amused smile at the thought of Isabel dealing with his mate. \"Mum would have killed her, Ryan. She's an omega. Well, she has a gift of copying but she's still an omega and therefore of lower rank. And the thought of her attacking someone like you would have pissed mum off royally. Philip too would have killed her if he'd gotten wind of it. So I had to act. I opened my link to her and asked her to come here.\"\n\n\"So you have links with all your lovers.\" Ryan couldn't believe how jealous he was. It was a shitty feeling.\n\n\"I have links with everyone in my pack.\" Jeremy said slowly and loudly as if he was talking to someone who was dumb. \n\n\"Don't.\" Ryan bristled at his mate's patronizing tone. \"Don't do that.\"\n\n\"Sorry.\" Jeremy had the grace to look guilty. \"My plan was to meet her downstairs and compel her out of whatever plan she had. But the silly girl tricked Clara. She entered as you, making Clara think it was you coming up. I was waiting for Clara to call to tell me she was here so...\" He pointed at himself, referring to his state of undress. \"Then I smelt her...right out here, and rushed out. When she saw me, she panicked and shifted into her wolf, destroying the clothes she...you...she was wearing.\" Jeremy groaned. \"Her plan was probably to wait for you to come out of the elevator directly into a full attack. I commanded her to shift back and compelled her...just as you came out and found us.\" He sighed. \"I can never cheat on you Ryan. You should know that by now. You said it yourself. You own me.\"\n\nRyan snorted. \"That just came out. I don't know why I said that.\"\n\n\"Because it's true and you know it.\" Jeremy went to stand in front of Ryan and drew his head to his chest. \"Are you okay?\" He pressed a kiss against his silky white hair.\n\n\"You make me crazy.\" Ryan growled softly, making the alpha smile. \"You could have compelled her in her wolf form. She didn't have to be naked in your arms.\"\n\n\"Trust me, that would have been more intimate.\" Jeremy explained. \"I didn't want that.\" \n\nRyan nodded. \"We need to talk.\" He sighed.\n\n\"You're too tensed up. Come on, we'll sit in the Jacuzzi and talk. It will soothe your tense muscles.\" Jeremy started towards the connecting door.\n\n\"I'll just brush my teeth and...\" He could still taste the deer he'd shared with Gloria in his mouth. \"Jeremy?\" Ryan called softly.\n\n\"Yes Ryan?\" Jeremy stopped and turned his head to look at Ryan.\n\n\"I'll appreciate it for you stop barking orders at me.\" Ryan said quietly. \"I'm not your servant or some troublesome kid who needs to be ordered around. We're the same age in case you've forgotten. I didn't like what you did at the hospital. It was humiliating and...annoying. I may question your directives, state my opinion...it doesn't mean I'm disrespecting you. I'm a teacher, Jeremy. I research. I ask questions. Why do we have to do it this way and not that way? I want to understand everything. That's just the way I am. Though you are the alpha and all, I expect to be accorded some respect just as I'm sure you expect to be respected. I hope that's not too much to ask.\" \n\n\"No it's not.\" Jeremy said in a low voice as he turned fully around. \"I'm sorry for how I acted earlier.\" Jeremy didn't think it was necessary to outline his reasons. \"It won't happen again.\"\n\nAt Ryan's nod, the alpha turned around and disappeared through the door.\n\n***\n\nRyan sat in the Jacuzzi with his eyes closed in pleasure, listening to Jeremy's voice as he spoke to someone on phone. Jeremy was on the phone when Ryan had come in with a towel around his waist. He'd gestured for him to go into the bathroom whilst he continued his conversation. There was an opened bottle of Krug Clos d'Ambonnay with two filled glasses on the ledge of the Jacuzzi when Ryan entered Jeremy's huge bathroom. He'd sat back in the bubbling water and helped himself to the smooth, expensive champagne although he wasn't really a fan of alcohol. But he'd been through a lot that day, Ryan thought. A little booze wouldn't hurt, he told himself. And so far, Ryan was loving both the champagne and the exquisite feel of the massaging heat against his body. He didn't even notice when Jeremy stopped talking.\n\n\"Feels good doesn't it?\" Ryan heard Jeremy right beside him and opened his eyes.\n\n\"Feels great.\" He purred, pointing at the bottle of champagne. \"Trying to get me drunk?\"\n\n\"I have no ulterior motive here if that's what you're driving at.\" Jeremy drained his own glass and climbed inside, opposite Ryan without taking off his boxer briefs. \n\nThe alpha knew that those boxers could definitely not hide his erection if he got one. But he just wanted to make an effort to conceal it...when it eventually reared its head as he knew it would. Hell, he was in a Jacuzzi with the most gorgeous guy on earth. An erection was a given.\n\n\"Champagne.\" Ryan murmured. \"Care to tell me what we're celebrating?\"\n\n\"My badass mate.\" Jeremy grinned. \"All that use of power today...you sure you're okay?\"\n\n\"I'm fine. I honestly thought there was something wrong with me. But Gloria says I'm fine.\" Ryan took a sip of his champagne. \"She said because I'm your mate, these things...shouldn't be strange.\"\n\nYeah right! Jeremy thought to himself. Blame it on the Ojah Alpha, Mama. \"She's the elder.\" Jeremy shrugged. \"How did it feel? Using all that power... Seeing yourself in total control like that...\"\n\nRyan gave a deep sign. \"It felt...natural. I felt like I could do anything. I was in control the whole time. I knew I could stop at any point.\" Ryan said. \"But it also made me hate myself.\" He added quietly. \n\n\"At least you were in control.\" Jeremy mumbled with a faraway look in his eyes. \n\nRyan couldn't help the pity he felt for Jeremy at his words. He could imagine how disturbing it would be not to be in control of your actions. \"Sorry.\" He murmured.\n\n\"I'm used to it.\" Jeremy said quietly. \"Just make sure you never allow it to control you okay? Hey, are you okay?\" Jeremy asked with worry when he saw Ryan's eyes close and his head begin to fall back.\n\n\"I think I'm getting drunk.\"\n\n\"No, you're not. It takes a lot for a werewolf to get drunk. You're nowhere near there.\" Jeremy said.\n\n\"Dude, I don't drink much. In fact I hardly do. This is sorta going straight to my head.\"\n\nJeremy turned his head to look at the bottle of champagne and let out a whistle. \"You must really like this then.\" He chuckled. The bottle was already down to half. Ryan had obviously taken in a lot.\n\n\"Oh it's good. In fact everything feels good.\" Ryan raised his head to take another sip. \"Thanks for suggesting this.\" \n\n\"What did you want to talk to me about?\" Jeremy relaxed and watched Ryan from beneath his lashes. \n\nBut instead of answering, Ryan slipped down into the bubbly water for about two seconds and then came out, laughing at the look on Jeremy's face. \n\n\"Oh my God, you are drunk.\" Jeremy watched as Ryan drained the glass. \"Okay, that's it. No more champagne for you. Come here.\" \n\nJeremy leaned in and drew his mate to him, making him sit between his legs so that Ryan's back was plastered against his front. When Jeremy wrapped his arms around Ryan's waist from behind, he gave a sigh of contentment and leaned the back of his head on Jeremy's shoulder. \n\n\"Damn, you feel so fucking good against me.\" Ryan murmured, closing his eyes.\n\n\"Hey, don't sleep.\" Jeremy chuckled. \"Time for you to tell...\"\n\n\"I want us to go through the mating ceremony.\" Ryan blurted out.\n\nJeremy froze. That was the last thing he'd expected to hear from his mate. \"Is that the booze talking or...\"\n\n\"Dude, I'm not that drunk.\" Ryan drawled. \"I'm serious.\"\n\n\"Are you sure?\" Jeremy wanted nothing more but he couldn't help but feel Ryan was not ready for it. \n\n\"I thought that was what you wanted.\" Ryan retorted but without anger.\n\n\"What do you want?\" Jeremy shot back.\n\n\"I want us to do it.\" Ryan said simply.\n\n\"What are your reasons?\"\n\n\"Why do I get the feeling you're trying to talk me out of it?\"\n\n\"I'm doing no such thing.\" Jeremy protested firmly. \"I only want to know the reason for the change of heart.\"\n\n\"That scene with you and that naked woman alone should make me change my mind, don't you think?\"\n\nJeremy turned his head to look at Ryan's relaxed face. His eyes were drawn as if by magnet to Ryan's full lips. Fuck he wanted to kiss those lips so bad. Jeremy looked away.",
        "\"Give me your other reasons.\" Jeremy insisted. Going through the mating ceremony was a huge step. And he definitely didn't want Ryan regretting it afterwards because that would be even more devastating to his wolf. \n\n\"Okay, here goes.\" Ryan started. \"I want the attacks to stop. I don't want to make enemies with your...with pack members. I hate moving around with a bodyguard. I don't want any avoidable incidents in school. I hate not doing what's expected of me. Did I say how much I hate moving around with a bodyguard?\"\n\n\"Uh-huh.\"\n\n\"Don't get me wrong...I love Vincent. I just want to be free to go and come as I please. Are those enough reasons or you want more?\"\n\n\"That makes sense.\" Jeremy said. \"But I...\"\n\n\"I'm ready to do this with you, Jeremy.\" Ryan said quietly. \"I...you're a part of me now. I might as well have it all. I want to know how it feels like to be really mated to you.\"\n\n\"You can't take it back if you decide you don't like it after going through it.\"\n\n\"I don't plan on changing my mind. I want this.\" He whispered, wincing when Jeremy's arms suddenly tightened around him. \"Oooh ease up.\" Ryan murmured, tapping Jeremy's arm to get him to loosen his hold.\n\n\"Sorry.\" Jeremy whispered throatily as he turned his head and buried his face in Ryan's wet hair. He began to lightly rub Ryan's flesh to soothe the pain his squeezing had caused. \n\nRyan could feel Jeremy shaking against him, knew how overwhelming his acceptance had been to the alpha, and remained quiet to enable Jeremy process the news. They sat that way...in silence, for a long moment, with Jeremy absentmindedly rubbing Ryan's skin. But the fact that Jeremy was only trying to soothe the flesh he'd squeezed didn't register in Ryan's brain. Each languid stroke, rather than soothe Ryan, was beginning to arouse him unbearably. He knew that the bubbling water wouldn't hide his growing arousal for long. Shit!\n\nJeremy finally broke the silence. \"Do you know what the ceremony entails?\" He asked, raising his head from where it had been buried in Ryan's head.\n\n\"Gloria told me all about it this evening. She's going to set up a meeting with the council so that you can officially introduce me tomorrow. Hopefully they'll allow us to do it tomorrow.\"\n\n\"Are you sure you want this?\" Jeremy asked shakily. \"The pack will...see you.\"\n\nRyan knew exactly what Jeremy was talking about. He turned his head and looked up at the side of Jeremy's face. \"I know.\" He said quietly. \"It's okay. Just try not to hurt me too much.\" He said in a small voice. \n\nJeremy turned his head to look at his mate's face. \"You have my word.\" Came his hoarse whisper.\n\n\"I'll hold you to it.\" Ryan answered in a voice as smoky as the look in his eyes. \"So...do we shake or kiss on it?\" He asked huskily, his heavy-lidded eyes hot on Jeremy's mouth.\n\n\"What do you want?\" The alpha husked, the blatant arousal in his mate's eyes stirring a deep craving inside him.\n\n\"I want to kiss you so fucking bad right now.\" Ryan whispered, swallowing hard.\n\n\"What's stopping you?\" Jeremy breathed.\n\nThat was all the encouragement Ryan needed. He turned around and straddled Jeremy. There was no time for words. He cupped the alpha's face and slanted his lips over his. The kiss started out soft and slow, with Jeremy allowing Ryan to lead. But when Ryan slid his hot, wet tongue between Jeremy's lips, the kiss became something else. Boy did he kiss the alpha. Ryan probed deep, running his tongue along the ridge of Jeremy's teeth, the roof of his mouth and then finally sucking erotically on Jeremy's tongue. Jeremy was so shocked at the intense ripple of delight that streaked down his spine he moaned hoarsely into the kiss. His senses reeled as desire pumped through him.\n\n\"Fuck!\" Jeremy growled, tearing his lips from Ryan's. Deep blue eyes stared into lust-glazed green ones, both men breathing hard. Jeremy didn't know what to think. For an inexperienced person, Ryan was hotter than hell. The man's mouth set fire to his senses. Jeremy had never wanted anyone as much as he wanted Ryan that very moment. \"Damn Ryan...\" With that husky whisper, Jeremy leaned forward to claim and devour his mate's moist mouth. He kissed Ryan senseless. \n\nMaybe it was because skin was touching skin, or it was the excitement brought on by their upcoming mating ceremony... But that kiss was more intimate, intense and explosive than any of their previously shared kisses. They both wanted it...wanted that rush that kissing each other never failed to bring. It was wild and mind-numbingly good. When Ryan began to unconsciously gyrate against the rock hard cock beneath his arse, Jeremy groaned as though he was in pain. The alpha tore his mouth away with a gasp, his eyes wild.\n\n\"Don't do that.\" Jeremy gasped breathlessly against Ryan's swollen lips. \"I don't want to lose control.\"\n\n\"I'm sorry.\" Ryan whimpered, his eyes fluttering shut. \"But I need to...\" Even as he spoke his hand slipped between them to grasp his hard throbbing dicks. \"I...\" He trailed off when Jeremy pulled his hand off his dicks. \"Jer, please...\" Ryan sounded desperate. \"I can go to my room if...\"\n\n\"You're not going anywhere Ryan.\" Jeremy rasped. \"You beat off too fucking much.\"\n\n\"Jeremy...\"\n\n\"Let's try something else. Tell me what you enjoy doing to yourself besides beating off.\"\n\n\"Christ, Jeremy this is not the time...\"\n\n\"Hey?\" Jeremy leaned his forehead against Ryan's. \"Look at me.\" He whispered and waited till Ryan open lust-glazed eyes and stared into his. \"Tell me. Apart from these bad boys,\" he rubbed his thumb against both slick tips, drawing a tortured gasp from Ryan, \"what other part of your body do you love touching?\" Jeremy pressed a soft kiss against Ryan's temple. \"Tell me.\" He whispered, tracing the outer shell of Ryan's ear with his tongue. \n\n\"Oh god.\" Ryan emitted a sputtering cry as his eyes fluttered shut again. \"Jer...\" His broken whisper was filled with hunger. \n\n\"Tell me.\" Jeremy started to nibble gently on the edge of Ryan's ear, his fingers lightly...sensuously stroking his back the whole time. \n\n\"My nipples.\" Ryan whispered, feeling his heartbeat accelerate. The sound of Jeremy's voice, his words, his touch... The Alpha was driving him crazy...in a sensual way.\n\n\"Good.\" Jeremy's warm breath tickled Ryan's earlobe. \"How about we try to get you off without touching these guys?\"\n\n\"That's not possible.\" Ryan couldn't recognize his own voice. He felt...drunk on lust.\n\n\"From what I've read, it is actually.\" Jeremy reached out and traced a circle around one of Ryan's pebbled nipple, loving the uncontrollable moan that tore out of Ryan. \"So responsive.\" He lowered his head so that his breath gusted hot over a nipple. \"Just let yourself go and feel.\" With that seductive directive, Jeremy stroked his rough tongue across a turgid peak in a long, leisurely lick. \n\n\"Oh fuck!\" Ryan shuddered as if liquid electricity had been poured into his veins. He'd always had really sensitive nipples. And the sensations he felt from Jeremy's tongue was too delicious he felt short of breath. Then as if that wasn't breath-stealing enough, Jeremy bit down lightly on the nipple. \"Jer... Oh god...\" Ryan trailed off when Jeremy drew the distended nipple into his warm mouth and began to suck on it with rhythmic pulls. Ryan couldn't believe the intensity of pleasure that assailed his senses with each pull. \"Ahhh...\" The sensations that Jeremy's mouth on his nipple brought was like nothing Ryan had ever felt.\n\nJeremy licked, sucked and worried the taut flesh in his mouth relentlessly, loving the ecstatic sounds pouring out of Ryan's mouth. His own nipples were not at all sensitive so Ryan's reaction was both interesting and exciting to see. He would scrape his teeth over the nub, bite down on it gently, then soothe the sweet sting by rubbing the tip of his tongue back and forth across the nub whilst simultaneously pulling and rolling the other with his fingers. He was driving Ryan crazy and he knew it. Jeremy pulled off the hardened flesh and blew on it, feeling Ryan tremble.\n\n\"Like it?\" Jeremy murmured, closing his lips around the other nipple. \n\n\"You know I do.\" Ryan whimpered breathlessly as his hands went to Jeremy's head to hold him to his chest. \"Please don't stop...oh god...\" He gave a shocked gasp. Whatever Jeremy was doing to that flesh in his mouth felt so good Ryan couldn't suppress his cries and whimpers of ecstasy. His whole body bucked violently against Jeremy, causing the sensitive rough underside of his dicks to rub deliciously against the hairs on Jeremy's ripped tummy. \"So good...\" Ryan cried out his pleasure unashamedly as he writhed in Jeremy's lap. He was so fucking close to coming...and he hadn't even touched his dicks.\n\nJeremy expertly worked those hardened peaks till Ryan was reduced to a quivering mess. But even as he sent Ryan into a meltdown with his mouth, his mind was on what he'd taken great pains to learn about the male body and how to give his mate the ultimate pleasure. He hoped he didn't disappoint Ryan and himself. \n\n\"I'm close...\" Ryan moaned brokenly. \"So close...\"\n\nJeremy released the flesh in his mouth and raised his head to look at his beautiful mate's blissed-out face, ignoring his whimper of protest. \n\n\"Do you trust me, Ryan?\" He asked, dropping a kiss against Ryan's parted lips.\n\n\"You know I do.\" Ryan squirmed on Jeremy's lap, feeling that stiff length beneath his arse. \"Jer...\"\n\n\"Hey, stop that.\" Jeremy growled, tightening his hold on Ryan to still his movement. This was about his mate and not him. He didn't plan on giving his own painfully hard cock any relief so he'd rather Ryan didn't make his situation any more unbearable. \"I'm going to try something.\" Jeremy kissed Ryan's eyes. \"Tell me if it hurts and I'll stop immediately.\" He kissed the tip of his nose. \"Do I make myself clear?\" His lips hovered over Ryan's...waiting for his response.\n\n\"Crystal.\" Ryan whispered and then moaned when his lips were captured and devoured. Fuck, the guy could kiss, Ryan thought, totally dazed. \n\n\"Good.\" Jeremy murmured against Ryan's kiss-swollen lips, then he bent his head and took a nipple into his mouth again.\n\n\"Holy hell...\" Ryan's head fell back as he moaned. He loved it when Jeremy bit that taut flesh. It felt so damn good. If only he could stroke... \"Oh yes...\" He almost sobbed his relief when he felt Jeremy's hand brushing against his dicks. Jeremy was going to stroke him to completion after all. But instead of grasping those throbbing dicks, Ryan felt the hand move down...to his hole. He stiffened.\n\n\"Shh...relax.\" Came Jeremy's warm seductive voice. \"You trust me.\" It wasn't a question.\n\nJeremy gently rubbed against that puckered hole even as he resumed his sucking. He didn't push in. He just caressed it slowly whilst biting, pulling, and sucking the hell out of the flesh in his mouth. Ryan's cries of pleasure couldn't be stifled. Before long, he was rocking against the finger, unknowingly indicating that he was ready for the next step. Jeremy raised his head and dropped tiny kisses along Ryan's jaw and temple as he gently began to push into Ryan's puckered opening.\n\n\"Push out.\" Even Jeremy's whispered instruction sent a delicious shiver down Ryan's spine.\n\nRyan did as instructed and felt Jeremy's finger slowly work its way inside him. The finger was thick but the water eased the penetration. \n\n\"Oh fuck.\" Ryan breathed, feeling the stretch. There was no pain. There was just a feeling of fullness and surprisingly, a spark of pleasure. He didn't even realize he was gasping harshly.\n\nJeremy looked at Ryan's flushed face. He didn't look like he was in pain but Jeremy still asked; \"Does it hurt?\" \n\n\"No.\" Ryan whispered. \"Feels good actually.\"\n\nJeremy felt Ryan's cocks twitching against him and lowered his gaze to look but couldn't see them because of the water. He quickly hit the drain button beside him to drain the water. He needed to not only feel, but see that Ryan was actually enjoying what he was doing. And when those throbbing dicks came into view, Jeremy couldn't suppress his smile of satisfaction and pride. Both cocks were hard against Ryan's belly, spitting precum in gushes. His mate was uniquely beautiful. When Jeremy got to the second knuckle, he stopped and nuzzled Ryan's ear, making him moan and shudder in delight. \n\n\"You okay?\" At Ryan's nod, Jeremy kissed him gently. \"Can I go deeper?\" \n\n\"Yes.\" Ryan breathed.\n\n\"Play with your nipples. And give me your tongue.\" Jeremy instructed and then watched with lust as Ryan began to twist and pull on his nipples. His mate was so sexy it wasn't funny. With a groan, he closed his mouth around Ryan's offered tongue and expertly gave it a slow sensual suck.\n\nRyan felt that tug right inside his throbbing dicks. It was so electrifyingly good he moaned lustfully and bucked against Jeremy, causing the full length of that thick finger to slide completely into his channel... hitting something inside him that caused a bombardment of sensations to explode through his whole body. Ryan's brain short-circuited. His eyes widened with astonishment and then squeezed shut as his body jerked in reaction. He tore his mouth away from Jeremy's and threw his head back with a loud cry of uncontrollable pleasure as his entire body stiffened against Jeremy.\n\n\"Bullseye!\" Jeremy whispered, the tip of his finger rubbing against the nub he'd read about. The prostate. The pleasure button. Ryan's reaction said it all. He was on cloud nine. \n\n\"Jeremy...\" Ryan cried as of its own accord, his hips began to move, rocking against Jeremy's finger. \"F-feels so good,\" he gasped, unable to control the motion of his hips. \"Ahh... don't stop, Jer...\" Ryan virtually sobbed, his fingers never leaving his nipples even for a second.\n\n\"Hot fucking damn!\" Jeremy breathed, his eyes locked on his writhing mate. He'd never seen a more sensual human being. And he'd been in a lot of sexual relations. Lots!\n\nEvery pass of Jeremy's finger over that sensitive bundle of nerves sent jolts of electricity through Ryan's blood and caused a gush of precum to spill out of each dick. The feeling within his cocks was so intense it was almost as if they were going to explode. And they hadn't even been touched. The erratic press of Jeremy's finger against that spot built Ryan's arousal to levels he'd never felt before. He rocked almost frenziedly against that wicked finger, whimpering against the onslaught of sensation that bordered on ecstasy. He knew that he was acting mortifyingly wanton but he was too far gone to care. Whimpers fell out of his mouth as the pleasure in his groin intensified. \n\n\"Jeremy.\" Ryan sobbed as the pleasure built. He was dangerously close to coming. \"Ahh...\" The pleasure was almost too much to bear, he was nearly in tears. \n\nJeremy smiled as he looked at his mate, lost in pleasure. He moved his lips against Ryan's ear, slowly licking along the outer shell, driving his mate wild. \"I'm going to add another finger.\" He whispered huskily. \"Tell me if it hurts.\"\n\n\"Do it, please.\" Ryan almost sobbed. He'd never felt anything so good and intense.\n\nJeremy took Ryan's mouth as he added a second finger. It went in smoothly and if Ryan's loud moans were anything to go by, brought even more pleasure. Jeremy didn't need to be a genius to know his mate loved what he was doing. He rubbed that pleasure spot thrusting his tongue between his lips in the same rhythm that his fingers plundered his body. He'd never enjoyed giving pleasure to another person more, the alpha thought as he tongued and finger-fucked his mate deep and fast. \n\nRyan mewled and grunted with bliss as Jeremy's talented fingers continued to work their magic inside his channel. His hips rocked wantonly, greedily savoring the powerful shock of pleasure every time those fingers pressed against that sweet spot. Then he felt that familiar tingle. That delicious tingle that made his toes curl almost painfully... He tore his mouth from Jeremy's with as muffled gasp.\n\n\"Holy shit!\" Ryan cried, his head thrown back, eyes tightly shut, face flushed with ecstasy. Jeremy had never seen his mate sexier.\n\n\"I've wanted to see you like this for weeks.\" Jeremy murmured against Ryan's kiss-swollen lips, his voice exciting Ryan even more. \"I've been thinking of all the things I want to do to you to blow your mind. I know I couldn't touch you but that didn't stop me from wishing...hoping...\"\n\nThat voice! \"God!\" Ryan shuddered and tensed up. \"Jer...\" His luscious lips were parted and his eyes were glazed with ecstasy. \"I'm...I'm gonna come...\" He gasped, teetering on the edge of a devastating orgasm.\n\nLooking at him, Jeremy couldn't help but think Ryan had never looked hotter.\n\n\"That's it.\" Jeremy breathed as he pressed his fingers against that pleasure spot. \"Let go Ryan. Come for me.\" \n\nA rough animalistic sound tore out of Ryan as he tightened his arse muscles on the fingers embedded inside him. He couldn't have stopped the blissful explosion even if the whole pack had chosen that moment to budge into the bathroom. He came hard.\n\nRyan's entire body shook as cum shot out of one of his dicks, hitting Jeremy on the face, beneath his chin, and all over his chest. And it wouldn't stop...Ryan just couldn't stop coming. His vision blackened as Jeremy's name tore out of his throat. The sensations blazing through him was simply phenomenal.\n\nJeremy kept rubbing that button, milking the hell out of it, feeling Ryan's contractions against his finger as wave after wave swept through him. \n\n\"Oh my God, it's too much.\" Ryan gasped as his thighs locked down, a cry bursting from his throat. \"Ohh fuck, it's too much.\" He was struggling for his very breath. \"No more, Jeremy...please. No more.\"\n\nJeremy gently pulled out of the tight heat and hugged Ryan to him even as he gently massaged Ryan's opening with his fingers. Ryan sagged boneless against him, breathing heavily as tremors continued to ripple through him. Jeremy dotted kisses along his jawline amidst sweet murmurings till Ryan's ragged breathing slowed down. Then the alpha took his mate's succulent lips in a kiss so tender and sweet Ryan felt like crying. He'd never felt as bare and vulnerable as he felt that very moment. \n\nWhen the kiss ended, neither man spoke. Ryan was still blissed out, tiny shudders still wracking through his body. Eventually Jeremy pulled his head back and stared at Ryan who stared right back with wide eyes filled with awe and reverence. The alpha felt so content inside, seeing that look on his mate's face because he never thought he would ever have the privilege of putting it there. He didn't even mind the fact that he was so hard he was in pain. That expression was the highest form of compliment anyone could give him.\n\n\"Are you okay?\" Jeremy murmured. \"Was that too much?\"\n\nRyan suddenly felt a blush creep over his face and wished he could hide his stained cheeks. He was overcome with a shyness that he'd never experienced. But then, it wasn't everyday he allowed a man to explore his arse as he'd just allowed Jeremy. Hell, the man's fingers were still rubbing against his hole and it felt so good he had to make an effort not to demand he slip them inside again. A whimper tore out of Ryan's throat before he could stop it. He shook his head, picking a spot on Jeremy's chin to stare at. He couldn't meet the alpha's eyes so soon after his wanton behaviour. \n\n\"It was amazing.\" Ryan whispered, a slightest hint of mortification in his voice. \"Are you okay?\" \n\n\"Couldn't be better.\" Jeremy murmured, swiping some of Ryan's cum off his cheek and licking it. \"You taste good.\"\n\n\"Oh god.\" Ryan groaned. \"No, I don't.\" He looked embarrassed. \n\n\"Ever tasted your spunk?\" Jeremy drew Ryan's lower lip into his mouth for a quick suck.\n\n\"Christ.\" Ryan groaned when his lip was released. \"Can we talk about something else please?\" He finally succumbed and pressed his face into Jeremy's throat, his arms wrapping around his neck.",
        "Jeremy laughed. \"Like...\"\n\n\"Like the fact that you need to get off.\" Ryan mumbled. \n\n\"Don't worry about me. I just wanted to give these boys a break.\" Jeremy pressed a kiss against Ryan's hair. \"Besides, this is not the first time you've given me blue balls. I'll live.\" He chuckled, getting to his feet with an arm still wrapped around Ryan. \"Shower?\"\n\n\"Shit, my whole body is vibrating.\" Ryan groaned.\n\n\"Don't worry, I'm not letting go of you.\" With that, Jeremy stepped out of the Jacuzzi with Ryan in his arms and headed for the shower.\n\n***\n\n\"See you tomorrow.\" Ryan said quietly when they got back to Jeremy's room after a quick shower.\n\n\"Hey, sleep here tonight.\" Jeremy said softly. \"Please.\"\n\n\"Jeremy...\"\n\n\"You've slept here before...\"\n\n\"As a wolf.\"\n\n\"So... This time it will be just two men...relaxing in bed. Just being with each other.\"\n\n\"Is that one of your...wishes too?\"\n\n\"You have no idea...\" Jeremy said gruffly. \"Please Ryan.\"\n\n\"Alright, alright.\"\n\n\"Thanks.\" Jeremy extended his hand to Ryan with his palm turned upward. At Ryan's confused look, he gestured towards the towel wrapped around his waist. \"Towel.\" Without a word, Ryan removed the towel and gave it to Jeremy. \"Go in and sleep on the side you prefer.\" Jeremy said, gesturing towards where his all-white, massive bed stood on a platform, behind a transparent sliding door. Then he went back into his bathroom to hang their towels. \n\nRyan lounged in the comfortable huge bed and watched as his gloriously naked mate closed the sliding door that cut off the bed from the huge suite. He couldn't help but admire that specimen of male beauty. Ryan unabashedly checked out the man. Jeremy was so big, powerful and breathtakingly virile. Even soft, his cock reached past mid-thigh. Fuck! Ryan watched his hunk of a mate climb the steps that would get him to the bed in which he lay...waiting, and felt such pride within. He was all his...well, soon. He drew the covers aside so that Jeremy could climb in.\n\n\"Thanks.\" Jeremy said as he covered himself and got comfortable on his back. \"You're too far away. Come here.\"\n\nRyan moved closer to Jeremy but the alpha drew him to his side so that Ryan's head lay on his shoulder.\n\n\"Much better.\" Jeremy murmured, pressing a kiss against Ryan's hair. \"Some day huh?\"\n\n\"Tell me about it.\" Ryan chuckled. \"I can never forget it. I finally get to school, only to hear I've apparently been abducted by werewolves.\" He said. \"Well, technically I was.\" He muttered beneath his breath, drawing a soft laughter from Jeremy. \"Then my mate surprises me in class... that was cool by the way. Then I get to know that my mate's lovers want me out of the picture. I get attacked by a half wolf, half warlock medical doctor.\" Ryan managed to sound shocked. \"Makes you wonder about that oath doctors are made to take.\" He muttered. \"Don't they swear not to cause harm or something like that? Anyway, as if the shock of the attack is not enough, I'm not even able to defend myself, thanks to my asshole of a mate...\"\n\n\"Sorry.\" Jeremy murmured but couldn't keep the amusement out of his voice.\n\n\"Shut up. I get home and meet a...hot chic, ready to send me to meet my maker. I surprise myself by...I don't know what I did. But then I decide to go through the mating ceremony to give myself some peace...\" Jeremy growled low in his throat at that reason. \"And also just because I want to...\" Ryan added with a soft laugh. \"Then I come back from my run with my news, and what do I find? My mate in the arms of a naked woman...another hot one by the way.\" He smirked. By now, Jeremy was laughing so hard...but not for long. \"Then I...I end up in a Jacuzzi...\" Ryan's voice went husky. \"And...I... I...\" Ryan didn't know how to articulate what he'd felt. He turned on his side so that he could look at Jeremy. \"I'm given the most exhilarating sexual experience ever.\" He whispered. \"By my mate.\" He went quiet for a moment. \"Would I sound crazy if I say it's been the most exciting day of my life?\"\n\nJeremy tried to speak but couldn't do that past the huge lump in his throat. He cleared his throat and tried again. \n\n\"No.\" His voice was barely above a whisper. \"You don't sound crazy at all.\"\n\n\"I must admit I never dreamt my life would be like this. My old life seems so boring now. With you in my life, it can never be boring. Thank you Jeremy. I know I don't show it but...I think you're an amazing person. You have a good heart. And I couldn't have asked for a better mate.\" Ryan said with so much emotion.\n\nJeremy didn't respond. His heart felt swollen inside his chest. He felt overwhelmed with emotions he couldn't have described if he'd been asked to. He threw an arm across his eyes and remained silent. Ryan wasn't fooled. He rolled onto Jeremy and pushed the alpha's arm away from his eyes to reveal moist eyes. Words were not needed. He kissed each eyelid and then licked at the wetness beneath both eyes. Then still remaining fully on top of his mate, Ryan placed his head on Jeremy's chest and the two cuddled up in the most intimate of sleeping positions. They both knew they had a lot of work to do on their relationship. Their bond hadn't started on a good note. But they were positive that their union, which was to hopefully take place the following day, would be a new beginning for them. All Jeremy and Ryan could do was hope for the best. \n\nAnd with thoughts of their upcoming union on their minds, and hearts filled with hope and contentment, the alpha and his mate drifted off to sleep, wrapped around each other. Not only were their lives going to be joined together by that time the next day, it was also going to be the beginning of the rest of their lives together as mates. If what they'd both been told about an alpha's mating ceremony was anything to go by, it was going to be an exciting day.\n\nLittle did they know..."
    ],
    "authorname": "adjoaq",
    "tags": [
        "attack",
        "ass-play",
        "powers",
        "ryan",
        "jeremy"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/savage-desire-ch-05"
}