{
    "title": "First Days as a Slut Ch. 02",
    "pages": [
        "This is actually part of the first story I wrote. The chapters should be read in order in order to make sense. There are 11 chapters (so far) and they contain many themes of group sex, loving wives, incest, and exhibitionism. I will try to put them in the right categories. \n\nYou will notice that some of the chapters are almost duplicates of stories I've already published. That's because those stories were taken out of this one and edited to be standalone pieces. They are:\n\nBecoming a slut at my summer job\nBecoming a hot mom\nA girl needs comfort \nWatching the pool party\nFriends and family miss the playoffs. \n\nIn this context they are part of a larger narrative. Here those stories are longer and contain other topics as well. Enjoy. \n\n*****\n\nSaturday\n\nIt was Saturday morning. The sun was coming into my room. I opened my eyes and looked at the clock. 9:30. Not bad I thought. I felt rested. I looked over and Cindy was sitting up in bed playing with her iPad. She was still wearing the t shirt and panties from last night. Her shirt bunched up around her waist. She looked really cute. \n\nShe saw I was awake and immediately asked me if we could go shopping, She looked so excited. \n\nI told her to give me time to have coffee and get dressed. Then I made a joke and said, \"There's plenty of time in a day to buy you slutty underwear.\" \n\nShe laughed. \"Slutty,\" she said. \"That sounds so naughty and so fun at the same time.\" \n\nI wondered if I was creating a monster. \n\nI pulled out my iPad and started checking my mail. Something came over me. I told Cindy to smile, and took her picture. \n\nShe asked what that was for.\n\nI said I wasn't sure. She just looked so cute.\n\nShe smiled, said thank you. She said she hoped when she got older she'd be as beautiful as me. \n\nI told her probably prettier. That made her smile. \n\nJust then a message popped up. It was Dave. It both excited and scared me. I knew I should ignore it, but I knew I wouldn't. \n\nI said hi. \n\nWe chatted a bit about nothing and he asked my plans for the day. \n\nWhat the hell. I told him I was taking Cindy out underwear shopping. \n\nHe asked if we were going to get anything good.\n\nI answered, \"That's the plan.\" \n\nHe asked me if he could see pictures of what we bought. He said he'd prefer them on her but just laid out would be ok. \n\nI said, \"We'll see\". \n\nHe then asked what I was wearing. \n\nI had just woken up so I was still in the little cotton boy shorts that didn't cover my ass and a V neck T that stopped above my naval. I told him. I said I was going to throw on a robe and get coffee. \n\nHe dared me to go get coffee the way I was dressed.\n\nThe minute he said it I knew I would. I could feel the tingle of excitement. I knew I shouldn't. I thought about who would be up. My mom, Mark, maybe my brother. Kevin usually slept till noon. It really didn't matter. I knew I was going to do it.  \n\nI got out of bed and told Cindy I was going to get some coffee.\n\n\"Like that,\" she said? \n\n\"Sure, why not, I'm covered.\" \n\n\"Barely,\" she giggled. \"I'm coming with you.\"\n\nI shrugged my shoulders. She looked at me and said, \"Help me pick out a different top.\"\n\n\"Why?\"\n\nShe laughed and said, \"I want someone to at least notice I'm in the room.\" \n\nI laughed with her and we looked in her drawers for something suitable. She was still wearing the white cotton bikini panties. We found red polo shirt of mine. It was a size or 2 too big for her and hung 1/2 way down her ass. The sides were slit just enough you could see skin above the waistband of her panties. We left the top 4 buttons undone. Even as a 32C you could tell she had something going on. \n\n\"Ready,\" I said? \n\nShe looked at me, smiled, shook her head no, and opened the door.\n\nWe both went into the kitchen. We were wrong. Everyone was up. Mom, Mark, Chuck, Kevin, and it seemed Peter spent the night. They all stopped and stared. \n\nMom was the first to say something. It wasn't angry, but it was disapproving. \"Showing a bit of skin there,\" she said. \n\n\"Come on mom,\" I said. \"This is what I sleep in.\" \n\nMark threw in, \"Leave her alone. She looks cute.\"\n\nI'm not sure mom liked that. She gave us both a dirty look. Then she saw Cindy. She was about to say something when Mark spoke up.\n\n\"Well don't you just look adorable this morning,\" he said to his daughter. \n\nShe gave him a kiss. He put his arm around her waist. It pulled her shirt up. Kevin and Peter's eyes nearly popped out of their heads. Cindy's panty covered ass was completely on display. He rubbed her back a bit his hands brushing her panties down a bit. Not a lot. You could start to see the swell of her ass. He saw Peter and Kevin watching and winked at them. He patted her on the butt. \n\nTo everyone in the room, and no one in particular he said, \"Wow, we're lucky guys surrounded by beautiful women.\" \n\nKevin's friend Peter spoke up and just said, \"I wish I lived here\"\n\nEveryone laughed except mom. Cindy and I joined the boys for breakfast and coffee. I made a point of standing on my tip toes or bending over straight legged to get stuff. Cindy watched and copied me. I'm sure the guys got some great views of my ass. I know they did of Cindy's because I got the same views. \n\nIt was fun. It also set the mood for a great breakfast. Usually we all just sit there. Today we talked. The guys paid a lot of attention to Cindy and I. \n\nMark asked us what our plans were for today. Kevin nearly choked when Cindy responded I was taking her out to buy cute underwear. \n\nMark said that he couldn't wait to see what we got. Mom gave him a dirty look. \n\nWith that Cindy and I headed off to our room to get dressed. \n\nDave was still online. I guess in these days of phones and tablets we always are. I told him about breakfast. He asked if the guys were checking us out. I told them they were. He asked how mom reacted. I said she wasn't thrilled but didn't freak. He asked if I had fun. I admitted I did. Then he asked if Cindy had fun. \n\nOn a whim, I asked her. Well, what I said was, \"My friend Dave wants to know if you had fun going to breakfast dressed like that\". \n\nShe said, \"Are you talking to him now?\"\n\n\"Yes\"\n\n\"Well, then tell him it was funny to see the looks on the boys faces\". Then she added, \"Does he want to see what we wore\"? \n\nI was sure he did, but thought I'd tease him. \"Cindy wants to know if you want to see what we wore?\" \n\nDave said, \"of course.\" \n\nI asked if he'd been good. He said of course not. \n\nI aimed my iPad at Cindy. She smiled at me, facing me. You could see a bit of white panty showing under the shirt. Then she bent over smiling at the camera. The shirt gaped open in the front. You could not see her nipples, but it was a great shot of her breasts. \n\nShe stopped me to look at that one. \"Wow, that's hot,\" she said. \n\nI agreed. \n\nShe the then said, \"Take a few more,\" and started posing. \n\nFirst she turned away from the iPad, looked over her shoulder and pulled her shirt up with one hand so you could see her panties and skin. Then she did the same thing but put her thumbs in her panties and pushed them down a bit. I kept snapping away. She didn't stop till the panties were lying in a pool by her feet. \n\nWe got together and looked through them. They were hot. We both agreed. \n\nCindy asked, \"Are you going to send all of those to him?\"\n\n\"Do you want me too?\"\n\nShe thought a moment and said, \"Yes.\"\n\nI told Dave I had a surprise I thought he'd like, and sent the pictures. \n\nHe wrote back, \"Holy fuck, she has a great ass\". \n\nThis made Cindy giggle some more.\n\nI told Dave we were going shopping \n\nWe started to get dressed for shopping. In my mind I kept wondering what Dave would want me to wear. I don't know why. Just when I looked at something, that was the standard I started using. I kept thinking if Dave would like it. I finally settled on a black pleated mini that came about 6 inches above my knee and a tight cami with string straps. No bra. I pulled off my boy shorts and put on a purple and green thong. \n\nCindy looked at me and said, \"You look hot. what should I wear?\" \n\nShe reached to the bottom of her drawer and pulled out a skirt I don't think she'd worn since she was 12. It was off white, pleated, and had an elastic waist. She pulled it on and it barely covered her ass. She then grabbed a white button down shirt just buttoning the 3 buttons in the middle. She didn't tuck it in. Nor did she wear a bra. It was not as long as the skirt and when she moved you got a glimpse of navel. She looked cute A little on the sexy side. \n\nShe started going through her underwear drawer. She looked at me and said, \"We're going underwear shopping everything here is dull. Do I even need to wear any?\"\n\nIn my mind I thought, wow, what a little exhibitionist. But out loud I said, \"I think that skirt needs panties.\" \n\nShe pouted but put some on. They looked like the smallest she owned. \n\nWe both finished our outfits with a cute pair of shoes. \n\nAs we left our room to go shopping we walked past Mark in the living room. Mark said, \"Wow, you girls are going to break every heart at the mall.\"\n\nThen he said to Cindy, \"Turn around, let me see you.\"\n\nCindy turned around so her dad could check her out. When her back was turned Mark said, \"Can you even bend over in that skirt?\" \n\n\"Of course I can daddy.\" She bent over a bit and her cotton panties came into view. \n\nMark looked at me and said, \"you're right, she needs new panties.\" He pulled out his wallet, handed me a hundred, and said, \"Have fun.\"\n\nWe said thank you, and hurried to the car. As soon as we started driving Cindy said, \"Was my dad seriously checking out my panties?\"\n\nMore like your ass, I thought. \n\nWe laughed and talked about boys. How silly they were. We also talked about showing off and watching their reactions. Turns out she'd been showing off at school a bit. Even got in trouble and her mother was called. Every once in awhile at her mom's house she would let Kevin catch her coming out of the shower or in her underwear. I was fascinated. \n\nShe asked me if I was a virgin. I told her no. Then she asked how many times I'd \"done it\".\n\nI wasn't sure how to answer the question. There were the 4 times with my boyfriend and then the event at the office. Did I count that as 2 or 1. I decided that was 1 and told her 5 times. \n\nShe started asking what it was like. I tried to explain that it's different. It can be dull or fabulous. I didn't want to let on about the office. I let her think it was all my ex boyfriend. \n\nI then asked her. She told me she'd fooled around a bit, but never went \"all the way\". She told me she came close a few times so she'd gone to planned parenthood and got herself on the pill. I told her I thought that was smart. Inside I worried about what I'd gotten myself into. \n\nShe asked where we were going. \n\nMost people think Victoria Secret or Fredericks has the sexiest stuff, but not really. Not for younger girls. I took her to Tilly's. Usually they have a bin of panties right by the register. They're like 3 for $9. They're the sexiest ones in the store because they are usually the ones others are too embarrassed to buy. \n\nWe had $100. We each picked out 12 pair each. We got a great variety. Thongs, tiny boy shorts, string bikini, even 1 G string each, anything colorful and cute. That meant no laundry for almost 2 weeks. Then for $10 each we bought matching tops. Hers was white, mine pink. They buttoned all the way down the front, they had a bustier type look in a summer type fashion. They were light, almost see through, and had spaghetti straps over the shoulders. Definitely meant to be worn with a bra. \n\nWe were out of Mark money but I suggested we get her 3 cute bras. I offered to pay. We headed over and found 3 in cute colors that had just the right amount of push up effect for her size. We headed home very happy with our new purchases. \n\nWhen we got home, most of the cars were gone. Just Mark and mom were home. We walked in with our bags.\n\nMark was in the Living room. \"How'd the shopping go?\" \n\nWe laughed and said great.\n\n\"Did you get anything good?\" \n\nBefore we could answer mom came in the room. We all stopped talking and looked at her. Mom was always an attractive women, but usually at home she wore sweats and a T shirt or Jeans and a T. At just 40, 5'7\" and 140lbs. She had curves, but great curves. \n\nThe reason we were staring was she was wearing a very tight pair of yoga pants. Seriously, like a 2nd skin. If she was wearing panties, and I doubt she was, they were g string or thong. She had rolled the waistband down to to point where her ass just started to curve. She was wearing a white, tight wife beater. That was cut to an inch above her navel. No bra. \n\nShe didn't say a word about it. Just, \"Hi girls what did you buy? \n\nI hesitated. My mind still hadn't kicked in. Cindy broke the trance. \n\n\"We bought a ton of panties, 2 tops, and 3 bras.\"\n\n\"Quite the catch,\" mom said.\n\nMark spoke up, \"Do we get to see?\" \n\nMom said \"Mark!\" \n\nCindy said, \"Of course\" and dumped her bag on the floor in front of her Dad. \n\n\"Wow,\" said Mark. \"That's a lot of panties.\"\n\nCindy started prattling on about everything being on sale. \n\nThen Cindy started picking up each item and asking her Dad what he thought. With each one he'd say things like, \"Don't let your mother see that. Wow that's cute (or sexy), I bet you'd look great in that.\" \n\nCindy gushed, \"You really like them?\" \n\nMark said, \"They're fantastic. Too bad most of that is underwear. I'll never get to see them.\" \n\nShe then looked at my mom. Her only comment was, \"They're very cute.\" \n\nCindy said, \"Well you can see the top. Come on Tina. Let's show them the tops we got.\" \n\nShe grabbed all her stuff, grabbed my hand and pulled me to my room. \n\nAs soon as we got to our room I saw a message from Dave. \"How was shopping?\" \n\nI didn't have time to answer as Cindy had already thrown her shirt on the floor and was pulling on the one she just bought. It was more see through than I thought. You could definitely make out her nipples. She'd also left the top 3 buttons undone. The first fastened button was just below her breasts. \n\n\"Don't you think you need a bra with that,\" I said?\n\n\"Why? It's just Dad and your mom. What do they care.\"\n\nShe then looked at herself in the mirror. She turned around and said \"ugh.\" She reached under her skirt pulled of her white cotton bikini panties and threw them in the trash. \"Good riddance\" she said. \n\nI had to laugh. She was so dramatic. She started going through the ones she bought, holding each up and inspecting it. She got to a tiny pair of pink see through boy shorts. \n\nI said, \"those.\" \n\n\"You think so?\"\n\n\"Yeah. They'll go cute with the outfit.\"\n\nShe stepped into them and pulled up her skirt to show me. In the front they barely covered her pussy. I noticed she had shaved. I never looked before. She turned. In the back 1/2 her ass cheeks were hanging out. The top showed about an inch of the crack in her ass. \n\n\"What do you think,\" she said?\" \n\n\"Awesome,\" I replied. \"Wanna see?\" \n\nShe nodded. I grabbed my iPad and started clicking pictures. She held her skirt, and posed. She stuck out her chest for a few. \n\nWhen I was done we looked at the pictures together. She was thrilled. \n\nShe then looked at me and said, \"Your turn.\" \n\nShe grabbed my top and peeled it off me. Wow, I'd never had a girl do that before. I felt that tingle in my pussy. I ignored it. She pulled out my pink top and I pulled it on. She started doing the buttons. She left mine unbuttoned down just below the breast also. I was liking this too much. \n\n\"Are we done,\" I said?\" \n\nShe stood back and looked at me. \"Hmmmm,\" she said. She grabbed a red see through pair of string bikini panties from my pile. I reached out expecting her to hand them to me. Nope she reached under my skirt and pulled the thong I was wearing down. Then she got on her knees and removed them completely. She held the new ones open and I stepped into them. As she pulled them up she stood up in front of me. She was maybe 3 inches from me. Her hands under my skirt, still on the waistband of my panties. Her face was turned up towards mine. In the back of my mind there was a small desire to kiss her. I could feel the heat from her body and its fresh scent. \n\nInstead I said, \"Ready?\" \n\nCindy opened the door and said, \"Ready for the fashion show?\" \n\nMark said, \"Can't wait.\"\n\nWhile she said that I quickly sent the pictures of her to Dave. No note, just the pictures. \n\nI put down the iPad. Cindy grabbed my hand, and pulled me into the living room. My mom's mouth dropped open.\n\n\"Isn't that a bit rev..,\" She started to say.\n\nMark cut her off. \"Wow you too look great. I think you'd give a heart attack to any man who saw you.\"\n\nCindy said, \"You really like it?\" \n\nShe twisted and turned. As she did her skirt flared up a bit. You could see a bit of her ass cheek. \n\n\"Love it,\" said Mark. \"If I'd known you had such great taste in clothes I would have been giving you money a long time ago.\" \n\nCindy beamed. \"What about Tina?\" \n\nMark looked at me. I don't think he'd ever looked at me like that before. At least not that I'd noticed. The look on his face was clear. I want to fuck you.\n\nHe said to Cindy, and obviously me, \"She looks good enough to eat.\"\n\nCindy laughed and said, Yeah she does.\"\n\nI then looked at mom. I thought she'd be furious. She wasn't. She was just taking it all in. She finally spoke, \"Those are pretty. Did you get anything else?\" \n\nCindy said, \"Just panties.\" \n\nMark said, \"Yes, cute ones.\"\n\nThen Cindy just reached down to the hem of her skirt and pulled it up. \"These are new,\" she said. \n\nMom sputtered. Mark spoke out, \"Those are cute, they make your ass look very grown up.\" \n\nCindy then said, \"Tina got new ones too.\" \n\nBefore I could stop her she pulled up my skirt and showed Mark. \n\nMy face was turning red, but my pussy was getting very wet. Here I was being shown off by an 18 year old girl. In front of her father and my mother, and I was getting turned on. \n\nMark said, \"With panties that cute it's a pity you have to wear skirts at all.\" \n\nMom looked at him. He flashed her a smile. \n\nCompletely unabashed, Cindy said, \"We're home. It's just us. We don't.\" \n\nShe pushed her skirt down off her hips. It fell to the floor. \n\nI was in a state of shock. What the hell just happened? My little step sister, all of a sudden, is standing in the living room in just a see through top and panties. Mom and Mark just stared. \n\nI didn't move. I was kind of frozen. My mind was on lockdown. Cindy reached over to me, unzipped my skirt, and it too fell to the ground. I just stood there stunned. I say stunned, but I was fucking horny. I wanted to run to my room and jack myself off. Instead I just stood there. \n\nMark broke the silence. \"Wow, you girls look hot. As far as I'm concerned you can just wear panties around the house anytime you want.\" He looked at my mother. \"Right Brenda? Don't they look cute?\" \n\nMom was speechless. She just nodded her head. I knew Mark was in charge, but I didn't realize how in charge. \n\nI said, \"I have some stuff to catch up with in my room.\" I turned to leave.\n\nMark said, \"You've got a great ass Tina.\"\n\nWithout even thinking I wiggled it at him. I caught myself and then as normally as I could walked to my room. \n\nCindy followed me. \"Oh my god. That was frickin' hot. Are you as wet as I am?\" \n\nWe'd never spoken like this before. I was not sure how to answer. Very cautiously I lied and said I'd never done anything like that before.\n\nCindy said she had never been so bold, but being bold like that was a huge turn on. \n\nI just wanted my fingers in my pussy. Actually I wanted to get fucked. I would have fucked Mark if he'd asked. I just wanted cock. I wondered briefly what my mom would do if she caught me fucking Mark. Probably kill us and then throw our bodies in the street. ",
        "I told Cindy I was tired and going to take a nap. She said she would too. I turned out the lights and got under my covers. I could hear Cindy's bed sheets rustling. Again I heard that soft sigh. I was right behind her. \n\nWhen I woke up from my nap Cindy was packing the little carryall she uses to go back and forth from her mom's house. \n\n\"What's up,\" I asked?\n\n\"Dad's gonna drive me back to mom's house. We have a wedding to go to so I'm staying there tonight. Kevin's already there.\"\n\nThat's too bad I thought. I was having fun. Then followed by the thought, thank god, maybe I'll stay out of trouble.\n\nI asked where my mom was and Cindy said she'd gone out shopping. Chuck? She didn't know hadn't seen him all day. \n\nCool I thought some quiet time. I could use it. Things were happening fast and I needed to process it. I knew what I was doing was wrong, but every step of the way my pussy was saying yes. \n\nMark called Cindy and asked if she was ready. She came over and kissed me goodbye. Not quite on the cheek, not quite on the lips. It was a bit longer than normal.\n\n\"I had fun,\" she said.\n\nI heard the door close. I was alone in bed. I had thrown on a T shirt when I climbed in for my nap. My panties were soaked so I left them on the floor. My mind was racing. How could all this have started. Dave I thought. As long as I don't talk to Dave I'd be fine. This was his fault. \n\nI picked up my iPad. First thing there was a message from Dave. \n\nThose pictures were awesome. Thank you. How was your day?\n\nI should have just ignored it, but, of course, I didn't. I liked the way he made me feel.\n\nI said hi and that I was glad he liked Cindy's pics. \n\nHe then asked me about my day. I told him everything. Cindy's dad showing off her butt at breakfast. Coming home seeing mom dressed sexier. Cindy pulling off my skirt in front of her father and my mother. Everything. \n\nHe asked questions. It was fun reviewing it. I was reliving it in my head as well as telling someone how naughty I was. \n\nAt the end of it all he said, \"Good girl.\" For some reason that made me wet all over again. \n\nHe was very curious about my mom dressing sexier. He said his guess was she was a little jealous and decided to be a little competitive. It kind of made sense. \n\nHe then asked what I was wearing. I said just a t shirt. He wanted to see. I face timed him. I was still sitting up in bed, in a t shirt, covered by my covers. What the hell. \n\nHe told me I looked great. \n\nI laughed and replied that I just woke up. \n\nHe said, \"Let me see the rest.\"\n\nI panned the iPad down so he could see the covers. \n\nHe laughed and said, \"That's not what I meant.\"\n\nI played coy. \"No, what did you mean?\"\n\nHe gave me a stern look. \"You tell me. What did I mean?\"\n\nI could not believe how it made me feel when he talked to me that way. Before it was all texting. This was face to face. Well, almost. It was like Bob telling me what to do in the office that day. \n\n\"You wanted to see me without the covers,\" I said quietly.\n\n\"I wanted to see what,\" he said? \n\n\"You want me to take the covers off me and show you I'm not wearing panties,\" I said\n\n\"Good girl,\" he said.\n\nI put the iPad down and kicked the covers off me. My T shirt was wrapped around my waist. My pussy was completely exposed. I realized he'd never seen me naked. He'd just heard about it. I picked the iPad back up. I looked at his face. He pointed a finger down. Slowly I scanned the iPad down. I showed him everything. I brought it back to my face. I don't know what I was expecting. I was nervous. \n\nHe smiled and said. \"You're more sexy and beautiful than I remember\" \n\nI felt a huge sigh of relief. \n\nHe asked me if I had a full length mirror in my room. \n\nI did and told him so. \n\n\"Take off the T and go to the mirror. I want to see all of you.\"\n\nI didn't even argue. I put the iPad down where he could watch me. The T shirt was long. Standing up you could see a little of my pussy and 1/2 my butt. I reached down and slowly pulled it off. He watched intently. Then I turned around so he could see my ass too. \n\n\"Beautiful,\" he said. \"I'm going to have so much fun playing with you.\"\n\nI was pretty sure I knew what he meant, but was going to ask anyway. Just then I heard the front door. I turned my head a little. \n\n\"What's that\" he said? \n\n\"The front door someone came home.\" \n\n\"Cool,\" he said. \"Close your screen, put that T shirt back on,and go see who it is. Take the iPad with you so I can see.\"\n\n\"But, that T shirt doesn't even cover my pussy,\" I objected. \n\n\"I know. Just pretend you didn't know anyone was home.\" \n\nI think I was going to protest, but I didn't. I put the T shirt back on and walked into the kitchen. Mark was at the counter and immediately turned to see me. His face broke into a big smile. \n\nI immediately said, \"I'm sorry, I didn't know you were home. I'll go change.\" \n\n\"Don't go change for me,\" he said. \"I think you look great.\"\n\nI said, feeling kind of sassy, \"I bet you do.\" \n\nI put my hands on my hips and as I did I pulled the t shirt up a bit more. Now my entire pussy was on display.\n\n\"Turn around,\" he said. \"Let me see that ass.\"\n\nI turned around. As I did I stood the iPad up on the kitchen counter in front of me. The camera and microphone were still running. I wasn't sure how much Dave could see but I knew he could see some of it. \n\nAfter I put it down I pulled my T shirt up to my waist and shook my ass at him. \n\n\"How's that,\" I said.\n\n\"Awesome,\" he said. He stepped towards me and cupped my ass cheek. I didn't move. I just held the t shirt at my waist and stood there. \"Your ass is the same shape as your mom's.\"\n\nHe started rubbing my ass. It felt good. I let out a soft moan. \"Yeah,\" he said. \"Same shape. Yours is a little firmer, but hers is still great.\"\n\nIt was weird listening to him talk about my mother's ass while rubbing mine. It felt good though. I pushed my ass back a bit to encourage him. His hands slid lower. I widened my stance to give him more access. He slipped a finger into my pussy. \n\n\"Mmmmm,\" I said. \n\n\"Your mom likes it when I slide my fingers in her pussy too. She gets just as wet as you.\"\n\nI moaned. Again hearing him talk about my mom was so wrong it was driving me crazy. \n\nI bent forward a bit to steady myself on the counter. I looked right at my iPad. I then asked, \"Where is mom?\" \n\nHe now had 2 fingers in my pussy. I moaned again. I started slowly fucking his fingers. \n\n\"Oh yeah,\" he said. \"Your mom always fucks my fingers too when I do this to her.\" The other day, when none of you were home, I had her bent over this counter just like this.\" \n\nI came. A sharp intake of breath, but he recognized it. \n\n\"Ohhhh. So you like hearing about your mom. Well, after I finger fuck her cunt, I stick my fingers in her face and she licks them clean.\" \n\nCunt. There was that word again. What was it about that word that made me feel so dirty yet so hot. As he said it he pulled his fingers out of my cunt and held them in front of my face. I started sucking on them and licking them clean. \n\nI knew Dave could see me doing that. While sucking on them I asked again, \"where... Is...mom...?\" \n\nHe slid his fingers back in my pussy and said, \"She's shopping.\"\n\n\"Shopping?\" I started seriously fucking his fingers now. I wanted to cum again. \n\n\"Yeah shopping,\" he said. \"I've always been after her to dress sexier around the house. She always refused because she didn't want to embarrass you or Cindy. Given last night's and this morning's performance I told her to get her ass out there and get some hotter clothes.\" \n\nHe still had his fingers in my pussy. I was now practically stomach down on the counter. I was looking right at the iPad. A picture of my mom in a thong came to mind. I'd never seen her in anything but cotton bikinis, but the image was hot. Between that, knowing Dave was watching, and Mark's fingers in my cunt I let out another moan and came again. \n\nMark heard me. \"I think it's time to fuck you. What do you think,\" he said.\n\n\"Yes,\" I said\n\n\"What?\"\n\nGod, I loved it when they made me say it. \"Yes, I want you to stick your cock in me. I want you to fuck my cunt with the same cock that fucks my mother.\" \n\nI heard his pants unzip. I didn't even turn around. He just slid the tip of his cock against my pussy and drove right in. I could tell he was bigger than most. I felt stretched. Not uncomfortable but full. I groaned and came immediately. \n\nHe slowly started pumping me. \"Mmmmmm...like mother, like daughter. Nice and wet. Nice and tight.\" \n\nI came again. \n\nThen he started telling me how hot I looked last night. He really liked me rubbing Cindy's back. He said he enjoyed looking at her panty covered ass and that every time my hand reached the band of her panties he was hoping I'd push them down further.\n\nThinking of Cindy's soft back, getting fucked, and hearing him talk about it, I came again. \n\n\"Wow,\" he said. \"Your mother cums a lot too.\" \n\nThat made me come again. \n\nHe kept pumping me, and as he did he kept talking to me. The words were as much a turn on as his hard cock. \n\n\"Then, this morning, when you both showed up for breakfast in just panties and tshirts I thought I was going to lose it. Knowing your brother was watching. Kevin and Peter couldn't decide which one of you to stare at. I swear my cock was rock hard the whole time.\"\n\nMy mind relived the whole thing. I could see them staring at me. See their faces as they checked out Cindy's cute little ass. I came again, but this time I gushed. It was warm like pee. I was embarrassed. I thought I'd peed on him. I let out an \"oh my god. I'm so sorry.\" \n\nHe pushed his cock deep in me. He leaned over me and said, \"It's OK. it's called squirting. It's not pee. Your mother does it too. It's fucking hot.\"\n\nHearing about what my mom did made me cum again. I lost count. \n\nI started fucking his cock. He just held on for the ride. I fucked him fast and hard till I came again. He was still hard. \n\n\"And then,\" he went on, \"Cindy gave me that hug and I got to feel that cute little ass.\"\n\n\"After you all left, I was so fucking hard, I pushed your mom right up against this counter and fucked her just like I'm fucking you.\" \n\nI pictured my mom bent over this counter, being fucked, sweats around her ankles. Cumming over and over like I was. That was it. I started screaming.\n\n\"Fuck me. Fuck my slutty little cunt. Fill me with your cum, just like you did my mom. Fuck me. Pretend you're fucking Cindy's little virgin cunt. Filling her with your cum. Fuck me. I bet you want Cindy to watch as you fuck me. Want mom and Chuck to watch.\" \n\nThat did it. He came. He filled my cunt. I could feel it hot against the walls of my pussy. I came again. I fell limply against the counter.\n\n\"You're not done yet you little slut. Get on your knees and clean me up.\" \n\nI smiled into the iPad. I turned around, got down on my knees and took his now semi hard cock in mouth. It was covered with his cum, my cum, and his pants were soaked from when I squirted. I started sucking and licking up every drop. I didn't want to miss any. I did try to get some on my face. I wanted to show Dave when I was done. \n\nAs I sucked his cock he started talking again. \n\n\"I'm glad you took Cindy shopping today. Her mother is such a prude. I want to see everything she bought. On her. I'll leave that in your hands. I'm sure you can handle it.\" \n\nHe looked down at his cock and my face. He put his cock back is his pants and said, \"You better go clean up. Can't have your mother seeing you like that.\" Then he added, \"At least not yet.\" \n\nI stood up, grabbed my iPad, and headed for my room. I held the iPad so Dave could see my cum covered face. I flipped it so I could see his face. He was smiling.\n\nWhen I got to my room I just looked at him. Finally I said, \"How was that?\" \n\n\"That was fucking amazing,\" He said. \"Take your top off.\" \n\nI did it.\n\n\"Now put the iPad somewhere I can see your entire bed and lay down.\" \n\nI did it.\n\nDave started telling me about the entire incident from what he saw. How he felt. What he thought was happening. My fingers dropped to my clit. I closed my eyes and let myself picture everything he said. I started cumming again. \n\nNow what? I thought. \n\nI'd just heard mom return from shopping. I knew Mark was home. I heard him ask what she bought. I couldn't hear her answer. \n\nI heard him say, \"How about a fashion show.\" \n\nMom said, \"Come in the bedroom. Tina's home. We can have more privacy.\"\n\nHe said, \"No, you go change and come out here. I'll sit on the couch. Don't worry about Tina.\"\n\nMom started to protest, but Mark just told her to go change. As she was changing he texted me. \n\n\"Come join me.\"\n\nIt wasn't really a request. It was more an order. He wanted me to see what mom bought. I told myself I didn't want to see, but I knew I was lying. I did. \n\nWhat to wear was the question. I knew it should be somewhat revealing, but not crazy. I grabbed a pair of black see through string bikini panties and a tank top that just covered my ass. That should do. \n\nI wasn't sure if Dave was online. I facetimed him, shut down my screen and brought my iPad with me. \n\nAs I walked out of my room I could see mom in front of me in the living room. She was wearing a short see through nightie with spaghetti straps and matching thong. \n\nAs I came up behind her I said, \"Wow, that's hot.\" I held the iPad so the camera was facing her. \n\nShe jumped, tried to cover herself, started stammering an apology, and heading for her room. \n\nMark stopped her. \"Come back here. Tina's a girl. She's seen sexy clothes before.\" \n\nMom stopped. She just stood there, looking at the floor, kind of resigned to her fate.\n\nMark looked at me and said, \"Come in, you're just in time. Your mom is going to show me what she bought today.\" \n\nI could see mom's face go red. She still did not look up. \n\nMark then said to me, \"You look cute. Are those some of the new panties you bought today?\"\n\nI nodded. \n\nMom looked up. She saw what I was wearing. She didn't say a thing. \n\nMark went on. \"With that Tank top on we can barely see them. That's not very nice.\" \n\nHe looked at mom, \"Wouldn't you like to see what she bought?\" \n\nMom didn't move. Mark asked her again. This time she slightly nodded. \n\n\"What,\" said Mark. \"I didn't hear you.\"\n\n\"Yes,\" mom said. \"I'd love to see what she bought\" \n\nI kind of felt bad for mom, but I was enjoying seeing her in this predicament. I put the iPad on the fireplace mantle. I hoped it had a good view. I then grabbed the hem of my tank top pulled it up to my waist, and slowly turned around. \n\n\"Do you like them\" I said? \n\nMark said they looked great, then asked mom what she thought. She mumbled great.\n\nMark said, \"What, I couldn't hear you.\"\n\nMom looked at him, looked, at me, looked back at him and said, \"They're very pretty and sexy\" \n\nMark was satisfied and patted the couch next to him for me to sit down. I did, adjusting my tank top to cover my panties. Mark slapped my hand playfully and pulled the shirt up to my waist.\n\n\"After all,\" he said. \"We've already seen them we might as well enjoy them\" \n\nsat there with my panties showing. Mark's hand was on my thigh. \n\nMark then looked at my mom and said, \"Well let's see what else you bought.\" \n\nShe left the room to change. Mark's fingers slid up to my pussy. \n\n\"Still wet I see\" \n\nI was, I couldn't believe this. The whole scene was so wrong. Mark's fingers in my pussy. My mom in the other room changing into something sexy to model for us. You bet I was wet. \n\nMom came back in the room. Mark left his hand on my thigh. I left my legs slightly spread apart. If mom knew what happened she didn't let on. This time she was in a cute pair of boy shorts and a see through cami. She looked hot. It was obvious that my mom shaved her pussy too. \n\n\"Wow,\" I said \"That's hot.\" \n\nMom kind of smiled at me. She was happy for my approval. \n\nMark kept sending her to change. Sometimes he'd call her over to us and we'd feel the material. He'd compliment her on her choices. He'd ask me my opinion. Truthfully, she looked fucking hot and I said so. Once he had me feel how firm her ass was. He was right, it was firm. Whenever he could he'd keep his hand on my thigh. Whenever she left the room he'd finger me. My panties were soaked and even the top of my thighs were wet. I'm sure my mom could tell. Finally she had gone through all her outfits. \n\nMark said he'd like to see one again. It was a black semi transparent robe with matching thong. The robe tied with a sash. She went to change. Once again Mark had his fingers in my pussy. He pulled my legs further apart. Now there was no doubt I was wet or that she would see it. \n\nShe came out in the outfit. She looked very hot. Mark had her turn around. Then he said, \"I bet it would look better without the panties.\" \n\nMom looked at me. I didn't have any idea what to do. \n\nMark asked me what I thought. I said either way it was sexy. \n\nMark told mom to take them off. She didn't move. \n\nHe looked at me and said, \"Go help your mom.\" \n\nShe just stood there looking at me. I stood up and walked behind her. I could feel the blood rushing to my pussy. God this was so wrong. God this was so hot. I hooked my fingers in the waistband of her thong and pulled them slowly over her ass and thighs. I let them go and they dropped to the floor. Mom just stood there. I felt like my pussy was dripping down my thigh. \n\nMark motioned for me to sit next to him again. I did and he put his hand on my thigh. He could feel, the sticky wetness. \n\n\"Wow,\" he said. \"You're really creaming.\" He licked his fingers. \"You must be enjoying this.\"\n\nI didn't say a thing. \n\nHe called mom over. She came to him. He undid the sash of the robe. Mom had great tits and for 2 kids a great belly. He ran his hands over her shoulders down to her breasts. She gave a sharp intake of breath. She looked at me. His fingers pulled at her nipples. They were hard. She closed her eyes briefly, sighed, and then looked at me again. \n\nMark's hands continued down her body. Mom continued to look at me. I had no idea what she was thinking. I didn't realize it but my hand had found my pussy. I wasn't really masturbating, but my hand was between my legs. \n\nMark's hands reached her hips. As he caressed her she closed her eyes and sighed again. Every time she opened them she was looking at me. Mark's hands finally slid between her legs. She parted them to give him better access. He obviously knew her body. I saw her shudder with her first orgasm. He took his fingers out of her pussy and licked them.\n\nHe looked at me and said, \"You would not believe how delicious her pussy is.\" \n\nShe moaned. He slid his fingers back into her. He put his other hand on top of the one I had between my legs. He didn't touch my pussy. Just started moving my hand so I would do it myself. I got the message and started fingering myself. This was hot. This was wrong. This was slutty. I was fingering my cunt in front of my mom. I was not sure who was more of a slut. Her for watching or me for doing it. \n\nHe played with her pussy some more. She moaned. \n\nThen he said, \"What do you want.\" \n\nShe looked at me and looked back at him. He asked her again. This time she was looking me right in the eyes. \n\nAs she looked at me she said, very clearly, \"I want you to Fuck me.\" \n\nMark laughed, \"Here? Now?\" \n\n\"Yes.\" again looking straight at me. \"Here, now.\" \n\nMark unbuttoned and unzipped his jeans. He pulled out his cock. I had never actually seen it hard. I was right. It was bigger than most. About 7-8 inches I'd guess.\n\nMom climbed on the couch, knees on either side of him, and slowly lowered her pussy onto his cock. I'd seen some porn but nothing was as hot as this. As she took his cock she looked right at me. When she had it all in, she threw her head back, closed her eyes and moaned. Her body shuddered. ",
        "\"That's right baby,\" said Mark, \"Cum for me.\"\n\nShe looked at me again and started pushing herself up and down on his cock. She had her hands on the back of the couch to steady herself. \n\nShe looked at him and started talking. \"That's it baby, make me cum. You can fuck me anytime you want. I'm your slut. Look, you're fucking me in front of my baby girl.\"\n\nShe looked at me. \"Look at her watching me fuck your cock.\"\n\nMark looked at me.\n\n\"See,\" mom continued \"She's watching. She can see your cock in my pussy. Now she knows what a slut her mother is. She knows I love your cock so much I'll fuck it anywhere. Look, she's got her fingers in her cunt. She's probably a slut too.\"\n\nShe was right. I was a slut. I was turned on. I was friggin my pussy for all it was worth. As she was talking about me. I came. \n\nShe looked back at Mark and continued. It was a steady stream of dirty talk. She did not stop. \n\n\"Did you see her cum? That was hot wasn't it? Somehow I think you've seen her cum before. I saw how wet her slutty little cunt was each time I came back in the room. You were playing with her, weren't you? Have you fucked her yet? Has she felt how good this cock fits?\" \n\nMark didn't answer. He just groaned. I didn't know what to say. Having my mom call me a slut while she fucked her boy friend in front of me just turned me on more. I came again. \n\nMom saw me cum. She shuddered and came again.\n\n\"Mmmmm,\" she said. \"Did you see my baby cum? Did you feel me cum all over your cock at the same time?\" I wonder how many cocks have been in that sweet cunt.\"\n\nI kept watching his cock as she pumped him in and out. I thought about what she said. As of yesterday it was one. Now it's almost 9 o'clock on Saturday and it's four and I'm watching my mother get fucked. Just the thought of it made me come again. \n\nShe started talking to him again. \"I told you not to touch her unless she was ready. I guess after that performance yesterday, she's ready. Go ahead. Feel her cunt. Get your fingers in my little girl's cunt. Make her cum. \n\n\"I bet you want to fuck her. I'm your slut. If she's willing I'll hold her legs open for you.\"\n\nDammit. Hearing her say that I came again. She kept going. \n\n\"I know you. You're a pervert. I saw the way you were looking at Cindy's ass last night, how you grabbed it this morning. I bet you'd like to see her virgin pussy too. Maybe the next time she's here I'll ask her to model the rest of the panties she bought.\"\n\nHe groaned. It was obvious he liked that. God I thought, is everyone a pervert?\n\nShe just kept talking. \"Hmmmm. You think Chuck would like to fuck Tina? Would you like to see that? Her brother's cock inside her? Maybe Kevin? Maybe both at the same time?\" \n\nHe grabbed her hips and started pushing her up and down. He was fucking her hard. \n\n\"You like that,\" she said. \"You are a pervert. What about me? Do you want to see me spread my legs for them? Take their cocks in my mouth, my pussy, my ass?\"\n\n\"Oh my god,\" I thought. \"Was mom that much a slut?\" \n\nThis was so fucking hot. I kept playing with my pussy. I'd lost track of how many times I'd cum. \n\nMom stopped fucking him. She kissed him on the lips, climbed off the couch and took his cock in her hand. \n\nNow she was on her knees in front of him. She looked at me. She grabbed the waist of my panties and said \"fair is fair.\" I lifted my ass as she pulled them off me. She threw them on the floor next to hers. \n\nThen she looked at Mark's cock. She took it in her mouth and started sucking it. He reached out and grabbed her hair. Not pulling it, but pulling her head up and down on his cock. \n\nShe looked at me. Pulled her mouth off his cock and said, \"Mmmmm.. Good.\" Then looked at him, \"Go ahead. Play with her cunt.\" \n\nShe started sucking him again. His hand dropped to my cunt. He slid his fingers into me. It was all too much. I just kept cumming. It was like waves after waves hit me. I just rolled my head back and moaned. \n\nAt that point Mark said, \"I'm going to cum baby.\"\n\nShe didn't stop. In fact, she went to town on him. I saw his back arch. I could tell he was cumming. She got most in her mouth but some got on her cheeks and chin. \n\nI thought that was it. I was wrong. She gave me a look. Then scooted over to me, brought her face up to mine, and kissed me. Not like she's ever kissed me before. Full on the lips. Open mouth. Lots of tongue. Also with a mouthful of cum. I opened my mouth and took it all. \n\n\"Swallow it,\" she whispered. \n\nI did. \n\n\"Clean up my face,\" she said. \n\nI started sucking and licking the cum off her face. I felt so slutty. I felt so good. \n\nJust then we heard a car pull up outside. It had to be Chuck. Mark zipped up real fast. Mom stood up and tied the sash of her robe. I pulled my shirt down to cover my pussy. \n\nJust in time. Chuck walked in with his girlfriend Cathy in tow. \n\n\"Hi guys,\" he said. \n\nWe all said hi. I saw Cathy look around. The room smelled like sex. Chuck of course was oblivious but I was pretty sure Cathy noticed. \n\n\"Hi Mrs G. Hi Tina\". She said. \n\nShe had a slightly questioning sound to her voice. \n\nShe looked at mom. I think we all forgot that mom's robe was semi transparent. Chuck didn't even look, but Cathy did. Then I saw her look at the floor. I followed her gaze. We also forgot that both mine and mom's panties were in the middle of the floor. Cathy noticed. I then noticed that mom still had a bit of dry cum on her face. I looked too long. Cathy followed my gaze. She looked at me questioningly. I just smiled at her.\n\nAt that moment Chuck grabbed her hand and said, \"OK, we're off. We're going downstairs to watch TV. A euphemism for \"make out\" I was sure. \n\nThey left. I looked at mom and said, \"I better go.\" \n\nI picked my panties up off the floor. As I stood up she grabbed my hand, pulled me towards her, and kissed me full on the lips.\n\n\"Slut,\" she said with a smile on her face. \n\nI started to walk back to my room. Then I saw my iPad still on the mantle. I knew it had been on. I wondered how much Dave saw. If he watched at all. I grabbed it and went to my room. I switched the screen on. Dave was there immediately. \n\n\"Wow Tina. That was fucking hot. We had it up on the big screen.\"\n\n\"We?\" I thought. \"Who's we?\"\n\nAs if to answer my question he turned the iPad around. There was my boss' face.\n\n\"My god Tina. That was hot!\" \n\nHis face looked flushed. The camera then panned down. There was a woman on her hands and knees in front of him. Her dress was up around her waist, panties around her thighs. The camera panned up again. He was fucking her doggy style.\n\n\"Oh Tina. Meet my wife.\" \n\nThe camera panned down again. She turned to smile at it. The camera panned up again to my boss' face. \n\n\"She's never done anything like this before. She got so turned on watching you she begged me to fuck her. Right here, right now. It was amazing.\" \n\nI then heard her voice. \"Stop talking and fuck me.\" \n\nThe Camera panned around the room. \n\nIt landed on a woman's face. I recognized it immediately. It was Julie. The Marketing woman from work. She smiled at the camera. \"Hi Tina, who knew you were such a slut. That was one of the hottest things I ever saw.\" \n\nThe camera panned down. Her tits came into view. She was naked from the waist up. Her tits were bouncing up and down. She was about 30 or so. I knew she was pretty. Now she looked hot. Dave panned the camera further down. She was completely naked, straddling some guys cock and fucking him. \n\nDave panned the camera and followed her arm. Her hand was wrapped around Dave's cock. \n\nIt panned back up to Dave's face. \"Oh,\" he said. \"Julie's husband wasn't here. So she's fucking Jimmy.\" \n\nJimmy was our tech guy.\n\nDave turned the Camera to Julie. \"Have you ever cheated on your husband before?\" he asked.\n\nShe smiled and shook her head no. Dave panned the camera back to his face. \"See what you did to us? This is the most interesting sales meeting we ever had,\" he laughed.\n\nI was mortified, I was turned on, I was, well... I don't know what I was. \n\nDave was now talking to me. \"Was that Chuck who came in?\" \n\nI nodded my head.\n\n\"Who was with him,\" he asked.\n\n\"That was his girlfriend Cathy.\" \n\n\"I think she noticed something was going on\" he said. \n\nNo shit, I thought. I just said, \"I think so too.\"\n\n\"Where'd they go?\" He asked.\n\n\"Downstairs to watch TV,\" I replied. \n\n\"Can you see them without them seeing you?\"\n\n\"I guess I could try. There's a landing on the stairs,\" I answered. \n\n\"Let's go\" he said. \n\nFirst I had to put something on. I was not sure what. What if Cathy saw me. She already saw me in the tank top. Should I put on panties? I decided to go as I was. I knew if they saw me and I went down the stairs, they'd both see I wasn't wearing panties. The idea excited me. I took the iPad and tip toed down to the landing. \n\nI could not believe it when I got there. The TV was on. Probably to cover the sound. Cathy was topless. She had come in wearing a pair of running shorts and a top. Her top and bra were on the floor. Her mouth was wrapped around Chuck's cock. She was the same age as Chuck. At 18 she had a great set of tits. Her blonde hair was swept back over one shoulder. Her face was easy to see.\n\nShe stopped and looked at him. \"You didn't notice anything weird,\" she said. \n\nHe shook his head. \n\n\"The whole room smelled like sex. There were two pairs of panties on the floor, and you didn't notice?\" she exclaimed. \n\nHe pulled her head back to his cock and said, \"you're imagining things. It was probably just laundry she dropped.\" \n\nShe stopped again. \"Chuck, your mom's robe was practically see through. I could see her nipples and ass. She wasn't wearing panties. I'm pretty sure those were on the floor.\"\n\nChuck groaned. Cathy wrapped her hand around Chuck's cock and started pumping. \n\n\"Oh?\" Said Cathy. \"You like the idea of your mother in a see through robe, panties on the floor?\"\n\nChuck groaned again. \n\nCathy went on. \"Too bad you missed it. I could clearly see her tits. She has great tits for a woman her age.\"\n\nI could not believe what I was seeing. Chuck was moaning. Cathy was jacking him off and talking about mom. \n\nShe kept talking. \" I could see her ass. She has a great ass. It's shaped like your sisters.\" \n\nMore moans from Chuck. \n\n\"So? You like your sister's ass too? Well, I'm pretty sure the other pair of panties on the floor were hers.\" \n\nA light went off in Chuck's head. He told Cathy about Cindy and my little displays last night and this morning. As he told her Cathy kept sucking and jerking his cock. He told her in great detail.\n\nCathy stopped sucking. Her hand kept moving. \"Did you think it was hot? Did it make you hard,\" she asked?\n\nChuck nodded.\n\nCathy kept talking. Her voice was now sexy, teasing. \"So you were checking out your sister's ass, and Cindy. How old is she? Our age? And you like the thought of your mom in a see through robe? Too bad you missed it. She has a great body. I could tell she shaves her pussy. I am pretty sure she had cum on her face too. It looked like it was on her thigh as well. Tina too. Her thighs were glistening from it.\"\n\n\"What do you think was going on?\" she continued. \"Maybe a threesome? That's sick. Your mom, sister, and Mark? So sick it's kind of hot. Do you think if I came over early tomorrow your sister would come to breakfast in just a T and panties? How would you like that? I could sit next to you. Maybe my hand on your cock under the table. You could check out her ass.\" \n\nEven from where I was sitting I could tell Chuck was about to blow. Cathy could tell too. She wrapped her mouth around his cock. He started to moan and spasm. She swallowed every drop. He slumped back on the couch. \n\nCathy licked her lips. She pulled her shirt on and grabbed her bra. \"Well lover, I gotta go. See you at breakfast.\"\n\nI realized she was coming. I scampered up the stairs but she caught me in the kitchen. I just stood there. \n\nShe smiled at me, walked over, slid one hand under my tank and grabbed my ass. Then she kissed me on the lips and said, \"see YOU tomorrow.\" \n\nEmphasis on the you. Her kiss tasted like cum. I didn't move. \n\nI just stood there.\n\n\"Bye bye,\" she waved. \n\nShe gave me a knowing smile and headed out the door.\n\nI walked stunned to my room. What the hell happened to my world?\n\nI opened my iPad back up. Dave had obviously placed his further away. I could see everyone. Julie was on her hands and knees. She was sucking Dave's cock and being fucked from behind by my boss. My boss' wife was on the couch, her dress around her waist, her legs over Jimmy's shoulders, and his face buried between her legs. \n\nI looked at Dave. \"What the hell is going on? Is everyone a sex crazed pervert? Is everyone a slut?\" I was beside myself. My head was spinning. \n\n\"Well,\" Dave said \"I think so. I mean. I think they just need the right stimulus. Years ago I started fucking married women. I realized they would do things for me they wouldn't do for their husbands. The more I pushed, the more they did. You and your sexy body ooze sex appeal. You stimulate people.\"\n\nThat was it. My mind was in overload. I looked at the iPad. I shook my head. \"I'm on overload. I'm going to bed.\" I said. I didn't wait for a response. I put down the iPad and climbed. Into bed. My head was spinning. I was bone tired. The images of the day kept playing through my head. I wasn't even thinking. My hand slid down between my legs. I barely touched my clit. I came and fell immediately asleep."
    ],
    "authorname": "Imstillfun",
    "tags": [
        "exhibitionist",
        "threesome",
        "fmf",
        "slut",
        "milf",
        "incest",
        "voyeur"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/first-days-as-a-slut-ch-02"
}