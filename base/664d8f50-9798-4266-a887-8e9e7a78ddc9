{
    "title": "What The Cat Dragged In Ch. 05",
    "pages": [
        "A/N Blood and gore ahead.\n\n5. What Happens In Vegas\n\nCreed fucking hated traveling by air. He didn't like being confined in general, but he especially hated being confined in a tiny, noisy space with a shitload of other people with no way out and no privacy to kill any of them. If this had been a regular job where time didn't matter so much, he would have driven. \n\nThe stewardess appeared at his side. \"Can I take your coat, Mr. Sanders?\" \n\nHe glared until she walked away. Even though he was sitting in first class, the seats were still to fucking narrow for his shoulders and too close together. At least there was a good chance this part of the plane wouldn't be packed. He pulled out the book he'd brought along and tried to look like he was absorbed in it. All he succeeded in doing was getting lost in the traces of the frail's scent that still lingered on his coat.\n\nNo matter how often or how well it was cleaned, traces of every job he'd ever done clung to the coat. Sweat, shit, blood, piss, brains and everything else a human body could produce, before during and after death had found its way into the fabric at one time or another. It was a subtle miasma that didn't exist in the consciousness of most of the rest of the world, but it reminded him of what he was. Victor Creed, the animal who lived on rage and bloodlust. The heartless bastard who would kill anyone for the right price. The creature who fucking liked the feeling of warm blood splashing his face. The nightmare who could torture the strongest men into insanity. The asshole who left nothing but corpses and grieving in his wake. \n\nHe didn't regret a single one of those scents. He was all of those things and more that words hadn't been invented for yet. Her sweet scent mixed with the base notes of gore and terror reminded him that he was something else too. At least for the moment, he was a protector again. Not because someone had paid him to be, but because he had chosen to be. Probably wouldn't last. Probably end up with her fucking blood on the coat. Right now it didn't matter. \n\nHe closed his eyes and remembered how she felt curled up against him. She was still too fucking skinny, but the angles of her bones were starting to soften now. Her small hand had rested on his chest, her slim fingers splayed over his heart. Her head had been resting on his shoulder, her sweet scent overlaid with anxiety and healing wounds. Wounds that he'd given her, that she'd practically begged for.\n\nCreed got another rush of power from the memory.\n\nA high pitched giggle shattered the fragile thought. The stench of expensive perfume on a cheap whore assaulted him next. He opened his eyes and watched a man in his sixties lead a girl in her twenties down the aisle, his hand on the small of her back. The scent of two different men wafted off of her as she passed by. They sat two rows ahead of him on the other side of the aisle, with her on the outside. \n\nThe incessant chatter was annoying as hell, but he tuned it out. He still had last minute plans to settle his mind to, and he let the collage of scents inspire him.\n\n*~*~*~*~*~*\n\nKelly couldn't say that she was scared exactly. She didn't like being alone, and she wasn't exactly sure how she was going to pass two whole days by herself, but she trusted that Victor wouldn't have left if she were in immediate danger. Why she trusted him at all wasn't clear to her. If anyone else had covered her in bruises and bites and scratches, she wouldn't have been sitting there missing him. She would have fought as hard and as long as she could, and then run as soon as he left her alone for ten minutes. \n\nIt wasn't that she doubted he was dangerous either. Kelly knew without doubt that he was very dangerous and that he would make good on every one of the threats he'd made, if she gave him reason. There was more to him than that though, whether he wanted her to see it or not. He made her smile, both with his sarcasm and the way he could turn a veiled threat into something approximating an endearment. He didn't ask a thousand questions about Stan or what he'd done to her. She got the impression that he had a pretty good idea already. If she'd had to guess, she would say he'd been through worse. \n\nIt was nearly midnight when she turned off the TV and checked the doors and windows for the last time. She wasn't sure she was going to be able to sleep, but at least the pillows smelled like him. Kelly brought her book with her.\n\n*~*~*~*~*~*\n\nThe Jackpot Inn was a hellhole on the shitty side of Las Vegas, but it was an anonymous hellhole. Creed sat in room seven and listened to the drunk next door fucking some whore. The ancient air conditioning unit sputtered and rattled and occasionally made a sound like an explosion was imminent, but actually cooling the air with any efficiency seemed beneath it. He fucking hated Las Vegas to begin with, but the oppressive heat of the room and the caterwauling from next door had served to drive him deeper into the depths of murderously pissed off than he should have been at that point.\n\nHe reminded himself that he'd chosen this city for a long list of very good reasons, not the least of which was that it was most of the way across the fucking country from where he intended to keep her. Vegas had an appeal for the desperate, the depraved and those who wanted to disappear. He figured if she were really on her own, she would know that she needed to disappear and he figured she would get desperate pretty fucking quick. He had contacts there too. They were all perfectly logical reasons, and none of them made him any happier about the drunk or the lack of air conditioning.\n\nHe glanced at his watch when he heard a car drive up out front. It was nearly eight, right on time. He stood up and waited for the knock on the door. When he opened it, he found a hard-looking woman with greenish skin standing there. She tried to put on an alluring smile. He stood there with his arms crossed, looking down on her.\n\n\"You a shifter?\" \n\n\"Sure am, babe.\" The voice was as hard as the rest of her. The stench cheap perfume, cheaper booze and unwashed flesh coming off of her mixed with the filthy smell of the room. It was something else he tried to block out.\n\n\"Show me.\"\n\n\"I ain't gonna-\"\n\nHe growled, one hand shot out, grabbing her upper arm hard. She screeched in pain. \"You're gonna do exactly what I fuckin' tell you to do.\"\n\n\"Shit! You crazy or somethin'? Lemme go!\"\n\n\"Show me!\" He'd bellowed loud enough to draw a look from a wino looking for returnable bottles on the other side of the parking lot.\n\n\"Shit! I'll do it, let me go!\"\n\nHe loosened his grip enough so that she could twist her arm away from him. A moment later, he was looking at a rail thin white-skinned blond with cartoonishly big tits. He snorted and stepped aside so she could enter the room.\n\n\"So,\" she smiled again. The smile was just as hard and just as repellant as it had been before, even though the lips were fuller. \"This what you like?\" She ran her hands over her breasts and tweaked her prominent nipples.\n\n\"Fuck no. Thought Dan told you this was somethin' special.\" He took his phone out of his pocket.\n\n\"I dunno, you look pretty goddamn special to me.\" She'd taken on her familiar green hue and lit a cigarette.\n\n\"Real fucking comedian, aren't you?\" He found the picture he'd secretly taken of Kelly when she was putting away the groceries. He hadn't been able to get her whole face, but he got enough of a profile and a good enough view of the line of her body to make a good starting point. \"This.\"\n\nShe laughed. It was a rough-edged cynical sound. \"You want that skinny little bitch? You got some kinda anorexia fetish?\"\n\nHe slammed her against the wall so fast that she barely had time to grunt when the plaster cracked behind her. His hand closed around her throat, stifling the protest. \"You're going to listen to me and you're gonna listen good, because shifter whores like you are every-fuckin'-place in this town. Nobody's gonna notice if one goes missing. You understand me?\" \n\nHer eyes were wide and starting to water. The smell of her fear was completely delicious. She nodded as much as she could.\n\n\"Good. Now, you're not gonna say a fucking word. You're gonna shift to look like whoever I want you to look like, and if you don't do it fuckin' perfect I'll gut you and find someone else who can.\" He slammed her back again, hard enough to knock the wind out of her. He was rewarded with another wave of fear that rolled across the small space that separated them. It made his mouth water for what was coming. He dropped the half-strangled woman.\n\nShe coughed and cringed at his feet.\n\n\"Get your ass up.\"\n\nShe wheezed. \"You tried to kill me you asshole!\"\n\n\"If I'd been trying to kill you, you wouldn't be breathing now.\" He used a hard boot to her stomach as punctuation. \"Get up.\"\n\n*~*~*~*~*~*\n\nIt had been ridiculously easy. Well, after the whore stopped rolling around on the floor whining. \n\nThe plan had been simple. He'd contacted Embry and spun him a nice little story about how he'd met Kelly when she was hitching to the airport. Nearest airport is four hours away so even though she was only in his car for an hour, they'd had time to get to know each other. She'd told him she was headed to Vegas to work as a pole dancer at a club called The Petting Zoo. The owner, Dan Gleason, owed him and wouldn't ask questions so confirmation was easy enough to arrange. The asshole hadn't even bothered to check it out first, just got on a plane. \n\nEmbry was watching the place, that much Creed learned his first night in town. The shifter worked there anyway. All she had to do was walk into the alley next to the club heading for an employee's entrance with her new look, Embry'd pulled into the alley and made a phone call about finding her. All Creed had had to do was wait for the fat fuck to get out of his car and walk by. Embry was unconscious and stuffed into the trunk of his own rental car before he knew what was going on.\n\nNow Embry was trussed up like a fucking Christmas goose in the sub-basement of an old warehouse. Creed was especially pleased with his choice of location. He'd worked there before and he chose the same room because it served his purposes so well. Embry's wide-spread arms were handcuffed. He was hanging by his wrists from restraints carefully placed in a network of pipes in the ceiling. His ankles were secured to a ring Creed had set in the cement floor on a previous occasion. \n\nCreed sat in the shadows and watched Embry start to wake up. A wave of terror rolled off of him when he recognized the dire situation that he was in. Creed smiled and stepped out into the light. This was going to be fun.\n\n\"Morning.\" His murderous grin clearly baring his fangs. Embry stared and then started struggling harder. The screams weren't far behind. His position and the struggling didn't leave him a great deal of breath to scream with though.\n\n\"You might wanna save some of that. In a minute you're going to have a lot more to fucking scream about.\" He took off his coat and laid it over the back of the chair he'd been sitting in. \"Lemme tell you how this is going to go. You're going to answer the questions I ask, and you're going to tell me the truth.\"\n\n\"Or what?\" It was false bravado.\n\nHe moved behind the suspended man. \"Or I get to see how much of your fucking blood I can spill before you die. Wanna know my personal best?\" His voice was a soft purr. \n\n\"Not going to tell you anything.\" The man tried to sound defiant.\n\nCreed laughed. It was an icy sound that was almost as cutting as his claws. \"Well there's something I've never heard before.\" He sliced easily through Embry's clothing. He needed skin for what he had in mind, and nakedness made a victim feel so much more helpless. He took none of the care that he had with the frail, but he kept the deep gouges along the sides of the PI's body. Screams echoed around him, forming chords of pain and terror that were as familiar and pleasing to Creed as the thick aromas of blood and fear. He walked around the bleeding man in slow circles, giving his victim time to contemplate his situation. \n\n\"Now, where to start.\" Creed brought one hand to his chin, leaving it smeared with blood. He ignored Embry's begging and started stripping the skin from the man's right arm. He didn't think he'd ever heard a man scream at that particular pitch. A woman yes, but not a man. He continued until he was a quarter of the way around the flabby arm. He left the skin peeled back and started to walk again, creating just enough air current to make Embry's pain worse. \n\n\"Who's looking for Kelly Demmer?\"\n\nThere was nothing but whimpering and mumbled prayers from the suspended man. Creed stopped and wrapped his bloody fingers in the man's short brown hair, forcing him to look into his killer's eyes.\n\n\"Suit yourself. I can keep this up until I start stripping the fucking muscles off your worthless ass. If you live that long.\"\n\nHe whined. \"I was just doing what I was told!\" \n\n\"Eichmann said the same thing. Who hired you?\" Creed repeated, his eyes narrowed.\n\n\"Her father.\" \n\n\"Bullshit.\" He started on Embry's left arm. \n\n\"That's what he told me!\" Embry screamed. Creed ignored it. He went on until the left arm was in the same state as the right.\n\n\"So what's his fucking name?\"\n\n\"Stanley! Stanley Wilton!\" \n\n\"That's more like it.\" He gave the hanging skin on Embry's right arm a sharp tug and waited until the PI's scream died before he went on. \"Why's he so interested in getting her back?\"\n\n\"I didn't ask, but he told me she was stubborn and spoiled. He said I should do whatever I had to do to get her back.\" Embry was sobbing now. His tears running down his chest. Creed decided to use that to his advantage. He started working on the right side of Embry's chest, down to the bottom edge of his ribcage. This time, when the skin was completely free, he dangled the piece of flesh in front of Embry's eyes. The PI vomited, causing himself even more pain as the acid from his stomach hit the stripped patch of flesh. Creed chuckled at the happy accident.\n\n\"Stubborn and spoiled huh.\" Creed started walking again. Stubborn he could see, but spoiled? It was so ridiculous it was almost enough to piss him off even more. He knew if he let his anger take over Embry wouldn't last long enough to tell him anything else.\n\n\"Shit I don't know, that's what he told me. Please, let me go. I swear I won't-\"\n\nThe plea was cut short with a scream when Creed ripped more of the skin from Embry's right arm.\n\n\"We ain't done until I fuckin' say we're done, and then you're not going to be in any kinda shape to tell anybody anything. Tell me about Stanley.\"\n\n\"He's an accountant.\" Embry said quickly.\n\nIt was too quick. \"Keep fuckin' lying to me.\" Creed started working on the other side of the man's chest. This time, he stuffed the piece of flesh into the PI's screaming mouth. He chuckled when the horrified man spit it out at him. \n\n\"CoH. He works for CoH in local outreach.\" \n\nEmbry's breathing was getting shallower. That was a consequence of how he was bound, but he'd lost quite a bit of blood too. In that state, Creed was sure he was telling the truth as he knew it.\n\n\"Just local shit?\"\n\n\"He wants to do more, but he's still just local.\" Embry's eyes were looking glassy and he'd just about outlived his usefulness anyway.\n\nHe leaned in close and wrapped one hand around the PI's throat. \"Who else is looking for her?\" \n\n\"N-nobody! I swear!\" Victor held Embry's eyes. He smelled terror, impending death, puke, blood and the truth of the PI's statement. \"Wilton's got no money to hire anybody else. She sure as hell doesn't have-\"\n\n\"The frail is mine and she's gonna stay mine until I decide otherwise.\" With the claws on his thumb and forefinger, he sliced through both carotids at the same time he stepped back. Not to avoid the spurting blood, but to avoid the piss and shit that usually went along with death.\n\nHe'd gotten a better idea of what Stan was up to, he'd also gotten the chance to get his claws into something that screamed. For those reasons alone it was a satisfying kill. He didn't think for one fucking minute that the frail was completely safe. She never would be as long as she was with him. At least he had a better idea of what Stan was; a vindictive asshole with ambition. The most dangerous kind.\n\nCreed sat down for a few minutes, his feet propped up on the wall. There would be time to take care of the body after he'd had a drink. He took a beer out of the six-pack he'd found in the PI's car. It was warm and wasn't the brand he liked, but he was sitting under a warehouse with a half-skinned corpse a few feet away. This wasn't the time to be picky.\n\n*~*~*~*~*~*\n\nKelly hadn't slept more than a couple of hours at a stretch since Victor left. She'd watched endless hours of television. She'd finished the book she was reading and got a good ways into another. She'd cleaned most of the house from top to bottom. She was still hesitant about even being in his bedroom, let alone moving his things around, so she hadn't done anything but the basics in there. His study was still completely off limits. Kelly was achingly curious about what was behind that closed door, but she was afraid of drawing his anger for what amounted to nothing more than a lack of self-control. She was sure that he would treat open defiance more harshly than a mistake.\n\nThe phone he'd given her was another source of temptation. She didn't care about the second contact so much. In fact that, the whole idea of finding out who that contact was scared Kelly a little. Whoever that person was, contact with him or her meant that Victor was gone, and that was not something that Kelly wanted to think about. \n\nA couple of times she'd been tempted to call him, but he didn't seem like the kind of person who spent hours on the phone talking about nothing. In truth, she wasn't either. Half of what stopped her was not knowing what to say if he answered.\n\nThe main temptation of the phone was to call Cody. It wasn't logical and Kelly knew that. The only phone was in Stan's den, and even if her mother or Cody happened to be in there when it rang they weren't allowed to answer it. None of that stopped her from practically aching to talk to her brother again. For so long, Cody had been her reason for working overtime to keep Stan angry at her. It had kept him safe a portion of the time.\n\nShe had no idea what Victor would think about getting him out of there, but she had a pretty good idea what Cody would think of Victor. He was so young when their mother joined the CoH that he didn't really have another way to think about the world and people in it. Cody hated Stan, but he believed all the hateful crap their stepfather spewed on a regular basis. Just thinking about it made her head hurt.\n\nAt around one in the morning, Kelly was nodding off on the couch. She forced herself to get up and go to bed. She might not be sleeping much, but it was easier to dream of Victor when she was in his bed.\n\n*~*~*~*~*~*\n\nCreed pulled in to the concealed driveway at a little after six-thirty in the morning. He'd been gone a little less than sixty hours and hadn't managed to sleep more than two hours at a stretch. Didn't matter. He was used to that. He wasn't used to all the fucking wondering that had gone along with this trip. He wondered what the frail was doing and if she had done what he told her about staying inside. If she was sleeping in his bed. If she was playing with her pussy while she thought of him. Course that would mean she was thinking of him and he wasn't even sure she was doing that. \n\nHe'd thought about calling after Embry was dead. But what the fuck would he say? \"Just called to say hi, but now I have to go dismember a corpse, so have a nice day.\" If she hadn't already run off she would after hearing that. It was easier to just not say anything and let her fill in the blanks.",
        "He stretched when he got out of the car, grabbed his bag and started over the hill, avoiding the path. He could see that a light was on in the kitchen. Most of the early morning light was still filtered out by the thick woods that surrounded the place. He moved silently in the dark around the house, letting his senses tell him if she'd obeyed him about staying inside at least. Her scent was there, but it was faded. He smiled, the idea of her obeying him sent another rush of power straight to his groin. \n\nAfter one circuit, he walked into the kitchen, expecting to find her there. An orange sat in a bowl, half-peeled. The kettle was on and the water was about to boil, but she was nowhere in sight. He turned the burner off. The smell of her fear was bright and sharp in the air. What the fuck? \n\nThe phone on his belt started to vibrate. He checked the number and rolled his eyes. \"Creed.\"\n\n\"There's someone here!\" She sounded terrified.\n\n\"I know. Me.\"\n\nThere was a long pause. \"What do you-?\"\n\nHe followed the trail of her fear to his bedroom door. \"Just get your ass out here before I have to tear my own goddamn door off the hinges.\"\n\n*~*~*~*~*~*\n\nKelly cursed herself for being so stupid. She slid the bolt and opened the door slowly. He was standing there, staring down at her, half amused, half angry.\n\nKelly managed a little shrug, her heart was pounding. \"I did what you said.\"\n\nHe looked at the phone and held out his hand. Kelly felt her blush deepen. She closed it and placed it in his hand. He put it in a pocket. \"Victor-\"\n\n\"Shut up and get out here. Or do I have to repeat myself again?\" The low growl followed his last word. It made her knees tremble. Kelly wished she was wearing more than the t-shirt she'd slept in. She moved into the hall with him.\n\n\"I'll make breakfast.\"\n\nHis hand twined in her hair, tugging her head back so that she was looking up at him. \"After.\"\n\n\"After what?\" Kelly's voice was barely audible. He grinned and massaged one hard nipple through her shirt, drawing a little moan from her.\n\n\"After I fuck what's mine.\" His fingers tightened on her nipple, sending jolts of pain and aching desire through her. \"Take this off.\" He tugged at the shirt. \"Or I'm gonna fucking shred it.\" He let go of her hair.\n\nKelly blushed deeply, but pulled the shirt off. He traced the healing bite on her right breast with the tip of one claw. That wicked instrument continued down over her puckered nipple, drawing a deep moan from Kelly.\n\n\"Missed me, didn't you frail?\" He purred next to her ear. Before Kelly could respond, he lifted her and slammed her back against the wall. Her groan was lost in his aggressive kiss. Her nails dug into his shoulders, her legs around his waist. His fingertips traveled down over her side to her panties, she reached down and grasped his wrist.\n\n\"No don't.\" He stopped, she could feel new tension in his muscles. \n\n\"You really think you wanna say no to me?\" The tone in his voice sent a shiver down her spine.\n\n\"That's not what I meant-\"\n\n\"Then you better explain real fuckin' quick.\"\n\n\"I just meant than I've only got three pairs of panties-\"\n\n\"Like you better without 'em.\" He tore through the sides of the garment. Kelly whimpered softly when he pulled the scrap of fabric from between then and held it to his nose. A grin spread across his face. Kelly looked away, but her hands moved over his arms and chest. She could feel how hard he was already. Her hands fumbled with his belt. He chuckled and moved her hands away. \"Tell me what you want, frail.\" His mouth was on hers again, her body supported by one arm around her waist and the wall. She whimpered when she heard his pants fall to the floor.\n\n\"Tell me, or I'll keep you on the edge all fucking day.\" One knuckle explored her folds, rubbing the small button concealed there. Kelly arched against him, her head hit the wall with a thump, but she didn't feel it. True to his word, he backed off. His mouth traveled down the side of her neck, biting just hard enough to draw blood. He purred next to her ear. \"You know I can do it.\" \n\n\"Want to feel you inside me.\" The words were little more than a whimper, but they were all he needed to hear. He chuckled and slammed into her. Kelly screamed. It was shocking and painful and exactly what she needed. Kelly buried her face against his shoulder, her nails biting into his back. Her hips met his, her cries mixed with his growls until the pleasure consumed her in a fast-moving fire. Her head hit the wall again. His roar filled the small space as the rush of his pleasure filled her body. \n\nKelly felt him sit down, his back against the other wall. She rested against his chest, her body limp, trembling. How long they sat there with his hands and claws playing lightly over her back, she couldn't say. Eventually, she wanted to feel more of his skin, she lifted his shirt. He chuckled and took it off. She sighed and relaxed against his broad chest. She heard him sniffing the air.\n\n\"Your shoulder's infected.\"\n\nKelly glanced at the red-edged scratches. \"It does look a little red.\" She put her head down again. \"I can't reach those on my own.\"\n\nThe backs of his claws traveled lightly down the middle of her back. \"You didn't get much sleep either.\"\n\n\"Was a little more on edge than usual.\" \n\n\"That how you knew someone was outside?\"\n\nKelly thought about that for a minute. \"I don't know really. That little tree that's growing outside the kitchen window moved, but that seemed wrong because there wasn't any wind.\"\n\n\"Could've been an animal.\" His hands moved down to her bottom and then back up. \n\n\"It was quiet. It seemed like an animal big enough to make the tree move that much would have made noise. Only a person would have bothered to be quiet.\"\n\nHe chuckled. \"You don't miss a fucking thing, do you?\"\n\nKelly smiled against his shoulder. \"Clearly I missed that whoever it was didn't have to break in.\"\n\n\"How long will it take you to pack?\" \n\nKelly froze. \"Pack what?\"\n\n\"I dunno, those two pairs of panties you have left and whatever else you've got.\"\n\n\"Half an hour maybe.\" Her heart was starting to pound. \"Why?\"\n\n\"Don't take much to make you nervous does it?\" He draped one heavy arm around her. \"The why is because I'm getting you the fuck out of here. Embry ain't gonna come back but this is the last place anybody is sure you were.\"\n\n\"Where?\"\n\n\"Another one of my hideouts. Think you can be ready to leave by nightfall?\"\n\nKelly nodded. It would take her further away from Cody, but he was right. Stan wasn't just going to give up and she'd be better off trying to figure it all out from a distance.\n\n\"Maybe we can both get some fuckin' sleep between now and then.\""
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "action adventure",
        "victor creed",
        "mutant",
        "sex against a wall"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-05"
}