{
    "title": "The Cherry Poppers Ch. 27",
    "pages": [
        "Chapter 27 \u2013 The contest soon ends. \n\nJason made it to class just in time for the exam. He had little time to contemplate what Mark had told him until after the test was over. As he walked back to the frat, his thoughts lingered on what to do now. Anything he came up with seemed implausible at best. He was really in a jam and most likely had to settle for a tie at nineteen cherries. \n\n'Damn, must be a way,' he told himself as he walked along. \n\nTime was not on his side. December 10th, the contest conclusion dinner, was just three weeks away. Besides that he only had two potentials left and both sucked. More pointedly, one hated his guts and the other was the roommate of his girlfriend. \n\n'Of all the two women on campus, I have to have these two as my only prospects,' he lamented.\n\nThe contest rules were clear that the card files from the infirmary would be the only verification of the girl's virginity accepted towards the total count. Without any other verification method allowed, Jason was screwed. Even if he found several virgins to chase after, without the cards to show proof, they wouldn't count towards his total. The more he dwelled on it the more hopeless his situation seemed.\n\nAs he entered Theta Chi he decided, 'Oh, well. I guess I'll have to settle for tied with Mark and a couple of the others. Hell, $1.6 million is unbelievable anyway.'\n\nEven as he tried to clear his mind and forget about it, the competitive side of him that made him such a phenomenal swimmer couldn't quite let go of the challenge. He finally managed to forget about it temporarily over dinner with Chad, Kyle, and some of the brothers. \n\nJason finished the rest of his exams the next two days. On Thursday, he called Beth like they had planned. The college was closing for a week including Thanksgiving break. He wanted to spend as much time with Beth as he could and forget about the contest. His thoughts never quite let go of the need for one more, but as each day passed, his interest in worrying about the dead-end he faced waned.  He had all but accepted his fate.\n\n\"Hello,\" Beth said.\n\n\"It's me,\" Jason voiced over his cell.\n\n\"Hi, handsome,\" Beth replied.\n\n\"What's up, gorgeous?\"\n\n\"Just waiting for my man to call?\"\n\n\"And who's that?\"\n\n\"Just this handsome guy on the other end of the phone.\"\n\n\"Oh, me. I get it,\" Jason said jokingly.\n\n\"Can you come out and play?\" Beth mused.\n\n\"Yes, what do you want to do?\"\n\n\"I don't care.\"\n\n\"How about dinner and a movie?\"\n\n\"Sounds good to me,\" Beth said.\n\n\"I'll be by at six to pick you up,\" Jason informed.\n\n\"Great. See you then, stud,\" Beth stated before hanging up.\n\nJason searched online for a movie. He found one called \"Hangover\" that other guys had told him was funny. He checked the times before going to shower. \n\n\"Where're you going?\" Jason asked Chad as he walked back into the room from the showers.\n\n\"Ah, Connie and Sophie are doubling with Kyle and me,\" Chad confessed.\n\n\"Oh, moving in quick on my friends,\" Jason queried with a frown as if mad.\n\n\"Well, I didn't think you'd mind and Connie and I are getting...\"\n\n\"Chad...it's okay...I'm only kidding you...I don't care at all. I'm going out with Beth tonight and actually you're doing me a favor by taking over for me,\" Jason proposed.\n\n\"Yeah...what's with this fuck'em and leave'em deal anyway, roomie?\" Chad asked.\n\n\"I'm done with that,\" Jason professed. \"I'm a one woman guy from now on.\"\n\n\"Really...you're finally hanging up that big dick so as not to lose Beth?\"\n\n\"Well, I won't say I'm hanging up my dick,\" Jason declared laughing, \"but I'm out of the fucking other women pool.\"\n\n\"I'm glad...I'd hate to see you lose Beth,\" Chad stated.\n\n\"Me too, roomie. Me too.\"\n\nChad left before Jason when Kyle came to the room to get him. Jason left soon after to get Beth. He got to her room about ten to six. Haden answered the door for him.\n\n\"Hi, Jason,\" Haden said. \n\n\"Hey, Haden,\" Jason responded even as his thoughts drifted back to the contest upon seeing her. \n\nHaden let him in. Beth kissed him and said she'd just be a minute and left to go to the bathroom leaving Jason alone with Haden. His mind and eyes mischievously checked her out as she offered him a drink of water. \n\nPretty and slender, Jason couldn't figure out why Haden wasn't beating the guys off. She did act shy but her brunette hair and blue eyes were a striking combination. Maybe it was the slightly nerdy nature that Haden exuded. Beth had told him often what a brain in math Haden was. Jason knew Math was her major too.\n\n\"How were exams?\" Jason asked Haden as she handed him bottled water. \"Thanks.\"\n\n\"Fine,\" Haden said. \"And you?\"\n\n\"Good. I think I did well on all of them,\" Jason proposed.\n\n\"Me too,\" Haden agreed.\n\n\"How do you handle that math stuff?\" Jason said joking. \"I'm glad I only have one more math class next year.\"\n\n\"Comes easy to me I guess,\" Haden said with a smile.\n\n\"What ever happened to that guy we double dated with?\" Jason asked.\n\n\"I guess he lost interest,\" Haden replied with a weak smile.\n\n\"What!\" Jason exclaimed. \"You're beautiful.\"\n\n\"Thanks, Jason... but I'm not sure others feel that way,\" Haden espoused.\n\n\"They're nuts,\" Jason claimed.\n\n\"Thanks,\" Haden said, just as Beth returned.\n\n\"Thanks for what?\" Beth queried them both.\n\n\"I was just telling Haden that I can't believe the guys aren't beating her door down.\"\n\n\"Oh, yeah?\"\n\n\"Yeah...she's definitely cute enough,\" Jason added.\n\n\"You hot for my roommate, big boy?\" Beth questioned but with a smile.\n\n\"I'm just saying that I think she should have more guys after her.\"\n\n\"Maybe so,\" Beth agreed, but not with as much conviction as Jason would have expected. \n\nJason looked a little puzzled at Beth but she didn't seem to notice. When he turned to Haden, she just smiled weakly at him and moved to her desk. \n\n\"Ready,\" Beth said.\n\n\"Okay.\"\n\n\"We'll be back later,\" Beth informed Haden.\n\n\"Okay,\" Haden answered.\n\n\"Bye, Haden,\" Jason said as they walked to the door.\n\n\"Later, Jason,\" Haden replied.\n\nBeth and Jason hurried to his car. The movie started at 7:45, so they needed to eat dinner fairly quick. They decided on the diner which was close to the theater anyway. Within ten minutes, Jason was wheeling the Camry out of campus and down the road. \n\nThey talked about school and swimming mostly over dinner. Jason mentioned Haden again, trying to draw Beth into a conversation about her but she seemed reluctant to discuss much about Haden so Jason dropped it. \n\nThe movie was hilarious and they both were still laughing about it as they exited the movie around ten. By 10:25 they were back in the parking lot at the dorm. As they walked into the dorm, two other people approached from another direction in the dark. They arrived at the entrance and into the light there at the same time.\n\n\"Oh my, look who it is,\" one of the two women said.\n\n\"Hi, Sierra,\" Jason responded.\n\n\"You still up to your old tricks, Jason?\" Sierra asked amused.\n\n\"No,\" Jason stated.\n\n\"What's she talking about, Jason?\" Beth asked.\n\n\"Yeah, Jason. Why don't you tell her,\" Sierra said laughing. \"Bye.\"\n\nJason held the door as the two women quickly passed by Beth and him. Sierra gave him a big smirk and the other girl looked at him curiously as they entered. He could imagine the smile on Sierra's face as she walked away down the hall as Beth spoke loud enough for her to hear.\n\n\"What is she talking about? Isn't that the woman I saw you getting into your car with?\"\n\n\"Yes.\"\n\n\"Well?\"\n\n\"I gave her a ride, remember?\"\n\n\"Yes, you told me that.\"\n\n\"Well, turns out she hates my big brother, Mark for something he did to her. She's basically painting me with the same brush because of what happened to her with Mark.\"\n\nJason left out the whole part about the orgy going on in his room. \n\n\"She just jumped down your throat over your association with Mark?\"\n\n\"Something like that,\" Jason contended. \n\n\"Screw her,\" Beth said as they proceeded up the stairs.\n\nJason was glad Beth dropped it so quickly. It wouldn't have taken much probing to discover the weakness of his excuse. It wasn't a lie but it was only a part of the truth which involved him wanting to sleep with Sierra and taking her to his room to witness the orgy going on there. \n\nAfter climbing the stairs, Beth and Jason entered her room. In the dark, Haden was nowhere to be found. He guessed that she was somewhere down the hall, sleeping with a friend for the night, to give Beth and he privacy.  \n\nAs soon as the door was closed, Beth turned and pushed him against it. Her lips found his in the dim light through the window and they kissed. They kissed very passionately until Beth's fingers began unbuttoning his shirt. He picked her up and carried her to her bed. She squealed with delight when he partly dropped her onto the bed. They pulled at each other's clothes until both were naked. The slight chill of the room drove them beneath the covers in a hurry. \n\nTheir kisses resumed with Beth's active tongue and hot, aroused breath, bathing all over Jason's mouth and face. He couldn't recall Beth being so hot for it before. 'Maybe, I got lucky and this is why she dropped the Sierra comment so quickly. Maybe, Beth has really hot pants tonight,' Jason wondered appreciatively. He smiled to himself as he watched Beth move swiftly into the position she wanted between his parting legs. \n\nJason continued smiling as he watched Beth stare at his already hard cock. He noticed with amusement the desirous look on her face for his big cock. Her blue eyes feasted on Jason's eight inch dick. He watched with intensity as the redhead's tongue flicked out of her mouth serpent-like and tickled around the little hole in the tip. Beth's tongue danced across the soft and sensitive flesh and wet the bulbous head. \n\n\"Oh, baby,\" Jason groaned.\n\nBeth finally looked up and her eyes twinkled with a smile as she kept licking. She teased him a bit more before stopping momentarily.\n\n\"I could suck this beautiful cock everyday at least once,\" Beth said amusedly. \"Just bring him by.\"\n\n\"Gladly,\" Jason replied with a smile too.\n\nBeth worked Jason's dick like a cocksucking pro for a good fifteen minutes. He came close to cumming several times but she smartly cut off her attack on his cock at the near last moment. Jason growled with his need for release each time she did it. The pleasure was too intense to complain though. His cock felt like a steel bar and Beth eventually climbed over it. \n\n\"Time to give him another home,\" Beth declared.\n\n\"Great... but go slow,\" Jason pleaded. \n\n\"Why...is that beautiful big cock ready to explode after Beth's treatment?\" she joked.\n\n\"God, yes,\" Jason burst out.\n\nBeth settled over Jason's cock and it took a little doing to get the large head into her tight pussy. Her slow descent gave Jason time to recover and enjoy the delicious squeeze of her small little cunt. He loved the little wiggle Beth gave with her ass when she finally reached the pinnacle of her descent. \n\n\"Oh, god!\" Beth howled. \"I love the way he feels bury inside me.\"\n\n\"You're beautiful,\" Jason claimed, looking up at her pert breasts and her cute face. \n\n\"Thanks, handsome,\" Beth responded.\n\nThey fucked for a lot longer than Jason would have believed he could last. Beth again repeatedly teased him by fucking him hard and fast, only to back down and go slow for a while. She even managed to give herself two nice small mini-orgasms before he could get off. Jason finally couldn't take it any longer and flipped her over on the bed. His cock never left her pussy as he probed her depths again. \n\nBeth had squealed when he flipped her, but soon moaned her delight as the different feeling of his cock in this position pleased her. She didn't have long to just relax though as Jason when quickly to pumping his cock faster into her.\n\n\"Ah...ah...Mmm,\" she groaned.\n\nIn no time, Jason's cock was a blur as he hammered Beth's soaked gash. Wet, squishy noises filled the air as he fucked her hard. \n\n\"Oh, god!\" Beth exclaimed as Jason fucked her hasty.\n\n\"Here it comes, girl,\" Jason growled.\n\n\"Do it! Shoot off inside me,\" Beth entreated. \"I want to feel it.\"\n\n\"Argh,\" Jason grumbled as his climax peaked.\n\nThe length of their lovemaking had Jason's sperm built up to the point of overload. He felt like his body was firing off cannon shots of cum into Beth's clenching pussy.\n\n\"Oh, god, I feel you,\" Beth howled as her orgasm peaked too. \"Ah...\"\n\nJason continued firing volleys of cum into Beth as she rode out her orgasm on his huge spurting cock. The extra heat of his cum inside her ignited her insides like a flamethrower. She too had built to a massive crescendo on his cock and the bliss coursed through her like a wildfire. \n\nFinally, Jason stopped cumming and briefly hung up on his elbows over Beth before slumping to one side. Her leg was still underneath him, against his raised chest, which was held up by his elbow under him. Jason glanced down her beautifully pale white skin to the redness around her pink shaved pussy. He could see the first of his cum oozing from her open slit. He watched with amazement at the unbelievable sight. \n\nBeth finally opened her eyes and saw where he was looking. \"I'm probably a mess with your stuff, huh,\" Beth concluded.\n\n\"A bit...but it looks incredibly sexy,\" Jason stated with a smile. \n\n\"Yeah?\"\n\n\"Definitely.\"\n\n\"I could use some tissues,\" Beth suggested.\n\n\"Not yet,\" Jason said with a smile. Still watching as more oozed out and ran down over her crinkled pink anal hole and the smooth cheeks of her ass.  \"Why do you shave everything off?\"\n\n\"What do you mean? I thought guys liked a girl shaved?\" Beth questioned.\n\n\"Yes, usually, but with a pussy as sweet as you, and your red hair, you should advertise that red hair with a strip up here,\" Jason said running his fingers just above her clit. \n\n\"Would you like that?\"\n\n\"Yes, definitely,\" Jason claimed.\n\n\"Okay,\" Beth said.\n\nJason stayed the night with Beth in her bed. He was just barely asleep, around three in the morning, when the door opened and Haden came in. He opened one eye to see her enter. She had on pajamas and looked like she had been sleeping elsewhere for a while but decided to return for some unknown reason now. \n\nThe light from the hall corridor splayed inside the room and illuminated the lower part of Beth's bed. Jason followed Haden's eyes as she looked at them before moving to close the door. Her gaze lingered on Beth for some reason. Jason realized after Haden had shut the door and walked by to her bed that the sheets were off Beth's breasts. \n\nHe thought about covering Beth but she seemed perfectly content. He also didn't want to move and give away to Haden that he was awake. Haden just crawled into her own bed as if she had indeed been sleeping before. \n\nJason thought for a while about the virgin Haden sleeping so close by to Beth and him. His dreams turned to getting out of bed with Beth and going to her. Taking Haden's cherry as she slept with unnatural peacefulness throughout the whole thing. The dream was so real. He woke again afterward from the uncomfortable pressure of his hardon against the covers over him.  \n\nJason lifted himself on one elbow to look around. The first light of day was starting to penetrate the curtains on the window. He looked over at the sleeping Haden but she wasn't sleeping. She faced them with her eyes open. Their eyes met and Jason smiled with a slight nod hello. Haden smiled and nodded back. It was then it dawned on him he needed to pee and his clothes were not near the bed. \n\n'What the hell am I going to do now,' Jason thought.\n\nHe looked over the still sleeping Beth to Haden again. She appeared wide awake and still watching him. He pointed to his clothes on the floor by the door. Without needing to speak, the smart Haden realized what he wanted. He watched as she took the clue and got up.\n\nJason observed Haden as she walked to his clothes. Her pajamas were of a heavy silk appearance, yet smooth. Her breasts were small for her size but Jason could see the points of her nipples as they surprisingly poked out her shirt. Haden was slender, with pretty brunette hair. Jason remembered she had the nicest blue eyes to go with her darker hair. He liked that combination, almost as much as his redheaded girlfriend.  \n\nHe continued to watch as Haden bent at the waist to pick up his clothes. She had a very nice ass Jason noticed as she bent. He nearly laughed as she hesitated before picking up his underwear. \n\n\"It won't bite,\" Jason whispered.\n\nHaden smiled as she turned to him, \"I know. I've washed my dad's.\"\n\nJason held out his hand for the clothes but Haden stayed just out of reach. Come here, she teasingly indicated to him with a big smile. Her nipples were still poking at her shirt. Jason tried to plead without making too much noise to wake Beth. Beth started stirring anyway. Seeing that, Haden handed him his clothes and retreated to her own bed. \n\nHe tried to don his clothes without further waking Beth but she was awake now. She turned to face him. They had been spooning half the night before Haden got there. Beth pushed her beautiful red hair out of her face as she rose up on an elbow. \n\n\"Where're you going?\"\n\n\"Bathroom,\" Jason exclaimed.\n\n\"I'll go with you,\" Beth offered.\n\nJason nodded and was a little shocked when Beth just rolled out of bed naked. She walked to her closet and grabbed a robe. As she took her time covering up, Jason looked to Haden for her reaction to seeing Beth nude. Haden was watching Beth but offered no surprise or special concern as she noticed Jason watching her too. She just smiled weakly back. \n\n\"Oh, Haden...I wasn't aware you were here,\" Beth stated when she turned and saw her. She showed no alarm or concerns either. \n\n\"That Bonnie snores,\" Haden explained. \"I couldn't sleep with her.\"\n\n\"Oh,\" Beth responded. \n\nJason got his boxers and pants on under the covers. He sat up naked from the waist up to put his shirt on. He was facing away from Haden but was sure she could see him. When he was done he joined Beth at the door. \n\n\"Want to shower too?\" Beth asked him.\n\n\"Okay,\" Jason said, glancing to Haden for her reaction. Seeing none, he exited with Beth when she grabbed towels and her toiletries bag. \n\nJason noticed Haden was getting up too as they left. He followed Beth into the bathroom and into the stall showers. He pulled the curtain closed as they dumped everything on the wooden bench in each stall. Jason stripped as Beth took off her robe and turned on the water. Soon they were hugging under the warm spray of water. \n\n\"You enjoy last night?\" Beth asked as the water wet her hair and ran down her back. \n\n\"You know it,\" Jason professed.\n\n\"Me too,\" Beth said and kissed him. \n\nThe kissed for only a few moments before Beth felt Jason's cock poking her just below the belly button. \n\n\"Someone wants to play some more,\" Beth said amused.\n\n\"I forgot to pee before we got in,\" Jason fretted. \"Shit, my bladder's about to explode.\"\n\n\"Here,\" Beth said, stepping aside and aiming him at the floor drain. \"Go ahead.\"\n\n\"Go in here?\"\n\n\"Well, you could try to sneak out,\" Beth said with a giggle.\n\n\"No thanks,\" Jason admitted. \"Not sure I can go with you holding me though.\"\n\n\"Oh.\"\n\n\"Let's try though,\" Jason claimed.\n\nIt took a second for him to be able to go but eventually he did. Beth held his dick and aimed the stream at the drain. She watched as he emptied his bladder down the drain. When Jason was finished, Beth let him go and kissed him again. \n\n\"I have to go now after seeing you,\" Beth lamented.\n\n\"Go ahead.\"\n\n\"Okay,\" Beth agreed and stood over the drain herself.\n\nJason watched with interest as Beth spread her legs and peed. He observed with fascination as she went. She glanced up from going to smile at him. Their familiarity with each other had taken another step forward.",
        "They washed each other, with each spending extra time on the other's key places. Jason's cock stood out like a tree branch from his body the whole shower. Beth's hands never seemed to be off it for long. Equally, his hands loved playing with her perky tits and scrumptious pink nipples. They were stiff for the whole shower too.\n\nWhen they concluded washing, Beth pulled Jason by his cock to the wall. With her back against the wall, she guided Jason's cock to her entrance. He entered her wet pussy with surprising ease. He fucked her against the wall fast and hard until they both came together in one glorious and blissful climax. They kissed a little more before cleaning up again.  \n\nJason even shared Beth's toothbrush as they finished cleaning up. He could hear another of the showers running as they gathered up all their stuff. Jason had dressed after drying in the shower. As they were walking out, he glanced in the direction of the showers again. He saw feet moving beneath the small opening at the bottom of the side of the stall. He watched the feet move as Beth and he left. Just before they got to the exit door, Jason noticed the person move towards the pulled curtain of the shower. The curtain was slightly ajar, maybe three inches. He saw Haden appear in the opening briefly, nude and wet. Her eyes caught his for a split second. \n\nAs Jason followed Beth back to her room, his brain digested the image just now burnt into his brain. He'd definitely seen one of Haden's pert breasts, with a quarter sized brownish nipple and her unshaven snatch. He caught enough to know her hair matched everywhere. \n\nBack in the room, Jason tried to concentrate on Beth as she talked. They agreed to go out that night too. Jason was going to go home for a while to change and he would come back around six. He was gone before Haden reappeared. \n\nChad had left for the break to go home, so Beth and Jason shacked up at his place for the next three days before they both left to go home for Thanksgiving. They had sex every few hours for the three days. They showered together, ate together, and slept together. Both were ready for a break from school, and at the least, needed a few days rest from each other to recharge their sexual batteries. They had to admit to themselves though, it had been the best four days total of their lives. \n\nJason drove Beth to her house first and had dinner with her parents. It went very well and they seemed to love Jason right away. He didn't live that far away, under a half hour, and got home before ten. His parents were elated to see him and they filled him in on the family plans for the holiday. He barely once thought of Haden or the contest. His thoughts were just of Beth and rest and relaxation while he could. The contest seemed over, or at least winding down. He wished he could tell his parents of the windfall he'd be getting, but he hadn't decided how best to frame what would obviously need to be a white lie on how he earned the incredible amount of money. \n\n'I've got to call Mark to see how he plans to let people know,' Jason thought.\n\nJason lost himself while on vacation in watching football with his dad, eating great food, and resting up, he gave little thought to school or the contest. He did talk with Beth everyday and went twice to the local YMCA to get some pool time in. By the time the Thanksgiving break came to an end, he was rested and thinking of little else besides Beth, especially as he drove to pick her up on the way back. \n\nBeth's mother had lunch ready for them when Jason arrived. They had a nice lunch together with her parents before they headed back to school. When they were finally alone in the car heading back, Beth leaned across the console of the Camry and snuggled as close as she could. \n\n\"I missed you.\"\n\n\"Me, too,\" Jason agreed.\n\n\"Can we stop at my dorm for a while when we get back?\" Beth asked with her hand suggestively moving along his inner thigh to felt for his pant covered penis. \n\n\"Whoa...horny, little girl?\"\n\n\"I've missed you and all your parts,\" Beth said jokingly and with another squeeze. \n\n\"All parts of me have missed you too, sweetie.\"\n\n\"Can we stop then?\"\n\n\"Sure.\"\n\nThey talked mostly of school and swimming for the rest of the drive back to campus. When they got to Beth's dorm, Jason helped carry her luggage up to her room. Haden was already there and greeted them both. The moment struck Jason as odd when Haden looked deep into his eyes for a brief second before kissing him hello. Not only had they never kissed before but the look immediately reminded Jason of his glimpse of Haden naked in the shower. \n\n'Had she purposefully left the curtain slightly ajar?' he wondered to himself.\n\nHis wonderment was cut short though as he witnessed Beth greeting Haden also. They hugged for a second longer than looked natural, and Beth whispered something in Haden's ear afterward for a second too. Jason didn't understand the greeting until Haden announced she was going down the hall for a while. \n\n\"Got rid of her quickly,\" Jason observed after Haden left. \n\n\"That's right,\" Beth boldly admitted.\n\nBeth had barely finished speaking before she was in front of him, kissing him, and pulling up his shirt. She had Jason bare-chested in no time. Her fingers caressed his chiseled chest before looking up into his bluish gray eyes. \n\n\"It doesn't look to me like you gained a pound over Thanksgiving. Me on the other hand, needs to hit the pool,\" Beth lamented. \n\n\"You look fine to me,\" Jason encouraged, as he returned the shirtless favor to her. \n\nWhen Beth's breasts were right before him, Jason reached out to caress them, while her hands massaged his firm shoulders. \n\n\"God, I love these,\" Jason praised as he palmed the firm pale mounds and tweaked the already erect pink nipples. \n\n\"They're small,\" Beth retorted. \n\n\"They are not...what are you a B?\"\n\n\"Yeah, how do you know so much about bra sizes?\" Beth asked amused. \"Never mind, I think I know. Mmm, that feels great. I've missed you.\"\n\n\"Me, too.\" Jason agreed.\n\nFor the next hour and a half they got reacquainted. Beth couldn't get enough of his cock and sucked him to a wonderful orgasm, but not before teasing him a little by not letting him cum to soon again. Her reward was a huge load of Jason's cum which she dutifully swallowed. He then ate her to two mind-blowing orgasms before they settled into a slow fucking session. With the edge off his need, Jason fucked Beth through several great climaxes before he pumped her full of sperm on her last and best one. They lay in a heap of sweating bodies on her partially made bed afterwards. \n\n\"My god, that was unbelievable,\" Beth finally gasped. \"I guess we both needed that.\"\n\n\"You were fantastic,\" Jason said, rolling over to kiss her one more time. \n\n\"You too, stud. I think I'm a little sore now from that monster cock of yours. I'm not complaining though,\" Beth said with a smile. \n\nThey lay together for a while longer until the sweat had left their bodies and their breathing was long since back to normal. Jason was the first to roll out of the bed and dress.\n\n\"You want help unpacking before I go?\" Jason asked.\n\n\"No...I'll do it. Haden can help me too,\" Beth replied. \"You have to go so soon?\"\n\n\"I want to get settled in too.\"\n\n\"Sure,\" Beth said. \"When will I see you again?\"\n\n\"I'll call you for dinner later.\"\n\n\"Great.\"\n\nThey kissed for a few moments before Jason left. He passed by Haden and several other girls down the hall before reaching the steps. Haden gave him a smile and wink as she waved goodbye. The other girls smiled and waved too. \n\nJason dropped his suitcases on the floor of his room and noticed Chad wasn't back yet. Before unpacking, he settled down at his desk and called Mark.\n\n\"Hey, Little,\" Mark said upon answering. \n\n\"Hi, Big, how was Thanksgiving?\"\n\n\"Usual...too much turkey and gravy, oh, and pie too,\" Mark lamented. \"How's about you?\"\n\n\"Same...but a good time and I needed the rest.\"\n\n\"I'll say. Nineteen cherries in about a year has got to be some kinda record,\" Mark stated jokingly. \n\n\"One I'd never have thought possible if I hadn't done it myself. But that's over now.\"\n\n\"What...giving up?\"\n\n\"It's done! I ran into Sierra with Beth the other day. That was an unpleasant experience and fortunately Beth didn't want to know all the sordid details. My only other known virgin is Haden, Beth's roommate, and though I caught her nude recently, that is impossible. So, I'm stuck and just waiting for the dinner on the tenth of December.\"\n\n\"Sorry to hear that.\"\n\n\"Yeah, well, it's reality. Hey, have you thought at all about how you're going to explain to your parents and friends the sudden windfall?\"\n\n\"Sorta...tell me how this sounds,\" Mark said. \"Our fraternity won a national competition put on by a wealth eccentric for Greek pledging success. The frat with the best track record for getting and keeping pledges wins a $1,000,000 monetary reward. It wasn't until we won that we found out the old man had died leaving a small fortune into the trust for the contest instead. Our frat's winnings and the payment to each brother during the four year period turned out to be huge?\"\n\n\"Hmm...not bad. It has a ring of the truth even\".\n\n\"I know...that's why I think it is feasible.\"\n\n\"You think people will buy the eccentric wealth old man part about giving money to such a cause?\"\n\n\"We can make him out to be a Greek system advocate for all college kids.\"\n\n\"Well, I must admit I've heard of stranger things. You're going with that then?\"\n\n\"Unless someone else has a better idea.\"\n\n\"Maybe I will too.\"\n\n\"You're welcome,\" Mark said kiddingly.\n\n\"Yeah, thanks.\"\n\n\"How's Beth?\"\n\n\"Great! I'd definitely say we're in love,\" Jason claimed.\n\n\"Good for you. My love-life hasn't changed since coming to your place to be with Stef and Pammy.\"\n\n\"Sorry to hear that.\"\n\n\"Yeah, well, money might change that,\" Mark proposed.\n\n\"It might at that,\" Jason admitted.\n\nThey talked a little bit about the plans for December 10th. Mark and Jason planned to go together. The venue was a downtown Princeton hotel for dinner at 6:00. Naturally, every brother due money was coming. Two of the earlier brothers, just after Douglass Caulfield started the contest, had already died. Their wives were coming instead. Jason and Mark laughed about how they would be the only women, old women at that, in a room full of testosterone pumped up guys about to win millions for nailing virgins. \n\n\"That will be a little weird,\" Jason said with a laugh.\n\n\"Sure will,\" Mark agreed.\n\nJason had unpacked, greeted Chad and Kyle when they showed up, and even managed to get a swim in with Brad before driving over to see Beth. They had a great evening and this time spent the night at his frat room. Chad slept in with Kyle as his roommate wasn't coming back until Monday morning. Beth and he had another hot fuck session and both fell asleep sated and exhausted.\n\nSchool started the next day and everything quickly returned to normal. Jason had to concentrate hard on swimming as several big meets were coming up. Brad and he practiced often and both improved their times. Jason was faster, but Brad had improved even more, and a close second. He would be as much of a competitor as anyone to Jason's hopes of All American status and top conference awards. \n\nBeth and he managed to squeeze time in where they could. Jason was planning to give her a ring after the dinner on the tenth. He wanted her to know the money wouldn't change him and it was as much for her as him that he had done everything. Their lives together would forever be secure with skillful investment of the $1.6 million. \n\nJason went to his Thursday late class and found out the professor had cancelled. He had planned to call Beth for an early dinner together after the class anyway. Instead, he decided to surprise her, got his car, and headed to her dorm. He was pretty sure she didn't have late Thursday classes. He got to the dorm around four and headed up to her room. He arrived at Beth's room and knocked.\n\n\"Who is it?\" he heard Beth shout.\n\n\"Me, babe...open up,\" Jason jiggled the doorknob expecting to find it locked instead it was unlocked and the door opened. Thinking nothing of entering her room at four in the afternoon, he pushed it open. He was immediately shocked by what he saw. Beth was scrambling out of bed naked and so was Haden, from the same bed. Haden was wiping her mouth on the back of her hand. Beth's pussy was obviously red and wet. Even the small patch of red hair she now had for him looked moist. \n\n\"Jason!\" Beth screamed. \"What're you doing here?\"\n\n\"I came to surprise you for dinner,\" he said, trying to suddenly justify having opened the door innocently expecting nothing unusual to be going on in the afternoon. \n\nHe had to move out of the way, as she nearly pushed him aside to get to her robe in her closet. Haden ran for her robe too and this time Jason didn't just get a peek, he saw everything, her smallish breasts, her flat tummy, her nice long legs, and tight ass. He even saw the tuff of brunette hair above her gash he'd seen before. Haden looked genuinely panicked and it didn't help when Beth started yelling at him for opening the door and her for not locking it. \n\nAfter the girls both had their robes on, everyone just stood there, and stared at each other. Beth looked both panic stricken and mad depending on who she looked at. Her panic was for Jason and her anger with Haden. Haden just looked panicked. Jason was in too much shock to know what to do. His brain tried to digest the wild few seconds that just elapsed. \n\nFinally, Beth said, \"Jason, it's not what you think.\"\n\n\"What?\"\n\n\"I mean, Haden and I were just...\"\n\n\"Jason, it's my fault. I'm the one that seduced Beth.\"\n\n\"Shut up, Haden!\" Beth yelled. \n\n\"What,\" Jason repeated, not sure what to say or do. \n\nHis mind raced with thoughts of, 'is my girlfriend a lesbian too, actually bi-sexual. How long has this gone on?' \n\nJason looked to Beth and she started to cry. She went and fell on her messed up bed sobbing. Jason looked to Haden and she now had tears streaming down her cheeks too. He didn't know what to do or say. He stood there like a statue. The only visible movement he made was his eyes as they darted from one crying woman to the other. \n\n\"Jason...she loves you,\" Haden professed at last.\n\nJason finally moved and walked to Beth's bed. She lay on her stomach with her head in her pillow sobbing. He knelt by the bed and stroked her red hair. He could feel her whole body trembling as she cried. \n\n\"It's okay, Beth,\" Jason said, trying to sound convincing.\n\nHaden had moved to her bed and sat there with her head in her hands. Jason couldn't tell for sure but he believed she was still crying too. He tried again to console Beth, even as his own mind battled with his real feelings about this new discovery.\n\n\"Beth, please stop crying,\" Jason said.\n\nIt took a while for her to eventually stop, and she didn't turn to face Jason for another few minutes more.  When she did, her eyes were bloodshot and her face showed her distress. She looked at Jason as if her heart were breaking. \n\n\"Jason, I love you. Haden and I only...\"\n\nHer words traveled off as she couldn't decide how to describe or face what they were doing. Beth's normally pretty eyes danced over his face, as she looked for understand or answers to satisfy him. \n\n\"It's okay,\" Jason declared. \"Really.\"\n\n\"I love you...Haden and I just comfort each other. That's all. Can you understand?\" \n\n\"Sure.\"\n\n\"I'm not a lesbian...I mean, I don't want for that. I want for you.\"\n\n\"Me, too,\" Jason replied. \"Come here.\"\n\nHe held Beth and she sobbed a little more. Jason kissed her head and worked his way around to kiss her crying eyes and the sides of her face. \"It's okay,\" he kept repeating. \n\nBeth kissed him back. The first few were weak but they soon became filled with passion. They kissed hotly for some time. Beth hands started to undo his shirt buttons. Jason stopped her.\n\n\"What are you doing?\"\n\n\"I want to show you how much I love you,\" Beth pleaded. \n\n\"Later...come on let's get some dinner first.\"\n\n\"Okay, give me a minute, wait for me to get ready. I won't be long.\"\n\nBeth hurried by heading off to the bathroom with her stuff.  Jason sat on her bed and looked over to Haden.  She had also curled up on her bed, but now she sat up to look at Jason.\n\n\"I'm so sorry, Jason. It's more me, not her. She's heterosexual all the way. She loves you deeply. You don't have to worry about that,\" Haden commented, still fighting her own tears.\n\n\"How long have you two been...?\"\n\nJason let the words trail off too as he watched the expressions change on Haden's face. He could tell she wanted desperately to make him understand. It was true she loved Beth as well but not as permanent companions. Theirs was a deep friendship with certain side benefits brought into the relationship by Haden.  She had learned in high school, with a close friend, to love the touch of a woman before she ever really tried men. \n\n\"Since the end of last year,\" Haden admitted. \"Not as often anymore since her relationship with you has blossomed.\"\n\n\"Tell her not to worry,\" Jason said. \"It's okay with me if you two have a relationship.\"\n\n\"Thanks, but I'm afraid that's over now. She won't risk losing you for me,\" Haden stated.\n\nTheir conversation ended there as Beth returned. She dressed quickly in front of both of them. In another five minutes, she was ready to go. Jason saw Beth give Haden a sorrowful look just before she turned to leave. \n\nIn the car ride to the restaurant and over dinner, Beth tried, unnecessarily, to make Jason understand. She wanted desperately for him to know the whole story and the truth about her love for him.\n\nIt had started in the middle of their freshman year. Haden and Beth had gone to a frat party at another house one weekend, looking for guys, and came back to the dorm a little drunk and horny.  They weren't ready for bed yet. Beth had made popcorn and they sat on her bed together watching TV. The movie they were watching had some good romantic kissing scenes in it. A discussion ensued about the best kissing methods and soon, at Haden's bequest, they were trying them out on each other. It led to more, with Haden caressing her breasts, and eventually rubbing Beth's pussy through her clothes. \n\nThat was how it started. Haden confessed her relationship from high school to Beth. It wasn't long before the clothes, or actually it had been pajamas disappeared, and the caresses were more stimulating. Eventually, Beth gave in to Haden wanting to eat her pussy. Beth then learned to return the favor, but usually it was only Haden eating her. Haden surprisingly didn't care if Beth ate her. She enjoyed more the giving than receiving. Beth openly explained all this to Jason. \n\n\"See, babe, I'm all heterosexual, it's just that Haden and I have something special just between us. I do love her but not in the same way I love you. The love I have for you is all consuming. The love I have for Haden is more deep friendship.\"\n\n\"I think I understand,\" Jason offered. \n\n\"I hope you do and I promise its over. I'm only your girl from now on,\" Beth insisted.\n\n\"You don't need to do that,\" Jason said.\n\n\"I want to. I want to prove to you that it means less to me than we do,\" Beth proclaimed.\n\n\"I don't mind if you want to be with Haden occasionally,\" Jason said. \n\n\"But, babe, won't you be jealous?\"\n\n\"Why would I be jealous? I know you love me the most,\" Jason claimed.\n\nBeth looked at him puzzled. She had been sure he would insist that she drop her relationship with Haden. His lack of jealousy confused her. Then something else struck her. 'Could it be?' Beth wondered.\n\n\"Jason.\"\n\n\"Yes.\"\n\n\"I know guys sometimes find lesbian girls erotic. Are you only saying its okay because you feel that way about Haden and me?\" Beth quizzed. ",
        "\"What?\"\n\n\"You know...do you find it sexy, Haden and me?\"\n\n\"I guess so.\"\n\n\"Haden's told me she wishes she'd meet a guy like you.\"\n\n\"She does?\"\n\n\"Yes...she thinks you're a great guy.\"\n\n\"I like her too.\"\n\n\"You know, she's never had a boyfriend.\"\n\n\"Really, she's so cute.\"\n\n\"She is?\" Beth queried with a hint of jealousy, but also a smile.\n\n\"Yeah, not nearly as cute as you though,\" Jason made sure to say. \n\n\"Nice recovery. I'll accept that.\"\n\nThey drop the subject after that and talked more about the two of them. With dinner finished and it getting late for a Thursday night, Jason ran Beth back to the dorm. He pulled into campus and planned to walk Beth to her room. \n\n\"You can just drop me at the curb if you want unless you want to come up?\"\n\n\"I think we should get rest for school tomorrow. I have an early class,\" he said.\n\n\"Me too...okay.\"\n\nJason pulled to the curb and they kissed passionately. Beth put extra into it to show Jason her feelings were for him. Her hand rubbed his crotch as they kissed. She could feel him getting hard after a few minutes. \n\n\"You need me to do something?\" Beth asked.\n\n\"If you don't stop that,\" Jason said. \n\n\"Why don't you pull into a hidden spot in the parking lot,\" Beth said with a grin.\n\nBeth wanted to please Jason to show him she cared. Jason found a spot between two SUVs towards the back of the lot. He backed in so someone would have to walk right up to the car to see inside. When he shut the car off, Beth got up on her knees in the passenger seat. Her fingers opened his belt.\n\n\"Let's get him out here so I can kiss him too,\" Beth teased. \n\nJason helped her get his pants and boxers down. When his cock was free, Beth leaned over and kissed the velvety head. She knew they should go quick so she didn't tease him for long like before, taking the head into her warm mouth. \n\nBeth would have loved to have more time. Sucking Jason's cock was a favorite pastime of hers and she would have liked nothing better than to draw out this blowjob to give him the most pleasure. Instead, she attacked his cock like a starved slut trying to push his orgasm. Her mouth worked in sync with her hands to maximize his bliss. \n\nJason stiffened in the driver seat of his car as Beth used a combination of hands and mouth to coax the cum from his balls. Her smooth and deep up and downs were driving Jason over the edge quickly. She couldn't take him too deep this way but enough to feel like he was fucking her face. \n\nBeth would have like to move one hand to her pussy. With a little masturbation, she could easily get off while giving head. The trouble this time was she had jeans on. She wished she'd chosen a skirt but also didn't care to have her ass and pussy exposed if someone happened upon them. Instead, she settled for the enjoyment she got from sucking him off. \n\nBeth sucked harder and faster until she pushed Jason to the brink. He groaned loudly to warn her but it wasn't necessary. Beth was ready, even for the first forceful and massive spurt. Her mouth filled with cum as Jason launched at least four hard blasts, followed by several smaller spasms. Beth knew to keep working him until he was drained. \n\n\"Oh, fuck,\" Jason gasped as the last of his cum collected in his girlfriend's mouth. \n\n\"Mmm,\" Beth mewed as Jason finished giving her his spunk. \n\nBeth collected it all in her mouth and waited for Jason to open his eyes. When he looked at her she opened her mouth to show him his load of cum. She swished it with her tongue before putting on a show of swallowing it. She smiled at his reaction.\n\n\"Gee, Beth...that is fuckin' hot,\" Jason insisted. \n\n\"Glad you like it. I'm trying to make you see exactly how much I love being with you,\" Beth proclaimed. \n\n\"You don't have to worry or prove anything...I'm cool with what happened.\" \n\n\"You really are?\"\n\n\"Yes.\" \n\n\"It doesn't make you jealous or something?\"\n\n\"No...should I be?\"\n\n\"No...it's just I don't want to do anything to damage us.\"\n\n\"Don't worry, babe. I love you,\" Jason said.\n\n\"Me too,\" Beth confirmed, as she tried to hug and kiss him with the damn console in the way. \n\nJason pulled to the curb by Beth's dorm and walked her to the door. They kissed again before he left. They agreed to see each other the next day for a concert on campus. \n\nJason got up early to swim. He put an hour practice in before his first class. While he swam, his mind kept drifting back to things Beth had said. Images of Beth and Haden kept filling his mind. He couldn't stop thinking of the two of them together. Haden's body and the words Beth asked him, if he found it erotic? 'Did he,' Jason pondered. He tried to avert his thinking to something else as he showered in the pool locker room. Images of Haden's dark tuff of pubic hair had his cock beginning to swell in the shower. He had to fight those images away to keep from getting further excited.  \n\nHe managed to concentrate on classes and the day zipped by. He went to get Beth for the concert at six. When he got there both women were getting ready.\n\n\"Is it okay if Haden comes with us?\" Beth asked. \n\n\"Sure,\" Jason replied, looking to Haden.\n\n\"Thanks, Jason. I'd like to see these guys and I don't have anyone to go with,\" Haden said with a cute smile. \n\n\"No problem,\" Jason replied.\n\n\"Great, we'll be ready in a minute,\" Beth informed him.\n\nJason sat on Beth's bed and watched the two getting ready. He kept his eyes on Beth as much as possible but occasionally looked at Haden too. He didn't want Beth to catch him checking out Haden, yet his eyes were drawn to her, especially as she applied lipstick to her lips. His mind couldn't help but imagine those lips wrapped around his dick. \n\n\"Ready,\" Beth announced, startling Jason from his thoughts on Haden. \n\n\"Yep,\" Haden answered.\n\n\"Let's go,\" Jason added.\n\nJason paid for all three tickets despite Haden's insistence she pay her own way. As they climbed the bleachers in the auditorium, where the concert was being held, Jason expected to be sitting on one end by Beth. Instead, as Haden took the last seat of their three, Beth grabbed the first, which left Jason to sit in the middle. \n\nThe concert was a new group, just making it onto the radio, and with their first CD in stores. Beth had picked up on them first over the summer and got Haden and Jason both interested in them. Despite the newness of the band, which had a woman singer, the place was sold out. When the lights finally went down, Jason felt Beth's hand on his left thigh. She squeezed it and looked at him with a smile.\n\n\"I've want to see these guys for months. I'm so glad they're here.\"\n\n\"Me too,\" Jason agreed.\n\n\"What?\" Haden asked, when she heard them talking.\n\nThe music was already too loud to hear much. Jason had to lean over and talk in Haden's left ear. In so doing, his nose picked up the wonderful scent of her perfume and the softness of her clean hair. 'Nice,' he thought. \n\n\"Me too,\" Haden smiled back in response to his relaying what they were talking about. \n\nThe concert was great. The last half of the concert was spent mostly standing like everyone else. The female singer had an incredible voice and it boomed through the concert hall. Beth, Haden, and Jason were all dancing in place to the music and singing along on many songs they knew. The band played to the crowd and everyone had a great time. \n\nWhen the concert was over, Jason took Beth and Haden to get some dessert at the diner. Even for a Friday night, it was late by the time he took them back to their dorm. Beth wanted Jason to come up but he thought it was too late for Haden to find another spot to sleep. He wanted her to come with him back to his place. They were at an impasse until Haden spoke up. \n\n\"I don't mind if you two don't.\"\n\n\"What?\" Jason questioned.\n\n\"She doesn't care if you come up,\" Beth explained.\n\nJason couldn't see Haden in the backseat but he tried to tell by her voice if she was serious or just being accommodating. He didn't want to make her uncomfortable with Beth and him sleeping together. He was trying to decide if she was just being nice given he'd agreed she could come to the concert with them and then paid for everything. \n\n\"It's up to you two,\" Haden declared.\n\n\"She's fine with it,\" Beth encouraged. \"Park in the lot and we can all go up together.\"\n\n\"Okay,\" Jason agreed. \n\nOnce in the room, they were all too excited still to go right to bed despite the hour. Beth broke out the Captain Morgan she kept around. While Jason made drinks with coke, the girls changed into their pajamas in the bathroom. By the time the girls were comfortable, Jason had drinks made, the TV on a scary movie, and stretched out on Beth's bed. He was still dressed minus his shoes. \n\nHaden took her drink and went to sit on her bed, but Beth insisted they all watch the movie from her bed. Haden was scared of horror movies, and she shouldn't be made to sit alone over on her bed Beth relayed. This time Beth ended up in the middle. Jason believed that was Beth's way of controlling the situation. \n\nThey finished the first drinks fairly quickly. Jason couldn't drink more since he was competing the next day in a swim meet. He made Haden and Beth two more though. \n\nThe movie was a funny, scary movie, with some ridiculously gory spots of arms being severed and people being eaten by zombies. Beth and Jason laughed through the gory parts which helped Haden laugh along with them and enjoy the show better than she ever had before. Horror movies, she realized, weren't so scary if you laughed through the worst parts. \n\nWhen Jason had turned the horror movie on, it was already over half done, so before the girls finished their second drinks the movie ended. This time Beth grabbed the remote and found more of a love story. It too, was mostly over, and they watched one of the more romantic final scenes. Beth cuddled with Jason as the man and woman on the screen kissed. Beth's hand was again on his thigh. \n\nAt one point, Beth pulled on Jason's shoulder and when he turned to her she kissed him.  That kiss led to several more and her hand moving along his leg to seek out his groin. She kissed Jason passionately. The alcohol was making her relaxed and uninhibited, even with Haden so close. After they broke from kissing, Beth smiled at him in the darkened room. Next thing Jason knew, she turned to Haden and gently pulled her face around towards her. He watched as Beth kissed Haden tenderly on the lips. \n\nJason felt a surge in his dick as he watched Haden and Beth kiss. The fact that Beth kept squeezing his cock through his jeans didn't hurt either, but watching the two women kiss was an even more erotic thing before his eyes. Their kiss lasted as long as his had with Beth and he could see their tongues also exploring each other. It was obvious they had done this before. 'Oh, my god,' Jason moaned to himself, as he watched the two beauties exchange kisses.\n\nThe continued kissing between the women gain Jason a raging hard-on that hurt considerably trapped in his pants. They had forgotten about the movie completely. Jason lay in one corner of the bed, his back against the wall, with Beth curved up under his arm, and partially laying on his chest. Beth still had one hand on his dick as she pulled Haden more on top of her in their passionate kissing. \n\nJason felt like he was going to cum in his jeans when he watched Haden's hand slip between Beth's thighs and rub her crotch. He had been with lesbians or bi-women before, once, with Tiffany and Susan but he didn't really know them beforehand. It was far more erotic to see beautiful, virgin Haden with his gorgeous girlfriend. \n\nBeth looked down at Jason's clothes covered cock in her hand. She realized it was probably uncomfortable for him given the hardness she could feel through his pants. She slipped from besides Haden and against him, moved off the bed onto the floor, and angled between his legs. She smiled at him as she put her hand back on his cock. \n\n\"Look at this, Haden,\" Beth said amused. \"We need to free this bad boy for him. You want to see it?\"\n\nHaden looked at Jason for a second and when she didn't see complaint in his eyes, she nodded yes. \n\nBeth's hands rubbed up and down the bulge in his left pant leg. Jason groaned as she did and Haden stared intently. \n\n\"Shall I take it out and show her?\" Beth asked Jason with a giggle. \n\nJason could only nod his consent as he worried about cumming too quickly. He felt so turned on at the thought of Haden being there and watching Beth unveil his cock to her. He looked to Haden with her eyes on Beth's hands as they opened his pants. She sensed his gaze and looked at him. Her eyes shown with the desire she too must have been feeling. \n\nJason lifted up when Beth had his pants open and she tugged on both his pants and boxers at the same time.  His clothes slipped down his legs, revealing first the top of his cock, and then when the pants pulled away, his cock sprang free like a coiled snake. His eyes were drawn from his freed dick to Haden's face when he heard her gasp. \n\nBeth removed his pants completely and settled over his cock with her legs still on the floor. She smiled as she looked from his cock, to Haden's engrossed look, and Jason's yearning, strained face.\n\n\"Isn't it gorgeous, Haden? It's the most beautiful thing in the world,\" Beth praised.\n\n\"It's so big,\" Haden gasped.\n\nBeth's hands enclosed around the shaft and stroked lightly. The delicious feel and the look of both women, was enough to cause a huge drop of pre-cum to form at the little hole in the tip, and run down to Beth's fingers, making them sticky and wet. \n\n\"Did you see that, Haden?\"\n\n\"Yes.\"\n\n\"I think my handsome boyfriend likes having his cock stroked while you watch,\" Beth declared with a laugh. \"Are you hot for this, babe?\"\n\n\"God, Beth. I'm close.\"\n\n\"Wow...you're going to cum so soon? Not so fast, stud. Can Haden touch it first? You know, she never has touched one.\"\n\n\"Oh, god,\" Jason moaned loudly and another huge drop of pre-cum rolled from the tip as Beth's hands menacingly squeezed his excited cock. \n\n\"Ha ha,\" Beth laughed. \"Come touch it before he blows, Haden.\"\n\nJason felt Haden moving closer and glanced her way. She slid over on the bed still staring at his cock. She peeked at Jason's face as she settled next to him. He tried not to think about Haden touching his cock for the first time. He couldn't without losing it. \n\n\"Is it okay?\" Haden asked him, seeing the strained look on his face.\n\n\"Ah...sure,\" Jason claimed with a strain to his voice.\n\n\"Feel how soft the head is Haden,\" Beth suggested.\n\nJason watched transfixed as Haden's hand slowly reached for his dick. One part of him wanted more lights on to watch her touch him besides Beth's small desk lamp and the TV. Beth still held his cock at the very base and cupped his balls. She observed too as Haden's index finger moved lightly over the top side of the head. Jason groaned and another drop emerged from the tiny slit. \n\n\"God, this is hot, you touching him for the first time,\" Beth professed. \"Rub that drop of pre-cum around on the head, Haden. Feel how slick it is.\"\n\nHaden followed Beth instructions and ran her finger slowly up to the drop. Her fingertip spread the viscous fluid around and became bolder as it swirled around the head. Jason looked on as Haden used several fingers to get a better feel of his cockhead. \n\n\"Ah,\" Jason groaned as Haden squeezed the head only. He fought hard not to cum.  \n\n\"How's it feel?\" Beth asked, the alcohol partially slurring her speech. \n\n\"It is soft,\" Haden gasped. \"Soft and smooth feeling.\"\n\n\"Rub lightly here,\" Beth said pointing to the spot just below the head. \"He'll like that.\"\n\n\"Oh, shit,\" Jason gasped as Haden's pre-cum slick finger teased the nerve endings just below the head. \n\n\"See, he loves it there. All guys do. Now squeeze the shaft, but not too hard,\" Beth suggested. \"Start down by my hand and squeeze it moving upward.\" \n\nHaden followed Beth's lead and as her hand tenderly squeezed Jason's cock upward another bead of pre-cum oozed out and overflowed the cockhead. It ran down onto Haden's fingers and she smeared it along the shaft.\n\n\"Oh, shit,\" Jason moaned again, fighting very hard not to shot a geyser of cum into the air before Haden's eyes.  \n\n\"Hang in there, babe,\" Beth implored. \"What do you think, Haden?\"\n\n\"It feels strange, very hard, yet still soft.\"\n\n\"Give me your other hand,\" Beth requested.\n\nWhen Haden presented her other hand to Beth she showed Haden how to cup and feel Jason's balls. His sack was tight against the shaft. Jason wasn't sure how much more of this he could take. \n\n\"Feel the two nuts?\" Beth told Haden.\n\n\"Yeah...it's strange the way they move around.\"\n\n\"Guy's have interesting equipment, ha?\"\n\n\"Unbelievable. It's so big too.\"\n\n\"Jason's dick is bigger than most,\" Beth seemed to brag about her man. \n\n\"Nice,\" Haden gasped as she forced another groan from Jason.\n\n\"Oh, fuck you two,\" Jason howled. \n\n\"Make him cum, Haden,\" Beth instructed. \n\n\"How do I do that?\"\n\n\"Stroke him up and down like I showed you before and roll his balls gently in your other hand.\"\n\nHaden did as she was told and the affect on Jason was immediate. He groaned constantly with the first few strokes. His cockhead expanded and his body trembled from the incredible bliss Haden's hands gave him. He couldn't take more.\n\n\"Oh, fuck, here it...\"\n\nJason couldn't get it all out before a jet of cum shot a good two feet in the air. He moaned more as the second one was nearly as potent. \n\n\"Keep stroking him, Haden,\" Beth tutored as Jason fired again. \n\n\"Argh,\" Jason roared as more shot out. \n\n\"It's all over my hand,\" Haden squealed. \n\nMost of Jason's cum had gone straight up and came straight down, back onto his cock and Haden's stroking hand. The cum made her pumping hand slick and covered in milky white fluid. Haden dutifully kept rubbing Jason's cock as the last of his orgasm oozed from the tip and he stopped trembling.  He closed his eyes for a second as the wonderful pleasure quickly waned. \n\n\"You can stop now,\" Beth taught Haden. \"It gets somewhat sensitive after a guy cums.\"\n\n\"What do I do now?\" Haden asked, staring at her cum covered hand.  \n\n\"I'd do this,\" Beth said and she pulled Haden's hand to her mouth and sucked her forefinger clean. \n\n\"Oh, my god, Beth,\" Haden gasped.\n\nBeth ignored her and sucked another finger clean. When she had sucked three of the fingers clean, she leaned back and chuckled. \n\n\"Not bad, but I like it better when it's still warm right from his cock,\" Beth said jovially. \n\n\"I don't know,\" Haden protested, not sure she liked the idea. \n\n\"You should try it,\" Beth informed as she laughed and got up. She got tissues for Haden. \n\nBeth had some tissues for Jason too but started by sucking the top half of his cock clean. He moaned with delight as she softly sucked him clean. Then she wiped up the rest with the tissues.  \n\nIt was late and Jason lay exhausted with his shirt still on but naked from the waist down. Beth, with Haden's help, got the covers of her bed down and Jason moved so they could cover him. He fell asleep quickly never realizing the two women had crawled into Haden's bed together. It would be another half hour and several cums each before the two women wiped their soaked faces clean. They curled up together in Haden's bed.  "
    ],
    "authorname": "BlewWater69",
    "tags": [
        "virgins",
        "frat",
        "college",
        "cherries",
        "contest",
        "threesome"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-cherry-poppers-ch-27"
}