{
    "title": "Lisa Ch. 06: Changes",
    "pages": [
        "continued ...\n\n\"We're leaving?\" Jessica asked in disbelief. \"But how?\"\n\n\"We'll have to sneak out the back.\" Jim was saying as Josh came to look out the window with him. \"One of us will have to go out the front, get the car. Pick the rest of us up down the road.\"\n\n\"But they won't let us go.\" Jessica said, hysteria mounting. \"They'll find us!\"\n\n\"We can hide pretty good Jess,\" Scott said, moving to the window also.\n\n\"No,\" Jessica said, \"they'll find us.\" She didn't doubt Jim, Josh and Scott's abilities but she was even more certain that Angus and Riley would stop at nothing to catch her if she ran. They had made a point of telling her that several times a day, every day, for the past three years she'd been with them.\n\n\"Well then, we'll fight them.\" Josh replied, \"If it comes to that ...\"\n\n\"We'd better get moving.\" Jim added. \"If we get cornered in here we'll be up shit creek ...\" \n\n\"I'll get the car.\" Scott volunteered.\n\n\"Okay, we'll meet you up the road.\" Jim said moving to Jessica, and taking her arm leading her to the hallway, Josh right behind her. \n\nFor a moment, a brief moment, Jessica rejoiced at the idea of being free of Riley and most importantly Angus. It was so tempting to just go for it. Life would be so much nicer with Jim, Josh and Scott. She wouldn't have to be afraid anymore. \n\nBut despite that, Jessica realized that if the men split up it would be much harder for her to get the justice she wanted for her family. She'd have to track Riley and Angus down separately ... unless ... unless Jim, Josh and Scott managed to gun them down. Kill them in a gunfight. \n\nThat wouldn't be the kind of justice she'd been looking for or that her parents would necessarily have endorsed but it would be poetic justice. Killed by their own clan members. She certainly wouldn't lose any sleep over that at night. As Jim propelled her toward the hallway she felt momentary joy at the idea of an Angus ... and Riley ... free life. But then she realized it wouldn't necessarily turn out the way she wanted. \n\nAny combination of things could happen ... they could all end up dead, or just Jim, Josh and Scott and then she'd be stuck with Angus and Riley ... images of the men gunning one another down ran through her head. Her heart squeezed as she imagined bullets ripping Jim, Josh, and Scott apart like they had her family ... and there was that ... right or wrong she love them. Jim, Josh, Scott ... she didn't want to witness their deaths ... be the cause of their deaths. \n\nShe had no doubt that they were formidable adversaries but she had a hard time believing that pitted against Riley and Angus they could survive. Riley and Angus were the ones still going out on clan business. Even by Jim, Josh and Scott's own admission they hadn't been active in their cause in years. Her feelings for them were not logical, she knew. Not logical, and in these moments of clarity she realized that it was probably a mortal sin to love the killers of her family. But she did love them, she didn't want them hurt, and she was running out of time to divert the bloodbath she was sure would follow their departure. \n\n\"No!\" Jessica whispered. \"No!\" she said again, grabbing Jim's arm and pulling him to a stop. \"This is all wrong Jim, it can't happen this way!\"\n\n\"It'll never work Jess.\" Jim said. \"There may be a flicker of a chance with Riley, but Angus ... he'll just keep on hurting you.\"\n\n\"We don't know that ...\" Jessica replied, looking from Jim to Josh behind her and Scott still at the door.\n\n\"Did you see Angus' face?\" Josh asked. \"It's his night with you. There's no way that he's not going to hurt you somehow!\"\n\n\"I saw it Josh ... trust me, I saw it.\" Jessica said in a shaky voice. \"But they just got back. You all said that they want something from me, that they could learn to love me too. If that's true shouldn't we try? I'll focus on the cars ... on getting Angus to let me work on the cars with him. Maybe that'll be enough.\" \n\n\"But Jessica, Angus ... tonight. He's been gone for a week and I think he needs some release ...\" Josh said, remembering the way Angus had been looking at Jessica. \"And he's pissed ... Angus pissed is never good.\"\n\nJessica nodded ... her eyes wide with worry, \"I know.\" She muttered her resolve beginning to waver. \n\n\"Jess I know you said you could never use sex to turn things around with Angus or Riley, but that's the only way this will work. The cars aren't going to cut it babe.\" Scott said. \"If we're going to stay you're going to have to give him what he needs in the bedroom. But that's okay ... you love sex ... it should be easy.\"\n\nJessica winced. \"Not the way he does it.\" She said. \"He's very ... rough.\" \n\n\"I've been rough plenty of times.\" Scott said.\n\n\"Not that kind of rough ...\" Jessica said, her voice trailing.\n\n\"You don't ... he doesn't bring you any pleasure?\" Scott asked. Jessica shook her head.\n\n\"Figures.\" Josh mumbled, \"Always thinking of himself ...\"\n\n\"Maybe I could give him some of my magazines ... have a talk ...\" Scott was saying.\n\n\"That'll go over like a lead balloon.\" Jim said. \"Jessica, have you ever told Angus what you like? Showed him?\" he added when Jessica looked at him like he was insane.\n\n\"No. But I could ... probably ... if I had to.\" Jessica said her voice fading as the reality of what she was saying sank in.\n\n\"No. No way. You shouldn't have to!\" Josh said. \"We should go, now!\"\n\n\"Think it through Josh.\" Jessica replied, her voice trembling, reflecting the terror that gripped her, \"What are the chances that Angus and Riley will let me go? What have they promised me over and over again would happen if I ran? They're not going to let me go. And given that their kill count keeps climbing and yours doesn't, how well do you think you'll do against them?\"\n\n\"We still practice ... we have target practice every fucking day.\" Jim sputtered, his pride clearly wounded. \n\n\"That's good.\" Jessica interrupted as she saw Josh and Scott preparing to argue too, \"But when our lives hang in the balance is that good enough? I don't doubt that you're all very competent ... I witnessed your competence first hand don't forget ...\" Jessica added with a shudder, \"But that was over three years ago. You know better than I do, are Angus and Riley a force you want to take your chances with? And think about it. Everything you've done for your clan. All the people you've lost, do you really want it all to end by you turning on one another? Killing the friends who are your only remaining family?\"\n\nSilence hung in the air. In some tiny distant part of herself Jessica knew she was crazy. Something was wrong with her. Why was she arguing so hard to save these men's lives. Regardless of how good Jim, Josh and Scott had been to her lately it didn't excuse everything they'd done to her, her family, the sixty some odd people they'd each killed. \n\nBut she couldn't help how she felt. And at that very moment she didn't have the capacity to do what she knew any other sane person would do and let her captors slaughter one another. And she didn't have the energy or the time to feel guilty about it. She remembered what her parents used to tell her and her brothers all the time, \"All you can do is try your best. It doesn't matter what other people think so long as you can honestly say you did the best with what you had available to you. There's no point in beating yourself up about something that you can't change, just work with what you do have and make the best of it.\" So that was that. She had these men. \n\n\"It wouldn't be just Riley and Angus.\" Jim finally said. There was little doubt that the clan leader, Paul, would make this his business. \"The rest of the clan too. Paul would consider this an act of treason. For Riley and Angus he would come after us too.\"\n\n\"Shit ...\" Scott hissed. Josh groaned. It seemed that neither he or Josh had considered the rest of the clan. \n\n\"I'm sorry Jess.\" Josh said with a defeated air. \n\nJessica nodded ... she was paralyzed by fear ... they truly were trapped. She hadn't equated the rest of the clan into the mix at all. She knew the clan was made of up many separate cells that was orchestrated by one central cell but it never occurred to her that they would care about her ... would possible hunt her down. So in the end she really had no choice anyway. She had to make the best of her life here. \n\n\"None of this changes anything if either of them hurt you Jess.\" Jim said, \"Clan or no clan, if either of them hit you again they'll answer to us. I promise.\"\n\nAny comfort Jessica could get from Jim's declaration was decimated when Scott announced, \"They're coming back.\" And hastily unlocked the door.\n\n*************************************\n\nRiley had found Angus throwing his tools around the garage. \n\n\"I know what we talked about ...\" Angus growled stalking toward Riley, \"But you don't find it fucking suspicious that just as we decide to change things up, they've been changed up for us?\"\n\n\"I know it seems suspicious Angus but unless they have ESP or some other form of mind reading abilities how would Jim, Josh, Scott and especially Jessica know what we'd been talking about?\"\n\n\"Not fucking ESP ...\" Angus grumbled as he stalked around Riley. He knew there was no way they'd read his mind because if they had Jessica would have been handing him the salt ... would have been sitting next to him ...would have requested to spend time with him. Because that's what he wanted, more than anything. It wasn't until Angus had been immersed with the clan again for the first few days of the week that he came to the startling realization that the dreaming, day and night version, he'd been doing about Jessica was far more than just fantasy. It was a need. \n\nAnd as it turned out Riley had come to the same conclusion, and then they'd spent the rest of the week doing nothing but talking about it. Long discussions about how they'd come home and move forward with Jessica ... be less violent ... find some better ways to keep her in line. They'd both agreed that her lacking sense of self-preservation required that. But they'd simplify the rules so it'd be easier for her to follow them and therefore she could feel freer with them, more relaxed. Which in turn would lead to things like her offering to get them a beer or lunch. So it was more than just a little disconcerting to come home and find her already doing that. Albeit not quite how Angus hoped it would be. Her interactions had been far more focused on Riley or the other men.\n\nAngus stopped pacing as a thought occurred to him. \"Do you think the guys heard something from Alisha or Hannah?\"\n\nRiley considered that before shrugging. \"Possible I guess. But I doubt it. I'm pretty sure they've never met anyone from that cell. They're from clear across the country. I only knew Ali from that judge hit five years ago.\"\n\nAnd he knew her in the biblical sense. She'd been a fuck buddy for a few nights back then and that's why, when she'd shown interest in fucking again he'd jumped at the chance.  The idea of having a willing and fully participating partner in bed was incredibly attractive. And she'd had a friend, Hannah, and Riley had encouraged Angus to spend a night with her. She was only there for a few days and then going thousands of miles away ... it seemed a safe opportunity for Angus to also have a willing and fully participating partner in bed without worry of Angus getting emotionally hurt. It hadn't taken a lot of convincing and so they'd each planned to get their rocks off. And that's when they'd each and independently come to their startling realizations. \n\nThey didn't need sex as much as they thought they did. Neither one of them could go through with it. Riley hadn't even made it to the bedroom. He just knew it wouldn't work. He couldn't stop seeing Jessica every time he looked at Alisha. And it wasn't even the Jessica in his bed that he kept seeing but the Jessica flying off of Ebony. The Jessica petting Ebony. Alisha hadn't taken it well. She'd demanded an explanation for the change of heart but Riley couldn't supply one. He couldn't even explain it to himself.\n\nAngus had made it to the bedroom, and even got hot and heavy with Hannah, kissing, touching, but he couldn't get hard. He'd been harder than hell not even five minutes before they'd started but then his boner had simply wilted. Angus was beyond embarrassed but he had to give Hannah credit. She'd tried to help him along and when he finally suggested that he might need violence to fuck her she'd let him hit her a couple of times. But it didn't work. He realized that the only time he felt any movement in his cock was when he thought about Jessica. And it surprised him even more when he realized that they weren't all thoughts of hurting her. Just thinking of her seemed to work. Too stunned by his physical need for Jessica, he'd told Hannah to leave. She'd been pissed. But when he'd gone out later to the living room to have a drink with some of the other clan members he saw that Hannah had rebounded well and was busy making out on the sofa with some other guy. Riley had come out for a drink not long after also and that was when the ongoing discussion about Jessica had started. \n\nAnd now here they were. Somehow between the day they'd left and this very second things with Jessica had changed. And not understanding it, not being part of it, left Angus with an all-consuming ache inside.\n\n\"Angus, don't you think we may be making more out of this than we need to?\" Riley asked.\n\nAngus snorted. \"Drop that \"we\" bullshit. You think that I'm making more out of it.\"\n\nRiley nodded. \"Okay, I do. You know everything we talked about Angus. At some point you have to stop looking a gift horse in the mouth.\"\n\n\"Okay. Give me tonight. Just me and her so I can get a sense of where things stand. I just need a better feel for things.\"\n\n\"But you're not going to beat her?\" Riley asked.\n\n\"No ... swear to God Riley. I'll fuck her but I won't hit her. On my life.\" \n\nRiley nodded. And they headed back to the house. \n\n********************************************************\n\nScott unlocked the door just as Riley got to the porch.\n\n\"What's going on?\" Riley asked as he and Angus entered. \n\nHe stared at the rifles in the men's hands. \n\n\"Nothing.\" Jim said. \"I was just about to go clean the guns.\"\n\n\"Going in the wrong direction for that aren't you?\" Riley asked. Josh and Jim stood with Jessica in the entrance to the hallway. Jessica and Josh facing one another, as if they'd been embracing. And Scott by the door, also gun in hand ... yeah Angus and his instincts were definitely on to something. \n\n\"Angus is uncomfortable with the current situation.\" Riley said. \"He wants some alone time with Jessica, and given it's his night with her ... we're going to give it to him.\"\n\n\"You got a problem with that?\" Angus demanded when he saw the expressions on the men's faces.\n\nThere was the slightest shake of Jessica's head, and all three seemed to relax. Angus narrowed his eyes at the men ... he looked at Riley. It was evident from Riley's surprised expression that he'd seen it too.\n\n\"I'll be with the horses.\" Scott said as if grudgingly resigned to something. \"Josh, I need a hand.\" \n\nJosh hesitated, and then without looking around, followed Scott to the door.\n\nJim grabbed a couple more rifles. \"I'll be in the barn.... Cleaning the guns.\" He said glancing at Jessica. She looked so scared that he almost changed his mind about going. \n\n\"Take your time.\" Angus grumbled. Jim hesitated again but then Angus swung his eyes on him and growled, \"What are you waiting for?\" \n\nJim caught sight of Jessica from the corner of his eye and knew he wasn't helping things. She kept scanning her eyes between him and Angus and despite her fear it was clear from her expression that she was willing Jim to hurry up and leave. She was without a doubt the bravest person he knew. Less than happy with himself or the situation, Jim forced himself out the door. \n\n\"I'll be with the dogs.\" Riley said to Angus following Jim to the door. \"Remember what we talked about. We want to go forward ...\"\n\nAngus nodded but his attention was on Jessica, who stood in the middle of the room, looking at him. \n\nRight at him. \n\nFuck, this was so much like his fantasies ... The only thing betraying her demeanor of calm was the nervous grasping and ungrasping of her hands. She looked like she could want him if he pretended just a little ... he was going to fucking cum in his pants. Angus was breathing hard as he and Jessica silently looked at one another. \n\nJessica was going to pee her pants. She was so scared ... her body was shaking so hard her teeth were rattling. She honestly couldn't imagine that telling Angus what she liked during sex would in any way change things between her and Angus but Jim, Josh and Scott seemed convinced. She had to try even if it was just to reduce the amount of violence Angus inflicted on her. She shuddered to think about what would happen if she failed. \n\nShe so wanted to go to her zen place but she knew she couldn't. Blanking out, clearing her mind, relaxing and letting whatever happen happen was too passive. She had to be active, reactive, proactive. Her mind scrambled, desperately searching for some way to be all those things despite her fear.  And just as she began to despair about her lack of ideas, one came to her. Jimmy had suggested that if she'd pretend to be with him, Josh or Scott when she was with Angus or Riley it would help her to relax. She almost dismissed the idea. Jim, Josh and Scott were far to attentive during sex to make it possible for Jessica to pretend she was with them when she was with rough, mean and grabby Angus. But then she realized Scott was good at role play. It would be difficult given the level of brutality with which Angus always took her, but she could try to imagine that Angus was Scott and this was all a role play. \n\nYes ... yes that was what she'd have to do. But where to begin?  She didn't know... she had no idea, oh God! He was losing his patience. As the silence stretched between them his already aggressive posture and expression intensified ... the last remnants of hazel in his eyes greyed ... Jessica's heart was pounding so hard she was sure it was going to explode, she couldn't think ... her mind was blank. He took a step closer to her and she could see his permanently oil stained hands clenching into fists and that was when she remembered the cars. Scott had been setting her up with Riley to train the dogs ... Jim had told her to use the cars to get to Angus even though Scott seemed to think it was futile. Futile or not it was all she could think of. She wished fervently that she had thought of the role play idea earlier so she and Scott could have practiced. As it was she had to dig down deep to find her voice.\n\n\"I know Scott said that I'd requested to train the dogs with Riley ...\" Jessica said in a hushed voice trying as hard as she could to keep her voice calm. To sound casual. \"But I do really want to work on the cars with you.\"\n\n\"Come here ...\" he growled. Jessica sucked in her breath and moved toward Angus. Much like her zen tactic Jessica forced all thoughts from her mind except the idea that this was not Angus. It was Scott. And he was going to be rough ... inconsiderate, take what he wanted and not consider her needs. And she was going to have teach him what she wanted ... Scott would want it to be as realistic as possible, he always really got into the role plays so he wouldn't make it easy but it would be doable. Jessica felt the familiar and welcome feeling of calm roll over her. Everything was good with Scott ... now everything would be good with Angus.\n\n\"I ...\" Jessica began as she neared him but didn't get a chance to finish. Angus grabbed her, pulled her to him and brought his mouth down hard on hers. Jessica tried not to panic. Forced herself to relax, and to kiss him back.",
        "He placed his hand on her breast and began to squeeze. He couldn't believe she was kissing back. He slid his tongue between her lips. He tried to scoop her up but hadn't realized they were so close to the sofa. He lost his balance and dropped onto the sofa, Jessica on his lap, momentarily breaking lip contact with her. \n\nJessica leaned away while grasping his hand in hers and pulling it from her tit.\n\n\"Come here,\" he panted and took her tit again, pulling her mouth back to his.\n\n\"No ... Angus, stop! Please!\" Jessica had pushed his hand away from her breast and was now pushing against his chest with all her might, managing to get his mouth away from her by a millimeter or two.\n\n\"What the hell is the problem?\" he demanded when he'd tried again to grab her tit and she'd pushed his hand away for a third time. \"You were kissing me a second ago!\"\n\n\"That hurts!\" she said.\n\n\"Sure it does,\" he said and gave up on the breast. He pulled her right leg back, parting her legs and began massaging her through her pants.\n\n\"Ouch!\" Jessica said and struggled to sit up. \"Stop it Angus ... stop!\" and the crack of skin hitting skin broke the air. Both Jessica and Angus froze. Jessica looked at her hand that hovered mid-air. Then she looked at Angus. She had slapped him, hard. \n\n\"I'm sorry ...\" she said bringing her hand to his cheek and rubbing it. \"I didn't mean it ... but you were hurting me.\"\n\n\"Jessica, I think you know what it feels like when I'm hurting you!\" Angus growled. \"Should I refresh your memory?\" Fuck, this was so much like his fantasies he wasn't sure it was real. It occurred to him, briefly, that he should be in protective mode at the very least. The slap had been anything but gentle, he'd have to take that up with her after, but right now all he wanted was to fuck Jessica the way he did in his fantasies and there was no protective mode in his fantasies.\n\n\"No! I'm sorry, I really am. Look, I don't want you to stop all together ... it would just be nice if it was a little softer ... like this ...\" And Jessica brought her mouth gently over his. He forced his tongue in her mouth. His hand slid between her legs again prodding her hard. It hurt and she couldn't understand why. Scott had been forceful before and it never felt like this ... and then she remembered the sex book Scott had bought. It said a woman's sex had to be wet in order for touching and intercourse to feel good. It had to be teased into wetness ... \n\n\"No, no,\" she said grabbing his hand and spitting his tongue from her mouth. \"It can get rougher later, \"she said brushing her lips softly over his while she spoke, \"but it has to start gently. It hurts otherwise ...\"\n\nAngus tried to reach between her legs again. \n\n\"Angus,\" Jessica whispered, \"would this be easier in your room?\"\n\nNow why hadn't he thought of that? Getting up, he lifted Jessica over his shoulder and stalked down the hallway.\n\n\"Wait!\" Jessica said when they passed the bathroom. \"I need to go to the bathroom first.\" \n\nAngus hesitated as if unsure as to whether he was willing to take a delay. \"And maybe you could put some cream on your hands ... make them softer.\"\n\nAngus turned into the bathroom. \n\nHe couldn't believe he was standing there applying cream to his hands while Jessica pissed. She stood to pull her pants up, and Angus was on her, sliding his hand through the soft curls of her pubic hair, his fingers searching for the part in her lips.\n\n\"Still too fast ...\" Jessica muttered as she pushed his hand away.\n\n\"Jesus Christ Jessica! I can't wait any more!\" Angus growled, he tried to find her lips again, both sets.\n\n\"Your room, we have to go to your room.\"\n\n\"This is fine,\" Angus grumbled. \n\nJessica ran her hand over the bulge that protruded from Angus' pants. Angus moved away. Was she going to grab and pull? Jessica moved closer and returned her hand to the bulge. \"Let's go to your room Angus. I can ... help you ... and then we can start again, slowly. Please.\"\n\nShe unzipped his pants, found the slit in his underwear and took hold of his cock. Angus almost came right then.\n\n\"Come on ... \" she said and moved toward the door. Angus followed. \n\nIn his room, on his bed, he had the greatest urge to just tackle Jessica, but then she did something he hadn't expected. She lowered her mouth to his cock, and tried to swallowed it. Angus felt such extreme pleasure that he exploded. He lay panting on the bed, afraid to look at Jessica. Surely she was disgusted with him. He hadn't even had time to warn her ... to remove himself from her mouth. Then he felt her hands on his testicles. He looked up and saw her swallow. She licked his shaft and then swallowed again. He was astounded. He put his hand on her head. She looked up and smiled. \n\n\"Better?\" she asked. He nodded. He pulled her up to his chest.\n\n\"How did you ... where did you learn ...you've never done that before.\" He said. She kissed his lips and smiled. \n\n\"Scott's a good teacher. Ready to go slow?\" she asked. \n\nHe nodded. \n\nAs far as he was concerned, they'd go any speed she wanted. She moved his hand to the curls between her legs. \n\n\"You've gotta start gently,\" she said as she helped his fingers find the flesh between her lips. She rolled onto her back and parted her legs. He followed her and felt his manhood come alive again. He had to be dreaming. He was going to wake up and this was all going to be a really, really, good, wet dream. \n\n************************************************************\n\n\"Jesus Christ Angus!\" Jim hissed when Angus finally emerged into the living room. Trailed by Josh, a strange expression on his face. \"Where's Jessica, is she alive?\"\n\n\"Calm down Jimbo ...\" Angus said in such a relaxed tone all of the men did a double take, \"she's in the bathroom ... she'll be here in a minute.\" He turned to Josh, \"Were you waiting outside my bedroom door?\"\n\n\"We were all waiting outside your door!\" Scott hissed. \"Where the hell is she?\"\n\nAngus stood looking down the hallway. \n\n\"Here she comes now ... \" he said and moved to the kitchen. \n\nJessica came into the living room, and looked not only fine, but happy.\n\n\"Are you alright?\" Josh asked, not sure what to make of her smile and Angus' mellow mood.\n\n\"Fine thanks,\" Jessica replied. \n\nRiley looked Jessica over. She definitely had not been crying, and there didn't seem to be a bruise on her.\n\n\"Jess,\" Angus said from the kitchen. \n\nHe'd placed a plate with a sandwich on it on the table and pulled the chair back. \n\n\"Thanks,\" she said moving to the chair.\n\n\"You are very welcome ... \" Angus replied in a dreamy almost surreal voice, and planted a kiss on her lips just before she sat. He turned to the fridge, took out the milk, poured it into a glass, nudged the fridge door closed with his hip and turned back to Jessica. \n\n\"And your milk ...\" he said placing the glass in front of her. \n\n\"Thank you,\" Jessica said.\n\n\"You are very welcome ...\" he repeated. He slid his arms around her neck and planted a kiss on the top of her head.\n\n\"Angus!\" Riley hissed and motioned him over with his head. Angus sauntered over in the same dream like way he had been speaking. \"Are you on drugs?\" he demanded. \n\n\"Well, if Jessica is a drug ... then yes.\"\n\n\"Angus!\" Riley said his initial worry turning to downright terror. The other men moved closer. \"You were in your room for the whole damn day! We barely heard a sound from your room, and Jessica has come out actually walking. And you ... I don't know what you are ... did she make you eat something?\" \n\n\"Oh, I ate alright,\" Angus said and laughed. \"I ate and I ate and I ate ... she ate too. Did you know that she swallows? And I believe that for that I have you to thank! \" Angus said turning to Scott and shaking his hand.\n\n\"You're ... welcome ... \" Scott replied understanding beginning to dawn. Relief flooded over him. \"It's okay guys ... I know what happened. Holy crap Jessica!\" Scott said turning to where Jessica sat finishing her sandwich. \"I knew you were good baby, but I didn't know you were this good!\" he said waving his hand at Angus.\n\n\"Would someone care to tell us what the hell is happening?\" Riley demanded. \n\nJosh got the picture also. A smile grew on his face. So Angus hadn't been getting the sexual Jessica up until then ... well that explained everything. No wonder his balls were always in a knot.\n\n\"I'm going to lose it here!\" Riley said. Jessica had finished her sandwich, put away the plate and moved to stand in the living room. Her cheeks felt hot and she knew they were flaming red. It made no sense ... each of these men took her on a regular basis, but she just found it so embarrassing to be talking about it in front of all of them like this.\n\n\"Jessica ...\" Scott said placing his arm around her shoulder, ducking down to see Jessica's face when she lowered it, \"has been busy rocking Angus' world, that's all. Hey Jess, baby, what's wrong ... don't be embarrassed, it's good. You did good.\" Scott said rubbing the thumbs of both hands on her cheeks as he crouched down in front of her and cupped her face. He peered up at her as she tried hard to hide behind the hair that fell in ringlets around her face.\n\n\"She did damn good.\" Angus agreed and instantly got horny again. She looked so hot standing there, looking so shy even though she was so skilled in bed. Damn it, he needed her again. It wasn't his day with her but he didn't fucking care. He needed her and he needed her now.  \"Well, if you'll excuse us, I'm going to take Jessica ...\" Angus said pulling her to him, \"out to work on the corvette.\"\n\n\"You're what?\" Riley asked. \"Wait a minute. You and Jessica fucked all day long and now you're willing to take her out to work on your car?\"\n\n\"You bet,\" Angus said and pulled Jessica by the hand toward the door.\n\nRiley watched the door close behind Angus and Jessica. He was completely stunned. He looked at the remaining men, who looked strangely relieved.\n\n\"Are you sure he's okay?\" Riley asked pointing his thumb in the direction Angus went.\n\n\"Oh yeah, fine. Just think of all the good sex you've had with Jessica. Then imagine that Angus hadn't had any ... and now he has.\"\n\n\"Okay,\" Riley said, though he knew for a fact that Angus had had sex with Jessica many times before.  \n\n\n\nJessica lay in Angus' arms, her fingers stroking the hair on his chest, tracing little circles. They lay in the grass on the far side of the corvette. They were hidden from the house, but not intentionally. They'd worked on the car for all of five minutes before Angus could stand it no longer. With Jessica right next to him and memories of what they'd done, what she'd done, in his room, combined with her scent had made him reach for her. And then they'd done it at least twenty times, in every possible position. He'd tasted, really tasted her every inch of her body ... and she'd done the same to him. He'd never felt so probed and touched before in his life. He loved it. Now he felt so spent. It was amazing that she wasn't passed out from the effort she'd put in. Smiling to himself, he pulled her forehead to his lips, and kissed. \n\n\"You must be exhausted,\" he said. She looked up at him and smiled.\n\n\"A touch,\"\n\nHe couldn't stop running his hand over her body, over and over again, everywhere. He still had the strange feeling that this was all a dream. His hand came to her tit. He massaged gently. He couldn't believe that this body had been there all along and for years he hadn't been able to enjoy it, to really enjoy it. And her tits. So small and round, and soft and warm ... they fit in his hands, his mouth so perfectly ... they'd been nothing but weapons before. Weapons to ensure his protection and weapons to inflict harm on Jessica.  He'd squeezed them so hard before ... little wonder Jessica kept reminding him to be gentle. \n\nJessica's hand slid down his stomach. To say she was astounded by the change in Angus would be a major understatement. She wasn't able to feel comfortable enough with him yet to give up the role playing with Scott technique, but she had moments of seeing Angus as Angus. And when she did it was pleasant and it gave her hope that perhaps it was a permanent change.  But she knew she couldn't trust it. At any moment he could change again and beat her, rape her. And that thought almost paralyzed her with fear so she'd have to fall back to the role playing. It also helped her to be the sexual instigator. One thing she'd observed through the course of the night was that the more she instigated sex with Angus, the more relaxed he became. And the more relaxed he was, the more relaxed she became ... it was very enticing. \n\nShe was horny again. She wondered where all this sexual need and drive kept coming from. No sooner had she cum then she was ready to cum again. Mmm, and she knew a certain move that Jim, Scott and Josh all loved ... she was pretty sure Angus would too.\n\nShe leaned in to Angus, rising on a knee, and he rolled onto his back. Her right hand slid over his cock and her fingers encircled his testicles at the base of his cock. Her left hand grasped the shaft. \n\nFor a brief moment Angus realized that he was in a very vulnerable position but rather than inflict violence Jessica's hands brought blinding pleasure as they began to move.  Her left, up and down the shaft of his cock, her right pulling firmly but gently on his testicles. Both hands began to move faster, stroking and pulling more forcefully. The pleasure was so intense that he couldn't move. He thought he'd already felt the most extreme pleasure that he could, but this was too much. He became aware of a low, guttural sound around him, and realized it was coming from him. A sharp, almost blinding wave of pleasure overwhelmed him, and when he was done, all he could do was close his eyes and drift into oblivion.\n\n\"Jessica!\" he growled and startled himself awake. He'd been out. He didn't know for how long, and his first thought was that Jessica had surely disappeared. \n\n\"Hi,\" he heard her say. Jessica poked her head poked out from around the front of the car. The hood of the car was still raised, and Jessica had dressed again. She was wearing his Harley cap, and her face was all covered in grease. Angus got to his feet. Jessica had folded his overalls and piled them neatly on the hood of the car. He hurried to put them on. \n\n\"Have a good nap?\" she asked smiling up at him as he came around the car, pulling his zipper up. She stretched up to plant a kiss on his lips. \"I think the alternator is shot.\" She said pointing the socket wrench she held in her hand, at it.\n\n\"How long was I asleep?\" Angus asked. He'd fallen to sleep, and Jessica was still here. Relief flooded over him. He pulled Jessica to him.\n\n\"I'm not sure,\" she said, \"but a long time ... you know,\" she said as Angus began nibbling on her ear, \"I'm starting to get worried that you're going to dehydrate.\" She giggled as he nuzzled her neck, \"You're not replenishing the fluids that you're expelling ...\"\n\n\"Don't worry about me ... \" he murmured as his hand slid between her legs, \"I'll be just fine ...\"\n\n\"I ... hate ... to ... ruin ...the ...mood,\" she managed at the moments when his tongue vacated her mouth, \"but ... \" she moved her lips to his neck, \"I really need to go to the bathroom.\"   \n\n\"Okay ... \" he said. \n\nHe followed Jessica to the house, and into the bathroom, the whole time admiring the wiggle of her backside. He stood back and let Jessica do her business. He felt so relaxed. There was something to be said about knowing that you could get laid whenever and wherever you wanted to ... without resorting to violence. Jessica stood at the sink, washing her hands. Her backside wiggled even when she washed her hands. Unbelievable! Now he realized the one position they hadn't done. It was amazing that it was missed, actually. He came up behind Jessica, just as she'd turned the water off. He put his arms around her and she turned to face him. Her face was wet, she'd cleaned the grease off. The wet look suited her. Anything suited her. He turned her away from him and pressed his bulging manhood against her. She tried to turn back to face him.\n\n\"Turn around ... \" he said in a husky voice. \n\nHe'd slid his hand under her shirt, found her nipple ... then slid the same hand down, slipping it behind the waistband of her pants, and found her pussy.\n\n\"Angus ...\" Jessica said, trying to turn back ... \"I have a better idea ...\"\n\n\"No ... this is good,\" Angus murmured. Jessica's legs were spreading, but she was still trying to turn around. \n\n\"Get down ...\" he said. \n\nThis was just like his fantasies. A little resistance from Jessica, but knowing in the end he'd fuck her ... up the ass, but this time, he wouldn't hurt her. This time it'd be good for both of them. Except, Jessica wasn't moving. She'd stopped rocking her hips along with the rubbing of his hand. Stopped pressing her pussy against his hand.\n\n\"What's wrong?\" Angus asked ... maybe she had to pee again.\n\nJessica turned to face him. She moved in to him, and stood staring at his chest, her fingers teasing his right nipple.\n\n\"You okay?\" Angus asked ... he slid his hand between her legs again.\n\n\"Angus ... I don't want to do it that way,\" Jessica said, and raised her eyes to look in his.\n\n\"Jessica, I'll be gentle, I promise.\"\n\nJessica shook her head. \n\n\"I don't want to do it that way ever again.\" She held his gaze. She lifted her hand to his face. \"Just in my ... the usual place. Not up my bum, okay? Please?\"  \n\n\"Jessica ... \" \n\nShe shook her head. \"It hurts too much. Please ...\" she stroked his cock, \"if you want to lie down, I'll sit on your face. You liked that the last time ... \" she leaned in and kissed his neck.\n\n\"Jessica,\" he said, feeling like crap. The whole ass thing had really been to hurt her to begin with. Obviously it had worked. Really well. That intention was gone now but if she really didn't want to do it, that was fine with him. The good old fashioned way worked just as well for him.\n\n\"You can still turn around. I'll take you in your cunt, not your ass ... okay?\" He began turning her, but she grasped his arm with her hands. She looked terrified.\n\n\"Trust me Jessica, I promise ... I won't go in your ass. Okay?\" He thought she'd refuse ... and if she did, he didn't know what he'd do. He didn't really need to cum again, but he needed to know that she trusted him. \n\n\"Please ...\"\n\n\"Turn around Jessica ... \" He said grasping her forearms more forcefully and turning her. She turned, but she was shaking. \n\n\"Shhh, shhh\" he whispered in her ear as she whimpered. \"Jess, it'll be good, I promise. Trust me, okay?\" He pulled her down to her knees and guided her forwarded until her head was on the floor and her ass in the air. With one hand, he played with her nipple, with the other, he rubbed her pussy meat. After a few minutes, her legs began to part more and she began to move with the rhythm of his hand. She moaned, and gasped with pleasure when his fingers slid into her hole, and then she sighed, and his hand swam in her juices. Angus pulled her by her hips toward him. \n\n\"Angus!\" Jessica said lifting her head, panicking. She couldn't pretend he was Scott anymore. This was too real, too terrifying.\n\n\"Head down Jessica!\" Angus growled. He couldn't stop now. Memories from past bathroom encounters had him ready to explode. She hadn't lowered her head. Placing his hand on her head, he pushed down, with his other hand he grabbed her pussy and lifted upward. That was too much, he couldn't wait any more, and he drove his cock into her hole. \n\nHolding her shoulders, he pushed her back onto himself and despite his intentions of being gentle, he thrust as hard as he could until the pleasure overwhelmed him. He groaned and slid onto the floor beside Jessica.\n\n\"Jess?\" Angus asked, lifting his head when he heard her sniffle. \"Did I hurt you?\" ",
        "\"No. \" she said, shaking her head.\n\n\"Then, why are you crying?\" \n\n\"I don't know.\"\n\n\"You're shaking ... \" Angus said running his hand over her. \"Jessica, I told you I wouldn't ... you didn't believe me? Jessica, what's wrong?\" He demanded as she began to shake so much he thought she was convulsing.\n\n\"Angus,\" she said leaning into him, putting her hands on his chest, \"can we please not do it that way again. Please, any way but that way.\"\n\n\"Okay, okay,\" Angus said kissing her forehead and pulling her tighter against him. \"I didn't think you'd mind so much. We've done every other possible position ... Jesus Jessica, what's wrong?\" he asked as she began to retch.\n\n\"I keep remembering ... it was so awful ... can we leave here, please?\"\n\n\"Come on,\" he said scooping her up and moving from the bathroom to his room. He sat her on the bed. \n\n\"Angus,\" Jessica said grabbing his arm as he began to move away. \"I'm sorry.\" She had no idea what was wrong with her. Angus had only used her pussy as he'd said he would, there was no reason to be reacting like this. Besides, she'd done that position dozens of times before with Scott, and even sometimes with Josh. Both in her pussy and up her bum, and it had never bothered her like it had now. \n\nAngus sat down on the bed. Jessica rocked herself onto her knees. She decided to try her next move with the real Angus. She didn't think she needed to pretend any more ... She crawled to the edge of the bed, swung her leg over Angus' lap, and finding his cock erect, slid herself onto it, straddling him. As she slid up and down, she brought her lips to his. Angus brought his hands to her breasts, but he just couldn't continue.\n\n\"Jessica,\" he said between kisses, \"you can stop.\"\n\n\"It's alright,\" she whispered, and slid her tongue in his mouth.\n\n\"No it's not,\" he said and grasped her arms forcing her to stop moving. \"You're still shaking.\"\n\n\"I don't know why,\" Jessica said, \"but it'll stop.\" She leaned in to kiss him again.\n\n\"You said you remembered something awful.\" \n\nJessica froze. \n\n\"You thought I was going to hurt you again, like before, didn't you?\"\n\nJessica nodded. Whenever Scott or Josh took her from behind, it felt good. With Angus, it had always hurt. Hurt more than anything else he'd ever done to her. It had hurt, and been downright terrifying. It seemed that she just couldn't forget that fear. \n\n\"I'd told you that I wouldn't. I promised.\"\n\n\"I know Angus. I don't know what's wrong with me. I'm sorry.\"\n\n\"I don't care if you don't want to do it that way again,\" Angus said, \"but if I promise you something Jessica, you have to believe me. Have I ever lied to you before?\" He asked when Jessica looked unconvinced.\n\nJessica thought about it. \n\nAngus had done a lot of things to her over the years, but lie was not one of them. In fact, when he said something, he'd always followed up with it.  \n\n\"No. You haven't.\" \n\n\"If I say it, I mean it. 'K? \"\n\n\"Yes,\" Jessica said. And she began to rock her hips again. \"Can we continue now?\" She asked, her tone sensual again.\n\n\"We don't have to,\" Angus said feeling surprisingly disturbed by the fact that Jessica was so traumatized by the anal sex. It had been done with that intent, but then so had all the other sexual acts he'd forced on her. Her reaction had been involuntary, yet it spoke more to him than anything she could have done on purpose. He felt a pang of guilt. He almost didn't recognize the feeling. Had it not been for the time he'd agreed to let Beth have an abortion, he wouldn't know what it felt like. He had that same heavy feeling in his heart.\n\n\"Don't worry, I'll get you ready again ... \" she said reaching behind her with her hand and taking the base of Angus' cock in her hand.\n\n\"No Jessica. \" He said laying his hand over hers. \"You've done enough. I on the other hand,\" he continued, while standing up, \"have some catching up to do.\" \n\nJessica had wrapped her legs around his waist. He lay her back on the bed, and she unwrapped herself, and lay with her legs spread wide. \"Can you rub my G spot?\" she asked, her head rolling in anticipation. Angus had brought his thumb to her clitoris.\n\n\"Your what?\" \n\n\"G spot,\" she replied and reached for his hand. She folding his thumb, third and pinky finger and inserted his pointer and index into her pussy. \"Curl your fingers ...\" she panted. Jessica's obvious excitement was arousing him. He curled his fingers. \n\n\"To the left,\" she said shifting his hand over, \"now tap ... tap a lot.\" Angus began moving his fingers back and forth. Jessica began to arch and moan and when she sighed a gush of fluid rushed out of her.\n\n\"Holy shit!\" Angus said looking at the wet stain on the blanket. \"What happened?\"\n\nJessica took his hand and pulled him on top of her. \"I ejaculated that's all. That felt sooo good!\" \n\n\"You can ejaculate?\" Angus asked stunned. \n\n\"Mhhmm,\" Jessica replied.\n\n\"Did you really learn all of this from Scott?\" Angus asked lying beside her and rubbing her arm. Christ, if it was true, Scott deserved a medal or something.\n\n\"Yup.\"\n\n\"And the G spot thing?\"\n\nJessica giggled, \"Scott got us a lot of books. We read about it about as much as we practice.\"\n\nAngus made a mental note to get his hands on those books. He still couldn't believe how the day had turned out. She didn't hate him anymore, that was for sure, though he'd given her plenty of reason to. Jessica rolled onto her back. She played with his nipples, while smiling up at him.\n\n\"Ready for some more?\" she asked. God, she was an animal. He wasn't sure he could keep up. He ran his hand down her chest, to her stomach.\n\n\"What's this?\" he asked brushing his fingers over some red patches on her skin.\n\n\"Probably stubble burn,\" Jessica replied. She brought her hand to his face and rubbed his five o'clock shadow.\n\n\"Really?\" he asked, bringing his own hand to his budding beard. \"Does it hurt?\"\n\n\"I'm used to it. Stubble burn and calloused hands ... you're a man, that's how it is.\"  She rolled in to him. \"So?\" she asked running her hand over his cock.\n\n\"I don't believe it ... but I think I'm ready for another. Should I look for that G spot again?\"\n\n\"I sure won't argue,\" Jessica said rolling onto her back, flinging her arms above her head, and sighing as Angus slid his fingers into her. He lowered his mouth to the soft mound between her legs and decided that he liked this just fine, and regardless of how much he'd wanted to hurt her before, he wanted equally as much, to not hurt her now. He couldn't take back the past, but he could sure as hell do something about beard burn and calloused hands.     \n\n***************************************************************\n\nThe next day\n\nJessica watched Riley put Baby back in his crate. The sun was shining, the birds were singing, they'd had a great day training the dogs, yet something didn't seem right. He'd been curt with her a few times, and hostile. She wasn't sure what was wrong. She'd finally gotten Angus to mellow out ... really mellow out, and now Riley seemed to be taking over for him in the grouch department. Jessica stretched and yawned. The warm sunlight and her lack of sleep from the night before with Angus made her extra lazy.\n\n\"Stop that will you!\" Riley barked at her. Jessica lowered her arms in surprise.\n\n\"What did I do?\"\n\n\"All your yawning and stretching. Christ Jessica, don't you think I know you were 'rocking Angus' world' last night ... I don't need you constantly reminding me!\"\n\nChrist he was pissed. First, Angus begged Riley's night out from under him. He'd been too surprised to do anything but grudgingly accept a switch when Angus, at the last minute, asked him for a favor. Apparently the other men had already agreed to bump their nights by one for Angus. Then he exhausted Jessica so much that she could barely stay awake. How the fuck was he going to get off when Jessica was going to be falling asleep through the whole thing. \n\nAnd Jessica was 'rocking Angus' world? What the fuck did that even mean? So Jessica didn't look like at Riley like he was coming at her with a chainsaw anymore when he fucked her, what was 'rocking' about that?\n\nHe was so fucking horny, had been the whole week they'd been gone. He'd been thinking about taking things to the next level with her ... maybe getting her to touch him. He was eager to have a hand other than his own on his cock again. Given how things had gone with Alisha it was clear that the hand would have to be Jessica's and he had no idea how he was going to get that to happen. His only sexual experience with Jessica was her lying still and him fucking her. And now he doubted he'd get even that.\n\nFor a moment Jessica thought she was going to have to pretend to be role playing with Scott again. After things had gone so well with Angus she really hadn't planned on it with Riley. But he'd looked so pissed off that she was gearing up to go to her role playing zone when something about his tone and body language made her pause. She wasn't sure but in addition to being angry, he seemed jealous. She knew what she would do if it was Jim, Josh or Scott that she was talking to but Riley was not approachable enough for that. Role playing it was then.  \n\n\"Riley,\" Jessica said going to him and putting her arms around his neck, \"are you jealous?\"\n\n\"No, of course not! Why would I be jealous?\" He asked looking down at her, surprised that she was in his arms, hugging him, seemingly at ease with him. He felt embarrassment consume him. Yes he was jealous. Very jealous. But he didn't need her to know that. \"You've been doing just fine for me ... thanks.\" He grumbled but the truth was he had no point of reference on which to make that statement. He really had no idea what she did for the other men.  But given Angus' transformation Riley was fairly certain that what Riley and Jessica did sexually was anything but fine in comparison.\n\n\"You know what?\" Jessica said bringing her finger to his lips and tracing them with it, \"Scott said there's a nice watering hole somewhere on your property ... said he wanted to take me there some time so we could swim ... and sunbathe ... and ... you know ... \"\n\n\"Yeah, so?\"\n\n\"Why don't we go there. We can be the first to do all that stuff there ... especially the 'you know' stuff.\"\n\n\"Jessica, \" Riley said, his voice thickening as he became fully aware of her body pressed against his. Shit, he had to get her away from him or he'd never be able to control himself and the last thing he needed was that terrified look. \"It's completely open by that hole ... no bushes or trees.\"\n\n\"So?\" she asked. His desire made itself clear to her, so she pressed herself even closer.\n\n\"So?\" he repeated. He was going to lose it. He pushed Jessica away from him. \"So, there's no coverage there, no privacy.\"\n\n\"That's okay,\" Jessica said moving closer again. \"It's in the middle of nowhere, right? Who do you need privacy from?\" She couldn't believe that she was so horny. \n\nScott hadn't applied that cream for a couple of days ... long enough for it to have worn off. And then after yesterday's marathon with Angus, she should've been all sexed out ... but she wasn't. And ... and, Riley was different. He wasn't rough like Angus, in fact if anything he was Angus' polar opposite. He was too reserved in bed. Maybe that was it. Maybe she wanted to make a change for Riley also. She pressed her body against Riley's.\n\nHoly fuck! He didn't know what had gotten into Jessica but he was in no position to restrain himself when she pressed herself against him like that ... made sexual suggestions like that. God he wanted to fuck her and as he tried to get himself under control his balls seized. Fuck it hurt! And he wasn't satisfied with a possible hand job any more. He was pushed to the recesses of his most lurid fantasies ... the ones he categorized as 'never going to happen', he needed Jessica's mouth on his cock. \n\nHe'd had fuck buddies who had done it for him before ... and Angus had said something about Jessica swallowing, though he'd taken that as an offhand comment not believing for a second that she would. But if she was rubbing herself against him and offering to go and fuck at the watering hole then damn it he wanted a blow job. But how to ask for it without ruining everything. If he scared her off he didn't know what he'd do. \n\n\"Jessica ... God, there's no time ... \" Riley looked like he was in serious pain. \"We gotta go to my room!\"\n\n\"Are you okay?\" she asked moving back, Riley was almost doubled over. \n\n\"No!\" he said. \"Oh God it hurts!\"\n\n     \"What hurts?\" she asked. \n\nShe began to move away, \"I'll go get Jim, he can bring you to the house.\"\n\n\"No,\" Riley said, catching her hand before she could go. \"It isn't anything Jim can help me with.\"\n\n\"Then I'll get Scott ...\" Riley was shaking his head, \"Josh, Angus?\" Jessica was beginning to panic.\n\n\"Come here,\" Riley said, \"just calm down, and come here.\" Jessica bent down next to him.\n\n\"Is it a heart attack?\" Jessica asked, \"I've read about CPR, I think I can do it ...\"\n\n\"No ... Jessica. It's not a heart attack ... but you can help me. You are the only one who can help me ...\"\n\n\"What do I have to do?\" she asked.\n\n\"Get me to my bedroom ... \"\n\n\"Your bedroom?\"\n\n\"Yes ... and then you can ...\" Riley gasped from the pain.\n\n\"Call an ambulance!\" Jessica demanded, panic back in her voice as she started moving toward the barn, \"Riley, I'm going to get Jim now ... he's just in the corral, he's the closest one ...\"\n\n\"Get back here!\" Riley said so sternly Jessica turned back. \"I don't need you to get anyone, for the last time! I need you to get me back to my room and then maybe ...\" Riley hesitated. If he scared her off now he'd die ... literally. His balls felt like they'd been kicked up to his teeth. But he could see panic returning in her expression, she just didn't get it. \n\n\"Swallow Jessica ... I need you to swallow for me.\" \n\nThere, he'd said it. Now she was going to take off for sure, and he wouldn't even be able to catch her. Come to think of it ... he was the only one around, she could run away right now and it'd be a while before the others would have a clue. That thought was sobering enough that he felt the pain begin to subside. He reached out and caught her hand. Well, if she'd been smiling because she thought she had a way to escape ... she wasn't catching on fast. As he stood straighter, Jessica's smile grew.\n\n\"Riley, \" Jessica said moving into his arms. Her hand slid down his chest, his stomach, and landed on the bulge that protruded from his pants. \n\n\"Uh,\" he exclaimed as the pain resumed.\n\n\"We don't have to go to your room for me to swallow ...\" Jessica said and massaged his cock.\n\n\"Christ Jessica, don't do that! I can't hold on if you do that!\"\n\n\"Hold on to what?\" Jessica asked as she slid her hand behind the waist line of his pants and down into his underwear. She took his cock in her hand, and Riley exploded. \n\n\"Oh God ... sorry ... \" He was so embarrassed. He tried to pull her hand out of his pants.\n\n\"Riley,\" Jessica was saying. She placed her other hand on his chest, and then on his arm. \"Riley ... stop. It's okay.\"\n\n\"What a fucking mess! Get your hand out of there ... Christ!\"\n\n\"Riley,\" Jessica said again, looking him in the eyes. \"My hand is fine where it is.\" She stroked his cock gently. \"If you want, you can lie down and I can clean you up ...\"\n\n\"Here?\" Riley demanded.\n\n\"Why not?\"\n\n\"Because, the dogs can see ... anyone can see.\"\n\n\"Okay, \" Jessica said kissing his lips, sliding her tongue between them and teasing the tip of his before pulling back and asking, \"how about in the barn?\"\n\nRiley looked at her in surprise. Why hadn't he thought of that? Jessica could feel his muscles move beneath her as Riley lifted her into his arms. He held her close to him as he made his way to the nearest barn. He kissed her, his tongue exploring her mouth, and Jessica wondered vaguely how he could see where he was going. Once in the barn, Riley lowered Jessica onto a bed of hay. Sitting up she pushed him onto his back. She unzipped his pants and pulled them down, and then she began to lick. Riley felt a jolt of pleasure go through his whole body. \n\nIt was too much, too fast, he sat up and reached for her head, but spasmed with pleasure before he could reach it. He made a sound so guttural, Jessica wondered if she'd sucked too hard, but his hands had found her head and were making no attempt to move her. He fell back panting. A blanket of euphoria swept over him. He looked up and saw Jessica licking the last of his mess up. When she finished, she lifted her head, and slowly, deliberately, licked her lips. Riley felt like his head would pop off, she was so fucking hot. He sat up and slid his hand under Jessica's shirt. He found her breasts, and methodically worked her nipples into stiffness. Pleasure was mounting ... for him, but from the way Jessica was moaning, he had little doubt that she was enjoying it too. He slid his hand down Jessica's pants, in hopes of escalating her pleasure, but he found her fully wet and she sighed as a new wave of liquid seeped between his fingers.  He lost all control. He ripped her shirt and bra open, tore off her pants and panties and descended on every part of her. \n\nJessica couldn't believe that the normally methodical, controlled, Riley was the wild man who now caressed, poked, pulled and tasted every part of her. He devoured each of her breasts, gripping each nipple between his teeth, pulling. His hand reaching around and under Jessica's leg, his fingers working their way through the soft mound of hair, parting her lips and delving into the soft meat in between. Jessica gasped as they found the nub they were looking for. The sensation was overwhelming her, she threw her head back, her mouth involuntarily gaping open. Desire was building in her, and just when she thought it couldn't get any better, Riley lowered his head between her legs. A jolt, like electricity, went through her. He knew all the right places to kiss, lick, bite. The course hair on his chin prickling, scratching, stimulating, his fingers plunging deeper and deeper within her. Jessica arched as wave upon wave of pleasure rushed over her. As the intensity of the rapture subsided, a low steady desire took its place. She rocked her hips against Riley's face. As he moved up, along her body, she pulsated her pussy against him. It never seemed that she could press hard enough. \n\n\"I'm going to fuck you Jessica ... I'm going to fuck your fucking brains out! Spread your legs ...\" He felt Jessica open up for him and he thrust into her, hard and fast, a fury of motion. The forcefulness of it, the wild look of pleasure on Riley's face, brought Jessica to climax just as Riley moaned with his release. Riley dropped on top of her, panting, exhilarated.\n\n\"Unbelievable!\" Riley mumbled into her ear, as his thumb stroked Jessica's cheek.\n\n\"Unbelievable,\" Jessica agreed, remnants of pleasure still tingling within her. Riley nibbled Jessica's ear. He shifted so he could bring his bent leg up firmly between Jessica's legs. He slid it back and forth, Jessica moved with it. A never ending tingling eating her up. Riley's thumb traced Jessica's lips. She lay with her eyes shut, head slightly back, a soft moan escaping her every now and then. Riley watched her profile. He felt so alive! The circles his thumb made on her lips became smaller and smaller, until it slipped into her mouth. Jessica worked on it like she had on his manhood. \n\n\"Jesus Christ Jess,\" Riley groaned in her ear as he rolled back on top of her, got up on his knees, pulling her up with him. He sat back on his heels, and lifted Jessica onto him. She wrapped her legs around his waist and rocked her hips. Riley tried to kiss her breasts, but there was no time ... \n\n\"Fuuuuckkk!\" he moaned as an incredible sensation began, \"Jess! Oh fuck!\" he yelled as he exploded deep inside her. He lay Jessica back onto the hay, collapsing on her. He couldn't move. When Jessica finally opened her eyes, she had no idea how long she'd been asleep. Riley lay on his side, leg thrown over her, head propped on his hand. He was watching her, and smiled when she looked at him.  ",
        "\"That was ...\" He paused, at a loss for words.\n\n\"Amazing?\" She asked. She'd just been thinking the same thing.\n\nHe nodded. Finally understanding what had happened to Angus over the past couple of days. Rocking his world seemed like a major understatement now.\n\n\"I can't believe we did it in the barn,\" he added, absent mindedly playing with her nipple.\n\n\"I can.\" There was a huskiness in her voice that made Riley look up.\n\nHe had worked her nipple to an erect nub. He wondered if that look in her eye meant she could handle another roll in the hay. As if reading his mind Jessica turned toward him and rising to her knee she straddled him. \n\n\"You know,\" he said, taking her by the knees and sliding her up from his stomach, to his chest, toward his face. \"I was looking for a kiss ... a nice, wet, kiss.\" Jessica inhaled with pleasure as his hands took her butt and pushed her curly mound up to his lips. Sliding his hand under her legs, he used his thumbs to part her lips, and his face disappeared into her part. His tongue and teeth did their magic and Jessica felt her pleasure mounting. As she climaxed, Riley's tongue slid in and out of her, pressing firmly on her clit. She spasmed, head thrown back, panting. When the sensation faded, she slid back on him, bent down to kiss his lips, and then slid back some more. She lifted herself onto his throbbing member and sank over it. \n\n\"Ahhh!\" Riley exclaimed. \n\nShe lifted herself, up and down. She reached back with her right hand and cupped his testicles, rubbing, pressing firmly between his scrotum and his anus. Riley writhed beneath her, pleasure mounting. \n\n\"Uhhhh!\" He yelled as he finally exploded. \n\nHe pulled Jessica down to him. \"What the hell did you do?\" he asked. \"I've never felt anything like that before!\"\n\nJessica smiled and kissed his lips. \"It's your sweet spot ... \" she said as she settled her head onto his shoulder and draping her arm over his chest, her leg over his groin, she drifted off to sleep.\n\n\"It sure was sweet ...\" he agreed, and kissed the top of her head. He lay looking at the ceiling of the barn, listening to Jessica breathe as she drifted into a pleasure induced sleep. Riley felt giddiness growing inside of him. That was the best sex he'd ever had. He was a twenty-seven year old man, who until now, felt like a fifty year old man. He laughed, and then laughed some more. Now he was twenty-seven going on sixteen. He couldn't believe it. \n\nHe had no idea how long they lay like that. He kept playing the whole thing over and over in his mind ... especially the part where Jessica could have left him there, helpless, and made a run for it. But, she hadn't. She hadn't made a run for it then, and she hadn't tried to escape in any way in the past six months. They'd made it ... their plan had worked and way better than expected. Jessica stirred a little against him, and it brought him back to reality. He looked at his watch. They'd been in that barn for close to three hours. It was damn near dinner time.\n\n\"Jessica,\" he whispered, and rocked her gently against him. \"Jess ... \" he kissed her as she awoke.\n\n\"Hi,\" he said.\n\n\"Hi ... I fell to sleep ... sorry.\"\n\n\"No, it's okay. But we should go back in the house ... it's dinner time.\"\n\n\"Really?\" she asked sitting up. Riley took one look at her sitting naked beside him, and had an instant erection. He reached for her clothes.\n\n\"You'd better get dressed quick, or we'll never get out of here.\" Riley watched Jessica dress and wondered what to do with himself. He was feeling things he'd never felt before ... never felt before. Thank God he still had that night with her ... because he was ready to remove everything she'd just put on ... He forced himself to get up and get dressed.\n\n\"I destroyed your shirt.\" Riley said eyeing the cotton that hung in shreds in Jessica's hands. He still couldn't believe he'd done that, he'd never just let go like that before ... never been so animalistic before. \n\nJessica held the tatters to her chest and hugged herself.\n\n\"Actually, it was Angus' shirt. I don't think he'll mind.\" she said with a laugh, \"It was for a good cause.\"\n\n\"Amen,\" Riley said. \"Here,\" he said holding his shirt up, \"put your hands up.\" \n\nJessica raised her hands and he lowered his shirt over them, and her head. \n\n\"Baling hay will never be the same again,\" he said as he led Jessica out of the barn. She laughed, and he loved it. Back at the house something was cooking in the oven ... it smelled great, but the house was empty.\n\n\"Looks like we have time for a shower,\" Riley said, pulling a straw from Jessica's hair. \n\n\"Or maybe a bath?\" Jessica asked as they moved toward the hallway, but then they both froze. \n\nBefore them stood a man that neither recognized. Riley turned in the direction of the gun rack. \n\n\"Angus?\" Jessica asked.\n\n\"Hi Jess,\" Angus replied. \n\nRiley stopped and turned around. \n\nHow the hell could that be Angus? But as the man moved into the living room, Riley could see that the clean shaven, combed haired, hatless, man in new jeans and a button up dress shirt, was actually Angus. He had his hand behind his back, and when he pulled it out, it held a bouquet of roses which he held out to Jessica.\n\n\"For me?\" Jessica asked, reaching for the flowers. \"Thank you Angus,\" she said, moving closer and staring at him as if she wasn't quite sure it was him. \"You look so nice.\" \n\n\"Thank you,\" Angus replied, dipping his head shyly. He had the biggest smile on his face that Riley had ever seen.\n\nJessica reached up with her free hand and rubbed his cheek. \"You shaved!\"\n\nAngus nodded.\n\n\"And are those new clothes?\"\n\nAngus looked down at himself. \"They are. I bought you something too Jessica.\" \n\nHe looked past Jessica to Riley, \"I put it on your bed ...I hope you don't mind.\"\n\n\"Of course not,\" Riley said, floored by Angus' transformation. The man never bought new clothes. In fact, the only change in wardrobe he ever made was to alternate between one pair of jeans and one shirt for another pair, from one day to the next. \n\nRiley watched Angus look at Jessica. He looked bashful. It was as if Riley were looking at Angus from ten years ago. He was like a teenager. Riley felt a pain in his heart for him. He had fallen again. Despite all his care not to, Angus had fallen in love again, and from what Riley could tell, he'd fallen harder than he had with Beth. \n\n\"I have a roast cooking ... some red wine ... \" Angus looked up at Riley as if a thought suddenly occurred to him. \"There's wine for all of us Riley, that's if you don't mind Jessica having some tonight.\"\n\nJessica looked to Riley. Her expression made it clear she wanted Riley to say anything that would make Angus happy. Riley could tell that she was touched by Angus' efforts ... he had to say that he was too.\n\n\"I don't mind.\" Riley said and was glad to see Angus' face light up from ear to ear. Angus had been a long suffering soul ... and Riley's only best friend. He just hoped that things with Jessica didn't end badly because that would be the end of Angus. \n\n\"How much longer on the roast?\" Riley asked.\n\n\"About half an hour,\" Angus said.\n\n\"Enough time to get cleaned up then,\" Riley said.\n\n\"Thank you for the flowers,\" Jessica stood on her toes and kissed Angus' lips. \"Riley, I should put them in water ... \"\n\n\"That's okay, I can do it,\" Angus said.\n\n\"We've got time Jessica, go ahead.\" Riley said. Jessica went to the kitchen and left Riley and Angus alone. Angus fidgeted. Angus was not one to fidget. \n\n\"You look good Angus. The flowers and gift are a nice touch.\"\n\n\"Thanks. I got her a dress. I figured it would probably be as much for us men as for Jessica ... I think she'll look good in it.\"\n\n\"Good idea ... I'm sure she'll love it.\"\n\n\"Okay,\" Jessica said, returning. She'd put the vase with the flowers on the kitchen table.\n\n\"See you soon,\" Riley said to Angus, and led Jessica to the bathroom.\n\n\"Shower or bath?\" Jessica asked, circling her arms around Riley's neck.\n\n\"We probably shouldn't take too long,\" Riley said grasping Jessica's butt with his hands, \"Angus is going to a lot of trouble for dinner. I'm putting my bet on the shower being faster than the bath.\" He leaned around Jessica and started the water running.\n\n\"Angus looks really nice,\" Jessica said, \"I didn't recognize him at all.\"\n\n\"No, me neither. Let's just hope the other guys don't shoot him by mistake ...\"\n\n\"They wouldn't do that!\" Jessica said alarmed.\n\n\"Calm down Jessica ... I'm just kidding. I'm sure one of them will figure out who he is.\" Riley pulled Jessica's shirt off. \n\nBefore she had time to lower her arms, he brought his hand to her breast. With his other hand he worked off her pants and then his own. He pushed her back into the shower and soon they stood under the hot, pulsating water. Riley grabbed the soap and began lathering Jessica. He wanted to enjoy this, enjoy the residual bliss that consumed him but Angus and his emotional surrender to Jessica nagged at him. He felt like he had to do his best to protect Angus, he had to hope that Jessica's feelings for Angus had changed enough that she would want to protect him too. \n\n\"There's something I have to tell you about Angus,\" Riley said while he took an unnecessarily long time soaping Jessica's pussy. \n\n\"I think it's clean!\" she laughed as Riley persisted.\n\n\"Oh, alright ...\" he said feigning disappointment. \"The thing is ... Angus has been hurt before ... badly.\"\n\n\"Hurt?\" Jessica asked while she moved behind Riley and lathered soap on his back.\n\n\"By a woman.\" \n\nJessica stopped lathering. Riley looked over his shoulder. \"It was a long time ago.\"\n\nJessica exhaled and started lathering again. \"Well, that explains a lot,\" she said.\n\n\"Yes it does.\" Riley agreed, turning back to face Jessica ... and then he paused. \"Did that make a difference to you? That it was a long time ago?\" \n\nJessica shrugged, \"I don't know.\" Jessica replied. In truth she didn't understand the momentary gut reaction she'd had. It had come and gone quickly but it had been a sharp twisting pain. \"I guess it's better that it was a long time ago ... better that he's not being hurt right now, right?\"\n\nRiley nodded, \"But long time ago or not, Angus was decimated by her.\"\n\n\"By Beth?\" Jessica asked as she lathered his chest.\n\n\"How did you know her name?\" Riley asked.\n\n\"Hmm?\"\n\n\"How did you know her name? I never told you her name.\" \n\n\"Because Angus used to have nightmares about her ... he'd say her name all the time. And Jim, Scott and Josh have already mentioned her.\"\n\n\"Really ...\" Riley asked, unsettled by the nightmares. In his mind, Jessica was the one with the dreams. It had never occurred to him that the men might have them too. What the hell did he talk about in his sleep?\n\n\"So, I just want you to know that you have to be careful with him.\"\n\nJessica had been taking her time with Riley's chest. Her fingers exploring every muscle, marveling that these muscles that had just been carrying her in the barn, fucking her, holding her, were the same muscles that had hurt her so often over the past few years. But Riley's words brought her fingers to a standstill. She stared at his chest unsure why she felt this growing heaviness in her heart.\n\n\"Jessica,\" Riley said, tilting her face up, his fingers gently pulling up on her chin, \"Angus has worked very hard to not get emotionally involved since Beth. He's done a great job of protecting himself, until now. You made it through his defenses and now he's at you mercy. Literally. Jess, that man you saw just a few minutes ago, the shy, nervous, eager to please Angus, he hasn't been around in years. I know it's not fair, especially with what he ... we ... have put you through but I'm going to ask anyway, be gentle with him. I honestly don't know what will happen if his heart is broken again. I hope ...\" Riley paused and unable to look her in the eye, he let them roam down to Jessica's tits. His hands soon followed, his huge fingers caressing the outside of each of her breasts, \"that we never have to find out.\"\n\nJessica blinked back at Riley. For a moment she got the distinct feeling they weren't talking about just Angus anymore. She didn't know what to say. Of course she would hurt Angus, all of them, eventually. How else could she avenge her family. But until now avenging her family had involved taking away the men's freedom. Imprisoning them for life so they could pay for what they did to her and her family. Never had emotions or feelings come into the equation. Jessica couldn't understand why it should make a difference but somehow, inside, it felt different. \n\n\"I've never been in a relationship before.\" Jessica finally managed to say, \"So I have nothing to compare this to, I don't even know what being careful with Angus means.\"\n\nRiley forced his eyes to hers. \"Never? You've never had a boyfriend?\" He asked in an incredulous tone, \"So you were a virgin ... your first time was with us?\" He was astounded. He hadn't fucked her until well after the others had so he never would have known that first hand but he found it hard to believe that a young woman as sexy as she was hadn't had a single boyfriend, hadn't fucked someone before her eighteenth birthday. As Jessica's face flamed red and her eyes slipped away from his, a distant part of him wished he could feel the self-disgust that a revelation like that called for. They'd taken everything from her and here he was asking her to be gentle with Angus ... and by extension himself and the other men. He did feel bad for her, but not bad enough. He still wanted her to be his. He wanted what they'd done in the barn, over and over again. If he were a decent man he wouldn't want that, but he did. \n\n\"Jess ...\" He began, at a loss for what to do or say next. But when Jessica raised her eyes to his, blinking back tears, he knew that his mission going forward was to ensure Jessica never shed another tear. Not because of him. While he wanted to protect Angus, he couldn't in good conscience make Jessica responsible for that. He cupped her face, his thumb wiping the single tear that rolled down Jessica's cheek.   \n\n\"I'm sorry. Just forget I said anything, okay? Why don't we go see what Angus bought for you?\" Riley said wanting to bring back Jessica's earlier smile.\n\nJessica nodded. He followed Jessica out of the shower and was relieved to see that she'd moved passed the conversation and now seemed eager to see what Angus had bought. He watched her towel off so fast he had to laugh. Neither one of them were particularly dry when Jessica grabbed him by the hand and dragged him into his room. \n\n\"Oh my God!\" Jessica said standing before his bed. \"Oh my God! Riley, look at this dress!\" She picked up a beautiful shimmering emerald green dress. \n\n\"Help me put it on!\" she demanded.\n\nWhen Riley had finished zipping it up in the back, Jessica turned to face him and held her arms out.\n\n\"Holy shit,\" Riley said. He couldn't believe how beautiful she looked. It hung mid-thigh, the neckline was low, and it was off the shoulder. Jessica turned to look at herself in the mirror. \n\n\"It's so beautiful!\" Jessica said, \"It's the most beautiful thing I've ever seen.\"\n\n\"No Jessica, you are the most beautiful thing here. I'm stunned. I can't believe that Angus picked this out.\"\n\n\"Me neither ... and thank you,\" Jessica said looking up at him with a shy smile before looking at herself again. For the first time since she'd come to this place Jessica actually looked at herself in the mirror. She ran her fingers through her hair and studied her face. Even if she'd had the opportunity she wouldn't have taken it, afraid to see what the men had done to her. \n\nBut now, observing herself in the mirror, she was surprised to see that given everything that her face and body had endured she didn't look as bad as she thought she should. Her wet hair hung in ringlets around her face. She had dark rings under her eyes and healing bruises and cuts but Jim had been right, the tan seemed to hide them. And with the changes that were happening between her and the men she felt optimistic that no new bruises or cuts were to come. Maybe, over time, she could heal completely. She studied her hazel eyes ... a touch of make-up would bring them out more. It was mind boggling to her that in a few short days she went from wanting to repulse the men to wanting to look good ... for them and for herself. \n\n\"You know what I need?\"\n\n\"What?\" Riley asked, hesitant to hear her answer. She'd been inspecting herself carefully. Turning her face, spending time on her healing bruises. He couldn't read her expression and it was dawning on Riley that between the conversation about her stolen virginity and the reminders of the abuse he and the men had doled out to her, she could easily go back to hating him ... them.\n\n\"Make-up and a blow-drier.\"\n\n\"You're fine just the way you are Jess.\" Riley said both relieved and eager to distract Jessica from any further self-scrutiny. He observed her in the mirror where their eyes met. She looked so small and fragile standing in front of his massive, muscular frame that Riley felt guilt grip him. It was an unfamiliar and unsettling feeling. Despite the bruises and fading scars Jessica looked hot to him. Clearly she wasn't seeing the same thing because she moved closer to the mirror and really began inspecting herself. He didn't want her to ... not until she was healed. And maybe then the image of them standing together like this, the dichotomy of his size to hers, his power to hers, would somehow change enough so that he didn't look so much like an asshole. \"Look, you're dressed up, Angus is dressed up. I'm going to see if I have anything decent to wear, and then we'll go out and stun everyone with your beauty.\"\n\nJessica nodded but didn't look convinced that beauty was the word to describe her. Grasping her by her arms Riley maneuvered her to his chest of drawers, \"I'll need your help though ... never dressed up before.\" \n\nTen minutes later, Riley and Jessica headed to the living room. It was darker than usual. As they entered they noticed candles on the kitchen table, and on the end tables. Soft music was playing in the background. \n\n\"Jessica?\" Jim asked, getting up from the sofa. He let out a whistle, that Scott and Josh repeated as they moved toward her. \"You're ... wow!\" he said kissing her cheek which glowed slightly pink as Jessica blushed.\n\n\"Thank you ...\" Jessica said, a shy smile on her lips.\n\n\"I don't know what to say ... \" Scott said leaning in to kiss her on the lips, \"you're stunning.\"\n\n\"I ... I ... \" Josh stammered as he kissed her too. He stood back and looked her over. \"I ...\" he tried again.\n\n\"Way better than the baggy men's shirts and pants she's always wearing, isn't it?\" Riley asked. He noticed that Josh, Jim and Scott had dressed up a little also. He grinned. He never would have guessed Angus as the type to plan a group date. \n\nAngus came out of the kitchen and seemed unable to speak. Jessica went to him, into his arms and hugged him. \n\n\"Thank you Angus ... I love it. The dress ... everything.\"\n\n\"You're welcome. Thank you ... for wearing the dress ... and for the other night.\" \n\n\"You're welcome.\"\n\n\"Well, if you're ready, dinner is done.\"\n\nHe led Jessica to the table, and the men followed.\n\n********************************************************\n\n\"I don't know what you've done to Angus, but I like it.\" Jim said as he and Jessica slow danced around the living room. Dinner had gone well. Angus had surprised them with an incredibly decadent chocolate cake for dessert. They'd moved to the living room afterwards, and when \"Stairway to Heaven\" came on the radio, Jimmy asked Jessica to dance.\n\n\"I didn't do anything,\" Jessica said leaning against Jim.\n\n\"You're drunk!\" Jim exclaimed. She'd had a couple glasses of wine, more than she'd had ever had with them in one sitting.",
        "\"Is that what this is?\" she asked.\n\n\"Mhm. Well, you did something alright, he's a changed man!\"\n\n\"Scott was right. Once I showed Angus what I wanted ... to enjoy sex ... things changed. Jimmy ... thanks.\" She said, rubbing her hand on his chest. \n\n\"For what?'\n\n\"For the other day ... protecting me. For everything you've done for me since I've been here, it's made things easier. I hope you know that you are my best friend ... \"\n\n\"I know, you're my best friend too.\" he replied, \"And I haven't done nearly enough for you Jessica, for that I'll always be sorry.\"\n\n\"Mind if I cut in?\" Josh asked as a new song began.\n\n\"Not at all,\" Jim said and moved aside.\n\nRiley watched Josh and Jim switch. \n\nOkay, so he wouldn't get to bed with Jessica until later ... much later. At least they'd already had some fun at the barn. Jim, Josh, then Scott still needed a dance, and most likely, Angus.\n\n\"Did you say there was more wine?\" Riley asked.\n\n\"Yup, I'll get you some, \"Angus said. Riley got up and followed Angus to the kitchen.\n\n\"What's with the hand cream?\" Riley asked indicating a new container that had appeared on the counter.\n\n\"For my ... our hands,\" Angus said, helping himself to a glob. \"Jessica likes them soft ...\"\n\n\"Really?\" Riley said, and helped himself to some also. \"Thanks.\" He said when Angus passed him his wine. \n\n\"Riley ... how can things have gotten so good so fast?\" Angus asked.\n\n\"I don't know ... I intend to get a better idea of that tomorrow from those three shitheads.\" He said indicating Jim, Josh and Scott. \"Something obviously happened while we were gone. But I'm glad it did. I've never been happier. And, just so you know ... today, Jessica had a golden opportunity to run away if she wanted to. She didn't take it.\"\n\nAngus nodded and smiled. \"To be honest. Since the time that Jessica had the chance to saw me in half in the bathroom, and she didn't, I somehow knew we could trust her. I mean I knew ... but I didn't know. Until now.\"\n\n\"I know what you mean. \"\n\n\"Scott's finished his dance. Why don't you take Jessica to bed. She looks exhausted.\" Angus said.\n\n\"You don't want your dance?\"\n\n\"Sure, but she's tired.\"\n\n\"Go ahead Angus, I'm pretty sure she wouldn't want to miss a dance with you.\"\n\n\"Okay.\"\n\nAngus moved to the living room and cut in on Scott and Jessica. Riley smiled ... he looked like a kid again, the way he moved across the floor. Just like he did when he had his first dance with Beth. This time it was going to turn out better, for all of them.\n\n\"Hi Jessica,\" Angus said taking her in his arms.\n\n\"Angus ... this was the best night ever! The dress is gorgeous, the meal and wine, were delicious, and you ... you are very handsome.\" She rose on her tip toes and kissed him.\n\n\"I'm glad you enjoyed it. Jim told me that green was your favorite color. And he made some other suggestions ... you'll see tomorrow.\" Angus said and brushed a loose hair from her eyes. Jessica reached up and grabbed his hand.\n\n\"Your hands ... they're so soft!\"\n\nAngus laughed. \"It didn't take you long to notice ... I've only started using the cream today.\"\n\n\"They feel good Angus.\"\n\nAngus pulled her closer. \"They'll feel real good our next night together, I promise you that.\" And he put his lips to her ear, \"And they'll move nice and slow, nice and gentle, over all your tasty parts.\" He whispered.\n\n\"I can hardly wait,\" Jessica whispered back.\n\nThe song ended and Angus planted a kiss on the side of Jessica's head.\n\n\"Good night,\" he said as Riley came to take her.\n\n\"Good night,\" Jessica said making the rounds, and then Riley picked her up in his arms. He carried her to his room and laid her on the bed. She was barely able to keep her eyes open. A minute later, she was asleep. He locked the door, and stood watching her. \n\nHe looked at the handcuffs that hung on the bedpost on her side of the bed. If he didn't cuff her, this would be the first time ever, since they'd begun a schedule with her in their bedrooms, that he wouldn't have done so. \n\nHe stared at the cuffs for a while. Well, he'd leave the cuffs on his headboard. Better not to jinx them. \n\nHe began to take Jessica's dress off. To see her lying naked on his bed, brought back the memories from earlier that day.  He crawled in under the covers, next to Jessica, and lay his hand on her stomach. He rubbed gently, and then moved his hand down to the soft curls between her legs. He stroked for a few minutes, but she didn't react. She was dead to the world. He kissed her cheek and wrapped his arms around her. So, he'd have to wait till morning. Worse things had happened. \n\nIt was near lunch time and Riley and Jessica had yet to make an appearance in the living room. Angus, Scott and Jim sat in the living room waiting. Josh was standing guard dutifully by Riley's door. Surprisingly, with the exception of an initial 'Riley's going to fucking lose it', Angus had ignored what Josh was doing and instead paced the living room casting expectant glances down the hallway. \n\nJim and Scott were antsy too but for vastly different reasons. Over the past few days while Riley and Angus had been occupied with Jessica; Jim, Josh and Scott had been busy planning. They knew that they were going to have to answer to Riley and Angus about the past week but they wanted it to be on their own terms. And Jim in particular wanted them to be aggressive and radical about it. He argued that now, while Riley and Angus were thrown off balance by the dynamics of their new relationship with Jessica, was the time to push the limits of what they could get for Jessica.  Jim's plan was to tell Riley and Angus that not only had all the rules been removed for Jessica over the week, but she had also met outsiders, raced Ebony, and done anything and everything. imaginable. He wanted to gamble on the fact that their new relationships with Jessica would keep Riley or Angus from rescinding her freedoms. \n\nBut cooler heads had prevailed and Jim had to acknowledge that Josh and Scott had good reason to believe that in addition getting their asses kicked with that story, there was the risk of Riley and Angus tightening their reigns on Jessica out of fear of losing her.  So instead they'd scaled the story back a little. They intended to recount actual events but embellish Jessica's freedoms, removing rules and restrictions on where she could go alone on their property. Include Jessica's control of pain medication and birth control and any and all things that would give Jessica as much freedom as she could get without Riley and Angus going ballistic. Scott had even brought all the medication from the barn back into the house and put it in the kitchen. They decided to exclude the encounter with the neighbors, the fact that Jessica was going to ride Ebony at the track, the talk about kill counts, the planned target practices, and their near mutiny. Those were five topics that Jim, Scott and Josh had agreed should never be shared with Riley and Angus because despites Jim's desire to push the limits while the iron was hot, there was a good likelihood that Riley and Angus would react with extreme negativity and potentially with violence. After all, their near betrayal was something that not even a saint could be expected to forgive. Riley and Angus were no saints ... Jim, Josh and Scott were certain someone would end up dead if that came out.\n\nThey'd decided to do it that day, as soon as Riley was up. But the longer it took him and Jessica to emerge the more nervous they became. So much rode on this. The most important thing being Jessica's happiness, but not far behind were their plans with Corey and Shawn to have Jessica race Ebony. There was a lot at stake there. They'd paid a substantial entrance fee ... not that money was an issue for them. Between the general funds available to the clan as a whole ... funds stolen via various methods ... and a lucrative living being made through the men's side jobs with the horses, cars and dogs, the men were awash in money. But they had paid the entrance fee, they had many non- clan backers who Scott knew through the horse business betting substantial amounts on the race and if Jessica and Ebony won it would ensure that Scott's dream of racing horses was formally launched. Not to mention the chance for Jessica to do something she loved, ride. And maybe she'd get to meet a few women she could be friendly with. Her excitement at the prospect of their neighbors including some women was very firmly etched in the men's memories.  \n\n\"What the fuck is taking them so long?\" Angus demanded.\n\n\"I don't know.\" Scott said his voice dripping with sarcasm, \"Maybe Riley's pulling an Angus and they'll be in there all day.\"\n\n\"Fuck off!\" Angus snapped but grabbed one of his Sports Car Illustrated and dropped onto the sofa.\n\nJim forced a chuckle ... it was nerve racking waiting around. Lord knew that he, Josh and Scott had a shitload of work waiting for them in the back field. They'd decided to build a track so Jessica and Ebony could train. They still had a lot of digging and leveling to do ... and he just wanted to get on with it so Jessica could use it as soon as Riley and Angus were away for an hour or so. \n\nFinally there was some noise in the hallway and Riley, holding Jessica's hand emerged. Riley looked somewhat miffed, and Jessica looked worried. Josh trailed after them and he looked like death warmed over. Jessica moved to give morning kisses starting with Angus who had propelled himself off the sofa when he saw her.\n\n\"Good morning,\" Jessica said melting into his arms and kissing him.\n\n\"Morning ... are you okay?\" he asked studying her face.\n\n\"I'm worried about Josh.\" She replied. Angus followed her gaze when she turned to look at Josh who had dutifully followed her over to Angus.\n\n\"What the fuck ...\" Angus exclaimed when he saw how tired he looked. \"Josh you look like shit.\"\n\n\"That's what happens when you camp outside my bedroom door all fucking night.\" Riley grumbled. \n\nJessica moved to Josh and cupped his cheeks, \"Josh you have to sleep. Please.\"\n\n\"I'm fine Jess, honest.\" Josh said but he looked like he'd fall down at any moment. \n\nJessica shook her head, \"No you're not, and you're coming with me.\" Josh groaned as she pulled him back down the hallway. Jim and Scott shared a look ... hopefully he'd be awake enough to remember to fill Jessica in on the plans. They hadn't had a moment alone with her and it was important that she knew what they were keeping from Riley and Angus so she didn't mistakenly mention it to them.\n\n\"What the fuck is his problem?\" Riley demanded.\n\n\"It's a long story,\" Scott replied, \"but one we'd planned on telling you right now.\"\n\n\"I think you'd better.\" Riley agreed. \n\nJessica returned and from her expression it was clear Josh had told her. She looked nervous as she melted into Scott's arms, \"Good morning,\" she said kissing him before moving into Jim's arms, \"I'm really worried about him Jim he's going to make himself sick.\" \n\n\"I know Jess but I honestly think he just needs more time. Everything will be okay. \" He added with a wink when Jessica gripped his arms hard and used her eyes to try and convey her worry about the plan with Riley and Angus. He knew how to distract her. \"I was going to make some lunch since none of us have eaten yet ... do you want to make it?\"\n\n\"Yes!\" Jessica exclaimed, \"Oh, I'll make some tuna casserole, is that good for everyone?\" She looked around clearly excited. It was easy to see that Riley and Angus could think of better things they'd rather she be doing. Jessica's cheeks flamed red as a shy smile spread across her face.\n\nJim could see the direction this was going but he knew how to cut it off at the knees. \"Angus, don't you have something for Jess?\" \n\n\"What?\" Angus asked blinking at Jim. \n\n\"The things you picked up yesterday.\" \n\n\"Oh ... right.\" Angus said and taking Jessica's hand he pulled her along with him to the sofa where he lifted a bag from the coffee table. He looked inside, and scratched his head. He was still confused by the advice Jim and Scott had given him about the contents. He sighed and pulled a portable CD player and some CDs out of the bag.\n\n\"No way!\" Jessica exclaimed.  She looked through the CDs. Brittany Spears, Pink, and some mix CDs. \n\n\"Thank you!\" she said and threw her arms around Angus' neck ... then Jim's, Riley's and Scott's. She was so excited. \n\n\"A CD player?\" Riley asked.\n\n\"Yeah. We don't have a computer so an MP3 player wouldn't work ...\" Jim replied.\n\n\"Oh!\" Jessica said bouncing with excitement. Suddenly she wanted nothing more than to listen to the music and dance like she'd always done at home while she did chores. \"I'll go make lunch!\" She exclaimed and moved to the kitchen where she popped on the headphones, a CD, and began to dance around the kitchen as she cooked. \n\n\"Now's a good time for that explanation.\" Riley said.\n\nScott motioned to the sofa so Riley and Angus dropped onto it. Jim and Scott dragged over dining room chairs and straddled them. \n\nScott was nervous as hell ... the plan had a chance of going horribly wrong. But if it went right it had a huge payoff for Jessica. Without a clue what to expect from Riley or Angus he forced himself to say, \"It started with Jessica helping us with chores.\"\n\nThrough the whole story, Riley and Angus would flick their eyes over to Jessica who, oblivious to what was happening, continued to rock out in the kitchen.\n\nThe range of emotions that rolled over their faces changed from surprise, relief, happiness to sadness and anger. While Riley sat rock still on the sofa, squinting at Scott and Jim as they spoke, Angus had leaned forward planting his elbows on his knees his huge hands clasped together, and he swung his hard stare between Jim and Scott as they took turns speaking. Throughout the account Riley and Angus interrupted with questions, challenging and arguing throughout. It was clear though that they were, as Jim had expected, off balance. So their challenges ended in grudging acceptance. For some reason Angus had argued long and hard about Jessica's period being as painful as it was. It had come up during the discussion about Jessica controlling pain medications and birth control and for whatever reason Angus did not want to believe that every part of Jessica was in excruciating pain without the medication. Finally, in exasperation, Scott had told him to ask Jessica himself and that shut him up. \n\n\"And she jogs with us in the mornings ...\" Jim added as a final note. It hadn't officially started yet, but he figured he'd throw it in for good measure. \n\nSilence ensued. Riley and Angus looked overwhelmed.\n\n\"So ...\" Angus finally said, a look of complete bewilderment on his face, \"She won't marry us?\"\n\nJim and Scott glanced at one another and visibly relaxed. If that was what Angus was going to concern himself with, everything was going to be fine.\n\n\"No.\" Jim said. \n\nRiley and Angus shifted their eyes to Jessica. She was gyrating her hips in the kitchen as she got plates out of a cupboard. It was more than a little distracting but the sting of disappointment kept them focused.\n\n\"Not unless we treat her equally. That's what marriage means to her.\" Scott said.\n\n'Equally.' The word ricocheted through Angus' mind. As he watched Jessica dance around in the kitchen an overwhelming feeling of possessiveness swept over him. It wasn't jealousy like he'd felt with Beth. He had no trouble sharing her with the men, and he truly wanted to do whatever he could to make her happy. But, the equality that she would be seeking from the mainstream idea of marriage, could never be hers. \n\nShe belonged to him. Heart, body, and soul. And if she was doing something that he felt was too dangerous for her ... like riding full speed on that black fucking monster of a horse of Scott's ... she would have to stop. He would order her to stop. And if she didn't want to listen ... Angus paused to assess his feelings, something that felt very foreign. What lengths would he go to if she didn't listen. He was surprised yet happy to find that he felt no desire to inflict violence on her. He liked the idea of a slap during sex ... consensually, but using violence to control her the way she would need to be ... no. He didn't want to hurt her anymore.\n\nSo what did that leave? Consequences of some sort ... he eyed Jim and Scott. Were they, let alone Josh, capable of doling out consequences for Jessica? He was going to have to raise it with them, and with Jessica. He didn't want any misunderstandings. He just wasn't sure how. Things were so different now. His usual method of strong arming people into doing what he wanted didn't seem useful anymore. He glanced at Riley. \n\nHe'd seemed to be contemplating something too but Riley finally said, \"Not that marriage ever crossed my mind. I was just concentrating on getting her to ... stay. I don't understand how you managed to have these conversations with her.\" He said looking at Jim and Scott. \"They're ... very personal.\"\n\n\"I bet that if you were to try now, you would have the same kinds of conversations. Jessica had been sure that you hated her. She was very defensive around you, but not now.\" Jim said\n\n\"And the horse racing. Isn't it ... dangerous?\" Riley asked.\n\n\"She's not going to run away Riley.\" Scott said. \"She said so herself ... but we told you how she could have, and didn't. Trust me, she's here to stay.\"\n\n\"That's not what I meant. She can fall and kill herself.\" Riley replied wincing at the prospect. He remembered when Jessica had fallen of Ebony in the corral that time, he'd felt like he'd been kicked in the balls. Angus grunted his agreement and it was clear to Riley, Jim and Scott that he was agitated by the possibility.\n\nScott looked to Jim for help. He began to wish they'd kept the horseback riding a secret too. While keeping the official race in which Jessica was going to jockey for him a secret they had divulged that she raced the horses on their land for timing and horse training purposes. Now he wished they hadn't. Both Riley and Angus looked on the verge of forbidding Jessica to ride and that was going to upset her and be disruptive to the training schedule. He, Jim and Josh had even spent their free time over the past few days out in the field building a track on which to race ... he hated the idea that it might not happen. \n\nJim returned Scott's silent plea with a look of incredulity ... the two men who'd been so bent on beating and killing Jessica initially now were going to make a big deal about something that she was perfectly capable of safely doing? But Jim couldn't point that out because despite how things had improved between Jessica, Riley and Angus, Jim was not convinced that anything had changed in the way Riley and Angus viewed him. It was entirely possible that if he argued for Jessica riding, Riley and Angus would adamantly oppose just on principle. \n\n\"You should see for yourselves,\" Jim said. Despite there being no evidence of this in the past, maybe there was a chance they'd be reasonable once they saw how capable Jessica was.\n\n\"I don't want her on that fucking horse, period.\" Riley grumbled but he wavered on his resolve as he watched Jessica shimmy while she stirred the pot in the kitchen. They were all in a much happier place and he was very aware it was no thanks to him. Through the whole account Jim and Scott gave of the past week Riley felt completely lost. Everything they had done was so opposite to what he would have done, yet it had worked. Under no circumstances did he want to go back to the way things were so he had to find a way to function in their new world. \"But I'll come see for myself. When do you intend to let her race again?\" \n\n\"She will probably want to ride as soon as possible. Riding usually means racing.\" Scott replied\n\n\n\nAngus was momentarily pulled out of his internal turmoil over consequences and how to discuss them with Jim, Scott, Josh and ultimately Jessica. \"Do you all wait for her to say what she wants?\" Angus demanded. Jim and Scott had explained why Josh was behaving as he was and Angus could understand to a certain extent. But despite having done equally bad, if not worse, things to Jessica himself, he could never be repentant in the way Josh was. Not that he didn't want Jessica to be happy, he did, but there had to be some thought put into what Jessica could and could not do. To give her free reign was irresponsible. Josh had wigged out, that was plain to see, but Angus hoped that Jim and Scott would be more level headed because if they weren't, there was going to be a problem. Not just with him but Riley too ... Riley lived and breathed consequences.",
        "\"No.\" Jim replied with a cautious tone. While Riley and Angus seemed to be taking things well so far Jim realized now ... hopefully not too late ... that Riley and Angus' naturally controlling and authoritarian tendencies were potential points for contention between them and him, Josh, Scott. He knew that it was vital to a peaceful and rewarding existence for Jessica that he, Scott and Josh find a way to influence Riley and Angus away from their authoritarian ways. He didn't know exactly how to do that but he did know that much like the quiet way he had tried to influence them in the past, it was going to take a lot of finesse and patience. And unlike the past, he, Scott and Josh couldn't let them get away with anything that hurt Jessica in any way. Their duplicity had to end. To balance the two approaches was going to be nothing short of a miracle.  He could feel the responsibility weighing on him but he rallied to rise to it.\n\n\"That's just Josh's ... peculiarity.\" Jim continued trying to choose his words carefully, \"But ... in line with that whole equality thing ... we try not to \"let\" her do things. She needs her freedom, she cherishes her freedom. You can see the difference it makes.\" Jim said tilting his head toward Jessica who was now rocking her hips as she grated cheese. \n\n\"And about the racing ...\" Jim continued. He already knew that if Riley and Angus dictated that Jessica couldn't race the horses, he, Scott, Josh and Jessica would continue in secret. One way or the other she would race both here at home and at the track. But doing so undermined all of their relationships. It wasn't healthy and something Jim strove to avoid. \"In a few days Ebony is going to be a sire for one of Scott's clients. It's really important that he save his energy for that. He'll be gone a few days ... when he gets back, Jessica can show you how she races. Sound okay?\"\n\nRiley and Angus nodded but they seemed unsure.\n\n\n\nRiley fell back against the sofa. \"More happened here then I'd thought.\"\n\n\"Way more.\" Angus agreed.\n\n\"I'm not sure how I feel about most of this.\" Riley said. \"Never mind Jessica,\" Riley continued, looking up at Jim and Scott, \"But you guys broke all the rules. You, betrayed us ... I mean, despite the fact that it's turned out really well. I'm thankful of course ... but part of me ... \" Riley's voice trailed off. \n\n\"Yeah. Me too.\" Angus said staring at Jim and Scott, his expressions continuing to alternate between happiness, disappointment and anger. \"Betrayals a bitch ...\" he grumbled.\n\nJim and Scott shifted in their seats. They looked at each other, both thinking that Riley and Angus didn't know the half of it. \n\n\"I understand how you must feel.\" Jim said trying to find a way to smooth things over. \"But please, don't take this out on Jessica. It's between us ... and I know I'm probably not in much of a position to make suggestions but I will anyway. I think you should wait for a while before you reach any conclusions. See how things go with our new ... arrangement. You're happier already,\" he said waving his hand toward Angus and his new appearance. \"I know it goes against the grain ... but sometimes there are rules that need to be broken in order for change to happen.\"\n\nIt took a few minutes but finally Angus and Riley nodded. Jim was relieved. No outbursts, no threats, no violence.\n\n\"And ...\" Jim said a brainwave coming to him. A way to appease Riley and Angus, but at the same time keep his promise to Jessica about running in the mornings and shooting practice. If he was vague enough he could avoid telling them specifics and still be truthful. \"As a way to apologize I'd like to give you my night with Jessica and I'm sure Scott and Josh would do the same ... \" He shifted his eyes to Scott who looked less than impressed. \"The only thing that I ask is that Jessica can help out with the chores in the morning. The rest of the time, she's yours.\"\n\n\"Bribery ... great.\" Riley mumbled.\n\n\"Is it working?\" Jim asked.\n\nThere was a moment of silence while Riley and Angus sat thinking.\n\n\"I'm still pissed at you.\" Riley finally said. \"It makes no sense, I know. Things are so much better now ... but it still doesn't sit right.\"\n\n\"Amen.\" Angus muttered.\n\n\"But I'll take your offer.\" Riley continued. \"Angus, you can have tonight since I just had a night with Jessica. I'll take tomorrow, if you're offering too Scott.\"\n\n\"Sure.\" Scott said, not really sure at all but he figured Jim had to have a method to his madness. He always did.  \n\n\"But there's more ...\" Angus said leaning forward, elbows on his knees. He pinned Jim with his grey eyes and alternated his stare between Jim and Scott.\n\n\"I have to tell you right now, so there's no misunderstanding, Jessica belongs to me. Hold on!\" he said raising his hand to stop Jim before he could speak. Angus struggled for the words to say what he wanted. Goddamn it.... expressing himself to anyone but Riley wasn't easy. But he had to. Things were moving too fast and he felt like he was getting lost in the changes.\n\n\"She belongs to all of us, I know.\" Angus said, \"But I'm trying to explain my take on things so I'm speaking for myself, and I'll make sure Jessica knows this too. Jessica belongs to me. I'm willing to go along with most of this. I want her to be happy ... sure I do. She's welcome to a lot more freedom. I'll go along with all of that. But if there is anything that I disagree with, like potentially this horse racing, I will say no. And Jessica will listen. I'm not willing to negotiate on her safety.\"\n\nAngus looked between the men as silence ensued. From the corner of his eye, he could see Riley nodding.\n\n\"And what if she doesn't?\" Scott asked suddenly sure that things were about to revert to how they had been.\n\n\"There would be consequences.\" Angus said, \"But not like before. I'm in no way interested in beating Jessica so you can stop looking at me like that!\" He snapped.\n\n\"Sorry.\" Scott said.\n\n\"So, exactly what kind of consequences?\" Jim asked.\n\nAngus exhaled. He looked to Riley and he seemed as perplexed as Jim and Scott.\n\n\"Just like we were doing recently. With removal of privileges. That kind of thing.\" Angus said with a shrug. That made the most sense to him.\n\n\"Seems pretty authoritarian ...\" Jim said quietly.\n\n\"And?\" Angus demanded. \"That girl needs some boundaries.\" He continued, memories of her falling off of Ebony in the corral running through his mind including the smile she'd had plastered to her face. She'd taken ridiculous chances to get away, and now Jim and Scott's recount of Jessica jumping the river on horseback made Angus doubt Jessica's abilities to police herself. \"She's a danger to herself sometimes. I have no issues with protecting her from her own lack of good judgment.\" Angus added.\n\n\"I agree.\" Riley said and couldn't help but be impressed with the way Angus was handling things.\n\n\"I'm fine with that.\" Scott said, knowing full well that he already had a way to deal with her craziness. He knew without a doubt that he'd have to dominate Jessica again. The only unknown was, when. \"So long as we aren't ridiculous about it. She needs room to breathe and to have some independence.\"\n\n\"Jim?\" Riley asked.\n\n\"I don't know.\" He said glancing at Jessica dancing freely in the kitchen and then back at the men. \"I don't want to have a long list of rules that Jessica needs to live by. She'll never like that.\"\n\n\"I doubt there'll be a list.\" Riley said.\n\n\"This is Jessica we're talking about ...\" Angus grumbled. \"Just kidding.\" He said when Scott and Jim looked worried. \"I'm serious when I say that my limits for what I'm willing to let her do are pretty high. It's simple ... can she kill or maim herself? If the answer to the question is yes, then my answer is no. Other than that, we're good.\"\n\n\"And how are we going to let her know about these things she's not supposed to do? I guarantee you that giving her a 'don't kill or maim' yourself guideline to work with, won't work. We'll be punishing her for things she didn't even know she wasn't allowed to do.\" Jim continued.\n\n\"Just like before.\" Scott added.\n\nAngus shook his head.\n\n\"Before we were always trying to figure out what she was going to do next to escape. Now ... we'll just deal with things as they come up. It's not a big deal.\" And as if to prove it wasn't a big deal, Angus shrugged and fell back against the sofa, all signs of tension disappearing.\n\n\"And Jessica will have a chance to prove you wrong?\" Jim asked. \"She'll have the opportunity to argue and demonstrate her side of things? Like with the horse racing?\"\n\nAngus exhaled.\n\n\"She'll have the chance to prove us wrong ... I don't think you're going to be too crazy about whatever it is she's trying to do either. And she will have the opportunity to present her case. I will listen with an open mind ... and listen to your opinions too.\" He looked down at his hands that lay balled up on his thighs, ashamed to realize that he'd been the reason for so much sneaking around.  \n\n\"We have to keep communication open. I don't want any more secrets. What?\" he asked when he looked up to find the men staring at him in stunned silence.\n\n\"Who the hell are you?\" Jim asked.\n\n\"Yeah, the Angus we know is all about fire and brimstone certitude, not calm and reasonable dialogue. Appearance wise you're a great imposter but personality wise, you suck.\" Scott said.\n\n\"Ha, ha.\" Angus grumbled but when Riley looked as surprised as Jim and Scott he knew he deserved their skepticism. He cleared his throat.\n\n\"I know I haven't demonstrated this before, but I am capable of reflecting on my behavior.\" He said. \"I was a real asshole in a lot of ways, and I'm pretty sure I still am. But I realize that you guys tried to tell me things and I didn't listen. I'm still pissed off at you ... but I will try to listen.\"\n\n\"Okay ...\" Riley said when Jim and Scott continued to stare. \"Since we're learning from past mistakes ... what are we going to do when we disagree about something? One of us can say no to something, and some of us may not agree that it's an issue. Like this racing thing. In the past we started off reaching consensus ... which at the time was easy to do. Then I became the decision maker. Obviously I was way off the mark on a few things too and I have to tell you that I'm completely out of my element right now. So when we don't agree, what do we do? Well?\" Riley prompted when no one said anything.\n\nMore silence, but Jim was casting uneasy glances at Angus.\n\n\"Spit it out Jim.\" Angus finally said.\n\n\"You say you want communication and that you'll listen. But what will you do when you hear something you don't agree with? Like now? Jessica doesn't just belong to you. She belongs to us. And because of that, the only way a decision can be fairly made is by consensus. But ... \" he continued, raising his hand to interrupt what Angus was about to say, \"consensus doesn't always work. If we can't all agree, then it's majority rules ... and Jessica gets a vote.\"\n\nAngus squinted his eyes at Jim. His instinct was to say no. To say no, and argue that it made no sense to give a vote to the person about whom the vote was taking place in the first place. But Angus' instincts took him in some really wrong directions before. Jim seemed to be getting things right. His only option was to suck it up and follow Jim's suggestions.\n\n\"Okay.\" Angus said in resignation. \"If you say majority rules, then majority rules.\"\n\n\"That makes six of us voting.\" Riley said. \"What if it's a tie?\"\n\nWith Riley's questions, Jim had closed his eyes and brought his hand to his head. He was getting a headache. But Riley and Angus were right. To avoid problems, it was best to figure these things out now.\n\nHe opened his eyes as he realized that Josh was still sleeping. \"Maybe Josh should be here for this ...\" he said.\n\n\"I think it's safe to assume what his response to everything will be 'whatever Jessica wants, Jessica gets.' We'll fill him in later.\" Scott said. \"With what we've discussed so far I don't think he'll have any strong objections.\" \n\nJim nodded. \"Fine.\" He said. \"If it's a tie, we discuss some more, revote. Do that a couple of times and if we're still tied ... pull it from a hat or something. And we'll just have to live with the outcome.\" The other men nodded their agreement.\n\n\"Good. Now we have to make sure Jessica knows ...\" Angus said.\n\n\"And what's your plan for letting her know?\" Jim asked with an expression that made apparent his lack of confidence in whatever method Angus would choose.\n\nOnce again Angus sighed. He was in over his head. He gave up.\n\n\"I'll follow your lead.\"\n\n\"Lunch is ready!\" Jessica yelled from the kitchen ... music still blaring in her ears.\n\n\"Just do me a favor.\" Riley said before they got up. \"Wait till Angus and I are able to come out and watch her race before she does again. We want to be sure she's safe.\"\n\n\"Sure. No problem.\" Scott agreed. This was far better than the alternatives.\n\nThe men sat around the dining table. \n\nRiley and Angus kept staring at Jessica. \n\nShe smiled when she noticed, shoveled food into her mouth, and then paused when neither Riley nor Angus ate.\n\n\"Is it okay?\" Jessica asked. \"I just realized that I put a whole lot of cheese in it.\" She looked down at the casserole on her plate. \"I didn't think to ask if you liked a lot of cheese or not.\"\n\nRiley took a mouthful ... \"No, it's great Jessica ... really good.\" He added when he realized just how good it actually was. \n\nAngus took a bite also, and nodded.\n\n\"Is everything okay?\" she asked when they returned to staring at her.\n\n\"Jim and Scott just finished telling us what happened here while we were gone.\" Riley said.\n\n\"Oh.\" Jessica said, not sure how to read his or Angus' expression. She had assumed they'd wait until Josh was awake to have that conversation. If she'd known the conversation was going on while she was cooking she would have been a bundle of nerves. She hoped that the relative calm around the table meant that things were okay but the indecipherable expressions on Riley and Angus' faces as they stared at her left her unsure. \n\n\"About the horse racing ...\" Riley began.\n\nJessica froze. If he told her she couldn't ride again, she didn't know what she'd do.\n\n\"As I understand it, Ebony will be 'busy' for a little while. But when he's available ...Angus and I would like you to hold off on racing him until we can come and watch.\"\n\n\"Oh ... oh ... okay.\" Jessica said. \n\n\"Jim ... \" Angus prompted, nodding his head at Jessica.\n\n\"Right.\" Jim leaned forward trying to think of the best way to present the vote plan.  \"While on the topic of horse racing we had a discussion about handling situations where some of us may not agree with your participation in certain activities. I think you'll find it fair.\"\n\n\"These would be really rare situations.\" Scott jumped in. Jessica had gone very still realizing that riding may not have been the only freedom she should have been worried about losing.\n\nShe shifted her gaze to Scott.\n\n\"Like horse racing? She asked. So there was a chance she wouldn't be able to ride ... her heart sank.\n\n\"Right.\" Scott said. And Jim detailed the process for her.\n\nShe seemed to relax somewhat but she shot furtive glances at Riley and Angus.\n\n\"Do you understand Jess?\" Scott asked.\n\n\"Yes. It's a veto rule.\"\n\n\"Right.\" Scott agreed. \"That's perfect 'veto rule' ... exactly.\"\n\n\"You seem a little skeptical.\" Angus said as she continued to glance at him. \"I don't blame you. But I promise, I will abide by this.\"\n\n\"Me too.\" Riley said when her eyes moved to him.\n\nAnd then Riley and Angus exchanged a look. It didn't escape either one of them that Jessica had not questioned Jim or Scott's ability to stick to the plan.\n\n\"Are you okay with that?\" Jim asked Jessica.\n\nAngus stifled a groan. Why was it so hard to adjust to Jessica being asked for her opinion? By the way Riley had snapped his eyes on Jim when he'd asked the question, it seemed to Angus that Riley was having a hard time too.\n\n\"Yes. It's nice to have a vote.\"\n\n\"And ah ...\" Riley began, \"there was some talk of you deciding that you wanted to stay here. That you didn't want to run away ... escape?\" \n\n\"That's right.\" Jessica said. She felt like she should add more, but she couldn't think of what to say.\n\n\"Well. Then, you'll have to be patient ...\" he began slowly as the implications finally began to really sink in. Nothing was the same. What had Jim and Scott said? She'd been roaming around their property unattended all week? That was so hard to adjust to. \"Rules that we had in place. I guess they don't apply anymore. But, please be patient with me.\"\n\n\"Us ...\" Angus threw in.\n\nRiley nodded. \"Us. It's hard to change everything instantly.  If you could let us know before you go off on your own for the next little while we'd appreciate it.\"\n\n\"Um, ok.\" Jessica said still bewildered that Jim, Josh and Scott had decided to let her start doing that. She hadn't all week but when she'd been putting Josh to bed he said as of now she was free to go anywhere on the property she wanted. He'd warned her to stay out of the tree lines or brush though due to the bear traps still set there. \n\n\"It won't be forever.\" Riley added mistaking Jessica's response as reluctance. Though he felt completely lost and unsure of himself, he knew this was the right way to go. After all, the others had already given Jessica freedom and she was still sitting across the table from him. And for this he knew he should be grateful to Jim, Scott and Josh but all he could feel right then for them was anger. The feeling of betrayal washed over him again. Though he didn't want to be away from Jessica, he was glad that he had errands in town. He needed some space from the men. \n\nJessica nodded. There was an odd tension in the air and even though it was, for once, not directed at her, Jessica felt the need to escape it. \"I'll put some casserole aside for when Josh wakes up.\" She said and retreated into the kitchen.  \n\n\"I'd better get going.\" Riley said. \n\n\"You two fuckwads go too.\" Angus grumbled. He needed them gone. Everyone gone except him and Jessica. \n\n\"Angus ...\" Jim began.\n\n\"Just go Jim!\" Angus interrupted him in a low growl. \n\nWhen neither Jim or Scott moved Angus glared at them but his voice was quiet when he said, \"I'm pissed at you guys, not Jessica. She'll be fine but I can't promise the same for you if you don't get your god damn asses out of here now.\"\n\n\"Fine.\" Scott said standing. Jim took a little longer and Angus had the distinct feeling he was going to argue about going. But then he stood and followed Scott and Riley into the kitchen to say goodbye to Jessica.\n\nAlone with Jessica at last, Angus watched Jessica move around the kitchen and contemplated asking her about her periods. Memories of all the times he'd taken Jessica during her at that time of the month, washed over him. All the times he'd nearly ripped her tits off. And here these assholes were telling him that even thinking about her tits when she was on the rag hurt her. \n\nThey should have told him as soon as they knew, Angus fumed. But then, would he have listened? In fact, had he known, he probably would have used the information to hurt Jessica more. There was no doubt that he'd been an asshole but he still felt betrayed by Jim, Scott and Josh. \n\nLooking at Jessica's soft mounds under her shirt, watching them bounce as she scrubbed the casserole dish, he felt unsettled. Something twisted deep inside him, something he didn't recognize and it wasn't a nice feeling. But it didn't stop him from getting a hard on. Memories of the other day, of how she'd tasted, images of the liquid squirting out of her as she'd cum brought Angus to a full erection. \n\nFinished with the pot, Jessica began to gather the dishes on the table. Holy fuck he was going to cum in his pants ... Angus closed his eyes trying to control himself. God, Jessica had turned him into a pre-ejaculator. He listened to the dishes clanging, trying to forget that it was Jessica clanging them but moments later silence echoed in the dining room. Angus opened his eyes and saw Jessica observing him. As soon as he looked at her, a smile spread across her face. Leaving the dishes she'd piled, she moved to him.",
        "\"So that's it ...\" she said, placing her hand on his cheek.\n\n\"What is?\" he asked, confused, and so hoping he wasn't going to explode right then and there messing his underwear in front of her. \n\nShe moved her hand to his forehead brushed her fingers on his hairline, stroking his short hair. \"The guys were right ... When you used to look at me like that ... so hard, I mistook it for anger ... hatred. It used to scare me ... But it wasn't that at all, was it? You wanted ... me.\" She slid her hand down Angus' chest, to his lap and wasn't the least bit surprised to find him in full erection. She leaned in to him, and he pushed his chair back. Jessica slid onto his lap, seating herself on the bulge in his pants. Angus gasped. \n\nJessica took his right hand from her waist and pressed it against the V between her legs, and took the other and slid it up her shirt to rest over her bra on her breast. She rubbed his bulge, and kissed him. Really kissed him. \n\nAngus pulled her to him, hard. He petted the warmth between her legs, grabbed and stroked the soft mass under her bra, and he tried to press his cock against her, slamming her against the edge of the table ... without thinking he reached out and swept everything off the table ... dishes crashed to the floor, breaking. Pushing the chair back, wrapping his arms around each of her legs, he lifted and pitched her onto her back on the table. Ripping her pants open he slid them off, pulled her shirt up to her neck, releasing her tits from her bra. Sliding his fingers in her he took her tit in his mouth. \n\nJessica gasped and shuddered, causing a moment of clarity for Angus. As bad as he wanted to fuck her he had to know about the supposed pain of her period. She'd done more than gasp and shudder with him in the past and some part of him had to know if he'd been inflicting more pain and suffering than he'd known. He pulled his fingers out of her and laid his palm gently and firmly on her pubic hair. He moved his mouth from her breast, up to her ear. Jessica was still pressing herself against him ... gasping.\n\n\"I'm sorry Jess.\" Angus said ... fighting to control himself.\n\n\"What's wrong?\" Jessica asked. \"Why are you stopping?\"\n\n\"You're time of the month ... does everything hurt more then?\"\n\n\"What?\" Jessica asked clearly confused but she didn't care for an explanation right then, \"Please don't stop ...\" Jessica moaned and slid her hand down to his cock. Angus caught her by the wrist and held it in a firm grip. \"Please Angus, I'm so ... ready ...\" she said urgently, pressing herself against him. \n\nGod she was making this hard!\n\n\"Jess. Just tell me if your tits hurt more when you're on the rag.\" Angus panted against her mouth, \"Jim and Scott said that you hurt ... everywhere ...when you're on the rag. Is that true? I need to know.\"\n\nJessica's breathing was slowing. She began to relax beneath him. \"It's true.\" She said, wrapping her legs and her arms around him. \"But when I take medication ... I'm fine. The pain goes away.\"\n\nAngus dropped his forehead onto her shoulder. He fought hard for control.\n\n\"Did you hear me?\" Jessica asked when Angus hadn't moved. \"The pain goes away ... Can we finish now?\"\n\n\"What about all the times that I raped you? You weren't okay then ... even without your period ... but especially with it. I can remember you screaming Jessica.\"\n\nJessica was silent. \n\n\"Jessica?\"\n\n\"Angus, you're not freaking out like Josh ... are you?\" she asked.\n\n\"No ...\" he said laughing despite himself. \"I'm not nearly as good a man as Josh is. I feel awful about what I've done to you. I'll never do it again ... but Jessica, I need to fuck you. I can't stop.\"\n\n\"Then don't ...\" she said pulling him closer again, moving against him.\n\n\"Christ ...\" Angus hissed and pinned her to the table and began to kiss his way from her shoulder to her tits. He alternated between the two, nipping the nipples, pulling them until Jessica gasped. Taking a whole tit in his mouth, one at a time, licking, gnawing. His other hand found her hole again and rammed into it. Jessica arched beneath him.\n\n\"Don't stop! Angus, don't stop!\" her head snapped from side to side, the pleasure was amazing, and then she came. Her pussy pulsated against Angus' fingers and he couldn't believe the strength of it. And then there was the sound of liquid hitting the floor as she came ... hard. Angus struggled to pull his pants down and then he thrust into her. The table groaned with the strain as he pumped, clutching Jessica's shoulders, holding her in place.  Jessica raised her legs, and Angus moved one hand down to hold her right knee back.\n\n\"Holy shit Jessica!\" he screamed as he finally exploded. He pumped for half a minute more, and then collapsed on top of her. He kissed her. Kissed her lips, kissed her cheeks, her neck, and he pressed himself against her. She couldn't move, but she didn't want to.\n\n\"Jessica.\" He whispered in her ear. \"I'll never hurt you again, I promise.\"\n\n\"Thank you.\" Jessica whispered back.\n\nAngus pushed himself up onto one arm and looked down at Jessica.\n\nShe smiled back at him but shifted slightly beneath him trying to get comfortable on the hard table surface.\n\n\"Shit Jess ... here get up.\" He said suddenly realizing that he was crushing her. \n\n\n\n\"Oh ... we made a mess!\" Jessica gasped looking at the broken dishes, scattered cutlery and pool of liquid on the floor.\n\n\"Yup, we did.\" Angus agreed and grinned at Jessica when she looked at him. \"And it was fucking great.\"\n\n\"It sure was.\" She agreed with a satisfied smile. Angus gathered up Jessica's clothes and helped her redress. As soon as she was dressed she began picking up broken pieces of plate.\n\n\"Give me that ...\" Angus said taking the pieces from her hand. \"I'll take care of this. You park your shapely, soft, kissable ... fuckable, ass down on the sofa and relax.\"\n\n\"There's a lot to clean up.\" Jessica exclaimed,\"I want to help.\"\n\n\"Stubborn as always ...\" he muttered scooping Jessica into his arms and carrying her to the sofa. He lowered her onto it. \n\n\"Here ...\" he said reaching into the same bag that he'd early extracted the CD player and CDs. \"Scott suggested getting you this book ... he said it had nothing to do with sex and that it was part of a series you wanted to read. Sit back and enjoy ... I'll take care of the damage from our sexclone.\"\n\nJessica laughed until she saw the book he'd handed her, and then she squealed in delight and threw her arms around Angus.\n\n\"Thank you!\" she muttered. \"I've been dying to read this book.\"\n\n\"Don't thank me.\" Angus said. \"Thank Scott. I just hope that you'll share enough with me from now on that one day I'll know what book you've been waiting to read.\"\n\n\"Jessica?\" Josh asked from behind Angus. Angus spun around ... he'd forgotten that he'd still been sleeping.\n\n\"Are you okay Je...?\" Josh asked, but his voice faded as he took in Angus with his pants still unbuttoned, the mess around the table, the liquid splashed across the floor, and then Jessica, hair disheveled, cheeks blazing red, and shirt inside out and backwards. And as if to avoid leaving any doubt that she and Angus had just fucked, two huge hickeys glared at him from Jessica's neck ... Angus had a matching pair.\n\n\"I'm great.\" Jessica said. \"Sorry about the mess.\"\n\n\"I'm working on it ...\" Angus added, moving back to the table and beginning to pick up the remaining shards of glass.\n\n\"Oh Josh, I have lunch for you in the fridge.\" Jessica said sitting up.\n\n\"I got it ... \"Angus said, raising his hand ...\"just read!\"\n\nAngus moved into the kitchen and put the plate of casserole into the microwave.\n\n\"Um, you may want to eat at the coffee table until everything's cleaned up.\" Jessica said, lying back on the sofa, head on the armrest, legs bent.\n\n\"I'll bleach the dining table.\" Angus said bringing Josh the plate.\n\n\"If Jessica was on the bottom ... I don't really care.\" Josh said taking the plate and seating himself on the floor, leaning against the sofa ... his head and shoulders against Jessica's bent legs. \n\nAngus paused. \n\nJosh rolled his eyes to meet Angus'. And a second or two ticked by before both Josh and Angus erupted into laughter. Cheeks pink with shyness, Jessica couldn't help but giggle as she brought her hand to Josh's head. She ran her fingers through his hair.\n\n\"Trust me.\" She said, \"Bleach it.\" That brought on more laughter. \n\nJosh finished eating and went to help Angus clean-up. \n\nForty five minutes later they were all on the sofa. Josh leaning against the arm of the sofa, legs stretched out, around Jessica, reading a comic. Angus on the other side of the sofa in much the same position, reading a car magazine. And Jessica lying back against Josh, with her legs resting on Angus' lap, reading her novel. Angus was rubbing her feet while attempting to read. But he just couldn't concentrate. Jim and Scott had said that Josh didn't wig out until well after the three of them had given Jessica the chance to escape. So he couldn't blame the decision on insanity. Even though Scott and Jim had explained how they'd reached the decision to do it, Angus just couldn't fathom taking the risk. \n\nJessica was the most relaxed that she'd ever been since she'd been kidnapped by the men. It felt good to be in Josh's strong embrace ... to actually feel safe there. And having Angus massaging her feet, not being afraid of him, of any of the men was surreal. She was engrossed in her book so it took her a while to realize that Angus seemed to rub her feet in waves. There seemed to be a pattern of steady, active rubbing, then a lull with hardly any rubbing, and then a steady active rubbing. After this happened several times Jessica peeked over her book at him and found him staring at Josh. Moments later his eyes whipped down to his car magazine and he kept reading. Jessica went back to reading but when it happened again Jessica looked over her shoulder at Josh. He was reading his comic, but when Angus would begin to stare, Josh would shift his eyes to look at him. When Angus dropped his gaze, Josh would do the same. Neither one looked angry ... their body language seemed relaxed, so Jessica tried to go back to reading her book. But eventually Jessica felt like she was watching a tennis match, looking between Angus and Josh.\n\n\"Is there a problem Angus?\" Josh finally asked.\n\n\"Jim and Scott told Riley and me what happened while we were gone.\" Angus said.\n\n\"Okay.\" Josh said. \"And the question remains ... is there a problem?\"\n\n\"I'm just trying to figure out how you could do it. How you could gamble it all like that?\"\n\n\"Do you feel like you're gambling right now?\" Josh asked, trying to re-evaluate Angus' demeanor. He seemed pretty calm ... unusual for Angus.\n\n\"No, not really.\" Angus replied, his eyes settling on Jessica's who for her part was listening to the conversation and looking at Angus as if she was wondering the same thing. It felt so surreal, good but surreal, to be gazing into Jessica's eyes so easily ... all because Jim, Josh and Scott had been willing to take the chance on her. He knew he never would have been able to and he doubted Riley would have either. It was enough to make him question every instinct he had.\n\n\"Then you know exactly how I felt.\"\n\nAngus shook his head as he muttered, \"How was it so easy for you?\"\n\n\"It wasn't,\" Josh said with a shrug. Looking down at the top of Jessica's head as it rested on his chest he remembered the terror he'd felt in the barn as she'd walked out the door. Jessica tilted her head up to look at Josh entwining her fingers with his. She worried that his mental state was going to deteriorate further, he'd sounded so sad. \n\nTugging gently on Jessica's hand, he gazed down at her, \"Not easy at all the first time.\" He paused wondering where they'd all be if Jim hadn't had the foresight he had but then he swung his eyes back to Angus, \"But Jim insisted and it worked out. And now we have to make sure that Jessica's decision to stay was worth it.\" \n\nThere was a sadness and what Angus could only describe as desperation to Josh's tone and demeanor when he spoke. It startled Angus. He hadn't realized the extent to which Josh was affected until that moment, but then Jessica swung her eyes back to Angus and clearly expressed in them and in her expression was the love she felt for Josh and the undeniable terror she had about his state of mind. Jealousy gripped him and with it an all-consuming fury. He wanted that love, he wanted that concern, it ate him up. Only Jessica recoiling away from him stopped Angus from lunging forward and grabbing her. \n\n\"You think I don't fucking know that?\" Angus demanded while struggling for control. \"Just because you, and the other two fucktards did it first doesn't mean that Riley and I don't want to make Jessica happy as much as you do.\" \n\n\"Good to hear.\" Josh replied in an equally angry voice, \"Surprise us all by actually doing it ...that'd be a first for you.\"\n\nJosh tensed beneath her and from the way Angus strained forward, Jessica was certain they were going to fight. Despite the fact that Josh was just as large and muscular as Angus, Jessica couldn't stand the thought of Angus hitting him. She desperately wanted to keep Josh's body from being as broken as his psyche seemed to be.\n\n\"Please don't fight.\" Jessica said raising her hands in front of her, as if they alone would protect Josh, \"Please ...\"\n\nAngus mustered his last ounce of control and resisted responding to Josh. Instead he locked his eyes on Jessica again. \"I did say I needed some time.\" Angus said.\n\nJessica nodded. \"You're trying, that means a lot.\" \n\nAll Angus could muster was a grunt. She was still worried about Josh, he could see it in her expression. Jealousy lingered. He didn't trust himself to say anything so he didn't.\n\nA car pulled up outside ... and moments later Riley stalked into the house scowling.  Body rigid, clearly furious, he dropped into the armchair.\n\n\"What the hell happened?\" Angus demanded, not missing the fact that Jessica had turned into Josh, face partially buried in his chest, when she saw Riley's expression. \n\n\"We're going out again ...\" Riley growled.\n\n\"What? So soon? When?\" Angus asked.\n\n\"A week.\"\n\nAngus was too stunned to comment. His jealousy intensified, Josh, Jim and Scott would have Jessica to themselves again. Just how were he and Riley supposed to compete with them for Jessica's trust and affection when they were always away for work?\n\nJessica's heart pounded hard in her chest. Riley and Angus were going to work again. What did that mean? Were they going to kill people? Oh God ... she couldn't live with that. Jim had said that maybe she could get them to stop. Fear gripped her. The prospect of raising that topic with Riley and Angus sent ripples of cold terror through her body. She had to ask Jim about it as soon as she could. She had a week to convince them not to do it. A week to beg them to change their very livelihood ... their reason for being. She trembled uncontrollably at the thought. Despite how much nicer Angus and Riley were being to her now she had no idea how they would react to her request. Maybe they'd hate her again. \n\nJosh felt Jessica trembling against him and wrapped his arms tighter around her, pulling her hard against himself. Jessica buried her face in his chest. \n\n\"Riley's not mad at you Jess.\" Josh whispered in her ear just as Riley calmed down enough to take in the scene.\n\n\"What's going on?\" He asked, casually at first, but when he saw how pissed off Angus looked he straightened in the chair. \"What's wrong with Jessica?\" he demanded, glaring at Josh, and the hard edge to his voice triggered another wave of shivers rippling through Jessica. \n\n\"I don't know.\" Josh replied, his tone equally hard, \"But if I were to guess I'd say that you coming in here looking like you're going to kill somebody may scare the shit out of her.\"\n\n\"Oh,\" Riley said taken off guard. He hadn't considered that his demeanor could have been so misunderstood or misinterpreted. He looked to Angus for support but found Angus looking equally surprised. \n\nLeaning forward in the chair Riley planted his hand on her lower back. \n\n\"Jess,\" Riley said, \"I'm not mad at you. I'm pissed at someone else.\"\n\nA car pulled into the driveway as Jessica peeked up at Riley from Josh's chest. She could tell that scaring her bothered him. Turning in Josh's arms she sat up. Reaching for Riley's hand and then Angus'. Jessica looked between them. \"Please don't go to work.\" She said. \"Don't hurt people anymore ... please.\"\n\nRiley and Angus gaped at Jessica. They couldn't have been any more surprised if she'd told them she was the Tooth Fairy and sprouted wings and a wand.  \n\nScott and Jim walked in the door.\n\n\"What the fuck is going on?\" Scott demanded. Dropping the shopping bags he'd been carrying he scanned the room, the men, Jessica. \n\nBeside him Jim did the same, \"Josh, Jess, what happened?\"\n\nRiley and Angus exchanged a look when Jessica barely reacted to Scott and Jim's tone. It wasn't lost on either one of them that Scott and Jim had spoken just as sharply as Riley had earlier and Jessica showed no fear of them. \n\n\"Riley and Angus have to go out again in a few of days.\" Josh said.\n\n\"So soon? Do you know why?\" Scott asked, groaning inside. It was easy to see that Jessica was thinking about Riley and Angus' kill counts. She looked from Scott to Jim and back again with a pleading expression. \n\n\"No.\" Riley grumbled in response. \"All Sean said was that it had nothing to do with Kevin and that they'll call when it's time.\"\n\n\"I think it may be a good idea to find out what the nature of the job is.\" Jim said to Riley, emphasizing the word 'nature'. Willing Riley to catch on but then confused by the rage that transformed Riley's already unhappy appearance.\n\n\"Thanks for your help Jim.\" Riley growled in response, \"But we were getting to that without you.\" From the corner of his eye Riley could see Jessica shrinking back against Josh. \"God damnit!\" He swore turning on Jessica, \"You do remember that this is what we do, who we are, right?\"\n\nJessica was nodding and she looked scared and immensely sad. She resisted the urge to hide in Josh's arms again and went to her role play zone. She had to believe Riley and Angus really loved her and therefore they wouldn't hurt her. Acting on that premise Jessica slid onto Riley's lap, pulling Angus along by his hand. Cupping Riley's face with her free hand she looked directly into his surprised eyes. \"Please Riley, it hurts me to love someone who kills people.\"\n\n\"Well that's fucking convenient.\" Angus thundered when all Riley could do was stare at Jessica. Jessica turned to find Angus' face bright red, vein in his forehead bulging, \"So you can love these three shitheads cause they don't work but Riley and I get the shaft because we do!\"\n\nJessica slid off Riley's lap and into Angus' arms, melting against him even though he was rigid with rage. She cupped his face too and planted small, light, kisses on his lips. \"But you can stop. You don't have to work anymore. Please don't do it anymore.\" \n\n\"It's not that easy.\" Riley said after a few moments of silence. He ran his hand through his hair in despair. The transformation in both Riley and Angus from angry and aggressive to sad and lost made Jessica's heart ache. \"There are rules, expectations ... and as much as we may want to Jessica, we can't just change them. This next job is purely reconnaissance ... just intel gathering. We're not even taking guns. No one's going to get hurt, I can promise you that, but we have to go.\"  \n\n\"But what about next time?\" Jessica asked.\n\nRiley shook his head. \"I don't know. Let's take it one time at a time, okay?\"\n\nJessica nodded. She could live with that, for now anyway. \"Thank you Riley, thank you Angus.\" She added hugging and kissing Angus and then Riley. "
    ],
    "authorname": "JadenL",
    "tags": [
        "hostage",
        "slave",
        "authoritarian",
        "owned",
        "stockholm syndrom",
        "owned by many men",
        "used",
        "sex",
        "submission",
        "trained"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/lisa-ch-06-changes"
}