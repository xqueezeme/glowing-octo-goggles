{
    "title": "Vannerbehn's Luck Pt. 12",
    "pages": [
        "- \"What do you mean, she's dead?\" \n\n- \"I am very sorry, Kelsen.\" said Ludianne. \n\n- \"Can't you ... you know? Do something?\" \n\n- \"Bring her back? Raise her from the dead?\" \n\n- \"Well, yeah. Can't you? I mean, aren't you ...?\" \n\nNow I recognized the look on Ludianne's face. It was sadness. In all the time I'd known her, I'd never seen her sad. \n\n- \"I am very powerful, inside the Narimac. More powerful than any who might come in to challenge me. But I am not omnipotent, Kelsen. There are limits.\" \n\n- \"You can't -\" \n\n- \"I could bring Taliesine back to life - of a sort. She would no longer be human, though. You would not recognize your friend. Nor would she have any memory of you.\" \n\n- \"No memory? Does that mean she wouldn't remember Kima? Or ... shit. Would she remember her spells?\" \n\nLudianne shook her head. \"She would be a blank slate, Kelsen. I could restore her body, as it was just before she died. But I could not bring back the person she was. Her mind would be less than that of a newborn child.\" \n\nI was grieving for Kima. But there were other implications, which affected my partner more directly. \n\n- \"She can't finish the spell.\" I said. \"You're stuck here.\" \n\n- \"Until I can find another wizard, with the knowledge and talent of Taliesine. But that is a matter for another day.\" She stood up. \n\n\"On a brighter note, Aressine will recover. I have removed the poison, and repaired her hip. She will sleep through the worst of the pain.\" \n\nI checked her myself, just to be sure. Aressine was a tough woman, but she would feel awful tomorrow. Healing spells can repair damage, but the pain doesn't simply vanish. Her lips were tightly pressed together, and there were lines on her forehead, as if she were frowning, or squinting. \n\nShe would need my attention - and all the sympathy I could offer. But right now, there was someone who needed me more. \n\n*** \n\n- \"Our last words were angry ones.\" said Kima. \"What a terrible thing to have as a last memory.\" \n\nShe didn't cry. When I first told her that Taliesine was dead, I wasn't sure that Kima believed me. The redhead seemed stunned, struck with a poleaxe. But she insisted on going to the Narimac, to see for herself. \n\nWe walked together, and she had me repeat, in tremendous detail, everything that had happened. \n\n- \"Syrava escaped? And Samadar?\" she said. \n\n- \"Unfortunately.\" \n\n- \"We'll have to remedy that, Kelsen.\" \n\n- \"We will.\" I agreed with her. They had to die. \n\nA little further on, she returned to what Ludianne had said. \n\n\"She could bring her back? But she'd be ... an empty vessel? No memories?\" \n\n- \"Less than a newborn child, was how Ludianne put it.\" \n\nKima shuddered. \"That'd be awful. She wouldn't want that.\" \n\nI let Kima have some time alone, with the body of her lover. Taliesine looked strangely peaceful, as if she were only sleeping. \n\nAnnoying. Cold. Arrogant ... Taliesine could be a royal pain in the ass, and difficult to deal with at the best of times. I was going to miss her. \n\n*** \n\nKima insisted that we bring Taliesine back to our house. I thought it a bit creepy, but Kima put her lover's body on their bed, and slept in the simple room next to it. She washed Taliesine's body, brushed her hair, and dressed the wizard in one of her finest robes. \n\nBoutan, our cook, and her daughter Naomi were devastated. I was surprised by the extent of their grief. As far as I was concerned, Taliesine wasn't the type of person that people warmed to. \n\nIt shows you how little I knew. \n\n- \"I'm going to miss her.\" said Denya. \n\n- \"Really? You only met her a few times. And I thought you didn't like her.\" \n\n- \"I didn't like the way she criticized me. But she was doing it for a reason - to motivate me.\" \n\nPamna and Fhaernala came to pay their respects. Pamna hovered over Taliesine, hugging her dead body, whispering into the dead woman's ear. Odd. And unsettling. \n\nI didn't want to seem disrespectful, but I had a few urgent questions for Pamna. As soon as I could decently take her aside, I asked her. \n\n- \"What happens to Taliesine's spells? Did they disappear the moment she died?\" \n\n- \"You mean her wards? The ones on this house?\" said the witch. \"They're still there.\" \n\n- \"They are? How long will they last?\" \n\n- \"Ah - that I don't know. Months? Years? It depends on how thorough she was, when she first cast them. Knowing Taliesine, they're probably good for a year or more.\" \n\n\"But some of those wards would simply have alerted her that someone was trying to enter your house. Now that she's gone ...\" \n\nI understood. That was exactly what I'd been afraid of. With Taliesine's death, our house was much less secure. \n\nOut of consideration for Kima, I didn't raise the subject until the following day. \n\n- \"We're not safe here.\" I said, to both the redhead and to my girlfriend Aressine. \n\nBoth women looked at me as if I'd grown an extra pair of ears. \n\n- \"What are you suggesting?\" asked Kima. \n\n- \"Well, I think that we should move to the Narimac. With Ludianne's protection, we'd be able to sleep at night.\" \n\n- \"Kelsen!\" said Aressine, sharply. \"Have you not noticed? Kima hasn't slept a wink as it is.\" \n\n- \"That's not exactly what I meant.\" I said. \n\n- \"What did you mean?\" asked the redhead. \n\n- \"Well ... just that, we'd all be safer at the Narimac.\" \n\nKima shook her head. \n\n- \"I won't have Taliesine go to her final rest from a gambling den.\" \n\n- \"What difference does it make where you go from?\" I asked. Big mistake. \n\nBoth women turned on me. I'd already lost the argument; now they just added extra punishment and a dash of humiliation. \n\nI was cold, insensitive, callous, emotionless ... and quite a bit more. \n\nI also slept alone that night. Aressine stood vigil with Kima. \n\nWhen I awoke in the morning, I found them both asleep, curled up in chairs beside Taliesine's bed. \n\nThe wizard still looked peaceful, as if she were only sleeping. \n\nI wasn't sure how long it took wizards to begin decomposing. Later that day, I asked Kima about her plans for Taliesine's funeral. \n\n- \"Burial? Or cremation?\" \n\n- \"Kelsen!\" shouted Aressine. \n\n- \"What? I'm trying to be helpful.\" \n\n- \"Well, you're not succeeding.\" \n\nI slept alone that night, too. \n\n*** \n\nI made up with my girlfriend - and my housemate - by not saying a word for an entire day. Look sad, and keep your mouth shut. \n\nKima stopped glaring at me. Aressine put her arm around my shoulder. Later on that same day, she ruffled my hair. \n\nI was sufficiently emboldened, that evening, to try my luck in bed. Aressine didn't object when I wrapped my arms around her. In fact, she snuggled closer and pressed her naked breasts against my chest. \n\nShe allowed me a few exploratory fondles, but when I slid my fingers down her upper thigh, and then between her legs, she pulled away. \n\n- \"What are you doing? Kima will hear us!\" she whispered. \n\n- \"No she won't.\" I could have pointed out that Aressine's hissed whispers were louder than any groping I'd been doing to that point. \n\nBut my girlfriend was too nervous, too uncomfortable with the grieving Kima so near. 'She's just in the next room' said Aressine. The next room? It was on the other side of the house. \n\nIt was probably the proximity of Taliesine's dead body that inhibited her. It may sound strange, but the effect was completely the opposite for me. Reminders of our mortality, of the finite nature of our existence, have always made me monstrously horny. \n\nBut it takes two, as they say - and one of us was most definitely not in the mood. \n\nThe next day, Pamna and Fhaernala came back. Denya made an appearance, too, which I thought was a nice touch on her part. Kima finally addressed the topic of Taliesine's funeral. \n\n- \"Cremation.\" she said. \"Definitely cremation.\" \n\n- \"When?\" I asked. \n\nSeven women all glared at me, all at the same time (including Boutan and Naomi). I had no idea what I'd said wrong. Obviously, though, it was time to revert to my silent strategy. \n\nI was beginning to feel claustrophobic. Or just uncomfortable. When I announced my intention to go the Gale, Aressine agreed. \n\n- \"Yes - that's a good idea. Off you go.\" she said. \n\n- \"I'll go with you.\" said Denya. \n\nNo one else voiced any objection, so the two of us set out. We used the back door. \n\nDenya was so skilled, we barely had to speak as we changed routes, checked our back-trail, and kept our eyes open for tails or rooftop crossbowmen. \n\nHalfway there, we ducked into a tavern. I ordered a drink, and played stupid, while Denya carefully studied everyone who glanced at me for longer than a second. \n\nIt wasn't until we reached the Gale that she spoke to me. \n\n- \"Did you not like her?\" \n\n- \"What?\" \n\n- \"Taliesine. Did you not like her?\" \n\n- \"Denya, you met her. She had the personality of a horned lizard. What was to like?\" \n\n- \"You hated her, then?\" \n\n- \"No, dummy. I respected her. Taliesine couldn't have cared less whether I liked her or hated her guts. Most of the people I've met who didn't care were assholes. But you have to admire someone - who isn't a complete asshole - who genuinely doesn't give a shit what people think of them.\" \n\n- \"That's definitely not you.\" said Denya. \"You try too hard to make everybody like you. And I'm not a dummy.\" \n\n- \"Yeah, you are.\" I said, prodding her with my dagger. \"When I called you a dummy, you got upset, and you totally missed me drawing my dagger and transferring it to my left hand.\" \n\n- \"FUCK!\" Denya was seriously ticked off. Not at me - at herself. \n\nI went to find Mehdawi. That night was the rarest of occurrences: a quiet time at the Gale. He only needed me to cast one spell. After that, he opened a bottle of wine - a gift from the grateful relative of someone he'd healed. \n\n- \"Mother of Mercy.\" I said, after my first swig. \"Who stomped the grapes? A trio of goblins with foot rot?\" \n\n- \"It's not that bad.\" said Mehdawi. \n\n- \"Your sense of taste died years ago.\" \n\n- \"You never had one.\" \n\n- \"I could help. As an impartial taster.\" said Denya. \n\n- \"As soon as you turn thirty-five.\" I said. \"Until then - forget it.\" \n\n- \"You're no fun.\" she said, sulking. \n\n- \"He really isn't.\" said Mehdawi. Denya smiled at him. \n\nThey amused themselves at my expense for a while, until I decided that it was time to leave. It was only just beginning to get dark when Denya and I got going. \n\nIt may seem like I wasn't worried enough about Syrava, and her friend Samadar. But I'd given the matter considerable thought. She could locate me, pretty much anytime she liked. She could set up an ambush - but only if she knew where I was going. \n\nOr if she guessed correctly - as she had when Taliesine, Aressine and I had gone to the Narimac, and walked right into their trap. \n\nSyrava might be scrying me right now. She would know that I was at the Gale. She might even guess that I was going home, to our house. But she had no way of knowing which route I would take to get there. \n\nThere was no way to set up another ambush on the way, unless she made another lucky guess. If she absolutely wanted to get me, the only place she could be sure was right outside the Gale, or right outside our house. \n\nSyrava didn't know the Bottoms. Just in case, though, Denya and I left the hospice in disguise, as a one-legged cripple and his boy. Denya stayed close to me, as I leaned on a crutch. Any observer would have seen her supporting me from the opposite side. In fact, she was helping me keep my leg bent back behind my ass. \n\n- \"You're puttin' on weight.\" she grumbled. \n\n- \"You won't have to do this much longer.\" I said. \"Another year or two, and you won't be able to pass as a boy.\" \n\n- \"Sez you.\" \n\n- \"All clear?\" \n\n- \"So far.\" \n\nTwo blocks away, we turned into a narrow alley. A quick sprint, followed by a hop over a rickety fence, and a climb onto a low roof, and we were well away. \n\nEven if Syrava was watching me, she wouldn't be able to find me - not in the most crowded warrens of the Bottoms. Nor could she direct any attackers to our location. Unless they were Bottoms-born, they'd be lost in no time. \n\nWe circled the Hill to the west before we started to climb. Halfway up, I nipped into another alley. \n\n- \"Alright, Denya - this is where we split up.\" \n\n- \"I could walk you home.\" \n\n- \"Thanks anyway. Off you go.\" I said. \"And don't try to follow me.\" \n\nShe waved a hand, one finger suspiciously extended. \n\nI went on alone, changing direction several times. No one was shadowing me - except Denya. It was a game with her. She would try her best to stay on my trail without being detected. This had become our routine. \n\nSometimes, I found a hiding place, and waited for her to come close, searching for me. Other times I ignored her, and let her think she'd won. The next time we met, I'd let her know where I'd seen her, and which technique she'd been using. Denya was fond of disguises, but she wasn't above using proxies to follow me, hoping that I wouldn't recognize them. \n\nTrouble is, it's difficult to follow someone without looking at them, and her little friends always gave themselves away. \n\nBut this wasn't a time for games. Not with Syrava possibly lurking. So I did my best to lose Denya. If I could ditch her, then it was highly unlikely that anyone else would be able to keep up. \n\nAs I got closer to home, I began checking on locations where attackers might be hiding. I was very thorough, and very careful. I came through the park, and jogged the last few yards to our front door. \n\nWith any luck, Boutan would have saved me a bit of supper. With a bit more luck, Aressine might be in a more affectionate mood tonight. I might have been grinning when I turned into the sitting room. \n\nThen I froze. Involuntarily. I couldn't move - just like the night Taliesine had been killed. It was that same damned spell. I couldn't move, couldn't speak ... but I could still see, and hear. \n\n- \"Well, well; look who's home.\" said Samadar. \n\nIt was my worst nightmare, in the flesh. \n\nAressine and Kima were sitting on two of our dining room chairs, which had been placed back to back. There was a rope around them, tying them together. But their wrists and ankles were bound with slave shackles. Both women had been gagged. \n\nAressine was facing me; Kima was looking towards the front of the house. I couldn't read Aressine's expression. She looked calm. Kima, on the other hand, was trying to chew through her gag. \n\nBoutan, our cook, and Naomi, her daughter, had their hands tied behind their backs, and had been forced to sit on the floor, against the wall. They too were gagged, and both appeared to be terrified. I could hardly blame them. \n\nSamadar had a dagger in his hand. Armon, Cremyne's handsome brother, was next to him, grinning - or leering. There were two other men, standing behind the chairs, guarding the shackled women. They looked like sailors, or pirate thugs, to be more precise. \n\nSyrava was there. She seemed to be enjoying herself. Behind her, looking slightly bored, was Cremyne. \n\nI couldn't move. I couldn't say a word. All I could do was imagine the bitter taste of defeat. We were utterly powerless, in the hands of our worst enemies. \n\nSamadar strutted over to me, and removed my pistols from their holsters. He made a great show of passing them to Armon, who tucked them into his belt. \n\nSamadar then took my rapier, and my dagger, both of which he threw into the corner of the room. He unfastened my cloak, and removed it. He even took my hat off, and crumpled it in his hands, before discarding it. \n\nHe didn't know about the blade in my boot, though - for all the good that was going to do me. \n\n- \"I am going to modify my spell, Kelsen.\" said Syrava. \"It will allow you to move your head, and to speak. If you try to scream for help, Samadar will kill your servants. I trust that you understand.\" \n\nI couldn't move at all, even to blink, or nod. But my heart rose, just a bit: Syrava didn't know that I could cast spells. Oh, she knew that I could heal, but it obviously hadn't occurred to her that I could do anything else. \n\nOne more advantage for me, however small. I had a knife in my boot, and three little spells. I couldn't move my body, and there were six armed enemies in the room - including a wizard. \n\nI felt a slight wave of air on my face. I couldn't help it; I blinked. \n\n- \"He's ready.\" said Syrava. \n\nCremyne stepped forward. \n\n- \"You've been a thorn in my side, Vannerbehn.\" she said. \"You've sabotaged some very important projects of mine. By all rights, I should just kill you now. You and everyone who helped you.\" \n\n- \"Let the servants go.\" I said. \"They haven't done anything.\" \n\nHer expression didn't change. \"Samadar, if he speaks again without my express invitation, kill the older one.\" \n\nCremyne looked me in the eye, to make certain that I'd got the message. She waited, arms folded under her fabulous bosom, until I nodded slowly. \n\n- \"I decided, though,\" she continued, as if she hadn't just threatened to have someone killed, \"that you were in a position to compensate me for the irritation and inconvenience you've caused.\" \n\nShe paused, for dramatic effect, I suppose. That told me something I hadn't known, but probably could've guessed: Cremyne wasn't just a conniving, manipulative, murdering bitch. She was also an egomaniac, who thrived on occupying the centre stage. A captive audience, and the chance to strut and pontificate was just ideal for her. \n\n\"You're going to repair some of the damage you've done.\" she said. \"And do you know how you're going to do that?\" \n\n\"You're going to sign the Narimac over to me.\" \n\nI was tempted to laugh, but I didn't know how literally Samadar would interpret her order. I settled for blinking. \n\n\"Full ownership.\" said Cremyne. She glanced at Syrava. \"Just imagine what we can do with that place.\" \n\n- \"And with the Janni.\" said Armon. From the look on his face, I could hazard a guess at what kind of orders he'd want to give Ludianne. \n\n- \"Yes, with a Janni, too.\" said his sister. \n\n\"You transfer ownership of the Narimac - and the Janni - to me, Kelsen ... and I'll let you and your little friends go free. I'll even let you keep whatever cash you have in the house.\" \n\nLies. All lies. Cremyne wasn't going to let any of us live. Even Boutan and her daughter were going to die. Kima, Aressine and I were doomed. Cremyne was even lying about the money; obviously, they'd quickly searched the house, and hadn't found anything. Our little cache of cash was still hidden. Small consolation, that. \n\nJerian's ex-wife was glaring at me. I'd obviously missed my cue. \n\n- \"You can speak now.\" she said, angrily. \n\n- \"There are several problems with your plan.\" I said. It was chock full of holes, truth be told, but she didn't know it - either that, or that she was deluding herself. \n\nInavar and Ledomir - not to mention Jerian - would never, ever let Cremyne get control of the revenues of the Narimac. With her ambitions, and complete lack of scruples, that much money would make her far too dangerous. She would want revenge against them. \n\nNo, the Pirate Lords would have her assassinated at the first opportunity. \n\nShe also didn't know about my arrangement with Ludianne. Or that I would never sign over my share, no matter what she promised. She was going to kill me, this very night. But I would leave Ludianne in full control of the Narimac and its revenues. With a little luck, and some time (which she had in abundance) - she'd be able to find another wizard to help her return to her own plane. I wasn't about to allow Cremyne to fuck that up. \n\nOr ... what if I did sign? Would Ludianne take revenge for me, if I found some way to secretly let her know who was responsible for my death? Maybe I could work something into the contract, without Cremyne or Syrava noticing it ... ",
        "- \"What kind of problems?\" snapped Cremyne. She'd grown impatient as I tried to find a way around her demand. \n\n- \"I'll tell you.\" I said. \"Right after you let the cook and the maid go. They don't know anything.\" \n\nCremyne just shook her head, and smiled sadly at me. They knew far too much. Boutan and Naomi were doomed to die, just like Aressine and Kima - unless I could think of a way out of this. \n\n- \"They're in no danger.\" she said. \"I'm not going to kill them. They'll work for me, at the Narimac - once you've signed it over.\" \n\nShe wouldn't kill them; that much was true. She'd have her henchmen do it. \n\n\"But I don't have all night, Kelsen. And you're trying to bargain. This NOT a negotiation. You will sign over the Narimac - or I'll make you regret the delay.\" \n\nShe stepped close, and lowered her voice so that only I could hear her. \n\n\"There's an easy way to do this, and a hard way. You want to be a smartass? You want to be a tough guy? My brother thinks that your girlfriend is a hot piece of ass. What if I let him and Samadar fuck her - right in front of you? And those two lugs, too. Why not?\" \n\n\"They won't be gentle, Kelsen. Samadar hates your guts. He'd love to do it.\" \n\nI wasn't completely appalled. I had already imagined something very much like that. But there went my Plan B. If I couldn't bamboozle Cremyne, and set her up for Ludianne's revenge, I'd hoped that I could make her angry. If she lost her temper, maybe she'd order us killed immediately. \n\nNo such luck. Cremyne was a crazy bitch - but she'd make all of us suffer if I pushed her too far. \n\n- \"If ... if I tell you what the problems are ... you'll give them a quick death?\" I whispered. \n\n- \"Absolutely.\" said Cremyne. \n\nAnother lie. She was already angry. Boutan and Naomi, Kima ... and Aressine were going to endure torment before they died - all because of Cremyne. \n\nI'd been wrong again. All these weeks, I'd been wondering why Syrava hated me so much, and how she could turn, so viciously, on her former friends. But the fey wizard was only part of the picture. Cremyne was just as bad - or even worse. \n\nPlan C, then. Three pathetic little spells, and a slim blade in my boot. \n\nThat's when I saw the shadow on the stairs. \n\nAressine might have noticed it. Boutan and Naomi probably couldn't see, from where they were. Nor could Samadar, who was still standing next to them. Kima, of course, was facing the wrong way. \n\nBut all of Cremyne's accomplices, including her brother and Syrava, were entirely concentrated on me - or on her, and our whispered exchange. It wasn't much, and they couldn't hear us, but it was the only action going on - and thus the focus of their attention. \n\nI had no idea who was on the stairs. But it wasn't a friend of theirs. That much I knew for sure. Play for time, I told myself. There's nothing to lose. It could be Pamna, or Fhaernala. And if it wasn't ... then we were dead anyway. \n\n- \"Syrava.\" I said. Not in a whisper, this time. \n\n- \"What?\" \n\n- \"I'll tell Syrava.\" \n\n- \"Why?\" Cremyne's eyes narrowed. She was suddenly suspicious. \n\n- \"Tell me what?\" said Syrava. She'd heard me say her name. Curiosity is a powerful motivator. Wizards and evil bitches are not immune to it. \n\n- \"Wait -\" said Cremyne, holding up one hand. \n\nToo late. Syrava had stepped up, just within my range. \n\n- \"DAZE, DAMN YOU!\" I screamed. But my pronunciation was perfect. \n\nIt worked - but it didn't. Syrava was my target. She was the most dangerous of my enemies. She blinked, and stepped back, involuntarily. Stunned, but not dazed. It would take only a moment for her to clear her head. \n\nBut it's amazing how much can happen in a moment. \n\nThe shadow on the stairs descended a few steps. I saw slipper-clad feet, and the bottom of a robe that looked very much like one of Taliesine's. In fact, it looked a lot like the one Kima had dressed her in. \n\n- \"SPERA FERRO!\" shouted the figure on the stairs. \n\nSeveral things happened all at once. First, a shock wave struck the room. Everyone on their feet staggered, as if hammered by a physical blow. Except me, of course. I couldn't move, or be moved. \n\nBut I felt it as a sudden gust of gale-force wind on my face. My eyes watered, and I choked as the air I'd been exhaling was driven back into my nose and mouth. \n\nThe secondary effect of that spell was miraculous: with a snapping sound, all of the shackles burst open. The ropes used to tie people up were cleanly sliced in half, and dropped uselessly to the floor. With a single stroke, Kima and Aressine were unbound. \n\nThey'd been hit by the shockwave, too. But they were seated, tied to their chairs when it hit. That had to have lessened the impact. \n\nThe final effect of the Spera Ferro - whatever that meant - made me even happier. It dispelled all of the magic in the room. My little daze of Syrava was brushed away, like a fruit fly in a stiff breeze. \n\nBut so was Syrava's hold spell. My hands fell, propelled by their own weight. I could feel the return of freedom of motion. That hold had protected me from the impact of the shock wave, but now it was gone. \n\nI was the first person in the room to recover, and to move. \n\nTwo quick steps, and I launched myself at Cremyne. With a stiff arm, I slammed a flat hand into her chest, driving her back. She stumbled, and caught her foot on the edge of the carpet. She fell heavily. \n\nBut I'd hit her first only because she was in the way; my real target was Syrava. \n\nI stepped into her, and gave her a Bottoms Kiss: a head butt to the face. My forehead smashed into the bridge of her nose with a satisfying crunch. \n\nShe staggered back, and tripped over Cremyne. \n\nThere was no time to enjoy my handiwork. I dropped into a crouch, and fished the blade out of my boot. Just in time, too, because Armon had recovered from the effects of the shockwave. \n\nHe made a couple of poor decisions. He reached for his sword, first, but then changed his mind. With a feral grin, he pulled one of my pistols from my belt. How appropriate - how ironic, that I should be killed with the very weapon which had saved my life on so many occasions. \n\nApparently, though, Armon was not very experienced with firearms. He made a rookie mistake. As he raised the weapon, he didn't realize quickly enough that it was considerably heavier than he'd anticipated. He pulled the trigger - too soon. The pistol went off ... and the bullet thudded into the floor, an inch from my foot. \n\nI was already moving - towards him. He seemed shocked that I wasn't dead. I grasped the front of his expensive vest, and then jammed my boot blade under his chin. \n\nIt did more damage than I'd expected. The tip of the blade pierced the top of his throat, and penetrated into his mouth. But my weapon of last resort lacked a guard, or quillions, like a dagger. As I drove it into Armon's head, my hand slipped up the naked blade, and I damn near sheared my own fingers off. \n\nThe pain was sharp, but my blood was up, and there was no time to waste on examining my wound. \n\nInstead, I let go of Armon's vest with my left hand, and plucked my second pistol from his belt. I was quite proud of myself, for how quickly, and how smoothly I accomplished that little feat. It wasn't a simple thing, with blood from his throat and mouth - and my fingers - spraying everywhere. \n\nI whirled around just in time. \n\nSamadar was charging across the room, dagger in hand. He was a lot closer than I hoped for. I raised the pistol, leveled it, and pulled the trigger. \n\nThere was a snap - and a spurt of smoke. Misfire. \n\nIt happens. Even with a carefully-loaded pistol, it can occur every twenty shots, or even to one in ten. A worn flint, poor-quality gunpowder ... It happens. And now it had happened to me, at the worst possible time. \n\nInstinctively, I raised my arm - with the pistol in my hand - as Samadar crashed into me. Enraged, he tried to plunge his dagger into my heart. I spoiled his aim just enough, so that his blade plunged into my shoulder, snapping my collarbone. \n\nHis body slammed into mine, and he drove me to the floor. \n\nNow, it may seem odd, but even in the heat of combat, I was still aware, to a degree, of what was going on elsewhere. Kima had leapt to her feet, and kicked her still-bemused guard in the crotch. Then she charged into the centre of the room. \n\nAressine was out of her chair, and moving like a dancer. She used her hands, but mostly her knees and elbows. She kept the first guard occupied with a flurry of blows, so that he couldn't draw a weapon. Finally, she put him down with a crushing elbow to the windpipe, followed by a devastating, leaping knee to the chin. \n\nThen she turned to deal with the second guard, who was still bent over, clutching his crushed testicles. Kima, meanwhile, had gone after bigger prey. \n\nCremyne and Syrava were getting up off the floor. A swift kick knocked Cremyne down again, and then Kima seized hold of Syrava. \n\nThe redheaded fighter got an arm around the fey wizard's throat, from behind, and began to strangle her. Syrava choked, and her eyes bulged. She couldn't get a word out, to even begin casting a spell. \n\nSamadar scrambled into a dominant position atop me, sitting on my stomach. I tried to fend him off, but when I pushed with my injured hand, the pain was so sharp - so intense - that I nearly passed out. My vision blurred, and I saw black for a second. \n\nHis face was nearly purple with rage, as he raised his dagger. I lifted my arms in a hopeless effort to block or deflect the blow that was coming. \n\nThat's when Denya appeared behind him, and drove her dagger into his back. \n\nShe was only a little girl, but I'd taught her well. She didn't stand there and preen herself, or admire the sight. Instead, she pulled her dagger back, and stabbed him again. And again. \n\nSamadar froze, either from the pain, or from shock. I was able to seize hold of his wrist, and pull on his arm. When I shifted my hips, and bucked, he fell to the side. \n\nDenya managed not to stop me as I reversed our positions, with me above him. I pinned his arms, and Denya slid to the side. She plunged her dagger into his throat. \n\nAt that very moment, from the corner of my eye I saw Kima, choking Syrava from behind. The fighter placed her left hand against the wizard's head, and with a sudden burst of effort, snapped her neck. \n\nThe second pirate thug was down, thanks to Aressine. \n\nArmon lay in a rapidly-spreading pool of blood, his eyes glazed over. All of our opponents were down, except for one. \n\nCremyne rose slowly to her feet. \n\nThen she shrieked, as her body was encased in a nimbus of blue fire. Her lips peeled back over her teeth, and the skin of her face seemed to stretch. \n\nHer muscles gave up. Cremyne's lifeless body crumpled to the floor. \n\n- \"Always wanted to try that spell.\" said Taliesine. \n\nI could only stare at her, open-mouthed. Our dead wizard looked very much alive. \n\n*****"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "fantasy",
        "urban environment",
        "rogue",
        "magic",
        "intrigue"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/vannerbehns-luck-pt-12"
}