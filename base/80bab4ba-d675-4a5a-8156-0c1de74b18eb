{
    "title": "The Teacher's Pet Ch. 05",
    "pages": [
        "Author\u2019s Note: This builds upon the events of the previous chapters. I would recommend reading them first, before diving into this chapter.\n\n \n\n*****\n\nSaturday, January 24\n\nIt was all too familiar to me. I was sitting in my kitchen on a Saturday morning eating blueberry waffles. I was anticipating a shopping trip with Polly, in which I would be picking her up at noon and we would be going to the outlets. As I looked myself over, I giggled at the notion I was even wearing the same apparel as on our previous outing -- right down to the three-inch black pumps.\n\nThere were, of course, a couple of key differences. At this time last week, I didn\u2019t know she had a foot fetish. Nor did I realize how much I would enjoy it. Although there had been some trepidation about our prior excursion, my anxiety level was almost off the scale regarding what could happen today.\n\nI wasn\u2019t doing myself any favors by constantly dwelling on her kink. Aside from my masturbation sessions last evening, I had an erotic dream overnight that caused me to wake up covered with sweat in a puddle of my vaginal fluids. It was the first time I had ever orgasmed in my sleep, and it was all due to the visions of a cute little foot lover dancing in my head.\n\nAfter a deep exhale, I noticed that my plate was empty. I had become so wrapped up in my thoughts, I didn\u2019t even remember finishing my breakfast. And I still wasn\u2019t any closer to solving the mystery of how to be a friend to my student while having her be my on-demand foot massager -- without our relationship turning into anything sexual. It seemed like it would be easier for me to invent time travel.\n\nWith that in mind, I checked the clock. There were still two hours until I needed to leave my house. I smiled at the realization I had ample opportunity to resolve my dilemma. I cleaned up the kitchen in a flash and sat in my living room with every intention of crafting the perfect plan.\n\nThe next thing I knew, it was ten minutes before noon. While using the bathroom, I shook my head in disgust. I had spent every moment imagining Polly rubbing my feet in the car, or sniffing my toes in a dressing room, or kissing my soles in a checkout line. It went beyond an addiction. This was an all-consuming obsession!\n\nWhile driving to her home, I did everything I could to regain my composure. I kept telling myself it was just two friends spending a nice day together. There was no need to complicate things. For a moment, I had pushed the deviant thoughts out of my head. A wave of calm washed over me, and I grinned at the prospect of seeing this lovely young woman.\n\nHowever, I soon made the turn onto her street and caught sight of her house. My heart began to race and my breathing became labored as I approached her driveway. By the time I shifted into park, I was on the verge of feinting. I needed to quickly pull myself together. I didn\u2019t want Polly -- and worse, her parents -- to see me like this.\n\nI closed my eyes and gripped the steering wheel. My mind was tormenting me with a number of terrible scenarios. What if her mom and dad didn\u2019t like me? Perhaps they would think the way I dressed was too provocative, and the wardrobe I encouraged their daughter to buy was offensive to them. What if I blurted out something about lesbianism? Or foot fetishism? Or what happened last weekend in their own living room? Damn, it would be a nightmare!\n\n\u201cCome on, Amber. Stop worrying. It\u2019s going to be fine.\u201d\n\nMy eyes shot open as I realized I said those words of encouragement out loud. After scanning my surroundings, I sighed with relief. There was nobody close by. At least I had avoided this particular embarrassment.\n\nFiguring someone in the house had seen me by now, I knew I couldn\u2019t stall any longer. I checked my hair in the mirror on the visor and got out of my car. My steps were shaky while walking onto the front porch, as my nerves were still rather frayed. When I stopped near the front door, I took another deep breath and reached for the bell.\n\nWhen I was about to touch it, the door swung open to reveal the smiling face of Polly. I was startled, and took a step back.\n\n\u201cHi, Mi... I mean, Amber.\u201d\n\n\u201cOh, um, hi Polly.\u201d\n\n\u201cSorry, I didn\u2019t mean to scare you.\u201d\n\n\u201cNo, uh, it\u2019s fine.\u201d\n\nShe giggled and pushed the door further open. \u201cPlease, come in.\u201d\n\nI entered the house and followed her into the living room. I saw a man and a woman sitting on the couch, who I presumed to be the girl\u2019s parents. As they beckoned me to come closer, I gulped at the realization I was back at the scene of the crime. In fact, her mother was in the exact spot where I had been seated when Polly rubbed and sniffed my feet. An image flashed through my mind of my student kneeling on the floor, doing this to her mom\u2019s feet. It was both arousing and disturbing.\n\nShaking my head to dispel the thought, I strode toward the sofa. They stood up and I extended my hand to greet them.\n\n\u201cHello, I\u2019m Polly\u2019s new English teacher, Amber Nolan.\u201d\n\nThe woman shook my hand with a smile. \u201cI\u2019m her mother, Stephanie Wilkerson. But everyone calls me Steph.\u201d\n\n\u201cIt\u2019s nice to meet you, Steph.\u201d\n\n\u201cLikewise.\u201d\n\n\u201cAnd I\u2019m her father, Martin Wilkerson.\u201d He extended his hand and I shook it.\n\n\u201cNice to meet you... Marty?\u201d\n\n\u201cActually, Martin, if you don\u2019t mind.\u201d\n\n\u201cSure, Martin it is.\u201d\n\nWhile he was pleasant enough about it, I squirmed a bit from my stupid assumption. I was already nervous I would make a bad impression. This wasn\u2019t making me feel any more relaxed.\n\nSteph shot her husband a look and returned her gaze to me. \u201cDon\u2019t mind him. He\u2019s a bit of a stick in the mud.\u201d\n\nHe sighed. \u201cWhatever you say, dear. Anyway, we\u2019ve heard a lot about you, Amber.\u201d\n\nMy anxiety began rising as I wondered what their daughter had told them. Surely it couldn\u2019t have been anything bad. Then again, maybe it was something which seemed innocuous which they took the wrong way. I had to find out before I drove myself insane!\n\n\u201cOh, um, have you now?\u201d I hoped they hadn\u2019t detected the apprehension in my voice.\n\n\u201cYes,\u201d Steph said, \u201cwe know you\u2019ve been trying to help our daughter with a situation at school.\u201d\n\nI gave her a questioning look. What situation was she referring to? I hoped it wasn\u2019t\u2014\n\n\u201cShe told us there were a few kids that were teasing her. And you gave her some advice.\u201d\n\nPolly cleared her throat. \u201cYeah, she said if I did something different with my hair and dressed a little nicer, those bullies would back off.\u201d She beamed at me. \u201cAnd they did!\u201d\n\nI smiled nervously, as I was still somewhat uneasy. Although she had good intentions, I wasn\u2019t sure whether her parents approved of the changes in their daughter\u2019s appearance, or if they were going to chastise me.\n\nSteph placed a hand on her daughter\u2019s shoulder. \u201cJust look at you.\u201d They exchanged warm expressions as she ran a hand through Polly\u2019s hair. \u201cYour hair is so lovely, and these clothes...\u201d She stepped back and gazed at her daughter from head to toe. \u201c...they make you look beautiful.\u201d\n\nIt filled my heart with joy to witness this, and not merely because I knew her parents\u2019 perception of me was good. I was happy to see Polly\u2019s mom piling on the compliments. She reminded me of my own mother, who had always built me up instead of tearing me down. Not everyone was lucky enough to have this, and I recognized how truly special it was.\n\nTaking hold of my hand, Steph looked me in the eyes. \u201cThank you so much, Amber. Anyone who cares enough to give their time and energy to helping a student this way is someone I\u2019m grateful to have teaching my daughter.\u201d\n\n\u201cYou\u2019re welcome,\u201d I said as I squeezed her hand. \u201cPolly\u2019s a great girl, and she doesn\u2019t deserve to be picked on. I just wanted to help.\u201d\n\n\u201cWell, I really appreciate what you\u2019re doing. She looks amazing!\u201d\n\n\u201cEh, she looks all right, I suppose.\u201d Martin folded his arms and tilted his head. \u201cDon\u2019t you think her skirt is too short, and those shoes are too high?\u201d\n\nSteph scowled at him. \u201cFor heaven\u2019s sake, Martin! Why are being so critical of her?\u201d\n\n\u201cI\u2019m not!\u201d He shook his head. \u201cCome on, you have to admit that outfit is a bit too... adult for our little girl.\u201d\n\n\u201cShe\u2019s not a little girl anymore. She\u2019s eighteen, and I happen to think what she\u2019s wearing is very stylish.\u201d\n\nHe glanced at his daughter and then at me. \u201cIt looks fine on Amber. But...\u201d His eyes narrowed. \u201c...huh, now why didn\u2019t I see it before? She\u2019s dressed exactly like her teacher.\u201d He glared at me. \u201cDid you really think this was appropriate for our daughter to wear?\u201d\n\nMy eyes went wide and words escaped me. I needed a lifeline, and fast!\n\n\u201cMartin!\u201d Steph smacked her husband\u2019s arm. \u201cStop being so unreasonable!\u201d Her expression changed from anger to one of sympathy as she turned toward me. \u201cI\u2019m so sorry. Apparently, my husband is stuck in 1950 or something.\u201d She swatted him again. \u201cApologize to her for being rude.\u201d\n\nHe let out a sigh. \u201cYes, dear.\u201d He lowered his head. \u201cI\u2019m sorry for being rude to you, Amber.\u201d\n\nI gave a slight smile when I spied the haughty smirk on Steph\u2019s face. \u201cIt\u2019s okay. But I probably should have checked with both of you before taking Polly out to get her hair cut and change her wardrobe.\u201d\n\n\u201cYes, you should have.\u201d Martin\u2019s arrogant smile morphed into a look of resignation as his wife shook her head at him. \u201cUm, but she looks nice.\u201d\n\n\u201cAnyway,\u201d Steph said, \u201cwe don\u2019t want to hold you up. We know you and Polly have places to go.\u201d\n\nShe began walking toward the foyer, and the rest of us followed. When she got near the front door, she stopped and spun around to face her daughter.\n\n\u201cHave fun today, Polly.\u201d She gazed up at me. \u201cYou too, Amber. Just bring her back in one piece, and without any tattoos or nose rings.\u201d\n\nHer serious stare unsettled me, and I was about to respond when she burst out laughing. Polly joined in, as did I -- although my mirth was tempered with relief. For a moment, I thought Steph actually believed I would do those things.\n\nThe only one who remained stoic was Martin. \u201cAnd another thing,\u201d he said as he raised an eyebrow in my direction, \u201cdon\u2019t encourage her to buy clothes that are more revealing than what she\u2019s wearing now.\u201d\n\nSteph placed her hands on her hips and seemed ready to scold her husband again.\n\nI put a hand on her shoulder. \u201cIt\u2019s okay.\u201d I took a deep breath and looked at her husband. \u201cDon\u2019t worry, Martin. I\u2019ll make sure she doesn\u2019t buy anything like that, and I won\u2019t scar her permanently either.\u201d\n\nHe nodded. \u201cAll right then, you two have a good time.\u201d He gave his daughter a hug. \u201cJust make sure you\u2019re home by nine.\u201d\n\nWhile Polly hugged her mom, Martin extended a hand toward me. \u201cIt was nice to meet you, Amber. Sorry for giving you a hard time. I guess I\u2019m a little overprotective of my daughter.\u201d\n\nI shook his hand. \u201cIt was nice to meet you too, Martin. And I understand. I\u2019m an only child, so my dad was like that with me.\u201d\n\nA genuine smile appeared on his face. \u201cWell, I hope I didn\u2019t offend you.\u201d\n\n\u201cNah, I don\u2019t get offended too easily.\u201d\n\nI felt a tap on my arm and saw Steph reach out to embrace me. As we hugged, I had to stifle a giggle. She was a bit shorter than Polly and wore flats. With me in my three-inch heels, I felt like I was hugging a child instead of a woman who was twenty years older than me.\n\nAfter a few moments, we stepped back from each other and she gave me a warm smile. \u201cIt was wonderful to meet you, Amber. Maybe next time you\u2019re here we\u2019ll talk a little longer.\u201d\n\n\u201cIt was great meeting you as well, Steph. And yes, I\u2019d love to have a nice chat with both of you.\u201d\n\nPolly opened the door. \u201cBye, mom and dad. I\u2019ll see you tonight.\u201d\n\n\u201cBye, pumpkin,\u201d Martin said, \u201cand behave yourself.\u201d\n\n\u201cOkay dad!\u201d she said as she rolled her eyes.\n\n\u201cBye, sweetie.\u201d Steph looked toward the driveway. \u201cWow Amber, is that your red convertible?\u201d\n\n\u201cYes, it is. I got it when I graduated from college.\u201d\n\n\u201cIt\u2019s very nice.\u201d\n\n\u201cThanks.\u201d I felt Polly tugging me out the door. \u201cTake care!\u201d I waved to her parents while following the girl onto the front porch.\n\nAs the door began to close behind us, I overheard Martin say something about how dangerous it was to ride in small cars. I chuckled, given how fast I liked to go on the causeway. If he only knew, he would never let me drive his daughter anywhere.\n\nIt wasn\u2019t long before we were indeed speeding over the water. Part of the reason for this was because I always enjoyed the feeling of the wind in my hair, and I knew Polly did as well. However, my other motivation involved postponing the topic which was foremost in my mind. Since we couldn\u2019t hear anything except the strong breeze, we weren\u2019t able to have a conversation.\n\nEvery so often, I glanced over at the lovely young woman in the passenger seat. Her mom was right, she did look beautiful. Her pink blouse and stockings were perfectly offset by her black skirt and black two-inch heels. She was grinning with her head tilted back a bit and her eyes closed. It was similar to the expression she wore when she smelled my foot, although this time there was no hint of lust. There was simply contentment.\n\nAs I continued toward the outlets, I alternated between imagining a repeat of the scene and telling myself I should honor my previous agreement not to indulge in Polly\u2019s fetish. By the time we arrived on the mainland, I had only served to confuse the matter further. I sighed while parking the car, hoping I wouldn\u2019t end up allowing my sexual urges to ruin the friendship I had with this girl.\n\nWhen we began making our way across the parking lot, I decided to try speaking with her about normal things. I hoped this would take my focus away from feet for a while.\n\n\u201cSo, Polly, your parents seemed nice.\u201d\n\n\u201cYeah, my mom is super-cool.\u201d She sighed. \u201cSorry about my dad. He\u2019s kind of stuck in the past.\u201d\n\nI chuckled. \u201cYou don\u2019t have to apologize. He just wants what\u2019s best for you.\u201d\n\n\u201cBut he still thinks I\u2019m eight.\u201d\n\n\u201cI know what you mean. Even to this day, my dad treats me like a kid sometimes. It must be hard for fathers to think of their baby girls as adults.\u201d\n\n\u201cI guess.\u201d\n\n\u201cAnyway, I thought they were great. And I\u2019m really proud of you.\u201d\n\nShe cocked her head. \u201cUm, what for?\u201d\n\n\u201cFor telling them the truth about what we did last Saturday, and today. As I recall, you were going to give them some story about me helping you with a school project.\u201d\n\n\u201cOh, that. Well, I knew they\u2019d have all kinds of questions when they saw my new clothes. So I figured I\u2019d just tell them what really happened. Except for, well...\u201d\n\n\u201cRight.\u201d I nodded and then took a deep breath. \u201cBut now we can have a fun day of shopping without worrying about hiding it from your parents.\u201d\n\n\u201cExactly!\u201d There was an enormous grin on her face as she skipped toward the entrance to the clothing store.\n\nWhile I approached the door, I shook my head at the thought of what we were actually hiding from her parents. This was bad enough. If the twisted fantasies in my head became reality, it would be a whole lot more.\n\nI managed to set this concern aside and immerse myself in one of my favorite activities. I wasn\u2019t more than two steps inside when I saw Polly holding up a shirt she was interested in. I gave her a thumbs-up and the two of us spent the next three hours either looking at or trying on almost every article of clothing in our respective sizes. By the time we emerged from the shop, we were both holding a half-dozen bags full of items.\n\nAfter we put everything in the trunk of my car, we headed to the shoe store. Even though I didn\u2019t need any more since I already owned over forty pairs of shoes, it was always fun to look. Also, Polly wanted to add to her collection and she still had some money to burn.\n\nAn hour and a half later, she was down to fifteen dollars along with four new pairs of pumps. She had tried on numerous styles and colors, finally settling on a couple pairs each with three-inch and two-inch heels. I did do a bit of browsing in the store, but for the most part I sat and watched the young woman slip her dainty stocking feet in and out of many shoes.\n\nI was thankful I had kept mine on. If I were to have given her that kind of show, it would have ignited her passions for my feet, and made me want her to act on those desires.\n\nSince we were both hungry and neither of us had much cash left, we agreed to eat dinner in the food court. Upon arriving, we found an empty booth near a partition and hurried over to claim it. I stayed with Polly\u2019s most recent purchases while she got a platter from the Asian Eatery. Once she returned, I went to buy a wrap and salad combo from the Gourmet Deli.\n\nWhen I was seated again, I took the first bite of my food and smiled at the girl sitting across from me. She smiled back and picked up a forkful of her chicken fried rice.\n\n\u201cI really like shopping with you, Polly.\u201d\n\nShe swallowed before replying. \u201cYeah, it\u2019s awesome shopping with you at the outlets. I got so much great stuff!\u201d\n\n\u201cI know!\u201d I giggled. \u201cYou probably doubled your wardrobe in the past two weeks.\u201d\n\n\u201cPretty much!\u201d She put her fork down and placed her hand on top of mine. \u201cBut the best part is having you as my friend.\u201d She squeezed my hand. \u201cYou\u2019re, like, one of the coolest people I know.\u201d\n\nI gripped her hand. \u201cThanks, but I\u2019m sure I\u2019m not as cool as Tanya.\u201d\n\n\u201cWell, almost. One more Saturday like this and you\u2019ll have her beat!\u201d\n\nWe both laughed and I gazed into her eyes. \u201cSeriously though, I feel the same way. It\u2019s wonderful to have a person like you as a friend.\u201d\n\nThis nice moment was followed by us talking about our afternoon and all the stuff we found, whether we bought it or left it for a future purchase. We also kept devouring our meals. Maybe because her platter was larger, or perhaps because I ate faster than her, I finished mine first. In fact, she still had half of hers to go when my plate was clean.\n\n\u201cThat was yummy,\u201d I said and wiped my mouth.\n\n\u201cWow, I can\u2019t believe you\u2019re done already.\u201d She glanced down at her tray and gave a slight frown. \u201cI still have a lot to eat.\u201d\n\n\u201cDon\u2019t worry about it. We\u2019re not in any rush. You just enjoy your dinner.\u201d\n\nShe gave me a nod and stabbed a piece of her chicken.\n\nI relaxed back into the seat and glanced around the food court. After several minutes of people-watching, I realized I had unconsciously pulled a foot out of one of my pumps. It occurred to me the freed foot felt more comfortable than the one confined in the shoe. With Polly engrossed in her meal, I figured she wouldn\u2019t notice what was happening under the table. I shrugged and kicked off my other pump.\n\nThe feeling of fresh air on my feet was great. I moved them around and scrunched my toes. It then dawned on me what would be even better would be to prop them up. This would mean setting them on the seat next to Polly. There was enough extra room aside of her, no doubt. However, I would be practically inviting her to indulge in her fetish. I didn\u2019t want to do this, did I?\n\nIn a brief battle of conscience versus craving, my conscience didn\u2019t even make it through the first round. While she kept nibbling away, I lifted a stocking foot from the floor and placed it on the opposite seat -- directly between the young woman and the partition wall. Before she could react, I did the same with my other foot.\n\nThere was a smile on my face as I stretched my arms and flexed my feet. For an instant, I was simply enjoying the moment. That\u2019s when I saw her peek at my feet and then stare at me as if I was from outer space.\n\n\u201cW-what are you doing, Amber?\u201d\n\n\u201cOh, I needed to stretch out a little. I, um, hope you don\u2019t mind.\u201d\n\nShe began to blush. \u201cNo, I mean, it\u2019s, it\u2019s fine.\u201d\n\n\u201cAre you sure?\u201d I noticed her glancing at my feet again, and I wiggled my toes. \u201cI don\u2019t want to make you uncomfortable.\u201d\n\n\u201cY-yeah, I\u2019m sure.\u201d Her face was now beet red, and her eyes were the size of saucers.",
        "\u201cOkay, great. I\u2019ll just relax and let my feet air out while you finish your meal.\u201d\n\nShe gave me a nervous smile and resumed picking at her food. If I thought she was slow before, this was a whole new level of sluggishness. She was down to taking one bite per minute, at most. Much of the time she was alternating her stare between the smirk on my face, and my smelly stocking feet -- which I continued to bend and flex in order to attract her attention.\n\nA surge of wickedness had come over me that I was unable to fight. My naughty desires had silenced the part of my mind which would have normally prevented me from doing this type of thing. It should have been screaming at me to stop teasing the poor girl with something I told her she couldn\u2019t have. It should have been shouting at me not to renege on our earlier agreement.\n\nInstead, I was being loudly controlled by an overwhelming lust, which wanted nothing more than to torment the cute, embarrassed girl into pampering my feet. The more anxiety and confusion showing on her face, the more the devious side of my brain pushed me to ramp up the foot mischief.\n\nOnce she had swallowed the last morsel from her plate and put down her fork, I brushed my toes against her side. I noticed a slight shiver as she wiped her hands on a napkin.\n\nI folded my arms and smiled at her. \u201cNow that you\u2019re all done, how about giving me one of your soothing foot rubs? I\u2019ve been walking around in heels all day, and it would feel so amazing if you could do that for me.\u201d\n\nHer jaw dropped and her face went pale. It was clear my question shocked her, and she didn\u2019t know how to answer. After a few moments of silence, I tapped her thigh with my foot.\n\n\u201cWhat are you waiting for? I know how much you like my feet.\u201d I bent forward and spoke in a whisper. \u201cAnd they like you, too.\u201d I leaned back, raised my eyebrows, and nodded toward my feet.\n\nShe gasped, and her eyes went wider than ever. \u201cBut, but, y-you said you didn\u2019t want me to\u2014\u201d\n\n\u201cForget what I said, Polly. I want those soft little hands of yours on my feet... now.\u201d\n\n\u201cO-okay.\u201d\n\nI suppressed a giggle as I saw her gaze shift throughout the food court. \u201cDon\u2019t worry, nobody is watching. Just focus on my feet.\u201d\n\nWith an enormous sigh, she slowly started moving her hands toward my feet. After what felt like forever, she placed both of them on my right foot. I waited, but she seemed in no hurry to begin the massage.\n\n\u201cGo on. I want the expert treatment you gave me last Saturday.\u201d\n\nShe closed her eyes for a few seconds, took another deep breath, and began to knead my sole with her thumbs. The sensation was marvelous, and I purred with delight. The sounds I made attracted Polly\u2019s attention, and she peered into my eyes.\n\nMy stare must have disconcerted her because she gulped and tightly gripped my foot. She then resumed the massage but maintained eye contact with me. Before too long, the expression on her face changed so it matched what I was feeling inside.\n\nWe had both become caught up in our wanton desires. She was now rubbing my foot with incredible passion, oblivious to anything else around her. I was fully immersed in her fantastic ministrations, which were causing me to let out soft moans of pleasure.\n\nHer hands glided up and down my foot as she worked her magic on my heel, sole, and toes. Her gaze never left mine, even when I thrust my other foot into her hands. She started massaging my left foot, and my eyes narrowed with lust. Fuck, this was the most surreal experience I had ever been a part of. As amazing as she was, even Violet had never made me feel like this!\n\nThere was a growing wet spot in my panties and my pussy was throbbing. I wanted nothing more than to reach down and satiate myself. All it would have taken was one touch. I was oh so close. I tried pushing my thigh muscles together, but this only added to my arousal. I clenched my hands into fists and my breathing became labored. The combination of Polly\u2019s divine fingers and my inability to achieve climax had simultaneously transported me to heaven and hell.\n\nI could tell the girl pampering my foot was going through a similar predicament. She was taking short, ragged breaths and letting out occasional groans of frustration. The whole scene was maddeningly delicious, and I almost chuckled at the thought of what it looked like to anyone who might have been watching us.\n\nJust then, I heard the sound of laughter. It sounded close -- too close for comfort. I saw a look of fright on Polly\u2019s face and I immediately pulled my feet from her grasp. While scanning the area, I fumbled around but soon found my shoes and slipped them on. It didn\u2019t appear anyone had noticed what we were doing, as nobody was looking in our direction. However, my heart was beating out of my chest.\n\n\u201cDid, did anyone see us?\u201d She was trembling, and appeared to be on the verge of a panic attack.\n\nI took a deep breath to try and calm myself. \u201cI don\u2019t think so. But, um, I think we better go.\u201d\n\nShe gave me several quick nods and grabbed her bags. We were up from the booth and out of the food court in no time. When we arrived at my car a minute later, she didn\u2019t even want to put her bags in the trunk. She plopped down in the passenger seat and set her new purchases on the floor. Within moments, we were buckled in and headed toward the main road.\n\nTypically, whenever it was warm and wasn\u2019t raining, I would press the button to open up the convertible. However, I knew I needed to speak with the young woman sitting next to me about what had happened. I couldn\u2019t do this with the top down.\n\nThe problem was, I had no idea how to explain my actions. I glanced over at Polly, and she was looking straight ahead. I had the feeling she didn\u2019t know what to say either. Of course, it wasn\u2019t her responsibility to initiate this conversation. It was mine. I was the one who had placed my feet on the seat next to her. It was me who asked for a foot massage. Heck, I practically forced her to do it. I was also the first to make pleasurable noises. Everything that went on had been my fault.\n\nFor a short while, neither of us said a word. I thought about what compelled me to behave like I did. Why had I enticed this girl with my feet, and commanded her to pamper them -- without having a discussion beforehand? Why had I allowed my lewd fantasies to overcome all reason and logic? Why wasn\u2019t I able to control myself? What the hell was wrong with me?\n\nThese questions all had the same answer. I simply couldn\u2019t resist trying to seduce the lovely young woman who had accompanied me all afternoon. She had been featured in every one of my lurid dreams and visions in recent days. Having her right in front of me during dinner, looking as beautiful as ever, destroyed my willpower. I needed to feel her hands on my feet at that very moment.\n\nAs I merged onto the causeway, I came to the conclusion I had to be straightforward with her. She was no doubt confused by my earlier advances, and I wanted to explain myself. Also, I had to put an end to the awkwardness between us.\n\nI took a deep breath and cleared my throat. \u201cUm, Polly?\u201d I waited a few seconds, but she didn\u2019t reply. \u201cWe need to talk about what happened back at the food court.\u201d\n\nOut of the corner of my eye, I saw her shoot me a look of contempt. However, she remained silent.\n\n\u201cLook, I know you\u2019re upset with me. I, I acted like... well, not like myself. I shouldn\u2019t have put you on the spot the way I did.\u201d I turned my head toward her briefly. \u201cI\u2019m really sorry.\u201d\n\nThere was an extended pause. At first, I wasn\u2019t sure how she would respond. However, the longer it went on, the more my mind was convinced she would lash out at me. After what I had put her through, I was preparing for her wrath.\n\nEventually, she let out a heavy sigh. \u201cBut why? Why did you do that to me? I mean, you kept telling me that you could be fired and, and that I would get in big trouble if we did stuff like that. I just, I don\u2019t understand.\u201d\n\n\u201cI, I don\u2019t know. It was like a strange part of my brain took over and turned me into some kind of foot temptress. And I couldn\u2019t stop it.\u201d\n\nI caught sight of her puzzled expression.\n\n\u201cWhat do you mean? I still don\u2019t get it.\u201d\n\nIt was obvious I needed to tell her everything. Otherwise, I would have sounded like a complete idiot. Of course, she might have felt this way about me regardless. However, I wanted her to know where all of this was coming from.\n\n\u201cSo, obviously you remember what we discussed the other day.\u201d\n\n\u201cYeah.\u201d\n\n\u201cAnd that the idea of you rubbing and sniffing my feet turns me on.\u201d\n\n\u201cUh huh.\u201d\n\n\u201cWell, since we had that talk, it\u2019s pretty much all I could think about.\u201d\n\n\u201cIt, it is?\u201d\n\n\u201cYes. I, I keep picturing you at my feet, like, constantly. You even show up in my dreams.\u201d\n\n\u201cReally?\u201d\n\n\u201cReally.\u201d I took another deep breath. \u201cI mean, I know what I said about teachers and students not getting intimate. And it makes perfect sense. But whenever I see you, I just can\u2019t help myself. I so badly want you to pamper my feet.\u201d\n\n\u201cYou, you do?\u201d\n\nI peeked in her direction and saw she was biting her lower lip. She had clearly become quite excited by the things I was saying.\n\n\u201cI do. And after spending most of the day with you in that pretty outfit, and that adorable hairdo, and cute makeup, I finally gave in to my desires.\u201d\n\nPolly was quiet for several moments. I figured she was processing the words I had said to her. I glanced at her and saw a smile form on her face.\n\n\u201cDoes that mean that I can, you know\u2014\u201d\n\n\u201cYeah, I think it does.\u201d\n\n\u201cWow, that\u2019s awesome.\u201d\n\n\u201cI agree.\u201d I reached out and took Polly\u2019s hand. \u201cAnd let me just say, that foot rub you gave me at the food court was incredible!\u201d\n\n\u201cIt was pretty amazing for me too. It\u2019s just...\u201d\n\n\u201cIs something wrong, Polly?\u201d\n\n\u201cWell, I would rather not do it in public.\u201d\n\nI chuckled. \u201cWhat, you didn\u2019t find that exciting?\u201d\n\n\u201cSort of. I mean, I kinda didn\u2019t want anyone to see us. That\u2019s all.\u201d\n\n\u201cBut who do we know that would have seen us? It\u2019s, like, more than forty minutes from school. And besides, you were on one side of my feet and the wall was on the other. Someone would\u2019ve needed x-ray vision to find out what was happening.\u201d\n\nBoth of us laughed and she gripped my hand. \u201cYou\u2019re right. I guess I\u2019m just a little paranoid.\u201d\n\n\u201cIt\u2019s fine. I understand. I\u2019ll try not to put you in that type of situation again. Okay?\u201d\n\n\u201cOkay. Thanks!\u201d\n\n\u201cSo, um, I was wondering... while you were massaging my feet, could you smell them?\u201d\n\nI heard her sigh with pleasure. \u201cOh yes.\u201d\n\n\u201cAnd I take it you enjoyed the scent?\u201d\n\n\u201cDefinitely!\u201d\n\nI giggled and shook my head. \u201cYeah, I know my feet sweat a lot. When I kick off my shoes at the end of the day, the stench is quite powerful. I mean, I\u2019m pretty much used to it, so it doesn\u2019t bother me too much anymore. But it\u2019s weird to think that someone actually likes it.\u201d\n\n\u201cOh my God, I love it. It\u2019s, like, I can\u2019t even explain it. I know it should be gross, but to me it\u2019s... heavenly!\u201d\n\n\u201cHeavenly?\u201d I couldn\u2019t help but laugh.\n\nShe shrugged. \u201cI guess it doesn\u2019t make sense unless you have a foot fetish.\u201d\n\n\u201cWell, yeah, but don\u2019t get me wrong. Even though I don\u2019t understand it, I think it\u2019s wonderful that you appreciate my foot odor.\u201d\n\n\u201cYou mean, you\u2019ll let me, um, smell them too?\u201d\n\n\u201cOf course! In fact...\u201d\n\nI glanced in my mirrors and saw no vehicles nearby. Thus, I was able to slip off both of my high-heeled shoes and quickly grab them in one hand without incident. I then set them on Polly\u2019s lap and smiled at her.\n\n\u201c...you can borrow these for the rest of the ride home. Go on, indulge yourself in the aroma. I can drive without shoes.\u201d\n\nThe sound of heavy breathing made me glance in her direction. She had placed her hands on my shoes and was looking at them as if they were the most precious items in the world. Her delicate treatment of my well-worn pumps made me giggle.\n\n\u201cAnd just to let you know, I\u2019ve had those heels for over a year and I wear them rather often. I\u2019m sure they\u2019ve collected a nice amount of... stink.\u201d\n\nShe let out a moan, and I peered over to see a trembling hand raise one of my shoes toward her face. The next time I glanced in her direction, the opening of the pump was being fixed over her nose.\n\nI couldn\u2019t resist spicing it up. \u201cThat\u2019s it. Take a long, deep sniff.\u201d\n\nExactly as I had commanded, she took perhaps the most enormous sniff I had ever witnessed. Her entire body shivered and she inhaled strongly through her nose again. And again!\n\nAt first, I giggled after each massive intake of air. I still thought it was bizarre this girl would be so eager to experience heavy doses of my rancid foot odor. However, as this went on, my feelings shifted from amusement to arousal, since I could tell she had become fully enraptured in a world of my shoe stench. She was writhing in her seat, and emitting lustful moans between breaths. It was getting increasingly difficult for me to focus on the road, with the steamy scene taking place right next to me.\n\nBy the time she pulled my shoe away from her face, I realized I was barely going half the speed limit and the car behind me was on my bumper. I blinked myself out of my trance and sped up. I glanced at Polly. Her entire body was trembling, her face was bright red, and she had a lascivious grin on it. She let out a sigh and looked toward me.\n\nI shook my head and chuckled. \u201cSo, um, was that good for you?\u201d\n\n\u201cUh huh,\u201d she said in a breathy whisper.\n\n\u201cDid you...\u201d\n\nShe purred with delight. \u201cAlmost.\u201d\n\n\u201cAlmost, eh?\u201d I reached across and picked up my other shoe from her lap. \u201cWell, you still have another one of my pumps to smell.\u201d\n\nI saw her eyes go wide as I held it close to her face. \u201cGo on, put your nose in there like a good girl.\u201d\n\nShe shuddered and slowly leaned forward until her face was buried in the opening of my pump. I held the shoe firm and she took a gigantic sniff. Not only could I hear it, but I could feel the vibrations it sent through my entire arm.\n\nAs I continued to press the shoe into my student\u2019s face, she took lungful after lungful of my foul foot smell. She soon thrust a hand into her crotch, and was once again squirming in the throes of passion while making loud gasping noises. This was turning me on tremendously, and my panties became soaking wet.\n\nMy own carnal sounds began to intermingle with hers, and it wasn\u2019t long before she seemed to be on the brink of orgasm.\n\nI pushed my pump harder into her face and spoke in a seductive voice. \u201cThat\u2019s right, come for me, Polly. Come from my shoe stink.\u201d\n\nNot a moment later, she clasped the pump with both hands and screamed into my shoe as she climaxed. I removed my hand, but she held my footwear firmly over her nose as she sank back into the seat in post-orgasmic bliss. The entire scene had been so arousing to me, I was on the verge of my own release. As I started to reach between my legs to put out the raging inferno in my loins, a blaring horn jolted me from my reverie.\n\nShit, I had veered into oncoming traffic and almost crashed into a tanker truck! Thank God I managed to swerve back into my lane in the nick of time!\n\n\u201cCrap, that was close!\u201d My hands gripped the wheel tighter, and I glanced at Polly. \u201cAre, are you okay?\u201d\n\nIt appeared she hadn\u2019t even noticed my near-collision, as she was removing my pump from her face with her eyes closed and a satisfied grin on her lips.\n\n\u201cMmmm, I\u2019m... wonderful.\u201d\n\nI raised my eyebrows and chuckled. \u201cYeah, you look pretty fulfilled.\u201d\n\nShe giggled and placed a hand on my arm. \u201cThank you, Miss, I mean, Amber. That was beyond incredible.\u201d\n\n\u201cYou\u2019re welcome,\u201d I said with a smile. \u201cYou really seemed to be excited. Did my heels do that much for you?\u201d\n\n\u201cOh yeah!\u201d She placed one hand on each of my pumps and held them up. \u201cThese shoes are amazing!\u201d\n\n\u201cWow.\u201d I shook my head again. \u201cIt\u2019s totally wild that you love my foot stink so much.\u201d\n\n\u201cI really do.\u201d She lifted my shoes up to her chin and inhaled deeply through her nose. \u201cIt\u2019s, like, the best smell ever.\u201d\n\n\u201cWell, if it\u2019s truly the best smell ever, then you should definitely hang onto my pumps until we get to your house.\u201d I gave her a wicked smirk and she returned a sheepish grin.\n\n\u201cOkay, I mean, if you insist.\u201d\n\n\u201cI most certainly do. And make sure you sniff out all of that stench, like a good girl.\u201d\n\nHer smile went wider. \u201cYes Miss, I will.\u201d\n\nI laughed at her response. \u201cGreat.\u201d I then gave her a brief but serious look. \u201cI\u2019ll be checking on you pretty often, so that nose better be inside a shoe at all times.\u201d\n\nShe nodded and quickly buried her face in one of my pumps. I giggled and returned my focus to the road in front of me.\n\nFor the next half hour, the only sounds being made inside my car were from the foot loving girl in the passenger seat. Her deep sniffs were often followed by gentle moans. Each time I peeked at her, I noticed her eyes were closed and her smile was one of pure lust. Seeing and hearing this put me back into a state of sexual frustration. I knew I needed to concentrate on my driving, but all I wanted to do was rub my pussy like a mad woman!\n\nWhen we eventually arrived at her street, I was more desperate to come than at any time I could recall. As we approached her house, I saw both of her parents\u2019 cars in the driveway. I sighed, realizing I would need to delay gratification until I got home.\n\n\u201cPolly,\u201d I said as I tapped her arm, \u201cwe\u2019re here.\u201d\n\nHer eyes flickered open and she gazed at me. I tilted my head toward her house and she noticed where we were. She hurriedly pulled my pump from her face and threw the pair onto the floor. She sat up straight and checked herself in the vanity mirror.\n\n\u201cDo you think they saw me with, with your shoe?\u201d\n\n\u201cI\u2019m sure they didn\u2019t.\u201d I shifted into park and smiled at her. \u201cNow if you don\u2019t mind, can you give me my heels?\u201d\n\n\u201cOh, um, yeah.\u201d She bent down, picked them up, and handed them to me.\n\n\u201cThank you.\u201d I slipped them onto my feet and took hold of her hand. \u201cWe had a lot of fun today, didn\u2019t we?\u201d\n\nShe smiled and squeezed my hand. \u201cIt was one of the best days of my life.\u201d\n\nI returned her smile. \u201cMine too.\u201d\n\nAs I gazed into her yearning eyes, I was convinced she was expecting a kiss. Perhaps I was misreading her, but I had seen this look before and it had always been followed by lips locking and tongues intertwining.\n\nOur stare lingered while I considered my feelings for this girl. Yes, I liked her as a friend. And yes, I thought she was quite attractive. Furthermore, I enjoyed her attentions to my feet. But was there more? Did I want there to be more?\n\nAfter pondering this for a minute, I decided it was best to keep romance out of our relationship, at least for the time being. What we were doing was already complicated enough. If we allowed our hearts to get involved, we would be putting everything at stake. Were either of us prepared for the potential fallout of a breakup, knowing I would still have to be her teacher and she would still have to be my student?\n\nI let out a sigh and patted her cheek. \u201cI think you better go inside... I mean, just in case they peek out the window and wonder what we\u2019re up to.\u201d\n\n\u201cRight,\u201d she said with a tinge of disappointment in her voice.\n\nAn idea occurred to me. \u201cHey, um, maybe you could meet me after school on Monday. If you want to, of course.\u201d\n\nA huge grin appeared on her face. \u201cYeah, definitely.\u201d\n\n\u201cGreat, then you can come to my office. Do you know where that is?\u201d\n\nShe nodded.\n\n\u201cOkay, then I\u2019ll see you there after seventh period.\u201d A few moments later, she cocked her head as if she had a concern. \u201cAnd before you ask, yes I\u2019ll drive you home.\u201d\n\n\u201cCool,\u201d she said with a giggle. \u201cI can\u2019t wait.\u201d\n\n\u201cMe either.\u201d\n\nI heard a noise coming from the front of the house, and I peered over to see Steph walking towards us. Polly and I exchanged a knowing glance, unbuckled our seatbelts, and stepped out of my car.",
        "\u201cHey girls!\u201d Steph waved as she approached, and I waved back. \u201cSo how did it go?\u201d She looked at her daughter. \u201cDid you buy more new outfits?\u201d\n\n\u201cYeah, and I got some awesome deals.\u201d\n\n\u201cThat\u2019s great, sweetie.\u201d She shifted her gaze toward me and then back to Polly. \u201cDid you eat dinner yet?\u201d\n\n\u201cWe did, mom. And it wasn\u2019t all cotton candy and funnel cake either!\u201d The young woman chuckled, causing me and her mom to laugh.\n\n\u201cI believe you. Plus, Amber doesn\u2019t look like someone who eats a lot of junk food.\u201d\n\n\u201cThat\u2019s true, I don\u2019t. Although if I had access to that delicious apple cake of yours, I wouldn\u2019t be able to control myself.\u201d\n\nShe gave me a warm smile. \u201cOh, that\u2019s right. Polly told me you tried some last week when you were here.\u201d\n\n\u201cI did, and it was the best dessert I\u2019ve ever had.\u201d\n\n\u201cReally?\u201d\n\n\u201cOh my gosh, Steph. It\u2019s fantastic! You could make a killing if you started selling it.\u201d\n\nHer eyes went wide and she chuckled. \u201cWow, I\u2019m so flattered. I mean, my family and friends like it and Polly is always telling me I should open up a store to sell my baked goods.\u201d\n\n\u201cYou should!\u201d I said while nodding.\n\n\u201cMaybe I will someday. But for now, I\u2019m just happy people enjoy eating the things that I love making.\u201d\n\n\u201cWell, I for one definitely do.\u201d\n\n\u201cThank you, Amber.\u201d Her expression changed to one of resignation. \u201cI wish I could offer you something now, but there\u2019s no more apple cake and I haven\u2019t baked anything else since.\u201d\n\nI stepped toward her and put a hand on her arm. \u201cDon\u2019t worry about it. I can\u2019t stay anyway. I need to be getting home.\u201d\n\nShe nodded. \u201cOh, okay. That\u2019s fine. Maybe next time we can sit and chat for a while.\u201d\n\n\u201cAbsolutely!\u201d I patted Steph\u2019s arm and turned to face Polly. \u201cOh, before I go, do you need help bringing your bags into the house?\u201d\n\nIt appeared she was contemplating this for a moment, but Steph spoke up. \u201cI think we can handle it.\u201d\n\nPolly gave her mother a sideways glance and chuckled. \u201cI don\u2019t know, mom. I bought a lot of stuff!\u201d\n\n\u201cWell, let me see what you have.\u201d\n\nWe walked toward the trunk and I popped it open. Steph peered in and shook her head in amazement.\n\n\u201cMy gosh! Where did you get the money to buy all that?\u201d\n\n\u201cFirst of all, mom, it\u2019s not all mine. And secondly, most of it was on sale for, like, really cheap.\u201d\n\n\u201cOh, all right. So then which ones are yours?\u201d\n\nAs Polly pointed them out, her mother gathered them up. Once Steph had all of her daughter\u2019s purchases in her hands, I closed the trunk.\n\nShe briefly held the bags aloft and looked at Polly. \u201cIs this everything?\u201d\n\n\u201cUm, well, there\u2019s a couple bags of shoes in the front. But I\u2019ll get them.\u201d\n\nSteph rolled her eyes and smiled. \u201cThat\u2019s fine. I\u2019ll bring these in and you can say goodbye to your teacher.\u201d She looked at me. \u201cThank you so much for helping my daughter. I hope to see you again soon.\u201d\n\n\u201cYou\u2019re welcome, Steph. And I look forward to seeing you soon as well.\u201d\n\n\u201cGood night, Amber.\u201d\n\n\u201cGood night.\u201d\n\nSteph walked onto the front porch and into her house. I then cast a wicked smirk at Polly as I approached her. She played along with my little game by giving me a guilty expression and slinking down a bit.\n\nOnce I was next to her, I bent down and spoke softly into her ear. \u201cSo, my little foot girl, do you like it when I tell you to rub or smell my feet? Does it get you all worked up when I force you to sniff my stinky shoes?\u201d\n\nShe trembled and closed her eyes. \u201cYes, Miss.\u201d\n\n\u201cGood girl. And you must always obey me, or I\u2019ll have to punish you.\u201d\n\nHer breathing intensified, and she nodded furiously.\n\n\u201cMmmm, but the rewards for doing as I command are oh so sweet.\u201d I saw her smile and shiver with anticipation. \u201cI might even let you suck my toes.\u201d\n\nHer eyes flew open and she stared at me as if I had told her she just won the lottery. \u201cOh yes, Miss. I would love that so much.\u201d\n\nI giggled and placed my hand on her shoulder. \u201cI\u2019ll think about it for next time, but only if you\u2019re a really good girl for me. You will be, right?\u201d\n\n\u201cYes, I\u2019ll be good, Miss. Soooo good.\u201d\n\nAt that point, I couldn\u2019t hold back my laughter. Polly joined in, although I could tell she had been mesmerized by my dirty talk. Several moments later, I composed myself and smiled at her.\n\n\u201cI do have to be going now. But today was amazing.\u201d\n\nShe let out a gentle sigh. \u201cIt was better than amazing.\u201d She looked into my eyes. \u201cThank you, Miss, I mean, Amber.\u201d\n\n\u201cYou\u2019re welcome,\u201d I said with a chuckle. \u201cNow we better say goodbye, before your mom comes out looking for you.\u201d\n\nWith that, she threw her arms around me and we held each other tight. After a short while, I pulled away and rubbed her arm.\n\n\u201cTake care, Polly. I\u2019ll see you on Monday.\u201d\n\nShe gave me a warm smile. \u201cBye, Amber. See ya then!\u201d She bent down to pick up her bags of new shoes, and began heading towards her porch.\n\nI stood near my car and watched her. She turned her head as she reached the front door and flashed me a grin. I waved and she disappeared into her house.\n\nWhen I opened the driver\u2019s side door, I noticed a bit of moisture on the leather seat. As I gazed toward where Polly had been, I saw the same thing. I shook my head at the realization both of our pussies had leaked through our panties during our kinky drive back from the mainland.\n\nOpening my purse, I found a tissue and wiped off the evidence of our indiscretion. Not a minute later, I was buckled in and well on my way to my apartment. There was an aching need between my legs begging to be satisfied!\n\nFifteen minutes later, I was lying on my sofa recovering from a magnificent orgasm. The events of the previous few hours had piqued my arousal to heights I never knew were possible. It had taken mere seconds once I was inside the door to push myself over the edge. The climactic moment was so powerful, I almost passed out.\n\nWhile continuing to bask in the afterglow, I thought about what had occurred between me and my student. What we did was wrong on many levels, and I should have felt plenty of regret. However, as another pleasurable aftershock surged through me, I was filled with nothing but bliss. I wasn\u2019t the least bit sorry for taking advantage of Polly with my feet. It led to several intense sexual experiences which didn\u2019t involve removing any clothing except my shoes. How fantastically crazy was that?\n\nWhat was even more incredible was the effect the adorable girl had on me. Being with her didn\u2019t only make me want her at my feet. I needed to command her, to dominate her. There was no question in my mind the things she did turned me on. However, it went to a much higher level of spectacular when I told her to rub my feet and when I forced her to smell my shoe. Plus, she loved every second of it, too!\n\nAs my warped brain began imagining the naughty foot-related activities I could impose on Polly in the coming days, I slid two fingers into my vagina. The idea she might be getting more from me than she bargained for soon had me on the verge of another unforgettable climax.\n\n \n"
    ],
    "authorname": "OneAuthor",
    "tags": [
        "fetish",
        "foot fetish",
        "foot worship",
        "lesbian",
        "lesbian sex",
        "nylon",
        "stockings",
        "older woman",
        "foot massage"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-teachers-pet-ch-05"
}