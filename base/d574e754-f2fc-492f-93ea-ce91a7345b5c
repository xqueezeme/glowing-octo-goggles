{
    "title": "E-Written: The Sleeping Beauty",
    "pages": [
        "Ephram looked down on the kingdom below, feeling bored and petulant. Decades...no... centuries ago, the humans below used to pay him tribute. Food, gold, treasure, companions. Things dwindled away over the years, they stopped paying tribute.\n\nIt had been far too long since he had razed their fields and burned their flocks. They had become complacent and Ephram had become bored. Angry. \n\nHe watched their celebration below and sulked, contemplating making an appearance at their celebration. Destroying it. Turning the tournament fields into an inferno. He huffed and smoke billowed from his nostrils, then he stood and paced, causing his piles of gold to shift and spill with his thundering steps. \n\nHe flapped his massive wings in the cavern and huffed again, working up his temper as he continued to watch the tournament opening ceremonies. \n\nA girl. A human girl, small and insignificant. A princess they call her, young and beautiful. Her birthday celebration.\n\nThe world had been invited, everyone in the nine kingdoms had been invited to come and enter the tournaments. Try for her hand.\n\nNot him. He hadn't been invited. He raged, turning, scorching the walls. There once was a time when they would have honored him with a tournament, with a celebration. GIVEN him any girl who struck his fancy, princess or no. \n\nNow they snub him, pretend he does not exist and offer him not even a morsel in tribute!\n\nHe would show them!\n\nHe stormed to the entrance of his cave on the mountain and roared, shooting flame into the air. \n\nIn his mind's eye he could see the humans pause and turn to the mountain. Curious. Not afraid. Not terrified. Curious. They did not even remember him!\n\nHe shrieked in rage, then forced himself to calmness. \n\nHe would make them remember.\n\nHe stepped out and took flight, angling to the sun, allowing the reflection to refract and render him invisible. He was silent as he coasted into the fields near the tourney grounds, staying invisible right up until he took human form and strolled in among the humans. \n\nAurora looked back at her father, wondering why he had that worried, pensive frown as he gazed at the mountain.\n\n\"Papa?\" she asked questioningly.\n\n\"Nothing my love. Just a story my grandfather told me once. It's nothing.\"\n\n\"Do you know what that was? That sound? That shaking?\"\n\n\"It was just thunder, a distant storm beyond the mountain echoing strangely. Do not worry over it, this is your time now! Your celebration! Tell me, who do you hope will win?\"\n\n\"Oh, papa, we have been over this. I think your tournament is ridiculous!\"\n\n\"It is tradition!\"\n\n\"So long as they don't actually think to have my hand if they win!\" she laughed.\n\n\"No my love a mock ceremony to honor tradition. Now. Who do you hope wins? To whom would you like to bestow a kiss?\"\n\nAurora giggled, looking around at all of the young... and not so young men. They truly had come from all over and she didn't know most of them. She saw her friend Phillip and waved and he grinned, waving back.\n\n\"Not him,\" her father said glumly. \"I am sure he has had his share of your kisses!\"\n\n\"Papa! Of course he hasn't...\" she said, blushing and looking away quickly. She and Phillip had kissed... but only once. He had stolen it only the night before after boasting he would win and claim her first kiss. She informed him he wasn't nearly good enough with a lance or a sword to win. He had said perhaps she was right and had stolen the kiss, saying he would still be her first kiss. She blushed again, just thinking about it.\n\n\"There, what about Lord Edwards son, there. What's his name? Joel? What about Joel, he is a striking figure.\"\n\n\"Striking? Perhaps for a bear. I've no wish to kiss a man as big around as he is tall and hairy enough for four men.\"\n\n\"Bah, you want pretty I assume. There. Lord Chadwicks son. Elliot? He is pretty enough to be a girl.\"\n\n\"He is beautiful, but he likes himself too much. See how he preens at his reflection in Wulfberts armor?\"\n\n\"Wulfbert. How has the man lived this long without changing that ridiculous name? I suppose you think him striking?\"\n\n\"Not really. He makes me think of a snake.\"\n\n\"I don't recognize half of these faces, do you have the roster?\"\n\n\"It has not been brought yet, there are still men entering.\"\n\n\"Ridiculous that they are allowing last minute entries!\"\n\n\"That was your idea father, when so many were showing up from far off.\"\n\n\"Well if they want to throw away good coin for a chance at a kiss! Who am I to say no?\"\n\n\"You said you met mother this way on her 18th birthday.\"\n\n\"So I did, but... there were not quite so many back then. It was... just the seven of us,\" he chuckled. \"She cheered me on fiercely! As I am sure you will cheer your Phillip on today.\"\n\n\"Papa!\" she laughed, pressing her hands to her cheeks.\n\n\"Just don't be too upset when you have to kiss another and be glad he is not the hot tempered type. The boy really is helpless when it comes to the lance.\"\n\n\"No more talk of him!\" Aurora said firmly. \"Look there, who do you suppose that is, standing and glaring at us so? And him, with his smile as if he knows a secret we don't? And him, the tall one who looks so mysterious and dangerous? Look at him! Have you seen a man with his coloring? And I have never seen a sword like that?\"\n\n\"He is from Mjennic! He had to be passing through, he wouldn't have really been answering the call for the tourney.\"\n\n\"Mjennic? Truly? I have never seen anyone from so far off. His skin is so dark and his hair so black! Perhaps he will win and I will see him up close and speak to him. Does he speak common, do you suppose?\"\n\n\"He must if he signed up. Even if he doesn't win, you can invite him to sit at the head table for the feast so that we may all speak and hear about where he is from.\"\n\n\"What about that man? Where is he from? The tall one with the golden curls?\"\n\n\"One of the northern countries with his fair complexion.\"\n\n\"Oh, look at him! He is a giant! Who is he, papa? You would have heard of such a man?\"\n\n\"No, look at him. He is one of the wild nomads from the mountains.\"\n\n\"How could he sign up at all? Look at his sword? Is that even a sword?\"\n\n\"It looks like it was a bastard sword, but just a sword for him. I have to say I am glad I'm not in the melee with him!\"\n\n\"What sort of sword is that there that the tall man has?\"\n\n\"Flamberge my love. Enough of this. Let's sit back and get ready for the Archery to start. It is the short round with the fewest contestants.\"\n\n\"Because no one will go up against Phillip,\" she said proudly, turning to look at him again. Phillip was speaking to a shorter man, but he was standing so he could see her and he grinned when she looked. \n\nShe turned quickly and looked over at her little brother who was down on the floor leaning into the arena to look around. \"John, you are going to get hit by something! Come up here and sit down!\"\n\n\"I will be careful!\" he called, not moving.\n\n\"Papa!\"\n\n\"Leave him be, Aurora, he is fine. There now, the first round is about to start!\" he said happily as the lists were handed to him. \"Only fourteen bowmen!\"\n\n\"Because it's worth the fewest points,\" John called over his shoulder. \"Bow is a coward's weapon!\"\n\n\"You just hush!\" Aurora hissed, her cheeks burning. \"Archery is an art and it takes skill!\"\n\nJohn snorted.\n\n\"Hush now, both of you. Sit back my love, don't let him rile you. Boys will be boys, he is only trying to goad you. Your Phillip is third, let's see how he does.\"\n\nAurora sat back and watched as Phillip quickly took the lead and held it. Right up until the last four men. The tall, pale, golden haired man who kept looking at Aurora like he had a secret. The man who glared at her, dressed all in black with his black hair pulled back and tied with a chord. A small, unassuming man who never looked up from the ground, and the giant mountain man whose bow looked like a limb. \n\nThe top five were moved to the next round, but Phillip was out quickly as the final three moved up. The unassuming, mousy little man whose name was Henry, the tall man in black whose name was Amir and the pale, golden haired man whose name was Torsten. The Giant, whose name was Fafnir, was out alongside Phillip, who looked shocked and upset that he had lost. Archery was where he excelled! Still, he would get points for 5th place. \n\nThe unassuming Henry won the archery competition and he didn't look up but he canted his head just enough to cut his eyes at Aurora and smile just slightly. \n\n\"Peculiar little fellow,\" her father said softly, watching the little man as he slipped through the crowd unnoticed.\n\n\"He is very good with a bow,\" Aurora said sadly, turning to look at Phillip as he prepared for the jousting.\n\nThat took much longer and she quickly grew bored with it. Phillip was out in the first round. The mousy Henry made it to the third round though, which surprised her. It did not surprise her to see Amir, Torsten and Fafnir moving into the fourth round. Actually, it did surprise her to see Fafnir once she thought about it. How could he possibly be so good with a lance on the horses he had to use for his size? She did note that he was no finesse, all brute strength and reach. She learned the name of the Mjennic man that round as well, though it was when he was finally out. Ekon. His smile lit up his face as he laughed and bowed graciously to the man who had unseated him. Amir. \n\nIt was Amir and Torsten facing off in the final joust. The beautiful and pale golden knight and the dark and dangerously handsome knight. \n\nTorsten won by unseating. He turned to her as he pulled his helmet off and smirked, his bright sapphire blue eyes glittering like they held a secret. Amir glared, his gaze hot and angry as he stalked off the field. \n\nThe melee was next, though with the points on the board, Phillip was out of the race even if he took the melee. \n\nShe looked around the arena at the men who did have a chance, the ones whose names were highest in points, feeling a little nervous about it. \n\n\"Papa, you are certain they all know it is only a kiss and a mock ceremony to honor tradition?\"\n\n\"Of course my love,\" he said muzzily. He had partaken of a great deal of wine already. \"It was announced again and again. They are competing for the purses for the winners in each bracket as well as the kiss. Have no fear. Though the way that Torsten keeps looking at you, I think he might mean to ask you for a walk once this is all over, kiss or no.\"\n\nAurora looked and Torsten was still smirking at her, watching. Amir was still glaring, his arms crossed. She did not see Henry anywhere, but she was sure he would be good at remaining unseen. Fafnir was sitting under a tree in the shade, looking over his blade, not paying attention to anyone. Ekon was not high in points, but she looked for him anyway and he was with a group of men, talking and laughing. She wondered how good he was with that oddly curved blade of his.\n\nWhen the melee began, Phillip only made it to the third round, though he had obviously pushed himself beyond his normal abilities. Aurora gave him a sorrowful look, then smiled and blew him a kiss. His scowl left as he smiled wanly.\n\nEkon surprised her by also going out in the third round. For some reason, she had thought he would make it longer. They way he laughed and cheered and yelled, he was having fun and that meant more to him than the winning. \n\nShe watched and was amazed to see little Henry slipping in and out of opponents, unnoticed, unseen until he landed a 'killing' blow, using all of the chaos and bodies to move unseen. \n\nHe made it to the final round, along with Torsten, Amir, and Fafnir. Torsten and Amir gave a small nod to each other, then turned and went after Fafnir together, all of them ignoring Henry. Henry dispatched Amir as Fafnir took out Torsten. \n\nIt was ridiculous as everyone cheered wildly for the little man and the giant, circling each other. It should have been no match at all, but the two stayed alert and wary, the giant giving the tiny man respect in his attention.\n\nAurora looked over the points and summed the totals quickly. Whoever won this, would win the kiss. \n\nShe blushed. Not that they were necessarily competing for the kiss, they wanted the purse, but still. She would be required to kiss the winner. \n\nShe looked at both of them fearfully. Henry was small for a man, but larger than her still. He was older, but not more than a decade. Perhaps 30 at the most. Fafnir she could not put an age to, he could have been 20 or 40. It was hard to tell given his size and his wild hair and beard. Henry had no facial hair and she much preferred that. She decided she was rooting for Henry, simply because she did not want to kiss a man with so much facial hair, not to mention that he was a giant and that would make her feel smaller than she already felt. \n\n\"If he lands a blow on him, it will break his neck,\" her father said softly, his words slurred. \"I should call this.\"\n\nHe no sooner said the word than Henry darted in to strike at Fafnir's femoral artery. The giant moved with an agility that belied his size and arced his heavy sword, slamming it down a hair in front of Henry, halting his progress. Henry managed to stop himself, but the giant had a dagger at Henry's throat, his sword still buried at Henry's feet.\n\nHenry dropped his short short and raised his hands, signalling Fafnir the winner. \n\nThe crowd erupted, cheering still for the diminutive man who had gone up against the giant.\n\nFafnir stood, yanking his sword free from the earth and strode to the dais, looking Aurora over as he did.\n\nHer father stood. \"Congratulations, Fafnir of the mountain clans! You won quite a sizable purse today! We will be feasting in your honor and you will sit at the high table with...\"\n\n\"I came for the girl,\" the man interrupted, his loud voice booming across the area, silencing everyone.\n\n\"Your kiss, of course. Step up. Aurora, the man would like his kiss now rather than later,\" her father chuckled.\n\nAurora was standing, looking at the giant in fear. He did not want a kiss. \n\nFafnir stepped closer to her, looking down at her even though she was on the dais and he on the ground. \"I came only for the girl,\" he yelled again. \n\n\"Easy, you're scaring her!\" Phillip called, climbing up onto the dais.\n\n\"You said she would wed the victor! I am the victor. She is mine.\"\n\n\"It is just a tradition, a kiss is all the winner gets. The tradition is a mock ceremony, not a real one! It is clear in the rules!\" her father stammered.\n\n\"Do you intend to deny me my prize?\" Fafnir demanded, his voice loud enough that Aurora dropped to her knees and covered her ears.\n\nThe sound was immediately followed by a dozen swords being drawn, men running forward.\n\nFafnir laughed derisively and then... changed. He grew... his body getting larger, longer... turning a slate color. \"Sleep,\" he hissed at all of them as he continued to grow, his wings unfurling. \n\nAurora woke to darkness, and a bone deep chill that made her shiver. \"Papa?\" she called into the darkness and the word echoed all around her and away, deep into a cave and beyond until it was no longer a whisper. \"PAPA?!?\" she screamed, sitting up and trying to feel around her.\n\nShe was in a bed, the blanket on her thin. It was massive, this bed, as she crawled, trying to find the edge.\n\n\"Do not leave the nest or you may hurt yourself,\" a deep voice rumbled. A huge voice. \n\n\"What are you? Who are you?\"\n\n\"That who I am is lost to your people angers me immensely! You have gone too long with no reminder as to who you serve!\"\n\nAurora cried out when he yelled, going to her hands and knees and covering her head.\n\n\"I am a god! I am YOUR god! There are two of us in this world created for you to worship and pay tribute to! Me and my sister, one male, one female. I am the male, Ephram Somnus, my sister is the female, Delphine Surgere. Once your kind showered us with tribute, sent us companions and servants. Now we lay forgotten and dismissed. \n\nNo longer. I will reclaim what is mine. Your people sleep below. When they wake, they will know the pain of loss. You are mine now and you will serve to remind them of their forsaken vow to always worship. They will hear your screams of anguish in their dreams, see visions of your torture every time they close their eyes. As they are seeing you now. Flames licking your feet as you hang by your hands, your hair and clothes singed off. Begging, pleading, screaming. They will see your torture for an eternity.\"\n\nAurora sobbed brokenly, shaking her head. \"We did not know! No one told us, please!\"\n\n\"It was on your people to remember! You let us fall away, forgotten!\"\n\n\"Let me go back and tell them! We will worship! Pay tribute, we will! And we will never let our children stop! Please, you don't have to do this, you don't have to kill me!\"\n\n\"I will not kill you, girl! They will see your torture as they are seeing it now, replaying again and again. They will know their mistake and pay tribute soon enough! You. You I keep for my own. I won you and you are mine.\"\n\n\"What... what are you?\"\n\n\"I am Ephram.\"\n\n\"But WHAT are you? Not a man, you changed into... something.\"\n\n\"A dragon. A dragon who can control sleep and dreams. My sister controls the waking world, but she grew tired of it and left. She wanted to see the moon and other stars. She will return some day and woe to the man who has forgotten her!\"\n\n\"Can... can she change forms like you did? Become human?\"\n\n\"We can both take human form.\"\n\n\"Please, it is so dark! I can see nothing.\"\n\n\"Your human eyes are weak.\"\n\n\"Perhaps that is so, but is there a light somewhere? And... my dress?\"\n\n\"The old ways stand here, there are no clothes in the mountain. You stand as I do, in nothing. Ready for pleasures of the flesh at all times. It has been so long, I have forgotten a human need for light and warmth,\" he grumbled, then exhaled a fiery breath, lighting a brazier in the huge cavern. \n\nAurora looked around, then quickly backed away from the edge of the bed. The nest. It was up high and the fall from the edge seemed unending, no end in sight. She turned and the giant slate blue dragon was perched above the large round bowl of a bed, looking down at her with amber eyes. She wrapped more tightly in the blankets as she looked around. There was nothing here but the huge nest and the perch. Pillows and blankets piled around in the giant bed as if left forgotten.\n\n\"How long has it been since you have had a human here?\" she asked, trying to make conversation and get on it's better side.\n\n\"Too long. I do not know the passing of years as you humans do. I nap and awaken and things are different below. The companions dwindled after my naps until I awoke and none were waiting for me. That was not the bargain struck!\"\n\nShe covered her ears and cowered down in the bed as he raged. \"Can... can you stop yelling, please? I don't like it!\"\n\n\"You think I have a care for what you may like, human?\" he roared, lifting up and flapping his wings malevolently. He thrust up from his perch and dropped down to the nest, making her scream as she was about to be crushed, covering her head with her arms.\n\nWhen nothing happened and there was silence, she peeked out and up at the giant man standing several feet from her. She averted her eyes quickly, blushing furiously.\n\nIt has been long since I have known pleasures of the human flesh. Come. You owe me vows and a kiss for my victory below.\"\n\n\"Vows was not truly part of it!\" she said breathlessly, clutching the blankets.\n\n\"I heard the announcement myself! Would you name me liar?\"\n\n\"No! No, but perhaps you did not hear all of what was said? It was to a be a mock ceremony! Not real. Just a following of tradition. All that was promised was a kiss!\"\n\n\"I will have vows and a kiss, human,\" he raged. \"I won their contest and I did so fairly! You are mine and I will keep you from them! When they wake they will know their mistake and they will know anguish! They will send me tribute and companions, but you will forever be mine! A symbol of their mistake, never returning to them. Come, now, and say your vows to me!\"",
        "Aurora stood, trembling and looking away from the giant as tears fell from her cheeks. \"No one knew, Ephram! No one! You say time is different for you! You say you sleep and things change when you wake. That... that could be lifetimes for us! How much time has passed below? How many generations? We could not know! You cannot punish us because we live shorter lives than you do!\"\n\n\"Say your vows to me human,\" he said angrily, closing the distance and forcing her to face him.\n\n\"What vows?!? I don't know what you want me to say!\"\n\n\"Say commitment vows, as a wife to a husband!\"\n\n\"Please! You cannot...\"\n\n\"You will hold to your oath! I won the tourney! You will say the vows or I will cast you over the edge and feast my eyes on your bones for the next milenia!\"\n\nAurora let out another broken sob as he knees gave way. He held her up, his giant hands wrapped around her arms. \"I... I vow to be a wife to you? I... I am not certain what you want? Please, tell me what I need to say?\"\n\n\"You will bind yourself to me as a wife, forever.\"\n\n\"I vow it, to be your wife until I pass from this world,\" she answered, closing her eyes.\n\nHe yanked her close to him. \"I will have my kiss, freely given! You are a wife now, you will act as one!\"\n\nAurora turned to him, turning her face up to his. He pressed his lips to hers and she let out another sob of despair. He pulled back, looking down at her as he held her at arm's length. He pulled the blanket away, ignoring her hands as they snatched at it.\n\n\"You are pleasing to the human eyes, easy to gaze upon. The others fought hard for this honor, the small one especially. Did you not know him?\"\n\n\"They fought for the purse, not for the kiss.\"\n\n\"You know nothing of men. He fought for the kiss and the vow.\"\n\n\"I told you, the vow was only...\"\n\n\"Listen again to your fathers proclamation, human. It was to YOU he said it was a tradition, not to them. They did not read the fine print, only a small few knew it was not real. Your father intended to trick you. If the right man won, he would have bowed to the misunderstood slight and allowed the vows. Had the wrong man won, he would have simply said it was not real. The small prince would have demanded your hand and your father would have had to allow it.\"\n\n\"Prince?\"\n\n\"Prince Heinral of Miovia. Or did you truly think he was just a small, unassuming little Henry who happened to almost take the entire tournament? He did not want his identity known until he won. He did assume he would win. He had his ship ready to sail to take you back with him.\"\n\n\"Papa never would have agreed! We are at war with Miovia!\"\n\n\"And when he won you and took you back with him, it would not have been an act of war. He won you, your father could not say no. He would have had a hostage to keep your father in check.\"\n\n\"And the others?\"\n\n\"They also meant to have you. Your father meant for them to have you. He knew you would not stand idly by and allow it, so he tricked you. Made it so that you would think it was a misunderstanding and an accident and you would forgive him. He needed to see you married and knew you were against it. The fair one had spoken to your father and arranged to have your hand as soon as he won. The dark one also made a pact with your father, but he discovered he was one of several your father had made deals with. He meant to see you punished for your fathers double dealings. They all wanted you, human, not the purse. It was your hand they fought for.\"\n\n\"No... Phillip would have told me!\"\n\n\"He would have. And that is why your father did not tell him. The Mjennic prince came and saw you. He said he would compete and meet the other fighters, feast with your father, but had no interest in winning your hand. He had come a long way to be disappointed so.\"\n\n\"I... I was a disappointment to him?\" she asked, her feelings actually hurt. She had thought the dark prince so beautiful and exotic!\n\n\"He said you were pretty enough in your pale way, but you were no warrior. Where he is from the women, the queens, they are all warriors. A small female like you would not last a day in his lands. He had hoped for more. Someone to fight next to, not someone he would always have to protect and save.\"\n\n\"I... see,\" she said faintly. A land where women fought? \n\n\"You wanted him to win your hand?\"\n\n\"What? No! No... I was simply curious about him.\"\n\n\"But not about me.\"\n\n\"You were a mountain man... one of the nomads from the wandering tribes. There was not much to be curious about.\"\n\n\"I am not, not at all. Perhaps if you had been curious you would not have been so surprised. You will be a wife to me now and share pleasures of the flesh with me. Lay on your back.\"\n\n\"I... what?\" she asked, horrified as she spun away from him.\n\n\"Lay down. On your back. I will have you.\"\n\n\"We... can we talk about this, please? You cannot think that...\"\n\n\"You vowed to be a wife to me! You will keep your vow, yes?\"\n\n\"I... please Ephram!\" she squealed as he pushed her down to the bed, laying next to her. \n\n\"I am able to manage my size, to accommodate,\" he said more gently, his massive hand on her shoulder. \"This is my natural human state, but I can alter it with effort,\" he said, then... morphed.\n\nHenry, or Ephram appearing to look like Henry lay next to her. He slid his hand up her shoulder to her jaw and leaned in as if to kiss her. Aurora turned away, horrified. \"You just told me he was the enemy!\"\n\n\"You prefer this?\" he asked, morphing to look like Ekon. \n\n\"After you said I was a disappointment to him?\"\n\nHe morphed again to the golden haired Torsten, then to Amir as she watched. His form settled to Phillip and he watched her blush.\n\n\"He is neither prince nor lord, but you wanted to grant the kiss to him. You had feelings for this youth?\"\n\n\"Have.\"\n\n\"No. You may not have feelings for another while married to me!\" he said angrily, morphing back to a smaller version of himself. \"There are no others for you now!\"\n\n\"I didn't ask you to change into... him! Or anyone else! You chose to do that on your own! You cannot get upset at me for that!\" she said angrily, trying to roll away from him.\n\n\"You will stay!\" he growled, yanking her beneath him as he moved over her. \"I will taste your pleasures, human wife!\" He said the word like a curse. \n\nShe looked away, blushing again, but she was confused. \"You don't know what a wife is, do you?\" she asked.\n\n\"A companion who never leaves and is bonded to me for life! Whose pleasures I may taste freely. Humans take wives to trade for power, or to evoke emotion. Love. I wish to have this emotion for myself, taste it along with the other pleasures of the flesh.\"\n\n\"It doesn't work like that!\" she cried as his hand moved down to her ribs, sliding up to run a thumb on the underside of her breast. \"People fall in love and decide to marry because of it! It isn't something you can force or make happen by willing it! Please! I don't want this!\"\n\n\"You cannot deny your husband. You made a vow!\" he hissed. Aurora let out a wail of fear as his teeth closed around her jaw. Not hard, a symbolic gesture of control and authority as he dragged his teeth shut near her ear. She was shaking uncontrollably, her eyes squeezed shut as he looked her over again, looking down at her vulnerable human body. \"I will taste you,\" he growled again, his hand moving down to her hip to position her.\n\nShe let out another whimper of fear and he growled in frustration. \n\n\"Why do you fear me so?\" he demanded. He paused, tasting her again, touching her mind. \"You have never shared pleasures of the flesh. You fear it. Why? You will not fear it!\" he announced. \"Sleep!\"\n\nAurora immediately drifted off, but she knew the dream for a dream right away.\n\nShe was standing in the large nest and it was well lit with a soft ambient light. She could see well in every direction. In every direction, a man stood in nothing but the skin he was born in. The tall and pale Torsten, beautiful with his golden hair and blue eyes. The small but verile Henry with his more compact body, wiry and handsome in his own way. A smile that said he held his secrets well. The slender and lithe Amir with his graceful and beautifully dark limbs and long black hair. The exotic and laughing Ekon with his bright smile and ebony skin. Even Phillip with his gentle smile and curly red hair.\n\nThey all moved towards her from different directions as she looked around, watching them come unashamed. She wore nothing, but that didn't seem to bother her.\n\nPhillip reached her first, his hands sliding into her hair to turn her face up to his so he could lean in and kiss her. Someone else reached for her, pulling her close from behind, pressing a hot body against her back as they kissed along her bare shoulders. More hands, more mouths, kissing, holding, caressing everywhere.\n\nIt was Amir who pulled her from the tangle of hands and laid her down, smirking down at her as he moved around to sit above her head. He held her wrists next to her face as he leaned over her, watching her. \n\nPhillip moved down, over her, looking down at her with wide eyes as he looked her over. Torsten laid next to her, stroking her jaw and watching, Ekon on the other side, smiling as he watched her face. Phillip leaned close and kissed her again, then moved back and took hold of her ankles, pulling her legs wide. They all looked at her then, at her exposed sex, leaning up and over, getting a good look even as they stroked her breasts. \n\nHenry stepped through them, stroking his cock as he stood over her. The men were all holding her down, though she was not fighting this at all. She only felt excitement as she looked up at his cock, it's size suiting him perfectly. He went to his knees, straddling her and pressed his hard cock to her lips and she kissed it over and over again, eager to show him her favor. \n\nExcitement coursed through all of the men as Henry moved down, putting his legs between hers and moving back to look down at her sex. He reached down and touched her there and then they were all reaching, touching, petting, stroking.\n\nShe moaned as she writhed under their touch, the feel of their hot fingertips more than she could take. She needed more! She ached for more!\n\nHenry leaned in close and put his mouth on her sex, making her gasp. The others were still holding her and they tightened their grips, forcing her to stay open to the invading mouth and tongue. She relaxed and closed her eyes, sighing. It felt wonderful! \n\nHenry eased a finger into her as he sucked and licked and she moaned and begged for more. She needed more! So much more!\n\nThere was movement and she opened her eyes as another cock pressed to her lips. Torsten was looking down at her, his eyes hooded as he pulled her head close. She went to kiss his beautiful cock, but he pushed past the kiss, forcing his cock into her mouth and beyond. She moaned as the cock filled her mouth and throat, pulling back and pushing in again and again as Henry's mouth worked her swollen and wet pussy. His fingers worked faster inside of her until he raised up and pulled her closer, easing his cock into her waiting pussy.\n\nYes! Yes! That was what she needed! She wanted more! \n\nHenry took her hips and began slowly thrusting into her, his cock filling her as pleasure sang through her. She was prisoner to it.\n\nTorsten began speeding up, his cock thrusting faster into her mouth and she panted in time with his need as she gazed up at him adoringly. He stroked her face lovingly, then closed his eyes as he spent himself deep in her throat. \n\nShe moaned with loss as he pulled his cock out and away, but Henry was there immediately, leaning in to kiss her, fill her mouth with his tongue. He rolled so that she was on top of him and she rode his cock as he held her. \n\nA hand slid around her throat and she looked down at the dark hand against her pale skin, loving the contrast of it as Ekon's full lips dragged over her shoulders. He moved behind her and she felt his rubbing his cock in her slick juices as Henry continued to fuck her. She moaned happily, reaching back to pull Ekon in close to her as he guided his cock to her anus. \n\nSome distant part of her knew there was a wrongness in this and there should be pain, but there was only euphoria as he pushed into her with a low groan. He began thrusting and the pleasure was intensified with both men filling her so completely. She was delirious with want and need! \n\nPhillip took her face in his hands, kissing her quickly, then moving to press his generous cock to her lips. She hesitated, he was the largest so far... then she realized they were moving on her in order. Henry was the smallest and he had gone first. They were taking turns according to size. \n\nIt didn't matter.\n\nHe pushed his big beautiful cock into her throat and she truly felt full now, pleasure coming from everywhere as all of the cocks thrust into her. They moved in tandem, like a single being, working to maximise her pleasure until she was screaming in ecstasy around the cock in her mouth.\n\nHenry came inside of her, kissing her jaw with a sigh as his cock throbbed and spilled seed into her. Ekon was close behind him, his long cock exploding and shooting his hot cum deep into her, making her whimper with overwhelming pleasure. \n\nPhillip pulled her up higher and took hold of her face more firmly, thrusting harder and faster as he grunted with a primal need. \n\nHe came deep in her throat and she reveled in the feeling of being so full of all of their seed. \n\nAs she collapsed to the bed and her eyes fluttered, she realized she was not done. \n\nAmir was smirking knowingly as he moved over her, stroking his massive cock above her breasts. Her eyes went wide with greed when she saw it, reaching up to stroke it with both hands. Amir reached down and picked her up, turning her to her hands and knees and pushing her face into Ephrams. He was there suddenly, watching her with curious eyes as he pulled her down to lay on his chest. Amir pushed into her from behind, making her go half mad with ecstasy as his cock filled her so much it bordered on pain. \n\nEphram turned her unfocused eyes up to his as he kissed her and she kissed him back eagerly as the giant cock plowed into her from behind. \n\nIt felt amazing! Ephram's arms were perfect as he held her and kissed her through it all. Finally Amir leaned over her with a growl and spilled his hot seed into her. \n\nAurora collapsed onto Ephram, but she could feel his hard cock now, pressing into her belly, and she wanted it! She moved down, taking him into her eagerly and rolling her hips, gasping as he filled her. \n\n\"This is what you want,\" he whispered.\n\n\"Yes!\" she wailed, as he began to withdraw his cock. \"Please! Fill me with...\"\n\nAurora jerked awake, panting and sweating, her entire body shaking. The dream faded fast, but her body remembered and need still filled her. \n\nThe only light was from the brazier and her eyes darted around until she finally saw him. He was still in the nest, but back on the corner resting his back against his roost as he watched her. His small smile said he was enjoying the show.\n\n\"W...what did you do?\"\n\n\"I am the sleeping dragon, I control dreams. I did not have to do too much, you did most of it yourself. You can see how it is not to be feared, the pleasures, yes?\"\n\n\"You can't just...\" she panted, but couldn't find the words as she gripped the blankets around her. The mattress under her was wet, the spot beneath her... She blushed furiously and tried to move, but she was so sensitive and wet, movement only brought a gasp and a moan from her. \n\n\"I can sate your needs if you wish,\" he offered. \"Or I can put you into another dream and you will wake needing it even more than you do now.\"\n\n\"No! No more dreams, please!\"\n\n\"But you enjoyed it so? I do not understand you. Why deny yourself the pleasure? To your husband? Come over here and I will see you satisfied.\"\n\n\"No!\"\n\nHe chuckled darkly. \"Sleep,' he whispered.\n\nAurora stood in the light cavern, in the middle of the nest again. She turned and saw nothing, but when she came full circle, Henry was in front of her with his knowing smile. His mouth found hers quickly as he took hold of her face, kissing her passionately. She grabbed his face as well and wrapped her legs around his waist when he lifted her off of her feet. He bore her to the bed quickly as he kissed her, his mouth invading hers. \n\nShe didn't know what he was waiting for! She needed him! Couldn't he feel how badly she needed him? She reached down and guided his cock into her with a low moan and he sighed into her temple as he kissed her head. He was slow and gentle as he made love to her, filling her to the brim with a joyful contented fullness that left her weeping with happiness. They rolled there for hours, kissing and making love and feeling each other, whispering affections.\n\nIt was bliss.\n\nWhen Henry finally came, biting his lower lip as he poured into her she smiled happily and looked up at him, then frowned as he seemed to dissipate. \n\nHe was gone.\n\nHe was gone and she was standing, aching with need. \n\nTorsten grabbed her from behind and lifted her, kissing her neck and holding her before easing her to the bed and landing sweet kisses all over her body.\n\nShe shook her head, her need not giving her patience and pulled him up, wrapping her legs around him and reaching for his cock. He smiled as he pushed into her, teasing her gently as he hesitated again and again before burying his cock deep inside of her. He was playful as he made love to her, teasing her a lot and making her beg and need him. He made her chase him and held her just on the brink over and over again, making her scream with an amused sort of frustration. \n\nWhen he took hold of her and finished inside of her with a low growl and a playful nip to her jaw, she smiled, content once again. \n\nHe looked down at her and faded away and her smile slipped.\n\nNo! NO!\n\nShe was standing and Ekon was suddenly across from her. He was grinning, his face joyous as he moved to her and swept her up in his arms, tossing her up up lightly and making her squeal with glee. He took her to the bed and his fingers found every spot on her that had her breathless and laughing, kicking and trying to get away, tears streaming down her cheeks as they laughed. \n\nWhen he plunged into her, so deep and hard, she gasped and her hands fumbled for his. He held her and made love to her, watching her, keeping her happy and smiling, keeping her so full of elation that it was almost painful to hold on to. He laughed as she squirmed and tried to find a way to focus all of the pleasure, but there was nowhere to put it. His humor was contagious though, and she kept laughing despite her discomfort, but it niggled at her constantly. A small sob escaped and Ekon went still, looking down at her. He did not finish, but he disappeared as if he had never been there and Aurora lay panting, trying to rid herself of the feeling that was trying to overwhelm her. \n\nShe stood in the center, calm. Her body her own again as she looked around. \n\nPhillip smiled at her shyly, blushing as he moved close to her. \"I love you, you know that, right?\" he whispered.\n\nShe nodded, confused. This didn't seem right?\n\n\"I want you Aurora... but you know I can't have you, right?\"\n\nShe looked up at him, confused, not understanding. There was something wrong! This wasn't right. Things had begun to go wrong with Ekon and they were still going wrong!\n\nEkon?\n\nShe didn't know where that thought had come from. \n\nShe turned and Amir was close to her, looking down at her with his sultry, hooded eyes. He struck like a snake, grabbing her and yanking her close to him, pressing his body to hers.\n\nShe purred happily, closing her eyes in delight as he took a handful of her hair and yanked her head back to kiss her. His mouth was insistent and rough, full of aggressive passion. Her body loved it. She opened her legs to him eagerly and he grabbed her hips and shoved himself in with a roar. ",
        "He groaned and growled as he rammed into her and she cried out in bliss, trying to hold on to herself to keep from floating away. He never slowed or stopped as he rolled her and flipped her, fucking her from every angle. The hours seemed unending and she only knew bliss as she cried out incoherently. Pleasure was all she knew. She swam in it, lived in it. She never wanted this to stop.\n\nAmir rolled her again and slammed into her, screaming wordlessly as his cock throbbed and then drained inside of her, filling her with an endless stream of hot cum.\n\nAurora woke with a cry of despair, her thighs slick with her own juices. She could hardly think at all, she only knew need as she humped at the bed, trying to find some way to sate her throbbing and demanding pussy. \n\nShe rolled to her back and her hand fumbled as she reached down and clumsily tried to give herself relief.\n\nEphram caught her hand and smiled down at her. \"That one was different. You fought me on two of them. You refused them. I wonder why that is?\" he asked, tasting her fingers as she lay panting and squirming deliriously. \"I have the one figured out, I think. He spurned you, turned you down, showed disinterest. That makes sense. But the other? Unless you do not actually care for him as he cares for you? You do have a clear favorite though, don't you? Shall I bring him here for you?\"\n\n\"Please. Please,\" she gasped. \"Make this stop!\"\n\n\"You wish me to satisfy your needs now, little one?\" he asked, smiling knowingly.\n\n\"Yes! Please, please, make this stop!\"\n\nHe chuckled and moved close to her, going to his knees as he took hold of hers and opened them to him. He looked down at her wet and glistening sex, swollen with need, then slid a hand up her thigh to roll his thumb over her bud.\n\nShe let out a yell of shock, her eyes wide as her body tensed and bucked, the orgasm hitting her immediately and sweeping all thought away.\n\nWhen she collapsed, gasping for air, her eyes wild, he leaned over her. \"It is different from the dream, yes? I cannot make that happen in a dream, just get you close enough that you are insane with the want of it. You are not done, you wish more. Yes?\"\n\nShe only stared at him, her lips parted. He moved over her and adjusted her under him, sliding the head of his cock along her slit. She groaned, her eyes fluttering shut and he paused again.\n\n\"This will not be like the dream either. The first time... the first real time... there will be pain. The pleasure will come later for you. It will no longer be... muted or distant. It will be immediate. You understand this?\"\n\n\"Yes,\" she whispered, her hands sliding over his chest.\n\nHe smirked again, knowing she was still out of it and not comprehending him. She would understand soon enough.\n\nHe eased into her and her eyes opened wide, snapping into focus as she looked up at him in fearful shock. \"No no no please it HURTS!\" she wailed, trying to escape his cock as he held her beneath him.\n\n\"Shhh, relax yourself, little wife. It will hurt less. Mmm, it has been so long... it is easy to forget how pleasant this feels.\"\n\n\"Ohhh, no, please!\" she begged, panicking as he held her down. \"Stop please!\"\n\n\"Shhh. Do you wish to sleep through this part, little wife? Dream it better? Sleep,\" he whispered, stroking her face.\n\nAurora looked down at Ephram as she rode him, his cock filling her so full she felt stretched beyond her limits. It was bliss and it was torture as she rolled her hips over him, holding onto his hands as he balanced her. \n\n\"You wish to come again?\" he asked in a whisper and she felt the whisper echoing around her as if she were hearing it from two places.\n\nShe nodded, hardly understanding the question. Of course she wanted to come again, she never wanted to stop coming!\n\nHe reached down and put his hand on her belly, holding her upright as she rode him. His thumb eased down and rolled over her nub, sending true pleasure spiking through her. She threw her head back and when she did, she launched herself off of him somehow and she was on her back, bucking and screaming as the orgasm hit her, cascading through her and shattering every bone in her body with shards of euphoria. \n\nShe came down and she was falling. Falling in the cavern, off the nest and down below. Her bones lay shattered there on the ground. She could not move, only watch as he looked down at her, smiling proudly at what he had done.\n\nShe smiled back weakly.\n\n\"You are finally awake,\" Ephram purred, nuzzling into her neck. \"I have never sent anyone off the edge with pleasure while also in a dream. I feared you lost yourself for a time. How do you feel?\"\n\n\"Sore. My whole body aches like I really did shatter on the stones beneath.\"\n\n\"You came hard, more than once. Your body is not used to it. Do not fear, you will be used to it very soon. How is... the rest of you?\"\n\n\"Also sore,\" she mumbled, blushing and looking away.\n\n\"You are hungry. I woke the humans below. They are bringing food, among other things.\"\n\n\"What kinds of things? Are they alright? My father, is he alright? My brother?\"\n\n\"Fine. They know their mistake now, all of them. They are bringing those to serve as well as those I asked for. Your body needs true sleep now, little wife. I will wake you soon.\"\n\n\"May I have clothes?\"\n\n\"I told you. Clothes do not have a place here. Here you are as I am. Are you cold?\"\n\n\"Very.\"\n\n\"Then sleep close. I will keep you warm. They are bringing more blankets and pillows for the nest.\"\n\nAurora turned her face into his chest, exhaustion winning out quickly over her discomfort. Her dreams were her own this time, but she still dreamed of him.\n\nOf them.\n\nShe woke when he jostled her awake what seemed like moments later. \n\n\"They are here, the first of them. I will retrieve them. Stay away from the edge.\"\n\nEphram stood and eased her to the bed as he did, then stepped back and began shifting, morphing as he raised into the air and flapped his massive winges. Aurora stared at him, a little in awe as he lifted higher, then spun away, gliding down into the cavern and disappearing into the darkness. \n\nShe sat up, hugging herself and wrapping in one of the blankets as she waited. She did not have to wait long, she heard the flapping of his wings before she could see him and she watched curiously as he hovered above her and dropped a large bundle from one claw and a screaming girl from another.\n\nAurora knew her, she was one of the castle servants, young and beautiful. She worked in the kitchens, but was often seen coming from her fathers rooms late at night. Everyone knew Leonora.\n\nEphram dove away again and Aurora watched as Leonora rolled to her hands and knees and looked around, still wailing. \n\n\"Is it going to eat us?\" she demanded when her eyes fell on Aurora.\n\n\"One can only hope if he does, he eats you first,\" Aurora said, rolling her eyes. She did not care for Leonora and her constant eyes at every boy who looked her way. Even Phillip.\n\nEphram returned moments later with another bundle and Henry, which surprised Aurora. He was bound and gagged, hog tied and he looked livid. She hurried to him and began untying him, removing his gag first. \"What happened?\" she cried.\n\n\"Your father! That creature demanded I come here and your father packed me up and handed me over! This will start a war, I promise you!\"\n\n\"It isn't my fathers fault! He was only doing what he was ordered to do! Don't pull so, you are making it too tight to untie. Leonora, look on those bundles, see if there is something I can use to cut him free.\"\n\n\"You aren't a princess here! You don't get to order me around anymore!\"\n\n\"You say that as if I have ever spoken to you before! Be human for once and just look, can't you see he is in pain?\"\n\n\"Why do you care, do you know who he is?\"\n\n\"He is here with us now, a prisoner! Oh, go cry and be useless then!\" Aurora said angrily.\n\n\"The front band of my pants, there is a small knife sheathed behind my belt. Be careful,\" Henry grunted, his face red from his discomfort. \n\nAurora reached around and in carefully, ignoring how embarrassing it should have been. She felt like she knew this man top to bottom and inside and out at this point. She found the small dagger and began cutting him free. \n\nWhile she worked, Ephram returned with another bundle and Phillip. He was not tied. He did look terrified and spooked as he sat stunned, looking around.\n\n\"Phillip!\" she called and he turned to her, his face going concerned.\n\n\"Be careful! He fought like mad, he may...\"\n\n\"He's hurting!\" Aurora said quickly, turning away from Phillip as he moved to take the knife from her. \"He won't hurt me and Ephram won't let him hurt anyone else.\"\n\n\"You can't know that! And Ephram? Like... the legend of the dragons?\"\n\n\"I don't know that story, you will have to tell me later. Help me!\"\n\n\"Aurora!\" he said in frustration, but helped her, taking the knife and cutting Henry free.\n\nThe first thing Henry did was roll flip and disarm Phillip, taking back his knife. He stood, his face still red as he looked around, tucking his knife away. \n\nLeonora went to him pleadingly, looking for comfort from him. He looked the servant over consideringly, then moved away from her, looking over the edge. \"Is there any way down?\" he asked loudly.\n\n\"Only flying, from what I have seen,\" Aurora answered. She went to the bundles and began opening them. While she was sorting blankets, Ephram returned with a large crate, setting it down gently on the edge.\n\nAs soon as he coasted down and away, Henry ran to that edge and tried to watch where he disappeared to. He stayed there, watching until Ephram returned. Ephram dropped a bound and gagged Amir and Torsten. Henry watched him leave again, but came away from the edge when Aurora called to him to help her untie the others. Amir was just as furious as Henry, but Torsten just looked stunned. It was him Leonora went to hugging him and cradling his face, looking him over.\n\nAmir was pacing and cursing as he looked around the edge of the nest and even tried to climb up on the perch to see what was up there and if there was a way down on the other side. \n\nEphram returned with another bundle and a bound Ekon. He was unmoving and unresponsive as he was untied and Henry said that he had been knocked out with something in his drink. He would come to in a few hours. Two more servants were delivered, another female and one of the stable hands.\n\nEphram landed in his perch, shifting his feet slightly as he watched all of them clustered below in the nest. He hopped down, causing shouts and screams, but shifted into his human form just before landing. He stood before all of them, looking down at them.\n\n\"Wife,\" he said angrily, and she knew what he wanted. She stepped away from the others and stood near him, looking down. She could not face Phillip as this creature's wife. \n\n\"What do you want with us?\" Amir demanded. \n\nHenry was easing to the side, staying small, staying unnoticed. Ephram stared him down, watching him as if daring him to try it. \n\n\"There are rules here, humans. The first is that you will not try to harm me or mine. I cannot be killed, I cannot be harmed. Trying will only anger me. There is no escape, the only escape is death until I release you. Some of you are here as companions, some are here to serve the companions.\"\n\n\"I have heard a great deal about...\" Leonora began, her eyes wide with feigned awe as she stepped closer to Ephram, \"what dragons are capable of in human form,\" she purred, sliding her hand up his chest as she looked him over with interest.\n\n\"Wife,\" Ephram snapped, stepping out of Leonora's reach.\n\nAurora glanced up at him, then looked back down, turning towards Leonora. \"You won't touch him again. Ever. You are here to serve.\"\n\n\"But I could be so much more!\" Leonora said breathily, moving close to Ephram again, her bosom trying to heave out of her dress.\n\n\"You heard my wife. She does not like you, she wishes you were not here.\"\n\n\"She only disliked that her father found so much favor in me! I can show you why he...\"\n\n\"One more word, one more step out of line and I will cast you off of here. That goes for all of you. What I say is law. If my wife speaks, consider it as my words. Step away. Go back to your place in the back until I move you to where you will be preparing food. Those of you who will be companions and not servants, you will be staying here in the nest. The rest of you will be in the back, preparing food and other things. All of you, remove your clothing. There are no clothes here. Wife, drop the blanket. The rest of you, remove your clothing and put them away for when you leave. Not you,\" he said to Phillip. \"You and the Mjennic will not be staying, your services will no longer be needed.\"\n\n\"What? I volunteered to come! To be with her! You asked for volunteers first!\" Phillip said quickly, desperately.\n\n\"If you stay, you will be replacing a servant and will not be with her. She does not... have an attraction to you in that way. When the Mjennic wakes, I will return you both to the entrance. The rest of you, disrobe now! Or I will singe your clothes off as you wear them!\"\n\nAurora stepped behind Ephram and let her blanket fall. \"Please, Ephram, he wishes to stay and he is my only friend!\"\n\n\"Your body does not react for him as it does for the others. Even less than it did the Mjennic who spurned you.\"\n\n\"That... that isn't truly why they are all here, is it?\" she asked fearfully, peeking around Ephram to the men who were disrobing. \n\n\"It is. I will teach you that pleasures are not to be feared or held in contempt. Hurry, all of you. Bundle your clothes and I will store them near the entrance for when your year is up. I told you you are not staying,\" Ephram said irritably.\n\n\"I have to stay with her! You don't understand!\"\n\n\"You do not understand. She is my wife, she spoke vows to me. She will never be anything to you, boy.\"\n\n\"But when the year is up...\"\n\n\"You will leave and she will stay. She is mine forever.\"\n\n\"You will never release her?\" Phillip asked, choking up.\n\n\"Never.\"\n\n\"Then I will return home,\" Phillip said angrily.\n\nEphram laughed. \"You think to find a way to kill me? To save her? Why? She does not love you in that way, I have seen her heart! She thinks of your affection as a burden she is forced to return in kind because she grew up near you. She let you think she felt the same, knowing some day her father would take the choice from her hands and she would never have to break your heart. He would. She loves you as she loves a brother and cannot force herself to see you romantically or as a lover. Especially not a lover, even when I tried to force it. It is so strong in her she broke my compulsion. She will never see you that way.\"\n\n\"Aurora?\" Phillip asked softly, hurt in his tone.\n\n\"Go back and take care of everyone, my father especially. Let him know I am not being harmed,\" Aurora said guiltily, unable to look at Phillip.\n\n\"Aurora?!?\" he asked again, his voice raising an octave. \n\n\"Leave her alone, you are upsetting her,\" Ephram growled. \"Gather their clothing in that tarp there and hold on to it. You, move the Mjennic to the edge so I can gather him more easily.\"\n\n\"Let Torsten leave too!\" Aurora said quickly. \"There is no reason for him to stay!\"\n\n\"You should let me leave!\" Henry said angrily. \"I am not even from here!\"\n\n\"You do not want the golden haired lordling?\" Ephram asked Aurora.\n\n\"No. Not really... You can let them all go if...\"\n\n\"No. I will send the golden lordling back with the servants, to keep them entertained then. Save him back in case the other two need some respite from your... appetites.\"\n\n\"You say that as if I am...\"\n\n\"Enough. You four, gather all you need for preparing meals. Have it ready by the time I return!\" he growled, then turned and leapt off the side, transforming in midair and soaring around the huge cavern. He came back up and hovered, grabbing Ekon and Phillip in his massive claws and taking them away along with the smaller bundle of clothes.\n\nAurora immediately knelt and pulled the blanket back up, covering herself.\n\n\"What does he mean with all of this?\" Amir asked, his hands on his hips, proudly displaying his manhood. He looked exactly as he had in the dreams Ephram had given her.\n\n\"My my,\" Leonora said huskily, moving closer to him and looking him over. \"Aren't you quite the treat?\"\n\nAmir leered at her, smirking, but he turned back to Aurora, expecting an answer. \n\n\"He thinks... he said I am too... prudish. He means to break me of it, I think. That's why he brought all of you, the men who fought for my hand, here. He thinks it meant more to all of you than just a purse and a political match up.\"\n\n\"So you did know it was real,\" Torsten said, surprised.\n\n\"Not until he told me.\"\n\n\"So what does he intend to do with us?\" Henry asked darkly.\n\n\"What do you think?\" Amir asked, smirking. \"He intends to watch us fuck his wife. That's why he sent the others away, because she was not attracted to them. And she is sending golden boy away, I am guessing for similar reasons,\" he laughed. \"That is why we are here, isn't it? Why we were forced to come? You want us to fuck that tight little cunt of yours?\"\n\n\"Don't be vulgar!\" Henry snapped, but he was looking Aurora over now as she blushed furiously. \"Perhaps this year will not be so bad,\" he shrugged. \"I may not even kill the creature until almost the end.\"\n\n\"Why send me away?\" Torsten asked, actually sounding upset.\n\nAurora looked down at her hands. \"He... he made me dream of all of you. The dreams... I think they were all very real in their own way. I decided based on how you were in those dreams.\"\n\n\"Did I do something wrong? Because if I...\"\n\n\"No... no. It's just... One is more than enough. Two is too many. Three is more than I can handle. There is no reason to add a fourth.\"\n\n\"Don't worry my lord,\" Leonora said throatily. \"I will keep you more than happy to be here.\"\n\nTorsten gave her a curt nod, but he still looked wounded as he looked at Aurora again. She could tell he was a man used to winning girls over with his looks. He didn't have Amir's fiery passion or Henry's sweet and gentle loving nature. Also, she simply didn't like the way he made her chase him and work so hard for his attention.\n\nEphram returned and grabbed up the large crate full of cooking supplies, heading the opposite direction in the cavern with it. Henry watched every move he made carefully, then moved closer to Aurora.\n\n\"When he is human, is he vulnerable? Can he be killed?\"\n\n\"I don't know. I know next to nothing about him save that he is angry at being forgotten for so long. I have been asleep for most of the time I have been here, that is part of what he does. He can make people sleep, and dream.\"\n\n\"And you feel the dreams are true dreams?\" he asked curiously.\n\n\"You mean do I think they are based in reality?\" she asked. She glanced at Amir's nude form and blushed, looking away. \"I think they are. He had... too many things right to not actually know. He has a way of reading people and knowing things.\"\n\n\"So what was it I did that made you not want me?\" Torsten asked, his tone touching on anger.\n\nAurora felt frustrated. That was what he was focusing on? \"You tease too much, you want to be chased. You want a girl to come after you and work hard for you. Part of it is in fun, but mostly it is ego. I knew his plans for me and I knew three of you plus him was going to be an issue, so I made the decision based less on you and more on them. Henry is sweet and loving and attentive and Amir is passionate, in command and all consuming.\"\n\n\"I think the dreams got it pretty damn close,\" Henry said with a smirk as he went back to the edge to watch for Ephram.\n\n\"Mmm,\" Amir agreed, looking Aurora over again. \"When we leave here, perhaps you will come back with me.\"",
        "\"I told you, he made me say vows, we are married.\"\n\n\"Oh, I was not asking, that was a statement.\"\n\n\"We will find a way to kill that thing,\" Henry whispered as Ephram flew back into the cavern and up to the nest. \n\nHe took hold of the two servants in the back who had been staying quiet, the girl screaming as he lifted her, then took off again back the way he had come.\n\nHenry watched, his look calculating. \"I think he is vulnerable as a human, he must be. There has to be some way to kill him.\"\n\n\"If you try, Henry, you will only anger him.\"\n\n\"Heinral. My name is Heinral, I only used Henry for the tournament,\" he said distractedly, going to his stomach at the edge to try and look under the nest.\n\n\"Tell him you want to keep me here,\" Tolsten said suddenly. \"Let me prove to you that I am not like that.\"\n\n\"My lord, I told you,\" Leonora said sweetly. \"I will keep you happy, make you glad you don't have to stay here under his constand eye.\"\n\n\"That's not the point!\" Tolsten said angrily, pulling his arm away from Leonora. \"When he gets back, tell him! I want the same chance they get! And I want to help destroy him and get away from here!\"\n\n\"Three would be better than two,\" Heinral agreed, standing up. \"The three of us would have a better chance to overpower him and destroy him.\"\n\nAurora looked at all of them, then at Leonora who was scowling at her. She nodded. \"Go back for now and I will send for you. So it seems less suspicious.\"\n\n\"You promise you will?\" he asked urgently as Ephram was returning.\n\n\"Yes. I will send for you.\"\n\nEphram snatched up Tolsten and Leonora and carried them off.\n\nAurora stood alone with Heinral and Amir, both of them looking down at her. Amir gave her a smirk, but Heinral closed the distance after a moment and touched her cheek gently with the back of his hand.\n\n\"Be careful,\" she said softly. \"He is oddly jealous of some things, but not others.\"\n\n\"He brought us here to fuck you, he can't be too jealous,\" Amir laughed, looking around again.\n\n\"I think it has more to do with me. So long as I do not... have feelings for anyone and it is just...carnal. He wants my heart.\"\n\n\"And do you fear losing your heart to me, little one?\" Heinral asked, his voice a low dulcet.\n\n\"I just told you to be careful on how you touch me and speak to me in front of him. I don't know yet what will bother him.\"\n\n\"So these dreams,\" Amir said, circling back around to her. \"Tell me about them.\"\n\nAurora blushed and turned away from both of them.\n\n\"I would also like to hear,\" Heinral said, amusement coloring his voice.\n\n\"Is that really what you are thinking about right now?\" she asked, her face burning with shame.\n\n\"It is a pleasant thing to dwell on,\" Amir laughed. \"If one must be distracted, I cannot think of a better way.\"\n\n\"Indeed. So tell us. These dreams, how real did they feel? How much detail? Would you like to...\"\n\n\"I think we should focus on something else! When Ephram returns, he will force the conversation that way eventually, you can worry about it then! Know this, I am not willing. I do not want this. Anything he forces me to do is against my will!\"\n\n\"From the way you spoke, you seemed to have enjoyed...\" Heinral began.\n\n\"A dream is not the same as a true violation!\" she interrupted vehemently.\n\n\"If I am required to bed you, girl, I will have no issues. Especially if he threatens me. I will make you enjoy it, to be sure, but I will do it if you are willing or not,\" Amir said with his sly smirk. \n\nAurora looked away again, her cheeks burning with anger and shame now. \n\n\"It will be a moment before he returns, I am thinking,\" Heinral said gently. \"If he is settling them in, explaining their duties. Come and sit down with us a moment.\"\n\n\"Why?\" she demanded suspiciously.\n\n\"We may not have much opportunity to talk. I wish you to tell me everything you know about this creature, everything he has done and said since you arrived.\"\n\n\"I told you...\"\n\n\"Just try and remember, even if you think it might not be important. Come and sit,\" Heinral cajoled, barely touching her shoulder to guide her to the pile of cushions.\n\nShe let him guide her and sat down, pulling the blanket higher and wrapping another around her shoulders. Heinral tossed a blanket over his lap, but Amir lounged, displaying himself proudly. \n\n\"So tell us, little one, tell us about arriving.\"\n\nAurora told them everything she could remember from the time she woke up. She glossed over the dreams, but tried to remember every detail of the conversations.\n\n\"When you and he... were intimate, did you feel as though he were vulnerable at all? Did he seem... less strong?\"\n\n\"He is not all powerful. From what he said, he tried at the tournament and he didn't win every competition and he didn't beat anyone with ease. He had to work for it,\" she said thoughtfully. \"I don't know how vulnerable he seemed, he could still use his dream and sleep magic and I was... in too much pain to pay close attention. He put me to sleep so that it would not be so bad.\"\n\n\"Is there anything else you can think of? Something he did or said that might make you think he had some sort of vulnerability?\n\n\"No... but I would not know how to tell. I only know the distress I have been in.\"\n\n\"It's all right, little one,\" Heinral said soothingly. \n\nAmir snorted. \"You keep calling her that. I bet that's the first time YOU have been able to say that to anyone.\"\n\n\"I've had no complaints,\" Heinral said with a shrug. \"If you think to goad me about my stature, you are off your mark. Underestimate me. I dare you,\" he said with a toothy smile that wasn't friendly at all. \n\n\"Oh, I will not. I have seen enough of you to know that you use it to your advantage well. But, when one knows to keep an eye on you specifically, you lose some of it, don't you?\"\n\n\"Like when someone knows how overconfident you are and you will rush in for the attack without bothering to defend?\"\n\nAmir chuckled. \n\n\"Remember you are both working together,\" Aurora said cautiously.\n\n\"We are only feeling each other out, little one,\" Heinral said congenially. \"We will have a truce, for now. But. I get the girl when we destroy this creature.\"\n\n\"We shall see,\" Amir laughed. \n\n\"The girl can make her own choices if we ever get out of this,\" Aurora snapped irritably. \n\nAmir laughed and blew her a kiss. \"You would not want him anyway, you realize who he is, don't you?\" Amir asked.\n\n\"I know who he is,\" she answered, falling back against the cushions.\n\nThe flapping of wings made her sit up quickly as Ephram returned and flew up to the nest. He transformed at the last second, dropping down close to her, across from the other men.\n\n\"Sleep,\" he snapped at the men and both of them went limp, dropping down with their eyes closed. Ephram sat near her, tugging her blanket loose. \"I wish to have you again. Now.\"\n\n\"Please? I still hurt and...\"\n\n\"No, wife. No objections,\" he snapped, pushing her to her back as he pulled the blanket away. He pushed her legs apart roughly as he moved over her, his massive hand on her face. \"Do not fear,\" he whispered, then made himself smaller until he was no bigger than Heinral. \"Better?\" he asked.\n\nShe could only nod, still terrified. \n\nHe gripped her leg, pulling it high and pressed his cock against her pussy, shoving in impatiently with a growl. She let out a whimper and turned her face away, closing her eyes. If he noticed or cared, he did not say as he thrust, grunting and growling with need. Aurora gasped slightly when the pain eased his cock hitting a spot inside of her that made her eyes open wide with shock. It felt... good. He growled again and she felt him swell inside of her, growing slightly as he shifted slightly. She realized he was losing focus and reverting to his natural human shape as he lost himself more and more, gowing and shifting in small spurts. He stretched her more and more as he grew and she was whimpering and then crying as he rammed into her. When he was full sized, back to his natural state, she beat on his chest, shaking her head, pleading with him. He growled angrily, then shoved into her and throbbed, squirting and filling her with his scalding hot seed. \n\nHe pulled back quickly, leaning back and trying to catch his breath. Aurora curled away from him on her side, pulling the blankets up as she wiped her tears away. \n\n\"I have forgotten how frustratingly tiresome some humans are, like the one I just took back,\" he growled. \"But it is nice to have these pleasures back again. The pain will not last, wife.\"\n\n\"My name is Aurora!\"\n\n\"Human names begin to jumble together unless I focus. Wife is easy to remember.\"\n\n\"If I am truly a wife to you, then you will make an effort to remember my name! It is not so hard to remember and it is demeaning for you to just call me 'human' or 'wife', like I am not worth more than that!\"\n\n\"I do not like your temper. The pain will not last AURORA, but it may take time for it to leave completely. You all grow tiresome. Sleep,\" he commanded.\n\nShe knew the dream immediately, once again. Heniral was in front of her, giving her his half smirk as he stepped closer. He took her face in his hands gently and turned it up to him, leaning in to kiss her gently, sweetly. He pulled back and pushed her hair behind her ear, then stroked her cheek. \n\n\"Do you know how beautiful you are, Little One?\" he asked softly.\n\nAurora blushed and dropped her eyes. Something was different about this dream and she thought she understood it. They were sharing a dream somehow, she and Heinral. His mind was here as well. Somehow that made it more... awkward. \n\n\"Little One, don't be afraid, come,\" he said gently. He led her to a pile of pillows and a blanket, pulling her close as he laid down with her. He held her against his chest, stroking her hair. \"I will hold you here if that is what you want.\" \n\nShe let herself relax against him as he stroked her hair and kissed her head, her body reacting to his touch. She felt warm all over as she snuggled into him happily. \n\nHe tilted her face up and kissed her softly, smiling at her as he held her face. \"Do you wish more, Little One? Do you want me to show you how beautiful I can make you feel?\" he asked, his voice throaty.\n\n\"How?\"\n\n\"Let me show you,\" he whispered, then kissed her again, moving down her jaw to her neck and down. He lingered at her breasts, sucking and pulling on her nipples as she sighed and slid her fingers into his hair. After a few moments, going back and forth several times, then moved down again, kissing her belly and then her hips and thighs as he turned her to her back and parted her legs. \n\nShe was languid and relaxed, letting him do as he pleased, letting herself get lost in sensation. It felt amazing, his hot lips and mouth and tongue on her body. When he moved back to kiss her between her legs, she let out another sigh of pleasure.\n\nHe licked along her slit gently, barely touching her with his tongue, ticking her slightly and making her shiver as she smiled. He purred happily, loving her reaction as he lifted up to look at her, kissing her bud along the way. \"You like this, my love?\" he asked, then swirled his tongue around her bud.\n\n\"Mmmmm,\" she agreed, her fingers in his hair.\n\nHe chuckled and pulled her hips closer, burying his mouth in her pussy, pulling her clit up into his mouth and sucking and flicking and swirling, making her writhe and moan. He relished in her reactions, feeding on her pleasure. It was bliss, but it was also maddening, there was no payoff. It was just pleasure that hit a plateau and stayed there. \n\nShe couldn't stand it anymore, twisting away from him and sitting up, tackling him to put him on his back. She wrapped her lips around his cock, moving down to try and mimic the way they had fucked her mouth in her dream. He let out a groan as he fell back and held her hair gently.\n\n\"My Little Love!\" he breathed, \"That is wonderful, perfect! You are wonderful. Oh, My Love, just like that! Nnn, I adore you, My Love, I am going to keep you when we leave here! Take you home with me and make you a queen. My queen, my perfect Little Queen. I need you, I want to make love to you\" he groaned. \"Tell me you want me!\" he panted.\n\nHe moved, pulling her off of him and laying her back as he pushed her to the bed and kissed her passionately, full of adoring need. He sucked in a breath as he slid his cock into her wet and waiting pussy. \n\n\"My sweet Little One,\" he whispered, \"you feel amazing! Ohhh, my lovely little one,\" he moaned, then kissed her again as he made love to her.\n\nAurora was in heaven as he held her and carressed her and whispered to her how much he adored her, her heart was so full and the ecstasy of making love to him was perfect. It was endless, hours of holding each other and kissing and making love and whispering to each other. \n\nWhen the dream faded, Aurora let out a cry of loss, her heart breaking.\n\nShe was standing again suddenly and Amir was across from her. Like Heinral, he was sharing the dream with her, she could feel that.\n\nAmir gave her a smirk as he looked her over, then moved closer, taking hold of her jaw and turning her face up to his. \"Mmmmm, Aurora... by the time I am done with you, you will be begging me on your knees to come home with me when we leave here,\" he growled.\n\nHe gripped her hair with his other hand and pulled her down to the bed before kissing her. It was full of passion and desire and pure lust. It was thrilling and exciting and her body responded in a primal way. He grabbed her leg and yanked it up, pulling it around his waist as he growled low in his throat as he bit her lower lip gently, pulling as he looked down at her. \n\n\"You are mine, Aurora. Mine and no one else's, you remember that. Your body, your heart, your passion, it all belongs to me. Your body even knows it. Say it, Aurora. You are mine.\"\n\nShe looked up at him wide eyed, then nodded minutely, her body needing him. She would have agreed to anything he said at this point.\n\n\"Say it!\" he growled, pulling her hair roughly, sending a thrill through her.\n\n\"Yes! Oh, please yes! I need you, Amir!\"\n\n\"And you will have me,\" he whispered. \"I will be yours and you will be mine. Always.\" He lifted slightly and moved up, pulling her leg with him as he pressed his thick cock against her wet pussy. He pushed in with a rough thrust and she gasped, her eyes rolling up in ecstasy. \"Beg me to fuck you,\" he demanded, holding himself deep inside her. \"Tell me you want it, tell me you are mine.\"\n\n\"I am! Please, please, don't stop! I need you!\"\n\n\"Say it Aurora!\"\n\n\"I am yours, Amir, please!\" she begged, trying to roll her hips under him.\n\n\"You will go back with me and marry me, say it.\"\n\n\"I will!\"\n\n\"Say it!\"\n\n\"I will go back with you and be your wife! I want you, Amir, please! I never want you ro stop making love to me!\"\n\n\"No, Aurora. You want me to fuck you. Say it.\"\n\n\"I... I want you to fuck me! Pleeeeease!\"\n\nHe laughed low in his throat as he ground his hips into her, pushing hard against her inner wall, then pulled back and began fucking her as hard and fast as he could. Her screaming yips fueled him to ram faster and harder, growling through gritted teeth. \n\nThe passion, the primal, frenetic need between them, Aurora was overwhelmed by it, losing herself in his rough grip and thrusting demand.\n\n\"You are mine!\" he raged, moving his hand and shoving his thumb in her mouth as he held her face. \"Suck!\" he snarled.\n\nShe sucked, her eyes closing as she moaned around his digit.\n\n\"I will never let you go, Aurora, never. I will make you feel this way the rest of your life. You will never know a night without passion and bliss, never!\"\n\nAurora felt another thrill go through her with the promise. She wanted that, wanted to hold on to that and keep it in her fantasies. She couldn't imagine anything better than this amazingly pure passion.\n\nHe began to fade and tears leaked from her eyes as she wailed. \"Noooo! No!\"\n\nShe was standing and Ephram was there, pacing around her as he looked her over. \"Your need is high,\" he finally said, his voice rough with emotion. Jealousy. \n\nShe did feel full of need. She went to him and grabbed his arm, pulling insistently down to the bed. He let her, his eyes watching her as she moved over him, kissing him, sliding her fingers into his wild hair. He took hold of her, kissing her back roughly, possessively as he rolled over her, putting her on her back. She didn't wait or ask, she wrapped her legs around him and tried to pull him closer and into her.\n\nHe smirked as he yanked her up and kissed her, his mouth hungry and insistent, demanding. \n\nShe wanted more! She tugged insistently, trying to pull him higher, needing him so badly!\n\n\"Patience, wife,\" he whispered. \"You will find no relief here, I will have to bring you out for that. Do you want relief?\"\n\n\"Yes! I NEED it, please!\"\n\n\"You will be a wife to me?\"\n\n\"Yes! Pleeease, I need you to...\"\n\nAurora jerked awake and looked up at Ephram and his smirk. \"Remember your promise, wife,\" he whispered, then leaned in and kissed her.\n\nShe jerked back, then forced herself to stillness, still so full of crazed want. She let him kiss her, but writhed under him, wanting relief, needing it. When she reached down to give herself release, he grabbed her wrist and pinned both of them above her head.\n\n\"You are mine to please,\" he growled, then bit her jaw lightly. He kissed her again, forcefully enough to almost hurt her and reached down with his free hand. \n\nShe let out a wail of relief as he touched her and came in seconds, screaming into his mouth and he moaned. She collapsed under him, but he did not stop, sliding his fingers down further and sliding one into her as he rolled his palm over her clit. She whimpered with pleasure into his mouth and tried to tug her hands free. He let her go and she wrapped her arms around him, pulling his body in closer to hers. When she came again with a keening whimper, he chuckled as he pulled back and watched her with a hooded expression. \n\n\"Now, wife. It is my turn,\" he whispered, biting her jaw again before moving over her as she lay languidly, her eyes closed. He pulled her legs wider and she opened her eyes to look up at him with unfocused eyes. \n\n\"Can... can you make yourself smaller again?\" she asked drowsily, her hands going to his shoulders. \n\n\"No, wife, you must get used to me,\" he breathed, guiding his cock to her slit.\n\nShe held her breath, her eyes widening in fear as he eased into her. She tensed up, but it wasn't nearly as bad as she anticipated. She relaxed, his cock filling her as her all the way to her wall. She sucked in a breath, the pleasure outweighing the pain by a thumbnail. It was overwhelming, everything heightened by how sensitive she was. She cried out his name as she rolled her hips up to meet his thrusts and he paused a moment to look down at her, his eyes shining.\n\nShe had a moment of clarity, realizing that him hearing his name on her lips had pleased him immensely. He wanted her to show him affection. \n\n\"Don't stop, husband!\" she cried, pandering a little.\n\nHe resumed his thrusts, holding himself up on his hands so he could look down at her. She meant to look up at him and try to look at him lovingly, but she lost herself quickly. That pleased him just as well, watching her eyes flutter shut and bliss took over. She screamed out his name again just before she came again and he smirked as he watched her. He came after her, the excitement of his name on her lips bringing him quickly. \n\nHe pulled back, laughing darkly with a smug smile. Aurora could only lay there limply, completely spent. \"Lay with me?\" she asked, her voice almost a whisper.\n\nHe dropped down next to her, leaning on an elbow and looking down at her. She turned her face to him and sighed sleepily.\n\n\"Why am I so tired when I just slept for so long?\" she asked.",
        "\"Because it is not true sleep.\"\n\n\"Oh. I need a bath,\" she sighed.\n\n\"After the others are awake. Their needs are high, they are half mad with their frustrations. Look at them.\"\n\nAurora lifted her head and looked and she could clearly see Amir and his very erect cock jutting up as he panted and writhed. Heinral had fallen on his side, but she could see his erect cock pointing up and almost quivering with need for release.\n\n\"Go to them. Release their needs.\"\n\nAurora tensed all over. \"Must I?\" she asked pleadingly. \"Can't I just lay here with you and you wake them up to see to their own needs?\"\n\n\"No. You will learn not to be ashamed of this, wife. Go to them, relieve their needs. Go.\"\n\nAurora got up, her body stiff and sore, but she managed to stumble to Amir who was closest. She hesitated, looking at his large cock, wondering how she was supposed to do this. Finally, she took hold of it with her hands and stroked gently.\n\n\"More firm,\" Ephram instructed.\n\nAurora glanced back at him, watching her. She turned and made her grip more firm as she began stroking up and down. It was over in seconds, his cock exploding cum out and onto his belly as he moaned and woke.\n\n\"Aurora!\" he whispered hoarsely, blinking at her. \n\nShe turned away quickly and crawled over to Heinral and wondered how to go about this. She pushed his shoulder as hard as she could until he was rolled onto his back, then turned and looked down at his perfect cock. She took hold, but she thought about her dreams and what she had done, then put her lips on him and pushed him into her mouth. He groaned and jerked, then his hands went to her face gently as he let out a cry of shock. He came, shooting into the back of her throat and she swallowed convulsively, grimacing at the taste. \n\n\"Oh, my sweet little queen,\" he whispered, pulling her up to embrace her.\n\nShe pulled back quickly, looking down as she backed away from him on her hands and knees. She fled back to Ephram, hiding her face.\n\n\"You are not done, wife. Their needs are still high, look at them. They are ready again, just like you were. One was not enough.\"\n\n\"Please Ephram! I will learn to please you, but don't make me do that for them!\"\n\n\"I have bid you to do something, wife. Go.\" He made his voice stern, but she could tell he was pleased.\n\nShe stood and went to Amir, his cock already hard again as he looked at her hungrily. Ephram was right, one was not enough, he was still half mad with lust. She knelt, then hesitated, but he did not. He sat up and took her hair, pushing her to the bed and rolling over her. She could feel his cock nestled along her ass as he leaned over her.\n\n\"He gets a mouth while I get your hand?\" he whispered in a growl.\n\n\"You are too big!\" she wailed in a whisper.\n\nHe made a noise low in his throat and yanked her to her hands and knees, one hand on her hip, the other in her hair. He let go of her hip to guide his cock to her slit and shoved in without warning. He gripped her hip again as he held himself there and yanked her head back by her hair. He leaned over her. \"You are mine, Aurora. Remember your promise to me. Remember your oath.\" He leaned back and began ramming into her hard and fast, making her cry out in shock and pain.\n\n\"Please! Not so hard! Slow down, please!\"\n\nHe roared through clenched teeth and rammed into her, spilling hot cum from his throbbing cock. As soon as he was done, he yanked her head back even harder and leaned over her again. \"Mine. Remember it. I will fuck you into oblivion for the rest of your life.\" He let her go and shoved her to her stomach as he pulled out of her. \n\nHe fell on the bed next to her and she rolled away quickly, wiping tears from her eyes. Heinral was there suddenly, turning her face to his and thumbing away her tears before pulling her to lay on the other side of him. \n\n\"Shhh, my love. It's alright, I have you,\" he whispered, kissing her temple gently. He stroked her face, her jaw and her neck gently, whispered soothing words and comforting her, even though she could feel his need pressed against her thigh.\n\n\"Get on with it or let her go!\" Ephram roared angrily. \n\n\"My little love, do you want this or no? I won't if you...\"\n\n\"Just do what you need to,\" she whispered. \"He commanded me to... satisfy your needs.\"\n\n\"My little queen, say the word and I won't...\"\n\n\"Please? Just do what you need to and don't show too much affection? He doesn't like it and I don't want to see you punished for it.\"\n\nHe gave her a slight nod, looking sad, then moved over her, easing her legs apart. He eased into her with a sigh and twined his fingers through her hand on the opposite side where Ephram couldn't see. He was slow and gentle, making love to her as he held her. It did not take him long, coming inside of her with a sigh of pleasure before kissing her temple again. He rolled next to her on the other side and laid down, holding her against him. Amir moved closer, pressing against her from the other side and laying down, putting a possessive hand on her hip as they sandwiched her in between them, both of them letting out a sleepy breath and relaxing. \n\nShe was warm and comfortable and so tired, she almost immediately started drifting off.\n\n\"Wife,\" Ephram growled.\n\nWith a shock of alarm, she sat up, untangling herself from their arms, then hurried to Ephram. She stopped next to him and pressed her head to his waist. \"I am so tired my husband, may we lay down and just sleep for a while?\"\n\n\"After,\" he said harshly. \"You two, get up! You, the small one, hold her against you and stand near the edge, all of you,\" he demanded, then ran and leapt off the edge, transforming as he did. He soared around the nest and Aurora hurried to Heinral and let him hold her as they moved to the edge. Ephram grabbed Amir first, then circled around and grabbed Heinral and Aurora and she squealed in fear as they soared over the seeming bottomless abyss below them.\n\n\"I have you my love,\" Heinral whispered. \"I won't let you go.\"\n\n\"I... I don't like heights.\"\n\n\"Look at me, my queen, focus on me. Tell me what sort of wedding you would like? Spring? Summer?\"\n\n\"Winter. I like the winter.\"\n\nHe chuckled. \"Good, it is cold where I am from, a lot of snow. I would love to see you all in white, surrounded by the snow. My little snow queen. Beautiful red winter stars in a bouquet, red trimming the white halls. We would make it a grand holiday for the entire kingdom. Would you like that, my little love?\"\n\n\"Something small and simple,\" she answered, still trembling.\n\n\"I can see that too. You aren't as big on spectacle as your father, are you?\"\n\n\"No.\"\n\n\"Something small and simple then, a simple dress, a red winter star in your hair. Taking you away to one of the winter cabins near the mountain in the woods. Spending a week just you and I...\"\n\nHe trailed off as Ephram slowed and pulled up, then dropped them in the pitch black, causing her to yelp in fear again. The hit a floor a foot away and she lay panting for a moment and being very still in Heinral's arms as she felt the buffet of Ephram's wings. \n\nAmir moved closer, putting a hand on her shoulder and pressing against her. \"Are you alright, Aurora?\" he asked, his voice pitched low.\n\n\"Yes,\" she whispered as she heard Ephram land ahead of them, still in dragon form.\n\n\"Don't worry, we will protect you,\" Amir promised. \"Stay close.\"\n\nEphram roared and flame shot out, lighting up the large cavern in front of him. They watched as Ephram lit the three braziers, then heated the floor. Amir stood and tried to help her stand, but Heinral kept hold of her and pulled her up as he stood. They moved forward as one, Amir scowling at Heinral and Heinral ignoring him as he watched Ephram carefully. He looked around the cavern, his eyes taking every single thing in.\n\nEphram transformed and turned to them. Aurora pulled away from both men and hurried to him, pausing when the stone began warming under her feet. Ephram stepped closer as she hesitated and picked her up, holding her in one arm as he strode to the large pool in the middle of the huge cavern. He stepped right in and Aurora tensed, fearing the water would be too hot. It almost was, but it was bearable and she sighed as he sat down, easing her to the carved in bench around the pool. \n\nAmir and Heinral both stepped in, watching Ephram warily, then sat down separately so that the three men formed a triangle around the pool.\n\n\"You wished a bath, wife, did you not say that?\" Ephram asked.\n\n\"I did,\" she sighed, laying her head back. \"This feels amazing! So warm and relaxing. Can we stay here a while?\"\n\n\"A short time,\" he answered as she moved closer to him. He settled his arm around her awkwardly, mimicking what he had seen the other men do to her. She seemed to like it, snuggling in closer and pulling his arm down around her so she could hold on to his hand. After a few moments of her starting to slump, then jerking back up, he pulled her up onto his lap. He moved to the edge of the seat and laid back, letting her sprawl on his chest, all but her head and shoulders in the water. She was asleep in seconds.\n\nEphram laid back, very pleased, looking a proud challenge at the two men across from him. Amir looked around the cavern as if Ephram were of no import, but Heinral started back, a half smirk on his lips. \n\n\"How long have you been here, up in this mountain?\" Heinral asked, lounging back himself.\n\n\"Centuries. Millennia? I am no longer sure, I do not count the years.\"\n\n\"What do you eat in here if you have not left in so long to get food? Someone would have seen you.\"\n\n\"You assume I require food. I do not. I am immortal. Food is a pleasure I can enjoy if I wish to, in either form, but I do not need it.\"\n\n\"That is why you made them bring food and servants here, to cook for us? Not for you?\"\n\n\"Yes. Humans are weak that way, requiring food often.\"\n\n\"I can think of worse faults,\" Heinral shrugged. \"Have you always lived here, in this mountain?\"\n\n\"Yes.\"\n\n\"Did you create it this way or find it this way?\"\n\n\"My sister and I made it this way, but it was ready to be carved out, most of the cave already close to being as it should be. You are from across the ocean. An enemy to this place, yes?\"\n\n\"Yes.\"\n\n\"So why come, risk capture and worse for your ruse?\"\n\n\"I am confident I could have escaped easily if it came to that, but think of the reward if I had won? I would have, by the way, if you hadn't been a supernatural being, a dragon in human form with magic powers.\"\n\n\"No. I used no powers, just my own skill. I have gone below before, trained with the humans in their martial skills. More than once.\"\n\n\"I imagine the centuries here grow tedious, all alone. You spend most of your life sleeping though, do you not? Putting yourself in the dreamstate that you have been putting us in?\"\n\n\"I sleep for long amounts of time, yes.\"\n\n\"So what made you suddenly decide you wanted a wife? After a lifetime alone?\"\n\n\"You answered your own question. And she was the promised prize. I took her to teach those below a lesson about forgetting!\"\n\nAurora jerked awake when he yelled, lifting her head to look around. \"What?\" she asked sleepily.\n\n\"Nothing. Rest, wife,\" the grated.\n\n\"I will bathe and we can go back and sleep. It may be a bit too hot in here. Husband? Can you get the other man? Torsten? Henry and Amir do not get on with each other, but they both get on with him. He can bridge the gap, make it less tense.\"\n\n\"You grow bored of your toys? You wish a new one already?\" Ephram asked darkly.\n\n\"I wish for them to have each other for company when I am with you.\"\n\nHe made a noise, then set her back on the seat while he climbed out of the water. He went to the edge and shifted, taking off.\n\n\"Cleverly done,\" Heinral smiled.\n\nAmir said nothing, he darted across the pool and grabbed a fistful of her hair and her throat as he tilted her face up. He kissed her passionately, roughly, as he lifted her from the water and turned her, bending her over the edge of the pool. \n\n\"What...?\" she asked in alarm as he grabbed her hips and gripped his cock, guiding himself into her and slamming in as she let out a yelp.\n\n\"Amir! You are hurting her, stop!\" Heinral hissed.\n\n\"She is here for us to fuck and she is going to be mine when we leave this place! If she gets with child it will be mine! Back off little man,\" Amir growled, ramming into her from behind as fast as he could. \n\nHeinral made a noise, but leaned close to her and stroked her face. \"It's alright little love, look at me. When we get back, I need you to get him near the edge. Ephram. Get him near the edge and distract him, make it so his back is to us, can you do that?\"\n\nHer eyes were wild with panic, fear and pain, but she managed a nod as she grimaced.\n\nAmir finished in her and pushed off of her, going back to his seat to lay back and catch his breath.\n\n\"Are you alright?\" Heinral asked, pulling her down into the water and holding her. \"Be still little love, let me,\" he whispered as he slid his hand between her legs. At first she thought he meant to violate her as well, but when he slid two fingers into her, he was helping her wash Amir's seed out of her. She closed her eyes and let him, her face pressed to his shoulder. \"I need you to do as I asked, Little Love. I will take care of the rest. You can do that?\"\n\n\"Yeah,\" she nodded, still upset. \n\nWhen she heard the flap of wings, she pulled away quickly and ducked under the water so Ephram would not see she had been crying. When she came up, Heinral was back in his spot, lounging and giving Amir a seething look. Amir only smirked at him.\n\nEphram came striding up, pulling Torsten with him. Torsten looked shell shocked as he hugged himself, shivering. Ephram pushed him to the water and he stepped in gingerly, then half dove into the water up to his chin, still shivering.\n\n\"Are you cold? Or sick?\" Aurora asked him in concern and Ephram got back in the water.\n\n\"C-c-cold. It's so cold back there! Only the two cooks are on the level with heat. Please... ask him to take the other servant up there with them? She will freeze alone.\"\n\nAurora looked at Ephram who was looking down at her as if he dared her to ask. \"Husband? Is it truly that cold back there? And some have no clothes or blankets or heat?\"\n\n\"All who have been here have survived, she will be no different.\"\n\n\"But it is miserable! And so cold. Even huddled together we could do nothing but shiver. Please? Sha may cast herself over the side if she has to endure much more.\"\n\n\"You exaggerate,\" Ephram growled.\n\n\"No, the stone is cold and it seeps into you, all of you is so cold and nothing can get you warm!\"\n\n\"Ephram! Please?\" Aurora asked him, going to her knees next to him on the bench to hold his face in her hands. \"Just take her up with the other servants?\"\n\n\"You do not even like her.\"\n\n\"That doesn't mean she deserves to be tortured! Please? I know you aren't a heartless monster, I have seen the way you feel. You don't have to prove anything, I like the gentle man I know you truly are. Please, my husband? Do not torture her? I will be grateful to you if you do?\"\n\n\"Enough!\" he growled. He pulled away from her hands and got up again, storming away from the pool. \n\nAurora hurried to Torsten and hugged him, rubbing his arm and trying to warm him. Heinral moved to the opposite side and chafed his other arm professionally. \"You are a gentle soul, Little One,\" Heinral said with a pleased smile.\n\n\"Thank you, princess,\" Torsten chattered. \"For keeping your promise and for asking him to help her.\"\n\n\"Of course, are you still so cold?\"\n\n\"I feel like I will be cold forever,\" he whispered, still shivering.\n\n\"Just stay in the hot water until he makes us leave, then back there at the nest there are blankets. We will all keep you warm until you feel better, ok?\" she asked softly, pressing against his back and holding him from behind.\"\n\nHe took hold of her arms and held on to them as if he were afraid she would let go. Heinral kept rubbing his arms and his legs, warming him while Amir sat back watching.\n\nWhen Ephram came back, Aurora quickly pulled away and moved back to her spot, waiting with her head down while Heinral pulled Torsten to lay next to him. He held his face above water while Torsten curled up rigidly on the seat, still shaking.\n\nEphram got back in the water and Aurora immediately jumped up and hugged him. \"Thank you! Thank you. I knew you had a good heart even if you pretend to try and hide it,\" she lied, hiding her face in his neck. \n\n\"She screamed like a child when I left her with the servants and did not bring her with me. I have no patience with that human, next time I let her bones decorate the cavern floor.\"\n\n\"I appreciate the patience you showed with her,\" she whispered, then kissed his neck.\n\n\"I am ready to leave,\" he growled.\n\n\"Just a little longer?\" she asked, moving to his lap and putting her arms around his neck. She moved up and kissed him, initiating it for the first time as she straddled his wide lap. He held her against him and kissed her, until they were both lost in each other. \n\nAurora had no concept of how long it was when Amir spoke up. \"The water is starting to cool off,\" he called.\n\nShe pulled back and looked over her shoulder. Amir and Heinral were both out of the water and sitting on the edge with only their feet in. Heinral was still holding Torsten up so his face was above the water and Torsten looked like he was dozing and finally warm enough.\n\n\"We have nothing to dry off with?\" she asked, looking at Ephram.\n\n\"You will dry on the trip back,\" he purred, his hands going to her face and pulling her in for another brief kiss. He got up and she hesitated before getting out herself. Heinral was helping Torsten out and he looked exhausted. Amir only sneered at the two men as Heinral helped him to the edge. \"Double up,\" Ephram called as he leapt off the edge and transformed. \n\nAurora turned and Amir pulled her tight against him, lifting her up as Heinral gave her an apologetic smile and held on to Torsten. Ephram was more gentle picking them up this time, but she was still terrified as they flew over the endless drop. Amir did not try to talk to her or distract her with words, he kissed her forcefully, his need and passion trying to overwhelm her. \n\nWhen they were dropped, She immediately pulled away and got up, grabbing a blanket to wrap Torsten in as Heinral rolled him. She did not linger. As soon as Ephram changed and dropped down, she hurried to him, grabbing up her own blanket on the way. \n\n\"Keep him warm!\" she yelled back at the men as Ephram opened his mouth. She knew what was coming and she wanted them to have warning and to stay close.\n\nEphram hesitated and watched, then called out, \"Sleep!\" once they were situated. He looked down at her, his eyes going over her. \"Your heart is... large, wife. You care so much for people who are of no concern to you. Even people you have a dislike for. I do not understand it, but I find it is something I like about you. Come,\" he commanded, opening an arm to her. She went to him and he pulled her close as he laid down, nestling into his arms and arranging the blanket over her before softly whispering, \"sleep.\"\n\nImmediately, the dream felt different, though she knew it for a dream. She was in the woods, but in a clearing, wearing a dress. Ephram was there and he crossed the distance to her in the same clothes he had worn below for the tourney. When he touched her, she understood several things all at once. He wasn't a monster, not really, he just had no practice or patience with people, especially after as long as he was alone. He was unable to articulate his feelings or express himself unless he was angry, but she could feel it in him now. In the dream, his mind was able to get across what his mouth and actions could not while he was awake. He was lonely and wanted desperately to be loved. He was more than a little fond of her and he was terrified she could not care for him, so he held her at a distance and toyed with her instead, making her fake loving him in the hopes that she would actually fool herself into thinking it. He did not feel like he was worthy of love, so fooling her was his only choice. His heart ached with the years where humans were forced into his service and cringed and bowed and scraped, some pretending to adore him, but he always knew. No one ever truly cared for him, they just didn't want to die. He was a monster. It was an unending cycle. He would get lonely, demand his tribute and companions, they would serve him until he was so heartbroken he could no longer take it, then send them away and sleep for as long as he could. In his dreams, he was loved, but he had never known true affection.",
        "Her heart broke as she understood all of that in a split second before he blocked his emotions from her and led her to a blanket in the clearing. He pulled her to lay down and she pulled back and sat up, looking down at him. She looked over his face, running her fingers over it as she looked, finding every pleasant thing she saw in him and letting it fill her heart and eyes. She leaned close and kissed his lips, focusing only on how soft and full his lips were and how good they felt. She pulled back, smiling down at him as she stroked his face. \"My beautiful dragon god...\" she whispered, looking into his eyes. \"I cannot fathom why you would choose me. Of all the women in the world you could have worshipping you and you chose me? I am not worthy of you, but I am honored. I only hope I can make you happy.\"\n\nHis smile was more than pleased as he looked up at her. He pulled her to his chest and laid there holding her, stroking her arm and back and she filled herself to the brim with how good it felt and how content and comfortable she was, not allowing a single other thought into her mind. Only him, only the things she loved about him. \n\nShe did not know she could sleep in a dream until she was waking up still in the clearing. He held her hand and walked with her and she talked to him, laughing and teasing lightly, constantly touching him. \n\nShe didn't know how long they spent in the dream, but it felt like an eternity went by as they wandered the forest, curled in next to each other and slept and talked. She kept expecting him to take her, but he never did. He seemed content enough to just have someone to talk to and be with.\n\nShe woke in the nest, her stomach growling audibly. Ephram sat up and looked down at her, his eyes full of... fearful expectation. She smiled at him and reached up, touching his face gently. \"That was... beautiful,\" she said softly. \"Thank you.\"\n\nHis eyes lost the fear and he gave her a nod and got up. \"I will bring back food,\" he said before going to the edge and changing.\n\nAurora got up and went to the men, but they were still asleep. They didn't seem to be in tortured sleep though, sleeping peacefully. She felt Torsten and he felt more than warm enough pressed between the other two. \n\nShe went back to where Ephram had left her and curled up to wait, but her mind was racing. He wasn't a bad person, just so lonely and heartbroken. Maybe she could convince him to let the others go? She would have to try.\n\nEphram returned, dropping a bundle near her before shifting and dropping on the opposite side. When he did, the other men woke, sitting up and looking around. She opened the bundle and started laying out the food. \"Come eat!\" she called.\n\nThe three of them approached cautiously, keeping an eye on Ephram who was standing behind her as if he were guarding her. They sat and ate quietly, Torsten still looking wide eyed and spooked. \n\n\"Aren't you going to eat?\" she asked Ephram.\n\n\"I do not eat. Hurry and finish, wife, there is something I wish to give you.\"\n\n\"Like... a gift?\"\n\n\"Yes. A gift. A large gift.\"\n\nAurora felt hope surge in her that he might be about to let the others go. She hurried and got up, wrapped up in her blanket and looking up at him in adoration. He was going to let them go! She was pleased that he had thought to do it himself before she had to ask. \n\nHe led her away from the others and turned her so they could not see her, then laid her down. \"This gift I am giving you, wife... it is both a blessing and a curse, but I need for you to have it now. I will not wait. Do you understand?\"\n\n\"I think so?\" she answered, a little confused. Did he think sending the others away would hurt her?\n\nHe leaned in close and kissed her gently, then parted her blanket and reached down, rolling his fingers over her bud. She was surprised and confused, but she shoved that away quickly as she took firm hold of the pleasure and brought it to the front of her mind. \n\n\"Oh!\" she breathed, then pulled him close for another kiss as he worked her clit, getting her wet. As soon as she was slick, he rolled onto her and pushed into her, then held himself there as he threw his head back. She felt warmth suffuse her from head to toe, then heat. Heat so hot she felt as though it was about to burn her! She screamed, but it was suddenly over as he dropped down, panting. He looked down at her, stroking her cheek lovingly before he began moving his hips and making love to her. She closed her eyes, letting the pleasure take over and not focusing on what had just happened. \n\nHe jerked and stopped and she opened her eyes in time to see Heinral savagely jerking his small knife across Ephram's throat.\n\n\"NOOOOOO!\" she screamed as Amir and Torsten yanked him back by his arms while Heinral dragged the knife as deep as he could across Ephram's throat. \n\nEphram jerked away, his eyes wide in shock as he staggered to his feet, holding his ruined throat. He turned and as soon as he did, Amir and Torsten barreled into him, knocking him back to stumble over the edge and down. There was no scream, just a sickening crunch.\n\n\"NOOOOO!\" Aurora screamed again, looking down at the blood all over her in horror.\n\n\"Shhhh, little love, you are ok!\" Heinral whispered, taking hold of her face and wiping the blood away. \"It is over, we will get you out of here now. Torsten, take her over there and help her clean up while Amir and I find a way for us to get down!\"\n\nTorsten picked her up and carried her to the opposite side of the nest while Heinral and Amir began slicing blankets into strips and tying them together. \n\nAurora let Torsten hold her while she sobbed brokenly in his arms and he wiped all the blood away. \n\nHours later, Heinral and Amir came and knelt next to her. \"We have a rope ladder made, do you think you can climb down?\" Heinral asked.\n\n\"No! No, I am afraid of heights.\"\n\n\"I know, that's why I asked. It's ok Little One, I can get you down. Amir will go first and make sure it is safe and can hold our weight, then us, then Torsten, ok? It is not so far as we thought. I lit a cushion and tossed it down and it's not that far of a climb. We threw down the rest of the cushions but one, just in case the ropes break. Torsten will light the last and toss it down before he comes down so we can use the rest as torched to find our way out of here. Ok? Does that sound like a plan to you?\"\n\n\"What about the servants?\"\n\n\"We will come back for them. They have food and warmth, we will return, or send people for them anyway. They will be saved, I promise you. Are you ready?\"\n\n\"I... I guess so,\" she whispered, her heart still broken.\n\n\"What happened?\" Amir asked, hesitating as Heinral stood. \"What did he do to you?\"\n\n\"I don't know. I think... I think maybe he planted his seed in me... gave me his child.\"\n\nHeinral knelt again, touching her face. \"It's alright little one, if he has then it will be taken care of. Come now, let's get you home,\" he said gently and pulled her to her feet. \n\nThey had saved back a long strip to bind her to Heinral as she clung to his neck. She hid her face in his neck the whole way down. When they reached the bottom, Amir untied her, then lifted her and held her, draping the strip over her to partially cover her.\n\n\"Once he is down, we can untie more and cover you better. No! Do not look over there,\" he hissed as Heinral moved away from them. \n\nAurora did look as Heinral gripped Ephram's hair and pulled back, using his small knife to saw off his head. He tossed it away from the body, then cleaned the knife on once of the cushions. \"That is one dragon that should not be terrorizing anyone anymore,\" he said gently, putting a hand on her arm. \"Are you alright?\"\n\n\"Yes,\" she answered numbly. \n\nThey all turned as a noise scraped behind them. The body was transforming, turning back into a dragon. Even the head across the cavern transformed. It lay still, still dead, but in his true form now. Aurora looked away, laying her head on Amir's shoulder. \n\nWhen they made it to the entrance, she wore Leonoras dress, promising to send it back when they returned for the others. Stepping out into the daylight made her blink. Torsten was holding her now, all of them saying she had no shoes and could not walk without them. They would take turns carrying her down the mountain. \n\nIt turned out they didn't need to. There was a small camp just off the mouth of the cave with four soldiers and a dozen horses who said they had been stationed there in case they were able to get away. They were all Heinral's men. \n\nShe rode down with them and the escort, feeling sad and heartbroken still. She felt better when she got to hug her father and even when Phillip yanked her up an a hug and shed tears. \n\nThey sent a dozen men up to the mountain to get the others.\n\nAfter a night of feasting and celebrating, Amir stood. \"We need to settle this now. Aurora has agreed to return home with me, be my wife.\"\n\n\"She is going with me,\" Heinral said, standing.\n\n\"She made me a promise!\"\n\n\"I say we have another tourney!\" Torsten called, his face red.\n\n\"If we go by tourney results, I already won,\" Heinral said with a gallic shrug. \n\nAurora stood as well. \"I believe I should have some small say in this,\" she said softly, her cheeks burning with shame and anger.\n\n\"No,\" Amir snapped. \"You swore an oath to me, did you not?\"\n\n\"I don't think oaths in dreams under a dragon's compulsion are binding,\" she answered tersely. \"You... you were worse than Ephram when it came to using me for what you wanted. You have no care for me at all save for the prestige my name adds to yours. No, Amir. I will not go back with you.\"\n\n\"You made a promise! Does your word mean so little? I demand you keep your word! I call you to account!\"\n\n\"She is right!\" Torsten snapped. \"If she was forced to say it in a dream the dragon was giving her, it does not count. She has to agree while awake and in her own right mind.\"\n\n\"I agree with this,\" her father agreed. \"Torsten would make you a fine match, Aurora,\" he said to her, more gently.\n\n\"Torsten is a good man, he had a care for others and pleaded for their safety and comfort, but I do not feel that way for him. Not at all. I am sorry, Torsten.\"\n\n\"You are refusing to marry?\" her father asked. \"Aurora, you...\"\n\n\"No, I am not refusing. Heinral was good to me, he took care of me and never pressed his advantage. He was always gentle and considerate. If I must marry, I choose him.\"\n\n\"It cannot happen, Aurora, do you know who he is?\"\n\n\"I am well aware. I know he is the man who saved me, he is the man who cared for me and made sure I was always comforted when I needed it. He is a gentle and loving soul.\"\n\n\"He is our enemy!\"\n\n\"Not any more. Together he and I can forge a peace. I choose Heinral.\"\n\nThere were a lot of whispers and confused noises as Heinral came around the table to take her hand and smile down at her.\n\n\"Aurora!\" her father said angrily. \"He slew the dragon and saved you so we let him stay and eat in peace, but he is our sworn enemy! He came to kidnap you and take you as a hostage!\"\n\n\"He never would have harmed me,\" she answered, looking up at Heinral. \"I will not be dissuaded. If I must marry, it will be to him.\"\n\n\"And if I say you do not have to marry?\" her father asked.\n\n\"Then I would know you were lying. You would wait until he was gone, then force me to marry Torsten or Amir. I have made up my mind, father. Be happy for me and allow this peace between us, or lose me forever.\"\n\n\"And if I refuse to let him take you?\"\n\n\"Will you imprison me, father? Hold me captive? Allow me this happiness. Be glad I have found someone who will make me happy. Someone who I wish to make happy. The war will end, there will be peace. That is a tremendous blessing, father. I do not need your permission or your blessing. I have chosen. I will invite you to the wedding,\" she said, turning and walking away. She was tense, waiting for someone to stop her as Heinral walked next to her. She stopped a servant and ordered all of her things packed up and taken to his ship, then left the castle. \n\nIt was Phillip who caught up to her, grabbing her arm. \"Aurora! Please... you can stay here! Marry me. Your father would allow it, especially now. I love you Aurora! I would be a good husband to you!\"\n\n\"No, Phillip. I love you too, but as I love my brother. I could never see you any other way. I am not doing this to spite my father or anyone... I care for him and I know he cares for me. He is someone I know I will grow to love and will come to love me as well. And... I want away from here, Phillip. Away from that mountain and reminders of what happened in there.\"\n\n\"Aurora...\"\n\n\"Goodbye my friend,\" she said gently, then turned and left. She walked into the village below and headed towards the docks, taking Heinrals arm. After several long minutes, she spoke again. \"I... don't really know the way or which ship is yours,\" she whispered.\n\nHe chuckled and began leading her to his ship. His men cheered as he led her onboard and he paused to speak to the captain. \"Her things are being brought, Captain Belden, once they are aboard, we sail with the tide. Her father or someone might come to speak to her or say farewell. Allow them aboard and come for me, I will bring her out.\"\n\n\"Yes highness,\" the man said quickly.\n\nHeinral led her into a cabin on the top deck of the ship and lit a lamp, then led her to the bed. \"Lay down and sleep my little love. I will be right here if you need me.\"\n\n\"You aren't tired?\" she asked, slipping her shoes off to lay down.\n\n\"Of course. I will sleep here in this chair.\"\n\n\"There is room in the bed and I think we are past that sort of modesty. I trust you.\"\n\nHe smiled and leaned over her, kissing her on the head. \"Perhaps we are, but I will still treat you like the queen you are. Sleep my love. I will be here.\"\n\n\"I... I am a little afraid to be alone,\" she whispered.\n\nHis face softened and he knelt and stroked her cheek. \"Then of course I will hold you. I will keep you safe the rest of our days. A moment.\"\n\nHe stood and pulled off his clothes, then climbed into bed next to her after blowing out the lamp. He held her against him for the entire trip back across the ocean.\n\nThe wedding was small, but perfect to her as they stood out in the snow and spoke the words. Her father had not answered the invitation, but a tentative peace had been forged.\n\nThe days passed, then weeks. She knew after a few months that she was not pregnant, and she feared what was going to happen to her. \n\nYears passed and Heinral doted on her and spoiled her, ever the loving and gentle husband. When she did not produce him an heir, he only smiled and told her he was happy to let his brother's oldest take the throne.\n\nTwenty years later, his younger brother returned after ten years away, she discovered what Ephram had done.\n\n\"Heinral, your hair is more white than brown! Aurora... you look exactly the same! Not a bit different than when you were wed. It's... almost unsettling that you look exactly as you did when I met you all those years ago.\"\n\nHeinral gave his brother a tight smile and led her to the grand hall for the feast. She sat in stunned silence. \n\nHalfway into the meal, she looked up at her husband and his gentle face and adoring smile. \"How long have you known?\" she asked softly.\n\n\"I began suspecting a few years in. I became sure several years ago when you were so upset about that dark pink dress wearing out in the elbows. Most women cannot fit in a dress that long, they change, gain weight, grow out of them. You have not changed from the slip of a thing you always were. And you have not aged a bit. Not one wrinkle or line, your hair the same beautiful brown.\"\n\n\"How... how long do you think I will be this way?\" she asked breathlessly, fearfully.\n\n\"Forever,\" he said with a sad smile. \"A blessing and a curse. Have no fears my love. I know what you are thinking.\"\n\n\"I don't want to watch people I love die while I keep living!\"\n\n\"I know. That was why I said nothing. Your heart could not take it. Please, my love. Do not live in fear of it, we will be happy until the end of my days.\"\n\nShe nodded, but her heart was broken all over again.\n\nThey lived in happiness for another ten years. Heinral was training his nephew with a sword and was bit by something when he reached under a woodpile to get the practice lathe he had knocked from his nephew's hand. The healers said it was a spider and it would be fine, but it got infected and he died the next day. \n\nAurora could not stay. Her heart hurt too badly. She abdicated to her brother in law and left, sailing back home. She hugged her younger brother who was more than a man grown now with his wife and children. He stared at her in shock.\n\n\"You... you are exactly as I remember you! You... have not aged a single day!\"\n\n\"It was just the weather there,\" she lied with a smile. \"I want to meet my nephews and nieces!\"\n\nPhillip came and found her as soon as he found out she was back, pulling her into a hug, then holding her out and staring at her. \"You...\"\n\n\"I know,\" she said quickly. \"How have you been? I heard you were married?\"\n\n\"I was... she died in childbed. Aurora... you look...\"\n\n\"I know. I am sorry to hear that, I was not told.\"\n\n\"It was long ago.\"\n\n\"You did not remarry?\"\n\n\"Having my heart broken twice is enough for me.\"\n\n\"Your red hair is almost white now! I guess I can't tease you about it anymore. Come on and sit down, tell me what has been happening. John only talks about his wife and kids as if he is hiding something important from me.\"\n\n\"No one has told you?\"\n\n\"Told me what?\"\n\n\"You remember Amir?\"\n\n\"Yes, of course.\"\n\n\"When he went home, I guess he let his anger at you spurning him grow and fester. Not a year after you left, they started pushing at our borders, sacking towns and villages. Taking slaves, killing anyone who fought. We sent troops, but they have never stopped, pushing in further and further anywhere our lines grow weak. Word is they are setting up for a larger assault, he is ammassing a true army.\"\n\n\"Just because I said no to him?\" she asked incredulously.\n\n\"You insulted him and his kingdom, he said. Choosing an enemy over him, and your father slighted him for allowing it to happen. He was very vicious in the things he said about you, the things he said they did to you. They all did to you and... you did for them.\"\n\n\"Did he also say that most of that was in dreams unless he was forcing himself on me?\" she asked angrily. \"Ephram could control dreams!\"\n\n\"Torsten told us. He told us how you saved him and even Leonora. Aurora... gods you are so beautiful still! I can't get over how you look exactly the same! Are... are you staying now?\"\n\n\"I thought to, at least for a while. It will be good to have my friend back,\" she said with a smile, being very clear about how she felt. She knew that look in his eyes and she didn't want him to get any ideas.\n\nAurora stayed. She watched Phillip and her brother and his family grow old and die, then their family as well until she was all that was left in the royal line. Amir was long dead, but his descendants refused to let up, always harrying their borders.\n\nShe felt alone as she ruled, not allowing anyone to get close. She hated watching those she cared for get old and die. The night she held her brother as he died, she had gone to her rooms and slit her own wrists. They healed almost immediately. She threw herself onto a sword, but she did not die. Fire did not harm her. She stopped eating, but only realized she no longer needed food to live. She knew that the only thing that would work was beheading, like had been done to Ephram.\n\nAfter so long alone, she stood in her tower room and looked down on the kingdom, then up at the mountain. She wondered if his bones were still there.",
        "She decided then that she would go on a pilgrimage up the mountain and lay him to rest properly, saying the words over him and give peace to his tortured soul. She left her Captain of the guards in charge as she headed up the mountain alone. He was a bit terrified of her, most of the servants were now. She was the queen who did not age or die. She must be evil.\n\nSo she traveled alone, not worried about while might be lurking on the mountain. It took two days for her to walk, but she enjoyed the peace and the nature, feeling refreshed after getting away from the tedium of the palace life and grasping nibbles who were also half terrified of her. Even the men who came seeking her hands were relieved when she turned them away.\n\nThe mouth of the cave loomed and she pulled out her lantern and lit it before going in. The walk was longer than she remembered, but when she made it to the base of the nest, she was shocked to find the giant body exactly as it had been. She went around and looked at the piles of pillows, crumbled to moldering dust now, and around to where she knew the head was. It was still there, but it was closer to the body than it had been. Much closer. Not only that, but there were ropey, fleshy tendrils connecting the body and head, and she knew then that they had been pulling the body back together.\n\nShe let out a shocked cry as she ran around to the front of the head, looking down at him. \"Ephram?!?\"\n\nA single eye opened, looking at her, then narrowed. \"You will pay! You will all pay!\"\n\n\"No! No, oh! I didn't know! I did not know you were alive and suffering, I would have come back!\" she wailed, truly horrified as she moved around him and shoved his head with all her might towards his body. It took over an hour, pushing with her back against his head and using her legs to move the head halfway there. She had to stop and rest, panting as she went and curled up against his massive front leg. \"I am so sorry!\" she whispered, tears rolling down her cheeks. \"I did not want that to happen! If I had known... Ephram, I am sorry! Please, forgive me. I cannot imagine how you have suffered this whole time! Tell me what to do! Tell me how to help. Please? Ephram?\"\n\nHe did not answer and she curled against him as she cried herself to sleep.\n\nWhen she woke up, she went back to trying to move the massive head and did not stop until it was pressed against the wound on his neck. It wasn't lined up right, but she hoped that would not matter, that he would be able to heal correctly once he was whole. She sat down near his head and stoked his jaw and snout, laying her head against his. \n\n\"Ephram, please heal! Please wake up! I am sorry. I should have come back sooner! I should have checked! You said you could not die, I should have realized! Please forgive me for not coming back to help sooner! Please wake up Ephram? Please? I need you to heal and wake up!\" she cried, hugging him tightly against her. She held him there, sobbing into his massive head until she fell asleep again.\n\nMovement woke her, but the lamp had gone out and she could see nothing. His head pulled away and she fell back to the ground, she stood up. \n\n\"Ephram! You are awake! You are healed!\" she cried out, trying to see in the darkness.\n\nFire shot into the air and she shied back as she looked up at him through her fingers. She could only see the outline of his head against the flames, but she broke down in relieved tears. The flames died and she could hear his heavy steps, then the flap of his wings as he took off and circled the cavern several times. She waited for him to come back and land near her, to transform, but instead he snatched her off the ground with his talons and carried her high in the air before dropping her to the nest. He lit the brazier before transforming and dropping next to her.\n\nHe looked furious, but she didn't care as she scrambled up and barreled into him in a hug. \"You are ok! You are alive! I was so afraid!\"\n\nHe held her out at arms length, looking her over. \"You did not know?\" he asked, his voice hoarse.\n\n\"No... not really. They mentioned getting you alone and off to the side, but I wasn't going to do it. I was going to ask you to free them and I was going to stay.\"\n\n\"You are not lying,\" he said, his face astonished. \n\n\"I have missed you! My heart was broken when they did what they did.\"\n\n\"How long?\" he demanded.\n\n\"A long time. I don't know. Too long. Too long for you to be up here suffering alone. Can you ever forgive me for not coming back sooner?\"\n\n\"Why did you come back?\"\n\n\"To say goodbye. To say a blessing over your bones to be sure you were at peace. To remember you and... I missed you. It has been so long. I could hardly remember your face. I thought if I came back, saw everything, I would remember.\"\n\nHe gave a single nod, then touched her face. \"You look the same.\"\n\n\"So do you.\"\n\n\"I could not make you what I am, but I could give you eternal life. I would have thought you would be damning me by now.\"\n\n\"It has been hard, but no. I could not be upset now that I finally have you back.\"\n\n\"You... have not lied to me. Not once,\" he whispered, still in awe.\n\nHe pulled her to lay down next to him. \"I need rest, wife. A long rest. Sleep,\" he whispered as he pulled her close.\n\nShe knew the dream and it brought back memories. She looked up at Ephram and he smiled. \n\nShe lived several blissful lifetimes with him in those dreams as he held her. \n\nHis sleeping beauty."
    ],
    "authorname": "gabthewriter",
    "tags": [
        "e-written",
        "dragon",
        "dreaming",
        "fairy tale",
        "fantasy",
        "noncon",
        "nonconsent",
        "reluctance",
        "romance",
        "sleeping beauty"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/e-written-the-sleeping-beauty"
}