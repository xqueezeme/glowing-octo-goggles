{
    "title": "Mike & Karen Ch. 23",
    "pages": [
        "Trilby was walking down one of the hallways, followed closely by Tanuja, who had a notebook with her, writing down everything the housekeeper told her concerning the job. As part of her internship concerning business management, she had been allowed to learn from the Blackwell Manor staff, and work alongside them, and this would count as practicum for her courses at the university.\n\n\"Gotta admit, working at this place is a lot different from any other place I could've imagined being, not at all what I expected,\" Trilby said casually as they walked along, her sandy-brown hair pulled back in a queue and her eyes concealed behind her round-rimmed John Lennon sunglasses. \"I was new outta the commune and looking for work, and the paycheque here was real tempting.\"\n\n\"And you thought that you would be doing the job holding your nose, because these people are so fabulously wealthy?\" Tanuja asked, curious. She'd met all the staff members now, and she was curious about Trilby, who stuck out like a sore thumb. Not that the hippie girl seemed to mind.\n\n\"Got that right,\" Trilby confirmed, nodding. \"Thought they'd be stuck-up corporate elitists, but then they turned out to be really nice people, and disgustingly philanthropic. It was impossible to not love workin' here within two days.\"\n\n\"But the paycheques and the good food must help,\" the Punjabi girl suggested.\n\n\"Don't forget the really comfy bed,\" Trilby added. \"And yeah, maybe my roomie talks a li'l more than is absolutely necessary, but she's nice and she can keep a conversation interesting.\"\n\n\"You are referring to Miss Prospero?\" Tanuja asked.\n\n\"Yep,\" Trilby said. \"Bubbles is a good girl. She helps me keep this place spic'n'span. I used to have to clean up after two hundred hippies in a commune, so once I had the ropes down here, it was a cinch.\"\n\n\"What has taken the most getting used to?\" queried the intern.\n\nTrilby paused as she heard something coming from down the hallway. She walked quietly, followed by Tanuja, until they reached the door of one of the studies. She stopped just outside of it, remaining out of sight.\n\n\"Let me make this abundantly clear,\" they heard Karen saying to someone. \"If I ever catch you two using my great-grandfather's antique desk for... that... again, I'll have your innards made into pozole.\"\n\n\"Not like you to resort to ad hominy attacks, Kar,\" Mike quipped next, followed by a rather uncomfortable silence. \"What?\"\n\n\"That fine, mom,\" Alex said. \"I was gonna continue Alexa's Morse code lessons, but my jaw's pretty tired.\"\n\nThere was a stifled chuckle from Karen's husband.\n\nMore silence before the sisters spoke in tandem, their voices rife with disdain to their men. \"I can't believe I let you inside my body.\"\n\n\"C'mon, Kar, we've used this desk before,\" Mike chuckled. \"And to be fair, that's how I taught you Morse Code as w-OOOOOF!!!\"\n\n\"You, uh, probably shouldn't write any of this down...\" Trilby said wearily, shaking her head and turning to walk back the way she came.\n\n***\n\nMike &amp; Karen\n\nDisclaimer: All characters are 18 years of age or older while actively engaging in sexual activity. This story is a prequel/sequel (sprequel?) to my other work, Alex &amp; Alexa. As always, many thanks and gratuitous panty shots from Freja and Jeanie to my long-suffering editor and beta-reader for their assistance in polishing up and improving this work. Reviews are welcome; flames will be snickered at and deleted with extreme prejudice. Enjoy!\n\nPlease Note: There are incest themes with a secondary couple in this story. Just a forewarning.\n\nChapter XXIII- Life's Full of Tough Choices\n\nA cafeteria on St. George Campus, 1987...\n\n\"Boy, you are out of your mind!\" Mona laughed as she sat across from Mike at the long table. Lisa, and Janet were nearby them, along with Ping, Gergo, and Indur, who were trying to look like they were studying. \"Where do you get off saying that to an animator?\"\n\n\"People can be wrong about things even in their chosen field,\" Mike reasoned, shrugging.\n\n\"Oh, and I suppose you make mistakes in yours, right?\" she asked, smirking.\n\n\"Not often, no,\" he answered plainly, making Lisa and Janet roll their eyes. \"But when I am, it can be proven definitively.\"\n\n\"I get it,\" Mona teased. \"Because my field of study is subjective, you can broadly say I'm wrong about something since I can't disprove it, right?\"\n\n\"I'm just saying it's impossible to say you love cartoons if you don't have a favourite Road Runner Show bumper,\" Mike insisted.\n\n\"Well, I love cartoons, and I don't have one,\" Mona declared, folding her arms and looking smug.\n\n\"Don't fib, you brat, it's unbecoming,\" Mike laughed.\n\n\"You think the best short cartoon of all time is The Solid Tin Coyote!\" Mona shot back. \"You're clinically insane!\"\n\n\"I didn't say it was the best, I just said it was my favourite,\" the huge student retorted. \"The technically best short cartoon of all time is What's Opera, Doc?', everyone knows that. The whole industry came to that conclusion.\"\n\n\"Okay, we agree on that point,\" Mona allowed. \"But you can't make me say I have a favourite Road Runner Show bumper!\"\n\n\"God, I wish those two would just fuck and get it over with,\" Janet muttered quietly to Lisa, sitting next to her.\n\n\"It wouldn't bother you if they did?\" the redhead asked.\n\n\"He's never stopped me from fucking anyone else, has he?\" Janet pointed out. \"Then again, why should he, since I keep coming back for more of that gigantic dick? Talk about unfair.\"\n\n\"I dunno,\" Lisa said, shrugging. \"I just wanna make sure you'd be okay if they started knocking boots.\"\n\n\"Nobody says that anymore, you little lameoid,\" the brunette snickered, patting her friend's hand. \"I think I can get over sharing him with Mona.\"\n\n\"D'you really think you could be?\"\n\nJanet raised an eyebrow. \"Li, I can pretty much guarantee that those two will never be an item. He'd drive her crazy if they were in a real relationship.\"\n\n\"Yeah, I guess,\" Lisa admitted, looking at the table and considering. \"Only thing more unlikely'd probably be him and Princess, right?\"\n\n\"Oh, God, the universe'd explode!\" Janet said, bursting into giggles.\n\n\"Are you two okay over there?\" Mona asked, gazing down the long table at her friends and giving them a wry look.\n\n\"Yeah, we were just discussing exploding universe things,\" Janet replied, winking.\n\n\"Exploding universe things,\" Mona said, her tone flat and unimpressed.\n\nLisa tried to think of an excuse and shrugged. \"Its... a Kabbalah thing.\"\n\n\"Sounds more like a Ragnar\u00f6k thing, or a Day of Brahma thing,\" Mike mused.\n\n\"Oh, shut up, you giant nerd, and let us have our fun,\" Janet scolded before turning her back to him and beginning laughing with Lisa again. Mike shook his head and returned his attention to Mona, who was sighing and also shaking her head.\n\n\"It's nice to have someone to talk about this stuff with, I admit,\" Mona said, tooling her plastic spoon around in her parfait. \"Someone who isn't an animation student, because you're really into it, and even if I know more technical things than you do, you have a lot to contribute.\"\n\n\"Y'mean like being able to tell the difference between Rudy Larriva Road Runner cartoons and Robert McKimson Road Runner cartoons based on the coyote's ears?\"\n\nMona squeezed her eyes shut as she replied. \"That's a little much, even for me, DeBourne. You really are out there with this stuff. Seriously, why is Solid Tin Coyote even your fave? It's as low-budget as those Road Runner cartoons got.\"\n\nThe huge student shrugged. \"It was my introduction to mecha. After that, I found anime and Gaiking.\"\n\n\"You and your mecha and anime,\" the black girl sighed, shaking her head. \"Didn't you tell me that you and your brothers all went as mecha for Halloween one year?\"\n\nHe nodded. \"Yeah, I was Gaiking, Connor was Danguard Ace, and poor Josh was so skinny that we dressed him as the Coyote.\"\n\nMona burst out laughing.\n\n\"You're insane, DeBourne,\" she said as she stood up, needing to head to class before she was late. \"But for the record, I do not have a favourite bumper from that cartoon.\"\n\n\"Wanna bet?\"\n\n\"Like you'll ever know,\" she said, winking and drawing her fingers over his shoulder before walking over to give Janet and Lisa both a kiss on the cheek and then wiggling off.\n\n\"Y'know, I'm not saying you're annoying, DeBourne, but you can be really annoying,\" Janet said, looking at him and smiling.\n\n\"You sound just like my Grade Nine math teacher, Miss Kitty,\" he sighed as he cleaned up his breakfast tray, partitioning his trash and recycling. \"Anyhoo, gotta go, there's an electron microscope with my name on it, finally.\"\n\n\"Well, just don't stay away too long, big boy,\" Janet purred as he stood and tried to walk by them. She hugged his hips and caressed the bulge in the front of his faded jeans as she did so.\n\nLisa looked up at him. \"Uh... I'm not gonna caress your dick, but don't be a stranger.\"\n\n\"Good call, Heyman,\" he agreed as he disengaged himself from Janet's tentacle-like hug and headed over to the disposal bins. And then he was gone. Janet and Lisa continued gossiping until Karen arrived some minutes later, carrying an elegant coffee mug she'd brought from home.\n\n\"What are you two River City hens clucking about?\" queried the bronze-haired goddess as she sat down. She almost never ate the food here, but she was not above getting some coffee.\n\n\"Just how long it's gonna take Mona and Mongo to start knockin' boots,\" Janet quipped.\n\n\"Knocking boots?\" Karen said, making a wry face before looking at Lisa. \"Nobody says that anymore, darling.\"\n\n\"How did you know it was me?!\" Lisa blurted a little more loudly than she intended before blushing and then shrinking in on herself, hoping nobody was staring at her.\n\n\"Even DeBourne's lingo is more hip than yours, Li, and he's from the great northern woods,\" Janet laughed, patting Lisa's arm to console her. \"Mona bet him that she didn't have a favourite something or other in a cartoon.\"\n\n\"Oh, she'll lose that for sure,\" Karen said, nodding with certainty, bringing her mug to her lips and blowing on the hot beverage. She could make even that simple act seem sensual and erotic beyond all possible expression. \"Even I would think twice before making a bet with DeBourne.\"\n\n\"That's a scary thought, since you cheat by doing the math about the odds in your head, first,\" Janet agreed. \"Everybody knows not to play cards with you, since you can count 'em.\"\n\n\"And I was asking Janet if it bothered her at all, since she's already been sleeping with Mike,\" Lisa added.\n\n\"Why would it bother Janet?\" Karen reasoned, looking at her roomie, as if puzzled by the statement. \"She's never made any claim to him, if that sort of thing is even possible. If anyone was going to be upset by Mona 'knocking boots' with DeBourne, it would be you.\"\n\n\"Me?\" Lisa almost blurted again, looking shocked. \"Hello! Gay? Remember? You made me that way, Kar!\"\n\n\"Yeah, you may be a lezbo, Li, but you have such a big crush on that man,\" Janet said, smirking at Lisa, who was going as red as her hair. \"Even Stevie Wonder can see that.\"\n\n\"I do not...\" Lisa protested in a tiny voice, shrinking in on herself again. \"He's just nice to me.\"\n\n\"Like that nice time he carried you naked over his shoulder and force-fed you pickle brine?\" Janet asked.\n\n\"Well...\"\n\n\"And you said that you mooned him while he was hosing you down because you were covered in hangover sweat,\" Karen pointed out.\n\n\"There was that time he carried you to your room naked when you fell in the dorm shower and wrenched your ankle,\" Janet continued.\n\n\"He carried you naked that time those boys stole your clothes,\" Karen said, starting to count on her fingers. \"Then there was the time you pretended he was your boyfriend in the bar to keep those drunks away, or that time he let you sleep in his room with him...\"\n\n\"Ooh, I didn't know about that one,\" Janet said, her eyes glinting with amusement. \"Spicy.\"\n\n\"Nothing happened!\" Lisa whined, her voice rife with despair.\n\n\"Yeah, he probs totally forgot you were there and you're lucky he didn't roll over on you,\" Janet laughed. \"Red, you don't need to hand in your lezzie card just because you have a crush on DeBourne. It's perfectly understandable. You're not Princess here.\"\n\n\"Gee, thank goodness for that,\" Lisa grumbled, hugging herself and sulking.\n\nJanet was laughing. Karen allowed herself a smile and a small, contemplative laugh.\n\n***\n\nA pub just off campus, the present, a pleasant March day...\n\nPeople were laughing and carousing, having a generally loud and good time while Irish music played over the speakers. The day before St. Patrick's Day was always busy for the venue, but this year seemed especially raucous. The place was done up in green, with cheesy Mylar shamrocks festooning available surfaces, or strung along the ceiling.\n\nAnd if people weren't drinking Guinness or Jameson, they were drinking green-coloured beer to mask their weakness.\n\n\"You're so nice in the way you describe those kinda things, dad,\" Alex mentioned as he finished off his third pint of Guinness. \"I mean, not everyone can handle whiskey or stout, y'know.\"\n\n\"They're the same people who take Pikachu in Smash Brothers Brawl, Alex,\" Mike replied, receiving his fourth pint of Guinness now. \"The shock rat, refuge of children and cowards everywhere.\"\n\nAlex laughed loudly. His father had a way of putting things, and he was looking forward to being able to do the same once he'd leveled up.\n\n\"Ugh, their music choices could use some serious therapy,\" Alexa said, grimacing as she tilted an ear to listen. She had perfect pitch, and sometimes people singing off-key could make her cringe. \"I mean, who thinks Flogging Molly is St. Patrick's Day music?\"\n\n\"The music quality will be seen to soon enough, Alli,\" Karen assured her younger sister, patting her hand. \"Most people are just happy to hear any Irish music at all.\"\n\n\"I am just disappointed that there are no saxophones to be played in Irish music,\" Freja mentioned as she drank a cream ale. She'd been banned from Lemonade Horrors for the evening, despite her new, independently wealthy status.\n\n\"And the rest of us're thinking 'Thank Sanguinius', to quote Alex,\" Alexa quipped, winking at her friend, who just stuck her tongue out at the blonde. Freja was actually very good on a saxophone, but she was never allowed to sing, since the sound could peel the paint off a wall, even before the wall had been painted.\n\n\"It's nice that you came out with us, Mr. Winson,\" Jeanie said, sitting between Freja and Jordan and drinking a Rainbow Amigo. \"I mean, I enjoy seein' you at the Manor and all, but I'm kinda glad you are here and not just sittin' back in that big ol' place, y'know?\"\n\n\"My dear girl, while I may never have been what you young folk describe as a 'party animal', I like to think that I know how to have a good time,\" Jordan replied, holding up a tumbler with whiskey in it, as if to prove his point.\n\n\"Aw, I'd party with you any day, sir,\" Jeanie said affectionately, leaning her head against his shoulder and snuggling it. Jordan coughed a little at the unexpected display.\n\n\"Jeanie, stop trying to kill Jordan, you can't inherit his cottage,\" Karen chided, pointing her own pint of Killian's at the girl. \"And everything is fine back at the Manor, we left Morgenmuffel in charge.\"\n\nAt the other large table beside them, the Blackwell Manor staff were all sitting together, laughing and carousing. Even Tunde, who almost never drank, had been convinced to have a green beer. And while Tatyana was in charge back home, clearly it was Dave who was calling the shots tonight. Literally, in some cases.\n\nEveryone was watching and cheering as Andrea pushed her face down into a giggling Valentina's cleavage and grabbed the shot glass of Jameson wedged between her breasts with her lips. The tall, rangy blonde then stood up straight and bent backward slightly, draining the contents of the shot glass down her throat. Everyone cheered or applauded as she exhaled and put the shot glass down on the table.\n\n\"Still the king!\" Andrea crowed, pumping her fist in the air while everyone laughed. \"At least at this table.\"\n\n\"I will challenge,\" Tunde declared, standing up and trying not to wobble.\n\n\"KWELA!\" Mike cheered from the other table.\n\n\"Oh, jeez, I hope that isn't an expensive shirt or bra, Bubbles,\" Trilby said, sitting next to Val and shaking her head while nursing a wheat beer. Aside from Tunde, she probably drank less than anyone at the table. She preferred other methods of attaining higher consciousness.\n\nVal looked at her and shook her head. \"Nah, I wore this on purpose. I'm the short girl with big boobs, I'm kinda used to being the shot magnet at a table. I mean, yeah, I'm pretty sure those shelves the Gordon-Blackwell girls're carrying around are even better for it, but-\"\n\n\"Miss Prospero,\" Tatyana chided, sitting across from Valentina and next to Dave. She was drinking a screwdriver with whatever the place's rail vodka was. \"Just because we are all off for the night does not mean you can speak in such liberal terms about our employers.\"\n\n\"Sorry, ma'am,\" Val said, blushing, even while she pushed her ample breasts together and held them steady while Ari pressed a fresh shot glass full of Jameson between them.\n\nShe put her hands behind her back, and everyone watched as Tunde moved up, staring down at the shot glass jiggling between Val's breasts.\n\n\"Just take it easy and don't dive in, or you'll knock us both out,\" Val said, not entirely sure he wouldn't just try to dunk like he was kamikaze-bobbing for apples.\n\nTunde nodded, staring for several seconds as if concentrating on his objective. As the Irish music thumped away in the background, he took a deep breath and slowly leaned down...\n\nHis face nestled down between Val's breasts, and he seemed to stay there for several seconds, not doing anything.\n\n\"Lucky bastard,\" Jeanie muttered, watching from the other table.\n\n\"Hey, uh, Tunde?\" Val queried, staring down at the back of the young man's head. \"Y'stay down there much longer, I'm gonna have to charge you rent.\"\n\nShe squeaked and leaned back suddenly as Tunde surged up, the shot glass held firmly in his mouth and then sloshing it quickly down his throat as he craned his neck. Andrea laughed and clapped, followed by everyone else, even Tatyana.\n\n\"YEBO!\" Tunde shouted, punching his fists in the air. \"I am the king as well! I am... I... I am...\"\n\nHe stopped talking and stared at nothing for several moments, and everyone at his table watched him curiously. He started taking deep breaths before turning to look at Mike.\n\n\"Likuphi ikamelo lokugezela?\" he asked.\n\nMike thumbed toward a door at the end of a small hall not far away. Tunde rushed toward it immediately.\n\n\"I'll go hold his hair back...\" Ari sighed, standing, and following the distraught Tunde. \"If he had any...\"\n\n\"What was that you and Tunde were speaking back and forth?\" Jeanie asked. \"Elvish?\"\n\nMike gave her a wry look. \"Jeanie, does Tunde look particularly Elvish to you?\"\n\n\"Well, not like Santa Claus elvish, for certs, but I never know with you nerdy types,\" Jeanie replied, shrugging.\n\n\"It was isi-Zulu, darling,\" Karen said gently, smiling at the brunette. \"Michael picked it up when we were in South Africa many years ago, before Alex was born.\"\n\n\"Oh yeah?\" Jeanie mused, looking down the hall at the little door Tunde had rushed through. \"How do you say 'he's shit-faced' in easy-Zulu?\"\n\n\"Udakwa njalo,\" Mike replied.\n\n\"Nothin' easy-sounding about that,\" Jeanie whispered to Freja, making the Danish girl giggle.",
        "\"Looks like you're keepin' your crown, Andy,\" Dave laughed, holding up a pitcher of Guinness and refilling the victor's glass.\n\n\"Feels good,\" she said, downing her pint glass to prove her point. The Dropkick Murphys were playing over the speakers now. \"Tatyana, do you think they'll let us have nights out once in a while? Y'know, as a crew.\"\n\nTatyana almost smirked. \"You mean a chance to have their home to themselves for a few hours without the risk of traumatizing their staff? Quite possibly.\"\n\n\"Hadn't thought of it that way, but good point,\" Dave grunted, as he took of a swig from his glass. \"But that doesn't even qualify as a drawback in this job. I have yet to come across a drawback in this gig.\"\n\n\"I agree,\" Marie said, nodding. The frizzy-haired French botanist and gardener was the quietest member of the crew, but these people had rapidly grown on her and become like a family to her. \"They are keeping me busy, and they encourage my creativity. The grounds are not so large as to be unmanageable, which is a very good thing for me.\"\n\n\"Marie, didn't you tell us that you worked on the gardens at Versailles?\" Valentina asked, looking at her co-worker. She loved the designs Marie had come up with for the Blackwell estate's gardens, and the flower arrangements beginning to grace tables and alcoves around the Manor. \"That's where Alex and Alexa are getting married, y'know.\"\n\nMarie smiled. She didn't normally drink beer, but this was the St. Patrick's Day weekend, after all. \"It is possible that they will see some of my work, although it has been some years since I was employed there. I will have all the artistry I need here, but not as spread out, do you know what I mean?\"\n\n\"I think you're just totes thrilled about the fact that the ladies both speak perfect Parisian French,\" Val teased, smirking at the Breton woman.\n\n\"Their Russian is flawless, as well as aristocratic,\" Tatyana added. \"They are indeed pleasant to listen to.\"\n\n\"Well, so're the boys, y'know,\" Andrea said. \"Even when they're speaking those weird fantasy or sci-fi languages of theirs.\"\n\n\"And to think I used to stuff nerds like them in lockers at school,\" Dave sighed, signalling for two more pitchers.\n\nSome minutes later, Tunde returned, looking slightly less green around the gills, while Ari simply looked put off his food.\n\n\"Guess I won't be ordering the shepherd's pie tonight,\" he sighed. \"Tunde made a really good case against it, and he hasn't even eaten yet.\"\n\n\"I think it is time for me to switch to ginger ale,\" Tunde breathed, resolving that he was done with alcohol for the night, even if it was offered between Val's tits.\n\nAnother song finished and Karen noticed the bartender getting her attention and nodding.\n\n\"Time to liven this place up, Alli,\" she said, standing. \"Round up our volunteers.\"\n\nThe stage in the corner of the pub was large enough for a small group and located not far from where they'd been sitting. Karen already had her fiddle with her, while Alexa had her guitar. Another student was carrying her mandolin and a fourth her bass. A fifth girl sat down at the drum set in the corner of the stage.\n\nKaren stood in front of them and smiled. She was wearing a lovely green dress that flowed around her legs and complemented her lustrous bronze hair. \"Have fun, ladies. Make sure your man knows you're playing for him. And if he's not here, pick a man in the audience. Just not my husband.\"\n\nThe girls all laughed and got ready, awaiting Karen's signal. She began a lively Celtic tune, they all picked up while the patrons began to clap along. Karen and Alexa took turns leading the verses and sharing the chorus.\n\n\"On summer nights when the barley's high and the stars are twinkling in the sky\n\nTake a walk by the river side and let the music be your guide.\n\nFollow where the pathway takes you, on your bike or arm in arm\n\nThrough the crossroads, to the dance hall, down the road to Murphy's barn.\n\nWe plant the seeds and till the soil, we pray for rain and pray for sun\n\nBut now it's time to stop a while, forget your worries, every one -\n\nOnce the barn was full of grain, then old Murphy took the chance -\n\nCleaned it out and hired a band - now it's the Ballroom of Romance!\n\nWhack fol the dana, swing your partner, leave your troubles at the door,\n\nWe will dance until the morning light, come take my hand and we'll take the floor\n\nWhack fol the dana, swing your partner round the floor now one, two, three,\n\nWe will dance until the break of dawn, so take my hand and dance with me!\"\n\n\"Never had a chance, did we, dad?\" Alex mused as he watched his wife and his mother twirling around the stage in their dresses, even while playing their instruments. There seemed to be nothing a Blackwell-Gordon woman couldn't do.\n\nMike just shook his head distractedly as he watched. He'd known and loved his wife for over thirty years, and she'd never grown less elegant, graceful, or beautiful with the passing of time. She loved performing, and she loved performing specifically for him. Even back when they first got to know one another, she'd always performed for him, even if she wasn't ready to admit it to herself.\n\nAt the table close by, the Blackwell Manor staff were all laughing and clapping along. Trilby was trying hard not to ogle Valentina's jiggling tits as the brunette watched the performance, clapping enthusiastically.\n\n\"The week is over, work is done, so now it's time to have some fun\n\nThe place is old and there's money owed, tonight forget that heavy load\n\nThe sky is clear without a cloud, the air it hums with music loud\n\nThe moon is full and shining bright they'll come from far and wide tonight\n\nAnd will I get to steal a glance at the one who sends me in a trance?\n\nIf not, at least you'll get the dance down at the Ballroom of Romance!\n\nWhack fol the dana, swing your partner, leave your troubles at the door,\n\nWe will dance until the morning light, come take my hand and we'll take the floor,\n\nWhack fol the dana, swing your partner round the floor now one, two, three,\n\nWe will dance until the break of dawn, so take my hand and dance with me!\"\n\nKare and Alexa skipped around one another while playing, their dresses flowing around them, a hypnotic sight for everyone watching. The students from the music faculty were delighted to be playing with Professor DeBourne, not to mention her younger sister, who had been an instant sensation on campus once she began attending at the beginning of the fall semester.\n\n\"Shined his boots and combed his hair, chosen something fine to wear\n\nLike hand in glove, could this be love? Is there magic in the air?\n\nThe one that she sees every day now is lost for words to say\n\nTo the girl in the flowing dress this night they never will forget.\n\nWhack fol the dana, swing your partner, leave your troubles at the door,\n\nWe will dance until the morning light, come take my hand and we'll take the floor,\n\nWhack fol the dana, swing your partner round the floor now one, two, three,\n\nWe will dance until the break of dawn, so take my hand and dance with me!\"\n\nThe song ended, the last fiddle note punctuated with a stomp of Karen's foot on the wooden stage, and the place erupted in cheers. The performers all bowed and returned to their seats. Karen and Alexa looked flushed but elated, because there were few things the sisters enjoyed more than singing and playing their instruments. Their friends at the two tables applauded and cheered as the they drained their drinks.\n\n\"Sooooo,\" Alexa purred, leaning into Alex's side and walking two fingers up his arm. \"Am I allowed to sing on St. Patrick's Day, big man?\"\n\n\"Only problem is that it's not St. Patty's every day!\" he laughed, putting his arm around her.\n\n\"You know you've ruined me for high society events, right?\" Karen said to her husband. \"I could be out hobnobbing and being hobnobbed at with the elite and powerful on any given day, but no, I'm perfectly happy here in this pub we've been sitting in for thirty-plus years, singing for your amusement.\"\n\nMike shrugged and smiled. \"Guess I'll just have to enjoy the hobnobbing for both of us, hm?\"\n\nThere was a lot more singing and celebrating to be done that night.\n\n***\n\nSt. George Campus, 1987: A student lounge...\n\nMike was sitting at a table with Lisa, Janet, and Mona, playing Trivial Pursuit against the three of them. Predictably, he was slaughtering the girls, already having five pieces of pie to his name and about to answer for his sixth, while they collectively had one.\n\nThey'd begged Karen to join their team, to tip the odds in their favour (they hoped), but she had politely declined, saying that she had to practice for a recital. However, she wasn't willing to be away from her friends, so while they got their asses handed to them by DeBourne, she was standing nearby, practicing the Liebesfreud by Fritz Kreisler on her violin.\n\n\"Okay, ladies, he'll never get this one,\" Janet said, her brow furrowed in determination. \"I don't care how big his head is. Ready, Einstein?\"\n\nMike shrugged, listening to the music Karen was playing while waiting on the question.\n\nJanet smiled evilly and asked away. \"What British pottery maker was Charles Darwin's uncle, and helped to get his nephew a position as a naturalist on the ship, the Beagle?\"\n\nMike smiled lightly. \"Josiah Wedgwood, the Second.\"\n\nJanet said nothing, staring at him sullenly as he plunked the final, sixth plastic wedge of pie down into his playing piece. Lisa frowned at her friend's reaction and took the card from Janet, turning it over to look at the answer.\n\n\"Aw, c'mon!\" she groused loudly, throwing her hands in the air and then stomping in a small circle angrily while Mona just put her hand over her face, sighing. \"Dammit! You can't be that smart, or we can't be that dumb!\"\n\n\"Are you sure you haven't cheated and just memorized the entire deck?\" Janet asked, her eyes narrowing suspiciously at him.\n\n\"I've never even owned a Trivial Pursuit set, oddly,\" Mike replied, shrugging again. Lisa was still stomping around in circles, growling to herself in irritation and muttering in Yiddish. \"But to be honest, it's probably easier to simply learn all those facts in a more organic manner than to sit there and try to memorize six thousand questions.\"\n\n\"Face it, ladies, you had that coming,\" Karen added from nearby, even while she played. \"Even I know not to try and match this oversized sponge in depths of useless knowledge.\"\n\nThe phone on the lounge of the wall began to ring, even as Mike rolled another six and marched his playing piece up one of the spokes of the game board to the middle, awaiting his final question for the win.\n\n\"DeBourne, please get that, it's interfering with my internal metronome,\" Karen called out as she bowed her way up and down her instrument.\n\nMike gave her a look before sighing and standing up to go answer the phone while the girls combed through the boxes for lethal questions, desperate to stave off final defeat.\n\n\"House of Beauty, this is Cutey,\" he announced into the receiver.\n\n\"Dammit, DeBourne!\"\n\n\"Oh, hey, Groucho,\" Mike said cheerfully, thankful for someone else to terrorize. \"How's it hangin'? I'm referring to your K3 Lab deadline, of course.\"\n\nDespite what she'd said about needing to practice moments before, Karen began playing a spritely version of the Trolltog ('The March of the Trolls') from Grieg's 'Peer Gynt' on her violin, now that Mike was getting the dean good and riled. Mike gave his fellow student a sour look. He glanced over at the other three, who were still desperately searching for an impossible question, now having cards spread everywhere in their crusade to stop him.\n\n\"Just shut up and listen,\" Dean Marks groused, obviously very unhappy about who answered the phone. DeBourne was seemingly physically incapable of being normal at times like this. \"I need you and Gordon up here in my office as soon as possible, there's something to discuss.\"\n\n\"More roses, sir?\" Mike asked.\n\n\"Wha- no, not more roses!\" Marks snapped. \"Dear God, thanks to you, I don't want to see another rose as long as I live!\"\n\n\"Want me to teach Groucho Junior some more sweet wrestling moves?\" Mike offered. \"Maybe a piledriver, or a bulldog, so that he can make all the other kids in his class dumber, and move up in the-\"\n\n\"Shut... up...\" Marks said tightly, trying not to scream. \"Just... get up here as soon as you can. Both of you. This is serious.\"\n\nThe line went dead. Mike stared at the receiver for a moment, wondering how Groucho had found them here. How many places had he called already, looking for them? That seemed very... neurotic to Mike. He finally hung the phone up and shrugged before going to sit back down at the table. Once again, all three girls were smirking at him evilly.\n\n\"Okay, Flora, Fauna, Merriweather,\" he said easily, crossing his legs, his hands behind his head. \"For all the marbles, lay it on me.\"\n\n\"You're doomed, DeBourne,\" Janet said, her voice almost wet with anticipation. All three girls took a breath and then spoke in unison. \"Name any two of the three races that make up the American Triple Crown.\"\n\n\"Easy,\" Mike said, shrugging. \"The Kentucky Derby, the Preakness, and the Belmont Stakes.\"\n\n\"HA!!!\" Janet shouted, standing up and slamming her hand down on the table, her eyes flashing in triumph. \"YOU LOSE, BRAINAC!!!\"\n\nMike raised an eyebrow, clearly contesting her pronouncement.\n\n\"She's right, big man,\" Mona added in, smirking. \"The question asked you to name two of the races. You gave us all three, which we knew you would.\"\n\n\"Which means you answered incorrectly, and therefore, you... lose...\" Lisa added, waltzing up and leaning into to look at him and poke him on the nose.\n\nMike considered for a moment before laughing jovially. \"Ladies, I concede, I am no match for your collective intellectual might.\"\n\nThe three girls all jumped up and cheered, high-fiving and hugging one another jubilantly. It may have been a technicality, but they'd triumphed, and where Michael DeBourne was involved, you took the wins where you could get them. Even Karen Gordon admitted that.\n\n\"And now I bid you ladies adieu,\" he said simply, rising to tower over them before nodding his head and then exiting. They continued squealing and congratulating each other on a splendid and unlikely win while Karen kept practicing the original piece she'd been working on.\n\n\"Oh my God, that felt so good that I want a cigarette,\" Janet sighed, flush with victory. \"But since I don't do that anymore, I guess I'll go celebrate with my favourite detachable showerhead.\"\n\n\"Ooh, good call, I'm comin'!\" Mona said, standing up and following Janet out.\n\n\"Me three!\" Lisa squeaked, hurrying out of the room after the other two. Alone and uninterrupted, Karen played sublimely, serenading the walls with her exquisite musical craftsmanship. She loved this lounge for practice, because the wooden walls lent such a lovely quality to the sound.\n\nSome minutes had passed before Mike poked his head back into the room.\n\n\"Oh, by the way, Gordon,\" he said. \"Groucho wants to see us, it's important. I was just outside his office and then remembered I hadn't told you. So now we're late.\"\n\n\"WHAT?!\" Karen exclaimed, her voice screeching nearly as horrifically as her bow did across the strings of her violin in her wide-eyed shock.\n\n***\n\nThe dean's office, ten minutes later...\n\nMike and Karen stood side-by-side in front of the desk, watching as Dean Marks sat behind it and scowled at the surface. He tapped the end of his pen against the wood, saying nothing. The two students had been standing there for close to two minutes now, and still had no idea what was going on. Were they in trouble? It was hard to tell with Marks, although it was usually also a given with Mike. The dean's dislike for the titan sophomore was legendary.\n\n\"While I really enjoy our conversations, Groucho,\" Mike began. \"I always find they work better when-\"\n\n\"Oh, shut up, DeBourne,\" Marks groused, scowling at him now. \"Like this isn't hard enough without you contributing to my discontent by speaking.\"\n\nMike shrugged. \"Happy to be of service, sir, but my best work is usually verbal.\"\n\nMarks looked at Karen. \"Sure you don't want my job?\"\n\nKaren was uncharacteristically blunt. \"Sir, I would rather have sex with Lab D's laser emitter rods on full power than have your job.\"\n\n\"Ouch,\" Mike said, making a wry face. \"Your family's rich, could you tell if the ruby rods are fake or real from the feel of them? Y'know, like a princess and the pea thing.\"\n\nKaren turned her head and looked up at him, her eyes narrowing. From his angle, he probably couldn't see her forming a fist down at her side. Not that he would even notice if she punched him.\n\nMarks had his hands in his face, muttering to himself before sighing loudly. He shook his head and gazed at his two prized students. Karen Gordon; beautiful, fabulously wealthy, brilliant, majoring in Mathematical Physics, the only child of two illustrious alumni who were also great benefactors of the university. He'd never seen anyone faster with numbers and complex equations. The institution kept her happy every way they knew how, since she'd come to the University of Toronto in preference to other universities that had offered her full scholarships, such as Harvard, Caltech, Oxford, and MIT.\n\nMichael DeBourne, every bit as gifted as his counterpart, but far more annoying, at least for Dean Marks. His giant brain was matched by his body, and instead of choosing some other faculty to disrupt, he'd chosen Theoretical Physics as his primary field. His incredible, deep insights and leaps of logic on the subject were terrifying. He and Gordon had almost single-handedly crafted a breakthrough in the field of compactification, leading to huge steps forward in understanding black holes at a quantum level. It was a major coup for the university.\n\nAnd therein lay his problem.\n\n\"Of course this has to fall to me,\" he almost complained, talking more to himself than anyone else in the room. \"I tried to kick it upstairs to the board of governors, but no, they say it's my deal and I'm supposed to see to it, like it's something I'd take delight in.\"\n\n\"No offense, sir, but we still don't know what it is, I feel compelled to point out,\" Karen mentioned, her books pressed to her chest. At least she was wearing a bra today. This time of the month, the only thing more pointed than her temper was her nipples, and nobody needed to know that. \"Would you be so inclined as to enlighten us?\"\n\n\"Yes, yes,\" he grumbled, shaking his head again. \"You two have caused quite a stir this year, I will have you know.\"\n\n\"If it's about the hooker and the goat in the isolation chamber, sir, I can explain,\" Mike said. \"It was really only -- HEY! OW!! QUIT THAT!!!\" he yelped as Karen turned and began repeatedly swatting his arm and shoulder in irritation, her golden eyes flashing. \"ALL RIGHT, ALL RIGHT! DAMMIT, STOP, YOU MADE YOUR POINT!\"\n\n\"Couldn't you try being helpful for two seconds?\" she growled, still glaring up at him, but ceasing her assault while the dean had his face in his hands again, trying not to whimper. She knew she didn't actually hurt DeBourne, and she was lucky the titan man even noticed, but he'd done her the decency of reacting in the manner appropriate to her castigation of him. She also found it rather irksome that he clearly considered her the straight man in their involuntary comedy duo- Abbott to his Costello, Martin to his Lewis.",
        "\"Calm down, Alekto, I'll listen,\" he said, scowling and rubbing his arm where she'd been hitting him. If nothing else, the skin was turning slightly red. She'd obviously been taught how to slap skin for effect. He turned toward the dean again. \"So what's this stir, Groucho?\"\n\n\"In essence, it was a great thing,\" Marks continued, resolved to more DeBourne-induced despair before this discussion was over. \"Your work in compactification with Calabi-Yau Manifolds has blown the astrophysics community away, and I mean that on a global scale. Impressive.\"\n\n\"Thank you, sir,\" Karen said, nodding, while Mike simply shrugged. It was the reaction from the international community he'd been expecting, after all. He knew exactly what this meant.\n\n\"And while the university is getting enormous credit, we still have to take it to Lucerne this summer for presentation and further scrutiny,\" Marks continued. \"Myself, another professor, two fourth-years, and two doctorate students are the ones who represent the university when we receive invites.\"\n\n\"I envy you, sir, it must be quite wonderful to mingle with all those brilliant minds,\" Karen admitted, slightly jealous of the seniors who would be accompanying the dean.\n\n\"And here's the problem,\" Marks said, regretting what he was about to do. \"It's basically unheard of for two sophomores to do what you two have done. You've changed astrophysics. You've opened up a billion more exciting questions for these eggheads.\"\n\nHe looked squarely up at both of them. \"They're all screaming to meet you. I'm supposed to also take you two to Lucerne with me, so that you can present your case.\"\n\nKaren looked like she might faint with joy, her heart pounding in her chest, while even Mike raised an eyebrow. He hadn't exactly expected that.\n\n\"So do you see the problem I have here?\" Marks asked wearily. Clearly this had been a predicament with him for some days now. \"To borrow a recent movie quote, I have to send you two to Top Gun.\"\n\n\"It may be unusual, sir,\" Karen answered, only barely containing her excitement. \"But surely the conventions can be overlooked in order to-\"\n\n\"Oh, damn...\" Mike said, interrupting her as something occurred to him. Karen and the dean both looked up at him, and she could see the dismay growing in his eyes. He turned his head to look down at her. \"Gordon, the Lucerne Conference is in the first week of July.\"\n\n\"Exactly,\" Marks said, his expression grim. \"If you two go to Lucerne, you're giving up on any chances of competing to qualify for the Olympics in Seoul next year, because the national tryouts to begin qualifying are happening at the exact same time.\"\n\nHe looked at Karen. \"Apparently you're supposed to qualify and clean up in archery and fencing, and place well in equestrian.\"\n\nHe looked up at Mike. \"And what chance would anyone have against you in judo, boxing, or a lot of the strength events?\"\n\nBoth students were silent, the sense of dread in the room palpable.\n\n\"Achieving your dream of international recognition in Lucerne means forgoing the chance to represent your country on the Olympic podium,\" he sighed. \"I can't make this decision for you two. You're on your own.\"\n\nKaren's eyes stung, so she closed them, bowing her head. A part of her wanted to scream about how unfair this was. But how often did anyone get to represent their country at the Olympics, or get recognized by an international sciences body? What did she have to complain about, since she had the luxury of choosing?\n\nBecause it was so damn hard to choose. She thought she might faint on the spot as the forces weighed on her mind. What would she tell her parents?\n\nShe'd have to tell them she chose. Blackwells were never stymied by indecision. Perhaps it didn't even matter to them which she chose, as long as she had shown backbone and made the choice.\n\nAnd yet she was paralyzed. How on earth could she choose? Scientific progress or patriotic glory? No right answer only made it worse! The turmoil she was feeling hurt her chest. She had been elated moments ago, but now almost wanted to cry. Very rarely had she felt so very torn.\n\nShe opened her eyes and saw the dean sitting behind his desk, his hands steepled under his chin and his eyes closed. He was clearly very troubled. She could relate.\n\nAnd next to her, she felt a great ocean of calm. DeBourne, the unchanging and invincible prodigy, who faced every challenge head-on with a laugh and a smile. He'd run into a laser chamber during an active nuclear physics test to beat a mechanical part into submission, after all.\n\nKaren turned her head and looked up at him. And in a rare moment of complete trust with another human being, she let him see the turmoil in her eyes, and the fear of making the wrong decision.\n\nMike had his eyes closed, his head bowed, and was stroking his chin, as was his habit when he was deep in thought. He radiated an aura of calm contemplation that she let wash over her, and she sighed out loud.\n\nHis eyes flicked open and he turned his head slightly to look over at her. She almost flinched and squeaked as those electric blue eyes bored into her and instantly recognized what she was feeling, what she was going through.\n\nAnd Mike didn't see weakness there. Karen Gordon was the strongest person he knew, the most formidable. In those bewitching golden-amber eyes, he saw an agonizing choice, a young woman who was pained by needing to make a decision that nobody of good intent should ever have to make.\n\nOf course she was conflicted! She was a genuinely decent person. Sure, going to the Olympics and winning medals was a personal legacy, but she was like himself in that she would have gone for pride in her country.\n\nAnd here she was being asked to balance that against the opportunity of a lifetime, to do her part in putting the university and the Canadian physics community on the international map. And she deserved it, because she shared the credit with him.\n\nHer eyes were pleading with him. Not for advice, because anyone could give her that, and make her decision no easier. This was about something much more important, much deeper.\n\nShe was asking him to make the decision for both of them. She trusted him to have the right answer.\n\nIt struck him like a thunderbolt, and he willed himself to not shiver. The one person on this planet he respected more than anything had put aside her own judgment, and was waiting on him to make everything better, and to make sense.\n\nHow could he fail her?\n\nHe raised his head and smiled.\n\n\"Well,\" he said finally, shrugging. \"There's always Barcelona.\"\n\nDean Marks' eyes snapped open and he gaped up at the giant student. \"What did you say?\"\n\n\"Groucho, it's the simplest answer on earth,\" Mike reasoned, shrugging. \"Gordon and I will go to Barcelona in '92. We'll both be only in our early twenties, our physical prime, so what's the harm? Meanwhile, we go blow them away in Lucerne this July.\"\n\n\"Of course,\" Marks breathed, as if discovering some elusive equation or glorious epiphany. \"Barcelona! You forgo the tryouts this year and try not to make any amazing scientific discoveries in '91 during qualifying!\"\n\n\"No promises, but I'll do what I can to refrain from rocking the international physics community again,\" Mike laughed.\n\nKaren, still standing beside him, felt like she was ready to burst. Of course! It was so simple, why hadn't she thought of it?!\n\n\"So you're both in?\" Marks asked, looking back and forth between them. Mike nodded simply, while Karen's nod was rather more eager, her golden eyes glinting with excitement at the resolution. \"You both agree to Lucerne?\"\n\nThey both nodded again.\n\n\"Well, I don't envy your conversations with the Olympic committee, but they'll see reason eventually,\" Marks mused, glad it wasn't him making the phone calls. \"Besides, we'll still have that Ben Johnson fellow and Lennox Lewis to sweep up a bunch of medals, won't we?\"\n\nSome minutes later, the two students were walking down the hall away from the dean's office together. Karen still felt fit to burst, although she hid it with her normal aplomb and dignity. She kept her books pressed to her chest, though, because she was so excited, her nipples felt like they would cut through steel.\n\n\"Thank you, DeBourne,\" she said in a casual tone that hopefully conveyed the requisite amount of appreciation. \"It is not often I find myself conflicted like that.\"\n\n\"No worries,\" he said, shrugging cheerfully. \"You would've arrived at that conclusion too, I just got there first.\"\n\nSuch a pretty lie, she thought, trying to hide her smile. And so considerate. God save me if this oversized mountain man is the one Jenny moved aside for...\n\nShe had so many people to tell about what was coming next.\n\n***\n\nA pub, the present...\n\nEveryone in the establishment was clapping as Mike and Alex led the next song from the stage. Mike strummed on an acoustic guitar as he sang into the mic, singing the chorus.\n\n\"Now I ask you, friends, what's a fellow to do\n\nWhen her eyes, they shine with a golden hue!\n\nAnd I knew right then, I'd be taking a whirl,\n\nAnd I fell in love with a Gordon girl!\"\n\nHe winked at his wife as he sang the final line of the verse, and Karen blushed, trying not to look down at her lap. At the next table over, Valentina and Andrea almost swooned while the musical interlude played. Mike and Alex were up onstage with several other students, playing along with them.\n\nAlex took over at the mic, playing his bass. Alexa, Freja, and Jeanie all squealed, and Karen found herself hoping that none of them began throwing their panties at her son. Then it occurred to her that it was very unlikely that they were wearing any. She watched her son at the mic.\n\n\"We were halfway there when the rain came down\n\nOf a day-I-ay-I-ay\n\nShe asked me up to her flat downtown\n\nOn a fine soft day-I-ay.\n\nAnd I ask you, friend, what's a fella to do?\n\n'Cause her hair was blonde and her eyes were blue\n\nI took her hand and I gave her a twirl\n\nAnd I lost my heart to a Blackwell girl!\"\n\nThe audience erupted in applause again when the song finally finished, and the father and son sat down, happily imbibing more beer. Both their wives snuggled into their arms.\n\n\"Very clever lyrics, big boy,\" Karen purred, smirking up at Mike. \"No need to try so hard, though, I'm pretty darn sure you're getting lucky tonight.\"\n\n\"Tonight?\" Mike chuckled. \"I think you mean every day of my life, what with being married to you and all.\"\n\nKaren blushed and giggled again, whispering something against his skin. Alex, meanwhile, had his aunt fawning over him.\n\n\"I can't wait to be officially a DeBourne,\" she sighed. \"Alexandra Aurora Andromeda Blackwell-DeBourne... y'gotta admit, it has a really nice ring to it.\"\n\n\"Ja, it does,\" Freja added, nestled into Alex's other side and patting him affectionately. \"It is a very pretty surname, nearly as pretty as Kjaer-LeTourneau.\"\n\n\"You're already a DeBourne as far as I'm concerned,\" Alex replied, his arm around his aunt-wife. \"And yeah, some of dad's family is coming down for the housewarming and you'll meet them then, but we're taking you up to Kapuskasing after the semester ends. Once the whole family meets you, you'll really become a DeBourne, best believe it.\"\n\n\"I'm so nervous about meeting them,\" Alexa sighed. \"I've heard so much about them my entire life from mom, and I... I guess I'm intimidated.\"\n\n\"I dunno why,\" Alex mused. \"I mean, they loved mom the minute they met her.\"\n\n\"Well, yeah, but that's Kar,\" reasoned the blonde. \"That's different, she's, well... Kar.\"\n\nAlex laughed. \"They're all intimidated by her too, I promise you. I think the only person anywhere who isn't is dad, to be honest. But I guarantee, Alexa, they're gonna love you.\"\n\n\"And you are certain that you want Jeanette and I to come along?\" Freja asked.\n\nAlex shrugged, as if the answer was obvious. \"You're family, aren't you?\"\n\nThe Danish girl blinked away a tear and smiled. No wonder her soulmate was so in love with this man.\n\nThe next table over...\n\n\"Wow, you're not feelin' any pain, are you, Bubbles?\" Trilby said as she sat next to Valentina, who had reached the silly-giggly stage of inebriation. Not that she wasn't silly and giggly to begin with, but now alcohol was to blame, and not her general disposition.\n\n\"Nnnnnnope,\" the brunette said, smiling lopsidedly at her co-worker. \"But I'm surrounded by lots of friends and bodyguards, so I'm safe, y'know?\"\n\nTrilby looked over at something on the other side of the table. \"Well, y'got us girls to protect you, anyway...\"\n\nAcross the table, Tunde, who had been seated between Dave and Ari, seemed to have gone to sleep, having imbibed a pint of green beer and a single shot of whiskey (which he subsequently expelled in the bathroom). He had slumped over to one side, his head on Dave's shoulder, snoring. Dave frowned and pushed him upright, but the young African man simply flopped in the other direction, his head now on Ari's shoulder. The tech-guru made a wry face, trying to ignore this invasion of his space. Not to mention the drool now ruining his shirt.\n\n\"Fear not, Mister Jaffe, the dry-cleaning machines back at the Manor can certainly deal with that level of violation,\" Tatyana assured him while the girls all laughed.\n\n\"Y'know who hasn't done a hooter shooter yet?\" Val declared, looking at everyone.\n\nDave and Ari both held up their hands.\n\n\"Aside from you two, or Marie,\" Val giggled. \"I meant Tril. We should get her to do a shot from between my boobs.\"\n\n\"Uh, not necessary, Bubbles,\" Trilby said, waiving it off. \"Your hugs're enough to remind me what they feel like, on a regular basis.\"\n\n\"Yeah, but we're out partying,\" Andrea piped in, amused by the notion of seeing the hippie girl do the hooter-shooter challenge. \"Face it, Tril, how often do we get to do stuff like this?\"\n\nTrilby, uncharacteristically, looked over at Tatyana, as if asking her advice. The Russian woman shrugged. \"She is right, Trilby. You were the one who grew up on a commune, one would think you would be the expert on cutting loose.\"\n\nEveryone watched while Trilby considered. She looked at them all. \"Does it have to be whiskey? That shit makes me hurl.\"\n\n\"You and Tunde,\" Glenda laughed. As the chauffeur for the DeBournes tonight, she was drinking only minimally, a situation she was used to in any event. She drank off-duty when she knew she wasn't going to be needed, just to stay in practice. \"I'm pretty sure it doesn't have to be the Jameson, Tril. What's you're preference? The shot's on Mr. DeBourne anyway.\"\n\n\"I wish,\" Andrea drawled, eliciting laughter from the women, even Tatyana. \"What's your poison, Tril?\"\n\n\"Uhhhh...\" she said, wondering. She thought back to her days on the commune. They'd owned a still and made their own alcohol, mostly for fuel for generators, but it could be tinkered with to produce ethyl for drinking as required. \"I dunno... vodka?\"\n\nMoments later, Dave had several shots of Finlandia (to Tatyana's distress) delivered to the table. The agreement had finally been that other people would take shots with her in a show of solidarity. Valentina fitted the shot glass in her cleavage, while Andrea did the same for Ari.\n\nTrilby tried not to frown as she stared at the tiny glass cylinder wedged in her friend's breasts. Val's hand cupped her boobs together to hold it steady.\n\nIt's just a shot between two really nice tits... tits you see all the time... tits that you're hugged by almost every night...\n\nEveryone watching cheered as she leaned down, holding her Lennon glasses in place, and pressed her face into the infinitely soft skin. She wasn't a praying girl, but she prayed her mouth would find the shot glass, rather than searching.\n\nVal's giggling and jiggling indicated she was missing the mark, not that Val minded. Trilby felt the cold, hard rim of the glass finally, and maneuvered her lips around it. Praying once again that she didn't make a fool of herself, she held onto it and raised herself up, but staying hunched over. She stood still, bent over while Val stepped back, her face pointed down, and the glass still caught in her mouth.\n\n\"There's a part two to the operation, Tril, y'know that, right?\" Glenda teased, watching in amusement from her seat. Everyone else laughed.\n\nHere goes... the hippie girl thought as she straightened her spine and then leaned backward, feeling the vodka rush down her throat. She quickly pulled the shot glass from her mouth and coughed into her fist while her co-workers cheered and applauded. Valentina patted her on the back.\n\n\"Jeezus on a pogo stick, remind me what the appeal of that is again?\" Trilby wheezed as she sat down, her eyes crossing.\n\n\"Just part of cutting loose, Tril,\" Val said, pointing across the table to where Ari was taking his shot from between Andrea's sizeable knockers like a pro. He may have been gay, but he'd done more than his share of hooter shooters at clubs. \"And y'couldn't ask for a better delivery mechanism, right? Well, except for... y'know...\"\n\nShe nodded her head in the direction of Karen and Alexa, who were back up onstage, singing another song, once again to their men.\n\n\"S\u00e9 mo laoch mo ghile mear\n\nBonnie boy, ghile mear\n\nYou will be my gallant star\n\nOh haste to me mo ghile mear!\n\nMountains high, and valleys low\n\nThe cuckoo sings of Saxon foe\n\n'Tis you must strike the mortal blow\n\nMo ghile mear, mo buachaill beo!\"\n\n\"Okay, I give up,\" Glenda sighed as she watched the show, shaking her head. \"What're the spaghetti straps on their dresses made of, titanium? That is so unfair.\"\n\nNobody could disagree with her. The flowing dresses the sisters wore, green on Karen, and blue on Alexa, were propped up by almost impossibly thin straps over their shoulders, and the design of the dresses enhanced the presentation of their large busts, from awesome to downright jaw-dropping.\n\n\"So come my love to battle come\n\nTo this fair land so weary sung\n\nLet harp and song the valleys hum\n\nAnd sound the sound of freedom's drum!\n\n'S\u00e9 mo laoch mo ghile mear\n\nBonnie boy, ghile mear\n\nYou will be my gallant star\n\nOh haste to me mo ghile mear!\"\n\n\"So unfair...\" Marie agreed, applauding with everyone else in the place as the song ended.\n\n***\n\nSt. George Campus, some decades earlier...\n\nMike and Mona were sitting in a small student lounge by themselves, laughing as they watched the TV screen, while a VCR played its contents. Mona was in a comfy chaise while Mike had pulled over a sturdy metal stool, since these particular chairs were not a good fit for him huge frame. It didn't matter, though, since he was used to adapting for his routinely problematic size.\n\n\"Okay, okay,\" Mona cackled, almost doubled over and waving her hand at him. \"I give, I give! You were right! I have a favourite Road Runner Show bumper! I do! Turn it off!\"\n\n\"I don't believe you,\" Mike replied, smirking. \"Tell me which one and why.\"\n\n\"Oh, God,\" she wheezed, looking at him, her eyes glassy with tears of laughter. \"The one with the motorcycle. I dunno, the moment where the coyote held his hand out to make a U-turn just killed me.\"\n\n\"That was a funny moment, wasn't it?\" Mike agreed. \"My favourite moment is where the Road Runner is standing behind the Coyote and looks at the viewer, nodding before beeping and spooking him. The Road Runner nodding at me is hilarious. Were you just determined to not have one because they're all from the era of low-budget cartoons in the late Sixties?\"",
        "\"Maybe,\" she said, fanning herself as she reined in her laughter finally. \"But where the Hell did you find them all, DeBourne? There's no such thing as a collection of them available for sale. Nothing that dorky.\"\n\nHe shrugged. \"After you insisted last week that you didn't have one, I got it in my head to prove it to you that you did, and you were just being a brat. My friends in AV and I have been recording old episodes Saturday mornings on one of their endless VCRs because we wanted them. So I just copied back and forth over a few VCRs for a day to splice them all on one tape.\"\n\nMona's eyes widened. \"All that for nine minutes of cartoon clips?\"\n\nMike shrugged again. \"I needed your admission.\"\n\nShe sighed and shook her head, smiling. \"I guess you got it. Can I keep that tape?\"\n\n\"Of course,\" he said. \"I made a few copies, just in case.\"\n\n\"Let's get outta there,\" said, standing up. \"C'mon, walk me back to my dorm room.\"\n\nMike retrieved the tape and escorted his friend across campus to her dorm, and then to her room. She let him in, and he looked around. He'd been here a few times before, but he noted how different it was from Janet's, or the room that Gordon and Heyman shared. Mona's roomie was rarely around, preferring to spend her time at her boyfriend's.\n\nTo that end, the d\u00e9cor, such as it was, was mostly to Mona's tastes- the room was relatively free of clutter, with lots of fantasy, sci-fi and cartoon art adoring the walls. Mona's side of the room had a single-size bed, and then a desk and an easel. The room was clearly set up to give her enough space to work.\n\n\"I like your room,\" he mused, noticing some new art she hadn't shown him yet.\n\n\"Glad to hear it,\" she said as she closed the door and leaned back against it, smiling and biting her lip. \"Because if I have my way, you'll be seein' a lot more of it, big boy.\"\n\n\"Oh?\" he queried, looking over at her.\n\n\"Well,\" she said, standing up and then sauntering over to him. \"You did win our bet, after all.\"\n\nMike thought about that for a moment. \"Technically, there was no bet, you may recall.\"\n\n\"Oh, there was a bet all right,\" she corrected him. \"Maybe you didn't know it, but there was.\"\n\n\"Hm, okay,\" he said amiably. \"So what were the stakes in this bet I was unaware of?\"\n\nThe black girl smiled up at him now. \"If you lost, if you failed to prove that I had a favourite Road Runner Show bumper, then I got to fuck you.\"\n\nHe listened, looking down at her.\n\n\"But...\" she continued, walking two fingers up his titan chest. \"...if you won, and it turned out that I did indeed have a favourite Road Runner Show bumper, then you got to fuck me.\"\n\nMike raised his eyebrow in amusement. \"So whatever the outcome, sex is being had.\"\n\n\"I'm a big believer in win-win,\" she quipped, trailing her hand down his massive form now and gently cupping his crotch in his jeans, caressing gently. \"And I've seen this monster on more than a few occasions, so I've always wondered exactly what it'd be like to have it bruising my brainstem, y'know? Remington makes it sound wonderful, after all.\"\n\nThey stared into one another's eyes for some seconds.\n\n\"Whaddya say, big man?\" she purred. \"Ever been with a black girl before?\"\n\n\"Not with an Italian surname, no,\" Mike said, his huge hand reaching up and taking Mona by the back of the neck, gripping her firmly but still gently. Her eyes went wide, and she shivered, drawing in a breath. She was instantly wet.\n\n\"We could...\" she said in a quiet voice, still goggling up at him. \"You'll break my bed if we lay on it, but we could put the mattress on the floor...\"\n\n\"If I decide one is necessary at all,\" he replied, hooking his hand into the hem of her T-shirt and pulling it up and over her hand, making her gasp at his forcefulness. She'd felt the sheer, unstoppable power of his body before, but never like this. \"I take it you've been talking to Remington.\"\n\n\"I've been curious for a long time, gotta admit,\" she breathed, letting him systematically strip her of her clothes. Her bra came off next, and she blushed furiously as her breasts were exposed. Her creamy brown skin was covered in goosebumps from her arousal, and her darker brown nipples were hard and pointed. Her breasts were slightly larger than Janet's, but nowhere near as ample as Karen's. \"And Janet won't care if we're having sex. If anyone did, it'd be Lisa.\"\n\n\"What, she'd somehow be upset that we're knocking boots?\" he laughed as he knelt and undid the button and zipper of her jeans. She shivered again as he knelt to continue stripping her. She couldn't get over how large he was, even though she'd seen him almost daily for nearly a year now. This felt new and different, like she was seeing him do it for the first time.\n\nAnd he was just about as tall as her when he was kneeling and she was standing up!\n\n\"Probably just annoyed about having to share piggyback rides to get anywhere quickly,\" Mona said as he pulled her jeans down, exposing her panties. He had to be able to see the wet spot that she could feel. Her skin felt like it was on fire from blushing.\n\nHe slid her panties down and she somehow managed to step out of them. She could feel her eyes on him, and her heart was pounding in her chest. She'd shaved her pussy once she'd resolved to fuck DeBourne and kept it that way, although she wasn't sure why she'd felt the need, he probably didn't care. Janet, after all, just kept herself trimmed, while Lisa shaved, thanks to Karen.\n\n\"Nice,\" Mike mused, nodding as he held her in place by the arms and examined her, looking intently at her pussy. \"You've decided to start shaving.\"\n\nMona swallowed and nodded. \"Princess is convinced it'll be a trend in the near future.\"\n\n\"Gordon would know, since she'll set the trend,\" he chuckled before standing up and holding his arms out. \"Care to reciprocate?\"\n\nMona blinked and then nodded hastily. What was the big deal? I mean, they'd seen each other naked on more than a few occasions, right? And while she wasn't as promiscuous as Janet, nor as brazenly aloof and confident about nudity as Karen (which just made sense), she was proud of her body, and she kept in very good shape with her dancing classes of jazz, tap, and ballet. She was looking forward to being good enough to be selected to perform in the university's performances before long.\n\nMike let her take hold of his T-shirt, a battered old thing that advertised the group Steppenwolf, and bent forward so that she could pull it off, which she did with some difficulty, negotiating it over his massive chest and shoulders. It snapped free and he stood up again, rotating his shoulders and looking down at her.\n\n\"Jesus,\" she breathed, looking at the rippling muscles of his chest. \"Arnold Schwarzenegger, eat your heart out. How the Hell did you get so big?\"\n\nMike shrugged. \"It's an allergic reaction.\"\n\nShe gave him a wry look. \"An allergy?\"\n\n\"Yeah,\" he said, grinning and then clenching his fists and flexing his shoulders, trapezoids and arms in a 'most muscular' pose. \"Every time I get close to weights, I just start swelling up like crazy.\"\n\nMona burst out laughing, forgetting she was completely naked in front of this lunatic man. \"God, I need to kiss you to shut you up, obviously,\" she said before taking him by the cheeks and drawing him down to her, planting her lips against his in a long kiss.\n\nShe kept kissing him while she unbuckled his belt and then undid his worn jeans. Finally, she broke the kiss and began planting kisses down his chest and rippling abdomen to arrive at his hips. She wiggled the jeans down over his massive thighs with some effort, and he stepped out of them. She'd always noticed that he wore boxers, but considering how big his dick was, tighty-whities were probably really uncomfortable for him.\n\nHere goes, she said to herself, drawing in a breath. Not like you haven't seen it before...\n\nShe pulled down the black boxers and almost sighed in relief that he wasn't erect yet, because his limp cock was still huge. It wasn't fair that he was also a grower. Mike was stepping out of his boxers and kicking them aside while she stared, reaching up slowly to put her hand on him.\n\nJesus, it's like trying to put your fingers around a pop can...\n\nMona began stroking along its length, getting a feel for it. Her hand reached the huge, circumcised tip, and she shuddered, thinking about this massive knob penetrating her. How on earth was this not going to shatter her hips from the inside?\n\nWell, she'd brought him here with the intention of having sex, and he'd seen him fucking Janet more than a few times, so it was physically possible, just... scary to consider.\n\nShe leaned in and began kissing along the length of his cock, feeling how soft and heavy it was in her hand. Her free hand gently cupped his balls, fondling them, getting a feel for him. She opened her eyes and looked up at him, smiling slyly before resuming kissing him again. His skin tasted good, not overly salty like some guys, and he was decidedly hygienic.\n\n\"You're moving quicker than Remington did,\" he chuckled, sensing her hesitation. \"She was really intimidated.\"\n\nMona looked up at him almost in shock, her hand still stroking along his length. \"Get the fuck out. Janet the slut was intimidated?\"\n\nMike nodded. \"She would've still been staring and trying to psyche herself up at this point.\"\n\nShe looked back at his cock, feeling a surge of desire, and even pride after what he'd told her. She was moving quicker than Janet?\n\n\"I'm not gettin' this all in my mouth,\" she said finally, still stroking. \"But I'll bet I can get the best part of halfway.\"\n\n\"Be my guest,\" he said simply. \"That's better than ninety percent of the girls who've tried.\"\n\n\"Only you could make having a horse dick sound like a burden, DeBourne,\" she sighed before resolving herself to what came next.\n\n***\n\nElsewhere in the dorm...\n\nJanet poked her head through the door and looked around. \"Li?\"\n\nLisa, who was sitting on her bed, trying to do some stretches Karen had shown her, paused and looked over at the door. \"Hey, Janet. C'mon in.\"\n\n\"Just for a sec,\" Janet said as she hurried in and closed the door behind herself, looking mischievous and holding a camcorder in her hand. \"I actually came to see if you wanted to join me on a little expedition.\"\n\n\"What kind?\" the redhead asked, slipping her feet off the side of her bed and letting them dangle. She was the shortest of the four friends, The Four Inseparables, and her feet didn't quite touch the floor, much to her discontent. \"It's not a quest for dick, is it?\"\n\n\"Not directly,\" Janet said, smirking. \"But a little bird in the AV club told me that DeBourne finished his videotape yesterday, and you know how much he hates waiting when he's on a mission.\"\n\nLisa's eyes widened, and then she grinned. \"He must've shown her by now, then, right?\"\n\nJanet nodded. \"And we both know what the stakes were, even if Mona never said them out loud. I'll bet they're back in her room now.\"\n\n\"Well, what're we waiting for?\" Lisa exclaimed, almost launching herself off the bed before sliding into her slippers. She was wearing track pants and a tank top, but she didn't care to try and get more dressed, they might be pressed for time, after all. \"We've got a sexy party to crash!\"\n\nBoth girls were giggling as they hurried out of the dorm room and down the hall. As they reached the stairs, they were greeted by Karen, who was just coming back from a class. She paused upon seeing them, and their excited, giddy smirks.\n\n\"Hullo,\" she said, raising an eyebrow. \"And where are you two nutty funsters off to?\"\n\n\"Gonna go and disrupt a perverted party in Mona's room, we hope!\" Lisa giggled as they hurried by her and down the stairs she'd just come up.\n\nKaren squeezed her eyes shut as she struggled to rid her mind of the image deposited within by her brat of a roomie. Seconds passed before she sighed and hung her head in despair. She turned and headed back downstairs, knowing no good could come of this.\n\n***\n\nMike was standing still in the middle of the room, still naked, while Mona was kneeling in front of him, her pretty mouth stretched wide around his erection as she bobbed back and forth, sucking on it. He was so tall that she was standing up straight on her knees on a folded pillow, her free hand clutching his hip to steady her.\n\nTrue to her word, Mona had managed to get about half of his length and girth into her mouth and throat, which was considerably better than just about anyone else who had tried. His cock glistened with the wetness from her mouth, and she moaned around it as she felt her pussy tingling, desperate to be fucked by this giant tool.\n\n\"You're doin' good, M,\" he breathed, his huge hands on the back of her head, helping steady her, as well as encouraging her to keep going. \"Really good.\"\n\nShe moaned again in response, not at all able to answer. Her jaw was stretched, and she knew she'd need to stop soon and fuck him, because she was starting to get tired. But she'd sucked him well enough that he had a genuine hard-on, and she'd soon be rewarded by-\n\n\"Ha, yes!\" Janet crowed as she burst in, followed by Lisa, both of them laughing at their intrusion. Mona paused mid-bob, her lips still wrapped around Mike's shaft, and he felt her shoulders sag, felt her moan in despair around him. Mona had hoped to make it through this little escapade without being interrupted, but that plainly wasn't happening.\n\nKaren followed her two friends in, shaking her head and looking unimpressed. She dutifully shut the door once she was inside, making sure that anyone passing by in the hallway didn't see Mona disgracing herself. Lisa was still cackling, while Janet already had her camcorder out and was kneeling down to capture video evidence of this moment.\n\n\"Holy shit, M!\" the brunette said, filming away. \"You're doin' better than me with that thing. How can you even breathe?\"\n\nMona looked like she wanted to protest, but she'd intentionally intruded on Janet's sex sessions enough times that she really had no moral ground to stand on when expressing indignation. They were all best friends, and it came with the territory, wrecking one another's private moments.\n\nShe slid her mouth back and popped it off Mike's cock, leaving the huge erection standing out for everyone to see. She wiped at her mouth and sat aside, sighing in despair. She'd been so close to getting laid...\n\n\"God, you straight girls are so gross!\" Lisa laughed giddily, pointing at Mike's still-throbbing dick, which seemed to be the center of attention. \"I mean, seriously, why would you want that in your mouth?\"\n\nThe overexcited redhead knelt down next to Mike, laughing and staring at his hard-on, opposite from the supine Mona, and Janet, who had now turned the camera toward Lisa, where the action was. Karen just watched from near the door, knowing a fiasco was imminent, but determined to not be left out entirely, even if she deftly avoided the consequences.\n\n\"Gross gross gross!\" Lisa chanted, bouncing on her knees and still looking at Mike's cock, inches from her. \"They're messy, they're sloppy, they're unreliable, and they have icky boys attached to them! I declare penises to be gross and useless!\"\n\nMike frowned down at her, clearly not amused by her proclamation.\n\n\"Excuse you,\" he said, reaching down and taking hold of the head and pulling it away from her. Before she knew what was happening, he let go, and his iron-hard erection snapped back and whacked Lisa across the bridge of her nose with a loud THWAPP!!!\n\n\"OWWWW!!!\" Lisa yelped in shock as she was knocked backward onto her ass and then rolled onto her side, holding her nose. \"WHAT THE HELL, DEBOURNE?!\" she howled while Janet burst out laughing, followed quickly by Mona, who no doubt felt slightly avenged for being interrupted now.\n\nAnd despite her roomie's distress at having been brained by a giant dick, even Karen was laughing, trying but failing miserably to conceal it behind her hand, her golden-amber eyes shining with mirth. Had DeBourne really just done that?\n\nJanet had sunk to her knees and one hand, body shuddering as she laughed, trying desperately to keep the camcorder steady and hoping she caught this moment for posterity. Mona was holding her belly and kicking her feet, her nudity forgotten as she wheezed with laughter. Mike just stood in the middle of the room, towering over everyone, looking decidedly unimpressed. One hand was on a hip, the other stroking his massive cock in a bid to keep it erect, in case he and Mona somehow got back to business.\n\n\"Augh,\" Lisa groused, slowly sitting up but still holding her nose, her eyes watering. \"What didja do that for, you big jerk?!\"\n\n\"Well, you did say he was gross and his wing-wong was useless, Li,\" Janet pointed out, the camera pointed at the distraught redhead while keeping the still massive erection in the picture. \"Y'kinda got off lucky, considering who you're baiting by being such a brat.\"\n\n\"Shuddup, Remgindon,\" Lisa blurted, snuffling slightly now that Mike had loosened her sinuses with that uncalled-for blow. \"I didn't deserve dat!\"\n\n\"Just to give you perspective, babe, he hasn't cock-slapped me or Janet before, so you must've really ticked him off,\" Mona replied, sitting up finally, leaning back on one hand and her one knee bent, watching comfortably. \"Who'd've thought an obstreperous and uppity lesbian could elicit that response from a giant alpha male?\"\n\n\"Gnnnnfff,\" Lisa said, wobbling as she pushed herself unsteadily to her feet with one hand, the other still holding her nose. \"I don'd thingkt I can do math adymore...\"\n\n\"Well, you stunk at it to begin with, so nobody'll notice,\" Janet laughed. \"Princess, y'might wanna get her back to your room and check her for a concussion.\"\n\n\"Or before Onan the Barbarian here decides to finish the job,\" Karen sighed, going over to Lisa and taking her by the arm to steady her. She appeared to be about to leave, but she paused and looked up at Mike. \"Was that really necessary? Picking on someone smaller than you?\"\n\n\"Hey, she started it,\" Mike reasoned, shrugging. \"It's not like someone put a gun to her head and ordered her to start commenting on my manhood.\"\n\n\"DeBourne,\" Karen sighed wearily, making sure Lisa was braced on her shoulder. \"Nobody has that much free time available...\"\n\nMike raised an eyebrow while Mona and Janet's eyes went wide.\n\n\"Owwww...\" Lisa mumbled again as Karen led her out of the room, shutting the door behind herself. Silence reigned for several seconds after the pair had gone. Janet even forgot to stop recording.\n\n\"Did... did Princess just compliment Mike on the size of his dick?\" Mona asked somewhat incredulously.\n\n\"Can't say as I blame 'er, even if it was totally unexpected,\" Janet answered. \"How 'bout you, Mongo?\" she asked, panning the camera up to Mike's face. \"Were you expecting that?\"\n\n\"Not in a million years,\" Mike admitted, shaking his shaggy lion's mane of blond hair. \"If you'd asked me to choose between that and me having sex with Heyman as the more likely option, I'd've said the latter.\"\n\n\"Well, duh,\" Janet grunted, while Mona smiled and shook her head. Boys could be so thick sometimes, especially the keepers. \"If y'keep scrambling her brains like that, you'll probably get your wish, big boy.\"\n\n\"I don't wish to sleep with Heyman,\" Mike said firmly, leaving little doubt to the truth of the statement. \"Forgetting that I like her the way she is, I'd tear her right in half, if I'm honest.\"\n\nBoth girls burst into giggle fits, Janet's so uncontrollable that she had to pause in filming. Mike just stood there patiently, waiting for them to finish. He was waiting some minutes before they'd finally calmed themselves.",
        "\"Okay, that's true, but for a lesbian, she's got a giant crush on you, so even if you need to bash her into submission with your cock again, just keep that in mind,\" Janet mentioned, finally filming again. Mike just sighed and shook his head.\n\n\"So, Bresc,\" Janet said finally, turning the camera toward Mona, who was still sitting on the floor, quite naked. Rather than be bothered by her friend recording her in the altogether, Mona began pretending to pose, primping her hair and batting her eyelashes. \"Y'want me to record this li'l soiree for posterity? I'm kinda sorry I didn't do it my first time with the beast, y'know?\"\n\nMona considered for a moment and then smiled cheerfully. \"As long as it's not available for general distribution and viewing, that's not a bad idea, J. Go for it.\"\n\n\"I won't even give DeBourne a copy, I promise,\" Janet assured her, still recording.\n\n\"Don't I get a say in this?\" Mike asked.\n\n\"No,\" the two girls said in unison before laughing together. \"Your purpose is to provide pleasure by giving us a good dicking,\" Janet added. \"We put up with your giant nerd brain, don't we? We've gotta get something worthwhile outta this.\"\n\n\"Go ahead and record, Jan,\" Mona said, getting back up and kneeling in front of Mike's erection again. \"Should I pick up where I left off?\"\n\n\"Dealer's choice,\" Janet answered, recording again. Mona nodded and began fitting her mouth over Mike's cock again, slowly pushing her lips down her length as far as she could.\n\n\"That's it, keep goin', babe,\" Janet said encouragingly, acutely aware of the tingle growing stronger between her own legs. \"This is gold.\"\n\nI'll bet Heyman's sorry she left now... she thought in dark amusement.\n\n***\n\nUpstairs and down the hallway...\n\n\"The big jerk...\" Lisa muttered, sitting still on her bed while Karen sat in front of her and used her thumbs to press on her friend's nose gently. There was nothing actually wrong, but Lisa was making it sound like she'd been struck in the face with a warhammer.\n\nWhich was fair, under the circumstances.\n\n\"Why'd he hafta go and do that?\" she continued to grouse. The bridge of her nose was slightly bruised, and there was a small amount of dark skin at the very corner of her eyes. \"I crashed the party to make Mona's sex awkward and poke fun at dicks, not get smashed in the face by one.\"\n\n\"Look, if you're going to answer your own questions, do I really need to be here for this conversation at all?\" Karen reasoned, still checking the redhead out for thoroughness' sake. \"Whether you like it or not, darling, you had that coming. You can't just wander around insulting people's genitalia, you know.\"\n\n\"Even icky boys?\" Lisa moped.\n\n\"There's nothing icky about that boy, and you know it,\" Karen said firmly. \"Except maybe for his predilection for wearing tartan pants and listening to the Bay City Rollers. Even if you are completely gay, you have to admit that is a very fine specimen of the male member he's lugging around.\"\n\nLisa raised an eyebrow. \"Kar, did you just compliment Mike's schlong? Is there something you need to tell us?\"\n\n\"I'm perfectly capable of being objective, Lisa, even when faced with a 'schlong' as imposing as his, thank you,\" Karen replied. \"But to boot, the minute Janet had access to that equipment, her grades slipped, you may recall. I fully expect Mona's to start doing so as well. I would just as soon avoid any temptation that is likely to unhinge me, since I'd be exiled to the Caribbean or Belgium by my family for my failure.\"\n\nShe handed Lisa a small wad of aloe-infused tissues and walked away, allowing her roomie to see to her sinuses. Even if Mike hadn't actually done any damage, he'd cracked the redhead's nasal cavity right open, and she was leaking like a faucet.\n\nStill, she'd had it coming.\n\nLisa trumpeted into the tissue, shaking her head back and forth before making a wry face and dumping the mess in her wastebasket. \"So y'called your parents?\"\n\nKaren nodded, sitting on her bed now. \"I asked them to come down when they could, I said I had something to tell them.\"\n\n\"Think your dad'll spend the night tryin' to guess what you wanna speak with them about?\" Lisa asked, crossing her eyes as she pressed the tip of her finger against her nose and wiggled it. Still hurt. The big jerk...\n\n\"Probably not,\" the bronze-haired goddess mused, shrugging her shoulders, her legs crossed. \"I've trained him to trust me about things. If I'd screwed up, he'd probably expect me to exile myself, and save them the trouble.\"\n\n\"I was kinda lookin' forward to you goin' to Seoul, Kar, no lie,\" the redhead admitted. \"But I totally get it about Lucerne. And qualifying for Barcelona will probably be easier than coming up with another discovery that makes all the eggheads pee themselves, right?\"\n\n\"You're probably actually right, absurd as that sounds,\" Karen laughed. \"Me cleaning up in archery, fencing, and equestrian is probably easier than producing another physics-shattering discovery. For me, anyway. I wouldn't be so sure about DeBourne.\"\n\nLisa went quiet and looked contemplative for several seconds, and Karen just watched her, head tilted slightly in curiosity.\n\n\"What is it, darling?\" she asked finally.\n\n\"It's... never mind, Kar, it was just a weird and awkward thought,\" Lisa answered, trying to wave it off.\n\n\"Well now I have to know,\" Karen replied, smiling. \"Go on, Lisa, you know I'll worm it out of you eventually, so just save yourself the trouble.\"\n\nLisa sighed, looking at the floor. \"I... I was jus' wondering what Jenny would've thought of Mike, if she'd met him.\"\n\nKaren was silent for some moments before smiling again. \"I can pretty much guarantee that she would have fallen in love with him, darling. Very hard.\"\n\nLisa considered and then nodded. \"No wonder y'never brought him up while she was here.\"\n\nKaren closed her eyes, thinking about how very correct, and how very, very wrong that simple statement was, all at once. It boggled the mind.\n\nAnd she had no answer herself. How could she?\n\n***\n\nBlackwell Main Dining Room, the present, actual St. Paddy's Day...\n\n\"Heavens, look at you lot,\" Karen mused, smirking as various members of the staff shuffled into the big dining room, most of them still wearing their pajamas or robes. Per Mike's instructions, they all had the morning off, following the carousing the night before, and he was making breakfast for everyone, with Alex's assistance. Karen was still in her own robe, a silken kimono-style work of art, black with gold sigils of the Amano clan on it. It had been a gift, long ago. \"Are we sure a threnody is not in order?\"\n\nTunde just sat in his chair, looking blankly at the opposite wall and seeming rather pale, despite his ethnicity. Trilby was little better, despite having not drunk very much. She had her elbows on the table and her hands were rubbing at her cheeks and her eyes, trying to get the tingling to stop.\n\nValentina sat down, shaking her head slowly, eyes squeezed shut. She regretted having a brain, since it wouldn't stop pounding. \"I thought you liked me, Mistress. How could you let me do that to myself?\"\n\nKaren almost giggled. \"You're a big girl, with free will and agency, Miss Prospero, I have faith in your judgement.\"\n\n\"No offense, Mistress, but that's obviously really dumb,\" the brunette mumbled, trying to stay upright in her chair. Next to her, even Ari was looking less than pleased at still being alive. His super-cellphone, sitting on the table next to him and monitoring the estate's computers, buzzed loudly, and everyone (except Karen) winced, groaning before Ari picked it up to check what was happening. Of course, it was nothing.\n\nTheresa seemed grateful for the morning off, looking rather pale and slurping at her coffee dully. Marie, who had indulged in enough beers followed by wine that hangover struck, sat next to the chef, breathing rhythmically through her nose.\n\n\"Oh my God, I'd forgotten,\" mumbled Theresa. \"Whiskey is the absolute Devil.\"\n\n\"Ma 'vefes ket bet mezv-dall derc'h, 'vefes ket o' klemm gant an droug blev hiziv...\" Marie grumbled to her co-worker, not appreciating the noise of conversation so close to her person.\n\n\"Now, Miss Jezequel, there's no need to be so testy, I promise we'll have you fixed up straight away,\" Karen chided, smiling at her gardener and botanist.\n\nMarie stared at Karen in bleary-eyed disbelief. \"Komz a rit brezhong?\"\n\nKaren smiled. \"Alli and I both speak Breton to one extent or another. I picked it up as a matter of course for some classical studies about Peter Abelard, and Alli lived in Rennes for a time.\"\n\n\"Digarez...\" Marie said humbly, blushing.\n\n\"What did she even say to me?\" Theresa asked.\n\nAlexa had just breezed into the room and sat down next to Karen. She was wearing a plush cr\u00e8me-coloured bathrobe and smiled pleasantly. \"She said that if you hadn't been pissed like a newt yesterday, then you wouldn't be complaining about a hangover today.\"\n\nTheresa looked at the Breton woman. \"You have newts in France?\"\n\nGlenda sauntered in, trying not to laugh as she looked at her fellow staff members. \"Oh, you poor dears. I honestly feel bad that I'm not suffering with you.\"\n\n\"Wanna swap?\" Trilby muttered, trying not to burp into her fist.\n\n\"Jeesh, I thought I was comin' down to breakfast and here I am in the middle of a funeral,\" Andrea quipped as she strolled in seconds later, already in her work coveralls. \"C'mon, you guys didn't drink that much. Dave'n I each drank more'n all of you put together.\"\n\n\"Well, yeah, but you're a big, rangy German chick, and Dave's made of old boot leather,\" Valentina complained, trying to scowl at Andrea. \"It's not like I store alcohol in my tits, y'know.\"\n\n\"If you thought you were popular with the boys now, Miss Prospero, I can guarantee they'd never leave you alone if they found out you could do that,\" Karen mused, causing Alexa to burst out laughing loudly, and consequently making everyone else at the table clutch their heads and moan in pain.\n\n\"Where is Leatherface, anyway?\" Ari asked about Dave, rubbing at his eyes and thankful that Mrs. DeBourne was keeping the curtains shut, preventing the sunlight from killing them all. His hangover was bad enough that his normally crisp, faded hair looked absolutely wilted, like a plant desperately in need of watering.\n\n\"Helpin' the Father and Son DeBourne make breakfast,\" Andrea replied as she pulled out her chair, careful not to scrape it loudly, and sat down. \"You're lucky to have your job, Theresa, that man can cook.\"\n\n\"It was one of the reasons I married him,\" Karen mentioned. \"Before we moved back here, we owned a home in Kleinburg, and Michael did most of the cooking. It was my job to make sure the constant flow of entire sides of beef and other foods were in stock, to keep him and my growing boy from starving.\"\n\n\"Good morning,\" Jordan said politely as he entered the room, already dressed and looking crisp and dignified. \"I trust everyone is well?\"\n\n\"Oh, c'mon!\" Trilby groused, looking up at the English gentleman, scowling, while Valentina just groaned and put her face in her hands in despair. \"You drank more'n most of us and you're not hung over? You're like, a million!\"\n\n\"Be that as it may, my dear,\" Jordan said amiably, allowing Alexa to seat him before giving him a warm hug and then returning to her own chair. \"You will find that in the service of this family, a healthy tolerance to alcohol is something of a plus.\"\n\n\"Then I am dead,\" Tunde said, still staring straight ahead at the far wall. \"So this is how I die...\"\n\n\"Oh, you're such a drama llama, Tunde,\" Andrea laughed, patting his shoulder. \"The guys said they'll start carting in the food in about five.\"\n\n\"I am glad to hear it,\" Tatyana sighed, squinting as she looked at her cup of strong coffee. She didn't drink often, and now she remembered why. She thought back to when she was a little girl, sneaking out of her room late at night and going to watch her father and other Soviet expats sitting around the dining table in their house, discussing the old country and drinking cheap vodka dripped through burnt toast.\n\nShe'd tried the foul concoction once she was a teenager and decided her father and his friends were crazy. Smart enough to flee totalitarianism but bringing some of their absurd peasant rituals with them. Who the Hell thought that was a good idea?\n\n\"Madame, it is very kind of you and your husband to look after your staff like this after last night,\" she added, appreciating the strong coffee, not to mention the morning off. Were all holidays going to be like this with these people? \"I promise you that we will all be back up and running later this morning.\"\n\n\"Might as well just draw up my termination papers now, then,\" Trilby sighed while Val moaned and laid her forehead on the table surface, rocking it back and forth slowly.\n\n\"Miss Orlova, it was our fault that the staff is traumatized, and we factored that in when we invited you out,\" Karen assured her, smiling. \"Besides, it's St. Patrick's Day, everyone can have it off to recover. Andrea can just do a quick check to make sure that the plumbing and furnaces are working, and that should cover us.\"\n\n\"Thank you, ma'am,\" Tatyana said, nodding. \"They are a good staff, even if they cannot hold their liquor, seemingly.\"\n\n\"Okay, heads up,\" Dave said, striding into the room while holding a large tray full of breakfast condiments which he put on the table. \"Plenty of food inbound, something for everyone. Sorry, Theresa, we might've plundered some of your goodies from the coolers and refrigerators.\"\n\nThe chef waved it off as she rubbed her face, trying to get herself ready to eat. She understood the importance of eating after a night of carousing and despite a hangover. At least she wasn't being forced to drink pickle brine. Nobody was that hung over.\n\nWell, maybe Tunde.\n\nThe DeBourne men (already dressed) were wheeling in loads of breakfast food on carts, ranging from granola muesli and fresh grapefruit, to various cereals, eggs, omelettes, bacon, sausages, and Belgian waffles. There was milk, juice, and more coffee. For Trilby and Tunde, there were vegetarian options.\n\n\"Wow, not bad,\" Theresa managed to say. The two of them had managed to more or less match her output for a big breakfast. \"You even remembered the paprika for the eggs.\"\n\n\"What're eggs without paprika and Tabasco sauce?\" Alex replied cheerfully as he spaced the food around the table and Mike poured more drinks for everyone. Once they were both sitting, Karen gestured for everyone to dig in, allowing her husband to make a mimosa for her.\n\nTatyana looked around the table and noticed something. \"Where are Mrs. LeTourneau-Kjaer and Mrs. Kjaer-LeTourneau? I just noticed that they are not here, but I was certain that they were using a guest room last night.\"\n\n\"I took them home early this morning at their request, before any of you got up,\" Glenda mentioned. \"They were both in pretty bad shape, but they said they wanted to go sleep it off in their own bed.\"\n\n\"Yeah, let's run with that excuse,\" Alexa giggled as she put cinnamon butter on her toast. \"Oh, I meant to ask... what're in all those boxes in SB3-9?\"\n\n\"Well, if you must know, costumes,\" Karen replied, adding fruit to her muesli. \"Quite a few decades' worth, I believe.\"\n\n\"What, like Halloween costumes?\" the blonde queried.\n\n\"It's more... nerdy... than that,\" Karen admitted. \"They're outfits and costumes we've built and worn to various sci-fi and fantasy conventions over the years.\"\n\nAlexa just stared at her sister as if someone had hit her 'Pause' button. It was some seconds before she spoke.\n\n\"Cosplay?\" she asked, clearly bewildered. \"Like that anime cosplay stuff Fre is always losing her mind about?\"\n\n\"I guess so.\"\n\n\"You,\" Alexa said, her voice flat. \"My big sissy, the most dignified woman I've ever met, has gone to nerd cons and cosplayed?\"\n\n\"If you care to frame it in such terms, then yes,\" Karen replied, shrugging. \"I have indeed accompanied my husband and my son to several sci-fi and fantasy enthusiast gatherings and I have indeed worn costumes, which people were very appreciative of.\"\n\n\"Mom makes a great Sister of Battle,\" Alex added, grinning.\n\n\"A what?\" Valentina asked, pausing in eating her cereal.\n\nAlex pulled out his phone and fiddled with it for some seconds before showing something to the housekeeper. Valentina's eyes went wide. \"Oh, wow... that's awesome.\"\n\n\"And here's dad, in his Space Wolf terminator tactical dreadnought armour,\" Alex added, showing her another picture he'd flipped to.\n\n\"Eep...\" was the tiny brunette's response, her eyes wide and her pupils small.\n\n\"I can't believe you would willingly do anything that nerdy, Kar,\" Alexa sighed, shaking her head.\n\n\"Why would I choose to be left out?\" Karen asked simply. \"A chance to prove my costuming and presentation skills are better than the masses around me? How is this any different than going to a Renaissance Faire, might one inquire?\"\n\n\"I've passed on going to so many of those cons with Fre back in Europe, no matter how many times she asked,\" Alexa pointed out. \"Too dorky.\"\n\nAlexa showed his wife the picture of his father in his terminator armour.\n\n\"Okay, that's just ridic, even if it's not dorky,\" Alexa protested. \"Aside from watching nerds dress up, what motivation could I possibly have to attend? Half the nerds don't even know how to cosplay as a hygienic person.\"\n\nAlex showed her a quick series of pictures. Alexa looked at them intently.\n\n\"Okay, so the cosplay girls can be hot,\" she admitted. \"But so what?\"\n\n\"Like other geeks, they live for sex,\" Alex pointed out. \"And they're very often bi and decidedly uninhibited.\"\n\n\"So...\" the blonde girl mused. \"You and I could be having sex with hot cosplay girls for an entire weekend?\"\n\n\"Kar and I get laid like Mothra's eggs when we go,\" Mike added. He then noticed all the staff members looking at him in vague disbelief. \"What?\"\n\n\"So when's this convention, and what costumes am I wearing?\" Alexa asked brightly, suddenly a big advocate of nerd events.\n\n***\n\nMike's dorm room, 1987...\n\n\"Wow, lookin' great, M,\" Janet said, squatting down and filming the action in the middle of the room. By this point, she'd undressed herself, but was also resolved to not interfere with Mona's first time getting skewered on DeBourne's giant tool. \"Keep it up, this is gold!\"\n\nAs she filmed, Mike was lying on his back on the floor while Mona propped herself up over him in a crab stance, moaning as she pumped her hips up and down, taking his dick in and out of her wanton pussy, split wide by his girth. She was facing down his body and her legs were spread wide enough to give Janet's camcorder an excellent view of the action. DeBourne's cock glistened with her wetness, and Janet couldn't believe how turned on she was.\n\n\"Can't believe... it took me this long... to do this...\" Mona panted as she bounced up and down, feeling like her insides were being gloriously split open by a baseball bat. The only thing she'd fucked that was close to this before was that champagne bottle back at Karen's place a few weeks earlier. \"Gnnn, fuck!\"\n\n\"I hear ya,\" Janet agreed, still filming and somehow resisting the urge to masturbate while she recorded. Mona shuddered as Mike's hands came up once again and began fondling and squeezing her breasts, making the black girl keen in wanton delight. \"Guess y'don't blame me, right? Even if he was wearing those stupid tartan pants the first time we saw him?\"\n\nBut Mona was no longer capable of answering. Her whole body shook and she groaned loudly, clenching her jaw as she strained. She clamped down on Mike's cock hard as she came again, this being her fourth orgasm, the second since he'd entered her. Her limbs gave out and she collapsed down onto his massive frame, her chest heaving. Her legs were still parted and he was deep inside her. He held her breasts and was pumping inside her, making her whimper and squirm.",
        "\"Y'gotta... you've gotta cum soon, big guy,\" she panted, sweat streaming down her writhing form. \"I've got maybe another in me and then I'm tapping out. You're gonna kill me.\"\n\nMike nodded and resumed his strong thrusts, pushing deep inside. Mona clamped her hand over her mouth as she squealed, shaking again like she was having a seizure. Mike's arms held her tight and the huge man grunted, finally letting go and pumping his cum deep into her. Janet was still getting the whole thing on tape, and it was a minor miracle she wasn't fingering herself. Her pussy was nearly as sloppy a mess as her friend's.\n\nMona seemed to have passed out, her eyes closed and her body limp. Her head was turned to the side, and the only sign of her being alive at all was the rising and falling of her breasts. Well, that and her pussy still clenching rhythmically around Mike's cock, but that wasn't immediately visible from the outside. Janet kept filming, knowing how Mona would want this recorded for herself- slow pans up and down her sweat-slicked body, showing her exquisite exhaustion. Not only was it erotic, but if Mona wanted to try to animate a scene like this, she'd have a good model to work from. Janet wasn't as good with a camera, but the basics were still there. Mona had instructed her well.\n\nMona finally stirred, sighing quietly. Mike let her come back to life at her own pace, not wanting to jolt her. He was perfectly content where he was for now. She put her hands on top of his and turned her head to smile at him contentedly.\n\n\"Mmmm, hope you don't have to be anywhere soon,\" she purred, kissing his nose. \"Because I doubt I'm gonna be able to move for a bit.\"\n\n\"Guess I'm your prisoner until further notice,\" Mike replied, squeezing her breasts and making her giggle.\n\n\"God, you two are disgusting,\" Janet sighed, shaking her head. \"Can I turn off the camera before the lens just fucking melts from all the cute? Now we know what Snow White and Prince Florian's honeymoon looked like...\"\n\n\"Oh, shut up, you slut,\" Mona snickered, sitting up finally, her knees on either side of Mike's hips and still impaled on him. She stretched her arms over her head and squeak-yawned before shuddering and giggling suddenly as Mike's member touched something deep inside her. Janet, despite her protests, kept filming while Mona leaned forward and braced herself on Mike's powerful thighs and took a deep breath. With a grunt, she slowly pulled herself off his enormous, still rigid cock, which finally left her with a gooey, loud 'pop!' sound. Mona squeaked and shivered before hastily grabbing a towel she'd put on the floor beside her, pushing it against her pussy before she began leaking all over the place.\n\n\"Dayum,\" she sighed, taking a deep breath. \"I'm glad I've got you for a tag-team partner, Remington. I dunno how you did it on your own.\"\n\nJanet shook her head. \"I wasn't the only one, just the first. Bastard would've killed me too, if I'd been on my own. Haven't you noticed girls around campus walking funny since the semester began?\"\n\n\"Why am I letting you two talk about me like I'm not here?\" Mike muttered, slowly moving himself up to rest on his elbows while he looked at them both.\n\n\"Oh, don't be such a diva,\" Janet replied as Mona dutifully turned around and leaned down over his glistening cock, starting to kill, lick and suck their mingled cum off him. \"You just got laid, didn't you? And you didn't even have to buy her dinner, just prove you know animation better than she does.\"\n\n\"If truff...\" Mona agreed, nodding while she bobbed up and down on him, her cheeks bulging like a chipmunk's before coming up and taking a breath. \"Well, maybe not better than me. He may just know it weirder than I do.\"\n\n\"Hey, at least he's staying true to type, then,\" Janet quipped, making them both burst into giggles.\n\nMike just shook her head and sighed. Girls were crazy.\n\n***\n\nBlackwell Manor, the present...\n\n\"And what are you so eagerly researching on your tablet?\" Alex queried as he strolled into the bedroom he shared with his wife. Alexa was sitting back on the huge bed, propped up against many soft pillows, with her cat Morgenmuffel in her lap. She seemed to be tapping and scrolling through pictures intently.\n\n\"Cosplay ideas,\" she replied, her eyes never leaving the screen. \"If I'm goin' to this nerd convention, I wanna slay it.\"\n\n\"Well, you'd have a lock on insanely hot blonde characters, no doubt,\" he chuckled as he walked by and went to check on his crabs, Blurgle and Grundle. He made sure they had enough water and food before going to sit on the edge of the bed and watch his aunt. \"Gottny good ideas so far?\"\n\n\"I found one that really appealed,\" she answered, calling up a folder from her gallery and handing the tablet to Alex. \"Whaddya think, big man? Would you be willing to walk around with me on your arm if I'm rockin' that outfit?\"\n\nAlex began perusing the pictures she'd saved so far, considering and nodding. \"Ms. Marvel from the Eighties. Nice. She's got your rack, and all the blonde hair. That's a good choice. Easy to make, for sure. We could measure you and whip that up in a day, no problem.\"\n\n\"Do you wanna help me come up with ideas?\" she asked, holding Morgenmuffel and stroking his jowls and chin with her fingers, sending the furball into purring fits of ecstasy. \"You're good at this stuff, after all.\"\n\n\"Sure,\" he said easily, settling onto the bed beside her. Alexa snuggled into him, resting her head on his shoulder and watching while he did his thing. \"So, d'you wanna have cosplay outfits for just certain times of day or competitions, or do you wanna be in outfits throughout the Con?\"\n\n\"I... don't know,\" Alexa replied. \"Hadn't thought of it that way, to be honest. Do other people spend the entire convention in their outfits?\"\n\n\"Sure, there are some diehards who do,\" Alex answered. \"But if you wanna wow them all weekend, y'might wanna have a casual outfit or two that's easy to walk around in. Liiiiiike...\"\n\nAlex did a quick search and showed her the result. \"This is an anime character called 'Galko-chan'. She's built like you, same hair and eyes, and the outfit is dead simple and easy to wear. Best part is that everyone'll still recognize it as a cosplay, but you are going easy on yourself.\"\n\n\"Oh, wow, yeah,\" she said quietly, nodding as he saved several pictures to her cosplay gallery. \"So if that's what I walk around in just casually, what else can I do for real cosplay?\"\n\nAlex showed her something. Alexa's eyes widened. \"How the Hell did I not think of that? Put that in the folder. That'd be really easy to make too, wouldn't it?\"\n\nHe grinned. \"I think showing off your insane figure precludes the need to come up with really complex outfits for you to wear. Do you want a complex one, or are we gonna err on the side of sexy?\"\n\nHe did some more searching. \"Here's another easy one, a high school cheerleader outfit, but you get to carry an awesome, girly chainsaw around.\"\n\nShe smirked. \"Ooh, and wear my hair in cute ponytails. I'm in. Do I get to wear a wax head that looks like yours on my belt?\"\n\n\"I'm sure mom'd be more than happy to see you wearing my head on your belt,\" Alex laughed. \"Do you want a Galadriel outfit?\"\n\nAlexa considered. \"Well, yeah, but... do I have to tape down my tits to make it look legit?\"\n\nAlex shrugged. \"The books never said elves weren't stacked, did they? All we know was that the older the elves were, the mightier they were, and tall. Maybe Galadriel had tits, she just dressed in modest amounts of diaphanous material to not violate any dress codes, right? She's Galadriel, who's gonna say no to her?\"\n\nShe giggled. \"Only you could make an argument about Galadriel being built like a porn star sound reasonable. Can we keep looking?\"\n\n\"Nothin' I'd rather do,\" Alex said easily, continuing the search for his wife's cosplay outfits. And he was telling the truth, at this very moment, there was nothing he would rather do.\n\nIt was gonna be a good nerd convention.\n\n***\n\nA dorm room, some three decades earlier...\n\nMike was standing in a corner of his room, looking at his bookshelf and pondering what he felt like reading. He'd finished all his studying, and was actually well ahead of the game in that regard. At this point, his professors were consulting him about certain aspects of the subjects they were teaching, usually about the math involved, or for his insane intuitive leaps and lateral thinking. But that was behind him for the night, and he could now relax. He'd called his parents earlier and told them his decision about going to Lucerne in favour of going to Seoul to represent Canada in the Olympics.\n\n\"Michael, you don't need to feel bad about your decision,\" his mother had assured him over the phone. He was talking to her, but he knew that everyone else would be behind her, listening in and bursting with excitement. \"We may not understand your black hole work, but we're still incredibly proud of you. Not everyone's son can rock the world of science, can they?\"\n\n\"I guess,\" he'd allowed. He knew they'd be supportive, they always were. And they meant it. \"It's just a lot easier to cheer when I'm being televised, right?\"\n\n\"We'll be cheering when you go to Barcelona,\" Anne said warmly. \"It's up to you to not mess up the schedule by making another amazing scientific discovery, isn't it?\"\n\n\"I'll bet there isn't even a medal for your black hole stuff, is there?\" Connor had teased from just behind his mother.\n\n\"There is, in fact, it's called a Nobel Prize,\" Mike pointed out, laughing. \"And it comes with a cash prize that'd allow mom and dad to retire.\"\n\n\"Then have fun in Switzerland, egghead!\" Connor cackled. \"Make sure you buy me a Nintendo with your prize money!\"\n\nIt had been a very gratifying call. It would be some days before he'd made enough to afford another long-distance card, but he would wait. He'd gotten all the important things out of the way on that call. He missed his family terribly, even if he didn't exactly miss Kapuskasing as a whole. The tiny town of some thousands was just too small for him. He had too many ambitions, and wanted to know too many things. They'd done what they could for him, but Toronto was where he needed to be.\n\nAnd side-by-side with Karen Gordon, he'd put the university on the map, rocking the physics world to its core. The top brass at Oxford, Caltech, even MIT were insanely jealous. It felt good. And he had no intention of letting up.\n\nHe was trying to decide between The Silmarillion and a book from the Doc Savage series when there was a knock at the door.\n\n\"Come in, Heyman,\" he said casually, still weighing his options. He knew both books inside and out, of course, but which would be more gratifying to lose himself in tonight?\n\n\"How'd you know it was me?\" Lisa asked as she stepped inside and closed the door behind her.\n\nHe looked over at her and smiled. \"You have a tiny knock, and you knock three times, followed by a quick pause and then one more. It's your signature.\"\n\n\"My knock isn't tiny, it's just... subtle,\" Lisa objected, wrinkling her nose as she stood by the door. She looked around the room. It was meant to be a double berth, but Mike was so damn big that it was impractical to room anyone with him. It benefited the university to meet his needs in this regard, since they had high expectations of what he'd achieve on their behalf. The recent success of the Calabi-Yau compactification experiments illustrated this admirably. To that end, he had a double room to himself. His enormous bed that Karen had bought for him some weeks back as a thank-you for his assistance with the Beijing scam took up nearly half the floor. The rest was occupied by a desk he studied at and bookshelves. The only d\u00e9cor seemed to be endless plastic models and various artworks on the walls, some of which was Mona's. \"'sides, I didn't come here to have my knock critiqued, I came to apologize.\"\n\n\"What do you need to apologize for?\" he queried, looking at the books in his hands again.\n\nLisa fretted. \"For... for telling you that dicks were gross. I'm sorry.\"\n\nHe looked over at her again. \"Heyman, you're gay, you're allowed to think that the male member is gross.\"\n\n\"Oh, I think they are, I just shouldn't've said it,\" she said, shrugging. \"And I've been told by three people I trust implicitly that yours isn't gross, so... uh... good job on having a pretty dick, I guess.\"\n\nHe tilted his head as he looked at her curiously. \"Did Gordon put you up to this? Tell you to be civil and genteel and come over here and apologize?\"\n\n\"No, oddly,\" Lisa replied, shaking her head. \"Sounds like something she'd do, yeah, but this was not her. I just gotta not be mean, right?\"\n\n\"Okay, well... apology accepted,\" Mike said simply. \"Thank you.\"\n\n\"Good...\" Lisa said before trailing off into silence, looking somewhat awkward. \"Yeah... soooo, I'm sorry I insulted your dick, you're sorry you smacked me in the face with it, we're even-steven, right?\"\n\nMike paused in his book decision and looked at her levelly. \"Why would I be sorry I smacked you? You were being a brat.\"\n\n\"Hey, I apologized, didn't I?\" Lisa protested, frowning. \"That's how this works! I apologize, you do too, and then everything's good.\"\n\n\"I get why you're over here,\" he laughed, putting the books back on the shelf and turning to look down at her, his laser-blue eyes glinting with amusement. \"You're bent out of shape because I realigned your neurons, and you want an apology so that at least you're not the only one at fault.\"\n\n\"Hey now!\" Lisa snapped, trying to be angry, but knowing she was losing this logic war. \"There's plenty of blame to go around!\"\n\n\"Britain didn't apologize to Germany for pummeling it in World War Two,\" Mike pointed out. \"Germany got what it had coming.\"\n\n\"I am not Germany!\" she hissed, leaning forward slightly, her hands balled up in little fists at her side. \"I came over and complimented your dick and this is how you repay me?\"\n\nMike raised an eyebrow, trying to ascertain what was going on in the little lunatic's mind. In some ways, it was even harder than with Gordon, and she was nuts. Lisa swallowed as he towered over her and tried to stand up taller. It didn't help.\n\n\"Heyman, you know perfectly well that me apologizing for braining you with my hardon is not gonna fix anything, so what exactly are you doing here?\"\n\nShe was silent for some second before she sighed. \"I... I did come to apologize,\" she confessed finally. \"I just lose my nerve around you because you're so damn big and... you-ish.\"\n\n\"You know you don't need to be afraid of me, right?\" he queried, wanting to make sure that wasn't part of the issue here. He was ninety-nine percent sure it wasn't, but it never hurt to check. \"I could never be a threat to you, Lisa.\"\n\n\"I know,\" she said in a quiet voice, nodding. She was looking at his feet. Each of them was bigger than her head. \"It's just... you're always gonna intimidate everyone, Mike, one way or another. That's just how you were made. It's not on you to adapt, it's on the rest of us to.\"\n\n\"So I scare you and your way of dealing with it is to get obstreperous and try to make me apologize as a power move?\" he reasoned. He thought about that for a moment and then nodded and smiled. \"I can see that.\"\n\nShe blinked at him. \"You can?\"\n\nHe shrugged. \"You know how little dogs get really angsty around much larger dogs and spend all their time barking and trying to bite them? They just get a little unreasonable because they don't know what to do. Not that you're a dog, mind.\"\n\n\"No, I get it, and you're probably right,\" she admitted. \"I guess you being you just throws me off because you're so much bigger than life.\"\n\n\"You room with Gordon, Lisa,\" Mike pointed out. \"You've got almost more experience than anyone else when it comes to living with mythical figures.\"\n\n\"Don't remind me,\" the redhead muttered. \"But I did come over to apologize. I guess I... I got rambunctious because sometimes I feel weirdly left out.\"\n\nMike said nothing, compelling her to elaborate further. Damn him. She blushed. \"I... you've been having sex with Janet for months, and now you're doin' it with Mona, so I'm the odd one out.\"\n\n\"Heyman, you're a lesbian,\" Mike said, somewhat bewildered. \"You don't want sexual gratification from me at all.\"\n\n\"What's that got to do with anything?\" she groused, blushing. \"I... I've heard you tell Janet how pretty she is, and the same to Mona. I don't think you've ever told me I'm pretty.\"\n\nMike closed his eyes for a moment and shook his head as if to clear it. What was she on about? \"Since when do you need validation of your appearance from a man? Or even want it? We've just been over this- you're gay.\"\n\n\"That doesn't mean it isn't nice to hear,\" she said, almost stomping her foot. \"Even if it's from the other team, a compliment about being pretty is still a compliment, DeBourne. Okay, my boobs are really tiny, and maybe I'm on the skinny side, and maybe my butt's a little flat, but I'm not Anne Shirley, right? I mean... I'm at least cute, aren't I?\"\n\nMike sighed before moving closer to her, a single stride being all that was necessary. Lisa goggled up at him, now completely cast in his shadow, since she barely reached his sternum. She swallowed again, and she could feel her heart pounding in her chest as he gazed down upon her, the eyes of a thunder god holding hers, his enormous form blocking out the light of the lamp somewhere behind him.\n\nShe felt more than saw his huge hand reach in and gently rest on the back of her neck. She could barely breathe as he leaned down and bent her backward so that she was resting in his hand. His gaze held hers, his handsome face framed by his lion's mane of golden blond hair. Blood howled in her ears like a sea tempest.\n\n\"Lisa Ruthelyn Heyman,\" he said in his molten caramel baritone that made women's knees weak, her own included. \"You... are... beautiful.\"\n\nLisa drew in a breath, but felt a strange, mounting panic, her eyes widening.\n\n*THUMMMP!*\n\nMike groaned and sank to the floor, doubled over and trembling. Lisa looked at him in shock before turning to open the door and speeding out of the dorm room and down the hall.\n\n\"Gnnnnn... probably had that... coming...\" Mike grunted in pain to himself as he held his groin, everything yellow behind his eyes.\n\n***\n\nAnother dorm room, on the other side of King's College Circle...\n\n\"Can you believe it?\" Mona said, sounding very unamused as she sat cross-legged on the soft carpet. \"This kid was determined that he was gonna get me to go out with him, and he was not taking no for answer.\"\n\n\"Did you scare him off by telling him you were currently doin' it with DeBourne?\" Janet asked, smirking as she sat nearby. She'd done that exact thing more than a few times over the past semester in order to ward off unwelcome suitors.\n\n\"No, I didn't want to abuse that privilege,\" the black girl said, waving it off. \"I told him I was dating Kar.\"\n\nJanet burst out laughing while Karen just rolled her eyes and shook her head, playing her part in the little dramedy. They continued gossiping about the boys on campus when Mona paused and looked around. \"Speaking of icky boys, where's Red?\"\n\nThey both looked at Karen, who just shrugged. \"Am I my lesbian's keeper?\" she reasoned.\n\nAs if on cue, the door opened and Lisa hurried in, closing the door by leaning back against it, breathing rather heavily. She seemed pale, and there was a look of vague panic in her eyes, as if she'd done something really wrong and needed to hide from the cops.\n\n\"What's with you, babe?\" Mona inquired, looking at Lisa curiously. \"Is anything wrong?\"\n\nLisa tried to control her breathing before she spoke, her eyes looking positively haunted. \"I... I might've just kneed DeBourne in the nuts, really hard.\""
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "romance",
        "humour",
        "music",
        "flashbacks",
        "alcohol",
        "incest theme",
        "nerd knowledge"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/mike-and-karen-ch-23"
}