{
    "title": "Bliss Ch. 05",
    "pages": [
        "Submission.\n\nIt's an interesting word, isn't it?\n\nSubmission.\n\nWhat comes to mind when you think of it? Weakness? Passivity? Consider that even the Latin root of the word translates to 'lowering oneself'. Maybe that's why, initially, I fought so hard against thinking of my self, aligning myself if you will, with that word. If someone were to describe to you a third party you'd never met, and they described them as a submissive, what would you have pictured?\n\nMe? I would have pictured someone small, frail. A wallflower. No, more than that. Someone shy to the point of neurosis. Mousy. Mostly, I would have pictured someone so personally damaged they held no value in themselves beyond how others used them. A person with no will and little, if any, personality. It would have been the last word I would have used to describe myself in any way.\n\nExcept....\n\nExcept...if I am totally honest with myself, I kind of was a bit on the submissive side. Not so much in the business world, really. I mean, I always strove to keep my clients happy, but that is what we all do. And I was tough, I am tough, an aggressive go-getter, the barracuda of the office. If there was a client that was difficult to secure, I worked my ass off getting them on board and drove all who worked with me like a team of mules. Quite frankly, a lot of people thought of me professionally as a bit of a bitch. But in my personal life...different story.\n\nDon't get me wrong, I was never a pushover. And I'm still not. But I was always...trying to please in my personal relationships. Trying to make sure all around me were happy. Never ignoring my own happiness, but always putting theirs first. And the men I dated -- when I dated -- tended to be physically imposing and have more domineering personalities. Note I say domineering and not dominating intentionally. I think I was drawn to them because I thought they were more than that, but it was never long before I realized they were all brutes or blowhards, and I lost all interest in them.\n\nI think I was looking for someone dominant without even realizing.\n\nThen along came Malcolm, who seemed to recognize my submissive nature and unflinchingly pushed himself in to my life. Don't misunderstand me, my submission to Malcolm is an active decision on my part. I realized after that first weekend we spent together this is a choice I make to give him myself, give him the gift of my complete surrender. I am not weak or passive with him. My will is strong, I am strong. It is that strength, that will, that draws him to me. He doesn't break my will, he has no desire to; he simply wants me to give it over to him. And I can. I do. I give him this gift of myself, my essence, and I submit to him as he demands, because I am strong enough to do so. And in his power, in the freedom of my surrender to his dominance, my weakness is expunged, my insecurities annihilated, and I am reborn. And, in a way, he surrenders a part of himself to me. It's almost like he takes my strength, he takes my power, and in doing so he gives me his weakness, his insecurity, exorcising them through me.\n\nAm I rambling? I don't mean to. And I don't mean to make it sound \"kumbayah\". I really don't. Or easy. It wasn't -- it isn't. There is a great deal of trust involved between us. I trust him, I trust in him, completely and utterly. As he does me. And there is a freedom in it, in this trust, this connection, for both of us.\n\nSo when, late that first Friday evening after our trip to Houston, Malcolm grabbed me as I left the ladies room and pulled me in to the mens, I felt no fear. No nervousness. Just excitement.\n\nAnd arousal.\n\nA lot of arousal.\n\nHe spun me around to face the wall next to a bank of urinals and pushed me against it, leaning against me from behind. I dropped my jacket and purse on the floor, all thoughts of rushing for the bus evaporated. I could feel his cock -- already hard -- against my ass and I gave a small sigh, feeling my pussy start to get wet in response. He removed the clip holding up my hair and threw it on the floor. I watched it tumble as it skittered along the floor, coming to rest in the shadows beneath the row of sinks. Malcolm's nose nuzzled my hair as my cheek was pressed against the wall and I could hear him breathing deeply, as if he would inhale me whole.\n\nI felt him press his pelvis against me harder as he began to slowly move against me. The steely length of his arousal moved across my backside, pressing into my flesh through my clothes and moulding me around it, and I felt my skin tingle with an odd sense of pride at making him so hard. I pressed against him as well as I could and gave a slight moan.\n\n\"Are you wet for me?\" he breathed in to my ear.\n\n\"Yes,\" I whispered.\n\nHe twisted his right hand in my hair and pulled, making me arch my back. I could feel my nipples harden behind the lace of my bra as goosebumps erupted all over my skin. I love it when he pulls my hair, the tighter and harder the better. I looked at him, his big green eyes revealing something exhilarating and wild, and my lips parted in anticipation of a rough kiss that never came.\n\n\"What do you want?\" he grunted, pulling my hair a little harder.\n\n\"You,\" I moaned softly.\n\nHe used my hair in his fist to turn me around to face him. I glanced down, licking my lips a bit at the visible bulge in his expensive suit. He put his left hand on the wall next to my head, making his suit jacket spread out behind him like a cape. He leaned forward, touching his forehead to mine, his tie moving between us like a pendulum.\n\n\"Unbutton your blouse.\" I quickly obeyed, pulling it out of the waistband of my slacks and allowing it to hang open. Malcolm pulled his face away from mine, using his pelvis to hold me against the wall. I stared at his lips, aching for him to kiss me, and he smirked, seeming to read my mind.\n\n\"Put your arms behind your back, holding your forearms with your hands,\" he said, letting go of my hair and standing up fully in front of me. I obeyed, pouting a bit at the loss of contact while I lift my head to meet his gaze. Even in heels, he kind of looms over me, being so much taller and broad-shouldered. But it's not at all threatening. It's actually rather sexy.\n\nThe posture he put me in made me thrust my breasts out and I could feel my nipples straining against my bra. Malcolm tugged the cups down roughly, exposing my nipples and areolas, the bra cups lifting my breasts a bit. He used his right hand to twist and pinch my nipples, making them harder.\n\n\"Do you know what these are?\" he asks suddenly, his left hand dangling a silver chain in front of my eyes. At each end of the chain was a mean looking alligator clip with rubber or plastic covers on their tips. My first thought was 'roach clips', but I knew it couldn't be that. I just shook my head, watching the chain sway in front of my eyes. \"No?\" he teased, pulling at my right nipple, stretching it out away from my body before gently putting one of the clips on it and letting it go. He turned a small knob I hadn't noticed on the back of the clip, increasing the pressure on my nipple until I sighed; he then repeated the exercise with my left nipple. I looked down at my breasts, the clips making my nipples purple, the chain connecting them shivering with my breaths.\n\n\"These are nipple clamps,\" he said, placing a finger under my chin and making me look at him. \"Do you like them?\"\n\n\"I don't know.\"\n\n\"What?\" he asked, wrapping his right hand in my hair again and pulling. \"You don't know?\"\n\n\"I...I never...It's...yes. Yes, I like them.\" I did. I'd never had clamps on my nipples before, but they felt good. Almost like they made the very tips of my nipples super-sensitive.\n\n\"I see.\" He tightened his grip in my hair and gave a hard tug at the chain between my breasts, causing the clamps to tug painfully at my nipples and making me cry out. \"And now?\"\n\n\"Yes,\" I hissed. The pain from my nipples making me so aroused I imagined I could smell myself over the cloyingly sweet odor of urinal cakes.\n\n\"What about now?\" Malcolm asked, snicking at my nipples with his left hand. My hips jerked towards him involuntarily every time he made contact. \"Do you like them?\"\n\n\"Yes.\" Barely audible. \"Please...\"\n\n\"Please what?\"\n\n\"It hurts.\"\n\n\"Yes.\" Malcolm tugged at the chain again, making me moan. \"It hurts but you like it, don't you?\" I nodded, too overwhelmed to speak. He pulled my head back more and looked at me closely, his eyes like super-heated emeralds. He bent his head briefly and bit at my lower lip -- I could feel the slight gap in his teeth when he did -- before urging me down to my knees. He unzipped his pants and pulled his cock out with his left hand.\n\n\"Open,\" was all he said. I obeyed, and he pushed his cock into my mouth. I tried my best to suck it without using my hands, but he held my head steady with both his hands wrapped in my hair and pulled out of my mouth. I groaned in protest -- at that point the only thing that mattered to me was having Malcolm's cock in my mouth, I didn't care that we were at work, I didn't care that there were one or two other people still in the office this late on Friday, I only wanted his cock in my mouth again -- but he hushed me quickly.\n\n\"I am going to fuck that succulent little whore's mouth of yours, poppit. I am.\" He looked down at me questioningly. I nodded, taking a deep breath. \"Good girl. Open.\"\n\nI did, and he thrust his cock back in my mouth, holding my head steady. He thrust in and out, each time sliding a bit more in my mouth. It was odd at first. All I thought to do was cover my teeth with my lips and try to relax. The angle was a bit off, though, and I could feel him rubbing further and further back against my palette. I tentatively used my tongue, trying to coax him in to changing his angle a bit -- I was afraid of gagging on him -- but to no avail. He sucked in his breath with a moan when I started using my tongue, but he didn't change his stance at all.\n\nHe began pushing himself deeper down my throat, making me gag slightly with each thrust. Every time my throat tightened around him he moaned and stilled his movements for a moment. By the time I could feel the heat of his balls near my chin and felt the first tickle of his pubic hair on the tip of my nose, he had pushed past the gag reflex and was effectively smothering me with his cock. I raised my eyes to his, feeling them bulge a bit as the need to cough pushed tears out of their corners.\n\n\"That's a good cock-sucking whore.\" He moaned, brushing my tears away. \"You like having your throat stuffed with my cock, don't you?\" He pulled back a bit and I moaned in assent. \"Take your clamps off,\" he commanded, pushing back down my throat. I had forgotten they were even on, my nipples having gone a bit numb. I did, using both hands to take them off at the same time. Suddenly, I moaned and my body shook as my nipples seemed to come to life. They tingled with an ache that was the sweetest feeling. There was a heat to them, as if they would burn the surrounding tissue, and they were so sensitive I thought I could feel the movement of the air over them and specks of dust hit them.\n\nI was excruciatingly close to coming, but couldn't quite get there. I moaned and whined and slobbered around Malcolm's cock as he fucked my face faster. I could feel him get stiffer in my mouth and sensed his balls drawing up a bit. I did my best to relax my throat, but the continued sensations from my nipples and Malcolm's swearing and calling me names just heightened my own arousal, making me tense up. He pushed himself completely in my mouth, burying my nose against him and coming down my throat. I nearly gagged in spite of the large blockage in my mouth and my near-desperate state of arousal, my arms flailing a bit at my sides. I managed not to. I just swallowed as best I could as he praised me.\n\nHe pulled out of my mouth and stood in front of me, his mostly flaccid penis covered in saliva and his own semen. I instinctively leaned forward and slowly licked him clean, putting my arms behind my back again as before. He sighed contentedly and caressed my hair as I finished.\n\n\"Stand up, poppit,\" he said, tucking himself back in his pants and zipping up. \"I want to look at your nipples.\" Again, I obeyed, though it seemed an odd request. He must have seen the questioning look on my face because he explained, \"You had them on for a bit. I want to see if you're bruised or not.\"\n\n\"Too long?\"\n\n\"Probably not,\" he said, stroking the tops of my breasts gently. \"But clamps can do serious, even permanent damage. And too long is, well, subjective. What might be too long for one person is nothing to another.\" He brushed his fingers over my nipples, making me moan. \"They seem to be fine, but a slightly closer inspection might be in order.\" He bent his head and took first one nipple then the other into his mouth, swirling his tongue around them. I couldn't stand it; I was already so turned on and the feeling of his tongue on my overly-sensitive nipples was making me crazy. His left leg was somewhat nestled between mine, and I began trying to rub my crotch against his thigh, desperate for anything that would push me over the edge and get me off.\n\nHe stepped back, laughing deep in his chest as I grunted in frustration. \"Patience is a virtue, poppit.\" He straightened his clothing before smoothing his tie and hair. \"Give me your bra,\" he said, holding his hand out for it. I unbuttoned my sleeves and slipped my blouse off, holding it by the label in my teeth as I reached behind me and unhooked my bra. I slid it off and handed it to Malcolm. \"Put your blouse back on.\" He moved over to the row of sinks and washed his hands as I put my blouse back on. My hands shook as I buttoned my sleeves, making it difficult. When I moved to button the front of my blouse, Malcolm came over and pushed my hands aside, buttoning my blouse for me.\n\n\"What is it, poppit?\" he asked quietly. \"Nervous?\"\n\n\"No,\" I said, shaking my head and breathing deeply. I could smell him -- his cologne, his sweat, his skin, that addictive mix I craved more than oxygen -- but still imagined I could smell myself. \"Just a bit frustrated.\"\n\n\"I know,\" he said, finishing my buttons. He took the hem of my blouse and pulled it down, pressing my breasts flat and causing my nipples to stand out through the fabric. He began moving it back and forth slightly, the friction of the fabric against my skin making me weak. I grabbed his arm to steady myself as he let go of my top. \"My poor little slut,\" he said tenderly, giving me a peck on the forehead. He grabbed my coat and purse and handed them to me.\n\n\"It's going to get a lot more frustrating for you.\" He grabbed my hand and led me out of the men's room to the elevators. We waited for them in silence, my head ringing with his implied threat. I was about to ask him to explain when the elevator doors shussed open in front of us with a 'bing'.\n\nHe gently pushed me in to the elevator before him, his hand on my lower back. I leaned against the wall near the control panel, memories of Malcolm fucking me where I now stood making my need even more pronounced.\n\n\"Your cunt is swollen,\" he said, standing in front of me and rubbing his right hand over my mound. \"And wet. So very wet, isn't it? I can feel the humidity of your slut cunt through your pants.\" I nodded, my eyes on his. I felt hypnotized, and was afraid my voice would break the spell. \"Turn around,\" he said, removing his hand from between my legs. I did, pressing my forehead against the elevator wall.\n\n\"You have a perfect little slut's ass. Did you know that?\" he said, his hand lightly tracing between my ass cheeks. \"Has anyone ever told you that before?\" I shook my head slightly, still unwilling to speak. \"You do. Perfect.\" His hand kept running up and down my backside, his touch light, more soothing than sexual. \"Have you ever had a cock in your ass, poppit?\"\n\n\"No,\" I said quickly, tensing up.\n\n\"Perfect,\" he said as the elevator opened on the garage. He grabbed my elbow and directed me towards his car, opening my door and seating me inside. I smiled a bit at his impeccable manners; some may call it antiquated or archaic, but I found it chivalrous and totally disarming.\n\n\"What?\" he asked, catching my fleeting smile as he got in and started the car.\n\n\"You make me feel special.\"\n\n\"You are,\" he said matter-of-factly. He pulled out, heading towards his Fremont house. I briefly considered asking him to stop at my condo so I could at least get an overnight bag, but decided against it after glancing at his face. He seemed a study in purposefulness.\n\nAnd just going along with whatever he wanted excited me.\n\nWe didn't speak on the drive. I kept glancing over at Malcolm as he drove, the setting sun turning his skin golden. Traffic was heavier than usual, and we seemed to inch our way for a few miles. I looked at the people on the streets as we slowly made our way through Belltown and lower Queen Anne, watching their faces and bodies. They seemed unreal, dim, made from dirty plastic or encased in individual clouds of drab grey, separate from everyone, oblivious to their own aloneness. It was only when they met up in pairs or groups that they seemed alive, in Technicolor; yet even then, cocoons of separateness still seemed to be there, held open temporarily, but seldom shed completely. It occurred to me that I was likely one of them, too, and maybe, even with Malcolm, I never completely shed my own cocoon.\n\nThe thought was grim enough to cool the simmering between my thighs. Malcolm must have sensed something, because he reached over and tucked my hair behind my right ear before softly caressing my cheek. I glanced at him, that disconcerting feeling of affection for him making me angry with myself. I looked back out the window, chiding myself for mooning over him like an immature girl.\n\nBy the time we arrived at Malcolm's house I was in a funk, giving him the smallest of smiles as he opened my door and helped me out of his car. He grabbed my wrist and led me into his house, stopping and pushing me against the foyer wall as he pushed the front door shut with his foot.\n\n\"Drop it,\" he said, indicating my purse and coat with a slight nod of his head. I did, my mouth suddenly dry with excitement and my mood instantly elevated. \"I want you to go upstairs, undress completely, and get on the bed,\" he said, his lips a hair's width from mine. I could feel the humidity of his mouth. \"Be on hands and knees, facing away from the door, by the time I come up.\"\n\nHe stepped back and I blinked at him for a moment, suddenly chilled without his heat in close proximity. He tilted his head slightly and raised an eyebrow, and I smiled at him, quickly making my way upstairs. I undressed as fast as possible, dropping my clothes in a pile on a chair. I climbed on to his big bed and positioned myself on my hands and knees, toes touching the edge and ass pointed towards the door, and waited for Malcolm.\n\nAnd waited.\n\nAnd waited.\n\nBy the time he came in, the sun had set and I was in a half-doze, sitting on my heels with my head on my forearms. He was so quiet when he came in I didn't even realize he was there. I had been thinking about my motorcycle, contemplating taking it out of storage and getting it ready to ride again or just selling it when suddenly what felt like a hundred tiny pebbles slapped into my ass.\n\n\"Ow!\" I yelled, sitting upright and turning to look at Malcolm. He had his jacket and tie off, the cuffs of his shirt rolled up to expose his forearms. In his right hand he held a thick wooden handle with what looked like hundreds of ribbons of leather, velvet and silk dangling from the end of it. Each ribbon was about 18 inches long and had a large knot at the end of it. They swayed as Malcolm moved.",
        "\"On your hands and knees,\" he said, pushing at my back with his left hand.\n\n\"Please,\" I whisper, bending over, the mixture of nervousness and desire making me feel breathless.\n\n\"You can stop me any time,\" Malcolm whispered, bending to my ear. \"Just say your name.\" He looked at me and I nodded. He stood and moved out of my line of sight. I heard him moving behind me and concentrated on not looking back.\n\nI jumped as I felt his hands around my left thigh. I watched as he buckled a wide leather cuff around my leg just above my knee before moving to do the same to my right leg. There were three silver D rings sewn into the cuff. They gleamed mellowly in the dim light of the room. I felt almost hypnotized watching him.\n\n\"Lower your head down, arms at your sides,\" he said quietly. I obeyed quickly, my forehead on the duvet, as he bent my arms at the elbow so my wrists were by my shoulders. I watched out of the corner of my eye as he buckled another, slightly narrower cuff above my left elbow. I looked, wondering why this one had only two rings attached, as I felt him do the same to my right arm. He tugged on my arm a bit and I heard a metallic clink. I turned my head and saw he had used a large carabiner to connect the cuff on my arm to the cuff on my leg. I felt a ball of excitement in the pit of my stomach as he attached my left elbow and leg the same way. I waited, tense with anticipation.\n\n\"I wanted you like this -- naked, bound, at my disposal -- when I first met you,' he said quietly. What felt like fringe caressed my skin and I knew he was dragging that wicked looking whip over my ass. \"From the moment I shook your hand.\" His fingers caressed my sex lightly, making me sigh. \"I was looking forward to getting back to the office and working with you that day, but I was kept away.\" He slipped his fingers between my pussy lips and began making circles around my clit. I tried to shift, to open myself to him more, but couldn't move. \"I was quite cross with Ian for that.\" His tone sounded almost conversational. Anyone hearing him and not in the room would never guess he had one hand in my cunt and the other using a flogger to tickle my ass. \"That's why I proposed we work together. Ian had let slip over lunch how you wanted to go after them, and I jumped on it. I couldn't get your eyes, your blush, your delectable little ass out of my mind.\"\n\n\"Oh god, that feels so good,\" I moaned, lifting my head off the bed as his fingers massaged my clit. \"Please don't stop.\" I could feel my body tense from my toes to my scalp, I was already so close to coming. Malcolm gave my clit a slight pinch then withdrew both his hand and his whip. \"No...please,\" I nearly sobbed as he stepped back.\n\n\"Not yet.\" I heard a whoosh and felt a gentle push of air on my skin as he brought the flogger down across my ass. I heard it hit with a snap and suddenly my ass felt like it was being sprayed with needles of fire -- millions of them. I howled, more from surprise than pain, and I felt the flogger connect with the tops of my thighs.\n\n\"The entire time we worked together, I would find myself picturing you like this,\" he continued, punctuating his story by whipping me. He didn't even sound out of breath and I realized he was holding back, he could be hitting much, much harder. \"Your ass striped, in the air, cunt wet-\" the flogger came down again on my ass \"-cunt dripping, unable to move, to get away.\" He struck me four times, criss-crossing down my lower back to my thighs.\n\nAnd a funny thing happened. The pain didn't go away, but it seemed to...change. I don't know why, or how, or even at what point it changed. Or I changed. It was like my body stopped treating the pain as something bad, and changed into something good. Very, very good.\n\nI had to bite my tongue against begging him to do it more. Do it harder.\n\nHe must have sensed something, some change in my stance or my breathing or the angle of my hips, because he stopped the whip.\n\n\"I would look at you, picturing you bound and writhing on my cock, and you would stop whatever you were doing or saying, as if you could read my mind.\"\n\nHe ran his hand over my skin, the sweat from his palm stinging slightly against the welts he'd raised. I shivered, moaning deep in my chest as I pressed my forehead down on the bed. I felt that sting in every nerve, every sinew, every vein, follicle, cell and corpuscle.\n\n\"Could you?\" he continued quietly. \"Could you read my mind? Did you know I was thinking dirty, lascivious thoughts?\"\n\n\"No.\"\n\n\"No? I don't believe you,\" he teased, dragging the flogger across my skin. \"Why else would you stop what you were doing or saying?\"\n\n\"I didn't,\" I panted. \"I...I hoped you were thinking about me. But I didn't know.\"\n\n\"Thinking what about you?\" He slapped the knots at the ends of the ribbons lightly against the welts on my thighs, and I nearly came.\n\nDammit! He knew exactly what I meant. \"About fucking me. I hoped you were thinking about fucking me.\" I lifted my head and looked back at Malcolm, surprised to see he was still dressed. \"Please.\"\n\n\"Please what?\"\n\n\"Please fuck me,\" I begged.\n\n\"Not yet.\" I heard him moving behind me and strained as best I could, but I couldn't see him or what he was doing. I put my head back down; my thighs and back were starting to ache from the tension of keeping it up.\n\n\"Your thighs are wet and sticky,\" he said, suddenly behind me again. I felt his finger run along the inside of my thigh. I nodded, looking back between my legs to see his cock staring back at me. The head was swollen, a dark red that was almost purple, and oozing slightly. I smiled to myself at the knowledge he was as affected as I was.\n\n\"What got you so wet, poppit?\" he asked, suddenly sliding two fingers inside me.\n\n\"You, sir.\" I breathed, smiling secretly again. I knew what he wanted to hear. He would have to work to get it out of me.\n\nHe pulled his fingers out of me, sliding them down to make circles around my clit. \"How?\" He was being as obtuse as I was and I could hear the smile in his voice. He started running his fingers from my clit to my anus, audibly smearing around my wetness. I caved (I know, I'd make a pathetic spy); he made me feel so good.\n\n\"Your whip, sir.\"\n\nHe used his left hand to lightly pinch along the raised welts on my skin, every pinch and caress sending urgent messages to my pussy, while his right hand kept up the travels from my clit to my ass and back. I was so wet it sounded like he was splashing about a shallow puddle. I began gyrating my hips slightly -- so close, maddeningly close, to coming. \"Very good, poppit. Now tell me what you want.\"\n\n\"I want...I want ....\" I stopped moving, concentrating on feeling, trying to help my orgasm along. I could feel the sweat rolling off my back, stomach and breasts as my toes began to curl and I leaned my hips back as much as possible, trying to force more pressure from his fingers.\n\n\"Want...what?\" he asked, stopping his teasing torment and resting his hands on the outside of my thighs. Bastard.\n\n\"Please... please sir...\"\n\n\"Tell me.\" I looked back at him, my want, my need, written plainly in my eyes. \"Tell me,\" he repeated. I bit my tongue, putting my head back down on the bed. If he wanted to wait until I beg to have an orgasm, he's going to have a long one, I thought.\n\nSuddenly, I felt his tongue lightly flicking over my asshole, and my entire body tensed again. I could feel the moisture in his breath as his tongue swirled around my anus. I'd never felt anything so deliciously dirty before. My breath caught in my throat as Malcolm dragged the flat of his tongue the length of my ass. All I could do was moan \"Please\" with every lap of his tongue. It was wildly erotic, the ultimate tease, leaving me dripping, wanting, pushing me tantalizingly close -- right to the edge of orgasm but totally unable to achieve it. He danced his fingertips lightly along my stripes, combining them with his tongue to make me insane. To make me beg.\n\nBastard.\n\n\"Please. I want to come,\" I moaned. \"Make me come. Please.\" Malcolm groaned against me, but his fingers and tongue kept up their torture until I was reduced to a whining, incoherent bundle of sexual need. I think it took about 10 seconds.\n\nI felt him climb on the bed behind me and nudge me forward a bit with his thighs. He ran his hands up and down my back as he centered himself behind me. I felt the tip of his cock at my opening and I stilled, knowing it was left to him to fuck me, not the other way around.\n\n\"What do you want?\"\n\n\"Please, sir, fuck me. Make me come.\"\n\nHe moved his hands to my hips and slammed in to me, holding me against him. I felt him hit at my cervix and I was lost, shattering to a million pieces in the most intense orgasm I'd ever felt. Wave after wave of soul-scorching pleasure came at me, each one pulling me back together before shattering me anew, from a million pieces to a billion to a trillion. (I am not doing it justice, I know, but I am doing my best. Just imagine the best feeling you've ever had -- EVER -- and then multiply by the largest factor you can think of. It was like that. Only more so.)When Malcolm grabbed my hair in his fist and pulled I realized -- vaguely -- that he was coming, jerking his hips into me as if he needed to get deeper, to get his balls in with his dick.\n\n\"What are you?\" he asked as the nails of his left hand dug into my shoulder. His voice was a growl, a sinister and breathless sound.\n\nI didn't even have to think. I knew what he wanted to hear, what I wanted to say. \"I'm your whore. I'm your dirty little slut whore. Please don't stop fucking me, don't stop fucking your whore.\" I rambled, I babbled, I moaned, I cried and I came. And came. I remember thinking at the time I could die a happy girl, because I would never be able feel anything so intensely pleasurable again. (I was wrong on that one. So sue me.)\n\nWhen I finally quieted, catching my breath, Malcolm laid across my back, his cock limp but still inside me. I could feel him panting and wanted to lift my head, but I didn't even have the strength to do that.\n\n\"Oh poppit,\" he breathed. \"That was beautiful.\" He righted himself as he ran his hands up and down my sides and I sighed. \"Beautiful.\" He pulled out and I whined involuntarily as I felt him move away from me. He removed the carabiners and cuffs, and tossed them on the floor.\n\n\"You're going to feel a bit stiff when you move.\" He helped me to lay prone on the bed, my back and my knees popping loudly, and started to gently massage my back. His hands knead the muscles along my spine, moving down slowly, releasing any tension that remained. I purred, content, as I felt him bend over and kiss first my left then my right shoulder blade. His hands continued down and he massaged my hips and legs, placing little kisses on the back of each knee.\n\nWhen he was satisfied I wasn't going to end up in a ball of cramped muscle, he lay down next to me. I turned my face to him, languid from my orgasm and Malcolm's massage, and smiled at him.\n\n\"Hungry?\" he asked, smoothing my hair from my face.\n\n\"Not really,\" I said after a moment's thought. \"Just thirsty.\"\n\n\"Of course,\" he said, turning towards the night stand. He turned back with a glass of water. I propped myself up on my elbows and he handed it to me.\n\n\"Thank you,\" I said, after I drained the glass in one long drink. I handed it back to him and plopped back down on the bed, giggling.\n\n\"What?\" he asked, smiling at me.\n\n\"I feel a little drunk.\"\n\n\"Come, let's have a bath,\" he said, sliding off the bed and holding his hands out to me. I rolled towards him, giggling at my own silliness, and sat up. I put my hands in his and let him pull me off the bed. He steadied me on my feet before putting his arms around me and -- finally! -- kissing me deeply. I put my arms around his neck and tried to make that kiss last forever.\n\n\"I've been waiting all evening for you to do that,\" I said when I finally let him end the kiss.\n\n\"I know, poppit.\" He removed my arms from his neck and took my wrist, leading me to the bathroom. I leaned on the sink and watched as he got the tub ready, pouring some scented bath salts -- lavender -- and swirling them a bit to make them bubble. It was about a quarter full when he stepped in and sat down, leaning against the back, and signaled for me to join him. I did, hissing a bit at the way the hot water bit at my cold feet. He guided me down to sit between his legs.\n\n\"Ow ow ow ow ow,\" I said quietly, as the hot soapy water made my welts sting.\n\n\"It goes away,\" he said, pulling me back to lean against him.\n\nThe sting faded -- rather quickly -- and I relaxed into him as the water rose around us. He turned off the tap when the water reached about nipple height and we just sat in silence for a bit. For my part, I still felt giddy, almost high, and I wanted to hold on to that feeling a bit longer. I had never had an experience -- sexual or not -- that left me feeling so very complete. I sat in the tub, leaning back against Malcolm with his arms around my midsection, with what must have been the goofiest smile in history on my face. I couldn't help it.\n\n\"Alright, poppit?\"\n\n\"Oh, yes. Indeed. I feel wonderful.\"\n\n\"Wonderful?\"\n\n\"Yes...I mean, not physically, you know...in my soul, you know. I've never felt this...this good...in my soul before.\"\n\n\"Ah, yes, I understand.\" He kissed along my shoulder, his hands moving to rub the underside of my breasts. \"And physically?\"\n\n\"I feel utterly spent.\" I closed my eyes, leaning my head back. \"Like I used up my personal orgasm allotment and will never come again,\" I said with a giggle. I knew I was throwing down the gauntlet. I also knew he would pick it up.\n\n\"Impossible,\" Malcolm whispered in my ear. He moved his right hand between my legs and started gently massaging my clit. I raised my knees and let them fall open as much as I could to give him freer access. He used his left hand to stroke and caress my breasts, occasionally tweaking my nipples. He kissed my neck as I began to moan quietly. \"Let me prove it to you, poppit.\" He began to alternate caresses on my clit with light pinches, and I began to pant. I didn't think he could play me so well, but I was wrong.\n\nHappily wrong.\n\n\"Oh god,\" I sighed as his teeth started to nibble at my neck. He made it so effortless, so easy, I was already on the edge.\n\n\"That's it. Come. I want you to come again.\" I cried out a little and shuddered as I came again in his arms.\n\nWe remained in the tub until the water turned cold and then made our way to bed. We lay awake, facing each other and holding hands, for a long time, talking quietly into the wee hours of the morning. I woke up to Malcolm caressing my face tenderly, and when I looked at him and smiled, he moved on top of me, kissing me deeply -- morning breath be damned -- and slipping effortlessly inside me.\n\nWe made love, tender, generous love, that morning. I mean, he did lace his fingers in mine and pin my hands above my head, but even that seemed sweet. We kissed the entire time, swallowing each other's murmurs and moans when we came, laying entwined for a while after. When he rolled off me to make coffee, I grabbed his pillow and held it to my face, breathing deeply.\n\nIt occurred to me at that time I was falling for him.\n\nFeck, I thought, silently groaning, not what I wanted to happen. "
    ],
    "authorname": "wanderingmindgames",
    "tags": [
        "fellatio",
        "public restroom",
        "flogger",
        "cuffs",
        "bound",
        "welts",
        "bath"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/bliss-ch-05-1"
}