{
    "title": "Futile Resistance Ch. 11",
    "pages": [
        "French's mood was the best it had been in days; she felt as light as air and imbued with a wonderful positive energy. This time she would make sure she stayed happy. She sat in the backseat of the black Mercedes-Benz\u00ae taxi and drummed her fingertips on her thigh. Parisian cab drivers were known for their speedy driving, but she was impatient and willed the driver to go even faster than he already was. She wanted to hurry back to Aidan. He was exhausted from his trip and had been deeply asleep when she left. She hadn't bothered to wake him, thinking she would probably be back before he even knew she had left. Now that they had reached an understanding of sorts, she didn't want to be apart from him anymore. She would retrieve her belongings from her cousin's house and spend the rest of her time in Paris with Aidan.\n\nShe cautioned herself not to move too fast, not to be too optimistic. She couldn't help it, though. Aidan had proven that he wanted her, without a doubt. And not just sexually. She had looked into his eyes, had fallen into those deep, dark blue eyes, and seen everything she needed to know there. She was sure he loved her. Or almost sure, the monster doubt reared its head. Stop it. You know it. You know him. He wouldn't have come all this way if he didn't love me, she told herself. Right?\n\nIgnoring the doubt that had constantly undermined her, she told herself that this time would be different. They hadn't talked yet, but she would make sure that they did as soon as she saw him again in less than an hour. She hadn't told him that she loved him, hadn't pitched her plan on how they would be able to continue their relationship. But, she was sure he'd agree to it. Especially, after the afternoon they had spent in bed.\n\nShe blushed at the thought, crossed her legs over the twist of arousal that shot low across her abdomen. It never ceased to amaze her that he could pull such a wicked sexual response from her. She had never been so uninhibited with other men. Not that there had been many. Her friend Fifi, a world-class connoisseur of men, thought she was too uptight to enjoy sex, while French had often wondered what all the fuss was about. Now she knew. Maybe it was all about finding the right person.\n\nWith the few other lovers she'd had, she felt detached during sex. She couldn't stop thinking about other things, mundane things, when she was intimate with other men. It was decidedly un-sexy to compose a grocery list or run through her schedule for the next day in the middle of sex. And when she wasn't thinking about random stuff, she was feeling self-conscious because she wasn't 'into' the whole experience. She'd felt even more self-conscious when she tried to fake an interest in what was going on. To her ears, she'd sounded like an absolute idiot, her responses patently false. But the men hadn't seemed to mind. Come to think of it, she wasn't sure they'd even noticed.\n\nWith Aidan, it was different. He could look at her in a certain way, he didn't even have to touch her, and she'd go up in flames. She wondered if it would always be that way between them. She hoped so; she was getting used to being with him, doing things that would have shocked her to death if she had thought of them before. She liked doing those wicked things, liked being free enough with him to tell him what she wanted, what she needed, from him. As it turned out, she trusted him enough \u2013 loved him enough \u2013 to be herself with him without fear of rejection or reprisal. If only she could learn to transfer that sense of freedom from the bedroom to all aspects of their relationship.\n\nShe leaned her head back against the seat with a little smile on her face. Yes, this time will be different \u2013 I'll be different. I'll make sure of it, she promised herself. She would do her damnedest not to let her fears and trust issues rule her anymore. She pledged to herself that she would try very hard not to respond in her habitual fashion to situations that made her uncomfortable or frightened. It was imperative that she vanquish those habits in order to move forward in her life; she realized, now, how much she had held herself back by indulging her rampant distrust of people. She knew, deep down in her heart, that she could trust Aidan. The first trial of her newfound determination to break free of old habits would be to lay her heart bare to him. She wanted him to know how she felt about him, wanted to tell him as soon as she could. In that direction lay true freedom.\n\nThe cab pulled up in front of Marie-Jos\u00e9e's apartment and she jumped out and ran inside. She bounded into the apartment only to find it empty. Her cousin and Nicol\u00e0s were still out. That suited her plans just fine. The less explaining she had to do, the less time she'd be away from Aidan. She was very eager to get back to him and didn't want to waste time chatting with her cousin and Nic. She flew down the hall to her room and stripped off her clothes. Pinning her hair up so it wouldn't get wet, she took a quick shower. She performed her usual post-shower ritual cursorily and darted back down the hall to her room. She rang for another cab, then dressed in jeans, a lush, sage-green sweater and her running shoes.  She repacked her airplane carry-on bag and was ready to go.\n\nShe was back on the street and into the taxi in record time. She bade the driver take her back to Aidan's place and once they were on their way, called her cousin to let her know about her change of plans.\n\n\"Hey, it's me.\"\n\n\"How did it go?\" Marie-Jos\u00e9e asked eagerly.\n\n\"Fine. More than fine, I think,\" French replied, a smile in her voice. \"I was just calling to tell you that I'll be spending the next few days with Aidan at his hotel.\"\n\n\"Ohhh, really?\" came her cousin's exaggerated reply. \"I guess things must have gone pretty damned well for you two!\"\n\n\"Well, we still have some talking to do,\" French blushed, \"we got a little \u2013 um \u2013 sidetracked earlier.\"\n\nMarie-Jos\u00e9e guffawed and said, \"Oh, I'll just bet you got sidetracked, little cousin! I knew he didn't come chasing after you for just a talk!\"\n\n\"Anyway, as I was saying... I don't know exactly what's going to happen, but I think we're going to be OK.\"\n\n\"I knew it! Aidan's no fool; he knows a good thing when he's got it.\"\n\n\"What about me? I know when I've got it good, too! Hey, for that matter, I know when you've got it good,\" she added pointedly, referring to the clandestine affair Marie-Jos\u00e9e had been having with their close childhood friend.\n\n\"Touch\u00e9, little cousin, touch\u00e9. Will we see you before you leave town?\"\n\n\"Yes, definitely. I'll call you tomorrow so we can schedule dinner. There's New Year's Eve, too. We should do something fun.\"\n\n\"You sound so happy, French. I'm glad. And yes, we should do something fun to ring in the New Year,\" Marie-Jos\u00e9e concurred. \"Let's talk tomorrow.\"\n\n\"OK, 'bye,\" French flipped her phone closed, ending the connection. She had sounded happy on the phone, much more ebullient than she had sounded in years. She grinned foolishly to herself, thinking, I'm downright lighthearted!\n\n*****\n\nAidan paced back and forth in his hotel room. He was furious with French. They had made love, he had fallen asleep and she had left! She didn't even leave a note to let him know where she had gone or when \u2013 if \u2013 she would be back. Now here he was, feeling like a fool for having chased her to Paris to claim her forever after as his own, and she had simply left.\n\nHe was frustrated beyond belief and wasn't sure that he had any fight left in him where French was concerned. He had reached his limit. He had launched a prolonged campaign to win French over and he now faced the possibility that perhaps she just wasn't going to come around. He had coddled her, confronted her and consoled her \u2013 all with a view to helping her grow to trust him and to see that not everyone in the world was out to get her.\n\nHad she gone back to Nicol\u00e0s? he wondered bitterly. He was tormented by the very thought of the two of them together. He hadn't had a chance to find out who Nicol\u00e0s was and he was boiling with curiosity about the man and jealous into the bargain. Who was he to French? Why would she let him handle her with such familiarity? He didn't want to believe it of her, but it looked as though she was in some sort of... relationship with the guy.\n\nHe was being eaten up inside with the desire to find her and bring her back again. But he refused to do it. He was tired of chasing her, tired of trying to make her change her mind about him and how good they were together. His patience with her had been exhausted. Maybe it's time for me to cut my losses, he thought morosely.\n\nIf there was any hope that they would resume seeing each other, it would be up to her to make the first move. He knew it would kill him to stay away from her, to wait for her to initiate contact, because what if she didn't? He knew her well enough to know that fear, pride and pure stubbornness had often prevented her from doing things that would, to her twisted way of thinking, make her appear vulnerable. He was prepared to face the real possibility that that could happen now. I may never see her again, he dropped into a chair in front of the fireplace and stared at the leaping flames glumly.\n\nHe didn't know how long he'd been sitting there when he heard a light rap on the door to his room. An annoyed Aidan wrenched open the door and glared at the person who dared to interrupt him while he was stewing in his anger and self-pity. It was French.\n\n\"Hi. I'm back,\" she said cheerfully.\n\nHe dragged her inside and slammed the door behind her.\n\n\"Where were you? Did you go see Nicol\u00e0s?\" he sneered.\n\nHer friend's name sounded foul the way Aidan said it. She drew back from him in surprise and distaste.\n\n\"Aidan, what's the matter with you? Have you been drinking?\" she asked, puzzled at his behavior.\n\n\"What's the matter with me? I woke up alone, French, and after some pretty hot fucking, too. Fucking, I might add, that I crossed an ocean to get. And you want to know what's the matter with me?\"\n\nShe stopped dead in her tracks. What the \u2013 no, she told herself. Remember your promise: respond differently to things! You will stay calm. You will not lose your temper. You will talk to him, find out what bug crawled up his ass calmly. Like a rational adult.\n\n\"I'm sorry if you were worried, Aidan, but please don't use that type of language when you talk to me,\" it just about killed her to stay calm.\n\n\"Oh, I wasn't worried. I am pissed!\" he jabbed a finger at her. \"You left my bed to go to your Martinican boy-toy and you thought I'd be worried?\"\n\n\"My what? You think that I -? With Nicol\u00e0s?\" French was incredulous. She flopped down in one of the armchairs in front of the fireplace and laughed.\n\n\"That's funny to you? What am I supposed to think when I walk in and find you in the arms of another man?\" he asked angrily. He grabbed her hands where they lay along the chair's armrests and pulled her to her feet. \"You were sitting on his lap, for Christ's sake! He kissed you! You let him touch you and I can't stand it!\" he said through gritted teeth.\n\nHer laughter at his idiotic notion died in her throat at hearing his tone. When she looked into his eyes and saw the torment there, the fire of possessiveness burning bright, she melted inside.\n\n\"Oh, Aidan \u2013 \" she began, only to be cut off by the scorching kiss he pressed to her lips.\n\nHe took her mouth ruthlessly and without finesse, the need to stamp her as his overwhelming him. His tongue swept into her mouth, tasting warm mint and her. He hooked an arm around her waist and hauled her tight against him. Mindless with jealousy and the need to claim her, it didn't register on him that she had wrapped her arms around his neck and was responding to his kiss. He simply plundered, took, poured all the conflicting emotion \u2013 anger, jealousy, fear, frustration and relief that she was with him \u2013 that swirled in his mind into the kiss.\n\nFrench's own senses were awhirl, Aidan's rough treatment of her breaching yet another sensual stronghold inside her. She hadn't been able to think and had stood struck dumb when he first seized her, kissed her. Then she had felt the velvety invasion of his tongue in her mouth, felt the glorious strength and heat of his body when he molded her close. He took her breath away. She felt her knees wobble and wrapped her arms tighter around his neck, wound her fingers through his hair. As always, he sent fire racing through her body, awakened desire and need in her.\n\nAidan's cock had quickly grown painfully hard behind the button-fly of his jeans. He needed to bury himself inside her more then he needed to draw his next breath. He dropped to his knees in front of her, undid her jeans and pulled them roughly down her legs. She almost toppled over and he caught her and lowered her gently to the floor in front of the fire. He yanked her shoes off and tossed them over his shoulder, her jeans and silky panties followed. He scaled the length of her body and took her mouth in another hard kiss. Mine! Mine, mine, mine! The words roared in his mind, underscored everything he did. He knelt between her thighs, had sense enough to check that she was ready to take him before he plunged inside. He groaned when he touched the warm, supple flesh that had begun to grow slick for him. She was ready.\n\nWith a shaking hand, he quickly undid the fly of his jeans, pushed them down just far enough to free his cock. He positioned the blunt head of his cock at her entrance and paused, tore his mouth from hers. His breath sawed in and out of his lungs and he took just a second to calm himself down, fought to subdue the beast that raged inside him. Mindless with want as he was, he was far beyond being able to be gentle with her at this point. He craved her, needed to feel her wrapped, wet and tight, around him, but he didn't want to hurt her. He never wanted to see her hurt.\n\nFrench writhed under him, rubbed against his cock where it pressed against the opening to her cunt, waiting for him to plunge inside. She frowned when he paused and opened her eyes to find him looming above her. He appeared to be having second thoughts about what they were doing. Not wanting him to stop, she reached up, cupped his face in her hands, drew his head down to hers. Green eyes met deepest blue and she suddenly understood the battle he fought. She pressed her swollen lips to his and whispered,\n\n\"Take me.\"\n\nHe thrust into her hard, her words feeding that primitive part of him he'd tried to rein in. French gasped at the sudden invasion, felt herself stretching to accommodate his cock, which was impossibly thick and hard inside her. He pressed deep, touching the core of her, then withdrew. The walls of her cunt clung as he pulled out, then slammed home again. She arched her hips to meet his next thrust. She met the driving force of his body eagerly, relished walking that fine line between pleasure and pain, had discovered that she liked it. It was like eating something that was very spicy, yet tempered with something sweet. Exciting. Addictive. Delicious. Decadent.\n\nAidan strained over her, the words mine, mine, mine echoing in his head. Her pussy was supple and hot around his cock. Bracing himself above her, he watched her face as he took her, memorized each beloved feature: the tiny frown of concentration that creased her brow, the luxurious fall of her thick, curly hair, the light flush that had washed over her face. Her mouth \u2013 God, that sexy mouth! he thought \u2013 was slightly open and the pink tip of her tongue darted forth to dampen her lips. His balls tightened and he slowed his strokes within her.\n\n\"No, don't stop,\" she begged, \"do it harder, faster.\"\n\nHe groaned and increased his speed. The sexy little noises \u2013 grunts, gasps and moans \u2013 she made quickly had him back on the edge. He didn't know if he could hold back, didn't really want to. He wanted to let loose and take what he wanted for once. He had given himself to her unstintingly \u2013 apparently unsuccessfully \u2013 and for so long that he selfishly felt that, somehow, he was owed a freebie. He felt his orgasm boiling deep within him, churning inside, creating an incredible sense of pleasurable pressure.\n\n\"You're mine, French,\" he rasped hoarsely, \"Mine.\"\n\n\"Yes, Aidan \u2013 God yes,\" she cried out, drowning in the deluge of the orgasm that suddenly dragged her under. She bucked beneath him, dug her nails into his back to anchor herself against the pleasure that knifed violently through her. It battered at her, spiraling on and on, seeming to increase in intensity with each pounding thrust of Aidan's cock inside her. She had been surprised by the suddenness of her climax, had been sucked in, overwhelmed by the never-ending onslaught of pleasure. She was awash in a thrilling agony of blissful sensation.\n\nSeeing, feeling \u2013 hearing \u2013 her go wild beneath him made Aidan's head spin. Contrary to the thoughts he'd had only moments before, he willed himself to last just a little longer, wanting to give her more. He knew any such effort would be futile, though. He let go and came explosively, jerking and pounding into her even harder, even deeper, than he had been before. He couldn't believe the intensity of his orgasm; it left him utterly drained. It was more like he hadn't come in weeks, rather than just a few hours.\n\nHe collapsed on top of her and felt the soft material of her sweater against his face, hazily remembered that they hadn't undressed completely. She stroked her warm, soft hands up and down his back and a wave of sleepiness washed over him. A voice in his head told him that he must be crushing her, but he didn't want to move. Nonetheless, he pushed himself up on his elbows and moved off of her to lie on his back next to her on the floor in front of the fire.\n\nFrench groaned at the loss of his heat and the comfortable feel of his weight on top of her. A sense of lassitude stole through her body and she couldn't summon the energy to do anything more than pull on her panties, which were tangled around one of her ankles. She flopped back down and snuggled close to Aidan.\n\n\"Wow. What was that?\"\n\n\"Nothing.\" He shrugged carelessly.\n\n\"Nothing, huh? It felt a hell of a lot better than any nothing I've ever felt in my entire life...\" French wouldn't let him get away with calling what had just happened between them 'nothing'. As much as the night of her capture in his apartment, this had been a claiming. At least she thought that's what it had been. If so, her job of convincing him to continue their relationship would be easy.\n\n\"Look, it was nothing,\" Aidan said, exasperation in his voice. He yanked his jeans up, refastened them, then sat up and leaned against one of the armchairs.\n\n\"Aidan... You kept saying 'mine mine mine' and you want me to think that was nothing? Well, sorry. No can do,\" she challenged him a bit smugly.\n\nHe was caught. He hadn't realized that he had spoken the words aloud. \"Who \u2013 exactly \u2013 is Nicol\u00e0s?\"\n\n\"Nicol\u00e0s is no one. I've known him for as long as I can remember; I probably spent as much time with him as I did with Marie-Jos\u00e9e growing up. We were the 'Three Musketeers',\" she smiled in remembrance as she sat up and arranged her legs Indian-style. \"But I do love him \u2013 how could I not? He's a wonderful person. But my only feelings for him are as a dear friend, or even a brother or cousin. And the best news is that I just found out this morning that Nicol\u00e0s and Marie-Jos\u00e9e have been lovers for over a year.\"\n\n\"Oh,\" Aidan said. He'd been apoplectic thinking she had gone back to the 'other man' after he'd made love to her. Now he felt the tiniest bit like an idiot. He scowled and continued, \"I've been torturing myself with the image of you and him together since I saw you earlier.\"",
        "\"Were you jealous?\"\n\n\"Hell, yeah. I was furious the second I saw you sitting on his lap and when he kissed you and touched you like he had every right to, I wanted to kill him. And you, too!\"\n\n\"Oh,\" French was pleased that he would be jealous of her. \"Nicol\u00e0s has sort of a twisted way of solving problems. We are very close, but he's never done that whole kissing bit before... I'm sure he was trying to 'help', hoping that you'd get jealous and that your jealousy would force a final outcome to our problem.\"\n\n\"He succeeded. Almost too well; he's lucky I didn't knock those pearly white teeth down his throat...\"\n\n\"He probably would have liked that, too. He was pretty pissed when I told him what had happened between us.\"\n\n\"Would you care to enlighten me about that? I'd sure love to know what drove you out of Boston so suddenly...\" he asked sarcastically, pissed off that she had discussed him with her cousin and Nicol\u00e0s.\n\n\"I guess it is time we talked. I wanted to do it earlier, but...\" she blushed again, her eyes darting to the bedroom as she thought of what they'd done instead of talking that afternoon.\n\nAidan's expression softened slightly as he said, \"I love it that you blush when you think of what we did in there,\" he said, tilting his head toward the bedroom, \"it's cute.\"\n\n\"It's embarrassing,\" she demurred. \"I feel like a schoolgirl who's been caught looking at naughty pictures!\"\n\n\"Hmmm. You like naughty pictures?\" he asked, waggling his eyebrows at her in that ridiculous way he had, \"I can show you naughty pictures and we can see how far down your body that blush actually goes...\"\n\n\"No, thank you,\" she said, blushing still further.\n\n\"Where did you go when you left, by the way?\"\n\n\"Back to my cousin's. To get my things and bring them back here. I should have left you a note, I guess... Actually, I probably should have asked before moving myself in here. Pretty presumptuous of me, huh?\"\n\n\"I wanted you to stay.\"\n\n\"Oh. Me, too.\" He used the past tense, came her panicked thought. What does that mean? \"My suitcase is still in the hallway outside the door.\"\n\nShe moved as though to get up and get it, but Aidan gestured for her to stay put. He got up to retrieve her bag from the hallway. While he did, she wriggled into her jeans, thinking that it was a bit beneath her dignity to sit around in her panties while they hashed through their issues. She watched as he moved her bag to a position just inside the door, trying, unsuccessfully, not to read anything into his placement of the bag. Had he put it there so I can access it quickly when he kicks me out?\n\n\"Do you want to come sit, so we can talk?\" she asked, gesturing him to one the chairs in front of the fireplace. \"There's something I want to tell you.\"\n\n\"I don't know if I can handle any more of your revelations, French,\" he half-joked, getting comfortable in the chair.\n\nHer stomach did a funny little dip. I knew it, she fretted, everything is ruined! He's fed up with me.\n\n\"I know. I'm sorry for being such a mess. It's more than you bargained for, huh?\" she asked. She paused, then decided to press on without allowing him the chance to tell her just how right she was about that.\n\n\"I've figured out how to do this, Aidan. We can keep seeing each other. I'll keep myself in the background of your life. I mean, I know how important your family is to you, so I'll just stay away from them and that way there's no risk of me running into Patrick Hurst and everything would be OK... We could go back to the way things were before I met your parents and before you found out Hurst was my father. It was good then.\"\n\nShe was pacing around the room, her hands flapping around nervously as she talked and so missed the mystified expression that crossed his face.\n\n\"What are you talking about?\"\n\n\"Us. Aidan, I've missed you so much these past two days. I miss our talks. I miss our quiet time. I miss kissing you and making love with you. I just haven't felt like myself without you. I know it'd be hard for you to choose between your family and me. And I know that Patrick Hurst is as much your family as your mom and dad or your brother. There's no escaping that. What I'm saying is that if we were really careful, you'd never have to choose. You could have all of them and me without being disloyal to any of us.\" As she talked, her panic receded. This isn't as hard as I thought it would be, she thought with amazement, and this plan of mine isn't half bad!\n\n\"I'm not sure I understand what you're saying.\"\n\n\"Please. Just hear me out. I want to be with you, Aidan. I won't run away anymore. I'm so sorry for all of the nonsense that's gone on up until now. But, compared to the 'Patrick-Hurst-is-my-father' bombshell, the rest of it seems pretty inconsequential, doesn't it?\"\n\n\"Um. I guess it does?\" he asked, completely bemused. He couldn't believe what he was hearing. She couldn't possibly be saying what he thought she was saying. Outrage rose in him, but he decided to wait for her to clarify what she was saying before he gave vent to his increasing ire.\n\n\"You can have all the space you need to be with your family. We could even trade off holidays, birthdays and things like that. Sort of like divorced parents do,\" satisfaction with her plan colored her voice as she thought through it and developed methods of dealing with some of the difficult situations that would invariably arise.\n\n\"You could spend one birthday with me, and the next one with them. Or maybe we could even have two celebrations for special events. One on the day of, when you could celebrate with them, then on the day after you and me could celebrate. Or vice versa...\"\n\n\n\"No.\"\n\n\"No? Aidan, please just hear me out! This could work for us,\" came her desperate reply to his disagreement with her plan.\n\n\"No. You must be out of your mind to think I'd go along with something like that!\"\n\n\"Oh,\" she said flatly, her face and tone devoid of expression. She immediately began the familiar ritual of berating herself for expressing her feelings, her needs, her desires. He doesn't want me under any circumstances. I guess I'm not as smart as I think I am, she thought, I can't seem to learn my lesson where Aidan is concerned and there have been ample opportunities for me to have done just that.\n\n\"I understand.\"\n\nFrench retrieved her coat from the closet and, with hands that had gone suddenly icy and wooden, struggled to put her arms into the sleeves. She jerked in surprise when Aidan ripped the coat from her hands and threw it to the floor. Her eyes widened in alarm when she saw the look on his face.\n\n\"What are you doing?\"\n\n\"We're going to finish this here and now. I'm not going to let you just run away again. I'm sick to death of you acting like a child! You need to learn how to cope, French! No more retreating from the playing field when the game gets a little rough for you!\"\n\nFrench was completely taken aback and didn't think to temper her response.\n\n\"What the hell do you mean I need to learn how to cope? Wasn't that what I was trying to do? Coping with a bad situation by coming up with a solution? A solution that you immediately shot down without giving me a chance to finish telling you the whole plan!\" she glared at him accusingly.\n\n\"Grabbing your coat and leaving isn't coping, French. Packing your bags and leaving the fucking country isn't coping! Deciding to avoid my parents for the rest of your life isn't coping!\" His tone was contemptuous.\n\n\"You're a fine one to talk, 'Mr-I'm-going-jogging-so-I-can escape-my-bastard-lover'! Please,\" she said with disgust. \"You run away just as much as I do, despite your hypocritical claims to the contrary.\"\n\n\"Is that what you think?\" he asked, shocked by the off-the-wall conclusion she had apparently drawn. \"You think that I left the other day because I didn't want to be around you because of who your father is?\"\n\n\"I don't think it: I know it! I've played that conversation over and over in my head: 'No, Paddy wouldn't do that, French. What about Paddy Jr, Pierce and Paige? I don't understand how he could do that!'\" she used a high-pitched whine as she relayed that portion of their previous conversation. \"Believe me, I caught your meaning loud and clear,\" she finished in her normal tone.\n\nAidan looked at her, stunned. Then a rough, humorless laugh erupted from his throat. He ran his hands through his hair, then said feelingly, \"You idiot.\"\n\nFrench opened her mouth to retort, but he cut her off with a slash of his hand before any sound came out, \"God damn it, French! I could fucking kill you for causing all of this trouble. If you had waited for me, we wouldn't be here right now.\"\n\n\"Don't blame this on me! You said what you said and you can't take it back just because you feel bad about it now. You can't jerk me around like this, Aidan.\"\n\n\"Listen to me,\" he enunciated slowly, as if she were mentally challenged. \"I was upset with Paddy \u2013 with this whole fucked up situation - not you. It came as a total shock to me that he could do what he did to you when he always acted like the perfect citizen, the perfect father and husband.\"\n\nFrench stood perfectly still, her expression closed, her arms crossed in front of her as she listened to him. Then she said, \"But you kept saying, 'Patrick wouldn't do that'. It sounded to me like you were defending him and that you didn't believe me, though for the life of me, I couldn't figure out what you thought I had to gain by claiming that asshole as my biological father.\"\n\n\"Try to understand where I was coming from. Thirty odd years of knowing someone as well as you know your own parents and he turns out to be a total dirt bag? Not to mention how bizarre it is that I just happened to be in love with the dirt bag's illegitimate daughter,\" he finished. \"Nobody \u2013 not even a Pulitzer Prize winning author \u2013 could make something like this up; this 'coincidence' of events is too bizarre to be real!\"\n\nHe paced away from her, then turned back around.\n\n\"I will admit that I shouldn't have walked out on you right then, French, but I just couldn't think with you screaming at me like you were. I needed a few minutes to think about it, to decide what to do. I wasn't gone very long before I figured all that out and then I came home and found you gone.\"\n\nFrench waited to hear what he had decided. Her heart had leapt when he said he was in love with 'the dirt bag's daughter'. She hoped he still was and would give her a second \u2013 no, it would be the third time for them \u2013 chance.\n\n\"I looked everywhere for you, called you a million times and couldn't reach you. I sat in front of your apartment thinking that you had to go out sometime and when you did, I'd be there to catch you. I even called that prick Peter to see if he had seen you,\" he became even more frustrated just telling her what he had done to try to find her.\n\nShe laughed a little at his last statement. Aidan and Peter had never gotten along. He must have been pretty desperate to reach her if he had called his archenemy.\n\n\"I was upset by the whole turn of events, too,\" she entreated, willing him to understand and forgive her, \"Frankly, I expected you to be disgusted by me and I expected you to remain loyal to your family. I just had to get away \u2013 I couldn't just sit there and wait for you to come home and dump me.\"\n\n\"I see. So you assumed the very worst about me. That's just great. I'm glad we've established such a high level of trust in this relationship,\" he said acerbically. \"Especially when I have never given you a reason not to trust me!\"\n\n\"I know, Aidan. I should have known better. But I was upset, too, and you wouldn't be the first person I've known to judge me for who my father is or for being a bastard. My own mother treated my like shit every day of my life because of Patrick Hurst!\"\n\n\"But I didn't treat you like shit \u2013 I didn't judge you, French, and I never have! You are the one who leapt to judgment about me when you assumed you knew what I was thinking or what I would do! I'm offended that you would think that I would ever be disgusted by you and that I would ever break up with you for something you had nothing to do with!\"\n\nHe paced the length of the room, needing an outlet for his anger and frustration. He had never laid a hand on a woman and never would, but he thought he understood what drove weaker men to do it. He wanted to grab French and shake some sense into her. Instead, he stopped pacing and faced her. There wasn't a modicum of calm left in him, so when he spoke, his voice betrayed the frustration he was feeling.\n\n\"I did everything I knew how to show you who I am and that I'm not like the other people who've hurt you, but you refused to see it. You're always so caught up with protecting yourself from so-called threats that you can't see what's right in front of you. I was offering you me, French, but you obviously didn't want me!\"\n\nPast tense again, she thought. A lump grew in her throat. It was looking more and more like he had come to Paris to decide whether or not to end things with her. She had thought that the decision had been made in her favor after they had made love earlier in the day. But perhaps not. She gazed unseeingly into the middle distance. Her mind was curiously blank, as though her senses had been utterly overwhelmed by what Aidan was telling her and simply shut down.\n\nWhen she didn't reply he continued in an impassioned tone, \"We keep having this same argument and I'm sick of it. It's not normal for me to have to constantly prove myself to you when there has never been a breach of trust between us! I've never given you a single reason to doubt me, but you've never trusted me. And I don't think that's something I can deal with.\"\n\n\"I do trust you, Aidan,\" she said. \"I always have.\"\n\n\"You show your trust for me by running away to protect yourself from me? By shutting yourself off from me? God, you're more tightly guarded than the Pentagon!\"\n\nFrench lost her temper, \"Aidan what do you want from me? Can't you see I'm trying? I'm doing the best I can!\"\n\n\"No. I don't think you are. Your first instinct is to run away from me instead of running to me. I've tried and tried to get you to see that you can trust me and that I would never hurt you! You just can't see it, though, can you? You refuse to believe in me.\"\n\n\"Aidan, I do believe in you, but just try to understand!\" she pleaded. \"Imagine how I felt, finding out that Patrick Hurst has been involved in your life since you were a baby, was more of a father to you than he was to me. I saw how close your family is and how that closeness and affection extended to Hurst,\" she turned away from him. \"I didn't think I stood a chance if you had to choose between me and your family...\"\n\nHe walked over to her and took her by the shoulders, \"French, you need to learn to trust. You'll drive everyone who cares about you away if you don't overcome this insane need to protect yourself.\"\n\nHe let her go, but stood in front of her, waiting for her response. It was a long time coming. She refused to meet his eyes, stared into the fireplace.\n\n\"But this is different, Aidan. This situation with Hurst isn't the same as keeping people at arms length. Hurst is my biological father! He abandoned me, threw money at my mother to see that we stayed away from him. Yet, he loved you and you're not even his son. He loved his other children. But not me. All these years, I consoled myself with the thought that he was incapable of loving anyone. But then you kept telling me what a great guy he is and how great of a father he is to his kids and how great he is with you and your brother. It put a lie to the story I had made myself believe all my life. You need to understand that the stakes were a lot higher for me with this, Aidan. I felt like I had to run for my life, to preserve and protect what I had managed to build for myself and to put some distance between you and me.\"\n\n\"You were running for your life and that meant away from me...\" Aidan said with bitter incredulity.\n\n\"Please try and see it from my point of view!\"\n\n\"You are so stubborn. Can't you just say, 'I was wrong and I'm sorry'?\"\n\nHis question took her aback. She knew she was wrong and she was definitely sorry for doubting him, because when she really thought about how well she knew Aidan, she knew in her heart of hearts that he wouldn't have dumped her. She was sorry she had left town so suddenly, without giving them a chance to work through the problem. She was sorry that her actions had seemingly put an end to their relationship because it was obvious that he didn't think of her in a positive light anymore. And, in her mind, she deserved to lose him. She had shown herself to be an extremely poor judge of his character. They had talked again and again about her needing to trust in him, but in the end, she had been the one to betray his trust.\n\n\"You're right. I was wrong and I'm very sorry for what I did,\" she quelled the urge to try to excuse or rationalize her behavior again. To do so would lessen the impact of her apology, which was truly from her heart. \"Please forgive me, Aidan.\"\n\n\"I do forgive you,\" there was a 'but' hanging in the air, but he left it unspoken.\n\n\"Thank you. I probably don't deserve your forgiveness,\" she said formally and with a careful detachment as she reached down to pick up her coat and began to put it on. \"Thank you for giving me a chance to apologize and for being gracious enough to accept my apology. Maybe I'll see you back in Boston? It's probably too soon for me to be 'just friends' with you, but... maybe we can try that later?\"\n\nAidan flopped down in a chair and heaved an exasperated sigh. This woman would be the death of him.\n\n\"I don't want to be friends with you! Do you think I came all the way over here because I want to be friends? You're out of your mind!\"\n\n\"Aidan, I honestly don't know why you came here. I thought maybe you wanted closure. Or maybe a 'hot fuck' \u2013 isn't that what you called it before? \u2013 or whatever,\" she sounded tired, run down. She rubbed her temples as though she had a headache.\n\n\"You idiot,\" he said, walking over to her. He removed her coat and tossed it on the floor again.\n\n\"I'm sick of taking that coat off of you. Leave it off, wouldja?\" he said, once again only half-jokingly. \"You're doing it again. You can't just leave, French.\"\n\nShe looked into his eyes and saw frustration mixed with the heat and possessiveness that darkened them to deepest blue. The same dark heat that appeared in his eyes when they made love. She shifted her weight from one foot to the other, feeling the easy slide of arousal that so typically occurred when he was near. She backed away from him a little so she could better see his face.\n\n\"What's going on?\"\n\n\"What's going on is that I'm not letting you leave. We have a problem that needs to be dealt with, not run away from. So let's deal with it. Together.\"\n\n\"OK...\" she said, not sure how they would resolve their problem in a way that they could both live with.\n\n\"But here's a new rule for future reference: don't go running off when we have an argument; stay and let's talk it out before you do anything rash.\"\n\n\"We have a future?\" she asked hopefully. \"You mean you liked my plan to deal with your family?\"\n\n\"Hell, no.\"\n\nFrench's expression went totally blank with confusion.\n\n\"That plan sucks, baby. We're not even going down that road. When has avoidance and compartmentalizing ever solved any problem?\"\n\nShe frowned, \"Well, I don't see any other way. I can't be around Hurst. You didn't see how he treated me. Like I was a piece of property or something. He offered me money, Aidan,\" she shivered at the memory, \"like I was some gold-digging whore! I can't just forget that or that he threw me away when I was born!\"",
        "\"I don't expect you to forget that, French. It's impossible for me to forget it, too. When you told me all about your childhood it made me so angry that whoever your father was would leave you at the mercy of your mother. I still really can't believe that that heinous individual is none other than my father's best friend.\"\n\nHe was quiet for a minute, thinking of the past, of all the happy occasions the Hursts and Conals had shared. They weren't real to him anymore, though. Hurst was a fraud, had been keeping a terrible secret from all of them. He had had an ongoing affair with French's mother, but had never had contact with his daughter. He had to have known that Marcheline was a selfish woman and that she would be an equally selfish mother. But he hadn't cared. He hadn't cared that he was betraying his wife and their three children, his closest friends or, worst of all, his daughter.\n\n\"Listen, I'll tell you just what I told Hurst. You are my family. I loved Paddy,\" he said, \"But, now that I know exactly who and what he is, I want nothing to do with him.\"\n\nFrench's mind had gotten hung up back where he said he had talked to Hurst.\n\n\"You talked to Hurst about me?\" she asked tentatively, wringing her hands nervously.\n\n\"Yeah. I told him I knew everything. He tried to deny it at first. Then he tried to justify what he did in the most reprehensible way. I told him he was a liar, a hypocrite and a pretty sorry excuse for a human being.\"\n\n\"You did?!\" alarm tinged her voice.\n\n\"Yeah, I did. I found out, too, that he and your mother never stopped seeing each other,\" he said quietly, not sure how French would take the news.\n\n\"What?! You can't be serious... Maman always spoke of him so angrily. How could she be sleeping with him after what he did to us?\"\n\n\"I am serious. I'm sorry if that hurts you. He told me that they had reached an 'understanding', a financial understanding from what I could tell. But he is oddly infatuated, almost obsessed, with your mother. When he talked about her, the look on his face was sort of dreamy and besotted. It was pretty creepy.\"\n\n\"This is unreal,\" French walked away from him. She felt betrayed all over again. Her mother had been seeing Hurst for all these years? A woman didn't have an affair for some thirty years and not develop some sort of feeling for her paramour. In typical fashion, her mother had put her own desires, her own feelings, before those of her daughter. She had known that, as a child, French had longed for her father. Instead of making sure that Hurst did the right thing or doing the right thing herself, Marcheline had sided with her lover, the deadbeat dad.\n\n\"I'm so tired of being hurt by my mother,\" she said sadly.\n\n\"I know, baby, and I'm so sorry she hurt you again. If you don't mind, can we talk about Marcheline a little later? Right now, I want you to know that I told Paddy to stay out of our lives, French. If I never set eyes on him again, it will be too soon. You don't have to worry about seeing him. You won't. And if you do, I'll be there.\"\n\n\"But... What will your parents think? Do they know about Hurst and me?\"\n\n\"No, I haven't told them yet; we can tell them together. I can only guess at what they'll think, but I'm pretty sure that they'll side with us. When I called them to tell them I was coming here to bring you home after an argument, Mom wished me luck and told me how much she liked you and how she hoped to get to know you better. She dropped a very unsubtle hint about hoping to even out the family on a more permanent basis \u2013 a little more estrogen to balance out all the testosterone,\" he finished, referencing that his mother had raised two very masculine, mischievous sons who were the image of their father in looks and personality.\n\n\"I don't know that my dad will be able to just end his friendship with Hurst. They've been best friends their entire lives. I know he'll be as hurt by this as I was; so will Mom. I don't know how this will all shake out,\" he said thoughtfully.\n\n\"This affects Pam and their kids, too. It could get pretty messy if everyone finds out. But I know that Mom, Dad and Brian really like you; they think you're perfect for me. That's not going to change just because of what Paddy has done. It's not your fault and I'm sure that if it comes to it, you'll be the choice they make, French.\"\n\nFrench didn't know what to say. No one had ever come to her defense before; no one had ever been on her side. For Aidan to have said that she was his family now elated her and made her feel scared at the same time. She didn't really know how to be a part of a family, day in and day out. She had spent time over the years with Marie-Jos\u00e9e, Tante Josephine and Uncle Bertrand in Martinique, of course, but that had been for only a few days or weeks at a time. With Aidan and the rest of the Conals, she was dealing with the rest of her life as a member of a family, every day, every night. It was almost overwhelming.\n\nAidan sensed that she was pulling away from him emotionally and gripped her shoulders, shook her a little.\n\n\"Hey, it's going to be fine, baby, don't worry. Trust me.\"\n\nShe looked at him, saw the sincerity and the love in his eyes, knew that she had to take the leap. It was now or never.\n\n\"I'm really scared, Aidan. I've never done this before.\"\n\n\"I haven't either, but I feel like I have to. No matter how hard you've tried to push me away, I haven't been able to let you go,\" he sounded chagrined to admit it.\n\n\"I'm glad,\" she said tearily. \"I have to tell you something.\"\n\n\"Oh no, not again,\" he deadpanned.\n\nFrench punched his shoulder playfully. She took a deep breath. Here goes nothing, she thought. \"Um. Aidan, I think I... I think I'm in love with you,\" she finished in a rush.\n\n\"You think you're in love with me?\" he asked in mock outrage, \"After all this, you're still not sure?\"\n\nHe began to tickle her, went straight for the sides of her waist where he knew she was most sensitive. She giggled and squirmed, trying to get away from him. She ran away from him toward the bedroom. He cornered her between the bed and the wall, then picked her up and dropped her lightly on the bed. He pounced on top of her and continued to tickle her, giving her raspberries on her neck whenever he got an opening.\n\nGradually, the tenor of their embrace changed. He did more caressing than tickling and the raspberries he'd given her neck became kisses. French looped her arms around his neck, brought his head down and sipped from his lips. They kissed lazily, taking their time, relaxed and content.\n\nAidan finally pulled away, \"You think you love me?\" he asked, serious this time.\n\nFrench looked at him, feeling soft and warm inside. \"I know I do. I love you.\"\n\nThe words rolled off her tongue easily this time and she felt good to have finally said them. Aidan kissed her leisurely, rolling onto his back so she was on top of him. He wrapped her tight in his arms, filled with contentment at the knowledge that they had the rest of their lives ahead of them. Relief burst through him. He'd finally won her! She had finally said the words and said them first. Deep down, he had known how she felt about him, but he had also known that she needed proof from him that he wasn't going to run out on her or use her. She had been fragile, skittish as an abused pup. He'd taken a few risks along the way, calling her on the carpet for her fearful behavior and pushing her past her comfort zones, but in the long run it had paid off. Finally, there are no obstacles in our way, he thought joyfully. But then he remembered...\n\nHe broke their kiss and cleared his throat uncomfortably.\n\n\"Um, remember when I said earlier that we'd discuss Marcheline later?\"\n\n\"Yes, why?\"\n\n\"Well, I think I should tell you that I met her back in Boston.\"\n\n\"You met her? Oh, shit! I forgot she was coming! Oh, my God! Was she furious with me?\" French jumped off the bed in a panic.\n\n\"Not at first...\" Aidan hedged.\n\n\"Oh, my God! I can't believe I forgot about her! I was just so upset about the fight we had and I just completely forgot. How could I do that? Fuck, fuck, fuck!\" she finished with feeling.\n\n\"Relax. I don't think it's that big of a deal. She was sitting on your stoop, wrapped up in a big fur coat and hat, when I stopped by. We got Mrs. H to open your apartment with your spare key.\"\n\n\"Thank God!\" came her heartfelt reply, relief evident in her tone, \"so she's OK?\"\n\nAidan thought French's relief that her mother was safe and sound was a little too heartfelt. Marcheline didn't deserve to be protected and cared for by French. But that was French. On some level, even though she knew it was completely irrational, she wanted her mother's approval. She had been doing Marcheline's bidding for so long, waiting for that magical day when she would receive her mother's unconditional love, that she found the habit hard to break. The anxiety she felt at the moment was a byproduct of an ongoing cycle of behavior.\n\nDispleasing Marcheline, and she was always displeased about something, had meant that French would be held hostage emotionally. Marcheline had dangled absolution for various 'sins' in front of French like a carrot in front of a balky horse, telling her that if she did this or that to atone for said sin, she would receive a reward. In the end, she had never come through with the promised treat, whether it was attending one of her daughter's recitals or buying her something she wanted. There were times when she would do something special with or for her daughter, but only to keep hope alive in her young heart that someday her mother would be happy with her and to ensure that her daughter was easily manipulated. There had been no child as easily manipulated as love-starved French.\n\n\"Don't thank God just yet...\"\n\n\"What do you mean?\" The anxiety was back.\n\n\"We had a little t\u00eate-\u00e0-t\u00eate that didn't exactly work to the finish in Marcheline's favor.\"\n\n\"What do you mean?\" I'm starting to repeat myself, she thought, say something else!!\n\n\"I put her in your guest room and left her there when I went to see Hurst. When I came back, the whole place reeked of smoke and I had already told her you wouldn't like it if she smoked inside.\"\n\n\"She doesn't care what I like or don't like; she always does just exactly what she wants.\"\n\n\"She was also digging around in your closet, piling the nicer stuff on the bed. I, ah, assume she meant to, um, appropriate them for her own use. So, I kicked her out. Made her go to a hotel until you got home.\"\n\n\"Oh, God! That must have been awful for you!\"\n\n\"Actually, it felt kind of good. I have to say \u2013 your mother's tough to take... and that's putting it mildly,\" Aidan told her with a frown.\n\n\"I know. You have to be careful what you say to her. You're lucky she didn't go off on you. She can get really ugly when she wants to!\" she dropped onto the bed next to where he still lay.\n\n\"She was plenty ugly, trust me. But, since I'm not afraid of her and couldn't care less what she thinks, I told her exactly what I felt like telling her. I'd seen enough of her obnoxious behavior to have a better idea what it must have been like for you to live with her. I couldn't let her get away with disrespecting you and she won't get a chance to do it again. She can either respect your \u2013 our \u2013 wishes if she comes to visit or she won't set foot in any place we call home.\"\n\n\"Oh, Aidan... Thank you for that,\" her eyes and voice softened as she looked at him, gratitude and love shining in her eyes. He made her feel safe for the for the first time in her life. \"I'm sorry you had to deal with her. I had hoped that I'd get a chance to sort of finesse your first meeting with her, but with everything else... I forgot.\"\n\n\"It's ok. Besides, I probably made things worse for you when you get back,\" he told her ruefully. \"You should have seen the way she looked at me when I made her carry her own bags downstairs!\"\n\nFrench squealed and punched his arm. \"You did not make her carry her own bags?!\"\n\n\"I did. Well \u2013 just the little ones. I practically killed myself carrying all her stuff upstairs; I wasn't about to lug it all down again by myself!\"\n\n\"Oh my God, what did she do?\" French asked with horrified curiosity.\n\n\"She was all superior and puffed up; terribly indignant, with her delicate little nostrils flared like I reeked of dog-shit or something. She swept into the Taj\u00ae hotel like she owned the place, swanning past the valet and doorman like they weren't even there.\"\n\nFrench collapsed next to him on the bed, shaking with laughter. \"Now I'm convinced. You really did meet my mother. You described her to a T! God, I would have paid money to see you two go at it!\"\n\n\"Don't worry. I'm sure there'll be other opportunities. A lifetime of them,\" he promised her as he reached for her.\n\nThey stripped each other's clothes off without ceremony. Their mouths and bodies fused together, their hands roamed. French pushed him onto his back and climbed on top of him. She knelt, hovering above him on all fours, and dipped her head to kiss him. His hands covered her breasts, fondled her nipples. He reached around her, cupped her ass, tried to pull her more fully atop him, but she resisted.\n\n\"Not yet,\" she told him.\n\nShe took his lips again, licking greedily into the warm cavern of his mouth. His hands roved her body, igniting her passion. She trailed kisses onto his neck, sucking and biting. Working downward, she gave the same attention to his nipples. Touching them in turn, lightly with her hands first, then with her teeth and tongue. She sucked hard, drawing them into her mouth and flicking her tongue roughly over them. She knew how much he liked that.\n\nShe moved further down, ran her soft hands over his chest, just grazing his hardened, sensitive nipples. The contrast between the rough treatment she had given them and the soft caress she now favored them with had Aidan holding his breath in anticipation, wondering which sensation he would feel next. She smoothed her hands down over his muscled abdomen, following them with her mouth, sometimes just brushing her lips over the surface of his skin; at other places, she nipped him or licked him or sucked.\n\nShe moved further down the bed, pushed his legs apart. Kneeling in the vee they formed, she stroked the tendon that joined thigh to torso, the warmth of her hands on that sensitive cord causing him to shiver. She bent and sucked where her hands had just been. The scent of him was concentrated there and it was purely masculine. She lingered, inhaled the heady essence of him.\n\nHis cock twitched when she exhaled, her hot breath washing over him. Its length had already formed a thick, hard curve along his stomach. She cupped his scrotum in her warm palm, then bent and ran her tongue all around it. Aidan's legs stiffened and his fingers, which had previously been lightly stroking her hair, tightened at the sensation of her tongue on his balls.\n\nFrench moaned, reveling in the knowledge of the obvious pleasure she gave him, sending vibrations through the thin skin of his sac to his testicles. He wanted her to take him into her mouth, but at the same time, he didn't. He wanted her to go on loving him, touching him, like this forever.\n\nSuddenly, French removed her mouth and hands from his body altogether. His eyes flew open to find her kneeling upright between his legs, her arms crossed under her very incredible breasts. Her head was cocked to the side and she was apparently expecting him to say something.\n\n\"Well?\" she prodded.\n\n\"Well what? Why'd you stop, baby?\"\n\n\"Don't you have something to say to me?\"\n\nAidan's mind was completely blank. Did he have something to say to her? He couldn't remember.\n\n\"Ummm. That felt really good? Please don't stop?\" he asked her, panting slightly.\n\n\"Oh, you! That's not what I mean and you know it,\" she said indignantly, punching him high on his leg.\n\n\"Hey, careful with the merchandise! I'm sorry, baby, but I have no idea what I'm supposed to remember right now. Except 'that felt good; please don't stop',\" he joked.\n\n\"Your response to what I said earlier,\" French said shyly, not meeting his eyes. \"You know... that I love you.\"\n\n\"Oh, that. Haven't I already showed you in a million ways that I do? I mean, geez, give a guy some credit for dealing with that mother of yours!\"\n\n\"Aidan, I'm warning you! You better just say it.\"\n\n\"Baby, I love you.\"\n\n\"Finally! I love you, too,\" she grinned like the proverbial cat that got the cream.\n\n\"Now... can we please get back to 'that feels good; please don't stop'?\" he asked her with a waggle of his brows.\n\nFrench laughed and clobbered him with a pillow.\n\n***** THE END *****\n\nThanks to everyone who read and voted for my first story ever! I greatly appreciate the feedback and encouragement you've given me along the way. Knowing that you enjoyed reading about French and Aidan (and were waiting for the next chapter) helped me plod along when I had no idea where they were headed next! Best Regards ~ Quint"
    ],
    "authorname": "quintessentialquill",
    "tags": [
        "bi-racial woman",
        "white man",
        "rekindled romance",
        "illegitimacy",
        "possession",
        "conflict",
        "lost dreams",
        "teasing",
        "romance"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/futile-resistance-ch-11"
}