{
    "title": "Eyes Only Ch. 02",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 5 - Monday Morning Blues \n\nAuthor's note: Peanut-butter-jelly time... i.e. groundwork. Hope you're not bored, and it will get better...\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette at 7:00am, Monday October 19th. \"The Town & County Police have no new leads in the murder at the Cub Club last weekend. Channel Two News has learned that the victim's name is David Collins, an unemployed business manager who was known by others in the Punk Scene of the Tenderloin District. Police have found no motive for why Mr. Collins was targeted in the attack.\n\n\"Channel Two News has also learned that the autopsy revealed that two men stabbed Mr. Collins. Videotape of the incident was obtained from the Club, but Police are not saying whether they were able to gather any information from those tapes.\"\n\nBettina continued: \"In other news, the Town & County Council will meet tomorrow night to hear the Study Group's recommendations for revising the rank structure of the Town & County Public Safety Department. The Fire Department is not expected to encounter changes, but are pushing for fewer and lower EMT ranks within the Fire Department. As for the Police Force, Channel Two News has learned that big changes may be on the way for Commander Donald Troy's Detectives. And now let's go to Nick Eastwood for the Sports report. Nick?\"\n\n\"Thank you, Bettina!\" said Nick Eastwood, reporting live from the Athletic Complex on the University Campus. \"Channel Two Sports has learned that the Athletic Board is meeting later this week. The University lost 34-6 to Protestant College, one of the perennial doormats of the Conference along with State Tech. This was the University's first loss to Protestant in sixteen years, and Coach Russ Bronson will really be feeling the heat to turn things around, and quickly. The Bulldogs travel to play the Wildcats in two weeks, with the Wildcats having an open date this Saturday.\"\n\nNick Eastwood then became more somber as he said \"State Tech is now 4-2 after their win over Taco State, a Division II school from Texas. State Tech fans are beginning to say that they're looking forward to playing the intra-state rival Bulldogs, sensing an opportunity to steal a win after many consecutive years of stinging defeats at the hands of the Bulldogs...\"\n\n\"I can stand losing to the Wildcats; at least they are a good team.\" Cindy said as we drank coffee in MCD. \"But we had better beat State Tech, if I have to go down there and whip their asses myself to make it happen.\"\n\n\"I'll be glad to help you stick some crowbars up Tech's ass,\" I said, \"after what those pricks did to Nick Eastwood last year.\" There was a murmur of agreement.\n\n* * * * * * * * * * * * * * * *\n\nAt 8:00am, the meeting of Crowbar's Angels took place in my office. Obviously the first agenda item was the David Collins case.\n\n\"So what do we have so far, Ms. Perlman?\" I asked.\n\n\"We've eliminated Reynolds as a suspect.\" said Tanya. \"Theo and Parker interviewed him yesterday. They said he's very articulate, friendly, and they don't understand why he's working in an absolute dump like Whippet's.\"\n\n\"Let me say something to that.\" said Cindy. \"He is a member of my gym and works out there frequently. He's taken some mixed martial arts classes, as well. He seems very soft-spoken, articulate, quiet, like some of the NFL guys that go on to do well in the Media. He's also pretty charming and sounds very credible and believable in what he says.\"\n\n\"But he has occasional anger issues.\" Cindy continued. \"He's punched some people out, gotten into brawls, and has enough of a record that he can't be hired by a police force or security for businesses firms and such. And his smooth talking ways are deceptive, also; he's not on the up-and-up all the time, he'll lie to you in a heartbeat if he thinks it'll give him an advantage. Having said all that, I still don't see him as a cold-blooded killer, especially not one for hire.\"\n\n\"So how was he eliminated as a suspect?\" I asked.\n\n\"Whippet's had timestamped video footage of him being there, at Whippet's, at the same time Collins was dropping to the floor at the Cub Club. That also goes for the manager, Butch Harmony.\" Tanya said. Myron thinks it's a good and legit video, too.\"\n\nTanya continued: \"The Day Manager also said he was there and Reynolds was there, and gave Theo an affidavit to that effect. Butch Harmony gave them other names of workers who could vouch for Reynolds's presence. The manager said that if a few patrons allow it, he'll give us their names, too.\"\n\n\"So they make video available to Police very readily, have people ready to vouch for Reynolds, even the Day Manager making sure to be there at night. They either are telling the truth and he's really innocent, or they're working hard to cover for him.\" I said, then wistfully added \"I do wish I'd been there myself for those interviews.\"\n\n\"Commander, you gotta let your people do their jobs.\" Cindy said. \"You can't do it all yourself.\"\n\n\"You're right, but I can and should be able to tell what's important enough that I should be there.\" I replied. \"That's not a knock on the Detectives, but I do observe things, and I also can't teach others to elevate their game if I'm not there to see what to teach. And here's an example: what is Reynolds's relationship with Velasquez? Does Reynolds do extra work for Velasquez? If not, does Reynolds know if Velasquez hires other people for odd jobs, personal jobs, and if so, who are those people?\"\n\nTanya was peering at me as she said \"Commander, they did ask if Reynolds knew Velasquez, and he said he did because Velasquez comes into Whippet's from time to time to talk with the manager about the business. Reynolds said he knew Velasquez but had not spoken to him in a while, and the manager said that Velasquez usually talks to the managers and not Reynolds or the other staff. Overall, sir, Washington and Parker did just fine with this.\"\n\n\"Okay,\" I said, not mollified but needing to move forward, \"what else?\"\n\nTanya said \"I organized a number of Precinct One cops to go in plainclothes to the Cub Club. Mary got them outfitted in light Punk wear, so they didn't stand out like sore thumbs. They said that it was pretty busy, and all of the chatter was about the murder the previous night. There were tighter checks for weapons, but other than that it was what would be described as typical for that Club. And nobody there said they knew who the victim was nor who the perps were; everyone was saying that all those involved weren't normal patrons of the club.\"\n\n\"Not surprised about that,\" I said, \"but a good job organizing that and getting the information. It's helpful in its own way. Anything on C.I.s?\"\n\nTeresa said \"My guys are starting to reach out to confidential informants. It'll take time, since we don't want to burn anyone. So far, we're getting nothing. There's been no vibe in the Underground about any of this, and it appears everyone is shocked about it.\"\n\n\"What about Velasquez?\" I asked.\n\n\"He's disappeared.\" said Tanya. \"He lives in a small home in a lower middle class neighborhood in the southwest of Town, not part of the Southwestern Ghetto, but south of where those dogs were killed a few weeks ago. Precinct Two sent officers to pick him up Saturday, but he wasn't home. So they've had patrol cars go by every few hours, especially in the evenings. No lights on in the house at all, no car in the driveway at any time. They're going to drop in on his business address as well as Whippet's again this morning to see if he shows up, but it looks like he's flown.\"\n\n\"I've got more on Velasquez, too, Commander.\" said Cindy. \"Myron and our new guy, David Krueger, did some digging yesterday. Velasquez and his company, W.C.S. Solutions, are in some financial trouble. Whippet's was doing a little better after they converted from a gay bar to a straight club, but they're still not profitable. Velasquez bought into them to keep them afloat, but it may not be working out.\n\nCindy went on: \"Velasquez also bought into a club in Midtown. It apparently looked like a good deal, but David thinks someone fleeced him: they showed him good but fake numbers when in reality that club is doing very poorly, also. So Velasquez might be the one left holding the bag.\"\n\n\"Financial problems.\" I said. \"Always a potential motive for crime. Any correlations with the victim?\"\n\n\"No sir.\" said Cindy. \"David Krueger, who Myron is calling 'The Guru' now, pushed hard to see patterns, but found none. Collins never went to any BDSM clubs that we're aware of. Krueger thinks Collins didn't have any real friends. He wasn't with anyone else at the Cub Club the night he died, and no one at all checked on him when he was lying on the floor. Kreuger said he'd expect friends to at least check on the guy instead of fleeing.\"\n\n\"Good point.\" I said. \"What did 'The Guru' think of Collins's various college majors?\"\n\n\"Funny you asked that.\" said Tanya. \"I expected David to say it showed Collins didn't know what he wanted to do, that he couldn't make up his mind, and was drifting even then. But he said that someone with those interests could become something like a recruiter for a scientific research firm.\"\n\n\"Where does 'ceramics' fit into that?\" asked Teresa.\n\n\"Materials Engineering.\" I said. \"State Tech used to have a Ceramic Engineering degree, but there are too few jobs for that. There were so few people majoring in it that the School cannibalized it into their overall Materials Engineering program. I can see where 'The Guru' was going with that idea.\"\n\nEveryone nodded and then I asked \"Who are Velasquez's partners in this W.C.S. group?\"\n\n\"According to State records,\" said Cindy, \"he is the majority partner at 60%. There are ten other shareholders listed, sometimes little LLC entities, sometimes personal names. We're making our lists and checking them twice, but so far we have not found anything.\"\n\n\"Okay, ladies,\" I said, \"just a quick check, and 'not enough data' is not the answer. What do y'all think of this crime?\"\n\nTeresa went first. \"Revenge for some past issue that we don't know about yet. If Velasquez is having money problems, maybe he tried to do a drug deal with this Collins loser and it went bad. But I can't see any other reason. On the face of it, it's senseless.\"\n\nTanya said \"I have two ideas. First, Collins saw or heard something he wasn't supposed to, and the two perps very quickly moved to eliminate him. I know the video evidence doesn't suggest they were watching him, but maybe something happened in the bathroom, or somewhere else.\"\n\n\"Second, I'm trying to put together a scenario that fits the data, but this may be off in left field. I'm thinking that Velasquez and T-Square are not friends. Velasquez's operations are going badly, while T-Square's are doing well. So Velasquez decides that killing someone in one of T-Square's clubs will cause T-Square bad publicity, bring down Police, and maybe drive customers to Velasquez's bar. Pretty farfetched, I know, but if Velasquez is desperate enough to commit murder, maybe that would be part of his thinking.\"\n\n\"Not bad.\" I said. \"It's good to use imagination and see what you can come up with. And there might be a kernel of truth in what you've just said. Cindy?\"\n\n\"I think Teresa's word 'senseless' is what best describes this.\" Cindy said. \"Even leaving Velasquez out of it, if we can't find something from Collins's past to suggest why someone would want to savagely butcher him like that, then what we are left with, however improbable, is that this was just a killing for the sake of killing, maybe just to see if they could do it and get away with it. Otherwise, I agree with what Tanya said, that he heard or saw something and was very quickly rubbed out for it.\"\n\n\"That's good. Very good.\" I said. \"There's good and bad in every one of y'all's ideas, especially the 'senseless' part. If he'd heard or seen something, I think they'd have murdered him somewhere else, even in the parking lot, rather than in front of a whole lot of people. If they had a past beef with him, I likewise suggest they would've taken care of it in a much less public medium, and a much less public and obvious way.\"\n\nI sat up straight in my chair and said \"Cindy, get with Wes Masters. I want all three Precincts to beef up patrols, especially in the evening and night hours when the clubs around Town are in full swing. I also want everyone to intensify the manhunt for Velasquez. It is important that we find him, and quickly.\"\n\n\"So spill it, Crowbar 1.\" Cindy ordered. \"What are you thinking? You sound like you think this might happen again.\"\n\n\"Yes, that's right.\" I said. \"I am thinking... that what happened last night was some kind of dress rehearsal, and that there will be another murder, and soon, if we don't find Velasquez. And it is the intended victim of that crime that will be the answer to this case.\"\n\nPart 6 - The Fast and the Slow \n\nAt 9:00am, Helena buzzed me. \"It's the Governor, sir. Returning your call.\" I took the call, of course.\n\n\"Hello, Governor, thank you for calling me back.\" I said.\n\n\"You said it was urgent.\" replied the Governor.\n\n\"Yes sir, it is.\" I said. \"I need for you to facilitate something for me. It might be something that saves lives...\"\n\n* * * * * * * * * * * * * * * *\n\nAt 11:30am, still Monday, October 19th, I pulled up in my Police SUV in front of Whippet's, Cindy Ross in tow. As we got out of the vehicle and looked at the place, we could see that it was getting shabbier.\n\n\"Not a bad location for a decent club.\" Cindy said. \"It's a good property. Could even put a halfway decent restaurant here. I'd bet Weinstein would love to put that in, to go along with his strip joint right down the road. Heck, that might just be a motive for something...\"\n\n\"That is true.\" I said. We went inside. A muscular young man in a leather vest and pants was at the front desk. We were wearing police uniforms, and he just looked at us.\n\n\"I need to speak with your security guy Reynolds.\" I said.\n\n\"He's not here.\" the guy said. I'd already observed that he had pressed a button under the edge of his podium.\n\n\"Bullshit.\" I said. \"Get him or the manager out here right now.\"\n\n\"All right, all right.\" said the manager, actually the Day Manager, coming into the anteroom from the main part of the club. He was short and fat, his fingers stained with nicotine. \"I'm Bruce, the day manager here. I handle the nuts and bolts of running the place for Butch Harmony, the overall Manager. What can I do for you officers?\"\n\n\"I want to speak to Reynolds.\" I said.\n\n\"Your guys talked to him the other day.\" said Bruce.\n\n\"And we want to follow up.\" I said.\n\n\"All right.\" said Bruce agreeably. \"Come this way.\" We followed the rotund manager into the main area then off to the right side and through a door. Going down a long hallway that stretched along the right side of the building, we were soon at an office. The door was open, and I saw a tall, bald, handsome black man sitting behind the desk.\n\n\"Reynolds, more cops to talk to you.\"\n\n\"Sure.\" said Reynolds in a baritone but clear voice. \"Is that you, Ms. Ross? I work out in your gym all the time. Great place, much nicer than the crap place the Viscottis run right down the road.\"\n\n\"Thanks.\" said Cindy. \"This is Commander Troy. He wants to follow up with you about some things.\"\n\n\"The Iron Crowbar.\" said Reynolds. \"Everyone's heard of you.\" he said as he got up and came around the desk, offering to shake hands. \"It's good to meet you.\"\n\n\"Likewise.\" I said, shaking his hand. \"Are we interrupting you?\"\n\n\"No, not at all.\" said Reynolds. \"I was changing out the tapes from last night. If you wanted something from them, it's too late now.\"\n\n\"No, that's not why we're here.\" I said. \"I just want to confirm that you were here last Friday night around midnight?\"\n\n\"Yes sir.\" said Reynolds. \"My manager told the other cops-- er, officers that were here. Everyone saw me.\"\n\n\"Yes, I heard.\" I said. \"Do you know a guy, short, black hair, thin goatee, goes by 'Velasquez'?\"\n\n\"Oh yeah, sure.\" said Reynolds. \"He's invested money in this place. He comes around every so often, talks to the manager mostly.\"\n\n\"When was the last time you saw him?\"\n\n\"Last Thursday afternoon, I think.\" said Reynolds.\n\n\"Has he ever hired you to do other jobs?\" I asked. \"Personal jobs, or security work in other clubs?\"\n\n\"No, not me.\" Reynolds said. \"I told him if he had other work for me, to let me know. I could always use the money. But he only has me working here.\"\n\n\"Do you know of any other people he might hire for other jobs? For transient or temporary jobs?\"\n\n\"No, I wouldn't know if he did.\" said Reynolds. \"The manager might.\"\n\n\"Not me.\" said the manager, who had stayed with us during the interview. \"But he did ask me a few weeks ago if I knew of anyone who would be a good personal bodyguard. I said Reynolds here, but he said Reynolds was already doing good work at the club here, and he wanted someone that could travel around with him. I told him to ask our staff here at the club, see if any of the guys was into that kind of work, and he never said anything else to me about it.\"\n\n\"Sounds good.\" I said. \"Thanks for talking with us. Captain, you have anything you want to ask?\"\n\n\"Just this.\" said Cindy. \"Have either of you heard of any threats from or to any of your clientele?\"\n\n\"God, no!\" gasped Bruce the manager. \"We run a clean club here. Safewords and everything.\"\n\n\"He's right.\" said Reynolds. \"Anything gets out of hand, my guys stop it quick.\"\n\n\"I get that.\" said Cindy. \"But you haven't heard of anyone looking for someone, saying someone owes them, anything like that?\" Both guys said they had not.\n\n\"If you do hear anything, let us know.\" I said. \"As much as it keeps me in business, I hate having to investigate murders. And also, if Velasquez shows up or calls either of you, give me a call. I need to talk to him, also, and there might be some reward money in it for either of you if I can find him and talk to him.\"\n\n* * * * * * * * * * * * * * * *\n\n\"That was interesting.\" I said as we got back in my Police SUV. \"Good question about possible threats to someone, and they misinterpreted it. That actually is good, shows innocence.\"\n\n\"Reynolds was lying, though.\" said Cindy. \"You could see how friendly he can be, but I could see in his eyes that he knows more than he's telling.\"\n\n\"I agree.\" I said. \"I get the feeling that Reynolds not only was asked about someone as a personal bodyguard, he may have given suggestions. And that's why I wanted to talk to him... see his facial expressions and his eyes. As you said, he wasn't giving us the whole story.\"\n\n\"Yep.\" said Cindy as we drove up University Avenue. \"Don, can I speak freely?\"\n\n\"Cindy, you can always speak freely with me when we're alone like this.\" I replied as I turned down a side street.\n\n\"I know, but this is an issue.\" she said. \"Don, I know, and your Angels know, that you are a fair judge of your people, maybe sometimes a bit demanding in your expectations, but we know that's because you want to get the most out of us. I also know that you are not a racist, and that any problem you have with Theo Washington is not because he is black.\"",
        "\"But you think I'm being too harsh in my evaluation of him?\" I asked as I turned right twice, then back left onto University Avenue.\n\n\"I think he's doing pretty well.\" Cindy said. \"Tanya does too; she has full confidence in him. He's not you, he's not the most imaginative guy in the bunch, but he's thorough, methodical, gets along well with his colleagues, gets along well with the Citizens. He really is good at getting information out of the Black community that normally won't speak to Police at all.\"\n\n\"That's all true.\" I said, carefully checking all of my car mirrors for traffic.\n\n\"So why the harshness?\" Cindy said. \"I don't get the vibe that you're just trying to up his game.\"\n\n\"Okay, between us, I'll tell you.\" I said as I turned onto North Street, the road that University Avenue becomes when it turns left to run east-west along the northern border of the Town and on to meet the bypass and go west from there.\n\n\"Cindy, I am expecting the Council to pass the Study Group's recommendations tomorrow night. The current Detectives will not be affected, they'll retain their pay grades and ranks. But the way I expect they're going to structure it, the current Detectives will be strongly expected to exhibit leadership. Good Detective practices will no longer be enough.\"\n\nI continued: \"Some of the Detectives, like Nash, Cummings, Purvis and Grubby Paul, are doing well and will continue to do so with the higher expectations placed upon them. Teddy Parker and Lorena Rose should also be okay.\n\n\"But I'm concerned that Geiger and Theo and Diana Torres are not going to be able to be the leaders they're going to have to become. That's okay, not everyone is meant to be a leader of other people. But I want Theo to succeed, and if he's going to do so, he's going to have to ratchet it up, and quickly.\" I turned down Riverside Drive, then along College Street and around Courthouse Square.\n\n\"Fair enough.\" said Cindy. \"It's okay if I tell Tanya this, so she can help him?\"\n\n\"Yes.\" I said. \"But keep it to yourself, Teresa and Tanya for now, and tell them to not to say more until the Council actually does something.\"\n\n\"Sure.\" said Cindy. \"So... are we being followed?\"\n\nI smiled. \"Nope, not that I can tell. Did you see anything?\"\n\n\"Once I realized why you're driving like a dumbass who doesn't know where he's going, I started watching.\" said Cindy. \"And I saw no one. Want to tell me what it's about?\"\n\n\"Ever get the feeling you're being watched?\" I asked.\n\n\"Only by my boss during morning 'Angels' meetings.\" Cindy replied...\n\nPart 7 - Blossoming \n\nTuesday, October 20th. It was Homecoming Week at the University, and it's President, Dr. Sidney P. Wellman, was hosting a formal reception for the various Department Heads, Boosters, and 'significant' Alumni. It was something of a dress-up affair, black-tie and all, so I wore my best suit and... a black tie(!).\n\nMy wife Laura looked stunning in her beige dress that seemed to cling to her luscious body and float above it at the same time, and I was very proud to be her escort to the reception.\n\n\"So, dear,\" I said, \"is this one of those where you require my literal attendance, or should I mingle separately with your fellow professors that have no idea what to say to me?\" Laura laughed.\n\n\"Depend on who is there and what is going on.\" said Laura. \"Of course I'll need your undivided attention when we get back home tonight, and I drag you to bed to fuck your brains out.\"\n\n\"And if you let me undress you, slowly,\" I said, my voice a whisper in her ear, \"I will give you the fucking of your life.\"\n\n\"Mmmm,\" said Laura, \"I'm going to hold you to that promise...\"\n\nUnfortunately our flirtations were interrupted as my mother came into the house via the backdoor. She was going to babysit Carole, Jim, and Doug. Todd was attending the function tonight as a 'distinguished alumni', and I already knew that Teresa Croyle was his date for the evening.\n\n\"Oh, I believe I just interrupted some foreplay.\" my mother Phyllis said with a twinkle in her eyes. \"Just as well, since you two young lovebirds need to get going to the President's Mansion.\"\n\n\"Yes,\" said Laura, smiling radiantly at Phyllis's naughty talk.\n\n\"Son, you're going to miss the Council meeting tonight?\" my mother asked.\n\n\"Not much choice.\" I said. \"I have to go show off the hottest looking woman in the world, here. And besides, I wasn't invited to this Council meeting. They'll go into executive session and decide our fates without my input.\"\n\n* * * * * * * * * * * * * * * *\n\nThe party was being held on the beautifully manicured back lawn of the University President's mansion, and as we walked through the mansion and out the back door onto the patio, an elderly butler announced us.\n\nOne thing 'young whippersnappers' don't realize is the old-school methods of formal introduction announcements. As I handed our card to the old man, he announced \"Commander and Mrs. Donald Troy!\". Not \"Commander and Doctor\", not \"Mr. and Professor\"... but \"Commander and Mrs.\"... very formal, very old-school. \n\nWe then walked down the steps to the walkway that went down the long yard. Whenever I saw this beautifully groomed yard, I had an urge to play Ultimate Frisbee on it. But no time for those thoughts now: a lot of eyes were on Laura in her gown, and I was extremely happy that she was holding my arm as we came up to Dr. Wellman and his wife Sally.\n\n\"Laura, you look absolutely ravishing.\" said Sally Wellman. \"And Commander, you are aptly named: you take command of any place you enter. To whom may I present you?\"\n\n\"You both look wonderful, as well.\" said Laura. \"Perhaps you could tell us if--\" She was interrupted by the announcement of the next guests.\n\n\"Mr. Todd Burke and Ms. Teresa Croyle.\" intoned the butler. Not 'Lieutenant' Croyle; this was formal... old-school. \n\n\"Oh my goodness...\" Laura and Sally Wellman both gasped. Todd looked great in his formal suit and black tie, the perfect representation of a young executive on the rise. But it was Teresa that took everyone's breaths away. She was wearing a golden gown, slightly lighter than Laura's dress, and Teresa's dress clung to her magnificent body. \n\nTeresa was very shapely, with nice large-but-firm, high-riding breasts, an hourglass figure that expanded into shapely hips and a deliciously firm, heart-shaped ass. Despite her athleticism, or perhaps because of it, her legs were perfectly balanced: firm, trim thighs, and perfectly curvy calves that tapered to flawless ankles and elegant feet in her high-heeled sandals. Her shoulder-length hair, which she normally wore straight to the sides, was done up and styled very elegantly.\n\nAfter Todd and Teresa greeted the Wellmans, they were presented to us. \"Teresa, you look marvelous! Absolutely stunning!\" Laura gushed.\n\n\"Yes. Yes you do.\" I said. \"What have you done with my Police Lieutenant?\"\n\n\"I told her she looked awesome.\" said Todd with a big grin. \"Maybe now she'll believe me.\" Teresa was blushing, not used to such praise, and not really knowing what to do with it.\n\n\"Well, if it isn't the Iron Crowbar and his lovely family.\" said a woman's voice. We turned to see State Senator Katherine Woodburn. She was being formally escorted by the recently-divorced Tom Riordan, who was now a big University booster and being considered to be a Regent/Trustee.\n\n\"Ah, Senator.\" I said. \"You know my wife, Dr. Fredricson, and my nephew Todd. And this is Teresa Croyle, my Vice Department Lieutenant. Everyone, this is State Senator Katherine Woodburn, formerly of KXTC.\" Katherine's eyes smoldered as I reminded her not only that I'd taken KXTC from her, but the CEO of its new owners, Todd Burke of BOW Entertainment Group, was standing right here. But Katherine kept a straight face.\n\n\"You look very lovely, Lieutenant.\" said Katherine, and it seemed like more than politeness. \"Do you all know my friend Tom Riordan? He's now one of the Athletic Board Trustees, as well as part of the Wargrave Trust, and is very influential with the highest University officials and the Regents.\"\n\n\"No one is more influential in the County or the State than you, Senator.\" said Tom Riordan. I felt humor at the very subtle insults being hurled my and Laura's way, but I was not bothered by them. Especially since the the insults were not true.\n\nJust then Sally Wellman came by. \"Senator, may I take you away to introduce you to the President of City University and his wife?\" Katherine Woodburn quickly went with Sally, wanting to make yet another high-level connection.\n\n\"Come along, Teresa.\" Laura said, taking Teresa by the arm. \"Let me introduce you to some of the ladies around here.\" My wife had astutely realized that this was Teresa's entry into Town & County 'Society', which as a Police Lieutenant was something that would be to Teresa's benefit to get to know and be a part of. Laura was being matriarchal, but in a good way.\n\n\"So, Commander,\" said Riordan, \"I'm surprised to see you at a Bulldog Alumni event. I thought you were a Wildcat.\" I didn't think he meant that in a friendly way, but I rolled with it.\n\n\"Oh, that's next week.\" I said. \"This week I am simply the very lucky man who brought the lovely Dr. Fredricson to the party.\"\n\n\"Yes, she's a lovely woman.\" said Riordan. \"My ex-wife Janet was always saying that she thinks the world of her. So, Mr. Burke, you are the Iron Crowbar's nephew, I understand?\"\n\n\"Call me Todd.\" said Todd, smiling his charming smile. \"And yes, I'll claim him as my uncle, even if he is a Wildcat and we're Bulldogs. I'm the CEO of BOW Enterprises, by the way.\"\n\n\"Ah, yes, that's where I heard your name.\" said Riordan. \"I'm hearing great things about your company.\" They began chatting about Todd's company and business in general. I felt like a third wheel and was looking for a way to excuse myself, but was saved by the arrival of Elsie Gringer, aunt of Bettina Wurtzburg and the 'gossip guru' of the County.\n\n\"Ah, Commander!\" she exclaimed as she came up to me. \"And your wonderful young nephew Todd. You both look wonderful!\"\n\n\"Hello, Elsie. You're looking very well yourself.\" I said. \"Do you know Tom Riordan?\" Elsie and Tom exchanged introductions and handshakes. Tom then excused himself, as Elsie clearly wanted to talk with me and Todd.\n\n\"Todd, you must tell me who that lovely young lady is that came to the party on your strong, young arm.\" said Elsie.\n\n\"Perhaps Commander Troy can fill you in on that.\" said Todd, his mischievous grin on full display.\n\n\"Yes, that is the Lieutenant of my Police Vice Squad, Teresa Croyle.\" I said. Elsie was absolutely stunned.\n\n\"Well, I never...\" Elsie quietly gasped. \"So, Todd, are there any secrets you need to tell me? Any diamonds in the pockets of that suit of yours? Any future plans?\"\n\n\"No, no diamonds.\" said Todd, grinning his most charming smile. \"I'm afraid there is just no story for your column, Elsie.\"\n\n\"Not yet, anyway.\" said Elsie, her voice conspiratorial as well as flirtatious. \"You two are an excellent match; you look wonderful together.\"\n\n\"So says my grandmother.\" said Todd. \"And you will be the first to know if there is anything to announce.\" That made Elsie just about swoon. Just then Sally Wellman came by and asked to take Elsie away to talk to a couple of Journalism School professors.\n\n\"Good grief, Todd.\" I said. \"They're right. Sure there's nothing you want to tell me?\"\n\n\"I could do a lot worse, Uncle Don, a lot worse.\" said Todd. \"But no, we're still 'friends with benefits' right now. I'd have no problem making it more, but she's not quite ready.\"\n\nJust then Laura and Teresa made it back to us. \"Darling,\" Laura said, \"I need to take you through the gauntlet of my professorial peers, so I can show you off and make these bitches wish their husbands were half the man that mine is.\" Teresa could not stifle her laughter at that, nor could Todd.\n\nFor the next hour I proudly let Laura have my arm and guide me through the introductions. Most of these Academicians knew I was a police officer and looked upon me as if I were the very Plague in their midst, but the Chemistry professors knew I'd been a Chemistry major, and the Physics professors knew I was interested in their fields of study, even though I'd be lost if I had to go to their levels of mathematics. Those conversations were actually pretty pleasant. So it wasn't a totally bad evening.\n\n\"Teresa is really blossoming tonight.\" Laura said as we caught sight of Todd and Teresa talking to other executives and their spouses at the far end of the lawn, near the little guesthouse. \"I think they're good for each other.\"\n\n\"I couldn't agree more.\" I said. \"He really brings something out of her that I don't think she's ever allowed to come out with anyone else.\"\n\n\"Yes,\" Laura said, \"her femininity as a woman. She's been fighting the world too long. With Todd, she can relax and just be a woman... his woman. As to him... well, darling, he's your nephew... what do you think?\"\n\n\"What you're thinking.\" I said, very sure. \"Todd is a great play actor, and all of the world is his stage. Right now, this academic gathering is his stage. Tomorrow, his business will be. But that's all it is to him... acts in a play, and he's acting his parts... not showing the real Todd beneath.\"\n\nI continued, my eyes introspective and near a reverie: \"But I think he and Teresa are both groping to learn trust. We know her story, but his story is there too: he was hurt by Melina, albeit unintentionally; and he won't admit that Jeanine leaving him for his father hurt him, also. But when they both learn to let go of their fear... it'll become something wonderful for them both.\" I looked at my wife as I said \"Like what you and I have, my love.\"\n\nLaura smiled. \"Yes, like what you and I have...\"\n\n* * * * * * * * * * * * * * * *\n\n\"So we're decided on this?\" asked the Mayor, trying to wrap up this executive session of the Town & County Council.\n\n\"I think the Police Department portion is settled.\" said Pastor Westboro, who had somehow become the mediator between sides. \"As the Police Commander predicted, the changes really aren't that significant in the overall scheme of things.\"\n\n\"He may not even object to them.\" said Dagmar Schoen. \"No one is demoted, the Detectives aren't dispersed to the Precincts, at least not formally.\"\n\n\"He hasn't seen the impending budget cuts, though.\" Kelly Carnes said. \"And the layoffs.\"\n\n\"We're not even close to deciding upon those.\" said the Mayor. \"And that is not a topic for tonight's passage of the bill. What about the Fire Department?\"\n\n\"They're actually positively impacted.\" said Thomas P. Cook. \"It's the EMTs that will rightly take the brunt of the changes.\"\n\n\"How do you mean 'rightly'?\" asked Jack Colby in his baritone voice. \"If I didn't know better, I'd say you guys are trying to totally destroy the EMTs in this County. Are you planning on having a private EMT service? Maybe a contract is already planned under the table, Mr. Cook?\"\n\n\"What are you insinuating?\" thundered Cook.\n\n\"I just know it was mighty convenient how hard you pushed for Precincts.\" said Colby fearlessly. \"And lo! and behold! it is your properties that are getting leases with those various Precinct Stations.\"\n\n\"What of it?\" said Cook. \"Mr. Colby, are you formally and for the record accusing me of any wrongdoing in any of these matters?\"\n\n\"I think it should be investigated,\" said Colby, \"to determine if there was wrongdoing. Are you afraid of being scrutinized in that fashion?\"\n\n\"Gentlemen,\" said Pastor Westboro, \"may we stick to the current issues at hand, please? It's already been a long night, and we are tired. Tired people make mistakes, in their speech and their actions. To answer your question, Mr. Colby: no, there are no plans, hidden or otherwise, to eliminate the EMS Services. However, they must understand their place in our Public Safety structure.\"\n\n\"The Iron Crowbar has expressly desired that we lift the ban on EMS personnel that are fired or resign from being able to take other County employment positions.\" said J.P. Goldman. \"I believe that would be a very appropriate carrot to extend in exchange for the changes proposed here.\"\n\n\"Why should we give the Iron Crowbar anything?\" asked Kelly Carnes with a sneer. \"He's our employee, not our master.\"\n\n\"That's a debatable point.\" said Ian McGhillie, who had remained silent to this point. The cutting tone of his sharp Irish brogue seemed to jolt everyone else. \"Of course, he's too busy running the Governor's campaign in secret to even consider your problems, Ms. Carnes.\"\n\n\"Then let me bring this up.\" said Kelly Carnes, trying hard to take control and impose her will. \"How many EMTs would up and quit and move to other County jobs? And Troy would just use that to hire EMTs into his Police Force, and get around us.\"\n\n\"And then we have no EMTs left.\" said Edward Steele. \"I guess the Iron Crowbar is actually helping Mr. Cook get his private company, eh?\" There was some laughter at that, but Cook glared at Steele... who just looked right back at Cook, unafraid.\n\n\"We have not heard from Councilwoman Adams on this.\" said the Mayor. \"Ms. Adams, speak your peace so we can wrap this up.\"\n\n\"I believe we should vote now.\" said Malinda Adams, her mouth pinched into primness. \"On the current bill. We can come back to the EMT ban from other County employment at a later time.\" That pretty much concluded the debate.\n\nThey voted. The Mayor announced the result and said \"the second reading of the bill will be next Tuesday. If there is no more business--\"\n\n\"Mr. Mayor,\" said Ian McGhillie, \"there is one other thing. The Police Chief has asked to speak with us in private at the conclusion of our meeting. He's waiting outside.\"\n\n\"All right,\" said the Mayor, knowing what was about to happen, \"let's hear what he has to say...\"\n\nPart 8 - Political Machinations \n\nThe Country Breakfast Diner opens at 6:00am, but an early informal meeting was convened at 5:30am on Wednesday, October 21st. At this meeting was the Diner's owner, John \"Jack\" Colby, Dagmar Schoen, Chief Griswold, Sheriff Daniel Allgood, Your Iron Crowbar (me), and somewhat to my surprise, Fire Marshal Zoe Singer.\n\nNo amount of bad news was going to stop me from eating a good helping of breakfast foods from the buffet. There had been no formal dinner at the Wellman's party the night before, and Laura had dragged me to bed for some intense sex when we got home... yeah, I know, poor me having to endure such things... and I was now famished, for food.\n\nOnce we sat down in the private back room, Jack Colby began discussing the results of the previous evening's Council meeting. \"It's not all that bad for the Police Department, Don,\" Colby said, \"but there are some impacts.\"\n\nColby started: \"First, we're honoring the contract you made with David Krueger. We don't want any ex post facto complaints out of anyone swinging red crowbars. Even Malinda Adams was good with that; only Kelly Carnes complained.\"\n\n\"So right now,\" said Colby, \"your 'Detective Apprentice' and 'Detective J.G.' ranks have Corporal stripes with one and two rockers underneath, very unusual looking but everyone likes them. And they will stay. What will change are the names. 'Detective Apprentice' will become 'Detective', and 'J.G' will become 'Detective-2', and called 'Detective'. Both ranks are considered equivalent to Corporals.\"\n\n\"No third level?\" I asked, having anticipated three levels of Detectives.\n\n\"No.\" said Dagmar. \"We're calling these '1' and '2', but in reality they're like '2' and '3', with Senior Patrolman being the de facto first level from which these Detectives will come. You don't need Detective Apprentices anymore, since the first such rank will be filled by someone vetted and ready to be a full Detective.\"\n\nJack Colby said \"The next level is 'Detective Sergeant', a rank we already have, with the symbol of Sergeant stripes and a rocker beneath. And that will remain. The Detective Sergeant will now be in charge of a group of Detectives.\"",
        "\"So this is where it starts differentiating.\" I said.\n\n\"Yes.\" said Dagmar. \"Your current people will be left where they are, but new Detectives will be under the current people, and as they are promoted or leave, Detectives will be promoted to Sergeant to replace them. This will be done over considerable time, even years, so it's a slow transition for you, Don.\"\n\n\"That's true.\" I said. \"And it's what I was anticipating. Just don't tell me you're assigning them to Precincts.\"\n\n\"No.\" said Colby. \"But the only thing preventing that is the sheer lack of size of this Town and County. Carnes and Cook pushed hard for it, but just could not make a case for having what will likely still be a maximum of two groups in MCD and two in Vice and try to spread them out.\"\n\n\"So all you're doing\" growled Chief Griswold, \"is pushing the Detective ranks back so that they are under and work up to Detective Sergeant instead of being higher than Sergeants as they are now.\"\n\n\"Exactly, Chief.\" said Dagmar. \"We did leave what you call the 'warrant officer' bars in place... well, the one- and two-squared silver bars... and those are formally going to be called 'Senior Detectives'. But those are going to be very long-time, very experienced, or very good people--\"\n\n\"Like Iron-Crowbar-level people.\" growled Chief Griswold with a grin under his mustaches.\n\n\"Pretty much.\" said Dagmar. \"Those ranks will rarely if ever be filled... like the Technical Sergeant, Master Sergeant and Sergeant Major ranks that technically exist but are not being filled. One idea is that these experienced Senior Detectives would be assigned to Precincts, would advice and teach younger Uniformed officers, and would be on the lookout for talent, kind of like the Technical Sergeant positions that are primarily for teaching.\"\n\n\"In other words,\" I said. \"the Council is trying to use that as a backdoor way of putting Detectives in precincts. You just admitted it.\"\n\n\"Uh...no... not really.\" stuttered Dagmar, and my baleful stare had her very unsettled. Jack Colby tried to rescue her.\n\n\"No, don't worry, Don.\" said Colby. \"That wasn't even put in the bill. Just discussed.\"\n\n\"C'mon, guys, I know you're on my side.\" I said. \"But I can see what they're trying to do here. These 'discussions' become implemented actions all too often.\"\n\nDaniel Allgood intervened: \"Why don't you tell the Commander the rest of it.\"\n\nThere's more? I thought to myself.\n\n\"Sure, Sheriff.\" said Dagmar, who then turned back to me. \"We are not doing away with any of the ranks, but we are trying to diminish the formality of them. One complaint of some officers was that a Senior Patrolman with three rockers under his one chevron stripe might act like he or she outranks Patrolmen with one or two rockers underneath. That's not what we really want.\"\n\n\"We do want the pay grades,\" said Colby, \"so what we're going to do is allow only stripes from Corporal and up to be shown on standard duty uniforms. The cute chevrons and multiple rockers will only be on formal uniforms, and by that we mean not even Duty Dress, but formal. If you see the rank below Corporal, you'll also see medals instead of ribbons on the jackets, and in your case, Commander Troy, a Medal of Valor around your neck.\" His effort to butter me up did not improve my mood.\n\nDagmar said \"Detectives will generally be expected to wear plain clothes, but if they do wear a uniform, they'll have their ranks on the sleeves, as they're considered Corporal-level officers. But we're going to strongly encourage Detectives of all ranks less than Lieutenant to wear plain clothes.\"\n\n\"Nothing new there.\" I said. \"And basically diminishing the so-called ranks to pay grades among the Patrol Officers will probably be good over time, though some are not going to be happy in the here and now.\"\n\n\"The last thing is Technicians.\" said Dagmar. \"Lucky for you Myron and Mary are full Detectives already. Technicians are essentially going away. They might be employees of the TCPD or TCFD, and they'll have pay grades like they have now. But new hires will be essentially non-uniformed civilians, employed by the County. Current officers in technician roles can ask for reassignment, stay where they are until they're promoted, or accept the civilian role.\"\n\n\"I should add,\" said Daniel Allgood, \"that this is happening over the entire County. The Public Safety Department will have an I.T. Department serving all branches. They may be assigned to and dedicated to the Police or the Fire Department, but they'll ultimately belong to me.\"\n\n\"And my Data Guyz?\" I asked.\n\n\"Still yours.\" said Colby. \"They are police officers. We're talking about the hardware and base software, server maintenance, the wiring and specialized I.T. functions. But your Data Group is not going to just be people sitting and staring at computers. They'll be expected to do other Detective functions, though data will be their speciality.\"\n\n\"Just like observation and deduction is the Iron Crowbar's specialty.\" said Chief Griswold.\n\n\"I sense I'm being buttered up here.\" I said. \"So while I go get a second large plate of delicious breakfast foods, why don't you give Commander Singer here the really bad news, as that is obviously why you invited her.\"\n\n\"You're really making me feel great this morning, Don.\" Zoe said sardonically.\n\n\"He's right, Zoe.\" said Dagmar. \"It's not good for the EMTs...\"\n\n* * * * * * * * * * * * * * * *\n\nI got to Headquarters and the MCD room just in time for Bettina's broadcast. It was a very silent room full of MCD and Vice Detectives that listened intently to every word. Fortunately, Bettina's report was accurate, though she made it sound much worse than it really was.\n\nAfter she was done, I said \"Doughnuts here, guys.\" Indeed, I'd brought three full boxes. They disappeared quickly.\n\n\"Not so bad for us, but those poor EMTs...\" Joanne Cummings said. \"Think they'll go on strike over this?\"\n\n\"The Council will just fire them if they do.\" Cindy Ross said. \"Or I guess I should say the proper term: 'lock them out'.\"\n\n\"Jobs are scarce as it is.\" said Theo Washington. \"And they can't take any Town or County job, even as a school teacher, if they quit or get fired. What I don't understand is why the Fire Department treats the EMTs like shit.\"\n\n\"I'm a relative newbie to this County.\" I said. \"So I don't understand it, either.\"\n\n* * * * * * * * * * * * * * * *\n\nI was watching for the Chief to arrive, but he did not do so until right at 8:00am. I attempted to follow him into his office, but he closed his door behind him to prevent my entry. I asked his secretary Donna to buzz him and ask him to let me in, but she sneeringly said he didn't want to be disturbed, and she would do it \"in my own time.\"\n\n\"Your time is not going to be much longer, at least as far as employment with the Town & County Public Safety Department is concerned.\" I said to her as I walked out of the anteroom and back to my office.\n\nCindy and Teresa came into my office for the 'Angels' meeting. I asked Captain Ross to go put all Precinct Captains and Department Heads on alert for a meeting in the next hour or so... including the Admin leaders and even Deputy Chief Brownlee himself. She stalked out of the room.\n\n\"So, Ms. Croyle,\" I said, \"how did you like that reception last night.\"\n\n\"It was... kinda fun, actually.\" said Teresa. \"Not my kind of people, though.\" I could not resist laughing out loud at that one.\"\n\n\"Not mine either, except my wife of course.\" I said. \"But you looked great! You were the Belle of the Ball and the Talk of the Town, and I hope you met some people that might be important to your career moving up the ladder in this Police Department.\"\n\n\"Uh, thanks, sir.\" Teresa said. She was just beginning to realize the importance of the social aspects, I thought... then I realized that she might actually be thinking of her future with this Police Force and her upward mobility for the very first time. Hmmm...\n\nI didn't have time to think more of it as Cindy and Tanya came inside. \"Okay ladies,\" I said, \"I was expecting to be talking to the Chief right now, but he's making a point to not speak with me. So, anything new on the Collins murder?\"\n\n\"He had no drugs in his system.\" Tanya said. \"Tests came back confirming that. I expected at least some hits for residual drugs over time, but he was really and truly clean.\"\n\n\"That is a surprise.\" I said. \"Anything else?\"\n\n\"Just that the knife, the big knife, used to slice up the guy's backside,\" said Tanya, \"was lubricated, to decrease friction as it cut through internals.\" said Tanya.\n\n\"Pro hit.\" I said. Seeing Cindy and Teresa peer at me, I said \"It means this is a man used to using this knife to butcher things, and what he seems to like butchering is human beings. He's a pro, and this was a hired hit.\"\n\n\"Yes sir.\" said Tanya. \"The FBI is going to glance into possible contract killers for us. I contacted Jack Muscone last night when I first got these results--\"\n\n\"Don't say it!\" Cindy exclaimed to me, seeing the look on my face.\n\n\"Moi?\" I said in mock surprise with a grin. Just as Tanya caught on, my phone rang. I answered, listened, then hung up.\n\n\"The Chief has deigned to see me now.\" I said. \"We'll talk more later.\" I got up and hurried to the Chief's office before he changed his mind.\n\nAnd what Cindy stopped me from saying was that Tanya's contact with Jack Muscone was to wake him up from sleeping in her bed next to her...\n\nPart 9 - Sloppy Seconds \n\nThe Chief's door was open when I went into the anteroom, and he called out for me to come on in. I went into his office and shut the door... perhaps with a bit of authority. He looked up at me, seeing my eyes burning.\n\n\"You wanted to talk to me, Commander?\" he asked. \"Have a seat.\"\n\n\"Yes sir.\" I said, sitting down. \"First, sir, I'm just going to tell you this straight out: if your assistant out there ever again treats me the way she did this morning, she will be fired.\"\n\n\"Commander, that is not your call to make.\" said Bennett, with some acidity in his voice.\n\n\"I can have her access to sensitive data restricted, Chief.\" I said. \"And even have her denied access to the building pending a deeper investigation of her trustworthiness. If my assistant treated you the way yours treated me this morning, I'd have fired her on the spot. What you do with your assistant is your business, sir, but she'd better clean her act up, and fast.\"\n\n\"I'll speak to her.\" said the Chief, knowing I was not kidding. \"And you've obviously pissed off at something. The new structure?\"\n\n\"No, sir,\" I said, \"though that is what I wanted to speak with you about this morning. I'm about to call all the Precinct Captains and above, as well as Department Heads in for a big pow-wow, to clarify and explain the new structure. I was hoping we would plan what we'd say, then you'd give the talk as it really should come from you.\"\n\n\"They haven't even passed it yet.\" said Chief Bennett. \"What's the rush?\"\n\n\"The Media is reporting the details, and pretty accurately.\" I said. \"But they're also distorting some things, so we need to disseminate the truth through the chain-of-command as quickly as we possibly can, nip any untoward rumors in the bud.\"\n\n\"I see what you're talking about.\" said the Chief, who was looking off to the side, almost turned sideways to me. \"If you want to handle that, go ahead. You don't need me to be a part of that.\"\n\nI worked hard not to openly gawk at what I had just heard. \"Are you sure, Chief?\"\n\n\"Yes.\" said Bennett. Then he said \"Who do you think is going to win the Governor's election, Don?\"\n\n\"That depends, Chief.\" I said, a bit taken aback by the sudden changing of the subject, not to mention the actual question. \"If Governor Jared runs again, I think he'll win. If not, then Director Lewis will easily defeat any other Republican they put up against him.\"\n\n\"That's what Krueger said when I asked him.\" said the Chief. He then glanced over at me. \"I'm sure you know the reason I'm asking.\"\n\n\"I can make an educated guess, anyway.\" I said. \"I think you've been offered a job in connection with that new State Lab that's being built next to the University. Maybe as the Administrator of it. And you're wondering who you'll be working for after the Election.\"\n\nBennett gave a wan smile. \"I actually think something slipped by you. You're part right, but it's more. After that disaster at The Asylum, the one you helped greatly to expose and put an end to, the Governor has been reorganizing some things in the State Department of Justice, especially the State Bureau of Prisons, as well as revamping the various State Crime Labs.\n\n\"The Governor has broken the State into several regions, and I've been offered the position of Regional Manager for this area.\" continued Bennett. \"I'll be overseeing the construction of this State Crime Lab as well as the refurbishment of The Asylum. We're-- they're going to be upgrading the Mental Hospital there, really cleaning up all that mess.\"\n\n\"And you've essentially agreed to take the job already.\" I said. \"They didn't start the Crime Lab construction here until they had the regional structure in place and you agreeing in principle to take the job.\"\n\n\"Well, maybe less got by you than I thought.\" said Bennett. He had no idea, I thought to myself, but I said nothing more. \"My office will be in the State Office Building here in Town, and I'll be commuting to Midtown a lot.\n\n\"I might have a house down there where you can stay for stretches if you need to.\" I said.\n\n\"I'd appreciate that.\" Bennett said. \"I will say this: I told the Council at their meeting last Tuesday, so the gears are in motion. I officially start the State job on January 4th of next year. I'll remain on as Chief until the end of the year, though I'm in a Consultant capacity right now. I expect they'll offer you the Chief's job again, and this time if you don't take it, they will make Robert Brownlee the Police Chief... and your boss.\"\n\n\"On that... Time will tell.\" I said. \"Anyhoo: congratulations, Chief, that'll be a great job for you, and the State will be able to make use of your managerial talents. Is there anything else you need me for?\"\n\n\"No, go ahead and prepare for your meeting.\" said Bennett. \"And Don, do not say one word about this for now.\"\n\nI made the 'my lips are sealed' motion, then left. I made sure to glare at the assistant Donna as I walked by. Yes, she'd damn well better be prepping her r\u00e9sum\u00e9...\n\n* * * * * * * * * * * * * * * *\n\nI went to Cindy's office and offered to buy her lunch. We got into my Police SUV and I drove down to Jefferson Avenue and turned east upon it. After clearing the Town, I surprised Cindy by continuing east along the road until it became the Nextdoor County Highway.\n\n\"Yep,\" I said as she looked at me. \"We're going to have lunch with your sister Molly.\"\n\n\"Good.\" Cindy said. \"I haven't even seen her new office yet, and I want to.\"\n\nIn the town of Hillside, we went by Police Headquarters, where we spoke with their officers, including their Chief, for a few minutes, and then Molly came with Cindy and I to the Lakeside Restaurant for lunch. The restaurant was near the highway, and was built on the southeastern end of Reservoir Lake, complete with a dock and deck near the water.\n\n\"Ladies,\" I said after we'd ordered, \"this information is for your ears alone, and should not be disseminated, at least not by you, Cindy.\" I told them that Chief Bennett was indeed leaving, and the story behind it as I'd learned it this morning. Both Molly and I noticed Cindy's eyes sparkling just a bit more brightly.\n\n\"Don't get excited, Cindy.\" I said, trying to hide a grin. \"The Council will insist that either I take the Chief job or they'll give it to Brownlee over me... and you. And I'm not taking the Chief job.\" For just a second, Cindy's eyes flared, then she caught on... and I could tell she was trying to rely on mental insight as she was being taught by her father Dr. P. Harvey Eckhart, founder and great leader of 'The Vision' self-help group.\n\n\"You have already planned this out.\" said Cindy. \"I don't know if you were behind getting Bennett out of the Chief's chair with the State job, but you've already decided what to do about who will be the new Chief. And...\" she looked over at Molly, and I could see that she, Cindy, was understanding as she continued: \"... and since you've brought Molly here, I think I know what your plan is...\"\n\n* * * * * * * * * * * * * * * *\n\nThere are two things that the Troy Household's guardian dog Bowser does not particularly like. One of them is sweet potatoes; he'll eat anything else, but not them.\n\nThe other thing is my cellphone going off in the wee hours of the morning; he apparently remembers when I went up to The Cabin and got kidnapped. So I heard yipping right after I heard my bedside cellphone ringing. It was my Police cellphone, and it was Sergeant Rudistan calling.\n\n\"It better be good, Rudistan.\" I said groggily as I became fully awake, knowing full well it would be if it was him making the call.\n\n\"Right up your alley, sir.\" said Rudistan. \"We've got sloppy seconds here. A Whippet's Club customer was kidnapped from their parking lot in the southern end of the Tenderloin District. We just found the guy's body in the field just north of Cemetery Hill... BDSM clothing, the works.\"\n\nI was fully awake now. \"So why do you need me to come down there?\" I asked as I got out of bed.\n\n\"Uh, sir...\" said Rudistan, who obviously did not want to tell me on the phone. \"I think it's something you just have to see for yourself...\"\n\nTo be continued.\n\nBonus points: The cluuuues to the Iron Crowbar's plan for the Chief's chair have been given, in this story and other stories before it. What do you think Your Iron Crowbar's plan could be?"
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "party",
        "police drama",
        "crime drama",
        "mystery"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/eyes-only-ch-02"
}