{
    "title": "Trust Ch. 05",
    "pages": [
        "I'm sorry for taking so long to submit this chapter. Life happens and then too, something I call writer's fear. I must have written and rewritten this particular chapter a thousand times. I'm still unsure, but I hope you enjoy it and that I've done these amazing characters justice. No, the next update will not take so long for me to share. Promise. Thanks so much for hanging in there. ~ABG\n\n*\n\nIf the heat that consumed them was from fire, then it could be said that what covering she did wear merely disintegrated from the intensity. \n\nKieren needed skin. He needed to feel her as close to him as possible. He needed the warmth that only Iona could provide. His body needed to touch hers, not just on the surface but on the inside. As his lips devoured hers mercilessly, Iona surrendered completely to the searching of his tongue and he reveled in what he found. To Kieren there was nothing sweeter than the taste of her, nothing more satisfying than the feel of her softness against his strength. This is what he had waited so long for. He felt her body answer the heart of the question that thundered within him. \n\n\"Are you mine?\" \n\nIona's very being susurrated, \"Yes.\" \n\nKieren could feel the hum of it sing to him as he laid her across the bed, his lips hungrily gliding down the column of her neck. \n\nIona had yearned for so long to feel the weight of his body atop hers. She had dreamt of it, visualized and imagined every possible scenario. And now, he was in her arms, the heat of him against the palms of her wondering hands. The shifting of sinew and honed muscle was now beneath her touch. Nothing she had ever foreseen could possibly compare to the actuality of what was happening. She knew from the first moment she encountered him that Kieren was like no other man. Yet, everything she thought she knew was still so little. On this night, Iona would bury her self within him, absorb all she could and emerge a new woman. \n\nShe drew her hands over the strength of his upper arms and the curve of his shoulders, feeling the grooves and the definition of his body. The tips of her fingers had just barely grazed the edge of the corded skin at his back when, with one swift movement, Iona found both of her curious hands held roughly above her head\u2014pinned to the thick wood of the headboard by the vice-like grip of his own.\n\nThe wild blue of Kieren's eyes, the most heated portion of any flame, flashed. \n\nIona had no fear. She did not recoil from his threat. There was no part of him that she was not ready for. What she did not know, she was ready to learn. She had not forgotten about the markings on his back or her words. She had not forgotten about the anger that she had caused him. She knew that there would now be time to melt away anything that dared come between them. To this she was most dedicated. \n\nHowever, if he thought the binding of her hands a deterrent, he was most mistaken. Her smile was wicked and laced with lust as she raised her face to his. She ran her cheek alongside the collection of fine hairs that spread from the line of his jaw upward. Instead of sharing a tender kiss of submission, her lips stopped short, barely touching his and Iona whispered, \"You grew shabby while away from me.\"\n\nKieren raised an eyebrow, a look that she so loved. The look in her eyes was as dangerous as the look in his. \n\nHis cock twitched and grew harder.\n\n\"Thoughts of your displeasure make a man weary and careless with himself,\" he returned, placing his hands back where they belonged, on her body.\n\n\"Be not...\" Her tongue reached out to taste his lips and she let the tip follow its line, \"weary of me.\"\n\nAs she kissed him, Iona lost more than just her fingers in the thickness of his hair. Grabbing a section close to the root, she pulled. Accompanying the unexpected jerk of his head was now a bite to his bottom lip and the sexiest of purrs from her chest.\n\nA primitive surge of ownership coursed through Kieren. He shifted his weight and slid his hand up over her rib cage. He felt the underswell of her breast and did not stop until its fullness rested in his palm. Then, he squeezed.\n\nIona moaned and arched her back.\n\nKieren smiled devilishly as he avoided her need for his lips and let his kisses fall back down her neck, then across her collar bone. His lips covered the peak of her breast after teasing it with his tongue. Pulling from it, he let her feel the threatening touch of his teeth.\n\nIona released a deep tortured moan, the sound of which hit Kieren's senses--sending another shocking alert down his spine and to the tip of his cock. \n\nHis returned growl, thick with frustration, was the only sign of how difficult it was for Kieren to suppress the wildness of his nature. This woman and the lushness of her bronzed body provoked him in the greatest of ways. But in the haze of his strong need, he knew that this was just a beginning, a door that he must ease open and they must step through together. The harshness of before must be erased from her mind. He wanted nothing to recall the memory of him that did not involve the joy of his touch, the pleasure of his nearness. This calmed and slowed him as he spread her legs wider with his own.\n\nKieren moved down her body skillfully. Each movement, touch, lick and bite was designed to heighten her desire. He was sensitive to her every response--no matter how small, and fed off them.\n\nThe feel of his tongue across her torso caused Iona to tighten and quiver uncontrollably. Just when she thought she might recover, she discovered that sensation was nothing compared to the feel of the next one. Running his tongue up her weeping slit and teasing her swollen lips was only a beginning. With his face between her thighs and the resting of her legs over broad shoulders, she was enraptured. Iona gasped for air when he dragged the texture of his tongue across her throbbing bud. When he sucked it in, her lips formed a perfect O and released a rush of air. When he flicked at it, the sensation was so overwhelming that she found remembering to breathe hard. \n\nIt was too much; she attempted to escape his delicious assault.\n\nKieren growled once again, hooked his strong hands firmly around her upper thighs to hold her steady, and increased his exploration. Finding her body's rhythm and recognizing the spots that guided her to the heights of pleasure gave him pleasure. Just when he felt her entire body constrict, on the cusp of climax, he pulled back\u2014each time enjoying the control. Her sounds were intoxicating.\n\nIona felt as if she could die now, life could become no better. Even the graze of his teeth at her flesh, produced a unique panic that left her gripped by her own carnality. Just as she felt that she could no longer survive this over powering of the senses, when she could feel the oncoming fissures before the completeness of shattering, he would retreat\u2014leaving her entire body pulsating in small waves that were infuriating promises that he was not finished. \n\n\"Please Kieren...\" \n\nHer mewling had made her voice weak but thick with passion, \"I...I can bare this no longer.\"\n\nKieren laughed quietly.\n\n\"You would be amazed at what the body can bare.\" His voice was a rumble in his chest, low and promising.\n\n\"Kieren,\" she sighed.\n\n\"I love the sound of my name falling from your lips,\" he crooned before letting his tongue dive inside her.\n\nWhen he looked up, Iona's eyes were tightly closed as she grabbed at the bedding. He could feel the beating of her heart with his tongue, her walls grasping and pulsating against it. He could taste this new sweetness as she came. \n\nWith deliberate gentleness he worked his way up her body, finally sucking and teasing each breast. This was done with great difficulty considering how her trembling affected him. \n\n\"What do you want Iona,\" he whispered, finally looking down into her glazed eyes.\n\nShe did not hesitate. Iona ground herself against his inflexible solidness. \n\nKieren had to close his eyes and fight himself harder. By capturing her lips, he steadied himself. When he finally pushed at her door, Iona was wide open and begging to be filled, to be completed. \n\nKieren paused for the slightest of seconds.\n\nIona pressed her heals into his back and gasped against his mouth. \"Kieren,\" she cried out as he filled her in one swift movement. \n\nThe stretch around this invasion set every nerve in her body on fire. She buried her face against his neck and tightened the hold her arms had around him. She expected some pain. The joy of just having him inside her made her not fear but give in to it. Almost in tears, she once again called out his name.\n\nTo hear his name called out in such a way would have driven any man crazy. However, her cry was only a pale echo in Kieren's ears as he released a fierce roar of satisfaction. It rose up within him and shook his chest when he felt his thick head strike at the gate of her womb. The grip of her channel made him lose control. Before his descent, he had paused in expectation, but still he proved unprepared for just how good she felt to him. He was more than aware of what challenges his size presented to a woman. By her own admission, she was no virgin and he expected no sign of such. It was, however, obvious that Iona had only known lesser men. Although having no wish to inflict pain, Kieren reveled in that thought. It gave him pride. She was truly all his and this feeling compared to no other. \n\nKieren closed his eyes for a moment and shook his head in an attempt to gain more control. \n\nHe pulled back to search her beautiful dark eyes. They glistened, so wide and scared, searching his own. \n\n\"Trust me,\" he whispered to her, smoothing back her hair.\n\nIona did not become the one floating above, deadening her body as she waited for the experience to end. She did feel lightheaded and as if floating, but she was one with Kieren here and now. She did not want to even close her eyes for fear of missing one single thing. All of her participated in what this man was making her feel. All was different. She felt every part of her body fill with this man that lay between her thighs. She was dripping wet with expectations already surpassed, overheated in the pursuit of gifts yet to be given.\n\nHer response was breathy and filled with raw emotion.\n\n\"I do,\" she declared, spreading her legs wider and drawing up her hips.\n\nKieren's hands immediately cupped her firm ass. \n\nWith a degree of gentleness alien to this man, Kieren made love to her. At the suctioning of the pull, Iona inhaled with a hissing sound. With the glide of the descent, she exhaled with a thick moan. Kieren enjoyed the sound of both as they found their rhythm together. With his lips on hers, he encouraged her with endearments and she met him in every way. She was so wet and sweet. The mounting of desire made it impossible for him to maintain this measured control. Soon he was pushing faster, deeper and harder with each thrust. \n\nIona was submerged in a wonderment of sensations. The ache and throbbing started to accentuate something new. A rush of pure freedom flooded through her body. The force of it took her breath away. The entire world was circling around her\u2014faster and faster. She held on for pure life. His lips and tongue became more than delicious, they were necessary for survival. The way his body shifted above and against hers, giving and drawing satisfaction made her want to offer more, yet take as well. Kieren was so deep inside of her, pressing against parts of her that had never been touched and caressing those hidden places, all she could manage to do was feel. Her sounds were not even familiar to her. She clung to his powerful form to somehow anchor herself to time and space. He was now the creator of everything. She felt everything expand. \n\nSuddenly Iona pulled her face from the crook of his neck and looked into the blue sea of Kieren's eyes in absolute shock.\n\nKieren gave her a gentle smile. He knew what she had yet to understand, and whispered, \"Yes.\"\n\nThe very word seemed to reach across some unknown barrier within. It clamped down on her body and she shook fervidly, bursting open. Each muscle and nerve was brought alive. They constricted and expanded, to the powerful sound of her heart beating.\n\nBefore Iona had a chance to recover, Kieren rose up onto his knees, raising her up into him as he fucked her harder. Primal instinct overtook him. The words that left his lips were oaths of the old world, enflamed and guttural as he came.\n\nThe feel and force of what he emptied inside of her only amplified what had already engulfed her, sending fierce aftershocks. Iona was left barely conscious. Her legs were locked around him and her thighs trembled as he held her close. She felt the soothing of his lips at her temple and the security of his hands spread across her back. When he finally pulled out, she whimpered from the loss and tears eased down her cheeks.\n\nWith both hands cupping her face, Kieren rested his forehead against hers. Her tears concerned him and an odd sense of guilt made him vulnerable. \n\n\"Iona?\" he whispered.\n\n\"I...love...you,\" was all she could manage to say with a weak and tender smile.\n\nKieren crushed her against him in relief. \n\nIn her lover's arms, Iona laid--draped across his chest and listening to the beating of his heart. She fell to sleep thinking that if there were Gods maybe they were finally smiling down on her. Kieren fell to sleep feeling like one.\n\n**************************\n\nIn what she thought to be the morning, Iona opened her eyes and stretched. Never before had her body felt so ideally spent. She ached, yet the feeling was different from any ache she had borne before. \n\nBut, Kieren was gone. \n\nPanicked, she threw her covers to the side and stood. Then, noticing that there was some type of an attempt to fold her things over the large chair, she smiled. Bath water had already been poured for her and still warm. A full bottle of her oil stood beside it. This was Kieren's doing and she loved it.\n\nSoon Iona realized that it must be later in the day than assumed. She could hear the men, much too rowdy for their morning gathering before she had even entered the great hall. She was surprised to see them so wound-up. The hall was overly crowded and as she drew closer the noise was deafening. \n\nFollowing the eyes of a few men, she knew that something unusual was happening at the hall's center. However, Iona could not see through them, and definitely not above them. Squeezing between the backs of those on the perimeter, she attempted to make her way to the kitchen. On the way, she thought she saw the color of Brenna's shift through a sudden repositioning of a few men. She forced herself in that direction. Two or three men looked down, realized who she was and moved to let her pass. \n\nFinally standing behind Brenna, a bit sapped, she shouted over the ruckus, \"What is going on?\"\n\nOnce realizing it was Iona, Brenna laughed. \"Why don't you see for yourself?\"\n\nShe grabbed Iona's arm, threw her own weight around forcing a few of the men to have no choice but to move, and pulled Iona to the front.\n\nOnce Iona gathered herself, she looked at what was before her. Immediately, she covered her open mouth in horror. \n\n\"Could it be about you?\" Brenna teased, close to her ear. \"What reason could they possibly have?\"\n\n\"Oh no,\" Iona shrieked, her chest tightening. \n\nWhen Iona started toward the two men, Brenna quickly yanked her back. It was no easy deed. The girl was determined. Iona's strength could not match Brenna's.\n\n\"This is madness,\" Iona exclaimed. \"I can't just let them...\"\n\n\"Calm down girl.\" Brenna cut her off before she was overheard saying too much. \"Everything is not about you.\"\n\nIona fought her nature and somewhat quieted, but now she was confused.\n\n\"You do not understand,\" Iona cried out.\n\n\"Not about you,\" Brenna emphasized the words as if disciplining a child.\n\n\"Then why is one seeking to murder the other?\" \n\n\"I suppose it looks that way.\" Brenna turned her head sideways and considered the two men with another hearty laugh. Then she dismissed the idea with the hunching of her shoulders. \"But Russ lives each time. Kieren spares him.\"\n\n\"Spares him? What would happen if Kieren decides to spare him no more?\" Iona said, stunned.\n\n\"Then child, both men would die,\" Brenna said with reflective confidence, \"one by the sword, the other by self-reproach.\"\n\nDespite Brenna's words and obvious amusement, Iona watched in fear as the crowd roared on.\n\nKieren was holding Russ up by the front of his shirting now. Russ' feet were almost off the floor.\n\n\"Why did you not confer with Gunner for council then?\" It was more of a command than a question. \n\n\"He would have found a way to negotiate,\" Russ struggled to answer. \"Power was the question here brother, not the need for politics and its solicitous talk.\" \n\n\"You do not know wisdom when it is offered to you.\"\n\nWith those words, Kieren lifted Russ higher and threw him onto a table.\n\nRuss immediately did a flip that left him standing at the far end. Kieren had already turned his back to leave when Russ did what Iona considered the unthinkable. \n\nIona screamed. If they did not kill each other, Iona thought; they would definitely end up killing a by stander.\n\nKieren's reaction was quick. He moved his head slightly to the side as the knife went by. He was turned around before the sound of the knife hitting the wall completed and he swiftly returned the favor with the distinct sound of something piercing the air. \n\nRuss attempted to avoid it, but was caught. He looked at Kieren in disbelief, touching himself and then looking at his own blood.\n\nFrom where Iona had stood, it had looked as if Kieren's aim was for the center of Russ' head. She was relieved when she realized it was just the top of his ear that had been grazed.\n\nKieren gave him a cruel smile.\n\nRuss then jumped on a table in one sweeping movement. Steady on his feet, he quickly jumped onto another before propelling himself toward Kieren. \n\nKieren crouched low and as Russ flew over him, Kieren rose up beneath Russ, flipping him over and slamming him on another table\u2014which then crashed to the floor.\n\nThe crowd went mad. \n\nRuss took a minute to gather him. Before that minute had completed, Kieren was dragging him by one boot. \n\n\"You are guaranteed to be defeated if anger is the only thing that drives you brother,\" Kieren pointed out with his usual voice of authority and exemplary control.\n\nLetting Russ go, Kieren stepped back, gifting his younger brother the time to stand.\n\nAn enraged Russ went for Kieren again, aiming for Kieren's waist. Russ somehow ended in a choke hold. The two moved so quickly. However, instead of fighting Kieren's hold, Russ moved into it. \n\n\"Long Sword,\" a few men shouted with support due to the smartness of the move.\n\nThe two battling men fell to the floor. It appeared that Russ was at some advantage from the way they had fallen. All Iona could see was a random lifting of a table or chair because of the cheering and jeering of the other men. \n\nSuddenly the room silenced as both men rose with surprising caution, facing each other. Kieren held the tip of a dangerous looking dagger in his left hand and under Russ' chin.\n\nKieren then leaned forward and whispered in Russ's ear without removing the dagger.\n\nIrritated, Iona thought, \"Why is the man always whispering something in someone's ear--such drama? Could he not issue his threats aloud?\"\n\nKieren removed the dagger from the throat of his brother and flipped it in the air, catching it by the butt. \n\nThe audience roared.\n\n\"I believe this is yours,\" he said, turning the knife as if for safety and handing it to Russ.\n\n\"I am the leader here. The power is mine to restrain or issue. I advise you to not forget that,\" Kieren announced over his shoulder as he calmly strode away. \"And, your knife is top heavy. The sound it makes in the air is deafening.\"",
        "With respect and awe, the men parted for him. Kieren disappeared down the passageway leading to his rooms. Only after he was out of sight did the men begin to speak again. Some began with \"Did you see how...\" Others just roared and hit each other on the back.\n\nIona noticed Gunner sitting at a table in the far corner of the room. Looking satisfied, he raised his mug to her with a rare smile. She glanced over at Russ, feeling sorry for him as he went to claim the knife still stuck in one of the large poles supporting the Longhouse. When she looked back at the still smiling Gunner, he then winked at her. It looked odd and left her perplexed.\n\n\"I think Russ has learned his lesson,\" Brenna said turning. \"That was an interesting one.\"\n\n\"That's a cruel way to teach someone,\" Iona snapped.\n\n\"Oh it could have been much worse. No bones were broken. Well, it may have cracked his pride. It is good for Russ, The Great Long Sword, to get his handsome rump beat every once in a while. He learns better that way.\"\n\n\"Brenna?\" Iona could not believe what she was hearing. \n\nBrenna walked away with a hardy laugh. \n\n\"And, who does Kieren learn from?\" Iona asked from behind her.\n\nBrenna turned to the girl and searched her face with censored curiosity. She grabbed Iona by the chin and raised her face as if examining her. It reminded Iona of the first time they had met. Iona almost expected Brenna to ask her to show her teeth.\n\n\"Apparently, you,\" The old woman concluded, releasing the girl and laughing as only she could.\n\nStarting toward the kitchen, Brenna added, \"You look a little tired and heavily rode.\" \n\nTwo young girls giggled and followed Brenna.\n\nOnce again, Iona thought, Brenna had proven to be ill-mannered. She wanted to be mad, but the look the girls gave her made her face grow warm. She was blushing and glad to be of a darker type, so that the girls could not tell.\n\nBewildered, Iona now had a decision to make. Should she go to her room? Should she go to Kieren's? Would that be appropriate? Would he summon her? Should she instead concentrate on her chores? She decided instantly that she definitely was not going through the kitchen. \n\nThe men closed around Russ, removing him from her view. It would be inappropriate for her to go to him. \n\nShe knew what she wanted, although uncertain as to whether it was a smart idea or not. She wanted to be near Kieren. Despite the range of emotions she had just experienced, her body still felt the strong effect of his. Iona felt no shame in wanting to at least be in his vicinity\u2014to be available. There was no shame in her feeling incomplete without him.\n\nWhen she stepped into his room, he was nowhere. Deciding to stay and wait for him in his bed, she closed the door. \n\nFrom behind, Kieren lifted her up by the waist. Iona panicked and fought to free herself. \n\n\"Calm down,\" Kieren laughed, letting her finally stand.\n\nShe turned to him and started hitting his bare chest with the flat of her hands.\n\n\"You are not amusing,\" she declared.\n\nEnjoying the feel of him, Iona's hands soon slowed and appreciated the curves of his chest with admiration.\n\n\"You are sweaty,\" she told him, trying to appear serious as she looked up into his eyes.\n\nThe Gods should not have made such beautiful eyes, she thought.\n\nKieren kissed her deeply as he maneuvered her backwards. When the back of Iona's legs felt the bed, he left her no choice but to sit. He lowered himself so that they were eye to eye. \n\n\"What is this you are wearing?\" Kieren inquired as he slid the edge of her linen skirting up her thighs.\n\nHis voice was sensual, yet serious.\n\n\"I am wearing what's worn by the women of this village,\" she returned, a bit nervous.\n\nUnder his encouragement, she lifted herself just enough for the materiel to be pushed up and her under skirting slipped beneath her bottom so that it all bunched up above her waist.\n\n\"Were the things I acquired not beautiful enough?\" He removed her foot coverings one at a time as he spoke and let his hands smooth over the back of her calves. \n\n\"Yes, extremely beautiful\". She loved the feel of his hands.\n\n\"Extremely beautiful, what?\" he mocked.\n\nIona looked at him, confused. \n\nHe raised an eyebrow and Iona thought he had to be joking.\n\n\"Extremely beautiful...Sir,\" she surrendered finally.\n\nKieren laughed and began pulling her under clothes down her legs agonizingly slow, his skin touching hers in the most tempting of ways. Then he brought his attention back to her eyes.\n\n\"Thank you is my preference. Why do you not wear them?\"\n\nThe smile had now left his lips.\n\nIona's voice wavered. ''They were too grand and too colorful. I wished to no longer stand out.\"\n\nHe tossed her underthings over his shoulder.\n\n\"You are not like everyone else.\" He ran his hands down her thighs as he spoke. \"You were meant to stand out.\"\n\nIona was confused and at an unusual loss for words.\n\nKieren spread her legs apart and she felt the air hit her dampness. \n\n\"Don't you want to know why?\"\n\n\"Why?\" she returned, getting that lightheaded feeling again.\n\nHe shifted to his knees and directly between her thighs.\n\n\"You are mine,\" he whispered.\n\nWith relief, she mumbled her response. \"I wanted the others to consider me fondly. I meant no insult.\" \n\nKieren's nearness made it impossible for her to think with any speed\n\n\"Is it not better to be respected than considered fondly?\" he said before forcing her to lie back. \"Why should you care for the thoughts of others in regards to my gifts? I am the only one that you should consider.\"\n\nHis mouth watered as he looked at what was revealed before him and he licked his lips. \n\nIona rose up on her elbows to look at him. But, the look he gave her made her return to the position he had put her in. An opening in his roofing had been propped so that the sunlight shown across her body.\n\nShe felt his two fingers spread her open, and sighed. \n\nKieren thought that the now exposed lovely flash of deep pink would forever now be his favorite color. Her pussy was a thing of beauty. He moved his head close and licked from bottom to the top of her gift with the flat of his tongue.\n\nIona gasped. \n\nHe pulled back and blew air across her sensitivity.\n\nIona squirmed a little.\n\nMoving his lips closer again, he said, \"I wish you to wear what I give you.\" \n\nShe felt the heat of his breath against her as he spoke, it was not a request.\n\nWhen the tip of his tongue met the face of her clit, she jerked and said loudly, \"I shall.\"\n\n\"Good girl,\" he said, licking her again--several times. \"Will I ever have to reiterate my request?\"\n\nHe then latched on to her firm nub and sucked.\n\nIona began shaking her head.\n\nKieren pulled back to look at her. She need not have looked at his face to know what he wanted.\n\n\"No,\" she said without hesitation, breathing hard.\n\nKieren returned his attention to the task at hand, licking and sucking. He pumped one finger, and then two inside of her\u2014without his attention ever leaving that collection of fine nerves that was driving her mad. She was delicious. \n\nIona came two times before he made love to her.\n\nWhen she opened her eyes this time, she found him not only there but resting on one arm watching her. There were no covers to hide behind. His beautiful body lay naked beside hers. Iona attempted to hide behind her hands.\n\n\"Of all the things revealed to me, you try to hide your face.\" Kieren kidded.\n\n\"How long have you been watching me?\" she said embarrassed. \"Do you ever tire?\n\n\"Not with you.\" His voice was smooth and tempting.\n\nIt was the way he had spoken to her last night and earlier. Nowhere did it sound similar to the voice that disciplined Russ.\n\n\"Hiding does not save you. For I have etched every detail of your face to memory, as I have your body.\" Kieren pulled her hands away. \n\nHe then began to tease an extended nipple with his forefinger. The effect made her body prepare to receive him once more. Iona was not sure if that was a good thing, she was a bit sore down there. But she knew that he could create ways that could make her forget that. She could not tell if she was disappointed or pleased when he stopped and began to play with a gathered strand of her hair. \n\nHe examined several before asking, \"You placed some of these in my brother's hair?\"\n\nShe could not tell by his voice what he was thinking. She truly hated that skill of his, to seem both interested and uninterested.\n\n\"Just a few,\" she returned, trying to be equally unreadable.\n\n\"Your heart has sped up,\" he stated calmly. \n\nFor that, Iona had no response.\n\n\"Do I make you nervous Iona?\" \n\nHe used her name. The way he used her name made Iona a little scared and she narrowed her eyes. It amazed her how she could want him so and fear him simultaneously. Russ could possibly be a dangerous topic. Not being able to read his mood was not good. \n\nHonesty was the only way to deal with this moment, she decided.\n\n\"No,\" she returned defiantly. \n\nThat, of course, was a lie. \n\n\"Come to it,\" she thought to herself. She hated how he took so long to reveal the result of things.\n\n\"I find the placement of these to be an intimate undertaking.\"\n\nShe wished he would stop playing with her hair and pulled away.\n\n\"Of course,\" he surmised, dropping his hand, \"I could be wrong.\" \n\nShe still did not know what to say.\n\n\"I am however,\" his smile was roguish, \"rarely wrong.\"\n\n\"Everyone is human,\" she finally said in a low voice, \"and therefore fallible.\"\n\n\"Repeat this,\" he told her. \"I did not hear you solidly,\"\n\nIona knew that there was nothing wrong with his hearing, but said it again much louder.\n\n\"Yes, everyone is,\" he agreed, \"some more than others.\"\n\nOnce again, she had no response as he picked up another twisted strand of her hair.\n\n\"Some are human and deceitful. That is a dangerous combination. Would you not agree?\n\n\"Please stop playing with my hair,\" she screamed in her head. \n\nAs if hearing her thoughts, Kieren leisurely pulled one twisted strand up in the air only to watch it drop.\n\n\"A person like that is consistent in their behaviors and one must be consistent in their mistrust of that person.\" \n\nShe watched him and he moved to his back to watch the beams of the ceiling.\n\n\"Have you ever encountered a person of this type Iona?\" he said. \n\nIona slowly nodded her head.\n\nKieren sighed with disappointment. \n\n\"Yes,\" she then said.\n\n\"I seem to encounter those of that nature far too much in my life. Sometimes I ponder the idea that there must exist something within me that draws this type. What do you think Iona?\"\n\nIona could bear it no longer. She sat upright.\n\n\"I shared a moment of weakness with your brother,\" she blurted.\n\n\"A moment of weakness, what exactly does that consist of?\"\n\nHe did not change his position in the slightest and spoke with little urgency, a pure indication to Iona that he was quite aware of things. \n\nShe panicked. \n\n\"I was caught off guard. I was improper. We were improper.\" Putting her hands to her face, she began to cry. \"I am regretful. Deceiving you was never my goal. You must forgive me. I am so ashamed of myself. That it was with your brother is more of an offense. It only happened once. I know that is no excuse. And, I...\"\n\nShe continued to stumble in search of the right words. Surely she could make him understand? What must he think of her? She began to feel ill. \n\nFinally she stopped babbling but continued to cry\u2014prepared to receive her punishment. Life was consistently cruel. She had expected too much. And now, he was too angry to speak. Maybe he would beat her. After all he was a man and she nothing.\n\nAfter a while, on the verge of hyperventilating, she dared look back at him through her fingers. He was watching her, but laid there looking bored.\n\nKieren wondered when she would stop prattling on. This was not how he expected the conversation to progress. \n\nIona dropped her hands, confused. Kieren then looked both irritated and amused. She was not sure if she should be humble or angry. His reaction left her dumbfounded.\n\n\"This is entertaining,\" he said dryly, suppressing a smile. \"There is rarely anything that anyone would classify as appropriate when it comes to the behavior of my brother and I dare to wonder what you would define as inappropriate.\"\n\nIona narrowed her eyes at him and scoffed. \"I am a joke to you?\" she demanded before trying to make her way out of the bed.\n\nTo contain her, he locked her in his arms. Of course she attempted to break loose. \n\n\"Be still woman.\"\n\nIona managed to, somewhat, calm down.\n\n\"You truly present a convincing show of emotions with little prompting,\" he laughed. \"Russ has already made me aware of your moment of weakness; we share all. It provokes no anger within me.\" \n\n\"You do not think less of me?\" She was shocked.\n\n\"Why would I?\" \n\nShe could think of many reasons why. Iona wondered what exactly had his brother said, but she could not hope for a better outcome. So, she was smart enough to know to let that be.\n\n\"Why did you feel the need to entrap me?\" she conceded. \"I would have confessed.\"\n\n\"Despite the fact that you have honed the act of lying, I am more than aware of its use when it comes from you.\" \n\n\"I am not a deceitful person, like the ones you mentioned,\" she amended.\n\n\"You are worse,\" he said in a much more sobered tone. \"You are the most unpredictable among mankind and animal.\"\n\nWith that he let her go and repositioned himself, sitting up with his back resting against the massive headboard.\n\nHe placed a hand behind his head and crossed his feet. \n\nShe turned to him. Whether smiling as he was now or deadly, she had never seen a man so fine-looking. Her desire for him increased. She reminded herself though; she must focus on the task at hand.\n\nReading her thoughts, his smile grew wider. Iona felt heat sweep across her face. \n\n\"You are a woman of great beauty.\" He gently let the curve of his for fingers tease the skin of her back. \n\n\"You are also a survivor,\" he announced.\n\nThe way he said it, Iona thought, did not sound complimentary. \n\nShe suddenly rose up and straddled his lap. She placed her arms on his shoulders, letting her fingers play with the hair at his nape. \n\n\"I think that quality attracts you,\" she baited.\n\nHe squeezed her firm bottom.\n\n\"Maybe,\" he smiled, looking down between them. \"Maybe it is another quality that attracts me.\" \n\nSomething occurred to her and her eyes grew wide.\n\nAmused, he braced himself.\n\n\"You care not that we betrayed you?\" She was stunned.\n\n\"I do not consider betrayal your purpose.\"\n\n\"Am I so unimportant that you share me with no emotion or consideration?\" She placed her hands on his chest.\n\n\"How old are you?\" he announced, complete in his amusement. \"You plead for my forgiveness as if you were innocent. Next, you anger when I unburden you of anxiety in regards to the matter.\"\n\nShe watched him. He looked right back at her, his eyes questioning.\n\n\"Are you a woman or a child?\" He finally said, smiling. Once again she was reminded of how handsome he genuinely was. She imagined that as a boy he must have been extremely mischievous. As a man she knew him to be deadly, she had heard the stories and seen what she had seen of him. She would not lie, she found that too attractive\u2014what woman would not find pleasure in knowing they had attracted the ultimate of protectors. This playful side of him was her most favored.\n\nWell, maybe not the absolute most.\n\n\"You thought me very much the woman a while ago,\" she returned, looking down at the divine example of how much a man he was. Even relaxed, it lay heavily against his solid thigh like some sleeping serpent. \n\n\"This is true.\" His smile broadened. \"Now it occurs that I possibly assumed wrong.\"\n\nIona attempted to dismount him when he pulled her back to him by the hips. \n\n\"If you are shared with anyone, it would be by your choice only. It would also reveal a major lack of concern for your chosen other partner. I am a selfish man at heart. What is mine, I have and I keep.\" As he spoke, his amusement disintegrated and his voice grew more serious. \"Be assured, I would end his life.\"\n\nThere was silence between them as there was no need for Kieren to say more or Iona to reply. She had heard all is words, but the one \"mine\" left her mesmerized. She was his.\n\n\"Besides,\" he finally returned to his amused state, \"I mistreated you and you had need for affection. Why should that need not have been answered? I am quite sure that my brother was very accommodating.\"\n\nIona looked into his eyes and there was truly no malice. This drew more love from within for him. With his face between her hands she kissed him deeply.\n\nBut a thought crept across her mind and she suddenly pulled away.\n\n\"And you, where did you fulfill your needs?\"\n\nKieren smiled devilishly. Then he caught her wrist as Iona's made a meager attempt to slap him.\n\n\"How this conversation has shifted,\" he mused with sarcasm. \"You fulfilled your need, am I not given the same consideration. After all, I am a man with many appetites.\"\n\n\"Maybe you should have stayed where your needs and appetite were fulfilled,\" she spit out.\n\n\"I plan to,\" he returned bluntly, wrapping his arms around her and making her surrender to his lips. \"You shall never be rid of me.\"\n\n\"This is like a dream to me,\" she confided. \n\n\"Well then,\" he teased, \"be certain that it is only I that you dream about. Next time I may not be so forgiving. My brother can prove very convincing when mood hits. Russ shall be Russ.\"\n\n\"I am truly only yours,\" she said with girlish sincerity. \n\n\"I have no fear that it will happen again, my little survivor. You are no fool. I am the teacher here. He is the student. \n\n\"Your arrogance is unmatchable as well,\" she slipped him a smile, shaking her head.\n\n\"As is all of me,\" he said taking her hand in his, kissing her palm and guiding it to encircle his substantial and demanding staff. \n\nIona could make comparisons when it came to the beauty of his cock, but she had never actually touched one. And Kieren's was so intimidating. The sight and feel of him made her swallow hard, but she closed her eyes and let herself relax into the guidance of his hand. His hand caused her to squeeze him firmly while moving up and down his shaft. When he removed his hand and left her to her devices, her eyes immediately flew open to find him watching her curiously and placing his hands back behind his head.\n\nShe suddenly became aware of her inexperience with pleasure and fearful of disappointing him. She could feel the color flood her cheeks. \n\n\"I,\" she said shyly, \"am not a virgin, but...\"\n\n\"What need do I have for virgins,\" he said gently.\n\n\"Well,\" she began, flushed.\n\nHe gave her a look of alert weariness, misunderstanding her alarm. This was not the time to discuss what she had seen of him, or for her to assume what he wanted from her based on the things seen.\n\n\"I, this body that sits here before you,\" he began, putting his forehead to hers and cupping the side of face with one hand and the back of her head with the other, \"as damaged as it is, am yours.\"\n\nHis voice rasped with emotion, sounding low and deeper than ever. \"I am only yours and you are safe with me. This between us is between only you and me. I care for no other woman. I remember no other. You are mine to discover and explore as I am yours to discover and explore. We will learn each other in a way we have not taken time to do before.\"\n\nKieren's kiss reemphasized his words. \n\nThis moment, this closeness was another feeling entirely new. To have him say those words and see the ocean in his eyes, to feel this with another person\u2014especially this person, made her heart open even more. Iona closed her eyes, kissed him deeply in return and firmly wrapped the fingers of both her hands around his cock. The sound he made inflamed the growing warmth that had begun building inside of her, giving her a tingling sensation. Then she felt him jerk in her hands and she jumped, letting it go.",
        "Kieren rested back on his arms and chuckled at the squeal she emitted. Then, he let out a sharp intake of air as her thumbs lightly grazed the sensitive flesh of his dome. His penis was very erect now. She looked at it, staring openly. She thought of how he had said he had memorized her body; she wanted to memorize this part of him too. She was surprised by how much she actually wanted to touch it and how its twitching incited her to keep going. His penis was long and so thick, riddled with twisting veins. She had never noticed how detailed it was before. And now that she was so close, like this, looking down as it reached up between them; it seemed enormous. \n\nTenderly, Iona brushed the length of it with her finger tips. She was pleased by the silky texture, the steel-like firmness beneath the surface and the way it also pulsed against her palms with throbbing warmth. \n\nWhen she dared to glance at Kieren's face, he was looking right back at her, his eyes so clear and pleasure so obvious. The feeling of her exploration sent shivers up and down his spine and straight to the point where she touched.\n\nShe returned her attention back to the monster in her slender hands. She adjusted herself and wrapped both hands around the dancing cock. She applied pressure and tried to remember how he had at first guided her. Slowly, she began stroking the length of him. As she ran her hands up over the swollen head and back down over it again, squeezing gently she was rewarded with his low moan. \n\nShe looked back again to him sitting with eyes closed and head back. His lips slightly parted. Iona took heart and repeated the long slow stroke a few more times until his breathing became ragged. \n\nShe watched his face, fascinated by the almost pained expression there. Kieren's eyes opened into hers. They were so crisp and fluid in their color, almost silver now and full of energy. It was a different sort of blue. Iona recognized his lust, but never before had his gaze so sufficiently seared her. She turned her eyes away, unable to stand that look for long. Her hands had already increased their pace in response without any urging. Her thighs contracted in time with her hands. She tried to still them, but found it impossible.\n\nKieren's hips slowly rose to meet her hands. As she ran her hand over the moisture forming at the mushroomed tip, she found it slick and it allowed her to move more easily over him. Watching intently while her hands slid over the smooth flesh she thought of how this liquid might taste. She had felt the joy and heat of it inside her. That was something she could never forget. The thought of putting her mouth to him thrilled her.\n\nKieren's eyes went wide as she stopped to reposition herself back on knees between his opened legs and bent down to lick the tip of him. Leaning in she lapped from base to tip, eliciting a gasping moan from him. \n\nIt was strange, but it was also extremely exciting touching him so intimately. Tasting him--the saltiness of the see, a sweetness and the taste of what she could only define as sunlight\u2014made her squeeze her thighs tighter causing a hot throb to course through them. Licking around the swollen head, she pressed her lips against the tip and slowly took him into her mouth. Pulling as much inside her as possible. Stretching her jaw as wide as she could, she did not get far before she was forced to stop and let out a choked groan. When he pressed against the back of her throat, she was not expecting the feel of it. Her groan was accompanied by a low growl from above.\n\nShe looked up. He was watching her again, his eyes burning into hers. This time she didn't look away, and let them sear into her making her tremble and her hands, still wrapped around his cock, shake. With his size, when her mouth moved on him--sliding rhythmically and automatically over his now slick head, she worked them as well.\n\nOne of Kieren's hands threaded through her hair and cupped her head. He tried not to apply any pressure. She was doing fine by herself. What the girl lacked in skill she made up for in enthusiasm. She was truly made for him. But, he could only constrain himself for so long. He kept his eyes locked on hers as he gripped her hair and pulled it taut against her skull. A shock of sensation that was not quite pain shot through her and Iona groaned low in her throat, the vibration of which made Kieren shudder. \n\nIona moaned again, intentionally, loving his gripping expression. She reveled in the feel of her own power. The harder he pulled her hair and the more he growled, the more ferocious she became. She devoured him with her tongue and hands. \n\nHe pumped his hips against her mouth and she gripped his thighs to steady herself as she felt him stiffen even more against her tongue. She let out one more moan before he gasped and gave out the thickest of growls. Iona felt a pressure in her mouth and it was suddenly filled. She nearly gagged and had to swallow several times to keep from choking, finally pulling away with a gasp to see the remainder still leaking from the tip. She blinked up at him taking heavy breaths.\n\nKieren looked down at her swollen, wet lips as she panted. With the fingers of his hand still gripping her hair, he pulled her to him and kissed her. Never before had she looked as beautiful as she did at that moment to him. \n\nThis woman was truly made for him. \n\n**********************************\n\n\"I said that I would come to the river and that we would watch the rise of the moon, not actually get in the water,\" she said with her hands on her hips.\n\nKieren stood closer to the edge of the river. He had been eating an apple and slung what remained into the water.\n\n\"Enjoy me why you can woman,\" he chuckled. \"The next few days will give me little time. I have to meet with the clans.\"\n\nHe looked back at her and smiled. \"I want to enjoy you in the water.\"\n\n\"No,\" she said smoothing out a blanket of wool and plopping down on it non-ceremoniously. \n\nHe came and stood closer to her, leaning against a tree. His hair rustled by the light breeze, tended to curl which she did not believe that she noticed before. He wore looser fitting clothing than he had on the Knarr. A shirt of colored linen hung open, revealing the magnificence of his chest. His britches were slung low. He looked free-spirited and more relaxed, in spite of the knife holstered in leather and tied to his leg. She did not know where the small one he had cored the apple with came from. She figured that he could never completely be without the marks of his profession. The stillness found him restless and alert.\n\nIona suddenly wondered if he knew that this was where she had had the moment of indiscretion with Russ. Something about the look in his eyes when she looked up at him told her that he did.\n\n\"You are awful,\" she scolded him.\n\n\"I guess I do not measure up, no cheese and drink to tempt you with.\"\n\n\"Yes,\" she teased, adjusting her smock, \"and I was forced to bring my own blanket.\"\n\nWhen she heard no response from Kieren, she looked up concerned. He laughed at her expression. She looked so young, her lovely, full lips fixed in a permanent smile. Her dark hair was pulled from her face and fastened in the back with a colorful strip, flowing down her back. She glowed in the light of the early evening. Soon the sun would go and the moon would come. He wished there was some way he could extend these moments. \n\nKieren had not been making light of the fact that the coming days would keep him away from her. With the successes of his voyage, there was much to do. He had also been at sea for quite some time, ignoring many happenings amongst those he administered to and the lands he oversaw. There were disputes to be settled and the grave matter in which Russ had misjudged. \n\n\"Come lay with me,\" she requested.\n\n\"You'd think you would have enough of our laying,\" he teased, \"I thought to give you a break.\"\n\n\"Never,\" she told him opening her arms to receive him. \n\nHe laid down and placed his head in her lap, chewing on what appeared to be a sweet stem. Iona began to play in his hair.\n\n\"How old are you,\" he inquired, looking into her eyes, \"truly?\"\n\n\"Twenty-four,\" she stated bravely.\n\n\"I said truly,\" he scoffed. \n\nShe looked a bit bewildered.\n\n\"You don't know?\"\n\n\"I count nineteen winters, maybe more.\" She gave him the most contented of smile. \"I know that I am a woman.\"\n\n\"You certainly are that.\"\n\n\"And, your age?\"\n\n\"Much older than yours,\" he laughed. \n\n\"Definitely a man,\" she added joyfully.\n\n\"There,\" she said showing him the effort that she put into his hair. \"It will not stay however.\n\n\"Were you this close when you placed them in Russ' hair?\"\n\n\"To do someone's hair is not so intimate of an act. I once undid and re-braided the one at Gunner's chin. I placed the beads that he now wears at the end of it.\"\n\n\"Oh,\" he snorted. \"I bet that was fun.\"\n\n\"He was drunk, I believe, and now very upset with me that it cannot be easily removed,\" she laughed.\n\n\"Brunner can be a bugger of an old man. He claims that you personally set out to exasperate him.\"\n\n\"He's a big baby.\"\n\n\"You have us all wrapped around you small fingers.\" He took one of her hands into his and felt the braid she placed in his hair with his other. \"Shall I be beaded as well?\"\n\nShe laughed, \"If I can find the right ones for you.\"\n\n\"You must put more of these in my hair than you have in Russ',\" he finally demanded.\n\n\"Are you serious?\" She could not believe what she was hearing. It was endearing though. \"I would have hated to have had to grow up with the two of you. Your relationship with your brother is beyond complicated. I fail to understand. I bet your father had his hands full.\"\n\n\"For all intents, I must say that Brunner is the father I remember. The Magnus Gulbrand was quite...busy.\" \n\n\"Well, I bet he...\" she began.\n\n\"I think that you should put many more in my hair,\" Kieren cut her off, pretending to look offended, \"considering.\" \n\n\"Kieren,\" she exclaimed, looking into his eyes. But, she could see that his seriousness was light. \n\nIona kissed him playfully. \n\n\"He is forgotten the moment my eyes set upon you.\"\n\n\"And when I am not in your vision?\" He turned more serious, touching her face.\n\n\"Even when I do not see you my mind does constantly.\"\n\n\"Good answer.\" Kieren laughed and she hit at him.\n\n\"Your words are like honey, too sweet. They are slippery too. One must be quick to catch them.\"\n\nWith that he stood and began to remove his shirt. Iona could tell that she was in for trouble. But before she realized to what extent, fully naked he lifted her up as if she weighed nothing. He took her, clothed, kicking and screaming, into the water. Taking her under and then tossing her into the deeper part was equally effortless.\n\nKieren laughed until he realized that Iona was flailing, desperately trying to keep herself above water. He also could see that she was failing.\n\nWith no haste, she felt his strong arm draw her above the water. With the other he pulled them toward land.\n\nHis words were angry when he sat her down\u2014even though she coughed heavily to relieve her lungs of water.\n\n\"Why did you not tell me that you could not swim?\" Kieren demanded. \"What Greenlander knows not?\"\n\n\"I am neither male or a Greenlander,\" she yelled back at him, her anger due more to embarrassment than anything else. \"My master lived inland, tired of the wanderers life. He farmed. Where was I to learn to shred water?\"\n\n\"Surely you were near some type of water?\"\n\n\"Your ocean is not everywhere Kieren!\"\n\nHe was angry and she did not want that at all. It was not his fault that she lacked such a necessary skill. They had spent too much time angry with one another.\n\n\"I don't know how to swim, okay.\"\n\nKieren turned away from her to collect himself. She had caused an unusual panic within him.\n\nFeeling better, Iona slipped out of her dress and began to wring it out. She started to explain to him how she thought to learn before his return, to even teach herself but the situation never seemed to present itself. After a while, she realized that Kieren was listening but not to her. He was looking in her direction, but not at her.\n\nHe had a strange look on his face.\n\n\"Keep talking,\" he told her in a low voice, \"but listen to what I am about to tell you carefully.\"\n\nSomething was wrong. \n\nIona continued to talk, saying mostly things already said. She understood that it was not for his benefit but for whomever he thought listening.\n\n\"In your mind as you talk,\" he told her, \"I want you to slowly count to five. Then that tree there, I want you to press yourself to the other side of it and cling to it closely. Be silent and do not move.\"\n\nWith that, he moved swiftly. He picked up his weapon and disappeared. Iona clung to the tree as she was told and squeezed her eyes shut--as if that would cause her to disappear as well.\n\nWhen she opened her eyes, she snuck a look over the water. What she saw on the other side shocked her and made her catch her breath. Maybe the distance was playing tricks on her eyes. Maybe it was the approach of night. Iona blinked to see clearer.\n\nIt was the Dark Man, looking directly at her. He was scantily dressed, but she was sure that it was him. \n\nFrom out of nowhere Kieren rose up out of the water. If the Dark Man would have not dropped to the ground in defense, Kieren's weapon would have split his skull. The man quickly returned to his feet and faded into the trees. Kieren disappeared back into the water. \n\nIona secured the position she had been told to keep, eyes forced shut. \n\nShe remained silent as she was told. What if something was to happen to Kieren, she thought? Iona's heart would stop. She could not live without him. She would not want to. Of this, she was certain.\n\nTime passed slowly. Everything was oddly quiet as day shifted to night.\n\n\"You failed to obey me.\" \n\nKieren's whisper in her ear startled Iona. There had been no indication of his approach. With the realization that it was him, she turned around and flung her arms around his neck. He did not allow her to take hold of him, but handed Iona her things.\n\nHe avoided looking at her as he slipped back into his clothing. When he shook out the blanket and wrapped it around her shoulders, that simple show of care made her sigh with relief. \n\n\"The setting of the sun brings coolness,\" he told her from behind, with his gentle hands briefly upon her shoulders. \n\nHe started off in the direction they should go. When she did not immediately follow, Kieren paused and turned slightly.\n\nLooking very much the warrior god, his shirt clinging to his wet body and hair still dripping water, he waited. \n\nIona needed him to look at her. \n\nTheir eyes met. \n\nAlthough his facial expression showed nothing, even the set of his jaw was not flexed, she saw the ice of anger shine in his eyes. \n\n\"Come Iona,\" he commanded. \"This is neither the place nor the time.\"\n\nShe lowered her head and fell in step behind him. \n\nTo be continued."
    ],
    "authorname": "avrgblkgrl",
    "tags": [
        "historical",
        "wm/bf",
        "viking",
        "alpha male",
        "slave",
        "romance",
        "black woman",
        "rough sex",
        "love",
        "war"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/trust-ch-05-2"
}