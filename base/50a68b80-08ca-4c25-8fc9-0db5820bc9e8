{
    "title": "Unexpected Threesome Ch. 27",
    "pages": [
        "I wasn't sure why Ellen was so keen to start getting ready for dinner. Even allowing for an Amy like preparation time, there was probably another three quarters of an hour before we'd even want to hit the showers.\n\nMind you, that sort of sex in the tropics does leave you all hot and sweaty. As she got up off me, I felt compelled to ask...\n\n\"Isn't it a bit early? Would you fancy a jump off the deck for a swim first?\"\n\nShe stood naked over me, crossed her arms and looked down at me coyly.\n\n\"Maybe. That depends. Is it too soon to be refilling your testosterone bucket yet?\"\n\nI grinned at her.\n\n\"What? Do you think that for a certain time period after sex I'm completely inoculated against your charms? It doesn't work like that. The fact my dick can't react doesn't mean my head's not absorbing every bit of sexual tease you throw at it. Anyhow, will you really only go for a swim if you can use it to turn me on?\"\n\nShe swayed her hip provocatively.\n\n\"No. I might go for a swim anyway. I just wanted to know how much I can turn it on for you while we do.\"\n\n\"You can turn it on as much as you like. And you'll be turning me on if you do; whether my cock reacts or not. But do it because you enjoy it, because that's the only time it really works for me.\"\n\n\"What do you mean?\"\n\n\"You mean the 'work for me' part? It's a bit like we were talking about with Tash. Any sexuality that isn't offered freely and willingly and maybe even enthusiastically doesn't really have the same effect on me.\"\n\nEllen put on a mock posh English accent, holding a hand out to me.\n\n\"Oh, aren't you the proper gentleman. Let me help sir off the bed where he's just rooted the arse off some poor innocent young lady half his age.\"\n\nAs I took her hand and she pulled me off the bed, I put on the same accent...\n\n\"Yes, well, the arse was freely offered up for rooting. And as for the lady, she is that. But I don't think she's poor and I'd have some doubts about innocent. Mind you she does have a remarkably cute arse.\"\n\n\"Thank you kind sir. Compliments are always appreciated.\"\n\nWe were soon swimming in the water under our bungalow. Ellen was as good as her word in trying to sexually tease me. She has a natural playfulness to her which makes it all come delightfully easy. I had her breasts, crotch and arse constantly flashed across my field of view - each of them covered in that tiny, moulded on bikini - while I was touched up unmercifully. It wasn't that long before she got a physical reaction from me either; which somewhat pleased her.\n\nBut I hadn't realised before, the extent to which she was actually teasing herself up as well. Certainly I now noticed how often both her nipples and crotch were brushed across some part of my anatomy. The trouble always was that a nipple reaction is ambiguous; cold or arousal? It's not always obvious when you're swimming, even in the tepid waters of the tropics.\n\nBut there was no ambiguity when, with me standing in neck deep water, she floated herself with her calves on my shoulders and her crotch held somewhat artificially high. Yes, she was playfully giving me a visual display to tease me, but the real tease was the obviousness of her own arousal.\n\nThere were those two swollen ridges running through the fine, tautly stretched material of the gusset with the pronounced hollow between them. And in the centre of that hollow sat a fairly small but conspicuous bulge where her engorged bud was pushing it out.\n\nI flicked my finger lightly against it and was rewarded with a squirm and a, 'Oh that's nice'.\n\nThat just encouraged me to do it some more. She held herself still; although I could sense its effect on her when she must have pushed her head deeper into the water to raise both her crotch and breasts higher. When I took the bulge between two finger tips and tweaked it gently, there was a little moan, accompanied by a slow motion pulsing of what I took to be her pelvic floor muscles. Whether that was to enhance her arousal or slow it down I wasn't sure.\n\nAnd it's not as though all this wasn't having an effect on me. There was a raging erection lying in my swimmers and having started from an awkward angle and been captured by the stretchy material was now lying at what the girls call 'full horizontal'.\n\nFramed by her shapely thighs, my only perspective was of her crease, now clearly swollen in arousal, barely covered by the narrow, moulded on material of her bikini gusset. Either side of that, a strip of delightfully provocative crotch flesh lay between the leg hem of her bikini pants and her lovely thighs. Above that, on the horizon of my vision, her breasts seemingly towered out of the water, the volcanic cones of her nipples rising out of them.\n\nThe temptation to drop her crotch onto my cock and pound it some more, even barely 40 minutes after we'd finished having sex was certainly there. But of course, we were in somewhat public view and that wasn't really Ellen's game plan. I could only get away with playing with her clit the way I was because of the angle at which we were placed to any external viewer.\n\nIf Ellen wanted to top up what she calls my testosterone, it was working. I could almost feel my balls filling up again. I was just contemplating pulling aside the gusset and eating her out when she suddenly squirmed and pulled my hand aside as a prelude to dismounting me.\n\n\"Getting a bit heated up were you.\"\n\n\"God yes. I was going for a bit of edging, but I nearly went off again.\"\n\n\"What's edging?\"\n\n\"What I've been doing all afternoon and trying to get you to do it too; going to the edge of an orgasm and then stopping to start all over again.\"\n\n\"Is it really better in the end if you save yourself? After all, you girls can have multiple orgasms. It's us guys who need to edge because we go all limp and useless after we come.\"\n\n\"'Save myself? You make me sound like a virgin bride. But yes, in the right conditions I think it can; in the sense of letting a monster orgasm build. And a romantic dinner is definitely one of them.\"\n\nIt wasn't long before it was time to get ready for dinner. Ellen took the first shower, emerging naked from the bathroom to free it for me while she completed her dressing in the bedroom.\n\nWhen I emerged from the bathroom, showered and shaved, I found a goddess waiting for me.\n\nLike Amy, her long blonde hair had been done up and blow dried in a way you just can't achieve on a yacht. Gone was the salty surfer look. With a cute little fringe, there were kiss curls in the layered cut that framed her face and the faintest touch of pink lipstick was the only makeup on her otherwise flawless skin. The rest of her hair had been blow dried and heat wanded into a series of perfectly formed loose waves that cascaded all the way down to the lower part of her back.\n\nBut that dress had me once again staring in slack jawed arousal.\n\nShe must have tied the halter neck string tie a smidgen longer, because it seemed to me the triangles that covered her breasts were an inch or two lower than they were when she tried it on in the shop. It was only the slightest exaggeration to say the peak of each triangle now only barely covered her nipple. Which in turn exposed a whole lot more side, cleavage and under boob flesh.\n\nBelow that the long dress clung to her shapely figure, except where the navel height split on her right thigh caused it to open and reveal the full length of her shapely leg and quite a bit of her hip. There was not the slightest possibility she was wearing panties. She had her right leg thrust a little bit forward again, accentuating the split; although this time, while it revealed every millimetre of her thigh right into her crotch, the front flap draped in a way that fully covered her mons - just.\n\nMind you, it would only take a gust of wind to reveal everything.\n\n\"My god, you look absolutely stunning. Beautiful. You're leaving the coward buttons open?\"\n\n\"I said I would. Any problems?\"\n\n\"Not from me, but looking as beautiful as you do, you're going to leave a trail of men having heart attacks in your wake.\"\n\n\"Lucky I'm a doctor then.\"\n\n\"If you lean over them like that, it's certainly not going to settle their heart rates back down.\"\n\n\"We'll cross that bridge when we come to it.\"\n\nEllen stood there watching me as I completed my dressing process; the white chinos, collared short sleeved button up shirt and deck shoe assemblage I put on being totally inadequate to be seen accompanying the starlet waiting for me.\n\nAs we walked hand in hand down to the resort area two middle aged couples passed us going the other way. Out of the corner of my eye I could see both men transfixed by and drooling over Ellen; their wives conveying what might be thought to be a look of disdain; although that could well be because of the age difference. From one of them there echoed back angry words...\n\n\"You were staring at her...\", with the sounds of an ongoing argument fading with distance.\n\nThe staff were the familiar group; those who knew the story of Amy's orgasmic scream attracting a visit from the manager, of her teasing 'best orgasm of my life' explanation to him and who now saw me turn up to dinner with a second girl, no less stunning than the first. A heady mixture of judgement, flirtation and arousal hung heavily in the air; although I thought Ellen, not being fully briefed on the background, may have been more oblivious to it.\n\nIt was one of the local waitresses who'd flirted with me that morning who showed us to our seats; the same seat as last night where we sat on two adjoining sides of the table with a view out the window. On the other side of the room I could see the young man, who fallen into a fluster over Amy last night, trip on a chair as he watched us move to our table.\n\nAs we were left alone with the menus, Ellen leaned into me.\n\n\"Ned. Is there something I don't know?\"\n\n\"What do you mean?\"\n\n\"I don't know. There's something a bit weird about the staff, even allowing for the fact they might have seen you with Amy and the dress I'm wearing.\"\n\n\"You're very perceptive!\"\n\n\"Oh, oh, what is it?\"\n\nI told Ellen about the manager being called to our bungalow over Amy's scream and Amy telling him it was because of the best orgasm of her life and the way that had clearly been spread around the staff.\n\n\"That explains the way the women are flirting with you. What dress did Amy buy?\"\n\n\"I didn't think they were really flirting that much. An ice blue halter neck mini.\"\n\n\"That waitress did everything but lift her skirt and actually offer her pussy and her pareo was wrapped so low on her tits it was ready to just fall off. You had a booking, so she knew you'd be here and on her table. And I saw Amy in that dress when she tried it on with Liddy. It was stunning, so she's going to be remembered. Goodness only knows what they think of you. Two different women in a row. The women who work here are going to be queuing up for you. Next time we do this maybe we should use different hotels.\"\n\nEllen thought for a moment, then added with an amused grin as she stroked my face.\n\n\"Do you want me to do a screamer tonight and attract the manager again? We'll have hordes of local women swimming out to the yacht on its mooring to have a turn with you.\"\n\n\"I don't think we want to do that. Anyway, you have your own fans. That young gentleman over there nearly dropped a stack of plates when he was distracted by you.\"\n\nEllen glanced across at him.\n\n\"I remember him from lunch. He was a sweetie. We'll give him a few feel good thrills to make his day.\"\n\n\"Are you going to tease him?\"\n\n\"No, it's you I'm wanting to tease. But a few little incidental peeks can lift a man's spirits.\"\n\n\"I don't think I've ever heard a girl express a willingness to do that before.\"\n\n\"It's probably the cocktails still talking. I donno, it just doesn't seem like such a big thing that a guy gets a flash of your nipples. Anyway, you've got me feeling randy and sexy and a bit uninhibited.\"\n\nWhile we'd been talking, the young gentleman concerned had started approaching the table. Just in time, Ellen saw him and we changed the topic. He stood between us and asked if we'd like to order a drink. Ellen looked up at him and smiled, then leant across to me...\n\n\"I wouldn't mind having another cocktail while we choose our food.\"\n\nAs she bent over to lean in to me, gravity separated the triangles of her dress completely from her breasts. Sitting alongside, I could see both perky orbs in clear view capped by somewhat tightened nipples. The waiters eyes popped out and his previous attempt at a decorous manner turned into a slack jawed stare. I thought Ellen's hair might have covered his view, but from the look on his face and the bulge that came up in his tane, it was clear it hadn't covered much.\n\nI ordered two cocktails and, in no great hurry, the waiter left to get them.\n\n\"I think he got more than a peek.\"\n\n\"Are you jealous?\"\n\n\"No, just interested in how relaxed about it you are.\"\n\n\"Well it's partly my mood, but I suppose it's also a reaction to how often as a doctor I've come across women who regard their modesty as some sort of precious object to be locked up. We've sort of sexualised women's bodies by declaring they shouldn't be seen. Most tropical or semitropical primitive societies didn't cover their breasts and it's not as though their men went around in a permanent state of arousal. Indeed some of them didn't have clothing at all.\n\nThere are a few creeps and bad people out there, so there are times that, for my own safety I know not to attract attention. But I also think some girls get a bit too precious about guys following their natural instincts in wanting to chat up an attractive girl. I've had some pretty nice human interactions with guys who have cat called me or randomly tried to pick me up. They might have been complete bogans and just not my style so I wasn't going to give them my number, but I've often come away feeling better for having engaged them nicely. Sometimes it's even made my day.\"\n\nAs she'd been speaking, she'd continued to lean into me; partly to let her talk in a quieter voice and keep the conversation private. But very quickly she'd also taken the chance to put her hand on my thigh; slipping it higher until it was firmly into my crotch.\n\nAs the waiter came back with the drinks, she sat upright again, innocently taking her hand back. The waiter took his time removing each drink from the tray and placing it in front of us; more so as he bent over Ellen with hers.\n\n\"Are you ready to order?\"\n\n\"Raphael, I've got this!\"\n\nI turned around. It was the waitress who'd showed us to the table. I'd wondered whether Raphael had been trespassing table wise. It seemed he had. He slunk off letting the young lady slip into the spot between Ellen and myself. I'd been too distracted by Ellen to pay much attention to her before, but now I had a closer look.\n\nShe was standing square on to me, her legs slightly apart and, like this morning, with her pareo hitched incredibly high. Not only did it highlight her long shapely legs, it suggested a flash of her panties- if that's what they wear under those things - was only millimetres away. And as Ellen had observed, the top of it hung almost from the outward most projection of her breasts, showing a deep cleavage and leaving one wondering how long it would be before it just fell off. A name tag revealed her name was Gloria.\n\n\"Would you like to order?\"\n\n\"Actually Gloria, we've been too distracted to look at the menus yet. Could you come back in a few minutes please?\"\n\n\"Of course.\"\n\nEllen leaned back into me; instinctively putting her hand back on my thigh.\n\n\"You flirt.\"\n\n\"What'dya mean?\"\n\n\"The way you called her by her name and beamed a smile at her. She positively blushed a rosy glow.\"\n\n\"That was just being nice.\"\n\n\"Surrrre.\"\n\nWe turned to the menus and a few moments later Gloria was retreating away with our orders; although not before having bent a bit too low than was strictly necessary to pick up the menus and having flashed me a look down her cleavage in the process.\n\nThis time as Ellen leaned into me, she first took my hand off the table and put it on her thigh. I quickly discovered that the split in her dress was letting a flap of it sit outside of each of her thighs. Under the table her inner thighs, mons and lower stomach were completely exposed right up to her navel. Even with the long drape of the tablecloths which had largely hid her fondling of me, it was lucky she was sitting facing a wall. \n\nShe put her hand on my thigh, then seemed to have second thoughts as she took it back to reposition my hand onto the flesh of her lower stomach. She induced a little movement in it, which I took to be a suggestion I should stroke up and down in the way I knew she liked. Then her hand settle back on my upper thigh.\n\n\"See, I'm not the only one willing to flash my tits; although I think her intention is more serious than mine.\"\n\n\"What? Who?\"\n\n\"Come on! Unless she was wearing some sort of bandeau bra - and I couldn't see any evidence of that - I bet you got at least a flash of nipple, or at least of areola sitting atop those perky projections.\" \n\nI raised my eyebrows in acknowledgement of the truth of what she'd said.\n\n\"Don't worry Ned. Working in the Pacific has reinforced a view I've long had that in the so called first world west we're slowing losing the concept of what it means to be a human. We've got so many rules and inhibitions that the relationship between men and women - especially in my age group - is just losing any real perspective of what's normal. Don't get me wrong, women must have ultimate control over their bodies, but it's just crazy we've raised a generation of snowflake women who dissolve into post trauma stress if a guy tries to chat them up. And now that regularly gets defined as sexual harassment even if it's just once, if the girl regarded it as unwelcome.\"\n\n\"Aren't you exaggerating a little?\"\n\n\"Maybe. But I suppose what I've seen when I'm out here is, not just unreconstructed men who are willing to admit they find a girl attractive, but more importantly much stronger women who can banter back with the guy and give as good as they get to arrive at the outcome they want. When I compare that with some of the snowflake women as victim narrative I saw at Uni and still see online, I just think that feminism has actually resulted in weaker women, not stronger ones.\n\nI know there are some parts of the world where women really are repressed and made virtually the servants of their males, but that wasn't Australia. Somehow in correcting some of the issues that existed in the 50's we've overshot the mark and ended up with something far less attractive than even back then.\"\n\n\"It sounds like something you feel pretty strongly about.\"\n\n\"Well, as a woman I can say these things, so if I believe them I feel I should when I can. If you said them you'd be written off as a male chauvinist pig.\"\n\n\"I'd have to say that my many women friends at Uni in the late 70's were pretty formidable. I certainly wasn't aware of them being victims. But then I had to allow for the fact I wasn't one of them and they might have had a different view.\"\n\n\"Didn't you ever talk to them about these things?\"\n\n\"It just wasn't such as issue. I certainly heard some of them talk about seducing the younger male tutors and lecturers and the shenanigans in colleges, but it never came across as women as victims. Most of them seemed equal players in the game. It was something of a time of sexual liberation and they just came across as wanting to be part of it.\"\n\n\"Maybe they were.\"\n\n\"I don't know. The narrative has changed over time and it's hard to go back and analysis what I recall of the times.\"\n\nEllen took her hand off my thigh and put it over the top of the one that had been stroking up and down the bare flesh of her lower stomach, pushing it down to the turn of her mons. I took the message to be that she wanted me to finger her.",
        "As I ran my finger through her crease for the first time, I found it moist and with her clit swollen. She gave a quiet hum with the first stroke before going back to acting as if nothing was happening. As her hand returned to my thigh, she searched for the zip of my fly and fumbled about trying to undo it; succeeding only after some effort.\n\nShe was about to put her hand inside when we sensed our entrees coming, forcing us both to stop touching up the other. Gloria placed our meals in front of us before moving to an adjoining table to clear some plates. Ellen saw me watching her and turned just in time to see Gloria reach across the table. It was not a typical waitress pose. Clearing the plate from the far side of the table, she leaned on it as, with legs apart, she bent deeply forward at the hip and then curved her torso to bring her chest nearly upright. The result, and even I couldn't deny it was intended, was to lift up the back of her pareo to display an orange satin thong with the bulge of her mons visible between her spread legs and some very nice butt cheek, without giving the guy at the other table a down skirt look.\n\nAs Gloria retreated, Ellen leant in, raised her eyebrows and whispered good humouredly...\n\n\"I'd better be careful. That was a 'fuck me' display if I've ever seen one. I think she's after you.\" \n\nA moment later Gloria returned with the bottle of wine we'd ordered. We waited patiently while Gloria poured a glass for each of us and then set up the ice bucket for it. She stood just a little bit too close as I tasted the wine, my elbow inadvertently slipping across her stomach as I raised the glass to my mouth.\n\nAs Gloria retreated again, Ellen added to her last comment.\n\n\"Oh my god. She's all but throwing herself at you.\"\n\n\"She can't be more than 25. It's all Amy's fault for what she said to the manager. Except for that I'd just be some very uninteresting old European fart.\"\n\n\"The fact you've had two different young women on consecutive days doesn't help. She probably thinks you just have a queue of them ready for screwing and she can join it for the asking.\"\n\nNo sooner had I finished my entr\u00e9e than Ellen took my hand and put it back in her crease; coolly taking up her glass and having a sip through the smirk on her face as I started fingering her. Only then did she put her hand back in my lap and start trying to get at the erection which soon formed in amongst the layers of clothing. \n\nI quickly regretted having a pair of cotton men's briefs on as underwear; the material was relatively thick and they didn't have much stretch in them. With the short length of the zip in my chinos, Ellen found it just about impossible to extract what she was after. And the swollen edifice of what she was after was now crushed and bent in the confines of its pants prison.\n\nAnd yet I'm not sure what would have been better. Commando would have given Ellen easier access, but equally exposed my stretched flesh to the vicious metal teeth of the zip. Light cotton boxers; maybe if I had any. A pair of my speedo swimwear would have at least been thinner and more stretchy to accommodate the growth and probably more slippery too, letting her pull it out of my pants more easily.\n\nI knew from the lunch with Amy that probably commando in loose legged shorts would have been best of all, but didn't really match the ambience of the restaurant or the stunning company I was with. But in any case I had to wonder about the prudence of having my engorged cock hanging out of my pants, even if it was under the table.\n\nEllen's hand eventually wormed its way down the front of my undies to wrap her sensuous fingers around my hardened manhood and start jerking it. Fortunately she did it in situ, instead of extracting it from my pants. The sharp metal teeth of my fly would have made short work of it.\n\nWe were still fingering each other when Gloria returned for the plates. I quickly took my hand back as she bent over from the far side of the table to collect the plates; although Ellen left hers where it was; momentarily stilled.\n\nThere was no modest upward arch of Gloria's torso this time. As she reached across, her pareo hung down and the orbs of her attractive breasts were in full view; large dark brown nipples seductively capping them. She looked me in the eye with the sweetest, most innocent, face imaginable.\n\n\"Are you enjoying your meal Mr O'Neill?\" \n\nI smiled back at her.\n\n\"Yes thank you Gloria. It's delightful.\"\n\nWith the same view as mine, Ellen cruelly started jerking me off all the faster and harder. It was lucky I've never really been that enamoured of hand jobs; they somehow lacking the lubrication that makes it really stimulating. I fought to keep a straight face.\n\nGloria added with the broadest smile imaginable...\n\n\"I'm glad to hear that Mr O'Neill. Your main course will be here soon. Let me know if there's anything else I can do for you.\"\n\nIn no particular hurry, Gloria brought all the plates over to her side of the table, stacked them and only then lifted them and stood upright, pulling up the front of her pareo with one hand as she rose to make sure she didn't lose it completely.\n\nAs she left again I leaned over the Ellen.\n\n\"Were you trying to make me go off?\"\n\n\"No, just helping you enjoy the view. She's doing a better job of getting your mojo up than I am. You'll have to leave her a generous tip.\"\n\n\"I thought you'd be annoyed.\"\n\n\"Are you going home with her?\"\n\n\"No.\"\n\n\"Are you going to fuck her?\"\n\n\"Lord no.\"\n\n\"Are you going to see her again after we leave here?\"\n\n\"No.\"\n\n\"Then all she's doing is boosting my ego by telling me she wants something I've got and she can't have. You know what they say, jealously is the most sincere form of flattery.\"\n\n\"Isn't it imitation?\" \n\n\"Yes, but jealously is unsatisfied desire for imitation, so another level up.\"\n\n\"That's a very mature attitude.\"\n\n\"I'm am very mature. Now get your finger back on my clit.\"\n\nMy fingers were wet with Ellen's juices by the time the main course arrived. Gloria played putting the plates down reasonably straight. But, as she reached in to top up our glasses, she brushed against me. As she stood up straight, a loose fold of her pareo hitched on my shoulder and the bottom hem of it was pulled up enough to expose her butt again. We both decided to ignore the incident.\n\n\"Is there anything else Mr O'Neill?\"\n\n\"No, that's fantastic Gloria. We'll let you know if we need anything.\"\n\nI pointedly picked up a piece of mushroom out of my dinner between my thumb and forefinger, the latter being one of the fingers I'd just had in Ellen's crease; holding it up as if I was savouring it before putting it in my mouth and licking my fingers.\n\n\"Hmmm, mushroom coated in special sauce. Would you like to taste it?\"\n\n\"There plenty of sauce where that came from. I suppose what's good for the goose is good for the gander. OK.\"\n\nI offered her a piece between my thumb and juice coated middle finger. She took the lot into her mouth up to the point my fingers joined my hand. Then singling up to my middle finger, slipped it in and out of her mouth seductively several times between puckered lips, sucking it vigorously.\n\n\"Yes, it reminds me of something. I'm not sure what.\"\n\nWe finished our main course at a leisurely pace accompanied by a wide ranging and always interesting conversation. Ellen had been a bit tanked up on the stream of afternoon and pre-dinner cocktails. The chilled wine, which went down all too easily in the tropics, was only adding its effect to what was already there.\n\nAlmost as soon as I put my cutlery down, she grabbed my hand and brought it back into her crease as she leaned towards me and rested her head on my shoulder; once again exposing her breasts to my view. Her state of arousal hadn't diminished much while we were eating and almost immediately I was able once again to tweak her swollen bud between two fingers.\n\nYou'd swear Raphael was waiting for his chance. He was quickly at the table and Ellen just as quickly clamped my hand into her crotch and held it there to prevent me pulling it away while using her other hand to ensure her action was well covered by the long tablecloth. With Ellen having closed the gap between us, he moved around to the other side of Ellen to slowly top up her wine and then shuffle the cutlery on her plate while having a good stare down the front of her dress. The way she was leaning towards me, he probably had a better view then even I did.\n\nEllen turned her head towards him without lifting it off my shoulder.\n\n\"Are you having a good night Raphael?\"\n\n\"Yes Mademoiselle.\"\n\nI was feeling a bit playful myself. At this point I slipped my fingers through her crease and penetrated into her sex. She tensed, but far from using her hand to pull my fingers out, applied pressure to encourage me to push them in deeper.\n\nI bent my fingers to tickle up her g spot. She tensed a bit further and couldn't hold back a supressed undertext of a moan as she asked Raphael...\n\n\"Not too busy then?\"\n\n\"No mademoiselle. Would mademoiselle like to see the dessert menu?\"\n\n\"Maybe come back in a little while.\" adding \"Thank you\" as he lifted her plate away.\n\nRaphael moved around to the other side of me to collect my plate; still transfixed by the view he had of Ellen and forgetting to top up my wine too before he left.\n\n\"Now who's flirting then?\" \n\n\"Yes well, I'm entitled to my turn too.\"\n\nI could feel Ellen's body start to tense in the way she sometimes does approaching an orgasm. If she was edging again, she was taking it to the limit. But Ellen's been known to squirt with a g spot orgasm. That didn't seem to be a good idea where we were. So even though she lightly resisted the movement, I pulled my now very wet fingers out and slipped them back up to her clit.\n\nIt was only a minute later she froze and tightened up; letting out a bare perceptible moan into my ear as she came. Had it been Amy, the whole room would have known, but I was always confident Ellen would be more discrete.\n\nI whispered into her ear.\n\n\"I thought you were edging.\"\n\n\"I fell over it.\"\n\n\"Is that going to ruin your night?\"\n\n\"You'll just have to work harder. But it's not every girl who can say they've had an orgasm mid meal in the main dining room of a hatted restaurant. It was worth it for the skiting rights.\"\n\n\"Aren't you meant to go orgasmic over the food? Maybe take a photo for Facebook of its presentation?\"\n\n\"To each their own. The foods nice, but your finger's better. And there's no way Facebook will publish any photo of what I want to skite about.\"\n\nGloria had been busy across the room and had even missed Raphael's clean-up of our main course. Now she idled up to me on the side away from Ellen, offering me a clipboard.\n\n\"\"Would you like to see the dessert options Mr O'Neill?\"\n\nI took the offered menu and Gloria leant across me to pass one to Ellen too; her pareo where it covered her breast all but brushing across my nose. She stood there, her crotch momentarily brushing across the elbow I had on the arm of the chair as she stood back upright and then coming to rest still in contact. In any other circumstance I would have quickly pulled my arm away and mumbled an apology. But my elbow hadn't moved. She'd instigated the contact quite deliberately; albeit with plausible deniability.\n\nPerhaps I was feeling as cheeky, emboldened and intoxicated as Ellen. But, pretending not to notice, I left it there as I studied the menu; the bare flesh of my elbow slowly becoming sensitised to the details of the contact. It was under the hem of her pareo. I could feel the satin of her panties and the flesh of her thighs on either side of it. I was fairly sure I could also feel a camel toe through her panties with the little projecting bone on the end of the bent elbow pushed into it.\n\nThere was certainly a radiated warmth; maybe a little dampness.\n\nEllen had sat back up to look at the menu and I saw her cast a glance at the contact and smirk a little before looking me in the eyes. The menu seemed to have many interesting possibilities, but they were described with a number of French words whose meanings were ambiguous to both of us. Ellen cast me a subtle wink, turned the menu around without lifting it any higher and pointed to a word, asking Gloria what it was.\n\nIn exactly the way I expect Ellen thought she would, Gloria bent over me to look at Ellen's menu, backing off enough that her breasts hung just to the side of my eyes, her pareo hanging loose from the front of her body in a way that completely exposed her breasts and gave me a look through the gap right down to where I could see the crotch of her panties and the top of her thighs underneath it. Her face was across mine, apparently focused on Ellen and the menu she was holding; offering me the illusion I could perve without being seen by her. But we both understood the game being played.\n\nI had to admit, it was a distracting sight. Delightful breasts capped by quite large dark coloured nipples, beautiful mid brown skin, a slim, drawn in stomach flaring out to shapely hips and a pronounced mound bulging out her tiny panties.\n\nShe hung there as she answered Ellen's first questions and stayed as Ellen pointed to a succession of words requiring explanation. All the while Ellen's looking from the menu, to down Gloria's pareo to my eyes; amusing herself greatly by facilitating Gloria's obvious flirtations in order to tease me.\n\nI was listening to Gloria's answers more than matching them with words on the menu. My eyes were elsewhere.\n\nFinished her game, Ellen let Gloria stand up again as she turned the menu back to herself. As before, Gloria had to hold the front of her pareo as she stood up; hitching the front of it back over the top of her outthrust breasts to stop it falling off her. Then she somehow managed to once again stand close enough to me to bring her crotch back onto my elbow as she waited for our order.\n\nEven having taken our order, Gloria wasn't giving up. She cleared the main course plates from the adjoining table with a legs apart bend across it that displayed a mound bulge that left no doubt as to either the camel toe or the dampness.\n\nThe dessert came and was eaten with Gloria offering another flash as she cleared the table. It seemed eventually as if she had it down to a fine art. When she delivered the bill I unfolded it to discover a torn off bit of paper with a telephone number. I waited until Gloria was gone and then showed it to Ellen; putting it in my pocket because I felt at the time it would be rude to leave it. Ellen asked me what tip I was leaving and when I showed her, she suggested I double it.\n\nWe were ready to leave. By this stage Ellen was no more sober than Amy had been. Sex was clearly on her mind - completely dominating it. It had been right through dinner. But it manifested itself differently to Amy. With Amy she was wanting to be all over me like a rash. Ellen's was a bit more strategic; outrageously flirtatious and sexy. She knew what was coming, indeed was orchestrating it. But she was treating it as a building storm; an approaching hurricane. \n\nSexual frisson was in the air like lightning bolts in a monster electrically charged thunder cloud that proceeded the main storm. The wind of desire was building to irresistible force. You could feel the tension building before the storm front.\n\nThe games she played with Gloria had simply been part of the build-up. She wanted me randy and aroused and it didn't much matter to her what brought that about.\n\nAs we walked back to the bungalow, she played like a little girl, one minute her breasts bouncing delightfully as she skipped alongside me holding my hand, the next running out in front of me, pacing backwards as she turned towards me, bent forward to reveal her breasts and the split of her dress quite deliberately opened to reveal in the half-light a v of nakedness that ran from her navel to her ankles.\n\n\"Are you feeling randy Mr O'Neill?\"\n\n\"You know I am.\"\n\n\"Am I the object of your desire?\" \n\n\"Completely.\"\n\n\"Are you sure you don't want to run off back to the cute little waitress?\"\n\n\"No, I want you.\"\n\n\"OOOhhh, really Mr O'Neill. What are you going to do with me?\"\n\n\"I think the more pertinent question would be what you're going to do with me.\"\n\n\"Am I looking sexy in this dress?\"\n\n\"Ravishingly.\"\n\n\"Are you turned on by it?\"\n\n\"Desperately.\"\n\n\"Is your cock hard and needy?\"\n\n\"It has been right through dinner.\"\n\n\"Are you looking forward to stripping me out of it?\"\n\n\"I might just fuck you in it.\"\n\n\"Oh Mr O'Neill you are bold. But do you know what I've got planned for you?\"\n\n\"Dare I ask?\"\n\nEllen closed the gap between us. In a moment we'd embraced each other in a sort of dancer's hold; like in a graceful waltz, Ellen stepping backwards in time with the movement of my own legs. She ground her crotch against the swollen hardness filling my pants and brushed her top across my shirt to dislodge the triangle covering her right breast and completely expose it.\n\n\"I'm going to fuck your cock right off your body. By the time I'm finished with you tonight you're going to be a drained, shrivelled up shadow of the stud I started with. And then I might just leave you outside on the doorstop to become Gloria's plaything.\"\n\n\"Won't you take mercy on a poor old man?\"\n\n\"You've turned me on with your hard body, good looks, intelligence, humour and kindness. Not to mention a magic cock. Sorry but now you have to pay the price. You should have thought about that before driving a woman wild with desire.\"\n\n\"I could easily turn myself into a pathetic, whiney dag if that would help.\"\n\n\"That sort of silly disguise isn't going to save you. You've got a charge sheet for good sex a mile long. No body's going to fall for that pretence.\"\n\nBy this stage we'd reached the point where the gangway to our bungalow joined the main boardwalk. Ellen stopped.\n\n\"Can I have the key?\"\n\nI gave it to her. By this stage of my stay at the resort, being led into the room for sex was almost becoming par for the course. When I'd first suggested these 'dates' with the girls it had never occurred to me what fuck feasts they'd become. I'd seriously misjudged the forces I'd unleash by giving the girls time alone with me for what I thought would merely be a romantic interlude.\n\nEllen led me by the hand down the gangway, swiped the card and took me inside somewhat more calmly than either she or Amy had done so on previous occasions. It seemed like her playful sass talking was something of a substitute for a rush to action. She placed the key on the sideboard and turned to face me, leaning back against it.\n\nShe opened up the flaps if the dress to once again expose herself from her navel down and then pulled aside the triangles of her top to expose her breasts. There was something about her that was a picture of arousal; swollen labia, hard jutting nipples, maybe even swollen breasts and eyes like dinner plates. My heart was pounding at the thought of the sexual indulgence ahead of me.\n\n\"You want to fuck me in the dress? Here I am. Entertain me as you strip yourself naked and come and take me in it...But, you can't cum. I've got a lot more planned for you before I let you do that.\"\n\nI was grinning at her like a demented child as I kicked off my shoes, unbuttoned my shirt and removed it, and then undid my belt and pants and dropped them and my undies to the floor. Stylish stripteases had never been my forte and I wasn't in any case dressed for one; cursing again the heavy cotton undies. I tried, but had no illusion it was anything other than an awkward, amateurish attempt. Naked, I stood momentarily in front of her, my erection, freed at last from it constrictive clothing prison, hard and reaching up towards my own navel in its anxiety.",
        "Ellen scanned up and down my body as I desperately tried to stand upright with my chest out and stomach sucked in; hiding the food baby that all too easily gets in the way of post dinner sex. Her eyes eventually came to rest on the towering manhood that would soon explore the intimate reaches of her body.\n\n\"Oh, Mr O'Neill, you seem rather pleased to see me. Do you know what I've wanted to do all dinner; and I might have if you and Amy hadn't attracted the attention of the staff and had them buzzing around us like bees at a honey pot? I wanted to crawl under the table, take that beauty from your pants and suck it off in the dining room. Now come here and use it to fuck me.\"\n\nShe held her arm out, giving me a come hither finger. Perhaps it was the fact I was as tipsy as she was, but for some reason I wasn't shocked by her brazen sexualised language and behaviour. I've never quite seen her like this before, but she was by nature playful, confident and, when necessary, outspoken. It was simply putting those characteristics to a different purpose. Indeed, far from being shocked I was aroused and drawn in by it.\n\nAs I reached out my own hand for her to grab it, the swollen edifice of my manhood surged uncontrollably in anticipation. \n\nShe pulled me in towards her; her spare hand bending my cock down to slip it into her crease while the one pulling my hand quickly moved to the back of my head to draw my lips onto her right breast. Then she stood on her toes as her hand guided the tip of my erection into her sex. As she dropped back down I found myself penetrating her until she bent her knees; forcing the last millimetres of my hardness into her body.\n\nShe moaned as I started sucking her nipple and moaned again as I slowly bent and straightened my knees to thrust up at her. As I have before with Ellen, I was sure I could feel the tip of her engorged bud drawn up and down the length of my shaft with every thrust; more so as I drew it backwards on the withdrawal. She wasn't making any attempt to grip me. Even as I drew it backwards, I could feel the muscles of her pubic floor, which would normally be tight against the action, were relaxed and letting my shaft slip easily across them.\n\nShe was starting to quiver; her legs shaking as they supported her weight; her nipple and areola jutting hard between my lips. That was a good sign. I needed her to cum quickly. She may not have been gripping me, but the delightful, silky, slippery warmth of her sex and the shear ravished beauty of this woman with her sexy dress cast askew was playing havoc with my own arousal. Her instruction not to cum was starting to dominate my mind.\n\nIt was too much; in desperation I withdrew and started to simply slide my shaft back and forwards across her clit. Even as wet as it was, it was a far less stimulating action for me and, I hoped, a more stimulating one for her.\n\nIt worked. She came; a little hum as she bit her lip hardly doing justice to the prolonged orgasm that had her knees jerking in spasm and my head crushed against her heaving chest. All I could do was keep sliding until I was told to stop.\n\n\"Good boy. I thought you were going to be naughty enough to cum for a minute and that would never had done. I'm not sated yet. Nothing like it. You've got a lot more edging to do yet young man because only you can satisfy me. Only you have ever been able to satisfy me. And I need satisfying right now like I never have before in my life.\"\n\nIn retrospect, it was funny. I positively glowed under her praise. Even the 'young man' bit. Like a little puppy dog wanting to please its master. There's just something about Ellen that has that effect on me; our age difference just disappears and I feel like I'm her age again and in the awe struck presence of someone far smarter than me.\n\n\"Please undress me.\"\n\nThat's not a command any man is likely to disobey. Without even pulling my erection out from where it was still pressed into her crease, I hitched up the long flowing flaps of the bottom of it and pulled the lot over her head. That's all there was. Except for any covering provided by the gorgeous long flowing locks of her hair which, having been pulled up with the dress now cascaded randomly over her body, she was now naked.\n\nNo sooner were her arms released from the dress, and even before mine were freed from their task, she wrapped them around me and pulled me tightly against her; pushing her lips against mine. Distractedly, I folded the dress in half and put it on the dresser before reciprocating her embrace.\n\nAs we passionately kissed, Ellen squirmed against me. I could feel the hard buttons of her nipples brushing repeatedly across my chest as she circled her clit against the engorged flesh of my manhood which lay within the embrace of her swollen labia. Already her breathing was becoming heavier again and little moans of pleasure escaped from her directly into my mouth where her tongue explored its furthest reaches. In a panting soft voice, she whispered...\n\n\"Oh god Ned, what have you done to me. I just feel so randy; so out of control. I just need you so much. I'm not kidding. Don't let yourself cum. I need to make love to you all night.\"\n\nI didn't know what 'all night' was meant to mean. I suspected she'd crash well before that. But it was clear something had turned her libido on to overdrive and dissolved her inhibitions into nothingness; something more than the cocktails and bottle of wine. The sensuous feeling of her body moving against me, the delightful way in which I could run my arms up and down the sexy womanly curves of her slender body as we embraced and, not least of all, the wet silky feel of the movement of her clit against my cock were all arousing; important if an older guy like me is going to keep it up. But fortunately they weren't pushing me to an orgasm. Whether she knew it or not, she was edging me to a tee.\n\nHer movements became more pronounced, almost manic; increasingly concentrating on the rubbing of her nipples on my chest and the circling of her clit on my cock. No less manic was her kissing. Her lips were pressed ever more firmly against mine, her tongue moving against my upper palate and the back of my mouth as if she could somehow lick me into an orgasm.\n\nIn the last few moments her legs started to quiver again. But even that could stop the frantic movement of her body against mine. Until, in her usual quiet voice...\n\n\"Oh, oh, oh Ned. It's lovely. Oh, that's so nice. Oouuu, please keep it going. Mmmmmmmmm.\" \n\nAs her body more or less frozen in its orgasm, all I could really do was keep slipping my cock against her clit waiting for her to signal 'enough'. But the humming just continued; even doubling down once as she bent her knees to press my cock more firmly against her clit. Then, as suddenly as it started, it was over. Ellen stood there, pressed hard but now unmoving against me with her head over my shoulder. I could feel the warmth of her short taken breaths against the back of my neck as her hand moved up to stroke my hair.\n\n\"Can we move to the bed Ned? My shins are killing me after that.\"\n\nI disengaged from her, took her soft hand in mine and led her the few steps over to the bed; holding her hand as she climbed on it, then joining her. Initially we embraced and pashed side by side, but I soon felt Ellen pushing me over onto my back. She knelt alongside me, then straddled over my shins. Lifting my erection up from where it rested on my stomach, she glided her hand up and down it before bending down to kiss it.\n\n\"Have I ever told you what a beautiful cock you have?\"\n\n\"No, I don't think that's been a topic of conversation.\"\n\n\"You do. It's the most beautiful one I've ever seen. I love the way it's circumcised, I love its colour, its size, the bell on the top and how thick and long it looks when you're aroused. I love the feel of its hardness. But most of all I love what you do with it. Can we do some more?\"\n\nShe didn't really wait for an answer. Even as she spoke, she'd been sliding up my body until she was sitting over my erection. She bent it up with her hand and guided it into her body; sinking down on me until it felt like her full weight was pushing it as deeply into her as possible.\n\n\"Do you know how special it is to have someone you love so far inside your body like that? To feel completely joined to them? To feel them touching you where no one else can?\"\n\n\"As special as it feels to be inside their body.\"\n\n\"Way more than that Ned. While you're there it's like I own part of you. It's mine and you're mine along with it. God I love you. I've never known love like this before. I don't know what you've done to me, but whatever it is, don't stop.\"\n\nI resisted my responsible old fart inclination to remind her I was too old for her - that she needed to find someone younger. She was tipsy and it wasn't the moment. She might not even remember her words when she woke up in the morning. I just told her the truth.\n\n\"Ellen I love you too. More than you can know.\"\n\nAs she bent down to kiss me lightly on the lips, her soft blow dried hair came cascading down onto me, falling each side of her head and thus of mine. Ellen, her body, the very person of her, overwhelmed my senses. My whole vision was framed by the locks of her beautiful hair either side of me, the heavenly orbs of her breasts hanging down from her delectable chest below me and right there in front of me, her enchanting face beaming a smile at me. The subdued waft of her subtle perfume mixed with the gentle smell of her shampoo in the most feminine way. My hands rested in the small of her back where my fingers felt the softness of her skin and the womanliness of her figure.\n\nI was overcome by her. My primeval self, no less than my aching cock - already warm and sensitive in the embrace of her sex - wanted to flip her over and pound her body into my own climax at the same moment as my cerebral self wanted to protect and nature her and grant her every wish.\n\nAs she started rocking back and forward on me, it was easy to decide the primeval self could wait. The pounding would come. Just not yet. As her breasts started wobbling with her movements, they attracted my attention and one was soon attached to my lips, the other had its nipple tweaked between two of my fingers.\n\nCompletely in control, you could tell Ellen had the art of stimulating herself this way down to a fine art; rubbing her clit both on my pubis and on my willing shaft as it exited and plunged back into her body. In only a few moments she was climaxing again; tensing up as she suddenly sat upright on me - her thighs gripping tightly against mine as her sex pummelled against my increasingly sensitive shaft.\n\nQuickly Ellen put her hand around her back and circled her fingers around my balls.\n\n\"I've read this is meant to slow you down.\"\n\n\"I think it's getting close to the point god himself won't be able to stop me.\"\n\n\"Just one more then.\" \n\nEllen slipped me out of her, leaving my erection to flop on my stomach as she worked herself up my body. There she carefully positioned herself with her clit over my lips, and leaned forward over me; elevating her hips just so.\n\nI flicked the swollen bud with my tongue; eliciting a delighted moan.\n\nPerhaps with a determination to make this one a monster, I decided to go all out on her. Sucking Ellen's clit is always a pleasure. It just fits so nicely between the lips in its swollen state. Taking it there, I flicked and rubbed my tongue against its tip, moving my lips from side to side to maximise my stimulation of it.\n\nConcurrently, I put two fingers in her sex and rubbed hard against where I knew her g spot was.\n\nThe effect on Ellen was almost immediate. After the briefest pause, she started quivering again. You could see the tension building in her. Even her voice - every prolonged moan - was becoming tense.\n\nIt reminded me of the build-up of earthquakes around a volcano about to explode. The bed itself was vibrating with the shaking transmitted through her knees. I almost felt anxious about what I knew was about to follow.\n\nWhat burst upon her was the monster she'd been planning for; not just one, but a string of them. She wasn't loud about it; just a prolonged groan. But it was accompanied by multiple squirts that sprayed out onto my chest and a clamping of my fingers in her sex.\n\nWith her face buried down in the mattress and her hips now elevated over me all I could do was watch and listen as Ellen seemed to have orgasm after orgasm; her body tensing as she moaned, only for it to stop momentarily and start all over again. All the while her body's honey is still dripping from her crease - breathtakingly beautiful in its arousal - directly onto my face.\n\nEllen panted through deeply taken breaths and moments of tensed up climatic waves...\n\n\"OK Ned, it's time, fuc...aaaaaahhhhhhhhhhhh, oh god...fuck me ...Really fuck me, like you've never...aahhh... fucked me before.\"\n\nIt seemed she could barely get the words out between waves of whatever was sending her in to spasms of orgasm. I didn't wait for her to straighten out on top of me. I didn't wait for the spasms to stop. I didn't wait for anything at all. \n\nI grabbed her around the knees that sat astride my shoulders and flipped her off, onto the bed and then onto her back. Pulling her legs straight and spreading them wide, I simply crawled up between them until the tip of my extended, cum dripping, cock dangled over her crease.\n\nTo say I eased myself down lacks the drama of the actual moment. It was fast and anxious. I didn't want to wind or hurt her. But I was in a hurry and I wanted to convey that sense of anxiousness to her. But it didn't matter. Another climax hit her and, with another groan, she lifted her hips to meet me anyway. Her crease was still aroused and opened like a flower in bloom and, as our sexual organs crashed together, the tip of my cock very quickly found the opening it was seeking. As her hips sunk back to the bed my shaft sunk deep within her.\n\nI was scared this was going to be over all too soon. There'd been a big build up and some near run things. But Ellen wasn't squeezing or gripping me, was flooded with her own juices and, with her legs apart, my shaft was slipping in and out of her easily, like a well oiled piston. It felt nice, it felt fantastic actually, but not in a way that was going to too quickly deny me the sheer visual and emotional pleasure of pounding this beautiful woman into the bed.\n\nEllen rag dolled under me, caught in the midst of her own pleasures. For once she wasn't hypoventilating, so I didn't need to worry about her passing out and I could watch her breasts wobble to my pounding without any distractions. And wobble they did. Beautifully, provocatively in all their womanly glory. Ellen was lifting her hips slightly to my action, I could only guess to expose her g spot to more stimulation together with the certainty that her clit was getting in the way of my powerful thrusts and the crashing together of our pubises. \n\nSome powerful force was affecting Ellen. Soon she was moaning in crescendo; but unlike I'd ever seen her moan before...\n\n\"Oohh...I can't hold it...Ned, I can't stop it...I can't control it...Ned, oh Ned, I'm going to...I'm going to explode...oh...oh...oh...aahh...AAAAAAHHHHHHHEEEEEEEEEEEEE...AAAAHHHHHHHEEEEEEE.\"\n\nHer scream nearly deafened me. High pitched and louder than anything Amy's ever done and so unlike Ellen who I've never seen do anything like that before. Immediately she tried to clamp her legs together, pushing mine to the outside as she lifted her hips and with it me, off the bed. Her sex tightened down on my cock, suddenly ramping up my own stimulation. Three thrusts latter I was blasting rope after rope of my seed against her cervix as I groaned and squirmed about in the throes of my own orgasm.\n\nIt may not have been pretty to an onlooker. Two people totally caught up in their own intense climaxes, groaning and grunting while overwhelmed by the pleasures, grinding themselves together as they rolled and thrashed frantically about on the bed. And each subconsciously is trying to achieve the impossible; to just make the penetration a bit deeper in some unspoken intuition that a whole world of extra pleasure awaits them.\n\nBut eventually we settled down with Ellen on top of me, kissing my whole face passionately.\n\n\"Oh wow Ned. [kiss] That was [kiss] incredible. Who said [kiss] there's no benefit in saving it? I've never [kiss] in my whole life [kiss] screamed like that before. [kiss] See [kiss] what you do to me?\"\n\nWe lay there for maybe ten minutes. After a session like that, my erection wasn't in any hurry to disappear, so I was still solidly penetrated into Ellen when the doorbell rang. We both knew what it would be. But Ellen expressed it first.\n\n\"Oh shit. We've done it again.\""
    ],
    "authorname": "Joanmcarthy",
    "tags": [
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/unexpected-threesome-ch-27"
}