{
    "title": "I'll Carry Your Bag",
    "pages": [
        "Professional golf seems to focus on the PGA tour. Many are familiar with names like Bobby Jones, Ben Hogan, Byron Nelson, Sam Sneed, Jack Nicklaus, Arnold Palmer, Phil Mickelson and of course Tiger Woods. If you've watched any golf, I bet you could name at least 20 famous male professionals.\n\nBut how many female professionals could you name? If not many, why not? Is it because we've become obsessed with seeing Bryson DeChambeau hit drives over 400 yards, or a sand wedge hit 150 yards? Sure Lexi Thompson can knock it 300 yards when she has too, but she averages just under 279 yards. I just don't recognize the game of golf the men play anymore. It seems to be played by a bunch of super humans.\n\nEntertaining...yes.\n\nA game I'm familiar with...no.\n\nBut I do recognize and appreciate the game the ladies play. For the most part it's still a \"shot makers\" game not a \"how far can I bomb it\" game. You have to be impressed with the ball striking skills of Annika Sorenstam, Lorena Ochoa, Jin-Young Ko, Nelly Korda or Brooke Henderson. Sure, the women don't hit it as far as the men, but they are as immensely talented in every other respect as the men. It is jaw dropping to see how creative Lydia Ko can be around the greens. There have been some incredible putters throughout history, but I believe Inbee Park is one of the top five putters of all time... men or women.\n\nI'm awed at the power and speed the guys generate. But more so, I marvel at the beautiful, balanced golf swings almost all the ladies possess.\n\nAnd what about caddies, can you name any? Remember 10 year old Eddie Lowery on Francis Ouimet's bag when he won the 1913 US Open? No... a 10 year old? Or Iron Man Nathaniel Avery on Arnold's bag for all four of his Masters victories? Who? What about the 20 years Angelo Argea caddied for The Golden Bear? Still nothing? Surely you remember Stevie Williams carrying Tiger's clubs for 13 of his major championships. Vaguely? I firmly believe, \"Behind every great golfer is a great caddy.\" I submit that professional golf is not an individual sport, but a team sport. On the course, the team is made up of the golfer and the caddy. So why hasn't a caddy been inducted into the World Golf Hall of Fame? Sure, they have a Caddy Hall of Fame, but I can think of at least one or two who should be in the WGHF.. Cough...cough...Bones Mackay...cough...cough.\n\nThe following story is about a young up and coming female golfer and a former great, but aging caddy. It is my attempt to pay homage to both groups of very talented professionals, with some added romance.\n\nI hope you enjoy.\n\nThursday -- Round One -- Opening Round\n\nRaquel Simmons was nervous as she walked up to the first tee. This was her first tournament of the season and would mark the beginning of her second year as a member of the Women's Professional Golf League or WPGL. Her first season was a serious wake up call. Fresh from a very successful college career, she thought she could compete with the best professionals in the world. Raquel quickly found the pro tour was a completely different animal than college golf. It wasn't only about playing golf, it was her job and she was a self-employed business woman. The business success was her responsibility and hers alone.\n\nThe pressure was very different as well. If she didn't play well enough on Thursday and Friday to make the cut, there would be no paycheck for the week. Adding to the pressure, she still had expenses, even if she didn't get paid. Sure, she had a couple of small endorsements. She was very grateful for them, and they did help with some of the expenses, but not all of them. Bottom line, she had to make cuts and earn paychecks to keep playing the game she loved. She had worked a deal with her caddie, who was also her brother, if she didn't get paid...he didn't get paid. It might have lessened the pressure, because that was one less expense, but that also made her responsible for his income, so maybe instead, it added pressure.\n\nThen there was the pressure of trying to win. Last year she played well enough to put herself into contention on Sunday in a couple of tournaments. Sleep didn't come as easy on those Saturday nights. On Sunday, the muscles were just a little tighter and she felt the nerves, on the first tee. In one tournament she found herself one stroke from the lead on the last hole of the tournament, or the 72<sup>nd</sup> hole. She had never before felt pressure like that... in her life. A double bogey later the pressure had produced disappointment.\n\nThe media called it a \"teaching moment.\"\n\nPressure had multiple layers.\n\nIn order to keep her playing card, she had to rank in the top 100 on the tour. Fortunately, last year she played well enough to rank 95<sup>th</sup> in the world, pulling in just shy of $130,000 in prize winnings. She was aware, but didn't focus on the fact that 95<sup>th</sup> on the men's tour earned just under $960,000 last year. Her ranking eliminated the pressure of having to go back to Q School to earn her playing privileges. But that was last year. She had to rank higher than 100, this year, to keep from having to go to Q School, next year.\n\nHer brother, even her parents kept telling her she needed a social life. That would help ease some of the pressure, they said. She didn't have the time for any semblance of a social life, especially dating. If she plays well enough to make the cut, there's 36 more holes of competitive golf over the weekend and then travel to the next tournament location. If she didn't play well enough to make the cut, she traveled back home, to Texas, on Friday and spent Saturday and Sunday working on her game and her physical conditioning and then packing it up and heading off to the next tournament. Mondays always started out with a three-mile run, and practicing, topping the day off with two hours in the gym. Tuesdays and Wednesdays were usually taken up with running, practice rounds followed by two to three hours on the range and putting green, topping the day off with an hour in the gym. After every tournament round, Raquel spent at least two hours fine tuning her swing or putting, many times trying to find a correction to a swing defect. She couldn't afford a swing coach...she had to figure it out on her own.\n\nEvery new week was the same as the last... wash, rinse and repeat.\n\nWhere was there room for a social life or a love interest? Raquel was very determined to succeed. She always pushed herself and had always found hard work eventually paid off. She didn't strive for fame and fortune, she was driven to be the best.\n\nThere really wasn't another reason for her to avoid dating. She was an intelligent, fit, beautiful, 24 year old woman. Raquel stood about five feet eight inches with light brown, shoulder length hair. Even with being in the sun for 10 hours a day, she took excellent care of her skin. Her college boyfriend always said he got lost in her emerald green eyes. Her exercise routine meant she had virtually zero body fat and the physical conditioning to hit 280 yard drives. Raquel's only complaint was her breast size. She thought they were too big for a professional golfer. Her 32DDs played havoc with her swing. She wore tight sports bras to keep them \"quiet\" during her swing, but she believed she would have more flexibility if they were smaller. Oh well, golf was about playing the best with the cards you've been dealt. Everyone had to adapt and she was no different.\n\nShe was also a very normal 24 year old woman with hormones and desires. She didn't necessarily neglect her needs. A nice collection of battery operated boyfriends, or B.O.B.s took care of her when the urge hit. She did however miss the real deal and the intimacy. Maybe someday, after she achieved her goals, she might have time for a relationship. But at least for the time being, golf would also have to be her lover.\n\nRaquel shook hands with her other two playing partners, Rosa Sanchez and Stacy Watters. She also introduced her caddie/brother, Mark. Raquel and Mark stood off to the side as the tournament announcer introduced Rosa, who had the honors. The first hole was a par four, measuring 395 yards with a slight dogleg left. The ideal shot was down the right side of the fairway. Rosa hit a high draw that started out a little too far left and ended up in the second cut of the left rough. That was going to make for a tough approach shot.\n\nStacy was next and split the fairway about 240 yards from the tee.\n\nThen Raquel heard her name announced. Mark handed her the driver. She made sure she took three deep breaths, walked up and tee'd up her ball. She stood directly behind the ball, gripping the club as lightly as possible while visualizing the shot she wanted to hit. She took two practice swings. Raquel then stepped up to the ball, took her stance, lined herself to her target and consciously tried to relax as much as possible. After two \"waggles,\" she drew the club back as smooth as silk until it reached the top of her swing, then with her powerful legs and hips, let loose with her downswing. The gallery heard a sharp \"crack\" when she made contact, with the ball. She finished her swing in perfect balance with a very high follow through. Raquel took a quick look at the ball flight, bent over and picked up her tee. She knew she hit it perfect. The drive ended up 294 yards from the tee on the right center of the fairway. She smiled and handed her driver back to Mark, then took off down the fairway. At least the season started with a good drive.\n\nStacy was first to hit her second shot. She was about 155 yards from the pin. She struck the ball well and it landed on the front of the green, left of the pin. The ball took one hop and rolled to a stop pin high, about 20 feet left of the hole.\n\nRosa was next to hit, from the rough. The ball was nestled deep into the grass. She wasn't able to catch all of the ball and was lucky to get it back into the fairway, coming up 50 yards short of the green.\n\nRaquel and Mark were standing next to her ball while her competitors took their turns. The area had received quite a bit of rain the past couple of days, so the greens were very soft. She was almost exactly 100 yards from the pin. Raquel suggested a pitching wedge and Mark agreed. If she hit it correctly it should stop about 15 feet past the hole and with \"backspin\" would come back to the hole. She stood behind the ball and repeated the same routine as on the first tee. She struck the ball, first, then the ground...taking a nice divot. The ball traveled a little farther than she thought it would, hit the green and then backed up to about ten feet from the hole.\n\nRosa pitched up onto the green and missed her par putt. So, she started her tournament off with a disappointing bogey.\n\nStacy two putted for a stress-free par.\n\nRaquel's putt was fairly level but looked to have some movement to the right. She figured she should aim about a ball's width left of the hole. She kept her head down through the entire putting stroke and didn't see it go into the hole...but she heard it.\n\nBirdie three.\n\nThere were about 20 people following this group and all enthusiastically clapped for Raquel.\n\nIt would be great to say, the next seven holes were played as perfectly as the first hole, but there's a reason it's called \"golf.\" By the time they reached the ninth tee box, Rosa was +3, Stacy was +1 and Raquel was still -1. She managed to roll off seven straight pars, with two coming from some serious scrambling. On hole number four, she pulled her drive, dumped her second shot into the green side bunker, hit a poor shot out of the sand and made a 25-foot putt for her par.\n\nWalter Hagen said it only took one good shot to make par.\n\nThe ninth hole was a reachable par five measuring 502 yards, as long as you stayed out of any of the four fairway bunkers. The hole started off with an elevated tee box down to a fairway that sloped away from the players. 300 plus yard drives were possible for the longer hitters. The hole then turns gently uphill for the players to a very large green, protected by sand traps on both sides of the green. There was a lake behind the green that would swallow any balls hit too far.\n\nRaquel didn't need to \"step on\" her driver. The primary objective was getting the ball onto the fairway... distance was secondary. She went through the exact same routine as with all her previous shots. It was her best swing of the day. A nice high drive with a slight draw. The ball flew 260 yards and with the combination of topspin and the downhill sloping fairway, it finally rolled to a stop 312 yards away from the tee. Raquel handed her club back to Mark and smiled broadly.\n\nThey started off downhill toward the fairway, when out of nowhere Mark slipped and fell backwards, hitting the ground hard and then started rolling uncontrollably down the hill, tangled up in the golf bag weighing over 40 pounds. He finally came to a stop, screaming in agony. Raquel, Rosa, Stacy and their caddies ran to help Mark. One of the tournament marshals got on the radio and requested medical help, ASAP! They first had to get the golf bag untangled. A number of the clubs had fallen out and were now scattered across the hill. Mark was clearly in an extreme amount of pain. Raquel asked where it hurt and he grunted, \"My ankle, I felt it roll under me when I fell.\" She told him to stay still and that help was on the way.\n\nThe only good thing is they were playing the ninth hole, so their proximity to the club house and medical tent was close. A cart rolled up within a minute and a medic was checking Mark out. Quickly the medic determined Mark was done for the day. He was going to be transported to the hospital for x-rays. Broken bones were a distinct possibility.\n\nRaquel bent down to Mark and said, \"I'm going with you.\"\n\nMark looked up, in pain, but determined, \"No you're not! Your going to finish your round and the tournament.\"\n\nRaquel panicked, \"There's no way I could carry that bag!\"\n\nRosa and Stacy's caddies had already picked up all the loose golf clubs and reassembled her bag.\n\nSuddenly a deep voice came from the gallery, \"I'll carry your bag Ms. Simmons.\"\n\nRaquel looked in the direction of the voice and saw who made the offer. He looked to be at least six feet tall, in better than average shape, with almost jet-black short hair and a short black beard. She couldn't see his eyes, because he was wearing sunglasses. If she had to guess, he was in his late thirties.\n\nMark looked at the stranger, \"Thanks buddy, I owe you one.\"\n\nThe stranger responded, \"The honor is all mine.\"\n\nThe patron walked up to Raquel, extended his hand and introduced himself, \"My name is Sean Connors, you have a good round going, please allow me to help you finish it.\"\n\nRaquel wasn't sure if it was the fact that she wasn't a quitter, or that Sean had a calming voice, or that he was extremely handsome, or Mark's pitiful look that made her mind up.\n\nBefore she could answer him, Mark pleaded one more time before they drove him away, \"Raquel, let him carry your clubs. It's just 10 holes. If it doesn't work out, you can always withdraw at the end of the round.\"\n\nRaquel looked at Sean, shook his hand, \"Thank you Mr. Connors, I'll take you up on your kind offer.\"\n\nMark gave Sean his yardage/notebook and bib. Sean slipped the bib over his head. Sean picked up Raquel's bag and headed down the fairway towards Raquel's ball. The other two competitors and their caddies were already headed in the same general direction. Raquel said goodbye to Mark and hurried to catch up with Sean.\n\nRaquel had clearly out driven her competitors, so this allowed a moment for her and Sean to talk. Raquel was obviously upset and distracted with Mark's condition.\n\nSean was the first to talk, \"Ms. Simmons, there isn't anything you can do for your brother at this moment. I know I'm not him, but if you'll tell me what you're thinking, maybe that will help you refocus on your golf.\"\n\nRaquel eyes were glazed while Sean was speaking. Suddenly they cleared, she turned and looked at him, \"First off please call me Raquel.\"\n\nSean responded, \"And please call me Sean.\"\n\nRaquel nodded then stood behind her ball and looked at what she was facing, \"The slight breeze isn't going to hurt me. I figure it's 170 to the front of the green and 188 to the hole. It's warmed up quite a bit, so the ball is flying a bit farther. A five iron is speaking to me.\"\n\nSean responded, \"I like it, but with the pin on the right side of the green, make sure you stay a little left.\"\n\nRaquel looked at Sean, smiled and said, \"Good point. Maybe this is going to work.\"\n\nSean replied, \"I certainly hope so.\" He pulled the five iron from the bag and handed it to her.\n\nShe went through the same pre-shot routine and put the best swing on it she could. She struck the ball right on the sweet spot, but unfortunately a gust of wind came up just as she hit it and the ball didn't carry quite as much as she hoped, stopping about 10 yards short of the green.\n\nShe placed the five iron against her bag, which was now laying on the fairway. Sean retrieved her divot and replaced it into ground. Raquel was already walking towards her ball when Sean picked up the bag and the five iron. As he chased after his player, he cleaned the face of the club and replaced it into its designated location.\n\nSean caught up to Raquel about 50 yards short of the green. There they waited for Stacy, then Rosa to hit their third shots. Neither said a word.\n\nOnce it was safe to continue towards her ball, they started out in unison. Sean stopped next to her ball and set the heavy bag, upright, onto the ground.\n\nRaquel continued walking onto the green, inspecting every inch between her ball and the hole. The green had a \"false front.\" Raquel knew if she didn't hit it far enough, the ball would roll back to her. But she didn't want to hit it too far, or she'd be looking at a 30-foot birdie putt. She decided to hit a low pitch into the upslope of the green, carrying it to the top of the hill and then rolling towards the pin. She remembered her college coach always saying to get the ball rolling, as soon as possible.\n\nIt was a nervy shot and a lot could go wrong, but Raquel was only thinking about holing out for her eagle.\n\nShe walked back to Sean and said, \"What do you say we just pitch our ball into the upslope, about two feet to the left of the hole and then let the golf gods decide what happens?\"\n\nSean smiled and replied, \"I like the way you think. Pitching wedge?\"\n\nRaquel liked his smile, \"I think I'd like this baby to roll a little more, hand me a nine.\"\n\nSean pulled the nine iron out of the bag and handed it to Raquel.\n\nRaquel went through her pre-shot routine. She stood over the ball, her feet a little less than shoulder length apart with the ball in the middle of her stance. Her body moved in one motion, back...forward...through. The club head brushed the ground and the ball at the same time, sending it toward the mark on the green she had picked out. The ball hit the green about three quarters the way up the slope, took one small hop and began rolling towards to hole. It looked like it was in all the way, but the pace was just a fraction too slow and the ball came to a rest one inch from the cup.\n\nRaquel groaned, Sean groaned and the gallery groaned. Then the gallery erupted in an applause, congratulations on an easy birdie.\n\nOutward nine in 34 strokes, two under par.\n\nThe inward or back nine was similar to the front nine. Raquel had two birdies, six pars and a lone bogey at the par three 14<sup>th</sup> hole. Total 18-hole score of 69, or three under par, was a respectable start. She had an early tee time on Thursday, so Friday's tee time would be late.",
        "Rosa and Stacy? Rosa's troubles continued and she ended up five over par or a 77 for the round. She would have to shoot \"lights out\" on Friday to make the cut. Stacy grinded her round out. She actually turned it around on the back nine. She ended up rolling off three birdies in a row, starting on hole number 10. Except for a bogey on the par four 17<sup>th</sup>, she played the nine holes brilliantly. Stacy ended up one under par for the day, 37 -- 34 for a total of 71.\n\nAfter the last putt dropped on the 18<sup>th</sup> hole the girls hugged each other and \"fist pumped\" each caddy. Raquel gave Sean a nice hug and thanked him for coming to her rescue.\n\n\"I'll take my clubs up to the club storage.\" Raquel said.\n\nSean replied, \"No ma'am, I'll take them up and make sure they are clean and in pristine condition for tomorrow's round. You need to go sign your scorecard. Is there somewhere we can meet afterwards?\"\n\nRaquel looked at the handsome man before her, \"Are you hungry? We can grab a bite to eat in the clubhouse.\"\n\nSean smiled, \"Sounds like a great idea, see you there.\"\n\nRaquel headed toward the signing tent while Sean carried her clubs towards the maintenance area. After carefully checking her scorecard, she signed and turned it in. No pro wants to be disqualified for signing an incorrect card. Once that piece of business was concluded, Raquel headed to the club's restaurant and grabbed a table with a nice view of the 18<sup>th</sup> green. She told the waitress she was waiting for someone to join her.\n\nRaquel suddenly remembered her brother. How could she forget him? Quickly she turned her iPhone on and immediately saw a missed call from Mark. She called him back and he answered on the first ring.\n\n\"Great round sis! I watched it all.\" He said excitedly.\n\n\"Thanks bro, how are you?\" She replied.\n\n\"Drugged up at the moment, no complaints here. On the other hand, I broke my ankle bone when I slipped on that wet hill. Oh hey, I gotta go, nurse Ratchet just walked in. Love ya Raquel.\" And with that he hung up.\n\nRaquel just sat there looking at her phone thinking \"broken ankle bone?\"\n\nShe finally noticed one of her fellow pros standing next to her. When she looked up the Scottish pro Megan Hall said, \"Great round today Raquel. How's Mark?\" In a fairly noticeable Scottish accent.\n\nRaquel answered, \"He broke his ankle bone, and thanks. I couldn't have done it if that guy hadn't stepped up and caddied for me.\"\n\nMegan looked at her funny, \"Do you know who that guy is?\"\n\nRaquel looked back at Megan, \"Yea, his name is Sean Connors.\"\n\nMegan laughed which annoyed Raquel, \"Raquel, Sean Connors is one of the most respected caddies...ever. He caddied on the men's pro tour for 15 years and even caddied for the number one player in the world for five of them.\"\n\nRaquel was dumbfounded, \"Are you kidding Megan?\"\n\nBefore she could answer, Sean walked up, \"I'm afraid she isn't, guilty as charged.\"\n\nMegan blushed, \"Hi Sean, I'm Megan.\"\n\nSean shook Megan's hand and the sat down opposite from Raquel. \"Nice to meet you Megan, you have a beautiful accent.\"\n\nMegan blushed even more, \"Thank you. I should get going, it was great to meet you.\"\n\nSean responded, \"Nice to meet you as well.\"\n\nThen he looked at Raquel, \"Sorry I didn't have a chance to provide my resume when Mark was injured. By the way, how is he?\"\n\nRaquel looked sad and somewhat panicked, \"He broke his ankle bone. I don't know how long he'll be out of commission, but he won't be able to caddy this week. Shit, maybe half the season.\"\n\nThen she said to herself, \"What am I going to do?\"\n\nSean reached over and took her hand. She looked up and for the first time noticed his eyes. They were the deepest blue eyes she had ever seen. Sean saw a tear form in her right eye.\n\n\"Let's take it one step at a time. First, let's eat, I'm starving. Secondly, if you'll have me, I'm more than happy to caddy for you the rest of the week...under one condition.\"\n\nRaquel refocused, \"What condition?\"\n\nSean smiled, \"Mark still gets whatever portion of the winnings he normally receives.\"\n\nRaquel frowned, \"I'm not sure I can afford to pay you both.\"\n\nSean smiled brighter, \"You don't have too, I don't want any compensation for the honor to caddy for one of the future stars of the WPGL.\"\n\nRaquel was getting ready to argue when two men, in business suits approached their table.\n\n\"Ms. Simmons, I'm Clifford Longmeyer, the chairman of this club. My deepest condolences for your brother's injury today. We're all hoping for a speedy recovery.\"\n\nRaquel replied, \"Thank you Mr. Longmeyer, I'll pass along your well wishes to Mark.\"\n\nClifford produced a two-page document and placed it on the table with a pen on top. \"One minor thing, if you would please sign at the bottom of this document, we'll be on our way.\"\n\nRaquel looked at the document, a little stunned. Sean picked up the document and gave it a cursory read, then handed it to Raquel, \"I would suggest you have an attorney take a look at this before you sign it.\"\n\nLongmeyer quite obviously didn't appreciate Sean input, \"And you are?\"\n\nSean smiled and replied, \"I'm her caddy.\"\n\nLongmeyer had a disgusted look on his face, \"And why do you consider yourself qualified to make such a recommendation?\"\n\nSean still smiling, \"Well firstly Mr. Longmeyer, it's a caddy's job to have his player's best interest in the forefront. And secondly, I'm also an attorney and I can spot a legal document that absolves the club of any responsibility for Mark's injuries a mile away. And finally, by Raquel signing this document doesn't prevent Mark from taking legal action.\"\n\nRaquel interrupted, \"Mr. Longmeyer, thank you for stopping by. I'll get this document back to you before the end of the tournament.\"\n\nClifford Longmeyer was used to getting his way. But he was also smart enough to know any further argument wouldn't look good in such a public place. \"I would appreciate it Ms. Simmons. Please enjoy your lunch, it's on the club.\" Just before he left, he shot a look at Sean.\n\nRaquel looked back at the handsome man across the table and smiled, \"You appear to be my knight in shining armor today Sir Sean.\"\n\n\"At your service m'lady.\" He replied with a glean in his blue eyes.\n\nFor the first time, in a long time, Raquel felt herself get a little wet and uncomfortable. She shifted in her chair a little.\n\nThe waitress saved the day, by arriving to take their order. She also brought a very expensive bottle of wine, \"Compliments of the club.\" She said with a smile.\n\nRaquel frowned, \"I'm very sorry, but I can't accept it. I don't drink during tournaments.\"\n\nSean followed, \"And her caddy doesn't drink if she doesn't.\"\n\nThe waitress just smiled, took their order and returned to the kitchen.\n\nRaquel looked back at Sean, \"Can I ask you a personal question?\"\n\nSean smiled, \"Sure, anything.\"\n\nRaquel hesitated, \"How old are you?\"\n\nSean laughed, which made Raquel wetter, \"What, do you think I'm too old to carry your bag for a week? Just kidding. I'm 47 years young.\"\n\nHer initial thought was, Holy shit, I'm getting hot for a guy twice my age!\n\nThen he asked, \"Why do you ask?\"\n\nShe was embarrassed, \"I'm sorry, it really wasn't polite to ask.\" She leaned forward and quietly said, \"But...you're really hot for 47.\"\n\nSean blushed a little and smiled, \"Thank you. Should I be concerned about you seducing your caddy?\"\n\nRaquel sat up, startled, \"Oh...no! I would never be so unprofessional!\"\n\nSean started laughing, \"Relax Raquel. Trust me, every red-blooded male, my age, wants a beautiful 24 year old, red blooded female, thinking he's hot.\"\n\nThere was a lot to unpack in Sean's statement, but the only thing she heard was, \"You think I'm beautiful?\"\n\nSean smiled, \"Raquel that would be an understatement...you're drop dead gorgeous.\"\n\nShe soaked her panties.\n\nJust then their food arrived, which conveniently allowed for a change in subject.\n\n\"Raquel, I want to be completely upfront with you.\" Sean said between bites.\n\nRaquel's first thought, Great now he's going to tell me about the wife and kids.\n\nSean continued, \"I'm here, representing a major sports apparel company. We've had our eye on you since last season. We would like for you to consider a sponsorship from us.\"\n\nRaquel didn't expect this, \"Excuse me?\"\n\nSean interpreted this to mean she was upset...that he had only agreed to caddy for her just to close a deal. \"I am so sorry, I didn't mean to upset you or misrepresent myself to you. You are a talented player with a work ethic that is in line with our values.\"\n\nRaquel regained her composure, \"No..no...I'm not upset, I just didn't expect this. Yes...yes, I would consider a sponsorship from your company.\"\n\nSean relaxed, \"Whew...great, give me your agent's number and we'll present our offer.\"\n\nRaquel got quiet and looked down, \"I don't have an agent.\"\n\nSean quickly added, \"No problem. I'll put together an offer and we can go over it, after the tournament.\"\n\nRaquel was still quiet, \"Will you still be my caddy?\"\n\nSean smiled, \"Of course I will, that doesn't have anything to do with the other.\"\n\nRaquel looked like she wanted to ask something else.\n\n\"Is there something else you want to ask me?\"\n\nRaquel hesitated, \"You're already doing so much for me.\"\n\n\"Raquel, I want you to succeed...shoot.\" Sean was totally sincere.\n\n\"Would you mind looking at this document Mr. Longmeyer gave me and give me your recommendations?\"\n\n\"I would be happy to take a look, but if I'm going to also be your lawyer, I'll need a retainer.\" Sean smiled.\n\nRaquel asked, \"How much will that cost, I'm on a pretty tight budget?\"\n\n\"Do you have a dollar, Ms. Simmons?\" Sean asked.\n\nRaquel answered, \"I do Mr. Connors.\"\n\nSean replied, \"Well, then you have an attorney for a legal review, recommendations, and representation during negotiations, if necessary, concerning Mark's accident today. However, my services are limited to the slip and fall injury. I don't want a conflict of interest concerning any sponsorship proposals that may be coming your way this week.\"\n\n\"Understood.\" Raquel replied while handing Sean a dollar.\n\nThey finished their lunch. Raquel wanted to get in some practice and it was still early. Sean offered to retrieve her clubs and meet her in the practice area. Raquel said she needed to stop by the locker room, but would only be a moment. The real reason was to change her underwear, at this point she was sure her seat was flooded. Raquel must have been stopped a dozen times before she reached the practice area. Each time was the same. One of the other pros would ask about Mark and then ask how it was to work with Sean. It seemed, not only did he have a reputation for being a great caddy, but without exception each player thought he was a living wet dream. Several even asked Raquel to give Sean their phone number. At this point there was no way in hell she was going to expose him to those sluts. At least for this week, he was hers, metaphorically speaking of course.\n\nRaquel worked on her long iron game for about an hour and a half. She could have had three more birdies today, if she could have gotten better results from her long approach shots. Sean patiently stood by, watching her practice. Actually, he was learning everything he could about her golf swing and how she reacted to good and bad shots. Understanding her swing and her reactions were the two areas he could help her the most this week. He didn't know if she would trust him enough to help her on the greens, even though his ability to read them was legendary.\n\nHe was very impressed with her discipline. She wasn't there to just hit a couple hundred practice balls. Each shot had a purpose. She might adjust her swing tempo or her position to the ball. She hit some control fades and then some draws. She would hit some high shots and then switch to some \"stingers.\" Her approach to practice reminded him of what he had read about the legendary Ben Hogan's practice regiment. She appeared to emulate Hogan's philosophy of digging her game \"out of the dirt.\" Imagine what she could do if she had a good swing coach.\n\nAfter she completed her range work, she moved over to the pitching area. She spent a half hour hitting shots out of the practice sand trap then another half hour chipping from various locations around the green. Sean continued to observe and learn.\n\nShe decided to skip the putting green. Her tee time the next day was at 2:27 pm. She'd get to the course in plenty of time to warm up and spend some quality time working on her putting. They discovered they were staying at the same hotel. Raquel accused Sean of \"stalking\" her for the sports apparel company. Sean assured her, it was purely coincidental. She didn't seriously think he was stalking her, it was one of the nicer hotels close to the course. Raquel might skimp on many expenses, but she knew the importance of a good bed and those were not found in the \"cheap motels.\" Sean suggested meeting for an early lunch and then head to the course together. She readily agreed.\n\nRaquel was going to go to the hospital and visit Mark, before returning to the hotel.\n\nSean said he had some work to do, after all he did have a day job and a client to represent. They agreed to meet in the hotel lobby at 10:00 am.\n\nBefore they parted Raquel walked up to Sean, put her arms around his neck and gave him a hug. Then she kissed him lightly on the lips.\n\n\"Thank you for being my hero today. If it wasn't for you I'd be on my way home right now or spending the next couple of days at the hospital.\"\n\nSean smiled, \"It was my honor Raquel. See you in the morning.\"\n\nSean returned Raquel's clubs to the storage area, cleaned them and put them to bed for the night. As he walked to his rental car and the drive back to the hotel, his mind was going ninety to nothing. He thought about Raquel. She had tremendous potential, he could clearly see it. He thought about Mark and how badly he felt for him, but on the other hand, he never would have had a chance to work with Raquel had the accident not occurred. The accident... Longmeyer's quick production of a \"cover your ass\" document was more than odd...it was downright suspicious. He thought about how he could check on whether or not there had been other accidents coming down that same hill. Finally, his mind drifted to Raquel as a person...as a woman. Damn she was gorgeous, sexy, intelligent, driven, talented, funny... gorgeous and sexy. If he hadn't been driving he would have slapped himself. She was his client, he was also going to try to get her to sign a sponsorship with his employer and he was her caddy. Besides he was twice her age, she could have any man she desired. There's no way she would think of him that way. However, the way she looked at him a few times, made him think.... he couldn't...shouldn't think about her like that. But damn she was drop dead gorgeous and really fucking sexy.\n\nWhen Sean got back to the hotel, he made some calls. He had a couple of friends who were members of the club where the tournament was being held. He also called the CEO of the sports apparel company. Sean was upfront with what happened today. After listening to the entire story, it was quiet on the other end of the phone.\n\n\"Phil...Phil are you still there?\"\n\nThen Sean started hearing laughter and it became uncontrollable laughter.\n\nFinally, \"Sean my boy, only you could take a contract job and turn it into three jobs. Look, you've been upfront with Ms. Simmons and with me, I don't see any issues, unless she doesn't sign with us.\"\n\nQuiet again\n\nFinally, \"Sean, I'm just pulling your leg.\"\n\nSean sighed, \"To be honest with you Phil, I wouldn't have blamed you if you had fired me. My plan was to just follow her around for four days, assuming she made the cut, and try to talk to her after her round on Sunday. I just couldn't let her not finish a good opening round because Mark broke his ankle. I can tell you with complete certainty, she is exactly the type of athlete you want representing your company.\"\n\nPhil laughed again, \"That's why I hired you Sean. You're one of the good guys. I knew I could trust you to do what is right for us and Ms. Simmons. I want a long, happy relationship with her. I agree with you, she's going to be a star. I guess your job, now, is to help that star shine. You're a really good lawyer Sean, but you're the best damn caddy that's ever lived. Go be that guy and it'll all work out.\"\n\nSean smiled, \"Thanks Phil, I'll do my best.\"\n\nSean sat there and thought for a bit. If I'm going to be the \"best damn caddy\" for Raquel, then I need to do my job and I'm way behind the power curve. He looked at his watch and it was a quarter after five. All the competitive rounds should be complete, so he planned on heading back to the course. Maybe at least he could walk the front nine before it got too dark. Then he paused, and remembered he had Mark's notebook. He took it out and started studying it. Damn, Mark was good and very thorough. Maybe he didn't need to walk the course. Although he didn't give Raquel any advice on the greens, he did read every putt she faced and was right more often than not concerning the break and speed of the greens. Sean ordered room service and sat down for an evening of studying. As he read through Mark's notebook he smiled to himself. Son of a gun, he kind of missed this. He knew it was time for him to retire from caddying and he enjoyed his second career as an attorney, but damn, he missed it. He missed the research, the relationship between golfer and caddy, the unlimited number of variables they'd be faced with during a round, managing pressure, elation and disappointment. He missed it all. Oh well, he gets a chance, one more time...he's not going to fuck it up.\n\nHow did that country song go? Oh yea, Toby Keith, \"I ain't as good as I once was, But I'm as good once as I ever was.\" So, all Sean had to be this week is \"as good once as he ever was.\"\n\nHe could do that.\n\nSean was deep into the back nine of the notebook when his phone rang. It was one of his friends who was a member at the club. He had some very interesting information about the ninth tee and a couple of other elevated tees. They talked for a bit, then they agreed to grab a drink before the end of the week. Sean hung up in deep thought. He started up his laptop and began writing. He worked for about an hour before he remembered he had to finish studying before tomorrow. He shut down his laptop and picked up the notebook. He didn't put it down until he was finished. He looked at the clock and was shocked to see it was midnight. He felt he had a good knowledge base of the course, but it wouldn't do anyone any good if he was exhausted tomorrow, so he turned in for the night.\n\nBefore he dozed off, Sean stroked his hard cock to a blissful conclusion, while thinking about Raquel.\n\nRaquel was two floors down, tossing and turning. Earlier, she pleasured herself with one of her vibrators and found herself fantasizing about Sean. She brought herself to one of the strongest orgasms in recent memory. She couldn't get him out of her mind. She needed to get a handle on her emotions, she had a golf tournament to play. Fantasizing about fucking her caddy was not only inappropriate but not helpful. She had to keep it professional...at least until Sunday. But it was more than that. She really liked him...a lot. Sure, she wanted to jump his bones, but more importantly she wanted to get to know him. What she knew at this point was all good. She hoped there wasn't a chink in her shining knight's armor.\n\nFriday -- Round Two -- Cut Day\n\nSean hadn't planned on caddying or he probably would have brought different clothing. Although it was still winter, the southern climate was unseasonably warm. Sean only wore shorts and a t-shirt. The good news is he had a pair of golf shoes with him. He normally would have worn a good pair of walking shoes; however, with all the recent rain, he wanted to make sure he didn't slip on a wet hill, like Mark. Raquel didn't need to go 0 and 2 with her caddies this week. He made his way down to the lobby and got there before Raquel.",
        "Raquel arrived about five minutes later and Sean couldn't believe how gorgeous she looked. He smiled to himself thinking if she looks this good in her \"golf wear\" he could only imagine how \"hot\" she'd look in an evening dress.\n\nFrom Raquel's point of view, she liked to dress \"comfortable\" yet attempt to stay stylish. In this case she had decided on a pair of yellow skorts and a black collared golf shirt. She ended the combination with a yellow golf visor. If he had to guess, she would complete the ensemble with a pair of black golf shoes. In Sean's humble opinion, she succeeded on both fronts, comfort and style.\n\nSean smiled, \"Good morning Raquel.\"\n\nShe smiled back, \"Good morning Sean.\" But she was thinking, don't get started Raquel. His muscles and baby blue eyes must not distract you today. I hope no ones notices any wet spots.\n\nRaquel suggested they eat brunch at the hotel and then head over to the club. After they ordered, Sean remarked how thorough Mark's notebook had been. He continued by heaping praise after praise as he talked about specific notations. Raquel just sat there and smiled. She could listen to that deep voice all day and never get bored.\n\nThen it dawned on her, \"You really miss this don't you?\"\n\nSean smiled, \"I really do. I don't regret retiring when I did or having a second career as a lawyer. But, last night, as I was reading Mark's notebook and recalling walking the course, it hit me that I really enjoyed that life.\"\n\nThe waiter brought each a cup of the \"nectar of the gods,\" or to mere mortals... coffee. As they drank their coffee, they just talked about whatever came up. It was easy for both of them and they each, privately, made note.\n\nThe talk eventually got around to the tournament. Raquel noted her 69, yesterday, put her in a tie for third place. She lamented that one of the players, in the lead, was the number one player in the world. Once she held a lead, she rarely surrendered it.\n\nSean listened to Raquel's hero worshiping the leader. The more she talked, the more concerned he became. For the next ten minutes she only talked about how great J.T. Lee was. Sean was only half listening.\n\nFinally, \"Raquel, can I ask you a question?\"\n\nShe paused and responded, \"Of course you can.\"\n\nSean asked, \"Raquel, do you want a caddy or just someone carry your bag?\"\n\nRaquel looked at Sean like he had three heads, \"I beg your pardon?\"\n\nSean repeated the question, \"Do you want me to leave you alone this week, carry your bag, clean your clubs, rake your traps and pull your pin...or... do you want a partner on the course? Do you want me to help you manage your way around 18 holes, keep you in-check when you get mad, help manage the pressure?\"\n\nShe actually thought about it for a moment. \"I want a partner,\" she responded.\n\nSean replied, \"Then you have to trust me.\"\n\nRaquel was confused, \"What does that mean?\"\n\nSean continued, \"You have to quit looking at the leaderboard and focusing on J.T., or anyone else that may be ahead of you or behind you. You have to be solely focused on the golf course and not on your competitors. You're not playing against them...your playing against the golf course.\"\n\nRaquel asked, \"How do I do that?\"\n\nSean smiled, \"That's where the partnership comes in and the trust. We block everything out and only focus on each shot, each hole...how to make 18 birdies at the same time making sure we don't make any big numbers. At the end of the week we either win...or we don't. But I guarantee you that if you keep thinking about how indestructible the number player in the world is...you'll lose every time.\"\n\nRaquel finally understood. \"I have been talking about her a lot.\"\n\nSean smiled, \"Want to give \"us\" a try?\"\n\nRaquel briefly thought about another version of \"us\" she'd like to try.\n\nShe mentally slapped herself and smiled back at him, \"Absolutely partner.\"\n\nSean beamed, \"Outstanding, now let's go warm up and then kick this course's ass.\"\n\nThey arrived at the course. Sean went off to retrieve Raquel's clubs and make sure she had a good supply of golf balls. Raquel went in another direction to check in. She seemed to be constantly stopped, by other players and asked how Mark was doing and how lucky she was to get to work with Sean Connors. Sean, on the other hand was constantly being stopped by the other caddies, shaking hands and being told how great it was to meet him. He was even asked to give an autograph to a number of them.\n\nIt took them a little longer than anticipated to meet back up at the driving range.\n\nRaquel went through her normal warm-up routine. This routine wasn't designed to work on her swing, but only to loosen her muscles up and get into a positive groove. Sean stood by, dropping the next practice ball to be hit. The more he watched her, the more he was impressed with her. Her swing was technically perfect, he couldn't identify one flaw. Almost as equally important, it was a powerful and balanced swing. He loved the sound her swing made when the club head made contact with the ball. If she could get in the right \"head space\" she would be a force to be reckoned with.\n\nMaybe she didn't need a swing coach.\n\nAfter she felt her swing was ready to go, they moved over to the practice green. Sean continued to feed her golf balls while she hit a variety of chip, pitch and sand shots. Sean was starting to think this had the possibility of being a very good day.\n\nFinally, she moved to the practice putting green. By this time, there were a number of eyes watching them work as a team. She spent time getting a feel for the speed of the greens. The putts were running somewhat faster than yesterday. Sean pointed out a couple of things about the grass and how it could impact a putt.\n\nAs she was going through her routine, Sean noticed a TV crew approaching. He tried to stop them from speaking with Raquel, he didn't want anything to disturb her concentration. But she told him it was ok. The on the course reporter, John Garrison, first congratulated Raquel on her first round. Then he asked how Mark was recovering and the extent of his injuries.\n\nFinally, he asked, \"How does it feel to have the only caddy in the history of the game to be inducted into the Pro Golf Hall of Fame carrying your bag this week?\"\n\nRaquel was stunned, \"I'm sorry...Hall of Fame?\"\n\nJohn was equally stunned, \"You didn't know?\"\n\nSean interceded, \"Ok guys that's enough, Raquel needs to get ready for her tee time.\" He gently grabbed his shell-shocked player by the arm and moved her to a place they could talk privately.\n\nHe turned her face to him, \"Raquel, it's just me, Sean. I'm with you, you're my player.\"\n\nRaquel was looking through him and said to herself, \"No wonder everyone has been stopping me and telling me how lucky I am to have you on my bag. You're a freaking legend!\"\n\nSean sighed, \"I'm just a guy. I was good at what I did, like you are good at what you do. Together we're going to be great.\"\n\nHe made her focus on him, \"Do you trust me, partner?\"\n\nFinally, she came back to Earth, \"Yes...yes, I trust you.\"\n\n\"Ok, you've got five minutes before your tee time. Let's go spank this golf course and make it cry for its mommy.\"\n\nRaquel looked at him, \"Don't ever use that metaphor again.\" Then broke out in laughter.\n\nSean smiled, \"Sorry boss.\"\n\nThey reached the first tee. Raquel would be playing with Rosa and Stacy again. They warmly greeted each other and Sean. Idol worshiping time was over. Now it was time to play golf. Each had their own goals. Rosa needed to play better to even make the cut. Stacy was still in it, but already four strokes behind the leaders.\n\nRaquel had honors today. She retrieved her driver from Sean, took her three deep breaths, tee'd her ball, stood behind, lightly gripping her club and took two practice swings, imagining the ball sailing through the air. She took her stance, found her target, made two waggles and then took the club back. The results were almost identical as the day before, except she hit the ball five yards farther. She picked up her tee and handed her driver back to Sean.\n\n\"Great drive!\"\n\n\"Thanks, one down.\"\n\nHer approach shot to the green was also better than the day before. She stuck her ball about a foot from the hole, making for an easy birdie.\n\nThey reached the second tee box. \"Great job Raquel, remember fairways and greens.\"\n\nRaquel repeated, \"Fairways and greens.\"\n\nThe two were completely focused on each other and the golf course. They weren't mean to their fellow competitors, but there was no \"idle chit chat\" between players. For 18 holes they were in total sync with each other. Sean noticed pretty quick that Raquel was \"in the zone.\" He knew his job was just to stay out of her way.\n\nShe stayed that way until a miss-hit drive on the 16<sup>th</sup> hole. Almost immediately she was \"out of the zone.\" She was trying to cut the corner of the right dog leg and her drive didn't quite make it over the trees. It hit the last tree and dropped straight down into the deep rough. They walked up to her ball to determine if she even had a shot to the green. Even so, she was still over 200 yards from the green. Sean looked at the lie. It wasn't great, but it wasn't terrible.\n\nSean looked at the Raquel, \"Remember those low burners you were hitting yesterday afternoon, on the range?\"\n\nRaquel, \"Yea?\"\n\n\"What do you think about a low four iron with a fade?\"\n\nRaquel examined what she thought the shot would look like. \"If I don't get it to the fairway, I'm screwed.\"\n\nSean replied, \"But if you do and carry it to about 50 to 80 yards from the green, it has a good chance of rolling onto the surface. Worst case a chip and a putt for par.\"\n\nShe walked around a bit, looked to see if there were any other options and finally, \"Well, it's either we give it a try or I just chip out to the fairway and try to get the next shot close to make par.\"\n\nSean replied, \"I'm with you, whichever way you want to go.\"\n\nRaquel thought about it for another moment, then, \"What the hell, let's see what happens.\"\n\nSean said as he handed her the four iron, \"I believe in you Raquel. You can pull this off.\"\n\nShe went through her normal pre-shot routine, took a slightly open stance with her hands ahead of the ball. When she swung, she made sure she made contact, with the ball first and held the face of the club for as long as possible. The ball took off in a very low trajectory. It probably only got six feet above the grass, but she hit it as pure as she could, considering the lie. Both of them watched as the ball flight veered to the right, flew past the rough and landed on the fairway about 60 yards from the green. The ball then began rolling towards the green, straight at the flag. Her line was perfect, but her speed had some heat to it. Luckily, the ball hit the flag stick dead on and dropped into the hole for an eagle two.\n\nRaquel and Sean initially stood, stiff, in shock. The gallery went berserk and started screaming and yelling. Then Raquel and Sean looked at each other and jumped into a huge hug. As they walked up to the green Rosa and Stacy both gave Raquel a \"high five.\" Raquel walked up to the pin and took her ball out of the hole and acknowledged the enthusiastic applause from the gallery. It was then that she noticed it had grown considerably. Yesterday they may have had 20 people following them. Today it was more like a 100.\n\nThe 17<sup>th</sup> hole was a routine par. The 18<sup>th</sup> was a great finishing hole, par 4, 420 yards, dogleg right. The lake that was behind the 9<sup>th</sup> green, hugged the right side of the 18<sup>th</sup> all the way to the green. It had already claimed a large number of balls in the first two days. Two large fairway bunkers guarded the left side. The green was protected by the lake on the right and a large sand trap on the left. To make matters worse, shots hit too deep into the green rolled off the back side into the secondary cut. All in all, it was a monster of a hole. Sean liked slaying monsters.\n\nRaquel had two choices. She could hit a fairway metal off the tee and take the fairway bunkers out of play. But that would result in a long iron or hybrid to the green. The second choice was to hit her driver at the first bunker with a fade back to the fairway. The risk was not getting the fade and ending up in the bunker or too much fade and ending up in the lake. Both would result in a bogey or worse.\n\nWhere Sean wanted to gamble on the 16<sup>th</sup> hole, he had enough confidence in Raquel's long irons to play this one conservatively.\n\nRaquel spoke first, \"I think there is too much that can go wrong if I hit driver. What do you think about me hitting a 3 metal and then a long iron into the green?\"\n\nSean smiled, \"I was thinking exactly the same thing. You're hitting your long irons so good, that's not much of a gamble.\"\n\nHe handed her the 3 metal. She hit it straight as an arrow about 245 yards from the tee, leaving her 200 yards to the hole. She then hit a 4 iron to the middle of the green, leaving herself about a 30-foot putt for birdie. Her birdie putt missed the cup, just on the high side of the hole, leaving Raquel a tap-in for her par.\n\nFor the first time today, Sean and Raquel looked at the leaderboard. J.T. Lee played in the morning and was -10 for the tournament. Raquel had a two shot lead at -12 under par.\n\nShe looked at Sean, \"I shot 63 today?\"\n\nSean, \"Yep, check your scorecard.\"\n\nShe was still in shock, \"I'm playing in the final group tomorrow?\"\n\nSean, \"You earned that spot. Embrace it.\"\n\nRosa and Stacy finished their putts. Unfortunately, this would be the end of Rosa's tournament. She gave Raquel a huge hug, congratulated her on a great round of golf and wished her the best over the weekend. Raquel, told her there would be other tournaments and that she just had some bad luck.\n\nStacy shot a 71 again and was -2 for the tournament. She made the cut by one stroke. She and Raquel gave each other a \"professional\" hug and wished each other luck. Fist bumps around for the caddies...except. Rosa gave Sean a huge hug and told him to take care of \"her girl.\" He promised he would.\n\nAs Sean and Raquel walked off the 18<sup>th</sup> green, the TV crew appeared. John Garrison had followed her all day. But this time he walked up to Sean.\n\n\"Sean, do you have a moment?\"\n\nSean was stunned. Caddies don't get interviewed. \"John, you should be talking to Raquel.\"\n\nJohn was persistent, \"But we want to talk to you.\"\n\nNow Sean was irritated, \"John, Raquel just shot a nine under par 63. It's the lowest score she's ever had in a professional tournament. Hell, it's the lowest score of this tournament. Don't you want to ask her about it?\"\n\nJohn responded, \"We want to know how a Hall of Fame caddy got that round out of her.\"\n\nNow Sean was getting pissed, but knew he couldn't show it. \"John, I didn't get anything out that wasn't already there. Raquel Simmons is an amazing young talent and an incredible human being. Maybe you should get to know her, instead of talking to an old retired caddy.\"\n\nSean started to walk away, then stopped and turned around, \"You want a forecast from a quote Hall of Famer? She's going to be the best player in the world, someday.\"\n\nWith that Sean walked off. What he didn't realize is Raquel heard every word.\n\nThe TV crew tried to pivot to Raquel, but she was already chasing after her caddy. She caught him heading towards the club storage area.\n\n\"Sean...wait.\"\n\nSean stopped and faced Raquel, \"I'm sorry that happened. They should have...\" He didn't finish the sentence because Raquel had her arms around him and was passionately kissing him. Although very surprised, he enjoyed the hell out of it. He couldn't really hug her like he wanted because he was still carrying her bag. But, he did kiss her back, just as passionately.\n\nShe finally let go of him. She was embarrassed, \"Oh Sean, I am so sorry. I should have never...but the things you said...I just couldn't help it. Did I fuck things up between us?\"\n\nSean smiled, \"Raquel relax, you didn't screw anything up between us. I'm sorry I got pissed at John, but he should have talked to you.\"\n\nRaquel and Sean split up, Raquel went to sign her scorecard and Sean, to put her clubs to bed. When he got back to the clubhouse, he saw John having a private moment with Raquel. She didn't appear to be under any stress, so he just waited. Eventually, John walked away. Raquel still didn't see Sean and walked over to a group of young fans. She chatted amicably with each, laughing and signing autographs. This was one aspect Sean loved about the ladies tour versus the men's. All the professional golfers are encouraged to \"mingle\" with the fans, especially the young ones. The vast majority seem to embrace it. Personally, Sean thought it kept them \"grounded.\" Anyway, the intimacy between the player and the fan also tugged at his heart. Sean quietly hoped they never lose it.\n\nSean walked a little closer and eventually she saw him and waved him over. She was talking to a couple of young girls and their parents.\n\nRaquel introduced Sean to the group. She then put her hand on one of the young girl's shoulder, \"This is Emily. She's 11 and already has a 9 handicap.\"\n\nSean laughed and said, \"Well then, you'd better win as much as you can before she gets out here.\"\n\nThe group joined him in laughter.\n\nOne of the fathers stepped forward and extended his hand to Sean. \"Mr. Connors, my name is Wayne and I was a huge admirer when you caddied on the tour.\"\n\nSean shook his hand, \"Well thank you Wayne, I really appreciate that. Which one of these young future pros is yours?\"\n\nEmily smiled, \"That's my daddy!\"\n\nSean smiled back, \"You seem to be doing a great job with this one Dad. Keep at it. I look forward to seeing her out here tearing it up like Raquel did today.\"\n\nThe group all agreed, Raquel did in fact \"tear it up\" today.\n\nThey said goodbye and headed to the parking lot.\n\nAs they walked to the parking lot, Raquel told Sean about her conversation with John Garrison. He apologized for not talking to her after her great round. He also asked her to extend his apologies to Sean. Raquel thought he was sincere.\n\nOnce in the rental, Sean asked, \"What do you say we go change and then go out for a nice dinner? And don't worry about your budget, it's on the sports apparel company.\"\n\nRaquel answered, \" Well in that case, I would love too.\"\n\nDuring the drive, Raquel called Mark, on speaker phone, to see how he was doing. Mark just went on and on about Raquel's round. At one point he suggested it was because of Sean.\n\nMark stopped and got quiet. Then he asked, \"Shit sis, does this mean I'm fired?\"\n\nSean laughed, \"I was only able to contribute because of the great job you did with the notebook. Don't worry Mark, your job is safe.\"\n\nRaquel added, \" I think that's the drugs talking. You're not going to get rid of me that easily bro.\"\n\nEventually, Raquel told Mark to get some rest and she would call him tomorrow.\n\nOnce at the hotel, they agreed to meet in the lobby in 30 minutes and went to their separate rooms. Sean knew he was juggling a lot of balls and the kiss had complicated things. He decided the best thing was to complete the primary mission and why he originally came to the tournament. Sean, took a quick shower, brushed his teeth, put on some deodorant, cologne and drug a brush through his hair. He changed into a pair of dress pants, light blue button down shirt and dress shoes. He grabbed a folder off the desk and made his way down to the lobby.\n\nRaquel was still thinking about the kiss when she changed clothes. She removed her golf shirt and sports bra. Her large breasts finally had a chance to breathe. Then she removed her shoes, skorts and compression underwear. She wore them to keep cool. Raquel stood before the mirror and critically examined herself. She was a healthy, vibrant 24 year old female. He was a handsome, likable, but older man. With her hands on her hips, she decided if he was interested in pursuing a more intimate relationship, she was as well. Screw the age difference. Sean said a \"nice dinner,\" she did have that little black party dress.",
        "Sean again arrived in the lobby before Raquel. Again he didn't have to wait long. He saw her exit the elevator and his eyes never left her as she walked up to him. She was wearing a black, form fitting, dress that stopped about three inches above her knees and was strapless. The other thing he couldn't help but notice was she had huge, beautiful breasts and long gorgeous legs. She was the most exquisite women he had ever laid his eyes on.\n\nRaquel leaned in a whispered, \"You can close your mouth now.\"\n\nSean whispered back, \"My mouth is the least of my worries. You are the most beautiful and sexiest creature I've ever seen.\"\n\nShe smile, \"You're only saying that cause I let the girls free.\"\n\nSean smiled, \"I wouldn't say it was the only reason, but thank you for freeing them. That little black dress is just...Wow!\"\n\nRaquel blushed, smile, and leaned into Sean for a light kiss, \"Thank you. And may I say you're looking good enough to eat.\"\n\nSean, blushed bright red and then thought for a second, \"Would you be offended if we took care of a little business before dinner.\"\n\nRaquel was mildly surprised, \"Sure, if you think it's important.\"\n\nThey found a quiet place to sit. Sean took a document out of the folder and handed it to Raquel.\n\n\"Would you please read this. If you had any questions, I'll be more than happy to answer them. And take your time.\"\n\nThe title on the document was \"Sponsorship agreement between Raquel Simmons and the Sparta Apparel Corporation.\" She took her time reading the three page document and gasped when she read the compensation section.\n\nShe looked up at Sean, \"They want to pay me two million dollars over the next two years?\"\n\nSean smiled, \"Yes, you will essentially become the face of Sparta Apparel.\"\n\nIt's a good thing she was sitting down. She further read through the commitment portion of the agreement.\n\n\"When will I have time for all these commercials and appearances?\"\n\nSean was still smiling, \"They'll work with your tournament schedule. They're not in a huge hurry to take up your time. They want you to concentrate on your golf.\"\n\nShe read the document, carefully, over again, just to make sure she didn't miss anything.\n\nThen she asked, \"What about my current two sponsors?\"\n\nSean replied, \"If you give me their contact information, I'll have them send over their logos to be included on your shirts or hats.\"\n\nShe didn't have any more questions. She firmly believed Sean wouldn't give her something that wasn't in her best interest, even though he represented the company in this agreement.\"\n\n\"Do you have a pen?\"\n\nSean gave her one more out, \"Do you want to sleep on this or have another attorney look over it?\"\n\nShe thought for a moment, \"Why are you giving me this now? I thought you wanted to wait until the tournament was over.\"\n\nSean blushed, \"I may be misreading things, but our kiss, at the course, suggested there is more here than caddy/player or attorney/client or me representing Sparta. I thought it was best to get Sparta out of our way.\"\n\nNow Raquel blushed as she signed the agreement.\n\nSean took back the document, reached back into the folder and handed Raquel a check.\n\nNow her mouth was agape, \"I've never seen a million dollar check before! Especially not one with my name on it.\"\n\nSean picked up his phone and dialed a number, then put it on speaker. \"Good evening Phil, I'm here with Sparta's newest ambassador, Ms. Raquel Simmons.\"\n\nPhillip Montgomery, Sparta's founder and CEO was elated. \"Congratulations Ms. Simmons! I'm so pleased you've decided to become part of the team! By the way, that was one helluva round of golf today.\"\n\nRaquel was smiling, \"Thank you Mr. Montgomery. I'm excited to be affiliated with Sparta Apparel!\"\n\nSean added, \"We were just headed out to dinner, on you, but thought you'd like to hear the good news.\"\n\nPhil added, \"Please call me Phil. May I call you Raquel?\"\n\n\"Of course you can Phil.\"\n\nPhil continued, \"If it is ok with you, I'll send down a couple of our folks to get your measurements, specific tastes...etc.\"\n\nRaquel was all smiles, \"That works for me Phil.\"\n\nSean wanted to wind this up, \"Phil, after tonight, that will conclude our business. I'll fax you a copy of the agreement and certify mail the original, along with my final bill and expense report, which by the way, will include a very expensive dinner tonight.\"\n\nPhil laughed, \"You kids enjoy yourself and once again Raquel, I'm so happy you've decided to join us.\"\n\nAt dinner, Sean tried very hard not to stare at the front of Raquel's party dress, which exposed a great deal of cleavage. Every time he caught himself looking, he shot his eyes up to her smiling face.\n\n\"Sean, I don't mind you looking. This dress was actually designed to draw everyone's eyes to my boobs, well and legs too. I wore it for you, that should tell you something. Just try to look at my eyes every now and then.\"\n\nSean was embarrassed, \"I'm sorry Raquel, I should have better control, but they're just...magnificent.\"\n\nRaquel replied, \"They can be a serious pain in the ass when trying to swing a golf club.\"\n\nSean was shocked, \"I wouldn't change a thing about your swing. Any weakness you may have, and it isn't much, is not in your swing or your boobs, it's negativity between your ears.\"\n\nSean, \"But I could probably make the same statement about 75% of the professional golfers.\"\n\nRaquel quipped, \"You mean they all have big boobs too?\" She started laughing.\n\nThat broke the ice. The rest of dinner was light and fun. At one point Raquel asked Sean why he wasn't married. She immediately saw the sadness appear and instantly regretted asking.\n\nSean finally spoke, \"It's ok. I was in love, a long time ago. She was killed while deployed in Iraq.\"\n\nRaquel wanted to cry and reach out and hold him, \"Sean, I am so sorry.\"\n\nSean replied, \"Thank you Raquel, that was a long time ago. I was caddying for Eldon Forester at the time. If it hadn't been for El, I don't think I would have survived that period. Jill was a Marine and died in 2004. El became the number one ranked golfer the next year. I poured myself into him and being his caddy. We had a great run between 2005 and 2010. He won 40 tournaments in that stretch. Think about that, he averaged eight wins per year for five years. I started calling him Cal-El because he was doing something that only a Superman could accomplish. He's the one who taught me the secret how to win.\"\n\nRaquel was intrigued, \"Do tell.\"\n\nSean smiled, \"You already know, we did it today. El always told me the two keys to stroke play. Firstly, never play against your opponent. The golf course is what you have to beat, not the other players. The second secret is the ability to forget the last shot. Your whole concentration must be on the shot you're making, not the one you've already made and not the one you'll play after. The golf commentators use to talk about how El could protect a lead or surge from behind. He never did any of that, he only tried to slay the golf course.\"\n\nRaquel added, \"He mastered the art of playing in the moment.\"\n\nSean nodded, \"Yep.\"\n\nSean became somewhat somber as he thought about those years. He'd always wondered if he ever moved on or if caddying just provided an escape from dealing with grief. He ultimately had to face his loss. It just happened at a surprising time.\n\nSean started just talking, \"Focusing on El and finishing law school didn't allow for any time to grieve. I finally retired in 2011 when I passed the bar. Then I was focused on establishing my practice, still avoiding the grief. The thing about loss, it will wait for you. Everyone has to grieve whether they want to or not. My time came crashing down on me the day I learned I had been voted into the Hall of Fame. When I got the news, all I could think about was Jill. I think I cried for two days. Again El was there for me. I owe him a lot. Being inducted was very much bitter, sweet.\"\n\nWhile Sean recalled a very painful time, Raquel had reached across the table and held his hand. When he finally stopped talking, he look at Raquel's tearful face.\n\n\"Raquel, I am so...so sorry. You didn't need to hear my story of woe on a day we should be celebrating you.\"\n\nRaquel took a napkin and wiped her face, \"I'm not sorry you shared your story with me. It does explain why you avoid the whole Hall of Fame celebrity status.\"\n\nIt was a quiet ride back to the hotel. There might have been a moment when they would have shared a hotel room this night, but the conversation changed the mood. Sean did walk Raquel to her door. Outside her door, he brought her into a warm embrace and kissed her deeply.\n\n\"Goodnight Raquel. Same time tomorrow?\" Sean asked assuming she knew he meant brunch.\n\nRaquel was debating with herself whether or not to invite him in. \"Um...sounds great. Goodnight Sean and thank you for everything.\"\n\nSaturday -- Round Three -- Moving Day\n\nSaturday morning was a repeat of Friday for Raquel and Sean, with one exception. Sparta Apparel sent a team to outfit Raquel for the remainder of the tournament. There would be a major announcement on Monday celebrating Raquel joining the team. But Saturday was quick and easy, take measurements, provide some options and get out of her way. Today she wore fashionable red slim lined pants that stopped above the ankle. Her shirt was a white light golf shirt.\n\nRaquel went through her normal warm up routine. Sean was pleased that she seemed relaxed, yet focused. Sean also noted a little more wind than yesterday. When Raquel moved over to the putting green, Sean walked over to the 18<sup>th</sup> green and watched a couple of the early finishing groups. He noticed two things, approach shots were running more and putts were noticeably faster than earlier in the week. The greens seemed to have dried out from the rain. The wind helped accelerate the drying process. The changing wind and green conditions would make this a very different golf course than on Thursday or Friday.\n\nThey had a little time to talk before reporting to the first tee.\n\nSean asked, \"Notice any difference in the speed of your practice putts?\"\n\nRaquel, \"Some, they're a little faster.\"\n\nSean, \"The greens on the course may be even a bit faster. The wind has dried them out. They're not holding as well either. I guess the course didn't like you shooting 63 yesterday and its mother nature's way of saying fuck you.\"\n\nRaquel laughed, \"You really get into this slaying the golf course stuff.\"\n\nSean looked deadly serious, \"It's the only way you'll win tournaments. J.T. Lee is not the enemy, this golf course is. She understands that, so should you.\"\n\nRaquel backed off, \"Ok...Ok, I get it...J.T. good, golf course bad.\"\n\nSean smiled, \"That's my girl. Now let's go out and give it a good ole Texas ass whoopin.\"\n\nRaquel joined, \"And make it run home crying for its daddy.\"\n\n\"Oh, so metaphors about dads are ok, but moms are a no...no.\"\n\nRaquel just laughed.\n\nGreat rounds are rarely followed up by great rounds. J.T. Lee was #1 because she was consistently good. She shot 67 -- 67 Thursday and Friday. Raquel shot 69 -- 63. Sean was keenly aware of how difficult it was to follow up a 63 with another good round. But he had faith in Raquel. Who knows, if Mark hadn't injured himself, she may have shot a 68 or better on Thursday. All he had to was keep her focused and in the moment.\n\nThe first hole was going to be a great test. It had been pretty easy, the first two days, as evidenced by the two birdies she made. Today there was at least a one club wind against them, so it was going to play longer. Plus the tour moved the tee back, making it 420 yards long.\n\nRaquel hit another good drive, but it went 270 yards, not the 290 plus yards she enjoyed on Thursday and Friday. Instead of a 100 yard wedge, now she was looking at 150 to the middle of the green with an unhelpful breeze. She knew she wouldn't get the backspin with a 7 or 6 iron. The pin was on the front left portion of the green. Sean referred to Mark's notebook and calculated they were 140 yards to the front of the green. She and Sean decided to hit the 7. Again, she hit a gorgeous shot. The wind predictably held the ball up and it hit the front center of the green. That portion of the green sloped to the right. Raquel didn't quite get it on the right level and it rolled to the right side of the green, about 35 feet from the hole. She lagged it within three feet of the cup and knocked in her short putt for par.\n\nIt was a fight the whole day. Between the wind, the firm greens and pin locations, the golf course put up a great defense. At the end of her round Raquel was dead tired. She had truly played her heart out. She happily avoided the \"big numbers\" although she carded two bogeys. Sean was much more engaged than the past two days. His help with reading putts kept Raquel from having any three putts. An eagle on number nine was due to his remarkable read of a double breaker, downhill, 25 foot putt.\n\nWhen her putt dropped on the 18<sup>th</sup> hole, Raquel was still one shot ahead of J.T. Lee. This would mark not only the first time she had a 36 hole lead but also a 54 hole lead. Raquel shot a four under 68 and J.T. had her third consecutive 67.\n\nThe surprise of the day came from the Scot, Megan Hall. Megan grew up playing links course like the Old Course at St. Andrews. Fast, firm greens and wind were her friends. She possessed the skill to slay the beast. Megan ended the day, equaling the tournament low round of 63 and was in a tie for second, one shot behind Raquel.\n\nJohn Garrison was waiting for Raquel just off the 18<sup>th</sup>. \"Another great round Raquel. How was it out there today?\"\n\nRaquel smiled, \"It was a completely different course than the first two days.\"\n\nHe asked her about what was happening on various holes and shots. Raquel was honest and candid but also kept to standard responses like, \"playing one shot at a time,\" and \"playing within myself,\" etc.\n\nJohn finally asked the question everyone wanted to know, \"How is it to work with Sean Connors?\"\n\nRaquel hesitated, then, \"I miss my brother, but I'm very thankful Sean stepped forward. He's been a lifesaver.\"\n\nJohn wrapped it up with, \"Thank you for your time Raquel and good luck tomorrow.\"\n\nHe then turned to J.T. Lee. The Korean superstar was very complementary towards Raquel. She said she enjoyed the battle between them. This was also a \"stock\" answer, J.T. didn't become #1 by playing against her opponents. She also knew the real competition was between her and the golf course.\n\nRaquel walked off the 18<sup>th</sup> green looking for Sean. She spotted him talking to another man. As she approached, they shook hands and then parted.\n\n\"Who was that guy?\"\n\nSean responded, \"His name is Chip Stevens. He's one of the members here. We need to talk, later.\"\n\nRaquel was intrigued, \"Ok.\"\n\nAfter Raquel signed her scorecard and Sean put her clubs to bed, they headed towards the parking lot. When they were buckled into the rental, Sean said, \"Think Mark is up for a couple of visitors?\"\n\nRaquel smiled, \"I think he'd like that a lot. Thank you.\" She reached over and touch Sean's arm.\n\nMark was watching a basketball game when they walked into his hospital room. He immediately turned the TV off when he saw them.\n\n\"There's my superstar sister! Another great round today!\" He was more himself today.\n\nRaquel leaned over his bed and gave him a warm hug. \"Hey big brother. How are you feeling today?\"\n\nMark responded, \"I'm great. They're discharging me tomorrow. I had a visit from the nicest young lady from Sparta Apparel today. They're arranging for my flight home to Dallas.\"\n\nRaquel was quite surprised and looked at Sean. \"Did you have something to do with this?\"\n\nSean smiled, \"Maybe just a little. It was more Phil's idea.\"\n\nThen Sean got serious, \"Mark do you feel up to talking about your accident?\"\n\nRaquel and Mark looked a little surprised. Mark responded, \"Uh...yea I'm good.\"\n\nSean continued, \"I'm not sure Raquel told you, but the country club wanted her to sign a document that absolved them of any liability for your injuries. She retained my services to represent her. I can also represent you, if that is your wish.\"\n\nMark looked confused, \"Are you a lawyer? I thought you were just a famous caddy.\"\n\nSean smiled, \"You said that like it's a bad thing. Yes, when I retired, I dropped my standards and became an attorney. Most of my clients are either professional athletes or corporations that support professional sports.\"\n\nMark was a little red in the face, \"Sorry man, I didn't mean it like that.\"\n\nSean chuckled, \"It's ok Mark, no offense taken. But back to the subject at hand. I have reason to believe, the club knew that hill was a danger and had failed to take the necessary precautions to make it safe.\"\n\nRaquel asked, \"Is that what you were speaking to Mr. Stevens about?\"\n\nSean replied, \"Yes, Chip and several other members are very concerned about how Longmeyer has been running the club. He asked me if I would provide a copy of the document Longmeyer wanted you to sign and give him a couple of days.\"\n\nRaquel was a little nervous, \"But, I told Mr. Longmeyer I'd return the document before the end of the tournament.\"\n\nSean smiled, \"Please allow your attorney to worry about Mr. Longmeyer. My question, to both of you, is what do you want to see come of this situation?\"\n\nMark thought for a moment, \"I guess, if that hill was a known danger, I'd want the club to pay for my medical bills and rehab. Also, maybe lost compensation.\"\n\nRaquel, \"Mark, you're not losing any compensation this week. Sean only agreed to caddy, if you received your portion of the winnings.\"\n\nMark was definitely surprised, \"Sean, that's more than generous of you. You carried her bag, you should get paid.\"\n\nSean smiled, \"I'm on Sparta's dime this week. Don't worry about me.\"\n\nRaquel looked at Mark, \"I signed a two year sponsorship with Sparta, yesterday.\"\n\nSean added, \"I talked to the CEO today about offering you one as well. I told him caddies have been left behind for too long. Granted it won't be quite as lucrative as Raquel's. The company is excited and is very interested in working with you to design a new line of caddy wear that can also boost their hiking apparel line.\"\n\nMark was in shocked. Raquel laughed, \"You can close your mouth bro.\"\n\n\"Now back to Longmeyer, you want medical bills and physical therapy...correct?\"\n\nMark was still in shock, \"Yea.\"\n\n\"And Raquel, what do you want?\"\n\nRaquel responded, \"I want the hill made safe.\"\n\nShe paused, \"And I want you on my bag until Mark is completely healed.\" She wouldn't make eye contact.\n\nSean thought, \"How about the club making a generous donation to girls youth golf?\"\n\nRaquel brightened up, \"Oh, that would be wonderful!\"\n\n\"I'll draw up the proposal, have y'all look at it. Once you approve, I'll present it to the club. You haven't asked for anything unreasonable so I don't believe they'll be any pushback.\"\n\nRaquel averted her eyes again and asked, \"What about you being my caddy?\"\n\nSean smiled, \"Under one condition.\"\n\nBack at the hotel, they decided to go up to Sean's room, order some room service and work on the proposal. It only took Sean about an hour to bang out a draft.\n\nAfter work and dinner, Raquel and Sean sat down on the sofa and relaxed. Raquel had removed her shoes and socks and propped her bare feet up on the ottoman.\n\nRaquel audibly sighed, \"Oh it feels good to finally relax. My feet are sooo sore.\"\n\nSean smiled, \"Here turned around and allowed me to rub them.\"\n\nRaquel looked at him, \"Really? You'd do that?\"\n\n\"Yes ma'am and love every minute.\" He beamed.\n\nShe didn't wait for him to change his mind. Raquel swung her feet in Sean's lap and laid on the pillow at the opposite end of the couch. He started by gently working on her right foot. He rubbed her instep and the top of her foot.",
        "Raquel moaned, \"Oh god! I can't begin to tell you how good that feels.\"\n\nSean was still smiling, \"Good, now just relax and let me work.\"\n\nHe took his time, he rubbed her instep, her heal, her ankle and each toe individually. Then he changed to her left foot and repeated. Somewhere into her left foot, Raquel's breathing became heavy and Sean looked to see her peacefully asleep. He knew the round today was physically and mentally taxing. She needed a good nights sleep, but not on the couch. Sean picked Raquel up and carried her to the bedroom. He laid her onto his bed. He gently removed her pants, but left her underwear on. Then he took her shirt off. He thought for a moment whether or not to remove her sports bra. He knew she would be more comfortable without it, but he didn't want her to think he had taken advantage of her. In the end he decided to leave it on. Before he covered her up, Sean stood back and admired her beauty. She was physically beautiful, but he knew her beauty extended to her soul. Sean sighed and then covered Raquel up, turned off the light and called the front desk for another set of sheets, blanket and pillow. They were promptly delivered and Sean used them to make the couch into his bed. He found it more comfortable than he expected.\n\nSometime during the night Raquel woke up. It took a few minutes to figure out where she was. She got up to use the bathroom and was surprised to still be wearing her bra and underwear. After relieving herself and washing her hands, she removed her bra. It felt a thousand percent better now that her breasts were free from their constraints. Before she went back to bed, she went into the living room and found Sean sleeping on the couch. She bent over and gave him a kiss, never considering that he would see her topless if he woke up. Then she returned to the bedroom and was out as soon as her head hit the pillow.\n\nSunday -- Round Four -- Final Round\n\nSean woke up to the smell of hot coffee. He opened his eyes and Raquel was sitting on the ottoman holding two styrofoam cups.\n\nHe stretched and yawned, \"Is one of those by chance for me?\"\n\nRaquel smiled, \"Yep...one sweet and low, no cream.\"\n\nSean sat up, \"Perfect. Thank you.\"\n\nSean didn't have a shirt on and Raquel noticed. Boy did she notice. How could a guy approaching 50 still look so good? Nice six pack, pecs, and arm muscle tone. She looked up to a bright smile.\n\nShe blushed with embarrassment.\n\nSean, \"My bad, I didn't wear a shirt to bed, so it's ok for you to gaze upon this elderly body.\"\n\nRaquel bent down and gave Sean a searing kiss. Sean tried like hell not to spill his coffee and returned the kiss.\n\nWhen they finally broke the kiss Sean exclaimed, \"Wow, best wake up call ever.\"\n\nShe was still blushing, \"You have an incredible body.\"\n\n\"Thank you Raquel, I'm very happy you like it, because I'm becoming very fond of yours as well.\"\n\nSean paused and then said, \"But we need to table this for now. We have one more round of golf to play.\"\n\nRaquel noticed he didn't say, \"We have a golf tournament to win.\"\n\nSean had a lesson in the \"theory of control\" during his psych class in college. The thinking was there are things in life we have complete control over, things where we only have partial control over and finally things we have absolutely no control over. The problem with most people is, they spend their energy on the things they either have no control over or only partial control. If people would focus on the things they control and not worry about those they do not, they would be happier, more successful and suffer less stress.\n\nA golf tournament is a perfect lesson in this theory. The golfer has no control over the course itself, the layout or condition. Further, the set up is out of their control, tee boxes and pin placements. Add in absolutely nada control over mother nature, temperature, humidity, wind and precipitation. One player, in stroke play, can't control how another golfer plays unless the other player gets into her head. Finally, the golfer has zero control over \"luck.\" Unlucky lie in a fairway divot, buried bunker shots, bad bounces, or even the good bounces (also known as members bounces).\n\nThe golfer only has control over herself. She controls her swing, her emotions and her thought processes. Once the ball leaves the face of the club, she no longer has any control over the outcome.\n\nSean can't control Raquel's swing, but he could help with her emotions and thought processes.\n\n\"Raquel, if you focus on the outcome, I can assure you, you'll be disappointed. We need to stick with our game plan. We play the course. If at the end of the round, you have the lowest score, we win. If not, we don't. Let's just try not to leave anything on the course and then we won't have any regrets. Deal.\"\n\nRaquel thought for a moment, then smiled, \"Deal, partner.\" She stuck out her hand.\n\nSean gently grabbed her hand and shook it.\n\nThey kept their routine as close to the last two days as possible. The TV station didn't attempt any interviews. There was, however, a noticeable feel of tension in the air. That is everywhere except around Raquel and Sean. They were smiling, laughing, and amicably talking, while they warmed up. To the uninformed observer, it looked like they didn't have a care in the world.\n\nHere's the rub about professional sports. The athlete wants to win. Legendary NFL coach, Vince Lombardi said, \"Winning isn't everything, it's the only thing.\" To many pros coming in second just means you're first loser. The problem with golf is, the course couldn't give a shit if you won or lost. And when your opponent doesn't care either way, all the pressure is on you.\n\nSean's job was to help manage that pressure and to use it against the golf course.\n\nSome days the course lends itself to an all out assault. Somedays it puts up an impenetrable defense. The difference is usually found in course conditions, weather conditions and pin placements. The course this day was in perfect condition, tough but fair. Although the greens were significantly faster, they putted true. The secondary rough was long, but not unmanageably long. The fairways were like plush carpet. The wind was similar to Saturday. All in all, patience was the playbook of the round. Some holes could be attacked and other had to be carefully navigated.\n\nThat's exactly how Raquel and Sean managed the round. Sean was impressed with Raquel's control and discipline. He counted a total of five shots that weren't hit perfectly all day. That doesn't mean the results were perfect. Some shots were hit exactly as intended, but the wind intended something else. Or the ball missed its mark by a foot or so and the slope of the green moved it away from the hole. But all in all it was a solid round of golf.\n\nOn the 18<sup>th</sup> tee box, Sean looked at the leaderboard for the first time today. Raquel felt the 3 metal off the tee was the correct shot. J.T. hit her driver and placed in the dead center of the fairway. That made Raquel question her decision. Sean reminded her of the number rule in golf, \"the first choice of clubs is usually the correct choice.\" She striped her three metal to the middle of the fairway, about thirty yards short of J.T. The pin was located on right side in the back portion of the green. The location brought the lake into play. Hit it too far right or fade it too much and you'd have to drop the ball a 100 yards back to hit your fourth shot (in the water in two, out in three, hitting four).\n\nRaquel told Sean she was going to hit her five iron to the front third of the green, hoping for it to then roll to the back portion of the green. She hit the shot just as designed. The ball hit the green, pitched forward and began rolling. It came to a stop six feet from the hole.\n\nJ.T. was next to play. She hit an aggressive shot, at the pin. Unfortunately, it was too aggressive. The ball landed on the green, to the right of the pin. That side of the green sloped towards the lake. The golf gods decided to be cruel to the best player in the world. J.T. watched helplessly as her ball, rolled off the green and splashed into the water. There was nothing she could do, but walk to the \"drop zone\" and hit her fourth shot, which came to a stop about 15 feet from the pin. If she made that putt, it would be for a bogey five.\n\nSean walked up to Raquel and whispered, \"Congratulations on your first win.\"\n\nRaquel snapped her head towards Sean, disbelieving what he just said.\n\nThey started walking towards the green. Sean was smiling, \"You were both tied on the tee box. If J.T. makes her putt, you have two putts to win.\"\n\nThe crowd around the green erupted into a thunderous applause as Raquel and Sean walked up to the green. Raquel acknowledged the cheers and was smiling ear to ear.\n\nJ.T. also received an enthusiastic greeting, acknowledging a hard fought tournament. She lined up her bogey putt, made her stroke and just missed on the low side. A very unfortunate double bogey.\n\nMegan, who played in the twosome ahead of them didn't play nearly as well as on Saturday and was no longer a factor.\n\nNow Raquel had three putts to win. As they had all day, both Sean and Raquel discussed the line, grain, slope and speed. When they agreed on the target Sean backed away. Raquel took a breath then smooth stroked the putter and again didn't watch the ball but listened to the familiar sound of it dropping into the cup. A birdie and a three stroke win.\n\nIn a single instance Raquel realized what she had just accomplished. She looked at Sean, both raised their arms high into the air, and screamed, \"YES!! We did it!\" They both embraced in a celebratory hug. When they separated, Raquel had tears of joy running down her eyes.\n\nRaquel then approached a very gracious J.T. and the two professionals embraced. J.T. whispered her congratulations and Raquel told her she was still number one. It was the beginning of a friendship that would last the rest of their lives.\n\nJ.T. then gave Sean a hug and asked if his caddy services were available. He humbly replied he was booked with Raquel until Mark returned.\n\nJ.T. looked at Sean, \"I guess I need to practice harder then.\"\n\nSean just smiled.\n\nThe TV crew was waiting for Raquel when she walked off the green.\n\nJohn began, \"Congratulations Raquel on your first WPGL victory. How would you characterize today?\"\n\nRaquel, still crying, replied, \"It was a hard fought round. Any one of us...me, J.T. or Megan could have won. I was just the fortunate one to come out on top today.\"\n\n\"Does Sean Connors deserve any of the credit today?\"\n\nRaquel smiled, \"Of course he does. All of the caddies share our victories as well as our defeats. Sean was fantastic to work with. He has a way of keeping me focused and bringing the best out.\"\n\nJohn replied, \"Do you realize Eldon Forester said the exact same thing about him?\"\n\nRaquel, \"No, but I'm not surprised.\"\n\nThe interview continued for a little longer, talking about her best shots, challenges the course presented, etc. The interview was finally concluded and Raquel went to sign her scorecard and officially claimed her victory. Raquel received the trophy and a first place check in the amount of $262,000. Sean quietly noted that was a far cry from the $1.1 million for a non-major first place check on the mens tour.\n\nAfter all the ceremony, congratulatory hugs and handshakes, it was time to leave. Sean had already made Raquel's golf clubs travel ready in a hard plastic travel case with the Sparta logo on the side. They decided to stay one more night and deal with the country club in the morning. Sean had given Chip Stevens a copy of Longmeyer's release plus Raquel and Mark's counter proposal before the final round. They had an appointment with the club's board of directors in the morning.\n\nBefore they left, Raquel called Mark to let him know that she would be depositing thirty thousand dollars into his bank account. He complained that it was greater than the 10% customarily paid to a caddy for first place. Raquel told him to shut up, get well so he can get back on her bag and she loved him.\n\nJust before he hung up Mark said, \"I'm super proud of you sis. Mom and dad are too. We all love you.\"\n\nOnce in the rental Sean asked Raquel, \"What are you interested in eating tonight?\"\n\nShe snuggled up to his side and wrapped her arms around his right arm. \"What do you think of room service?\"\n\nSean put his hand on her leg, \"I was hoping you'd say that.\"\n\nThey barely made it to the room before they were all over each other. The several days of pent up sexual tension plus the \"high\" of winning the tournament had their emotions at a peak. Under normal circumstances, their love making might have been tender and slow. However, in their emotional state plus neither one of them having sex for a very long time, resulted in each other trying to fuck the life out of the other.\n\nThat was how they would describe the first go around. After their high intensity love making, resulting in blissful orgasms, they ordered room service. Raquel surprised the waiter by unintentionally walking out of the bedroom, naked, while delivering the food. She had been in the bathroom and didn't hear him knock on the door. When Sean offered a tip, he graciously declined saying that he had already received a gift.\n\nWhen he finally left, both Raquel and Sean looked at each other and broke out in laughter.\n\nThey made love two more times that night. However, they took their time, exploring each others bodies, what turns them on, and what just feels good. It was tender, intimate and satisfying.\n\nAt one point in the evening Sean noted it was much more enjoyable to celebrate a win with Raquel versus Eldon. She just laughed and stroked his hard cock.\n\nThey fell asleep in each others arms. Neither knew what the future would bring, but both ready to see where it leads.\n\nEpilogue -- Monday -- A New Week\n\nTheir appointment with the board of directors for the country club was scheduled for 9 am. Sean and Raquel were asked to wait, the board was just concluding some unfinished business. Ten minutes later, two security men showed up and went into the boardroom. A minute later they were escorting a very unhappy Clifford Longmeyer out of the boardroom. Chip Stevens walked out and greeted Sean and Raquel.\n\nHe shook Sean's hand, \"Good morning counselor.\"\n\nSean replied, \"Good morning Chip. May I introduce Ms. Raquel Simmons.\"\n\nChip shook Raquel's hand, \"Ms. Simmons it is an honor and privilege to meet you. Congratulations on a great win and providing us with an fantastic tournament.\"\n\nRaquel was all smiles, \"Thank you Mr. Stevens, it's great to meet you as well.\"\n\nChip opened the door and invited both Sean and Raquel into the boardroom. As they walked in, the entire board stood and erupted into an applause. When they finally quieted down, Chip said, \"Ladies and gentlemen, please welcome our tournament champion, Ms. Raquel Simmons!\"\n\nThe room again erupted into an enthusiastic applause, but also included some whistling and words of congratulations. Raquel was overwhelmed and smiling ear to ear.\n\nChip directed Raquel and Sean to their seats and then returned to his, at the head of the table. All the other board members sat down.\n\nChip announced, \"I call this meeting of the board of directors to order. Ms. Simmons, on behalf of our entire club, I want to apologize for how you and your brother were initially treated following his unfortunate accident. The former club chairman was wrong to approach you so callously. Please accept our apology.\"\n\nRaquel responded, \"Thank you Mr. Stevens, apology accepted.\"\n\nChip smiled, \"As it pertains to your proposal, the entire board has voted, unanimously, to approve it with one condition.\"\n\nRaquel asked, \"And what would that be Mr. Stevens?\"\n\nChip smiled, \"We would like to establish a foundation to promote girls youth golf, in your name. The Raquel Simmons foundation.\"\n\nThe entire board erupted in applause again.\n\nRaquel was stunned, \"That is much more than I hoped for! Thank you again... all of you.\" She looked each board member in the eyes and smiled.\"\n\nChip finished, \"If there is no further business and no objections, I suggest we adjourn and get some pictures with Ms. Simmons and Mr. Connors.\"\n\nEveryone was quiet, Chip added, \"No objections noted, this meeting is adjourned.\"\n\nRaquel and Sean spent the next two hours hobknobbing with the rich. They were treated like celebrities, Sean as much as Raquel. Finally it was time to leave and head to the airport.\n\nSean had changed his and Raquel's airline reservations so they would be on the same flight to the next tournament.\n\nOn the way to the airport, Raquel asked, \"Wait, what are you going to do for clothes?\"\n\nSean smiled, \"Sparta Apparel is taking care of that.\"\n\nRaquel just smiled and snuggled into her caddy's arm.\n"
    ],
    "authorname": "Homer21stC",
    "tags": [
        "sports",
        "romance",
        "older guy",
        "young professional",
        "older man",
        "younger woman",
        "older man younger woman",
        "golf",
        "golf pro",
        "may-december romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/ill-carry-your-bag"
}