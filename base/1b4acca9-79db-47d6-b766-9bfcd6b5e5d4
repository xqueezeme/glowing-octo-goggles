{
    "title": "Entertaining at Large Ch. 08",
    "pages": [
        "Susan first appeared in Entertaining at Home. I wrote this one with a sound track playing while I worked. I wonder whether it enhances the reading? The tracks mentioned are accessible on music-sharing sites, lots of which don't flog your private data to corporations. Thanks again for support, comments and suggestions which are always welcome.\n\n*****\n\n'You're a star.'\n\nMr J nudged me as we got out of the taxi and pointed up at the sign draped across the front of the Crown. It was at least thirty feet in length, one of those PVC printed jobs stretched between ropes. At the top, in bold red letters about three feet high it read: \"New Year's Eve\"; the second line was a similar size, but a more attractive blue Calibri-style print. It said simply: \"Scarlett, Suzette, Tracy\". Underneath, in black, in a more playful font was the injunction: \"cum one, cum all\".\n\n'George never could spell.'\n\nI laughed and took the old man's arm, snuggling against him in the icy wind. We were stopped at the door by a large man dressed all in black. He had no perceivable neck and was about six foot three of solid muscle. I could only imagine he was sold his clothes by the same dealer who supplied the steroids which had made him the shape he was. I doubted there was a normal shop he could get anything to fit.\n\n'Tickets?'\n\nIt was a gutteral-bark. It could have been an query, or an order. I gave him the benefit of the doubt and chose to assume it was the former.\n\n'Sorry?'\n\n'No ticket, no entry.'\n\nI was flabbergasted and took a theatrical step backwards to check we had come to the right place. We had. I approached him again.\n\n'I'm Suzette.'\n\n'Who?'\n\nHe produced a small notebook from a pocket and eyed it suspiciously. I pointed up at the sign.\n\n'Suzette. One of the strippers?'\n\nHe looked at his list again and shook his head. He was beginning to irritate me. I stepped up so that we were nose-to-nose, well nose-to-chest anyway.\n\n'Listen. I don't know who you are, or what the hell you think you're doing, but which do you think is more likely? That I am who I say I am, or, that I'm an imposter so determined to wave her knickers at the bunch of ingrates who drink in this dive that I would make it up? I suggest you let us in and, if you still have any doubts, check with George.'\n\nHe grunted, not in a good way, shuffled back and pushed open the door with one finger. That, I admitted to myself, was sort-of impressive. I made to enter when he spoke again.\n\n'He got a ticket?'\n\nHe was glaring at Mr J who shrank down into his overcoat and moved crab-wise so that I was between him and his interrogator.\n\n'That's Mr J. He's my manager, you can call him \"sir\". Lay one finger on him and he'll break both your arms. He's a karate black belt.'\n\nI pushed Mr J in front of me and we went into the pub, before the gorilla had a chance to interpret my words into whatever language he spoke and challenge their validity. Inside the place was buzzing. I stopped for a minute to take in the scene.\n\n'OK killer?'\n\n'I'm alright. What about you? I would have hated to hurt that young man, but he was beginning to make me angry.'\n\nI laughed and kissed him on the cheek in lieu of a reply. He had obviously not lost his sense of humour. We looked around together. The place was full, but not packed. There must have been about one hundred and fifty punters in the place. Most were men, but there were a lot more women than I ever remembered seeing there. \n\nThere was the same buzz of excitement we had felt as we went through town. We had had to take the scenic route as the wait time for a hire car was about two hours and rising. The bus into town was full. Mostly noisy teenagers and early-twenties, released at last from the confines of family life. There were a few older couples and the odd single man or woman obviously out on the prowl. Mr J and I swapped stories of our own younger days trawling pubs and night clubs, alone or as part of a pack, seeking that last elusive bit of excitement before the holidays were over. \n\nIn the centre things cranked up a notch. Loud music blared from every hostelry and marauding bands of fun-seekers thronged the pavements, seeing-and-being-seen by potential partners in whatever shenanigans they had planned or hoped for. Now-friendly coppers stood in pairs at most interchanges directing foot traffic and exchanging banter with the revellers. They had the looks of men and women who knew exactly how their nights were going to end. We found a taxi with little trouble. At this point in the evening our only competition were men who had stopped in town earlier for a quick-one on their ways home and we're now incapable of independent travel.\n\nWe were pushed deeper into the pub by a large group following us in. One of them recognised me and nudged his mates.\n\n'You're Suzette.'\n\n'What gave it away? Was it the name badge?'\n\nHe took my hand as I held it out to him, but looked confused.\n\n'I told you about her didn't I lads?'\n\n'Nothing less than scandalous, I hope.'\n\nThe four or five young men were doing a poor job of hiding their lust as they looked me up and down. There wasn't much point in me sticking my bust out, covered as it was by a thick jumper and coat, but I did it anyway. A compliment is a compliment after all and deserves recognition.\n\n'Well, you'll see for yourselves later on. I'll keep an eye open for you when I'm doing my act.'\n\nI smiled sweetly and gave them a wink before pulling Mr J with me and heading for the bar. It was easier than the last time I had had to push my way through. This time I was carrying a large hold-all with my costumes in it, and, I realised was something of a local celebrity. Men pushed their mates out of my way, several of them nodding and smiling at me as they did so. One man, I recognised him as one of the regulars from the engineering factory, stopped me and introduced me to his wife. I don't know who was more embarrassed, her or me.\n\nWe eventually made that strip of no man's land all pubs have where the tables end and the crush around the bar has not yet started. Mr J and I both looked around for any familiar faces. He had more luck than me. We were suddenly taken from behind in a vice-like grip across our shoulders. Hurricane Mandy had arrived.\n\n'What ho, Mandy.'\n\nI stood on tiptoes and attempted to plant a kiss on her cheek. She was having none of that. I was hoisted under my armpits and given a firm smacker full on the lips. That brought a small cheer from the people nearest to us and a wave of turning heads passed down the bar as drinkers stretched to see what the fuss was about. I was returned, none too gently, red-faced and breathing slightly heavily to my feet. She turned to Mr J who was beaming at both of us. He took one of her hands and bent from the waist to kiss it. She simpered like a young girl.\n\n'Come here.'\n\nIf I was lifted, he was engulfed. She bent slightly to embrace him, but between ham-hock arms and her massive bosom there was little to be seen of him as she kissed him. I could see the back of his head pushed backwards as she suctioned her mouth against his. I think all of those around held our breaths collectively as the clinch went on and on. \n\nMr J's knees buckled slightly when she eventually released him. He looked around confusedly and scarlet-faced as another collective cheer went up from the boys nearest to us. They had given up all pretence of surreptitiousness and were staring openly with huge smiles on their faces waiting to see what would happen next.\n\n'Thank you Amanda, that was lovely.'\n\n'You're welcome, Oswald.'\n\nShe had retained his hand and swung it girlishly as she looked fondly at him. I had to consciously close my mouth and stop myself staring. I had enjoyed two full days of Mr J telling me how wonderful he thought Mandy was at any available opportunity. Somewhere inside I had been a little scared by his infatuation. I was worried he was going to be hurt and I was very fond of him. What I had not factored-in was that Mandy might feel the same way. To me she had always appeared tough, rude and well, massive; somehow impenetrable.\n\n'Looks like you're on to a promise tonight, Mr J.'\n\nHe frowned at me.\n\n'Susan. I'm shocked. There is absolutely no need to be so crude.'\n\nHis expression softened and he grinned at me as he looked around.\n\n'Well not yet, anyway.'\n\nHe winked and shrugged off his overcoat which he folded neatly over his arm. In the button hole of his immaculate suit he wore a beautiful red carnation. He pulled it free, kissed it and held it out to Mandy. She took it and placed it between her breasts. It disappeared almost immediately. I was tempted to say he'd need at least a dozen if any were to remain visible, but thought better of it after his earlier admonishment. \n\n'Scarlett's around somewhere, I've asked her to look after you. I'm going to be busy behind the bar for a while now.'\n\nShe bent and kissed him. I scanned the crowd around the bar again. About three-quarters of the way down I saw an slender arm waving above the heads of those waiting to be served. It was sheathed in a clinging, silver-satiny material; I had no doubt it was Scarlett's. As well as an incredible ability to move with the silence and stealth of a jungle guerrilla, Mandy could always let you know she needed you without seeming to raise her voice. I pointed the arm out to Mr J.\n\n'Let me take your coat. I'm going to get changed and I'll join you. Snug free?'\n\nI turned for Mandy's answer. She was, as I should have guessed, already behind the bar pulling a second pint for a tattooed customer who was staring goggle-eyed into her cavernous cleavage. Mr J handed me his coat, straightened his tie and set off towards his goal. I watched him weave and push his way toward her. I remembered the last time he had come, his first time in the pub. He was worried about fitting in and scared of the place's reputation as a tough, stripper-bar. I smiled fondly. They grow up so quickly.\n\nI caught Mandy's eye and nodded towards the back bar. She nodded back. I took off my own coat - cue the predictable wolf whistles and cries of \"more\" - and set off through the press.\n\nI paused for a second to enjoy the coolness of the corridor before pushing open the door to the Snug and dropping my heavy bag and the two coats. I heaved a sigh of relief, that bag was heavier than I thought. I rubbed my shoulder in relief. There was an odd snuffling sound coming from somewhere.\n\n'What ho, Tracy.'\n\nIn one corner, just back from the spluttering gas fire, she was on her knees before a short, nondescript man who had a broad grin on his face. She pulled his cock out of her mouth.\n\n'Hi Susan. Good to see you. This is Alan.'\n\nShe went back to sucking him off.\n\n'Hi Alan.'\n\n'Hello. Susan was it?'\n\n'You can call me Suzette.'\n\nI looked at him carefully. He was definitely not her usual type. Correction: her usual type was anything with a dick, so he fitted the bill in that respect. But, he was a dapper, shortish man about forty. I had almost-exclusively seen her before with pimply-backsided youths about her own age. He was wearing chain-store polyester trousers and a short-sleeved white shirt with what looked suspiciously like a clip-on tie. The clincher was that he spoke; I had never had a discernible word out of any of her male friends before. No, he was definitely not her usual type. The question was: why was she sucking him off?\n\n'George said we had to be nice to him.'\n\nShe was obviously picking up Mandy's ability to thought read. She wanked his cock and licked her lips. I passed her the alcopop she indicated with her eyes. It was a poisonous-green colour I had never seen before. She changed hands and took a long swig from the bottle before handing it back to me.\n\n'He's a stayer this one. Wouldn't mind giving me a hand would you?'\n\n'Miss Powderpuff?'\n\nShe nodded, grinning. She already had his smallish dick back in her mouth and was up to her nose in trousers. I pulled my jumper off over my head and turned Alan's head towards me before stroking my hands down over my bra and the new corset Mr J had helped me into before we set out. I tapped his face gently and smiled.\n\n'Come in her mouth for me, Alan. Look at those luscious young lips feasting on your mighty manhood.'\n\nI stroked his cheek and he groaned slightly.\n\n'I want you to spray her mouth with your man-juices. Look, she's gagging for it.'\n\nI looked down and he followed my gaze. Tracy was bobbing her head at a frantic rate. I ran my hand down his chest and pinched one of his nipples. I leaned down next to his ear and breathed hotly into it. I could smell the Brylcreem in his hair. My dad had used the same brand.\n\n'I wish that hard cock was stuffing my tight pussy. You look so big.'\n\nI increased the pressure on his nipple. I heard him groan a couple more times and then sigh. Tracy stopped moving her head and a small dribble of cum emerged from the side of her mouth. She scooped it back in with a finger and rolled back on her heels. I bent over and kissed Alan.\n\n'I'll see you later, big boy.'\n\nI pulled him to his feet and escorted him towards the door. He was hurriedly doing up his flies.\n\n'Thanks for that Alan. You taste really nice.'\n\nTracy took another long pull from her bottle. I leaned back against the door as it closed behind the short man. We both started laughing.\n\n'Ta, Susan. I thought I might have to fuck him there for a minute.'\n\n'They like a bit of chat.'\n\nShe walked over to me, grabbed me round the waist and went to kiss me. I held her at arm's length and bussed her on the cheek.\n\n'If you think you're snogging me with that cum-smeared gob, you've got another thing coming.'\n\nShe laughed, grabbed my bum and squeezed hard before letting me go. She sat down with her drink and watched me start to get changed. I laid out the French maid's dress, petticoats, apron and other accoutrements on one of the tables. She whistled.\n\n'You're wearing that for your first set?'\n\n'Yes. Is there a problem?'\n\n'No. Just watch out Crown and Anchor, that's all.'\n\nShe leered at me as I stripped naked in front of her and reached inside my bag for the pair of sheer black panties I had chosen for tonight. I was already feeling excited. Before, I had stripped in front of a crowd as a last minute thing. Usually under the influence of alcohol. I had been thinking about tonight for the past few days and could feel a butterfly or two already rousing themselves and tickling my pussy with their wings.\n\n'Made any New Year's resolutions?'\n\n'Same as last year.'\n\n'And that is?'\n\n'Have more sex, of course. You?'\n\nI laughed so much I dropped the flimsy bra I was trying to put on over my new corset. I had been wearing it since getting home from work but still wasn't used to the tightness, or the firm support under my tits which was now getting in the way.\n\n'More sex? Is that possible?'\n\n'Oh yes. Just a matter of scheduling. Jason bought me a diary for Xmas. Want me to help you with that?'\n\nI was struggling again with the difference between the two garments. I nodded and she pulled me to my feet.\n\n'First up, bra on first.'\n\nShe loosened the strings at the back of the corset. It had taken two of us half-an-hour to get me into it. I felt immediate relief as it eased. She expertly popped the catches holding the front together and I took a deep breath of relief as it fell open. I slipped on the bra and gasped as Tracy stroked my clearly visible nipples through the gauzy material.\n\n'Wish I had breasts like yours.'\n\nShe bent to kiss one of my now stiff nubs. I pushed her away.\n\n'Stop it. I don't want Alan's semen smeared all over it. You're not putting your mouth on me until you've at least cleaned your teeth.'\n\n'Spoilsport. You wearing a suspender belt and stockings?'\n\n'Yes.'\n\n'Get them on next.'\n\nShe went back to her seat to watch me do it. It was the first time I had tried the fishnets I bought off the internet and I had a few problems straightening the seams. I looked at Tracy expectantly.\n\n'You've got a nice bottom too.'\n\n'Thank you. Now the corset?'\n\n'Yes. Give it here, you're all thumbs.'\n\nShe grabbed it from me and started arranging it properly. As she went to close the first catch she suddenly dipped her head and licked my stomach. It was a long, full-tongued slobber from my navel to just below my boobs. I shrieked.\n\n'Gotcha. Mmm, you taste nice too.'\n\n'You bitch.'\n\nI rubbed hard at the affected area. There were no tell-tale signs of Alan's recent emissions, but I suddenly felt sticky. The butterflies down below had a sudden breeding spurt too, I noticed. I wasn't going to tell her that.\n\n'Guava and papaya bath oil. I soaked for a good hour before I came out tonight.'\n\n'Do they do it in snack size?'\n\nI couldn't tell whether she was joking or not. I watched her as she fastened me into the stiff corset. I felt myself steadily constricted as she went lower. When she had done them all - there must have been about twenty - she ran her finger slowly up the length of my pussy before standing up. It was butterfly population-explosion time.\n\n'There. Turn around.'\n\n'You really are a randy little tart.'\n\nI did as I was told and felt her pulling the cords tighter behind me. My breathing started to get tighter and tighter as she tugged hard on each level. Eventually I told her to stop. She had much stronger fingers than Mr J and I was finding it hard to catch my breath.\n\n'That's enough.'\n\n'You sure? There's plenty more give in it yet.'\n\n'I think so. I don't want to pass out.'\n\n'OK. If you're absolutely certain.'\n\nI felt her gathering the long strands which hung down at the back and starting to knot them. Suddenly I was struggling to breathe. She had tied the initial cross and then yanked the strings as hard as she could and quickly finish her bow. I felt the air squeeze out of my lungs; I couldn't feel any getting back in. I gasped and pulled at the front of the corset. The catches held firm. I was feeling desperate. I could hear Tracy cackling.\n\n'Calm down. Just breathe. That's it nice and steady. You'll get used to it.'\n\nI wasn't convinced, but tried to do what she said. I slumped back onto the chair I'd used to put on my stockings, then had to straighten up immediately, convinced I had cut off the air supply altogether.\n\n'This can't be right.'\n\nI had to articulate each word separately and try to breathe in between.\n\n'You'll be OK. You look great.'\n\n'Why did women wear these things? I feel like I'm stuck in a box.'\n\n'Posture for one thing. Look how you're sitting. And your boobs look amazing.'\n\nI looked down and my chin almost hit my cleavage. My globes, normally like large apples, had taken on small-melon proportions; I had to admit I was impressed. I concentrated on keeping my back straight and after a minute or two gulping air through my mouth found I could risk just using my nostrils. I began to feel slightly more comfortable. I wasn't going to tell her that though.\n\n'Come on. You're the pain queen. Get into it.'\n\nI glared at her; mostly because she was right. I was beginning to get the sort of feeling in the pit of my stomach that I felt when I was being spanked. I tried a little wriggle. It felt nice. I could even feel the pit of my stomach for a start. I gingerly stood up and reached for my dress. Tracy leaned back in her chair and picked up her bottle. She realised it was empty and went to the bar.\n\n'Can I get another drink in here George? And one for Susan?'\n\nI had my arms in the air and was wriggling the maid's dress down over my body when George came in. I heard the clink of glasses. As my head emerged I noticed he had brought me a pint. He was standing staring at me with his mouth open.\n\n'Close that will you George, you're letting in a draught.'\n\n'Every time I see you lass, from the very first time you came in here, I've had a hard-on. I think I might have to nip upstairs for some gentleman's relief. You look stunning.'",
        "'You say the sweetest things you filthy old lecher. Can you pick me up a Perrier on the way back? I'm going dry for January, remember?'\n\n'I wish you'd make up your mind.'\n\nHe turned to go back to the bar muttering to himself. I called him back.\n\n'And George?'\n\n'What now?'\n\n'Make sure you wash your hands before you touch the bottle will you? There's a sweet.'\n\n'Get stuffed is the response which springs immediately to mind.'\n\nTracy and I both giggled as he left. I finished zipping myself into the dress and reached for the flouncy petticoats. I hoisted the skirt and tied them tight before smoothing the skirts back down. Tracy was leaning back with one ankle resting on her knee. She wasn't wearing panties underneath her skirt. I shrugged and reached for the apron.\n\n'So what's your resolution?'\n\n'I'm going to try to be more like you.'\n\nShe choked on her drink and coughed until she went red in the face.\n\n'You what?'\n\n'You're just so honest. I've spent the last six months feeling guilty about all this.'\n\n'All what?'\n\n'The stripping, the flashing. You know I did a nude photo shoot this week?'\n\n'Don't I just. Mandy was crying when she showed us that book. You looked great by the way.'\n\nI checked to make sure she wasn't joking. She seemed serious.\n\n'I'm going to try to stop thinking and try more doing. I like it, if other people don't that's their problem.'\n\nI smiled at her.\n\n'Like you.'\n\nShe sort of simpered and came across to help fasten the little cap in my hair with a couple of grips. I pulled on the tricolour garter and snapped it against my thigh. She kissed me tenderly on the cheek.\n\n'That's the nicest thing anyone has said to me since... Since...'\n\nShe looked thoughtful and scratched at her head.\n\n'Well at least since I offered to suck Alan's cock.'\n\nShe elbowed my in the ribs and we both winced. She rubbed her elbow scowling at me.\n\n'Will you two stop mucking about.'\n\nGeorge was back.\n\n'Scarlett's on her own out there. She could do with a hand.'\n\n'Scarlett could?'\n\n'It was your idea, the charity thing, so don't start complaining now.'\n\n'As usual George, you're making no sense.'\n\nI stood up and started for the door.\n\n'I'll just find some pants and I'll be right out.'\n\n'And I need a word about the running order.'\n\nHe shouted at my back.\n\nMy journey over to where Scarlett was located was interesting. I could hear expected comments as I pushed through the throng: \"Nice arse\" and \"Did you see those tits?\", you know the sort of thing.They were all grist to the butterfly-mill which was now cranking up production. The speechless embarrassment of other men as I manoeuvred around them was what I expected; the hanging tongues and goggle eyes of a few of them as they took me in was a nice bonus. \n\nWhat was different was the friendly greetings from the regulars who were in. \"Heard you won your last match\", \"Good to see you're back, George wasn't sure\" joined seasonal greetings and the occasional chaste peck on the cheek. I had seen how they treated Tracy and Scarlett over the months, a sort of easy acceptance of their status as regulars which clearly included an absence of judgement of what they did for a living. I had always been treated like one of the lads. I was now one of the girls as well.\n\nScarlett was being tonsil-probed by a rather plump man in his thirties when I reached her. I stood and watched alongside Mr J and a lad who on second look turned out to be James. The clinch went on for a minute or two and allowed me to appreciate the full splendour of what she was wearing. She was in a full-length, silver evening gown; she had a string of pearls at her throat and a pair of dangling, sparkly earrings which reflected light like glitter balls. Her red hair was piled high on her head like an old-style beehive and she had a pair of silver high heels strapped at her ankles. The overall effect was of shimmer.\n\n'What ho James.'\n\n'Hello, erm Suzette.'\n\n'I owe you one of those.'\n\n'You do?'\n\n'For the other night. What you did for Scarlett.'\n\nHe looked flustered and adopted the position which I now took as standard for him when talking to a woman: hands clasped in front of his groin, head down looking at the floor. Only the absence of blushing made me think he might be beginning to feel a bit more comfortable around us. The man kissing Scarlett finished and thanked her politely before returning to his friends wiping his chin free of saliva. She squealed and threw her arms around my neck.\n\n'They said you were here. You look stunning.'\n\n'Not a patch on you sweetheart.'\n\nShe straightened and smoothed the dress down over her body. It looked like it had been painted on her. She smiled.\n\n'Who was your friend?'\n\nWe looked at the man's retreating back. It was being pummelled by a variety of drinkers as he passed.\n\n'George said that was your idea. I'm glad you're here at last. My lips feel like they've been punched.'\n\nShe stuck out her tongue and pressed it tentatively against her lips at various points around her mouth as if to check. The look on my face must have betrayed my confusion. She nodded up at a hand-written sign over the place she was sitting.\n\n\"Kiss a Striper \u00a35. All proseeds to charity\"\n\nI groaned and began to take in the implications of the illiterate scrawl. It was going to be a long night.\n\n'Sorry lovely. I started after you left the other night. I thought the price would put them off.'\n\nShe looked at me as if I was stupid. I clearly was. She hugged me again and whispered.\n\n'I got a call from Barry's mum. He's buggered off down south to his sister's. He's joining the stupid army.'\n\nIt was great news and partly explained the reason she was looking so radiant.\n\n'Mandy took me out and we bought this to celebrate.'\n\nShe smoothed down the dress again. I clapped my hands to get the attention of those nearest.\n\n'James. Hop up on the bar and get that sign down. I'm not kissing anyone 'til it's spelled right.'\n\nI made a writing hand signal to Mandy and a large felt pen soon appeared in front of me. Scarlett and I admired James's butt as he stretched up.\n\n'You and him?'\n\n'Nah. I told him I'd give him one later. I mean he's sweet and I'll always be grateful for what he did, but he's a kid. I think I've had my fill of young blokes or a while.'\n\nI turned the sign over and re-wrote it in English before sending James back up again. Scarlett sighed.\n\n'He has got a nice arse though.'\n\nWe giggled together and both made a point of giving the goods a feel as we 'helped' him down. I was glad to see the bright red version of James was back. I'm a stickler for traditions.\n\nThe atmosphere in the Crown was really jumping. The music was loud enough to hear, but not over the top. Mandy, or possibly George, had made some great choices. It was sixties and seventies stuff mainly, the kind of things my mum and dad used to play at home. Not the cheap supermarket-bargain collections of minor hits from minor bands, but tracks from some of the classic albums. Over in the far corner a mixed gang were joining the Floyd in a rousing chorus of \"Shine on You Crazy Diamond\". I'd already heard Jethro Tull and some great album tracks from the Kinks and Beatles.\n\n'Right you lot.'\n\n'George?'\n\n'It's eight now, what say we kick off about nine? Who's first?'\n\n'Me. Sooner I get out of this corset the better as far as I'm concerned. That OK with you Scarlett?'\n\n'Yeah. I'll go second. Mandy's picked out a really smooth track for me. We've been practising the old moves at home.'\n\n'Where the bloody hell is Tracy?'\n\nGeorge was looking stressed. Unusual for a man who was used to being in control of everything.\n\n'Probably sitting on someone's...'\n\n'All right, all right. No need to go into the details. I'll find the little tramp.'\n\n'Calm down George. Pull yourself a pint and you can tell me all about it.'\n\nHe did as I instructed which was surprise number one. Number two was when he sort of slumped on the bar after his first swig; well it was more flowed-over, than slumped. Anyway he looked down, and in that he was alone in the pub that night. I reached out a hand and rested it on his forearm.\n\n'Had the cops round earlier, they're making all sorts of threats. I'm worried someone's going to screw up tonight. There, I've told you.'\n\n'Cops?'\n\n'They'd heard about what went on the other night and wanted help with their investigation.'\n\n'So?'\n\nHe looked at me as if I had been born yesterday.\n\n'So when I politely refused they started talking about licences, closing times and the like. They wanted me to tell them where the knife is and which girl was involved.'\n\n'I see. Scarlett doesn't know?'\n\n'No. She's been through enough. I put the knife in a sealed plastic bag and dropped it in one of the drains for them.'\n\n'Why?'\n\nHe sighed and went in to schoolteacher mode.\n\n'In the old days, whenever there was knife incident, the first thing the cops did was open up the drains. All the local yobos will have dropped theirs down there the night before. Idiots. If they did their jobs, they'd find the knife with Barry's prints, pick him up and then it's up to them.'\n\n'I still don't really get it. Sorry George.'\n\nI could see he was really troubled by all this.\n\n'Eight hours work, a few quids worth of forensics and a decent interrogator and they've got him for possession of an offensive weapon. Probably the lot knowing that coward. He pleads guilty. Job's a good 'un.'\n\nI must have still looked confused. He took a deep gulp at his beer, sighed and went on.\n\n'These days they want to get hold of Scarlett; scare her into making a complaint. They chalk up a success after 20 minutes pratting about and she gets smeared all over the front pages of Rupert Murdoch's smut-sheets. He walks.'\n\n'Surely not?'\n\nNow he looked at me as if I really was stupid. He was pretty convincing.\n\n'Young man of previous good character accused by stripper? They'd make a TV special.'\n\nI was beginning to see his point. I looked down the bar to where Scarlett was joking with Tracy and James. It was great to see her so happy. I pushed myself up on the bar with my arms and leaned over to kiss George on the cheek. \n\n'I never thought I'd hear myself say this but you're a good man George.'\n\n'That mean I'm on a promise tonight?'\n\nI eased myself down, callisthenics and corsetry don't mix. Not when you're a beginner anyway. Nice to see the old George was back though.\n\n'No way you're coming near me with that thing in your trousers. Tell you what though, if we do get raided I don't mind sucking a copper's cock for you. Nothing below the rank of sergeant mind.'\n\nHe laughed and drained his pint. I stopped him before he walked away.\n\n'That idiot on the door?'\n\n'What's he done now?'\n\nHe was immediately apprehensive.\n\n'Tried to stop me and Mr J getting in without tickets.'\n\nHe groaned and put his head in his hands.\n\n'Tickets. Where'd he get that idea? What happened?'\n\n'I told him Mr J would break his arms if he didn't let us through. Seemed to do the trick.'\n\nHe convulsed. He was laughing so much that when he leaned against the back of the bar to stop himself falling all the bottles on the shelves tinkled along in unison. It was infectious and soon everyone waiting for a drink, me included, was in stitches. None of us really knew why, but we enjoyed it all the same. When he recovered George came back to me.\n\n'My brother Jake. Never too bright but steroids really didn't do him any good at all. I'll fish him in and stick him with Alan. They can take care of each other. That lad James is wearing a black jacket. James. A job for you.'\n\n'Alan?'\n\n'The bus driver. I'll tell you later. When you've made good on that promise.'\n\nI watched him congratulating James on his rapid promotion through the ranks and escorting him out to door duty. He was soon back at the bar berating a regular who had made the schoolboy-error of asking for five pints of lager. The boy was back in town. \n\nI smiled to myself and turned to see what was going on in the bar. There was a loud chorus of \"You Can't Always Get What You Want\" being shouted more than sung from about seven or eight tables. Lots of other customers were encouraging the chanters with raised glasses. More immediately, I had a straggly line of men in front of me. First in the queue, holding a limp five pound note, was a cute young guy. He was wearing a beret and had a swirly, Poirot-style moustache painted on his upper lip in mascara. It took me a second to recognise him.\n\n'Matt?'\n\n'You look gorgeous.'\n\nHe held out the note and glanced up at the notice. I held out my arms to him. The kiss was long and slow. I enjoyed his tongue stroking the sides of mine. I felt the stirrings in his groin as he pressed against my thigh. It was the pressure on the corset from his embrace that made me stop. I needed to breathe. I hugged his neck and found his ear.\n\n'You dressed up.'\n\n'You mentioned French.'\n\n'That's sweet. Where are you sitting?'\n\n'Somewhere in the middle.'\n\n'Trev with you?'\n\n'No. Not tonight. He's out with his fianc\u00e9.'\n\n'Good. Wouldn't want to spoil his surprise. I'll find you during my act.'\n\nI pushed him away and turned to the next man in the line. He was sixty if he was a day and had his hands on my arse before our lips met. The line went on and on and I was buzzing. The uniform and petticoats meant that even the most persistent groper couldn't get fingers in anywhere important. Lots of them tried though, I think word about my liberality on the Wednesday must have got out. I found myself glancing repeatedly at the clock behind the bar. I couldn't wait to get started, get naked and then see where the night took me.\n\nI was calculating how much money I had made for the refuge; about eighty pounds so far, I reckoned. I looked up to see if there were any fresh customers. In front of me stood a woman. She was about my height and weight. She was wearing what looked like a grey business suit with trousers over a purple blouse. Her dark hair was tinged with white, she looked at me through tired, sad eyes. I was taken aback at first, but then thought \"what the heck\" and opened my arms to her. The nearest men perked up expectantly. She thrust out a hand.\n\n'Susan?'\n\n'Yes.'\n\nI started to feel silly and brought my arms down to my sides. I took the preferred hand and she shook it warmly. Her hand was strong and dry.\n\n'I'm Claudette. We spoke on the phone. Boxing Day?'\n\nI was obviously looking confused.\n\n'I'm from the refuge. We were staffing the help line.'\n\nI remembered and shook my head in embarrassment.\n\n'I just wanted to say thank you for the money.'\n\n'Money?'\n\n'Scarlett called. She wanted to give us the cash you raised for her. With this.'\n\nThere was only the slightest look of distaste on her face as she nodded at the notice. I found myself blushing. I took her down to the end of the bar and evicted Alan and Jake who were deep in a discussion about traffic regulations. Mandy put a Perrier and a pint in front of us before I looked up.\n\n'George said you had the look of a beer drinker.'\n\n'He's sweet.'\n\nMandy and I looked at each other.\n\n'You spoke to him?'\n\n'Yes, he gave me the cash. We discussed the possibility of further fundraising projects.'\n\n'And you think he's sweet.'\n\nMandy put down a pile of notes in front of her and did her Cheshire cat act.\n\n'Scarlett OK?'\n\n'Better. Her boy - the guy who beat her up - has left town. I doubt he'll be back in a hurry.'\n\n'George?'\n\n'And a few others.'\n\n'You her friend?'\n\n'Yup.'\n\nWe were both staring down the length of the bar, or down at our drinks Somehow not wanting to look at each other.\n\n'Good. She'll need you. Even though the immediate threat has gone, we all have a tendency to choose the same again until we learn better.'\n\n'I suppose.'\n\n'She's got those contacts?'\n\n'I imagine that's how she got in touch with you. I've got them too if she wants them.'\n\n'Fantastic. Listen thanks for this. The cash will come in really handy and at just the right time.'\n\n'I think there'll be a lot more before the night is out.'\n\nI was watching Tracy devouring a middle-aged engineer. He had his arm up to the elbow under her skirt. There were at least six more guys waiting their turn.\n\n'We're spending it on toys for the kids. You'd be amazed at the number of men who think that stomping on their kids toys when they've finished beating up their mothers is the perfect way to end Xmas.'\n\n'Bastards.'\n\nClaudette finished her pint in one long swallow.\n\n'He keeps a good pint. I'll have to come back.'\n\nShe stood up to leave and shook my hand again. After a pace away she turned and leaned in to whisper in my ear.\n\n'I'm a lesbian. I'd do you any night of the week. Sorry we had to meet through work.'\n\nI watched her back as she moved through the crowd to the door. I smiled and went back to relieve some of the press around my busty blonde co-worker.\n\nTracy and my efforts contributed well to raising the temperature down at the Crown. She was red-faced and frisky welcoming hands on her breasts and between her legs as she perched on a high stool at the bar. Few of her customers got away without having their cocks stroked as a parting stimulus. \n\nI was more restrained. I made few efforts to stop hands exploring, but my corset and petticoats prevented intimacy. I was more flustered than aroused; looking forwards rather than enjoying the present. I probably kissed more mouths that night than I had ever done before. It was interesting to compare techniques. The younger men went at me like steam trains, piston-tongued and sweaty; the older ones were a little like wine connoisseurs savouring the tastes and textures I had to offer. \n\nIn the background, the music was forging new links between strangers. The average age in the place probably meant that most of them had heard the greats' albums either at the time they were released, or when they were old enough to nick older siblings' collections. Many of those not singing themselves were swapping anecdotes and stories from their pasts. So when the music was turned down and George took to the stage there was more than the usual disappointment.\n\n'He says he's got some new jokes.'\n\nI'd gone behind the bar to join Mandy.\n\n'Any of them funny?'\n\n'Doubt it.'\n\nShe was right so after a few minutes we went back to the Snug for a chat. We had to kick Tracy out to the Ladies with another voiceless lad.\n\n'Insatiable that one, I don't know where she gets it from.'\n\n'I've got a rough idea.'\n\nShe punched me in the arm which hurt quite a lot. I swigged my Perrier and she a port and lemon. It was nice. We talked seriously for a bit about Scarlett, about the fundraising for the refuge and thoughts for the New Year. That took her on to the subject of Mr J. I leaned back and let her praise of his charm, his wit and consideration wash over me. It gave me time to think again about whether I needed to revisit my own decision to stay man-free for the foreseeable future. When she moved on to start describing their love-making on Mr J's sofa I decided it was time to change the subject.\n\n'I've made a CD for my strip. I think you'll like it.'\n\nShe looked at the disc I had burned in the afternoon, but I'd only written \"C&A\" on it.\n\n'They're all Stones tracks, the middle one's by the Soup Dragons.'\n\n'Never heard of them.'\n\n'You'll like it, I promise. I want George on stage when I start, I think I'll go through.'\n\n'You do know the best way to get out of that corset don't you?'\n\nThat was a very good question to which the answer was \"no\". She gave me instant instruction which I hoped I would remember. The butterflies had started some kind of riot. I was feeling flushed and nervous as I stood. Mandy tapped me on the bottom. I felt it even through the petticoats.",
        "'Knock 'em dead.'\n\n'I intend to. Let's go and put the customers out of their misery.'\n\nI scooted around the edge of the room to get to the stage from the back. His jokes were really poor but the crowd were lapping them up. He was in the middle of a complicated tale about a kid who desperately wanted a sister. There were a few calls of \"get off\", followed by a lot more of \"get 'em off\" when I stepped up behind him. I put my finger to my lips.\n\n'The next day Santa wrote back saying all right then you send me your mum and I'll take care of it.'\n\nHe was leaning on the mic stand and looked like he was settled in for a long session. There were cheers when I tapped him on the shoulder. The look on his face got a bigger laugh than his joke. I kissed him on the cheek; he grinned.\n\n'OK you lot settle down. I can see we have someone here who can wait no longer to get her knockers out.'\n\nThat the crowd liked; the cheer was loud, the whistles ear-splitting.\n\n'It's our Suzette. Lots of you will have seen her before. Those who haven't let me tell you, you're in for a treat.'\n\nI curtsied, quite flattered at the appreciation coming from the floor. I could see Mr J sitting front and centre. He had Jason with him and a couple of the lads I remembered seeing at the door when we came in. I blew them all a kiss. Everyone liked that. George was holding up his hand for quiet.\n\n'Before I let her loose on you rabble I've a personal word of appreciation.'\n\nI didn't like the sound of that and moved closer to him ready to grab the mic if necessary. He threw an arm round my waist; I groaned as his strength and the corset sent spasms down my body.\n\n'Snog a stripper was Suzette's idea. I know a lot of you have been enjoying it, I can see the lipstick smears in a lot of places they shouldn't be. All the cash is going to the women's refuge and they need a lot more.'\n\nThere was another cheer. A couple of women there with their husbands stood up and waved at me, blowing kisses. I waved back. George leaned down and pretended I was saying something.\n\n'So to that end Suzette has selflessly agreed that at the end of her act she'll suck anyone off for fifty quid.'\n\nThe place went crazy. Virtually everyone was on their feet, waving their arms, whistling. I noticed a couple of guys checking their wallets. When George leaned down to me again I slapped his face and made a grab for the mic. He wouldn't let go and I was virtually lifted off my feet when he stood.\n\n'Sorry, sorry. A correction. Hold on, quiet down.'\n\nHe waved a hand and kept calling for silence, but it was still a minute or two before the noise subsided enough for him to be heard. He waited a few more seconds until the place was almost still. He coughed and tried to look repentant, he kept taking side-glances at me and nodding.\n\n'Sorry lads, and of course the women who are in tonight - nice to see so many of you. That was inappropriate.'\n\nHe coughed again and paused to let the sounds of disbelief coming from the regulars ebb away. A grin spread across his face.\n\n'She said seventy five and not a penny less.'\n\nThe place went wild again. This time there was a lot more laughter than before. Even I had to smile. He did have comic timing when he wanted to use it. It didn't stop me punching him in the arm though and this time when I grabbed the microphone he let me have it. I took his arm to stop him leaving the stage and made my own calls for quiet. I guess people wanted to know how I was going to respond and shut up pretty quickly.\n\n'You all know George.'\n\nThere were knowing cries from the regulars. I caught a glimpse of Mandy standing by the music system. She was lapping this up.\n\n'He's been called many things.'\n\nI let another cheer go for a few seconds.'\n\n'Lying bastard; fat freak; cheating no-good shit. These are a few of the nicer ones.'\n\nI was letting the boys toss in their appreciation and suggestions between phrases. George was just grinning.\n\n'\"Foul-mouthed ingrate\" is my personal favourite. In fact, I doubt any of us would come here if it wasn't for the beer. And of course, the company.'\n\nI jiggled my hands under my boobs. They liked that and it took a few moments for things to settle down again.\n\n'Some of you will have heard what happened here a couple of days ago. If you haven't, ask a regular. Suffice it to say George was heroic. So, fatso, this one's for you.'\n\nI nodded to Mandy and as Keith Richards' first crashing chords announced \"Street Fighting Man\" I handed him back the mic and, whilst leaning against him, raised my leg slowly up his body. It was less pole- more bouncy-castle dancing. Then I was off.\n\nEveryone reckons they do a good Mick Jagger impersonation. I knew mine was brilliant. I had been listening to their stuff constantly for the past few days. First my dad's old LPs which I took over to Mr J's, then on downloads at home, on my bike commute and even in the office. I owned the stage. I strutted and preened. Did a twerking sideways shuffle, not bad in high heels, punched my fist and threw out my hips. I was high on it.\n\nWhilst I had been listening to the tacks and dancing around everywhere over the past few days, the one thing I hadn't done was work out any kind of routine. I only worried about that for a second or two at the start because this turned out to be more of a community event than a striptease.\n\nThere were blokes all over the pub joining in the singing, one or two even had their eyes closed. When the first chorus came round the shouts of \"street fighting man\" in mock-London accents shook the windows. George started his own little dance; Mick and the boys would probably be forced to sue if anyone graced it with the term impersonation. The guys loved him though, especially when he stuck his bum out and tried twerking himself.\n\nThe next time the line \"in sleepy London town there ain't no place for...\" came around, someone shouted out,\n\n'Stuff those southerners George, you're always welcome here.'\n\nThat brought a huge cheer. Almost as big as the one he got when he grabbed me by the hips as I backed into him shaking my arse and started to mock-fuck me. His grip was firm. It was a good job it was. The powerful thrusts as he drove into me knocked me off my feet. Literally. For a few seconds I was being held off the ground by George's solid hands. If he hadn't I would have been propelled across the room and into the wall. \n\nI got a little concerned when I felt him feeling under my dress. I was pretty sure there was something in the license about not screwing on stage, though had he tried I might even have let him. I was feeling drunk - I had a fleeting thought about all the alcohol-sodden saliva I must have swallowed for charity. I was relieved when I felt him withdraw his hand and the petticoats went with it. We did a duet during the instrumental section; him waving the frilly white froth in front of his stomach, me flashing the punters with front and rear views of the sheer panties.\n\nI was feeling wet all over. The exertions were making me sweat and I could feel small rivulets trailing down my body inside the corset. I could only imagine how my snatch looked under the strong lights. I was soaking, I would have guessed the reflections off my wet pussy was sending beams of light all over the room. I slowed my gyrating to get the apron off and threw it to Mr J. He blew me a kiss which was nice.\n\nI leaned back against George and asked him to unzip me. How, or why, he interpreted that as an invitation to stroke my tits was not clear to me but after enjoying the sensation for a time I moved his hands towards my back. To give him his due, he did a fair job of unzipping me given that I didn't stop wriggling and wiggling through the whole process. I even thought I felt a touch of an erection through the folds of fat at one point. I stepped out of the dress as the track wound down, did one last strut across the stage then sprinted back and threw myself onto him.\n\nI had both legs around his belly, me arms around his neck and I kissed him on the mouth. We were both breathing too heavily to risk suction but the softness, dampness and enthusiasm made up for that. He was holding me up in the palm of one hand and I pressed down on the strong fingers demanding he squeeze. He didn't let me down and I was positively shaking when the track drained away and I lowered my feet to the floor.\n\nGeorge waved both arms aloft to acknowledge the cheers. I swung one of mine in a wide arc to give him an almighty smack on the arse to get him off the stage. He pretended to notice, though I doubt it made any impression. He scurried off to the pint Mandy had put at the edge of the bar. \n\nThe rap and bass intro at the start of \"I'm Free\" only required me to stretch out my arms and sway from the waist. I used the time to try and get some breath back. I'm at least forty years younger than Mick, but, I told myself, there's no way I could keep up that level of energy for two hours. Respect.\n\nMr J was waiting at the foot of the stage offering a hand to help me down. I remembered as I hit the floor and started to push through the press crowded to the front that last time the first strip was stage only. I didn't hear any objections and anyway I needed to touch and be touched. I stroked faces and felt hands on my bum as I moved through to the centre of the room.\n\nA new group of vocalists took the lead as the eighties band got into their stride. I made a point of cheek-kissing the most enthusiastic of them when we got to \"love me, hold me\". They seemed to like it. The audience sorted themselves out into a wide circle encompassing about ten tables and I sort of sashayed around them with outstretched arms as the repetitive beat pounded out. I was quite happy with the kissing, the bum stroking and the occasional slap on my derri\u00e8re. Some ground rules needed to be established with the \"I'm Free\" bit though. A couple of the guys seemed to interpret \"love me, hold me\" as an excuse to pick me up bodily and rub me against their hard-ons. I'm not saying it wasn't pleasant, but it sort-of spoiled the rhythm of the dance.\n\nI found Matt sitting at a table in the middle of the room. His eyes were shining and he nudged the guy sitting with him as I pointed at him and snaked over. I kissed him on the mouth and then whispered for him to grab one end of the corset strings. It took him a while as I ground on his lap. When I was sure he had a grip I stood and took a step across the aisle. The drinker nearest me was a woman about forty. She was on her own though the table was full of half-finished glasses. She went bright red when I handed her the other end of the knot and tried to cover her face.\n\nI slowly moved away from them in time with the music and felt the unraveling behind me. It took no time for the loops to fall away and I turned to take the string back with a wiggle of my bum to Matt and a blown kiss to the woman. The cheer she got mortified her and after looking round for any means of escape just covered her face again and lowered her head to the table. I strutted the perimeter of the audience fumbling with the cross-tie until it came loose and then started trying to loosen up the bindings which ran through eyes in the corset itself.\n\nIt was impossible to do it backwards and keep time with the music. So I did what any sensible stripper would do: picked a nice-ish looking guy in the crowd, pressed my bottom against his hard cock, wiggled a few times and let him deal with the strings. He did a good job, I felt like I was being released from a punishment as the stays loosened around my middle and my breathing returned to something-like normality.\n\nThe singers stopped as we got to the second rap-interlude on the track and I knew it was time to get back to the stage. The clips on the front of the corset came undone easily now the back was loose and I felt my boobs sag back to their normal position as I undid the last one. I extended the two wings of the rigid garment with my back to most of the crowd as I reached the foot of the stage. I shook my hips against it a few times; I didn't want complaints from burlesque-purists and I had watched a lot of performers on YouTube over the past few months. I finished by holding it in the air so people at the back could see they weren't being cheated, then folded it over Mr J's arm before accepting his hand back onto the stage.\n\nThe Soup Dragons did their bit with their extended fade. I still had time to do a passable take-off of a sixties dolly-bird disco dance; my new haircut was perfect for that. My bra and panties left little to the imagination, better say nothing; I had chosen them precisely for that reason. The boys could see what they were getting for their money as I stopped and let Charlie Watt's percussion introduction to \"Sympathy for the Devil\" kick off the finale. I gave a few jerks as Mick's initial yelps enhanced the beat and got ready for the song-proper to start.\n\nThis was the only part I had rehearsed. On \"Please allow me to introduce myself\", I stood sideways to the main body of the crowd, hands on hips and staring straight at them barely moving. At \"I'm a man\" I hooked a thumb on the waist of my panties, pulled them forward, looked down, turned back and shook my head. \"Of wealth and taste\" saw me running a finger over my pussy lips, pulling it back and sticking it in my mouth. The timing was perfect. I savoured the flavour of myself as whistles, barked laughter and cheers broke out everywhere. I caught Mr J's eye and mouthed \"crude\" to remind him of our earlier conversation.\n\nThere was no singing to this one. Anyone who can remember all the lyrics must be a real nerd. And tonight was not nerd-night. I basked in the sweaty lust coming at me from the floor and went back to a less-energetic Jagger impersonation. The song was perfect. The lyric line is steady with some complicated changes in beat to accommodate the words, but underneath the warp-speed bass and percussion line was driving me crazy. I broke up macho-strutting and posing - nods to Mick - with bursts of frenzied dancing as I tried to keep up with Charlie's understated drumming.\n\nI virtually tore off my bra when the \"oo, oo\" backing-singing started about one-third in. I stretched out my arms and kept pushing them up in time with the music, urging everyone to join in. The veteran Stones fans took the lead, it didn't take the younger set long to pick up the complexity of the backing lyrics and soon the whole place was rocking. It was great to see them yelling their lungs out, every now and then glancing at those standing around them to make sure they weren't the only ones making fools of themselves. Everyone was smiling at each other and then looking back at me. I didn't have to do much to keep the vibe going so I unleashed my inner-Mick.\n\nI was in another world. Say what you like about those pensioners, but they sure knew how to knock out great tit-shaking tunes. I was bouncing mine around so much I was sure something was going to get bruised. But I didn't care. In a moment of sensibility I pulled Mr J and Jason up on stage so I had someone to lean on while I got the rest of my kit off. It wasn't sophisticated, I just needed to get naked as quickly as possible. I gave Jason my panties as a souvenir, something to show Tracy later, and tucked the garter into Mr J's suit pocket. The suspender belt and stockings just went out into the crowd and I pushed my helpers off after them. This was my time and I didn't want anyone getting in the way.\n\nThere's a point in the song when the oo-oos go up an octave. From then on I was just jumping up and down in time with the music, or running up and down the small stage threatening to crowd surf. It was more like an exercise class than a dance routine. They didn't care and neither did I. Everyone was having a great time. \n\nI was, a la Mick, clutching my groin at various points during my performance and I could definitely feel an orgasm building. The butterflies had tired themselves out ages before and all I was getting now was industrial-quality pulsing. The temptation to just stop and masturbate myself into ecstasy was almost overwhelming. Looking out into the crowd to try and pick out someone to fuck was no use. It was either all of them or none of them, and even I wasn't that far gone.\n\nI didn't know whether to feel a bit down, or relieved, when eventually the fade began to kick in. I was beginning to flag and got through the closing minute or two on pure adrenalin. When the noise in the bar finally overcame the sound from the speakers I just stood hands on knees, enjoying the sensation of corset-free deep breathing and trying not to throw up. \n\nI made a supreme effort to raise my head and look out at the reaction. All I could see was red, sweaty faces and clapping hands. Mates were elbowing each other and nodding appreciation, whistles were coming from everywhere. When someone shouted \"more\" I managed to raise a weak arm and flap a limp wrist at them. Mr J was the only one sitting down. He was beaming up at my and gave me two thumbs up when he caught my eye. I straightened up and tried to work out what to do next.\n\nGeorge came to my rescue. His voice boomed out as the adulation began to ebb. Even then he had to shout through the mic to make himself heard.\n\n'Amazing or what? Suzette. Let's hear it.'\n\nI looked over to where he was standing at the side of the bar. Mandy was next to him clapping. Scarlett blew me a kiss and then waggled her tongue out suggestively. I must have looked as lost as I felt.\n\n'Come on you lot let the girl down. You can show your thanks in a more traditional way as she goes round with the jug. Suzette.'\n\nThere was renewed energy in the clapping which had never really stopped. At least I knew now what I had to do. I took Mr J's hand and almost fell off the stage he handed me a glass and shouted.\n\n'Water.'\n\nI gulped it down in one and wiped my hand across my mouth. I was starting to come round a bit. He took the empty glass and replaced it with a small towel - goodness only knows where that came from. I rubbed my face vigorously and began to feel alive again.\n\n'Don't worry. Not that you deserve it, but she'll be back on again after midnight. So hands in pockets and make sure there's plenty of notes in that glass. I'll be checking.'\n\nMr J had the pint glass at the ready and pushed me out into the melee. JJ Cale came over the speakers. \"After Midnight\". Not subtle George, not subtle at all. But the soothing hum of his voice was just what I needed. Everyone seemed to chill. There was a notable exodus to the toilets and bar, but dozens of sweaty men wanted selfies and progress was slow. It was the same etiquette as before; plenty of hands on my bum and more than a few thumb-strokes on a boob from an arm thrown round me for the close-ups. Just enough to keep my buzz going.\n\nA couple of women my age asked if it was OK to pose with their tongues on my nipples. Their boyfriends/husbands seemed to have problems holding their hands still as they tried to get us all in.\n\n'Looks like they're ready to give you a good time tonight.'\n\n'Wanna join us?'\n\nWe laughed together and I kissed them both on the cheeks before their men took their places. I thrust out my boobs to give them a clearer target to aim at. They seemed more shy than their partners and I had to pull their heads in while the women giggled.\n\n'I think those two are gagging for a foursome boys.'\n\nI whispered to them. The fatter one put the fiver he was holding back into his wallet and drew out a twenty. I thought that definitely deserved a kiss each.\n\nOthers took my interchange with the two couples as permission to go further. The stolen kisses got closer to my mouth and most guys copped a more-or-less surreptitious feel of my boobs as we posed together. Mr J ferried full jugs back to the bar and my nipples were now permanently hard. I stopped sitting on laps and grinding myself down on erections when, as I was being passed from one youngish man to his mate at a table near the back a finger was slipped straight into me. I gasped at the suddenness of if and let out an involuntary groan. I jumped up immediately. If I'd stayed an instant longer I would not have got up until he made me cum. I smiled down at him as he said he'd never wash his hands again.",
        "Around the bar, men were caught between touching me up and losing their place in the queue for beer. Handfuls of change were piled into the glass and snaps taken with me in the middle of groups. Whoever had chosen the music had taken the lead from JJ and stuck to mellow. I found myself humming along with Van the Man and even noticed a Neil Young track or two in the mix. Good choices, it helped me and everyone else calm down.\n\nI eventually got back to where George and Scarlett were standing. She hugged me tight and kissed me full on the mouth. I savoured the embrace. It was the softest and sweetest of the night.\n\n'You were amazing. I don't know how I'm going to follow that.'\n\nI noticed she'd changed from the gown into a tight leather outfit with lots of zips and studs. She looked stunning. She saw me looking at her.\n\n'I wanted you to see my new routine. Mandy said it'd be better to keep the energy up anyway. They all be shagged out for the second sets and we can take our time then.'\n\n'Can't wait.'\n\nMandy handed me a glass of fizzy water which I downed in one. I let out a long belch and handed it back to her.\n\n'Scuse me. Another slice of lemon in the next one. I feel like pushing the boat out.'\n\n'You were fantastic darling. I'd have paid money myself to see that. I've had to put the \"Slippery when wet\" sign up in the Gents. Wankers.'\n\nShe gave me a face-splitting grin and turned to get me a refill, leaving me to try and work out whether the parting word was an insult or an explanation. George and I looked each other up and down.\n\n'Did you have to say all that nice shit about me? I've had people patting me on the back all night. It'll be back to the chiropractor for me when they open.'\n\n'Didn't mean a word of it. Tracy paid me to do it. Said she'd forgotten to get you a Xmas present.'\n\nHe grinned at me and then turned to get back behind the bar muttering something about remembering a time when strippers kept their gobs shut and drank gin and tonics like proper women. Scarlett smiled.\n\n'I think he's in love.'\n\n'I'm definitely leaving town then. Listen, you go out and knock them dead. I need to recover for a bit. Might even have to eat one of his bags of crisps; if there are any within twelve months of their sell-by dates.'\n\nWe both leaned back with our elbows on the bar watching the press thin out and waiting for George to announce her. Crosby, Stills and Nash sang something about foreign travel. When I guessed it was getting close, I kissed her on the cheek and turned to go to the Snug. I had forgotten I was still nude but was feeling a bit chilly. I bumped straight into Matt. He must have been standing there all the time.\n\n'Sorry, Matt. Didn't see you.'\n\n'That's all right. You were fantastic. Again. My mate thinks I'm some sort of Don Juan because I know you.'\n\nI smiled at him and put a hand on his shoulder. Then I stroked his cheek. That voice was going straight to my pussy.\n\n'I just wanted to ask whether you'd take a cheque?'\n\n'A what?'\n\n'A cheque.'\n\nHe handed me a slip of paper. I looked at it and laughed. It was a cheque with no name in the \"pay to\" section, filled out for seventy five pounds. He had signed it with a kiss after his name. I burst out laughing. Only a tax man would still have a cheque book. I couldn't remember when I'd last seen one. And only a besotted, or totally randy, fool would believe any promise that George made. I looked at him.\n\n'Fuck it. Let's do it.'\n\nI took the cheque, jammed it into the nearest jug and pushed him towards the Snug. I picked up the glass Mandy had silently provided and guzzled half of it as I prodded his back. He didn't resist. I kissed him hard when we closed the door behind us, then pushed him away again.\n\n'On one condition.'\n\n'What?'\n\nHe looked worried. I put down my water and let him stew for a second.\n\n'Keep talking to me you sexy bastard. It's your voice, not your cash, that's got you here.'\n\nHe started telling me how beautiful he thought I was and how much my strip had turned him on. I scrabbled at his belt and kept pushing him back onto one of the banquettes. It was luck rather than judgement that he fell back comfortably when his trousers eventually came down. He was describing my breasts in fairly graphic terms as I dropped to my knees and shoved a hand into his boxers. His dick was hard, hot and small. It couldn't have been above five inches. It already felt sticky to the touch. He gasped as I stroked his length with a finger.\n\n'Keep talking.'\n\nI shoved my mouth over him and took his full length in at the first attempt. The taste of stale pre-cum nearly overwhelmed me. I pulled back and dribbled a mouthful of saliva over the end and gave him a couple of hearty pulls. He was going on about my eyes being like pools of something. I went down on him in earnest, pushing my hand down between my legs. His voice seemed to set up vibrations all down my body. I tried to remember whether I had put a dildo in my bag when I packed for the evening.\n\nI could feel his hands on both sides of my head as he guided me up and down along his knob, so only slowly became aware that his sensuous nonsense had stopped. I pulled my head back and growled. He was looking up at something behind me and I turned to follow his gaze. George was standing over us unbuckling his trousers. He leered at me when he saw me turn, went down on one knee and impaled me with a finger. I groaned, but couldn't stop myself pushing back against him. My head was swimming and resisting all attempts to get him to stop. I stroked the cock in my hand and looked up at Matt. His eyes were closed.\n\n'Jeez George.'\n\nI panted out the words as his finger worked my pussy.\n\n'Sorry love. Needs must.'\n\n'There are condoms in my bag.'\n\nI admitted surrender and wanked Matt harder. I rested my head on one of his thighs to look sideways at the fat man towering behind me.\n\n'Brought my own, yours'd be too small.'\n\nI could hear him fiddling with his clothes and ripping open the johnny.\n\n'Do us a favour then.'\n\nEvery word took an effort of will. The finger was back in my snatch and probing expertly.\n\n'Anything.'\n\n'Don't take off any more clothes. I think I'd throw up and poor Matt's already speechless.'\n\nWe all laughed at that and I stretched my knees as far apart as I could hoping to everything holy that I was up to taking him in. I lowered my head onto Matt's dick and heard him whimper.\n\n'You keep chatting son. The lady loves it. Don't mind me.'\n\nMatt muttered something about the deity and I soon knew why. I felt George's cock stroking the entrance to my pussy. I braced myself, but not enough. He slid straight into me with enough force to push my head into Matt's stomach. I heard his head bounce off the back padding of the seat. I felt like my legs were being lifted off the ground he was so big. My pussy was stretched like it had never been before and emergency bells seemed to go off all over my body. I screamed.\n\n'God I needed that.'\n\nHe pulled slowly back and that in itself seemed to take an age. My poor vagina was almost in spasm, I was feeling pressure all through me and my clit seemed to have been stretched to twice its usual swollen size. It was picking up every change in texture and shape as he continued to withdraw. I bobbed my head back over Matt's dick and braced my arms against the back of the bench ready for the next thrust. It came, but less violently than the first. I closed my lips tighter around Matt and took care to keep my teeth well away from him. There was a real risk of injury.\n\nGeorge slowly increased his rhythm. Thank goodness for small mercies. Matt and I both grunted in unison as George pushed home and the force shoved my head down on Matt. I felt an orgasm rip through me and my juices flow down the inside of my thigh. I needed to open my mouth wider to breathe and risked moving a hand down to Matt's cock. I could feel tears running down my face as I bucked and stretched to accommodate my uninvited guest. I knew my next orgasm was imminent. I didn't expect all three of us to come at once.\n\nGeorge suddenly stiffened inside me and I tried to move my knees even further apart. Matt started making sweet miaowing sounds, George's cock rippled my vaginal walls as his spunk pumped out pushing me over the edge and simultaneously my face was splattered. I closed my eyes and opened my mouth and caught most of the rest of it with my tongue. I swallowed as fast as I could, I needed my mouth for oxygen intake.\n\nWe all started laughing again. At what I don't know. I groaned as George pulled out of me. I could almost sense my labia waving him goodbye as they struggled to close. I fell on my side and Matt manipulated his legs around me as he lay back on the banquette. I didn't care what George did. As long as he didn't fall on me. I looked across. He was lying on his back in the middle of the floor trying to deal with his condom. That just made me laugh more.\n\nWe lay there in our own little worlds. I often like to be held after sex, but at that moment I just wanted to let my poor pussy take a time out. I don't know how long the silence lasted; I sensed Matt pulling up his trousers. I had no inclination to speculate or explore the reasons for the noises coming from the other side of me. When I opened my eyes George was standing over us offering Matt his hand to help him upright. I shoved myself up to a sitting position and watched them zipping up their flies.\n\n'Glad to have been of service.'\n\nThey both looked down, but it was George who made the first move. He scooped me up into his arms and lifted me bodily. He kissed me gently on the lips.\n\n'You, my sweet, are a force of nature. Sorry to butt in like that, but if I'd asked you'd only have wanted to argue the toss.'\n\n'Too right I would. Can't deny I liked it but you'll still get my invoice in the post.'\n\nHe kissed me again and laid me gently down on the banquette. He turned and put an arm around Matt's shoulder almost lifting him off the ground.\n\n'Come on mate. Let's give the lady some privacy. And anyway, I don't know about you, but I could murder a pint.'\n\nI listened to them chatter away as they went down the corridor. Their voices were lost when they opened the door to the bar. It sounded like Scarlett was making an impact. I stretched my arms out over my head and pushed my toes down as far as they would go. Every bit of me seemed to enjoy the dying embers of my second orgasm. I smiled and began to think about my second strip.\n\n'You ain't seen nothing yet.'"
    ],
    "authorname": "Touch_type",
    "tags": [
        "striptease",
        "mmf",
        "group sex",
        "humour",
        "oral sex",
        "flirting",
        "forced",
        "fantasies",
        "young-old",
        "friends"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/entertaining-at-large-ch-08"
}