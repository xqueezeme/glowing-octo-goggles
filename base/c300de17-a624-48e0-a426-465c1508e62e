{
    "title": "The New Girl",
    "pages": [
        "Here is another piece of me. I hope you all enjoy.\n\nXOXO SkylerLuv\n\n******\n\n\"Have you seen the new girl yet?\" Pen whispers as she nears my cubicle.\n\nHer short copper hair is pushed aside by a small yellow pin. She is dressed in business attire but it does nothing to hide her curves. Penelope is just your average attractive redhead with green eyes. Her charming personality is another plus and the main reason we are friends. Not a lot of people can deal with my dry and sometimes dark humor. Had we met in high school we would have never crossed paths. Or maybe we would have. She claims to have been friends with everyone at her high school. I do not doubt it.\n\nI go through my emails, trying to wake up after getting a late start to my morning.\n\n\"No, and I don't really care.\" I blow a strand of hair away from my face. I often use my hair to build a curtain around me. On good days, it was voluminous enough to shield me from the curious whispers of those around me. Today it is acting tame but I know it is only a matter of time before it gets a mind of its own. I don't mind as long as it keeps people away. It is glossy and black, coming down in loose waves stopping just above my elbows today. I didn't have the upper body strength or patience to put it up today.\n\nI think back to how short it was when I started here. The longer it grew, the less inclined I was to get to know others. Each inch marking a friendship I have passed up on. I have been with this company for one whole year and not a lot of people can say much about me, aside from Pen. They know I work hard, turn in my work on time, and stay out of anyone's way while maintaining a good name brand. They don't know how I take my coffee, what music I listen to, or what my favorite dish is. To them, I am seconds away from laser shooting anyone who tries to impose themself in my private life. They are not completely off target.\n\nAt 5 feet and 5 inches, with soft curves and dark eyes I am nothing but a plain Jane. I have no freckles or beauty marks to make me memorable. I normally wear dark color suits to work, comfortable shoes, and just hints of makeup. Mascara, eye liner, chapstick, and eye shadow if I am feeling adventurous. My dark hair is probably my best attribute but still not enough to make people fall over themselves. If they do, it is usually because of my death stare. Okay, maybe I am being a little dramatic. But I definitely do not smile as much as women are expected to. A lot less than even the gruffiest old fart that works here.\n\nI recently graduated college, and this is my first job straight out of college. I have my own apartment and a car. I rarely drink, never smoke, and think Netflix is all I needed to have a good night. Books used to be my guilty pleasure but I haven't done it in a long time. My parents live across the country and I talk to them every so often. At this moment they are more engaged with my younger brother, Bobbie, who is in his second year of college.\n\nPersonal details like that just seem trivial to me. Why would anyone care and why would I offer that information? Pen is the only person who knows some things and that's because she's not afraid of me or my answers. She voluntarily gives me too much information but I have learned to listen when I can and ignore her when I want. Although she makes it hard when she talks about her interesting life. I often wonder what I would do in certain situations she puts herself in but then I remember I am not the star of this show and I get over it.\n\n\"I hear she is cute.\" She brings me back to the present.\n\n\"Again, I don't really care. What are you doing in my work space anyways?\" I shoo her hip away from the corner of my desk.\n\n\"Your cubicle is right near the restrooms. If I was new, that would be the first place I would go to once I made myself comfortable.\" She continues to lean against my desk and brushes my attitude away. \"Might want to drink some coffee before introducing yourself. You need a quick pick me up.\" Her eyes continue to stray towards the restroom doors.\n\n\"Pen, any other morning I would entertain your whims, but I really need to prepare for our meeting this morning. Don't you have a short presentation as well?\" I grumble.\n\nPen works in the sales department while I work in IT. Once a month we have a meeting with other departments to go over any pressing changes or just to give an update on how the different aspects of the business are going. Today is that day. Yay.\n\nShe stomps her feet and practically whimpers. \"Give me a break Annie! This is the most exciting thing that has happened since you got here. Hearing people talk about your dark features and even darker personality. I couldn't get through a single conversation that didn't involve you.\" She lightly pushes my shoulder. \"For a second I thought you would be competition for the next office cutie but I still hold that crown.\"\n\n\"I would never fight you over that crown and you know that. Plus, the guys here are nothing to fight over.\" I reply to one last email and open my presentation slides to look over them once more.\n\n\"Yeah, but that's because you're into girls and you never find anyone attractive.\" Her eyes are glued to the restroom door. She pretends to pick up some papers on my desk and shuffles through them to look busy.\n\nI snatch them out of her hands and finally get up to push her out of my cubicle. Just like no one in the office knows what kind of music I listen to, no one can say what my sexual preference is. It is probably one of the most interesting facts about me and one that I prefer to keep on the down low. No need to call any unwanted attention to myself.\n\nShe pushes against me but I grab her shoulders and force her to turn her around so that I am pushing her from behind.\n\n\"Out!\" I grumble.\n\n\"Oof!\" A little too late I realize I just pushed Pen into an oncoming stranger who has just spilled coffee all over their white blouse.\n\nMy eyes widen, the blood rushes to my cheeks.\n\nPen throws her hands up in a defensive position. The stranger stands there, registering what just happened. For a few excruciating long seconds no one says anything.\n\nPen is the first one to break the silence. \"Oh my God! I'm so sorry! I didn't-\" She runs away from the scene, leaving the new hire and myself alone.\n\nHer hair is up in a high bun with long bangs almost touching her eyelashes. She has light brown eyes and a darker skin tone than I do. I have to look up at her because she's wearing heels and she is naturally taller than I am. She has more pronounced curves than I do but not as much as Pen. I look at her ruined white top and rush up to her before stopping inches away from her body. My hands are out as if I want to clean her shirt but I have nothing to clean it with.\n\n\"I'm sorry.\" I ball my hands into fist and drop them at my sides. She gives me a small smile and for some reason that makes me feel even worse. I feel my eyes begin to get misty and my fists begin to shake. Get a grip! I don't get emotional at work. Especially not over something so small. Something so insignificant.\n\nBut that is such a classic move for me. While most might be mistaken and think that I am coordinated and always have my shit together I am actually a major clutz. The reason people think otherwise is because I am always super careful with anything that I do and it takes me almost twice as long to do something if I want it done perfectly. If I am ever put on the spot that requires me to be any type of athletic test, I am royally screwed. Even getting coffee is sometimes a feat that I have to carry out before anyone gets into the office. Whenever I am not careful I just mess things up. Like this poor girl's shirt.\n\n\"It is okay.\" Her voice comes out deeper than I expect. She sticks out her hand.\n\nI stare at it, not wanting to shake her hand lest she feels how much my own is shaking.\n\n\"Do you have another shirt to change into?\" I avoid looking directly into her eyes. I know she can see I am on the verge of tears and that makes it even worse. She should be the one that is crying. I ruined her shirt before she even got to start her first day at work.\n\nShe opens her mouth but just shakes her head. She even has the audacity to look embarrassed, as if this is any of her fault. This is not her mess to clean up, it is mine.\n\nWith new determination in my eyes, I go back into my office to snatch my car keys and log out of my computer. I have 15 minutes before our meeting. I grab her arm and drag her out through the back of the building, towards the garage.\n\n\"Umm...\" She doesn't say anything else.\n\nI continue to pull her along.\n\nI finally let go once we are at the back of my old Sentra. I pop the trunk and rummage through the duffle bag I keep back here for emergencies like this. There are a couple of work pants, some stockings, and finally some blouses. I glance back to look at her a couple of times and finally go with one that I think will fit her.\n\nI close my trunk and then pull her to the side of my car so that we can't be seen by anyone nearby. I am in the zone, the solution zone, ready to save the day and make everything better. It is not until I try to unbutton her shirt that she grabs my hands and speaks up.\n\n\"What are you doing?\" The curiosity in her eyes is evident. No annoyance or disgust.\n\nI finally snap out of it and realize what I was just about to do. \"Sorry.\" I snatch my hands back.\n\nShe clutches the blouse I gave her.\n\n\"Just try that on, it might be a little small but it will be better than what you have on.\" I turn my back to give her some privacy. Looking down at my watch I think about wringing Pen's neck. She is just as much at fault as I am. She ran away as soon as it came down to fixing the problem. There would not have even been a problem if I started my morning alone. Still, I knew I would not blame Pen if it came down to pointing fingers.\n\nMy eyes stray to the car next to me. It is hard to miss the mirror pointed directly at the new girl behind me. I try to pry my gaze away but curiosity wins. The black blazer she was wearing is now on top of my car. She unbuttons the white shirt and pulls it out of her black slacks. She's wearing a plain white bra. No lace, nothing fancy. And yet I feel my cheeks heating up. Her breasts are big enough to fill the cups. My gaze travels down and I notice a small scar above her belly button.\n\nShe stops moving and I look up at her face to see her staring straight at me. My eyes widen and I clear my throat before looking away.\n\n\"Thank you.\" She murmurs after some time.\n\nI turn back and look at how my shirt fits on her. Because her breasts are bigger and she is taller, the shirt comes down just enough to cover her stomach.\n\n\"I'm really sorry.\" I try apologizing again. Not only did I ruin her shirt, but I just stared at her like some pervert as she changed into my shirt. I am the literal worst.\n\nShe shakes her head. \"No harm, no foul. I just have to remember not to raise my hands today. See you around.\" Her hand raises a bit as she waves.\n\nI find it hard to look away from the exposed skin between the hem of the shirt and top of her slacks.\n\n******\n\nI can't completely ignore her during the meeting.\n\nJust like all others have done before her, she is made to stand up and introduce herself as the new hire. She also has to sing a song and opts for some Katy Perry song I heard on the radio. When I was put on the spot like that, I went with some old nursery rhyme that was hard to mess up. I miss her name because I am completely focused on my notes. I don't want to ask those around me because then it would show that I am actually interested. I can't let them think that.\n\nPeople fall in love with her during the meeting. I can't lie, she does have some type of enthralling energy. She is personable and attractive. Eager to learn about the company and ready to get her hands dirty. She's going to be in sales with Pen's group.\n\nPen. I roll my eyes.\n\nAfter the meeting she rushes to my side and apologizes for leaving me alone with the new girl.\n\n\"I rushed to the restroom to get paper towels but they were all out. I tried to go to the second-floor restroom but by the time I came back you both were gone.\" She is pouting and trying to be cute.\n\n\"I told you I didn't care who the new girl was. That was all your fault.\" I won't let her off so easily. I could have gone through my morning without any of that.\n\n\"I said I was sorry!\" She's whining again.\n\nI block the entrance to my cubicle and glare at her. \"Enough. Just leave me out of your dumb antics in the future.\"\n\nShe sighs and hangs her head. \"Fine. Will you finally forgive me?\"\n\nI cross my arms. \"I'll see you at lunch.\"\n\nThat is enough to have her practically skipping back to her desk. All if forgiven.\n\nWe rarely argue. Mostly because I don't care to waste my time with arguments and because she usually always gets what she wants. Since she is the only one who will tolerate me it is hard to stay mad at her.\n\n******\n\nI don't see the new hire for the rest of the week.\n\nShe is kept busy with training from her team members. Pen gives me a play by play of how she is doing and how quickly she is able to pick up some of the sales terminology. Her team is happy to have her, just like everyone else in the office. I don't miss how others change the way they talk or stand when she is heading their way. That is usually my cue to leave. Seeing her is just a reminder of how I almost lost it at work over some spilled coffee.\n\nWhile I try to avoid her for personal reasons, I make sure to leave a cup of coffee with cream and sugar packets on her desk every morning. She probably knows it is from me but is nice enough not to mention it. The ebbing embarrassment renews every time I set the coffee down on her desk. I get there early enough not to have to explain to anyone else why I am doing it. Especially to Pen. Knowing her, she can see the coffee thing as something more than an apology. I decide one week's worth of coffee should be enough to get my apology across.\n\nPen can't seem to stop talking about her though. In the morning, during lunch, even after work she gives me little details about Quin. Quin is an odd name but I don't mention it. In fact I pretend not to care about anything Pen says when it comes to her. Partly because I don't see why I should give her any importance and the other because I don't want Pen to assume I am interested in her. Quin... doesn't really roll off the tongue.\n\nI'm logging out of my computer and gathering my things as Pen goes on and on about today's training session with Quin. Apparently, the customers fall for her charms just as easily as others in the office do.\n\n\"Her voice is just so reassuring and caring. Not something you can fake so easily.\" Pen babbles on and on and I finally tune her out. If I keep tabs of everything the new girl is doing, I could be promoted to stalker status without meaning to. So far, I know that she is caring, beautiful, and laid back. Things I could have attested for myself just from looking at her. She is also very loyal, smart, and eager to please the hire ups. She'll do good. I think. I don't know for sure and I don't care.\n\n\"Okay, Pen.\" I finally sigh out loud. That is her cue to stop talking. There is only so much I can listen to without getting a headache.\n\n\"Fine.\" She hops off my desk and walks with me as we head out the back door.\n\nWe walk in silence towards our respective cars. She parked on the other side of the garage. We say goodbye before turning in opposite directions. We're one of the last ones in the office, leaving only a couple of cars on the first level.\n\nI don't notice the new girl leaning against my car until I almost run into her.\n\nShe is wearing a dark gray business suit and a beige shirt. Her black pumps give her more inches to tower over me. The suit is fitted. Very fitted. I try to ignore it.\n\n\"Are you avoiding me?\" Her tone doesn't sound accusatory. Her tone is playful. Something I am not used to. Even Pen knows to stay away from things like that if she wants me to take her seriously.\n\nDoes she not know who I am? I'm sure by now she has gotten a run down on who is who in the office and who to stay away from. Then again, Pen probably gave her some misinformation.\n\n\"No.\" I don't smile back. In the back of my mind all I can see is her coffee-stained white shirt. Ruined. Because of me.\n\nMy reaction doesn't deter her. \"Here.\" She gives me a brown shopping bag.\n\nI take it and stare into it. I expect to see the gray blouse I let her borrow but instead I see a tan turtleneck shirt and a bar of chocolate. The overly priced one they sell at retail stores.\n\n\"What is this?\" I don't want to sound rude but it is not what I expected.\n\n\"It is a thank you gift.\" Like Pen, she does not seem bothered by my forwardness.\n\n\"Where is the shirt I gave you?\" My face is as blank as the garage walls surrounding us.\n\n\"You know, most people would be grateful.\" Her smile is gone and she actually looks somewhat annoyed.\n\n\"I don't like chocolate. And I don't wear turtlenecks.\" No point in lying to her.\n\n\"Oh.\" She shrugs. \"I thought the shirt would look nice on you.\"\n\nWe stare at each other for an awkward moment and when I finally have had enough of... whatever this is, I make a move towards my front door. \"See you around.\"\n\n\"Bye Anne.\" She walks to the driver's side of the SUV parked next to my car.\n\n******\n\nThe light on my phone blinks a couple of times before I reach to grab it.\n\nI place my drink next to it and answer it.\n\n\"Hi mom.\" There is an inflection in my tone meant to sound excited. Excitement is not what I would use to describe my conversations with my mom.\n\n\"Hi, darling.\" The endearment falls flat. \"Just wanted to check in. It has been a while.\"\n\nHas it been three weeks already? Our calls are like clockwork. Almost as precise as my visits, which are only on major holidays and her birthday. \"Work has kept me busy.\"\n\nShe sighs, following her script to a T. \"Well, your father misses you.\"\n\n\"I know, I will see if I can visit soon.\" My father is probably sitting in his favorite chair, watching an old football game, not at all missing my presence. \"Have you talked to Bobbie?\"\n\nTalking to my mom doesn't give me the comfort it would give most. She's not mean but she's also not warm. She tries hard to be caring but to an extent. I don't blame her and yet I wish she would try just a little more. I'm not the little girl that would beg for her attention or ask to get a hug or a kiss to feel better. Maybe because I know it will not make me feel better. But I know I am too critical and too harsh and have high expectations. I have to remind myself that I am lucky that I have a mother who calls at all.\n\n\"He's doing well.\" She chats some more about how she's doing and how her garden is holding up. She sighs again, not unusual but more noticeable than before.\n\n\"Are you okay? You sound tired.\" I imagine her leaning against our old kitchen counter, holding on to the cabled phone in one hand and the other inside the pocket of her washed out green apron. Her shabby curls are probably untamed from the heat of the pots and pans. She probably just finished cooking.\n\n\"Yes,\" That is all I get.\n\nBeing vulnerable is not something we have much practice in. It is hard not to be concerned when she doesn't add anything else.\n\n\"Do you need help with anything?\" I already know the answer.\n\n\"No, you just make sure you're taking care of yourself.\" She's probably patting her hand against her hip now. Our conversation has run its course and we are going off script now.\n\n\"I miss you guys.\" I throw out there. Because I hope that if I am honest, it will push her to do the same.\n\n\"Take care, sweetheart.\" Click.\n\n******\n\nOn Wednesday afternoon the following week I run into Quin in the restroom.",
        "She's washing her hands as I come out of the stall.\n\n\"Hi Anne.\" She gives me a pleasant smile.\n\nI give her a professional smile and wash my hands. I look at my dark blue blazer and white shirt underneath trying to figure out how I must look to her. I let my hair fall to the side to block her from my peripheral vision.\n\nI steal glances at her from the mirror. Her light green blouse makes her brown eyes look brighter. Her breasts are hard to ignore with the type of blouse. It accentuates each curve perfectly. I gulp. Does she usually take this long washing her hands? I continue to wash my hands until she dries hers.\n\n\"Bye Anne.\" The door closes behind her.\n\nHer voice leaves an echo.\n\nI hear it ringing for the rest of the day. While I am skimming through dozens of emails, as I am taking apart an employee's laptop to fix a broken screen, even as I am on my hands and knees to check a cable connection for an ancient old printer. Especially then. I put a stop to it as soon as I realized I checked the same cable three times.\n\n******\n\n\"I heard she likes wine.\" Ricky is looking over his desk to talk to Laura. The way he usually does when he wants to gossip.\n\n\"Really?\" Laura sounds surprised. \"I thought I heard someone say she is more into liquor than wine.\"\n\nI try to ignore their whispers as I help a customer on the line but the more I try to tune them out the louder they seem to get. Our team leader is out for the day, as he usually is Thursday afternoons. Of course, they feel like they can slack off because of it.\n\n\"Ms.Knits, can you please hold on for one second? I will be right back.\" I place her on hold and try to get up to reprimand these loud employees. The wired headset pulls my head back, making me realize it is still connected to the computer. I lean back to remove it carefully but some strands still get caught on it. I look around to make sure no one saw that. Running a hand through my loose curls I control my steps out of my office.\n\n\"Can the two of you stop talking so loud?\" I walk over to stand in between their cubicles.\n\nThey both snap back to their desks and pretend to look over some documents on their computers.\n\nIt is bad enough Pen constantly talks about the new girl, now I have to hear it from people in my own department? Not on my watch.\n\n******\n\nDuring lunch on Friday, Pen brings up the fourth of July cookout the office plans to organize. It will be two weeks from now.\n\nWe often have lunch outside of our office to enjoy the sunlight and get some fresh air. Being in the building for too long can cause anyone to have cabin fever. Plus, it is a nice spot to watch people from the green metal tables set out by corporate. We're right across from a strip mall full of restaurants, dry cleaners, a grocery store, and a Starbucks. It is always busy in the little part of town. Today is no exception, especially with the nice weather.\n\n\"They are still looking for some volunteers, you know.\" She nudges me with her pointy elbow.\n\n\"You know I never go to those things. Why start now?\" I remove the soggy lettuce from my burger. Today is my cheat day and I have been looking forward to this all week.\n\n\"I think you have been in your shell for far too long. One year is enough time for you to get settled and acquainted with everyone.\" She pushes her salad around and stares at my burger.\n\n\"I'm just here to work. I'm not looking for a second family or more friends.\" Out of habit I start to cut my burger in half. I give one piece to Pen and start working on my own half.\n\nShe squeals and she bites into the juicy meat. \"I think you should try and put yourself out there more.\" Her salad is completely forgotten on the tray in front of her.\n\n\"Why would I do that?\" I take a bite of some fries.\n\nWe watch people walk by on the busy sidewalk. There is a teenager flipping a sign for a tax preparation company on the other side of the shopping center. The food trucks that come to the side of our building have gained popularity since I have been here. I have yet to have a bad dish. I briefly wonder why Pen hasn't invited the new girl to eat with us but I prefer it this way. Being around her did not sound appealing to me.\n\n\"I won't always be here, Annie. Who will you talk to then?\" She bites into the burger again. She always talks about how one day she will leave this job and never look back. We both know the pay is too good to walk away without at least glancing back.\n\nThe thought of not being around Pen does make me stop and think for a second. Even if she didn't leave, she might be promoted. She has the numbers and the personality to lead her own team. If she became a manager, we would see less of each other. It would be sad if she were to leave but I would eventually get over it. I always have and always will. All throughout high school and college I made friends that eventually moved on with their lives and never talked to again. Still, Pen will be really hard to replace.\n\n\"Gary.\" I answer without smiling.\n\nShe giggles. She knows I hate Gary. Gary who likes to do the bare minimum and will unload any work he can onto unsuspecting victims.\n\n\"Just say you'll come to the cookout and I'll leave you alone. I won't even push you into volunteering.\" She bats her eyelashes.\n\nI shake my head. \"If you promise to stop talking about it, I will think about it.\"\n\n\"No.\" She shakes her head. \"You have to promise me you will go.\"\n\n\"Fine.\" I say it mostly to shut her up and also because I know I have nothing better to do that day.\n\n******\n\nOn Tuesday afternoon Quin walks around each department handing out flyers for the cookout. This year the sales team is in charge of organizing it. Last year it was the marking team and from what I heard they did a really good job. Lots of fun games, tasty food and, of course, free booze.\n\nBy the time she reaches my desk I am already expecting her. The excited whispers of those who love to get a glimpse of Quin is hard to miss. My nose is in some handwritten notes when I hear a faint knock against the cushioned cubicle wall.\n\n\"Hi Anne.\" She walks into my office and sits on the only other chair in the small space. Her long legs are close to mine. I shift away.\n\nI pretend to be distracted, still looking down at my notes, and give her a slight nod. In reality I feel my hands clamming up. I don't know why. Maybe because Quin is not scared to look me straight at me or talk to me. While others shy away, she likes the challenge of talking to me. Unlike Pen though, she doesn't reap any reward. I still think the reward is not worth the effort. Having me as a friend can't be that enjoyable.\n\n\"Will you be going to the fourth of July cookout?\" She places a flyer in front of my notes and I finally look at her.\n\n\"Yes.\"\n\nShe smiles and stands. \"Great! I'll be serving drinks.\"\n\nI nod and continue to stare at her. I expect her to back down or look away but she does neither. Instead, we both stare at each other for a second too long. The longer I stare, the brighter her eyes get. I have to shift my gaze to a poster behind her.\n\n\"I'll let you get back to work.\" I can hear the smirk on her lips.\n\n******\n\nA week before the cookout I start to feel out of it.\n\nWhile at my desk I start to get the chills and a slight headache begins to form. I drink orange juice all day but the tickle in my throat starts to get worse.\n\nI'm walking back from the printer with a stack of reports in hand when I spot Quin walking around the corner. Any other day I would have walked in the other direction even if it took me longer to get to my office. I don't have the energy to avoid Quin today. It seems like an impossible task.\n\n\"Anne?\" She stands in front of me, blocking my path. \"Are you okay?\" The back of her cool hand comes up to my forehead.\n\nI weakly push her hand away. \"What are you doing?\"\n\n\"You look really sick. Anne, you need some rest.\" I don't miss the concerned look in her eyes. It is a similar look that my mom gave me when I was a little girl.\n\n\"I'm fine.\" I try to move past her but she grabs my arm.\n\nShe walks towards my cubicle and starts to gather my things. I don't have an ounce of fight left in me. My eyes are getting droopier and I can't deny that I feel under the weather anymore. She puts some sticky notes on my monitor and grabs my car keys.\n\nI just stand there and watch as she makes some calls from my phone. She hands me my orange juice and keeps putting her hand against my forehead. She texts some people on her personal phone. All the while I feel myself getting worse by the minutes.\n\n\"Here.\" She gives me her thin sweater when she sees me shivering.\n\nI shake my head but she already has it over my shoulders before I can talk. It smells divine. Expensive. I hang on to the smell.\n\nWe walk towards the garage in silence. I get into the passenger side of my car and she gets on the driver's side. I lay my forehead against the cool window. It feels nice. I close my eyes and allow the hum of the motor to lull me to sleep.\n\nThe next time I open my eyes I am in bed, a wet towel on my forehead.\n\n\"Here.\" Quin's voice comes from the corner of the room. She removes the towel and puts a glass of water against my lips.\n\n\"What time is it?\" I ask when I notice the street lights outside.\n\n\"About 8 at night.\" She gives me more water to drink.\n\nMy body feels like lead. I can't really move but I feel uncomfortable in my bed. I've sweated through my clothes and my sheets. I haven't gotten this sick in so long. It would be more alarming had I not gotten used to getting terribly sick for a couple of days every other year. It was a fair trade off in my opinion.\n\n\"What are you doing here?\" I ask, irritated. I don't need to be looked after like a baby.\n\n\"I'm doing Pen a favor.\" She pushes the covers off me and pulls me up so I am sitting. \"She was not in today and asked me to take care of you while she ran some errands.\"\n\n\"I don't need you guys to look after me.\" I say as she goes through my drawer looking for some comfortable clothes for me to wear.\n\n\"Of course, you don't.\" She gives me a change of clothes. \"Change into this while I go make you some soup. Then I can change the sheets for you.\"\n\n\"Were you a doctor in a past life?\" This chip on my shoulder feels heavier today.\n\n\"No,\" She laughs. \"I just have three younger siblings. Which is why I also know you just need some rest to get better.\" She leaves me alone in my room.\n\nI want to change my clothes and hop back into bed but I know I will be uncomfortable. I go into my shower and turn on the water. I need to clean this sweat off me. It is a quick shower, mostly filled with body wash and light shampoo and conditioner. I put on the sweat pants and t-shirt Quin picked out for me. I even get a chance to take the fitted sheets off my bed before she comes back in. She has a tray with a bowl and a glass of water.\n\n\"I'll do that.\" She places the tray on the dresser and puts the new bed sheet on. I watch her move around my room like she has been here many times before and she does this for me all of the time. It is odd to see. Only Pen has been over my place but she has never been in my room.\n\nOnce she is done, she urges me back on the bed and places the tray on my legs.\n\n\"Do you need me to feed you?\" Her tone is slightly playful. I hate it.\n\nI scowl at her. \"No.\"\n\nI snatch the spoon and dip it into the yellowish broth.\n\n\"Hope you like chicken soup.\" She sits on the side of the bed and watches me as I eat. I feel self-conscious but it passes after I get a taste of the soup. The flavors feel different against my tongue. I know it is because I am sick. Ugh, I hate being sick. Mostly because it will put me behind at work.\n\n\"What are you upset about now?\" She smirks.\n\nHer smile is pretty. Quin, with her bright brown eyes, is smirking at me. Why does that make me feel even more out of it than being sick?\n\n\"I picked the worst time to get sick. I am going to have so much work to do when I get back.\" I don't know why I'm telling her this, she probably doesn't really care.\n\n\"You just get some rest and worry about getting well soon.\" She removes the soup once I finish and places it on the dresser. She comes back to the bed and touches my forehead with the back of her hand. \"Your fever has gone down.\"\n\nI pull away from her touch and shift further into the bed.\n\n\"I will be back to check on you tomorrow.\" She picks up the tray.\n\n\"You're leaving?\" Did I expect her to stay?\n\n\"Unless you need me to stay?\" She gives me a curious look.\n\nI shake my head.\n\n\"Thank you.\" I say before she closes the door behind her.\n\n******\n\nThe next day I stay in bed all day. I drink some of the medicine Quin left on the bedside table. I'm tempted to pull out my laptop and catch up on some work but for some reason I feel like I owe it to her to rest and make myself feel better. Ugh, so stupid.\n\nI toss and turn in bed, getting up a couple of times when I feel too uncomfortable to sit down. I open my window during midday to let some sunlight and fresh air into my room. The sunlight becomes too much and I shut it after some time. I wonder how she will get back into my apartment. Maybe she took my keys. I mean, it makes sense. I didn't lock the door behind her and I don't think she would have left it unlocked while I am alone here.\n\nThe day drags on and I keep looking at the time, waiting for her to come. My stomach feels full, I don't want to eat anything. I keep my ears open but there is only silence. I turn on my side and drift off to sleep after some time. I am jolted awake when I feel a hand against my forehead.\n\n\"Sorry, I just wanted to make sure your fever stayed under control.\" Quin leans closer to my face and looks into my eyes. \"Are you feeling better?\"\n\nI lick my lips and pull away. \"What time is it?\" It is dark in my room. The only light is coming from the other bedside lamp.\n\n\"About 7 at night.\" She motions for me to sit and places the same tray with a different soup on my lap.\n\n\"Why are you late?\" Stare up at her. She's wearing a light brown suit with an off-white blouse.\n\nShe chuckles. \"I had some work to finish up before coming here. I didn't know I kept you waiting, I'm sorry.\" The apology sounds honest but she is smirking.\n\nI shift my gaze towards the soup and avoid looking at her. \"I mean, why did you come in the first place? I told you I don't need you to take care of me.\"\n\nThe soup tastes delicious. That must mean I am feeling better and can probably be back at work before the week is done.\n\n\"What have you eaten today?\" She moves to wipe a drop of soup from the side of my lip but I move away and use the back of my hand to clean it.\n\nI ignore her question and continue to eat in silence.\n\n\"Does my presence bother you?\" She removes her ponytail and her hair cascades down her shoulders. It is a few shades darker than her eyes but nowhere near as dark as mine. I catch a whiff of flowers and my mouth waters.\n\nAgain, I ignore her question and continue to eat in silence.\n\nOnce I am done, she takes the tray from me and leaves my room.\n\nI wring my hands and debate on calling her back or leaving her alone.\n\n\"Quin?\" I call out. I hope it is loud enough for her to hear.\n\nA few seconds later she opens the door and pokes her head around. She doesn't make a move to come in.\n\n\"I'm sorry and thank you.\" It is hard to look at her straight on when I know that my hair is a mess and I probably look like death.\n\nHer smile is warm. \"Anything for you, Anne.\" The sincerity melts my heart.\n\nShe closes the door and doesn't come back after.\n\n******\n\nThe next day is pretty much the same. I move around some more, feeling better than the day before. I even get to shower and make myself look more presentable. I pass the time by trying to read a book I left on my bedside table but my mind keeps going back to her. There is nothing I can really do to stop it. Nothing to distract myself with. Although I am confused as to why she would take it upon herself to look after me, I am glad she is. Having her see me sick beyond recognition is not as bad as if someone else from the office saw me like this.\n\nShe comes closer to five this time and brings me a veggie soup.\n\nHalfway through my meal I look up at her, watch as she leans against the window to look down at the cars. Her navy-blue suit is tight enough on her ass to look like spandex. Maybe I am overreacting but I know it is tight enough that it is almost impossible to look away from. My spoon slips and splashes into the soup. My face burns from the drops of hot soup and the embarrassment of acting like a fool in front of her.\n\n\"Sorry.\" I apologize and decide I've had enough to eat for the day.\n\nShe comes to sit at the edge of my bed and take a sip of the soup. My mouth is glued to her lips. She's drinking from the same spoon I just drank from. Our lips have practically touched.\n\n\"What are you doing? You'll get sick.\" I croak.\n\n\"Just making sure the soup was good. You barely drank any.\" She smirks but removes it from my lap. \"I think you should be good to come back to work next week.\"\n\n\"I am just going to give myself the rest of the afternoon off and go back tomorrow.\"\n\nShe huffs but doesn't argue. \"Your house, your rules.\" She's walking towards the door with the tray. She probably won't come back to my room after she cleans the dish.\n\n\"I really do appreciate everything you have done for me.\" I know my cheeks are blazing and for some reason my voice is small. The thought of her making food for me and checking in on me is enough to make me cry into next week but I hold it in. I don't want to scare her. I don't want to scare myself.\n\n\"Just make sure you feel better before actually going back to work. You're not missing out on anything important.\" She leaves again.\n\n******\n\nThe next morning, I feel better and decide it is good enough to go into work. My keys are hanging by the entrance. My door is locked. Has she been using Pen's key? Pen insisted on having one in case of an emergency, the same way she gave me one of her keys. So much for being there for me in my time of need.\n\nSome people greet me in the morning when I walk into the office. They even say they are glad that I am feeling better. It is different but I don't mind it. I have never called out in the past, so I guess they like seeing this human side of me that does fail sometimes. I guess I have finally proven that I am not a robot.\n\nI'm getting settled in my chair when Pen walks straight to the chair next to my desk. \"Oh my God, I am so glad you're alive!\"\n\n\"Yeah, no thanks to you.\" I power on my computer and start going through emails.\n\n\"Quin wouldn't let me come see you! She said she didn't want me to catch whatever bug you had.\"\n\n\"How thoughtful of her.\" I keep going through emails, ignoring the slight blush on my cheek at the mention of Quin's name. Her soft, cool hand touched my face more times than I care for. And if I am being honest with myself that was very thoughtful of her. But I can't deal with mushy feelings right now. I only deal with what I am familiar with and that is mild annoyance.\n\n\"She is very thoughtful!\" Pen points to a stack of papers on my desk. \"She got your team to help with your workload.\"\n\nI stop looking at my screen and look through the sheets. Sure enough, the tickets are closed and resolved. I look through the names and my heart races. Everyone on the team came together to help. Even Gary. My heart melts at the thought of Quin asking others to help me and the fact that others did.\n\nI immediately get up and walk to each member's desk to thank them for helping me. They look taken aback and even intimidated but I feel better knowing that I thanked them personally. My tiny heart beats loud at the camaraderie displayed by my team. Maybe I'm still sick.\n\nOnce I am back at my desk, I ignore the tightening in my throat.",
        "\"I have to get back to work. Just wanted to see you with my own eyes.\" Pen gives me a quick hug and leaves.\n\nThe lump in my throat grows in size and I sigh. Why am I getting so emotional over something so stupid? Because no one has ever done anything like that before. I am usually the one lending hand or helping those in the background without their knowledge. Why would Quin do something so nice for a stranger?\n\n\"What are you doing here?\" Quin's voice breaks my train of thought.\n\nI turn to look at her standing close behind me. \"What?\"\n\nHer hand comes up to my cheeks and then my forehead. \"You need at least one more day in bed.\"\n\nI push her hand away. \"I'm fine.\" I clear my throat and look up at her. She looks so pretty today. Her bangs are swept to the side today while the rest of her hair is down. She's wearing a pale pink suit with a baby blue shirt that matches her shoes. \"Thank you. For everything. But I am back to normal now.\"\n\nShe crosses her arms but doesn't say anything else.\n\nI turn back to my desk and pretend to do work until I know she is gone.\n\n******\n\nI know it is stupid, but I do it anyways.\n\nI feel bad for being so cold towards her after everything that she has done for me. I deliver her coffee every morning again. Only for three days max. Of course, no one is there to see it but I feel better knowing she has one good thing to look forward to. I even make sure to ask Pen what type she likes so that she actually enjoys it. Pen pretends to be cool about it but she almost gushes when she learns about my kind gesture. She double checks with some other girl that Quin has gotten to know better. No biggie. I make sure to remind Pen I am just repaying a favor.\n\n******\n\nI arrive late to the cookout in jeans and a red and blue shirt.\n\nEveryone is wearing similar colors with their families. Some have beers in their hands, others have food. I look down at my watch. The event will be over in an hour and then I'll be free to go home and watch Independence Day. I spot Quin behind the makeshift bar surrounded by the single men in the office. Some women gather around as well, hoping to get whoever Quin discards. Or maybe even Quin herself. That idea doesn't sit well with me.\n\nPen sees me before I see her and is already making her way towards me. She's also wearing jeans and a red shirt. She sports a headband with blue light up stars popping out of it.\n\n\"I'm so happy you're here!\" She grabs my arm and drags me to her table. There are people from different departments sitting down and talking amongst themselves. They all greet me when I sit down and I give a general wave.\n\n\"I told you I would come.\" I take the water bottle she gives me and thank her.\n\n\"I really thought you would come up with some lame excuse and bail.\" She doesn't sit and says she will get me a plate of food.\n\nJustin, from accounting, makes small talk with me while Pen is away. I would prefer to sit in silence but I also don't want to be rude, so we force the conversation for as long as we can. I'm aware of Quin at the bar, still surrounded by her admirers. She's wearing black pants with a white, sleeveless t-shirt and a tight black vest. She looks like the wait staff and yet everyone knows she's not.\n\n\"Here.\" Pen comes back and gives Justin a smile for keeping me company. His eyes get wide, probably from all the dazzle Pen holds in one smile.\n\nI stare at the plate in front of me and shake my head. \"I can't eat all of this.\"\n\n\"Don't worry, you can take it home if you have to.\"\n\nWe talk about work and then move on to what shows we've been catching up on. Pen talks about all the romance movies she has seen and I recommend some of the action ones that I like that have some romance in them. We're talking about planning a trip to our favorite movie theater when Quin comes to sit at our table.\n\nShe sits across from us and smiles brightly when she sees me. Her hair is up in a ponytail and her bangs are definitely long enough to reach past her eyelashes now. Her smile is breathtaking.\n\n\"Hi, Anne.\" The look she gives me looks like it was especially made for me.\n\nI drink some water then give a quick hello back.\n\n\"Sorry, Pen. I have to take a quick eating break while I can. Kurt offered to look over the bar for a while.\"\n\nPen moves her hands around. \"Don't apologize! I'm sorry I didn't give you a break sooner!\"\n\nQuin laughs and shakes her head. \"We need to stop apologizing so much.\"\n\nPen agrees and they talk about what great turnout they had. I look around and realize it is quite a big turnout. Most families are around the games laid out. Others are by the bonfire in the middle of the cookout. They even got a DJ to play some entertaining music in the background while others just talked.\n\nQuin talks about how full the tip jar has become and Pen tells her it's because all the men are in love with her. Quin shrugs the suggestion away and for some reason that puts me at ease. I can't say why exactly, but knowing that Quin couldn't care less about the attention she is receiving makes me feel better. And yet, I know that is not a good thing.\n\n\"So, what are you guys doing after this?\" Quin sips on a beer.\n\n\"I have a hot date with my T.V.\" Pen giggles. \"After the long day that we had today I have to call it a night soon.\"\n\n\"What about you?\" Quin looks at me.\n\n\"Same as Pen. Just going to watch a movie. After I help you guys clean, of course.\" Even without having her ask me, Pen knows she can count on me when she really needs it. Maybe not to prep for this cookout, but definitely to help clean up afterwards.\n\nI avoid picking up anything big to eat from my plate. Knowing me, I will go in for a burger bite as she asks me an important question or I drop a rib after some nervous jitter. I try to sit up a little straighter and place my hands on my lap after failing to find something natural to do with them. I feel out of place. Not just at the cookout but just in general. I have a feeling I know why.\n\n\"You're a lifesaver.\" Pen pinches my cheek. I snap back to our conversation.\n\n\"Do you want to grab a drink afterwards, Anne?\" Quin asks me.\n\nI look at Pen who smiles and gives me a knowing look. \"I think that is a great idea! Anne hasn't been to a bar in forever.\"\n\n\"That's because I don't really drink.\" I helpfully remind Pen. How can she set me up like this? Being alone with Quin? At a bar? Is she crazy?\n\n\"Then invite me to your place so we can watch a movie together.\" Quin suggests.\n\nPen's green eyes light up and she gives Quin a megawatt smile. Pen thinks Quin is just trying to be my friend and get me out of my shell. But I don't know if that is the real reason. Come to think of it, I don't see why Quin would want to spend any of her free time with me at all. I can tell others around me have quieted down to hear my response. The blood rushes to my cheeks and my brain flies out the window.\n\nI choke on my spit and try to drink some water to hide my obvious flounder.\n\n\"I-I can't. I just remembered I'm actually going to bed early today. Have some errands to run in the morning.\" I blurt out in a panic. I just made a fool out of myself and this is in front of a big group. I can't imagine being alone with her.\n\nQuin's smile is dejected but she just nods. \"Well, maybe next time. I'm going to head back to the bar. Looks like Kurt needs some help. Bye ladies!\"\n\n\"Annie!\" Pen gives me a murderous look. \"You just blew her off!\"\n\nI bury my head in my hands and slump my shoulders. I can't even look at those around me, they're probably thinking the same thing. \"I don't want to talk about it.\"\n\nI didn't blow her off because of the fear of what those around me would think. Even though I knew I would care, it was not the main reason why I said no. The real reason is even scarier.\n\n******\n\nGetting into the office on Monday feels like a drag.\n\nAfter helping the sales team clean the park after the cookout, I went straight home and laid in bed. I didn't watch a movie or do anything other than think. I tried not to think about the fact that Quin left with some guys from the office but that was all my mind kept going back to. Pen gave me an 'I told you so' look even though she never told me anything. It was all so annoying.\n\nNow, I have to be on the same floor as Quin and hope that we don't run into each other. It was very obvious that I did blow her off and that is why she probably made other plans afterwards but it didn't mean I liked it. And that fact that I didn't like it spoke volumes.\n\nI place my bag over my shoulder once I step out of my car. I see Quin pulling into the garage in her car. She sees me too and gives me a small wave. I wave back and rush to the doors so that we don't get stuck having to make small talk. She probably thinks that I want nothing to do with her and that I am the rudest person she has ever met. She has been nothing but nice to me and I have been an immature asshole. And for what reason? Why am I like this?\n\n******\n\nI manage to avoid any more run-ins with Quin.\n\nTo save both of us from any more embarrassing conversations, I have been vigilant of her whereabouts. If she goes to the restroom as I am about to go in, I pretend to walk towards the water fountain instead. If she is coming down the stairs from the copier room, I come down the stairs and go to the supply closet instead. Others have noticed my erratic behavior but they probably attribute it to my weird and mysterious personality. Pen suspects that Quin is the reason for my odd behavior but she hasn't said anything out loud, which is a good thing. She probably doesn't have enough evidence to take me to trial. Yet.\n\nAll the exerted energy and pent-up anxiety has me pooped by the end of the week. I decide to give in and ask Pen if I can join her for a drink after work.\n\n\"There is definitely something wrong with you.\" Pen moves to touch my forehead and I move away instinctively. Only Quin has touched me like that. What am I even thinking?\n\n\"I had a long week.\" I shrug. The less I say, the better.\n\nPen nods in agreement as we pull up to the bar.\n\n\"My friend here would like the fruitiest drink you can make. She does not drink so she needs something that goes down smoothly. I'll have a tequila sunrise.\" She pulls out her card and pushes my hand away when I try to pay.\n\n\"I'm the one who invited you out.\" I remind her.\n\n\"You can pay for the next round!\" She pushes me with her shoulder.\n\n\"Oh no.\" I shake my head. \"One drink is enough for me. But I will pay for your second one.\"\n\nShe nods. \"We'll see how you feel after one drink.\"\n\nThe bartender returns with our drinks after a while. My drink is pink and fruity. I am pleasantly surprised when I taste it. \"I don't taste any alcohol.\"\n\n\"Those are the ones you have to be careful with.\" Pen giggles and sips on her own colorful drink. \"So, tell me, why has work been extra hard this week?\"\n\nI roll my eyes and shake my head. \"I don't want to talk about it.\"\n\n\"Annie, the whole point of grabbing drinks after work is to bitch and complain about everything and then be recharged for next week.\" She takes a long sip.\n\n\"Okay,\" I look at it objectively. That does make sense. \"You go first.\"\n\nShe smiles brightly. \"Don't mind if I do.\" She removes her blazer and places it behind her. Her green eyes have a glint in them. This is going to be interesting.\n\nPen goes on a thirty-minute rant about a rude customer who gave her a bad review because of a user error that had nothing to do with the product or her customer service. I, all of a sudden, feel very protective of Pen and want to bad mouth this customer for ruining her week. She goes on to talk about how her boss chewed her out in front of the team and how she had to call and apologize to the customer for something that she didn't do.\n\nI lean my hand over and pat the back of her palm. \"That sounds awful. You deserve better.\"\n\nShe laughs and shakes her head. \"I get paid a lot, so this is not enough to push me away. But now that I've talked about it, I feel so much better! Thanks for listening.\"\n\nThe drink is starting to get to my head. I feel my inner conscience trying very hard to stay tethered to my body but it is becoming nearly impossible. It feels like it is about to float away. Part of me wants to blurt out all that I feel towards Quin. But not knowing where to start or where it will end leaves the words in my throat.\n\n\"Okay, your turn to get us a round.\" She points to our empty cups.\n\nI am surprised to see how quickly I finished that. \"Okay, but this is the last one. I mean it!\"\n\nShe laughs and nods her head. \"I won't let you have another I promise.\"\n\nWe talk about little things that bother us about our jobs and by the end, I have to admit I do feel better. Lighter. Like getting it all out of my system flushes the bad feelings out for good. I need to do this more often. I am glad she doesn't bring up Quin and I feel proud that I am able to hold it in for as long as I do.\n\n\"Okay, time to go home.\" I hop off my seat and Pen follows my lead, after waving to the bartender.\n\nMy jaw almost falls to the floor when we step out into the night.\n\nQuin is leaning against her car, waiting. She's wearing tight jeans, with long black boots, and a black long sleeve shirt. Her hair is parted down the middle, with her bangs swept to the side. Her face has light makeup that highlight her beautiful eyes and full lips.\n\n\"Your ride is here.\" Quin laughs and ushers a very happy, and not surprised, Pen into the back seat. When she opens her passenger door for me, I shake my head. \"Get in, Anne.\"\n\n\"Pen, what is she doing here?\" I glare at Pen, who is making herself comfortable in the back.\n\n\"I'm not paying thirty dollars to get home. Plus, she was already nearby and said she didn't mind. Get in!\"\n\nI frown but get inside the car. \"I'm going to kill you.\" I threaten her once I'm inside and Quin makes her way around the car.\n\n\"Oh hush, I knew you wanted to see her.\" She gives me a drunk smile through the rear-view mirror.\n\nQuin and Pen talk on the way to Pen's house. They talk about work and then bars and clubs. Pen promises to take Quin out clubbing one of these days and even tries to rope me into coming. I give a non-committed answer.\n\nOnce we get to her place, Quin helps Pen out of the car and walks her to her front door. Pen gives her a nice long hug and I look away after a while. Who cares that they hug? Pen is just that type of person that people want to hug.\n\n\"So, your place or mine?\" Quin says when she's back behind the wheel.\n\nI snort, \"Yeah, right.\" Oh God, I am drunk. I never snort. Panic and drunkenness dance side by side as I realize I am alone in the car with Quin. Who will win? Hopefully neither. But she just offered to take me to her place. What?\n\n\"Okay, your place it is.\" She puts her car into drive. Her fingers move towards the radio and some alternative rock plays in the background.\n\nFour songs play by the time we get to my place. She finds street parking and opens the door for me.\n\n\"You don't need to walk me to my door, I got it from here.\" I sound very sober for someone who sees the floor moving at the speed of lava. I manage to hop out of the car and then lose my footing after the first step. I almost face plant before Quin reaches out and picks me up, bridal style, as if I weigh nothing.\n\n\"Put me down!\" I growl. She walks with determination, completely unbothered by my outburst.\n\n\"Not until you're in the safety of your home.\" She seems to find my anger endearing.\n\nI stick out my tongue at her in a moment of anger.\n\nShe gasps. \"Anne sweetie, you keep tempting me like that I won't be able to control myself around you.\"\n\nMy mouth goes slack and I feel the blood rushing to my face. In an act of desperation, I hide my face in her neck. What is she doing to me?\n\n\"You're adorable.\" I feel her lips against my hair.\n\nI melt against her chest, wanting to be a part of her but also swallowed alive by the moving ground beneath us.\n\nShe makes it to my apartment building but true to her word, she doesn't put me down until I am in my home.\n\nHer hands come up and she brushes the hair away from my face so that she can see me clearly. She runs her forefinger down my cheek and lifts my chin up. Her smoldering gaze holds me captive. She's looking at me as if I am the only thing she sees. As if I am something other than just plain old Anne. My heart races and she leans down, closer to my lips.\n\n\"I should leave.\" She whispers when she is centimeters away from my lips. I feel her breath against my lips. I want to taste it. I want to taste her. \"Tell me to leave.\" She says more urgently.\n\nI stare up at her with wide eyes, uncertain of what I should do. I know what I want, I can feel what I want right between my legs. But should I want this? Why her? Why now? All of this time I've lived a drama-free life, no accidents, no overpowering emotions. Being around her messes all of that up. Do I want to throw away years of perfecting being alone? Not depending on anyone, not needing someone's presence to feel whole?\n\n\"Anne,\" She brushes her lips against my own and my eyes flutter close.\n\nShe pulls back all too soon and leaves me standing there in a confused haze.\n\n******\n\nIf I thought last Monday was a drag, this Monday is downright uncomfortable.\n\nAfter our non-existent kiss on Friday night, I spent all weekend overthinking every detail. What did it all mean? Why did she kiss me? Why didn't she kiss me? Why did she ask me to kick her out? Why did she leave? Why did I want her to stay? My mind ran a marathon with those thoughts until I drove myself insane. Quin makes my mind an endless puzzle with missing pieces. I hate it.\n\nTo change things up a bit, I choose to pay Pen a visit.\n\nShe's at her desk, writing down some notes into her planner.\n\n\"Penelope.\" I practically growl.\n\n\"Oh, shit, Annie! You scared me!\" She jumps up and clutches her red pen. It matches her glossy shoes.\n\n\"How dare you do something so impulsive and invasive!\" I point a finger at her face.\n\n\"What do you mean?\" She tries to play the innocent role.\n\n\"Don't give me that bullshit. You know what you did!\"\n\n\"You mean call my friend to give us a ride because we were drunk and I didn't want to spend any money? She crosses her arms.\n\nI bite my lip to hold back my curses. No use of screaming in the office. \"Did it have to be Quin?\"\n\n\"Why wouldn't I call her? We have gotten pretty close. Did something happen between you two?\" She tries to gauge my reaction.\n\nIf I admit to something happening, she will know there is something between us. If I don't admit anything she will find other ways to try to put us in future situations together.\n\nI huff. \"Look Pen, I need you to let this one go. As your friend, I am asking you to please butt out.\"\n\n\"Of what?\" Her eyes get wide. I might as well have admitted to being in love with Quin by the look she is giving me.\n\n\"Just stop.\" I leave her office before she can ask any more questions.\n\n******\n\nTuesday afternoon I am one of the last one left in the office.\n\nI had one specific problem I spent the whole day working on which pushed all of my other work back and now I am behind. I let out a breath when I finally turn off my computer. My eyes burn from staring at a screen for too long and I am starving. I gather my things and throw my bag over my shoulder. Once I am outside, I notice Quin leaning against my car. My face turns to stone.\n\nI made a fool of myself Friday night. I didn't kick her out, only to have her leave on her own accord. Leave me wanting more. I shouldn't want more. I don't want more.\n\n\"You should not overwork yourself. You might get sick again.\" She moves out of my way as I unlock my door.\n\nAfter I put my bag on the passenger side, she blocks my door with her arm. \"Can we talk?\"\n\nI stare at her bangs, to avoid looking at her eyes.",
        "\"I'm sorry I kissed you.\" She sounds upset. \"I shouldn't have taken advantage of you.\"\n\nOf course, she regrets the kiss. She probably doesn't want to lead me on and wants to cut ties. Well, there is no need.\n\n\"What kiss?\" I finally look into her deep, milk chocolate eyes.\n\nMy confusion must seem very real because she hesitates.\n\n\"You don't remember?\" Her arm falls at her side.\n\n\"No.\" I bite the inside of my cheek.\n\n\"Oh.\" She runs a hand through her hair. \"Then, never mind.\"\n\nI get into my car the moment she moves away.\n\n******\n\nMy breathing is labored.\n\nI look out at the view and feel a sense of accomplishment. The hike took most of my morning and now I can appreciate the scenery. There are farm houses separated by a couple of acres below. Each property is separated by different grass cuts. Tiny animals barely move enough to change the view. The sun is hiding behind some gray clouds. I don't think it'll rain today. The wind is blowing much harder up here than below. I wipe the sweat from my forehead. Being at the summit makes me feel so big and yet so insignificant. I am above all of the trees and cars below. But I am just a speck of dust in this big world. A speck of dust on the verge of losing her grip.\n\nQuin has been on my mind every step of the way. Wondering what she does on the weekends. Who she spends her time with. What she had for breakfast, if she eats enough. I have this urge to check up on her. But I know I won't. Not after our forgotten kiss. I lightly touch my lips to ease the burn. My forehead is covered in sweat but I know my cheeks are bright for a completely different reason.\n\nI need to snap out of it.\n\nI don't need her. I do not miss her presence. I can't.\n\nMemories of growing up in a loveless house plague my mind. My parents do love my brother and I, just in their own way.\n\nThey were never the type to be overtly emotional or showed any physical affection. Especially towards each other. From a very young age I noticed a difference from the way my parents loved each other and how it was portrayed in the movies or shows. They never kissed each other passionately, never flirted with their eyes. They have always been practical. They married straight out of high school and started a family. My father is a truck driver and my mom is an office assistant. They have both been working for the same company since I was born. Their days blend in together and they rarely do anything spontaneous.\n\nThat's not to say that they do not love each other. In their actions I see the respect and adoration they have for one another but there is no passion. They may love each other but they are not in love with each other. I grew up avoiding any emotions that got me too excited. If I cried over something small, no one rushed to my side and comforted me. I was given a few minutes to pull myself together and get over it. And that is why I avoid getting into situations that require my emotions to be out of whack.\n\nIn high school and college, I avoided getting into any serious relationships. I knew I preferred girls, I knew my parents would not accept that and so, I set clear expectations from the beginning. I had only a handful of awkward tries at doing the friends with benefits thing but it never got serious. I preferred to be the giver. I liked making girls feel good, making me feel wanted for even just a few moments. I, myself, did not find the idea of losing my grip in reality for a few moments of bliss but I wasn't opposed to the idea. Some realized I was too wound up to completely let go and others figured I would never get serious about start a relationship so it always ended with them being unhappy with me. Eventually I realized it was not worth the hassle and stayed away from them altogether. And it has been that way even after graduating. No one has gotten close and I have been okay with that.\n\nSo, why do I have a feeling Quin is going to test those boundaries?\n\n******\n\nEveryone in the office is running around trying to get their work submitted before the end of the day.\n\nOur quarter ends today and we need to make sure our numbers look good. Every department is caught up in their own world trying to oil their parts so the machine doesn't break down. My team is working double time to pull in some additional customer satisfaction reviews.\n\nI twirl my pen between my fingers to keep my energy upbeat. I have been on the phone with a customer for the last hour and they don't seem to want to let up. The most important rule I have learned about my position is not to let customers hear the distress in your voice unless you want them to retaliate with double the displeasure. No one would say I am a ray of sunshine when it comes to talking to customers but I am efficient and I don't waste time when it comes to fixing problems. I get along with customers who make it their main goal to follow my instructions to get their computers fixed. I don't care much for small talk but I have learned to be more personable so there are no awkward silences.\n\n\"Ma'am I am going to place you on a quick hold. Just stand by while the computer restarts and I should be back on the line by then.\" I place her on hold and slam my pen against my desk.\n\nI get up and walk to the restroom. Sometimes taking a breather is enough to get me through a long call.\n\nI walk in through the doors and feel someone walk in close behind.\n\n\"Hi Anne.\" Quin's voice feels loud in the small room.\n\nI turn and back away, ready to fend her off. Then I shake off the feeling of fear and square my shoulders. I'm being ridiculous, it's just Quin.\n\nHer steps mirror mine and before I know it, she has me backed against the wall on the other side of the door. Her hair is up in a bun, her bangs blow dried to slightly curl over her forehead. She's wearing a dark suit with a light blouse. I can't even tell what she is wearing exactly. At the moment I am staring into her brown eyes without blinking.\n\n\"I knew this shirt would look nice on you.\" She looks down at me with an appreciative glance.\n\nI didn't do laundry this weekend and this was one of the last clean shirts. The turtleneck she bought for me. I knew I should have tossed it when I had the chance.\n\nHer hand comes up to tug on the cloth against my neck. \"It really brings out your eyes.\"\n\nI gulp some air into my lungs before I pass out. She smells like flowers. Like a garden. A forbidden garden.\n\n\"Why are you so tense? Customer giving you problems?\" I expect her to drop her hand but she lightly places it behind my neck.\n\nThe tingling sensation between my legs intensifies as her other hand lazily rests against my hip.\n\n\"What are you doing?\" I sound scared.\n\n\"Just helping you release some tension. I know how much you aim to please your customers.\" Her head lowers and she leans in until our lips meet. My face is tilted to the side so she has better access.\n\nMy hands come up to grip her blazer. She tries to lean in further but I hold her back. When she tries to pull back, I grip tighter so that she doesn't move. I stare into her eyes while our lips touch. There is a fracture in my brain. A small crack that is letting blinding light through. I have nothing to cover it with. I don't know what I am doing or what I want but I can't move a muscle.\n\nThe door behind her makes a noise and Quin is out of my sight in the blink of an eye.\n\n\"Anne, are you okay?\" Cristy's concerned look snaps me back to reality.\n\nI move away from the wall and ignore Quin's shoes peeking from under the stall next to me.\n\n\"Yeah, I just needed a second to get my life together.\" I give a breathless laugh.\n\nShe nods but still looks confused.\n\nI walk out of the bathroom and zip line to my seat.\n\n\"Thank you for holding, is the system back up?\" I snap my legs close as Quin walks by with a smirk on her face.\n\n******\n\n\"Hello?\" Pen moves something in front of my face.\n\n\"What?\" I ask her to repeat herself.\n\n\"I said, now that I know Quin is a lesbian, I think you guys should get to know each other better!\" She places a strand of hair behind her ear and pretends to look smart. \"I think you guys would complement each other very well.\" She smooths out her black skirt while letting me process the news.\n\n\"How on earth do you know she's a lesbian?\" Images of Quin's lips against mine cloud my brain.\n\n\"Tory heard it from Liam who heard it from Sage.\" She says as a matter of factly.\n\n\"Ugh, you guys and your rumors.\" I move a cherry tomato around in my salad.\n\n\"It's not a rumor! Quin hasn't given any of the guys in the office the time of day and Sage seems to be the only one who has gotten close enough to get her attention.\"\n\nI imagine Sage with her blonde hair and fair features all over Quin's desk trying to get her attention.\n\nMy fork plunges through the plump tomato.\n\n\"I didn't know Sage was into girls.\" I drop my fork and pick up my phone to distract myself. I almost drop that too from being so abrupt with the movement. Pen doesn't even bat an eye. She's used to my clumsiness by now. She hasn't even seen the worst of it.\n\n\"Apparently she's bi.\" She takes a bite of her bread and chews thoughtfully. \"I guess Sage and Quin could make a cute couple. But I feel like Sage is not as nice as you are. I mean, sure she offers to help people and goes on coffee runs when we desperately need it but it just doesn't seem genuine you know?\" At this point I know Pen is just thinking out loud and I can choose to participate or brush it off. \"Like one time, she offered to help me with a presentation I had to do in a short time. Shortly after I gave the presentation, she asked me to help her with one of her own assignments. Like as soon as she does something for someone she expects to cash in on her favor.\"\n\n\"Seems reasonable.\" I shrug.\n\n\"You don't do favors to get something out of it.\" She points out.\n\n\"I don't do favors in the first place. I don't bother people so they don't bother me.\" I scroll through my social media page.\n\n\"Cut the crap.\" She snatches my phone away. \"You always do favors even when people don't ask for help.\"\n\nI snatch my phone back. \"Still, I don't get what any of this has to do with Quin.\"\n\n\"You better get in there before Sage swoops in.\"\n\n\"You act like just because we are the only lesbians in the same building, we are destined to be together. There is a life outside of work you know.\" I imagine Quin pushing Sage against the wall like she did with me in the restroom and my stomach tightens. I don't like that at all.\n\n\"Yes, because your life outside of work is booming. You just have dates lining up outside your door.\" The playfulness in her tone annoys me.\n\n\"As a matter of fact, I have met someone.\" I stuff my mouth with lettuce as soon as I register what I just said.\n\nPen drops her breadstick. Her striking green eyes widen in shock. If I were anyone else, she would have brushed the joke aside and went on with her day. But because it is me, someone who never jokes around about dating or anything of that sort, she can only assume I am being completely honest.\n\n\"What? When? How? Who? Annie, what are you talking about?\" She rushes out all in one breath.\n\nI take a sip of my drink to make it easier to swallow and give me some time to think. \"Well, it just kind of happened.\"\n\nShe has taken care of me when I was on death bed, she kissed me, she made me forget about a rude customer by simply being in my presence. She has the warmest eyes and sweetest lips. Her hair is shiny and always perfect. I don't say any of that of course. I just stare at Pen hoping she will forget the whole thing. Fat chance of that happening.\n\nFor some reason she seems really invested in my story and motions for me to continue. \"We met...this past weekend. On the hike that I told you I was doing.\" My face heats up. I don't lie. I never have had a reason to.\n\n\"What is her name, how does she look? Come on, don't make me pull teeth!\" She is animated and excited and my heart turns over. I'm being a bad friend. I'm lying to her. I should just come clean. \"Actually, don't jinx it! Just wait and see how it goes and if it seems like it's a serious thing you can tell me okay?\" Pen wraps her arms around me and I feel her smile against my cheek. \"I'm so happy for you Annie, I thought you would never give anyone a chance.\"\n\nWhat have I done?\n\n******\n\n\"Please, just do this once and I promise I won't bother you again!\" Ricky has both hands in front of me as he begs me to do him a favor.\n\n\"Fine.\" snatch both boxes from his hands and turn back to my work.\n\n\"Thank you so much, Anne. I owe you!\" He leaves before I can change my mind.\n\nI was going to do it anyway. Ricky was one of the people who helped me get my work done after I had to call out for being sick. I was the one who owed him.\n\nI finish up some spreadsheets and stare at the two boxes. They're pretty heavy, but I can do this. I just need to run to the nearest FedEx and have them shipped. Nothing I haven't had to do before.\n\nQuin is waiting by my car and comes to my aid when one of the boxes starts to shift towards one side. She takes one from the top and helps me place it in the trunk of my car.\n\n\"Thank you.\" I shake my hair so that it falls around my cheeks to hide the blush.\n\n\"Do you need help taking them to FedEx? I can hop in and give you a hand.\" She opens my door.\n\n\"No, thank you.\" I close my door and take a deep breath as I hold on to the steering wheel. I almost jump out of my skin when there's a knock on my window. I thought she would have left. I roll down the window but stare straight ahead.\n\n\"Anne, I was wondering if we could grab a bite to eat this Friday?\"\n\nMy head snaps in her direction. She doesn't look like she's kidding. She actually looks nervous. The way she shifts from foot to foot. Her smile is small.\n\nI picture sitting next to Quin, a naturally beautiful creature that has probably never dropped a condiment on her clothing. Probably wearing something to make her look like a Goddess as she sips on her drink and looks at those beneath her. AKA me. Little ol' me, stumbling over my words, acting like a robot with a short circuit. She will ask questions, I will have to pretend to have a personality. Pretend that I know what dating is like, and caring for someone else, and having feelings. Oh, God. Feelings. That is enough to terrify me out of any engagement. I try not to panic.\n\n\"I can't, I have plans.\" My heart flips in the air while my brain moves back and forth trying to catch it.\n\n\"So, you are seeing someone.\" She nibbles on her bottom lip. Her eyebrows furrow.\n\nPen can be so...annoying. Why did she have to involve Quin? I want to roll my eyes and correct her but she leaves in the direction of her car.\n\n******\n\nMy phone rings late in the afternoon on Saturday.\n\n\"Hey, come out to drink with us!\" Pen practically yells.\n\n\"I can't, I'm busy.\" I flip through the action movies on Netflix. Hmm...this one looks interesting. Cute female lead. Looks nothing like a certain someone I can't stop thinking about.\n\n\"Come on! It is going to be a group of us. Sage got Quin to come!\"\n\nMy ears perk up. \"And?\" I try to play it off.\n\n\"You need more friends. Look Annie, I know you probably have a girlfriend now and she might be a very nice person but you need friends too! You can even bring her along!\"\n\nOh, not this again.\n\n\"Yeah, I don't think it's going to work out between us. She's just, I don't know. Too intense.\" Yeah, very intense. Loves to kiss me unexpectedly. And do nice things for no reason. Offer her help even when I don't expect it. And she is probably interested in someone else.\n\n\"Oh, that sucks, sweety. But hey! That's even more reason to come out tonight!\" She brings up all of the times she has asked me to come out to drink and discounts the last time because I was the one who invited her. She begs and guilt trips me until I finally give in.\n\nI scramble up from my seat and run to my closet to see what I can wear.\n\nAfter an hour of piling clothes on my bed I realize what a bad idea this could turn out to be.\n\nBeing at a bar with Quin and Sage, watching them get drunk and flirt with each other. Drinking water while everyone else gets drunk and start to make dumb jokes that I won't laugh at because I'm not drinking. The fact that I am putting so much effort into my choice of outfit is also another disclaimer that if I go through with it tonight, I am succumbing to whatever unresolved feelings I have for Quin. I would only be going to see her, if I am being honest with myself. And after rejecting her so many times, I don't think she'll want to see me.\n\nWith resignation, I shoot Pen a text asking for a raincheck and turn off my phone.\n\n******\n\nBack on the couch, four hours later, I hear a knock on my door.\n\nI tip toe to see who it is and calm my heart before opening it slowly.\n\nQuin is standing there wearing a tight black dress that looks like second skin against her body and thigh high boots. Her hair is straightened and her bangs are being held back by a clip. Her face is flushed as her eyes take me in.\n\n\"What are you doing here?\" My hands come up to cover my chest which is only covered by a worn-out shirt. My sweats are old too. I look homeless in my own home.\n\n\"Were you expecting someone else?\" She looks down at my clothing and scoffs. \"Cuz if you were, you might want to change.\"\n\n\"You're drunk.\" I point out. \"Did you drive here?\" My anger comes quickly. Is she that reckless? Not only is she putting her own life in danger but she is putting others at risk as well. I grasp at the familiar feeling and latch on to it. Anger, I can deal with.\n\n\"No, I did not.\" She mimics my frown. \"So serious. Aren't you going to invite me in?\"\n\nI move aside and close the door behind her. It's almost midnight. She shouldn't be out there alone at this time anyways.\n\nShe goes to sit on my couch and moves the remote away from her hip.\n\n\"Where is Sage?\" Might as well get down to it now. I'm dying to know and I can't see any other way to ask without looking like I'm fishing.\n\nShe pats the spot next to her. \"Come here, Anne.\"\n\nIgnoring my question. Does that mean their date didn't go well? Or did she drop her off before coming here? Why come here at all? So many pointless questions.\n\nI move back towards the kitchen and get her a cup of water. I'll get her sobered up and out of here before she can cause any trouble. Does she know hearing her say my name sends fireworks to my brain? Stupid, Quin. Stupid, hypnotizing voice.\n\nShe's still sitting on the couch with her hand next to her when I get back to the living room. I hand her the glass and stand close to the T.V.\n\n\"I promise I won't bite.\" She places the cup down after drinking a generous amount.\n\nI move towards the couch but she catches me before I sit. She moves around pulling me against her chest, while I try to squirm out of her grasp. It's no use. She ultimately settles down so that she is lying in a comfortable position. She's on her back and I'm laying on top, my head inches from her chest. She wraps her arms around my waist. I stop breathing and stare at the screen, currently paused on a scene where the protagonist is driving through New York traffic trying to catch the bad guy. The only light in the room is coming from the T.V. and the light down the hall. We both sit there not moving an inch.\n\n\"Is this okay?\" I can hear the strain in her voice. Does she want me to push away? Say that I hate this?\n\nFor once my silence is welcomed by us both.\n\nMy neck becomes stiff and I know I can't hold it up much longer. I slowly move it until my head rests against her collarbone. She moves her head until I feel her lips lightly brush against my head. I listen as her breathing gets heavier.\n\n******\n\nI awake before she does.\n\nSleeping in her arms was as uncomfortable as I imagined it would be. She doesn't have enough meat on her bones to make her a comfortable lay. Not in that way, at least. Any time I tried to get up her arms would wrap tight around me and I eventually gave up after my eyes became heavy. Any time I would shift my position or turn my neck, she would mirror my movements and dig her nose further into my hair.",
        "I get up soundlessly and use the bathroom to freshen up. I take a quick bath, brush my teeth, and change my clothes for the day. I opt for some black leggings and a long T-shirt. I avoid looking at Quin as I make my way towards the kitchen. I take out some eggs, bacon, and toast. Does she prefer orange or cranberry juice? Does she eat meat? I think back to the cookout and the rack of ribs on her plate. Pork is fine.\n\nI hear the bathroom door close and jump. She's awake.\n\nAct normal. Keep cooking. Shit! The eggs are over cooking. I scramble to get them off the pan and onto a serving plate. I pay closer attention to the bacon. Does she like it crispy or soft? Why do I care? I make both just in case.\n\nI put the bacon next to the eggs and wait on the toast.\n\nI don't hear her come into the kitchen, I feel her presence right behind me.\n\nShe wraps her arms around my waist and digs her nose into my neck. \"You smell delicious.\"\n\nI drop the butter knife I was holding and close my eyes, solely focusing on her hands and lips. Every kiss sends a pulse straight to my core. I feel her everywhere. Every inch of her body engulfs me in flames. I've never felt anything like this before. It feels amazing.\n\n\"Be honest with me Annie, is there someone else?\" She grazes her teeth in between my neck and shoulder.\n\n\"I-\"\n\nThere's a knock on my door and I pull away from her grasp with some reluctance and relief.\n\nI open it without checking who it is, and breathe in the stale air of the hallway.\n\n\"Annie?\" Bobbie's smile is wiped away when he takes a look at my face. \"What's wrong?\"\n\nBobbie doesn't look like my baby brother anymore. Sure, his face is still somewhat round but he no longer wears glasses and his acne is gone. His brown hair is short on the sides and curling slightly up top. He's wearing his college sweater and some sweats. Are his socks mismatched? He has the whole college student look going for him.\n\nI move aside to let him in. \"Nothing. I just wasn't expecting you.\"\n\nIt takes all of two seconds to catch Quin leaning against my kitchen counter with a piece of bacon in her hands. So, she prefers crispy bacon. Same.\n\n\"I'm sorry, am I interrupting something?\" His eyes wander up Quin's incredibly long legs, his blood rushing up his face at the same speed.\n\nI slap the back of his head. \"This is my coworker Quin, she crashed here last night after she wasn't able to drive home.\"\n\nQuin reaches her hand out and gives him a friendly smile. Her hair is up in a messy bun and she looks adorable. There is no running mascara or dark circles under her eyes. I'm mostly captivated by the glossy residue of the bacon on her lips.\n\n\"Hi, I'm Annie's brother, Bobbie.\" He shakes her hand and averts his eyes from her legs. \"I wanted to surprise you this morning since a couple buddies of mine were coming up this way.\"\n\nI look at him in amazement. That's a first. Bobbie and I have a regular brother and sister relationship but not like we depend on each other a lot. I always offer my assistance but he usually has everything figured out. If I am goal-oriented, Bobbie is the sensei of adulting. He's been the more mature one since we were young.\n\n\"Nice to meet you. I was actually just heading out.\" Quin scoots by us to grab her boots.\n\n\"Already?\" There is a hint of desperation in my voice and she stops in her tracks to look at me. \"I mean, don't you want to eat first?\"\n\nShe winks at me and shakes her head. \"I have overstayed my welcome. But thank you so much for letting me crash here.\" She zips one boot after the other and just like my brother my eyes fall to her exposed skin. \"I will see you at work.\"\n\nI walk her to the door after she shakes my brother's hand.\n\n\"Thank you for everything. And I'm sorry for overstepping boundaries. I just really wanted to see you last night. That doesn't excuse my behavior.\" She manages to look embarrassed.\n\n\"Just, don't ever drive drunk.\" I bite my lip. I want to say more. I want to put her mind at ease and let her know I'm not seeing anyone.\n\n\"I didn't and I won't.\"\n\nI lean against my door to look up at her.\n\n\"There is someone else, isn't there?\" Her smile is sad.\n\nMy heart flutters. Does she look hurt? What am I doing?\n\n\"Otherwise, you just don't like me. I mean how many times do I have to make a move before taking a hint?\" She taps her fingers against her thigh and sighs. \"I've been told I come off strong. But don't worry, I have finally heard you loud and clear.\" She turns away and walks down the steps.\n\nThis morning wasn't supposed to go like this. I was supposed to come clean and finally kiss her the way I have been wanting to. But I don't deserve it. I don't. She is aware of her feelings, always has been. She knows what she wants, deep down she listens to the little voice in her head and in her heart. I don't have enough conviction, enough passion. I am not enough. She is too much. And who would ever date their co-worker anyway? Imagine it all goes horribly wrong? Somehow I can't imagine that. Not with her.\n\nThe door handle slips from my fingers and it slams shut. I lean against it.\n\nI dig the heels of my palm into my eyes, trying to push the tears back. I wait until I can catch my breath before walking to the kitchen.\n\n\"That was interesting.\" Bobbie has his plate full and digs in.\n\n\"In all seriousness, what are you doing here?\" I grab a plate and sit next to him. I can't hide the pain as well as I want. It hurts. I hurt her. And I let her leave. But that is what I wanted right? To have her leave me alone so I can go back to being by myself? Being stress free, drama free. Free. Has it always been this suffocating?\n\n\"Did you just sniffle?\" He drops his bacon. Unlike me, Bobbie has big blue eyes he inherited from our grandfather on my mom's side. He assesses me with caution.\n\nI shake my head and take a big gulp of water. Oh shit, this really hurts.\n\n\"Annie, you can talk to me. It's okay, you know? To feel.\" He pushes his dish to the side and hugs me.\n\nI cry without wanting to. It starts with the long breaks in between my breathing and ends with tears streaming down my face. It is a silent cry that speaks volumes. We are not huggers. We don't do that. Why is he doing that? Can't he see it is only making it worse? I hold on tighter.\n\n\"Did she say something to upset you?\" He rubs my back.\n\nI shake my head. I'm the mean one. This whole time I have been pushing her further and further away and now that she is willing to leave me...it is tearing me up inside.\n\n\"Annie, you have to talk about it.\" He sighs. \"It's not normal, or better yet, it's not good to hold it in.\"\n\nI pull away and use my shirt to wipe my face. I can't help the hiccups that ensue from my tears. \"I-\" I clear my throat. \"She-\" The words don't make it out.\n\n\"I blame them.\" He looks at me in distress. \"It wasn't until my first year of college that I realized we were raised all wrong.\"\n\nI control my breathing. \"Don't say that.\" I hiccup again. \"They did the best that they could.\"\n\nHe bows his head. \"They tried to raise us like robots. We have feelings too.\" His eyes turn bright. \"I hate seeing you like this, Annie. Please tell me what's wrong.\"\n\nI wrap my arms around myself. \"Nothing.\" Once the feelings have staked their claim on my heart, I allow them to sit there and avoid causing anymore disturbance. I don't move a muscle, hoping to calm the waves within. That is how I have done it in the past and that is how I am going to do it now.\n\n\"You really need to talk to someone. Letting your feelings out doesn't make you weak. Owning them makes you strong.\"\n\nI nod at his words. \"You've always been so wise.\"\n\nHe smirks. \"College will do that to you.\"\n\nI drink some more water and pick on the food on my plate.\n\nWe sit in silence. He's probably thinking about the same thing I am. Did our parents fail us? We never went hungry, sure we struggled sometimes but nothing traumatizing. If our power went out, we bundled up. If all we could eat were crackers for dinner, we did it. At the end of the day, we stuck together and our parents looked out for our best interest. They raised us with morals and invested in our education. They did more than their parents did for them. They had to choose to be there emotionally or financially for us. I'm sure I would choose the same if I had children of my own. Wouldn't I?\n\nBut right now, I do not have to choose between one or the other. I can provide for myself and I am old enough to make my own decisions. If I want to focus on my emotions, who is going to stop me? My heart twists in pain at the thought of not seeing Quin again. Do I want this? It is scary to think of the power she holds over me.\n\n\"I think I like her.\" I avoid looking at him. I say it out loud for myself and to show him that there is nothing wrong with us. For the most part. We are doing that best that we can. I am going to try to do the best that I can.\n\n\"She's hot.\" He states the obvious.\n\nI narrow my eyes on him.\n\n\"So, why are you crying?\" He points to my face, which is probably blotched.\n\n\"I ruined it. She's too good for me.\" I stop pretending to eat.\n\n\"That's not true and you know it. Annie, you're the best big sister I could have asked for. Even when our parents raised us with barely any love between the two of us, you showed me there are other ways to show you love someone. You always gave me your food even if you were starving. You stuck up for me when anyone tried to pick on me. You would tell me bedtime stories when mom had to work late.\"\n\nMy eyes get wide. I do love Bobbie and I never wanted to fail him but I didn't know he was able to see that. Things got better when we got older and our dad got a raise. \"You remember all of that?\"\n\nHe nods. \"I know it was rough growing up but I didn't notice a difference. And it got better once we got older.\"\n\nMy eyes get watery again. I don't want him to remember the bad parts.\n\n\"Now, I don't know what is going on between you two but you need to get your shit together if you're going to try anything with her.\" He gets this look in his eyes that I have seen before. He's trying to solve this complex problem with the most efficient solution. I am his math problem. Figures. \"First things first, you have to think better of yourself. Think about all of the things you are bringing to the table.\"\n\nI sit there silently waiting for him to continue. He looks at me expectantly.\n\nI smirk. \"I am self-sufficient, independent.\"\n\n\"You are caring and dependable.\" He corrects me.\n\n\"I have a good work ethic.\" I sniffle.\n\n\"You are willing to make the relationship work even when times get tough.\"\n\nMy heart grows tender. \"I love you.\" I give him a wobbly smile.\n\nHe messes my hair up. \"I know. Just like you know I love you too.\"\n\n******\n\nSage is in Quin's cubicle on Monday morning.\n\nI pretend to be heading to Pen's desk but look back at her as I pass by. She gives me a smile that doesn't reach her eyes. Have her eyes always been so cold?\n\n\"Well, hi there!\" Pen gives me a quick hug. She knows how much I dislike them so she makes them short. Her hugs I don't mind. I don't hate Quin's hugs, that's for sure.\n\nI hide behind her wall and peek outside of her door to look at Sage. She's leaning over Quin's desk, they're both pointing at something on her screen. She is standing very close.\n\n\"What are we looking at?\" Pen is leaning over me to follow my life of sight. Her short hair tickles my forehead.\n\n\"What is Sage doing at Quin's desk so early in the morning?\" I don't beat around the bush. Pen will be caught up soon enough and I can't waste any more time.\n\nAfter the eventful weekend with Quin and my brother, I decided I needed to do as he said and get my shit together. He worked with me all weekend, going over affirmations, reminding me that I am worthy of being happy, not just complacent. No one else could have gotten through to me the way he did. No one understood what it was like growing up void of feelings.\n\n\"She tries to do this a couple of times a week, probably to get closer to Quin.\" Pen whispers.\n\nUgh, so I do have a rival. \"What happened Saturday night?\" I hope she knows what I am referring to.\n\n\"Quin bailed pretty early on. Sage stayed and kept drinking. I think she was bothered by it.\"\n\nI hate the smile that takes over my face. That doesn't mean anything. That was before Quin thought I had a significant other.\n\n\"Ladies, can I help you?\" Pen's manager, Johnnie, stands in front of us.\n\nWe both jump back and I straighten my shirt. \"Sorry, I thought I lost my notebook here. Thanks for helping me look, Pen.\" I rush out of her cubicle, but not before almost running into Quin who was leaving her desk.\n\nMy face turns bright as I hold on to her arms for support. My heart tumbles at her feet.\n\nShe looks down at me with reserved concern. Her eyes are darker today. She looks tired. I want to ask her if she has gotten enough sleep.\n\n\"Oh, are you okay Annie?\" Sage pulls me up right and away from Quin. I don't miss the side step to get in between us.\n\nI shift away from both of them and nod. \"Just had to get something from Pen. Bye.\" I rush out of there with as much dignity as I can muster.\n\n******\n\n\"You have to do it!\" Pen shoves me further down the steps.\n\n\"I don't think that is a good idea.\" I bite my lip.\n\nIt is Wednesday morning and I have made zero progress.\n\nPen is now up to date on my new goal: Getting Quin to ask me out one last time or get enough courage to take the first step myself. I don't know if I can make it happen, but I will try my hardest. Every time I have tried to get some alone time with Quin, Sage has popped into the picture. By that time, I have already lost my guts. Even with Pen's help it has been nearly impossible to manage more than a single greeting whenever I am around Quin. I always trip up on my own thoughts and she's not as chatty as she used to be. She has also started coming in later and leaving earlier, which makes it hard to catch her in the parking lot. How did she manage to make it look so easy in the past? She seemed to catch me at the best time when I was in the parking lot.\n\n\"You just make it look real. I'll handle the rest.\" Pen looks around to make sure the coast is clear. She sticks out like a sore thumb with her red suit but I let her pretend she is blending in. Sage is off today and right now Quin is taking her restroom break. According to Pen, I just have to pretend to trip and have Quin catch me so that we can look into each other's eyes and fall in love. Sounds far-fetched, but I am becoming desperate. I haven't gotten to talk to her much since she left my apartment. I need to clear the air.\n\nWe walk further down the hall and the restroom door opens. I yelp when I feel Pen's hand come up behind me and give me a shove. I fall, harder than I intended, into someone's arms but they feel too soft. Definitely not what I was expecting. They also fail to catch me and I fall, twisting my ankle on the way. Landing on my face.\n\n\"Annie!\" Cristy's shrill voice fills the halls.\n\n\"Shit!\" Pen rushes to my side and gives me an apologetic look.\n\n\"Ouch.\" I turn and sit up, glaring at her.\n\nQuin comes out of the restroom in a hurry and her eyes go wide when she sees me on the floor.\n\n\"Anne.\" She rushes down and looks at me without blinking. \"Are you okay?\"\n\nI nod and use her extended hand to get up. My ankle gives out and I practically fall against her chest. I grind my teeth against the throbbing pain and use her arms as support.\n\n\"Here.\" She picks me up and carries me to my chair. Being in her arms feels familiar.\n\nEveryone surrounds my office space and my face turns as red as a tomato.\n\n\"Okay people!\" Pen starts to push people out. \"Let's give her some room to breathe.\" She gives me a wink and a thumbs up before leaving.\n\nQuin is sitting on the other chair, with my foot on her lap. She removes my heel and lightly touches my ankle.\n\n\"Ow.\" I squeak.\n\nShe winces and sighs. \"We might have to go to the doctors to get it checked.\"\n\nMy heart flutters at the mention of 'we'.\n\n\"I'm fine, I just need to give myself some time to get over the initial pain.\" I remove my foot from her thigh.\n\nHer eyes turn dark. \"Do you always say you're fine, even when you're not?\"\n\nI blush and avoid looking at her. Why did I decide to listen to Pen? Now I really did hurt myself and I might have to be excused from work. If the plan was to put more space and time between Quin and me, we succeeded.\n\n\"Here.\" She hands me back my shoe. She gets up and I try to do the same but she pushes me down firmly. Her hand on my shoulder feels scorching hot. \"Stay off your foot.\" She motions to leave but I pull her hand to stop her.\n\nShe turns to look down at my hand in hers and I pull away instinctively.\n\n\"I'll take your offer, if you still want to take me to the doctors.\"\n\nShe doesn't bother looking at me. \"I'll let Pen know to give you a ride.\"\n\n******\n\n\"I'm so sorry.\" Pen hits her forehead against her steering wheel.\n\n\"I should have known better.\" I can't completely blame her. I'm the one who went along with it. \"Let's just go get my car so I can drive home.\"\n\nAccording to the doctor it was a light sprain and I should be good within the next couple of days. I just have to avoid putting a lot of pressure on it. Considering a lot of my work can be done sitting, that should be no problem. It's also not like I will visit Quin's desk every morning. I'm no Sage.\n\n\"So, operation damsel failed. Time for plan B.\" She pats my thigh in encouragement.\n\n\"Um.\" I want to groan but I don't want to be left to my own devices with Quin. I need Pen's help. Especially now that I am a leg behind.\n\n\"This Friday I am going to invite Quin over to my place for a movie night.\"\n\nI scowl. \"Great, now you're after her too?\"\n\nShe giggles. \"As if, that girl scares me. No, scare is putting it lightly, I think the word I'm looking for is intimidates.\"\n\nI give her a sideways look. \"Who, Quin?\"\n\nShe nods.\n\nI picture Quin leaning her head against my neck, kissing me. My cheeks heat up. Not intimidating. Just...intense. But in a good way.\n\n\"Sure, she is friendly. I mean, she is much friendlier than you and loves to help out but she is also very driven. Nothing can get in her way when she wants something, you know?\"\n\nI look out the window. I do know. The clouds are coming in, this day is going to end bleak. In more ways than one.\n\n\"Anyways, back to my plan. I invite her over. You decide to drop by unexpectedly and then I'll pretend to get sick or something. That will be your chance to get her to take you home.\" She smiles brightly.\n\nI begin to poke holes in her stories. Unlike our last plan, I need to make sure this one is sound proof. I start to fire off questions. What if Quin is drunk? Then I get to drive her home. What if she leaves as soon as I get there? I chase her. What if she doesn't show up? Trust her, she will.\n\nWe pull into the nearly empty garage. Pen gasps.\n\nQuin is leaning against her car staring down at her phone. As soon as she hears Pen's car she looks up and makes eye contact with me. The air pushes out from my lungs.\n\nShe hops in her car and leaves before Pen can even park.\n\n******\n\nI crack my knuckles with one hand before knocking on Pen's door.\n\nShe lives in the fancier part of town. With her salary and taste for a lavish lifestyle, it suits her. I focus on the dark green door. The lights in the hall are not as bright or as harsh as mine. The walls are a deep red and there are plants in each corner. She has her apartment all the way at the end of the hall. Where I am standing now, waiting for her to answer the door. I think of Quin, the only person who my brain doesn't mind constantly wondering about.\n\nI haven't seen her since Wednesday afternoon. She is much better at avoiding me than I ever was. While in the past there were times that she would conveniently run into me, now I don't even get a glimpse of her. It is as irritating as it is thrilling. Now it's the moment of truth. I tug on my gray sweater and straighten my shirt. I decided on a laid-back look to make it seem like a genuine drop by. If I was too dressed up, Quin would catch on. And I can't have that.",
        "Quin opens the door. Her eyes light up for just a millisecond and then she remembers who I am and the spark disappears. That stings. A lot. But I don't blame her. We stand there staring at each other for what feels like an eternity. Her hair is up in a messy bun, her bangs are swept to the side. She's wearing a cute maxi dress that would look casual on anyone else but looks beautiful on her.\n\nMy mouth is dry and I can't speak. I try to make a move to get by her but she blocks the entrance with her hand. I don't move back, slowly looking up at her from under my lashes. I want to move closer. Kissing a friend hello is normal right? Aren't there cultures that kiss on the mouth even? Can't there be?\n\n\"Hi, Anne.\" Her smoldering look calls to my hidden wants and needs. It's unnerving.\n\nI clear my throat. \"Can I come in?\" I can feel my face and neck flush red.\n\nShe hesitates but drops her arm.\n\nI round the corner, opting not to remove my shoes in case I need to sprint out of here. Pen's place is pretty much the same as before. Except now she has yellow plush pillows on her white couch and aqua candles on her glass coffee table. Straight out of a good home magazine. The view from up here is breathtaking, but I am breathless for other obvious reasons. I hear Sage before I see her. I can't hide the look of disbelief on my face when she rounds the corner.\n\n\"Annie?\" She doesn't sound pleased.\n\n\"Shit.\" I hear Pen say from the kitchen. Her tiny footsteps get closer and she rushes up to give me a hug.\n\n\"Annie! Hi! What brings you here?\" She pulls me towards the kitchen and whispers in my ear. \"Sage just showed up, I was about to text you.\" We move to the open kitchen with a long white marble island. There are elegant, black bar stools lined up against the island and hanging ceiling lights. They match the dark wood floors and black painted cabinets. The accent brick wall near Pen's front door blocks Quin and Sage from our view.\n\nI quickly nod and pretend this is all part of the plan. The plan that I shot with a machine gun to make sure we had every possible outcome accounted for and that Pen swore she had a solution for. I should have bombed it. Why didn't I think outside of the box? What am I doing here? I really feel like an uninvited guest.\n\nPen elbows me to say something.\n\n\"Uh-yeah.\" I clear my throat. \"I was just in the neighborhood and thought I would drop by.\" Pen looks at me to evaluate the damage.\n\nI'm not crying, so that's good. My hands are slightly shaking but I can work with that.\n\nShe hands me some wine and I drink it all in two gulps.\n\n\"Whoa.\" Quin says behind me.\n\n\"Careful, Annie. Wine can really sneak up on you!\" Sage giggles and tosses her blonde hair to the side. \"I was just telling the girls how I was at a pregame before coming here, so I'm already a little tipsy.\" She stumbles next to Quin, who doesn't fail to catch her.\n\nThey look at each other for a second too long.\n\nI shove my glass into Pen's empty hands. This is going to be a brutal night. \"I need another.\"\n\n\"Are you sure?\" Pen is apologetic but can't argue with me. What would she do in this situation? Probably use her curves and awesome personality to get who she wants. Even in her simple shorts and t-shirt she looks like she walked straight out of a summer catalogue.\n\n\"Please and thank you.\" I take the bar stool next to Quin and pull it around to the other side of the island, next to the sink. I would take it across the street and sit there but Pen probably wouldn't want her expensive furniture out there.\n\n\"Are you driving home tonight?\" Quin watches Pen hand me another glass filled halfway through.\n\nI take another healthy gulp of the wine and try to control my face. It tastes disgusting. Dry and not sweet at all. It burns. I like it.\n\nSage leans into Quin's arm against the table. They do make an attractive couple. Sage with her cute black dress, and very revealing neckline, Quin with her dark looks and striking features. Who am I to stand in their way? What am I doing?\n\n\"Oh, shoot. I would give you a ride but I forgot my car is in the shop for the weekend.\" Pen leans against the counter and tries to act casually. \"Maybe Quin can give you a ride home? She said she's not drinking tonight.\"\n\n\"Actually, Quin and I were going to head back to my place after this and I think Annie's place is on the opposite side of town.\" Sage pouts, adorably. It is hard to imagine any human being immune to her charms. And yet, here I am.\n\nPen and I snap our necks to look at Quin for confirmation.\n\n\"I think I will take you up on that drink offer.\" Quin gets up from her seat and walks to the fridge. \"Do you have something stronger than beer and wine?\"\n\nPen gets up and shows Quin her liquor cabinet.\n\nSage looks down at her phone and pretends I don't exist.\n\nI take a sip of my wine. I can be the bigger person. I should be. Next to someone like Sage I don't think that is a big feat. \"How is work going, Sage?\"\n\nShe doesn't look up from her phone. \"Busy.\"\n\nWe sit in silence for a while. I look over at Quin and Pen who seem to be having a private conversation.\n\n\"So, how are you planning on getting home?\" She finally puts her phone down to look at me.\n\nI bite my lip. Has she always been this rude? Or is it all in my head? The only reason I would act like that is if I was jealous or something. But even now, me being jealous of Sage is not changing the way I act towards her. I am at least trying to be mature and civil. In the end, it doesn't matter how Sage feels or how she treats me, I will just kill her with kindness.\n\n\"I was going to get a taxi or something. I didn't expect Quin to take me home.\" Not really.\n\n\"I think we might leave soon. We just dropped by for one drink.\" Her gloss-covered lips curve in a knowing smile.\n\n\"And you're going back to your place?\" I reiterate just to twist the knife a little more on myself. In case I still want to somehow go through with this. Yup? I'm still sitting here. Okay.\n\nShe nods, clearly loving the upper-hand she has.\n\nIf only she knew Quin has also been to my house. We have slept together. She has kissed me.\n\n\"Time to get this party started!\" Pen brings over two bottles, one white and one brown.\n\nI point to my glass. \"Actually, I think this is my last drink.\"\n\nPen takes the glass away and puts 2 shot glasses in front of me. \"Just two shots and I promise I will leave you alone.\"\n\nI shake my head. The first glass of wine is settling in and making itself at home. I only had a grilled cheese sandwich earlier. I don't think it's enough to hold me over. I assumed Pen would have food but all I see is charcuterie board. Not my cup of tea. Where is the food?\n\n\"Come on, Anne. Two shots.\" Quin leans next to me and pours white liquor into the two shot glasses. Well now I don't have a choice. She pushes them my way. I ignore the delicious scent coming from her.\n\n\"Let's make it interesting!\" Pen claps her hands and then pours the rest of the shots.\n\nQuin goes back to her seat across from mine and Sage moves closer to her.\n\nPen sits next to me and rubs her hands together. \"We will play one round of never have I ever. That way we can each take at least one shot. Does everyone know how to play?\"\n\nWe all nod.\n\n\"Since I am the host, I will get to choose who goes first!\" She points at each of us and then goes back to Quin. \"I choose you.\"\n\nQuin holds her dark shot glass in one hand. \"Okay. Give me a second.\"\n\nI stare at her for as long as I can help it. It is her turn. She is the one speaking. So, this isn't weird. Maybe I should blink though. Be more natural about it. Her cheeks have been flushed since I came in. She's glowing. No one would ever accuse Quin of being average looking. But in my eyes, there is a special spotlight that never goes away from her.\n\n\"Never have I ever spent a whole night in a library.\" She gives me a pointed look.\n\nI take a shot without thinking about it. Then it hits me. \"Wait.\" I look around at everyone's glasses still full. \"How did you know I did that?\" I would spend hours at my campus' library all four years. It was open 24/7, which made it very convenient. If I wasn't studying, I was reading or on the computer. It was my favorite spot.\n\n\"Lucky guess.\" She gives me a half smile.\n\nI blush.\n\n\"Okay, me next!\" Sage jumps up from her seat, too eagerly. \"Never have I ever been interested in technology.\" She wrinkles her nose at the word.\n\nI shoot my second shot and breathe out of my mouth. At least I am done now. No more painful shots. Shit, that burned. Hold it in. Shit, it is trying to come back. I panic. Hold it. I breathe out. I smile when I feel it travel down to my stomach.\n\n\"Okay, my turn!\" Pen offers me a shot glass but I shake my head. I don't want to make a fool out of myself. \"Never have I ever kissed anyone in this room.\"\n\nThe silence is deafening.\n\nMy face goes blank and I look anywhere but at Quin.\n\nShe drinks her shot in one gulp.\n\nTo my horror Sage takes her shot as well.\n\nNo one says anything.\n\n\"I think I'm going to be sick.\" I get up from my seat and rush to the bathroom.\n\n******\n\nI'm there for at least half an hour.\n\nThe whole time I am looking down at my phone. I'm officially drunk and I can't call a cab. The words are blurry, I don't understand any of it. I can't do anything. But I need to get out of here. I don't belong here. Why did I ever think this was a good idea? Sage is the one Quin should be with, not me. Especially if they have shared kisses.\n\nNow I really feel sick but I can't throw up. I look up at the ceiling. Is it because I am a lesbian? God am I on your shit list? I put up a hand as if I am really talking to him. \"Don't answer that.\"\n\n\"Anne?\" Quin knocks on the door. \"Are you okay?\"\n\n\"Like you care.\" I mumble to myself.\n\nThe doorknob jiggles but she doesn't come in.\n\n\"Unlock the door.\" She orders.\n\nI mock her tone and sit against the tub. I hate it here.\n\n\"Maybe we should leave.\" I hear Sage, as she offers her words of wisdom. Some would even call her a sage person. Barf.\n\nI laugh at my stupid joke and then start to cry out of self-pity.\n\nThe door unlocks and I hide my head in my hands. I hear the door close and sigh.\n\n\"Hey.\" Quin leans down in front of me and moves my hands aside. \"What's wrong?\"\n\nI pout and feel my bottom lip quivering. \"I made a really bad joke.\" The tears continue to fall down my cheeks.\n\nHer hands frame my face and she wipes my tears away with her thumbs. \"Oh, that's okay. You're too pretty to be funny anyways.\" She pushes my hair behind my ears.\n\nI hiccup and cry with more enthusiasm. \"I'm not-\" Oh, I hate how she makes me feel.\n\nI allow myself to take one look at her and regret it. She has a tender smile on her lips. Her eyes are that sweet brown hue that I love. Like rich hot chocolate with golden flakes. Almost as sweet as she is. My eyes fall to her lips. She is the sweetest.\n\n\"Don't look at me like that.\" Her voice breaks.\n\n\"Why?\" I sniffle.\n\n\"It makes me feel...special.\" She sounds insecure.\n\nI look up at her. \"You are special. You're Quin.\" It is as simple as that.\n\nShe swallows hard.\n\n\"Quin!\" Sage knocks on the door. \"We should really leave. I think it's raining outside and it's only going to get worse.\"\n\nI hear the faint pitter patters on the ceiling.\n\nI get up and move past her.\n\n******\n\nI dig myself further into my blanket.\n\nNo reason to get up today. Not like I have anything to live for. I allow myself more time to be overly dramatic and feel sorry for myself. It is Sunday. Tomorrow I have to face the two love birds. They have kissed. They went home together after Pen's place and probably had hot, freaky sex. I groan. I will just die alone. Might as well get used to it. I turn over.\n\n******\n\nPen spends most of her lunch break giving me the play by play of what happened Friday night. As if I didn't have a front row seat. As if I haven't run those memories to the ground this weekend.\n\nShe picks a crumb from her orange blouse. It brings out the fire in her hair. \"So, what do we do now?\"\n\nI push my salad around. \"I am moving on with my life.\"\n\n\"What?\" She snatches my fork out of my hand when I don't acknowledge her outburst.\n\n\"May I please have my fork back?\" I don't have the energy for this today. Definitely not to come up with stupid plans that will lead me nowhere. It is all a waste of time.\n\n\"What happened in the bathroom should tell you everything you need to know.\" She gives me my fork back. \"You make her feel special.\"\n\n\"So does Sage. That's why they kissed.\" No case of sour grapes around here. Just a big slice of humble pie.\n\n\"The verdict is still out on that one.\" Pen swirls her fork in the air. \"Why would Sage wait until after Quin took her shot to drink? Do you really think if they had kissed, she wouldn't jump at the first chance to rub it in your face?\"\n\nI groan. \"I am tired of thinking about this. It is all so exhausting.\"\n\n\"All I am saying is that you need to give it one last try before throwing in the towel.\" We stare at the people walking across the street, enjoying their day off. Lucky them. The sun is hiding behind small clouds scattered across the sky. I wonder what Quin is up to.\n\n\"What is your plan?\" I know I will regret it but I might regret not doing anything else more.\n\n******\n\n\"Do you like to hike?\" My voice doesn't sound natural. At all.\n\nIt is shaking and sounds out of breath. It sounds really small in the garage. Can she notice that? I'm breathing like a tiny cornered mouse.\n\nQuin takes her keys out of her bag and walks slowly to her car. I waited until she walked out of the building to pretend to also be walking towards my car. She really makes stalking look super easy and natural. I haven't quite mastered it yet.\n\n\"I can endure a workout for a good view.\" She opens her car door and gives me a look.\n\nMy heart does a summersault.\n\n\"I'm going hiking this weekend if you don't have anything planned...\" So, that didn't come out like I thought it would. It's not even a question.\n\nShe purses her lips. \"I actually have plans.\"\n\nI nod my head like a lunatic and swipe my hand in front of me, as if that erases the question between us. \"That's cool. Okay bye.\"\n\nI turn towards my car to hide my embarrassment. There, I tried. It didn't work and that is okay.\n\n\"Would you like to join me?\" She casually throws it out there.\n\nIt is hard to look back at her. \"What plans?\" If it has anything to do with Sage, I'm out.\n\n\"It's my little brother's birthday. Birthdays are a big deal for us and we always celebrate together.\"\n\nMy eyes go wide. Her family? She wants me to go to her brother's birthday party? It all feels like it's going 100 miles per hour. I wanted to do something laid back with no expectations. Meeting the family is pressure city. Will they like me? What if she realizes it was a mistake to invite me? My thoughts must be clear as day because she speaks up.\n\n\"It will just be my two younger sisters, and baby brother.\" She clarifies.\n\nJust the siblings? That shouldn't be too hard. That's better. I think I can do that. \"Sure, sounds fun.\" I smile and wave goodbye before getting in my car.\n\nShe waves her hand in the air, calling my attention. I put my window down.\n\n\"Is it cool if I text you the details? Pen gave me everyone's phone number my first week here.\"\n\nI nod. \"Yeah, cool.\" I'm so not cool.\n\n******\n\nI pull up to an arcade style of restaurant, clearly for the younger crowd.\n\nI clutch onto the dark blue gift bag with a football inside. I should have asked her what her brother is into. She said no gifts but I couldn't show up empty handed. And now here I am with a football that will probably never get touched. I should have gone with a video game. The guy at the store was right. I cross the street after looking both ways. There is a group of teenagers outside of the doors watching one of their friends do a skateboard trick. It feels like forever since I was a teenager. I briefly look at my reflection on the glass doors before going in. At least I am in jeans. I almost wore a dress. I have to remember this is not a date. This is...I don't know yet, but I'm sure I'll find out soon enough.\n\nI look around the room until I spot Quin. There are old arcade gaming systems along the walls, the smell of teen anxiety and stale fries shift through the air as the door closes behind me. Everyone is in little groups either playing games or huddled around watching others play. There are more boys than girls but it seems inclusive enough. She is standing over her brother and I assume her sisters, a set of twins, who are looking up at her with amusement. She's doing a lot of motions with her hands and they laugh when she gets to the punch line. She must feel me watching her because she looks up and smiles brightly. My heart trips over itself. I'm already walking over by the time she waves at me.\n\nShe's also wearing jeans and black t-shirt with some sneakers. Her hair is up in a messy bun, her bangs curled to stay away from her eyes.\n\n\"Hi, Anne.\" She leans over and kisses my cheek, completely catching me off guard.\n\nI automatically tense and allow our cheeks to brush. The electricity between us is mesmerizing. I can almost taste it.\n\n\"Guys, this is Anne. Anne, this is Kendall, Cassy, and the birthday boy, Robert.\"\n\nThe twins look identical in their facial structure but polar opposite in styles. One, Kendall, is wearing pink and white clothing with a cute bow in her hair. The other, Cassy, is wearing different variations of black with a lot of eyeliner. They look like junior or seniors in high school. Robert is a regular teenage boy with a graphic tee and worn-out jeans. He is probably in his freshman year of high school.\n\nI hand him his gift. \"Happy birthday, Robert. My younger brother's name is Robert too. But we call him Bobbie.\" I wave at the younger girls and they smile back.\n\n\"Maybe we should call you Bobbie.\" Kendall makes a face at her brother.\n\nHe gives her a sarcastic laugh but otherwise ignores her. \"Thank you.\" He motions to the gift bag.\n\n\"The receipt is in there. In case you don't think you'll use it.\" I go around the table and sit next to Quin. She takes her seat as well and pulls out a bag full of quarters.\n\n\"This should last for a good hour if you guys play it right.\" She grabs small containers and starts diving up the quarters into four different piles.\n\nShe gives her siblings a small cup each filled with quarters and they move as a group towards their first game.\n\n\"And this,\" She shakes her cup, \"Is ours.\" She leans in closer to me and smiles. \"Are you competitive?\"\n\nI shake my head, not trusting my voice.\n\n\"We'll see about that.\" She grabs my hand and off we go.\n\n******\n\nQuin is right, we all get enough quarters to last about an hour and a half.\n\nTurns out I am competitive when it comes to showing off in front of Quin. At first, I watch and observe how the game should be played or I get distracted by watching how much fun she's having but then I get completely focused and put my tech skills to work. I may be clumsy, but I know there are certain things that I am naturally good at. She seems impressed and I do a little dance inside when I get some wins. Her siblings tag along halfway through and start to choose sides as to who they think will win. Her brother sides with her a lot of the time and the twins switch back and forth between us depending on the game. They know what Quin is good at and what I might have a chance in.\n\nShe holds the last four quarters in her hands.\n\n\"Let's make this last one interesting.\" She gets closer to me. I force myself not to move back.\n\nHer siblings are back at the table finishing off the last slices of pizza. They already turned in their tickets to get prizes.\n\n\"I'm listening.\" Or at least trying to. Looking up at her flushed face makes it really hard to focus. Being next to her during these games has me on a runner's high. We don't talk much but I can feel the tension. I want to kiss her."
    ],
    "authorname": "SkylerLuv",
    "tags": [
        "romance",
        "lesbian romance",
        "brunette",
        "cum",
        "eating pussy",
        "girl on girl",
        "finger fucking",
        "lesbian oral",
        "work"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-new-girl-22"
}