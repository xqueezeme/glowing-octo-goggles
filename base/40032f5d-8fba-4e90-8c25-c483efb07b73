{
    "title": "My Secret Service Ch. 08",
    "pages": [
        "Missy didn't give me any time to think about what I'd just said. \n\nEven as my cock leaked the last of my load and started to shrink, she lifted off me and slid forward, planting her cum-filled pussy on my waiting face.\n\nI worked hard to catch as much of my cum as it fell from her, but I'm afraid I missed nearly as much as ended up in my mouth. Soon, my face was a slick mess of my cum and her juices, which provided some lubrication as she ground her sex on my face.\n\nThe pace of her hips quickened as her orgasm approached. \n\n\"That's it. Eat it. Eat it. Eat that cum,\" Missy moaned as she fucked my face. \"Take it. Take it. Ooooh, shit.\"\n\nThe sex mix on my face, coupled with Missy's full weight pressing her pussy into my nose and mouth made it harder and harder to catch a breath. \n\nAs she rode me, I could feel the tickle of oxygen deprivation starting to fog my mind.\n\nJust then, she arched her back and screamed, her second orgasm of the night rippling through her body. \n\nWhen she rolled off me, I don't know which of us worked harder to catch our breath.\n\nI guess I was lost in my thoughts about my promise to let Missy watch me suck Jim's cock. I didn't notice her get up from the darkened bedroom. In fact, it wasn't until she walked back into the room, still naked, carrying a hand towel and two fresh glasses of wine that I noticed her.\n\nShe climbed into the bed and kissed me as she leaned over to put one of the glasses on the table on my side.\n\n\"Mmmm,\" she said, licking her lips. \"We taste good.\"\n\nShe offered me the towel, which I used to wipe the sex from face. I would have preferred to just let it dry, a reminder of the encounter with this enchanting woman, but it seemed rude.\n\nAs we cuddled in the bed, she wiggled around until she was curled beside me, her head laying against my abdomen.\n\nShe let her fingertips play along my skin, from my thighs, up over my belly and across my chest. \n\nWe hadn't said much since she'd come back to bed, instead enjoying the warmth of our bodies next to each other and the afterglow of our lovemaking.\n\nFinally, she whispered.\n\n\"I'm excited to watch you suck his dick.\"\n\nAs she spoke, her fingernails trailed across my nipple just as the word \"dick\" fell from her lips.\n\nI could feel the shockwave \u2014 of her words and her fingers \u2014 straight through my own manhood.\n\nImmediately my dick started to stiffen slightly and leak precum. \n\n\"But, how? When? Where?\" I asked. \"I don't think your boss is going to appreciate you spying on him.Not to mention that I told you about what we do.\"\n\n\"Let's not get ahead of ourselves,\" she said. \"I'm sure we can figure out a way for me to see you take his hard cock between your lips. You just worry about being ready when the time comes.\"\n\n\"Perhaps I could set up a small camera in my house, or you could hide one in his office,\" I offered. \"Then you could watch from somewhere else.\"\n\n\"No. No way, she said, pinching at my nipple, which only served to make my dick leak harder. \"I want to be close enough to hear you slurp on his cock, to hear him encourage you to take his dick deep in your throat.\"\n\nThe idea of her being near enough to see and hear those things both terrified and excited me. I didn't think much about it there, but it was becoming clear I would do whatever she wanted, however she wanted, whenever she wanted.\n\nAnd even if my mouth said differently, my now hard, leaking cock told the truth.\n\n\"So how do you see this working?\" I asked, as her fingers left my nipples and trailed across my body until they found my erection, causing another moan to escape my lips.\n\n\"Oh, that's easy,\" she said. \"He calls and tells you he's on his way. You slip into your prettiest little panties and assume the \"good girl\" position with your back to the door, while I -\"\n\n\"Good girl position?\"\n\n\"On your knees, the back of your pretty little panties facing him as he comes in. If you've chosen wisely, say, a sexy little g-string, the sight of them clinging to your ass will make him pause and consider whether he want to watch his dick slip between your lips, or slide into your tight little manpussy.\"\n\n\"But I don't ... we haven't ... He's never said he wants to.\"\n\nMissy took her finger from where it had been lightly touching my dick and brought it to my lips. I could feel the sticky precum on my face.\n\n\"Shhhhh. We'll come back to that,\" she said. \n\n\"He removes his clothes, leaving only his underwear covering his already hard cock. You wait quietly. As he steps in front of you, you look up at him above you, his eyes catching yours past the bulge in his pants.\n\n\"His hand finds the back of your head, pulling your face to his crotch. He rubs his dick across your face as you kiss at it though his underwear.\"\n\nMissy's fingers were back at my nipple, flicking it gently as she painted her word picture. I groaned with pleasure, the precum now streaming down my dick.\n\n\"But he's not there to tease you,\" she said. \"He lets go and you reach for his waistband, pulling his underwear down and letting his dick flop into your face. After you help his free his ankles, you turn your face up and kiss the underside of his cock head, showing your deference to the superiority of his dick.\n\n\"You press your face into his crotch, kissing the balls that will soon feed you the seed you desire. Your cock is stiff in your panties, but you dare not spare any of your attention for it.\"\n\nMissy had slid down until her face was near my crotch. She ran her fingers up my shaft, collecting the flowing precum. \n\nShe lifted her hand above her head and rubbed the sticky solution onto my nipple, sending me into a state of bliss. The act, so simple, seemed so ... dirty. \n\nI loved it.\n\n\"You want to play,\" she said. \"You want to run your tongue along the underside of his shaft, to kiss and lick at his head. \n\nWith that, she leaned in and licked me just as she described. Despite my recent orgasm, I could feel the pressure building. \n\nBut Missy wasn't thinking of my pleasure. She was still telling her story.\n\n\"He's not interested in your play,\" she said, her lips just inches from my dick. \"He wants to fill your mouth with his cum. You two aren't there for you to fool around. You are there to suck his dick.\n\n\"Slowly, you slide his hard cock into your mouth, letting your lips and tongue pleasure his shaft. You work his dick in and out of your mouth, taking him as deep as you dare. He's moaning, you are moaning. I can hear the sloppy sounds of his cock sliding in and out. I reach into my panties and finger my wet pussy as you work his dick.\"\n\nShe gently gripped my erection, stroking me slowly as she spoke. I was quivering at her touch, on the edge of cumming all over myself.\n\n\"His cock is swelling in your mouth. He grips the back of your head and takes control. He's going to shoot soon. He's fucking your face, telling you what a good cocksucker you are. Your mouth is filled with the taste of his cock. He wants to cum. You need him to cum.\"\n\nI was moaning now, shivering and shaking to her touch. I wasn't going to last. \n\n\"Then he pushes deep into your mouth. He's going to blow.\"\n\nMissy moved to take my dick deep into her mouth, pushing me over the edge. My balls tightened and I came, filling her mouth.\n\n\"Ohhhh, shit,\" I moaned. \"Oh, God. Ohhhhhhhh.\"\n\nMissy held still as my cum filled her mouth. When she released my soft dick, she slid up and planted a kiss on my lips, pushing her tongue into my mouth. \n\nMy cum flooded into my mouth as our tongues swirled against each other. Eventually, I swallowed the load I had just shot into her mouth.\n\n\"I love the way you think,\" I said.\n\n* * * * *\n\nWe fell asleep, the taste of my ejaculate still in our mouths.\n\nI awoke to sunshine illuminating the curtains and Missy's warm hand gently touching my dick.\n\nI didn't think I could go another round after the pair of powerful orgasms just a few hours before.\n\nI shifted onto my side and pushed her into her back. When my hand slid along get thigh, I find her soaking wet. \n\nI slipped two fingers inside her sopping hole, while my thumb began to stroke her clit.\n\nMy lips found her erect nipple and I teased and sucked it as I worked her pussy with my fingers.\n\nMissy's hips rolled as I gently curled my fingers against her g-spot and rubbed her clit. As she moved my pinkie brushed across her asshole.\n\nShe moaned, so I deliberately pushed against her rosebud.\n\n\"Yes,\" she whispered. \"Oh, yes.\"\n\nShe grabbed my face and pulled me off her nipple. Our eyes locked.\n\n\"Put your finger in my ass,\" she demanded.\n\nI dragged my pinkie across her perineum, wetting it with the juices flowing from her pussy.\n\nAs I increased the rhythm of my fingers inside her and on her clit, I pushed my pinkie against her ass.\n\nMy finger slipped into her tight channel and Missy began to buck against my ministrations.\n\n\"Ohhhhhhh,\" she moaned. \"Yesssss.\"\n\nShe went stiff and I could feel her pussy and ass contracting against my fingers as she came.\n\nShe grabbed my thumb and pushed it away from her clit, but she didn't release my fingers from inside her. \n\nAs she relaxed, I let my fingers slip from her, moving to where I could give her a good morning kiss. \n\n* * * * *\n\nWhen I got home, I put a load of my panties in the washer and promptly fell asleep in front of the TV as they washed.\n\nI awoke with a start as my phone buzzed where I'd dropped it on my chest.\n\nIt was a text from Jen. When I clicked to open it, it was a photo. Of Jen's leg. With a stream of cum running down her thigh. \n\nThe caption said, \"Hungry?\""
    ],
    "authorname": "HConway",
    "tags": [
        "bisexual male",
        "nipple play",
        "oral sex",
        "creampie",
        "snowballing",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/my-secret-service-ch-08"
}