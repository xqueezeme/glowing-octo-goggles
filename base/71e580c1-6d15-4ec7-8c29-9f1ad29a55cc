{
    "title": "Ready Ch. 02",
    "pages": [
        "Author's Note: This is a ROMANCE story between a guy and gal; he happens to be black, she happens to be white. Looking for a fetish stroker? This isn't it. I must thank AsylumSeeker for his patience and long-suffering in editing my copy. All good is from him, any bad comes from my own stumbling mind.\n\n*\n\n\"Are you sure your family's ready for this?\"\n\n\"Ready for what?\" she asked with a slight smile, her eyes focused on the road in front of her, already understanding his meaning.\n\nKevin glanced sideways from the passenger seat and quirked an eyebrow. You know damn well what, he thought.\n\n\"You should have told them.\"\n\nDeonne had somehow forgotten to mention to her lily-white, redneck family that her boyfriend of over a year was black. Okay, so she hadn't really forgotten, she just kept putting it off. They knew everything about him but his race. She wasn't really sure how they would react initially. Yep, she had been a coward and now Kevin was going to pay the price when they climbed out of the car in a few minutes.\n\n\"It'll be okay,\" she suggested hopefully, \"they're open-minded, not stereotypical hicks from the sticks. We'll just have to give them time to adjust.\"\n\n\"Dee ...\" he started then stopped. Sighing, he continued. \"It's one thing to be open-minded in general, but something else when your baby girl brings home a black man.\"\n\nHer eyes grew concerned, a small, deeply buried worry that she had tried hard to ignore felt like a stone in her stomach. Taking her eyes from the road, she took in his strong profile, his hair, cropped short, his wide, almost blunt nose and firm, lean face that revealed a dimple in his left cheek when he smiled. Right now his brown eyes looked back at her with mild accusation. Race had not been much of a factor in their relationship, but instantly it had become this huge deal and it was all because of her.\n\nWatching her face change expressions, Kevin felt a tight frustration pull at his gut. Frankly, he didn't give a damn what her family thought of him or their relationship, but they were very important to her, and with so many brothers, sisters and a plethora of extended family, she had a minefield to negotiate.\n\nAs she turned the car off the pavement onto the gravel road that would carry them the last leg of their journey to her parent's house that feeling of wholeness, of belonging, came over her as it always did when she returned to her childhood home.\n\nMuch about the area bothered her. The poverty and lack of hope that hung over the region decade after decade like a persistent never-ending fog had driven her away and made her weep for those stuck in its oppressive grip, but it was still home. The mowed off cornfields of the lowlands that trailed the river and gentle rolling hills covered in trees were now barren, cold and packed up for the winter. This would always be a living part of her, invisible roots buried deep into her very being, just as the roots of the old oak trees on the farm burrowed deep into the rich Ohio soil.\n\nAccelerating quickly up the steep, curving incline, she announced abruptly, \"This is where my brother slid off the road and flipped over. The van rolled once before it stopped. I thought we were going to die!\"\n\nKevin refused to show fear, but as he gazed at where she pointed his eyes grew large as he saw the steep slope down the hill, a small creek meandering at the bottom.\n\n\"You were there? Were you okay?\" he couldn't help asking.\n\n\"Oh, yeah! It was just John and me. It started to snow while we were in town, so there was a thin coating on the road and with the washboard effect these roads get he lost control of the back and next thing we knew, over we went. But Dad just got the tow truck out here and he and my brothers flipped it over and pulled it back up the hill. It fired right up and he drove it home. It got a couple scratches on the side and a dent on the roof, but other than that, it was fine. I was so mad at him. I wanted to drive and he bullied me.\"\n\n\"Was your dad upset?\"\n\n\"Dad? Nah, he rarely gets mad. He may look like a night club bouncer, but he's usually a pussy cat. It was just an accident. John wasn't driving fast or anything.\"\n\nDeonne's idea of fast driving had him doubting her on that, but he kept quiet.\n\nThe next thing he knew they were sliding on the gravel as she hit the brakes and made a hard left turn onto a dirt driveway. He was grateful for his grip on the dash as she slammed into a pothole the size of Rhode Island; chickens were scattering in their path. God. Does she ever slow down?\n\nAs she pulled to a stop Kevin was able to focus on his surroundings, the jarring from her breakneck speed over the rutted path having abruptly halted. To the left stood a large modern barn and several outbuildings with woods and pasture spanning to the right. In the middle was a rambling old Victorian farmhouse. Kevin climbed out of the small rental car. Okay, where is it? He knew there had to be one. Yup, sauntering his way was the scruffiest, dirtiest yellow mutt he had ever seen. And he was making a beeline right to him.\n\n\"Larry!\" Deonne shouted, \"Get off him! Right now!\"\n\n\"Larry? Your dog's name's Larry?\"\n\n\"What's wrong with Larry?\" she asked, pulling the fishy smelling dog off her impeccable boyfriend. Kevin had never seemed so city-boy as he did right now. Wasn't he a tough army guy? But as she watched him brush dirt and crud off his black sweater, she noticed a small smile. Not so slick after all.\n\n\"It just doesn't seem very dog-like.\"\n\nThe front door opened and two very large men came out. Deonne had not exaggerated when she mentioned a night club bouncer. Coming towards him was Daddy Bouncer and Junior Bouncer. Both were wearing yards of hunting camouflage, boots and well-worn baseball caps.\n\n\"Well, look what Larry drug up from the pond!\"\n\nDeonne stuck her tongue out at her brother. Kevin was sure that only a little sister would dare challenge Junior Bouncer like that.\n\n\"Daddy, Phil. This is Kevin.\" Please, she prayed, don't let them say something stupid. For once.\n\nKevin took half a step toward her brother, who was closest and stuck out his hand. \"It's nice to finally meet you.\"\n\nDeonne's oldest brother gripped his hand and looked him in the eye. \"Same here. Glad you could make it for Thanksgiving.\"\n\nWhen Kevin turned towards her father his hand was already waiting. \"Nice to meet you, son.\" With that he turned towards his daughter and gave her a long, hard stare full of meaning, and then he grabbed her to him for a big hug.\n\n\"Glad to see she managed to get you here in one piece. Seems to think a car is a plane that flies on the ground.\" Having said his little joke, he stuck his hands in his pockets and made his way back towards the house leaving everyone chuckling except Deonne.\n\n\"I don't know what you're talking about,\" she huffed.\n\n\"Need any help with your bags?\" Phil volunteered.\n\n\"I sure do,\" Deonne piped up.\n\n\"Not you, river rat. Get your own bags. I'm talkin' to the compn'y.\"\n\n\"Nah, I'm good,\" Kevin replied, grabbing both his and Deonne's bags out of the back of the car.\n\nDeonne pushed open the heavy red door and held the wooden screen for Kevin, letting it slam shut with a loud bang behind her. Kevin found himself in a large living room with a staircase running up the left side of the room. He took in the light green walls and worn, overstuffed brown couch and loveseat, built more for comfort than looks. In the corner was Mr. McNeil's obvious throne, a dark green leather Lay-z-boy, with a direct view of the older model television. On one wall was a fireplace, and next to the loveseat was a vintage upright piano.\n\n\"Deonne! You're here!\" Rushing at her was a tall, slightly heavyset woman in her early thirties with long dark hair and wearing a loose t-shirt and jeans. Behind her was an attractive, petite blonde, looking overly dressed for farm life in a beige pantsuit and stiletto heels. Both were wearing large smiles.\n\n\"Becca! I thought you weren't coming down until tomorrow?\" Deonne greeted, putting her arms around her taller sister.\n\n\"Well, Dan can't come until tomorrow, but I couldn't stay away,\" she responded before glancing at Kevin.\n\nOh yeah, Deonne thought, my sister couldn't stand waiting a minute longer to meet my mystery man.\n\nLooking past her sister, she moved towards Phil's wife, Camille. \"Hi, Camille. It's been a long time. I'm glad you guys could make it,\" she said and gave her a small hug. Deonne had never felt comfortable with Phil's wife. Her sophistication and quietness intimidated her. Phil and Camille were proof that opposites attract.\n\nLooking back at Kevin who stood watching by the luggage, she introduced him. \"Becca, Camille. This is my friend, Kevin.\"\n\nMerriment lit Becca's eyes. \"Hi, Kevin. We've heard so much about you.\" With that she gave her sister an ornery look and shook Kevin's hand.\n\nKevin smiled back, \"And yet, not enough, I'm afraid.\"\n\nCamille, more naturally reserved, politely put out her hand in greeting and Kevin realized that this sophisticated looking lady had the kindest eyes he had ever seen. He instantly liked her.\n\nReceiving their room assignments from Becca, Deonne pushed her nose in the air and commanded in a pitiful British accent, \"Follow me, kind sir, and I shall take you to your suite!\" With that she proceeded to head towards the staircase.\n\nDeonne trotted him down a long hallway and picked a doorway on the right. Shaking his head while trying to keep up and not bang the luggage into the wall, he wondered if there was a fire or something. Deonne walked just like she drove.\n\nUpon entering his room, he took in the two mismatched twin beds with coordinated thin dark blue bedspreads, dark blue curtains and light blue walls. A small maple dresser from a bygone era stood between the two windows. Small children's sleeping bags covered the floor along with gym bags, toys, and young boys' clothing dumped helter-skelter.\n\nBehind him Deonne leaned on the door, closing it. Putting the bags down, Kevin straightened and looked at her.\n\n\"You know, I don't think you've had a very good McNeil welcome,\" Deonne decided, her face wearing a look of mock seriousness.\n\n\"I haven't?\"\n\n\"Nope,\" she confirmed, shaking her head slowly as she climbed over a gym bag and Matchbox cars making her way towards him. \"And I think I'm going to have to do something about that.\"\n\n\"Oh, yeah?\" A small smile touched his lips as he watched her.\n\nHer mark in sight, Deonne felt her toe catch on the end of a sleeping bag, halting her forward movement abruptly. Throwing her hands out, she managed to land on her hands and knees at Kevin's feet.\n\nLooking up, she saw Kevin trying unsuccessfully to stop laughing, his hand to his forehead, shoulders shaking and a smile unsuccessfully being kept in check.\n\n\"Really, prostrating yourself wasn't necessary.\" He couldn't help himself.\n\nEyes narrowing, Deonne reached for Kevin's belt buckle.\n\n\"Yeah, there we go, babe, now we're talking. A little personal attention wou -\"\n\nDeonne jerked hard on his belt, pulling him down. Knowing she couldn't counter his strength, she grabbed his crotch with her other hand, startling him and causing him to lose balance. He came forward on top of her, bumping his shoulder into a bed.\n\nDragging herself out from under him, she turned around to see his back shaking hard with laughter.\n\n\"You're a fuckin' secret weapon. We don't need an army; we have you,\" he announced while shaking his head.\n\nSnuggling herself up against him and putting her hand gently on his cheek, she asked, \"Now, where were we?\"\n\n\"Making me welcome. Do you McNeil's always welcome your company by slamming their head into the ground and breaking their shoulders?\"\n\n\"Only the special ones,\" and with that said she pulled his head towards hers and gave him a soft, tentative kiss.\n\nDeonne and Kevin hadn't seen each other in three months, and meeting at the airport before driving to the farm, Kevin had driven the contact like a man starved. He had clutched her tightly and gorged himself on her lips. Even so, the length of separation had made her surprisingly cautious, unsure. He wanted to pull her hard into his body and drive his tongue into her mouth, but he decided to wait and see where she would take them.\n\nExpecting Kevin to take the initiative, Deonne paused, her lips touching his. When nothing happened she drew back slightly and looked him in the eyes. He just stared back, waiting. She leaned in again and rubbed her lips against him. Sighing, she felt the tingle start between her legs. His lips were so soft, she rubbed again. \n\nLetting her tongue peek out, she ran it along his full bottom lip, then she placed her lips back over his and slipped her tongue between his. Her tongue brushed against his even teeth, and turning her head she pressed in, hoping he would get the message and open up. She was sure she would die if he didn't kiss her back soon. \n\nHe stayed there, still, his fingertips gently caressing her back under her sweater the only moving part. Pulling back in frustration, she looked at him with questioning eyes.\n\nWith eyes slightly narrowed and a hint of a smile he asked, \"What?\"\n\n\"Kiss me back!\"\n\n\"You want me to kiss you back?\"\n\n\"Yes!\" she said with a little laugh.\n\n\"Ask me.\"\n\n\"Ask you? For a kiss? Are you nuts?\" \n\nReaching down, Kevin cupped her pussy. Slowly he squeezed. A pulsing began between her legs, her clit wanted more. He squeezed again and she whimpered. Wrapping her arms around his neck she pulled him towards her. Putting her lips to his, she was sure he had gotten over his little fun, but he remained still.\n\n\"Ask.\" Not a suggestion. Softly spoken, Deonne heard the steel in his tone. Her breath grew irregular and shallow.\n\n\"Come on Kev, kiss me,\" she pleaded.\n\n\"Un-uh. You know what I want.\" He smiled at her, his hand giving another squeeze before it started rubbing back and forth.\n\n\"Please kiss me, Kevin,\" she whispered.\n\n\"With pleasure.\"\n\nHe leaned forward pressing her back to the floor. Placing his elbows by her shoulders Kevin tenderly drew a finger along her hair, feeling its silky smoothness before brushing away the lock that fell across her face with his thumb. His eyes intently wandered over her face memorizing each curve, every freckle. Running his long fingers into her thick, short hair he slowly bent down, letting his lips caress hers. Unable to hold back, he grew more urgent, his lips hard on hers, his tongue fucking her mouth.\n\n\"I may have to take you out in the woods, little girl, and have my way with you. It's been too fuckin' long. Ain't no way I'm gonna spend the whole damn weekend with you and not get any, babe.\"\n\nSmiling, she teased, \"That might be an impressive feat even for a special operator such as yourself with all my bodyguards present.\" With that she leaned forward and rubbed her lips over his, inviting him back in.\n\n\"We special operators can be pretty resourceful when we need to be,\" he murmured.\n\n\"I'm sure,\" she replied.\n\nWith a groan he pressed in, turning his head and pushing her lips open, kissing her as if she were his last meal. Sliding his hands around her waist he rolled onto his back bringing her with him. He continued reacquainting himself with her slender body, his large hands running down over her back to cover her lean ass. He always thought he loved a big, full ass until he became addicted to Deonne's. He could grip its firmness and still slide his fingers down and reach her heat, which would bring his cock up faster than almost anything. \n\nHer body was a perfect combination. Unique and lovely, she complained, but he wouldn't change a thing. Umm, her tits. He could feel them mashed between their bodies.\n\n\"Lift up for me.\" He pushed on her shoulders\n\nDeonne straddled him with her legs, her arms straightening, hands on his chest. Deonne knew what he was after. Smiling down at him she saw his eyes devouring her tits which were now hanging away from her body, pointing right at his face. Knowing she was in for a treat, her breathing picked up again.\n\n\"Ahhh. There we are,\" Kevin whispered as his hands came up and cupped their weight, the nipples delightfully stabbing his palms through her shirt.\n\nShe moaned. Oh, yes. She always moaned when he fondled her tits, they were so sensitive.\n\nThe sound of small, fast feet barely penetrated, but when they heard, \"Aunt Deonne!! Aunt Deonne!\" they moved apart.\n\n\"Cavalry to the rescue,\" Kevin spoke with a smile, sadly pulling his hands away.\n\n\"Aunt Deonne, what are you doing on the floor?\" Deonne and Kevin jumped up, straightening their clothes.\n\n\"Alex! Billy! Look how big you guys are!\" Her eyes grew large, wonder filled her voice. \"Timmy, is that you? You've grown so much! You were a baby last time I saw you, now you're a big boy!\" Squeezing the boys in a group hu.g, she looked up to see George Junior standing back, watching.\n\n\"Hey, George,\" she said softly, \"can I give you a hug?\"\n\nAlways shy, the six year old pulled in his lips and slowly nodded. With that Deonne got down on her knees and put her arms around the boy. George was named after her father, and the man had been so proud he almost burst his lungs as he strutted around showing everyone the baby. George Junior had looked so tiny and fragile in his grandfather's oversized weather-beaten hands. Grandpa George bent over backwards to show no favoritism, but Deonne knew there was a special spot in his heart for little George.\n\nLooking him in the eyes with a gentle smile, she announced, \"I brought you something.\"\n\nWith that the other boys erupted in excitement, but George remained still, a slight smile the only indicator of his inward joy.\n\n\"But first I want you to say hello to my friend,\" she said. They all turned and looked at the tall black man standing a few feet away.\n\n\"Hey, guys,\" he greeted with a smile.\n\n\"Boys, this is Kevin.\" Her voice slowed, portraying wonder and amazement. \"Kevin's a real life Special Forces army man. He gets to jump out of perfectly fine airplanes, and climb buildings and all sorts of cool stuff!\" As she spoke, the boys' eyes grew large.\n\n\"Grandpa used to be in the Army! A long time ago!\" Alex, always the aggressive one, piped up.\n\n\"How many people have you killed?\"\n\nWith that Kevin shot his eyes to Deonne, concern showing.\n\nQuick to distract Deonne turned and unzipped a large gym bag and pulled out a box.\n\n\"Boys! Let me show you what I got you!\"\n\nImmediately they started jumping up and down. \"A remote control plane!\"\n\nKevin noticed that even George was unable to stay still.\n\n\"I gotta show my dad!\" Turning and clutching the box, he started to run off.\n\n\"Wait!\" Deonne called out. \"You haven't welcomed Kevin. Come back and say hello first.\"\n\nWith that the three boys hung their heads and shuffled back to shake Kevin's hand. Soon they were screaming at the top of their lungs heading off to show their acquisition.\n\nWrapping his arms around her, he kissed her forehead, \"Your gift's a big hit.\"\n\nSnorting, she replied, \"I just hope it survives the trip downstairs. It may never get airborne.\"\n\n\"You ever flown the remote kind before?\"\n\nSmiling, she shook her head. \"Nah. Phil'll work it out. It's really for him.\" Reaching up on tip-toes she kissed him on his chin before turning and grabbing his hand.\n\n\"C'mon, I'll show you around.\" \n\nHis welcome would have to wait.\n\n*****\n\nWith laughter rolling all around at the latest story shared by Deonne's brother, Marc, Deonne, holding her sleeping niece, Kylie, leaned even harder into Kevin's side, smiling up at him. Sitting around the table in the McNeil's dining room was a feat. What once fit the whole family of ten was too small as all those children grew up and added a number of spouses to what was now referred to as The Grown-up Table.",
        "Phil leaned over to whisper conspiratorially to Kevin, \"Don't worry, we let Marc have all the wild, out-of-control children, just look out for them and you'll be safe.\"\n\n\"Uncle Phiiil!\" came a wail from the doorway. Abigail, Marc's oldest, called him on his ornery comment, \"And to think you were my favorite uncle!\" \n\nWith that Phil reached out a long arm and pulled his niece into a tight hug followed by a big tickle.\n\nKevin smiled. No wonder these people meant so much to Deonne. Family had arrived slowly throughout the day, coming from near and far. Only her sister, Megan, had not been able to make it.\n\nKevin's fears of a redneck lynching never came to pass. The only comment came as Kylie was brought up into a big bear hug by her aunt. The four year old brunette had stared with wide eyes at Kevin and leaned over to whisper loudly into Deonne's ear, \"Your boyfriend is black!\" and gawked back at him in amazement. Kevin wondered if she had seen very many African-Americans; he hadn't since they left the nearest city.\n\nDeonne smiled and said, \"Yes, he is. Is that okay? He's really very nice.\"\n\nAs the girl openly looked at him with a cross between innocence and wizened matchmaker, Kevin realized he was holding his breath, feeling a discomfort he hadn't felt since his last stare-down on the drill field at West Point.\n\n\"Yes, it's okay,\" she acquiesced. Kevin exhaled.\n\nKevin had winked at her and Kylie squeezed both her eyes closed and open rapidly, 'winking' back at him.\n\n\"Wanna see my new puppy?\" The matter of race relations was officially over and Kevin was thrilled to take a back seat to a dog.\n\nNow, as the day wound to a close, Marc stood. \"Well, I don't know about you all, but it was a long drive for me, so it's time I headed for the sack,\" he yawned. \n\nEye rolling and chuckles filled the room as Marc lived next door and shared the farm with his Dad along with his vet duties, which was the real reason he was tired.\n\nReaching down, he pulled his sleeping daughter from Deonne's arms. \"Come on Abby,\" he called, \"time to head home and get you two to bed.\" With that he took his little family towards the back door.\n\n\"He's doing much better these days,\" Camille noted as the back door closed, referring to his recent divorce.\n\n\"Yeah, it's been a slow climb back and the girls are finally starting to accept that Mommy won't be coming home,\" George McNeil stated.\n\nAfter that everyone started heading for bed. Deonne and Kevin had, of course, been given separate rooms, but Deonne had been pressed up next to Kevin all evening and her wet pussy was screaming for attention. She could never understand how such mild, innocent contact could turn her on so much.\n\nAs they sat jammed next to each other, she had slipped her arm around his back, feeling his lean muscular side, the muscles flexing and rolling under her hand as he laughed and talked and occasionally wiggled to get comfortable. Glancing at his hard thigh pressed up next to her smaller one, she then let her eyes slide up to his crotch hidden by the table. The urge to touch had been nearly irresistible! Perhaps it was time to introduce Kevin to farm life, well, the barn to be exact. She definitely wanted to do a little milking and it had nothing to do with cows.\n\n\"... Deonne?\" her dad was trying to get her attention. Trying to not blush she looked at her father.\n\n\"You'll turn out the lights and lock up, right?\"\n\n\"Sure Daddy.\"\n\nWith that George McNeil turned his eyes to Kevin's for a short stare-down. Kevin returned the look. Shit, if I weren't so damn horny for your daughter, it would work, he thought.\n\n\"Good-night, sir.\"\n\n\"Good-night, General.\" General had become Kevin's nickname almost upon stepping foot on the farm. They all seemed to find it amusing to mildly mock his officer status, while respecting his service. McNeil men had been volunteering in the military for generations, but none had been officers. Deonne was the first officer and the only female to ever serve and family pride was obvious.\n\nStill mashed against his side, Deonne turned to face him, throwing one leg over his, straddling him. Feeling the table cut into her back, she wrapped her arms around his neck. Her smile faded as her hunger quickly overwhelmed her. Leaning forward she touched her lips to his. His hand came up tangling in her hair, forcing her mouth tight against his as he thrust his tongue into her. Retreating and driving back into her mouth over and over, he mimicked what he so badly wanted to do with his cock.\n\n\"God,\" he said, pulling back and leaning his forehead on hers. They were both panting.\n\n\"General Patton, sir, I believe your baton is sticking me in my stomach.\"\n\nChuckling and shaking his head, he commented, \"Deonne, you nut. At least I know now where you get it. So, let me show you what I can do with my baton.\" He licked her bottom lip before pulling it into his mouth and biting on it gently.\n\nHis lips connected with hers and his tongue slid inside, rubbing against hers, coaxing her to come play in his mouth. When he started running his tongue around her smaller one like he did when he licked her clit, she felt the dampness grow between her legs. His hand moved down over her back, gripping her ass and her breath grew shallow as his hardness rocked against her. \n\n\"I gotta fuck you, baby.\"\n\nGetting up, she grabbed his hand, pulling him along. \"The barn.\"\n\nHis eyebrows rose, but wherever she led, his dick was sure to follow. As they worked their way around dining room furniture, Kevin jerked her back for a hard kiss, causing her to stumble and rattle the decorative teacups on the sideboard.\n\n\"Shhh!\" she giggled.\n\nGrabbing a blanket from her mother's quilt rack before tip-toeing across the kitchen, she felt more like a sixteen year old sneaking out than an adult woman. What was it about being around family that stripped years off your maturity? Slowly and quietly she opened the back door, knowing it had its own special kind of alarm system that her father could hear through deep REM sleep from the other side of the house. She paused, listening and hearing sounds of her family still readying themselves for bed. Good, she was sure they wouldn't be heard leaving the house.\n\nAs soon as they closed the door, Kevin grabbed her arm as she moved past him and shoved her against the house. Kissing her hard, his tall, lean body pressed against hers. His hands were eager to continue where they left off earlier in the bedroom and slipped under her shirt to find her tits. He kneaded her desperately, almost roughly before pushing the offending bra out of the way. His hands squeezed and twisted, reflecting the same eager hunger his mouth was demonstrating on her lips. Fingering her nipples, he pinched gently, then harder. The cool air aided in stimulating her stiff nubs. Deonne groaned, her hips rocking forward.\n\n\"Like that?\" Kevin asked, pinching them even harder, causing her pussy to spasm. \n\nGod, she was so turned on she couldn't think straight. Her family was just inside, it was cold. They needed to get to the barn for a little privacy and warmth. She tried to pull away.\n\n\"Kev...\" she got out before he thrust his tongue back into her mouth. Pulling back, she saw the raw lust in his eyes.\n\n\"... the barn ...\"\n\n\"No. Here,\" he muttered, sucking one nipple hard into his mouth. It had been too long and he wanted to be inside her now.\n\nThree months of waiting and Deonne nearly climaxed feeling his warm, wet tongue close over her cool tit, the quilt dropping from her hand, forgotten. It had been so long and her body remembered better than her mind how good this felt, how good he felt inside of her.\n\nUnsnapping her jeans, he pushed them down out of the way, his breathing hard. Jamming two fingers between her puffy lower lips he felt just how ready she was for him. She was soaked, swollen, her little clit distended well out of its hood.\n\n\"Pants off, babe,\" he demanded, an edge to his voice.\n\nDeonne whimpered as his fingers left her moist center and jerked his belt open. Clawing at his jeans, his fingers shook as he pulled his hard length out. How was he able to stay away from her so long, to go without this?\n\nStepping on a pant leg with her foot, she managed to get one leg free before Kevin leaned over and in one movement pushed his arms between her legs and lifted her body, forcing her wide as he shoved hard up into her.\n\nCrying out, she took him all in, but even with her pussy dripping and screaming to be filled, she was not quite ready for his size. Before she could adjust he pulled out and rammed home again with a grunt. As he stopped deep inside her, Deonne felt herself adjusting, becoming reacquainted with his body. Her hands ran along his flexed biceps, up over his sculpted shoulders, feeling his strength as she was pulled along with him towards completion. She loved when his need for her overwhelmed him and he lost control. She loved feeling his power.\n\n\"Ung! I forget how tight ...,\" he whispered into her ear.\n\nMoving his hands under her ass he drove even faster into her, his fingers squeezing and digging into her cheeks before sliding a middle finger through her pussy juice and placing it over her tight asshole. God he wanted her ass. Soon, he thought. \n\n\"Oh, God... yes... feels so good...\" Deonne whimpered, his finger on her sensitized hole driving her closer.\n\nShe felt him grow that last amazing bit more inside her, swelling and filling her. Every nerve ending in her body was getting energy from the driving friction of his cock against her inner walls. Almost there. This was her favorite moment, when she felt most alive, connected to him with every cell, the second before climax. \"Now,\" Kevin grunted out through clinched teeth. Jammed to the hilt, he shoved his finger up her ass.\n\nDeonne bit her lip to keep from screaming. Unstoppable keening sounds were coming from her throat as she lost control over his thick shaft, her pussy clamping down so tight he couldn't breathe, her hands on his head and shoulders, nails digging in, hips driving down forcefully. Her body shook, muscles clinched, nothing but this mattered. She fell forward onto his shoulder as it continued to pour through her body, causing her pussy to milk him over and over.\n\n\"Fuck.\"\n\nWith a low growl, Kevin erupted deep into her. It had been too long. Ropes of come shot out of his cock, coating her as he thrust hard jabs up into her, once again proclaiming her body his with his seed, with his domination.\n\nSagging against the house gasping, they both slowly came back to earth.\n\n\"Jesus girl. Whaddya do to me?\"\n\nUntangling themselves, they quickly pulled their clothes on, the cold November night air making itself known now that the heat of lust had worn off. Bending he picked up the quilt from the floor and put it around her. Holding her tightly, he rubbed his jaw back and forth against her hair before giving the top of her head a quiet, unfelt kiss.\n\n\"We need to get to our assigned rooms before they send out a search party,\" Kevin stated quietly.\n\n\"Mmm... This feels so good. I missed you,\" she said, feeling his come leak out of her, she realized she missed that too. \"But you're right, my sister will be grilling me enough as it is, though if we stay out late enough she may just fall asleep and I can avoid it tonight!\"\n\nGently pushing her back from him he brushed his full lips against hers then kissed her almost tenderly. \"Babe... come on, let's go.\"\n\nGingerly stepping over suitcases, shoes, and a sleeping bag full of a child, Deonne carefully made her way to her old bed.\n\n\"So, you've been keeping secrets,\" Becca whispered loudly, chuckling.\n\nCrap!\n\n\"Why didn't you tell us?\"\n\n\"I don't know. Chicken.\" Thinking a moment she added, \"I guess I couldn't stand knowing there would be family gossip going on. Reality is so much more reasonable.\"\n\n\"Like there won't be now? Are you kidding?\"\n\n\"Yeah, but...\" she slowly replied, \"maybe everyone won't be on board having met him. They might just think for themselves, you know. I can hope anyway.\"\n\n\"Come on, Deonne. Did you really think the guys would have a problem with him? This isn't 1958, you know?\" All of a sudden Becca's eyes got big. \"Oh, my God! I just thought... Can you imagine the look on Aunt Silvia's face when she sees him? I can't wait, I just can't wait. Maybe the ol' bat will have a heart attack on the spot and put us all out of our misery!\" Chuckling, she rolled back and forth on her bed. \"Oh, man. It's gonna be good.\" Sighing, she bent over the bed to make sure little Timmy was still sleeping after her outburst.\n\n\"For what it's worth, I like him. Though I can't think straight around him, he's hotter 'n hell! You should have warned me about that, too!\" Becca admitted, smiling at her sister in the dark.\n\nBecca found it all amusing, but Deonne groaned. Aunt Silvia was her mother's oldest aunt, and she had been driving her family crazy for as long as she could remember. Loud and obnoxious, she was just the opposite of her husband, Uncle Buster, the mouse.\n\nDeonne hesitated a moment, then asked, \"What do you think Dad thinks ... on the inside, you know?\" She was so concerned; he really was the only one whose feelings mattered regarding Kevin. She would hate for her father to not accept Kevin, but he gave up so little when it came to his feelings and he was from a different generation.\n\n\"Well, has he been glowering at you all day? Has he refused to speak to Kevin? I wouldn't worry then,\" she replied, speaking from personal experience.\n\nDeonne had to chuckle. Everything went very well when Becca brought the lanky medical student home from college the first time. A future doctor. A family first. It went well the second visit. But on the third visit, when Dan was helping the family put up hay that late August weekend and feeling the heat, he decided to take his shirt off. Her dad had almost forgotten to release the bail of hay he was tossing and nearly thrown himself off the wagon head first.\n\nWrapping itself around Dan's waist and circling his back with the head occupying a large part of the middle spewing venom and hatred like the wrath of Satan was a tattoo snake. In a former life as an undergrad Dan had played lead guitar in a heavy metal band, as a matter of fact, it had paid most of his tuition.\n\nDeonne and her sister, Megan, had been watching from the door of the barn and noticed the look of shock on their father's face before turning to see Becca's realization turn to mortification as she ran towards Dan frantically trying to get his attention. Deonne and Megan began laughing and soon they were doubled over. Seeing their Dad's look of anger swing towards them they quickly hustled around the corner where they fell on the floor of the barn unable to stop. Becca had brought a metal head home. It didn't get much better than this.\n\nSobering up, Deonne focused on what her sister was saying.\n\n\"I mean,\" Becca continued, \"I think it was a surprise to him. You know, you've talked about Kevin for ages and, well, you kind of get a mental picture. It would have been fairer to us if we'd had time to think it through. I know that sounds stupid. I think Dad wants you to be happy most of all. He wants you to have someone who cares for you, treats you right, and will be there for you in the good times and bad.\n\n\"Maybe a few years ago,\" she shrugged, \"he would have been more judgmental, but times change, life happens and sometimes what seemed important in the past isn't anymore.\" After a moment she added, \"I think most of us around here have done a lot of re-prioritizing.\" Their mother dying has caused a lot of personal reflection in the family, and Deonne noticed the deeper care they took towards each other over the years since.\n\n\"I guess you're right. And thanks for paving the way, big sis, I knew it would pay off someday,\" she teased her sister.\n\n\"Sure. Anything for you, brat,\" Becca replied wryly.\n\nWith Kevin's family it was so different, it wasn't even a speed bump, but times moved more slowly here. This area was settled by a tough, stubborn people who dug out a hard existence in mines and narrow bits of flat land patch-worked against deep woods. A hard life for a hard people, and change did not come easily.\n\n\"Do you love him, Deonne? You did bring him home, bless his heart!\"\n\nDeonne didn't want to answer that, but finally she whispered, \"Yes.\"\n\n\"He seems crazy about you.\"\n\n\"Yeah,\" she responded, still sounding unsure.\n\nRolling over, Becca ended the conversation with, \"Well, that turkey's not going to cook itself tomorrow, so we'd better shut up and get some sleep. I'm so glad you're home, little sister,\" and with that she turned over on her twin mattress, facing the wall. \n\n\"I'm glad to be home.\" Deonne lay staring at the ceiling.\n\nAll votes, comments and feedback are very much appreciated. Yes, I'm begging!"
    ],
    "authorname": "driphoney",
    "tags": [
        "interracial novella",
        "interracial romance",
        "white woman",
        "black man",
        "military",
        "drama",
        "biracial romance",
        "bm/wf"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/ready-ch-02"
}