{
    "title": "Rare Birds and Circumstances",
    "pages": [
        "July 14 is National Nude Day. In honor of this annual celebration of nudity, I wrote a little story. I hope you all can get outside on the 14th and enjoy some fresh air.\n\n\u2014\n\nRare Birds and Circumstances\n\nSo there's this girl, this woman, this smiling vision. She and I have noticed each other three times now, our eyes meeting, each time, for at least a second or two. Twice it has happened partway along my favorite hiking trail, with her going one way and me the other; and once it happened at the trailhead's dirt and gravel parking area, when she was heading to her car and I was just arriving.\n\nHer nice friendly smile is what gets to me, every time; that and her beautiful eyes. The looks she gives me, and the ones I give her, speak of interest and quiet desire. At least I think they do. Looks are sometimes deceiving, but hers, as I filter them and imagine them, seem pure. Pure attraction, I mean, but, maybe my imaginings are wishful.\n\nDriving to the trailhead on a beautiful warm sunny day with my good friend Neil in my car, our conversation had my mind in another place, but when I turned into the parking area and saw her car amongst the others, and saw her, just a glimpse of her, disappearing into the woods at the start of the trail, my heart rate increased just a bit. Was she alone again? Is she a fast hiker? Would we catch up to her? Which branch of the trail will she take \u2014 the spur that leads to the Overlook? The mile long section that leads to Beaver Dam Marsh? The longer, four mile route that leads to the quiet deep woods at Old Settlement Pond?\n\nA car horn honked, loud and close, startling me. \"Sorry,\" I said out my window, waving at the annoyed looking driver of the car I'd almost hit.\n\n\"What was that? You fuckin' go brain-dead?\" asked Neil.\n\n\"Yeah, a little,\" I said.\n\nParking quickly, I was out beside my car strapping on my day pack.\n\n\"Jeeze, dude, you in a hurry or something?\" asked Neil. He grabbed his pack from the back seat and followed me, the two of us soon in the comfort of the shady woods. I realized the folly of my ways, so I slowed down to my normal pace. I'm not an adolescent anymore; chasing women isn't what I should be doing.\n\n\"Nice day to be out, huh?\" I said.\n\nNeil nodded, looking up into the trees. \"Perfect.\"\n\nNeil is a quiet guy, not a wiseguy like I can sometimes be, so when we hike I sometimes join him in silence, because I know he likes it. And so we walked, and as we got farther and farther from the road the forest gradually became older, more virgin, more peaceful.\n\nAnd then I saw her again, the woman, sitting on the log of a dead, downed tree, with one of her boots off, holding it upside down to get whatever was in it out of it.\n\nShe saw us approaching and looked surprised. The serendipity of our brief encounters seemed almost magical, to both of us, it seemed.\n\n\"Stone in your boot?\" I asked, with a friendly smile.\n\n\"My button,\" she said, smiling, showing us the one missing from her shirt. \"What are the odds of it falling into my boot like that? Must be my lucky day.\"\n\n\"Wow, yeah, that's a pretty good trick. I've seen you here before. My name's Nick. This is Neil.\"\n\n\"Hi Nick. Hi Neil. I'm Carrie,\" she said, smiling.\n\n\"Carrie, wow,\" I said. \"Let's see, I'm thinking Carrie Bradshaw, from Sex and the City...or, a high school prom girl dripping with a bucket's worth of fake blood...or, you and your amazing smile and beautiful eyes. I think I'm gonna vote for door number three.\"\n\nCarrie smiled, so beautifully, with a new shyness I hadn't seen. \"Three, huh?\"\n\nI nodded. \"When I was a kid two used to be my favorite number, but yeah, I'm not really into fake TV girls or blood, so...\"\n\nCarrie's eyes shifted from me to Neil. He's an avid and knowledgeable birder, and at the moment his head was tipped back, his gaze firmly on a Pileated Woodpecker high up in a huge ash tree. I watched Carrie's eyes quickly take the full measure of him, from his well used but nicely cared for hiking boots, to the top of his bird-curious head. She was still bashfully beautiful as she looked at me again, saying, \"I know what you mean. I've always been a 'two' kind of girl, but...today seems different. Maybe it's because...Have you ever heard of Nude Day? Is that why you guys are here?\"\n\nHearing the word \"nude\" come out of Carrie's subtly upturned mouth caused my brain to strip a gear, but I knew my dumbfounded silence wasn't good for anything. I stammered, \"Nude...day?\"\n\nCarrie shrugged, looking shy again. \"Oh, you don't know,\" she said. \"Yeah, no, that's cool. So where are you guys headed?\"\n\n\"We never decide till we get going,\" I said. \"Maybe all the way to Old Settlement Pond, to that old lean-to out there. It's a good lunch spot.\"\n\n\"Oh. I know, I love it there. There's tons of deer around there, they bed down in the meadow grass alongside the inlet creek.\"\n\n\"Nice. We'll check it out. So where are you heading today?\"\n\n\"Well...\" Carrie said, her flashing eyes bashful, \"...I was going there, too, but...\"\n\n\"Oh,\" I said. \"Hey, If you'd rather be alone, I get it. I love hiking solo. Yeah, Neil and me, we can head up to the Overlook, maybe drop down off-trail to Clear Pond. Have you ever tried that route?\"\n\nCarrie shook her head no. Her eyes looked different. I could tell she was thinking. \"So there's this thing I mentioned,\" she said. \"National Nude Day. I was planning on...trying it.\"\n\nSuddenly Neil wasn't as interested in the big Pileated Woodpecker anymore. He looked at Carrie and I did, too. I felt bad that we'd made her blush, but the raised hairs on the goosebumps on her arms intrigued me. I said, \"So it's like...what it sounds like?\"\n\nCarrie nodded. \"People take off their clothes and do something. Gardening's popular. So is hiking, if you can...find a place.\" She looked even shyer and more blushed. \"It's probably crazy to do it here. I mean, there's five cars at the trailhead. I don't know what I was thinking. I just love it here, and I thought, maybe, way out at Old Settlement...\"\n\n\"Oh, yeah, totally,\" I said, hoping my stunned amazement didn't show on my face. \"Yeah, that's four miles out, hardly anybody goes out there. You should do it. Neil and me, we'll head the opposite direction, I promise. There'll be people at the overlook, probably, but maybe I'll strip down and take a skinny dip in Clear Pond to celebrate...what did you call it? National Nude Day?\"\n\n\"Yeah. It's a real thing,\" she said, as if to reassure us she wasn't just bonkers on her own. She paused and I saw her thinking some more. \"I've been to Clear. I'm pretty sure there's leeches in that pond. I think there's leeches in all these ponds around here. You guys...I mean, if you really want to try it...you might be better off just hiking in the nude, you know? Like what I was thinking.\"\n\nI nodded, but knew it wasn't something Neil and I would probably want to do.\n\nCarrie looked me in the eyes in a softer, friendlier kind of way. \"That trail to Old Settlement is probably the place to do it, right?\" She paused again, and added, \"Maybe we could...all go. I mean, only if you want to. I know it's crazy.\"\n\nI glanced at Neil and he was very subtly nodding at me, his eyes unblinking. I looked at Carrie. \"I probably have enough lunch for all of us,\" I said. \"Did you bring food?\"\n\nShe nodded, and her newly sparkling eyes glanced at both me and Neil. \"How far do you think we need to be before we...\"\n\n\"Get all nude?\" I said, smiling. \"A couple miles, maybe?\"\n\nCarrie nodded, her demeanor still luminous but now more serious. \"It's, like, the perfect day for it, isn't it?\" she said. \"Black Fly season is over, and it's such a warm day. That's what made me think of this. The weatherman said it was going to be close to eighty-five today. You know how rare that is up here in these mountains.\"\n\n\"Oh, for sure,\" I said, as we all started our hike again. I walked alongside Carrie when the trail allowed it, with Neil behind us. I imagined him watching Carrie's ass, because that's certainly where my eyes would be. She's one of those women who's sexy in a completely natural kind of way, not all made-up and dressed up like a girl in a dance club. Carrie's hair is silky, and the breeze catches it easily, and her gait when she walks is hiker-experienced but womanly. When the trail narrowed and I tucked in behind her I enjoyed what Neil had been feasting on: her swaying hips and the wiggle of her curvaceous buttocks, tightly packed into rugged but stylish shorts. Yes, it was a fine view, but walking at her side and chatting with her was every bit as enticing, so when the rooted, eroded section of trail widened again I joined her by her side.\n\n\"So how did you find out about this nude thing?\"\n\n\"Oh,\" she said. \"I don't know. I guess...I like reading about sexy stuff. Do you ever do that?\"\n\n\"Instead of just looking at porn, do you mean?\" I smiled. \"Yeah, I like to read erotic stories.\"\n\n\"Oh, wow, really?\" she said. \"I thought I was the only one who did that. So yeah, I read about Nude Day. And then I found lots of pictures of people. Lots of them in vegetable gardens, which is kind of fun don't you think? And lots of hikers.\" She turned her head, looking behind her as she walked. \"Neil, have you heard about it?\"\n\n\"Nope, never have,\" he said.\n\nCarrie nodded, getting her eyes back on the ground in front of her. These deeply wooded mountain trails that we enjoy demand attention, so you don't trip and fall, or worse, break your ankle or some such thing. With a pack on your back, even a fairly light daypack like the ones we all carried that day, it's very easy to stumble.\n\nI had a million questions for Carrie, but I didn't want to be that guy, and she seemed like a rather quiet person, there to enjoy the peace and quiet of the forest. Neil and I were down with that, so we just walked, and I wondered what she was thinking.\n\nShe didn't appear to be...well, I'll just say it, she didn't appear to be slutty in any way, not that I think slutty is a bad way to be. What I mean is, it seemed a bit surprising that she'd asked us, two guys she didn't know at all, to join her on her Nude Day adventure. She and I did have a bit of history \u2014 those few, subtly flirtatious glances at each other that we'd shared over the last month or two \u2014 but that didn't seem like enough to make a quiet and seemingly sensible woman like her do what she was doing. The whole thing seemed like a flirt, maybe; a goof that she was taking off on, on a whim. That's not such a bad thing to do, I don't think; not such a bad way to be. I've often wished I could be more impulsive, and I guess I was getting my wish; was I really going to take off all my clothes and hike nude with this woman, and with my friend Neil? I was starting to wish I had a bottle of booze in my pack, to loosen up my inhibitions a little.\n\n\"Hear that?\" said Neil. \"That's a Hermit Thrush.\"\n\nCarrie and I stopped, listening to the bird's reedy song, high-pitched and pleasant. I smiled, not so much at the beautiful natural world we were immersed in, but at Neil's ability to think about birds when Carrie was soon to be nude. Maybe he thought that she'd never go through with it, that it was just a fun thing for her to talk about, to make her seem hipper than she actually is. Maybe that's true, I thought to myself, but in my mind Carrie had a certain something about her, a barely simmering lust that was faintly visible in her eyes. Or maybe my imagination was running away with me.\n\nQuite a ways deeper into the woods we waved and said hello to a group of hikers who were heading the other way, and soon after, we reached a small creek where the trail to the Overlook branches off, uphill, to the right, and the trail to Beaver Dam Marsh breaks off downhill, to the left. We pressed on straight ahead, the trail narrower now, less trodden but still easy to follow. The forest is denser here, damper and mossy, with huge boulders scattered about, some of them the size of a house. Around here they're called Glacial Erratics, these massive boulders that were left behind during the ice age. We passed one, comfortably nestled against the face of a mossy, ledge-like cliff, a stunted tree growing on its top, it's roots reaching over the edge of the big rock like gripping fingers. It was here that we heard something that sounded like a demented squirrel, and Neil quietly said \"Stop!\"\n\nWe all stood still and listened. \"It's a Grey Jay. Isn't that cool? That's a rare thing to hear, they're almost all way up in Canada.\" Neil looked, and pointed. \"There. See it? This is fuckin' awesome.\"\n\n\"I love it,\" Carrie said. \"It sounds so different.\"\n\n\"They have whistling calls, too,\" Neil said, \"but this one's very cool.\"\n\nWe were three miles in at this point, primitive woods that felt quietly welcoming, the trail beckoning us to go deeper, farther. As we listened to the bird's odd song, Carrie took off her pack and set it at her feet. Looking at me, her eyes were gentle, with that smoldering sparkle, but I could sense a bashful reluctance. Her voice sounded as good to me as the Grey Jay's call sounded to Neil. \"Do you think...it's time?\" she asked.\n\n\"I guess,\" I said. \"I mean, most people turn off at the Overlook trail. I doubt if anyone else is in this far.\"\n\nCarrie nodded, her hands going to the buttons on her shirt, unbuttoning one, then another, then another. \"You guys don't have to do this. I'm the crazy one who wants to do it.\"\n\n\"Seriously? We can just...watch you do it?\"\n\nCarrie shrugged at my smirking question, her face pinkening with the deep blush of embarrassed excitement.\n\nI smiled. \"You're supposed to say, 'No, asshole, it's not Voyeur Day, it's National fucking Nude Day'.\" Carrie smiled at my smile. I said, \"I don't know what birdman wants to do, but I'm game. I'll go for it. You know how guys get, though, right? I don't want you to freak out if you see me all hard or something.\"\n\nCarrie eyes widened and didn't blink. She looked surprised, but okay with it, like maybe she hadn't thought she'd have that effect on me. \n\n\"Hey. Birdman,\" I said, as I let my pack slip off my shoulders. \"You with us?\" Neil turned his attention away from the rare bird, back to us, even though I think he was listening to every word we'd said and pretending to be lost in his Grey Jay because he's a little shyer than me. I mean, I can't blame him really. Stripping naked for no good reason, in front of a woman who's a virtual stranger...yeah, it's not exactly an everyday thing. \"Nude Day, bro,\" I said. \"Me and Carrie are down with it.\"\n\nWith my t-shirt off over my head, I glanced at Carrie, not wanting to stare. She was glancing at me, too, just quick little looks. Her lightweight button-up shirt was off and she made quick work of her bra. Her nerves seemed to speed up her movements, undressing quickly, her tits out in the open air as her hands pushed her shorts down her legs. Her plain white panties made me think she probably hadn't planned to be impressing any guys with this striptease, but hey, my underwear wasn't anything to look at, either. I kept them on while I stuffed my shorts into my pack, but Carrie had gone all the way, panties off. She brushed the dirt off the bottom of the socks on her feet, squatted, and put her hiking boots back on.\n\nSo yeah, I had a half an erection, which makes me look kinda big, and I guess Carrie thought so too; when I took off my undershorts and she saw my cock she blew some breath out from between her pursed lips, in a 'wow' kind of way. Or maybe it was a 'What have I gotten myself into' kind of way.\n\n\"Naked in the woods,\" I said, smiling. \"This is a trip.\"\n\nI looked at Neil, his strip-down complete except for his undershorts. Unlike my tighter ones his were loose boxers, and his cock seemed to be outdoing mine in terms of hardness, tenting things a bit comically. He turned around when he made himself naked, glancing over his shoulder at us to gauge our state of preparedness. Carrie was standing, blushing, giving us the full-frontal view of her nudity as she adjusted her pack straps on her shoulders. Maybe she was facing us so blatantly just to see what she'd do to us? For whatever reason, it had an effect, my cock starting to rise, lengthening to it's fullest. I'm pretty sure Carrie was smirking as she turned and started walking up the path ahead of us.\n\n\"You guys go, I'll catch up,\" Neil said, still hiding his boner.\n\n\"Dude, it ain't getting any softer watching her walk from behind,\" I said quietly as I stood there waiting for him. I looked over my shoulder at Carrie's hourglass waist and curvaceous, wiggling ass, and knew Neil and I were both in trouble, if having nice hard-ons in the presence of an attractive woman can be considered 'trouble'.\n\nNeil was tying his boots, so I trudged off. The sight of Carrie, and her naked ass, a hundred feet up the trail, was like a carrot on a stick, urging my feet along at a pace that was twice as fast as hers. I looked back and Neil looked comical, as I did, I'm sure, his half-bonered cock wobbling as he walked. The lack of suntan on the part of him where his shorts had been looked as white as a ghost. Carrie's ass was white, too, but bikini tan-lines on a woman are nothing if not attractive.\n\n\"We should do this more often,\" I said loudly to Carrie. \"It's kinda awesome, right?\"\n\nCarrie slowed, smirking as she looked over her shoulder at me. \"I'll let you know. Still getting used to it.\"\n\n\"Good thing we're allowed boots,\" I said, smiling. \"Who makes the rules, anyway?\"\n\nCarrie chuckled, stopped, turning toward me as I caught up to her. Her eyes took in all of me, my chest, then her gaze drifting downward, my cock a bit more limber now, but still engorged, plenty big. \"There aren't any rules,\" she said, eyes twinkling. She looked past me and saw Neil approaching, socks and boots and pack straps the only thing on his naked body, and she smiled.\n\n\"Lead on,\" I said. \"I'm enjoying the scenery.\"\n\n\"There's a section of trail I really like up here,\" she said, waiting for Neil. \n\n\"Oh, that little gorge, through the cliffs?\"\n\nCarrie nodded. \"It feels like the entrance to Rivendell.\"\n\n\"Ah, the Hobbit,\" I said. \"Yeah, I know what you mean. Do you think there'll be lots of little eyes on us when we pass through?\"\n\nSmiling, Carrie nodded a little. I let myself look at her while she watched me, and she seemed to like it. I sensed a silent excitement inside her, my smiling gaze hardening her nipples. The straps of her small backpack squished her tits together somewhat, making her cleavage a bit more prominent, sort of the way a push-up bra would do. It was my first closer-up look at her nicely trimmed pussy, too, although she turned away after I'd had a quick eyeful. I didn't mind because the ass view completed the picture, and it was a nice picture, nice enough to harden my cock again. I was a little disappointed that Carrie didn't see it, my low-hanging hard cock, as she once again led the way up the trail.\n\nAfter we'd passed through the 'Rivendell' cliffs part of the trail, Neil stopped us again. A damp, dark, impossibly dense thicket of ancient looking spruce trees filled a few mossy acres to our right, and a bird was making its buzzy, nasal call.\n\n\"Oh my God, that's another rare one, you guys,\" he said. \"A Boreal Chickadee.\"\n\n\"Where is it?\" asked Carrie.\n\nThe three of us stood together, looking, scanning the tangle of dark branches. It was an interesting moment, when our formerly blushing naked-bodied selves began acting as if nothing was unusual about hiking naked. My cock was slinking back to flaccid, and Neil's seemed to be doing the same. Carrie stood close to me for the first time, our arms nearly touching, and we gazed into the spruce-scented primordial shadows with searching eyes.\n\n\"It could be in there a ways,\" Neil said, sneaking glances at Carrie's body as we all looked for the little bird. ",
        "A few buzzing mosquitoes sent us on our way. It was a half-mile farther along, where the trail opens up and more sunlight filters through, when Carrie said, \"You guys, I have to pee. We're almost there, why don't you go ahead and I'll meet you at the lean-to by the pond.\"\n\n\"Oh, yeah, for sure,\" I said. Neil and I watched for a few seconds as Carrie scurried off down a barely there hunter's path, one that leads to the pond's inlet, I imagine, maybe to the place she knows, where the deer bed down. Neil and I trudged onward up the main trail, to give her some privacy. In less than a tenth of a mile we could see the sky clearer through the trees, above where the pond lay, and then we heard the unmistakable sound of humanity. Hikers. Coming our way.\n\n\"What the fuck, dude,\" I said to Neil. \"What do we do?\"\n\n\"Too late,\" he said. \"They see us.\"\n\nUp ahead there was four of them, two men and two women, all with big, full backpacks on. The men carried walking sticks and looked citified, wearing expensive 'hiking' clothes. These folks were all a bit older than us, their loud conversation fading to silence when they saw we two naked men heading their way.\n\n\"Fuck, dude!\" I whispered to Neil. \"Awkward!\"\n\nAs they got closer I could see that the men were nodding at us in an oddly friendly way, and the women were wide-eyed. \"It's National Nude Day,\" I said, loudly, wondering if they thought Neil and I were gay. \"You should give it a try, it's kinda awesome.\"\n\nThe women giggled, and one of the men said, \"Oh. Is it? Is that really a thing?\"\n\n\"Yeah,\" I said, suddenly wondering if it really was a thing. \"Check it out when you get home. It's pretty fun.\"\n\nWe passed by each other, them giving Neil and me a wide berth. \"Is there anybody else up at the pond?\" I asked.\n\n\"Nope,\" one of the men said. \"It was just us.\"\n\nAfter a few seconds of walking I looked back over my shoulder, and they were standing there, watching us, the men smiling, the women giggling. They all looked away and started walking when they saw that I'd seen them.\n\n\"Jesus, that was...interesting,\" I said.\n\n\"I wonder what Carrie will do,\" Neil said, and I suddenly worried about her. Not for her safety, but...I just worried.\n\n\"Maybe she'll stay hidden,\" I said. \"Or maybe she's super into this and she'll just be a naked hiker, like she came here to do.\"\n\n\"Or maybe she's gone,\" Neil said.\n\nI stopped and looked at him and instantly knew what he meant. Was stopping for a pee her way of bailing out? Maybe it was getting too real, heading for a lean-to with us guys, near strangers, out here in the wilderness. \"Yeah, maybe,\" I said. \"I wouldn't blame her.\"\n\nNeil nodded. \"Should we...get dressed, do you think, or...\"\n\nI shrugged. \"Maybe she'll come back. And anyway, this is kinda fuckin' cool, isn't it? I can't say I don't like it.\"\n\n\"I read a book about a famous hiker out West who used to hike naked,\" Neil said. \"I always thought it was kind of interesting.\"\n\nAnd so Neil and I pressed on, toward the brightening sky light that hung over the pond in the distance. Two nude men, out in the wilds, one of us listening for birds, both of us listening for a woman.\n\nWhen the trail reaches the shore of Old Settlement Pond it circles around the pond's wide end. There's a rough old log-plank foot bridge that crosses over the pond's outlet, a rock-strewn but placid creek that looks like it might hold some nice fish. The trail's last tenth of a mile or so lifts away from the pond's edge, into a section of White Pine forest that's soft with brown needle pine duff underfoot. It's a quiet place of softly scented air, with the flashing sparkles of the pond's surface visible through the ancient trees. The trail drops down again, back to the water's edge, and there, right near the clean, gurgling creek that's the pond's inlet, is the lean-to, a slanted roof log-built structure with a wooden floor and an open front. Built by the State's Conservation Department, these lean-tos are for anybody's use, the only rule being that everybody is welcome, as long as there's space.\n\nI sat down on the lean-to's front edge, and Neil sat, too. We didn't speak for a few moments, just sipped from our water bottles, our eyes on the spot across the pond where the trail first meets the water. There was nothing there. No Carrie.\n\n\"She's gone. Right?\" said Neil.\n\n\"Maybe. What the fuck. What's her story, I wonder?\"\n\n\"Think she's ever done this before?\" asked Neil. \"Get guys naked, just for fun?\"\n\n\"I don't know, man, I think this is her first time trying this whole Nude Day thing. She seems pretty sincere. She doesn't seem like she's whacko or anything.\"\n\n\"You're pretty mellow about it all,\" Neil said. \n\n\"I am? You are! Jesus Christ, dude, if you were Patrick we would have been high-fiving all the way up the trail.\"\n\n\"I just...didn't want her to think we were scary or anything.\"\n\n\"Oh, no, yeah, that's cool,\" I said. \"Yeah, she's nice.\"\n\n\"So you've seen her here before?\"\n\n\"Yeah, three times, man. How freaky is that. This is the fourth.\"\n\n\"Destiny,\" Neil said, smiling.\n\nAnd then destiny happened again \u2014 Carrie was there, across the pond, still naked, her tits just as milky white as before. She walked at a steady pace, looking our way. I waved. She waved. Neil waved.\n\n\"What the fuck, dude,\" Neil said. \"She's still here.\"\n\nNeil and I had a few minutes of time available, right then, to talk about what was happening, but both of us seemed to be stupefied to silence by the woman on the trail, her naked body now crossing the rustic foot bridge over the rock-strewn outlet. Soon she'd disappeared as the trail lifted into the White Pines, but we knew she was there, her pace steady, as before, her boots trodding silently over the pine duff. The last thing I wanted was an embarrassing hard-on when she arrived, but I'll be damned if my cock wasn't growing.\n\nI started pawing in my pack for lunch food, because I'd mentioned lunch to Carrie, and I thought it might get my mind off of her, enough to shrink down my growing boner. It didn't help, but I got a glimpse of Neil's cock and it looked plenty chubby, too. I was glad I wasn't the only one.\n\n\"Oh my God you guys!\" Carrie said, her eyes wide as she approached. \"You didn't get dressed? What about those people?\"\n\n\"Hey, it's Nude Day,\" I said, smiling. \"It'll give them something to talk about with their friends. What did you do? Did they see you?\"\n\n\"No! I was heading for you guys, but when I heard them I ran and hid. Now I feel like a wuss. I mean, it's Nude Day, right? I should have been brave.\"\n\n\"Yeah, but you didn't know. It could have been a bunch of redneck guys. What would they have done if they'd seen you?\"\n\n\"Oh my God,\" said Carrie, eyes wide, chuckling in an odd way.\n\nShe took off her pack just then, the shoulder motions thrusting her nice tits in a most awesome way. She looked even nuder now, and I think she felt that way, too, a fresh blush on her face and chest complimenting her interesting smile.\n\nShe sat on the edge of the lean-to with us, and she took off her boots and socks. As she did it, smirking in a mischievous way, she said, \"Nude means nude, right?\" \n\n\"Yeah, lets do it,\" I said, reaching to unlace my boots. \"Don't wanna break the Nude Day rules.\"\n\n\"There's no rules,\" she said, doubling down on the idea, with a twinkle in her eyes. \"I told you that.\"\n\nAaaaand there goes my cock again, fucking hardening like a son of a bitch. Carrie looked right at it, like she knew it was happening, even though it was sort of comfortably between my thighs. Was I blushing? Was it pheromones that gave me away? Who knows.\n\n\"So, those people on the trail, they were talking about you guys, and laughing,\" Carrie said.\n\n\"Oh, great,\" I said. \"So I'm laughable when I'm nude, huh?\"\n\nCarrie smiled. \"One of the men said something about having a bigger dick than you guys, and, I guess it was the woman he was with said 'You're dreaming, mister.' And he said 'You wanna go back there? Didn't get enough last night?', and she said 'Fuck yeah, I'll go back there.' The guy said 'They're probably gay, packin' some fudge right now', and she said 'No way! Those are not gay men. Gay men don't look at a woman the way they looked at me.' They all laughed, and I couldn't hear them much after that, and then they were gone.\"\n\n\"Well,\" I said, \"I'm glad they got our sexual preferences straightened out. I'd hate to go down in their lore as 'Two naked gay men we saw hiking in the woods'. Now it'll be 'Two naked straight guys with big dicks gave me the eye'. That's much better.\"\n\nCarrie giggled. \"I was gonna say I wish a naked guy with a nice dick would give me the eye, but you guys already did, so I'm good.\"\n\n\"Oh, you caught us looking, huh? I wish I could say it has everything to do with your nudity, and some of it does, but...do you remember me at all, from other times here?\"\n\n\"Of course,\" Carrie said, looking away, with a sudden case of the bashfuls. \n\n\"So...would you say I gave you the eye those times, too?\" I asked.\n\n\"Yup,\" she said, smirking as she glanced at me again, her tits noticeably goosebumpy, her nipples newly blossomed into hardness.\n\nShe took a lingering look at my cock, it cycle of soft/harder/soft/harder/soft/harder now lifting beyond, defying gravity as it rose to the red hot hard and ready stage. My heart pounded when her gentle bedroom eyes met mine. In a breathy near whisper she asked, \"Yes?\"\n\nI nodded, and her hand reached, slowly, tenderly, her slender fingers touching the hard heat of me, encircling my throbbing cock with a feather-touch grip that felt like a drug called heaven.\n\n\"Lie back,\" her quiet breath of a voice said to me, and then her eyes were on Neil. \"I want you both.\"\n\nI moved my pack to a pillow position and lay back with my head on it, and Neil did the same. That beautiful silence of the North Woods surrounded us, the barely there pine-scented breeze, the still water, the mid-day brightness and warmth. Carrie leaned down, a bit sideways, gently stroking my cock, the solid shaft of it erect and upright, and I watched her eyes watch Neil's eyes as he started a slow masturbation, as if she was telepathing him to do it.\n\nShe looked like she wanted to say something, but instead she licked her lips and moved her mouth to me, guiding the tip of my cock with her tongue into her warm wet mouth. A guy just has to moan when these miracles happen, so I did, louder than I thought it would be. But damn, I mean damn, this was fucking magic.\n\nIt took only seconds for Carrie's sexy hormones to let loose her lust, lust that had been close to the surface, I imagine. Her cock sucking was beautiful to watch, and she knew we were watching, her now lusty eyes looking at one of us, and then the other, all while mouthing and moaning on my saliva wet cock. She licked it, then stroked the slippery wetness with her hand. \"I've never had two guys before,\" she said, her eyes on Neil, and he moaned under his breath, his hand gently stroking his own fully hard cock.\n\nI'm glad she fucked me first. It's selfish, maybe, but Carrie and I had that little bit of history, those flirtatious moments over the early part of the summer. I'm glad she wanted me, the way I wanted her. I'm glad her pussy felt the way it did, squeezing and perfect, and I'm glad she'd mounted me cowgirl style, absorbing me into her, with her goosebumpy tits and aroused nipples on full display. I was soon fully deep, \"So deep!\" she said, her beautiful voice a breathy gasp.\n\nReaching for Neil's hand, she guided him upward, on his knees at first, next to us, so she could kiss him and stroke his cock, and then she urged him up on his feet, so she could have two men inside her for the first time. I watched her mouth take Neil's rock-hard cock, and she moaned like a dirty angel, her hips fucking me, her pussy squeezing like a dream.\n\nMy hands went to Carrie's tits and she moaned again, more guttural. Her transformation to fully sexual was complete, the primitive woman inside her freed into the wilds of the woods. She was fucking me in earnest now, faster, harder, her mouth full of cock and her lungs huffing. Words roared out of her and she clutched Neil's cock in her hand. \"Oh fuck yeah! Fuck!...I'm fucking cumming! \"\n\nFucking me wildly, her eyes looked so surprised, like she hadn't ever had an orgasm before. Maybe it was true, because it ripped through her like a spastic, delirious overdose, her eyes rolling, devilish utterances gurgling from her mouth. Just past the peak of it she grabbed Neil's buttock and crammed his cock back into her mouth, her cocksucking now with a new kind of hunger.\n\nI watched her pussy on me, slowing a bit, glistening with wetness, the base of my cock now buttered with her cream. I let my hips take over while hers were easing, fucking upward into her with more and more of my length, her thighs lifting her just enough to let me. She moaned as the feelings grew, and soon her utterances were guttural again, her body tightening. \"Oh my fucking God!\" she gasped, her eyes on me now, surprised again as orgasm number two locked up her mind in a shuddering bliss. Her gasping exclamation \u2014 \"Fuck!\" \u2014 echoed off the hillside across the water.\n\nFully down on me now, leaving Neil to stroke his own cock, Carrie kissed me, moaning, with my cock deep in her pussy, her tongue wild in my mouth. This was passion beyond the norm. A wildness, a freedom, a new kind of lust that I'd only dreamt of.\n\nNot wanting to stop her hungry kiss, she lifted her pussy off of me, shifted her knees so they were beside me, and her reaching arm pulled Neil down to take her from behind, her crazed moan into my mouth telling me the exact moment his cock filled her.\n\n\"Fuck! \" she cried, echoing over the still water again.\n\nHer mouth shifted its target, now taking my cock, her deep moan telling me the taste of her pussy was a nice new ingredient in the day's intoxicating mix. My hand reached for her tits and fondled their softly hanging weight as Neil fucked her harder, his eyes not looking at me, his body thrusting with undiluted energy. I gently pinched Carrie's nipple and she huffed from her nose as she sucked my cock, her head nodding, telling me she liked it. So I pinched some more, and some more, getting rough with her soft tits as Neil pounded into her, and Carrie came, orgasming with a lifting scream that was as pure and wild as anything I've ever heard.\n\n\"You now,\" she gruffly commanded, her wild eyes on me. I knew what she wanted, so I fucked her from behind and Neil knelt before her, his head back, his eyes on the age-old carved graffiti on the underside of the lean-to roof as Carrie gagged on the length of his wood-hard cock. I looked out at the water for some reason, and a peacefulness came over me, and my eyes drifted to the clouds.\n\n\"Harder!\" Carrie huffed. \"Fuck me harder!\"\n\nMy hands took even more secure hold of her womanly hips and I let my pelvis thud into her, the slapping together of our bodies rhythmic like a drum, a steady thwack of a bongo, a quivering ass that made me want to cum. It was nearly impossible to keep it inside me, but somehow I did, and I fucked this remarkable woman the way she wanted me to, hard, and thudding, deep, and plunging, her pussy hot and electric, my cock somehow everlasting. She came, and she rode the wave, her orgasmic trembles and her mouthful mumbles too much for Neil. His body tensed and spasmed as he came in Carrie's mouth, a mouth of gobbling hunger, drinking him in, swallowing him down, moaning her watery-eyed bliss the way men wish all women would.\n\nCarrie's fourth big orgasm had made mush of her brain and her muscles. Rolling into her back she spread her legs wide and pulled me onto her, and my cock was in her, a missionary style fuck that joined our kissing mouths again. Neil, temporarily spent, sat back against the lean-to's wall and watched us.\n\nOrgasmicly exhausted but still eagerly welcoming, Carrie's body was limper now, her fiery dominance melted away, her wide-spread, lusty submission lying under me now, moaning into my mouth. My cock, feeling even harder than it had, fucked her more and more, and her breathy words told me of the goodness of it. \"Oh my God,\" she said. \"Oh my God...... Fuck me, Nick...... Fuck me!...... Make me cum, and cum inside me!\"\n\nShe'd given herself over to it, this multi-orgasmic head-trip she was on. I swear to God it felt like it was new, these orgasms she was having, like she'd never gotten there before, not even once maybe, and certainly not four times and going for five. So I fucked her steady and deep, kissing her some, looking into her eyes some, and I felt her getting there, and I felt her arrival, and she arched her back high and my hands claimed her tits, and our cries joined together as I came, deep inside her orgasming pussy.\n\nLying even limper under me than she'd been, her body twitched with lingering orgasmic spasms. I rose to my knees, there between her wide-spread legs, and I gazed upon her, her womanly beauty, her soft breasts, the raw and red between her legs. My cock was more yielding, but still long, arching downward. I had a powerful desire to eat her pussy, its glistening pinkness such a beautiful obscenity. But Neil was there, patiently nearby, and I knew this fantasy of Carrie's was all about two men and not just one. I straddled Carrie's middle, smiling at her drunk-like smile, and I lifted her head from the wooden floor and propped it on my pack. Just before I fed her smiling mouth my sticky cock, I asked her, \"Do you want Neil's mouth on your pussy?\"\n\n\"Yes,\" she said, breathy and desirous, her drug-ish eyes half lidded, and she took me into her mouth with a gentle hunger. \n\nI didn't look behind me, but Neil was soon there, and Carrie's deeply erotic moans told me she loves having her pussy eaten. She came again that way, with her back arched up under me, her eyes wide, looking at nothing, my cock in her tight-fisted grip, her lungs emptying breath through her open mouth in a devilishly musical way. I could tell it was a different kind of orgasm, a dizzying one. Her hand let loose my cock and her arms fainted to the floor, and I thought maybe her whole self had fainted, too, but no, she opened her mouth, reaching with her tongue, and I knew she wanted my cock again. She closed her tired eyes and smiled when I fed it to her.\n\nAfter a few minutes gathering her faculties, Carrie had Neil down on his back, riding him the way she'd done me. She didn't have quite the same thudding energy at first, but then it was there, her words coming freer and dirtier as she fucked him harder, her body flushed red with the hot blood coursing through her veins.\n\n\"Oh, Jesus!\" she mumbled as he eyes began to roll. \"Oh, Jesus!\"\n\nAfter she came she had a look of astonishment in her eyes. Happy surprise was written all over her face. I think Neil and I showed it, too, this magical coming together being the best sex any of us had ever experienced. And then it got even more surprising.\n\nCarrie was still on top of Neil, his cock still hard and deep in her pussy. Looking at me, with something different in her eyes, she said, \"In my ass. Want to?\" Her hands went there, spreading her cheeks, her little asshole as conspicuously hungry-looking as her lusty eyes were.\n\nAnal sex, being a porn thing, a fantasy thing, never seemed real to me. I had a feeling Carrie felt the same about it. \"Have you ever?\" I asked her.\n\nShe shook her head no. \"I wanna try it,\" she said. \"Do you want to?\"\n\nInstead of answering I went there, with my mouth and my tongue, the closest I've ever been to another man's hard cock. Carrie gasped and quietly shrieked at the ass tickling my flicking tongue was giving her. Neil's cock began slowly fucking her pussy, my tongue massaged the tender nerves of her anus, and she came again, her thighs trembling as her wordless utterances let us know how very good this was.",
        "\"I may die here,\" she said, drunk on orgasms. \"Is that okay? You guys gonna fuck me to death?\" She looked over her shoulder at me, her eyes deeply lustful and wild. \"Do it,\" she said, spreading her ass open with her hands again, and then, through clenched teeth, she commanded, \"Shove it in me.\"\n\nI wish I could have, but fuck she's got a tight ass. Maybe every woman does? Carrie's took some work before it fully accepted me, but it was work that thrilled her, her words of encouragement getting louder, my cock going deeper, Neil's cock slowly fucking her. Soon she was a screaming, howling animal, there by that wilderness pond, a mountain lioness being bred by a pair of wolves.\n\n\"Fuck!......Fuck!......Fuck!......\" she screamed. I was fucking her amazing ass fully deep now, shoving my cock into her, hard, the way she'd asked for, and Neil wasn't gentle, either. Carrie was lost in some kind of dream, floating in it, suspended there between us, her orgasms coming continuously as Neil and I gave her what was left of our seed, deep in both chambers of her ecstatically spasming gut.\n\n\u2014\n\n\"Here, use my phone to take my picture,\" Carrie said, standing in the dappled sunlight, her face, chest and crotch still flushed pink with hot orgasmic blood.\n\nI smiled. \"Are you posting it on the web, with those other Nude Day people?\"\n\n\"No. This is for...someone who wasn't brave enough to try it, and thinks I'm not, either.\" \n\nCarrie's expression showed a super sexy lustiness, the kind that wildly good sex gives you.\n\n\"Back up,\" she said, as she stood facing me, with her back to the pond. \"I want it to show all of me.\"\n\nI took three pictures, wishing that I could somehow sneakily text one to myself. \n\n\u2014\n\nThe three of us lingered a while, ate some lunch, and hiked out slowly, Carrie saying her legs felt wobbly and her body felt wonderfully funny. My strength was nicely sapped, too, in that good way, and Neil ambled along listening for birds. \"Black-backed Woodpecker,\" he'd tell us, and a little farther along, \"Great Crested Flycatcher.\"\n\nWe stayed nude as long as we could, for fully half of the four miles back to the cars, but voices in the distance slowed us, our feet coming to a stop. \"Now's your chance,\" I said to Carrie. \"You said you felt like a wuss for hiding from those other people.\"\n\nShe looked at me with a sparkle in her eyes. \"Do you...want to?\" she asked.\n\nI shrugged. \"How else are we gonna spread the word about National Nude Day?\"\n\nCarrie smiled. Neil didn't look entirely thrilled by the idea, but he smiled a little, too. And so we walked on, nude, toward the folks approaching on the trail. It turned out to be a group of youngsters, in their late teens, I'd guess, their conversation quieting to nothing as we neared.\n\n\"It's National Nude Day,\" I said proudly. \"You guys should give it a try; it's fucking awesome.\" \n\nI smiled, wondering if the parents of the teen girls would be happy with my suggestion. The girls, and the boys they were with, said nothing, looking at us like we were some kind of freak show, giggling after they passed us.\n\nA few seconds later I asked Carrie, \"Were those boys looking at your tits, or you pussy?\"\n\n\"Both,\" she said, blushing.\n\n\"You liked it?\"\n\nShe smiled, nodding. \"But I think we should get dressed. We're getting close, and...we may see someone we know.\"\n\nAnd so, for us, National Nude Day came to an end. Pulling on clothes felt downright odd, an interesting thing, I thought, after a few hours in the buff. We were soon on the more heavily trodden part of the trail, waving and smiling at the next passers-by, a gray-haired couple, their ignorance of our day somehow disappointing to me.\n\nWe reached the parking area and the cars, and Carrie said, \"We all have wedding rings on, obviously, so...we can't see each other, or anything. But...if you guys want to...maybe we can do this every year? On Nude Day we could...meet here, in the parking lot, at...noon, maybe?\"\n\nWe all smiled and said nothing more. Neil and I watched Carrie walk to her car, my eyes on her ass, curvaceous and alluring, tightly packed into her rugged but stylish shorts. As we stood there, an unusual birdsong caught my ear. I expected Neil to tell me all about it, but his mind was somewhere else.\n\nThe End\n\n \n"
    ],
    "authorname": "riverboy",
    "tags": [
        "anal",
        "birdwatching",
        "double penetration",
        "dp",
        "hiking",
        "mmf",
        "naturism",
        "nudist",
        "threeway",
        "woods"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/rare-birds-and-circumstances"
}