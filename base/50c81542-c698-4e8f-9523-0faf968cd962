{
    "title": "Closing Night High Ch. 05",
    "pages": [
        "\"Emilie,\" Melissa says sweetly, forcing me to concentrate. \"It is Emilie, isn't it? I'm so used to calling you Cinderella.\" \n\nMy blood boils instantly. Caleb's ex has grown some serious brass balls. Coming at me like a coward from behind a public computer and using a teenage girl to do her dirty work was one thing. Getting all up in my personal space and pretending like we're old friends is just dangerous. For her. \n\nBut I have to rein that shit in. None of the five trillion emotions I'm feeling right now are allowed to show on my face. This isn't like when I'm reading her threats all alone or with Caleb. I can't cry, shake with fear, or scream with rage. Melissa can't know that she's getting to me in any way. \n\n\"I need to get home. Can you move, please?\" She's currently leaning against my driver's side door, not budging. \"It's cool. I can walk,\" I say, turning away, knowing full well it won't be that easy. \n\n\"Stop, you little whore,\" she hisses. \n\nOh, the contempt! Caleb was right\u2014she's not nearly as good an actress as I am. Either that, or she forgot to change her crazy-filter this morning. By the time I turn back to her, she's plastered a serene smile on her flawless face. \"Would you like to come for a drive with me?\" \n\nFuck no. \"My parents are going to be home soon, and we're having dinner\u2014\" \n\n\"You're going to want to come with me, Emilie.\" Her voice stays calm, but her words leave no room for argument. Plus, she has her phone in her perfectly manicured hand and turns the screen in my direction, showing me that she literally has the means to ruin my life at her fingertips. \n\nSeeing the image of me on the drafting table, my legs in the air and Caleb between them, is nothing new. I saw it a hundred times the day it was first sent to me, and another hundred since then. Seeing Melissa's thumb poised over the \"send\" button above the image, a hair's breadth away from putting that video in the inboxes of... hell, I don't even care who. It doesn't matter. It just can't happen. \n\n\"Ok... Sure. I would love to go for a ride with you.\" The words come out slowly, each one fighting to stay in my mouth. \n\n\"Oh, good! You can leave your bag in your car. You won't be needing it.\" She steps aside, allowing me to open the door and do as she says. I tuck my tote bag under the driver's seat, cursing myself for wearing a dress that has zero pockets for stashing my phone in. \n\n\"Where are we going?\" \n\n\"Does it really matter?\" she asks as she opens the door to the sleek, white BMW parked next to my twenty-year-old, unwashed Jeep. \n\nAs soon as she's seated next to me, she reaches over and pops open the glove box. At first, I'm worried about her skin coming into contact with mine. Who knows how contagious her strain of psychosis is? Then I'm more concerned about the small handgun she's pulling out of the compartment. \n\nThat's a gun. Like, a real fucking gun. Those things should only be on TV or in movies or on the not-so-local news. Not in real life, and definitely not inches away from my very mortal body. \n\nThis completely changes things. There will be no more attempts to get away from her. There will be no sassy backtalk. There will be... \n\nThere'll be no walking away from this, will there? \n\nShe tucks the weapon into her purse, acting like the most frightening moment of my life didn't just happen. She's not making any overt threats. Heavily implied, sure, but she hasn't said anything like, \"This will be the instrument of your death.\"  \n\nThe rest of the drive passes is total silence. It's a nice break from trying to keep up with her lunacy, but it's also incredibly unnerving. I focus on which streets we're taking and try to guess where we're headed. She takes us to a neighboring town that was affluent a long time ago, but not so much anymore. A lot of buildings here are well over a hundred years old, and they all show their age. Melissa pulls into the parking lot of one such building, whose current incarnation is an indie movie theater. \n\nMy heart races. Of all the places she could've taken me, she chose one that gives me a chance of escaping. It's a slim chance, but it's there. My brain runs through a dozen scenarios. If Eric's brother Kyle is working today, I need to be prepared with a plan. A few plans, really, just in case. \n\nMy overriding emotion is still fear, though, so it's easy to mask the hope bubbling up inside me. \n\n\"No, we're not going to see a movie, silly,\" she says, answering a question I hadn't even thought to ask. \"I'm taking you to one of my favorite places in the whole world. It's where I come to clear my head.\" \n\nShe must come here a lot, then, because she's only got a few marbles left rattling around up there. \n\nMy hope dies a little when we approach the box office at the entrance to the theater. This is where Kyle's usually stationed. Instead it's just some pimply kid who looks younger than me. Melissa purchases two tickets to a movie with some formerly big-name actors trying to make comebacks in a no-name Cannes film wannabe, and we head inside. \n\nThe odor of decades of spilled soda and popcorn butter assaults my senses as soon as we step into the lobby. Do these ugly, red rugs ever get shampooed? Or is that against the rules of the historical\u2014 \n\nOh, thank fucking goodness! Kyle's working the concession stand. See, this is why I prepared for multiple scenarios. This one calls for Plan B. Not the morning after pill, but the thing that's going to save my ass. Besides, I'm guessing it's a little late for pregnancy prevention. \n\n\"Hey, Melissa?\" I ask, putting my plan into action. \n\n\"Yes, Emilie?\" She looks at me, but she's clearly distracted and on edge. I mean, I would be, too, if I were holding someone hostage and had a gun in my purse. \n\n\"My mouth is really dry, and if we're going to be talking about everything\"\u2014please, please, please let us be talking and not skipping straight to the murder part\u2014\"it would be great if I could have some water. If you don't mind.\" \n\n\"Oh, of course! That's an excellent idea. I'm a bit thirsty, myself.\" \n\nOh, look, we have something in common. If it wouldn't sabotage my plan completely, I'd change my mind about the water idea, just so we can go back to having zero things in common. Well, except that we've both been with Caleb, which is way worse than the water thing. \n\nOn our way to the counter, Kyle notices me and opens his mouth to say something that'll give me away. That, of course, is not allowed, so I give him a warning glance and shake my head as subtly as possible. He looks at me like I've lost it, but he must've gotten my drift, because he doesn't acknowledge me with anything other than the standard, \"What can I get for you today?\" \n\nMelissa orders two bottles of water, which comes to nearly ten dollars. She must not carry cash, because she whips out a black Amex card to pay. I've never seen one of these in person before, so I'm momentarily distracted from my mission by what must be a seriously impressive credit limit. When she lowers her head to sign the receipt, I'm back in the game. \n\nI lock eyes with Kyle and mouth, \"Get Eric.\" His eyebrows scrunch together, giving me the distinct impression that he can't read lips and is therefore the most useless person in my life right now. \n\nThat's it. I'm doomed. \n\nMy stomach churns, and I instinctively rest my hand on my lower abdomen, wishing it was Caleb's hand instead. A sense of loss sweeps over me. What if she uses that gun on me? What if I don't make it out of this alive? Not only will I lose my parents and Eric and Parker, but I'll lose my future. I'll lose Caleb. I'll lose the life that's probably growing inside me. \n\nOh, hell no. Fuck that noise. Who the hell does this bitch think she is? Those are my things, and nobody takes my things without my permission. And she so does not have that. \n\nMelissa and I are practically the only people in the building who aren't paid to be here. There was an elderly couple back in the lobby, but I don't know if they were coming or going. At this time of day, in the middle of the week, this theater is deserted. Then again, I doubt the place is packed even on a Friday night. \n\nWe pass right by the theater number that's on our tickets. Not that I thought she and I would really be catching a flick together. The theater we do enter momentarily takes my breath away. \n\nThe light in here is dim, at best, and creates an eerie atmosphere in the beautifully maintained space. It's old, that's for sure. And massive. The stage looks like it was designed for live productions, rather than a movie screen. Based on the opulent architecture, I'm guessing this theater was built in the twenties\u2014back when people spent money on shit like this. I can see why Melissa comes here. \n\nInstinctively, I move toward the stage, and for a moment, I'm transported to another version of reality. One where I'm up there, singing \"What I Did for Love,\" and feeling Caleb's eyes on me, the hot lights, and that indescribable completeness that comes from doing what I know I was meant to do. \n\n\"Beautiful, isn't it?\" Melissa asks, rudely breaking into my trance. \n\n\"Yeah. Yeah, it really is.\" \n\n\"You want to be up there, don't you?\" Is it that obvious? I just look back at her, feeling helpless. \"Go ahead,\" she says, waving me on. \n\nShe follows me as far as the front row, where she takes a seat in the center, while I climb a small set of stairs to the stage. It's dark, but there are safety lights on each step and along the edge of the platform. I walk downstage, stopping just short of falling off. \n\nCompletely exposed and vulnerable, I watch as a wickedly satisfied smile blossoms on Melissa's face. Hiding my fear is my number one priority right now, but my trembling body gives me away, so I close my eyes, take a deep breath, and give myself a good hug. \n\nThink happy thoughts... Think happy thoughts... \n\n...My first time on a stage, performing for a crowd. I was ten, and it was a recital given by my voice teacher to showcase her students. There were only thirty or so people in the audience, but that didn't matter. I found my passion that day. \n\n...The first rehearsal for the musical our freshman year, when I bonded with Eric over our mutual disdain for Grease. Within five minutes, I knew we were destined to be best friends for life. \n\n...When I checked the cast list junior year and saw that I'd gotten the part of Fiona in Brigadoon. My very first lead role. Landing that part let me know that other people recognized something in me I'd always felt was there. \n\n...That shocking moment when Caleb pressed my hand over his rapidly beating heart to show me what he felt for me... Our first kiss... Our first night together... Every single time he's told me he loves me and that he's mine... Every time he's touched my body and every single word he's said. \n\nThe trembling stops. My eyes open, and my arms unfold. This is my stage, now. \n\n\"There it is,\" Melissa says. \"There's that presence I've heard so much about.\" Her words are flattering, but there's contempt in her voice. Jealous, much? \n\n\"Heard from who? From Lacey?\" My voice bounces off the walls and ceiling and back into my ears. Normally, I can appreciate fantastic acoustics. Right now, it's just fucking spooky. \n\n\"Yes! My good friend, Lacey. I haven't been able to reach her for two whole days, and I'm starting to worry,\" she says, sounding less than concerned. \"You wouldn't happen to know why she's not answering my calls, would you?\" \n\nAbsolutely. \"No. She and I don't really talk like that.\" That part is true, at least. \n\n\"Really? That's surprising. She talks about you all the time. About how you steal all the good parts, and how her boyfriend still looks at you in a way he never looks at her.\" \n\n\"That's not true. Jeff\u2014\" I slam my mouth shut, cutting myself off quickly. No need to give her any more information than she specifically asks for. I wonder if she'd be willing to answer a question I have for her. \n\n\"How exactly did you and Lacey become friends?\" I ask. I've been dying to understand their unlikely connection since the moment I learned about it, and Melissa seems to be in a chatty mood. \n\n\"She's a very ambitious girl. Did you know that I used work in theater in New York?\" \n\n\"Yes,\" I answer, a little too readily. Scorn shades her eyes. She must not like the fact that Caleb's talked to me about her. Recovering quickly, she continues her story. \n\n\"Well, Lacey found out about that, and she approached me after one of your little shows last year. She wanted me to impart some of the wisdom I gained through my years of experience.\" Wow. This woman isn't just crazy and evil\u2014she's also the most nauseatingly pretentious person I've ever met. \"She gave me her phone number, and I promised to call. I'm normally not so discourteous, but I neglected to contact her for a full month. \n\n\"I made it up to her by taking her out for coffee and letting her in on a few trade secrets. Then I asked her for a small favor. You see, Caleb had... changed since I'd last seen Lacey. Practically pretended his own wife didn't exist. I was convinced he was cheating on me.\" She pauses to take a long drink from her water bottle, then twists the cap back on as slowly as humanly possible. \"The only time he wasn't with me was when he was at work, so I was convinced his mistress was a teacher. Lacey sweetly agreed to keep an eye on him for me. She reported back a few times, but never with any bad news. \n\n\"But Caleb's behavior toward me only became worse. We hardly ever spoke, and he'd long since stopped\u2014 Well, that's nothing a child should hear.\" A child? Really? Aim a little higher with your digs, lady. \"A few more months passed, and I knew I had to resort to more drastic measures. I was certain that if he lost me from his life, he'd come to his senses and beg me to forgive him.\" \n\n\"That's why you divorced him,\" I guess. There's that piece that was missing. Why I wasn't able to understand how she could so easily leave an amazing man like Caleb. \n\n\"What other reason could there have been, silly?\" A small shrug is the only response she gets out of me. \"I was willing to give him time, all the time he needed. So imagine my shock when I received a call from my friend Lacey.\" \n\nShaking my head, I say, \"I think I've heard enough.\" I know the rest of the story well, and I'd rather not hear her warped version of it. \n\n\"You think you've heard enough?\" she asks in disbelief, abruptly standing and marching gracelessly to the stage, purse in hand. Gun in purse. \"You will listen to everything I have to say. Do you understand me?\" \n\nPurse on the floor. Gun in her hand. Panic sets in, and my muscles and joints lock up. My brain and my mouth, however, can't stop moving. \n\n\"I'm sorry! I swear, I'm sorry. I didn't know he was still yours. If I'd known, I never would've gone near him. Please believe me,\" even though not a word of it is true. \"It was hard, at first, but we're staying away from each other now, and\u2014\" \n\nA sharp, bitter laugh echoes through the theater. \"You lying cunt! Do you think I'm an idiot? His scent is all over you. And the smell of sex.\" Oh, shit. \"You fucked him today, didn't you? You let him use your whore body. You know that's all you are to him, right? Just a dirty slut who spreads her legs whenever he asks. You stupid, stupid girl!\" \n\nAll her forced civility from before is gone, and what's left is unadulterated fury. It's frightening to watch. To watch her lose all control of her sanity and her careful restraint. To watch her wave the gun around as she rants. My previously calm body skips right over trembling and goes to full-on shaking. Heavy tears fall from my face, landing on my pink dress and my crossed arms. \n\nIf I can just let her ride this out, let her say whatever it is she needs to say, there's a chance I can walk away. Isn't there? \n\nWhen she lifts the gun and points it directly at me, that chance may as well have never existed. My eyes won't close. If I move at all, she might pull the trigger. She'll probably pull it even if I remain perfectly still, but I'm not about to give her any excuses. \n\nNot daring to say the words out loud, I tell Caleb I love him, over and over in my head, wishing the words could somehow reach him. \n\nTurns out they don't have far to travel, because just then, one of the theater doors silently opens. It's within my line of sight, but Melissa's back is turned to it. A small amount of light filters in, almost completely blocked by a tall, imposing silhouette. \n\nCaleb. \n\nAs relieved as I am to see him, my fear instantly kicks up several hundred notches. Kill me all you like, you crazy bitch, but please... please... don't hurt Caleb. \n\nHe slowly makes his way down the aisle, the soft soles of his boots barely making a sound on the carpeted floor. When he's standing just five feet away from Melissa, he opens his mouth to speak. My heart stops beating, and my lungs stop taking in air. If it wasn't imperative that I remain conscious, I'd be a lifeless heap on the floor of the stage. She is so close to losing it completely. One word, one sound, could mean the end. \n\n\"Melissa,\" he says in that soothing, raspy voice of his. \n\nWith the gun still pointed at me, she turns her head at the sound of her name. \"Caleb,\" she breathes. \"Oh, thank god you're here. I'm going to make everything better. We can be together again, baby,\" she says, sounding as relieved to see him as I am. \n\n\"It's ok, Mel. Everything is going to be ok.\" He holds out his arms and takes a step closer to her... but his eyes flicker to mine. It doesn't escape her notice. \n\n\"You can't resist her, can you?\" she screeches at him. Her arm whips around so that the gun is now pointed at his chest, just a few feet away from him. There's no way she'll miss if she takes the shot. \"Can't you see what she's doing? She's manipulating you with sex, throwing herself at you any chance she gets. Is that what you really want?\" \n\n\"No, Melissa. That's not what I want. I want a real woman. A woman who's gentle, loving, and kind. A woman with flaws that fit her so well, she's a better person for having them. A woman so strong, she can acknowledge her weaknesses without fearing them. A woman who makes me believe I'm a better man than I thought I was, because she chose me over everyone else.\" \n\nMelissa's head shakes back and forth in slow motion for a long time, and I begin to wonder if she bought that his words were meant for her. \n\n\"You're not talking about me, are you? You've never said anything like that to me. Ever.\" Hopelessness clouds her expression, and she lowers her gun a little. \n\nI don't know what it is I do that causes her to swing her gun back to me. Did I move without realizing it? Did I speak and not even hear myself? \n\n\"What would you do if I killed her right now?\" she asks Caleb, tears streaming down her face, still beautiful even when contorted with grief and pain. \n\n\"You may as well kill me, too, Melissa.\" A sob escapes me at the thought of Caleb not being alive in this world, even if I'm already dead. \n\n\"Get down here!\" she yells to me. It takes me a moment to get my limbs to work again, but the second I can move, I'm practically tripping down the stairs to stand beside Caleb. Touching him is out of the question, but just being near him is enough. \n\nThe small firearm in Melissa's shaking hands swivels back and forth between us. Her chin quivers, but once she has that under control, she looks into Caleb's steel blue eyes and tells him, \"I never stopped loving you,\" before shuffling backward. \n\nMy eyes stay on the gun until she suddenly lowers it and takes off for the exit at the side of the stage, leaving me and Caleb alone. The massive space is silent, aside from the sound of my blood pumping in my ears. \n\nBefore I can even catch my breath and process what just happened, three police officers storm into the huge theater and jog down the aisles. They've almost reached us, and one of the officers is asking if we're ok, when a loud pop from outside stops us all dead in our tracks. ",
        "Strong, steady arms wrap me up, and I'm pulled into the security of Caleb's body. Powerful relief and a sense of safety stop any more of my tears from falling. I have no clue what just happened outside, and I don't want to think about it just yet. \n\nI'm alive. Caleb's alive. Nothing else matters in this moment. \n\nTwo of the officers run for the exit, guns drawn, and cautiously open the door. Whatever they find has one of them holstering his weapon as he steps outside. There's no doubt in mind what he saw. The look in Melissa's eyes before she turned and ran made it clear that someone wouldn't be walking away from this\u2014someone who couldn't come to grips with her life as it now was and tried to bend reality to her will, with no success. Reality is stubborn that way. \n\n\"Em!\" Eric shouts frantically, as he flies down the aisle, Parker and Kyle right behind him. Caleb reluctantly releases his hold on me so my best friend and I can hug each other tight enough to crack ribs. \"God, Em, I was so scared. When I heard the shot, I was so fucking scared. And they wouldn't let us in, and they weren't telling us anything, and I am so, so glad you're ok,\" he says at rapid speed, shaking like a leaf. \n\n\"It's over, Eric. It's finally all over, and\u2014 Oomph!\" I'm suddenly squeezed by another set of arms, wrapping around me from behind. \"Hey, Cutie.\" \n\n\"No more scares, missy. We can't handle it.\" \n\n\"When Kyle called me and told me you looked freaked out and that you were with some brunette, it was like my whole world just stopped.\" \n\nI look over Eric's shoulder at his brother and mouth, \"Thank you.\" When his brows knit together in confusion, I laugh and say the words out loud. \n\nCaleb tugs me back to him. I know how he feels\u2014I can't stand to be separated from him for long, either. With me no longer between them, Eric and Parker embrace and comfort each other. The hug isn't one between friends, but between two people who are completely in love with each other. \n\nI watch for Kyle's reaction. Eric has been keeping his sexuality a secret from his family, and especially from the guy who tormented him his entire life, but there's no surprise on his big brother's face. Kyle simply clasps his hand on Eric's shoulder in a show of support. \n\nEven in a tragic moment like this, my love for the people in this room brings a smile to my face. \n\n* * * * * \n\nCaleb and I wait at the crowded police station. A detective had already interviewed us at the theater, but he asked us to come down to go over the sequence of events of the past month. I'm not looking forward to telling some stranger about my sex tape. And, oh god, will he want to see it? I groan and lean into Caleb's chest. \n\n\"Are you ok, babe?\" he asks me for the billionth time since things went down. \n\n\"I'm amazing... but now I have to tell people everything. Everything, Caleb. At least we won't have to go to court. Wait\u2014do you think they'll charge Lacey with anything?\" After considering it for a second, I'm surprised to find I don't want that to happen. I'll never forgive her for what she did to me, but should one terrible choice she made as a teenager ruin her life? \"If I don't want them to, can they still arrest her?\" \n\n\"I'm not sure, but we can find out.\" He cradles my face in his large hands, and my eyes meet his. It's a wonder they're not shooting laser beams of love at him. Or maybe they are, but they're invisible laser beams. What a cool superpower to have. \"Remember what I told you today in my office? You're a fighter, Em. And thank you\u2014thank you\u2014for fighting for yourself today. I meant what I said to Melissa. If she'd taken you from me, life wouldn't have been worth living.\" \n\n\"Don't ever talk like that. And besides, it doesn't matter. We're here. You and me. And there's nothing left to keep us apart.\" At my words, Caleb slides his fingers through my hair and grips it, bringing my lips to his. We kiss with a passion so hot, it could set this whole damn place on fire if we're not careful. \n\nClutching his shirt in my fists, I open my mouth to feel his tongue glide over mine. I'm turned on instantly, and judging by the hardening bulge in Caleb's jeans, he's right there with me. I wonder if they'd mind if we slipped out for a little bit to fuck like we just survived the end of the world. \n\n\"Emilie?\" a tentative voice asks. \n\nOh... shit... Breaking away from Caleb is painful, but sadly necessary in this situation. \n\n\"Um. Hi, Mom.\" My face is beet red. Mom and Dad are standing right in front of us, mouths gaping and eyes bugging out. Not a good look for them, really. \n\nCaleb clasps my hand in his. Cat's out of the bag, anyway. What's a little handholding when my parents just witnessed the prelude to some seriously hot sex? \n\nLooking between me and the much older, tattooed, badass-looking man at my side, my mother's mouth opens and closes, while little noises that sound like they're supposed to be complete words but don't quite make it that far crackle in her throat. \n\n\"Dr. Ormond. Mrs. Ormond. My name is Caleb.\" He offers his free hand in greeting. Neither one of my parents takes it. \n\n\"You look familiar...\" Mom squints, trying to place him. Caleb looks to me, silently asking how much I want my parents to know. They're my family, so it's my decision. It's time I man up and finally tell the truth about the most crucial person in my life. \n\n\"Caleb is the tech director at the high school,\" I tell her, trying to play it cool, just lay out the facts. \"He's also my boyfriend.\" Annnnd brace for impact! \n\n\"Boyfriend?\" my dad yells, finally chiming in. \"Jesus. You must be twice her age! What the hell is wrong with you?\" His face turns a scary shade of reddish-purple, veins pop out on his forehead, and his raised voice attracts the attention of everyone in the crowded room. \n\n\"I fell in love with your daughter, sir. I couldn't help it. She's an amazing woman.\" I wrap my arms around his waist, no longer content with holding only his hand. His strong arm snakes around my back, and he strokes my waist with his thumb. \n\n\"She's just a damn child!\" \n\nOh no, he didn't. \n\n\"Enough!\" I shout, picking up my foot and slamming it down. \"Caleb and I will be happy to talk to you. Answer all your questions. But let's get one thing straight: I am not a child. And if I was one before today, I'm definitely not, anymore.\" \n\nThe shock and confusion on my mom's face is quickly replaced by fretful anxiety and, well, more confusion. \"What happened today? Eric's mom called me and said that you were... Were you attacked? Kidnapped? Jesus, are you ok?\" \n\n\"I'm fine, Mom. I promise, everything is fine now.\" Not sure if that reassures her at all. Probably not. Just then, the detective steps out of his office and lets me and Caleb know he's ready for us. \"This may take a while, so I'll probably be home pretty late.\" \n\n\"We'll be up,\" my mother assures me. I had no doubt they would be. \n\n\"Ok. We'll be there, hopefully in a few hours.\" \n\n\"We?\" my dad asks in disbelief. \n\n\"Yes, we. Caleb will be with me. From now on.\" \n\n* * * * * \n\nOur grilling lasted until midnight and went about as awkwardly as expected. It's amazing I don't have third degree burns on my cheeks from hours of hardcore blushing. \"Yes, detective, the sex tape was filmed on school property.\" \"No, our relationship didn't start until after I turned eighteen.\" \"No, we did not give our consent to be filmed.\" \"Yes, we were completely naked in the video.\" \"No, there was no penetration.\" Yeesh. \n\nMy suspicion is that we had a particularly pervy interrogator. I'd be surprised if he didn't rush off to the men's room to bust a big nut in the toilet as soon as he was done with us. Or maybe he went home and gave his wife a thorough fucking. In which case, you're welcome, Mrs. Detective. \n\nBut that wasn't even the real torture of the night. No, that's going to come when I have to face my parents and explain the shit show\u2014with intermissions of awesomeness\u2014that has been my life since closing night. My stomach churns as Caleb and I make our way to my house, and it does a backflip when he hits a small pothole. \n\nThis time, I'm pretty damn sure my queasiness is from stress. Stress from a month's worth of torment. Stress from keeping huge secrets from my family. Stress from sitting next to Caleb and not telling him that he's probably going to be a father soon. Stress from Melissa's defeated and desperate expression moments before she took her own life playing on an endless loop in my head. \n\nNeeding space and fresh air, I lean into the passenger side door, the cool, late-night wind like an air-shower on my face. Caleb and I stay connected by our hands resting in the center of the bench seat. I feel his eyes on me, and I know he's worried about my emotional state. \n\nThe right thing would be to tell him, right this second, what I suspect. It doesn't matter that I'm not one-hundred-percent sure, yet. I shouldn't be keeping something this huge from him. But I'm so fucking wrung out, and we still have my parents to deal with. If his disappointment or distrust got piled on top of that shit heap, it'd probably break me. \n\n\"Are you o\u2014\" \n\n\"I love you, Caleb, but if you ask me that question on more time, I might just bite your tongue off the next time you try to kiss me.\" The helpless look on his face makes me feel like an ungrateful bitch. \n\n\"Is there anything I can do, babe? You know I can't stand seeing you like this.\" He lifts our joined hands and tucks some windblown strands of hair behind my ear. \n\n\"I'd say that I need silence\u2014and I really do\u2014but that'd leave me no choice but to listen to my own thoughts, and that's just asking for trouble. Maybe you could distract me? Talk about something as unrelated to todays events as possible?\" \n\nHe fixes his gaze on the road ahead, illuminated only by his headlights and the occasional street lamp. After two stop signs, I'm about to force him to speak, when he turns into the dark parking lot of a long-since closed dental office. Without saying a word, he kills the engine and steps out of the truck, pulling me gently by the hand to follow him. \n\n\"What are you doing?\" I stage-whisper. After years of theater, I've lost the ability to use proper, quiet whispers. \n\n\"Distracting you,\" is all he says before he pins me against the brick wall at the side of the small building and takes my mouth in a hurried, fevered kiss. Moaning into his lips, I immediately start rubbing my body all over his, my hands clutching his perfect ass, wishing he could fuck me through all our clothes, so we wouldn't have to waste time shedding the barriers between our skin. \"I almost lost you today, Em. You could've died. Right now, I need to feel how alive you are. Inside and out.\" \n\nHe undoes his jeans and takes his solid cock into his tight grip. With his free hand, he hikes one of my thighs up to his waist, then bends his knees so he's at my level, pushes my panties to the side, and shoves his scalding hot erection in me to the hilt. That feeling of being instantly stretched by his thick shaft to what feels like my limit really is distracting as hell. The man knows what he's doing. \n\nMy hands slip inside his loosened jeans to grab onto his firm cheeks again, digging my nails into soft skin and straining muscles, encouraging him to slam into my pussy even harder. When he hits an almost painful spot inside me, I cry out so loud, he slaps a hand over my misbehaving mouth. When he's sure I can keep my sex sounds in check, his hand moves lower to manhandle one of my small tits, probably leaving fingertip-shaped bruises on the tender skin. \n\nThere is nothing gentle about this, and yet it's nowhere near as rough as I'm craving. \n\n\"Harder, Caleb,\" I beg, my words sneaking out between gasps and pants. \"Don't hold back. Fuck me deeper. So deep it hurts. So deep it rips me in half.\" \n\nHe answers with an incoherent grunt, before giving me exactly what I asked for. More, even. Some of the stitching on the back of my dress splits apart from the stress of getting pounded against rough brick. \n\nCaleb grabs my other leg and effortlessly lifts my petite body off the ground to wrap around him. With one palm flat against the wall next to my head, his other hand cups my full, round ass. The unfamiliar sensation of a thick finger\u2014wet with the juices leaking from my core\u2014rimming my asshole shocks me at first. And when the tip eases past the tight ring, stretching me open in a place I've never been stretched before, my eyes pop open. \n\n\"Oh, holy shit...\" I moan and throw my head back, cracking it a little against the red brick. It's pitch black out here, but with his face so close to mine, it's impossible to miss the wicked grin on his breathtakingly beautiful face. \n\n\"You like that, huh?\" Not waiting for my answer, he pushes in to the first knuckle, then pulls it out and slips it back into the increasingly accommodating hole. I can only answer \"Yes, yes, yes,\" in time to every brutal thrust of his cock. \n\nBeing filled in both holes\u2014the second one, deliciously dirty\u2014I'm on the brink of one of the most powerful orgasms of my life. When he pries my red, swollen lips open with his and forces his tongue inside my mouth, my body shakes with excitement. The walls of my battered cunt spasm around his swelling girth, and my womb flutters in anticipation of accepting a thick blast of Caleb's hot cum. \n\nWait\u2014 Shit! Shit, shit, shit. No, I can't! \n\nSuddenly, my holes are empty, and I'm being carefully lowered to the pavement. Oh, crap. Did I say that stuff out loud? \n\n\"Em, what's wrong? Was it too much? Did I hurt you?\" \n\nThe only thing that hurts is the sharp stab of guilt. Like, ice-pick-to-the-heart hurts. He thinks he's the one who did something wrong. As if I needed to feel like an even shittier person than I already did. \n\nWhy did I let this happen? I mean, what if it turns out I'm not pregnant right this second? What if I'd let him fill me with his cum, and it was this fuck, right here, that succeeded in knocking me up? I'm having enough trouble forgiving myself, as it is. \n\nNo, I have to be honest with him before this can happen again. But the pained look on his flushed face makes it impossible to force the words out. After I take the pregnancy test\u2014whether it comes back positive or negative\u2014I'll throw my undeserving ass at his mercy. Just... not now. \n\n\"I'm so sorry,\" I tell him with total sincerity. \"You didn't do anything wrong. God, it felt so, so right. Really.\" Closing the small distance between us, my arms circle his waist, and he wraps me up in his protective embrace. \"Today has just been too much. My head's all over the place, and I kinda freaked for a moment. I'm really, really sorry.\" He's tucked his cock into his pants, but I can feel that it's still half-hard. Stepping back and gesturing in its general direction, I ask, \"Do you want me to\u2014\" \n\n\"Don't you dare even suggest it, babe. Do you really think I could get off when you're feeling this way?\" I cast my eyes down and shake my head, feeling ashamed that I'd temporarily forgotten how selfless he is. \n\n\"No. No, I know you wouldn't.\" Going up on my tiptoes, I kiss him, just barely touching my lips to his. It lacks the heat from a moment ago, but it's filled with every warm and fuzzy feeling ever. \"I just went a little crazy there for a sec, but I'm back now. Promise.\" \n\n\"Good. I'm glad. Now... Are you ready for this?\" \n\n\"Ready to let my parents in on a month's worth of dirty little secrets? Sure! Why not?\" \n\n\"You know, you don't have to tell them anything you don't want them to know. Hell, you don't have to tell them anything, at all. They have no right to pressure it out of you.\" \n\nHis words set me at ease. He's right\u2014I'm the one in control of this dreaded conversation. They want to know my personal shit? They'll have to settle for whatever it is I decide to give them. \n\nWith an exaggerated nod and a fierce look, I march over to Caleb's truck. \"Come on,\" I whisper-shout back to him. \"Let's do this.\" \n\n* * * * * \n\nShifting uncomfortably in the stiff chair, I can freely admit that I am so very much not in control of this conversation. It was easy enough to fool myself into thinking I would be, until I saw the worried, pissed, and disgusted looks on my parents faces. The disgust seems reserved solely for my boyfriend. \n\nMom and Dad strategically took up all the couch space, forcing me and Caleb to sit in the matching arm chairs, five feet apart from each other. If it wouldn't have made things much worse, I would've sat in his lap. The distance between us just amps up the total awkwardness of this moment. \n\nThe first part of the conversation went smoothly enough. We gave them answers similar to what we gave the detective. Only, we left out all the details, like everything that went down in the men's room and tech room that first night, simply telling them, \"That was the night our relationship started.\" \n\nI felt the need to make it quite clear that absolutely nothing sexual happened until months after I'd turned eighteen. And that I was the one who did the majority of the seducing, not Caleb; though, admittedly, that was probably more than they needed to know. \n\nEvery time they ask a question, I have to fight the urge to be an obedient daughter. I'm a total Daddy's girl, so disappointing him like this is killing me. \n\nAnd now, Mom's just asked us how and why the blackmail started. I shoot a panicked look to Caleb, but he appears to be just as lost for a G-rated explanation as I am. Oh, man, he looks nervous. Is he intimidated by my parents? Not that he doesn't have every reason to be, what with the bizarre and disastrous first meeting between them. Looks like I'll have to be the brave one tonight. \n\n\"Caleb's ex-wife had a\u2014\" Nope. Not mentioning the sex tape. No fucking way. \"She had evidence of our relationship.\" Oo, that's a good one. Mental high five. \n\n\"What the hell is that supposed to mean?\" my dad asks. Stick to your guns, Em. Not their business, not their business, not their business... \n\n\"That's really not their\u2014I mean, your\u2014business.\" Good enough. \"Anyway, she threatened to expose us if we didn't break up, and she sent creepy emails every once in a while, in case we forgot.\" No need to tell them how frequently we \"forgot.\" \"Of course, we had no clue who she was until, like, a week ago.\" \n\n\"I don't understand why you didn't go to the police right away,\" Mom says, shaking her head. \"How could you be so reckless? Why would you put yourself in such a dangerous position?\" \n\nAfter what happened today, I've been asking myself that very question. But I do remember the reasons I thought were so important at the time. \n\n\"Honestly? It seemed scarier to come forward with it. It could've gotten Caleb fired. It might've forced Melissa's hand, giving her an excuse to send out the sex\u2014\" Er... Um... Crap. \"I mean, share the evidence.\" Good save. \"Plus, I really hoped it'd all just go away on its own. It was easy to convince myself that was possible, because the whole thing was so unreal. Hell, even today feels more like a bad dream than something that actually happened in my life.\" \n\nMom's trembling hand covers her mouth, and tears fill her eyes. \"How could we have missed this, Jeremy?\" she asks my dad. \"What kind of parents are we that we had no idea any of this was going on?\" Dad puts his arm around her shoulders and pulls her into the crook of his neck, soothing her with firm strokes on her arm. \n\n\"Are you sure this is over, now?\" he asks me. \"You're not in trouble anymore, right?\" \n\n\"It's over, and thank fuck for that.\" \n\nDad doesn't balk at my blatant profanity. My parents got used to my trucker's mouth a long time ago. \n\n\"So is this,\" he declares, gesturing between me and Caleb. Mom lifts her head then, her eyes pleading with me to agree. \"You're smarter than this, Emilie. You have to know how inappropriate it was for him to become involved with a girl still in high school\u2014where he worked, no less.\" ",
        "I'm not unsympathetic to their concern. They're good parents. Of course they want to protect their daughter from a man they think is taking advantage of her. \n\n\"Inappropriate, maybe, but that doesn't matter, now. I'm with Caleb, Dad... Mom. That's not going to change, so you'll just have to accept it.\" \n\n\"No way in hell am I accepting this!\" Dad roars, standing to loom over Caleb. Caleb gets up, too, towering over my average-height father, then comes to stand by my chair. He places his warm hand on the back of my neck, massaging the seriously tense muscles there. \n\nLeveling a stare at my usually-awesome dad, I put a cork in this futile argument. \n\n\"I love you and Mom, so much. You've been the best parents I could've asked for. Better, even. But I don't need you to parent me anymore. I need your support, your love, and your understanding.\" \n\nRising from my chair, I grab Caleb's hand and lock fingers with him. Our heads turn to to each other, and our eyes meet. One corner of his mouth turns up, lightening my heart and making it easier to say my next words. \n\n\"I need you two to understand something. If you make me choose between having you guys in my life and having Caleb, know that I'll choose him. Please don't force me to do that, ok?\" \n\nLeaving the blank, disbelieving stares of my parents behind, I lead Caleb out the front door. \n\n* \n\nWhen we step out onto the porch, Caleb keeps moving forward, with my hand still in his grasp. I stop, tugging on his hand to get him to turn around. He gives me a puzzled look. Yeah, I'm kinda puzzling myself, right now. \n\n\"My parents had some major bombs dropped on them tonight. They need me to stay home.\" It's just a guess. But knowing Mom and Dad, and seeing them so angry and sad and scared, all at once, I have the sneaking suspicion they need to know I'm safely under their roof tonight. \n\nPlus, if I spend the night with Caleb, he'll want the sex, and I'll want the sex, and I won't be able to resist him, and I'll end up feeling guilty again. Nope. Can't do it. \n\n\"I need you, Em. Please.\" Oh, man. Looks like I'm going to feel guilty, no matter what I do. He stalks toward me, backing me up against the closed front door, caging me in with his arms on either side of my head, and rocking his hips against me. His hard cock strains in his jeans, pressing into my stomach and sparking a deep desire to finish what we started earlier. \"I need you in my bed and in my arms. I want to pound you into my shower wall and make love to you in my bed. Fall asleep with my cock still inside you and my cum\u2014\" \n\n\"Caleb...\" I moan, almost too breathless to make any sound at all. \"I know what you're doing, mister.\" \n\n\"Is it working?\" That confident half-smile and the mischievous twinkle in his eyes make him nearly irresistible. Tilting my head back, I collect a quick kiss from my sexy, manipulative boyfriend. \n\n\"Just one night, Caleb. And then I'm yours. Forever.\" \n\nAfter a longer, savoring kiss, we say goodnight a couple dozen times before I watch him drive off in his truck. As soon as he turns the corner, I run to my Jeep\u2014which is in the driveway, thanks to Eric and Parker\u2014and retrieve my bag from under the seat. \n\nBack in my room, I sit cross-legged on my bed and stare at the pink box containing the pregnancy tests. Yep. I can do this. Right now. I've got this. Except, when I read the instructions, it says that the first pee of the morning will give the most accurate results. That's a good enough reason for me to put this off for another few hours. \n\nAfter brushing my teeth and changing into an oversized t-shirt and some boy shorts, I slip into bed. My eyes close, and I'm dead to the world. \n\n* * * * * \n\nEvery muscle in my body is tense and sore. You'd think I got beat up yesterday, instead of just kidnapped and held at gunpoint by Caleb's now-deceased ex. Close enough, I guess. A thorough, fingertips-to-toes stretch helps the situation enough that I can stand to open my sleepy eyes. \n\n\"There's my girl,\" a male voice greets me from the other side of my room. \n\n\"Eric?\" I manage to croak out. Damn, I sound about as shitty as I feel. \"What are you doing here?\" \n\n\"Thought you might need the support of your best friend today.\" \n\n\"That's really sweet of you, but if I have to say 'I'm ok' one more time...\" I trail off, lacking the energy to complete that sentence. \n\n\"Are you, though?\" \n\n\"I just said I am. What is up with you?\" I muster the will to sit up, then slump against my headboard. Eric is chilling on my white, wooden desk chair, with his elbows resting on his knees and his eyes assessing my face. \n\n\"So, does that mean you've had a chance to take the pregnancy test I found in your bag?\" He asks with one brow raised. Since when can Eric raise one eyebrow? Has he been practicing in the mirror? Took me close to a year to get my muscles to make that happen\u2014 \"Em?\" \n\n\"Um. The test? Um... No. Not yet.\" \n\n\"Does Caleb know?\" At least there's no judgment in his voice, thank goodness. I'm judging myself enough, as it is. \n\n\"Um... No. Not yet. It hit me yesterday that I was late, so I went to the drug store, and then, you know, stuff happened...\" \n\n\"Ok, that's a good excuse. Or it was, yesterday. What about today?\" \n\n\"Well, I was planning on doing it when I got up and went to the bathroom, but someone sidetracked me,\" I say, cocking my eyebrow at him. See? Told you I could do it. \n\nEric gives me an expectant look, like I'm stalling on purpose. I'm totally not. It's just that I had such a long day yesterday, and it's so comfy in my bed, and if a test never tells me I'm pregnant, then it's kinda like I'm not, and what's the rush anyway? \n\nOk\u2014rapid-fire rationalizations are never a good sign. With a deep, guttural groan, I roll out of bed. \n\nAfter a full-body shake to wake up my muscles, I point an enthusiastic finger at my best friend, then jerk my thumb in the direction of the bathroom. \"Let's do this.\" \n\nEric looks between me and the bathroom door, then back again. \"You want me in there while you pee?\" \n\n\"Hey, you wanted to be supportive, right?\" He simply shrugs. \"Good. Now, come hold my hand.\" \n\n\"Gross.\" \n\n* \n\nYou wouldn't think it, but the difference between being pretty sure you're pregnant and knowing for a fact that you are is a glaring one. There's the idea of something, and then there's the reality. Like how ten minutes ago I was one person, and now I'm two. Well, that's not exactly true. I was pregnant ten minutes ago, but, like, in my womb but not in my head. \n\nWhat I'm getting at is... big difference. Huge. Monumental. \n\nSo, that's why I'm curled up in the fetal position\u2014no pun intended, at all\u2014with Eric behind me on the bed, petting my hair and whispering soothing bullshit. \n\n\"You'll be fine, Em. You'll be fine. Shhh... We'll figure this out. You still have a couple months left to decide what you want to do.\" \n\nHuh? \n\nUnfolding myself, I roll over to face him. There's a ton of concern in his eyes, betraying the hell out of his reassurances. Not that I blame him. I did go into shock as soon as the little blue plus sign popped up and refused to go away. And he doesn't understand why. \n\n\"I'm keeping the baby, Eric,\" I tell him. After a flicker of surprise, he manages to school his expression. \n\n\"Ok. So, you've gone and made me an uncle at eighteen. I can work with that,\" he says, a genuine smile forming on his sweet face. I giggle at his comment. It reminds me that there are more people involved in this pregnancy than just me and Caleb. \"How do you think the father-to-be will react? The man loves you like crazy. You don't have to be nervous.\" \n\nOh, was I that obvious? Must've been all the shaking and the quivering lower lip. \n\n\"Don't I? Just because I'm happy I'm pregnant, doesn't mean he will be, too.\" \n\n\"Em, come on. This stuff happens. Sex makes babies. And a good guy like that isn't going to abandon his family.\" \n\n\"You don't get it. He didn't know what he was getting himself into. I didn't tell him\u2014\" My throat catches on the last word. After a few deep breaths, I launch into the story of how this baby came to be. This is Eric. He knows every debauched and deplorable thing I've done over the past four years, so while telling him isn't exactly easy, it's not excruciating, either. \n\nSoon as I'm done, he takes a second to process my TMI dump, while I wait for more of those contrived reassurances from before. All I get is, \"Go talk to Caleb.\" \n\nNow, that will be excruciating. \n\n* * * * * \n\nI focus on one task at a time. Take a shower. Get dressed. Eat\u2014or pick at, as the case may be\u2014breakfast. Avoid parents' scrutinizing eyes as much as possible. Get in car. Drive to Caleb's. Get out of car. Knock on door. \n\nOk. I'm still working on that last part. \n\nI haven't even gathered the courage to raise my fist yet, when the door opens and Caleb is standing in front of me. He's wearing his usual t-shirt and jeans, but his feet are bare. Fuck, he's beautiful. I stare at the soft, loving expression on his rugged, angular face as long as possible, trying to burn it into my memory before he speaks and shit has to get real. \n\nDawn breaks over his face as soon as he sees me, with a smile so bright, it's painful to look at\u2014particularly because it's about to die a quick death. \"Emilie.\" \n\nThat's all the greeting I get before I'm pulled into his living room and into his arms. His mouth finds mine immediately, and I open for him, letting the tips of our tongues tease each other. On instinct, my arms wrap around his neck, and my fingernails graze his scalp and through his soft, stubbly hair. \n\nMy body is screaming at me to postpone my little announcement, but that only makes my brain more insistent that it can't wait. Now's as good a time as any, right? \n\nWithout breaking the kiss, I speak the words against his lips. \"I'm pregnant.\" \n\nWhen his tongue dips into my now-dry mouth, I figure he didn't hear me. That doesn't last long, though. I can pinpoint the exact moment my words register, because the kiss stops, and his whole body stiffens. He doesn't move, so I take it upon myself to give him a little space. Still no movement, but now I can see his face, and I wish like hell that I couldn't. The sheer panic there is heartbreaking, and I lower my head in shame. \n\n\"Emilie...\" Here it comes. \"I'm so sorry.\" \n\nMy head snaps up, and I squint at him in confusion. \"You're sorry?\" \n\n\"I am. I swear. Please, you have to believe me,\" he begs. Why is he begging my forgiveness? Shouldn't it be the other way around? I don't respond. Not exactly sure how to, since this is the exact opposite reaction of what I was expecting. \n\nHe takes a tentative step toward me and watches my reactions with wary eyes. I'm trying to readjust my idea of how this moment was supposed to go. Complete one-eighties tend to throw a person off-balance. \n\n\"I should've been more careful with you. I never asked you if you were on any birth control. To be honest... I hoped you weren't. I had the strongest fucking orgasms of my life every time I came inside you, imagining that I was creating a life with you. It makes me such a selfish bastard, wanting so badly to be connected to you this way\u2014to have my child growing inside your beautiful body,\" he confesses as he caresses me from my neck, all the way down my arms, and takes my hands in his. \"I know you'll never forgive me for this, and I'll understand if you don't want to keep it. That's your choice, and I'll support you, no matter what. Just\u2014 I need you to know that I want this baby with you, Em. I want it more than I've ever wanted anything in my life.\"  \n\nListening to his speech, my eyes grow progressively wider. Humor bubbles inside me, starting in my belly and working its way up. I try to stifle my laugh, but my delirious relief has other ideas. After one, tiny giggle jumps out, I cover my mouth with my fingers, but all the other happy laughter escapes around them. \n\nCaleb must think I've gone legit crazy. \n\nThen, like a stereotypical, emotional pregnant woman, my mood shifts completely. All the fear and guilt that'd been weighing me down, leaving me weak and exhausted from carrying it around since realizing I might be pregnant\u2014and, hell, even before then\u2014escapes my body. My knees buckle, and Caleb's there to catch me. He presses kiss after kiss to the top of my head, and heavy tears begin to drench my cheeks and his soft, cotton shirt. \n\n\"So, just so we're clear\u2014you don't hate me?\" I ask, needing to be certain about this before I say anything else. \n\n\"I could never hate you, Em. Never,\" he assures me. \"Why would you even think that?\" \n\n\"Caleb, just because you never asked if I was protected doesn't make is ok that I didn't tell you I wasn't,\" I say into his shirt, then tilt my head back to look straight into his tear-filled eyes. \"I know how biology works. From our very first night together, when I pushed your cum inside me with my fingers, I knew the risk. Every time you came inside me, I felt more and more guilty, but it was way too good to ask you to stop. Feeling that warmth, knowing exactly what it could do... I just couldn't give that up. When I found out I was pregnant, I'd never felt happier, but I'd also never felt so angry and disgusted with myself.\" \n\nClasping my face between his rough, steady hands, his eyes bore into mine with an intensity that takes my breath away. \n\n\"Em, no. Don't ever think that. We did this together. We each had a part in it. You and me.\" He places a soft kiss to my forehead and wraps his arms around me, holding me tight. \"So, you know that I want this baby, but... do you?\" I see the hope in his eyes, but also the fear. I smile at him, knowing that I'm about to take that fear away. \n\nWith a blissful smile, I tell him, \"I want this baby, Caleb. I want our baby.\" \n\nThe absolute joy on his face fills me with a level of happiness I'd never known before this moment. He lifts me a foot off the floor and spins me around until I'm giggling through my dizziness. When he kisses me, I taste the salty tears that are running down his cheeks. \n\nIt hits me, then. That was it. That was the last thing keeping me and Caleb apart, physically, mentally, or emotionally. Lacey is no longer a threat. Melissa is... yeah. My parents know about our relationship. And there are no more secrets, period. If it weren't for all the fabulous sex, and every precious moment that came before now, I'd say that this is the first real day of our relationship. \n\nStill held off the ground, I wrap my legs around his hips. A sense of urgency is building in me, making me restless. My teeth latch on to his lower lip and tug as I pull away from the kiss. My eyes gaze hungrily into his. \"Make love to me.\" \n\nCaleb easily carries me up the stairs and into his bedroom, where he lays me down on cool sheets. They feel so good on my heated skin. He climbs onto the bed and on top of me, his massive frame covering my body completely. Propped up on one arm, he kisses me and caresses my thigh with firm, commanding touches. His large hand roams higher, slipping under my short, white dress, until it comes to rest on my belly, between my wide hips. \n\n\"Mine,\" he whispers in wonder. Removing his hand from the skirt, he brings it up and cups the side of my face. I nuzzle into his warm palm. \"Mine,\" he says again, only this time, it comes out as more of a growl. \n\n\"Yours,\" I tell him, with all my heart. Then, with a naughty little grin, I reach between our bodies and grab ahold of the solid cock still trapped inside his jeans. \"Mine.\" \n\nCaleb collapses on top of me, his full-body laughs roaring in my ear and rocking me into the bed. This from a man who, up until a month ago, I thought lacked the ability to process humor with his uber-serious brain. Now here he is, shaking a king-sized bed with the force of his laughter. This is a side of Caleb only I get to see. This side of Caleb is all mine. \n\n\"I love you,\" I say, my lips brushing against his ear. His laughter cuts off, and his body stills. The only movement is the twitch of his cock against my thigh. \"I love you,\" I say again, then feel his lips and teeth graze the sensitive skin between my neck and my shoulder. His hips rock ever so slightly against me. \"I love you,\" I repeat, eliciting a groan I can feel vibrating in his chest. \n\nGrabbing the hem of his shirt, I tug on it, letting him know it's time to start taking off clothes. He sits back on his heels and finishes the job for me, then pops open the button of his jeans and slowly lowers the zipper. The dirty old man isn't wearing anything underneath, so I'm immediately treated to the sight of the dark, trimmed hair at the end of his happy trail and the base of his straining erection. My mouth waters as I watch him free his cock and slowly stoke it. \n\nI sit up so that I'm kneeling in front of him and begin to undo the tiny buttons between the sweetheart neckline on the front of my dress. Button by button, I reveal more of my lightly tanned skin to him. My eyes stay fixed on Caleb's hand as it works his thick shaft, his fingers occasionally sliding over the head to capture shiny little beads of pre-cum leaking from the tip. \n\nMy own wetness soaks through my lacy, white panties, and the ache between my legs grows unbearable. Once my bodice is undone, I let the fabric drape open and the thin straps slide off my shoulders, exposing my pert breasts and hard, light pink nipples. His hand pumps faster. I reach under my skirt to cup the wet fabric covering my hot center. Grinding the heel of my palm against my clit, I let out a whimper. \n\nIn a thick, throaty voice that makes my insides clench, Caleb says, \"Oh, fuck, babe,\" grabs my ass possessively with both hands, and yanks me onto his lap. My giddy squeals at being manhandled are muted by his mouth claiming mine. Our tongues dance, and my hips roll back and forth so that my clit rubs against his hard cock. \"Fuck, you're wet.\" \n\n\"You have no idea,\" I tell him. Clutching at his thickly muscled shoulder for support, I pull my panties to the side and angle my hips so my drenched folds glide over his shaft, getting it slick with my juices. An animalistic sound rumbles out from deep within his chest, and I smile at the affect I'm having on him. \n\nHe grunts in protest when I move off his lap and stand on the bed, swiftly shimmying my dress over my hips. And then my panties. When Caleb's hands massage my legs and encourage them to spread apart, I reach up to brace my hands on the ceiling, just barely able to reach it. Leaning forward, he runs his flattened tongue over each of my wet lips, then between them, the tip teasing my opening. \n\nI cry out, and my legs shake. When he starts circling my throbbing clit, my knees give out, so he hooks one of my legs over his shoulder and grabs onto my hips to hold me upright while he keeps up his oral assault on the swollen, eager flesh between my legs. Looking down, I see his thick head of short, dark hair, interspersed with flecks of grey, and the lower half of his face, shiny and coated with the fluid he's lapping up. \n\nLooking up at me, he covers my clit with his hot mouth and sucks. And that's it. I'm a goner. My orgasm is an atom bomb, exploding in my core then quickly blowing through the rest of my body, obliterating everything in its path. Pleasure escapes my body in the form of a loud, primal scream as I try to find purchase in Caleb's short hair to grind myself on his face. \n\nI must pass out, because next thing I know I'm flat on my back with my head resting on Caleb's pillow, and he's at the side of his bed, taking off his jeans. All sounds are muffled except the ringing in my ears, letting me know I went ahead and deafened myself with my own screams. So very much not concerned about that right now. \n\nMy limbs are basically flaccid tubes of yummy pudding, but I manage to roll my body over to get a better look at a very naked Caleb. When he turns slightly to toss his jeans on a chair, I get a good glimpse of his high, tight ass, complete with those sexy dimples just above each cheek. ",
        "\"You have the cutest butt,\" I slur, still a little drunk from all the cumming. He turns back around and chuckles at me. \"You have the cutest laugh,\" I add. \n\n\"You have the cutest everything,\" he says, then climbs on top of me, settling his hips between my parted thighs. The head of his dick brushes against my wet pussy lips, making me shiver in anticipation. He presses a soft kiss to my forehead, the tip of my nose, and each of my cheeks, then peppers them on my neck, my shoulders, and down my chest between my slightly tender breasts. The last kiss is pressed to my belly, right where our baby is growing inside me. \n\nAs he crawls back up my body, his skin brushing over mine, the light touch makes my insides quiver. \"I love you, Em,\" he says, resting his forehead on mine. \"Thank you.\" He repeats those two words over and over. I'm not exactly sure what he's thanking me for, but it doesn't matter. I'm grateful to him, too. Grateful for him. \n\nReaching between us, he takes his cock and rubs the head between my folds, then pushes an inch or so into my opening. I moan... then pout when he doesn't go any deeper. \n\n\"Oh, you don't want to play 'just the tip' again?\" he asks, teasing me with shallow thrusts, not even popping the whole head into my wet and ready cunt. \n\n\"You're an asshole, you know that?\" \n\nWrithing beneath him, I try desperately to take more of his cock inside me. But he cruelly dodges all my attempts, still only pressing a little bit in, then pulling back out, again and again. \n\nSurprising us both, I cum again, without touching my clit and without feeling his cock glide over the sweet spot inside me. It's not nearly as earth-shattering as the last one, but it makes my insides warm and tingly and the tight ring of my opening contract around his tip. Those little squeezes murder his control. \n\n\"Fuck!\" he yells as he slams the full length of his cock into my still-spasming pussy. My walls grip tight around his thickness, trying to get as much friction as possible. He grows impossibly harder now that he's really fucking me, pounding into me so mercilessly, the force of it pushes my body further up the bed. I put my hands on the headboard to keep myself in place and grind my hips against his in time with his wild thrusts. \n\nWhen his teeth sink into my shoulder, I cry out, and my inner muscles clench around his swelling shaft. I can feel it throbbing inside me, letting me know he's close. On purpose this time, I tighten my inner muscles again. \n\n\"Shit, Em...\" he grunts into my ear. \"I'm gonna cum...\" He's fucking me faster, now. Harder. Deeper. Bottoming out with each in-stroke. \n\n\"Yes!\" I cry. \"Please... please... please...\" All I'm capable of now is straight up begging. \n\n\"Is that what you want?\" he asks, his lips at my ear, his hot breath hitting my skin with each hard pant. \"You want to feel me shoot my thick, hot load inside you... Fill you so full of it, it leaks out around my cock as I keep fucking your tight pussy...\" \n\nHigh-pitched moans are all I can manage. Hearing him say those words\u2014not through my headphones, and not just in my fantasies\u2014ignites an explosive third climax, my body bucking uncontrollably under his. My nails dig into the flesh at the back of his neck as I pull him down for a kiss so passionate, it'll leave our lips sore and swollen for days. \n\nFeeling my cunt beg him even more than my words did, he buries himself as deep as possible and releases a torrent of hot cum. He reaches up and clasps my hands in his, continuing to pump his hips in time with each pulse of his cock, but without slipping out a single inch. \n\nIt doesn't matter that he's already knocked me up. Knowing that he's emptying into me still makes me crazy with lust. Only this time, there's no guilt to taint it. And there never will be again. I smile against his lips as his body stills, finally spent. \n\nPulling back, he takes in my deliriously happy face. \"God, you're beautiful.\" His words have my walls clamping down on his dick one last time, making it twitch in response. \n\n\"Oh, man... That was fun,\" I say, because holy shit was it ever. \n\n\"And we get to to that again... and again. And that's just today. I plan to fuck you as often as possible for the rest of my life.\" Oh, yes. That, please. \n\nMy fingertips trace the fine lines at the outer corners of his beautiful eyes. \"You sure you can handle that, old man?\" \n\n\"No,\" he says and chuckles. \"But I'm up to the challenge, if you are.\" \n\n\"Please. Getting what I want isn't a challenge, Caleb. It's a calling.\" \n\nHe busts out laughing again, and I lick my lips at the sight of all his inked-up muscles contracting. It jostles the softening cock inside me, causing it to thicken and harden again. \n\nWhat did I say about getting what I want? \n\nAs the love of my life kisses me passionately and makes love to my body with unhurried strokes, I realize that everything I want is right here. \n\n* * * * * \n\nEpilogue \n\nThe valedictorian gave a decent speech. The choir sang a cheesy song. The principal handed out dummy diplomas. And all the parents of the graduating students clapped and cried, simultaneously thrilled and sad that their babies are all grown up. \n\nAs we file out of the auditorium, I spot Lacey waiting for me by the exit. How do I know she's waiting for me? Because she texted me earlier, saying that she would be. Guess she got her phone replaced. I wonder how she explained that one to her mother. \n\nI give my parents a quick wave and hold up a finger, letting them know I'll be a minute. When I reach Lacey, we both walk to the nearest empty hallway. Nobody needs to hear whatever she has to say to me. Hell, I'm not even sure I want to hear it.  \n\n\"Emilie, I\u2014\" She breaks off and looks down at her hands. After a deep breath, she lifts her head. \"I'm sorry.\" \n\n\"Ok...\" Not sure what she's expecting me to say to that. \n\n\"No, I really mean it. I do a lot of really stupid things, and most of the time I have no idea why I'm doing them or how to stop myself.\" \n\nWas that an apology or an excuse? Why I'm still standing here, giving her a chance, is beyond me. \n\n\"And I want you to know that I'm going to do exactly what you said in the note you left.\" I'm still kicking myself for not keeping a copy of that thing. It was fucking brilliant. \"I don't like myself right now. And you're right. This is the perfect time to fix that. So... thanks.\" The smile she gives me is a nervous one, but it's not deceitful, as far as I can tell. She's not that great an actress. \n\nThe only response she gets from me is a quick nod before I turn and walk away. But when I get to the end of the hallway, I look back and tell her, \"Good luck.\" \n\nTo my surprise, I actually mean it. \n\n* \n\nAs soon as I reach the courtyard, I run straight into Caleb's strong arms. When he resigned from his position at the school his relationship with me was far from a secret, so he was told that he's no longer allowed on school property. So, technically, he's not supposed to be in the parking lot either, but who really gives a shit? It's not like anything could've stopped him from being here for me. \n\nThe long, lingering kiss we share draws a few stares\u2014as does the heart-shaped pink diamond on my left ring finger. But it doesn't draw nearly as many stares as the passionate kiss Eric and Parker are sharing a few feet away from us. \n\nWhen you go through shit like we all did, nothing matters but the people you love. Other people's judgments, your own fears\u2014they just don't matter. All that matters is spending all of the time you're lucky enough to have with the people you can't live without. \n\nStill smiling at the seriously hot guy-on-guy action, I take Caleb's hand and lead him over to my parents. Dad hugs me first. It's a brief one. Nothing like the big bear hugs he used to give me, which breaks my heart. It's been like that for the past few days\u2014ever since Caleb and I sat him and Mom down to tell them I'm pregnant. Dad flew into a rage and kicked me out. I was already planning on moving in with Caleb that day, but it still hurt like hell. \n\nWhen Mom pulls me into a much tighter hug, she whispers in my ear. \"He'll come around. You know how much he loves you.\" \n\n\"Thank, Mom,\" I say. My eyes well up with tears, because as much as I want her words to be true, it's hard for me to believe them right now. \n\nAfter the ceremony, Caleb and I have Eric, Parker, and their families over for a BBQ in our back yard. Parker, Eric, and Kyle sit at one of the tables, while their parents get to know each other. My best friend and his brother, though they'll probably never be really close, have definitely formed a tight, brotherly bond since that awful day last week. \n\nHell, we all formed tighter bonds with each other that day. These people are my family, forever. Especially Caleb and the tiny nugget inside me. \n\nAfter discussing it, at length, Caleb and I agreed that I'll defer my admission to Tisch for one year. It'll give me time to grow our baby and be near my parents for a while. No matter how they feel about me and Caleb, I know that they're going to love their grandkid, and it's important to me that they get some time with him or her before we move three hours away. \n\nCaleb made me promise that, no matter what, I'd start school the fall after the baby is born. \n\n\"You belong on stage, Em,\" he told me. \"You have too much light inside you not to share it with other people. Besides, you can't tell me you wouldn't miss that rush you feel every time you perform.\" \n\n\"I don't know... That last closing night is going to be pretty tough to top,\" I said, smiling mischievously at him. \n\n\"Is that a challenge?\" he asked. \n\nAs if the call of the stage weren't powerful enough already, knowing that Caleb plans to make every closing night more unforgettable than the last makes it impossible to resist. \n\nMy name is Emilie, and I'm an addict. \n\n* * * * * \n\nBig thanks to everyone who read this series, who begged me to continue, who patiently waited out my writer's block, and who provided so much encouragement. \n\nI hope you all fell in love with Emilie and Caleb as much as I did."
    ],
    "authorname": "EverLux",
    "tags": [
        "oral sex",
        "younger woman",
        "older man",
        "masturbation",
        "blonde",
        "impregnation",
        "creampie",
        "romance",
        "love",
        "18-year-old"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/closing-night-high-ch-05"
}