{
    "title": "Pole McCoy Fits His Name",
    "pages": [
        "I were about thirteen when cousin Billy Bob Ray thought up the name 'Pole' for me. All the folks here at Yeller Dog Gap thought it fit me perfect like a plow to a mule. It were true that I were a scrawny, skinny, big-eared young 'un. If'n it weren't for the name, most folks woulda hardly noticed me bein' there. Truth be knowed, the name was not for what most folks saw of me, but what they couldn't see.\n\nIt were one hot summer day that I'd gone bare-assed swimmin' with cousins Billy Bob, Clem and Chester down at Cripple Creek. We was all sittin' on the the bank when we took to comparin' each other's privates. Even though I were the youngest, Billy Bob said, \"Whew Jasper, you has got yourself quite a pole there!\"\n\nBilly Bob, Clem and Chester just about busted a gut laughin'. At first, I was embaressed but then got to laughin' right along with 'em. On account of it had to do with my private, it became our secret joke that we'd kept from everyone else. A few years later, after the three of them gots married, Billy Bob says to me, \"Pole, if the eligible women folk knowed how you came by your name, they'd all be tryin' to get you to marry 'em.\"\n\nI was a mite slow in fillin' out and growin' to be a man. While I did have a powerful need to take a wife, the gals of marryin' age found other fellas, more to their likin', to get wed to. It were another two years, after I'd turned eighteen, before I finally caught Billy Bob's meaning.\n\nIt were Spring when Maw asked me to go up to Pine Ridge and help Bessie Conkers. The revenuers had done caught her Luther makin' white lightnin' and throwed him in jail last November. Bessie needed a man to plow her fields for plantin' and Luther wouldn't be gettin' out til winter. I went up, hitched up Bessie's mule and plowed her fields for her. I finished in the afternoon of the third day. As I was bringing the mule in, the sky opened up and it rained down bucket fulls. The rain were cold and it weren't all that warm out. I was soaked through to my hide and shiverin' when Bessie met me on the porch. Bessie looked me up and down. Her eyes kinda flickered before she said, \"Pole, come on in by the fire and I'll get you some of Luther's dry clothes.\"\n\nThe cabin were but one room and I went to stand before the warm fire as I peeled off my shirt and jeans. My back was to Bessie as I stripped off my drawers, she came over in front of me carryin' a stack of Luther's dry duds. I reached out to take the clothes and found Bessie's eyes glued to my privates. She looked kinda excited, seemed to stop breathing and wouldn't let loose her hands from the bundle. Bessie finally let her breath out saying, \"Pole, you got the biggest and most handsome cock that I've ever laid eyes on. Can I touch it?\"\n\nI musta tuned as red as a beet and didn't know what I was to say. It were the first time I was ever naked and alone with a growed woman - 'cept Maw. Bessie kept fast grip on the clothes. Her eyes seemed to get bigger and she licked her lips with her tongue. As I wasn't answering, Bessie added, \"Pole, don't fret none about me telling. Ain't nobody here but us two. If you let me touch it, I ain't never gonna tell another soul.\" \n\nHer words settled in quick and I stammered, \"OK, Bessie as long as you promise.\"\n\n\"I promise!\" she said as she tossed the clothes aside while she knelt down in front of me. \n\nBoth Bessie's hands started rubbing me just like Maw's do with the bolts of satin down at Carney's General Store. My private tingled from her touching. When she started in kissin' and lickin' at it, I really didn't want her to stop but felt I had to give her warning. I kinda whispered down, \"Bessie, if'n ya keeps it up, it gonna get even bigger. I can't stop it.\"\n\nShe backed up a mite bit, looking up to say, \"Pole, I's been a long time without a man and I ain't never been with one as big as you. Just let it go for me. If'n we winds up doing what comes natural, I'd be much oblidged to ya.\"\n\nHer words put my mind at ease and, without me answerin', Bessie started kissin' and lickin' me agin'. As I swelled and rised up, she opened her mouth and tried swallowing me whole in. This were the first time a woman had ever shown me such attentions and I was likin' it powerful lots. I felt the tip of my cock pass from her warm sucking mouth and then slide into her throat.\n\nShe tried but couldn't get me all in. Instead, she backed off some and started flickin' over and around my tool with her tongue while she sucked it like it were one of them lollipops ya gets at Carney's. I knowed, from all the times I'd played 'Pop the Weasel' with myself, what was gonna happen if'n she kept agoin' on.\n\nJust as I was gettin' near to poppin', Bessie pulls herself back. With her holdin' my throbbin' private, she leads me o'er to the bed and sets me back on it. She let go a me and, as I watched, undid her dress. It fell off and I was sured my mouth dropped open as she kicked it away from her feet.\n\nI couldn't help from starin' at Bessie's tits. They were huge with big red circles around nipples seemin' to fit perfect with her two hills. It were like she done read my mind 'cause she knelt on the bed with her knees on aside of my legs. She pressed forward taking my face between her two rounds. I started kissin' and licken' her soft skin just like she'd done to my private. Cupping the bottoms of her two beauties with my palms, I started suckin' on her nipples and felt them swell.\n\nBessie got to moanin' some and started rubbin' her own hot, wet private agin' my rod. She was breathin' hard when she pushed me down on the bed and crawled up over me. Whilst her right hand spread open her shiny pink, her left bent the tip of my pole agin' it. Real careful like, she lowered herself down slippin' me inside her. It seemed we was an over-tight fit at first. Bessie struggled some, with me bein' so big, but didn't stop. If'n she weren't so juicy, I'd a gotten stuck half out. But, she kept acommin' down set on takin' all a me. I wased steely hard and ne'er felt so gawld darned good as when Bessie's insides pressed agin' and clamped on me as I slud in. She paid no matter to the tight squeeze.\n\nOncest I was full sunk in, she stopped and was just a grinnin' like Granpaw chawin' on a piece of fresh cheery pie. Her squeezin' eased up and she wiggled around some. Then Bessie starts ta pumpin' herself up and down - real slow first and then faster. When she starts to floppin' around like a catfish outta water, I grabbed holt of her two big mounds ta keep her from fallin' off. Her arubbin' on me sends pleasurable shivers through my bones. There weren't no way I could hold myself back. My hot seed raced up my pole and bursted up inside Bessie's hot and wet canal. I kept on spurtin' with both us pantin' and groanin' loud whilst I flooded her up. Bessie got to jerkin' and screechin' like she was bein' stung by bees. \n\nWhenst our 'ruptions tuckered out, Bessie dropped herself down atop me. We laid there fightin' to breathe. After a spell, my private starts to shrink slow but Bessie stayed alayin' on me long after I was full soft. When she finally rolled off, we was both sopping with stickey wet.\n\nWe enjoyed keepin' company well nigh into the night. Bessie took me in lots more times at different angles. In between, she teached me other things a man and a woman could do to each other that were mighty pleasin'. Just before we fell asleep, Bessie said she was a mite tender and I wased afraid I'd hurt her. It were a load of my mind when she says that it were a good kinda hurt and would mend naturally in a day or two.\n\nIn the mornin', I let Bessie pop me one more time usin' her hands and mouth. As I started back home, she yelled out, \"Pole, if'n y'all come back and see me agin' ya knows I be much oblidged.\"\n\nI did go back a few times more. In between my trips over to Pine Ridge, I let a few other gals in on the secret of my name and used some of the things I learnt from Bessie. But those be other stories. "
    ],
    "authorname": "Uncle South Loop",
    "tags": [
        "bessie",
        "billy bob",
        "pole",
        "hot wet"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/pole-mccoy-fits-his-name"
}