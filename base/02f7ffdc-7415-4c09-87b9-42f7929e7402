{
    "title": "How I Met Lisa Marie",
    "pages": [
        "My trip to Boston put me on Interstate 90 in Montana east of Butte. My Buick's cruise control was set a couple of miles per hour above the posted limit and I slowly crept past a single motorcycle rider that was in the right hand lane. \n\nThe bike didn't look like a Harley, but it could have been. The rider was definitely a curvy lady. Women just sit a bike different than men. I think it's because of their different hip joints. As I slowly passed her I couldn't see much of her face because of her full helmet.\n\nI eventually pulled ahead of her and glanced up occasionally to kept sight of her in the mirror. I was about ready for a break and had already chosen the next exit for a pit stop.\n\nI turned the cruise control off and lifted the handle for the right blinker. In my mirror I saw the lady biker turn on her blinker and follow me off of the highway.\n\nThe long downhill off ramp ended at a stop sign and there were two gas station/convince stores to the right about fifty feet. \n\nI liked the brand of gas on this side of the street better so I pulled onto the island nearest the curb. The tank needed about twelve gallons of gasoline so I swiped the card and entered my ZIP (zone improvement plan) code. \n\nNot being Oregon, I put the nozzle into the dark hole in the side of the Regal and pumped the gas myself.\n\nThe lady biker pulled next to the pumps across the street. I casually watched her but only saw leathers and a head of curly brunette hair. She looked like a normal sized person. You know, not too fat (well maybe a bit), not too short or tall.\n\nAs my pump dinged at nine gallons, I heard two motorcycles come off of the westbound lanes and stop at their sign. There were no services on that side of the freeway so they came under the overpass and pulled into the gas station across the street.\n\nThey were definitely lightly muffled big Harleys. I couldn't make out the logos on their vests, but I didn't think that I would invite them to my garage for beers.\n\nThe leather clad lady came out of the store with food stuff and straddled her machine. I saw the one guy from the Harley duo try to strike up a conversation with the eastbound lady but she didn't seem interested. \n\nThe lady biker put her refreshment into her saddle bag and donned her helmet. The shorter guy moved over in front of her bike and again tried to engage her in conversation. She started her two wheeler and backed away from the bearded bulging biker. \n\nAs she was turning onto the street from the gas station, the short fat dude, gave her the finger and a ram it up your ass, arm motion. The leathered lady carefully engaged the onramp and throttled up and onto the eastbound lanes and out of sight.\n\nI laughed to myself and went inside to get something to eat and drink as well. As I came out, the two Harley bikers were heading up the east bound ramp at flank speed and maximum noise.\n\nShit, I didn't like the looks of that. Those two riders were headed west until they stopped for gas. I wondered if the lady biker had anything to do with their decision to change directions.\n\nI opened my trunk and put the clip into my pistol. I laid the gun next to my eats on the passenger's seat. I didn't know what the local laws on carry loaded hand guns in the car was so I covered it with my map. Yeah, I still use a paper map, but I do know how to fold it back up.\n\nThe bright sun was near setting in the clear September evening. Normally I would put my marker lights on about this time, but decided not to under the circumstances.\n\nThe speedometer passed the seventy mark as I hit the top of the on ramp. As far down the road as I could see there was no traffic. No motorcycles. I set the cruise at 85 and kind of relaxed and started in on my Gala and Nutter Butters. \n\nCalculating: She would be doing 65 mph, her speed when I passed her, they would be doing as fast as they could. I figured that I would catch them in a few to 10 minutes. My plan was to just bird dog her until I figured she was safely out of reach of the two scruffy riders.\n\nFifteen minutes later I saw the three bikes in what looked like close proximity. A gentle rise blocked my view for about twenty seconds and when I crested that next ridge, there were no motorcycles where there should have been three.\n\n\"Shit\", I said out loud and pushed the pedal down for ninety five. As I sped into the still evening a small waif of dust gathered ahead on the right shoulder. \n\nI braked hard just before the dust and pulled into the center median. I grabbed my pistol, and keys. \n\nI put the keys on top of the left front tire and forced my adrenalin filled body to walk slowly toward the right shoulder. \n\nI could see evidence of a disturbance in the gravel and looked real cautiously over the edge of the shallow but long slope. I had found my three motorcycles randomly bunched at the bottom of the grade fill. \n\nThe only person I could see was the back of one of the vested bikers. He was sitting and facing away from me. Out from either side of his waist were a set of black leather covered arms and hands. It had to be the lady biker. \n\nShe was mostly crying and screaming, \"Get off me you bastards\". I could hear two different male laughters. \n\nI grabbed the slide and put a round in the chamber. I got on my knees and peered thought the short dry grass. I realized it had been a long time since I had done a low crawl. \n\nMy path down through the dead grass was planned so use the tall guy's body as a blind so the short guy would not see me. It was a different path than the cycles had torn down the slope.\n\nI started crawling.\n\nI was about thirty feet from the trio and the short and fat guy yelled at her, \"Go ahead and scream bitch, ain't no bode gona her ya out hea.\" Both guys laughed. \n\nShe screamed again and flailed her hands and arms hard. They both laughed again.\n\nShe screamed again and must have landed a kick to the guy. He was mad, \"Yu fuck'in bitch, kick me 'n I'll cut y'ur cunt lips off 'n fuck ya in da ass.\" \n\nI saw him swing his fist and heard the crack as he hit her hard. That seemed to take the fight out of their prey. He held his knife up and then reached down and started to cut what I hoped were just her clothes. I did see the tall guy take the gloves off of her listless hands.\n\nI narrowed the gap slowly. Using the tall guy for a blind, I covered the remaining distance and I heard what sounded like rythematic slapping. I figured she was getting fucked. \n\n\"Hang on sweetheart, I'm almost there.\" I whispered almost silently. \n\nI got behind the tall guy's back and carefully pivoted around and pulled my feet under me. I put the safety on and swung the hand cannon, hard.\n\nI hit him just above his right ear. He let go of her arms and rolled over on his left side and grabbed his head with both hands. \n\nThe short guy kept on stroking into the semiconscious lady's personal space. \n\n\"Take dat ya stu'k up beetch. Yu ain't so al hi 'n mighte now, 'r ya? I'm gonna fuck yu'r pussy n yur ass all nite, and den I'm gonna stake ya spread eagle 'n leeve ya for da coyotes.\"\n\nHe was holding her hips and thrusting hard into her. He didn't even notice his partner's lack of interest. \n\nI couldn't afford to misread the injured guy, so I moved back up the hill out of arms range and announced my presence.\n\nI took the safety off and pulled the trigger. \n\nThe muzzle blast from my .45 must have scared the shit out of him. The slug was aimed to just miss his head but he must have thought he'd been shot. \n\nHe started to yell and curse at his friend, but when he looked up he only saw the barrel of my High-Point aimed right between his eyes.\n\n\"O fu'k! Haay, dis ain't no 'a of y'ur bizness ass hool.\" He challenged.\n\nI replied with defiance,\" First of all, asshole, it is my business. So get the FUCK off her and show me your fuck'n hands. I've already proved that I will pull the trigger. You have a chance to live. So don't fuck it up by being stupid.\"\n\nHe pulled up onto his knees and his pecker slopped out of the pussy he had been using with the owner's consent. His hands were even with his shoulders and his palms faced me. \n\nHis eyes were focused on the large muzzle pointed at him and he didn't see her right boot flash out and catch his cheek just below the eye. He went backwards and slid the final eight feet to the bottom of the slope.\n\nShe started to whimper from the pain in her own body and she collapsed back onto the ground.\n\nThe tall guy started to move and swear. I waited until he looked around and appraised the situation. It was getting darker, but he had no trouble identifying the barrel of a .45 caliber semi automatic pistol aimed at his face. \n\n\"You make a move that I don't like and I'll kill you! Understand!\" He shook his head to indicated understanding.\n\nThe short guy had recovered and crawled onto his knees again. I said, \"You, asshole! Get her bike up on its wheels and start walking it down that-a-way.\" \n\nI pointed with my left had toward where the highway and the grade smoothed out about a couple hundred yards to the east.\n\n\"Now when you get down there, you'll be out of my range. But if you're too stupid to play it straight and follow directions. I will kill your buddy here then I'll run you down and kill you! Remember, you can still die out here tonight.\"\n\nHe pulled her bike up on its wheels and started walking it toward the place that I'd indicated. \n\nI pointed my gun at his buddy. Neither one of them wanted any part of me or my .45. . The lady in chaps started to sit up and look around. I asked. \"Can you crawl on your hands and knees?\" \n\n\"I think so,\" was the weak reply.\n\nI stuck my nose next to her temple and my lips compressed her hair into her ear and I whispered, \"Start crawling up the hill. If you hear any shooting, keep going, don't stop! Got it?\"\n\n\"Got it!\" As she started up the slope. \n\nShe had gotten about five feet or so up the hill and I caught up to her and again whispered into her ear, \"There's a green car in the center divider and the keys are on top of the driver's side front tire. If you make it that far and I don't, take that car and get the hell out of here. Go hard and fast!\"\n\nShe nodded as she slowly clawed her way up the slope. The short guy was returning from where he had parked her bike on the edge of the asphalt. \n\n\"You two guys go through the willows, climb that fence and head over the rise away from the highway. If I get this close to you again, I'll shoot your knees n balls off. You will die! Comprende Amigos?\" \n\nThey were starting up the field when I put my knife blade into each rear tire. The sound was satisfying because it was a safety measure for me. \n\nI dug in hard to reach to top of the slope before the slow moving crawler. It was a draw. I put my left arm across her back and under her left arm. My lift moved her to a partial walking position. \n\nWe made it across the two lanes to my car and I put her gently into the passenger's seat. I grabbed the keys from on top of the tire and pulled the green coupe across the interstate and stopped at her bike. A Yamaha.\n\nI looked at her and she didn't seem ready to ride. I needed help. I opened the hood so the supercharged Series 11 engine was visible.\n\nI turned on the hazard flashers and hoped they wouldn't attract the two idiots. \n\nAbout three cars and a several 18 wheelers later a pickup truck with an older rancher and his adult son stopped and asked if we needed help. \n\nI told them, \"Yes. My sister spilled her bike and is afraid to drive it. Could you load it up into your pickup and store it until she can send her husband for it?\"\n\n\"What about the car?\" the young man asked. \"Just a signal that we needed help.\" \n\nThey liked my ingenuity. And agreed to haul and store the bike in the barn at their ranch. I grabbed the saddle bags and threw them into the back seat behind my new passenger.\n\nI helped them load the 650 cc bike into their 4X4. It took all three of us and a 2x12 ramp to accomplish our task.\n\nI got the rancher's address, the Five Lazy K's ranch, and contact phone number, the local barber shop, and slipped them a fifty for gas. \n\nThey didn't want to take any money, but finally the son took the money and promised that the bike would get proper storage in the barn and under a canvas. He said that they would unload the bike with the tractor.\n\nI thanked them and slid into my comfortable leather driver's seat.\n\nI pulled the Regal out onto the eastbound lanes, turned the headlights on and accelerated hard up to maximum cruise speed. \n\nI looked at her and saw that her jeans had been sliced from inseam to belt buckle, twice. Once on each side of the zipper. Her panties were pulled out and cut and her fur bush was clearly visible. \n\nYup, the carpet matched the drapes.\n\nI don't know if I'm a typical male scum bag or what, but the lady just escaped a bad situation and here I am checking out her bush. \n\nSometimes it ain't easy being me. OK, so give me five minutes in the penalty box! WTF!\n\nThe bruise and knot on her left cheek bone was the result of getting hit hard. \n\nHer left hand clearly showed the signs of being married to someone with a lot of money to spend on diamonds.\n\nThree miles later I asked, \"What do you need first, a doctor and or a cop?\" \n\n\"Nothing! I'm FINE!\" and she made it sound definite. \n\nThe word \"Fine\" from a female is the end of any reasonable discussion. I've learned that's the time to switch topics. So I did.\n\nI couldn't imagine where she was emotionally. But I had a plan. I had been mentally working on this for several months anyway so I started recalling ,out loud, a collection of the simple and good things from my life.\n\nThe freshness of a crisp fall morning. The smell of hot pepperoni pizza. You know the one, just before you take a big bite and burn the shit out of the roof of your mouth with the hot sticky cheeses. \n\nI filled in as much detail as I thought necessary and moved on to the next memory. I didn't want to bore her with too much detail.\n\nThe road was smooth and wide and we traveled comfortably at the legal limit. I remember the days when traveling through Montana there was no upper speed limit. \n\nI asked her if she wanted any food or water. The reply was always just a headshake for \"No\". \n\nI went back to the story of my life's sweetest memories. \n\nThe smell of newly mown alfalfa, orange blossoms so sweet that you could almost taste the scent. Freshly plowed earth. The heavy smell of rain just before the clouds bust open. \n\nThe sight of an oncoming ship at midnight in the middle of the north Atlantic. Yeah, I was there, a troop ship. The USS Patch.\n\nAbout 9:50 were her first words, \"I thought you were going to kill those two guys.\"\n\nI replied, \"Was never my intention. I just wanted to get to you and give you an option.\"\n\n'What? What option?\"\n\n\"Well, riding here with me or being off in a ditch with those two.\"\n\n\"I'd rather be riding my own bike and never have seen those two bastards. How did you know where I was?\"\n\nI recounted to her the events as I saw them. \"You were riding alone toward Minnesota. Your bike's plates told me that. They were headed toward Idaho. After the fuel stop and you not wanting to be sociable, the short guy gave you a couple of impolite hand gestures as you left the station. And the fact that they headed up the eastbound ramp like Ghost Riders.\"\n\nWith a slight head turn toward me,\" Ghost Riders?\"\n\n\"Yeah, rid'n hard.\"\n\n\"Ok, I understand that, but did you see them run me off of the road?\"\n\n\"No. I had seen all three of you from a distance, but when I dropped into a dip was when you got run off the road. I saw some dust on the shoulder and that helped me pin point your location.\"\n\n\"So you were looking for me?\"\n\n\"Yes I was. I didn't like their change of direction. So my plan was just to just stay close to you until they tired of their game.\"\n\nThe pause was almost twelve minutes when she asked, \"Would you have killed them if they didn't do what you said?\"\n\n\"Yes, but they left me an out, so I didn't have to.\"\n\n\"Are you a cop or something?\"\n\n\"Nope. Just a guy named Jack.\"\n\n\"Well I'm just a gal named Lisa Marie.\"\n\nI dug into the door pouch and pulled out one of my custom business cards. I folded the info for her Yamaha next to it and offered it to her. She took the card and looked at it. Without comment the card and bike info got put into her leather jacket's breast pocket.\n\nNow my business card is unique. It is the size and shape as a playing card but on the face it has two different characters morphed together at the middle.\n\nThe back is blank so I can hand write current information for specific occasions. There is no printed information on the plastic coated card. \n\nI continued the narration of my life, well just the great parts of it anyway. \n\nA bit after midnight we came to a small business district just off the freeway. There was a nice looking motel and I told Lisa Marie,\n\n\"Hey, I need to get some sleep. I\"ll get us separate rooms and I suggest that you rest up too.\" \n\nShe started to say something, but accepted my offer. Again without comment. The night clerk was still up watching TV and gave us two rooms on the third floor. I walked Lisa Marie to her room and told her, \"I'll see you in the morning.\" \n\nI handed her the saddle bags and she closed the door without looking back. I heard the chain get engaged.\n\nI went out to the front parking lot and moved my ride around behind the building. I put it down a gravel road so it couldn't be seen from the motel parking lot or the highway.\n\nI slept until about 08:37 and the shower felt good. I went to Lisa Marie's room and knocked. No answer. I went down stairs to the light breakfast bar set up in the lobby. The clerk came over to me and handed me a note. I opened it and read: \n\nJack, Thank you for all that you did for me yesterday. I will always remember the genuine kindness of a stranger. I'm glad that you did not have to kill those men.\n\nI am OK, and Thank You very much. Sincerely,\n\nLisa Marie\n\nThe penmanship was perfect and the lines were parallel on the blank note paper. It was written this morning because she referred to yesterday's events.\n\nI tucked it into my pocket and asked the clerk when she had left. \n\nHe replied, \"About an hour and a half hour ago.\"\n\n\"How did she leave?\" I asked\n\n\"She had me call her a cab from town.\"\n\n\"Do you know where the cab took her?\" I asked.\n\n\"Let me make a call and see what I can find.\"\n\nA few minutes later he came back out of the office and said, \"Marty took her to the Chevrolet dealer. Then about an hour later he saw her driving a new Silverado off of the showroom floor and headed toward Interstate.\"\n\nI thanked him and finished my waffle and orange juice. I retrieved my Buick form its secluded parking place and headed into the midmorning sun. The sky was blue and the scenery pleasant.\n\nI thanked my guardian angle for the new day and slumped back to enjoy the drive. I set the cruise control just under the limit and headed for my next stop, the Little Big Horn river.\n\nMy thoughts drifted to Lisa Marie and the events of yesterday. I wondered who she was. I sincerely hoped that she was physically all right. I also wondered how she was able to get a new pickup truck from a dealer in under a couple of hours. I was impressed. She must have some financial pull somewhere. Maybe she traded her diamonds for the truck. I wished her well. \n\nI never saw her again nor did I see the two guys that came close to getting killed that night in that empty ravine next to the interstate\n\nSeveral Years Later\n\nThe cops had just arrived and put me in handcuffs. My shoulder was hurting from the bullet that apparently hit me. I was put in the back seat of their patrol car and was told the EMT's (emergency medical technicians) would be here soon. ",
        "GSWs (gun shot wounds) are expedited in the ER (Emergency Room). There was no trace of the bullet, but it must have been a small bullet probably a .25 or smaller. The exit wound was small too. I got patched up and hauled off to jail. \n\nI was assigned a Public Defender and made my first court appearance the next afternoon. The Charge? Murder, no bail. \n\nThe Public Defender was adamant that the charge would never hold up in court and that manslaughter ( a bail able offense) or self defense were the only possible charge. \n\nThe District Attorney cited my out of state residence, callus disregard for human life, etc Yada, Yada, Yada, etc. The judge agreed and I was sent back to jail to await trial.\n\nThe two kids that were robbing the Speede --Mart the one with the gun had a history with the authorities. His partner was the mayor's son, no record. My bullet passed through the first boy destroying his left arm and killed the mayor's son (the second robber).\n\nThe guy with the gun said that I fired first and he shot back in self defense. The mayor's son was still dead. The clerk was hiding behind the counter and didn't see a thing. Smart clerk. \n\nThe little girl that was being held by the gunman did not know who fired first. She was just scared.\n\nThe mayor and district attorney were golfing buddies. Days later my public defender filed a motion to have the charges reduced. He also argued for a Corner's inquest instead of a trial. The judge almost agreed.\n\nSo the charge was manslaughter in the second degree. Bail could be arranged.\n\nIf I bailed out, I would have to post two thousand dollars for the bond, and then rent a room until the trial. \n\nThe jail was really crowded, but I was assigned to the annex. Not so crowded. I decided to let the county support me for the next three weeks. The District Attorney himself was going to try the case. The trial date was set for the 14th of next month. \n\nThe DA got appendicitis and had to pass the case to an assistant district attorney. The new ADA got a continuance of a week so she could get up to speed on the case. \n\nI guessed that was so that I could finish painting the second floor hand rail in the annex.\n\nThe Office of Assigned Council, (public defender) was a young guy and had too many cases. The new ADA wanted to settle out of court for manslaughter two. Eleven years. The county public defender brought me the offer. \n\nMy reply? \"NO fuck'n way, it was an accident brought on by self defense\". The PD agreed and left quietly.\n\nADA Hutchins offered again. Same answer from me.\n\nFinally she wanted a meeting. The three of us sat at a table in one of the jails conference rooms. I was the only one chained to the floor. \n\nShe was a nice looking blonde but a hard assed attorney. It wasn't a power suit, but it was tailored nicely. Low black pumps and semi short hair that I guessed came in a bottle but was nicely done. No rings to hint at a husband.\n\nI explained the circumstance of the shooting. I had come up to the door of the Speede-Mart and was about to enter when I saw the guy with the little chrome pistol pointing it at the clerk. He had his left arm around the little girl's neck and was pulling her tightly against his midsection. She was crying and having trouble breathing because of the choke hold he had on her. \n\nI went back to my trunk and loaded my .45 and waited outside so at least the clerk wouldn't get caught in any shooting. I wanted to give the little girl an option. When the guy with the gun came out I told him, \"Step away from the girl. Drop the gun!\"\n\nHe shot at me instead. I fired back. My one bullet hit the gunman and went through him and fatally hit the second robber. The guy with the gun didn't leave me an out, I shot in self defense. It was never my intention to hurt or kill either of those two boys.\"\n\nShe asked, \"He didn't leave you an out? What does that mean?\" Her voice was stern but not angry.\n\n\"An out, a reason for me not to shoot. He pointed his gun at me and pulled the trigger first. I had to shoot back to save my own life. His bullet hit me in the arm.\" I indicated my left upper arm.\n\nShe didn't make another offer, she just stood up and stated, \"This meeting is over\" as her heels clicked toward the door. After she was gone, my PD and I guessed that a trial was eminent. \n\nThe next day my PD called a meeting. We sat in the annex conference room talked almost an hour. At least I wasn't chained to the floor. He must have been looking for character references or something. \n\nThen he asked me, \"Do you have a business card?\"\n\n\"Sure, but they are in my car,\" I replied.\n\n\"Were there any on your person when you were arrested?\"\n\n\"No, they are non standard size and I only carry them in my car, not my wallet.\"\n\n\"Describe one to me,\" he asked.\n\nI gave him the Cliff Notes version of my business card and then he told me that a trial date was set for next Tuesday at ten of the clock.\n\n\"Oh great, I get to finish painting the banister on the south annex stairway now.\" I mused.\n\nHe smiled but was confident that I would be acquitted. He also said the ADA was a tough customer. \n\nI translated,\" You mean a hard ass?\" \n\nHe just smiled and said, \"Call me Brian\". \n\nThe next day Brian showed up again. Holy shit, I must be on his good side or something's up. Apparently he had gone to the impound lot and searched my car. He had one of my business cards in his hand.\n\n\"Is this yours?\" He asked.\n\n\"Yup, that's mine.\"\n\n\"Tell me about it.\"\n\nI told him the entire story. The concept, the execution and the meaning of the characters. He seemed satisfied and left kind of abruptly.\n\nTwo days later, Thursday, Brian came and told me the manslaughter charges would be dropped if I pleaded guilty to discharging a fire arm within the city limits, a misdemeanor. I would be fined $259 and jail as time served.\n\nHe said, \"Take the deal.\" \n\nI took the deal and signed the papers. He said, \"The judge will sign this and you will be processed out tomorrow and I will see you then.\"\n\nThe next afternoon Brian met me at discharge. I asked about my pistol and was told it was being held as evidence. Damn! I liked that gun.\n\nHe offered me a ride to my car. \n\nNow things seemed to take a bit of a strange twist. My car wasn't in the impound yard. It had been towed to a garage where the battery was being charged and the tank had been filled with fresh gasoline. The wash and wax made the old girl look almost new. \n\nI asked him, \"Who sprung for the tow?\"\n\nHis reply, \"My aunt.\"\n\nI asked again, \"Why would she do that? Does she know me?\"\n\nBrian looked puzzled too. He shrugged his shoulders and said, \"I don't know, but you need to do one more thing before you head out of town.\"\n\n\"What's that?\" I asked.\n\n\"Join my aunt and I for an late lunch, right now.\"\n\nI tried to beg off, but he was a hard case himself. \n\nHe continued, \"And beside, maybe you could thank her for the money she spent on your tow.\"\n\nHe had a point. Ingratitude was not one of my many faults.\n\nWe headed across town in his Nissan coupe. The drive into the country club was long, winding and had more flowers, shrubs and trees than most parks. We didn't use Valet so we had to walk about a block to get to the front door of the gargantuan club house.\n\nThe Ma\u00eetre 'd recognized Brian and silently escorted us into the depths of the lavish establishment.\n\nHe stopped at a large secluded table and Brian and I were face to face with: \n\nAssistant District Attorney Hutchins. \n\nAll of a sudden I didn't want to be there. Shit, Brian had sandbagged me. \n\nBut then the most pleasant voice spoke, \"Brian, Jack, thank you for coming. Please sit down and order a drink. Lunch has already been ordered and will be here soon.\" \n\nBrain began, \"I know that we all know each other. But this is my aunt, Ms. Hutchins.\"\n\nI nodded toward the professionally dressed lady and received a pleasant smiled in return. She offered her hand for a gentle shake. Her skin was soft but her grip was firm. \n\n\"Nice to meet you, again\" she said. \n\nI just nodded and replied, \"Ma'm.\"\n\nBrian ushered me into the chair that was just opposite of his aunt and he used the chair that was next to me. \n\nMy vodka tonic with a lime twist was a tall. I needed that. Brian ordered a CC (Canadian Club) and water. His aunt was drinking good scotch. I could smell it.\n\nOur host began and talked like she was reminiscing. It was like we had all experienced the same things at the same time. She told Brian and I about the beauty of the first snow fall of the winter . The smells from the kitchen on thanksgiving just before the dinner was to be served.\n\nThe thrill of pushing a snow mobile to its limits across a frozen lake. The mornings in spring when the blossoms and the sun and birds all mix together. The power of the surf on a California cliff. The antics of a new puppy. The innocence of a child.\n\nI knew about everything she spoke. It was like we had lived parallel lives. I was getting comfortable setting at the same table with her. All of a sudden her ass didn't seem quite so hard.\n\nThe lunch was Rigatoni and salad with breadsticks. I ate too much.\n\nI didn't see them coming, but Brian did. He stood quickly and stepped to greet the two ladies that had approached the table.\n\n\"Hi mom.\" As he cheek kissed the most beautiful lady that I'd seen in quite a while. \"Aunt Jenny Lynn.\" And a similar kiss to the second most beautiful lady that I'd seen in a months. \n\nADA Hutchins gained about 3 points on the MILF scale when I realized that she was a sister to these two elegant looking ladies. Now if she just wasn't a hard ass attorney that had wanted to send my ass to jail for 11 years. \n\nFuck, no respect!\n\nI stood and was introduced simply as, \"Jack.\" Brian went around the table and pulled out the two chairs next to his aunt. His mom and aunt Jenny Lynn were seated, one on each side of their sister. \n\nA waiter appeared with their drinks. \n\nThey chatted; I mostly listened and enjoyed the pleasant company and the plush surroundings. Looking at three beautiful ladies on the other side of the table didn't hurt either. They did look my way on many occasions but did not stare. Plenty of diamonds on the ring fingers.\n\nDuring the second round of drinks, Brian's aunt spoke. \" Brian, I want to tell you a story and Jack, would you please indulge me?\" \n\nI nodded acceptance.\n\nADA Hutchins Story\n\n\"Several years ago I was attacked and rapped. Only your mother and your Aunt Jenny Lynn know this Brian, so this is just between us.\" Brian's eyes opened wider and he nodded for his aunt to continue. \n\nI was feeling strange all of a sudden. I almost questioned why she would tell her nephew something that private with me at the table. But I knew enough to keep my own council and focused on the red lips and easy voice that was telling the story.\n\n\"I didn't go to the police because the two men escaped. They were run off by man that was my benefactor. He was the strongest most in control person I'd ever met. He saved my life of that I am certain. I had fought back. \n\nThe one man that actually rapped me threatened to kill me if I kicked him again. I was sure that he meant it because I did kick him a second time.\n\nAfter the two attackers were driven off, I was treated to that man's personal safety, and the comfort of his voice. He told me about all things good. His life must have had plenty of beautiful moments. \n\nI listened as we drove. I didn't show it, but I listened. He continued to talk, it was dark but his voice was strong yet soft. He conveyed a sense of joy and brightness and, after a while, I felt secure in his presence.\n\nBy the time our drive ended, I too was thinking about those kinds of special moments. Those moments that make life worth while. It was a turning point for me from the despair of the day to hope of tomorrow.\n\nHis face had dimmed in my memory, but his voice is still crystal clear in my heart. \n\nI did go to my doctor, (she reached out and squeezed Brian's mom's hand) and got private medical care. My beloved sisters insisted that I go to a psychiatrist for my well being.\" (Her other hand grasped and squeezed Jenny Lynn's hand)\n\n\"I did. It took me nearly two years to work thought that terrible ordeal. I had other issues to deal with also. Jenny Lynn, you and Mattie Mae have been my most ardent supporters. I love you guys so much.\"\n\nAt this point I realized that only Brian and I did not know the story that was being told. Brian's aunt had assembled her support team for this telling to Brian. I still wondered why she chose to tell him at this particular time.\n\n\"My marriage was in shambles and I hated being a lawyer. But thanks to all of you, (her eyes locked on mine for a second too) things are much better now. I love my job and I look forward to each new day. I'm happy and I'm excited about you and Jan getting married.\" (She focused at Brian)\n\nShe had my business card in her hand and was sliding it through her fingers as she talked. I hadn't seen Brian give it to her but I was watching her face and must have missed that. \n\nThe lady lawyer leaned slightly toward me and said, \"I am sorry that you killed that boy at the robbery. I know that you never intended to hurt either of them. He didn't leave you an out though, did he? \n\nThat is why I have dropped the charges against you. My boss will be pissed, but I can handle him.\"\n\nShe dipped quickly into her purse and took out what looked like one of her business cards and penned a number at the bottom. Her well manicured nails pushed the card gently in front of me on the linen cloth. \n\n\"I am sorry for your time in jail, but that is over with now and I want to offer you a phone number, my cell. I would like you to call me some time.\"\n\nI took the card in both hands and stared unbelievably and speechless at her. I had not a clue as to what was going on! I felt my face flush and my eyes tear. I couldn't even thank her for dropping the charges.\n\nThe not so hard assed lady across the table held the edge of my business card up to her cheek, looked me straight in the eyes and said,\n\n\"You gave me this card four years ago, that night in Montana. I only left you a note that next morning. I am sorry I did that. I owed you so much more than just a note. But that was my mental state of affairs at that time. I hope that you will understand and forgive me.\" \n\nThe lady from four years ago stood up, as did Brian and I, and walked around the table. Her arms went around my chest, grabbed me in a powerful hug. A hug that had apparently been a long time in the making.\n\nIt was a high pressure hug! A perfect blend of tits, tummy and thighs. Damn did she feel good. I almost put my hands on her ass, but realized my error quick enough to guide both hands onto her back just above her waist band.\n\nAs she hugged me she whispered up into my ear, \"Your gun is in my desk. Is that the same one you had four years ago?\" \n\nWhen she released me she stepped back and wiped a tear from her eye.\n\n\"Yes it is.\" was my reply with a slight head nod. She again spoke softly into my ear.\n\n\"I don't like guns, but I like you having that one! And when I said call me, I mean tomorrow. Ask me to lunch, please.\"\n\nIt took my brain only a split second to remember every detail of the evening that we met. The sweet taste of her name came onto my tongue and hers at the same time, Lisa Marie."
    ],
    "authorname": "seattlejack",
    "tags": [
        "mature",
        "romance"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/how-i-met-lisa-marie"
}