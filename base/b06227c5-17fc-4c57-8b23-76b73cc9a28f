{
    "title": "Side by Side",
    "pages": [
        "I'd hoped to interest my wife Leanne in fooling around before going to sleep. But the endless flood of email, and a presentation to prepare for the morning, had delayed me at my computer. Now as I climbed the stairs, I saw our bedroom light was out. So much for that plan.\n\nI brushed my teeth, changed into pajamas, and slipped into bed beside my wife. I turned out the light and listened to her breathing, slow and deep, not really snoring but clearly asleep.\n\nNot yet sleepy and still a little horny, I let my mind wander back to the last time Leanne and I had made love. That evening, she'd taken a shower just before coming to bed, and her skin was warm and moist, still pink from the hot water, as she slid next to me naked between the sheets. The pleasant memory caused my dick to stir.\n\nI slipped my hand beneath my waistband, and ran my fingers along the underside of my penis as the mental replay continued. I recalled mounting her, sliding inside her warm yielding pussy, her legs rising on either side, her breasts shaking in time to the pounding rhythm.\n\nNow fully erect, I wrapped my fingers around my dick and slowly stroked its full length. The motion milked forth drops of precum, which I smoothed over the crown of my penis, with a quick shiver of pleasure.\n\nI paused. I wanted jerk off before going to sleep, but I was sheepish about getting caught. I smiled at my own embarrassment, like a hormone-soaked teenager sneaking off for a bathroom wank. What the hell, I thought. I'm a grown up. I can jerk off in my own bed if I want. Besides, Leanne seemed deeply asleep by now.\n\nI slipped out of bed and retrieved a wash cloth from the bathroom to clean up when I finished. Then I slipped back into bed, pulled the covers up, and carefully slid my pajama pants down past my knees. My dick had half wilted, but with renewed stimulation it soon came back to full attention.\n\nI stroked myself under the sheets, slowly at first, then faster with gathering warm pleasure. The sheets caught against my moving knuckles, so I made a tent by raising my knees. I slid my pajamas down to my ankles, and increased my tempo. The bed shook slightly with my motion. But then I felt other motions. Suddenly, I heard Leanne burst out with laughter.\n\nImmediately I froze and flushed with embarrassment. I released my grasp around my dick, and slowly lowered my knees.\n\n\"What are you doing?\" asked Leanne.\n\n\"What do you think I'm doing?\" I replied.\n\n\"Well, I'm not sure,\" she said teasingly. \"But I suspect you were jacking off.\"\n\n\"Well, maybe I was,\" I replied, churlish in my shame. \"I thought you were asleep. Sorry I woke you.\"\n\n\"I'm sorry I fell asleep before you came to bed. I kind of wanted to have sex with you, but I got too sleepy to wait.\"\n\n\"I wanted to fool around, too. But you were asleep when I came upstairs, so I was left to my own devices.\"\n\n\"Your own devices,\" she chuckled. \"Is that what you call it?\"\n\nI had to laugh. \"It's not easy being a guy. Horny so much of the time. Tends to strip away your dignity.\"\n\nThat made her laugh. \"Not very dignified, that's true,\" she agreed.\n\n\"So,\" I said after a moment. \"You want to fool around now?\"\n\n\"I don't know,\" she said thoughtfully. \"You seemed pretty busy with what you were doing. I hate to interrupt.\"\n\n\"No problem, really,\" I said. \"Anyway, I was thinking of you.\"\n\n\"Me? Just now? Get out. Not some movie star or model?\"\n\n\"Honestly, just you. Or just us. Last time we made love.\"\n\n\"Well, I'm flattered, I suppose. That remembering could get you so excited.\"\n\n\"Definitely,\" I said, quite earnestly. \"Anyway, what do you say?\"\n\nLeanne lay quietly, gazing up at the ceiling.\n\n\"No,\" she answered finally, looking towards me. \"I don't think so. Not tonight.\"\n\nI sighed in disappointment. I was too late. She was too sleepy.\n\n\"Tonight,\" said Leanne deliberately, \"I think you should jack off. And I think I'd like to watch.\"\n\nMy heart skipped a beat, as I realized what she was suggesting. I'd never masturbated in front of my wife, or anybody else for that matter. Of course, she must have known that I masturbate sometimes, because just about every male masturbates sometimes. But abstract knowledge is not the same as eye-witness observation.\n\n\"You want to watch?\" I asked.\n\n\"Sure,\" she said. \"I'm curious. I've never seen a guy jack off before. Maybe I could learn something, a new technique. Anyway, don't tell me you're embarrassed. We've done all sorts of things together. Surely you can let me watch you do something you've done hundreds of times before.\"\n\nMy heart raced, and my mind raced faster. Jerking off had always seemed so, well, private. But we were husband and wife. What secrets could we have from each other, really? And letting Leanne watch something so private suddenly seemed quite exciting.\n\n\"I guess you could watch,\" I said quietly. \"If you want to.\"\n\nShe sat up, and looked me right in the eye. \"Yes. I want to. I really want to.\"\n\nI breathed in and out. I reached down and pulled back the covers, exposing myself naked from the waist down.\n\n\"Turn on the light,\" she urged. \"I want to see everything.\"\n\nI leaned over and turned on the bedside lamp. My dick was stirring back to life, stimulated by this new situation. I kicked my pajama pants free from my ankles, raised and spread my knees, and reached down to grasp my stiffening rod once more.\n\nLeanne watched my stroking intently, her eyes wider, her breathing rapid but deep. Her watching added new excitement to a familiar sensation. Like any performer, I wanted to put on a good show. I stroked my cock down its full length, pulling back the foreskin to expose the head, then pushing it forward and covering up again. With my other hand, I reached under to cuddle my scrotum.\n\nFalling into a familiar rhythm, I looked over at Leanne. Her eyes stayed fixed on my actions, and her tongue passed over her lips, moistening them.\n\n\"What do you think?\" I asked.\n\n\"Exciting,\" she replied, never shifting her gaze. \"Very sexy. But you're so rough with it.\"\n\n\"Not rough,\" I said, \"Just firm. It's pretty sturdy. If it weren't, I'd have broken it long ago.\"\n\n\"I always treat it likes it's so fragile.\"\n\n\"Just my nuts. The rest likes a firm hand.\"\n\n\"So I see.\"\n\nShe watched intently. I pulled up my pajama shirt above my belly, and clenched my butt muscles to lift my stiff dick toward my pumping fist.\n\n\"One time when I was a teenager,\" I told her, never slowing my tempo, \"I wondered how many times I could jerk off. How many times in a row I could make myself come.\"\n\n\"So what was the answer?\" she said, catching my eye with a smile.\n\n\"Three times,\" I said, grinning as I recalled my eager experiment. \"But by the third time, I scarcely came at all. More like a puff of sperm powder.\"\n\nShe grinned back at me, then shifted her gaze back towards my swollen cock, disappearing and reappearing under my wrapped fingers.\n\n\"Did you jerk off to girly magazines?\" she asked.\n\n\"Sometimes,\" I said, \"when I was younger.\" My voice was low, my brain hazy with lust. \"Now I look at Internet sites. Or porn movies in hotel rooms, when I'm traveling for work. Seeing something sexy helps make me hot.\"\n\nLeanne reached down and pulled her nightgown off over her head. Her arms fell to her sides, displaying her beautiful breasts in the warm lamp light. Then she cupped her hands under each tit, and ran her fingers to her nipples.\n\n\"Does that help?\" she asked. \"Does that make you hot?\"\n\n\"Oh, God, yes,\" I said, breathing harder now. \"That's so sexy, sexier than any porn. Because I know you're doing it just for me.\"\n\n\"And I know you're jacking off just for me.\" Leanne lay back on the bed, and slipped her panties down her legs and past her feet. She sat up halfway, reclining on her elbows, and spread her legs towards me.\n\n\"Look at my pussy,\" she urged, staring me right in the face now. \"See how wet I am, from watching you play with yourself.\"\n\nI looked and saw the glistening pinkness between her legs. I could feel a slow boil starting deep in my testicles.\n\n\"Stroke your dick while you look at my pussy. Go ahead. Look at it, and look at my ass.\"\n\nShe rolled over onto her hands and knees, her butt so round and perfect as it turned toward me, the crack peaking open to reveal her rosy asshole, leading down to her pussy lips in semi-darkness amid dark curling hairs. She turned her head, now even with my crotch, so that her face was only inches from my now-frantic stroking.\n\n\"Come for me,\" Leanne whispered. \"Let me watch you get off. I want to see you squirt.\"\n\nIt was all too much, the sight of my wife posing for me like a centerfold, the sound of her goading me like a phone-sex slut, and of course the feeling of my clenched fist running up and down my cock. My head tilted back and my back arched as I groaned with a shuddering orgasm, spurts of jism streaking my belly.\n\nI collapsed back on the bed, breathing heavily, embarrassed all over again by my recent animal display. Leanne sat up in bed, cross-legged, and gazed down at me.\n\n\"Well, now I feel silly,\" I mumbled, suddenly shy.\n\n\"Don't,\" she murmured, smiling gently. \"That was incredible. So powerful, like a volcano or something. Amazing to watch.\"\n\n\"Well, it's not always like that,\" I replied, smiling back at her. \"You made it extra special. By showing off.\"\n\nNow Leanne seemed bashful. \"Aw, shucks. I'm just glad that I still have that effect on you. That you like my showing off.\"\n\n\"I love it. You're the sexiest woman in the world to me.\"\n\nLeanne reached for the wash cloth on the bedside table. \"I guess I know why you needed this,\" she said, and softly wiped the semen from my belly and now-limp penis. She seemed thoughtful as she finished cleaning up, then turned to look at me directly.\n\n\"Would you like to see more showing off?\" she asked quietly.\n\n\"What do you mean?\" I asked in reply, half wondering, half hoping.\n\n\"Well, watching you made me all hot and bothered. I'd like to get off myself. And it only seems fair to let you watch me.\"\n\n\"Well, that does seem fair,\" I agreed. \"And I would like to watch. I'd like it very much.\"\n\nLeanne smiled at me, then turned to fluff some pillows up against the headboard. She reclined against them, and parted her legs a little. \"Can you see alright?\"\n\nI nodded and sat up, cross-legged half way down the bed, facing her as she made herself comfortable. \"Oh, yes, I can see. A very nice view.\"\n\nHer right hand slid down among her curly pubic hairs as her legs parted wider. Her middle finger probed between her pussy lips, then trailed warm moistness upward. Again she probed, again trailed upward, and with each repetition her legs spread further, her knees pulled up, until she was wide open before me.\n\nShe glanced at me, gazing at her, and chuckled. \"You look mesmerized.\"\n\n\"I am mesmerized. It's amazing. You're amazing. That's so hot to see.\"\n\n\"It makes me hot to feel your eyes on me.\" Her left hand ran over her breasts, teasing her nipples to erect attention. Her right hand began to move rhythmically, her fingers slowly circling her now-slick clit.\n\n\"You're very wet,\" I observed.\n\n\"Usually it takes me more time to get going,\" she answered. \"But watching you, and now you watching me...well, now I'm soaking wet.\" Her attention focused on her fingers in their orbit. \"The wetter I get, the better it feels.\"\n\nHer left hand joined in tending her pink slit, caressing up and down her pussy lips, fingers ducking into her dark vagina. Her right hand continued in circles above, making a lapping noise like rapid tongue kisses.\n\nWatching in rapt silence, a question crossed my mind. \"Does it feel different from when I do it?\"\n\n\"Your hands are more exciting than mine, I suppose. But I know just the right touch, right where it feels good.\"\n\n\"You look like you know what you're doing.\"\n\n\"Well, I've practiced a lot,\" she answered. \"Probably not as much as you. But enough to know what I like.\" She looked up from her jilling, briefly, to catch my eye. \"And three times in a row isn't that hard if you're a girl.\"\n\nHer musky scent reached my nostrils and quickened my breathing in time with hers.\n\n\"Do you ever look at pictures or anything, while you're getting off?\"\n\n\"Not really. Mostly, I think about things. Like when you're traveling, I think about your cock inside me or your tongue on my clit. Sometimes I imagine I'm being ravished by a stranger or a movie star or somebody I've met.\"\n\n\"Like who?\" I asked, suddenly curious.\n\n\"None of your business,\" she laughed. \"You can watch me play with myself, but leave me some privacy.\"\n\n\"Fair enough. You're entitled to whatever fantasies you want inside your own head.\"\n\nLeanne's hands quickened their pace, sliding one, then two fingers inside, while rubbing her hood in tight rotations. In a low husky voice, she told me, \"Sometimes I even think about a woman. When I was younger, I worried that made me a secret lesbian. But I don't worry about it anymore. I figure, what's the harm?\"\n\nA very exciting sight, to see my usually staid wife rubbing her glistening pussy in primal rhythm. And now, she was confiding secret fantasies of sex with strangers and even other women. I was startled to find my dick stirring back to life, so soon after exploding as she'd watched.\n\nLeanne was getting closer now herself. Her eyelids drooped, almost closed, and her breathing was even faster, with a short hum on each exhale. Her pelvis rocked in rhythm with her hands, which had found a tight groove that seemed to be working like magic.\n\nSuddenly, she called out softly: \"Ohh...ohh...ohh...\" With each gasp, her fingers circled her clit four or five times quickly, then froze a moment, while her other hand plunged two fingers deep inside, past the second knuckle. Her hips thrust up to meet the onrushing orgasm, then settled back onto the bed as the tremors subsided.\n\nSome moments passed. Then she opened her eyes, looked at me, and grinned. \"Well, that's all there is to it. What do you think?\"\n\nI stretched out next to her, and wrapped her in my arms. \"I think you're fantastic. That was one of the most exciting things I've ever seen. All I can say is, just, wow!\"\n\n\"Aw, shucks,\" she giggled. \"Just an amateur trying her best. I'm sure you've seen pros in movies who put on a fancier show.\"\n\n\"But that was so real. Nothing fake about it. And just for me. That was the most arousing show I've ever seen.\"\n\nLeanne reached down and grabbed my penis, now hard and throbbing once more. \"Well, it does seem to have had some effect. That's enough masturbation for awhile. Why don't you slip that thing inside me?\"\n\nI needed no further encouragement. I climbed between her spreading legs, and plunged my cock into her hot pussy, as wet as I'd ever felt it. She smiled up at me as we found our rhythm together, me thrusting with renewed urgency, her rising each time to meet me. I buried my face in the nape of her neck, and whispered, \"You are so sexy, Leanne. You make me so horny.\"\n\n\"I like having sex adventures with you,\" she whispered back. \"Keeps it exciting. And makes me horny, too.\"\n\nI pushed up with my arms, raising my chest, arching my back and easing further inside her. She slid her hands down to my ass cheeks, and pulled me into her even harder. This time my orgasm came on more slowly, but deeper and warmer. My come gushed deep inside Leanne, and I fell against her, breathing hard, her breath against my cheek.\n\n\"Let's play that game again sometime,\" said Leanne softly. \"Seems to get you all hot and bothered.\"\n\n\"You bet. I like playing with you.\"\n\n\"Playing with me. Playing with yourself. It's all good, baby.\"\n\nI chuckled as I rolled off and curled against her side. We fell asleep, close together, a new experience shared.\n\n \n"
    ],
    "authorname": "myerslongbranch",
    "tags": [
        "masturbation",
        "mf",
        "voyeur",
        "wife",
        "erotic"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/side-by-side-3"
}