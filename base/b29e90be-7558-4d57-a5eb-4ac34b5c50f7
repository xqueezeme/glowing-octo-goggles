{
    "title": "Special Delivery",
    "pages": [
        "My wife rolled down the window on her specially-built van and smiled at me. \"Remember, you can't leave the house. The first candidate will arrive today.\" \n\n\"Are you sure about this, Shelley?\" I asked, nervous. We had discussed it so many times, but even now, four years after the accident that had crippled her from the waist down, the idea bothered me. \n\n\"We both want children. Our children.\" She smiled at me again. \"And don't think that I haven't noticed that your trouser trout has been taking longer to rise to the occasion, for the one thing I can do for it.\" \n\nShelley still gave awesome blow jobs, but with her not having any sensation or muscle control from the waist down, sex in any other way was barely possible, and no fun for either her or me. \n\nI leaned forward, kissed her, and made it last. When I broke away, I repeated what I'd said in similar words many times before. \"I don't know how well this will work. I married you, I didn't marry just the parts of you that I can have sex with.\" \n\n\"I know, Keith.\" She reached out her left hand and ruffled my hair. \"Just give her a shot, and if there is anything between you, don't break her. If it doesn't work, I'll look for someone else.\" \n\n\"I don't deserve you, you know that?\" \n\n\"True.\" She graced me with an impish grin. \"I have to go now, or I'll be late.\" \n\nI waved as my wife drove away. She would make sure my team lead knew I was taking a personal day. One benefit of both working for different departments of the same engineering firm. I had sent an email, but emails weren't always read in the order the sender would prefer. \n\n# \n\nI showered to wake up the rest of the way, shaved and did other bathroom morning things. Then I grabbed a second mug of fresh java and fired up the computer to start checking emails, but carefully did not start the instant messenger. This was a day off. I would still check for critical issues, but I wouldn't make myself available for casual contact. They had my phone number. \n\nAfter I checked email, I thought about what I wanted to wear if my wife's candidate arrived. I didn't want to dress like a ragbag, or too uptight. I decided on casual, loose fitting black slacks and a red polo shirt. \n\nI hope I don't freeze up when she gets here. \n\nThe idea of having a woman to have more than just oral sex with again was definitely something I wanted on one level. Shelley and I had been sexual dynamite together since we met in college. She liked everything I could give, in every way I could give it, which had been new to me. She was the first woman I'd ever had anal sex with. The first woman who had even let me try. \n\nIf there's anything I don't like about this, it's that I have no choice in who gets chosen before she sends them to me. I can reject them, but- \n\nThe doorbell rang, and my heart jumped up into my throat. \n\nI laughed at myself and immediately dry swallowed. Then I took a deep breath and stood, brushing off my shirt and pants nervously before moving to the front door. \n\nYou aren't fourteen again. Act like you're an adult in control of yourself. \n\nI looked through the peephole and laughed at myself as I quickly opened the door to a familiar face. \"Hello Cathy, I wasn't expecting anything from the office today.\" \n\nCathy was one of the bike couriers contracted to work for our office. Downtown was not a place where couriers in cars moved packages quickly. She regularly delivered small packages to us when we weren't in, since we lived about two miles from the office. \n\n\"No problem, Mr. Cole. All I need is a signature that you've opened it and inspected the contents.\" She smiled and handed me the package before tapping the clipboard she was holding. \n\nThe package was about six inches by a foot, by four inches. A bigger package than what the office usually sent. The return address was simply the office address. It was heavily taped. \n\n\"Come on in then, and close the door. I'll need a knife to open this in the kitchen.\" \n\n\"Take your time. Air conditioning is good.\" \n\nI heard her smartphone beeping after she stepped in and closed the door, but I ignored her conversation as I opened the package. \n\nWhen the wrapping was off, I opened the box. For several seconds, all I could do was stare. Inside the box was an assortment of oils, lubricants, and other sex toys and equipment. \n\n\"Cathy, are you, ah, sure this was for me?\" I looked up, and saw her standing in the doorway. \n\n\"Yes. Very sure.\" She was holding up a phone, with the screen facing me. \n\nMy wife's face was on that screen, and she was barely suppressing laughter. \"Yes. Cathy brought the right package to the right place. We've been talking about this for months.\" \n\nMy mouth must have dropped open, because I had to close it. \"Oh. I wasn't expecting someone I knew.\" \n\n\"That was quite obvious, heh. Well, I'm going to leave you two to whatever you get up to. You had better get past the 'staring at her' point pretty quickly though. I've told her some stories, and she liked what she heard.\" She paused. \"Cathy, you might have to lead him by the hand a bit, but once he gets started, watch out!\" \n\nShelley disconnected the call, and the screen went blank. \n\nMy eyes moved over to Cathy's body. A body almost every man I the office stared at, and some of the women too. It wasn't that she was a physical goddess or anything, but because she was a bike courier, she didn't have to adhere to the office dress code. Also, because she was a bike courier, she was fit. \n\nFive-two or five-three, collar length brown hair, brown eyes, deep red lips framing a wide mouth, freckles and a button nose. Below that was moderately small set of very perky breasts under a long, tight blue tank top shirt. The lines of a sports bra were visible under the blue shirt. Farther down, baggy black gym shorts appeared below the hem of the shirt, framing damn fine hips. Under the gym shorts was a pair of knee-length biker shorts. Despite the baggy shorts, it was clear that Cathy was at least an eight on the ass-and-legs-meter. \n\nShe coughed into her hand as I stared at her. \"Sorry. I feel a little underdressed for this, but your wife wanted it to be a surprise. I hope I haven't-\" \n\n\"No.\" I broke in, before she could keep apologizing. \"It was definitely a surprise. And I was admiring, not critical. I've never really had the chance to give you a good, long look before. Not polite in the office. I had to settle for little looks every now and then.\" \n\n\"Like a lot of others.\" She smiled, nervously. \n\nI tried to think of something to talk to her about. \"So, uh, did you finish college yet?\" \n\n\"Yes. She's really thought this out.\" \n\n\"Oh. Well, yes. We discussed a lot of-\" \n\n\"Can I call you Keith?\" \n\n\"Of course.\" \n\n\"Keith, your wife has been very open with me about almost everything. I just graduated college. I have had all sorts of tests for diseases, and reproductive health. I know that you two want someone to have your children and be a surrogate sex partner for you, to give you the things your wife can't.\" She looked at me. \"She knows you find me attractive. She's seen you looking. The only thing she wasn't sure of is if you would really be willing to do it.\" \n\n\"I...\" I looked at her, reminding myself that my wife had arranged it. Four years of only being able to get blow jobs moved my mouth for me. \"...yes.\" \n\nCathy smiled, regular white teeth peeked out from behind red lips. \"The only other thing I need to know right now, is what's in the box?\" \n\nBefore I could move, Cathy took three steps forward, and bumped my thigh with hers, moving me out from in front of the box. She reached in and started pulling out oils and lubricants and setting them on the counter. \"Ooh, coconut. I love coconut.\" Her hands stopped moving, for a moment, then picked up a foil-wrapped container, and looked at it. \"Magnum condoms? That's, err, unexpected. She said you were big, but wouldn't say how big.\" \n\nI needed to say something. \"There's plenty of lubricant, and I've been big all my life.\" \n\nCathy didn't say anything, just staring at the condom. I was afraid it was the wrong thing to say, that I'd moved too fast. \n\nShe paused and put the condom on the counter, then turned to me and smiled. \"Sir, I'm afraid I'm going to have to inspect your package.\" \n\nI immediately responded to the obvious roleplay. \"I'm certain it's not too large to fit in your box, ma'am.\" \n\n\"Well, sir, this is a special delivery. I'm afraid I must insist on unwrapping the package and measuring it, just to be sure.\" She looked a little nervous. \n\n\"I can understand that, but the package contains sensitive material, and I don't want anyone else to see it unwrapped. Can we move to another room?\" \n\nShe turned her head to follow my glance at the kitchen window. There were three kids playing in the yard behind ours. \"Of course, sir. Let me bring my packing supplies with me.\" She picked up the box with one hand and started collecting oils and lubes. \n\nI picked the condom off the counter and put it in the open box. \"Follow me.\" \n\nIn order to avoid the chance that she might feel trapped, I walked upstairs first. I did not take her to the master bedroom. We had agreed that was off limits until we found someone we liked enough to be a part of the family. \n\nI opened the door to one of the two spare bedrooms, and entered ahead of her. \n\nAs I turned back towards the door, I saw she had hesitated at the doorway. \"You don't have to do this, you know.\" I said, quietly, but loud enough to be easily heard. \n\n\"I know.\" She held the box tighter, against her stomach. \"This just feels a little weird. Like some sort of arranged marriage on a comedy show or something. Or a porno movie with an actual plot.\" \n\nI nodded. \"It's fairly strange feeling to me as well. I wasn't expecting anything quite like this.\" \n\nShe stepped into the room, and set the box of supplies on the end table next to the bed. \"Well, sir, would you please sit down, so I can unwrap your package for inspection.\" \n\nI laughed a little, nervously, and sat in the chair next to the bed. \"Yes, ma'am.\" \n\nCathy hesitated one more second, then shook her head and muttered something I couldn't hear before kneeling next to the chair in front of me. \n\nI stared to undo my belt, but her hands gently stopped me. \"Sir, please let the professional courier do the package handling here.\" \n\n\"Yes, ma'am.\" I smiled and laughed. \n\nCathy's hands felt along my inner thigh, upper legs and hips through the slacks, lightly brushing against my cock. I had been slowly growing harder for the last several minutes, but that touch was electric. I started to grow faster. I could feel the skin of my cock head dragging against the fabric of the special underwear I had to wear. \n\n\"Oh, wow.\" She almost whispered. \n\nHer hands moved to my belt and quickly loosened the buckle, then the button and zipper. \n\nI raised my hips, and she pulled off my slacks, letting them pool on the ground at my feet. \n\n\"I see you have special restraints for your package, sir.\" She said as she traced her hands over the special underwear that served the dual purposes of redirecting my cock to the side if I couldn't keep it from being erect, and keep it from falling out of shorts at the gym when I was working out. \n\n\"Yes, ma'am. My package requires special handling. If not properly restrained, it can be easily damaged, or exposed.\" \n\nShe looked up at me, and her hands traced to the waistband of my underwear. \n\nI nodded down to her. \n\nShe took a deep breath and pulled my underwear down, slowly and carefully. \n\nI raised my hips again, and she pulled my underwear the rest of the way down. As the underwear passed the halfway point of my thigh, my cockhead flopped out of my underwear and slapped the chair with an audible noise. \n\nCathy stopped moving, and stared. \"Whoa. Is that real? Holy shit.\" \n\n\"Yes, ma'am. I don't ship contraband.\" \n\nShe jerked her head up to look at me, and laughed. \"I'll be the judge of that, sir. It seems too large to possibly be real. I'm afraid I'm going to have to subject it to a taste test.\" \n\n\"Isn't that a bit unorthodox, ma'am?\" I replied. \n\nShe looked a bit nervous, so I gently put two fingers of my hand on her hand resting next to my cock. \"Remember you can stop whenever you want. A lot of women walked away when they saw what you've seen. Others walked when they saw how big it gets.\" \n\nShe leaned back on her heels, and gave me a short look in the eyes before responding. \"I've heard people say that there's nothing like a big cock. I've never had one anywhere near this big. I want to at least try it.\" \n\n\"Sounds good to me.\" I pulled my hand back, then inched forward until I as at the edge of the seat. \"Do your worst, inspector. You will find that my package is genuine.\" \n\nShe picked up my cock with both hands, and measured it. Still soft, it was about nine inches long. \"Will it get much bigger?\" \n\n\"Not much longer, maybe three inches or so, but it's still fairly thin.\" \n\nShe leaned forward. \"I better try this now then.\" She licked the head of my cock like a melting ice cream cone, twisting it a little with her hands to get to all sides. \n\nI put my hand on her head. She paused, briefly, then continued. I took my hand off her head, since it had seemed to bother her. \n\nWhen my hand left her head, she suddenly bobbed her head forward and swallowed several inches of my cock. Then she proved she knew what she was doing when she started humming. The head of my cock, in the top of her throat, was vibrating and the sensation was incredible. Shelley knew the same trick. Cathy was almost as good at it. \n\nMy cock started growing much faster. It only took a few seconds before Cathy has to pull it out of her throat. \n\n\"Well, sir, this package is definitely oversized, and will require special handling.\" She started licking the head of my cock like an ice cream cone again. \n\nI leaned back a little and gripped the edges of the seat with both hands, to keep from trying to grab her head again. \"I've shipped this package before, a few times. With the right technique, it'll fit in a surprisingly small box.\" \n\nCathy suddenly put the entire head of my dick in her mouth. It was tight enough that her teeth dragged on the helmet, making me shiver uncontrollably for a second. Then she tightened her lips and sucked gently as she withdrew it again, dragging it slowly and gently between her teeth. After several seconds of amazing sensation, there was a wet slurping noise as the head popped free from her lips. \n\nShe looked up at me, and traced the goosebumps on my inner thigh. \"Seems like I'm doing something right. How's my customer service?\" She blew air over the slightly saliva-wet end of my cock, creating more goosebumps. \n\n\"Definitely. I have no complaints.\" I panted as the intense sensations of the cooler air drove my cock to full size. \n\n\"I need to take a measurement, sir, stay still.\" \n\nI looked down at her, and watched as she put the heel of her palm against my pubic hair, and held my length next to her arm. It reached a little past her elbow. \"Wow. A cubit.\" \n\nI shook my head. \"Need to include outstretched fingers for it to be a cubit.\" \n\n\"Oh, that's right.\" She adjusted her hand and poked her outstretched fingers into contact with the base of my dick. The head was now about three inches short of her elbow. She wrapped the index and thumb of her other hand around her forearm where the end of my cock was, then pulled away, settling back on her heels. \n\nI'd seen other women do similar things, so I just smiled. She didn't seem afraid, more fascinated. As I watched, she held her measuring arm in front of her with her other hand still wrapped around her forearm. \"Damn. How is this even going to work?\" She stood and held her fingers against her pubic area and pressed her forearm against her torso. She slid her marker hand off her forearm onto her stomach about halfway between her belly-button and her sternum. \n\n\"Really?\" She raised one eyebrow at me. \"I am an engineer, you know. Even if I just graduated. These numbers aren't adding up.\" \n\nI chuckled at her perplexed expression. \"You won't be able to take the whole length, but it's fun to see how much can fit. It's a game Shelley and I used to play. She never managed to get more than about ten inches.\" \n\n\"Ten inches of that in her pussy?\" Cathy put one hand on the end of my cock, wrapping her fingers around it. Her thumb and middle finger were about two inches short of touching. She shook her head. \"If you get eight inches inside, I'll be surprised.\" \n\n\"Like I said, it's fun to see. I bet if we experiment, we'll find a position where I can get deeper than that.\" \n\nCathy's face suddenly went still. I knew what she was thinking. \n\n\"She took this in her ass?\" \n\n\"As an anal virgin. Yes. It took us two hours with toys and a whole lot of lube.\" \n\nShe blew out a deep breath. \"I'm not an anal virgin. I like anal, every now and then. Your wife said I would have to be able to do anal sex too, because you really liked it.\" She shook her head. \"But this is a lot of cock.\" \n\nI'm not going to force you to do anything. \n\n\"But if I won't do anal with you...\" \n\nI decided to be a bit frank. \"No offense, but we'll have to find someone else. There's no other way for me to get balls-deep in a woman. Anal is far more pleasurable for me than any other sex.\" \n\nShe bit her lip, and stared at my dick as she stroked it gently. It was still getting harder. Uncomfortably harder. Talking about anal sex was really turning me on. \n\nFour years. If she agrees, I'm going to have to be sure to go slow and not get carried away. \n\nA large drop of pre-cum oozed out and formed a dollop at the tip of my dick. \n\nCathy leaned forward licked the drop off the purple helmet of my cock, then looked at me. \"Do you have to fit all the way inside my ass?\" \n\n\"It will. If you can get the head inside, the whole thing will fit. It just takes time and lube. My wife says that anal is the best orgasms, too.\" \n\n\"I like anal, and I agree with her on the orgasms. But there is such a thing as too much of a good thing.\" She leaned forward and licked the head of my cock like an ice cream cone again. Much more slowly this time. Several seconds later, she leaned back. \n\n\"I want to try it, but if I say stop, you stop.\" Her expression was very serious. \n\n\"I will. We used to do anal a couple times a week. I always had to go slow, and give her time to relax every couple inches.\" \n\nShe stared me in the eye. \"You better.\" She shook my dick back and forth with one hand. \"This thing is a dangerous weapon.\" \n\nWe both laughed. \n\nI spluttered out \"Handle with care?\" \n\n\"Oh, definitely.\" Cathy agreed. Then she looked closely at my member again. \"Is it done growing yet?\" \n\n\"I hope so. It's starting to be a bit painful. You've got me really turned on right now, and it' been four years since anything but oral sex.\" \n\n\"You poor thing.\" \n\nShe re-measured with her arm again. I was only two inches short of a cubit now, visually bigger than I remembered it ever being before. \n\n\"Did she put a measuring tape in the box? I'd like to see if I'm longer than thirteen inches. I'm normally around twelve or so. Never been past thirteen.\" I leaned over and dragged the box nearer to me, looking inside. There was a tailor's tape inside. I handed it to Cathy. \n\nLaughing, Cathy joked. \"I'd say sixteen inches, but I'm probably exaggerating.\" She stretched out the tape and measured me, root to tip. \n\n\"Thirteen and a half.\" She shook her head. \"I'll certainly be ready for natural childbirth if this works out.\" \n\n\"Well, it's a new record for me, but it's not that big.\" I held out my hands. \"A baby's head is-\" \n\n\"Hush. I was joking.\" She stroked my cock and licked another drop of pre-cum off the helmet. \"Barely. I'm more worried about needing to wear diapers after having anal with you.\" ",
        "\"You'll close back up after a few minutes. Promise. Shelley never had that problem, she damn well would have complained to me about it if she did. She complained enough about the soreness.\" \n\n\"Damn. I forgot something.\" Cathy suddenly pulled the box towards her. \"I thought I saw this. Shelley warned me.\" \n\n\"What?\" I wasn't following her. \n\n\"I'm not going to go any farther until I kiss you, and your wife said you had a mental hang-up about kissing after cock-sucking.\" \n\n\"Well, yeah, it's a bit of a problem for me. Never was able to do it.\" I shrugged. \n\n\"But you don't have a problem with using that tongue anywhere I want on me, right?\" \n\n\"Anything short of scat or golden showers is fine. Never could get into that sort of thing. Never wanted to. Anal is about as weird as I get.\" \n\nI got a strange look. \"Good, that's why I left my last boyfriend. He wanted to do golden showers. Not interested.\" She pulled a small bottle out of the box. \"Yup, here it is.\" \n\nThe bottle was a half-pint bottle of tequila. Cathy opened it, took a little bit into her mouth, and then swished it around and swallowed it as she twisted the cap back on. \"I was told that tequila mouthwash is good enough?\" \n\nI laughed. \"Definitely. Now, come here and kiss me.\" \n\nBecause I really want to fuck you soon, and I'm getting impatient. \n\nI suppressed the little mental voice, but some of it must have crossed my face. \n\nCathy smiled. \"Someone's impatient, but it's been years. I get it. Thing is, I want to enjoy this too, and that thing of yours has me a bit nervous. I might have to take a break and use the 'mouthwash' a few times before we get to actual sex. That half-pint will be at least half-gone before I even think about putting that thing in my ass.\" She fondled the head of my cock like as if it was the head of a small child, rubbing it with the flat of her palm. \n\n\"Sounds fair to me. I want you to want it. I've had sex once with a woman that was afraid to say no. It wasn't any fun. She forced herself because she was just that type that never backed away from anything. We had to use so much lube, and she never came.\" \n\n\"I want to. Carefully.\" She stood and was getting ready to straddle me and sit in my lap to kiss me. \n\n\"Ah, I have a suggestion.\" I offered before she sat in my lap. \n\n\"What's that?\" \n\n\"My pants are on the ground, and my underwear. But you haven't taken anything off yet.\" \n\n\"Hmm. The suggestion is that I lose some clothing to even things up then?\" \n\n\"However did you guess?\" I grinned up at her from my seat. \n\n\"Why not just even the playing field completely?\" She said as she took off her shirt, showing off the sports bra underneath. \"I don't have any spare clothing with me anyway, I'd rather not have them be damaged, or covered with spunk, or whatever.\" \n\nI took the hint and removed my shirt as she took off her bra. I was happy to see that her breasts were just as perky as I'd imagined, even if they were very much on the small side. I was never much of one for big-breasted women anyway. I liked athletic, svelte women with moderate curves and muscle. \n\nCathy certainly had the muscle in spades, but it wasn't big bulky muscle. All the miles she put on her bike every day certainly showed, even in her upper body. There wasn't the tiniest bit of loose skin anywhere. She had easily visible abs, but they weren't sharply defined like a bodybuilder's. \n\nWhile I was looking at her, she was looking at me. \"You haven't been spending much time in the gym recently, have you?\" \n\nI looked down at myself. My abs were barely visible and my pecs were not as defined as they had been a few years back. \"Not really. It was something Shelley and I used to do. I kept it up for a couple years on autopilot, but-\" \n\n\"You're fine the way you are, but if this works out, you're working out more, with or without me. I'm not going to have you all panting and out of breath after fifteen minutes in bed.\" \n\nI gave her what must have been an odd look. \n\n\"Seriously. I'm going to need to go to the gym with someone after I start working for Russ's team as the just-graduated-gofer engineer. Going from spending four to five hours a day on the bike to sitting in a chair eight hours a day is not going to do good things to my body.\" \n\n\"You've been hired by our company?\" \n\nShe gave me an odd look, and I realized I'd picked up on the wrong thread of that statement. \n\n\"I mean, sure, yes, I'll go to work out with you at least sometimes, but remember that I have to spend time with Shelley, too. We watch movies, do computer gaming, and go out to eat.\" I stared at her, seriously. \"You aren't replacing her. I'm not entirely sure about this whole arrangement, but Shelley wants it for children. She obviously likes you, and from the few conversations we've had, I like you enough to try this. You've got a brain, and are more than attractive enough to keep my attention.\"  \n\n\"I get it, Keith.\" Cathy spoke softly, and put one of her hands on mine. \"I don't have any desire to replace her. I'm getting something I want out of this too, you know, not just a place to live and sex.\" \n\n\"Well, the state still won't let us make it official.\" \n\n\"Not marriage. I'm fine being a single woman, but attached to your family. I'll happily have children for you two. I want kids anyway. But I also want my own kids, and you are definitely good biological material. Don't think that your wife was the only one looking at medical records when we talked about this.\" \n\nI leaned back in the chair. \"Okay. You two have clearly been planning this at a level beyond what I was expecting.\" \n\n\"Is that a problem?\" \n\n\"No. I mean, we're all engineers. I should have expected that you two would have covered all the bases. I just wasn't expecting...\" I paused. \"I honestly didn't think it would work. I was expecting a complete stranger, and-\" \n\n\"Well, I'm barely an engineer, but yes, we had quite a few lunches together on days when you were out of town or busy. If you don't cause me permanent physical damage with your baseball bat there...\" She pointed at my cock with an accusing finger. \"I'm all for being the unofficial number two wife.\" \n\n\"Umm, that all sounds good. Sorry if I implied that you two didn't have it all planned out.\" \n\n\"Oh, hush, and help me get out of these pants.\" She pouted at me. \"Unless you would rather I-\" \n\n\"No, I think I'd prefer to open this package myself.\" I smiled and leaned forward, wriggling my fingers as I reached towards the waistband of her shorts. \"Can I pick it up and shake it?\" \n\n\"I'll thump you if you try. I don't like being picked up.\" \n\n\"Spoilsport.\" I changed the direction of my hands, and reached up to touch her exposed breasts first, rubbing my thumbs across her nipples and lightly brushing my fingertips across the sides of her breasts. \n\n\"Mm mm. Good hands.\" She cooed as the goosebumps appeared on her skin, and her nipples went almost instantly to attention in the middle of two-inch reddish-brown areolas. \"Need the pants off. Don't want to smell like sex when I leave here, and if you keep doing that, I'm going to soak through both pairs of shorts.\" \n\n\"I chuckled. Fine, fine, fine. You do know that we have a washing machine, right?\" \n\nShe poked me in the nose. \"Hush, and take my clothes off.\" \n\n\"Yes, Ma'am.\" I moved my hands down her sides, drifting my fingers lightly along her firm flanks, watching the goosebumps on her skin become more pronounced. \n\nShe panted a little. \"If you weren't so damn big, I'd tell you to just throw me on the bed and fuck me. Hurry up and get my shorts off.\" \n\n\"We're going to kiss first, right?\" \n\n\"Definitely. But I don't need my hands to kiss you.\" \n\nMy hands finally reached her waistband, and I carefully gathered only the waistband of the loose gym shorts, and pulled them down slowly. \n\nBefore I'd gotten them to her knees, she made an impatient noise. \"Seriously, faster. I'm going to soak my pants and stink like sex.\" \n\n\"Fine, faster it is.\" I quickly dropped her shorts to her ankles, then reached up for the skintight biker shorts. By the lack of any sort of lines against the fabric, it was clear that there was no underwear underneath. I quickly peeled her out of the tight shorts, proving myself correct. \n\nShe put one hand on my shoulder and lifted her legs one at a time, stepping out of her shorts. \n\nI picked up the skintight shorts with one hand and took a sniff at what was obviously a wet spot. \"We might have been too late.\" \n\n\"Damnit.\" \n\n\"We have a washing machine. And a sink and soap for delicates. Don't worry about stinking when you leave.\" I dropped the short on the ground and raised my hand to cup her jaw. \"Now, let's pick up where we left off. Sit on my lap and kiss me.\" \n\nAfter a moment's irritated look at the wadded shorts on the floor, Cathy tuned to me, straddled my lap, and leaned in for a kiss that tasted like tequila. \n\nAbout thirty seconds later, she leaned back. \"Yup, you're okay kisser. I can work with this.\" \n\n\"Okay? That's all, an okay kisser?\" \n\n\"You can't have everything. Good health, reasonably fit, and an absurdly big cock. Okay kisser.\" \n\n\"I suppose I can learn to be a better kisser.\" \n\n\"We can work on that.\" \n\nI let go of her hips with one hand, and reached behind her. She stiffened a bit, maybe expecting me to try to start sex too soon, but I had another idea that I knew would get a reaction. I lifted my cock up with my hand, and slapped it against her lower back. \n\nCathy's eyes went round. \"Is that?\" \n\n\"Yes.\" \n\n\"You just slapped my back with it.\" \n\n\"Yes. And?\" \n\n\"Wow. Just Wow.\" She reached behind herself and touched my cock, holding it by the head and pulling it against her back. That's higher up than my tattoo, I think?\" \n\nA tattoo? She has a tramp stamp? \n\n\"Can I see the tattoo?\" \n\n\"Sure.\" She twisted her hips on my lap, and I looked around behind her. \n\nWhen I saw what was there, I couldn't help but laugh. \"I bet that's been a conversation piece a couple times.\" \n\n\"It has. Not many women have E=MC^2 tattooed on their lower back.\" \n\nI laughed, and hugged her. \"That's hilarious.\" \n\n\"I was a physics major before I decided to get a degree that would let me earn a living.\" She reached back behind herself again and pulled my helmet up against her back. \"Is it above the tattoo?\" \n\nI looked around her shoulder. \"Yes. About an inch. Do I have to be below the line to ride this ride?\" \n\nShe squeezed my cock lightly. \"No. But I need another swallow of tequila, I think. I can't even imagine what it's going to feel like to have you inside me.\" \n\nThe box was too far away for her to reach, but I could just reach it. I picked up the whole box and brought it to us. \"It might be a good time to start with this, too.\" I tapped the smallest butt plug. It had a switch at the bottom, so I turned it on, and it started to hum. \n\n\"Yes, please. Good idea. After more 'mouthwash.'\" She took a small swallow of tequila, re-sealed the bottle again, and put it back in the box. Then she picked up a tube of lube and poured a little into one hand, before dropping the tube back in the box and picking the vibrating butt plug. She carefully covered the whole plug with lube, then reached around behind herself with the plug. It was only about an inch in diameter at the thickest point, and clearly went in with no problems, just a sigh of contentment and a wriggle of her tailbone on my lap. \n\nI leaned over a bit and set the box on the ground next to us. \n\nShe wriggled her butt in my lap again. \"Oh, yeah. That's going to help a lot. At least for my pussy. We'll need to use bigger toys to get me ready for that thing in my ass.\" She breathed out a quick breath and reached behind herself to put her hand on my tool's head again, pulling it back up and touching her lower back with it. \"That's just crazy. You say this whole thing will go into my ass?\" \n\nI'd thought about offering to help with the plug, but was glad I hadn't. She was still nervous. I couldn't be too aggressive, no matter how much I wanted to throw her on the bed and fuck her silly. \"If you can take the thickness, the whole thing will fit. There's a second sphincter in there, and the head of my cock will have to twist around a little to follow the turn after the second sphincter, but it'll go. It'll take at least a half hour to work it all in there, once we get started, if we go careful and slow. And I will.\" \n\n\"You can last a half hour with your cock in my ass?\" \n\n\"If I cum once or twice before that, yes, I hope so. I'll be a little smaller and softer than I am now, too, I think.\" \n\nShe leaned forward and kissed me again. The tequila turned me on. Tequila in a kiss meant sex to me after so long with Shelley. I tried to feel guilty about it, but it didn't work. Shelley had set this up. She knew exactly what was likely to happen. She had specifically set this up with Cathy, after what seemed to be a long time planning. I liked Cathy, what little I knew of her from brief office conversations. \n\nI am going to fuck her so hard. \n\nI pressed my mouth against hers harder and held her a little tighter, putting my arms around her back and holding her neck from behind as the kiss got more serious. She matched me, with surprising strength. \n\nShe tapped me on the back, and pulled away. \"Okay, I'm done kissing, for now. Do you like sixty-nine?\" \n\n\"Sure.\" I waved at the bed. \"After you.\" \n\nShe stood and took a couple steps over to the bed, then jumped onto it on all fours, put her head on the bed, arched her stomach down, and waved her ass at me. \n\nI got an incredible view of a finely-toned ass, shaved completely bald, with just a hint of darkness between the butt plug and two creamy white globes. Below that, there was a hairless pussy, with labia hanging slightly. As I watched, a thick drop slowly formed and stretched for an inch before finally falling to the sheets. My cock raged and started to ache. \n\nCathy looked at me from the mattress. \"Like what you see?\" \n\n\"Enough that it's all I can do to keep myself from going way to fast.\" I growled. \"I think my dick might have just grown another half inch too.\" \n\n\"Seriously?\" \n\n\"It's starting to hurt now.\" \n\nShe rolled over on her side and stretched out, then crooked a finger at me. \"Well, come here. I'll kiss it and make it better.\" \n\nShe didn't have to ask twice. I walked around the bed, lay down, grabbed her knees, and pulled her into proper-pussy-licking position, burying my head between her thighs and digging my tongue deep. \n\n\"That's good. Oh, damn that's good.\" \n\nI bumped the end of the butt plug with my nose. \n\n\"Oh! How did you. Your hands.\" \n\n\"With my nose.\" \n\n\"I like it.\" \n\nI went to town, digging deeply with my tongue into her pussy, stretching my tongue inside as far as I could, and regularly sucking on and tonguing her button as well. Occasionally bumping the plug with my nose, which got a reaction every time. \n\nShe was keeping up her end of the sixty-nine as well, licking and handling my cock almost like a corn cob one minute, an ice cream cone the next. She tried to get the head in her mouth again, but I had to stop her. It was too tight, and her teeth hurt me. \n\nI felt her shift position and heard her rummaging in the box as she licked the tip of my cock. \"You're definitely bigger. I need more mouthwash.\" \n\nI chuckled, and licked her ass around the butt plug as I felt her tongue leave my cock. \n\nThere were choking sounds, then coughing and laughing and a moan as I bored in harder, trying to put my tongue between the vibrating plug and the sphincter wall. \"Ohgod. Do that more. After I put the bottle down!\" \n\nI pushed my face in harder and said \"Mmm hmm\" as I pushed my tongue at the crack between ass and plug. Then I licked her skin between her anus and pussy before backing my face away a couple inches and blowing air at the wet skin. \n\nSuddenly my cock head felt incredibly cold. \"Two can play that game, mister.\" The scent of tequila was strong in the air. \n\n\"Wow.\" I muttered, and stiffened as I felt a warm tongue swiping the cold tequila off my cock head. \n\n\"Let's see who cums first?\" She spoke as she lightly squeezed my balls. \n\n\"I'm pretty worked up, and fairly sure I'm going to lose, but I'll take that bet.\" I looked down at her, between our bodies, and saw her put another small splash of tequila in her hand and slather it on my cock. \n\nShe looked at me, smiled crookedly, and then snaked out her tongue. The mixture of cold, warm, and tongue friction on my helmet almost made me blow my load right then, right there, but I barely held on. \"I've never had tequila like this before,\" she said. \n\nI wasn't looking at her any longer. I was concentrating on her pussy and ass. I took one hand off the knee it was holding and slowly pushed a finger deep into her pussy. She was sopping wet, it went in easily. \n\nThere was a groan from near my cock, and I smiled as I started licking and nibbling her clit while starting to work a second finger in next to the first. \n\nI could feel the pressure building in my balls, but I could feel her muscle tremors too. We were both on the edge. \n\nThat's when I felt her tracing a finger slowly along my butt cheeks, back and forth, and then in a spiral, slowly getting closer to what I knew her target had to be. And she knew I had to know. \n\nI pulled out the two fingers, and started trying to fit three. It was pretty tight, but she gave no indication of pain as she pushed hard against my fingers. I kept licking and nibbling at her clit, and pumping three fingers into her with a piston motion as she kneaded my balls with one hand, licked my helmet, and traced her other hand's finger closer and closer to my anus. \n\nI released her other knee and carefully grabbed the end of the little butt plug with that hand, and started pumping it in and out. Not enough to remove it from her ass, just enough to stretch her sphincter back and forth as the retaining lip of the plug almost came free before I pushed it back in. \n\nThe licking on my cock became more frantic, and suddenly, the moment I knew was coming happened. A finger was pressed against my ass, pushed its way inside, and pressed against my prostate. \n\nIt was all over. My nuts rebelled against my mind and my hips started to jerk. In desperation, I slid my pinkie finger in next to the other three, and started pumping her with four fingers. There was a moan from near my cock, and I felt muscles tightening down on my fingers, hard. \n\nI could feel the cum pushing through my cock. After the second spurt, I felt two hands and a pair of lips lock on the head of my cock. Spurt after spurt shook my body. Seven, eight, nine, ten, and then three or four spasms with no real result, other than feeling fantastic. \n\nI'd lost, but not by much. \n\nI felt her lips move and heard her swallow before she released her lip lock. \"Photo finish. I can't believe you got four fingers in me that fast. I can't believe I came that fast.\" \n\n\"I usually last a lot longer too. Has it been a while for you?\" \n\n\"About a year. Lots of toy-play, but no boyfriend. Full time work and full time school don't leave much time for a relationship. Senior year was a real bitch.\" \n\nI felt her lips on my cock again. It was shrinking, and she managed to get it into her mouth and the head down her throat. \n\nI knew what she was about to do. \"Wait!\" \n\nBut I was too late, she hummed. \n\nI almost jerked the hypersensitive head out of her mouth. \"Whoa. Give me a few minutes before doing that, please. Super sensitive for a while after I cum.\" \n\n\"Sorry, I know better, I just want you hard again. You had four fingers in me. I figure that means this thing might fit now.\" \n\nProbably not. I carefully didn't say. \n\n\"Maybe, with a lot of lube. But we have a lot of lube. Trust me. I'll get hard again. At least twice more. Maybe three times.\" ",
        "\"You better. I've come this far, I'm going all the way.\" She licked my cock helmet and my hips jerked. \"Heh. That's funny.\" \n\n\"What, the bad cum pun or that you can make my hips jerk at will by licking me?\" \n\nShe slapped my hip. \"The hip jerking.\" Then she licked me lightly again, and my hips jerked. \n\n\"You're asking for a long, hard fucking, young lady.\" I threatened. \n\n\"From what I've seen, I'm definitely getting a long, hard fucking, even if you only last a couple minutes. I think I want more 'mouthwash.'\" \n\n\"You don't-\" \n\n\"No, I'm not afraid any more. I want it, but I also know I'll need to be relaxed, or it might hurt more. The tequila is to help me relax now, not to help me be brave.\" \n\n\"Okay, just making sure.\" I waited until I heard the bottle open, a swallow, and the bottle closing sound, and then I started working my fingers in her pussy again as I licked her clit. \n\n\"Damn, you're ready again already?\" She licked my helmet and my hips jerked. \n\n\"No, still too sensitive. But I want to get you ready.\" \n\nI felt her twisting under me, and heard her rummaging in the box. A small hand holding a bugger butt plug and a tube of lube appeared. \"This too, I think?\" \n\n\"Probably a good idea.\" I agreed, then I had to ask. \"Are you going to need to, ah, use the restroom before-\" \n\n\"No, Shelley said you were big. I've been eating only protein shakes and smoothies for the last couple days, and three enemas this morning.\" \n\n\"Oh.\" \n\n\"Too much information?\" \n\n\"No, not really.\" I shrugged. \"I'm just surprised you changed your diet.\" \n\n\"I didn't, not really. I normally drink most of my calories in smoothies and protein drinks anyway. I just made sure to stay away from anything bulky. I'm glad I did. I think you can reach last week's food with that thing.\" \n\nI laughed, knowing she was kidding this time, then I pumped my four fingers into her pussy again a few times before withdrawing them. \n\nI pushed the bigger butt plug in to replace my fingers. It was only about an inch and a half at its thickest point, so it went in easily after my fingers came out. \n\n\"Err, that's not.\" \n\nThen I turned on the switch at the end of the plug, and the vibrator started. \n\n\"Oh. Damn. Yeah, that's good for a bit.\" \n\nI laughed. \"Just for a bit. I need to work on your butt. That plug is a good bit bigger than the first, even if it's nowhere near as big as me. But it'll keep you from closing down all the way while I open up the other end a bit.\" \n\n\"Hmmm.\" She mumbled happily as she twisted her hips. \"Okay.\" \n\nShe licked the end of my cock, and my hips jerked, again. She giggled. \n\n\"I'll get you for that.\" I mock threatened. \n\n\"I am eagerly awaiting my chastisement.\" She licked me again. I was waiting for it, and barely jerked. \n\nI raised my head and shoulders off the bed far enough to see the bottle. It was nearly three quarters full. \n\n\"What?\" \n\n\"Checking the bottle. It's no fun to fuck someone who's completely sloshed.\" \n\n\"It's a half-pint. I could drink the whole thing.\" \n\n\"And be completely sloshed. Stop at half, please. I don't want you puking on the bed. Especially now that I know you haven't eaten any real food for-\" \n\n\"I'll be fine. I don't like being too drunk when I'm having sex either. If you go too fast, I want to feel the pain, so I can make you stop. That thing could actually damage me, I think.\" \n\n\"Okay, we agree, but if the bottle goes below half-way, we stop. If you want to finish it after, that's fine, but you won't be biking anywhere tonight if you do.\" \n\n\"Oh, you'll take my keys?\" \n\nMy voice got a little sharper and louder. \"I'm serious. I think this might work out, and I've already almost lost one person to an accident.\" \n\n\"Oh. Sorry, I was kidding about the keys, and I guess I can see where you're coming from.\" \n\nI took a moment to calm myself down. \"Sorry. Sore spot. Killed the moment a bit.\" \n\nA tongue rasped around the most sensitive bit of my cock head, right at the edge of the helmet. My hips spasmed. \"Damn!\" \n\nThere was laughter from the other end of the bed. \"Get to work, sir. You have things to do before you can see if your package can fit in my shrink-wrap tube.\" \n\n\"Yes, ma'am.\" I replied as I lowly tugged the small vibrator loose. I looked at it and found no stains, and it smelled like musky strawberries. Satisfied, I set it on the floor. \n\nBefore things could tighten back up, I stuck a pussy-wet finger into her anus, then worked another in next to it. \n\n\"Oof. Give a girl a minute to get ready before you add more fingers, please.\" \n\n\"That's all the fingers for now.\" I replied smoothly as I dribbled oil directly on top of my two fingers, so the oil would flow down the crack where the two fingers were net to each other, and flow directly into her ass through the little gap in her sphincter between my two fingers. \n\nShe shook her butt and clenched her ass on my fingers. \"That's cold.\" \n\n\"It'll get warmer quickly. It's pretty hot down here.\" I slowly pushed my two fingers in as I drizzled more oil on them in a steady stream. She'd need a good bit of oil in her if I was going to fit everything inside. \n\n\"Oooh. Damn, that's good.\" More ass-clenching on my fingers. \n\nI stopped drizzling oil after I guessed a few tablespoons were inside her ass, then I started sawing the fingers back and forth slowly. \n\n\"Uh. Uh. Damn that's good. It's been so long, and a vibrator just isn't the same.\" \n\nIt's only been a year for you. Four for me. \n\n\"So you really do like anal?\" \n\n\"I do. I hope that thing of yours will fit.\" \n\n\"It will.\" \n\nI made a promise to myself. Even if it takes six hours, I'm getting balls deep in this ass, and she's going to like it. \n\n\"Another finger, please.\" Cathy gasped. \n\n\"It still seems a bit tight. You sure?\" \n\n\"Yes. Finger. Now.\" \n\nThis might be easier than I thought. \n\nI added a third finger, and more lube before starting to slowly drag the fingers back and forth as I felt her stretch out. \n\nSuddenly, a tongue rasped against my cock again, and I jerked. My hand jerked as well pushing hard into her ass, burying all three fingers well past the second joint. \n\n\"Ow. That was fast.\" She complained. \n\n\"You keep licking me before I'm ready, I'll keep jerking around.\" \n\n\"Oh. Sorry.\" \n\n\"It didn't hurt me. If you want to lick me, feel free, but not on the head, unless you want me doing that again. When it starts to get hard again, you can go back to the head. It won't be long before I'm hard, with what I'm doing down here.\" I pulled and pushed the fingers in her ass a couple times to illustrate. \n\nTwo hands grabbed my shaft and I felt her start corn-cobbing my cock, nibbling and licking on the tube but avoiding the head. \n\n\"Mm mm. Much better.\" I thanked her, then got back to ass-stretching. \n\nIt didn't take long before three fingers moved fairly easily, but I didn't want to rush things. Three deep fingers would be plenty big enough to fit the second butt plug, which was quite well-lubed by the pussy it had been sheathed in for several minutes. \n\nI pushed the three fingers into her ass and held them there. Then I used my other hand to grip the very slippery end of the plug in the other hole. \n\n\"Going to move the plug from one hole to the other. You ready?\" \n\n\"Yes. Please. Do it.\" \n\nI pulled a little on the plug, then let it settle back in. \n\n\"Mm mm. Nice.\" \n\n\"You like that?\" \n\n\"I do. A little more of that would be good.\" \n\nI pulled on the plug, and then sawed my three fingers back and forth in her ass. \n\n\"Oooh. Better. Please. More.\" \n\nI spent the next minute randomly pulling and pushing the plug and my fingers in her pussy and ass, respectively. \n\n\"Stop. Move that thing to my ass. You're starting to get hard, and I want to start fucking.\" \n\n\"Did you get more into that bottle?\" I asked. \n\n\"No, I'm just tired of playing around. I want the real thing.\" \n\n\"You can't handle the real thing yet.\" \n\n\"I bet I can.\" \n\n\"You can barely fit the head in your mouth when I'm hard. I bet you can put your hand in your mouth if you try.\" \n\nI felt one of her hands come off my cock, and the licking and nibbling stopped. \n\n\"Well, yes, but I still-\" \n\n\"Aren't ready. Please. Trust me. I want you to enjoy this.\" \n\n\"If I can fit my hand in my cunt, will you fuck me?\" \n\n\"That's actually the test I use. A woman's hand is wider but thinner than my cock. If your hand will fit, including the thumb, my cock probably will, or it will at least be close enough for me to cheat.\" \n\n\"Cheat?\" She'd picked up on that. \"How do you cheat to stick a dick in a pussy?\" \n\n\"I'll show you, if we need to. After you can get your hand in your pussy.\" \n\nHer hand reached down to where I was sawing the vibrating plug back and forth, and tapped on it with two fingers. \"Get that thing in my ass. I have work to do.\" \n\nI couldn't help but laugh. \n\n\"What's funny? This is serious fucking business, mister. Literally.\" \n\nWe both started laughing. \n\n\"We're going to be punished for our sins, you know.\" I choked out between chuckles and intakes of breath. \n\n\"I know. I'm going be resigned to an eternity of bad jokes, some day.\" She paused. \"But for now, move that thing.\" \n\nI popped the vibrating plug out of her sopping wet hole, and she immediately pushed three fingers in, then managed a fourth. \"Give me a minute.\" She started sawing her hand back and forth. \n\nI pushed hard with my three fingers in her ass, spread my fingers a little to stretch things out a bit more, and then withdrew the fingers and pushed the plug into the gape before it could close again. \n\n\"Ugh. That feels good. So good. I can't wait for the real thing.\" \n\nI pulled away, and rolled to the edge of the bed. \"I'm just going to watch if you want to get yourself ready.\" \n\nHer eyes were closed and her other hand moved down behind her, to her ass. She started wiggling the butt pug in and out just a little bit while she corkscrewed her other and in her pussy, trying to lever it wider. \"Okay. If you want me to lick your cock while I do this, I'll move on the bed a bit.\" \n\n\"Nah, I think I'll watch, and stroke a little to get ready.\" I looked in the box. \"There's a bigger plug in there. Do you want it?\" \n\n\"No. Dang. Kids. These. Days. When I was a sexy young woman, we did things with our hands, not toys.\" \n\nI busted out laughing. \n\nShe opened one eye and looked at me, then smiled back. \"Don't bother me. I'm busy.\" \n\nI started slowly stroking my rod, getting it ready. The head was back to near-normal sensitivity, and I was back up to about eleven inches length. \n\nWatching a good-looking young woman doing her best to jam her hand into her pussy while pulling and pushing on a substantial plug in her butt was doing wonders for my cock-growing efforts. The euphoric look on her face was helping. A lot. \n\nI found the bottle, and it was half-empty. I'd been so into jamming her pussy and ass with plug and fingers I hadn't heard her open it. I made sure it was tight, and slid it between the mattress and box spring. She was so worked up she didn't notice. \n\nI damn well do not want tonight ending with my cock half-buried in the ass of a good-looking woman puking in my bed. \n\nIt worried me that she'd drunk so much in a short time, but it was a half pint, and we had been going at it for about an hour since her first drink. She'd also spilled some and used some on my dick. Her words weren't slurred. I was probably worrying too much. \n\nStill, I was going to be putting a lot in her ass, and Shelley had complained that it was uncomfortable if she'd recently eaten a meal, even if there wasn't anything in her ass to stop my cock. I certainly wasn't going to tell Cathy that, but I didn't want her puking either. \n\n\"I'll be back in a minute, Cathy. I need to get something for you.\" \n\n\"Okay.\" She grunted. \"Hurry up. I think I'm almost there.\" \n\nThe twirling hand was noticeably deeper into her pussy, but not yet up to her knuckles. \n\n\"I'll hurry.\" I promised. \n\nAnd hurry, I did. Bathrobe. A quick pater down the stairs. Jar of peanut butter. And then I ran back up the stairs with what I hoped would prevent puking. \n\n\"Okay, got something for you.\" \n\n\"Is it almost a cubit long, with a fat head?\" Her eyes opened, and she looked at me with my bathrobe and jar of peanut butter. \"Huh\" \n\n\"I saw that you drank more. You said you haven't been eating much. One spoonful of peanut butter.\" \n\n\"Awww. Mom. Do I have to?\" She complained. \n\n\"If you eat your peanut butter, you get a big sausage for dessert.\" I shrugged my bathrobe off, and my cock jutted out almost straight away from my body, bouncing to a stop a few inches from her face. \n\nShe started laughing, and her hands stopped moving. \"Sure. That's a good idea anyway. Once we really get rocking, I guess I might get sickish without anything in my stomach.\" \n\n\"You keep going with those hands young lady, so you don't shrink back down. I'll feed you the peanut butter.\" I opened the jar, and scooped out a couple fingers worth, then smeared it thickly on my cock head. \n\n\"Damn. That's definitely the best way to serve peanut butter that I've ever heard of.\" She jutted her head towards me and opened her mouth like a baby bird, as her hand returned to grinding into her snatch, trying to widen it enough for my cock. \n\nI held the helmet barely out of reach. \"Careful, it's fully erect, you can't put it all the way in your mouth without hurting me with your teeth.\" \n\nShe nodded, and held her mouth open again, but said nothing. \n\nI fed her peanut butter. Carefully. Fortunately she didn't seem too drunk to bite or try to jam me in her mouth. A couple minutes and she had licked at least two tablespoons off my cock. Plenty to coat her stomach with oil, which would hopefully keep her from puking when I started really jamming it to her ass. \n\nMission successful. \n\n\"So, how is the hand job progressing?\" I asked, looking for myself. \n\n\"Think I'm ready.\" \n\nShe had all four finger knuckles in, but not her thumb. I was skeptical. \"Maybe. Let's find out?\" \n\n\"Definitely. You're the one that knows how to use that thing. What position is best for me?\" \n\n\"Doggie. I won't touch your hips until you give me the all clear. You can push your hands back against my thighs and make me stop if I go to fast.\" \n\n\"My hands will go that far back?\" \n\n\"Yes. With your fingers outstretched. Once I'm a couple inches in, it will get easier.\" I noticed she had pulled her hand out of her pussy. \"Don't stop with your hand. When you're stretched out like that, it closes up fast.\" \n\n\"Voice of experience?\" She mumbled into the mattress as she kept twirling her four fingers up to her knuckles in her pussy while she struggled to get into doggie position with one hand. It took her about ten seconds. I didn't help, it was fun to watch. \n\nWhen she was in the doggie position, I answered her. \"Yes. Thirty seconds is the difference between me fitting and me really having to work for it, and causing you more pain than I'd like.\" \n\n\"A little pain is fine.\" \n\n\"A little pain is going to happen.\" I promised. \"But you tell me if it's too much, I'll stop and we can get that bigger plug to make it happen.\" \n\n\"It'll fit. I know it will.\" \n\n\"That's the tequila talking. But you might be right. Ready to find out?\" \n\n\"Yes!\" She wriggled her ass at me. The butt plug was visibly vibrating back and forth as I watched. \n\n\"Arch your stomach down more.\" \n\n\"If I do that, my hand won't reach.\" \n\n\"We don't need your hand there now, but you better play with your clit while I get started.\" \n\nI reached over with my foot and dragged the box of toys next to me, and quickly leaned over, lifting it and putting it on the chair. I'd need the lube bottle. \n\nIt took me about five seconds to put slather my cock with a bunch of lube. \n\nI did a double-take into the box. \"Wait. Condom\" \n\n\"Nope. I'm on the pill. Stuff me, sir. I'm shrinking.\" \n\nI laughed. \"Yes, Ma'am. One good stuffing coming up. Remember, one hand behind you on my thigh- push back on my thigh or tell me to stop, and I stop.\" \n\nI lined up behind her, and checked her tightness with four fingers. They fit up to my second joint, held flat. \n\nThis might actually work. She's got bigger hands than I thought. \n\n\"Fingers?\" Cathy complained. \n\n\"Just checking before the real thing.\" \n\n\"Now. I want that cock.\" She demanded, and it wasn't a joking voice. \n\n\"Yes, ma'am.\" \n\nI pressed my purple helmet against her slot and worked it back and forth, to feel for the hole. When I was centered, I started to slowly push. \n\nI felt my cock head shrinking from the pressure as it started slowly working into the cunt-channel. \n\nCathy started panting, and in a strained voice complained. \"Damn, is that your fist, or a baseball bat?\" \n\n\"I warned you.\" \n\n\"Stop. Let me stretch a bit. Is the head in?\" \n\n\"About half of the head is in.\" \n\n\"Damn. Okay. Let me do this. Don't move.\" \n\n\"I'll stay still.\" \n\nCathy slowly started to rock back and forth, moving only the tiniest bit. I carefully leaned over without moving my hips and picked up the lube tube, and started dripping a drop at a time at the top of my cock head, so it would work around her sorely stretched pussy. It was painfully tight, and I knew from experience that the lube would be squeezed off. Fresh lube was needed right at the entrance, or the fucking would be over before it began. \n\nAnd I'm fucking this woman, even if she tries to go too fast. \n\nI shook my head, and corrected myself. \n\nUnless she says stop. \n\n\"You. Said. You. Could. Cheat?\" She said between micro-thrusts.\" Looking back at me from the mattress where she had her head pressed against her right ear. \n\n\"Do you want me to, or do you want to do it yourself? You're making progress. At least a quarter inch more so far. A half-inch or so to finish getting the head in.\" \n\n\"Cheat. Please.\" She gasped. \n\n\"Yes, Ma'am. Stay very still. This will hurt me more than it hurts you.\" \n\n\"Wait. What?\" \n\n\"I'm going to squeeze my cockhead so it's a good bit smaller with my fist, and pop it inside before the blood goes back into it. It hurts, but it works.\" \n\n\"Do. It.\" She was still micro-thrusting. \n\nI pulled away, put my fist on my cock head, took a deep breath, and squeezed carefully, pushing the blood out. It was not pleasant, and my whole cock started to throb. But after about three seconds, I was small enough that I should fit. I held my cock with one hand, and used the other to squirt a healthy stream of lube into the still-gaping pussy in front of me. Then I pushed forward, my hand against her pussy, and still confining my cock. \n\n\"Ready?\" \n\n\"Yes.\" \n\nI pushed forward, hard, at the same time as I let go of my cock. I was barely fast enough to get the whole cock head in, and maybe a half inch past that. \n\n\"Whoa. Whoa. Stop. Wait.\" Cathy squeaked, but it sounded more like surprise than pain. Her fingers pushed against my thigh. \n\n\"Operation package-in-box is now officially a go.\" I joked. Then in a more serious tone. \"Tell me when you want more. You're past the worst part.\" \n\nMy cock head still hurt. I didn't really want to move for a minute anyway. \"Remember, frig yourself. You really need all the lube you can get.\" \n\nShe nodded and I felt the entrance of her cunt start to vibrate a little as she started furiously frigging herself. \"Did you have to jam it so far in with one thrust?\" \n\nIn a patient voice I corrected her. \"That was just the head and maybe a half inch past that. We should be able to get at least another six to eight inches in you.\" \n\nShe stopped moving. \"You're shitting me.\" \n\n\"Nope. Keep frigging. Tell me when you want more.\" \n\nThe frantic frigging continued, and her breathing got ragged. \n\n\"Breathe slower. Hyperventilating is bad. Concentrate on relaxing.\" ",
        "Her breathing slowed. \"How can I relax with this thing in me? It feels like I've been jammed on top of a telephone pole.\" \n\nIf she complains like this in her pussy, I'm going to have to go really slow in her ass, no matter what she says. \n\n\"I can feel you loosening up. You'll be able to take more soon, I think.\" \n\nShe wriggled her butt back and forth a bit. \"I think you're right. Let me do it again.\" \n\n\"Sure thing. You are in full control.\" \n\nShe started micro-thrusting, but was barely getting anywhere. I kept lubing her, and eventually my cock head stopped hurting from the abuse I'd given it. Then it started getting good for me, even though she was only a couple inches farther in than when I'd first jammed the head past her cuntal entrance. \n\nAbout ten minutes of grunting, squirming, and tiny thrusts later, she was four inches past my cockhead. \n\n\"I feel like there's a foot of you in me.\" \n\n\"Six inches or so. Including the head.\" \n\n\"Damnit.\" \n\n\"What?\" \n\n\"This can't be any fun for you, even if I feel like I'm about to have a monster orgasm.\" \n\n\"No, I'm fine. I like long strokes, but I understand.\" \n\n\"It hasn't been painful for a while, just tight.\" \n\n\"You want me to-\" \n\nShe smiled, \"Continue with operation package-in-box.\" \n\n\"Your demand is my wish.\" I paused, \"Or is that the other way around?\" \n\n\"Shut up and fuck me.\" \n\n\"Can I use my hands on your hips?\" \n\nPlease say yes. Please say yes. \n\nShe paused. \"Yes.\" \n\n\"I'm going to cheat again, and it's going to feel weird for a second, but it's going to make things a lot easier. \n\n\"What? What do you-?\" \n\nI suddenly pulled my cock all the way out of her pussy, and squirted another long, thick stream of lubricant into the widely-gaping pussy cave. Then I quickly jammed my cock back in, and used my hands on her hips to bury myself back to where I'd been before. \n\n\"What the fuck?\" Cathy started raising herself to her elbows. \n\n\"Calm. I just squirted a bunch of lube deep into you. Did it hurt?\" \n\n\"No. Not much.\" She settled back to her shoulders and started frigging herself again. \"Just surprised me. You're too big to be surprising me. Tell me what you are doing next time.\" \n\n\"Those are the only two ways to cheat that I know. The rest is just normal fucking, but bigger. Like this.\" I slowly pushed forward with my hips. I managed about a half inch before it felt too hard to push forward. \n\n\"Ung. Wow. It felt like you moved a lot.\" \n\n\"Half an inch or so.\" \n\n\"That little?\" \n\n\"You'll get used to it.\" \n\n\"I hope not.\" She wriggled her hips. \"More. Start rocking this bed.\" \n\nI slowly pulled back until I saw the bottom of my cock helmet appear outside her cunt, then I pushed back in, slowly, until it stopped. I could feel the pool of lube on my cockhead, it was still a little cooler than pussy walls. \n\n\"Damn. So. Awesome. I hope you can fit in my ass. I want more of this.\" \n\n\"Did you say more?\" I pushed forward, slightly. \n\n\"Yes. More.\" \n\n\"Don't try to be too fast, I want you to like it.\" \n\nShe suddenly pulled forward about three inches and jammed herself back at me. \"Ow.\" \n\n\"I told you\" \n\nShe pulled forward, and slammed back against me again. \"Ow. Fuck me, damn you. I want to hear this headboard banging the wall in two minutes, or I'm taking my ass and leaving.\" \n\nIf you say so. \n\nPart of me was gleeful for being given the 'fuck me hard' command. The rest was still cautious. \"The headboard can't bang against the wall. It's mounted to the wall. But if you're sure you're ready, I'll give you all you can handle.\" \n\n\"Do it, and stop talking about it. Now.\" She looked up at me. \"Pleeeease?\" \n\n\"I cannot resist a lady in distress. Prepare to be fucked.\" \n\n\"Goodie.\" She started frigging hard, and closed her eyes. \n\nI slowly started dragging cock out of her pussy, loving the sight of the ring of flesh that pulled out around my cock with the backstroke. I didn't stop at the cock head. She wanted a good fucking. I wanted long strokes. \n\nI pulled my cock out with a loud, meaty pop, and then pushed it back in, much harder and faster than before. There was a loud outgassing from around my cock as I displaced the air, sounding almost like a fart, and then I hit unexplored territory with my cockhead, and managed to push almost an inch farther in. \n\n\"Oh! My! Stars!\" Cathy yelled, but she didn't seem to be hurting. \n\nI should hit her cervix soon, then the fast fucking starts. I promised myself. \n\nI slowly pulled out again, all the way, watching the goosebumps race up and down Cathy's body as she moaned in pleasure. \n\nAgain, I looked into the gape, and then filled it with a plunge, forcing out air with farting noises. I guessed that I had managed another half inch of depth. \n\nCathy giggled. \"You're making my pussy fart?\" \n\n\"Yes, ma'am. And you're giggling, so it's hammer time.\" \n\n\"Oh, hammer time. Good. I like hammer time.\" \n\nI stopped trying to be sure I didn't hurt her, and started doing what I wanted. I pulled out much faster, and squirted another healthy dollop of lube in. Then I started drilling for oil. \n\nThe first time I jammed forward her eyes bugged out. \"Ooooooh. Damn. You have got to be all in.\" \n\n\"No cervix yet. You'd know it.\" \n\nI pulled out quickly, and jammed myself in, hard. \"Another inch. Almost nine inches in.\" I told her over her gasps as she clenched the sheets with both hands. \n\nChanging the pace, I very slowly dragged my log out of her cunt, feeling the incredible pleasure of my cock head dragging along the slick, barely-yielding walls, she moaned a long moan, and then said \"This is so goddamn incredible. If it feels this good in my pussy I'm probably going to pass out from pleasure in my ass.\" \n\n\"We'll see, won't we?\" After the head popped out again, I jammed it back in, quickly, making another almost explosive loud farting sound. \n\n\"Harder, damn you. Fuck me like you mean it!\" \n\nThat's it. \n\nI started really hammering her. Two more strokes, and I hit her cervix, which caused her to yelp. I was over ten inches in at that point. She was deep. \n\nI paused to let her recover. She hadn't sounded hurt, just surprised. \n\n\"Go. Go. Go.\" Cathy wriggled her hips from side to side and pushed back at me. \n\nI set up a steady, fast, long stroke pace, pulling her back a little towards the edge of the bed after every other stroke as I jammed my meat into her, pulling up a little short of her cervix on most strokes, and not hitting it too hard when I did bump it. \n\nI slapped her on the ass, lightly, and she jerked. \"Again. Harder.\" \n\n\"Sure thing.\" I grinned, and started giving her a firm slap on alternating ass cheeks as I pummeled her pussy. \n\nIt didn't take very long before she was squealing more than talking, and not much after that, she screamed. \"Now. Hammer Me!\" \n\nHer pussy walls started vibrating and clenching me as I forced my cock in and out through the greater resistance. Sweat was dripping off my forehead and falling on her ass. I read E=MC^2 for the hundredth time, and smiled while I tried to restrain the pressure growing in my balls. \n\nCathy collapsed, and almost pulled off me. \n\n\"Not done with you yet.\" I whispered into her ear. \n\n\"Do it. Finish it. Am on pill.\" She whispered, and then clenched her pussy around my cock. \n\nI pulled her back up to a doggie position, and then picked her up with my cock still in her pussy, her back to my chest. \n\n\"Feet on the ground, elbows on the bed.\" I growled into her ears. \n\nShe nodded, and complied. \n\nNow, standing fully upright instead of crouched, I started working to finish myself off. Long, slow strokes, a little whistling farty noise from every stroke, followed by my pressing my cock against her cervix gently, and then pushing another inch of cock in. She was the deepest woman I'd ever fucked. Almost enough to make me think about giving her ass a pass. \n\nAlmost. \n\n\"Good. Good. Yes. More. Damn. Oh. Oh! Oh!\" \n\nHer second orgasm, so soon after the first, surprised her as much as me, I think. The contracting and shivering walls of her tunnel finished off all the rest of my control. One stroke into her orgasm, I exploded into her, and kept on stroking for four strokes before I had to stop myself due to the head of my cock being hypersensitive. The pulses of cum continued as I gasped, almost balls-deep in her, my hands clenched on Cathy's hips. \n\nI clenched my teeth as I dragged my cock slowly out of her pussy. When the head finally popped out, the cold-feeling room-temperature air caused my helmet to tell the rest of my body that it was fucking cold outside, and I was immediately covered with goosebumps. \n\nCathy collapsed forward, and fell flat onto the bed. Her pussy gaped open, but I could see it starting to close. Suddenly, she turned on her side, bent forward at the hip, and reached down with one hand, easily pushing her hand into her pussy with all four fingers and her thumb held together. \"So, that must be what fisting feels like.\" \n\nI shrugged. \"Never tried it myself. Never needed to.\" \n\nShe pulled her hand out of her pussy and started licking it clean. \"Mm mm. Coconut.\" \n\nHer tongue delicately cleaned ropes of cum and lube from her fingers. I could only stare. My cock twitched, and stopped going flaccid. \n\n\"Damn. That's hot.\" I almost panted. \n\n\"Good. I hope it's hot enough to get you ready for the next part, because I've been more than a year without a real cock in my ass, and you just gave me the best sex of my life in my pussy.\" \n\n\"I am going to buy so many presents for Shelley for this, and it will ever be enough.\" \n\n\"I'm still not entirely sure you can fit in my ass. It's a lot tighter than my pussy.\" \n\n\"It'll fit, if we take our time.\" I paused. \"You have to trust me more this time. Your ass isn't as forgiving as your pussy is. Pussies are made for kids' heads, a lot bigger than my cock.\" \n\n\"Fine. I'll trust the expert. Who has only ever fucked one woman's ass.\" \n\n\"Who was an anal virgin, and it took six hours.\" \n\n\"Exactly. I am not an anal virgin. I've never had anything that big, or even close, but-\" \n\n\"Please, just trust me. The last thing I want to do is hurt you. Let me control the pace when I get my cock back.\" \n\n\"When you get your...\" She chuckled. \"Fine.\" \n\nShe dipped her hand into her pussy again, but had to push hard to get it in. She pulled out another ropy gooey mess of cum, pussy juice and coconut lube. \"I did say I liked coconut, right?\" She started slowly licking her hand clean again. Inside my head, a virtual me blew another load, mentally. \n\n\"I am going to fuck your ass so hard, woman. That is incredibly hot.\" \n\nShe clapped like an excited little girl. \"Goodie, but you'll need him to do it, and he's still out to lunch.\" She sat up, and leaned forward, reaching out a hand before I could react, catching my cock and dragging it, and me, closer to her, gently. \n\nWith both hands, carefully avoiding the head, she started corn-cobbing my cock again, going to her knees at my feet for a better angle. I watched as a small pool of cum and lube formed under her pussy on the carpet. My cock twitched. \n\nShe rubbed my dick with her cheek, lovingly. \"Dick Peterson, we have free lunch at the office today. No need for you to go anywhere.\" Cathy looked up at me with puppy-dog eyes and a pouty mouth. \"How long will he be out for lunch?\" \n\n\"Damnit. I don't care if you can take it in the ass or not. You're in if you want in.\" \n\n\"A deal's a deal.\" She lightly stroked the flanks of my meat, and it jumped a little and I shivered as goosebumps ran up my body. \"Besides, I like anal. I want this, maybe as much as you do.\" \n\nI doubt that very much. \n\nShe looked down and noticed the pool under her pussy. \"Damn. Mama taught me never to eat off the floor. How much lube did you use, anyway?\" \n\n\"Most of the small tube. I saw some anal lube in there though, and it's the same brand Shelley and I used to use. I know its good stuff.\" \n\n\"You used most of a tube for one fucking?\" \n\n\"The lube industry loves guys like me, I bet. I could use less, but it helps to use more. The absolute last thing I want to hit is a dry spot. As big as I am, that'll make a lady sit up and take notice real quick. Had it happen a couple times in high school when I was poor, under-aged, and buying lube was harder.\" \n\n\"I bet.\" Cathy resumed corn-cobbing my cock. \"Shouldn't we be stretching out my ass or something right now?\" \n\n\"You little minx. Can't get enough.\" \n\n\"Actually, I think I can get enough. I just need you to give it to me.\" \n\nMy cock jumped, slightly. \n\n\"I felt that. Mr. Dick Peterson is returning from lunch. You better get stretching my ass to your specifications, sir. After what we just did, I'm sure it's going to take quite some creativity to fit this package into that box.\" \n\n\"No creativity. Just care, time, and lots of lube.\" \n\n\"It is water soluble, right? An enema will wash it all out? You like your lube, but I don't want to be leaking oil for a week if you use a half gallon of the stuff to jam this thing in my ass.\" \n\n\"Yes. Water soluble.\" \n\n\"Good. Where do you want me?\" \n\n\"On the bed, doggie again, please.\" \n\n\"Arf.\" She barked in a high pitched voice as she stood and jumped on the bed. \"Assuming the position, sir.\" \n\nI smiled as she folded back into the same position as before, head on the mattress, ass in the air. Her pussy was still gaping slightly, and I could see about an inch inside. My cock twitched again, but I knew it would be at least another few minutes before it would 'come back from lunch.' \n\nReaching out, I pulled the chair next to the bed, and the box next to the chair. Then I sat in the chair and cracked my knuckles, announcing, \"Muahahaha. Let the preparations begin.\" \n\nCathy looked back at me and shook her ass. \"Faster! I don't feel you stretching me yet!\" \n\nI slapped her ass. Hard enough to leave a red mark. \"Insolent wench, I'll start stretching you when I'm good and ready to start stretching you.\" \n\nCathy didn't say anything, she just wriggled her ass and reached behind herself, grabbed the end of the butt plug, and started slowly pulling it out and pushing it back in. \n\n\"Impatient, are we?\" \n\n\"Yes. I know we have to wait for Charlie Brown to come back from lunch, but-\" \n\n\"Charlie Brown, really?\" \n\n\"Bald, with a big head?\" \n\nI slapped her butt. \"You're awful cheeky.\" \n\nShe groaned. \"Enough puns. Prepare me for some booty-plundering!\" \n\nI took the largest butt plug out of the box and lubed it up really good, then slowly pushed it in her pussy. There was a good bit of resistance. \n\n\"Tell me if it hurts. I want to keep it ready for when your ass is big enough to fit it in.\" \n\n\"More. Doesn't hurt.\" \n\nI finished pushing the butt plug in her snatch and then turned it on. The motor was louder than the others, and clearly more energetic. \n\nCathy cooed. \"Wooo. That one's got some serious jazz to it. I like.\" \n\nI looked at the two plugged holes in front of me, and listened to the audible hum of two motors and one happy woman. The vista was beautiful. \n\nFour years since the last time I saw something like this. \n\nCharlie Brown twitched, but didn't start rising to the occasion yet. \n\nI leaned forward, and started licking around the point where the medium butt plug jutted out of the awesome ass in front of me. \n\nCathy groaned in pleasure and I was rewarded with an ass pushed firmly against my face. I dug in with my tongue for a few more seconds, and got the anal lube from the box. It was a little thicker than regular lube. When I was stuffing an ass, I needed better lube. Shelley insisted on it, and up until now her ass was the only one I'd been in. \n\nI worked the medium plug out of her ass, tossed it on the floor, and squirted a long stream of lube in the small gape that removing the plug had created. \n\n\"Eep! Cold!\" Cathy complained. \n\n\"Lube. It'll warm up in a second.\" I reassured her as I lubed up my right hand. \n\n\"Okay.\" She shook her ass. \"Hurry up, I'm shrinking!\" \n\n\"Damn, woman. Give me time, I don't want to break anything back here.\" \n\n\"Fine. Fine. Take your time, do it right.\" She sounded resigned and bored. \n\nI put the lube bottle down, pushed three fingers in her ass, and slapped her left butt cheek with my left hand. \n\n\"Better.\" She mumbled as she pushed back against my hand, hard. \n\n\"You are one bossy, saucy little wench aren't you?\" \n\n\"When I know what I want. I go for it. Especially with a little tequila to help. Right now, I want you balls-deep in my ass.\" \n\nDamnit. Hurry up! I tried to encourage my dick to get with it and go hard. It twitched. \n\n\"My little friend still isn't ready, but he's getting there.\" \n\n\"Won't do us any good if he's ready and I'm not.\" She pushed back against my fingers in her ass again. \n\n\"Actions speak louder than words.\" I punctuated my words by starting to saw my three fingers back and forth in her ass. \n\nCathy bucked back at me, matching my rhythm. It wasn't more than a couple minutes before a fourth finger fit in. \n\n\"Is that four fingers? You don't have to get your whole fist in my ass for your cock to fit, do you?\" \n\n\"No, my four fingers up to the knuckles is usually enough after I've cum at least once.\" \n\n\"Are you going to be hard enough to go deep?\" \n\nDefinitely. \"Yes. Don't you worry, I'm going a foot deep in your ass.\" I pulled my fingers away from the greedy clutching sphincter, added more lube to her ass and my hand, and stuck all four fingers back in before the gape closed. \n\n\"That has got to look so damn hot. Do you think Shelley would video us?\" \n\nI stopped moving my hand, startled at the thought. \n\nCathy went still. \"Keith, did I go too far?\" \n\n\"No. Just startled me. It's not like she didn't plan all this. She knows what's supposed to be happening, and spent a lot of time setting it up. I think she would like to watch. We do sometimes watch pornos when she sucks me off.\" \n\nI looked over at the gaping asshole, and watched it shrink slowly. \"Oh, no you don't.\" \n\n\"'Oh, no I don't' what?\" \n\nI pushed my four fingers back in her ass before the gape could shrink more. \"Not you. Your asshole. Sneaky. Tried to close up while we were talking.\" \n\nCathy jammed her butt back against my hand, hard. \"Teach that sneaky asshole who's the boss!\" \n\n\"Yes, ma'am.\" I managed to get all four fingers two knuckles deep, and reached for the largest plug, conveniently jammed in the pussy nearby. \n\nI pulled and pushed at the plug, making sure it wasn't going to need special effort to remove it. It was firmly in place, but not so tight it should hurt to remove it, I didn't think. \n\nWriggling the big plug some more, I asked, \"ready for the old switcheroo?\" \n\n\"Please. Hurry up. I've got an itch about a foot deep in my ass that needs scratching.\" She ground her ass against my hand, suddenly, hard. \"Ow.\" \n\n\"I told you to be patent. Slow and steady wins the race.\" \n\n\"I've always been more of a rabbit person myself.\" Cathy complained. \"Hurry, please. I want this so bad. Just thinking about it is driving me crazy.\" \n\nI could feel the blood flowing into my cock again. \"It won't be long before I can scratch that itch for you. Someone's starting to come back from lunch.\" \n\n\"Good. Tell Mr. Dick Peterson to get his ass into my ass ASAP. Special project. Needy customer.\" \n\nI popped the big plug out of her pussy and quickly swapped it with my fingers in her ass. It fit in with a little effort. \n\n\"Is that thing as big around as your cock?\" \n\n\"Not quite. I'm about an inch thicker.\" \n\nShe reached behind herself and pulled the thickest part of the plug past her pucker, then pushed it back in. \"I need to keep pulling it out and putting it back in, or my ass will shrink around the plug end, right?\" \n\n\"I thought you knew about anal.\" ",
        "\"I've never needed toys to get me ready. Never been with a guy bigger than eight inches.\" \n\n\"Okay, yes, work it in and out. If you want to help me get our mutual friend ready for a spelunking adventure in a dangerous tunnel, I'd appreciate it.\" \n\n\"Dangerous?\" \n\n\"He might get lost in there. It's dark and he doesn't have a light.\" \n\n\"I guess it is pretty close quarters, and very slippery footing.\" She picked up the joke and ran with it as she turned around to face me. \n\nI stood, and she flopped over on her back, and opened her mouth. \"Think you can take a little humming yet?\" \n\nI rubbed the head of my cock, and it wasn't too sensitive. \"Definitely. Remember to keep working that plug. I want the spelunking adventure to start ASAP.\" \n\n\"I thought I was the impatient one?\" She muttered with a smile before guiding the head of my cock toward her mouth. \n\nNo, but I'm the one that knows how fast we can really go. \n\n\"I want this too. A lot.\" I looked down at her. \"Four years since I've been balls-deep. And after two cums, I'm going to last a long, long time before I paint your colon white.\" \n\n\"Is that a threat, or a promise?\" \n\nBoth, I thought, but I only smiled to her. \n\n\"So you're the strong, long, and silent type, eh?\" She dragged me a little closer, gently, by my cock, and fed it down into her throat, and then started to hum. \n\nAfter two cums in less than two hours, I was slow to grow. Steady though. I could feel my pulse along the tube as I watched Cathy with one hand between her legs pulling and pushing the big butt plug, while her other hand and her mouth worked my member. \n\nIn about five minutes, Cathy had to take my cock out of her mouth. She scraped my helmet a bit too hard with her teeth, and I winced and jerked back. \n\n\"Sorry.\" \n\n\"No problem.\" I leered down at her. \"I'll figure out how you can make it up to me.\" \n\nShe started kissing the head of my cock, looking up at me with doe eyes. \"Does this make it better?\" \n\nBlood surged to my cock at her expression. She obviously felt it with her hand. \"Ooh, I'd say that was a yes. You like cute, innocent expressions on the ladies that you're about to feet a foot of meat to, sir?\" \n\n\"Apparently, yes.\" I grated out as she stared up at me with puppy dog eyes while she licked and tenderly kissed the head of my schlong. More strong pulses down my cock, and it was getting close to full size. \n\n\"Poor, innocent me. About to be brutally ass-fucked by a brutish ogre with a cock bigger than my forearm. Nobody can save me.\" She smiled evilly, and licked the tip of my cock, then tried to stick her tongue in the hole, wriggling it a bit. \n\nI almost fell to my knees. \"Oh. Damn. That's good.\" \n\nCathy let go of my cock, and it raised up away from her a bit. She lightly swatted it back and forth, and it swung like a pendulum over her face. \"Looks about ready to me.\" She raised her head a bit, and stuck out her tongue. As my cock swung back and forth, she licked it. When it passed over her mouth. \n\nI smiled at her, showing my teeth a bit. \"Turn that ass around, it's show time!\" \n\n\"Oh goodie. I love this movie.\" She bounced around on the bed, getting back into the doggie position with another high pitched \"Arf!\" before settling her head on the bed and starting to frig herself with one hand while still pulling the plug in and out past her ass-ring with the other. \n\nI moved up behind her and lubed up my right hand. \n\nShe looked back at me, and said in a serious voice. \"I'm going to trust you not to hurt me with that thing. Stop if I say stop.\" \n\n\"I will. Don't tell me to fuck you harder until you feel that I'm balls-deep. I might hurt you.\" \n\nShe nodded. \"Deal.\" \n\nUsing my left hand, I gently brushed her hand off the plug, and pulled it out, replacing the ass-stretcher with the four fingers of my lubed right hand. I tossed the plug on the floor, and watched it roll like a child's top no longer spinning fast enough to balance. \n\nI shook my head, and picked up the anal lube bottle with my left hand, and spread my fingers a little, squirting a long stream into Cathy's ass past the gap I created. \n\nCathy's ass grew goosebumps, and she groaned, pushing back at my hand with her ass, but she didn't say anything. \n\nI whispered \"relax. You've done anal before. You know if you relax, it's easier.\" \n\n\"Hard to relax. I know how big that log of yours is.\" \n\n\"I understand, but try. Once I get all four fingers in to my knuckles, I'm going in. I'll warn you.\" \n\n\"Thanks.\" She whispered, looking back at me. I could hear the fear in her voice. All bravado aside, this clearly worried her, at least a bit. \n\nProves she's not that drunk, and reasonably sane. I thought to myself as I put pressure on my hand trying to press four fingers knuckle-deep into her ass. \n\nFour fingers wide was a good bit wider than my cock, but the hole I was making was a narrow oval. My cock was a tube. I didn't want a repeat of the pussy incident, because compacting the head of my cock a second time in one night would leave me seriously sore the next day. \n\nI moved forward, and swung my cock under her, between her legs, and bounced it off her hand as she frigged herself, then I reached around her, and started tweaking her nipples with my fingers. \n\nShe jerked back, hard, against my hand, and gasped \"Ung.\" but my right hand fingers didn't go knuckles deep. \n\n\"We're close. Don't rush it.\" I tweaked her nipples again. \n\n\"Okay.\" She whispered, opening her eyes again, and looking back up at me. \"I'm ready when you think I am. Won't push any harder.\" \n\nI felt her relax, and my right hand fingers slipped in to the knuckles. \n\n\"It's time.\" I whispered. \n\n\"Go slow. Please.\" \n\n\"I will. Remember who made us go fast last time.\" \n\nShe smiled. \"I remember. I'll be a good girl.\" \n\n\"I'd rather you be a very bad girl, but patient.\" \n\nI felt her body shake as she chuckled. \"Okay.\" Then she relaxed again. \n\nI backed away from her far enough that I could lube my cock, but not so far that I couldn't keep my right hand knuckles deep in her ass. \n\nThe lube was cold, and my cock twitched, growing just a little harder. It was a little undersized after two rounds with Cathy, but hard enough to get the job done. \n\nI leaned forward and flexed my right hand fingers a bit, pouring a long steam of lube past the fingers into the pinkness beyond. \n\n\"Pull your cheeks apart a bit. It'll help some. Remember to stay relaxed.\" \n\nShe pretended to talk to herself, but was clearly making a point. \"Stay relaxed, he says. I'd be willing to bet he's never taken a cock like this up his ass.\" \n\n\"No, I haven't, but I still need you to relax as much as you can. If it hurts, stop me. Hand against my thigh, or say stop, either way, okay?\" \n\n\"And don't tell you to go faster until I feel your balls slapping on my pussy lips. Got it.\" She reached back with both hands, spreading her cheeks. \n\nI leaned forward and kissed her between the shoulder blades. \"You're awesome.\" I whispered. \"I won't hurt you.\" \n\n\"I'll be more awesome after you scratch that itch.\" She whispered back. \"Carefully.\" \n\nI stood back up behind her, and lined my rod up behind my right hand. \"Here goes.\" \n\nShe pulled a little harder on her butt cheeks as I pulled my right hand out of her ass, and pushed forward with my cock. It stopped moving when the head was almost all the way in. \n\n\"Holy shit.\" She whispered. If I need to keep my cheeks held apart, frig me, please. \n\nI reached around her and started playing with her clit, as asked. \"Push out, like you're trying to use the restroom. The head is almost all the way in.\" \n\n\"I feel like I'm trying to shit a bowling ball already, but I'll try.\" She complained, her voice strained. \n\n\"Does it hurt too much?\" \n\n\"No. No. Give me a second.\" She took a breath, slowly, then my frigging hand felt her abdominal muscles move a bit as she did what I asked. \n\nMy cock head popped in, and the pressure I was pushing against it let an inch of shaft follow. \n\n\"Ohhh. Slow. Slow.\" Both her hands left her ass cheeks and pressed back against my thighs. \n\n\"You got a bonus inch there. Feeling okay? I'll hold still till you want more.\" \n\nShe was starting to hyperventilate again. \n\n\"Slow breathing. Relax. Now that the head is in, it's just a matter of time before I scratch that itch of yours.\" \n\n\"Okay.\" She opened her eyes and looked at me, trapping my gaze for e second before closing her eyes again. Her breathing slowed, and I felt her sphincter relax a little, but I didn't press in. Both of her hands were still on my thighs. \n\nThen she started to rock forward and back, slowly. I stood perfectly still and let her do what she wanted. After two cums, I was good for at least thirty to forty-five minutes in her ass, I was sure. \n\nJust like when we were in the same position in her pussy, I reached over, got the lube bottle, and started dripping it on the edge if the tight hole my cock was jammed into. \n\nI felt myself getting harder and bigger as I watched my cock moving slowly deeper into her ass. She was stretching as I was getting bigger though, so it didn't stop anything. \n\n\"You're doing great. That's four inches now.\" \n\n\"Past the head?\" She asked between low grunts. \n\n\"Nope. An inch past where you started.\" \n\n\"Damn. I'm already close to cumming.\" \n\n\"Good. If you cum, you will be very relaxed after, for a few seconds. Try to remember to push back to me after you cum, and if you push like you're trying to-\" \n\n\"I got it. Anal experienced.\" She sounded a little annoyed. \n\n\"Sorry.\" I apologized. \n\n\"Is okay. Just don't move. Let me. I got it from here, until you're scratching that itch, then it's all yours.\" \n\n\"Yes, ma'am. Standing still until that itch is scratched, ma'am.\" \n\nShe started moving again, a little forward, and then a little more back. She was making good progress, but would hit the inner sphincter in a few inches. \n\n\"Can you feel me getting bigger inside you? You're so hot. Do you have an itch thirteen inches deep? I think I'm gonna scratch it.\" \n\nShe opened her eyes and looked at me again. \"I thought you would be smaller this time around.\" \n\n\"I was, to start.\" I shrugged, and grinned. \"You're pretty hot stuff, and it has been four years.\" \n\n\"You better last long enough in my ass to give me an anal orgasm.\" She threatened, darkly. \n\n\"I will. Promise. I'm not cumming any time soon.\" \n\n\"Better not.\" She closed her eyes and started humming a song I didn't recognize under her breath as she rocked back and forth on my cock. \n\nWhen I was a little over halfway in, I felt my helmet hit a restriction. \"That's your inner sphincter. Seven or so inches in.\" \n\n\"How do we push past it?\" She whispered. \n\n\"More lube. Lots more lube, patience, and an orgasm would help.\" \n\n\"How are we getting more lube past-\" \n\n\"Ready to cheat?\" \n\n\"That again?\" She paused. \"It won't hurt?\" \n\n\"Maybe a little, but you're stretched out good right now, I'll pop out, and right back in, easy.\" \n\nShe took her hands off my hips and held her butt cheeks apart. \"Do it.\" \n\nI picked up the lube with my left hand, and grabbed the shaft of my schlong with my right. \"Three... Two... One... Now.\" \n\n\"Oh, my God. That is so incredible.\" Cathy nearly shrieked as I dragged my cock out of her ass. \n\nAfter the head popped out with a loud pop, I quickly pointed the lube bottle at the gaping pink hole in front of me, and squeezed the bottle hard. A steady stream of lube poured into the depths of Cathy's gaping ass. \n\n\"Ooh. More cold. Cold is good. Cold means more fucking. Deeper fucking.\" She sounded like she was dreaming. \n\nBefore her ass could tighten back down, I pressed my cock head into the gap, and pushed. It was tight, but my helmet made it through without stopping. \n\nI kept pressing forward to the sound of farting as my meaty member displaced the air that had filled the place it had momentarily vacated. After a couple seconds, I felt the second sphincter again. \n\n\"All yours, Cathy. You're doing great. Are you close to cumming? This would be a good time. \n\n\"Yes. Can you go in and out some, but not pull all the way out? It feels absolutely incredible as you pull back. When I cum, push in and I'll try to relax and get Dick Peterson past the sphincter. \n\nI grinned. \"Your wish is my command. Five of so inches of back and forth till you start squealing, then I push forward and try to get us past the inner sphincter?\" \n\n\"Yeah. Exactly. Please.\" \n\nI didn't wait for more instructions. If I could make her cum, I would almost certainly get past that lubed inner sphincter. It wasn't as tight as the outer one. \n\nAs I drew back, there was a long continuous moan from Cathy. \"OoOoOhOhOoOo\" \n\nWhen I pushed forward, I felt her pushing back. I carefully didn't hit the inner sphincter too hard, but I did nudge against it, pressing it. Testing it. It released partway even before she had orgasmed. \n\nEasy Peasy. I thought to myself. Just need to make her cum. \n\nI was in absolutely no danger of cumming, but watching the ring of flesh drag out around my cock on every backstroke was amazing. The feel of my cockhead dragging against the inner walls of her rectum was a sensation I'd missed for far too long. I felt myself getting harder. Longer. Thicker. \n\nGood thing I'm already inside, or this would be a problem. \n\nI kept slowly plowing back and forth in Cathy's ass. Five inches. Bump the inner sphincter. Five inches, bump the outer sphincter with the back of my helmet. Rinse. Repeat. \n\nCathy was panting and madly frigging herself, one hand on her clit and the other hand jamming three fingers in and out of her sopping, dripping cunt. Her butt-cheek-holding duties clearly forgotten. I didn't mind. I was in like Flynn, and the end was in sight. \n\nWell, I wasn't in like Flynn. Cathy wasn't under-aged like Flynn's girls had been. Dirty bastard. \n\nLucky dirty bastard. \n\nStay on target, Keith. Stay on target. Daydream after you paint her colon white. \n\nCathy suddenly let out a deep groan and both her hands stopped frigging and started gripping the sheets as she pushed her mouth into the bed and started moaning incoherent words. \n\nI felt her abdominal muscles start to contract and shake. Her anal walls grabbed my cock and started trying to push me out. I didn't try to move, only resisted being pushed out. Stroking might hurt her during an orgasm. I rode out the storm, reveling in the peristaltic muscle action trying to push my cock out of her ass. The almost mindless pleasure noises Cathy was yelling into the mattress were stroking my ego to no end. I was only seven inches in, and she was already having a loss-of-control orgasm. \n\nShe wasn't lying when she said she likes anal. Can't wait to see what full length strokes do for her. \n\nSlowly, her orgasm died down. Cathy was silent, panting. Hands clenching and unclenching the bedsheets. \n\n\"Cathy. Time to get past the sphincter.\" I said, quietly.\" \n\n\"You do it. Too tired.\" \n\nI shrugged. Tired meant relaxed. She certainly felt a lot looser, but that wouldn't last long. \n\nI pushed forward, slowly, inching my way deeper into her ass until I found the inner sphincter with my helmet. I pushed, slowly, feeling it give way. The pressure continued to raise against my cockhead, but I felt the ring of muscle dragging past. \n\nThinking calm thoughts, I managed to avoid thrusting. \n\nSuddenly my cockhead popped past the inner sphincter and gripped the shaft of my cock. \n\n\"You have to be all the way in now.\" Cathy whispered, eyes closed. \n\n\"See for yourself. Reach back and feel where my hips are.\" I grinned, not knowing exactly what her reaction would be, but imagining several possibilities. All of which were going to stroke my ego. \n\nHer right hand reached back and found my cock next to her ass. Then her fingers started following it back. \"God damn you. You still have almost six inches outside me.\" \n\n\"Not that much. Four or so. But we're past the inner sphincter. I'll need you to lay on your right side now. I can get the rest of the way in, easier, that way.\" \n\n\"You want me to move with that anaconda in my gut?\" \n\n\"I'll help.\" I carefully supported her weight and kept myself from pushing deeper as I lowered her to her side on the mattress, and put her left leg over my shoulder, pulling her hips to the edge of the bed. \n\n\"I feel like I have to take a gigantic shit.\" She complained. \n\n\"That will pass again once we start moving. I'm going to start pushing the rest of the way in, slowly.\" \n\n\"The rest of the way.\" She blew out a lungful of air. \"Please. I want it.\" \n\nI leaned forward and kissed her cute little button nose. \"So do I. Get ready.\" \n\nThe inner sphincter was looser around my shaft, but I still didn't want to move too fast, and pressed in, slowly, carefully, as I dripped lube around the outer sphincter. The sensation of my cock head going around the curve in her intestines was amazing, as always. \n\nSuddenly, Cathy perked up. \"Are you all-in yet?\" The tone was a little childish. Her eyes opened and looked at me, and I could see the sparkle of mischief. \n\n\"About two inches left.\" \n\nA second or two later, Cathy asked again. \"Are you all-in yet?\" in the same high, chirping voice. \n\nI suddenly realized what she was doing. \"Young lady, I'll be all-in when I'm all-in. If you don't relax and be a good girl, I'm going to stop this car and paddle your bottom.\" \n\n\"I'd settle for just the bottom-paddling, if that's okay with you.\" She smirked at me. \n\n\"I'm almost all-in now. It's hard to paddle you when you are on your side. You want to try cowgirl or doggie again? I can give you a good paddling in those positions.\" \n\n\"Mmmm. Ride 'em cowgirl. After you get all-in.\" \n\nI wanted to just jam the last two inches of cock into her and start slamming, but she wasn't ready for that yet. I slowly, steadily forced my head deeper and deeper until my hips touched her ass cheeks. Then I kept pushing another inch. \n\nCathy's hand tickled my cock where it entered her ass, then felt back another half inch till she found where my cock root ended. \"There's still almost an inch outside. Fix it, sir.\" \n\nI stared down at her. \"I'll see what I can do, ma'am.\" I lowered her left leg off my shoulder, and pushed it up, her knee against her perky little breast. \"Do the same with your other leg. Hold your legs against your chest, and I'll get that last inch for you.\" \n\n\"Thank you.\" She whispered as she wrapped her arms around her knees, holding them against her chest. \n\nI looked down at where her ass surrounded my cock, and dripped a few more drops of lube on the stretched muscle. \"I need to pull you a little towards the edge of the mattress.\" \n\n\"Do it. Do it.\" She repeated in a dreamy voice. \"This is so incredible.\" \n\nI pulled her about three inches closer to me, her ass was hanging about an inch off the edge of the bed. I started to push again, carefully, slowly, and after another three minutes, I managed to get practically my whole cock inside. \n\n\"There we go, young lady. I'm all in.\" \n\n\"Yee-haw. Ride'em time.\" She smiled and opened her eyes, letting go of her knees and slowly straightening her legs. \n\nI slowly, I raised myself onto the mattress, and held her firmly as I rolled to my back with her still fully impaled on my cock. \n\nWhen I stopped moving, I was on my back. She was sitting upright, facing away from me, with her feet on the floor between my legs. \n\n\"This is gonna be so damn good.\" She looked back over her shoulder at me. \"You ready to ride, horsie?\" \n\n\"Sure thing.\" I grinned back at her. \"Stay in the saddle. You know how to post, right?\" \n\nShe stuck her tongue out at me. \"I've got your post, right here.\" She leaned a little forward, and pointed at my cock, then sat back down. \"Ooh. Damn. That's good.\" ",
        "I slapped her ass hard enough to leave a red mark. She halfway stood up, exposing about eight inches of my cock, then pushed back down, slowly. \"Ooooooh. Yes. Damn.\" \n\nThe sensation of my helmet dragging through the inner sphincter and pushing back deep again made me groan. \"I've missed this so much. Thank you for being awesome, Cathy.\" \n\nCathy looked over her shoulder at me. \"Time for a ride.\" Then she stood up, slowly, until her knees were nearly straight, pulling at least ten or so inches of me out of her. She groaned a long, guttural noise as she dragged my cock through her rectum. \n\nSlowly, she sat back down, and started repeating the motion, slowly. Every time she stood, she groaned and moaned deep in her throat. When she sat back down, she took in a huge breath. After nine strokes, her legs started wobbling as she stood. \n\nI was lost in my own world, watching that beautiful ass gobble my cock on every stroke. I couldn't complain, even though I'd be stroking a little longer if I were in control. \n\nSuddenly, Cathy sat back on my cock after only half-standing. Her ass griped my cock again and she squealed. \"Fuck! Fuckity Fuck! I'm cumming! Her ass grabbed my cock in a vice grip and she slowly toppled to her right side, almost dragging my cock out of her ass. \"So good. So big.\" \n\n\"Is it my turn now?\" I asked after her ass stopped frantically trying to squeeze my cock in half. \n\n\"Can't stand up any more.\" She whispered. \"Feels too good. Your turn. Show me what you've got, big boy.\" \n\nI slowly dragged my cock out of her ass, listening to her indrawn breath catching in her throat as the helmet dragged along the inside of her ass and finally pulled out with a wet pop. \n\n\"Knees on the floor, chest on the bed. Quick before you close up.\" \n\nShe rolled over and put her stomach on the mattress, knees on the floor. \n\nIn the meantime, I grabbed the lube, wet my cock, and got on my knees behind her, aiming my cock at her gaping ass. Before I pushed in, I shot another long stream deep inside. I was planning on hammering her ass, and didn't want to stop for more lube. \n\n\"Are you ready for that itch to get scratched?\" \n\nCathy nodded and looked back at me and grinned. \"Hurry. Scratch my itch.\" \n\nI did what she asked, pushing my cock past the outer sphincter with some effort, making her tense up. The inner sphincter was easier. I pushed past it, too. Finally, after about five seconds of pushing, I bottomed out and ground my hips into her ass. \n\nThen I started 'scratching' that itch. Slowly in, and slowly out. Thirteen inches of me left that tight ass on every stroke, and thirteen inches of me pushed air out as I plunged back in. Despite the loud gas escapes, there were no fart jokes this time. It was time for serious fucking. \n\nCathy groaned constantly in pleasure, almost incoherently, and I felt my balls start to swell. \n\n\"Are you going to cum soon?\" She cooed as I ground my hips into her butt cheeks, my cock twitching deep in her ass as I tried not to think of cumming. \n\n\"Soon.\" I clenched my teeth. \"Ready for the grand finale?\" \n\n\"There's more?\" \n\nI sped up. Instead of five second strokes, they were two seconds. Her muscular ass bounced as I rocked my hips off her every two seconds. I didn't pull all the way out though. I didn't need to fold my cock against her ass if I hit it wrong, or she moved. That hurt like a bitch. \n\n\"Oh. Damn. Again? Really? I'm. gonna.\" \n\nCathy said one word between each stroke \n\n\"Cum\" \n\nHearing the word, I couldn't stop myself, and slammed myself in, hard and deep. After almost forty-five minutes in Cathy's ass, even twice-emptied balls filled back up substantially. I started to paint her colon white. Spurts of cum jetting out of my cock, deep into her ass. \n\nSuddenly, I felt her ass clench on me, and saw Cathy gripping both hands on the sheets again, she was pushing her head into a pillow, making noises that sounded like they might have been Spanish. \n\nAs her orgasm hit, her ass milked my cock. The drenching of lube I had used to make everything smooth allowed the tight tube to move slightly around my shaft and it felt like her ass was sucking the cum out of my cock. \n\nAfter ten spasms, there was nothing left in my balls, but Cathy's ass massaging me made me keep contracting like there was. After fifteen spasms, I had to pull out, dragging my now-hypersensitive helmet back through two well-lubed sphincters. \n\nI yelped twice, once as my helmet cleared each sphincter, and then my cock was free. After I fell back on my ass, hands behind me to support myself, my cock slowly shrank and dragged itself across the carpet toward me. I took a deep breath. \"Thank you. That was incredible.\" \n\nI looked at Cathy, who was tenderly feeling the edges of her still gaping asshole. \"Yes. Yes, it was.\" She said in a small voice, then she spoke louder. \"I'm glad I'm not a bike courier any longer.\" She pointed at her asshole. \"I might lose the seat in here if I try to get on the bike now, and I imagine I'm going to be walking funny for a couple days.\" \n\nI chuckled. \"You want a ride home?\" \n\nShe looked up at me and smiled. \"I think I am home, aren't I?\" \n\nThere was only one answer for that. \"Yes. You are.\""
    ],
    "authorname": "OneShotBob",
    "tags": [
        "oral",
        "vaginal",
        "anal",
        "size"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/special-delivery-45"
}