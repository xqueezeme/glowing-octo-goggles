{
    "title": "Remote Controlled Valentine",
    "pages": [
        "A little Valentin's Day story that combines some truth and some fiction. \n\nIf you are not familiar with my other work, I tend to write in a unique style that combines the main character's thoughts, lots of dialog, and a healthy amount of consensual play; with all parts of the lovely female anatomy. \n\nRoM\n\nAmy and I are your classic early empty nesters. Married young, kids young, not yet the big four zero and our house is already quiet. The upside is that we are still very healthy, physically fit, have very strong sex drives and are still pretty adventuresome, maybe even a little kinky.\n\nOne place outside of our bedroom that Amy gets really horny happens to be the hardware store. It goes back to when we were newlyweds, fixing up our first house. I once fingered her under her skirt to a good orgasm in a lumber yard and pretty much created her hardware store fetish. Not any particular one; a big box retailer or small town hardware store are all the same. The sights, smells and sounds of any hardware store just gets her mind spinning, her nipples hard as diamonds and her juices flowing. \n\nI've had a few opportunities since to take advantage of this quirk, but those had been just a few strokes or caresses of her breasts or a quick squeeze of her ass. Once we got home, Amy practically rips my clothes off and the ensuing sex is always fantastic. \n\nSo where does the path of being empty nesters and horny inducing hardware stores go? Fixing up our cottage by the beach. \n\nWe generally vacation either at her family's condo near Mt Hood or my \"dump on a stump\" on the coast as I've called it for the past 30 years. It is basically a two bedroom, one and a half bath shack that was built on the stump of a giant coastal redwood tree. It has been in my family for the past 80 plus years, and I gave the place its less than flattering name when I was about ten. The property has 75 feet of private beach via a set of steps down the cliff and is accessible by our own dirt road. I will never give it up. A quaint artist studio, tiny, unique, old, secluded, all describe the place perfectly. When the fog rolls in, it is downright spooky.\n\nA few years ago I made a couple stock picks that I thought were more long-term 'investments' vs flips or trades. Well, seems someone who has way more money than I had similar ideas, and instead of being long-term deals, they were both acquired and my shares were paid out in cash. I set aside the taxes, put my original investment (plus a bit more) into my next investments, and decided that the spoils of victory would be best spent expanding the dump on the stump. Not a huge sum, but enough to build it out to a four bedroom, three and a half bath with an awesome great room and a workshop/garage. The dump on a stump was going to grow up and become a grand home worthy of its million dollar view. \n\nMy initial idea was to bring a design-builder to the site, present my 'vision' of what the cottage could be, and then play as little of a hands-on role as possible. \n\nWell, our final choice for the designer, Dianne, happens to be Amy's youngest aunt, and my idea of not being actively involved in the process went out the window in a flash. I'm not a \"jump in because we know you\" type; in fact, I probably over-researched Dianne's work, her references, even her company financials. They all checked out well above my criteria, so the extra costs were acceptable. \n\nNow with my greater involvement, the three of us were regularly meeting. Early in the process, we covered architectural design, site engineering, permitting, and the rest of the big picture design stuff. Later we were doing the more detail-oriented stuff, going to the local hardware, flooring and appliance stores, and having multiple calls per week finalizing as much as we could before construction started. I have a vision of what I want, the feel if you like. Yeah, a guy talking vision, feel, etc., get over it, this place has another 180 years in its future and I want my great-grandkids to say I was one badass guy when I redid the dump.\n\nFiguring that the hours and hours of shopping might also be an opportunity for a bit of playtime with Amy; I had a Valentines Day surprise in mind. Since Amy and Dianne act more like sisters, I planned on using Valentines Day and Amy's comfortableness around Dianne as my \"in\" to execute the plan. \n\nI called Dianne on Tuesday and asked her to meet us at the cottage at 9:30 on Saturday, Valentines Day morning; Amy and I staying over the prior night. Where the planning started is that I sort of \"forgot\" to let Amy know about Dianne coming over, and the other appointments for the day.\n\nBy 9:00 I was already in the kitchen, making coffee and a light breakfast when I heard the tell-tale sounds of Amy heading to the bathroom for her morning relief(s) and a quick shower to freshen up after last nights' lovemaking.\n\nMy bride walked into the kitchen wearing nothing more than her robe and smile a few minutes after the shower turned off. \n\nWalking up to her and holding her robe lapels, I kissed her gently. \"Happy Valentines Day my love.\"\n\n\"I missed you this morning,\" Amy said, grabbing her mug. \"Well, actually my bottom is feeling a little left out, you barely played with it last night.\"\n\nAmy loves for me to play with her ass, and I absolutely love to please her this way with kisses, fingers, toys and my cock. Amy has a perfect ass in my fully biased opinion. She is tiny, just like the cottage. 5' 2\" of perfectly mature, but very fit curves, brunette hair, green eyes and near milk white skin. Any time, any place Amy wants me to please her ass, her tits, her pussy, I am all-in.\n\nKnowing the time, I suggested we head to the bedroom and see about taking her edge off. That suggestion was gladly accepted with Amy jumping off her stool, leaving her robe on the floor, her steaming mug on the counter.\n\nHeading down the hall, I checked on Amy's surprises in my pocket and entered our bedroom. As expected, Amy was naked, creamy white ass up, her arms crossed tucked under the pillow her head rested upon. Her eyes closed and a smile on her face, I knew I had complete freedom to do as I pleased. \n\nKneeling on the floor I spent a few minutes licking Annie from her clit, up to her pussy and just teasing her perineum. The more I licked, the wetter she got and the more she tried to focus my efforts to her rosebud, not her pussy.\n\n\"Stop teasing! You are driving me nuts. I need you to focus on my ass.\" She pleaded.\n\nTaking her words of encouragement, I dove in. Lots of licks, rimming, penetrating; everything I could do to get her as hot and excited as I could without actually allowing her to climax.\n\nSensing that she was ready, I pulled a new toy from my pocket and lubed it up. Stopping to hold her ass open with my hand I lined up the toy to her anus and pushed gently.\n\n\"Oh yeah! That feels good!\" Amy hissed into her pillow.\n\nOnce the plug was fully inserted, I added a couple mid-sized balls into her pussy and then went back to my oral assault.\n\n\"Oh god, fuck! Baby, that is going to...\"\n\nDING DONG! DING DONG!\n\n\"Oh fuck! Who the hell is at the door?\" Amy asked\n\n\"Let me check - stay here, don't cum and don't you dare take them out: promise,\"\n\n\"OK, hurry,\" She pleaded.\n\nPerfect! Dianne is always on time.\n\n\"Hi Dianne, come in. I'll let Amy know you are here. Be right back.\"\n\nNo hello back, just a \"You know, you really should get that driveway fixed: I think I left a hubcap back on the road.\" Good thing she didn't try to give me a kiss. That might have been a bit awkward. \n\n\"Hi babe. Um, Dianne is here. I forgot that we're supposed to go over the remodel ideas and then look at a fireplace and appliances.\"\n\n\"You have got to be kidding, Steve... you never forget any appointments. Today? Now? Valentines Day?\"\n\n\"Yeah, she's been alone for five years now. I thought we would spend the day with her, do some remodel shopping and dinner at the bistro. You know, make her valentines day special.\"\n\nAmy smiled. \"If you weren't such a nice guy, I'd just kill you. You know that? \n\n\"Yes, I do. So you've probably got five minutes before she will head down the hall; be quick, but leave them in. It will be a lot of fun with them in you today.\"\n\n\"That's it, I'm going to kill you tonight big boy. I'll cut you in your sleep. Enjoy your last day on this planet.\"\n\nWith a kiss on her right butt cheek, \"Oh, I will my love,\" and another kiss on the left.\"I will. And so will you. Now get dressed.\"\n\n\"Amy! How are you hon?\" Kisses, hugs, and the normal girl gossip ensued. \n\n\"So, get me up to speed here,\" Amy said while munching on a piece of toast. \"My normally precise husband has been replaced by a defective unit. He seemed to have forgotten to inform me that you were coming over this morning.\"\n\n\"Oh, don't blame him, he's just excited to finally fix this place up.\" Responded Dianne. \"The agenda is a quick set of pictures of things I missed the last time I was here, the appliance store, the flooring shop, and then the hardware shop; they just got in some amazing old style fireplaces and wood burning stoves that you have got to see.\"\n\n\"Maybe we could reverse the order?\" I asked. \"The fireplace is probably going to be the anchor that everything else will be based on. The statement piece per-say. What do you think?\"\n\n\"Agreed,\" said Dianne. \n\n\"Good idea, and since this is all about you Steve, you're driving\" added Amy.\n\nDianne was right, there was a great selection of fireplaces, inserts, and freestanding wood stoves; each has their own features and benefits, and their negatives. I love the idea of an old style pot belly stove, but they take up a lot of room. The ultra modern styles didn't fit the craftsman style vibe I was after, so the final decision was an insert that could burn with the doors open or closed, ultra-efficient, clean, and big; five feet wide, and about three foot tall. Oh, and really fucking expensive! Great start, Steve - ten grand on a fireplace.\n\nWith that decision set, Dianne worked with the sales rep to arrange delivery; leaving Dianne and I to meander the aisles, looking for more items that we liked, all fitting in with a 'modern rustic feel' I was after. \n\n\"Steve, I can barely concentrate right now.\" Amy was almost pleading. \"I didn't cum this morning, and these toys are driving me crazy.\" \n\nWe were in the lumber section, the smell of cedars, redwoods in the air. Her favorite spot in these stores. I knew at that moment, my plan had worked perfectly. Hiding the contents of my right hand that had been in my pocket, I closed the distance between us, wrapped my left arm around her and leaned in for a long deep kiss. \n\nI tapped the remote with my right hand and Amy's body jolted like she had been hit with a taser. Her mouth left mine, and a sound erupted from her little body, something between a long squeak, and a groan. Her eyes nearly rolled back in her sockets, and I know had I not been holding her she would have fallen over backward, stiff as the thousands of boards surrounding us. \n\nWithout the sounds of wood being stacked, cut and moved in the rest of the yard, Amy's squeal would have been heard by everyone in the building.\n\nI gave her about five seconds before tapping the remote again, stopping the vibrations emanating from the toys embedded in her ass and pussy.\n\n\"Oh my god, what the fuck was...\"\n\nThis time more like ten seconds. Her body again stiffening from her head to her toes until I turned it off.\n\n\"Oh, fuck, Steve, Do that again!\"\n\nI heard footsteps down the next aisle and put my finger to her lips, indicating she had to be quiet. I also denied her request to turn them back on.\n\n\"Hey, guys!\" Where are you hiding? Dianne, again interrupting Amy's opportunity to cum - albeit not planned this time. \"Amy dear, you look a bit flushed. Are you feeling OK?\"\n\n\"Yeah, I'm just a bit over excited about things right now. I need a bit of air. Did you see anything else that we should look at?\"\n\n\"Oh yes, lots of stuff. Let me show you.\" Dianne responded, in her endlessly good mood. With a \"Let me show you,\" while sliding her arm under Amy's. Off they went arm-in-arm down the aisle. I thought Amy might spoil the game, but alas she played it off perfectly.\n\nOver the course of the day, we took hundreds of pictures between us; cabinets, door handles, lamps, flooring, pictures of everything. Hell, I even took pictures of different river rocks, slate roof tiles and some things I didn't even know existed prior to today. \n\nInterspersed between pictures, I teased Amy about a dozen times, edging her close to an orgasm, but not letting her climax. By the sixth time, I simply had to show her the remote and she would just lean up against me, the wall, or hold on to a display, knowing that she could topple over if she didn't. She never said no, never told me to make her cum, she just allowed the buzzing from her holes to take over; each time her eyes rolling back, her mouth in a perfect O, breathing heavy. She was the look of pure lust. This game was both frustrating and exciting for Amy. She figured out pretty quick that I was not going to allow her to cum. She was the mouse, and I was the cat; playing with my food as I chose. A maddening game of power, lust, and anticipation. It was awesome in every way. \n\nBy late afternoon and with our shopping done, I steered the crew cab to the boutique section of our little beach town and parked near our favorite bistro. \n\nAs we sat for an early dinner, Dianne excused herself to hit the restroom. Amy also stood up and leaned into my ear. \"Don't you fucking dare hit that remote here - and I mean it.\" She whispered. Amy then bit me; hard. And in a dash she was off to the ladies room, joining Dianne for whatever ladies do together in the restroom.\n\nI know a \"don't you dare\" is not a dare. A \"don't you dare\" delivered with a bite to my ear is a warning. I didn't buzz her; hence I am here to tell the tale.\n\nLunch was simple and perfect. My reservation was for a specific table that has a great view of the setting sun over the ocean and happens to be the same table I had proposed to Amy so many years ago. \n\nDianne beamed with excitement over the design choices, occasionally mentioning how my taste is both masculine and classical. Amy and I also did a great job of directing any discussions away from Dianne's ex; keeping the entire dialog upbeat and happy. The wine and exceptional food also kept the two ladies happy, playful and in the moment. \n\nI had made Dianne feel special during the meal while on the sly, I mercilessly teased Amy simply by looking like I was going to hit the remote. A slow raising of my hand, or moving my hand over my chest; just to innocently scratch my collarbone nearly put Amy into a panic. It was torture for her, but all in her head. I headed the warning. \n\nBy the time we were eating dessert, the flowers I had ordered were delivered to the ladies. Each bouquet had a card with a hand-written note, as well as a gift certificate to a local spa. Both ladies were ecstatic with their gift and were lost in figuring out when to schedule their spa day. With the festivities done, we left arm in arm; Amy on my left arm, Dianne on my right to the admiration of everyone that had been close to our table. \n\nAmy didn't say anything about the drive back to the cottage, so the mental teases over dinner reverted back to real teases when we were back on the road home. A series of off and on, intense and soft pulses, while we waited for the daily freight train to pass in front of us nearly, had Amy in tears. I would go long, short, hard long, pulsing, short, etc, while the train provided cover for the vibrations and whimpers Amy made in the seat of the truck. She almost came but did a great job of letting me know when she was on the brink.\n\nAll the while, Diane was talking about lunch, wine, different things we agreed upon, and those that needed more negotiation. That latter term meaning I was wrong, they were right, and I was going to come around at some point. \n\nThe grand finale would be the quarter mile dirt path to the cottage. Once we were off the road, we faced a gauntlet of bumps and potholes that both made good cars shudder, and served as a way to make anyone think twice before heading down the path.\n\nOnce the front tires hit the dirt, I tapped full intensity on the remote in my front pocket and hit the path a bit harder than usual. Dianne bounced around the back seat for the minute it took to get down the path, whooping and laughing the entire time. Up front Amy, squeezed the armrest with one hand, the other hand white knuckling the grab bar. With each bump and pothole hit, the vibrating plug in her rear pushing harder, and the balls vibrating and clanking each other as well as against the plug on the other side of the membranes separating the toys. She didn't make it fifty feet before her orgasm hit. Deep within her, her core rippled, wave after wave for the entire trip down the path. \n\nWith a cloud of dust, we stopped next to Dianne's car, I cut the engine and hit the stop button on the remote. Dianne bounded out of the truck, smiling like a girl that just rode her first pony. Amy and I got out, Amy on wobbly legs. Coming over to us, she gave me a big hug and an even larger kiss on my cheek. \"You made this the best Valentines Day dear, thank you.\"\n\nHugging Amy, she leaned her head back and asked \"Dear, are you sure you feel ok? You look flush again, and your cheeks are red hot.\"\n\nTurning to me she said \"Steve, take good care of her. Bye.\"\n\nWhen she was back in the path to the road, Amy leaned back against the truck and grabbed my hand. \"Turn that fucking thing back on!\"\n\nI saved one setting for last and used it at this moment. A series of coordinated waves pulsed through her. Growing in both intensity and speed her first orgasm hit like a freight train. She squeezed my hand and let out a deep guttural moan while her pussy and ass spasmed around the toys. \n\nBefore her first orgasm had fully ended the toys revved up to the next level, extracting a loud squeak, and a deep intake of air into her lungs. She paused about five seconds, not moving, her eyes glazing over; and then her second orgasm hit. Harder, stronger and deeper, Amy buckled over, almost squatting against the truck on the lawn. \n\n\"Oh my god, I can't stop cumming!\" She panted as she started the downslope of her orgasm.\n\n\"Done?\" I asked.\n\n\"NO! More!\"\n\n15 minutes later, after her fifth gut-wrenching orgasm of the day, Amy was unable to cum again. She was kneeling on the ground, almost heaving, trying to catch her breath. covered in a light sheen of sweat. More than taken care of, she was physically and mentally in another space. \n\nKnowing she would not be able to walk, I scooped her up and carried her to the cottage. Her arms barely able to hold my neck, Amy's voice deep and dry. \"That was the best Valentines Day ever love. When do we shop for furniture?\" "
    ],
    "authorname": "Rockofmarriages",
    "tags": [
        "vibrator",
        "anal plug",
        "remote control",
        "edging",
        "denial",
        "husband",
        "wife",
        "romantic"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/remote-controlled-valentine"
}