{
    "title": "It's a Dead Man's World Ch. 05",
    "pages": [
        "This is a LONG story. If you don't like long stories or stories driven by plot and characters rather than just sex, you might want to skip this one.\n\n-------- ----------------\n\nDisclaimer: The following story is a work of (hopefully) erotic fiction. If you are offended by graphic descriptions of sexual activities, please stop reading now. Any resemblance between the characters (living or dead) is entirely coincidental. Please do not copy or redistribute this story without the author's permission.\n\nThis story originates in the fictional city of Springfield, California several hundred years in the future. You might want to check out Parts 1, 2, 3 and 4 of this series for background and character introduction.\n\n--------------- ----------------------------\n\n\"It's a Dead Man's World\" Part 5\n\n--------------- ----------------------------\n\nEliza had never been the center of so much . . . silence . . . in her entire life. She and her father had been standing and staring at each other for almost a full minute, but it had seemed like an eternity. The surrounding crowd was acting as if they were watching competitive chess, wondering who was going to use which particular opening gambit. Eliza started to say something but the words died on her lips. Her father started to raise his hand as if to wave, but his strength failed him.\n\nIt had been over a year since they had last spoke, and those words had been angry in nature. Evlidone had been angry at his daughter for her refusal to take a more traditional and noble role in vampire society and for being disrespectful of her elders. Eliza had been angry with her father for trying to control her life and showing no regard for what she wanted to be. Then the gate between worlds had shut and both had wished for the ability to take back some of those words. \n\nBut on top of that, Eliza had endured some . . . life changes. Besides making her homosexuality public knowledge while on Earth (homosexuals tended to be shunned on her homeworld of Terra), she had been transformed by the Living Jewel known as The Alchemist's Dream into a Hybrid; a super-charged combination of human and vampire. She and her lover Veronica were the only two Hybrids in existence. In a world of vampires, trolls, succubae, lycanthropes, gargoyles, and other creatures of the night, Eliza was the one who had become a monster. She and Veronica may have looked like vampires with strange eye color, but Eliza's former species could sense their own.\n\nAlyidana (Eliza's mother) was at a loss for what to do herself. She often felt she had remained too silent when her husband and her daughter had feuded, and past tensions were probably what were contributing to the current uncertainty. She glanced past Eliza at the woman she assumed was her daughter's . . . partner. The woman seemed almost as confused as Alyidana was. Finally, the mother in her had waited long enough.\n\n[[ For goodness sakes! ]] she almost cried, moving past her husband and closing the gap between her and Eliza, wrapping her elegant arms around Eliza's body like pythons and squeezing the breath from her daughter.\n\n[[ Mother, ]] Eliza said, actually on the verge of tears.\n\nEliza's father looked pointedly to either side, and the crowd parted even further. He summoned a local official and had a quick word with him. Then he turned back to his wife and daughter.\n\n[[ Perhaps we could adjourn to another room? ]] he said formally.\n\n'That's my father,' Eliza thought. 'A politician to the last.' As the local customs agent moved towards a side room generally reserved for official use, Eliza's mother finally and reluctantly let her daughter go and moved back to her husband's side, while Veronica took her girlfriend's hand.\n\n[[ Perhaps we could have a moment alone, ]] he said, looking at the interloper.\n\nEliza clenched her other fist. [[ Where I go, she goes. ]]\n\nVeronica's own knowledge of the vampire language was broken at best, but even she realized that she had just been involved in the conversation.\n\n{{ Love, what's . . . }} Veronica started to think. She was a little disconcerted by a buzzing sound in the back of her head. 'Probably some aftereffect of dimension-hopping,' she thought. \n\n{{ Just follow me. }} Then Eliza tried to get her thoughts calm again. {{ Please? Just back me up. I'll try and fill you in as we go. }}\n\nEvlidone gritted teeth and fangs together. 'Why does she always have to make things so difficult?' he thought. What was worse, he could tell that Eliza and this other woman were communicating telepathically, and he thought it rude for them to be engaged in a sidebar. [[ Very well, ]] he said, forcing the words out. [[ This way, ]] he said. He led the three women into a small side room usually used for interviews with people of \"suspicious origins.\" Evlidone had a seat at the desk in the room while his wife stood behind him. Eliza and Veronica sat on a long bench that wasn't exactly designed for comfort.\n\n[[ You look well, ]] Eliza's father said at last.\n\n[[ As do you. ]] As Eliza spoke, she began relating the conversation to Veronica mentally.\n\n[[ Valar informed me of some of your . . . adventures . . . when he came through with his prisoner. You seemed to have impressed him, which is no small feat considering your prior treatment of him. ]]\n\nEliza cracked her knuckles. She didn't notice her mother rolling her eyes. This is how conversations always went with her father. [[ Valar and I . . . came to an understanding, ]] she said, determined not to be the first to break their fragile truce. [[ He was a valuable ally. ]]\n\n[[ Yes. In that war you started. Trouble just seems to find you wherever you go. ]]\n\nVeronica didn't need Eliza to communicate telepathically at that point. Eliza's mind was open to her, and it was an angry place. She had always assumed that Eliza had been exaggerating about her relationship with her father. Now, Veronica was just waiting for somebody to actually throw something.\n\n[[ I would say that trouble found me this time, ]] Eliza replied. [[ Despite rumors to the contrary, not EVERYTHING is my fault. ]]\n\n[[ That's not what I was . . . ]] Evlidone started. Then he took a deep breath. [[ I just meant to say that you've always managed to get mixed up in things you should probably avoid. ]] Without actually meaning to, his eyes had drifted over to Veronica, a fact NOT lost of Eliza.\n\n[[ I was wondering how long that would take, ]] Eliza said.\n\n[[ How long what 'would take'? ]] He put his hands together and started in a placating manner, [[ Listen, I know things have been a strain on you this last year, but everything is back under control now. You could come back home and apply for that court sorceress position. And now that you and Valar are back on speaking terms . . . ]]\n\n[[ Stop it! ]] Eliza said, standing up quickly. [[ I don't WANT to be a court sorceress, and there is no chance in the six levels of the underworld that I would EVER accept being courted by Valar again! I am with her, ]] she added, pointing wildly at Veronica who was wishing very much that she was somewhere else.\n\n[[ Watch your tone young lady, ]] Evlidone said, his eyes narrowing. [[ Whatever transformation you underwent has clearly altered your perceptions and . . . ]]\n\n[[ 'Transformation'? I can't BELIEVE this! The transformation I underwent when I was dying trying to save the woman I had been IN LOVE WITH for months? I was attracted to females long before I ever stepped foot on Earth. ]]\n\n[[ Nonsense, ]] her father said. [[ You were too young to know what you wanted! Now that you've got all this foolishness out of your system . . .]]\n\nAlyidana's eyes shot open and she stared at her husband. 'He did NOT just say that?' she thought to herself. But the expression of anger on her daughter's face told the story. She hurried out the door, grabbing a stunned looked Veronica by the arm and dragging her along. Even before the door closed, items in the room had begun to levitate and the furniture began to shatter as the two powerful spell casters lost some control of their wills and began to scream at each other. \n\n[[ Foolishness?!? ]] Eliza bellowed as the door closed behind her mother and girlfriend. [[ I knew exactly what I wanted, you overbearing . . . ]]\n\n[[ Watch your tone with me young lady! ]] her father responded, crushing the wooden bench in front of him with an angry clench of his hand. [[ Even if you're determined to show me no respect . . . as usual . . . at LEAST try to maintain a semi-professional demeanor for once in your life! ]]\n\n[[ I've BEEN professional for years! You just never approved of my profession! You never approved of the way I CHOSE to live my life, and I don't know why I was hoping for you to approve of the things I CAN'T choose! You're such a self-absorbed . . . ]]\n\nIt was Eliza's father's turn to interrupt. [[ Self-absorbed?!? How many times have I bailed you out of messes? When you got in trouble at your academies . . . many times? When you were picking fights? When Earth police picked you up when you were visiting France and HAD to go insulting that silly tower of theirs? You are so bound and determined to do everything YOUR way without ever considering the consequences! Now I find that you've been gallivanting around Earth with another female, without showing even the slightest bit of discretion! ]]\n\n[[ I'm a homosexual, you sanctimonious . . . ]] Eliza stopped and flung her hand to one side, smashing a lamp that was twenty feet away. [[ I'm not going to hide who I am for the sake of your convenience! I LOVE that woman, ]] she shouted, pointing her finger at the door and making it creak at the hinges under the weight of her will. [[ I wanted to introduce her to you. By the Gods, I wanted your approval, even though your approval is something you've NEVER given me! I almost died for her, and the only thing you give a DAMN about is that I might have made you look bad while doing it! ]]\n\n[[ Eliza . . . ]] Evlidone started, but his daughter had spun on her heel and headed for the door.\n\n---------- -----------\n\nOutside . . .\n\n---------- -----------\n\nThe crowd that had been waiting outside attempted to look like they hadn't been eavesdropping when the two women had come out the door. Alyidana had turned to Veronica and started to say something. Then she had remembered that the other woman probably didn't speak the language, so she pointed first at her head and then at Veronica's. Veronica nodded.\n\n{{ It's . . . nice . . . to meet you, }} she sent after establishing a telepathic link. Once the link was up, she found Veronica's mind to be very clear. She had apparently become quite adept at communicating with her mind.\n\n{{ Likewise, I'm . . . }}\n\nVeronica had started to respond when they heard the sounds of furniture being roughly relocated in the room behind them. Even with the door closed, there were some pretty distinct and very unflattering words coming from inside. Within a minute or so, Eliza had come storming out and made a beeline for the portal. Veronica hurried after her lover as the crowd parted to let the two women through. She noticed the looks on the onlookers' faces, ranging from pity to disgust. She was beginning to wish that she hadn't encouraged Eliza to come back here.\n\nThe guards at the top of the ramp looked nervous as they stepped aside. Eliza just plunged through the barrier and onto the other side, where people didn't seem to pay her any mind at all. They were all too busy with their own lives to pay attention to one crying woman and her lover.\n\nAs soon as they hit the night air outside Point Terminal, Veronica moved to get in front of Eliza.\n\n\"Sweetheart, what . . .\"\n\n\"Get out of my way,\" the white-haired Hybrid said. \"I think I listened to you too much already,\" she added, pushing her way past.\n\n\"I didn't mean . . .\" Veronica started, but there was no one there to listen. Eliza quickly vanished into darkness. Veronica felt the tears welling up as she headed for her hotel. She wanted to chase after her girlfriend, but she knew Eliza was in no mood to listen. As soon as Veronica got up to her room and flopped down on the bed, she heard a knock on the door from the adjoining room. \"Go away!\" she said. Then she heard the door opening. \"What part of 'go away' did you have a problem with?\"\n\n\"It's hard to understand you when you're crying,\" Vicky said as she sat down on the bed and stroked her sister's hair. \"I was just waiting to see how things went with your lady-friend's folks. Not well I take it?\"\n\n\"I'm not sure if she's madder at me or her father.\" Veronica rolled over and laid her head in Vicky's lap. How many times had they consoled one another just like that after a job or relationship had gone south? \"I always thought she was making it up, you know? How things were between her and her dad. But she wasn't. He was just so . . . and I almost forced her into this stupid confrontation when I should've just let well enough alone.\"\n\n\"You thought that things between them should've been more like us. And you were right to do it. Whatever happened was inevitable, and at least now they've gotten it out of their systems. And don't be too hard on her father. He may actually not KNOW how to deal with this.\"\n\n\"From the sounds of things, he's NEVER known how to deal with her. Hell, I'm still having problems figuring her out, and I've been sleeping with her for over a year. I live in her mind half the time, so how come I didn't just believe her?\"\n\n\"You wanted a happy ending,\" Vicky crooned. \"And it's never too late for happy endings.\"\n\n\"I just want to go to sleep and wake up when everything's better.\"\n\n\"So why DON'T you get some sleep?\"\n\nVeronica sighed. \"Damned Hybrid physiology. I don't sleep more than a couple hours a day unless I've expended a hell of a lot of energy.\" She looked up at her sister. \"I'm glad you're back. Sorry I had to go and have a scene on you.\"\n\n\"It's okay. You've always been the one to want to see the best in people, but this time it kind of bit you on the ass.\" Vicky stopped and kissed her sister on the forehead. \"By the way, are you comin' home with us? I think Mom and Dad want to smother me with love and brownies, and I don't think I can handle that much of either on my own.\"\n\n\"Yeah, I guess so. I'm going to stick around for Kelik's funeral services. I owe him that. Then . . . I just hope Eliza has calmed down by then.\" She stifled a yawn. \"You should have seen her . . . I never realized just how powerful she was until she and her father started breaking things. Her mother seemed nice enough . . .\" She rested her head on her sister's leg. Talking with Vicky usually helped calm her down.\n\n\"Veronica?\"\n\n\"Yes?\"\n\n\"After we visit with the folks, mind if I come stay with you for a bit?\"\n\n\"I GUESS so,\" Veronica said with exaggerated exasperation before managing a chuckle. \"I'll have to warn you though, we have some WEIRD roommates.\"\n\n-------------- -----------------\n\nThe next evening . . .\n\n-------------- -----------------\n\nVeronica stood next to Eliza, slightly separated from the rest of the crowd of mourners at the funeral services for Ambassador Kelik. The blonde woman had found her lover sitting on the steps of the hotel the next morning, her eyes having turned an indefinable shade after crying all night. Veronica had just sat down next to her lover, but Eliza took Veronica's hand and held it. There was no blame to be allotted or apologies to be made between the two women. Eliza knew that Veronica had only meant well, and Veronica finally understood her lover's frustration.\n\nThey had gone back up to the hotel room, gotten cleaned and dressed, then headed back across to Terra with the rest of Eliza's team in tow. Both women made it a policy not to meet anyone's gaze. They had gone to a teleportation station and almost instantly arrived in the small town that Kelik had lived in his younger days. They found that Thug and Tiny were already there. The trolls had been visiting some old acquaintances before the ceremony. \n\nThings had been tense at first, when Eliza and her father saw each other, but they sat apart, didn't speak and let the procession go on without interruption. With two trolls directly behind her, no one was about to give Eliza any trouble. Kelik's body had been put in stasis until it could be returned to his homeworld, allowing for an open viewing and a traditional Whispering. The Whispering was a vampire tradition where mourners leaned in and told a secret to the dead so that the departing spirit could take a piece of that friend, acquaintance or loved one with him or her as they crossed to the other side.\n\nEliza took her turn, then Veronica. Neither asked what the other had said, and neither would intrude on each other's thoughts to find out. As soon as the service was over, the two Hybrids headed down the small hill where Kelik had been laid to rest, vanishing into the darkness to their carriage. But there was someone waiting at the base of the hill. Eliza's mother had whispered early so she could intercept her daughter.\n\n[[ No matter what, I want you to know I love you, ]] the woman said. [[ And though you don't want to hear it and probably won't believe me, so does your father. ]]\n\nEliza hugged her mother, trying not to avoid crying again. [[ Would it kill him to say it? ]] she asked. [[ Just once? ]] Her mother gripped her hand for a moment then kissed her on the cheek before Eliza climbed into the carriage and signaled the driver to go.\n\n\"So you'll be going to your parents then?\" Eliza asked, desperate to ward off her sorrow with conversation. She had buried a friend in enemy territory, and she wanted so badly to escape to the safety of her compound on Earth.\n\n\"If you like, I could . . .\"\n\n\"No, go,\" Eliza said. \"I'll be okay. I just need to see what the gang wants to do now that we don't have to save the world for a while.\"\n\nVeronica stared for a moment, then kissed her girlfriend slowly and softly. \"In case you had any questions as to whether or not I loved you,\" she said with an emphasis on \"I.\" \"By the way, Vicky wants to come stay with us for a while afterwards. I told her that'd be alright, since I didn't think we'd be taking any jobs anytime soon.\"\n\n\"That's fine, as long as you trust me around another lesbian that looks JUST like you,\" Eliza joked feebly.\n\n\"Don't EVEN go there,\" Veronica said. \"Always check the eyes before sex,\" she said, pulling down on the skin just below her eyes. \"And stay away from Terillia! If you start having any 'needs,' fall asleep between one and three o'clock in the morning.\"\n\n\"See you in my dreams?\" Eliza asked.\n\n\"You can count on it.\"\n\n--------------- -------------------\n\nA few nights later . . .\n\n--------------- -------------------\n\nEliza was pissed off at her mental error. She had planned on a dream meeting with her lover the previous night, but had completely forgotten the difference in time zones. She knew Veronica would never let her live that down. She felt a little foolish, having dressed for sex that would only happen in her head. Ever since the two women had established their mental link over a year earlier, their minds had gotten closer to the point where they shared very . . . explicit . . . dreams. This connection had allowed Eliza to help rescue Veronica from her kidnappers, though at a terrible price to her own health. But even while unconscious and recovering, the two women had managed to provide comfort for each other.\n\nSo while dressed in a tiny thong, a silk bra and with a faint waft of perfume floating around her bedroom, she lay underneath her covers and tried to get some shuteye. \n\n\"I just hope you're online,\" she said to the ceiling before closing her eyes.\n\n---------------- --------------------------------\n\nSomewhere in the dreamscape . . .\n\n---------------- --------------------------------",
        "Veronica was a little late arriving in the land beyond the waking world. Her sister had been talking her head off until she politely excused herself. But Eliza had apparently been unavailable the prior night, so Veronica felt she had earned some leeway. But it was worth the wait!\n\nShe found herself walking up a stone path through some unusual looking trees next to an enormous river. She heard the roaring of waterfalls up ahead and smiled. Her lover was imagining a place from her youth that she and Vicky had been talking about. As Veronica made her way up the path, clad in a flowing white gown made of silk, a pair of white bikini-style panties that she knew Eliza liked and thigh-high stockings. When the waterfalls came into view, they were as magnificent as she had been told. But the water wasn't what caught her attention. Sticking out from the riverbank was an enormous rock, which was constantly being pummeled by the water and the wind and the spray. Lying on top of the rock right next to the edge was Eliza, dressed in some of the skimpy lingerie that made Veronica's mouth water. The soft fabric of the bra was soaking wet, causing the white-haired Hybrid's nipples to visibly stand out. And Eliza's face held the promise of passion and a sense of anticipation.\n\n{{ You're late, }} came Eliza's voice.\n\n{{ I was busy, }} Veronica replied. {{ I hope it was worth the wait, }} she added, letting the wind blow the front of her gown open and expose that wonderfully curvaceous body. \n\n{{ Always, }} Eliza murmured. \n\nVeronica sniffed the air. {{ You're wearing perfume? }}\n\n{{ I thought you might like it, }} Eliza said, blushing a bit.\n\n{{ I do, }} Veronica thought, keeling with her legs straddling Eliza's hips and leaning in, inhaling deeply as her nose was close to her lover's neck. She felt a spray of water cascade over her as the current hit the rock and as her robe clung to her body, she lay directly on Eliza's body to \"help keep warm.\" Her lips found their way to Eliza's mouth, and her tongue drifted between Eliza's lips for a quick but passionate visit. She felt her lover's hands creeping up under the robe and latching on to Veronica's nicely rounded ass cheeks. And while Veronica had intended for the kiss to be a tease, Eliza was apparently in no mood to be teased as she shoved her own tongue into her girlfriend's mouth and kissed her until they both ran out of breath. {{ What, no foreplay? }} Veronica thought, obviously amused.\n\n{{ You can have all the foreplay you want when you get home, }} Eliza almost growled. {{ I need it, and I need it bad! }}\n\n{{ So impatient, }} Veronica responded demurely. She straightened her back, stuck out her arms and her robe magically ripped itself in half, leaving the blonde woman in just her panties and stockings. While she preferred making love in the real world, these sex dreams had some definite benefits, including the ability to make up the rules as they went. Then she moved forward and squatted over Eliza's face. She had something clever she wanted to say, but the thought died in her mind as Eliza's tongue entered Veronica's crotch. Veronica leaned back, bracing herself with her arms as Eliza set about her work.\n\nEliza loved the view: her lover leaning backwards with her breasts thrusting boldly outward, the spray of the water trickling down her smooth abdomen. She sensed the plumpness of Veronica's outer labia and the warmth of her box. She could barely wait until she could get the real thing in her bed again, but this dream-version of her dream woman would have to do. She wrapped an arm around one of her lover's legs so she could massage Veronica's clitoral area and upper mound in small, slow circles while her tongue darted around inside the cleft. Then she pulled her tongue out and traced around Veronica's opening with the tip, flicking that powerful muscle at the tender area between vaginal and anal openings. But she couldn't stay out of her lover's pussy for long. She went back to lapping like a thirsty dog, badly wanting to make Veronica howl.\n\nVeronica was gently gyrating her hips and enjoying giving Eliza's face a ride. She wasn't sure why her girlfriend seemed to succumbing to this sense of desperation, but whatever it was had turned the woman's oral game up a notch. Then she felt Eliza's tongue tickling her backdoor and she moaned in her mind. Her lover was making all of Veronica's lower private parts tingle with delight. Then Eliza's tongue returned to the depths of Veronica's cunt and she continued her licking, but its place in her asshole was replaced with one of Eliza's fingers. Veronica was actually seeing stars as the pressure began to build.\n\n{{ Sweet Jesus, I'm . . . I'm cumming! }} she thought. Just as Veronica's body succumbed to the incredible pleasure, she was hit with another jet of water from the river below that \"miraculously\" managed to sweep the remaining clothes from the bodies of both women. But the cold spray couldn't abate the heat of Veronica's body, and she let loose a torrent of her own, all over Eliza's face. \n\nEliza kept nuzzling even after Veronica's orgasm was over. There was something particularly intimate in the act for her . . . more so than usual.\n\n{{ That was some of your better work, }} Veronica thought, scooting back, bending over and giving Eliza's now-sticky mouth a kiss. {{ I'm looking forward to getting the real thing. }}\n\n{{ You'll be home soon? }} Eliza thought, trying not to let on the need she felt to be with Veronica again.\n\n{{ A few more days, }} came the reply as Veronica reached around behind her and curled her fingers into Eliza's moist sex. As those magic fingers began to dance and Eliza pushed her hips against them, Veronica continued. {{ Things might get a bit crowded considering, }} she thought as she spread those tight pussy lips with her fingers and flicking the clit with her thumb. {{ Are you sure that . . . }} Her stream of thought was cut off when Eliza raised her back off the rock and latched her lips to one of Veronica's nipples and nursed gently. \n\nEliza didn't want to think for a bit. Thinking just made her head hurt those days. She just wanted to feel good, and that's what Veronica did for her. So she lathered attention on those warm mounds on her lover's chest that were dripping with spray from the river. \n\nAnd Veronica just kept her fingers moving, quickly and steadily bringing Eliza closer to paradise. She stretched her fingers as much as she could, trying to reach the sweet spot. If she hit it, she could make Eliza do almost anything she wanted. And when Eliza's eyes shot open and she looked like she was gasping into the air of the dream, Veronica knew she had found it. {{ Now, you're MINE! }} she thought wickedly.\n\n{{ I'm always yours, }} Eliza thought back as ecstasy coursed through her veins. Veronica's fingers felt longer than usual, or maybe she had just gotten better at using them. Either way, Eliza's brain was on sexual overload. She began switching her own oral attentions from one of Veronica's breasts to the other. She took the nubs between her teeth and lightly pressed down, making Veronica shudder and clutch her lover's head. \n\nVeronica sensed that Eliza wanted this to last. She was wondering if there was something going on in that beautiful head, but she thought it best to wait until they were together in the real-world flesh before bringing it up. In the meantime, all she could do was make Eliza's dreams come true. Whenever her lover seemed to be getting too close to release, Veronica eased off the clit and the g-spot until Eliza's body had reluctantly settled. It wasn't easy, as Eliza's infernally soft lips and talented tongue on Veronica's tits were making her want to scream. Finally, Eliza pressed her legs together and captured Veronica's hand, and the white-haired Hybrid had a look of absolute lust on her face. So Veronica smiled, prodding the sensitive areas inside Eliza's box and tickling the clitoral hood with her thumb. Then she felt those vaginal muscles squeeze and lock down on her fingers, and she felt the warmth of girl-cum flowing onto her hand. \n\nEliza had reluctantly released Veronica's melons from her mouth as she began to cum, but her body couldn't afford to divert any energy away from that perfect moment of pleasure. {{ Don't stop! }} she thought as Veronica's fingers temporarily slowed as if to await the cessation of the climax. {{ Please don't stop! }}\n\nVeronica was more than happy to oblige, though it wasn't exactly easy going as her lover's pulsating pussy had tightened to the point that movement was labored. But she kept her fingers pumping until Eliza's body finally came to rest back on the rock.\n\nAs Eliza lay there helpless as a baby, Veronica lay down on top of her, pressing their bodies together. More water splashed over their bodies as they embraced and kissed, but they didn't feel the cold anymore.\n\n{{ Do you want some more? }} Veronica thought.\n\n{{ I . . . I want you to be here, }} Eliza thought. {{ I love doing this, but . . . }}\n\n{{ But it just isn't as satisfying as the real thing, }} Veronica thought while cracking a smile. {{ I want it to. Just a couple more days. }} She arched her neck and silently laughed into the dreamscape. {{ What a pair we are, }} she added in response to Eliza's quizzical look. {{ We can fight wars without blinking but get nervous about crossing the street without holding each other's hands! }}\n\n{{ It's not THAT bad, }} Eliza grumbled. {{ Is it? }}\n\nVeronica smiled and kissed Eliza. Then she began to fade from view, and she looked more than slightly irritated at the fact. She blew her lover a kiss, then disappeared back into . . .\n\n---------- --------------------\n\n. . . the Real World . . .\n\n---------- --------------------\n\nVeronica awoke with a start as she felt someone shaking her shoulders. She opened her eyes to see Vicky sitting next to her.\n\n\"Wake up!\" her sister was whispering vehemently. \"I heard you moaning,\" she added when she saw her sister was awake. \"Are you okay? You're covered in sweat and . . .\" Vicky was a bit alarmed when Veronica started chuckling. \"What?!? What's so funny? Jesus mother of . . . you had me scared to death! I thought someone was attacking you in your head or something and . . . Would you stop laughing?!?\"\n\nVeronica couldn't help herself. She was clutching her damp midsection and trying to stop laughing long enough to breathe. Finally, she was able to speak again. \"Oh God, I needed that! I guess I'd better explain some things to you. Promise you won't tell Mom and Dad though. This would freak them out!\"\n\nVeronica sat up, still in her lingerie, and started to explain the mental link that she and Eliza shared and some of its \"fringe benefits.\" Finally, Vicky went back to her room, mumbling about how she hadn't gotten much action in over a year, but her sister was getting laid in her sleep!\n\n------------ --------------------\n\nA few days later . . .\n\n------------ --------------------\n\nEliza was sitting dejectedly in her living area, staring at the video-stream. Allyson was getting a shoulder-rub from her husband Dennis, Wyrm was \"researching,\" (which was his term for downloading anime porn), and Thug was out by the pond staring at ducks. The day before, the group had decided to continue their work as a security force, due to the sheer boredom that would ensue if they tried to retire, so they had hired on the succubus known as Terillia as well as the troll Tiny. These two new members were sitting over by the bar filling out paperwork and tax forms. Actually, Terillia was doing the writing for both of them since Tiny's fingers weren't exactly built for that sort of work. Eliza had sacrificed several ballpoint pens figuring THAT one out. \n\nEliza was sitting around watching the national videostreams. The reopening of the dimensional portal was still the top news story, and there were increasing reports of unrest on Terra regarding a renewed policy of aggression by the Swords of Cleansing, who were apparently pretty pissed that the gateway was open again. But that was on Terra. Eliza sighed. She was a vampire by birth, but she knew she would never be asked to aid in the defense of her own homeland. So she tried to bury herself in her remodeling plans. Her five-structure compound was going to be expanded to accommodate the growth of her team, including new housing for the new members, an official guest residence and a villa-style home for Veronica and Eliza. She had already ordered the groundwork to begin, but she couldn't decide on a floor plan.\n\n\"I'm just no good at this,\" she muttered. \"Give me something I can shoot. Master bathrooms are beyond me.\"\n\nJust then, the front door swung open and Veronica and Vicky strode in. Veronica was carrying all of their luggage, much to her sister's amazement.\n\n\"She's like a pack mule,\" Vicky muttered in amazement.\n\nEliza stood up, trying to look as casual as possible. \"Hey,\" she started. \"What kept you?\"\n\nVeronica dumped the baggage on the floor and strode over to her lover. \"Traffic,\" she muttered, wrapping her arms around Eliza's neck and kissed her. While Eliza may have been trying to play it cool and composed, Veronica had no such compulsion. \"What'cha working on?\"\n\n\"Plans for the new compound and . . . and the new house . . . which we were going to live in . . . together.\" Eliza had no idea why she was so nervous. Veronica had pretty much been living with her for a long time anyway.\n\nVeronica smiled. She actually understood. Her lover was a century old, but it hadn't been until the last year that Eliza realized that she might have a chance at something permanent. Building a house together was definitely a permanent thing. She picked up the plans off the table. \"Uhm, sweetie?\"\n\n\"Yes?\"\n\n\"This says villa-style home. I'm not sure what you meant by 'villa,' but this looks like a military bunker. Without all that annoying 'homey' feeling.\"\n\nEliza sighed and sat down. \"Not good?\"\n\nVeronica kissed her on the top of the head. \"It's perfect. If you're planning on going to war again. Which you're not, are you?\" she asked nervously. Then she and Eliza looked at each other and began to laugh. Veronica handed the plans to Vicky. \"Spanish style villa,\" she said to her sister. \"Think you can handle it?\"\n\nVicky looked over the plans and made an \"icky\" face. \"Uhm, this just won't do. And you're putting in three other buildings?\"\n\n\"Yeah,\" Eliza said. \"Two new employee residences and . . .\"\n\n\"Ahem,\" Veronica said, finally noticing that Terillia was sitting in the room, trying to avoid direct eye contact with the blonde Hybrid. {{ WHAT . . . is SHE doing here? }}\n\n{{ The group voted to stay in business and we figured we could use the support. Veronica, there is NOTHING that's going to happen! She got carried away and . . . }}\n\n{{ Stuck her tongue down your throat, }} Veronica thought. Then she waved off Eliza's upcoming objection. {{ Yeah, yeah, I know. Spur of the moment thing. Just don't let it happen again, }} she thought, the smile returning to her lips. {{ I love you, ya know. }}\n\nEliza blushed. Veronica smiled. Vicky kept looking over the plans that looked more like military fortifications than housing.\n\n\"How much money do you have to spend?\" Vicky asked of Eliza. \"I need to know how much . . .\"\n\nEliza had turned to Wyrm. \"Hey, how much do we have allocated for rebuilding?\"\n\nWyrm sent his computer clicking and whirring. Finally, \"About twenty million World Dollars,\" he said. Unless you want something extravagant.\"\n\nVicky's jaw hit her chest. \"Twenty . . . twenty million?!? Holy shit! How . . . never mind. Four new buildings including one deluxe Spanish style villa, coming up!\"\n\nVeronica noticed that her sister was already beginning to drool. Vicky had always had more fashion sense, so letting her oversee the new facilities made sense. And Vicky LOVED to spend money!\n\n---------- ---------------------\n\nThat evening . . .\n\n---------- ---------------------\n\nVeronica and Eliza were sitting at one end of the dining room table, looking over the new plans for their domicile. Vicky was glad she was going to be in charge of decoration, since the two Hybrids were primarily concerned with where they were going to put their gun safe. Both women might have been effeminate in some ways, but they were both soldiers at heart. Allyson and Dennis had retired to their house to perform \"marital obligations\" while Thug and Tiny were both out staring at ducks on the pond. Wyrm had just started a twelve-hour Diablo 20 marathon with some friends on-line, leaving Vicky to go exploring the new compound on her own.\n\nShe was happy with the plans she had devised for the new buildings. She was no architect, but she was pretty good at developing a coherent feel in design. It was one of the many possible careers she had started on and then abandoned when something else caught her fancy. Her most recent endeavor in cultural exchange had been the most rewarding for her and she hoped to pursue it again . . . at least as soon as she found funding for it. That was one reason she had spent so much time working on the layout for the new guesthouse. She was hoping to stay there for a while as she was getting back on her feet. Besides, she missed getting to spend time with her sister. Veronica might not be a human anymore, but she was still closer to Vicky than anyone else in the world. Vicky couldn't help but feel a tinge of jealousy over Eliza's usurping of Vicky's place in Veronica's priority hierarchy, but she couldn't hold on to that feeling. Eliza and Veronica were perfect together.\n\nVicky wandered around the compound for a while, just taking in the immensity of it all. Eliza and her crew had done well for themselves. The property was fairly vast, sprawling and well guarded. She avoided poking around the private domiciles, though she was tempted to have a look through Eliza's place. She admired her sister's taste . . . Eliza was a hottie. \n\nVicky found herself walking up a trail that led up into the mountains behind the main compound. She remembered back when she had been the \"wild child\" in the family, always looking for fame and glory. Then her sister joined a swat team, worked as a United States envoy, had gotten herself involved in military actions, been kidnapped and formed her own species. Vicky was feeling a bit like an underachiever all of a sudden. \"What the hell happened?\" she asked of the sunset.\n\n\"When?\"\n\nVicky jumped almost out of her skin when a strange voice crept out of the dimming light. She turned and saw the succubus that she had seen in the meeting room earlier.\n\n\"Good grief, you scared the shit out of me!\" she said, holding her hand over her heart.\n\nTerillia just looked at her for a moment, trying to sense if \"scared the shit out\" was one of those English phrases that was just a phrase or should be taken literally. Finally, she accepted it was just a saying. \"I apologize,\" she said, ruffling her feathers a bit and stretching her wings. She had been sitting up on that rock for about an hour, and it was beginning to wear on her. \"I thought you were talking to me.\"\n\n\"I didn't even see you. I think I'm the only one around here who can't see very well in the dark.\"\n\nTerillia sat back down on the rock and wrapped her wings around herself like a cocoon. She was a bit sensitive to the cold, and even the mild late Falls of California made her a bit nippy. \n\n\"I'm sorry, but I don't know if I caught your name?\" Vicky said.\n\n\"Terillia,\" the succubus said, somewhat forlornly.\n\n\"Something bothering you?\" Vicky asked, leaning against the boulder that the succubus was perched on.\n\n\"I was so happy that Ms. Eliza agreed to hire me and that I didn't half to go back to Terra . . . then . . . that woman that looks just like you but isn't . . .\"\n\n\"My sister?\" Vicky said.",
        "\"Yes. She doesn't like me very much,\" Terillia said.\n\nVicky grinned. \"So you ARE the one who kissed Eliza!\" Terillia flushed blue and almost made Vicky chortle. She had spent some time in a succubae aerie and she was a little more accustomed than most to their peculiarities. They were a very . . . forward . . . race, prone to saying or doing whatever was on their minds. \"Don't worry, she doesn't hate you. She's just really serious about Eliza. If it makes you feel any better, I actually STOLE one of her girlfriends when we were younger, and she eventually forgave me. Especially after the bitch turned out to be a total psycho,\" Vicky grumbled. She and Veronica had been arguing a lot at the time and Vicky had done what she had done out of spite, and it had turned around to bite her in the ass. \"Trust me, you'll be fine.\"\n\nTerillia smiled. \"You . . . do you truly believe that?\"\n\nVicky climbed up onto the rock and had a seat. She knew from experience that even though they were the least physically powerful race on Terra, their warring ancestry and cunning made succubae drawn to people of power. Most existing aeries were formed by succubae warlords and warrior maidens during Terra's dark ages, and these aeries were very much like city-states on Earth. Unlike many other races, succubae were raised by communities rather than families. There were about three succubae females for every male, so monogamous relationships were almost unheard of. Succubae were egg-layers; the males were kept busy during mating cycles trying to keep the almost berserk females satisfied. If their eggs weren't fertilized, they never really began developing and were absorbed back into the body. If the egg was fertilized, it grew, was laid and then raised by succubae in the aerie whose sole job was to look over the offspring. Most succubae young had no idea who their biological parents were. For that reason, the concept of a \"sibling\" as humans understood it was completely foreign to them, and the concept of a \"twin\" generally boggled their minds. For a succubus to want to semi-permanently distance herself from his or her community showed the amount of respect that Terillia must have for Eliza. The fact that Terillia appeared to be gay probably didn't encourage her to go home either.\n\n\"That is good,\" Terillia said after a moment. \"I wish for your sister to like me. I wish to fit in here.\"\n\n\"They hired you, so I guess they think you have some talent. Just be yourself, and I'm sure you'll be fine.\" Vicky actually shivered a bit herself as a cool wind crept down from the mountain. \"Are you really that afraid of going home?\" she asked.\n\n\"Why would I be afraid?\" Terillia asked, extending a wing and encompassing Vicky's body with it. The human woman found it surprisingly warm as she scooted closer to the succubus. She knew that if Terillia saw her as part of the succubae's new \"community\" that she would begin to act protective of Vicky as well. \n\n\"I don't know if I'm reading too much into you kissing Eliza, but . . .\"\n\nTerillia blushed again. \"No, that is not the reason I stay. At least, it is not the only reason. While frowned upon, my people are not nearly as strict about same-sex coupling. When you have three females for every male, it is not entirely uncommon for females to . . . how do you say . . . take matters into their own hands to . . . satisfy certain carnal cravings.\" Terillia stared up at the stars. \"I . . . I want an adventure!\" she gasped forcefully at the night sky. \"I don't wish to live my whole life no more than a few . . . miles . . . from where I was raised. As horrible as it sounds, I was excited when the dimensional gap closed, and I was excited when Ms. Eliza declared her war! Because it meant that I was going to be part of something . . . to be part of a legend!\"\n\nVicky smiled. \"My sister was always such a stickler when we were young. She came home early, did her homework, never broker curfew . . . you name it. If it was something 'good girls' did, then Veronica did it. I . . . I tended to break more rules. I was kind of like you. I wanted to go to new places and see new things. Turns out that my sister wound up surviving the great adventure, and I had to abide by rules on another world that I didn't even understand.\"\n\n\"Have you . . . have you gone places and seen things? Tell me,\" Terillia requested with a glimmer in her eyes. \"Tell of the places you have seen!\"\n\n\"Okay,\" Vicky said, taken aback by this woman's enthusiasm. She had traveled two globes in her thirty-three years of life. Vicky soon found herself caught up in the fond recollections of her travels. It was nice having someone so eager to listen, and the two talked long into the night.\n\n---------------- -------------\n\nThe next day . . .\n\n---------------- -------------\n\nThe entire crew was still asleep when Eliza sat down on the couch and turned on the holo-projector and switched to one of the news streams. She poured herself a cup of coffee as she watched for news of her homeworld. When she had been transformed into a Hybrid, she had gained an appreciation for certain foods and beverages that she had never been able to intake before, and coffee had become one of her favorites, preferably with LOTS of sugar and chocolate creamer. A report came on about insurgency actions by the Swords of Cleansing. There was a recorded \"press conference\" where Eliza's father discussed how the security crackdown was going. \n\nEliza couldn't even describe how it felt when she watched her father. She wanted to shout at him, but she wanted to help him. She didn't want to talk to him, but wanted for him to at least ask for her help. She had helped suppress the revolutionaries here on Earth. Why couldn't he acknowledge that? Why did he have to be so . . .\n\n{{ Stubborn? }} came Veronica's thought.\n\n{{ I thought you were still asleep, }} Eliza said, kissing her lover's hand as Veronica approached from behind and hugged Eliza's head. \n\n{{ You should've woken me. It doesn't do you any good to come out her and mope by yourself. }} Veronica sat down next to Eliza and stole a sip of coffee. \n\n\"I hate this,\" Eliza said out loud. \"We were right in the thick of it for so long . . . Isn't it weird that we're just spectators now?\"\n\n\"I don't think that's what's bothering you. We've done our job and then some.\"\n\nEliza sighed and rested her head on Veronica's shoulder. \"What else can I do, pet? I'm about a century old, so why do I STILL want his approval?\"\n\n\"I've come to the conclusion that we'll never understand our parents any better than they understand us. And since the last time I made a suggestion on how to deal with your father turned out to be disastrous,\" she added, kissing Eliza on the lips, \"I think I'll refrain. Just remember that there ARE people who care for you and respect you and you don't have to travel to another world to find them.\"\n\n\"I love you, you know that?\" Just as Eliza's lips met, they heard an \"Awwwh, how cute,\" coming from the entryway.\n\n\"Hey Vicky!\" Veronica said.\n\nVicky came in dressed in a sleeping shirt that came down halfway past her thighs, and Eliza got a light punch in the arm for staring just a little too long at those shapely legs.\n\n{{ What? }} Eliza sent telepathically. {{ It's not like I haven't seen them before! }} she added, glancing at Veronica's legs.\n\n{{ Behave yourself, }} came the amused reply.\n\n\"Stop talking with your brains,\" Vicky mumbled, pouring herself a glass of juice and then joining them on the sofa. \"It's creepy and it's too damn early for me to handle.\"\n\n\"Then go back to bed,\" Veronica said, getting up to get herself some coffee.\n\n\"Can't. Could I just crash in here tonight? Dennis and Allyson are great, but they both snore like you wouldn't believe! And they have noisy sex! I couldn't get to sleep until they were finished!\"\n\nEliza laughed. \"You should've been around when I first had the compound built. They accidentally left the intercom on once, so Thug, Wyrm and I all got earfuls.\"\n\nVicky looked at the video-stream. \"By the way, anyone know what happened to the Living Jewels?\" she asked as the anchorman started discussing the bridge created by The Dragon's Breath.\n\n\"Four of them are going to be kept on Terra and the other four on Earth. They're keeping it hushed as to which one is going where, so I had Wyrm hack the government's system. What?\" she asked when Veronica shot her a dirty look. \"Hey, remember that these are the clowns that fired you.\" She turned back to Vicky. \"Anyway, The Dragon's Breath, The Ocean's Heart, The Serpent's Kiss and The Dead Man's World are staying here. They don't want to expose The Dead Man's World to the magic of Terra. If someone got a hold of it over there who had evil intentions, they could do a hell of a lot more damage than they probably could do here. I've heard that the Council of Sorcerers is trying to research them and find out where they came from. Wherever that might be or whatever they are, they show a definite link between the two worlds, and that makes them important.\"\n\n\"Kind of like you two,\" Vicky said almost absently. When Veronica looked quizzical, Vicky continued. \"You said it yourself once. The fact that you two were combined when nothing else could be and this . . . link? This link that you share proves a relationship between races of different worlds.\"\n\n\"The Common Stock Theory,\" Eliza said. \"Somehow, Terrans and Earthlings come from some common background or stock, but no one is quite sure how. It was just a wild theory until recently, and now Terran scholars have gone nuts with it.\"\n\n\"And guys like the Purity and the Swords of Cleansing probably aren't keen on the idea,\" Veronica said. \"Well, that's all a bunch of philosophical mumbo-jumbo, and it's not our problem. We just need to get our mind back on business and let the rest of this stuff sort itself out.\"\n\n\"Speaking of business,\" Vicky said, looking a little guilty, \"I was wondering what I could do to help out around here? I'm not much of a security person, but I don't want to be a burden.\"\n\n\"Don't worry about it,\" Eliza said, squeezing her girlfriend's hand. \"You're practically family. You weren't planning on staying that long . . .\" She stopped when she saw Vicky blush.\n\n\"How long were you planning on staying?\" Veronica asked, suddenly suspicious.\n\n\"Uhm,\" Vicky started, glancing nervously between the other two women. \"I'm actually kind of broke. Dead broke.\"\n\n\"You bitch!\" Veronica said. \"You spent ALL that grant money?\" \n\n\"I was trapped over there for a year,\" Vicky started defensively. \"We kind of got our funding cut off. I mean, the host agency helped us with food and housing and everything but . . .\"\n\n\"But what?\" Veronica asked.\n\n\"Well, you know how a lot of places, especially the vampire provinces, feel about same-sex encounters, so finding . . . companionship . . . wasn't always easy.\"\n\nVeronica flopped back in the comfort of the sofa and covered her face. \"PLEASE don't tell me you spent money allocated to you by the government on prostitutes!\"\n\n\"Absolutely not!\" Vicky said. \"I spent the government's money on my troupe. I spent my OWN money on prostitutes. That's why I'm broke. I was impressed to find they even had prostitutes over there, and oh my GOD are they expensive!\"\n\nVeronica was going to respond, but Eliza had fallen off the couch and was laughing her head off. \"You're not helping,\" Veronica said to her guffawing girlfriend.\n\n------------- ---------------\n\nThat evening . . .\n\n------------- ---------------\n\n\"I can't believe they're making me do their shopping,\" Vicky mumbled as she wandered through the grocery store with Terillia in tow. \"I feel like a maid!\"\n\nTerillia was absolutely fascinated by her surroundings and was barely listening to what her compatriot had been saying. She had traveled around Earth for a month before the dimensional portal closed but had been restricted in her movements until being called up by Eliza and Valar to make war. She had taken in a lot of \"tourist\" sights, but hadn't really experienced much of \"normal\" Earth culture. And she was amazed at the random variety of things that humans tended to ingest. Succubae had fairly basic diets of meat and assorted vegetables that could be grown at higher altitudes. Anything else was considered a delicacy. Vicky had to literally drag the young succubus out of the candy section before something bad happened.\n\nVicky was actually a bit amused by Terillia's antics. It was a lot like shopping with a very shapely five-year old at times. Some people stopped and stared at the succubus, but most had seen stranger sights than a winged woman with pale, bluish skin wandering through a grocery store. Vicky was just happy that Eliza owned a transport big enough to carry a couple of trolls if necessary, so transporting the Mistress of the Enormous Wingspan wasn't so tough. Eliza had thought it might be nice for the youngest member of the team to start to develop a feel for her surroundings, so she had been sent along with Vicky. Vicky thought Veronica's desire to keep the \"emotional\" winged creature as far away from Eliza as possible MIGHT have had something to do with it.\n\n\"I'm honored to be allowed to help,\" Terillia said as she examined a large bag of marshmallows. \n\n\"You might want to put those back,\" Vicky said. \"They'll go straight to your hips.\"\n\nTerillia looked confused and placed the bag next to her slender hips. \"So they're a garment then?\"\n\nVicky started to speak but noticed a shy smile on Terillia's face. \"So you CAN make jokes?\" she said.\n\nTerillia let out a short, high-pitched noise which was the succubae equivalent of laughter. \"I'm . . . still not very confident in my English,\" she said, looking around.\n\n\"Here,\" Vicky said, handing the girl a bag of beef-jerky. \"This is mostly protein and almost no fat.\"\n\n\"Thank you,\" Terillia said, looking at the bag hungrily. \n\n\"No problem. We'll pick you up a diet soda on the way out.\"\n\n\"What is it like?\" Terillia asked suddenly. \"Having a sister?\"\n\n\"Kind of difficult question. For me, I can't imagine what it would be like NOT to have one. It's like . . . imagine your closest friend sharing the same blood as you. You miss your friends? You're aerie?\"\n\n\"Yes . . . and no. I . . . I did not have many friends. At an early age, they all . . . lost themselves in the community. I never did. I always felt like . . . like an outsider.\" Terillia stopped and blushed. \"I am sorry. I barely know you . . .\"\n\n\"It's okay. Listening is something I CAN do.\"\n\nTerillia smiled. \"So why do you see this outing as punishment? Don't you like to shop?\"\n\n\"Normally, I love to. Maybe I love shopping too much. But I'm broke, so I'm sort of relegated to running errands because my sister's too nice to kick me out on my ass.\" Vicky went on to explain her financial woes. Succubae were somewhat used to stream-of-consciousness expression, so Vicky didn't feel any obligation to hold anything back.\n\n\"You . . . you paid for . . . physical relations?\" Terillia asked at last. There was no hint of the amusement or disgust often associated with such an admission.\n\n\"You know how homosexuals are seen on Terra in most places. It was the fastest, easiest way to . . . well, get off.\" Vicky noticed that Terillia was looking very nervous.\n\n\"You . . . you are very attractive. I find it hard to believe that you would need to resort to such a thing as payment.\"\n\nVicky wasn't sure if she was being criticized or complimented. \"I normally don't, at least here on Earth. Hell, I can usually get plenty!\" Vicky realized that she had just basically admitted to being a whore. \"Not that I sleep around . . .\" She stopped and realized she should probably quit while she wasn't too far behind.\n\n\"How . . . how do you know if someone is interested in . . . becoming physical?\" Terillia asked.\n\n\"It depends on . . .\" Vicky stopped. \"Terillia are you . . . I mean, have you ever . . .\" She didn't actually need a response. Terillia's sudden flush told the whole story. \"You're a virgin?\" Vicky wasn't sure why she was surprised. Terillia was barely of legal age for her own people, which was about the same as for humans. \"Is that why you came to Earth? Because . . .\"\n\n\"While such relations are more . . . more acceptable where I come from . . . I understood that it is more common here and . . . and I was afraid to ask anyone . . .\" Terillia appeared to be on the verge of panic. \"Please don't tell anyone. I do not wish for Eliza to know that I am so weak.\"\n\n\"You're not weak,\" Vicky said, stroking the girl's hair feathers and trying to comfort her. \"You're just young. Hell, I think you're attractive!\" she said before realizing how it might be taken.\n\n\"Really?\" Terillia said, suddenly focused again. \"You are attracted to me?\"\n\nVicky found herself in a quandary. \"Uhm, yes. But I'm not coming on to you or anything. I'm just saying that I would . . . Hey, could you grab those pretzels?\" she asked, desperate to change the conversation and buy herself some breathing room.\n\n----------- ---------------\n\nAn hour later . . .\n\n----------- ---------------\n\nVicky almost bolted from the transport with the first bag of groceries into the main house. \"Food out front! Help required!\" she shouted. Dennis and Wyrm both got up to help bring stuff in and she felt a sense of relief. Terillia had been STARING at her every since their conversation earlier and Vicky was feeling very nervous. It wasn't like she hadn't been attracted to the young succubus. She had been telling the truth about that. She just wasn't sure it would be appropriate. And despite wanting sex like an alley cat in heat, she did have SOME morals.\n\nVeronica wandered in, dressed in her running clothes and sweating slightly. Eliza followed right behind her. Apparently they had been running around the mountains again.\n\n\"Hey Sis! Get everything on the list?\"\n\nAfter making sure Terillia wasn't around, Vicky grabbed her sister's arm and drug her back outside and quickly relayed the conversation she had endured with Terillia. By the end of it, Veronica was grinning from ear to ear.\n\n\"Man, you work quick don't ya?\"\n\n\"C'mon Veronica, this is serious! What do I do?\"\n\n\"Do you WANT to sleep with her?\" Veronica was usually the one who needed advice. Vicky usually was the carefree one. To have the roles reversed was a thing of beauty.\n\n\"Yes! I mean no! I mean . . . God, I don't know! She's so young . . .\"\n\n\"She's old enough to know what she wants,\" Veronica said smugly, \"and she's old enough to carry through with it. And when did you have a problem with age. When you were younger than her, you were sleeping with our math teacher!\"\n\n\"Hmm, Ms. Lewinski,\" Vicky remembered fondly. \"She gave me an 'A'.\"\n\n\"And it was the only one you got in high school. Listen, I think it's cool that you don't want to take advantage of her, so I'm going to leave it up to you. Just don't go stringing the girl along. That would probably do more damage than rejection.\" Veronica wandered back inside. At least this was going to give the succubus something to think about besides shoving her tongue down Eliza's throat.\n\n--------------- --------------\n\nA few hours later . . .\n\n--------------- --------------\n\nEveryone had gone to bed except for Eliza and Veronica, who had taken off for another run. The two of them had a disgusting amount of energy, so they were constantly coming up with new races and contests to push their Hybrid bodies to the limit.\n\nVicky was curled up on the couch in the main house, reading a book and sipping on some hot tea. Then she looked up and saw Terillia perched on the back of the sofa. Vicky spit her tea out in surprise and fell onto the floor.\n\n\"Don't sneak up on me like that!\" she exclaimed. Vicky couldn't help but notice how . . . little . . . Terillia was wearing. It looked like a piece of cloth attached only by strings around the neck and waist so as to not to interfere with those wings. She was also wearing a fairly miniscule thong. Her dark blue head feathers (which closely resembled short, slightly spiked hair unless you took a closer look) were flattened against her skull and those deep, dark amber eyes, which were larger than any human eyes, were staring directly at Vicky's eyes. She had the look of a runner preparing for a big race, and Vicky got the feeling that she was the one being chased.",
        "\"I am sorry,\" Terillia said, suddenly looking a bit bashful. \"I didn't want to disturb you. You are especially pretty when you are reading,\" she added somewhat abruptly.\n\n'Good God, she's . . . is she coming on to me?' Vicky thought. \"Thank you. Aren't you a bit . . . cold?\"\n\nTerillia looked at her flimsy garments. She had been under the impression that these particular bits of clothing were seen as enticing in the human world. \"I was wondering . . . what you said earlier . . . Do you really find me attractive?\" the girl asked.\n\nVicky sensed a lump in her throat the size of an elephant. \"Yeah, I do. Listen, I think you're beautiful, but . . .\"\n\n\"Would you like to have sex with me?\" Terillia asked. \"I mean . . . if you're not spoken for.\"\n\n\"No! What I mean is I'm not spoken for. Are you . . . why me?\" she asked, almost at a whimper. She couldn't remember the last time she had been this nervous about being intimate with a beautiful girl.\n\n\"Because you are very pretty and unattached in the general traditions of your people. Because you were very honest and forthright with me, making me feel safe with you,\" she continued, her eyes locked again on Vicky's and filled with unmistakable hunger. \"And because you seem . . . experienced . . . someone I could learn from.\"\n\nVicky rolled the thought around in her mind. It wasn't as if the thought was repugnant to her: Terillia had DEFINITE sex appeal and seemed quite sure of what she wanted. She was also VERY close and VERY scantily clothed, and it had been a VERY long time for Vicky. \"I would absolute LOVE to teach you everything I know,\" she said, finally putting her book down, \"but you have to keep in mind that right now, it's JUST sex. I don't know if I'm quite ready for anything more.\"\n\nTerillia spent a moment processing that. \"But we will . . . be friends?\"\n\n\"Absolutely,\" Vicky reassured her.\n\n\"Acceptable,\" Terillia said, reached for the strings that kept her top in place.\n\n\"Whoa there,\" Vicky said. \"When in Rome, do as the Romans do,\" she said. Terillia was obviously confused. \"There's a little thing we humans have called 'foreplay.' Women usually are more interested in it than men.\"\n\n\"How does it work?\"\n\n\"Well, first thing is getting to know your partner's body. One of the ways I like to do that is to help them get undressed.\" Vicky knelt on the sofa in front of Terillia, tracing the line of her neck muscles down to her shoulders and around the back to where the strings of Terillia's top connected. As she slowly untied the knot, Vicky kissed Terillia on the cheek, then slowly trailed her lips around until they were directly over the succubus's mouth. Then she gave her a proper kiss.\n\nKissing was something that Terillia actually knew how to do. She had practiced with a several of her nest-mates when she was a fledgling and a couple of human girls, but nothing as sweet as what this woman was doing. There was no clumsy fumbling or overly aggressive tongue action. Instead, there was softness and tenderness, and the woman's tongue penetrated Terillia's mouth and drew her deeper into the kiss. Terillia slowly responded, trying not to thrust her entire tongue down Vicky's throat like she had done with Eliza. Apparently, not everyone was used to long tongues possessed by succubae. As her tongue stretched to its full six inches, Vicky slowly broke the kiss, but gently pressed her lips around Terillia's tongue as the succubus withdrew. It was a bizarre but wholly pleasant sensation. That was when Terillia realized that her top had been deftly removed.\n\n\"I . . . think I like foreplay,\" she said, breathing hard and letting her head feathers bristle for a moment. \n\n\"I was hoping you would,\" Vicky said smiling. She knew about succubae tongues, and she was suddenly very interested in making good use of it. But she had to play it cool for now. \"Why don't you try?\"\n\nTerillia looked over Vicky's wonderfully curved body. Succubae were almost all small-breasted, so being with someone as voluptuous as this was somewhat intimidating. She placed her hands under the bottom of Vicky's nightshirt and slowly slid it up the woman's body. She wasn't quite as ripped as her sister was, but there was certainly some muscle there and everything looked delightfully smooth and firm. She had seen a woman kiss another on the abdomen on a late night soft-core porn holo-vid that she had been watching, and she wanted to try it. She traced her tongue around Vicky's bellybutton, getting a favorable reaction. Then she pushed the shirt upwards and dragged her tongue along with it until it reached the bottom of Vicky's breasts. She kept her eyes firmly glued on those generous mounds and she lifted her lover-to-be's single piece of clothing over her head. Without even waiting, she snaked her tongue out, wrapping it around one of Vicky's soft nipples and squeezing.\n\nVicky moaned. She liked having her breasts played with, and Terillia was obviously captivated by them. So she lay back on the sofa and let the succubus satisfy her curiosity. Terillia caressed those warm mounds of flesh, tasting them with her lips and tongues and feeling their weight with those long fingers. The succubus almost whimpered when Vicky pulled away.\n\n\"It's my turn,\" the human woman said, pulling on Terillia's neck and had the girl sit on the sofa while Vicky kneeled on the floor. She put her hands between the girl's legs and pushed them apart, inching her way between them as she lowered her head to Terillia's chest. She took one slightly pointed nipple into her mouth, sucking her lips inward until they were almost clamped down on the nub, pressing down on the sensitive object. Terillia . . . fluttered. Her entire body shivered for a moment and she sighed. 'So you like it as much as I do, don't you?' she thought, moving to the other breast. After a little lip-and-tongue action, she got a similar result. 'I am going to have SO much fun with you, little bird,' she thought. But Vicky decided she had had enough foreplay. \"Want to feel something REALLY special?\" she purred.\n\nTerillia nodded her head eagerly. Vicky's attention to her breasts had begun to build up certain feelings inside her, and she could only imagine what the human woman had in mind for what would be next.\n\nVicky slid her hands down Terillia's body and hooked her thumbs under the succubus's thong, slowly pulling it downward before spreading the girl's legs again. Succubae, like vampires, and to a slightly lesser degree lycanthropes, had almost identical sexual physiology to humans (except for being egg-layers rather than being equipped to give birth to live young). Terillia's vaginal opening was a bit longer than for most women Vicky had been with, but certainly not unattractively so. The surrounding mound wasn't quite as full and there was a small patch of very tiny feathers just above the clitoral area in a small v-shape. Vicky looked Terillia right in the eyes when she ran a finger slowly up the cleft, barely touching the surface. Terillia's breathing noticeably increased as her opening moistened. Vicky ran her finger up the opening again, but pressed that digit inward a little. She could almost swear that her young prot\u00e9g\u00e9 was going to cream herself from just this little bit of attention. She crouched down, leaned forward and moved her mouth slowly towards Terillia's nether opening. She kissed either side of the woman's mound, then wiggled the tip of her tongue just inside the opening to Terillia's pussy. Then she pushed her tongue in a little deeper.\n\nTerillia had seen fireworks go off on Earth before, but never before had they been going off in her head. She had dreamed so many times of what her first time would be like, but she was almost unprepared now that it was happening. But Vicky was prepared. By all accounts, the woman was quite skilled. Her tongue was penetrating Terillia's sex while her fingers massaged the area around the succubus's vaginal opening. The human woman was going maddeningly . . . deliciously slowly. Then Terillia felt something that she had only achieved rarely through personal stimulation.\n\n\"Ms. Vicky,\" she gasped. \"I believe that . . .\" Her train of thought was derailed as Vicky grinned and sent her tongue into overdrive. Terillia grabbed the woman's head and held on for dear life as her first orgasm at another woman's touch stampeded through her with the force of an earthquake.\n\nVicky found herself with a face full of an almost tangy vaginal secretion as the succubus came. Terillia had gone almost as stiff as a statue after arching her back and flaring her wings. But the look of almost surprised pleasure on her face was unmistakable. This was one of those moments the young succubus would probably remember for the rest of her life. Vicky withdrew her face and pushed two fingers into the girl's box after it had succumbed to its final spasm and began to finger fuck the recovering girl, sitting on the couch next to her while kissing her on her panting lips. Terillia was already grinding her hips against Vicky's hand. She had experienced the pleasure this human woman could provide, and she longed for more.\n\n\"So, was it fun?\" Vicky asked, breaking her kiss.\n\n\"It was amazing!\" Terillia responded, pushing her own hand between Vicky's legs and tentatively exploring Vicky's honeypot with her own long fingers. She was amazed at how hot her human lover was down there as she explored Vicky's inner workings. The two of them continued to make out while fingering each other, and Vicky's more experiences hands brought the younger woman to orgasm a second time fairly quickly. It was a sight to behold . . . the young creature's body frozen in a moment of pure bliss as she came onto Vicky's fingers. She lost track of her own fingerings in the joy that Vicky had brought her.\n\nVicky was having WAY too much fun. This girl had a hair-trigger, and the blonde woman was wondering how many times she could make Terillia fire. \"Stand up,\" she said.\n\n\"But . . .\"\n\n\"This is all part of the learning process,\" Vicky assured her. \"You DO want to learn, don't you?\"\n\nTerillia got the feeling that she was being had, but she wasn't exactly going to argue with receiving more pleasure. She stood up in front of Vicky who was still sitting on the couch. Vicky reached her hands around and grabbed the young succubus's amazingly tight ass cheeks and drew the girl closer, sending her tongue back into the girl's inviting pussy. It was so juicy that Vicky thought she could just spend all night in there. She sucked on Terillia's soft inner labia in between bouts of deep-tongue action. \n\n\"That feels so wonderful,\" said a glossy-eyed Terillia. \"When . . . when do I get to do you?\"\n\n\"Soon enough,\" Vicky said. She was pistoning a couple of fingers into the lower portion of Terillia's box while ravishing the girl's clit with her tongue. She had to admit that her own desire for release was quickly becoming maddening, but she had a feeling it would be worth the wait. And within fifteen minutes of beginning their tryst, she had the succubus cumming for a third time. 'God, does this girl ever run out of juice?' she asked as her tongue and fingers were once again coated in the succubus's goo. \n\nShe let Terillia rest for a moment as she crawled onto the couch and sat on the back of the sofa, slowly and erotically spreading her legs. The sight definitely caught the succubus's attention. Terillia slunk between Vicky's legs, looking like a cat for a moment rather than a bird. Her mouth shyly encircled the human's pussy and sucked inward. Then Vicky felt that tongue stretching and filling her cunt. \n\n\"Sweet Jesus!\" she said, a bit louder than intended. The succubus's tongue had to be buried at least six inches into Vicky's body, and it was so very, very nimble! It seemed to be poking around everywhere like a snake searching a burrow for something to eat. But it was still obvious that Terillia wasn't quite sure how to progress from there. \"Do . . . do you remember when you were learning to speak English?\" she asked.\n\nTerillia nodded, leaving her tongue buried in Vicky's box. \n\n\"Well, make the shape of English letters with your tongue. Just trust me,\" she said.\n\nTerillia shrugged and made a capital \"A\" with her tongue, enjoying the feeling of Vicky's flesh yielding to that powerful muscle. She also noticed that Vicky bit her bottom lip in a definite sign of approval. So Terillia continued on down the line. By the time she reached her capital \"S\", Vicky was groaning like a bitch in heat, bucking her hips and letting loose a torrent of girl-cum onto Terillia's face. The young succubus withdrew her tongue and massaged Vicky's thick outer labia, watching them with awe as Vicky began to leak her precious fluid.\n\n\"See how easy that was?\" Vicky said with a grin. \n\n\"I was . . . acceptable?\" Terillia asked.\n\n\"Perfect.\"\n\nThe succubus smiled, then stuck her tongue back in. She still had the rest of the alphabet to go. She finished up her capital letters, then started on the lower case. Her tongue was diving and sidestepping with incredible speed, and Vicky was writhing like a worm on a hook. She was arching her back and thrusting her breasts outward, and on more than one occasion she found her tits encircled by Terillia's greedy hands. The succubus withdrew one of those hands so she could finger fuck Vicky's pussy while finishing the lower case alphabet. Then all on her own, Terillia began tracing numbers inside her lover's box. With her finger in the action, she had Vicky cumming again by the time she reached \"12.\" \n\n\"Fucking fantastic,\" Vicky hummed, collapsing onto the sofa.\n\n\"That was the most . . . wonderful thing I've ever experienced,\" Terillia said. She gently lay on top of Vicky's sweating body, covering both women's bodies with her wings. \"I would very much like to do this some more with you . . . if you would like.\"\n\n\"Don't worry your head about that,\" Vicky replied, holding Terillia's head and kissing the young woman again. \"I've got a feeling you and I are going to have a lot of fun together. Question though. Are you going to want other lovers as well? I was under the impression that succubae weren't exactly . . . monogamous.\"\n\n\"I . . . I hadn't thought of that,\" Terillia said. \"I do not wish to offend you by seeking other companionship when your own is so . . . pleasurable.\"\n\n\"I'm not offended,\" Vicky said with a grin. \"I've never been a one-woman kind of girl myself. Actually, I think you and I are going to have A LOT of fun together. Just follow my lead, and I'll introduce you to things you never even imagined.\"\n\nTerillia actually giggled, then cuddled closer. Vicky was surprise out how warm she was, covered by the succubus's body and wings. It was . . . comfortable. Vicky liked how it felt, and she stroked her young lover's head feathers while waiting for sleep to come.\n\n---------- -------------------\n\nThe next morning . . .\n\n---------- -------------------\n\nVicky opened her eyes and saw Veronica standing next to the sofa, grinning her head off. Vicky blushed like it was going out of style. Veronica put a change of clothes for both women on the coffee table, then motioned towards the outside with her head. Then Veronica went out the door.\n\n\"Are they STILL sleeping?\" Allyson asked. The entire crew was gathered out in the garden, waiting for their two remaining members to rise and shine.\n\n\"They probably exerted themselves a bit last night,\" Dennis said, trying not to laugh. He pulled his wife against his chest and held her. \"I should think you'd understand that.\"\n\nAllyson blushed. It wasn't like she was particularly averse to getting a little randy herself. She looked across at Eliza and Veronica on the other bench. Eliza was actually brushing her lover's hair. Allyson Murgo wasn't sure she would EVER get used to the idea of Eliza actually acting . . . feminine. She was so used to Eliza being a warrior all the time.\n\nFinally, Vicky and Terillia joined the rest of the team. The young succubus was trying to hide behind the human woman so no one could see how badly she was blushing. While everyone in the group was smiling from ear to ear (except the trolls), no one gave the two women any grief. For the time being.\n\n\"Got a communication for the President of the World Council. There's going to be a trade meeting down in Los Angeles next month and he personally requested us to do personal security for a number of the delegates. It's going to be a high profile, big money job.\"\n\n\"Just our style,\" said Wyrm, who was fucking around on his wireless laptop. \n\n\"True,\" replied the boss. \"But a few things have occurred to me. One, we really need to make this outfit a little more professional since we've decided to stay in business.\"\n\n\"So are you actually going to come up with a name for your group?\" Veronica asked.\n\n\"Actually, I was going to leave that up to the whole crew to think of. We should probably also get some actual uniforms. Lastly, I was thinking that since we've just started remodeling, we might want add a few more buildings, particularly since I think we should hire on some more personnel. Having Tiny and Terillia around kind of made me realize how short-staffed we were when it was just five of us trying to do everything. Even though it was never formalized,\" she added, looking into Veronica's eyes, \"I'd like you to be an OFFICIAL part of the team, unless there are any objections.\"\n\n\"Like you could get rid of me if you tried,\" Veronica said.\n\n\"I think I speak for the rest of the team when I say there are NO objections,\" Dennis said. \n\n\"Excellent. Tiny . . . Terillia . . . give Vicky there a list of any special supplies or weapons you might want. Vicky . . . you're not a soldier, but that doesn't mean there isn't a place for you here. And I'm not talking charity work.\"\n\n\"What could I do?\" Vicky said, intrigued by the idea of being part of this team.\n\n\"Well,\" her sister piped in, \"you have more experience with other races and other cultures than anyone else here, including myself.\"\n\n\"And that could be VERY useful when dealing with new clients,\" Eliza finished. \"We're high profile now, which means we're going to need someone to organize things. And since we don't currently have a front office . . .\"\n\n\"Let me guess. That's where I come in.\"\n\nEliza smiled. \"Well, the pay is good, and I'm sure we could put a benefit package together that you'd like,\" she added glancing knowingly at Terillia who was completely oblivious to the reference. She was just happy that her lover might be sticking around for a while.\n\n\"Count me in!\" Vicky said.\n\n\"Yay!\" Veronica said, giving her sister a hug. She loved spending time with Vicky.\n\n\"Cool. I think we'll need to bring a few more people too. A couple more humans and I was thinking of finding a lycanthrope. They've got even better senses of smell than Veronica and I do,\" Eliza said.\n\n\"I think I know some people who might be interested,\" Dennis said. \"A few friends from my military days who are tired of merc work.\"\n\n\"The Triad?\" Allyson asked. \"That would be so cool! I haven't seen those three in FOREVER!\"\n\n\"They were kind of hoping to return stateside and find some less political and more profitable work. Don't worry boss, they're solid,\" Dennis finished.\n\n\"Then call 'em up and get here so I can talk to them. Vicky, your first set of jobs are to reallocate some of the building funds for new housing and a front office, and then you'll start shifting through potential applicants . . .\"\n\nTerillia phased out for a moment. Things were so wonderful! She had experienced sex for the first time with a very talented teacher, she was part of a very elite unit, and she was about to be part of her first job. Things couldn't get more exciting!\n\n------------ ---------------\n\nA month later . . .\n\n------------ ---------------\n\n{{ I'm so BORED! }} Terillia thought as she looked down from her vantage point atop a building next to the Convention Center. She had been flying around for several minutes looking at traffic patterns and conglomerations of people that might be considered suspicious, and relaying everything she saw through the telepathic link that Eliza had established. She wished she hadn't thought that. She wasn't use to guarding her thoughts, which could be a bit embarrassing when minds were connected. Luckily, Eliza just seemed amused.",
        "{{ Were you expecting EVERY mission to be a gunfight? }} the leader of Hybrid Security thought. {{ Ask Dennis and Allyson or Wyrm. Sitting around is most of what we do. In our business, 'interesting' tends to be synonymous with 'messy.' }}\n\nTerillia sighed. She glanced around, spotting the three members of the Triad inconspicuously guarding the back entrance. The three of them had been more than willing to hook up with as profitable a group as Hybrid Security. Bear was their spokesman. Terillia wasn't sure if that was his real name or not, but it certainly fit. He was six feet, six inches tall and as broad across the chest as the animal whose name he bore. Then there was Boomer, an explosives expert. He and Wyrm got along famously, which made everyone nervous. Finally there was Snake, a small arms and martial arts guru. He was slender but muscular, with long blonde hair that almost gave him an effeminate look. If he hadn't been male, Terillia probably would have found him attractive. Eliza hadn't been able to find a lycanthrope that suited her purposes, but they were still pretty well set for this mission. Thug and Tiny were inside somewhere, while Allyson and Dennis were undercover somewhere. Eliza and Veronica were being very high profile in the lobby. But Terillia remained convinced that things were going to get really hairy at any moment.\n\n------- ----------------------\n\nTwo days later . . .\n\n------- ----------------------\n\n\"I can't believe it,\" Terillia said, still stunned. \"Nothing happened!\"\n\n\"Is she still stuck on that?\" Dennis asked, his hat pulled down over his eyes.\n\n\"Honey, a day where we get paid rather than shot it is a GOOD day!\" said Allyson. \"Last time things got exciting, we got stuck in a year-long war.\"\n\n\"I would not have killed us to have at least one fight,\" Terillia muttered, mostly to herself.\n\n\"You almost had a fight,\" Eliza chortled. \"When you ambushed that delivery guy.\"\n\nTerillia buried her head in her hands. That had been a horribly embarrassing incident. She had seen a man approaching a group of delegates who were standing out front, and he had some form of rod in his hand. He was also carrying a mysterious package. Terillia, announcing her findings to the group AS she flew into action, soon discovered that the \"rod\" was just a ballpoint pen and the package had been official documents for the convention.\n\n\"It looked like a wand,\" Terillia grumbled.\n\nDennis chuckled. \"Calm down,\" he told the young woman. \"We all make mistakes, and at least you had the good sense not to use lethal force or anything. Just remember, we have procedures for a reason. Any one of us is an imperfect machine, and that's why we always wait for confirmation unless the threat is imminent and/or obvious. You'll get the hang of it. You're smart enough to ask questions, so keep doing that.\"\n\n\"If it makes you feel any better,\" Eliza said, \"on my first job with this crew, I shot an elevator.\" Eliza waited for the laughter to subside. \"I'm serious, the damn thing made a 'ding' noise right behind me, and I was already on edge.\"\n\nDennis smiled. He remembered that mission. \"Hell, my wife almost got banned from Germany for life after some 'inopportune' comments about our employer and his family. His family happened to hold several offices in the government.\"\n\n\"Hey,\" Allyson replied, \"let's not forget you and your little 'drag-queen' episode in Barcelona!\"\n\nTerillia began to feel better as all the members of the team started sharing their \"worst case scenario\" stories. By the time they were approaching the compound, she felt more like a member of the team than ever. She had her own story to tell when the next members joined.\n\n\"We're here!\" came a deep voice from the front. Bear, amongst his other talents, apparently could drive just about any land-based military vehicle that had ever been built, including the military transports Eliza had bought. He and Snake were crashing with the Murgos for the time being while Boomer was sleeping on Wyrm's couch. Vicky had taken to crashing in the small spare room of Eliza and Veronica's house, and wherever Vicky went those days, Terillia went too. The two had been steadfast and energetic lovers for a month, and the one positive thing about having an uneventful mission was getting home and getting back to her sexual education. But Terillia was soon to discover that \"excitement\" didn't have a set tee-time.\n\nAs soon as the crew piled out of the vehicles into the compound, Terillia saw Vicky standing on the front porch, looking very nervous.\n\n\"Eliza,\" she said as soon as the white-haired Hybrid came into view, \"you better come inside. A news story just broke from Terra. The Swords of Cleansing just made an attempt on your father's life.\"\n\nEliza felt . . . empty . . . for a moment. It was a cold kind of hollowness that was apparent even to those around you. Faster than most of the crew could even watch, she sprinted inside with Veronica hot on her heels. The holo-projector was up and running, with Wyrm ensuring the most reliable data-stream feed. \n\nThe anchor was discussing the aftermath of what was apparently a Phoenix Trap, which was a clever kind of trap where one spell dispelled any protective magic in the area, including the wards surrounding a hidden fireball spell also laid by the attackers. Getting rid of such traps was difficult since most counter-trap spells instantly set them off. Somehow, an insurgent sorcerer or sorceress got into the Prime Minister's Palace while Evlidone Msabdteelfinclor was there, and the trap had definitely been laid for him. He was in charge of security for the entire continent, including Terminal Point, and he was an outspoken proponent of inter-world trade and relations. No word was given as to his condition.\n\nEliza hurried into the bedroom and grabbed her communication orb from the closet. The orb had been dormant since the dimensional portal had been sealed over a year earlier. She hadn't bothered to reactivate it, since there wasn't anyone on the other side that she really wanted to talk to . . . or who might want to talk to her. She concentrated on it, following the magical thread through a web-like network back into the Terran dimension and straight to her parent's house.\n\n{{ ANYONE! }} she screamed mentally. Right behind her, Veronica actually felt pain from telepathic shout. {{ MOM?!? DAD?!? Someone fucking answer me! }} There was no response. Then she felt her communication being drawn in another direction. Finally, she felt a familiar mind.\n\n{{ Eliza? }}\n\n{{ Mom? Where . . . }}\n\n{{ I'm almost at the Palace Medical Center. I knew you would try and communicate, so I had your transmission forwarded to the coach. Don't worry, your father is okay, }} she added, heading off Eliza's next thought. {{ He wasn't caught in the blast. His bodyguards weren't so lucky. }}\n\n{{ Mom . . . Mom I'm sorry, }} Eliza started, tears in her eyes. {{ I should've been there . . . }}\n\n{{ Please, don't start that now, }} her mother said. {{ If you had been here, I would be worried about two people I love instead of one. But saying that . . . I know he'd never ask, so I will. Your father needs you, Eliza. Please come. }}\n\n{{ I will, }} Eliza said, clenching her fists. Then her mother's coach entered the palace grounds and the communication was cut off. Eliza turned and found that Veronica had already started packing two suitcases.\n\n\"Before you even say anything, yes I AM going with you,\" Veronica told her lover. \"So don't even try and talk me . . .\"\n\nVeronica found herself silenced by a kiss from Eliza. \"I'll never leave you behind,\" she whispered. \"I just didn't want . . . I didn't want it to be like this.\"\n\n\"'Like this'? Love, this is the way our lives work these days. Now lets go. Your father needs you.\"\n\nThe two of them grabbed their bags and headed out to the transport. They didn't see any of the team out in the main room, so Eliza figured she would just call them from the road. When they got out to the transport, they were in for another surprise. The entire team was packed up, personnel and gear divided amongst two transports, with Bear driving one and Dennis driving the other.\n\n\"What the hell . . .\" Eliza started.\n\nAllyson was the first to speak. \"Boss, I know this is personal business. But what's personal to you is personal to the team, even the new guys,\" she said, looking behind her at their most recent acquisitions. \"If there's going to be a fight, we're going to be there with you. You can let us go with you or you can deal with us following you.\"\n\nEliza hugged her dear friend. \"Saddle up boys,\" she said, tossing her bags into the back of a transport. \"We're going to pick a fight!\"\n\n----------- ------------------\n\nSeveral days later . . .\n\n----------- ------------------\n\nA series of coaches pulled up to the Msabdteelfinclor palatial estate. Veronica's mouth was hanging open. If they had come under different circumstances, she'd probably be gushing all over the place. Eliza's parents lived in a castle in every sense of the word, and it was bigger than a couple of towns Veronica and Vicky had lived in as kids. And it was gorgeous. Even Vicky and Terillia were impressed, and they had spent a lot more time on Terra than most. Tiny and Thug just grunted, then started grabbing bags.\n\n\"Thug, you remember where the guest rooms are? And you have that list of passwords for the security spells?\"\n\n|| YES AND GOT 'EM, || Thug said, hauling their equipment up to the front door.\n\n\"Mom ordered the servants to give us free access,\" Eliza said to Veronica as everyone else headed inside, with the exception of Vicky and Terillia. \"She 'ordered' them. Crap, even the people who fertilize the gardens look down on me,\" she said.\n\n\"I'm sure that's not what your mom meant,\" Veronica returned, rubbing her head. That annoying buzzing \"sound\" she had felt when she crossed over the last time had returned with a vengeance. She was beginning to wonder if dimension hopping had side effects.\n\n\"She's going to be staying with my father at the Palace. They're both under high security until the person who cast that trap spell is caught. Shit, I came all this way and I don't even know what to do next,\" Eliza said, sitting on the low concrete wall surrounding the parking area. \"It's not like I'm going to be able to work incognito around here. Everyone knows me and not many of them are exactly willing to help a 'half-breed lesbian' anyway.\"\n\n\"So you're going to quit and go home then?\" Vicky asked, interrupting the conversation and earning her a dirty look from her sister and Eliza. \"Hey, I'm just sayin' . . . We all know that it ain't gonna happen, so let's see some of that original thinking I've been hearing so much about.\"\n\n\"If all your conventional avenues have been lost to you . . .\" started Terillia.\n\n\"Then use some unconventional ones,\" finished Veronica. \n\n\"Some people have friends,\" Eliza said, smiling in spite of herself. \"I have a booster club. All right, all right. I'll think of something.\"\n\nVeronica smiled back. \"So . . .\" she started with a drawl. \"Where's YOUR room?\"\n\n------------ -----------------------\n\nIn Eliza's old bedroom . . .\n\n------------ -----------------------\n\nVeronica couldn't stop laughing. Eliza's parents had apparently left her room just the way it was from when Eliza had gone off for her \"extended vacation\" on Earth. Veronica had never imagined Eliza as a \"teenager\" before, but she apparently had been. There were posters of popular musicians and theatre performers, as well as an all-girl team for some sport called \"Grenslonvaas,\" which was like a magical combination of rugby and field hockey without all the niceties. And the stuff animals! Tons and tons of stuffed animals! Apparently, small collectible stuffed animals weren't just a human tradition. While blushing, Eliza admitted that she actually had one of the most extensive collections in the southern provinces.\n\n\"Stop it,\" Eliza said to her chortling girlfriend.\n\n\"I can't help it,\" Veronica said, trying to compose herself. \"It's just . . . they're so cute!\" she added, waving her hand at the shelves of plush toys. \"I just never imagined you like this . . . Not that I was any different, mind you.\"\n\n\"I never thought I'd be back here,\" Eliza said, picking up what had been one of her favorite toys as a kid; a stuffed griffin named \"Kachecki.\" \"I don't even know if he'll let me try to help him,\" she added, not needing to mention who \"he\" was.\n\n\"Since when did you ever need permission from someone to get involved?\" Veronica mentioned.\n\n\"This is different. You didn't hear some of the things that he said . . . that I said.\"\n\n\"I know,\" Veronica said, looking towards the door. \"You feeling okay? Or better at least?\"\n\n\"A bit,\" Eliza replied, sitting down on her bed. \"My father's okay, but apparently pissed. He's safe now, and so is my mom. All the security spells are back in place, and everyone has their shift assignments for tonight.\"\n\n\"So, when's our shift?\" Veronica asked, leisurely leaning back on the bed, pulling at the strings that kept her vest tied together. \n\n\"Veronica!\" Eliza said.\n\n\"What? Don't tell me you're the only girl who didn't want to do it when her parents were out of the house!\" Secretly, Veronica wanted to do something that would take her mind off the annoying buzzing in her head.\n\nEliza had to admit that the thought had crossed her mind. Of course, she had always pictured one of those grenslonvaas players in her bed, but Veronica was a pretty good substitute. \"All the time,\" Eliza replied. \"I just never thought there was a chance in hell it would happen.\"\n\nVeronica pulled the last string of her vest apart and the garment sprung open, letting those luscious tits pop free. \"Well hell just froze over,\" she said, lying back and pinching her nipples so they stood out proudly. \"It must be cold in here.\"\n\n\"I could start a fire,\" Eliza said, straddling the blonde woman's hips and placing Veronica's hands on Eliza's ass.\n\n\"I think you already did,\" Veronica said, squeezing her lover's ass and watching as Eliza unzipped the top of her jumpsuit.\n\nEliza let her top fall to her waist, then lay on the bed next to Veronica so she could finish getting the jumpsuit off. Veronica stood up and made a big production of sliding her jeans off. She had on a pair of bikini panties, tied at the side. Two quick tugs and the underwear was a thing of the past. Then she pounced on Eliza, pinning her to the bed and kissing her heavily.\n\nThe two of them had done many things together, but this felt . . . delightfully naughty to Eliza. It was one of those time-honored rites of adolescence, regardless of what race you were from . . . making out in a teenage girl's bedroom. Of course, there had been twenty-three U. S. presidents since Eliza was a teenager, but that fact was lost on the two grown-up women rolling around on Eliza's old bed.\n\nSomething occurred to Veronica . . . something that was supposed to be said in situations like this. \"C'mon,\" she murmured. \"If you REALLY love me, you'll do it,\" she added with a giggle.\n\nEliza grabbed Veronica by the shoulders and pushed them against the bed, riding the woman's hips like a saddle. She gripped her lover's breasts, lowering her head to them and sucking eagerly on her nipples. \"Do what?\" she asked. \"This?\" Eliza sucked lovingly on both breasts again. \"Or this?\" she asked, kissing her lover's bellybutton. \"Or maybe this?\" Eliza asked, planting a kiss on Veronica's clitoral hood. Veronica shuddered. \"Or maybe . . .\"\n\n{{ Oh shut up and eat me! }} Veronica thought, her patience reaching its limit. She hooked her legs over Eliza's shoulders and pressed her thighs together on either side of Eliza's face.\n\n{{ So insistent, }} Eliza thought, burying her tongue in her girlfriend's sweet box and reveling in its wet warmth. She took a long lick, prepping that pussy for an evening of debauchery. Then she took another. She pushed her lips into the opening and wiggled her tongue around. She sunk one thumb into Veronica's asshole as she began to eat that pretty cunt like a woman possessed. \n\nWhatever buzzing sensation was going on in Veronica's head was quickly being overshadowed by pure pleasure. Every time with Eliza was like the first time . . . namely, magnificent. She grasped her own hair as Eliza's tongue explored her like Magellan going around the world, stopping every now and then to wreak some havoc. But unlike Magellan, Eliza's tongue made it the entire trip around Veronica's insides, then made a return trip. And with a thumb prodding the inside of her backside, she let herself go. After a few minutes of oral attention, she was cumming on Eliza's face. \n\n{{ Consider yourself eaten, }} Eliza thought as she licked her lips.\n\nVeronica pulled Eliza onto the bed and kissed her girlfriend again, licking the remnants of her own orgasm from her lover's lips. Then she leaned back on one elbow and spread her legs in a v-shape. Not missing a beat, Eliza did the same thing with her own legs, turning them until they formed a right angle from her lover's limbs. She scooted forward until her mound came into contact with Veronica's. Each woman grabbed one of the other's legs for leverage, then their eyes locked.\n\n{{ Ready? }} Veronica asked.\n\nEliza humped her hips, pressing her pussy against her lover's. {{ For you, I'm always ready. }}\n\nVeronica grinned. {{ You're so romantic when you're horny! }} She ground her hips against Eliza. Both women's nether region was fairly slick, so they were able to rub together quickly and easily. {{ Hurry up! Before your parents come home! }}\n\nEliza stopped and looked pained. {{ Please don't mention my parents during sex. That is phenomenally gross! }}\n\nVeronica smiled and gyrated her hips again. {{ Okay, okay! }} she said, giggling. {{ So I guess asking 'Whose you're daddy?' is right out? }}\n\nEliza couldn't help but smile back as she humped against Veronica's mound. {{ Only if you never want to do this again! }} She moaned and started kissing her lover's calf as she held onto her leg. Veronica fell back onto the bed, moving her hips while she inserted her index finger into her own asshole. The two of them ground their slick openings together harder and harder. Their constant humping was positively delightful for both women. Veronica was watching every muscle in Eliza's body strain, while Eliza was watching her lover's breast jiggle. When Eliza finally climaxed, she grabbed on to Veronica's leg and just held on for dear life as the two women's junction became even slicker. And Veronica wasn't far behind. She was sure that sometimes . . . just sometimes . . . that thought of Eliza's orgasm was enough to push Veronica over the top.\n\nThe two fell back onto the bed, their legs still intertwined. \n\n\"God, I wish I'd brought the toys,\" Veronica said.\n\nEliza laughed. Her girlfriend has such an affinity for sex toys that . . . \"Wait a minute,\" she muttered as she disentangled herself and got off the bed. Veronica must have thought her lover had gone insane as Eliza stood, naked and sweaty, in the middle of the room, kicking at the floor with her heel. Finally, she heard a slightly muffled thump, and she got on her knees so she could pry a particular stone out of the floor. Underneath was a treasure trove of all the things she had kept hidden from her parents when she was younger. She pulled out a bag of stuff and shifted through it, finally emerging with what appeared to Veronica to be a glass dildo. \"Old reliable,\" Eliza said. Then she noticed Veronica was staring at her. \"What?\"\n\n\"Are there any OTHER things I should know about?\"\n\nEliza shrugged, then looked in another small bag. She opened it, sniffed inside, then made a face of disgust. \"Looks like the preservation spell wore off a couple decades ago,\" she said. \"No way I'll be able to smoke that shit,\" she said as she wiped the dust of the sex toy. Then she climbed onto the bed.",
        "\"You smoked pot?\" Veronica said, somewhat bemused.\n\n\"Not exactly,\" Eliza said. \"It was only a mild hallucinogen, but it provided a MAJOR adrenaline boost.\"\n\nVeronica grabbed the dildo from Eliza and shoved the girl back onto the bed. \"So you were a rebel, a smoker, and an overall troublemaker? You must have given your dad some real headaches,\" she added. She had spread Eliza's legs and positioned herself between them. She grasped the six-inch long toy tightly and placed the base of it against her own mound while pushing the head into Eliza's box. Using her other arm to brace herself, she penetrated her lover's pussy and began a slow, steady tempo of thrusting.\n\nEliza laid back and let Veronica do her work. She curled her legs around her lover and enjoyed a far more gentle fucking than she was used to. She decided she liked it. And as Veronica filled her over and over with the glass dildo, Eliza thought about what her lover had said. \"You must have given your dad some real headaches.\" 'Was I that difficult to deal with? Did I make things harder than they needed to be?'\n\n{{ Shh, }} thought Veronica, picking up on Eliza's discontent. {{ No sad thoughts or second-guessing, }} Veronica added as she kissed Eliza's lips. She thrust the dildo into Eliza's box, leaving it there until she moved up and straddled the woman's waist. Then she reached back behind her and grabbed the toy again, pumping it harder and faster into her lover's sex. \n\nEliza's hands almost instinctively found their way to Veronica's breasts, squeezing them gently and enjoying their heat. {{ We should do this more often. }}\n\n{{ If we did this any more often, }} Veronica thought, {{ we'd never get any work done! But you're right, }} she added, enjoying the more relaxed pace. She worked the dildo faster and faster, waiting for the perfect moment. Soon, Eliza reached orgasm, and Veronica dove forward and sank her fangs into Eliza's neck. \n\nEliza would've chastised her girlfriend for biting so hastily, but she had abruptly lost the power of speech. As her orgasm hit her, she felt the pleasure feeding directly into Veronica's brain as well. Veronica then fed back everything SHE was feeling back to Eliza, creating a \"loop\" of ecstasy. Both women experienced mind-numbing pleasure over and over and over again. It set off an orgasm in Veronica's body as well, which only compounded the \"problem.\" \n\nAfter several minutes and multiple climaxes, the two women collapsed in a sweaty heap with Veronica on top. Her fangs withdrew from Eliza's skin, then she licked the taste of blood from her lips. {{ We DEFINITELY need to do THAT more often, }} Veronica thought, settling in for a cuddle and a nap.\n\n---------------- ---------\n\nDown the hall . . .\n\n---------------- ---------\n\n\"Fuck . . . fuck . . . fuck!\" Vicky uttered. She and Terillia had been at it for almost half an hour. The succubus had almost ambushed her as soon as the door to their room was closed. Vicky had eaten her lover to several orgasms before Terillia returned the favor. That incredible tongue the succubus possessed had worked Vicky's sweet spot until the human woman couldn't see straight anymore. She felt another beautiful orgasm quickly approaching, and she held Terillia's head against her crotch as she covered the incredible creature's face in nectar. And Terillia licked up every drop almost at once.\n\n\"You are an INCREDIBLE lover,\" Vicky said. It was rapidly becoming true, but she also liked to bolster the young succubus's confidence.\n\nTerillia blushed. \"You are too kind,\" she said, very proud of her own performance.\n\nVicky kissed her lover, then pushed her back onto some pillows. She was still trying to get it through her head that a succubus's wings were actually pretty tough and that the creatures slept on them all the time. \"Now spread your legs.\" She had recently had a conversation with her sister regarding a certain sexual exploit, and Vicky thought it might be fun to try. She kissed Terillia's long slit, then ran her tongue up the length. She felt Terillia's body tremble. Then Vicky pushed three of her fingers on one hand into Terillia's box and felt her way around a bit. Succubus had slightly larger vaginal openings to accommodate laying eggs, where weren't quite as pliable as live young. \"Let me know if this starts to hurt, okay?\"\n\n\"If what starts to hurt?\" Terillia asked. She didn't understand how what her lover and teacher could constitute \"hurting.\" Then she felt a fourth finger slide into her box, and then she sensed Vicky's knuckles bumping into her opening. She gave out a chirping noise, then covered her hand with her mouth. 'That feels so GOOD!' she thought. Her opening stretched a little more, and Vicky's fist slipped inside.\n\nVicky was happy with how things had gone. Just as she suspected, Terillia's pussy had put up less of a struggle than a human woman's might, but then she had gotten her hand in, sunk all the way to the wrist. While a little bigger than a human vaginal cavity, Terillia's box was still fairly snug. And when Vicky stretched her hand out, she got an . . . interesting reaction. She heard a chirp, followed by something that sounded like a hiccup and a fluttering noise. She looked up.\n\nTerillia's eyes were as wide as they could get. She had flared her wings, and several more hiccup sounds escaped her lips. Vicky stopped her interior probing, and the sounds stopped and the wings began to retract. Vicky grinned and flexed her hand, causing the noises to return and the wings to flare. 'Are those noises of arousal?' she wondered. \"I'm not hurting you, am I?\" Vicky asked coyly. \"If I am, I could always stop . . .\"\n\n\"No!\" Terillia shouted. \"Please do not stop!\"\n\nVicky pumped her arm, and Terillia squeaked. She flexed her fist and got more chirping sounds. She could sexually satisfy her partner and get serenaded at the same time! If anyone had been walking by their room, the intruder would have heard what sounded like a flock of birds coming from inside.\n\nTerillia was squeezing Vicky's hand as hard as she could, but she couldn't stop the human woman's assault. Her wings flapped and she knocked a lamp off the nightstand. Terillia had never mated with a male of her own species, but she was sure that none of them were sufficiently endowed that they might provide her pleasure such as this! And when Vicky's mouth found Terillia's clit, the succubus hit the sexual mother lode, cumming several times in succession as Vicky's hand probed her insides. Terillia grabbed a pillow from the bed and screamed into it as her body shook, then trembled, then finally lay still. There was an emptiness she felt when Vicky's hand slid out, but there was a feeling of overwhelming contentment. She was practically cooing when Vicky lay down next to her, and Terillia once again enveloped her lover in her wing.\n\n\"Did you want me . . . want me to do that to you?\" she gasped.\n\nVicky grinned. \"Maybe another time. It's a little more complicated with a woman, but your hands are small enough that it might work. Remind me to thank my sister for that little tidbit,\" she muttered happily. \"I'd tell you to kill the lights, but you already did that,\" she said, staring at the lamp on the floor. \"We need to bring that to Eliza's attention.\"\n\n\"I will accept full responsibility,\" Terillia said.\n\n\"Listen, we're not talking about treason,\" laughed Vicky. \"You just broke a . . .\"\n\nSuddenly, there were noises going off and spheres of light appearing in every room of the house. Terillia responded instantly, grabbing her clothes, her sword and her hand-held crossbow and heading for the door. \"Stay here,\" she shouted.\n\nVicky was stunned by it all. The kitten that had been in her bed just turned into a lion. She hurried to get dressed and looked out the window.\n\nOutside in the hall, everyone was pouring out of their rooms in miscellaneous states of dress. Firearms were not allowed on Terra, so they were carrying the most advanced bows, crossbows and shield technology that they possessed. Eliza immediately established a telepathic link with everyone in the house, then cut out the staff after telling them to hide in the cellar.\n\n\"What the hell is this?\" Wyrm shouted.\n\n\"All the alarms tripped at once,\" she said, then heard an explosion rock the outside wall. Knowing her father, there were probably backup defensive spells that couldn't be seen until the first wall of defense had been breached, and probably more defensive magic after that. The explosion she just heard sounded like a fireball connecting with stone. {{ This is a magic assault people. Anyone not used to a magic firefight take cover and attack by ambush. Terillia and Tiny, follow me to the front. Thug, go guard the backdoor. You already know where it is. Ladies and gentlemen, we are most DEFINITELY under attack! }}\n\n------------ -----------------\n\nTo be continued . . ."
    ],
    "authorname": "Evil Alpaca",
    "tags": [
        "lesbian",
        "sci-fi",
        "fantasy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/its-a-dead-mans-world-ch-05"
}