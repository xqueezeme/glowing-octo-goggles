{
    "title": "Huginn's Yule",
    "pages": [
        "<center>Huginn's Yule</center>\n\n<center>or, How the J\u00f3lfa\u00f0r Came Calling on Yuletide Eve</center>\n\n*\n\n\u00a9 2019 Chloe Tzang. All rights reserved. The author asserts her right to be identified as the author of this story. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the author except for the use of brief quotations in a review.\n\nAnd here's that little note from Chloe And before I start, I know, I know, a long intro (again, and it is) but this story really needs some background and a bit of an explanation. Please forgive me... But before I get into that, there's a warning here for those looking for a quick stroke story. This is a \"First-Time\" story, and there is indeed one long \"loss of virginity\" sex scene, but it's a long way into the story, and it's the only sex scene in the story, and the story's about 18 Literotica pages (63k words). Honestly, it is more story than sex, it's not a short stroke story, but I really do hope you enjoy it all the same. Okay, and now, that said...the real intro.\n\nFirst up, this little tale is dedicated to the author of \"The Longships\", Frans G. Bengtsson, who I hope is sitting in Valhalla at the right hand of Odin, sword or battleaxe at his side, drinking ale from his horn and laughing as he reads my little homage.\n\nAnd, well, why? It's the 2019 Winter Holidays competition on Literotica, and what were the Winter Holidays before they were renamed due to political correctness? That's right! Christmas. And what was Christmas (at least in northern Europe) before Christianity hijacked the winter solstice festival? Yule. And what was Yule? It's a mid-winter (winter solstice) festival historically observed by the Germanic peoples, with probable far earlier origins, which was later Christianized. Many present-day Christmas customs and traditions such as the Yule log, Yule goat, Yule boar, Yule singing, and others all stem from those old pre-Christian traditions. The word is attested in an explicitly pre-Christian context primarily in Old Norse. Words with an etymological equivalent to Yule are still used in the Nordic countries and in Estonia to describe Christmas, and Yule's roots lie deep in the past, possibly far back into the Stone Age, but have survived into the present.\n\nSo for this year's Christmas, oops, sorry, Yule, oops, sorry, Winter Holidays, competition, I thought I'd write a little stand-alone story set in the middle of the Dark Ages, circa 540-580AD, when Yule was that explicitly pre-Christian festival of the Germanic peoples of Northern Europe. The Dark Ages are a period not too many people know much about, apart from some vague ideas gained from popular culture and movies, so I'm going to give you a little historical background here, both on China and on Northern Europe at the time this story is set in (and there's a much longer note on this at the end), just to give you some context to the story. And okay, I'm no expert at all, and this is so high level that it's the view from outer space, but it's a period I love reading about.\n\nMany people romanticize the Dark Ages, thinking of King Arthur and the Knights of the Round Table, the Song of Roland, and Charlemagne (altho Charlemagne was more at the tail end of the Dark Ages, as the lights of civilization began once more to shine), the Welsh stories of the Mabinogion, the Irish myths and legends such as those of the great Cuchulain and the Ulster Cycle of Irish mythology, or the Fianna, or the Volsungasaga, whose core is a story from the Rhineland. Forget it. Although the blood and guts may well be real, the romanticism is a real stretch. The early decades of the 6th Century (501-600 AD), the time in which this story is set, were during the Volkerwanderung period, when the Western Roman Empire had fallen, and the tribes of the Eurasian steppe, and the Germanic tribes of northern Europe, were on the move, a wild a time as the world has ever seen.\n\nThere's a revisionist view that the Dark Ages weren't actually so bad. Well, love to see those revisionists go back in time. They would, to be blunt, be totally fucked. Let me quote here, from Poul Anderson, who was somewhat of an expert on this era and a couple of whose novelized versions of the sagas I've used as source material (I used some of the actual sagas as well, I have a few of them -- there's a brief list of my source material at the end): This was \"...the midnight of the Dark Ages. Slaughter, slavery, robbery, rape, torture, heathen rites bloody or obscene, were parts of daily life... Love, loyalty, honesty beyond the most niggling technicalities, were only for one's kindred, chieftain, and closest friends. The rest of mankind were foemen or prey. And often anger or treachery broke what bonds there had been...\n\nYep, well, that was western Europe circa 500-600 AD, and it seems accurate enough to me to describe a period when a man could only go to the outhouse with four friends to guard him while he was doing his business, lest someone take him out with a spear through the back. Makes concerns about running out of toilet paper seem a little trivial doesn't it.\n\nMoving now to China in approximately 500AD, there were then two large states, Northern Wei, and Southern Qi (in the south), with smaller states around the periphery. To the north of Wei, stretching across the steppe, was the Khanate of Rouran (possibly the Avars, who would be part of that great westwards migration from the steppe into Europe, which would include the Avars, the Magyars, the Bulgars, and a host of other tribes, including of course the Huns, known to the Chinese as the Xiongnu, although that's not conclusive, and nothing about this period is). Northern Wei ruled northern China outright from 386 to 534 AD, and also saw the establishment of Buddhism in China.\n\nFounded by nomadic tribesmen, the Xianbei (who became Sinicized over time), from the northern steppes, the empire of Northern Wei was carved out as the Jin Dynasty collapsed in the \"War of the Eight Princes\", followed by the \"Uprising of the Five Barbarians.\" The Xianbei held together their empire through the strength of the sword and bow, as did the Mongols and other nomadic invaders before and after. War with the southern dynasty was endemic through this period, and towards the end of the dynasty that ruled Northern Wei, there was significant internal dissension resulting in a split into Eastern Wei and Western Wei. Neither Eastern Wei nor Western Wei was long lived, with successor states Northern Qi established in 550, and Northern Zhou established in 557, replacing both Eastern and Western Wei.\n\nIncidentally, the Legend of Mulan originated from the Northern Wei era, in which Mulan, disguised as a man, takes her aged father's place in the Wei army to defend China from Rouran invaders. Also as a footnote, the original Shaolin Temple was built by the Northern Wei Emperor, Xiaowen, in 477 AD. This then is the milieu from which the heroine of my story emerges.\n\nNow, returning to Northern Europe, one of the things I've always enjoyed about the Norse sagas (and I've read a few) is their dark, stoic and sometimes perverse wit. No matter how ghastly the circumstances, those old Vikings always manage the dry understatement. Although this story is set three hundred years earlier, at approximately the time of Hrolf Kraki's Saga and of Hadding's Saga, and a bit before Beowulf, I've also used a few lines from the more recent sagas here and there in my story, ripped straight from the sagas themselves, and they're so good, how could I not reuse them. Here's a good example, and one of the ones that just stuck in my memory, and that I reused a couple of times within this story in different versions. Hope you like my versions.\n\nTwo foes clash and when they draw apart one finds that his upper lip has been cut away.\n\nTo his foe, he says, \"I was never beautiful, but you have made no improvement.\"\n\nI mean, honest to god, how can you not admire an attitude like that? That's my kind of guy! Actually, I guess it is, coz my husband has that kind of humor. Fortunately, he also has his upper lip. LOL. Altho he does have a few scars, but hey, I love 'em. They add character, that's what I say!\n\nNow, one last little (okay, not so little) aside. The title of this story. \"Huginn's Yule.\" It's a kenning, and a kenning is a compound expression in Old English and Old Norse poetry with a metaphorical meaning, e.g. oar-steed = ship, the whales-way = the sea. Other well-known kennings include \"battle sweat\" for blood; \"raven harvest\" for corpse; and \"sleep of the sword\" for death.\n\nThose of you who are not aficionados of the Vikings and the Anglo Saxons and the old Norse gods may not know of Huginn. The head of the Norse pantheon was Odin, and I'm sure you've heard of him. Now Odin was known in Old English as W\u014dden, in Old Saxon as W\u014ddan, and in Old High German as Wuotan, and, well, Wednesday. W\u014dden's day. (Tuesday is \"Tiw's day\" from the Old English Tiw (Norse T\u00fdr), Thursday is Thor's Day, and Friday is the day of the Anglo-Saxon goddess Fr\u00edge. The other weekday names we use have Latin origins). Anyhow, just an aside, but whether one realizes it or not, there's a lot of old history embedded in our language, and don't get me started on Chinese influences on English.\n\nNow, returning to \"Huginn's Yule\"; in Old Norse texts, Odin is depicted as one-eyed and long-bearded, frequently wielding a spear named Gungnir, and wearing a cloak and a broad hat. He's often accompanied by his animal companions, the wolves Geri and Freki and the ravens Huginn and Muninn, as well as the flying, eight-legged horse named Sleipnir.\n\nSwitching to Yule, in Old Norse poetry, the word \"Yule\" is often employed as a synonym for 'feast', such as in the kenning huginns j\u00f3l (Old Norse \"Huginn's Yule\" - \"a raven's feast\"). Odin is often called the \"raven-god\" (Hrafnagu\u00f0 or Hrafn\u00e1ss), the \"raven-tempter\" (Hrafnfreistu\u00f0r), or \"the priest of the raven sacrifice\" (Hrafnbl\u00f3ts Go\u00f0i; a poetic way of describing fallen warriors as \"sacrifices\" to the ravens and other carrion birds, with Odin as a decider of who lives and who dies in battle). Sometimes kennings use \"Huginn\" as a substitute for \"raven.\"\n\nBlood is often referred to as \"Huginn's sea\" (Huginn's v\u00f6r) or \"Huginn's drink\" (Huginn's drekka). The warrior in battle is \"the reddener of Huginn's claws\" (fetrj\u00f3\u00f0r Huginn's) or \"the reddener of Huginn's bill\" (munnrj\u00f3\u00f0r Huginn's). Countless kennings express this concept: to cite two more, the warrior is the \"feeder of the raven\" (hrafngrennir) and the \"fattener of the battle-starling\" (folkstara feitir). But the gift of a dead man also went to Odin, due to his role as the ruler of the dead in Valhalla and the common practice of symbolically sacrificing an enemy host to Odin before a battle.\n\nThus, the association between the raven and Odin was only natural for the Norse, and a battle was \"Huginn's feast\" (Huginn's j\u00f3l), for there, the dead warriors lie, food for the ravens. Thus, also, the name of this story, \"Huginn's Yule,\" and that's the context within which it's used. So now you know what to expect. LOL. Keep in the mind the era, also. So yeah, blood, guts and violence, as well as sex.\n\nAnyhow, as I always do with every story I write, I loved writing this, and writing a Chinese princess and swordswoman into a Northern European semi-Viking/Saxon setting is just an ongoing little fantasy of mine (\"Blood Sacrifice\" in \"Sex and Sorcery 4\", available on Amazon, was my first attempt at something like this, but with a Danish warrior and his retinue rescuing a Chinese heroine in north-western China, on the western frontier where the Tocharians then lived). Anyhow, shameless plug, but if you enjoy this and \"One Night in Xanadu,\" you'll definitely enjoy \"Blood Sacrifice.\" Alas, \"Blood Sacrifice\" is only available as a Kindle e-book on Amazon as part of the \"Sex and Sorcery 4\" anthology, but well worth that couple of bucks. Even more shameless plug.\n\nNow, all of that said, and seeing as you've made it this far, I REALLY do hope you enjoy, and \"HAPPY CHRISTMAS\" - or maybe it should be \"Happy Yule,\" because there's nothing Christmasy about THIS story... oh no there isn't, and you have been warned. Don't say I didn't tell you LOL... Chloe\n\n<center>* * * Huginn's Yule * * *</center>\n\n<center>The sun is sleeping quietly\n\nOnce upon a century\n\nWistful oceans calm and red\n\nArdent caresses laid to rest\n\nFor my dreams I hold my life\n\nFor wishes I behold my night\n\nThe truth at the end of time\n\nLosing faith makes a crime\n\nI wish for this night-time\n\nTo last for a lifetime\n\nThe darkness around me\n\nShores of a solar sea\n\nOh how I wish to go down with the sun\n\nSleeping\n\nWeeping\n\nWith you</center>\n\n\"Sleeping Sun\", Nightwish\n\n<center> * * * </center>\n\nProfessor Poul Anderson, Director of Archeology, University of Cambridge, shook his salt-and-peppered head as he looked at the pitted sword, protected in the clear glass container sitting in the center of the table in the portacabin, and he hadn't even taken his coat off. He'd come straight to the dig from the train station, driven a rental car from Norwich, and okay, his specialization was Scandinavia and Anglo-Saxon England, although he was more than familiar with the Celtic and Romano-Celtic period, as well as the early Middle Ages, but this curved blade from the dig didn't ring any bells. None at all, although the curve seemed familiar, but no, he couldn't place it.\n\n\"I'm sorry,\" he said, \"I still can't place this. Run this by me again. Where the hell did this come from, exactly?\"\n\n\"Down in the number four traverse trench,\" Dr. Greta Kett said. \"At the stern of the ship, laid out on a woman right beside the King, and we think the guy must be Thorstein himself. Thorstein's Mound, well, the old tales are right now and then I guess, and we're deciphering the runes on some stones now, but one of them was above his head, and it definitely says \"Thorstein King, the Young Wolf.\" He was laid out, armor, helm, sword, shield, gold and silver, jewelry, weapons, human and horse and cattle sacrifices, grave goods, all the usual stuff.\n\nThis is bigger and better than Sutton Hoo, you know that, but I think we all knew that when we found the ship intact, but it's a little earlier, late-5th century from all the preliminary dates, tail end of the Saxon conquest. Way better than Sutton Hoo, better than any other Saxon or Viking ship burial we know of. The peat preserved the wood, and the ship's almost intact, everything's intact, including the bodies, the clothes, everything. Just, everything. It's just amazing.\"\n\nShe was almost jumping up and down now, bouncing on her toes. \"This sword, it was in a woman's hands, she was in armor, chain mail, shield, helm, bow and arrows, lying beside the King, except we're absolutely sure she was buried a couple of decades before him. He was added later, she was lying there with this in her hands, laid out, and we've just got the test results back from the lab, you're going to love this.\"\n\n\"Tell me, for chrissakes, Greta. Doesn't look like any Saxon or Germanic or Romano-British sword I've ever seen, not even Celtic.\"\n\n\"It's not. It's a Japanese sword from the Kofun period, Yamoto made, we've done a metallurgical analysis, run every test we can come up with, and that's absolutely one hundred percent. It's from Yamoto, no uncertainty at all about that, and it's an early curved blade, cutting style. We think it's the earliest kot\u014d period katana ever found, early 5th century. We've asked the Japanese to send someone who's an expert in them to help.\"\n\n\"Holy Jesus, you're not joking, are you, Greta? A Japanese katana dated to the period, in a late 6th Century ship-burial mound? In Norfolk?\"\n\n\"It gets better, Poul.\" Greta was just about beside herself, and Poul had never seen her like this.\n\n\"How does it get better than this. This is already the biggest archeological find in England, since, well, Sutton Hoo. And throw a Japanese sword into the mix, and Jesus...\"\n\n\"Add in a Eurasian steppe nomad composite bow, we think Xianbei from the initial analysis, and some Chinese-style armor, light cavalry chain mail. Bright brilliant armor, it's called, and I know that doesn't mean anything to you, but it was the best armor made in Northern Wei, which was the Empire that ruled Northern China in the 4th, 5th and early 6th Centuries. We've run samples through multiple lab tests as well, this isn't something I want to be wrong on, and its Chinese origin, same period, definitely made in Northern Wei, and this set is just about the best quality of its type ever found, and it was made specifically for a woman, the woman that was wearing it, and the woman...\" Greta smiled.\n\n\"The woman...\"\n\n\"For Christ's sake, just tell me, Greta.\"\n\n\"She's Chinese. She looks Chinese, and yes, she's that well preserved by the peat. We've run a dozen test series through six different labs. She was born around 520, northern China, and we've done some searches against DNA samples taken from burials in Northern Wei from the period. She's closely related to some of the samples the Chinese have on record.\"\n\n\"Spell out closely related, Greta.\"\n\n\"Royal Family of Northern Wei. The Chinese have excavated quite a number of Northern Wei royal burials. She's related to the royal family of Northern Wei for sure, Tuoba Clan, we need to do some more tests to pinpoint more closely, but you don't get much closer, we think she's as close as a cousin to the ruling line, so she must have been someone important. She died approximately 590, which is when we've dated the ship and the mound to, plus or minus a couple of years, and we're going to narrow that down, we've got a lot to work with. The King, he died thirty years later, and all the evidence says they buried her first, in the ship, built the barrow for her, and added him in after, and you know what's even more interesting?\"\n\n\"Jesus Christ, Greta. Just bloody well tell me.\"\n\n\"He's her son. DNA analysis says he's half-chinese, half-Dane from southern Sweden.\"\n\n\"Any more surprises?\"\n\n\"Yes.\" Greta stood there, smiling.\n\n\"Good God, woman. Just tell me!\"\n\n\"We've found something written, a chest of bones, sheep and cow scapulas, and there's writing carved on them, and each bone is numbered, sequentially. It's all written in Chinese characters. The bones have been dated to 580 through 590, and they're associated with the site. There's no doubt about that. We've run every test we can think of to confirm these aren't fakes, and they're not. This is the genuine thing, Poul, and this is huge. We're going to be studying this site for the rest of our lives, it's that big.\n\nWe've contacted the Chinese Embassy, asked for assistance in translating, they arranged for a team from Beijing, they took one look at the images and analysis we sent and they dropped everything. Their A-team, their best people, they're flying here now. It's an old script, but the guy we brought in two days ago to take a first look, he says it's definitely from the period. He won't leave, he hasn't slept since he arrived. He's sitting there with them now, says it's some kind of autobiography of a Chinese princess as far as he can tell, and he's half out of his mind... we think it was written by the woman in the barrow.\"\n\n\"Holy fuck!\"\n\n\"Yeah, you got that right.\"\n\n<center> * * * </center>\n\n\"Vesheill!\" The great cry rang out from thrice two hundred house-carls, the great wooden cups and the horns filled with the foaming Yuletide Ale raised high, then drained to the dregs in a roaring wave of voices and laughter, and I, I sat to the side and a little behind my son, Thorstein, the King, at the High Table, and his chief men and such of his younger brothers as were men, they too sat at the High Table. The servant girls moved with alacrity with their jugs, from which the cups and horns were refilled, and busy indeed was the refilling, for the ale was good indeed, so all said, and all called for more, so that the servant girls were kept running.",
        "My eyes looked out over the Great Hall. Over a sight familiar from two score years of marriage to Thorstein's father, the old King. King Harald Wolfs-Fang, the Old Wolf, the Wolf of the North. My husband, now dead and buried with his dragon-ship within the great barrow freshly built on the headland, and he had been my husband these many years.\n\nTwo score years and a little more now, since that day he had rescued me from the followers of Horsa, father of Hengist, after I had killed Horsa and sliced his parts from him, long before he drew his last breath, feeding them to the dogs as he screamed through those last long minutes of his life. King Harald Wolfs-Fang had watched, laughing, before he took me as his wife, where an hour before, I had known I was dead, and I had been praying that death would come quickly, for I was the last, and I had seen and heard what had happened to those who were before me, and one of those had been my maid, the last survivor of my escort, and I had wept with terror and fear and anger as she died, and I had been dreading my end, but Horsa had died, and I had lived.\n\nNow, on this Yuletide Eve, Horsa's son, Hengist sat in this hall with a hundred of his men, guests of my son, protected by the Yuletide Peace, and this Hengist I watched, for there was no trusting him, who wished my death, and my son's death, and the death of all my children, for I had slain his father, and this Hengist had sworn the blood-feud on me, and he had waited all these years, until King Harald Wolfs-Fang was dead, to seek his revenge, for if this Hengist, Horsa's-son had arrived while my husband, Harald Wolfs-Fang, was alive, Harald would have done as I wished to do, with no prompting from me.\n\nHengist had been admitted as a Yuletide guest, for this was now my son's Great Hall, and I, I was no longer the King's first wife, for my oldest son, Thorstein, he was now the King and married, and his wife, Yrsa, she was now Queen, and my son knew not Hengist as I knew him by repute and tales passed on, and so had bid him welcome, where I wouldst have turned him from the doors, or better yet, ordered him slain out of hand, disregarding that it was the Yuletide Eve.\n\nSlay him, turn him away, that I could not order. For I was but the King's mother now, honored, but I knew my place, and the house-carls were no longer at my command, and so I sat quietly in the background, watching, as I had watched these savage people for so many years. So many years since I had left Northern Wei, a gift of a Wei bride to a Khan of the Western Rouran, those who were known in this land by rumor as the Avars, a gift from Wei to the Rouran to seal their neutrality for a time, but alas, their neutrality had made no difference, and my fate had been strange indeed to have led me here to this cold and desolate northern land so far from my home, here to see out my days.\n\nOf this fate I did not complain, for Northern Wei had fallen in dissension and defeat long ago, and there, I would likely have been dead these many years. Here, I had been a King's wife, and now I was a King's mother, but it was at times like this I missed my homeland. This Great Hall in which I now sat, made of huge logs hewn from the primeval forest, it's great rafters blackened by the wood-smoke that clouded the thatched roof, lit and warmed against the winter cold by great roaring fires laid in a trench down the center, this Hall was a far cry from the marbled and tiled palace lit by lanterns and warmed by silent ducts of smokeless air from the furnaces below, in which I had grown up.\n\nThese huge and savage warriors, men with great golden beard's, long flowing hair the color of gold or of the winter wheat, or indeed of ice, men with savage eyes of pale winter blue, iron-thewed, fierce of visage, loud and uncouth, they too were a far cry from the black-haired, almond-eyed people of Northern Wei, my homeland so far away now in both distance and in time, for Northern Wei had fallen these many years gone, and my father and my brothers had fallen at the Emperor's side in those last days of war.\n\nThis I had known even before my fate had led me to become the wife of Harald Wolfs-Fang, for news travelled as fast as a galloping horse on the steppe, and of the Fall of Northern Wei and the death of my Father and my Brothers I had heard, even before I had been captured by the Xiongnu, and then from the Xiongnu by a Magyar raiding party, and from the Magyars by Rus.\n\nThese savage warriors whose King was now my oldest son, they sat on wooden benches, they sprawled full length on the packed clay floor, they rutted with the servant girls at the back of the Hall, or they strode about to seek their comrades. They drank mightily from foaming ox horns or great wooden cups, they gorged themselves on great hunks of rye bread torn from the loaves, they ate chunks of meat cut from the whole oxen roasting on spits, their teeth tore the meat from racks of pork ribs or from great coils of sausage dripping fat, carried through the hall on wooden shields held by the house-thralls.\n\nThe walls of this Hall, they were hung with shields and with strange weapons and standards while chests of gold and silver were stacked in the King's chamber, for King Harald Wolfs-Fang's dragon-ships had ranged far, bringing back to his Great Hall the spoils of war, of which I had been his most precious, but I, I had come willingly, for my choices at that time were limited, and to be the wife of Harald Wolfs-Fang had not seemed so ill a fate when compared to the alternatives at that time and place, and I had been happy with my choice.\n\nThese men, they were wolves, and all the world was their prey. They exuded arrogance and pride from their savage and forbidding eyes, as my husband Harald's eyes had been savage and forbidding, but on me they had gazed first with desire, and then with love, and perhaps even a little of admiration, for I had been no swooning maiden, but neither had I been a blonde-haired Valkyrie.\n\nNo, I had been a black-haired, almond eyed girl from a far foreign land, a sword-maiden who had killed his sworn enemy, and killed him slowly, and his amusement and pleasure had been great indeed on that day of our meeting so many years in the past, and none were alive from that day now but I, and only I remembered all that had taken place.\n\nOnly I.\n\nThose heads that filled the Great Hall, they were a sea of gold, and that white-blonde, all but for my children and a few Finnish thralls. My sons and my daughters, they all had the hair of my people, a fine silky black, and all had lived. All had been seated on their father's knee, and accepted before the folk, and in this, good luck had been with me, for most mothers were not so fortunate, and many were the babies and children who died before their fifth year. Two score and more years I had been married, seven sons and five daughters had I, all with their mother's hair, and my oldest son, Thorstein the King, he was no exception.\n\nMy oldest son's hair was mine own black, not the spun gold of his father. My oldest son's eyes, they were in part my almond-eyes, but they had also that savage and wolfish look of his father's people, for my son, Thorstein, the King, he was the Young Wolf, as savage and feared in battle as his father before him, and the Old Wolf had gifted him his arm-rings, his byrnie of chain mail, his sword and his shield, given to him from the Old Wolf's hands before the folk as he lay on his death-bed, and the folk had acclaimed Thorstein as King on the Old Wolf's death, and all had been at that gathering.\n\n\"A song, a song in memory of the Old Wolf,\" a man cried from the Hall, and all took up the cry, and at the great doors, more men filtered in from the snow and cold outside, and amongst them was one I did not remember, but he seemed in some way familiar, so I must have seen him before.\n\nAn old man, leaning on a staff, his beard long and white, and he had but one eye, and that eye caught mine and he smiled as he took a bench seat at the rear of the Hall, and I, I returned his smile, as was polite, bowing my head a little out of respect for his age, for three score years as I was, he was yet older than I, and I struggled to remember who he was amongst the folk, but now the call for a song drew my attention, and I forgot the old man.\n\n\"A song, a song for the Old Wolf and the Young Wolf,\" and Hengist did not look pleased at the acclaim for my husband and my son, and at this and the chagrinned look on his face, I smiled, and he saw that smile, and I knew he had not put aside that blood feud.\n\nThorstein gestured, and the skall stepped forward, and his song was such as these people sang, and it was a song of the North Folk, not a song such as my people would have sung, but there were none but I to sing the songs of my own people. None but I to understand the musical beauty of my own language. None but I, and so I listened to the song of this skall.\n\n<center>On the headland,\n\nWithin the barrow,\n\nStands a hero's ship.\n\nThere we placed the Old Wolf's body,\n\nAnd with golden tribute\n\nMade his shroud.\n\nThere never was\n\nA vessel so well equipped:\n\nBright steel,\n\nswords and mail,\n\nhelms of iron,\n\nBroad-gold and rings,\n\nAnd glorious gifts,\n\nThralls to serve him,\n\nMaidens to please him,\n\nLay around that mast.\n\nPlaced in the barrow,\n\nThat precious booty,\n\nAnd all of this,\n\nWas as his own people\n\nProvided for him:\n\nHonored he was,\n\nThe Old-Wolf at his funeral.\n\nAbove the barrow,\n\nHis final home,\n\nWe set the horse-head standard,\n\nThe sacrifices to W\u014ddan,\n\nFor the Old Wolf was ever,\n\nThe raven-feeder,\n\nThen giving him honor,\n\nPraising his prowess,\n\nMourning his passing,\n\nWe gave him to that barrow.\n\nAnd the truth of that last voyage,\n\nNo wiseman, nor hero under heaven,\n\nCan say who will gain that cargo,\n\nBut now the Young Wolf,\n\nThe ring-giver, the raven-feeder\n\nLeads us to victory\n\nFar to the Southland he will lead us\n\nHis warriors he will take into battle\n\nRiches and fame\n\nWomen and ale\n\nAgain lie before us,\n\nA kingdom we will carve\n\nIn the South Land\n\nDrink now we will,\n\nTo victory in battle\n\nTo a new land to take\n\nTo the Young Wolf who leads us\n\nTo the Old and the New...</center>\n\nA storm of cheers arose from the gathered throng. My son smiled and tossed the skall a coin of gold from his pouch, for all knew the ambition of Thorstein. To lead his folk in our dragon-ships to the rich lands of the south, to the lands from which the Rome-folk had fled or been driven from. To carve out a kingdom as the kings and war-leaders of the Franks, the Visigoths, the Ostrogoths, the Lombards, the Burgundians, the Vandals, the Bavarians, the Sarmatians, the Bulgars, the Angles, the Saxons, the Jutes, all were doing, and rich was the land to be won by heroes, held by sword and spear, and in this I would not attempt to gainsay my son, the King.\n\nWas I myself not from such a people. Had not my own homeland of Northern Wei been carved out from the old empire of the Han, and held by the swords and bows of my ancestors, the Xianbei, warriors from the northern steppe? Had not my father and my brothers led the armies of Northern Wei? Was I not from a family of warriors, servants of the Emperor himself to the bitter end? Longed I at times for the comforts of my homeland, the great palaces, the gardens, the cities that stretched mile upon mile, thronging with people, but at heart, I was a woman of my people, and my people were warriors.\n\nWere not the Rome-folk such as my own people? Perhaps, I was not certain, but that they had been soldiers and conquerors, I knew. But as Northern Wei had, as the Jin Dynasty of the Han had in centuries past, the Rome-folk had fallen in defeat. Only tales and rumor of tales reached my ears, but it seemed so, and I remembered Miklagard as the dragon-ships rowed by, and that was a fortress that Harald Wolfs-Fang had not attacked, for feared were the soldiers of that city, and only half a dozen long-ships had we been at that time, although there had been more with us when we returned to the Dane-mark, where Harald had carved out his kingdom in the lawless lands between the Danes and the Swedes, and all had welcomed him, for he bought peace to the land with his sword and his justice.\n\nThe Rome-folk, they had been rulers of a vast empire, an empire as fast and powerful as the Han empires before Northern Wei, and the empire of the Rome-folk was one within which the petty kingdoms of these north-folk were but drops in the ocean, and indeed, this kingdom that was now my son's was lesser in size and in men than the personal estates of my father had been in Northern Wei, less by far. But here, the Rome-folk remained only in the east, in far of Miklagard, and few were the folk who had travelled to that fabled city. Here in the west, far to our south, the Rome-folk had fallen in defeat, the western half of their empire but a memory, just as the Han had fallen to my own people long in the past, and many were the tales of that fall that had made it to my son's Great Hall here in the north land,\n\nNow, now was the time of men like my son, Thorstein. Now was the time to seize a new land, now was the time to rule the vanquished as my own people had ruled the Han, with sword and spear and bow, and held I out the hope that my son would be such a man as the Emperor Daowu, my ancestor, he who had defeated the Yan and founded Northern Wei, and Northern Wei had stood strong and undefeated for five hundred years.\n\nDid not the blood of the great Emperor Daowu himself flow in my veins? Was not my father, now long dead, the chief General of Northern Wei to the end, feared by his enemies unto death? Had not my dead husband, King Harald Wolfs-Fang, been one of the most feared and worthy Kings of these north-folk, respected by all for his prowess in battle, his wisdom and his ring-gifting? Was not Thorstein proven in battle, acclaimed by the folk as King without dispute, for all recognized him as a worthy successor to his father, a leader of warriors, a raven-feeder, a ring-giver, and all were gladdened that the Old Wolf was succeeded by the Young Wolf.\n\nAll but Hengist, that grizzled warrior of two score and ten years, who had been ten summers of age when I had slain his father, and fed his parts to the dogs, and his yet breathing body to the wolves, and all knew that story, and all had laughed, for while there were none here now but me who remembered that encounter, Horsa had not been a man well-liked, and few had mourned his passing, and many there when I had killed him had watched and laughed as he died.\n\nThose who had not laughed that day, they had been Horsa's men, and they too I had slain on that night, one by one, as Harald and his men drank the Yuletide ale and laughed.\n\nHengist the boy had not laughed at his father's death.\n\nHengist the boy had sworn blood-feud on the killer of his father those two score years passed, and he had not forgotten that oath, for here now he was, in Thorstein's Great Hall, and here now I was, the women he had sworn to kill as his father had not, and all my children were gathered here too.\n\nHengist rose from his bench and strode to the dais on which the High Table sat, and my hand slipped to the hilt of my sword, for Hengist had been guested, but not with honor, and his guesting had been unbidden, his arrival unwelcome, for he was a quarrelsome a man as his father had been before him. His father, Horsa, who had died by my hand on the steppe far to the east where I had been captured from the Magyars so long ago. The Magyars, who had captured me from the Xiongnu, the Huns, who had in turn attacked and killed my escort as I rode to the Khan of the Western Rouran, the Avars, as his intended bride.\n\nSuch had been my fate, who had been sent as a bride to the Khan of the Western Rouran.\n\nSuch had been Horsa's fate, for he had attempted to take me by force, and sacrifice me on the funeral pyre of his shield-brother, Erik Bloodaxe, and seeing Hengist, Horsa's son, stride towards the dais, I smiled, for I was as willing to see the son dead as I had his father, and after these many years as Harald Wolfs-Fang's wife, death was a thing I was not unaccustomed to.\n\n\"Young Thorstein,\" Hengist said, and he had no words of praise and thanks to my son, arriving as he had, unwelcome, uninvited and unexpected, with a hundred chosen warriors at his back. \"I see no guest gifts yet given to me or my men\", and, looking around at the walls, he sang: --\n\n<center>\"The young wolf's jaws with fear are shaking;\n\nStanding before him, I see him quaking,\n\nWhile my men drink in this hall\n\nBrave spoil they see decked on the wall --\n\nShield, helms, and armor, all in row,\n\nStripped in the field from lifeless foe.\n\nIn truth no royal mail comes near\n\nThy splendid hall, this precious gear.\n\nGifts my men are eagerly waiting,\n\nBest the boy-King be not bating.\"</center>\n\nThorstein laughed, and his voice rose in song next, and all listened, for a song-duel was not such an event as happened often, and even less often between such Lords of men, for Thorstein was a King, and Hengist was a grey and grizzled Jarl, a leader of warriors with his own war-hird, and not many warriors were as quick with words as were these two, and such a song-duel rarely ended without the ravens having been fed, and in my own mind I had no doubt on whom the ravens would feast should Hengist push his luck, and he had already pushed his luck far, and I listened to Thorstein's words, glancing around the Hall, and the one-eyed old man at the rear, his single eye caught mine, and he smiled as my son's words filled the Hall, for my son had the voice of a King, and all heard him clearly.\n\n<center>\"Foolish are you, or so I was told\n\nTo arrive uninvited, an action bold;\n\nYou come with armed men, to my land\n\nSaying you seek, a sister's hand.\n\nAnd so I bid you in to come\n\nTo cherish this Hall, as thy home;\n\nAnd thou who comes, from the east\n\nIn Thorstein's hall, shall find a feast --\n\nIn Thorstein's house shall find a home --\n\nAt Thorstein's court I bid you welcome.\n\nBut now you demand from me a gift,\n\nKnow you that such, receives short shrift.\n\nSuch a demand, I refuse to meet,\n\nYour guesting here is indeed deceit.\n\nLet me explain how it lies here,\n\nKing am I, and that is clear\n\nA guest as you keeps strictest peace,\n\nAll threats of force this moment cease.\n\nAs King I entreat thee not to break\n\nThe Yuletide peace for vengeance's sake!\"</center>\n\n\"A true King does not entreat.\" Hengist spat on the floor, all pretense now cast aside, his hand on the hilt of his sword, and his intent was open now, and clear to all. \"A true King commands, and all obey, and poor was the luck of your folk if you are indeed King.\"\n\n\"Come, Hengist, wouldst challenge me now, on Yuletide Eve?\" My oldest son smiled, his voice gentle, and I had heard Harald speak thus, and I knew that such was my son's wish, and assuredly in him, both his father's and his mother's blood ran true.\n\nI shuddered, for that smile was his father's, but that look in his eyes, that was mine own father's, and all who had once known his father knew that smile for what it was. The smile of the wolf who led the pack, about to rip the throat from his rival. That look in his eyes, that was the cold calculation I had oft seen in the eyes of my father, the Prince Yuan Cheng's eyes, and my father had loved me, but he had ever been such, and if my oldest son did as his smile indicated that he wouldst, first drawing his sword, he would break the Yuletide Peace and forfeit the loyalty of his folk, for he would be foresworn before all, but his eyes said otherwise, and I could not read his intent.\n\nThat breaking of the Peace, that, I had no doubt, was Hengist's objective, to cause my son to lose his temper and draw his sword first, although also, I had no doubt that Thorstein would indeed kill Hengist. Had I not trained Thorstein myself in the art of battle, and was I not Shaolin trained? Had I not fed the ravens often myself, and I but a woman. A woman who could slay any warrior in this Hall one-on-one, should I choose, and that had included my beloved husband, Harald Wolfs-Fang, and Harald had known that too, and he had treasured me the more for my sword-skill.",
        "My son's eyes contradicted his smile, and that cold calculation puzzled me a little, for Thorstein was a man who did not convey the image of a cold and calculating ruler to his men, but Hengist obviously thought he could provoke him into drawing, and his mocking smile said as much.\n\n\"Challenge you, puppy?\" Hengist spat on the floor of packed clay, his face working, and his hand was on the hilt of his sword. \"What need have I to challenge you, for all here know me as a seasoned warrior and a leader of warriors, a Jarl, one who has raided the Wends across the sea, the Franks and the Saxons, and even the Rome-folk far to the south, and the Old Wolf was my great-uncle through my mother's lineage, and I am a Jarl and as entitled to the throne as you, so step you down and leave with your life, slink from here as the black-haired mongrel cur you are, together with her who stands behind you, the Old Wolf's bitch, black-haired as a Finn witch, her and her other whelps, before I hew your head from your shoulders and cast your corpse into the midden.\"\n\nBehind him, Hengist's house-carls sat, poised and alert, hands ready to axe or sword but not yet drawn, for this was the Yuletide Peace, and he who first drew sword or other weapon was foresworn. Around the Great Hall, Thorstein's housecarls reached for their swords and their axes and their spears, for loyal to Thorstein they were, having followed him into battle, having fought at his side, and no few of them owed their lives to his battle-skill, and at the Thingmoot, they had acclaimed him as King on the death of his father, my husband and my true love, King Harald Wolfs-Fang, the Old Wolf, only weeks ago, and Harald's barrow lay fresh and brown on the headland, with the horse head standards and the sacrifices to W\u014ddan still there, hanging from the great poles, a ghastly sight, starkly shrouded in the winter snow.\n\n\"Thorstein,\" I said, now standing at my son's back, my hand on my son's shoulder, and I know not what my words would have been, for they were cut off by this would-be usurper. He whose dragon-ship lay safely now in one of our boathouses, having nosed its way in uninvited, making its entrance through the ice this very morning, laden with his warriors, and the dragon's head lay within, not mounted on the bow, and the shields had been stowed, signaling he had come in peace, asking for the hand of my oldest daughter in marriage.\n\nSubterfuge.\n\nI knew that, and I trusted Hengist not, but my son might not break the Yuletide Peace to slay him out of hand, as he otherwise might have done, for he was the King, and in this I must needs gainsay his temper, for he was still young, if not a youth, and he had led our men in battle many times, and was a proven war-leader. I knew the mind of our people well, long having been the confidant of my husband, who had been King for many a year before Thorstein, and my temper was not as Thorstein's, who at times still had the impetuousness of youth, despite he was nine and twenty and in his prime.\n\n\"Yes, Mother?\" my son said, his smile mocking Hengist. \"Give me your words of wisdom before I lay judgement on this fool who stands before me.\"\n\n\"Thorstein King...\" I began, but my words were cut off, as being from one who is of no account.\n\n\"Silence, Witch Woman,\" Hengist roared, making the sign of the hammer, his voice almost shaking the rafters in his anger and his fear and his hate and his desire for vengeance for his father's death, and, no doubt, desire to possess the King's seat. His outburst silenced all conversation in that Hall, and I know not what else I would have said to my son, for my anger boiled up within me at that old slur of my dead husband's enemies, and at the very back of the Hall, the old one-eyed man stood, staff in hand, shrouded in his cloak, and he was smiling.\n\nWitch woman?\n\nThose were words that not a warrior here would have dared utter when my husband had yet lived, for treasured I was by King Harald Wolfs-Fang, ever first among his wives, although he had taken younger women, but those I had never begrudged him. First among his wives I had been, from the day he laid eyes on me, and treasured I had been by him to his last breath, and was I not now Mother of the new King, and mother also of many sons and daughters, and did not some of those younger women, the most pleasing to the eye, the ones who were not of great families or with kinfolk to speak up for them, lie with him now, within the barrow.\n\nNot, I hasten to mention, by any request of mine, but by acclaim of the folk, and they had drunk the funeral mead and gone to their doom in a stupor, and this was the custom of my husband's folk, and naught could I do to prevent this, filled with horror though I was, for it was the will of the folk in honor of the King. Even though I was King Harald's wife, I was not of the folk and I could not gainsay that evil practice, and had I not experienced that horror myself in my youth? Luck had been with me then, as it was not with those women who went to the grave with my husband, there to serve him in the life after death.\n\nMy husband, the Old Wolf, Harald Wolfs-Fang, the King before Thorstein. Thorstein's father.\n\nIt was that Kingship that Hengist had come here to claim, the leadership and rule of the folk, and it was that Kingship he would not have, for that slur had given me all the excuse I needed, in the eyes of our folk at least, and it was they whose eyes counted in this matter, and I? I cared not one whit for their Yuletide Peace, and I had not sworn to keep that peace, for I was a woman and not a warrior such as the folk counted warriors.\n\nI had not sworn, as I had not sworn on the Yuletide eve on which Hengist's father, Horsa, had died, and this insult would be accepted by my son's folk as an excuse for what I would do, for all our people knew me. They knew me as this get of Horsa's did not.\n\n\"Witch Woman?\" I hissed, somersaulting through the air over my Thorstein's head, feet brushing the table as I propelled myself towards this Hengist, and I was as fast as I had been as a girl of fifteen, faster perhaps, for I had trained and practiced all my life, and my life had been a hard school indeed. My sword whispered from its sheath in that blindingly fast draw of the Iaijutso school of Yamoto that my childhood instructor had drilled down to my very bones so long ago, and that I had practiced almost every day of my life since, again and again.\n\nI cut as my kiai shattered the very air of the Great Hall, even before my feet touched the floor. So fast was I that Hengist had barely blinked and begun to draw his sword from its sheath, so that later all would agree that he had indeed been the first warrior to break the Yuletide Peace. All also had later agreed that I had not sworn to the Yuletide Peace, being a woman, and so was not bound by an oath I had not sworn, to refrain from responding to such an insult.\n\nMy own blade sliced through his neck and his spine, cleanly through, from one side to the other, faster than the eye could follow. My treasured blade of Yamoto steel, older than I, far older, an heirloom of my family for two generations, gifted from the hands of the ruler of Yamoto himself to my grandfather, for my grandfather had led an embassy to the Court of the ruler of Yamoto, gifted to me by my father on the morning of the day I departed from Northern Wei forever. My sword, it was sharper than a razor, stronger than an axe, and it was as if I cut through silk, and Hengist's head sat, standing as he stood, unmoving, still on his shoulders, but a thin line welled in a ruby necklace of the bright red ravens-drink. His eyes blinked but the once, slowly, as if it was difficult to move them, and perhaps it was, but only he could tell, and he would not be speaking now.\n\n\"Silence yourself, kin-slayer,\" I said, into that sudden silence, for all knew that Hengist had slain his own brother, my husband's cousin, and that he was such a swordsman as should be feared, for many were the men he had killed in h\u00f3lmganga, and my voice was clear as all watched in sudden silence, and only I and my son, and perhaps Hengist, knew that he was already dead as he stood there, hand on hilt, sword half-drawn, and perhaps his men expected that hand to draw that sword, but I did not.\n\nMy sword, my treasured sword, carried from my far of homeland of Northern Wei so many years before, gifted to me by my father's hand on that morning of my departure, that sword was red with his blood, as it had been red with blood so many times before. The red of ravens-drink, the red of the raven-feeder, the red of the Yuletide flames that flickered down the length of my son's great hall. The bright red of blood, and at the rear of the Hall, the old one-eyed man was standing, watching, his staff in his hand, and the shadows made it look as if a raven sat on his shoulder.\n\n\"I make for you a ravens-sacrifice as your Yuletide Gift from your mother, King Thorstein,\" I said, and my foot lashed out as I spun in the Shaolin style, kicking high in a sudden blur of motion, and Hengist's head flew from his shoulders, the red ravens-drink now released and fountaining high as his head flew through the air, arcing blood in a long trail, and his eyes blinked once more, slowly, before his head disappeared into the flames, and no doubt his last sighting before those flames melted his eyeballs was of my smile.\n\n\"Praise the All-Father, 'tis a fine yuletide gift you have given me, Lady Fan, my mother, and indeed you are a fattener of the battle-starlings, just as my Father, King Harald Wolfs-Fang, oft told me, and as all in this Hall may now see for themselves,\" Thorstein said, his lips quirking in a smile in that long moment of silence that followed, broken by the pop of Hengist's skull bursting open to release the boiling brains from within, and the smell of burning hair and roast pork filled the air, but it was such pork as men would not eat.\n\nHis eyes met mine, he smiled, and in that smile, and in his eyes, I saw that my son had calculated this outcome all along, and mine own returned smile of dawning appreciation met his, and I bowed my head to my son, for his thoughts and plans had been far ahead of mine, and he knew me as I knew myself, and he had used me to meet his ends, as a King uses his warriors, and I smiled, for surely my father's blood ran true.\n\nHis smile grew, for he knew that I knew, and that knowledge passed between us without words, but his next words drew laughter from my lips as Hengist's skull crackled and cracked in the white heat of the blazing flames, and his brains hissed and boiled and charred as they poured out and onto the blazing wood.\n\n\"But, alas, mother. I cannot now make a drinking cup from Hengist's skull, and saddened am I, for Hengist was such a man as whose skull I would treasure for the memory of this gifting with every draught I drew, and with the cup you had made for my father, 'twould have been a matching pair.\"\n\n\"Ah, my son. I have ever been impetuous,\" but I too was smiling, and the memory of that drinking cup made from Horsa's skull warmed my heart, for my son yet held that cup in his hand, a gift also from his father, and perhaps Hengist had known, and that knowledge made his death all the sweeter.\n\n\"Witch-woman!\" A carl of Hengist's burst from his bench, sword in hand, ending that silence and my laughter, and others of his warriors, Hengist's followers, house-carls skilled in war, they rose in uproar at the sudden death of their Lord, for no doubt they knew their Lord's intent, but his end was perhaps not what they had expected, and my own son's warriors boiled up of their benches, the lust for battle as ever in their veins, for my husband's folk were a warlike people, and wouldst my father had been served by warriors such as these, for then Northern Wei would not have fallen.\n\nThat carl flew at me, sword raised, his scream of rage the last sound he made, for a twang from behind me sounded, a battle-adder quivered from his eye, and he fell, and behind me the laughter of my oldest daughter sounded clear, followed by her voice.\n\n\"I make you a Yuletide Gift in turn, Mother,\" Wealhtheow called, and another twang and another followed, for every one of my daughters was skilled with the bow, for I had taught them myself, as I had taught them to make the bows of my people, and I smiled as my sword cut down the next of Hengist's house-carls, for they had not been Shaolin-trained, as had I, and I had not their massive strength, but fast I was, and dexterous, and still I practiced every day, as I had as a novice at the Shaolin Temple in my youth, and under Sergeant Wen during those long years of riding across the steppe, and my sword was of the steel of Yamoto, sharp beyond belief, and that carl died in a sudden welling flood of the ravens-drink.\n\n\"Stand you back, Lady Fan,\" a carl of my son's called, moving to stand before me.\n\nHim I would afterwards remember and praise before all, gifting him with an arm-ring of my own, for such loyalty should always be praised and rewarded, as is fitting, and his shield was meeting the axe that swung down, and his blade stabbed, a groan rewarding his blow, and my son Thorstein was there in the forefront of battle, his battle-cry bellowed out, \"W\u014ddan owns you all!\" and his carls took up his cry as they fought, and my son, he was leading his warriors as a young King of these north-folk must, even when his reputation is on a sound footing, for a King of these people must lead from the front ranks.\n\nHis younger brothers and his guards were beside him, axes swinging, bright swords clashing, battle cries filling the Great Hall as more and more of his men boiled into the battle, and house-carls now ringed me with their shields, but through them, I saw the old one-eyed man, standing, watching, smiling, and I wondered at his courage in not fleeing the hall, for he was weaponless but for that wooden staff he held.\n\nAll Thorstein's housecarls attacked, and even some of the thralls who were unarmed, and those thralls who did so, I took note of for the morrow, for they went into battle on their Lord's behalf, swinging only a great wooden cup or a meat-knife or a wooden bench, for such was their loyalty to their King that they did not hesitate or flinch from battle, and they fought beside the housecarls with great courage, and the men of Hengist died quickly, all but a few who retreated until their backs were pressed against the log walls, and all knew their doom was upon them.\n\n\"Hold,\" Thorstein's voice roared over the battle-din. \"Hold your swords and spears, for I wouldst talk with these warriors of Hengist's before they redden Huginn's claws further.\"\n\nThe clashing of sword against sword, sword against shield, it died away as Thorstein's men fell back, swords and axes and spears at the ready, battle-lust in those savage eyes of icy-blue, chests heaving, golden hair and golden beards streaked with red, and Thorstein and his brothers stood at the forefront of the host, and Thorstein's visage was grim and foreboding, for these men had attempted to kill the King in his own Great Hall, and his father, the Old Wolf, was of the Skj\u00f6ldung lineage, and the Skj\u00f6ldungs were not well-noted for their willingness to forgive.\n\n\"You are Hengist's men,\" my son said, and he was the King now, standing erect and proud, his shield on his shield-arm, his sword held in hand, swinging slowly, dripping blood, as did my sword, and the bodies lay before us for I was beside him now.\n\nBehind us, on the dais, my daughters, the King's younger sisters, every one of them, even the youngest of but ten years, stood with arrow nocked to bowstring, and many were the bodies on the floor with eye and throat pierced by the battle-adders that had been aimed truly, and few had missed their mark, for my daughters could put an arrow through the eye of a bird in flight, and this I had taught them.\n\n\"You are Hengist's men,\" my son said again, \"and Hengist offered insult to my mother, and my mother, the Lady Fan, is known to all as a sword-maiden equal to any man, as all here have seen this night.\"\n\nThorstein smiled, and his smile was one that did not welcome debate on this matter.\n\n\"Now, you who once followed Hengist as his housecarls, you have slain men of mine, and I do not fault you in this, for you fought for your Jarl and were loyal to your salt, kinslayer and oathbreaker though your Jarl was, and such loyalty is to be respected.\"\n\nHe held up his hand, silencing the murmur. \"I do not begrudge the death-geld of my men, and this I will pay in full myself, in honor of Hengist's courage, for he may have been kinslayer and oathbreaker, and also he was foolish to challenge me and insult my mother, the Lady Fan, as all here have seen and heard, but he was no coward who was afraid to come into the Young Wolf's den, fall though he did at my mother's hand, and related to me by blood he was, although distant, but still, I acknowledge him as kin, and therefore as kin I take upon myself the death-geld for the deaths this night.\"\n\nAnd his smile was that wolf's smile, hungry for the kill, ravenous for blood, accepting no rival. The smile of his father, and all in this Great Hall saw, and all knew that the Old Wolf's blood ran true.\n\nHis father's blood, my husband's blood, the Old Wolf's blood.\n\nMy son's younger brothers, they stood with their older brother, a serried rank, bloodied swords and axes in iron-muscled hands, and not one of those swords or axe blades did not drip the red ravens-drink, shields on steel-thewed arms, fierce of visage, whilst my daughters, the king's younger sisters, they stood with arrow and bow, even the youngest, cowering not from blood and battle, and all who saw them knew that these cubs were of their father's and of their mother's lineage, young wolves every one of them, lusting for battle, lusting to feed the ravens, lusting to draw the red ravens-drink.\n\nA wolf pack, and his brothers stood at their older brother's shoulders, for this I had taught them well, as had their father. Bare indeed is brother-less back in this cold and desolate northland of my husband's, and no back of any child of mine would be bare in the way that mine had been on my departure from Northern Wei.\n\n\"No,\" Thorstein continued. \"Jarl Hengist was a great warrior, though ill-tempered and quarrelsome, but no man can say he turned from battle, and he is now in Valhalla, where he has long belonged, and tonight we will drink the death-ale in his memory, and in memory of those who have this night joined him, and nor do I begrudge payment of the death-geld for those of your companions who have died this night, and this to I will pay willingly to their families, for all who died here tonight were brave men, and while tonight we feast here, they will feast in Valhalla as warriors who have died bravely in battle should, and their courage, and the courage of my own men gives me great honor.\"\n\nOne of Hengist's men stepped forward now, and even bloodied, he stood with his head high, a man of pride and honor, a warrior. \"I hight Gu\u00f0laf, Orms-son, King Thorstein, and our Jarl is dead now, and defeated are we, his men, in your own Hall. Most Kings would have killed all who attempted such a feat as we, and yet, we who stand here still live.\"\n\n\"Yet, you still live,\" Thorstein said. \"And by your own words, you acknowledge me as King. And indeed, most Kings would take offense at your actions on this night, for tonight is the Yuletide Eve, and the Yuletide Peace has been sworn, and yet it was broken and blood has been shed. But now Hengist is dead, and he died at my mother's hand, as did his Father before him, and all should now know that it is not good luck to stand against myself, or the sons and daughters of the Old Wolf, or against the Old Wolf's wife and my mother, the Lady Fan, and ill is the fate of those who try, as all now here have seen. Is it not so?\"",
        "\"It is so, Lord,\" all his men said, and so too said more than a man or two of those who had followed Hengist into this Hall, for certainly none who stood here now would follow Hengist out.\n\n\"Now, men who were once Hengist's housecarls but are now without a Jarl, and all know Hengist had no sons, I lay a geas on you, and it is yours to choose your fate, for you are brave men, willing to fight and die for your Jarl even after his death, and this is to be respected. Thus, my skall this night shall make a song of this battle, praising all who fought, and once this song is sung, all shall praise the valiant carls of Hengist, together with the prowess of the warriors of Thorstein, for honor is due to all but Hengist, who was fool enough to insult my mother.\"\n\nThorstein smiled now, and his smile was for me, and I returned that smile, for King though he was, he was a dutiful son who respected and honored his mother.\n\n\"Now, warriors who once followed Hengist, a choice I give you. Serve my mother, the Lady Fan, as her guards for a season, and I shall take you into my service and take you South with me when the time comes in the spring, and I have raised a host, or accept my decision as to your fate, for I am the King here, and this is my Hall.\"\n\n\"Why should we who are warriors serve the...\" This Gu\u00f0laf glanced at me, and he was a brave man indeed to question the King in such a manner and at such a time.\n\nMy hand raised my blade a little, for the first of them who said Witch Woman would die, and his eyes met mine, and he did not flinch, but he knew death when he saw it, and this one did not care to die at my hand, I knew, and I smiled, a little.\n\n\"...Lady Fan, who is your mother, and the Old Wolf's wife, and a sword-maiden indeed.\"\n\n\"Why?\" Thorstein said. \"Why indeed, and surely you have not sat at my mother's knee and heard the tale of how she met my Father, or you would not ask such a question.\"\n\nNow he looked to me, and his eyes said to me that he wouldst not kill these men, not unless it was needful, for he had lost warriors this night. Faithful housecarls, and they would need to be replaced, and he would need to gain more men, in order to serve his ambition of a kingdom and a new home for the folk, carved from the rich lands to the south, and to take the followers of Hengist, whom I had slain, into his service, this would gainsay all who said ill of him over Hengist's death, and I looked back and I nodded, for this was wise of him, and his fame and renown would grow for showing such mercy to the defeated, and that Hengist's men would take oath to him would show that they held him in high regard despite the death of their Lord, and warriors would throng to serve under such a leader.\n\n\"It is a long tale, and one that my Mother has not before shared with the folk, but I ask my Mother now, before all my warriors, to tell this tale so that all may know it is an honor to swear as guard to a lady of such courage and renown. And to you, warriors of Hengist, I say this. Be my guests on this Yuletide Eve, swear again to me to keep the peace on this night. Sit, feast, drink of the Yuletide Ale, listen to my Mother's tale, and should, in the morning after you have thought long on this, you consider it an honor to serve as the Guard of my Mother and my Hall whilst I lead a war-hird against the Wulfingas to the north who trouble our borders, tomorrow eve, I will welcome you into my service as housecarls, and after that, we will talk of what the future will bring after the Geats have been humbled, for plans I have, and warriors such as yourselves I will need come the Spring.\"\n\n\"And if we do not choose this, Lord?\" he asked, and he was indeed a man of courage to say such words.\n\n\"Your lives are in my hands, Gu\u00f0laf Orms-son,\" Thorstein said, and now he bared the wolf's fangs. \"Entitled am I to enslave you, or sacrifice you, hanging you high from the trees in the Grove of W\u014ddan, for W\u014ddan welcomes the blood of men such as you, and you have attempted to kill the King. Entitled am I to carve the eagle on your back, to cut the ribs from your backbone, and draw your lungs there out in the blood eagle, giving you up to W\u014ddan in thanks for the victory I have won this night.\"\n\n\"That is your right, Lord,\" Gu\u00f0laf said, but he paled, as did his companions, those one score and ten who remained alive, for the blood eagle was not such a fate as any man would welcome.\n\n\"Glad I am that you acknowledge this, Gu\u00f0laf,\" Thorstein said. \"For even though you attempted with your Jarl to kill me, I am not a King as would bestow such a fate on warriors as courageous and skilled with weapons as yourselves who yet live, for mine own carls are indeed battle-honed, as you yourself can see, and you are men of much battle-skill to have lived this long against them, and also you are men with such honor as to fight on after your Jarl died, for such is the action that honorable men would take, but also you are wise, for you do not fight on hopelessly, when hope is indeed offered. Thus, I offer you this choice. Listen this night to my Mother's Tale, and if you should decide such a woman is not worthy of your service, I grant you leave to depart with all you possess, having sworn to never again take up weapons against myself or any member of my family, down to the third generation, and this geas I will lay upon you, and your children, and your children's children in return for your lives. That is my word.\"\n\n\"King Thorstein, you are indeed a King worthy of your father, King Harald Wolfs-Fang,\" Gu\u00f0laf said. \"Content am I and my comrades with your justice, and listen this night to your Mother's tale we will, and our decision you shall have in the morning, in obedience to your wishes.\"\n\n\"Release them,\" Thorstein said to his housecarls. \"Return now to your table, for while when you entered this Hall, four tables were needed for you and your comrades, now but one will suffice, and sit you now, stay and feast as honored and welcome guests, but as blood has been spilt this night, your weapons I shall hold until the morrow, for tempers may well flare when the yuletide ale is drunk, for strong is my ale, and good it is to drink much, though in the morning your heads may regret this.\"\n\n\"Grateful are we that our heads will be in a position come the morn to experience such regret,\" Gu\u00f0laf said, and all present laughed, and even I smiled, for he was a man of wit, as well as courage, and all could see he was indeed a man of honor as well as courage, for he stepped forward without hesitation and handed his sword to a carl of Thorstein's, trusting the King's word, and he was the first, but he was not the last, for all his battle-comrades followed his example.\n\n\"Place the dead along the walls,\" Thorstein commanded. \"So that at the last, they too may hear my mother's tale and perhaps recount the Lady Fan's words in Valhalla, where the Einherjar too may listen, for there, surely, the Old Wolf stands, as proud of her deeds in death as he was in life.\"\n\n\"All except for the body of Hengist, and he was kinslayer and foresworn, so his body shall be burned by the fire, and I command this as his kin, and King also.\"\n\nThe thralls fell to work with a will, for Thorstein was a firm master, but fair, and his thralls did not suffer unnecessarily, and soon the walls were lined with the bodies of the slain, three score and ten of Hengist's carls, and two score of Thorstein's men, and those two score, they were all men I knew well, and when the thralls were done, a hundred and ten sightless bodies sat upright against the log walls, and all agreed that this was a fitting backdrop to this yuletide feast, for the tale of such an audience would lend much to the retelling of this night, and I looked around for the old one-eyed man, but he was not there, and he was not amongst the bodies or the injured, and if he was wise, he would have slipped out the doors and away.\n\n\"Tell all here now your tale, Mother,\" my oldest son said at the last, sitting once again now on the King's seat at the head of the High Table.\n\nHis warriors sat at the benches to either side of the firepit, the chief warriors near to the fire, those of lesser status seated at the middle and outer tables, and the dead seated along the walls, and the Yuletide Peace was now restored, albeit the smell of roast pork and freshly shed blood and the shit-stink of death permeated the air around us, but in this Hall that was not an unfamiliar scent, and that pork was not such as men would eat, but the smell of the roasting meat gladdened my heart, for the son of Horsa would trouble myself and my children no more, and he had been childless.\n\nI, I looked out at this barbarous throng and at the dead seated along the walls to either side, sightless eyes and pale lifeless countenances staring at me, and inside myself, I shuddered with horror at the ghastly sight, but after two score years of marriage to Harald Wolfs-Fang, I had seen far worse, and so I said a silent prayer to the Buddha, and obeyed my son's request.\n\n\"Bring me my erhu,\" I commanded one of my daughters, and she hastened to do my bidding, while all made themselves comfortable.\n\nThose who were wounded finished the bandaging of their wounds, or watched as my daughters completed the stitching of their cuts and gashes where this was needful, and some must bite on wood as their wounds were stitched, but none would leave the hall, however sorely they were wounded, for all wished to hear my tale, and even Aelfwyn, whose guts had been sliced open to spill on the floor, and who knew he would die, he asked for his guts to be bound up within him, and to be placed at the forefront of the folk, so that he might listen and take all in.\n\n\"For all know there is no recovery from such a wound as this, and I am bound for Valhalla this night,\" he said. \"But I would wish to hear and remember this tale of the King's Mother before I ask the King for the mercy-knife, that I might recount such a tale as will be told as I feast with the Einherjar.\"\n\nAll present acclaimed his words, and his friends and kin, and all the carls who were once Hengist's, they came forward to bid him farewell and utter words of praise for his courage and to praise his battle prowess, and indeed, Rig, a carl of Hengist's, smiled a lipless smile, for his upper lip had been cut away, and bloody and awful was the raw smile that remained, still dripping blood, his teeth forever now bared as are a skull's teeth, and his friends joked that his new name should be Skullface, and all laughed, including he, but he stood before all, at the side of Aelfwyn, and his words were of praise.\n\n\"A master of the sword is Aelfwyn, for none before he have ever gotten though my guard to bloody me, as my battle-friends will vouch, but Aelfwyn's blade hewed through my guard, and all may see the result, for I was never beautiful, but Aelfwyn has made no improvement,\" and his smile was such as sent a shudder through me, and all present agreed his countenance had not been improved in any way, and that Aelfwyn's sword-skill was beyond compare, at which words I said nothing, for these words were said in honor of Aelfwyn, and to aid in his passing.\n\n\"Honored am I to have exchanged blows with a warrior such as Aelfwyn, and surely he will be welcomed into Valhalla, and I myself will place the pennies over Aelfwyn's eyes, and make a sacrifice over his grave, and when my time comes, as all men's time must come, I will count myself honored to be his shield-brother in Valhalla.\"\n\n\"Honored I will be to welcome such a comrade at my side,\" Aelfwyn said, and his hand gripped Rig's in a white knuckled grip, and all knew he suffered, but silently, as was fitting, and all respected his bravery and courage, for most men would have asked for the mercy-knife immediately, but such was his desire to hear my tale that he bore the pain stoically, and Rig sat by his side and gripped his hand as a comrade, and all agreed that this was fitting, for Hengist's carls had been worthy adversaries, men of courage and battle-skill and honor, and many spoke up, telling them that they would be welcome as shield-friends within the hird of Thorstein, and my son was well-pleased with their words.\n\nAnd those who were hale were busy calling to the thralls and the servant girls for ale and more meat, for this would be a lengthy tale, and all here knew it, but at last, all were ready, and Thorstein stood and called for silence, and silence fell, for all wished to hear my tale.\n\n<center> * * * </center>\n\n\"I hight the Lady Fan, and my maiden name before my marriage to King Harald Wolfs-Fang, the Old Wolf, was, in the way of my people, the Princess Yuan Fan, for my father, Prince Yuan Cheng, was a Prince of the Royal Dynasty of the Empire of Northern Wei, a General of Armies, a commander of men and a feared warrior, as were my older brothers, and now begins my tale of Huginn's Yule,\" I began, in the manner of my husband's people, and under my fingers, my erhu played a lament for fallen Northern Wei as I spoke, and the song I played was \"Rain in Jiang-Nan,\" and alas, none but I knew that.\n\n(An aside: If you'd like to listen to this as you read, search for \"\u96e8\u788e\u6c5f\u5357 \u4e8c\u80e1\u7248 Rain in Jiang Nan_Erhu Cover\" on Youtube)\n\nThose notes of sadness accompanying my words, uttered now in the barbarian tongue spoken by my husband and his people, and by my children, for they knew not the tongue of my own ancestors beyond a few words, and all listened, for this was a tale I had never told before to the folk, of how I came to this land, though all knew my husband had found me alone in the far lands to the north and east of Miklagard and brought me here, although to most, Miklagard was naught but a tale told on a long winters night, and none of the warriors who had then accompanied my husband now lived, and of all here, only I was alive who had seen far-of Miklagard, which, fabled as it was, was but a town compared to the great cities of my homeland.\n\n\"It is a long tale, this tale of Huginn's Yule, and it begins many long years ago. Two score and five years ago, when, as a girl of but fifteen summers, I was summoned into the presence of the Emperor Daowu, ruler of Northern Wei, together with my Father, the great General and Prince, Yuan Cheng.\n\nI will tell you now a little of my homeland, of Northern Wei, for none here but I know of the far-of country from which I came, and it would take a man three long years on horseback, riding every day from dawn until dusk, to reach the land of my birth, and indeed, I left home as a girl of fifteen, and I was twenty years of age when King Harald brought me here, to his hearth and his folk, and almost every day of those five years was spent on the road, on horseback or, after I wedded Harald, riding the sea-steed beside my husband as we sailed the whale's way.\n\nNow my homeland, Northern Wei, it is a land that lies far beyond the lands of Gardariki, far beyond the great River Vlaga, of which some here have heard, for it is the river down which my husband, King Harald, had led his dragon-ships, sailing the great inland sea that lies to the east, and raiding the peoples to the south who are wealthy beyond all dreams of avarice.\n\nThat river Vlaga, and that inland sea into which it flows, they are a year's travel and perhaps more from here if you row east, up the rivers, and then down the great river that flows to that sea on which Miklagard is set, and if you sail east along that sea, you will find another great river up which you row for weeks, and then you will portage to the Vlaga, but that is only the first stage in that journey to my homeland, which lies far beyond the Vlaga, far across the great steppe, the grasslands that stretch forever, where distance is measured in months of riding.\n\nBeyond the Vlaga, around which the Murom's and the Mordvinians dwell, and they are people like as to the Finns, then there are the lands of the Magyars and the Bulgars, and after them, the lands of the Xiongnu, and beyond the Xiongnu, whom some call the Huns, are the Rouran, whom men here know as the Avars, and beyond the Khanate of the Western Avars lie a range of great mountains, clad in snow and ice, reaching to the very sky, and lest any doubt me, I have crossed those mountains myself, and weeks upon weeks of travel that took for my escort and myself, and many died in that crossing, frozen to death or fallen from the paths into the deep gorges.\n\nOn that route, there are many enemies, for out there on the great sea of grass, every man is an enemy, so it is doubtful that any may now retrace that journey, and indeed, of all my escort of a thousand warriors and a hundred women sent with me by the Emperor and my father, I was the sole survivor, and that was chance and luck, not skill, for neither was I the most beautiful of the women, nor was I the most skilled with the sword or the bow, and of this you need not now ask, for I will tell you when my tale reaches those parts, so needs you must be patient.\n\nNow beyond those great mountains that reach to the sky lie the great deserts, the Takla-Makan, the Gobi, and others, deserts where there is no water for thirty days at a time, deserts where the sandstorms will eat a man down to the bone in an hour if he is without shelter, deserts where the sun will boil a man's brains within his skull, and he will drop dead from the heat, and in winter from the cold, and beyond the great deserts are the cities of the Xiyu, the Kingdom of the Tuyuban, the realms of the Zhang-Zhung, and many others.\n\nOnly after you have crossed these lands do you reach the distant western borders of the land that was my homeland, the great Empire of Northern Wei that stretched across two thousand miles from east to west, so vast that weeks of travel on a fast horse are required merely to reach the western border from the capital of Luoyang, and vast and powerful was that Empire, before which Miklagard itself would be but an outlying fortress, and I say this as one who has seen Miklagard with mine own eyes, for great were the cities of Northern Wei, wealthy were her people, strong were her armies, and all envied her.\"\n\nAnd all the while, as I began the telling of this tale, my fingers plucked and played my beloved erhu, drawing out the notes of that song, a plaintive lament for fallen Northern Wei. I was not the last of her people, of that I was sure, for even with Northern Wei fallen, many would live, many would have surrendered, changed sides, formed new allegiances, but I had heard also of the fate of my father and brothers, and indeed, of the Emperor and his family, and all that had mattered to me was dead, for my father and my brothers had led their armies to the bitter end, never betraying the Emperor, never betraying that fealty they had sworn, and, remembering, sadness filled my heart, and I played from my heart, for my homeland was gone down in defeat, and all I had loved as a young girl was lost long ago.\n\n\"My homeland, Northern Wei, is a land of people such as myself, black-haired, with eyes and features such as my own, and it was not, in those days of my youth, a land of peace, for my people were never peaceful. Skilled were my people with the sword, the spear and the bow, and from the far north were we, long ago in the distant past, riding our horses across the green grass in summer, the white snow in winter, and all the world was at our feet, conquering all with our bows and our swords and our spears, and many were the peasants that tilled our fields, many were the wealthy merchants whose trade we taxed, strong were our armies, as iron were the hands of our warriors, for as all know, without a firm hand, thralls will seek to throw off the rule of their masters.\n\nEntered my people into the lands of the Han many centuries ago, allying with the Jin Dynasty who then ruled all the lands of the Han, but the Jin Dynasty weakened, as to the south in these days, the Rome-folk have weakened, and after the War of the Eight Princes, my people came to rule their own kingdom, carved from the body of the Jin Empire, and this became in time the Empire of Northern Wei, and our soldiers were mighty, defeating and driving back the Rouran to the North, and the armies of Southern Qi to the south, and we came in time to rule all the north, from the great sea in the east, to the desert in the west, and as far as the endless steppe to the north, and ever we sought to conquer Southern Qi, and bring all the Han under our rule.\"",
        "\"All envied Northern Wei,\" I continued. \"Numberless as the grains of sand on a beach were her soldiers, fierce and unrelenting were her generals, noble men such as my father, Prince Yuan Cheng, but surrounded and beset we were by enemies without number. The Rouran ever attacked from the north, the Southern Qi from the south, and with the Eastern Qi joining the fight, pressed were we on all sides, but our armies were ever victorious, ever defeating those who attacked us, but the cost, the cost was ruinous in wealth and in men.\n\nNow I myself, I was the daughter of a Prince who was related by blood to the Emperor, the great Daowu, for all our Emperors were named Daowu, after the great ruler who founded Northern Wei, and my father was a great general, renowned for his skills and his victories. I grew up in the capital city of Luoyang, a city vast beyond imagination, a city to which Miklagard was as we are to Miklagard, for many were her people and her palaces. I was daughter of a Prince with vast estates and wealth, but pampered and soft I was not, for my father was a great General and I was of the ruling clan of the Xianbei.\n\nThe Xianbei were we who founded and ruled Northern Wei, and as a Princess of the Xianbei, and of the ruling clan, the Tuoba, I was expected to know the way of the Sword and of the Bow, as well as the arts of a woman, as were many of our woman, for I was bought up on the tale of the legendary Hua Mulan, who was a woman of our people who led an army of our soldiers against invaders from the North and defeated them, and in my youth I dreamed of being such a woman-warrior and General as the fabled Mulan, and perhaps it might have been, had I remained in Wei, for was not my Father the greatest General of Northern Wei, and did not every one of my brothers themselves command Armies?\n\nTrained I was from early youth to fight with the sword, both on foot and from horse, as well as with the bow, and my father sent me to the great Shaolin Temple to study under the masters. Learned I there the way of the sword, the bow, the spear, and the horse, as well as the arts of calligraphy, of medicine, and of the other lesser skills necessary for a woman, and beautiful was I in my youth, and in this I need not be modest, for did not King Harald Wolfs-Fang love me from the moment we met, and stranger though I was to the folk, did he not take me as his wife on that night of our meeting, and have I not remained his wife above all others unto his death?\"\n\n\"It is so, Lady,\" the older house-carls said, for they had not been there, but some had fathers or older brothers who had, and the tale had been passed on, and indeed, I was now three score years in age, but still my skin was youthful and my hair was jet black and without any grey, long and silky, and I could say without overstating my appearance, that still I was beautiful, and while my skill with the sword and the bow was perhaps not as it was when I was twenty, still, I had separated Hengist's head from his shoulders in a move that would have drawn an approving nod from my old Masters at the Shaolin Temple.\n\n\"It is so,\" I said. \"Beautiful was I, but not without compare, for beautiful were the women of Northern Wei, and more beautiful still were the wives and daughters of the Tuoba Clan, of which I was but one daughter among many, but my father was the General, Prince Yuan Cheng, and I was a cousin of the Emperor himself, and so I was well-known amongst those whose knowledge mattered, and my beauty was spoken highly of, and always I knew my destiny, which was to be married to a man of rank or to a foreign ruler with whom the Emperor would wish to seal an alliance, and as a young and dutiful daughter of Wei, I expected this, and I knew my duty, for did not my Father and my Brother's serve the Emperor, always at risk of their lives.\n\nAs a daughter of Wei, I knew I could do no less.\n\nThus, when a messenger and escort sent by my father arrived at the Shaolin Temple, summoning me to my father's presence in Luoyang, I obeyed as a dutiful daughter should, ordering my single maidservant, to pack such minimal possessions as I was permitted at the Shaolin Temple, bidding farewell to my Masters, to the Prior of the Temple and to my friends amongst my fellow students, for I knew not if I would return, and, indeed, I would never do so, and those friends to whom I promised to write would never receive those letters. They would never know my fate, as I knew not theirs, and I could only hope for them, that they had survived the Fall of Northern Wei in those terrible last days.\n\nBut my father had summoned me, and I knew not why I was summoned, but for my father to send a messenger and an escort, it must needs be more than a simple desire to see his only daughter. The land of my Fathers, Northern Wei, was surrounded by enemies, and we were under constant attack. Rare it was for my father to be present in Luoyang, rarer still for him to summon me, for more commonly, he paid me fleeting visits at the Shaolin Temple, and thus I made all haste, pressing my escort hard as we rode the great highway leading in to the City, and I was both glad, and curious, and a little afraid, for I was but fifteen years of age, and I knew not what was wanted of me.\n\n<center> * * * </center>\n\n\"The Emperor himself has summoned us to his presence, daughter,\" my father said, and he had not waited for me to be brought to him. He strode into the courtyard, and he was there as I dismounted, a servant taking the reins of my mount and I was saddle-sore and weary, coated with the dust of the road. \"Come as you are, mount once more, for we must make haste.\"\n\nI came as I was, making haste as my father bid me, for in this time of war and constant battle, one did not question orders, especially when one was a mere girl of fifteen, the daughter of a famous General, and summoned into the presence of the Emperor himself.\n\nThe Emperor I had met before, half a dozen times in my father's palace, when he had been sitting with my father poring over the maps for a new campaign against the Southern Qi, and I had brought tea for them myself, for even trusted servants were not trusted by my father when he sat thus with the Emperor, for anyone could be suborned, but a daughter was blood, and I was a distant cousin of the Emperor himself.\n\nThus, I was not unduly terrified at the thought of once more meeting the Emperor, because had I not once but a number of times knelt before him and served him tea, and he had smiled and thanked me, and even taken my hand in his, and indeed, he smiled as my father and I were escorted into his presence.\n\n\"Princess Yuan Fan, you are more beautiful than I had remembered,\" the Emperor smiled upon me as I knelt by my father's side before him, dusty and stinking of the road, for I was of the true Xianbei and I rode a horse, I was not carried in a cart or a palanquin as a woman of the Han.\n\n\"Sire, I thank you,\" I murmured, bowing low, my forehead touching the marble tiles.\n\n\"We will ignore the formalities, there is no time,\" the Emperor said. \"Rise, daughter of Wei, come with your father and I, and we will drink tea together this once, and it is I who will pour tea, for there is something I must ask of you,\" the Emperor said, and he drew me with him.\n\nI walked between the Emperor and my father from the throne room and into a secluded tea room overlooking a tranquil courtyard, where a servant brought tea, upon which the Emperor did me great honor by filling my cup and my father's cup and his own with his own hands. I sipped on my tea at the Emperor's urging, and there would be a reason for my presence, and it dawned on me that such a reason was obvious for one of my station and sex.\n\nI was to be used as a bargaining chip.\n\n\"There is no time, Sire,\" my father said, after no more than a cursory sip of his tea, and now he turned to me. \"Beloved daughter, we who serve the Emperor and Northern Wei, we know our duty. As a son of Wei, mine is to fight and die for our land, holding her safe against all enemies, and as a Daughter of Wei...\"\n\n\"Father,\" I said, interrupting him for the first and the last time in my life, placing my hand on his. \"I know my duty. Who am I to marry?\"\n\n\"An embassy from the Eastern Rouran has requested a bride for the Khan of the Western Rouran, far beyond the Great Western Mountains,\" the great Emperor Daowu himself spoke to me, but he was speaking as much to my father as to me, for my father was a great General, renowned for his generalship, and his armies had held our enemies at bay for twenty years. Feared he was, but also loyal to the death to our Emperor, as was I, and as were my brothers, who faced death daily in the service of the Emperor, for they too commanded armies of soldiers along our borders, and I was my father's daughter, and not to be given away lightly.\n\nNow my father spoke, and his words were to me. \"Fan, we must appease the Eastern Rouran in whatever manner we can, for the Southern Qi are preparing new armies to attack us, as are the Eastern Qi, and we can fight on two fronts, but not on three. Appease the Rouran and hold them at bay for another year we must, and they have asked for your hand in marriage to their Western Khan, as part of their price for remaining neutral.\"\n\nThe Emperor Daowu looked at me across the tea stand as I knelt beside my Father, and there were tears in his eyes. \"Beloved cousin, and Daughter of Wei, I must ask this of you, as I ask your father and your brothers to face death leading my armies. Renowned is the beauty of the Princess Yuan Fan, the daughter of the Prince Yuan Cheng, and the Khan of the Eastern Rouran himself has asked for your hand in marriage for his brother, the Khan of the Western Rouran, in respect for your father's abilities in battle as well as for your beauty. They are warriors, the Rouran, and they respect a warrior and so they have asked for you specifically, Princess, as your father's daughter. I wouldst that I did not have to ask this of you, but Wei demands its son's serve, and so too must our daughters serve in time of need, and indeed, our need is dire, or I would not ask this of you.\"\n\n\"It is my duty to serve Wei, Sire,\" I said, bowing my head, and even as a girl of fifteen, I was well aware of my duty. A daughter of a Prince does not marry at will, and I saw that my duty to Wei was clear. \"May I ask when I am to leave.\"\n\nBut there were tears in my eyes, for I loved my father and my brothers with all my heart, and in my heart, I also knew that once I had left Wei, I would never return, for I knew of the Western Rouran, and to reach their lands was a year or more of riding on horseback, and that was by the direct route. I would never return, never see my father and my brothers again, never again worship the Buddha at the temple-caves of Longmen, never again study under my Masters at the Shaolin Temple, never would I have the opportunity to rise to fame as did Hua Mulan, a true daughter of Wei.\n\nI would never see Wei again.\n\nBut at the least, I would have carried out my duty and helped defend Wei against her enemies, and if my marriage brought the Empire peace for even a year, I would have served Wei more effectively than the death of ten thousand of her soldiers could, and I at least would not be dead, and perhaps as one of the wives of the Khan of the Western Rouran, I could still serve Wei in some small way.\n\n\"You leave for Eastern Rouran tomorrow morning,\" my father said, and there were tears in his eyes as he spoke. \"Returning with their embassy, and they depart in haste, for autumn is here, and they must return to their Khan with the outcome of their negotiations, or we will face war to the north in the Spring.\"\n\n\"I will go as you and my father ask of me, Sire,\" I said, again bowing low. \"I can do no less for Wei.\" But still there were tears in my eyes.\n\n\"Thank you, Daughter of Wei,\" the Emperor said, doing me great honor by taking my hands in his. \"An Emperor must rule for the good of all his people, and sometimes that necessitates actions and commands which one does not wish to make, but which one must.\"\n\n\"You do not need to explain, Sire,\" my father said. \"You know my family serves you, every one of us.\"\n\n\"It is my duty to serve Wei, Sire,\" I said again, for what else was there to say.\n\nIn the end, whether I agreed or not, I would be dispatched to the Khan of the Western Rouran, for what was the value of one woman when balanced against the good of the Empire? I would do my duty, and I would not make this harder for my father than it already was, for I knew my father loved me, as I loved him, dearly.\n\n\"And if my marriage buys time for Wei, then I will happily marry.\" I smiled now. \"And to marry a Khan of the Rouran is not an ill fate, Sire, for my children may rule in time, and I will do my best to influence their Khan in favor of Wei, in whatever manner I can.\"\n\n\"I can ask for no more, Lady Fan,\" the Emperor said. \"You have my thanks, and the knowledge that you will have saved the lives of thousands of my soldiers so that they can be used against the Qi.\" And for him to use my given name and to thank me and acknowledge my value was as great an honor as I could hope for. \"Now I must bid you farewell, Lady Fan. The arrangements had been made, an escort has been assigned and a dowry prepared such that you will be valued and respected. Go with my blessings and my thanks, Daughter of Wei.\"\n\nI bowed before the Emperor, remaining there as he stood and left, only rising as my father rose, after the Emperor had departed.\n\n\"They asked for you by name, Fan,\" my father said. \"Others were offered, but they would accept no other, and we need that year of peace with the Rouran above all else. All else was settled, but if they could not have you, they were prepared to walk away from the negotiations, and that we could not afford, for our armies are already stretched to the breaking point.\"\n\n\"I will do as is asked of me, Father,\" I said, as we walked through the long hallways of the Imperial Palace towards our waiting horses and escort, and now I knew why I had been summoned in such haste.\n\nRarely is a daughter of Wei dispatched in marriage at my age, and this I had not expected for another two to three years, for I was but a girl, but in the end, it was what I had always known my destiny would be, and I would not make this harder for my father than it already was. My father faced death in battle year after year, whilst all I faced was marriage to a stranger, and such in any case would have been my destiny.\n\n\"Thank you, Fan,\" my father said, as we rode through the streets together, side by side, our escort around and ahead and behind, clearing the street before us so that we rode as if on a highway, and my father rarely called me by my name. \"It is hard for me to ask this of you, for I had hoped above all to see you married within Wei, but these are difficult and dangerous times.\"\n\n\"Do not regret, Father,\" I said, but again there were tears in my eyes, for this night would be my last with my Father, and my brothers were all in the south, leading men in the endless wars against the Southern Qi, and never would there be the opportunity to make my farewells to them.\n\n\"Fan,\" my father said, and he hesitated a little before his next words. \"I do not regret this, for Wei is in dire straits. Our armies are shrinking, our enemies are growing in number and in confidence, and there are traitors and dissension within our ranks. You are safer out of Wei, for I am not a man well-loved by the Emperor's enemies, and those enemies grow in number by the day. I wish you at least to be saved, and I am sending a thousand of my picked men as your escort, and they are volunteers all, young men from our family estates, loyal to me to the death, and they will stay with you and take wives from the Rouran. This also I have negotiated as part of your dowry, and you are not to repeat this, but I fear for Wei.\"\n\n\"Father?\" I said, and now I was afraid, but not for myself.\n\n\"Wei is weakening, Fan,\" my father said. \"Men desert the ranks, they do not believe in our cause or our nation. Many fight only for their pay, and not out of loyalty and love and duty, as do I and your brothers. I do not believe Wei will stand for much longer. Another year, perhaps two or three and we will fall, and I would that when that happens, you are safely married beyond our borders, and thus when the Rouran asked for you, I concealed my happiness at this from everyone, including the Emperor. This I tell only to you, Fan, that you are not saddened by leaving your family behind. Your brothers and I serve, we are sworn to the Emperor's service, we will live and die with him, but you, Fan, I would see you escape our fate, to marry, bear children, to know happiness.\"\n\n\"Father?\" I said, and now there were tears of sadness in my eyes, for I read my father's eyes and his face, and my father was a cold and calculating man, as a great General needs must be, but I saw that in this he had not been cold and calculating, but that he sought my survival should Wei fall, and if my father saw that Wei would fall, then I was sure in my heart that this was so, for was my father not the greatest General that Northern Wei had known in two, perhaps even three, generations.\n\n\"I love you, Fan, my daughter,\" my Father said, and I knew it was so. \"And through you, our family bloodline will live on.\"\n\nOn that next morning, as he bade me farewell, he had handed me my grandfather's sword, the sword that my father had carried every day of his life, from the age of fifteen, that prized blade of Yamoto his father had passed on to him, and he bid me take that blade and carry it from now on.\n\nWhen he gave me that sword, I knew he was certain that Northern Wei would fall, for that blade should have passed from my father to my oldest brother, but my brothers were with the armies in the south, and for my father to give me that precious heirloom meant that he did not expect any of my brothers to survive, and tears filled my eyes as I stood in the courtyard with my father in those sad moments of our last farewell, and never again would I lay eyes on my father, or my brothers, or on Wei.\n\n<center> * * * </center>\n\nFor two months, we rode north with the embassy of the Eastern Rouran, and the pace was not slow, for the Rouran were as the Xianbei, born to the horse and the bow and the sword, and they wished to return home to their families before the winter fell, and my escort were a thousand picked men of my father's personal cavalry, born to the sword, the spear, the bow and the horse.\n\n\"Your father had this made for you, Princess Yuan,\" Captain Wang said, gesturing, and one of my maid-servants struggled to hold up a coat of mail armor. \"It is the best that we make, Princess, and now that we are nearing the borderlands, you should wear this at all times, for in this northland, an attack may come at any moment.\"\n\n\"But these are the lands of Wei, and it is the lands of the Khan of the Rouran we ride into,\" I said, surprised. \"We travel with an embassy of the Khan, and five hundred of the Khan's warriors, and our men number one thousand of the finest cavalry of Wei. Surely no-one will attack us.\"\n\nCaptain Wang laughed, but his laughter was grim. \"We are on the edge of the desert, Princess. Here, there is no ruler, neither ourselves or the Khan of the Rouran. Every man is an enemy, and the bow and the sword are the only law. From now on, we must always be ready.\"\n\nFrom that day forward, I wore my coat of chain mail, I wore my sword in its sheathe, my bow in its case attached to my saddle, and my arrows in my quiver at my back. Always.\n\n<center> * * * </center>\n\nThe chill wind screamed down from the north, wailing and howling across the dunes, and there was a fine mist of sand that penetrated the cloth wound around my face, leaving only my eyes exposed. There was a road of sorts, and the markers were the skeletons of men, and camels, and horses, and we had been two weeks since the last oasis, and the water in the leather goatskins was brackish and foul, the flies and other insects relentless in their torment, and I had not known it would be like this.",
        "The carts bearing the gifts to the Khan, my dowry, and carrying the hundred women who had been sent with me as my maids and servants, they bogged down in the sand again and again, and all must wait as they were dug out, and we had water for twenty days, and already fourteen had passed. The Rouran drank the blood from their horses veins every second day, as did the men of my own escort, and as a Princess of the Xianbei, I could do no less, and I followed their example without flinching, although Captain Wang must needs show me how to nick the vein and suck the blood, and I did not hesitate, and the Rouran watched, and their look was of approval.\n\n\"She is a fitting bride for the Khan's brother,\" I overheard one say, and I was discretely learning their language, though they knew it not.\n\nThe desert nights grew colder, cold and bitter, and even the furs in the carts and the bodies of my maids to either side did not warm me, and Captain Wang showed me how to heat rocks in the fire, and then lay them in the ground and sleep on a layer of them to keep warm.\n\n\"How much further,\" I asked, the next morning.\n\nCaptain Wang consulted with the captain of the Rouran embassy's guards. \"Ten days to the next oasis,\" he said. \"And after that there is water every third day, and in two weeks further, we will be out of the desert.\" He grinned through parched lips. \"I have patrolled the borders of this desert, Princess, but this is further north than I have ever been, and I do not know these lands, but the Captain tells me that his Khan's rule is strong to the north of this desert, and when we reach the grasslands, we will ride west to find the winter encampment of the Khan, and there we will remain until Spring.\"\n\n\"How long will it take to reach the Khan of the Western Rouran?\" I asked.\n\n\"We will ride in Spring, Princess, and the Captain says it will be autumn when we reach their lands, and then we must find the encampment of their Khan, but we will be there for the winter.\" He shook his head wearily. \"The Captain and I have talked, the road is long and hard, Princess. I do not think many of your women will survive the journey, those that are not Xianbei, the girls of the Han, they certainly will not, for look how many have died already, and this has not been a hard journey, not as the Rouran or we soldiers of your Guard count hard.\"\n\n\"We will show no weakness,\" I said, after a moment's thought. \"We will gift the Han girls to this Khan of the Eastern Rouran, and no doubt he will be pleased.\" I smiled. \"But it is good to know we are almost out of this desert, for I detest this sand.\"\n\n\"I too, Princess Yuan,\" Captain Wang said. \"And we will be safer from attack in the lands under the control of the Khan, for out here, anything could happen at any moment.\"\n\n\"We have not been attacked yet,\" I said. \"We have seen no-one.\"\n\n\"They are out there,\" Captain Wang said. \"Watching us.\"\n\n<center> * * * </center>\n\nWe were attacked the next day.\n\nThey came on us fast and hard, at the first light of dawn, and I had risen in the darkness, dressed, donned my coat of chain mail, as I did every day now, fastened on my helmet, strapped my shield to my arm and I was there with my sword, running through my drills under the eye of Sergeant Wen, when the warning horns sounded, and the camp boiled into life. Over a low ridge they came, kicking their small horses into a gallop, and each man rode with a bow in his hand and an arrow ready, guiding his horse with his knees.\n\n\"To the Princess,\" Sergeant Wen bellowed, and my duty guards surrounded me, shields raised, and the second rank raised their bows, drew arrows, nocked them to the bow strings, and there was no panic, for my escort were all experienced soldiers who had fought raiders before, in the borderlands.\n\nThe raiders came in line abreast, high in the saddle, and perhaps they had taken us for merchants, fat with trade goods and light on armed guards, and in this they were sorely mistaken, for even as my own loyal guards formed ranks, running to their places, the Rouran mounted and rode out at the gallop, angling to outflank the raiders, and the arrows of my soldiers began to punch out, knocking raiders from their saddles and they did not rise often, and those that did went down again, quivering as does a pincushion, for my escort guarded a Princess of the blood, and they showed no mercy.\n\nThe Rouran took them in the flank at full gallop, and there was not a man amongst them, nor amongst my own escort, who could not put an arrow through the eye of a flying bird whilst riding at the gallop, and my soldiers were armored and shielded, whilst these raiders wore only their deels, or tunics made of leather and furs, and it was a massacre. Shaft after shaft impaled them, driving them from their saddles, cutting off their war cries, sending them spinning to the ground, and the Rouran had cut off their escape.\n\nA group of these raiders burst through a gap in our lines, and I saw two of my soldiers go down, arrows through their eyes, and Sergeant Wen ordered half my guard forward at the run, sealing the gap, but more raiders had broken through now, in desperation, or perhaps they knew not the fate of those behind them, and a dozen saw my maidservants huddled in a group and rode towards them, whooping, cutting down half a dozen soldiers on foot who sought to bar their way with sword and shield.\n\n\"Follow me,\" I cried, and I ran towards them, my guards behind me, and I hammered my blade into a rider's thigh as he rode past me, blood splattering my face as that rider screamed and tugged wildly at his reins, catapulting over his horse's head as it dug it's forehooves in and slid to a halt, and one of my guards ran him through with his lance as another of those steppe raiders bore down on me, sword already swinging at my head.\n\nThere was no time to defend myself, and I dropped flat to the ground, and Sergeant Wen was there, stepping over me, his sword chopping down again and again, a limp and bloody body falling on me, and I was on my feet, seizing the reins of that fallen rider's horse, mounting, my sword in my hand, and Sergeant Wen was cursing as two more riders rode at us.\n\n\"Go right,\" Sergeant Wen screamed, and I did, instantly, my blade's tip finding the neck of one rider as Sergeant Wen cut at the other, almost taking his head off, and my guards had run to protect me, not my maidservants, and I could not fault them, for it was their duty to protect me above all else, but there were half a dozen of the raiders left, and they were galloping out of the camp, and as I watched, two were pulled from their horses and knifed on the ground as they writhed, screaming, and I saw two kicking legs clad in white before one rider.\n\n\"Mount,\" I cried. \"Mount. They have one of my women.\"\n\nWithout thought, for I knew my guards would follow me, I spurred my horse to a gallop, and Sergeant Wen was there with me, at my shoulder, roaring over his shoulder, and behind me a long tail of horsemen trailed, more and more of them, but my horse was strong, and I was light, and I outdistanced them all, and there was a bow in its case, hanging from the saddle together with a quiver of arrows, and now I sheathed my sword, and discarded my shield.\n\nIt was a man's bow, made for a man's strength, but those raiders were only a little ahead of me, and I took arrow to string, aiming, drawing with all my strength, releasing, and my first shot was a lucky one, for it took a rider in the shoulder, and he reeled, and the others looked around, and now I wove my horse, for they were turning in their saddles and shooting at me as I rode, and I was shooting back, but these shots were not so lucky as my first, and they drew away from me a little.\n\nSergeant Wen at last caught up with me, and he was beating his captured horse onwards, and other guards too caught up, and out to one flank were riders of the Rouran, and the raiders must have known they could not escape us for they turned and stood, and they used their horses as shields, and my maid was still alive, for I heard her screams as they tore her clothes from her and raped her, one by one, while we rode towards them, and beside me a guard went down, an arrow through his chest.\n\n\"Hold, Princess,\" Sergeant Wen bellowed. \"This is our job, not yours.\"\n\n\"She is mine,\" I screamed back, catapulting myself from my horse into the midst of those raiders, and I took the one facing me with one cut, my sword cutting his in half as he blocked, slicing on down through his skull to the jaw and jerking outwards as I freed my blade from the bone, and Sergeant Wen was there, and the other guards, hacking and slashing and cutting in a mad frenzy, and the raider who had been in the act of raping my maid as we attacked cut her throat a second before I removed his head, and I held her in my arms as she choked on her own blood and died, and I wept, for I had failed in my duty, and it was long before I would release her from my arms.\n\nThe Ambassador of the Rouran eyed me as we ride into camp, splattered with blood, sword in my hand, mounted on a captured horse, the body of my maid across the saddle of a captured horse whose reins were held by one of my guards, and he bowed low.\n\n\"Indeed, Princess Yuan, you are a bride fit for the Khan of the Western Rouran,\" was all he said, before he turned to his men, just as Captain Wang was inspecting my escort, and thirty men dead and as many wounded we lost in that attack, together with one maid-servant, and it would not be the last attack, and it would not be the last men or women we lost, before we entered the lands firmly under the rule of the Khan of the Eastern Rouran.\n\n<center> * * * </center>\n\nWe rode into the encampment of the Khan of the Eastern Rouran three hundred men and twenty women less than we had left Luoyang with, and the Khan greeted us with pleasure, for the carts carried many gifts such that the Rouran desired from us in return for a year's peace. His pleasure when I gifted him my forty five remained Han maid-servants knew no bounds, for I had dressed them in clothes of my own, fit for a Princess, and I had bestowed upon them titles, and in return for this and for the armor and weapons of my dead soldiers, I negotiated a further year's peace, and of this I sent word back to my father by a letter to be carried by a merchant from Wei who had dared to travel this far north, and who was now returning.\n\nAfter I had talked with them, warning them that it would be certain death for them to continue on with me, all acquiesced to that gifting, and great indeed was their relief when the Khan kept only two or three for his own pleasure, and gifted the remaining out to his subordinate khans and his chief warriors, and they too were greatly pleased, for women of the Han, even maid-servants newly raised to titles, with their airs and graces and their beauty, were much prized by these people, and I could vouch for their virginity, for so must all my maids be, and so all were pleased with my arrival, and we were hosted through the winter, if not in the style of Luoyang, at least with comfort, and the soldiers of my escort were fast learning the ways of the Rouran.\n\nWe departed the encampment of the Khan as the first green buds of spring broke through the snow, and I rode out with Captain Wang and six hundred soldiers, for some had died over the winter, and but twenty maidservants, for fifteen of my Xianbei maid-servants had asked if they could remain as wives of men of the Rouran, and I did not refuse. The Khan himself sent an escort of two hundred of his men with us, for these lands were his, and the lands of other Khans through which we would pass to reach the Western Rouran were such as paid him tribute, and thus, he said, a larger escort was not needed, and now we travelled with my dowry on packhorses rather than carts, for we must ride fast and hard to reach the Western Rouran before winter once more fell on the steppe.\n\n<center> * * * </center>\n\nAnd now I will pass over the next year of my life in less detail, for there was much that was the same. The endless days riding across the steppe, every day as the other, and men died, as men do, from sickness or in accidents, or in fighting the raiders that at times darted in to attempt to seize a horse or a woman, and now and then they were successful.\n\nThe encampments where we halted for days at a time while the horses grazed, and the men hunted, all regaining their strength. Men died, as men do. In accidents. From illness. In battle against raiders who attacked, sporadically, but there were always new raiders, and they had to be fought off again and again, and our numbers dwindled week by week, until by late summer Captain Wang had but four hundred and fifty of his soldiers remaining, and of the Rouran there remained but one hundred and fifty, for some too had died, some had wandered off or disappeared, others had become ill and halted.\n\nSergeant Wen, he was a master of the sword, surpassing even my Sword Master at Shaolin, and every day he trained me, until my muscles screamed for me to cease, and then he trained me the harder, and my strength and my skill grew, for often now I would run all day on foot, at the side of the horses, wearing my coat of chain mail, my sword in one hand and my shield on my arm, and on other days I would ride, and I would practice with the bow until I could raise my arms no more, until my archery was the equal of any of my soldiers.\n\n\"Why do you do this, Lady Fan,\" she who was my maid and who had grown up with me, always serving me, my mei-mei, my little sister, she asked me one day as she rode at my side. \"You are a woman, and you will be wife to a Khan. There is no need for you to do this, and what man loves a woman who is not soft and silken and pale-skinned, as a woman should be?\"\n\nI shrugged. \"My father is Prince Yuan Cheng, mei-mei, and he is a General of our Armies, and so too are my brothers. You know them, and you know my family. It is my duty, for were you not with me as my servant at Shaolin Temple while I studied the Way of the Warrior? I have trained all these years, and I will not stop now, and Sergeant Wen is such a teacher as one dreams of. He is a true master.\"\n\nSergeant Wen, Captain Wang and I talked too of this, but they did not attempt to dissuade me. Rather, they sought to train me to be the best I could be, and with this, I was content, and as the summer ended and autumn drew closer, word reached us that the Khan of the Western Rouran was far to the south, leading his men in a great raid against the rebellious tribe of the G\u00f6kt\u00fcrks, and my Captains studied such maps as we had of these lands, and determine that we must needs overwinter before moving on.\n\n\"There is an old fortress of Ban Chao a few days travel from here,\" Captain Wang said, poring over the map and such records of these lands as had been provided to him from the Imperial Archives, for the Han Dynasty's armies had conquered these lands long in the past. \"I will send out scouts.\"\n\nThose scouts found the ruined fortress, and my men quickly rebuilt it, while others hunted, and stores of meat and such other food as could be foraged for was laid up, together with hay cut for the horses, and wood for fires. Long and lean and cold were those months of winter, but I commanded no favors for myself. I ate as my soldiers ate, I warmed myself as they warmed themselves, and I trained harder and longer, for I was a Princess, and my father was Prince Yuan Cheng, and I must honor my family. When the spring came and the horses had been grazed on the fresh green grass, we were once more ready to move out, some men the less, but before we did, news of the fall of Northern Wei reached us.\n\nA small party of men with a Rouran guide, for the Khan of the Eastern Rouran had granted my father that one last favor, even as Northern Wei fell, rode in, and they had ridden hard and fast. The commander of that small party of soldiers carried a written message from my father's hand, a message which I have still, and it is all that remains to me of my father. That letter, and my sword.\n\n\"Farewell, daughter,\" my father had written. \"I write this letter in haste, sent with a trusted Lieutenant and his men, to bid you a last farewell. Our armies in the south are defeated, your brothers are dead, having died doing their duty in the service of the Emperor and of Northern Wei. I myself am with the Emperor and his family, holding the citadel of Luoyang, but my army is made up only of remnants who remain loyal, for my best men have died already, holding the Qi at bay, and those few who remain I send with this message to you, hoping they bring word to you of your father's end. There is fighting in the City now, we few who remain yet will fight to the last to defend the Emperor, but I do not hold any hope of victory, for we are outnumbered and many of our men have deserted, and this will be my last letter to you, for soon we will be surrounded in the Citadel, and there is nowhere to escape to. You have my blessings, Fan, my beloved daughter, and you carry with you my hope that you will, with your children, carry on the lineage of our family. Goodbye, and may the Buddha bless you. Your father, Prince Yuan Cheng.\"\n\n\"Northern Wei has fallen, Princess,\" the Lieutenant said, kneeling before me. \"Luoyang was burning as we rode away, the citadel had been breached, and the news reached us that Prince Yuan Cheng had fallen with the Emperor in those final hours. Obedient to your father's wishes, we have ridden hard all summer to find you and give you his last letter to you, and now we place ourselves under your command, for such were your father's wishes.\"\n\n\"My thanks, Lieutenant,\" I said, and my eyes were flooded with tears, such as I could not see, for my father was dead and yet his men, these men who had carried this message to me, losing half their number along the way, together with those who were with me and who survived, they were loyal to me still, who had done nothing to deserve such loyalty beyond being my father's daughter.\n\n\"What course shall we take, Princess Yuan?\" Captain Wang asked as we ate that night. Myself, the Captain and his officers, the Lieutenant, and the Captain of our Rouran guide, and all looked to me, a girl of but seventeen summers, and awaited my command.\n\n\"We must continue,\" I said, and my voice was decisive, though my mind was uncertain. \"I am promised to the Khan of the Western Rouran, together with my dowry and my soldiers, and this was agreed to between my father and the Emperor Daowu who was, and the Khan of the Eastern Rouran. Northern Wei has fallen, there is nothing there for me to return to, and the Khan of the Eastern Rouran kept his word, to not attack Northern Wei for two years, and he did not attack, even as Northern Wei fell to the armies of the Southern Qi and to rebellion. The Khan kept his word to my father, and so I shall keep mine. We shall continue on to find the Khan of the Western Rouran.\"\n\nAnd how I hoped that the Khan of the Western Rouran would indeed take me as his wife, for Northern Wei was no more, but I came as my father's daughter, with a large dowry, and with many warriors well-equipped with chain mail, lances, swords and bows, and although they were half the numder I had ridden out from Luoyang with, they were all tried soldiers, young and eager for adventure and to find a woman and wealth, and they were volunteers, every man, accepting that their destiny was to follow me, and to end their days in a foreign land.\n\n\"Captain Wang,\" I said, sipping on my tea, and I had thought long on this. \"Northern Wei has fallen, my father and the Emperor are dead, and I will continue on, for there is nothing for me to go back to except death, for I am a cousin of the Emperor, and my father was not unknown.\"\n\nI hesitated, sipping on my tea. \"In the morning, we will parade the men, and I will tell them of my decision, and ask only for volunteers to ride on with me, and all who do not wish to continue may turn back with my blessings and thanks.\"",
        "Captain Wang nodded. \"I will continue with you, Princess,\" he said, slowly. \"For I gave my word to your father, and there is nothing for me to go back to. My family died long ago, at the hands of the soldiers of Southern Qi. Your father has passed from this world, and is with his ancestors now, Princess, but I give you my word, and with you I will ride on to whatever fate lies in store for us.\"\n\nIn the morning, the men were paraded, and tears were in my eyes as I thanked them for their loyalty and their service and offered to release any who wished now to turn back, for thanks and sweat and blood and tears, and perhaps death, that was all I had to offer.\n\nEvery single man stepped forward, volunteering to continue with me, and not a man turned back.\n\n\"We must move quickly,\" I said to Captain Wang, after that parade, and when I had recovered my composure. \"We will take no wagons, only horses, and my dowry will be divided amongst the men, each to carry his share, and thus if we are attacked we will not be constrained by the slowness of the carts.\"\n\n\"Your maid-servants? The others, the grooms and the wagon drivers?\" Captain Wang said.\n\n\"They must learn to ride,\" I said. \"We have horses and to spare, and if they will not ride, they will be left behind, and I myself will inform my maids.\"\n\nThey chose to ride, and we rode out the next morning, riding west, almost five hundred soldiers of fallen Wei, Xianbei warriors every man, my fifteen remaining maid-servants, and fifty Rouran riders who yet remained, for many had faded away in those early days of spring, riding out, never to return, and there was no news of the Khan of the Western Rouran, but ride on and find his encampment we must, and I had Rouran scouts sent out to search for word, but none returned to us.\n\n<center> * * * </center>\n\nOne day followed another, and always Sergeant Wen continued my training, and one day, when we were halted, he eyed me as we sparred.\n\n\"Hold, Princess,\" he said, and he watched my face. \"You have heard of the cold face, Princess. The warrior's face, that gives nothing away.\"\n\n\"Yes, Sergeant,\" I said, for I had seen that face on my father, and my brothers, and on my master's faces at Shaolin.\n\n\"The cold face, it has nothing to do with your muscles, or how well you fight with the sword or the bow. The cold face, it comes from the heart, and it is the knowledge that you will face death with nothing but contempt, for fear is beneath you. The secret of the cold face is that it is more than a mask your face wears. In learning the secret of the cold face, you learn an inner calm that is the conquest of your own body and your fear, and today, I will train you in the secret of the cold face.\"\n\nHe eyed me, and his face was cold and hard. \"If you wish, Princess.\"\n\n\"You are my master, Sergeant Wen,\" I said, and I was determined to learn this, for was I not a Princess, and destined to be the wife of a Khan. \"And I am your student. Teach me.\"\n\nHe eyed my face, and he nodded, once. \"Mount and ride with me,\" and our horses came at our whistle, and we mounted and rode out into the steppe, a dozen of my guards mounting and riding with us, and we rode until we came to the river near which we had camped.\n\n\"Turn your backs and do not watch the Princess, for she will be naked,\" he said to the guards, and then, when they had done so, \"Strip naked, Princess,\" he said to me.\n\nWithout any embarrassment, he removed his clothing, and I was not embarrassed for we had lived together for two and a half long years, and at one time or another I had seen most of my men naked, although none but my maids had seen me so, not to my knowledge. His body was marked with old scars, red and puckered against the white of his skin under his clothing, and as I watched he walked into the freezing water, where the still pools were already covered with a thin sheet of ice.\n\nI watched as he lowered himself into the water, and I knew how cold it was, for their was a film of ice on the surface, but the expression on his face did not change as he dipped his head beneath the surface, and then lay back, half floating, his hands holding the stones of the river bed, and he seemed completely at ease in the freezing water, his face calm, and his eyes looked towards me.\n\n\"Join me, Princess,\" he said, and he watched me through that moment of indecision before I began to remove my clothes until I too was naked, and I walked naked into the water, and it was so cold that it burned, and I had to grit my jaws to stop my teeth from chattering as I sank slowly into the water, sitting waist deep in a still pool with ice around me, and I forced myself to breath as I slowly lay back until I was lying as Sergeant Wen was, and the cold was a fierce burning cold that penetrated to my very bones, burning and numbing together, and it was all I could do to stop myself from leaping to my feet and bolting to my clothes, for the pain of that cold was beyond anything I had experienced.\n\n\"In water this cold, a grown man becomes unconscious after a few hundred heartbeats,\" Sergeant Wen said, and his voice spoke as he normally spoke when he was not issuing commands. \"Your hands and your feet die first, growing numb and useless. Your thoughts become slow, and in time you will not have the strength to climb from the water, and then you will no longer feel the cold, and life slips away, your eyes close, and you will die.\"\n\nHe watched me, watched my face. \"Show me nothing of what you feel, Princess. Show me the cold face that you will show to your enemies who seek to anger you. Remember as you look at them that they too are afraid, every one of them, for no man is without fear, and knowing that, you can conceal your own fear and pain behind the cold face and stare them out of all countenance, for here you lie with death, Princess, and you feel death seeping into your body, sinking into your bones, and yet your face will show nothing.\"\n\n\"Breathe gently now, Princess, slowing your heart, for the body is weak thing, and you do not need to listen to its cries for help. It is the mind that is strong, and let your mind's strength come to you as you breathe, and your face shows nothing, you face shows nothing and you are empty of everything but your own will.\"\n\nI breathed, slowly, the cold burning into me as I lay there, and I was fast growing numb, byt my face remained calm, though it was a struggle.\n\n\"Your body pleads with you to feed its desires,\" Sergeant Wen said. \"It calls to you for food and warmth, for comfort and relief from pain, but you will shut those pleas out and you will find the cold face.\"\n\nI lay there, my mind empty, my face cold and unmoving, and at last Sergeant Wen sat upright, and reached for my hand, and I sat up, slowly, stiffly, and my skin was pale, but as I stood, my body burned with the flush of life returning, and the cold breeze was as the summer sun.\n\n\"Your body does not rule you, Princess,\" Sergeant Wen said. \"You rule your body, and your body is merely the horse that you ride. You control your body with your will, and when you take an arrow in battle, or a cut from a sword, and the pain overwhelms you, you will push that pain away as if it is nothing, and you will deal death to your enemies, and when you face an enemy, you will show them the cold face, for they are nothing to you.\"\n\nHe smiled now, and offered me his flask of fermented mares milk, airag.\n\n\"Take a mouthful, Princess, and we will run to the top of this hill and back, and when we return here, you will spit the airag out to show me that you control your body.\"\n\nWe ran, and on our return, I spat the airag out, and Sergeant Wen smiled as he spat his own mouthful out.\n\n\"We will do this again, tomorrow,\" he said, and I smiled, for I knew that I could.\n\n<center> * * * </center>\n\nOnward we rode, and the land was empty. Bones we found, bones of people, and of horses and sheep, and the bones of burnt out yurts, but of the living there were none. Of wolves fattened from the eating, there were many, and they appeared well-fed, and it was if we rode through a desert devoid of people, and there should have been people, for these were the summer grazing grounds of the Western Rouran, and of our guides and our Rouran escort, there were fewer every day, and one morning there were none.\n\nCaptain Wang and I sat by the fire, drinking tea, and neither he nor I were sure of our course.\n\n\"We will not return,\" I said. \"And there are five hundred of us. We keep riding, for they are out here somewhere.\"\n\n<center> * * * </center>\n\nThe wheeling vultures in the distance, two weeks later, they were a warning, but we rode onwards, wearing our armor now, weapons at the ready, and as we rode over the ridgeline, we paused, for before us was a battle such as I had never seen, for in these years of travel, I had seen battles, but they had been raids.\n\nThis?\n\nThis was a battle such as my father had fought, with thousands of men on every side, and I tried to count them, but I could not, for there were masses of horsemen riding together, and they did not ride in ranks or columns as my father's cavalrymen rode and his foot soldiers marched and fought. These were disorganized, masses of men riding together and now, as they closed, the flights of arrows began to arch through the air.\n\n\"The Rouran there,\" Captain Wang pointed at the masses of horsemen to one side of the great valley ahead of us, and we no longer rode slowly forward, and he signaled the men to keep below the ridgeline. \"And those are the Xiongnu, for them also I have fought, and I recognize the banners.\"\n\n\"Who will win this fight?\" I asked.\n\n\"Impossible to say,\" Captain Wang said. \"Best we ride from this place and leave them to it. The Rouran came from there.\" He pointed. \"We will circle round and ride hard in that direction.\"\n\n\"Yes,\" I said, for I was no Captain of soldiers, such as was Captain Wang, and we rode as he directed, hard and fast through the green grass that had not been grazed, and behind us the din of battle faded.\n\nWe came across a dozen Rouran stragglers two days later, and they did not run from us, for their horses were lame and exhausted, and their faces were set and grim, and their arrows were ready as we rode up.\n\n\"Who are you?\" one of them asked, at the last, as we looked them over. \"You are not Xiongnu?\"\n\n\"No,\" I said. \"We are Xianbei, and we seek the Khan of the Western Rouran.\"\n\n\"You are a woman?\" he said, and his eyes widened. \"You are she whom we were sent to seek, for word was sent that a Princess of Northern Wei had been sent to the Khan, but the word was that you were lost on the steppe, and the Khan sent men to search for you.\"\n\n\"I am she,\" I said. \"But where is the Khan, for we have lost our guides, and we know where we are, but we know not where the Khan is.\"\n\n\"The Khan is to the north,\" he said. \"We must ride, for all the tribes of the steppe have heard now of you, and of your dowry, and all seek you, Princess. The Xiongnu, the Gokturks, the Onugurs, the Sabirs, all have raiding parties scouring the grasslands for you.\"\n\n\"Take fresh horses from ours, and guide us to the Khan,\" I said, and they accepted.\n\n\"We lost the battle to the Xiongnu,\" their leader said, and around us more Rouran riders were coalescing, a few here, a few there, for we rode hard and fast, and we had five horses for every man, each man leading his string, and we were Xianbei, and I could live now in the saddle as could my men, eating dried meat and drinking the water from our goatskins. \"And that was but their advance guard.\"\n\n\"I think we have found others,\" Sergeant Wen said, reining his horse in, and ahead of us, a great line of riders sat on a ridge looking down on us.\n\n\"They are not Rouran,\" the Rouran leader said, and he turned his horse and he fled, and his men and the other Rouran followed him, two hundred of them, but it did them no good, for the attackers split their force, a good part arrowing to cut the Rouran off, and more Xiongnu appeared around us wherever I looked, and I did not think the Rouran would survive, and my men prepared themselves for battle.\n\n\"We will negotiate,\" I said. \"If all are looking for me, in the end, one marriage is as good as another, and I will not have you spend your lives needlessly, for Northern Wei has fallen, and if we are captured, as it seems we are, I will not have broken my word.\"\n\n\"It seems the Xiongnu do not care to negotiate, Princess,\" Captain Wang said, dryly, and indeed they were advancing in a long line, bows in their hands, and they were notching arrows to the string as I looked.\n\n\"Let us then do our best to break through their lines,\" I said. \"For we are armored, and our horses are larger, and we have lances and swords besides our bows, and most of them have only bows.\"\n\n\"It is our only chance,\" Sergeant Wen said. \"To punch through, hard and fast.\"\n\nCaptain Wang nodded, already shouting orders, and the horns were sounding as my maid-servants closed up behind me, and they did that without orders, for maid-servants though they were, in the end, they too were of the Xianbei, and they had courage, warriors though they were not. Me, I unslung my shield, fastened my helm, strung my bow and uncovered my arrows as our men milled in devious disarray, and the Xiongnu arrows began to arch through the sky towards us, and all knew the tactic, for the horns had signaled what we would do.\n\nI edged my horse forward, Sergeant Wen and my personal guards with me, and the Xiongnu were trotting towards us across the green grass, in no haste, for we were trapped and they outnumbered us by twenty to one.\n\n\"We've fought the Xiongnu before and driven them off,\" one of the men said, spitting on the grass. \"But they've got us surrounded this time.\"\n\n\"Surrounded?\" I laughed, and I remembered something my father had said once as a joke. \"That makes it simple. They can't get away from us this time.\"\n\nSergeant Wen slapped his leg and laughed, and around me my words were repeated, and the laughter spread, until five hundred warriors of Northern Wei laughed, and our laughter was loud enough that the oncoming Xiongnu hesitated.\n\n\"Now,\" Captain Wang bellowed, and the trumpets sounded, the banners were unfurled, and the last army of Northern Wei turned as one, forming into ranks as we rode into battle, far from family and home, loyal to their Princess, and I, I was at the forefront of the charge, for my horse was strong and I was light, and mine was the first arrow that flew, punching a Xiongnu warrior from his saddle, and the men had formed up on either side, a long spearpoint of horsemen launched at the enemy, and from either side of me, the arrows flew out, and every arrow punched a Xiongnu warrior from his saddle.\n\nThe men did not falter, not for a moment, the horns rang again and again, sounding the charge now, the sound of the hooves of our horses filled my ears, the battle-cries of our men, the arrows of the Xiongnu whining around my ears, and next to me a man grunted as an arrow ricocheted from his armor, and another thumped into my shield, but we wore mail, and they did not, and every one of our arrows punched a rider from the saddle, but few of my men fell, and the rhythm of the gallop coursed through my veins, and the Xiongnu now galloped towards us, and we were closing fast, and I shot my arrows, again and again, ten arrows in sixty beats of my heart, seeing the men go down as my points punched into them, and each of my men was as fast as I, or faster.\n\n\"Lances,\" Sergeant Wen roared, and I fumbled sliding the bow into its case and dropped it, but my hand found my lance, and now I dropped back a little, for I did not have the strength of the men, and I was in the second rank as we punched into the Xiongnu with a crash of sound, and our chain mail and the size of our horses gave us the advantage, and my lance stabbed, and stabbed, and stabbed again before it caught, and I released it, drawing my sword, cutting and slashing as I rode behind Sergeant Wen, and he was death.\n\nBefore him, the Xiongnu melted away, men falling like rain, and behind me, some of my guards were shooting past him, shooting through the gaps, as fast as they could draw and release, every arrow punching Xiongnu from their saddles, and we were cutting through them, and my fingers were slippery with blood, my blade coated red, and behind me the battle raged as my men followed my personal banner, the banner of the White Wolf, the Wolf Princess, for that was what my men had taken to calling me.\n\nAn arrow hit my shield, jarring me back, my sword struck, cutting through the bow that was raised in defence for this rider had not even a sword and I cut him down without hesitation, and another after him, and another, and I screamed in triumph as we burst into the open, and my men after me, those who had survived, and we had lost perhaps a third, but behind us the Xiongnu had fallen back, and one group of men, then another, fought their way out to rejoin us, and Captain Wang was at my side, an arrow shaft jutting from his shoulder, and his shield arm hung limp, but he was grinning, his teeth white.\n\n\"Over the ridge and away,\" he commanded, and the horns sounded, and we turned and rode as one, three hundred soldiers of Northern Wei, bloodied and battered, but our horses were with us, and my maid-servants were behind me, eyes wide, faces pale, but some of them held bows and one held a bloodied sword, and my men shot arrows to our rear, into the Xiongnu behind us, and they followed, but slowly.\n\n\"Ride,\" I commanded. \"Ride,\" but at the ridgeline, men hesitated, and when I joined them and looked down into the next valley, I saw why, and behind us the Xiongnu had regrouped in a great crescent around us, and the bodies strewn behind us on the slope of bloody grass were but a drop in the bucket to the horde we faced, and there were but three hundred of us.\n\n\"It's a good a day to die as any,\" Sergeant Wen said, and he wore not the cold face, but he was smiling.\n\n\"Guess it is, Sergeant,\" Captain Wang said, and he looked at me, and we both knew there was no hope of escape, and the Xiongnu did not have the look of warriors who would take prisoners, for already they were trotting forward. \"I beg for your forgiveness, Princess Yuan, that we are not able to protect you from these.\"\n\n\"It is I who ask for your forgiveness, Captain,\" I said. \"You and all our men, for I thought not that this would be our end, but if it is to be, I will die beside you as a soldier of Wei.\" But my heart was sad, for my father's hopes for me would come to naught.\n\n\"You are a commander such as your father was, Wolf Princess,\" Captain Wang smiled now. \"And wished I that we could have served you for longer.\"\n\nHe did not wait for a reply, but he raised his sword, and his voice bellowed out. \"Let these Xiongnu know they face Xianbei on this day,\" he cried. \"Dress ranks.\"\n\nMy horse moved to his side, and Sergeant Wen as at my right, and my personal banner, the banner of the White Wolf that had been sewn for me by my men, it was held by a man behind me as the men formed into three lines, and for a moment, all was still.\n\n\"Death,\" Captain Wang called, and the horns sounded.\n\n\"Death,\" the voices of three hundred soldiers of fallen Wei roared, and my own voice was amongst them, and \"Death\", my maid-servants called, and every one of them now held a sword, and I did not think they knew how to use them, but they showed the spirit of the Xianbei, and I prayed to the Buddha to bless them as our horses began to trot down the long slope, and many of our men had arrows for their bows, for they were experienced soldiers, and they had not lost their bows as had I.\n\nOnce more the arrows flickered out, and a wounded soldier passed me his, and now I too was shooting, arrow after arrow as we trotted down that slope, and before us the Xiongnu melted away, but there was no end to them, but there was an end to our arrows, and my hand searched my quiver, but there were no more, and my lance was long gone."
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "6th century",
        "asian",
        "chinese",
        "historical",
        "mythology",
        "first time",
        "vikings",
        "violence",
        "virgin"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/huginns-yule"
}