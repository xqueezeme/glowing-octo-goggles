{
    "title": "Heart's Fall",
    "pages": [
        "----------------------------------------------\n\nAuthor's Note\n\n----------------------------------------------\n\nFor me, autumn has always been about nostalgia, melancholy, and love. That's what this story is truly about. I hope that you enjoy it.\n\nThis version has been edited to correct continuity mistakes and other embarassing errors. I apologize that these made it in. I do my own editing so this is entirely my fault. Other small changes to sentence structure and text flow have been made, but none that impact the story.\n\nSpecial thanks to MakeMeRealAgain from Reddit for ensuring that I stayed true to my subject and providing vital criticism and feedback.\n\nThis is dedicated to NightFawn, my little succubus. May she always find joy in her endeavors.\n\n----------------------------------------------\n\nNow - Lost in the River\n\n----------------------------------------------\n\n\"What?\" I said, disbelieving.\n\n\"We're...we're seeing each other...\" Shanon said, stumbling through her confession while awkwardly holding Gary's hand. Sorry, awkwardly holding my \"friend\" Gary's hand.\n\n\"Seeing each other, or fucking?\" I felt the old coldness take me. I didn't get mad like other people, but I could be cruel.\n\n\"Jesus Christ, James,\" Gary started. I didn't let him finish.\n\n\"No one's talking to you, Gary,\" I said, \"In fact, I'm a little insulted that you're here. I'd have thought that Shanon would have had the decency to break up with me face to face, alone. I've never hurt or threatened you. I cannot believe you're telling me like this. Ganging up on me.\"\n\n\"We're not ganging up on you!\" she said, almost desperately, \"Yes, we slept together, ok? Just once. And we didn't plan this. It just kind of happened. You were out of town and Gary came over looking for you and we started talking and...well then we started hanging out...and then...then we kissed...and touched each other...\"\n\nThere wasn't any shame on Gary's face, in fact I wasn't even sure he was capable of it, but I could read it on Shanon's. Who would ever have expected that smart, honest Shanon would have done this. Not me, and probably not her. Well, people never failed to disappoint.\n\n\"I'm pretty sure you didn't plan it, Shanon. Can't really say the same about him.\" He'd always had a thing for her, but lots of people have crushes and don't act on them. I guess it was too much to ask of him.\n\n\"I resent that, James.\"\n\n\"Resent it if you want, Gary. That doesn't mean it isn't true.\"\n\n\"What?\" he said, actually looking stunned. It was hilarious, like a cartoon. I ignored him.\n\nShanon cleared her throat.\n\n\"Look,\" she said, trying to put on what I always thought of as her 'lets be reasonable' voice, \"that's why we're here. I've felt like we've drifted apart, and I want to know if something is still here. Gary has been really supportive when you haven't been, and I...we...I don't know. I didn't think there was anything to save here, James, I truly didn't. If...if we can make it work still. I...I'm willing to try, ok? I'm sorry about what happened. We're here to be honest. This isn't me breaking up with you, its me trying...trying to make things right. If we can't, then... Look, just...just tell me what you want me to do.\"\n\nThis was a very Shanon way to do things. I would never have expected her to cheat, or to fall for another guy, but if she had, she would totally confess it and try to make everything ok again. Naturally, she would bring the other party because then we could all be honest with each other and 'clear the air' as she would put it. It would never occur to her that Gary might not be as honest as her or I might be so hurt as to not behave rationally. Or that this would make the hurt even worse. Fuck her for being so naive. A breakup text would have been better than this.\n\nThe sad thing was that I could believe that she would agree to never see Gary again. I could believe that she would do anything she could to earn my forgiveness. I could believe these things, but whatever trust I had in her was dead. And besides, she had hurt me. She had hurt me so fucking badly and I wanted her to hurt at least as much.\n\n\"What you can do,\" I said, calmly, looking her in the eyes, \"is get out of my apartment. Forget my name, or my number, or that we were ever a couple. In fact don't even think of me. It makes me nauseous to think that I was looking forward to cooking for you and then making love with you tonight. How easily you took advantage of my trust. It must be hilarious to you that I was shopping for rings last week while you were fucking my best friend. I can't even imagine how stupid you must think me. So, please just get out and stop pretending you're here for anything but your stained conscience. You never fucking loved me, you just loved how I paid attention to you. Now you have someone who does that better, so it's time for you to move on.\"\n\nShanon turned completely pale and looked like I'd hit her. That probably would have been kinder. I was the aggrieved party here but every word I had said was chosen with the intent of causing maximum harm to her. If you know how someone thinks of themselves, and you know what they aspire to be, you can really cause a lot of emotional damage. She opened her mouth again. I didn't let her speak.\n\n\"Get out. Take your trash with you,\" I said, making the barest of nods towards Gary. He had a huge ego so I knew that being dismissive would bother him as much as anything would. He would probably forget about it tomorrow. I knew Shanon well enough to know that she would be crying over the things I said for months. \n\nThey stood up, and walked quickly to the door. They left, and she closed it so gently you could barely hear the click which signaled the end of my only serious adult relationship.\n\nYeah, so, maybe I was kind of a dick, but it felt like the right thing to do at the time. It didn't make me happier, but it did fill me with a cold satisfaction. Later I'd wonder where this kind of thought came from, and I had to assume it was from my father.\n\nThe only other thing I could think of was that Kerry wouldn't have done this to me.\n\n* * *\n\nI boxed up the few things Shanon had around my house and then put the box outside on the porch. I texted her and told her where she could get them. I told her not to bring her new boyfriend anywhere near my house, as I didn't trust him not to key my car or some other nonsense. Then I blocked her number and deleted her from my phone and social media. I was in a slash and burn kind of mood. I didn't want to be tempted to cross any old bridges so I demolished them.\n\nI went to my home office. God I wished I had some liquor in the house. Shanon didn't like me to drink it because it made me depressed. Well, no alcohol had ever crushed my mood like she had today.\n\nI wrote an email to my boss. She was always trying to get me to take time off, and I had a ton of vacation time built up. I told her that my personal life had collapsed so I'd like to leave the city for a bit, and go back home. I also asked if I could work remotely from there through the holidays. If she said no, that was fine, but I hadn't seen my mom in months, and I knew she was still mourning my dad. \n\nI checked plane tickets but in the end just decided to drive. It would help me clear my head a bit before I got home.\n\nI took a shower and tried not to think about the woman I loved sleeping with another man.\n\nI went to bed, cried silently for a while, then slept like the dead. I knew that I was nose-diving into a new depression, but there wasn't really anything to be done.\n\n* * *\n\nI called my mom and asked her if it was a good time for a long visit. Unsurprisingly, she agreed. I really did feel bad about not visiting enough, and with Shanon out of my life there was no real need to worry about leaving the city for a good long while.\n\nIt took me a good eight hours to drive home. Cider Tree, Population 10,383. Just on the middle class side of poor, formerly a self-contained town with jobs, now mostly a bedroom community for the city about an hour away. Lots of parks and a quaint little downtown. The local private college, while tiny, was also pretty good. \n\nI thought I hadn't missed it. The last time I'd been here had been nearly a year prior when my dad had died, and I suppose it had been a bit of a blur. I'd made most of the arrangements, bought the coffin, all that awful stuff. By the time it was all over, the idea of spending another minute in that town made me sick. I loved my mother, but I was constantly busy with work and the town held a lot of conflicting memories for me. Rather than visit her I had invited her up to see me for a few weekends. That seemed to cheer her up, and I called her weekly, but really, it probably wasn't enough.\n\nThe funeral was also the last time that I'd seen Kerry. She had spoken with Shanon, and expressed her condolences to me and then hugged me. But she'd been pretty cold to me other than that, and left before I could speak with her further. \n\nI don't know what was wrong with me that led the women I loved to reject me, but I was pretty sure that I was done with dating for a while.\n\nAt the time it had been in the coldest part of winter. Now it was fall, of course. And fall in Cider Tree was nearly always gorgeous. I'd left early in the morning, so when I hit the city limits the late afternoon light was perfect and I was immediately struck by the oranges and reds of the trees. I rolled down my windows and let the cold air blow over me, smelling the leaves and a faint hint of smoke from people who were burning them in their backyards. I heard children yelling at each other and saw a couple, probably teens, sitting on a bench and making out but in a fairly pg-13 way.\n\nAnd, naturally, with the sights and smells and sounds, memories took me. \n\nRather than drive straight home. I took a moment and parked in the nearly empty downtown district. It was after the main businesses closed but before the few restaurants and bars picked up for Friday night. I walked down past them, down to the park by the river. I stopped a moment, nostalgia taking hold.\n\nHere it was. The bench, and just behind it...yes. The trees were there, still thick. From the outside it looked impenetrable, but if you were an adventurous child, you might try to crawl in and find a small empty space inside, maybe fifteen feet across, covered in soft grass and moss, well shaded in the summer. Then you could lead your best friend here and share it with her, this secret and magical place. If you did, then it would become your secret headquarters in the long summers. \n\nIt was even secluded enough that, if you were two teenagers in desperate, heedless love for each other, you might come here, to quietly make love and spoon in the evening, talking about futures that would never come to pass while learning how to pleasure one another. You still might dream of it to this day, waking up, raging hard and her scent alive in your memory.\n\nI stood outside our grove, but I didn't go in. To go alone, now, as an adult felt like sacrilege to me. There were few places or people that I still found sacred, but this was one of them, and Kerry another. \n\nOf course, no pleasant memories could exist without unpleasant ones. I looked up to the bridge that ran over the thin strip of wooded parkland and the river itself. It was covered in corrosion, but strong, and I still felt a shudder of fear at it. I was always a sensitive child, but was fearless in the face of violence, or the threat of it. Heights, though? They got me. The floor of the bridge was basically a thick metal grate, and the pedestrian walkway, added much later, was much thinner. You could see straight through it to the river below, and it shook and trembled as you walked across it. The railing was just under waist height on me today, and even as a small child it seemed unsafe, low, as if you could just tumble over it and fall the fifty or more feet to the water, rocks, and death.\n\nIf it weren't for following Kerry, I'd never have crossed. If I was doing something for her, it seemed like I possessed an endless reserve of courage. Today, I decided to walk across, just to prove that I still could.\n\nI got about halfway and then looked down, testing myself, perhaps foolishly. The walkway creaked and shuddered and whined in protest of this outrage of a person walking upon it. I saw the river through it, relatively low after a dry year, although still deep. It would fill back up with the fall rains and the spring thaws. For now, it ran slowly, its surface barely disturbed by motion.\n\nMy mind wandered. I saw myself going off the bridge. Not in a tumble, like an accident, but purposefully. I saw the river's water rushing up to meet me. I felt the cold shock of the water and then the impact of the landing on hidden rocks. In my imagination a strange and unsettling peace came over me. I came back to myself with a jolt. \n\nI finished and walked back across the bridge. That was enough fear to face for one day.\n\nKerry and I had broken up on a day like this, but it wasn't like with me and Shanon. It was quiet and sad and we'd made love for the last time, long and slow, and then we'd gone back to our different colleges. For that matter, it was kind of a secret that we were even together, but that didn't make it ache less.\n\nWe'd kept in touch after that, always hanging out when both of us were in town. After we both were done with college, she'd even visit me regularly in the city and I would go see her on the east coast. Things changed when I started to see Shanon, though.\n\nKerry was still polite and answered emails, but it was all pretty formal, almost professional. This was a weird shift from the friendly girl who always had time to talk me or who called me any time she needed someone to listen or to share good news. \n\nI don't know why her attitude changed. We hadn't been even slightly romantic or fooled around in years, not since she met and then married her husband, Bill. I thought that he was the wrong kind of guy for her but they both seemed happy and he was a decent person who loved her by all accounts, so I kept my opinion to myself. There was some jealousy there, but it was more of a nostaligic thing then something serious. She visited me in the city both with and without her husband with some regularity.\n\nBut, like I said, all that ended when I met Shanon. I guess we got serious with each other pretty quickly, finding kindred spirits and all that. What a joke that turned out to be. \n\nI could lie to everyone else, but deep in my heart I knew that there was something wrong with me. Something that wasn't seen easily, but after being with me long enough, any woman became aware of. I mean, I had depression, but I stayed on top of my treatments and managed it well. I wondered if women sensed it somehow, saw that I was defective on the inside. It was weird. I never really had problems meeting or talking with women, or even too much difficulty finding a partner for sex. I wasn't ugly, and I could be funny. But commitment? I didn't fear it as some people did, but it always seemed to backfire on me, ending poorly, leaving me feel broken or worthless.\n\nI guess maybe it was for the best that Shanon had cheated. She probably would have regretted it dearly if she had married me. \n\nI was not really in a good place at that moment, and was fairly certain that I would not have any romantic success in my future. What should have really worried me at that moment, but didn't, was that the idea of dying alone was starting to feel like a certainty, and perhaps sooner rather than later. \n\n----------------------------------------------\n\nThen - First Kiss\n\n----------------------------------------------\n\nA lot of people can remember when they met their first love, but I can't. Not because she wasn't memorable. Far from it, I've always thought she was at least pretty. Instead it is because we grew up together. I think we really started playing with each other in kindergarten but we probably 'met' when we were toddlers at church. It's just that kind of small community. \n\nSo, from almost as far as I can remember up to when I left for college, she was my best friend. She was definitely a bit of a tomboy but I also didn't have a lot of hang ups about doing shit boys weren't supposed to do, like share emotions or talk about clothes. I just couldn't be bothered wondering if something was masculine or not. It helped that I'd always been a little bigger than most of my classmates. Bullies tended to shy away from you the first time you beat them up. \n\nKerry was tough and adventurous and never gave up. She was about a year older than I was but we ended up in the same year. Throughout our time together she kept her light brown hair short, either something like a bob or in a ponytail. She wore a ton of baseball hats because she didn't like spending any time on styling it and her mom wouldn't let her cut it any shorter.\n\nHer mom was kind of something else, too. If Kerry was a tomboy growing up, then her mother was kind of the epitome of professional femininity. She worked in sales, not the small time local stuff, but as a traveling dealmaker for a paper and office supply company. She signed huge contracts and was pretty busy. Kerry didn't have a father.\n\nTo be more specific, Kerry's mom got pregnant, and since she never discussed the father, it was just assumed that it was the result of a one-night stand on the road somewhere. She always acted like Kerry was planned. The town's gossip mongers were pretty brutal, however. Even in the nineties you could still be considered \"immoral\" as a single mother in a small town.\n\nNaturally this blew back on Kerry. I'm sure the bullies made her cry but she never showed it. For my part I wasn't all that big on fighting on my own behalf but I was more than willing to back her up on the few occasions that she threw down. Most of the time, she was beating up a mouthy girl who didn't expect trouble. Once or twice I may have thrown punches on her behalf when a boy tried to get on her case.\n\nSo we grew up together. Best friends. We watched the same cartoons, played Yu-Gi-Oh, beat each other up in fighting games, and generally were just kind of there for one another. It was just a friendship though, until high school. I think everyone, both of our mom's included, expected us to start dating once we hit puberty but we never did. This relieved her mother a great deal, who was very kind to me, but seemed to think that I was not a good romantic match for her girl. We each had our crushes, but on other people. It was a little weird for our various girl/boy friends at first, but it became clear to each of them in turn that we were, in fact, only friends.\n\nBesides, I don't think I'd ever cheat, although I'd been tempted before. I know Kerry wouldn't. She'd had plenty of opportunities that I knew of, lots of handsome guys hit on her once she hit high school. When I asked if she was tempted, she just said, \"Sure, but tempted to fuck isn't the same as fucking.\"\n\nI should probably mention that she was (and still can be) as foul-mouthed as any ten sailors combined, but you just kind of got used to it. You have to understand that at this point in my life I almost never swore. It was something that Kerry teased me mercilessly about, but my mom would never have permitted it and it was easier to be on my best behavior all the time then risk her wrath. Dad was big and yeah he could be scary but I'd take him over an angry church mom any day of the week.\n\nThe first time I really noticed her romantically was when we were in middle school, in early spring. We were playing Street Fighter 3 (3rd Strike, of course) and I was beating her ass, as was typical. She dominated me in Mortal Kombat, though.",
        "\"Jesus Fucking Christ, are you ever going to stop picking Ryu or Ken?\"\n\nI picked Akuma just to mess with her.\n\n\"It's not my fault you suck with Makoto,\" I observed, and then smiled as I narrowly evaded a real arm punch from Kerry. \n\nWe played the match, and this time she lost really badly. I looked at her and could tell her heart wasn't in it.\n\n\"You want to do something else? I can go home if...\"\n\nIt was technically my PS2 but it moved back and forth between our houses like we both owned it. She had it now because she wanted to play Resident Evil 4 now that I had beaten it. \n\nShe shook her head, and then was silent for about half a minute. I turned the PS2 off and lay back on the carpet in her living room. It was comfortable, like our silence. I knew that she was considering something that she wanted to talk to me about. She took her time and really thought things through. I thought faster maybe, but she had a lot of discipline and foresight for someone her age.\n\n\"You want to kiss?\" she asked, suddenly.\n\nMy eyes shot open, and I turned my head, very slowly, to look at her. She laughed.\n\n\"Oh my god you should see your face right now.\"\n\n\"So...you were, what, messing with me?\" I was pretty hung up about some things when I was growing up. One of them was being big and looming and girls not being interested in me because of that or my other perceived flaws. It wasn't necessarily true, but it bothered me, and she knew it.\n\n\"No! Geez, calm the fuck down...I just meant like...we're friends, right?\"\n\n\"Right,\" I answered without hesitation.\n\n\"So, if like, I fucked up and wrecked your PS2 by dropping it or whatever, we'd still be friends, right?\"\n\n\"...Right.\"\n\n\"Right. So I'm supposed to go on a date with this dude next week. I mostly agreed to piss my mom off but he's cute and I kind of want to kiss him.\"\n\nShe looked over at me now, kind of serious. Even in my youthful state I could tell that she was worried about my reaction. We had been best friends since forever, but we hadn't really dated yet, and maybe she thought I'd be jealous.\n\nI wasn't. I was more envious that she had someone to make out with and, honestly, happy for her. She had told me recently that she was worried that she was too butch to be attractive, which was kind of ridiculous. Kerry was always beautiful, like her mother.\n\n\"Who is it?\" I said, curious.\n\n\"Jeff Stevens...don't laugh!\" she said, unnecessarily. Jeff was kind of a huge nerd but he was a decent guy as far as I knew, and it wasn't like he was hideous or anything.\n\n\"I'm not going to laugh. So...if you're dating him, why do you want to kiss me?\"\n\n\"Practice. Hear me out. If I fuck this up he may not want to see me again, right? And every time I think about kissing him I get kind of fluttery and nervous and I know I'm going to bite his lip or something stupid and then...ugh. But if we kiss each other and we fuck up, who cares? You'll just make fun of me for being a shit kisser and then tell me what to do better. And I'll do the same for you. You're gonna be making out with some good little church girl soon enough.\"\n\nI doubted that but as it turned out, she was right. She must have known that Judy, who went to my church, was into me. We were dating by the end of the summer. I ended up asking her out but only after I was assured by Kerry that it would go well.\n\n\"Hmm...I guess, if it's not gonna be weird afterwards. I don't want it to be weird.\"\n\n\"No...neither do I...so it won't be.\"\n\nI didn't quite follow her logic but I was thinking about her lips now, and how soft they looked. She licked them then, nervously, and that only added to their appeal. I wasn't really interested in her as a girlfriend, per se, but I could always imagine she was someone else, like Ibuki from Street Fighter.\n\nShe scooted over to me next to me, and I sat up. She leaned in and closed her eyes, I did the same. Our lips touched and at first nothing happened. It was pretty much like we each expected the other to do something. It could have been super awkward. Instead, it was magical.\n\nWe both sort of relaxed at once and let ourselves do what came naturally. I pressed into her softness and she pushed back. When she pulled away a little I got the hint that I was being too eager and backed up and slowed down, which brought her back to me. When her tongue darted in my mouth I made a little noise in my throat, involuntarily, and she responded, realizing that it was a good idea. Her tongue explored my mouth and I put my hand to her face, very gently and she leaned into it. We got pretty heated pretty fast. After a few minutes of this, we broke off, breathing very heavily.\n\n\"Wow,\" she whispered, \"you are not a bad kisser.\"\n\nAfter that we transitioned smoothly to making each other friendship bracelets out of string her mom had bought for her. I made Kerry a blue-green pattern that reminded me of the sea, and she made me one that was red and brown, two of my favorite colors. Like autumn leaves. I still have it in my home office.\n\nKerry and I kissed a few more times before I went home. We both got a bit worked up, but after that day we didn't kiss for a long time and things returned to normal between us. Mostly.\n\nShe dated Jeff for a while and I became friends with him. When they broke up for the summer (he was going out of town and neither of them was interested in waiting), it was largely drama free. \n\nIronically, most of the time with Kerry was drama free. Just not the really important bits.\n\nLater, during the summer I asked her what dating Jeff was like. I mostly asked out of curiosity. I kind of wondered what girls looked for in a date, having not had a 'real' one yet.\n\n\"It was fun. He was nice and laid back,\" she said and then added, after a moment, \"but you are a way better kisser.\"\n\nThat still makes me happy.\n\n----------------------------------------------\n\nNow - That Lovely Girl\n\n----------------------------------------------\n\nI arrived home to my mom running out and hugging me as soon as I got out of the car. It was good to see her. She was pushing seventy now but she still stayed busy and moved around perfectly well. If I'd let her she would have tried to carry at least one of my bags in for me. It was just her way.\n\nI got inside, got hugged again, then was poured the customary welcome-home cup of coffee. Now was the only part of being home I really dreaded. At least we got it out of the way early.\n\n\"Please don't take this the wrong way, but is Shanon all right with you being gone for so long? You know you're welcome to stay as long as you want, but...\"\n\n\"We're not together any more, mom.\"\n\nMom knew how I felt about her. I think I'd even told her that I was considering proprosing. Her expression was heartbroken on my behalf.\n\n\"Oh my goodness. What happened?\"\n\nOf course she'd ask the question that she probably didn't want the answer to.\n\n\"She cheated on me, mom. She wanted to try again but...I just don't trust her any more.\"\n\n\"I can't believe it! Shanon, cheat on you?\"\n\nShe sounded so surprised it was almost accusatory. I could almost hear her saying, 'James what did you do to that poor woman to drive her away?' Nothing mom, she just realized I had no value and decided to move on to my scumbag friend.\n\n\"Well, believe it,\" I said, a little more harshly than I meant, \"I'm not making it up. It's been...it's been tough. I don't really want to talk about it but I just needed to get away and I thought coming home was a good idea.\"\n\n\"Of course! I'm sorry, I didn't mean to be insensitive. I just...you seemed so good together.\"\n\n\"We did,\" I agreed, \"no one was more surprised than me. I just wish...well I wish she would have dumped me earlier. Or better yet, just told me she wasn't serious in the first place. Then we could have at least have ended up friends.\"\n\nMom looked a bit perplexed at that last part.\n\n\"Oh, honey. She was serious. I'm sure of it. I...I'm not defending her, and I think you were right to break up with her, but I'm sure that at one time she loved you.\"\n\nI laughed, bitterly.\n\n\"Well, that makes one of us. Anyway, I don't want to talk about it right now. I've felt sorry for myself long enough. How's your church stuff going?\"\n\nI asked her a ton of questions about her life and got caught up on her and her friends. She was a one-woman force of nature for charities all over town and was a trustee at her church. Even before dad had retired, she'd found a thousand small ways to help her community and insisted that it was selfish because she felt great about giving her time and effort. I wasn't religious, but I respected all of the things that she did. \n\nShe brought me leftovers, having already eaten earlier, and some homemade pie, which was naturally delicious. After that I listened to her give me an update of everyone we both knew. One name was conspicuously absent. I didn't ask about Kerry though as it was likely that she was still living on the East Coast with her husband. I'd been thinking about reaching out to her again. Maybe she'd be ok with at least talking on the phone, now that Shanon and I had split. God it would be wonderful to have someone like her to talk to again. I wondered if she had a friend out there who'd taken my place. It was possible, she was very likable. I never found anyone remotely the same, leaving a hole in my life that never quite filled.\n\nI broke out of my own stupor to ask the question that I should have when I first came home.\n\n\"How are you doing without dad?\"\n\nIn some houses this would have been too forward or intrusive. I knew that she wouldn't talk about this aspect of her life without being asked, however. She'd feel like she was inflicting her sadness on me right after I'd lost Shanon. Really though, that was a big part of why I was home, to remind her that she still had family and that she wasn't alone.\n\nShe smiled, sadly and reached out for my hand. I took it.\n\n\"I'm...I don't know. He would still travel quite a bit, even after going into partial retirement, but the trips were shorter and I went along sometimes. We were spending a great deal of time together. It was real, quality time, too. I never really got a chance to tell you about it, but the last years between us had been wonderful. I miss him. I reach for him every morning when I wake up.\"\n\n\"I'm glad things were better at the end. I'm sorry I wasn't around more for it.\"\n\nHe and I really didn't see eye to eye all that much. My father was, I suppose, a kind man. He treated mom well, mostly. But he neglected her too. She knew it, and it was in the background of our conversation now. She also knew that he made very little time for me. He was well-liked in the community, worked his way up to being an executive at a regional company that sold industrial equipment all over the world. He never had any trouble making new friends, but for whatever reason there was always a coldness to him with me. A reluctance to attend my performances at school or sporting events. Thankfully my mom didn't share that reluctance.\n\nBy the time I went to college I had given up on having a close relationship with him. Don't get me wrong, we weren't awful to each other. We didn't fight except for some pretty standard teen rebellion. He was just distant from mom sometimes, and me almost always. \n\nThe only part that hurt was seeing him behave as something of a mentor to other kids, my friends included. He was better to Kerry about helping her pick a college then he was with me. He liked having her around and thought that we were a good influence on each other. Hell, he even asked me if I was going to go to the same university as her. I don't want to give you the impression that he was weird with her, it was just like...like he saw something more when he saw us hanging out together. A thing that didn't quite exist, but maybe should have. I didn't understand it, but Kerry didn't have a father figure at home so I was more than happy to share mine.\n\nMom wasn't as big on us at first. She never told me or even hinted to me that I should stay away from Kerry. She was kind to my best friend too. It really wasn't until we both hit our teens that mom warmed up to her. I think it helped that we were so natural and supportive of each other without ever crossing over to being romantic.\n\nWell, that she knew of, anyway.\n\nAfter a while I went and took a shower and started getting ready for bed. I generally wasn't a person who stayed up very late, but I was shockingly tired for it being only 8 o'clock. I blamed the travel but I should have been more aware. Depression makes you tired, and this was builting into a big one. If I'd been paying attention, I could have felt it settling on me like poisonous smog.\n\nI woke up on Saturday feeling a bit better. Not precisely well, but relaxed. I saw that my phone had a new voicemail from a number that I didn't recognize. There were texts as well. I looked at one of them.\n\nPlease stop ignoring me. We need to talk about this.\n\nFuck. I blocked that number too. I was shocked that she'd go to these lengths. It may not seem like much to use a different phone when your primary one was blocked, but Shanon was very much about respecting the decisions of others. I guess that didn't apply to exes.\n\nIn any case, I figured she just wanted me to forgive her, or listen to a long-winded explanation. I wasn't really into that. I got dressed and went downstairs. \n\nMom hadn't made breakfast, not exactly, but she had gotten some of her home-made granola out with plain yogurt. I know how that sounds, but her granola was not what you buy at stores. She used plenty of honey and berries, and it was amazing. I smiled and hugged her.\n\n\"Did you sleep well?\" she asked as she passed me a cup of her patented strong black coffee.\n\n\"Yeah. Thanks. Are you working today?\"\n\nShe was already up and dressed and that usually meant that she had some volunteer work.\n\n\"Yes. I hope that's ok. I can cancel some of my normal things if you want...it wouldn't be a big deal.\"\n\nI shook my head. My plans for the weekend mostly included wandering the neighborhood and town, visiting my dad's grave, and trying not to think of Shanon. I didn't want to disrupt my mom's work, in any case.\n\n\"Nah. I'll see you later this evening. You're going to be sick of me by the time the holidays are over.\"\n\n\"Never. I'm just so happy to have you around for a few months. It will be wonderful.\"\n\nAs I drank my coffee and read the news on my phone, she got ready with her typical speed. \n\n\"All right, I'm off. Have a great day, and try to relax a bit, all right? Love you\"\n\n\"I will. Love you to.\"\n\nShe was halfway out the door when she stopped, hesitating.\n\n\"You know, that lovely girl got divorced recently. She's staying with her mother.\"\n\nThen she was gone. I sat there, coffee halfway to my mouth, frozen. Only the sound of the car starting and driving away woke me from my daze.\n\nJesus mom, way to drop the mic on your way out.\n\n'That lovely girl' was how my mom referred to Kerry. It always had been. When I had been in elementary school, it might have had a cold edge to it, but around middle school it became a term of genuine affection and warmth. It was truly how mom thought of Kerry: lovely on the inside and out. \n\nI didn't have anything like a current number for Kerry, and we weren't friends on Facebook or anything, so I had no idea how to reach her. I could just drop by her mom's house. No, that seemed a bit too presumptuous. I'd ask my mother for details tonight, and then I'd reach out if it seemed appropriate.\n\nI distracted myself in the morning by raking the leaves, cleaning the front and back yards and filling around ten large bags. I'd have to do it again before Thanksgiving but I didn't mind. It was worth it for all the oaks that grew in our yard.\n\nAfter that I just went for a walk. I let myself wander, taking in the old sights and sounds. I stopped by an old diner for lunch, ate a decent Reuben and some truly excellent lemon meringue, and then went to the cemetery. There was only one in town, and it wasn't exactly well maintained. I would clean up dad's grave if I had to, bringing my own tools if needed.\n\nWhen I got there, however, it was spotless. Someone had definitely cleaned it recently, probably mom. The other graves had old flowers on them, tiny flags which had gone to tatters, and even some beer cans. Speaking of flowers, there was a rose on his headstone. Just one. Yeah, I guess mom had definitely been here recently. It was still nice to visit, in any case. It was quiet here, and the same river that ran by the downtown ran behind the cemetery, making it seem like a part of life instead of opposed to it. \n\nI stopped by the grocery store on the way home and got some basics to make pasta and salad, as well as a six-pack, which frankly felt like some required medicine after last week. Then I watched college football, napped, and got up in time to make dinner by the time mom walked in, all smiles.\n\n\"You didn't have to clean the yard or make dinner. You're supposed to be on vacation!\"\n\n\"This is vacation,\" I said, laughing. \"No meetings or arguments over edits or corrections. No getting badgered to contribute to yet another textbook. Just sweat and distraction. Its perfect.\"\n\nShe got cleaned up and we ate. We talked about nothing important, mostly I listened to her explain the food drive that she'd been working on and the kind of people that they'd been helping. Eventually she asked me about my day, and I told her about visiting dad's grave. Before I could say anything specific, mom surprised me.\n\n\"I'm glad you visited. I still can't without breaking down, but I try to get out there once a month. Is the site all right? They let things get so bad there sometimes.\"\n\nI decided not to get too specific. If she hadn't kept it in shape then who had?\n\n\"Yeah. It's actually quite nice.\"\n\n\"Good. I feel awful about it, but I don't want to be a mess in public.\"\n\nAfter I cleared the table I did the dishes. I intended to be at least somewhat useful while I was around. I knew I'd find mom in her favorite chair reading in the living room. It was how she preferred to spend her evenings if there was nothing going on with her circle of friends. I decided to do the same but on our ancient but comfortable couch. \n\nI couldn't help but think of the last time I'd been on it with Kerry. My rather heated memory was interrupted by my mother.\n\n\"So. Did you visit her house today?\"\n\n\"I'm sorry. Who are you talking about?\"\n\nShe snorted.\n\n\"Don't play dumb with me, young man. Did you go by Kerry's house? I know that her mother still lives there and that she moved back after the divorce finalized.\"\n\nI would always be 'young man' to her when I was misbehaving. Never mind that I was officially in my thirties now.\n\n\"I didn't. It seemed...I don't know. Presumptuous.\"\n\nMom lowered her book at looked at me over her glasses.\n\n\"Why would you ever think that? You two were close. Her mother asks about you when we run into each other. You'd be welcome there just like Kerry would be here.\"\n\n\"She stopped talking to me. Well, I mean, she's not ignoring me, but once she got married and I met Shanon, she never really wanted to talk for more than a minute or two. I stopped reaching out. It felt like I was bothering her.\"\n\nThis was the second topic that I didn't want to discuss, and the other way to immediately bring back my depression. Losing my ability to connect with Kerry was almost as bad as if I had to go to her funeral, just dragged out longer. In my head it was further proof of my lack of value. I tried not to dwell on it.\n\n\"I don't know why she did. Maybe she was trying to save her marriage. I can tell you that she doesn't that know you're in town, though.\"\n\n\"Why is that?\"\n\n\"Because if she did, she'd be on my doorstep in twenty minutes, asking me if you were here, just like old times. If you don't trust your judgement, then trust mine. Go see her tomorrow.\"",
        "I disagreed with her optimistic assessment, but then again, I knew I was feeling down, and was probably not thinking entirely straight about such things. I sighed.\n\n\"All right, I'll head over tomorrow afternoon.\"\n\nThe rest of the night was peaceful, the sound of the autumn wind making me feel lonesome but nostalgic as I drifted off to sleep.\n\nI woke up the next morning to five new voicemails. Five. No texts at least. I thought about listening but the idea made me feel nauseous. I showered and dressed and went downstairs.\n\nMother, in her infinite mercy and wisdom, had not asked me to go to church with her but rather had let me sleep in. It was close to eleven now, and I knew she had a standing lunch with a few other couples afterwards so I'd be on my own. I ate a muffin that she'd left for me, then I decided to stop hesitating and just walk over to Kerry's.\n\nI realized that I was being a coward by arriving around lunchtime. I thought that if I ran into her and she was eating, I could just drop my number off and she'd call me if she wanted. No fighting and limited awkwardness. I knew her and her mother weren't church people, but if they went out to eat somewhere I could leave a note or something. That seemed like the best possible option to me. In my mind, Kerry had already coldly told me that she really didn't have the time to talk and I was preparing myself for the long walk back home. \n\nThe way was beautiful, though. The gray skies, traditional this time of year, had cleared enough so deep blue was visible. The trees were vibrant and shook in the gentle breeze. It was chill enough that I was glad I wore a sweater but not truly cold. I decided to take the \"fast\" way over.\n\nInstead of taking streets like civilized people Kerry and I used to cut through two small parks and some unincorporated land that had an old ruined factory on it. It was older and even more decayed, but still there. The path brought back many memories. Running back and forth, getting caught in the rain, holding hands in our junior year as we strolled together, before excitedly making out or more at one of our houses or even in a secluded part of the park.\n\nI arrived entirely too quickly. I couldn't believe how sweaty my palms were. The two-story yellow house was not large, but certainly not downscale. It had clearly been repainted lately, and there was a new heating and cooling unit outside, so hopefully her mom was doing well.\n\nI knocked. I waited for what was probably half a minute, but felt like hours. The door opened. It wasn't Kerry but her mother. For a moment, I thought that I must have made a terrible mistake by coming here.\n\nKerry's mother looked well. I knew, of course, that her first name was Judith but even then I'd have had a hard time calling her that. When she saw me, though, her reaction almost made me stammer an apology and leave. Her face turned from one of general welcome to shock and then an intense sadness. It happened fast but I'm sure that I didn't make a mistake. For a moment she closed her eyes, and when she opened them again, she was smiling. I was relieved. It was real happiness to see me, the kind of positive surprise that is very hard to fake.\n\n\"James. It's so good to see you. I'm sorry for the way I must have looked a moment ago, I was just...well going over some old pictures and they brought back memories.\"\n\nShe stepped out and hugged me, looking me over. I don't know if she had been looking at pictures or not but I wasn't going to push. I was just grateful to be accepted.\n\n\"It's good to see you to, uh, Judith. You look amazing. Sorry for just dropping by.\"\n\nShe really did look great. She was just wearing jeans and an old t-shirt, but even in her early fifties she'd turn heads almost anywhere. Her hourglass figure was timeless and her eyes were piercing.\n\n\"You look great, too. You never did let your appearance slip, like so many men do when they hit a certain age. And you never, ever need to apologize or call first. You're family here, you know that. But I know why you're here, and unfortunately Kerry isn't here,\" she must have seen my disappointment, because she quickly added, \"but she should be back later this evening. You could leave your number or you could just come back around seven-ish?\"\n\nEven after the greeting I had gotten, I didn't really want to surprise my old friend. I wanted to give her a chance to avoid me if that was what she truly wanted.\n\n\"Let me just give you my number. She can call if she wants to hang out. I'm going to be in town through the holidays, so she doesn't have to rush.\"\n\nWe chatted for a bit. Judith told me that she'd been promoted to director of midwestern sales, which pleased me. She did work very hard and I'd overheard some of her more intense phone conversations with her superiors and irritated customers. After a few pleasant moments and sharing some of the exiting world of textbook writing and editing, she smiled at me knowingly and disappeared inside. She showed back up with a paperback book and a pen.\n\n\"If you're going to talk about what kind of work you do, you should at least share some of the more exciting things. Can I get this autographed?\"\n\nShe handed me the book and I almost laughed out loud. My mother must have told her. It was something I had written, the first of a series of books. Historical adventure/romance with a bit of horror. I really enjoyed writing them but there was no way they would support me so they were just a hobby, at best. They had a small but devoted following and decent reviews. I honestly never thought I'd run into a reader in my hometown, even if my mom had probably given her a copy.\n\n\"Oh god. I can't believe you'd read this guy,\" I said, signing my name with a little flourish and writing a note about how kind Judith had always been to me, \"I hear that he's kind of a jackass.\"\n\nShe laughed, and it was a delightful noise. \n\n\"A published author and he swears now! Will wonders never cease?\"\n\nI laughed too and handed the book and pen back to her. As I turned to leave, she spoke again.\n\n\"James.\"\n\n\"Yes?\"\n\n\"She really is going to want to see you. I don't know why you're so worried, but I can see that you are. Don't be. You...you both have been through a lot over the last year. Her with the divorce and you with your father. I think you would be good for each other. Like old times.\"\n\nI smiled at the thought.\n\n\"Like old times,\" I said, wondering if she suspected what that meant to me.\n\n----------------------------------------------\n\nThen - Hidden Signs\n\n----------------------------------------------\n\nMiddle school ended and Kerry and I became freshmen together. She really started applying herself to sports, paying serious attention to her performance on the soccer field and basketball. I was not a sports guy, but I stayed in shape and I worked out with her sometimes, and helped her run drills when she needed. We both became more serious about our grades, and I started to write for the first time, which became a lifelong habit. Naturally, Kerry was my first reader and critic. \n\nWe didn't mean to, but we grew closer. When Kerry broke up with her second boyfriend, Mark, she was messed up for a while. They went out for dinner and fought over something small. Now in an uncomfortable silence, they took a shortcut through a local park, which was deserted at night. About halfway back he tried to kiss her, and she wasn't interested. He grabbed her arm, hard, and pushed her down onto the grass. He might have done worse if a jogger hadn't seen them and run over. \n\nIt hit her hard, knowing what kind of guy she was seeing. She had almost certainly been in love with Mark, although I never heard her use the word. She broke up with him over the phone and told him to leave her alone. He kept after her for a while at school, so I told him, a little more firmly. After his nose stopped bleeding he was much more agreeable.\n\nI dated Judy and then broke up with her after I found out she was chatting with some other dude on MSN Messenger. It wasn't anything major, really, and I wasn't into her that much. We both grew up a little and were friends by the end of high school. \n\nI guess its important to mention because it was the first time I remember feeling betrayed by a girl. It's not fair to apply the actions of one person to a group, I know, but after it happens a few times, it gets harder. Every time, I was tempted to try and feel bad about women in general, I reminded myself that was how jackasses thought, and I remembered people like my mom. And, of course, Kerry.\n\nAfter Judy came two other girls. The first was a really lovely girl who just wanted to make out. We broke up mutually after a few months when I met Beth. Beth and I were together until late fall and were pretty serious until her parents moved in mid-winter. \n\nWhen Kerry broke up with Mark I was there for her. I held her while she cried, let her sleep at my house when she felt unsafe, and listened to her just talk the whole thing out. When I felt betrayed my Judy, Kerry listened to me vent and then offered to beat her up for me. I declined but it was a nice offer. When Beth left I was much more of a sad wreck, and she listened to me then too, but more than that, she was just there. I don't know how to describe it, except that I needed someone to be around and she was, as much or as little as I needed, no questions asked.\n\nWe didn't mean to, but we grew a lot closer. I don't think there was anything that I wouldn't have shared with her by the start of Sophomore year, and I certainly never thought that she'd hold anything back from me. I write that now and I still think it holds true. I'm just less naive than I once was.\n\nThe day that I should have been smarter was in early fall, sophomore year. I'd just gotten my first flip phone (a state of the art Nokia Razr) as a \"back to school\" gift from my dad so I was super excited to get a call on it. I assumed that it was yet another guilt-gift for basically never being around. I'd long given up on having a close relationship with him, so I just decided to appreciate it.\n\nThe first call I got was my mom reminding me to get some milk on the way home later that night. I learned early on that the price of this phone was that I became mom's errand boy. It was well worth it.\n\nThe second call I got was from Kerry. She spoke calmly, acting as if it was no big deal, but I could hear it. She had the same kind of tremor in her voice that she had when Mark had tried to hurt her. She asked if I could come over if I wasn't too busy. I had plans that night to hang out with some friends of mine and go see a movie, but I cancelled them without telling her. I didn't push over the phone but I just knew that whatever she called about was important, at least to her. So it was important to me too. \n\nShe let me in the door and then she hugged me. We had never shied away from physical affection, and we cuddled on the couch when we watched movies or whatever. That alarmed her mom and my dad, respectively, but once they saw that we never really did anything other than that, they stopped making a thing out of it. All that being said, Kerry was not and is not a hugger. At least not as a greeting, so that made me more worried.\n\n\"Thanks for coming.\"\n\nHer voice was soft, her ebullience muted and replaced with a somberness. She couldn't meet my eyes.\n\nHer mom wasn't home so we just went and sat on the couch together. She wasn't ready to speak so I just handed her the chocolate bar that I'd picked up for her on the way over. She just stared at it for a long moment, and then opened it and had a bite before offering me some. I declined, as it looked like she needed the whole thing.\n\n\"I can't believe how well you know me. I fucking call you and tell you it's no big deal and you show up with chocolate. I shouldn't ever try to keep anything from you. It's pointless.\"\n\n\"What's up?\" I said, finally. Internally I was going a little nuts. I mean, she looked like she was hurting pretty badly and I didn't know why so my depressive writer's brain was making up all sorts of scenarios, each one worse than the last. I didn't guess it, as it turns out.\n\n\"I...I don't know if I can talk about it. I know how ridiculous that sounds, calling you here and then acting like a fucking diva, but...the thing is, it's not really my secret to tell. So I don't think I can share it. Not yet anyway. Are you ok with that?\"\n\n\"Um. Yeah. I can just be here if you need me to. But you know you can tell me anything.\"\n\nShe just smiled, sadly. I put my arm around her and she just leaned into me, almost limp, completely vulnerable. We just sat there for probably a half hour, occasionally saying something to each other but mostly remaining silent. The light outside started to turn that beautiful orange that only seems to exist in your hometown in autumn. When she spoke, she did so hesitantly.\n\n\"Do you...do you think something good can come from something bad?\"\n\n\"Like what?\"\n\n\"Like...say someone steals something. A car or something big. And they do it knowing its wrong, and they don't feel bad or stop. But then his brother borrows the car to get his wife to the hospital or something. If he didn't have it she wouldn't have made it. God, that is the worst analogy ever.\"\n\n\"No, I think I see what you're getting at. The first guy still did something wrong, but that doesn't mean that his brother did. Especially if he didn't know where the car came from.\"\n\nAlthough I wasn't telling her what I thought she wanted to hear, this seemed to brighten her mood a little. But she frowned again.\n\n\"But what if, like, it hurt someone, too. Maybe more than one person. What if it hurt you or your mom, for example?\"\n\n\"Ok, you're losing me. Do you mean like someone kills us and then steals my mom's car or something?\"\n\nShe laughed.\n\n\"No...like say that someone...I dunno, beat you and your mom up, then took your car and gave it to me. I don't know where it came from, and I use it to drive you to school and we become great friends because of it. Is the second thing still good? Or is it ruined because of the first?\"\n\nI was totally fucking lost.\n\n\"How would I not know you were driving me to school in my own car?\"\n\n\"Oh my god, I don't know, because we fucking re-painted it or something. In any case, I didn't know it was yours so it was repainted before I got it. Am...am I bad for driving the car?\"\n\nIt was, for me an easy answer.\n\n\"No. Of course not.\"\n\n\"What if...if the thief broke your leg? Or like put your mom in a coma...or...\"\n\nI held up my hand to stop her. She was actually looking like she might panic for a minute.\n\n\"Even if I died, you'd still be fine. You didn't know, and you were just driving a car. I don't know what this is about but I don't think someone else's sins can fall on you. I mean, the bible says something about it but the bible says a lot of things.\"\n\nShe wasn't religious but I still was.\n\n\"It's...its just something that someone in my family did, a while ago. And I didn't know about it, but it really bothered me. Because...he's...they're my ancestor, you know? And if I resulted from that and...wouldn't that make me bad, too?\"\n\n\"I don't see how. Your like the most perfect girl I know.\"\n\nI realized right after I said it how it sounded. I hadn't meant it like a romantic thing, just a statement of fact. Of all the girls I knew, she was pretty, smart, and a really good person. It made sense in my head. I was all ready to explain it away when I saw her face. \n\nAt first there was a little shock at what I'd said, then a small smile. That was pretty much what I expected. She was used to the way I spoke, and I tried to be very honest with her about almost everything. After that, though, her eyes got really big and her smile went away. There was something a lot like grief in them. Grief in something she'd lost? Or couldn't have? Over something I represented to her? I didn't know. It went away, to be replaced with what I came to think of as her adoring smile. It was in fact the first time I'd ever seen it, and I didn't really understand it. But she wasn't sad or worried, so I was happy.\n\nThen we hugged again, on that couch. The couch that I have so many memories of, before, but especially after this day. The hug lasted too long, but neither of us let go. I was aware of her small breasts pressed against me, and the heat of her body. And then I leaned in and kissed her. For a moment she seemed to be on the verge of pushing me away, stopping me. I thought I'd gone over a line, was ready to apologize, but then she responded. And it was amazing.\n\nIt was just like the first time, except both of us were more experienced. If anything, we ebbed and flowed naturally, like we were made for each other, for this very moment. We made out for only a little while this time, but our hands roamed a little. Mine went as far as her ass, and she didn't stop me or complain. Hers ended up tangled in my hair and around my neck. I was pretty much ready for anything in the moment, but she drew back and put her hand on my chest, I stopped. I was worried that she'd be mad but instead she smiled warmly at me.\n\n\"That felt nice. Thank you.\"\n\nIt was as sudden as a summer storm and over just as quickly. We looked at each other and then just broke out in laughter. It lasted for a few minutes. I don't know what exactly possessed us in the moment, but by the time I left that night, we were back to pretty much normal. Again, I think we were closer, but neither of us really talked about it, nor was there any awkwardness between us or any attempt us to go farther. For my part, I really didn't want to ruin what we had and I already had my eye on a girl in my history class. I noticed that Kerry was a bit less physical in how she showed me affection for a few weeks, but after that she was cuddling on the couch with me again. I thought of the incident as an aberration. A very emotional moment where we connected. That's all.\n\nI should have asked her again later what she was talking about. I should have asked myself why, after being pretty active in the dating scene for a few years by then, she just stopped going out with guys at all. Instead, I didn't ask any questions at all.\n\n----------------------------------------------\n\nNow - Reunited\n\n----------------------------------------------\n\nI grabbed a sandwich from the only deli in town and then walked home, trying to contain the feeling of anticipation that threatened to break out into pure optimism since I knew for sure that Kerry was in town. Despite what her mother had said, I didn't believe that she wanted to see me. I expected a polite, if distant, call, and maybe meeting for lunch at some point. I knew that I would take any opportunity to see her, though, even if it left me feeling a bit down.\n\nWhen I got home I decided to keep myself busy. There were a number of small things that needed doing around the house. I knew that mom was probably making a list and intended to hire a handyman to do all of it at once. I could save her a bit of money at least. I walked around and made my own list of things that I might need from the hardware store. When that was done I got my dad's tools and started working on things that I could fix right away.\n\nI fixed some bad wiring in a light fixture in the hallway. I took a wobbly end table out to the garage and tightened and braced one leg. I cleaned the filter on the dishwasher. I was busy changing the filter and cleaning other parts of her central air and heating when she got home.\n\nAs I expected, she made me stop but was happy. She'd brought me some food as well and I was surprised to be hungry already. \n\nAfter I ate I was sitting on the porch and thinking of working out when my phone rang. \n\nIt was a number that I didn't recognize. I was so looking forward to hearing from Kerry that I answered the phone without thinking about it. It was not her.",
        "\"Hello,\" I said, my voice upbeat.\n\n\"James? Oh god finally. I'm sorry but I just...please hear me out...\"\n\n\"Shanon,\" I said, flatly. I couldn't believe how stupid I was.\n\n\"Look, can't we talk? I know...I know I fucked up, ok? I know, but if we could just meet...I know we can work this out...\"\n\nShe was desperate in a way that I had never heard before. I didn't really understand why. We were done and she had the guy she wanted.\n\n\"Why are you doing this, Shanon?\"\n\n\"Because...because we had something. We have something. I love you. I do...and if you give me a chance I'll prove to you that I'm still...\"\n\n\"How does Gary feel about you calling me?\"\n\n\"I'm not seeing him any more. I cut things off. I did it for us. I don't want him...I never did.\"\n\n\"Then why did you fuck him, Shanon? I'm not trying to be cruel, I'm really not. There's just no way I can trust you anymore. You have to know that.\"\n\nI could hear her crying now. In my mind's eye I could even see her trying to control herself. She hated crying in front of people, it made her feel like she was manipulating them.\n\n\"Please...James, I...just meet me for coffee. I'll do...\"\n\n\"I'm not even in town, Shanon. I'm sorry for the things I said. I truly am. I was hurt and I hurt you. That's how I am. I believe that we had something, but it's broken. If we stayed together, I'd never trust you and you'd resent me and it would end the same way.\"\n\n\"James, I...I just...\"\n\n\"Talk to someone, Shanon. Just not me. I can't take this. It hurts and I can't take it. I hope that you have a good life. Please don't call me again.\"\n\nI hung up. Fuck. I felt like a wreck, exactly the same as I had right after she had told me that she'd cheated on me. I would have told her that but it just would have hurt her more, and I no longer wanted revenge. I only wanted to feel better, like before I knew. \n\nNo. Even then, I wasn't completely fulfilled. Maybe it was selfish, but I wanted to feel like I used to. Like Kerry made me feel when she looked at me with that simple, adoring, smile.\n\nI heard a noise and saw that mom was looking at me through the screen door. I offered her a wan smile by way of greeting.\n\n\"I'm sorry. I came to ask if you'd like some tea and I overheard the end of that. Are you ok?\"\n\nI sighed. She could be intrusive if she thought she could help, so this was downright restrained of her.\n\n\"No, but I will be. And yeah, I'd love some tea, thank you. Whatever you're having will be good.\"\n\nInstead of working out, I went inside, got my laptop and did some writing at the kitchen table. If I couldn't have what I wanted then I'd drink my tea and write some escapist trash. My world of fancy, at least, was a place that I didn't feel like this. I didn't even really exist there, I just observed the characters that I wrote, doing the things they did. I even wrote it in third-person so I could keep my distance when bad things happened. When I, the cruel god of this world, hurt them, I could sit back and congratulate them on their ability to survive and grow, without having to feel what they did or feeling responsible for the awful things in their lives. Maybe I'd kill some of them today.\n\nAfter an hour or so I realized that instead I'd written my main characters something like a good ending. Not a perfect ride off into the sunset, but people who had been hurt by each other or by chance were recovering, finding each other. I couldn't even hurt the people that I'd made up without giving them a chance to be happy. I wondered what kind of psychopath the creator of our world was, to give so many people such bad endings.\n\nI wasn't truly religious anymore, but I believed in some things still. Just not in things that would help those in need. I felt tired from the catharsis, like I'd actually walked alongside them. And, to be honest, a little better too. The odd cast of light in the room let me know that I'd been at it for longer than I'd thought, and that twilight had arrived. I was just thinking how I needed to get the hell outside of my head for a bit when a loud knocking made me jump. \n\nIt was at the back door, which was right off of the kitchen. I took a deep breath and stood up, wondering who would use the back door on a Sunday. Knowing that my mother was most likely napping in her room, I decided just to answer it.\n\nHer light brown hair was is in a long ponytail. She was wearing a large earthy red sweater that was loose but hugged her curves and hung low over her waist. Tight, worn jeans completed the ensemble. Her eyes were still that sharp blue and there was an eager little smile on her face, familiar to me as my own. Her ears and face were a bit red from the wind that had picked up in the afternoon and I thought that she should have worn a hat.\n\n\"Hey,\" Kerry said, as though it were over a decade ago and she was just coming over to play some Street Fighter.\n\nI just stood there and blinked for a moment. Her smile went away and her brow furrowed. I saw a duplicate of my own fear of rejection looking back at me. I came back to myself.\n\nInstinctively, perhaps foolishly, I just stepped out and hugged her. She hugged me back, hard. Feeling her warmth against me was, even more than stepping into my old house, like coming home. I finally let her go, but I didn't want to. We stepped back and I was grinning and her smile had come back far wider than before. We were somehow holding each other's hands, but I didn't remember doing that.\n\n\"It's good...\" I started.\n\n\"Yeah. It really is,\" she said.\n\n\"Come on inside, you must be freezing. You want tea? Coffee?\"\n\n\"I'd like an Irish coffee but something tells me that your mom doesn't have any single malt laying around.\"\n\n\"No, not even communion wine, but we do have some really great fair trade Kenyan blend.\"\n\n\"That sounds great.\"\n\nI got the coffee out and started the water. This was a french press house, so I had to grind it first. Kerry watched me as I worked. She made no attempt to hide it and it didn't make me self-conscious. If I hadn't been focusing on my task then I'd have been staring at her openly as well.\n\nI turned around and leaned against the counter while we waited for the water to boil. I wanted to walk over just to be closer to her but I resisted. She seemed to want to reconnect right now and I didn't want to ruin anything by being overly eager.\n\n\"When did you get back?\" she asked.\n\n\"Friday night.\"\n\nShe actually looked a little upset.\n\n\"You didn't come over on Saturday?\"\n\nI couldn't help but chuckle a little.\n\n\"I didn't want to just rush over there like a dork. I'd just gotten in and I wasn't even sure you'd be there.\"\n\n\"Didn't your mom say I'd be around?\"\n\n\"Um. She might have said something like that. To...to be honest, I wasn't sure that you would want to see me. And I didn't want to deal with that right now.\"\n\n\"Why would you think I wouldn't want to see you?\"\n\n\"The last two years are what made me think that you wouldn't want to see me.\"\n\nIt was a little more direct than I intended and I'm sure that I came off a little harshly, but it was true. She stopped for a minute and looked down at her hands.\n\n\"I'm sorry. I know I haven't been a good friend. Things were...well, complex. Can we leave it at that for now? If you still want to know, ask me after I've had something to drink, ok?\"\n\n\"Fair enough,\" I said, sighing. \"How are you holding up? I mean, after the divorce?\"\n\nI expected more frowns but I got a laugh, slightly bitter.\n\n\"James, I'm holding up great. I'm stuck here right now, but I'm out of that house, and he's out of my life. Really, seeing you today is the trifecta of awesome.\"\n\n\"I'm sorry that things didn't work out, even if I am benefiting from you being here.\"\n\n\"Thank you. It's not like he's the worst person. He just wasn't who he led me to believe that he was. And when I realized it, we were tied together financially, had a house, and I felt like leaving would be like admitting defeat somehow. I'm so glad we didn't have kids. It would have made this all worse.\"\n\n\"What happened? If it's ok to ask.\"\n\n\"It is. He liked to spend money on women that weren't me. Oh, and fuck them, too, although by the end that was less of a concern. It would all bother me more, but I still have a job, and I'm out of debt, so I consider it a win. Really, if I compare this year to the last five, I'm on an upward trend.\"\n\n\"What a fucking dick,\" I said, feeling my face grow hot, \"I can't believe that he'd do that to you.\"\n\nI'd never been a guy who was interested in more than one woman at a time, and I really disliked cheating. And of course, I had a hard time seeing any situation in which I'd cheat on someone like Kerry.\n\n\"Of course you can't. Because you never would. Also my mom was right, you are swearing now.\"\n\nThere was a trace of the old adoring smile there. It disappeared quickly and I wanted it back. She went on.\n\n\"Where's Shanon? Is she not visiting this time?\"\n\nThere was anxiety, an edge to her voice. \n\n\"No. Not ever again, either. We broke up.\"\n\n\"Oh. I'm...actually really surprised. What happened? I mean if you don't want to talk about it...\"\n\n\"Nah. Its still fresh but I'm not keeping it a secret, at least not from you. She fucked one of my friends.\"\n\n\"Holy fuck, James. What a fucking bitch.\"\n\n\"I mean, she was so...so honest, so straight-forward. I never would have expected it. I probably wouldn't even have known if she hadn't told me. Granted, she did a bad job of it, but still.\"\n\nI found myself wanting to defend Shanon still. \n\n\"How did she tell you? Did you get a text?\"\n\n\"No. She showed up after work with the guy she was sleeping with and 'they' confessed everything. I know that it wasn't his idea. He'd have just kept it up because she's hot and he'd always wanted to fuck her.\"\n\n\"What the fuck is wrong with her? Oh my god I can't believe this!\"\n\n\"You seem more upset about this than about your ex-husband cheating on you.\"\n\n\"Well, believe it or not I've had some distance on that. I was super-pissed at the time, and it was ugly, but none of them were...were my friends. That's really low, James. She has to know that. Did she even apologize?\"\n\n\"Yeah. I told her to get out. That we were through, but I think she must have known that already. She's still fucking calling and texting. I blocked her but she just uses different numbers. I don't know why she's bothering. I'm glad you just showed up, honestly. I didn't want to risk answering again.\"\n\n\"Mom told me you were here so I dropped by on my way back from helping someone move. She obviously wants to work things out with you. Do...do you want to get back with her?\"\n\n\"A part of me does. A stupid, masochistic, part of me that remembers all the good we had together. The rest of me also remembers the fights we had and the distance that was coming between us. A lot of that was my fault, but we're very different people, cheating aside, and I think it would just end with us really hating each other.\"\n\n\"It's not stupid to want to go back to her.\"\n\nI laughed. \n\n\"Are you saying you approve?\"\n\nShe looked away from me.\n\n\"N..no. I'm just saying. Its obvious she wants you back. And, you know...\"\n\nShe trailed off into an uncomfortable silence. It was odd, to say the least. A second ago I was sure that Kerry would have beat the crap out of Shanon, and now, she seemed to be encouraging me to try again. \n\nThe kettle whistled, making both of us jump. We looked at each other and laughed. I put the water on the coffee and brought the press and the cups to the table, where I sat on the side of the table, close to her but not right beside her, like I really wanted to be.\n\nHer face had a few lines on it, but I wouldn't call them wrinkles. She still looked much younger than someone in her thirties, at least to me. Maybe to me she'd always be that beautiful teenager that I'd fallen in love with. Her eyes were still amazing.\n\n\"Stop it,\" she said, laughing, \"you're embarrassing me.\"\n\n\"Are you blushing?\"\n\n\"No!\"\n\n\"You totally are! You're blushing!\"\n\n\"Only because you're looking at me like a weirdo.\"\n\n\"Yeah, I'm sorry. I didn't mean to be a creeper, I just...\"\n\nShe grew serious. \n\n\"You just what?\"\n\nIt reminded me of a different time, when I'd told the truth and been rewarded for it. Then I had simply been too stunned to lie. Now I told it on purpose.\n\n\"I'm just amazed at how beautiful you are. I probably always will be.\"\n\nShe leaned over the corner of the table and kissed me, smooth and fast. I knew exactly how she wanted me to respond and I did. The kiss lingered, but didn't intensify. We kept at it for a little while, then broke off, just looking at each other, in the eyes, inches apart. I was aware that she was breathing more heavily. Who knows where that would have gone if I hadn't heard my mom making a polite noise. \n\nI didn't feel bad about being 'caught,' per se. We were both adults who'd known each other from childhood, and it didn't seem like my mother was surprised or disapproved of us being romantically involved. Kerry jumped back so hard she almost tipped her chair over, which would have been funny if not for the fear on her face, which I found pretty confusing.\n\n\"I didn't mean to interrupt,\" mom said, \"I walked in just a moment ago.\"\n\n\"Oh god,\" Kerry said, \"I am so sorry. I just, um...\"\n\n\"Its fine, dear. At my age I'm not going to start judging two adults for taking comfort in each other.\"\n\nI don't think either of us expected her to say that. \n\n\"Can I get some of that coffee? Then I'll leave you two alone to catch up.\"\n\nI poured for all of us. Mom wanted hers black as midnight, I used cream, and Kerry liked a ton of milk and sugar in hers. Mom nodded and left, and for a bit we drank our coffee in silence.\n\n\"That is just so embarrassing,\" Kerry said, softly.\n\n\"Really? I mean I know when we were kids we kept everything a secret, but now...it just seems odd. Mom made sure I knew that you were in town, she was definitely encouraging me to see you. Hell, your mom seemed to be encouraging me too. If I didn't know any better I'd think that they were conspiring together.\"\n\nKerry's eyebrows shot up.\n\n\"No. That would just be...too weird. I mean, not that I would mind, its just. Ugh. Can we just say it's a lot to take in right now and change the subject?\"\n\n\"Sure. You want to get out of here and go for a walk after this?\"\n\n\"Oh god yes. I don't think I could look your mom in the eye right now.\"\n\nKerry's odd embarrassment aside, we finished our coffee and left into the early evening. It was dark already, and the wind made the leaves rustle in the trees. The smell of fall was everywhere.\n\nAs we strolled down the little residential street, I reached out and took her hand. She squeezed it and then leaned into my arm, like she used to.\n\n\"It's nice just to be here with you, like this.\"\n\n\"Yeah.\"\n\n\"So are we going steady again?\"\n\n\"Going steady? I don't know,\" I said with false reticence, \"we did just meet...I don't want to seem easy...\"\n\n\"This is true, but your mom saw us kiss. That has to mean something.\"\n\n\"Speaking of which, why did you get so embarrassed?\"\n\nKerry froze for a moment as I walked a few more steps forward.\n\n\"I just...I guess I was still used to us being friends-only in public...\"\n\n\"I mean, I could understand the secrecy from back in the day. We'd been friends for so long and our parents trusted us and it might have been weird, and we didn't want them separating us or preventing us from being alone together. But now? Are you ashamed to be with me?\"\n\nHer expression turned to shock, her eyes wide and earnest.\n\n\"No! Never that...just...you know, give me some time, ok? I wouldn't have any trouble being out with you anywhere. In front of my friends or anyone. Its just...well its weird to do in front of your mom. But I won't be weird about it any more, ok? I'll be open. Hell, I'll go on Facebook and change my status if you want me to...\"\n\n\"That's not necessary. It just used to worry me, when we were kids. Even when we were so close. Even when my dumb teenaged brain wanted to run off and get married with you. I was always a little worried that it was a joke, or that I was just someone to fill the time, and that I was a secret because you were ashamed to be with me.\"\n\n\"No, James. Never. I...I should never have made you keep us secret.\"\n\nI shook my head.\n\n\"Don't feel guilty. I'm talking about what I feel, not what others make me feel. I've had a long time to deal with...that voice.\"\n\n\"That voice?\"\n\n\"Sorry. That's what I've taken to calling my depression. Its been worse in the last few years, but its under control. I don't think you ever meant to hurt me, not really.\"\n\nShe smiled, warmly, and took my arm again. We started walking in the dark.\n\n\"Good. Because to be truthful, I was proud to be your girlfriend. I just didn't want to mess us up.\"\n\nI believed her. I had to. She was the dawn to the night that my life had become.\n\nWe told each other about our lives, our accomplishments, our small victories and minor defeats. Falling into old habits, we took the old route back to her house. Soon we found ourselves at her door.\n\n\"You, um, want to come in? Mom flew out tonight and won't be back until tomorrow at the earliest.\"\n\nKerry had a small mischievous smile on her face. How could I resist?\n\n\"Of course. Maybe we could order some pizza or something, I'm actually pretty hungry.\"\n\n\"If you're ok with it I can make us like a Caesar Salad or something. I do the dressing from scratch.\"\n\nShe must have seen my eyebrows go up. Kerry was never much of a cook. She chuckled as we went in.\n\n\"Come on,\" she said, \"if you can become a published historical author, then surely I could have learned some basic culinary skills.\"\n\n\"My apologies,\" I said, taking my coat off, \"my surprise was not meant to offend.\"\n\n\"I have some ideas about how you can make it up to me later...\"\n\nKerry went up on her toes and we kissed again. This time there was no table to prevent her small body from pressing into mine and no one to walk in on us. Her hands were on my back and ass and things intensified quickly. I was starting to kiss her on the neck when she pushed me away. I was already very hard and now a little frustrated. She had a little teasing smile on her lips.\n\n\"Patience. You can't have dessert until you finish your salad.\"\n\n\"This is revenge for all the times I used to tease you before I entered you, isn't it?\"\n\n\"No comment,\" Kerry said, laughing.\n\nI was forced to admit to her that she did make a good Caesar dressing. We drank wine and flirted casually at her kitchen table. At the end I took our dishes to the sink and started rinsing them. Tradition dictated that since she made the food it was my job to clean up after. I felt her small form press up against me from behind and her hand rubbed my cock, which surged to hardness. I groaned.\n\n\"Oh, fuck, Kerry. That feels good.\"\n\n\"Dishes can wait,\" she said breathily, \"It's time for dessert.\"\n\nI spun in her arms, seeing the old hunger in her eyes. We kissed, hard, like striking flint on steel. Fire caught and I picked her up by her ass so I reach her mouth more easily. She giggled and wrapped her arms around my head. I wanted to carry her to her room but I suddenly wasn't sure if I could wait that long. \n\n\"You can still lift me so easily. Even if I have gained a lot of weight.\"\n\nNow it was my turn to laugh.\n\n\"You haven't gained any weight. You're still the size of a baby mouse.\"\n\nKerry blushed. \n\n\"You'll notice it soon enough...\"\n\n\"I don't exactly look like I did when I was eighteen either,\" I said, carrying her up the steps. It reminded me of another time, long ago, although I carried her more like a bride back then.\n\nWe were at the door to her room, and I nudged it open with my foot, walked in, and set her down gently on her old bed. She looked up at me, a mix of adoration and nervousness.",
        "\"Kerry, you're the one person who doesn't have to be anxious about what I think of you. You're gorgeous. I think I owe you though.\"\n\n\"What do you mean, you owe me?\"\n\n\"I mean that you were naked and vulnerable the first time, and you trusted me so much. I guess it's my turn.\"\n\nKerry understood. As I took my top off I felt her hands eagerly undoing my belt and button. As I dropped my shirt she looked up at me as if for permission. I nodded and she pulled my pants and boxers down, my hard cock popping out, eager to say hi.\n\n\"Oh...I missed this,\" she said, licking her lips, \"and...and you look amazing. Not like someone near thirty at all. God, James, are you sure you want me?\"\n\nI stroked her hair reassuringly and nodded. \n\n\"I want you so much, Kerry. I...I never stopped loving you.\"\n\nKerry smiled and took me in her mouth, briefly. I moaned. She released me again, quickly.\n\n\"You can have more of that James. As much as you want. Later. I need you inside me. Please.\"\n\nShe pulled her sweater off, revealing her breasts. They might have been a little bigger, sagged maybe the tiniest bit, but I wouldn't even have noticed if Kerry hadn't been worried. Her stomach wasn't completely taut like when she ran every day, but neither was mine. And really, she looked amazing. My cock twitched as I took her in, which probably did more for her self-esteem than any comment would have. It didn't have any idea how to lie, after all. \n\nI needed to see the rest of her and as soon as she unzipped I was pulling her jeans off, and then her small black panties. I wanted to take more time but I needed to be inside her, needed it like air, like water. Her hips were a little wider, but somehow, all of the changes together made her even more attractive than she was at eighteen.\n\nSometimes I think that love, real love, is about appreciating someone and all the things that they have been through. We'd been romantically separated for a long time, but I appreciated every part of Kerry, and that included her past and any changes she'd experienced while we were apart. I loved all of her.\n\n\"God, Kerry. You're still so sexy.\"\n\nKerry blushed, beautifully, reddening not just in her face but chest and belly and the top of her thighs. She didn't respond, but she moved backward and turned, spreading her legs for me. She smiled at me, shyly. I moved over her, careful to support most of my weight on arms. I'd been with women closer to my own size or height, and for them, I could rest more of myself on them, but I was always afraid that I'd crush Kerry, no matter how tough I knew her to be. I think she loved the way I was careful with her.\n\nMy cock was at her entrance. Before I could do anything more, I felt Kerry's small hand on my shaft, guiding me in, impatient for it, demanding it. She made a little high-pitched noise, like a chirp, when I entered her. At first I thought I'd hurt her but I saw that she was looking at me with the most intense expression that I'd ever seen her make. It scared me a little, but it also aroused me even further.\n\n\"Oh, fuck, I forgot how good you felt inside me...James...oh god why...why did you ever leave me?\"\n\nThat was, even in the heat of the moment, an odd question. Leave her? We mutually broke up, and by the time I met someone serious, she'd already been married for a year. I think I understood, though, deep within. Shanon had been the first real serious relationship I'd had after her. Prior relationships had been light, or one of us was more serious than the other, as happens often. I think Shanon might have loved me though, and I knew that I'd loved her. \n\nKerry must have felt like I did when she'd told me about the man that she would marry. Happy for me, sincerely and truly, but also dying a little inside. All of this flashed through my mind as I bottomed out in my best friend, the love of my life. I was careful. It was easy for a larger man like me to hurt a small woman like her. I wasn't huge or anything, just about average for someone of my height, it was just the relative differences between our sizes.\n\n\"Fuck, Kerry, you're so tight, like...like before...\"\n\nKerry smiled now, her old adoring smile. I knew that I was showing the same emotions. In that moment, there was nothing held back. We were both vulnerable and true. As I moved so did she. We were in perfect harmony, made for one another, flowing like water down a hill. We sped up and I edged her like the old days. Neither of us ever really had any trouble getting the other off, so we instinctively tried to make each orgasm better. \n\nKerry's nails dug into my back as she held on to me tightly. She was so close, so near, but I drug it out, slowing down, pulling just a little bit away. Then I returned, hard and fast, not rough, but certainly not gentle. She ground and rolled her hips against me. Her breath came in brief cries, She leaned back, desperate to kiss me, her small hands on my face, holding me where she needed me. Her body shuddered as the orgasm kept rolling through her, pleasure making her its puppet. At least, with a brief cry, the long, drawn out process ended. She relaxed in my arms, but I kept fucking her, bringing her back to the moment.\n\nThere were tears in her eyes, but I knew it wasn't from pain. I felt the same way, even if I couldn't express it. I was suddenly grateful for my bad fortune, for life putting me here at this moment, the right moment. Nothing was like making love to Kerry. At least in this way, nostalgia didn't lie. Each stroke brought me closer to my own moment.\n\n\"Oh James, that's it baby, let me make you feel good.\"\n\n\"Kerry, I'm...\"\n\n\"I'm on the pill and I don't care. I don't care, baby. I need your cum and if I get pregnant, I'm ready.\"\n\nHoly shit, that was too much. I came inside of her, rope after rope of cum filling her. She came with me, her muscles clutching me, milking me like she was feeding off of my life. I found myself looking into Kerry's beautiful eyes. That was when I saw it, just for a moment. Sadness and guilt, unmistakable. Replaced with love and pleasure as she came with me, more gently than before. Maybe she still felt a little bad about having sex with someone other than her husband. It wasn't uncommon and I wasn't going to say anything about it just because I wasn't decent enough to feel the same way about Shanon.\n\nAt last, we were finished, panting like we'd just run a triathlon, our foreheads pressed together. I rolled off of her and after a moment she cuddled against me. I felt her wet crotch pressed against my leg and I didn't care. It all felt right. I pulled a sheet over both of us, knowing that she'd get cold fast. She hummed in a brief noise in appreciation.\n\n\"I'm sorry I was so distant for so long.\"\n\n\"I think you know that you're forgiven, right? I just want to know why. I kind of thought that...that you'd outgrown me. You'd seen me for who I was and just left me behind.\"\n\nShe sat up on one elbow to look down at me fiercely. A light sheen of sweat covered her, her small breasts shifted as she did. I already felt myself start to harden again. How could she do that to me so easily?\n\n\"No! It wasn't like that. I could never...I never would.\"\n\n\"Can you tell me why? I just...I kind of need to know.\"\n\nShe lay back down and I heard her sigh, then she reached out and held my hand, as if drawing strength from it.\n\n\"It was me. I know how that sounds, but its true. I think the first time that I saw you with Shanon was about a month or two after you two started dating. I visited you with Bill, like we did sometimes. When I saw you two together, it was different from with the other girls you'd been with. I could see...I could see a future between you. She was so gorgeous, and she looked at you the right way, you know? And that was when my marriage started its downturn. I had suspected Bill was cheating but I didn't have any proof, and I realized something...\"\n\n\"What was that?\"\n\n\"I realized that I would be bad for your relationship. Really. I could pretend to be just your friend, and I am your friend, but my attachment to my husband was breaking. Was already broken, really. So I didn't feel particularly strongly towards my vows. I knew that the next time I visited you, I would be alone, and I knew that...Jesus this makes me sound like such a slut. I knew that I would make myself 'available' to you. As it I might tell myself otherwise, but I would have tried to seduce you. And if you wanted to stay with her and keep me on the side, I wouldn't have liked that, but I would have done it. I'd hate myself for it and you'd either reject me and it would hurt or you wouldn't and you'd hate yourself for it too. I didn't want to break up something that looked to be really healthy and good for both of you, so I stayed away. I always wanted you to be in my life, but I knew I had to keep some distance between us. That's it.\"\n\n\"Wow,\" I said, genuinely flattered. As weird as it was, I could have seen it happening. And neither of us was big on cheating, but there was an undeniable attraction between us, even when we had been happily platonic.\n\n\"Now that I know she cheated on you I kind of wish I'd just beaten her up and then had my way with you. Fuck politeness.\"\n\nI sputtered laughter.\n\n\"That does sound more like your seduction style.\"\n\n\"Shut up. You know you like it.\"\n\n\"I do. No other girl ever made me feel like you do.\"\n\nShe rolled over to face me.\n\n\"Dammit you're going to make me fuck you again, aren't you?\"\n\nShe rode me this time, but it wasn't rough or hard. It was slow and languid and I couldn't believe how right it felt. When we were done we showered together, changed her sheets while making dumb jokes, and then I fell asleep spooning her. I knew, in my heart, that everything would be fine from then on. I'd been through a rough patch, but it was over now.\n\nI did not have any idea how wrong I was.\n\n----------------------------------------------\n\nThen - The Invisible Line\n\n----------------------------------------------\n\nThe day things changed for Kerry and I was about a week after I had turned eighteen (she had turned eighteen a few months earlier). We were still best friends, but all the college applications that we were filling out gave the time we had together a different perspective. I wanted to go into history and she wanted to be a corporate decision maker so she wanted to pursue finance. We both had decent grades and we knew we would end up going to different colleges. My pick was Stanford and hers was between MIT and New York University.\n\nWe knew that if we got what we wanted, we wouldn't really have each other as best friends any more, and it lent a sense of urgency or even desperation to the time we had left. I don't think anyone else sensed it, but we both hung out as often and for as long as possible. We also started talking more about our fears for the future. And, naturally, we started to see different sides of each other.\n\nThe day in question I was supposed to head over to Kerry's house to study with her for a chem test the next day. I kind of sucked at it and it really helped to have a partner to explain things. As I was planning on heading there anyway, I decided to just wait until Kerry was done with soccer practice. I was sitting on the bleachers, doing some casual reading, which for me at the time was philosophy. I could really be pretentious, although I did honestly enjoy Meditations a great deal.\n\nKerry was a winger because she was fast, had tons of stamina, and could outthink defenders. I'm not huge on the sport, but I usually watched her home games and sometimes we watched pro soccer together. She was impressive, typically zipping up and downfield, crossing, and leaving her coverage in the dust to either take the shot or feed the striker. The team had done a lot of running and speed exercises today, and currently were playing a scrimmage.\n\nDespite not being much of a sports guy, there was a certain appeal to watching girls my age run and jump. Kerry would always roll her eyes at me but I pointed out that she got more excited when dudes wore gray sweatpants to track practice and she'd blush and get quiet. Today I wasn't paying much attention to the field and honestly was eager to get going. \n\nI heard a brief shout, and I recognized it immediately. It was Kerry. She'd taken a slide tackle and she hadn't gotten back up. The player who'd tackled her had run over to her, obviously concerned. I ran down to the sidelines, watching apprehensively. The coaches ran out and leaned over her. She was sitting up and talking so hopefully it wasn't that serious. She stood up with some help, and those of us on the sidelines clapped, but she needed support to get back. She'd obviously messed up her ankle. I walked over to where she was sitting on the bench. The coach was speaking by the time I got there.\n\n\"You've gotta stay off it and ice it. It's not so bad now but you could have some awful swelling by tomorrow. No tournament for you. Sorry.\"\n\nKerry's face showed clear disappointment. She really enjoyed playing and competing and was looking forward to the trip out of town. Her team would miss her skills, too. \n\n\"Shit, that's tough,\" Amanda, her friend and a backup striker said, \"do you need help getting to your car? You can lean on me...\"\n\n\"No need,\" I said, finally speaking up. I could be shy with girls but I knew most of her teammates at least as acquaintances. I'd even gone out with one of them. \"If one of you gets her stuff from the locker room then I'll just carry her to my car.\"\n\n\"Are you sure?\" Kerry asked. Her teammates looked at me doubtfully. I was big but the parking lot was a few hundred yards away. I laughed.\n\n\"Kerry, you weigh like two pounds and you're the size of a baby mouse. It'll be fine.\"\n\nKerry chafed at the obvious dig on her size and her teammates chuckled. Some of them gave me a weird look but I didn't worry too much about it. \n\nOnce Amanda came back with her backpack I slung it over my shoulder with my own, then knelt slightly and lifted Kerry into my arms, easily. By this point I was over six feet and naturally kind of beefy, and I worked out a bit, mostly push-ups. I'm not trying to make myself seem super-strong, either. Kerry really did weigh less than one-hundred. It didn't occur to me until much later that I carried her like a bride.\n\nI also noticed that quite a few of her teammates were watching me now, some with little smiles on their faces. I just figured that they were assuming that Kerry and I were dating. It was a common misunderstanding and I didn't really worry about it any more. Those people who knew us closely knew that we were a lot more like siblings than lovers.\n\nI carried her to the car, trying to go gently to avoid jostling Kerry's injured leg too much. She was silent except for an occasional small noise and I was worried that she was concealing pain so I slowed down a bit.\n\n\"Are you doing ok?\" I asked.\n\n\"Huh?\"\n\n\"I mean, are you hurting too bad? Am I making it worse?\"\n\n\"No. No, James...you're being perfect.\"\n\nI nodded and kept walking, enjoying the feeling of her small, warm body against mine. She leaned her head into my chest for the last part of the journey, and it felt almost like she was cuddling into me while we walked. I set her down on one leg, then loaded her and her stuff into the car and we were off.\n\n\"Thank you,\" she said as I drove.\n\n\"No problem,\" I said. It really didn't feel like a big deal for me. I did not consider the greater implications of what I'd done or how it might have been interpreted.\n\n\"Really,\" Kerry said, suddenly serious.\n\n\"You're welcome,\" I said, a little more formally, smiling at her sideways.\n\nI caught sight of her, briefly, before my eyes were back on the road. She had wide eyes, and her adoring smile was back. I felt my heart beat faster and my face felt warmer. I noticed some other stuff happening in my pants and adjusted myself a bit.\n\n\"Oh my god, stop,\" I said, finally.\n\n\"What?\" Kerry said.\n\n\"You're staring at me and I love that smile but you're making me incredibly self-conscious.\"\n\nShe laughed, gently. Normally she would have made some kind of comment about me being girly or something and teased me. Not today.\n\n\"You're amazing, you know that?\"\n\nNow I laughed.\n\n\"Why?\"\n\n\"You just carried me like four football fields and you did it so carefully that I barely felt any pain. And my ankle hurts like a fucking bitch. Oh, and I'm pretty sure half the soccer team wants to bang you now.\"\n\n\"What?\"\n\n\"Didn't you see how they were looking at you when you picked me up? Do you really not understand girls at all?\"\n\n\"I think we both know that I do not.\"\n\nWe laughed together.\n\n\"Oh my god. This is why I lo...why you're amazing, you idiot. No matter how tough we are, every girl out there has been reading manga and watching Sailor Moon or Disney movies with strong, handsome, and slightly moody men saving women in distress. So I fall down, right, and I'm really hurt. You come over and basically pick me up like you just came off the cover of a shitty romance novel. And that makes you great, ok? Everyone one of those girls who were looking at you wished they were me. Every one. I'm not being sarcastic or mean or anything, cuz I know how your mind works.\"\n\n\"Oh,\" I said, trying to process all the really wonderful things Kerry had said about me. I felt a really warm feeling spread through me.\n\n\"And what makes you amazing is that you just did it because it was the right thing, and you wanted to help your best friend. You had no idea whatsoever how you looked doing it. You were masculine but modest. Any woman would be lucky...to be yours.\"\n\nThen she seemed to realize the depth of what she'd expressed and grew silent. A gentle rain started to fall from the cloudy fall skies, and neither of us spoke for the rest of the short drive. My mind was racing. I may not have been experienced with actual romance, but I had heard the depth of feeling in my friend's voice. Hell, I had felt it in the way my body reacted to it. I had to adjust my pants a few times. Thankfully, Kerry was looking out the window, watching the rain as she loved to do.\n\nWhen we arrived Kerry touched my arm and I jumped. Then she laughed. \n\n\"Sorry. I can walk to the door if you give me your arm. It's only like ten steps.\"\n\n\"Sure.\"\n\nI grabbed both our packs and helped her to the door through the rain. It was getting worse so I moved carefully. Better that we both got wet than she fell. When we got to the door we were almost run over by her mother, who was obviously going out. \n\nKerry's mom looked like a middle aged Eva Green. Every guy I knew had some kind of crush on her, myself included, although mine was pretty tame. She was dressed to kill, in a black dress that you wouldn't call scandalous by any means but that left no doubt as to sensuous nature of the woman who wore it. She had darker brown hair than Kerry but they shared big beautiful blue eyes and high cheekbones. Kerry was athletic and slender, whereas her mom was, uh, \"voluptuous\". She filled that dress out and she knew it.\n\nShe smiled at me, the friendly smile she saved for friends of hers and of her daughter. Both of our moms had a standing invitation if one of us needed to stay over or any other help. They weren't exactly friends but they'd grown to respect one another. \n\nAs soon as she saw me though, something odd happened. She had a look in her eye when the door opened. It was odd, like she was happily surprised to see me but then realized that she'd mistaken me for someone else. Her expression shifted, ever so slightly. I wasn't that smart then, but I like to think that I would have picked up on it now. How much different things would have been.\n\n\"Oh my goodness. What happened, Kerry?\"\n\nShe stepped aside to let us in. Kerry looked oddly annoyed at her mother, and nervous about her being there. ",
        "\"Its fine, mom. I just twisted my ankle. I just have to stay off it and...ahhh...\"\n\nShe'd pulled away from me and tried to get to her sofa by herself and then winced as she put any pressure on her foot. I helped steady her and walked her the rest of the way until she sat down.\n\n\"No, it isn't fine,\" her mother said, in the educated accent that made her seem sophisticated, \"I'll call, um, my date and tell him that I have to cancel. Its fine.\"\n\nJust then, there was a chirp from her mother's purse. She took her phone out and looked at it, then looked a little pale for a moment.\n\n\"Uh, he's already outside. He's picking me up.\"\n\n\"James can stay with me,\" Kerry said, a little panicked, \"right? I mean...we were going to study chem anyway...and it's raining, so you can stay with me until I go to bed or whatever? If it gets too late you can crash on the couch.\"\n\nShe looked at me, pleading. Kerry's mom was furiously typing something on her phone, but she looked up at me, expectantly. It was weird.\n\n\"Yeah. Of course I can stay. I didn't know if your mom would be here so I was already planning on helping you get around and my mom won't mind.\"\n\nI didn't bother mentioning my dad because odds are that he was either working late or flying out later tonight. He really didn't seem to care where I was in any case. Mom would be fine with me staying once I called her so she knew that I was ok. And I knew that Kerry's mom, while a pretty great parent, went on one or two dates each week, and one of them was usually on Thursday nights, so I'd expected her to be gone. Her mother smiled, relieved.\n\n\"Thank you James. Please call me if you need anything or if Kerry's ankle gets worse. There's money on the fridge for some pizza!\"\n\nAnd then she was gone, into the rain, very careful to close the door behind her. Kerry looked annoyed with her. No, that was wrong, she looked...disgusted? That was odd. I always thought of Kerry and her mother as getting along. I argued more with mine, to be sure, although those tended to be about having to perform yet another church activity rather than any actual dislike. Kerry looked to me, and then was apologetic, almost sad.\n\n\"I'm...sorry.\"\n\n\"For what?\"\n\nShe opened her mouth, and paused, then smiled, shakily.\n\n\"For my mom. She, uh, really likes this guy. You shouldn't have to take care of me because she can't keep her legs together for a night.\"\n\nWow. I was used to Kerry being vulgar, but never about her mother, and never in a way that was so critical of her sexuality. \n\n\"You don't need to apologize. I don't mind taking care of you and like you said we were going to study anyway. I'll just stick around afterwards and we can play video games or cuddle and watch tv or whatever. It'll be fun.\"\n\nI got Kerry some water as I knew she'd be thirsty after practice and then called my mom. As predicted, she didn't mind me staying. She was especially paranoid about me driving in rain or ice so told me to stay the night if the storm got worse like it was supposed to. Never mind that we lived five minutes away by car. I promised her that I'd be careful and hung up.\n\n\"Do...do you think you could help me upstairs? We'd probably be more comfortable there and...you know what, never mind.\"\n\n\"What?\"\n\n\"I just...I feel all sweaty and gross. Do you think you could help me shower? I know its weird, I'm sorry...I just...\"\n\nShe was sweaty, but to me she was far from gross. Something about a sheen of sweat on a woman just makes her more appealing, not less. But this was Kerry, not some girl I was dating.\n\n\"Y...yeah. Of course I can help you. I'm going to carry you up the stairs though. I don't want you trying to hop your way up.\"\n\n\"Ok.\"\n\nI carried her upstairs to her bedroom, where I'd been a million times before. I set her stuff down and ordered the pizza. I didn't need to ask what she wanted. I swear to god we were like an old married couple at that point, without the fighting. Kerry made a grunt of pain and I spun around. She had one shoe off but couldn't get the one on her injured ankle.\n\n\"Hey, let me. I'll get you some ice too once you're out of the shower.\"\n\nShe smiled at me as I knelt before her. No big deal, I thought, I'll just have to be careful. I untied it the rest of the way, and then loosened the laces much more than normal. To steady her, I put my hand under her calf so she could rest it there. She gasped and I looked up at her, worried, but it wasn't pain in her eyes, more like shock.\n\n\"Sorry, I didn't mean to...uh...I should have told you I was going to do that.\"\n\nShe laughed.\n\n\"Its fine. It's not like this is the first time you've ever touched my leg. I don't know what's wrong with me, Keep going.\"\n\nI did. I slipped her shoe off carefully, then very gently took off her long sock. As a side effect, my hands slid down the smooth surface of her lower leg. I felt her tremble when I did it. I pretended it was from pain, but in my heart I knew that it wasn't.\n\n\"Thanks. If you get me to the bathroom I should be able to take off my clothes and get in and out fine.\"\n\nI looked at her, skeptically.\n\n\"Are you sure?\"\n\nI had an image of her falling, hitting her head on the floor.\n\n\"Really,\" she said, \"I'll be fine.\"\n\n\"All right. But...just call me if you need help, ok?\"\n\n\"Ok, dad.\"\n\nI rolled my eyes at her as she giggled and helped her in the room.\n\n\"Leave the door open slightly,\" she said, \"so I can tell you when I'm ready.\"\n\nI sat down and got some of my books out. I heard the shower start so she must be doing all right. I was just getting settled in to try and understand a difficult process when I heard a loud thump from the bathroom. My heart beat much faster. I rushed to the door.\n\n\"Are you all right?\"\n\n\"I'm fine...shit.\"\n\n\"You don't sound fine.\"\n\n\"I fell on my ass. Goddammit. I'm not hurt, just embarrassed. I can't reach the detachable shower-head though, and I'm...not sure about standing up.\"\n\n\"Um. I should be able to hand it to you. And then help you out when you're ready without looking. I think.\"\n\n\"Yeah. Thanks. Come on in.\"\n\nI went in, nervous. We were close, sure. I'd seen her in swimsuits and lounging clothes, sure. I'd never seen her naked, and I certainly didn't want to embarrass her. I was getting turned on at the though of being near her wet, nude form, but I wasn't tempted to peek. No matter how much I may have wanted to see her.\n\nI walked across the room. I could see through the opaque shower curtain that she was obviously sitting down in the bath, but I couldn't make out any details. I reached in and grabbed the shower head, then passed it to her while looking away, careful not to blast her with the spray. \n\n\"Thanks. Could you hand me the shower gel and the loofa from there too? I'm sorry.\"\n\nI did and went to leave the room but she spoke up.\n\n\"Wait! Can you stay? I'm going to be done soon and...\"\n\n\"Sure,\" I said, painfully aware of her beautiful nude form feet away from mine. I'd be fine, I told myself. I just had to make sure my eyes behaved themselves. That was all.\n\n\"Ok. You can turn the water off.\"\n\nI did.\n\n\"How do you want me to help?\"\n\n\"I think I can get up if I just...ow! Fuck!\"\n\nHer foot slipped and she sat back down hard, with a thump.\n\n\"Stay there. I'll lift you out.\"\n\n\"Are...are you sure?\"\n\nI sighed.\n\n\"I'm not...I don't want to make this awkward but if you seriously hurt yourself because I'm nervous about being close to you while you're naked or you're afraid of me seeing you nude, I'll never forgive myself.\"\n\n\"I...I don't mind. I mean if you catch a glimpse or something. I trust you.\"\n\nFuck. I could tell myself that she was just my friend all I wanted but I most definitely did want to 'catch a glimpse' right now. I slid the curtain back, keeping my eyes as averted as I could. I knelt down and scooped her willing form up. She wrapped her arms around my neck for security, and I lifted her up. Her wet body pressed into me, soaking my shirt. I got her out, and then gently let her legs down while keeping one arm around her back. I'd planned on just having one arm wrapped around her side while I looked away. I'd still be touching her, sure, but it would be minimal contact and she'd have support. \n\nInstead, she pivoted her body as she placed her weight to her good foot, turning to face me, keeping both of her arms around my neck. I was confused but bent down to make sure she had stability. She leaned her small form into me, and I felt her wet heat radiate over me, her breasts pressing into me. I looked down to see what was wrong and my breath caught.\n\nShe was looking straight at me, her blue eyes piercing and intense. Her light brown hair was stuck to her forehead and her lips were parted, her breathing ragged. My cock, which had been behaving itself briefly, surged to hardness and pressed into her taut belly. She moaned, deep in her throat, an animal noise that I'd never heard her make before, one of lust and need. Her small arms tightened around my neck, pulling me closer. I did not resist. Our lips met.\n\nI'd never had a kiss like this before and I doubt that she had either. All of the repressed urges, all of the buried feelings that I'd had for my dearest friend surged forth, not to be denied. I kissed her back, her tongue dancing in my mouth. Her hands wouldn't release me so I reached under her ass, her firm, perfect ass, and lifted her up. She held on to me with her thighs, clinging and grinding to me. I was worried about her ankle, barely aware of it as I was, so I carried her carefully, awkwardly, to her bed and set her wet form down. \n\nFinally I could see her small breasts, her toned athletic belly, her curved thighs and flared hips. Her thatch was the same light brown as her hair, but trimmed neatly. The way she leaned back let me see her labia, puffed up and moist for me. Ready for me. She looked up at me with adoration and want. I returned her gaze as she reached out and rubbed my cock, painfully hard, through my pants.\n\n\"Oh...Kerry...\"\n\nSaying her name just seemed to excite her more. She rubbed with more intensity.\n\n\"James...let me take care of you. Please?\"\n\nThen the doorbell rang and we both jumped, springing apart as thought we'd just been caught.\n\n\"It's the pizza,\" she said.\n\nWe looked at each other and laughed. I ran downstairs, grabbed the money off of the fridge and then paid the driver and brought our food in. I was hungry for something else. I was back upstairs in a flash.\n\nKerry smiled as soon as she saw me, but she shivered, still wet. I went and got a towel. I knelt in front of her and began to dry her, softly, gently, starting at her feet and working up to her legs, and then her sex. She moaned and parted her legs, but I wouldn't pay any extra attention there yet. I didn't stop until I'd carefully dried her front and back, and then her hair at least a bit. I stepped back and dropped the towel on the floor, never taking my eyes off of her. I stood there for a long moment, just taking in the beautiful image, burning it into my memory.\n\n\"What?\" she asked finally, then giggled, embarrassed.\n\n\"You are the most beautiful woman I have ever seen or imagined,\" I said, translating my thoughts to words without any filter. There was no doubting my sincerity because she knew me so well. It was obvious to her. Her look changed, grew adoring, she bit her lip.\n\n\"Take off your clothes for me, James.\"\n\nI was suddenly shy. I'd been nude with girls before, although only briefly and in the dark, really, but this was Kerry. I'd die if she laughed at me or if I repulsed her somehow. My best friend knew me however, seeing my thoughts as clearly as if I'd said them out loud.\n\n\"If you're worried about...well, anything about your appearance, don't be. You're the most handsome man I know. You're plenty big if you're worried about that, I could feel that well enough. I...I love you, ok? So I just need you to trust me like I'm trusting you right now by being naked in front of you. Do you?\"\n\n\"Yes,\" I said, without hesitation.\n\n\"Good,\" she said, \"now let me see that dick.\"\n\nShe said it with such lecherous relish that it made us both laugh. She didn't cover her lust as I took my shirt off, and she leaned forward so she could rub my stomach and reach towards my chest with her small hands. She gently pinched my nipple unexpectedly and I groaned. This girl, this perfect girl, could make me moan by touching my chest.\n\nI unbuckled my pants and she looked eager. I unbuttoned them and her breathing got ragged. I unzipped them and she licked her lips. She looked up at me as if asking for permission. All I could do was nod. She pulled my pants and boxers down at the same time, slowly. My cock popped up, hard and proud as a flagpole. She gasped. I stepped out of my clothes and stood nude in front of her.\n\n\"Oh James...oh my.\" She reached out and took it in one small hand. I moaned. \"It's perfect, James. You're perfect. I can't believe how lucky I am.\"\n\nBefore I could express to her that was how I felt, she took the head of my cock into her mouth while she looked me in the eyes.\n\n\"Kerry...you're so beautiful like this.\"\n\nShe moaned around my cock which made it twitch. She let it out of her mouth and smiled at me mischievously. \n\n\"You know, humming helps to suppress the gag reflex...\" then this small, beautiful, wonderful girl took me all the way to the back of her throat, and held me there. All the while she looked up at me, as if asking for my approval. All I could do was groan in pleasure and run my fingers through her still-wet hair. She worked up and down varying speed and pressure, letting her tongue run under my shaft and swirl around the tip. She used her small hand to stroke up and pay attention to the parts of my cock that weren't in her mouth. She did it expertly and perfectly and her lips.\n\n\"Kerry, I'm going to...oh fuck.\"\n\nShe stopped only for a moment.\n\n\"Do it, James. Cum in my mouth. Cum in me and on me.\"\n\nThen she went back to working me, faster than before, taking me as deeply as possible. I groaned so loudly it was almost a shout, and I came. God help me I sent rope after rope of thick, sticky seed into her mouth and throat. She gulped and swallowed and milked me as if it were the most important thing in the world. She ran out of breath before I ran out of cum, and she had to release me. The last few spurts hit her cheek and chin and fell onto her perfect, small breasts. A single drop flowed out onto her nipple. It was one of the most erotic things that I have ever seen, and I will never forget it.\n\nShe looked at me and giggled, but I was still lost in pleasure and disbelief. No woman had ever given me oral pleasure like that, and certainly none had so enjoyed doing it. My legs were a little wobbly but I had the presence of mind to walk to the bathroom and get a wet washcloth.\n\nKerry was looking at me expectantly when I got back.\n\n\"That was amazing, love,\" I'd never called her that before but it seemed right. She was, after all, my love. My heart beat faster, thinking about her like that.\n\nI began to clean her carefully, starting with her face and chin, and then moving to her chest.\n\n\"You're so gentle, James. I thought you might grab my hair and just fuck my mouth for a minute there but you let me just serve you. And feeling you cum in my mouth was just...so wonderful.\" Her expression clouded. \"Hey, I'm, um, not freaking you out by talking like this, am I? Or by being this...experienced. I swear I don't go down on every guy or anything...\"\n\n\"I rather assumed you went down on your dates sometimes,\" I said, smiling, \"even if I didn't particularly want to think about the specifics, it's ok. I don't think that you're bad for...having experience.\"\n\nShe smiled.\n\n\"I shouldn't worry with you. I shouldn't but I do, because...oh fuck I'm bad at this...its just...\"\n\n\"Just what?\" I asked as I finished cleaning her nipple, watching it harden from my touch in a gratifying way.\n\n\"I just never want you to think badly of me. I wish...I really wish that I had just done what I wanted to do and ask you to be my first. I would have liked to have been yours, too. I care about you, James, not like the boys I dated. I love you.\"\n\nThere was an almost desperate tone to her voice, as if she was saying something forbidden but was powerless to stop herself. I put my palm on her face to reassure her and she leaned into it and kissed it.\n\n\"I'd have loved for you to be my first and only,\" I said, enjoying her blush, \"but there are advantages to being a bit later in the queue.\"\n\n\"And those are?\"\n\n\"I went down on my dates, too, and picked up a few things,\" I said, winking at her. I gently lifted her legs off of the ground and pivoted her so that she was laying down. As she watched I made sure that she was comfortable and put a pillow under her ankle for support. I did it in such a fashion as so her legs would have to be apart for me.\n\n\"H...hey,\" she said.\n\n\"Yeah?\" I said, eager to taste her.\n\n\"I...I want this, James. I want it so bad. I really want to cum on your tongue...I'm just not sure if I'm ready to go all the way tonight. I'm not teasing you I swear...it's just that...\"\n\n\"...you matter much more to me than the other people I've been with,\" I finished for her.\n\n\"Y...yeah. That. Fuck, you're perfect. I wish...I wish so many things...oooh...oh fuck that's nice...oh...oooh....fuckkk...\"\n\nI hadn't waited for her thought to end. Instead I began to kiss her inner thigh, which was unbelievably soft. The taste of her skin was clean and she smelled vaguely of strawberries from her soap. I kissed up to her labia and looked her in the eye as I sucked it into my mouth for the first time. By then she was done talking and had started making little noises of arousal. Almost chirps, high pitched and short, as my tongue probed inside her. Almost as soon as I did so, her natural lubrication increased and her taste and scent flooded my senses.\n\nIt was simple and pure, distinct from all others. But there was something more to it, I don't know how to describe it. It wasn't very strong, but it was incredibly unique to me, as if the love I had for her preserved these sensations in my memory for all time. No other woman has ever measured up for me.\n\n\"James...James...I'm...\"\n\nShe had passed her hands through my hair as I inserted a finger inside her, feeling her warm wet tightness grip me. I began to kiss her again, this time around her clitoris. I was shocked to feel her spasm, hard, around my finger. I began to move it inside and out as she continued to cum. It wasn't a large orgasm, but it was a start.\n\n\"Oh fuck...oh god...\"\n\nOr so I thought. Her first climax continued irregularly, maybe one or maybe several small ones, and I kept it going until she went limp. I didn't stop, but relaxed a bit, slowed things down so she could catch her breath.\n\n\"If you want to stop that's fine...\" she said, misinterpreting my speed change for reluctance to continue. I looked up at her and shook my head, then began to truly administer direct sensation to her tiny, hard clit. I was careful not to be harsh, but my tongue danced on and over it, caressing it, then leaving it. A second finger entered her, and I periodically hooked them up to stimulate the rough patch of her g-spot.\n\nBeing with a small girl has other advantages, as with my free hand I could easily reach up and feel her small breast. This was the first time I'd had my hand on one of them, and they were unbelievably firm and supple. Her nipple was small and hard and I began to pinch and pull at it gently, betting that was something that she would like.\n\n\"Oh...oh god...James what are you doing....to me. Fuck. James...its too much, baby. Its...\"\n\nHer expressions became non-verbal. Whimpers and moans and gasps told me that I was doing the right thing. Her volume increased, her hands pushed my head down into her crotch, but even then she wasn't hurtful, only insistent. I directly lashed her clitoris now with my tongue while I probed her deeply with my fingers. I looked up just in time."
    ],
    "authorname": "LateStageInfernalism",
    "tags": [
        "brother",
        "sister",
        "incest",
        "romance",
        "love",
        "melancholy",
        "fall",
        "b/s"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/hearts-fall"
}