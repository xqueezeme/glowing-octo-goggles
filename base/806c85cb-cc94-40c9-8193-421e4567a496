{
    "title": "The Hunt",
    "pages": [
        "*** This story was awarded Best Erotic Horror Story in the 2020 Reader's Choice Awards, as well as being awarded Third Place in the 2020 Halloween Contest. Thank you to all my regular readers and my new friends who gave me a try and voted for me. ***\n\nFor regular readers of mine, this story is nothing like anything I've published here before. If you've come looking for a shiny, happy lesbian love story with a Happily-Ever-After, as is my usual fare, you might want to give this story a miss as you'll find none of that in this tale. (I'm trying to stretch myself a bit. Maybe more than a bit. Maybe a lot.) Also, this is a slow burn, so if you're in it for a quickie, also probably not for you. Should you decide to give it a read, I'd appreciate your vote and all comments.\n\nBefore you get started, let me give a content warning: this story contains violence, violence against women and themes of racism, and parts may be ugly and disturbing to some. Also, surprising as this may be to my regulars, this story is not lesbian themed; the erotic scenes are M/F. You've been warned.\n\nFinally, extra-special thanks to editor-supremo, AwkwardMD, who's services I have come to absolutely depend on, and to my beta-reader for this story, AvidReader223 who helped me immeasurably in checking my unconscious biases as well as providing invaluable help with my characterizations.\n\nNote: this story exists separate from the Hard Landing universe.\n\nSpooky Halloween, y'all.\n\n~~ New Orleans, Louisiana - Sunday November 1st, 1959 ~~\n\n\"What a mess,\" Detective Etienne Cheval muttered, surveying the gruesome tableau in front of him. In twelve years on the job, he'd never seen a crime scene like this.\n\n\"How many body bags you want, Detective?\" asked the medical examiner.\n\n\"You tell me, Sam. Think this is all one person?\"\n\n\"Looks like. I mean, as far as I can tell.\"\n\nEtienne chuckled with the graveyard humor only cops could appreciate. \"We sure this is human?\"\n\nSam snorted and nodded his head at the nearby workbench. \"Yeah, we know that much.\"\n\nEtienne looked around the scene and tried not to think about the smell as his stomach roiled. \"Well, get started as soon as Tony's done.\"\n\nAs if the mention of his name had summoned him, Tony Weaver, the department's lead crime scene technician, took a photo, briefly lighting the warehouse as his flash bulb gave off its distinctive POP-CLINK, followed by a tiny puff of smoke. He rose from where he had been crouched to get a good angle of a particular body part. \"Gonna be a bit, Detective,\" Tony said, as he used his handkerchief to remove the now useless flash bulb from the camera and drop it in his bag. \"I need more film and bulbs.\"\n\n\"Okay, let us know when you're finished.\"\n\n\"You got it,\" Tony replied, and headed out to his truck to reload his camera.\n\n\"Detective Cheval!\"\n\nEtienne turned to see the captain of the Eighth Precinct standing in the door to the old waterfront warehouse, the muddy Mississippi River flowing past him in the background.\n\n\"One second, Captain,\" he replied, then turned back to the M.E. \"Just... bag everything however you think's best.\"\n\n\"Another one?\" Captain Landry said, quietly, as Etienne walked over to him.\n\n\"No...\" Cheval breathed. \"This one is nothing like the others.\"\n\n\"Is she colored?\" his Captain asked.\n\n\"No, the vic's white. Also, it's a male.\"\n\n\"Really?\" Landry looked around at the carnage. \"How can you tell?\"\n\n\"We found his, ah, equipment displayed over there.\" He pointed to the nearby workbench where there was a recognizable lump of meat neatly laid out in the center of the tabletop.\n\n\"Jesus,\" Landry breathed, his face turning a few shade paler. \"Well, thanks for taking charge of the scene. You were the first detective to respond.\"\n\n\"No problem Cap, I--\"\n\n\"Detective!\" one of the beat cops helping to search the warehouse yelled from the far side of the building.\n\n\"What is it?\" Etienne called back.\n\n\"I think I got an ID over here.\"\n\n\"Well, let's go see who this unlucky bastard was,\" Landry said. He and Etienne headed deeper into the gloom of the warehouse, stepping cautiously to avoid disturbing any possible evidence.\n\nThey found a uniformed officer near the far wall, squatting next to a pile of metal scraps.\n\n\"Whatcha got?\" Etienne asked, as he crouched down next to the young man.\n\nThe officer wordlessly shone his flashlight on a black leather wallet lying in a spatter of blood, then reached out with a pen to lift the fold of the wallet to reveal the contents.\n\n\"Motherfucker!\" Landry exclaimed.\n\nEtienne stood, turning away from his captain and the young officer to hide the grim, satisfied smile that came over his face.\n\n~~ Three Weeks Earlier, Sunday October 11th ~~\n\n\"This makes three in the last month, doesn't it?\" Etienne said. He was standing in a gloomy alley in the French Quarter, a few blocks off of Bourbon Street, looking down at the body of a young black woman. Her head was bent at an obviously unnatural angle.\n\n\"She one of yours?\" Detective Sam Ronaldo asked. He'd called Etienne in an attempt to identify the body.\n\n\"Yeah. Sally, I think her name is. Was. She's been busted once that I know of.\"\n\n\"Well, that'll make my job easier,\" Ronaldo said.\n\n\"What do you mean?\"\n\n\"Ain't no one from City Hall going to be asking me for updates because a whore got herself killed.\"\n\n\"Jesus Christ, Sam, she was murdered. She might have a family, she--\"\n\n\"Cheval, take it easy,\" Ronaldo said. \"You know I have the highest case clearance in homicide. I'll do my job. I'm just saying, the brass ain't gonna be breathing down my neck. Especially seeing as she's a colored girl.\"\n\n\"That's not--\"\n\n\"I called you to help me ID the vic, not to run my case, Etienne. You're Vice, not Homicide.\"\n\nEtienne gave Ronaldo a hard look, which was returned for a moment. Then Ronaldo's face softened and he slapped Etienne on the shoulder. \"Cheval, you're a good detective. You'll get promoted outta Vice soon enough.\"\n\nEtienne glared at him. \"Who says I want out of Vice?\" They held each other's eyes for a moment, then Etienne gave Ronaldo a rueful grin, who laughed at him. Vice was the first posting any new detective got, and there wasn't a Vice detective who didn't want to get promoted out quickly.\n\n\"Anyway, thanks for coming out so early on a Sunday. Hope you weren't out too late last night.\n\nEtienne stifled a yawn. \"I was at Tujague's listening to that horn player they hired last month. The boy can play.\"\n\n\"I'll have to check him out.\" Ronaldo looked up as the medical examiner pulled up in his meat wagon at the entrance to the alley. \"Well, I got to get to it. Tell Flo to save me some grits.\"\n\n\"Good luck with the case,\" Etienne said, before heading out onto the street. He glanced up at the sun coming up over the city skyline, then headed south.\n\nFifteen minutes later he eased onto a stool at The Clover Diner, the favorite twenty-four-hour greasy spoon of the men of the Eighth Precinct, located on the border between the French Quarter and the Port of New Orleans. He took off his fedora and set it on the counter next to him.\n\n\"Hey, Etienne,\" said Flo, the waitress behind the counter, as she poured him his usual cup of coffee with chicory. \"Early morning or long night?\" She was an indeterminate age, somewhere between a hard-ridden thirty, a half-decade younger than himself, and a well-preserved forty-five. Her reddish hair was up in a beehive and she wore the same grey and white waitress uniform that, as far as Etienne could testify to, was the only item of clothing she owned.\n\nEtienne looked down at himself, then pinched the lapels of his tan-colored suit and held them out as if for inspection. \"Do I look like I've been up all night?\"\n\n\"Honey, you're cute, but your style is best described as 'rumpled'.\"\n\n\"There's honest, then there's cruel, Flo,\" he said, with a laugh.\n\nShe smiled. \"You need to find you a wife to iron for you, honey. I'd volunteer but you're too high society for me.\"\n\n\"Shoot, I doubt I'd be able to keep up with a high-class lady such as yo'self,\" he said, as he pulled a pack of Camels and his Zippo from his jacket pocket.\n\nFlo didn't blush. Etienne had been a regular since his days as a beat cop. Their banter was old hat by now. She turned and yelled through the service window to the kitchen, \"Two over, hash, B-and-R!\"\n\n\"B-and-R, two over with hash, got it,\" yelled back Red, the owner, in his usual grouchy tone.\n\n\"What if I wanted something different today?\" Etienne said with a grin.\n\n\"Honey, you've had the same breakfast every day for five years. You ever order something else and I'll drop dead from shock.\" Flo went down the counter, refilling coffee and taking a few orders from the regulars as they trickled in for breakfast.\n\nA few minutes later she sat a plate with two eggs and a pile of hash browns alongside a large bowl of red beans and rice in front of him. He stubbed out his second cigarette in the ashtray on the counter, half-smoked, and started liberally dosing his beans and rice with hot sauce.\n\n\"So,\" Flo said in a hushed voice, leaning over the counter towards him, \"I hear there was another one last night.\"\n\nEtienne stirred his bowl as he looked around to see if any of the other customers at the counter might be listening. He pitched his voice low. \"As usual, you have better sources than half the department. I got called out less than an hour ago on it to make the ID.\"\n\nShe looked over her shoulder at the kitchen, then whispered, \"You know I let some of the gals come in and eat overnight as long as there's no white folk around.\" Flo had worked midnight to ten A.M. at The Clover for as long as he could remember. \"Long as they get out before Red gets in at six, it's not a problem. But I hear things.\n\n\"The girls shouldn't be on the streets in the middle of the night,\" he snapped.\n\n\"Settle down, honey. You know some girls gotta make a living any way they can.\"\n\n\"I get that.\" He shook himself, then said in a quieter voice, \"Just right now...\"\n\n\"People still gotta eat, even when there's a monster around,\" Flo said. She paused a moment, steeling herself, then asked, \"Who was it?\"\n\n\"I didn't know her that well. I think she was fairly new. Short little thing with a bob-cut, real dark skin? Think her name was Sally.\"\n\nFlo closed her eyes in a silent moment of grief.\n\n\"You knew her,\" he said.\n\n\"She moved here from Opelousas a few months ago. Running from her dad. He was... not a nice man.\"\n\n\"I'm sorry, Flo. Do you know who she ran with?\"\n\n\"Alice and Lolly brought her around. They've been showing her the ropes. Another new girl too.\"\n\nEtienne pulled a tiny spiral notebook out of his jacket and made a note. \"New girl got a name?\"\n\n\"Haven't caught it yet, but she's Creole, a light skinned one. Cajun accent too, the real deal.\"\n\n\"Thanks.\"\n\nFlo gave him a hard look. \"I'm only telling you this because I know you ain't like the rest of 'em, Etienne. I know you want to do fair by these girls, not hassle 'em for a bribe or a freebie. And you're as likely to bust the johns as the girls.\"\n\nHe held up his hands placatingly. \"I'm wanting to help on this one. Spread the word, I'm not looking to roust anyone right now. I just want this guy caught before he does it again.\"\n\n\"Alright. I'll ask around if anyone's heard or seen anything out of the usual. Now eat your beans 'n' 'rice 'fore they get cold. If I have to ask Red for another bowl he'll skin my hide.\"\n\nAfter a long day doing the usual police things that took up his time and getting nowhere while doing them, Etienne found himself strolling down Bourbon Street that evening. His practiced eye soon spotted what he was looking for, and he found a piece of wall to lean against near the corner of an alley leading off the main drag. He lit up a cigarette to pass the time.\n\nFive minutes later, a man emerged from the alley next to him, wrestling with his belt. Etienne eyed him as he finished buckling his pants. The man glared back. \"You got a problem, pal?\" he growled.\n\nEtienne held open the lapel of his suit coat, showing off the gold detective badge he kept clipped there. \"You might if you don't beat it.\"\n\nAs the man hurried off, Etienne turned to greet the young woman emerging from the alley, her lipstick smudged at one corner of her mouth.\n\n\"Evening, Lolly,\" he greeted her.\n\n\"Sir,\" she said in a resigned voice. She was a petite, young black girl, maybe twenty or twenty-one, in a cocktail dress that was a little too thin for the chilly October evening and a little too revealing for a single woman on the street. The plain, wool wrap she had over her shoulders looked to be keeping her from shivering, however. Her face was far too pretty, her skin too flawless for her to be in her current line of work, in Etienne's personal opinion. He found himself wondering, not for the first time, what had led her into this life.\n\n\"I'm not lookin' to run anyone tonight. I just want to talk.\"\n\nLolly relaxed a little at that. She glanced around the street. \"What can ah do fo' you, sir?\"\n\n\"I imagine you heard about Sally.\"\n\nThe young woman looked down for a moment. When she looked back up her eyes were glistening, but her face was otherwise impassive. \"Yes, sir.\"\n\n\"I heard she was under your wing. Was she with you at all last night?\"\n\n\"We was together early in the evening, but I got a customer who wanted the full ride. Willing to get a hotel room even. I didn't get back out until well after midnight and she was off her corner by then.\"\n\n\"Was anyone else with you? Anyone who might have seen her later on?\"\n\n\"Alice, or Nanette. Maybe Josephine. Not sure.\"\n\n\"Josephine, is she new? I heard there's a Creole girl running with your crowd now.\"\n\n\"That's her. She showed up in town about a week ago. Newer than Sally was, even.\"\n\n\"You seen Alice, Nanette or Josephine tonight?\"\n\n\"Alice has a cold, pretty sure she's home in bed. Nanette's one block over that way. Josephine... I think she might be down towards the East end. She was talking about trolling outside Commander's Palace, lookin' for a high-roller. I warned her security don't take nice to us trying to work there.\"\n\n\"Prostitutes?\"\n\nShe gave him a look and her southern drawl deepened. \"Detective, you's vice. You know well as I, hookers is plenty welcome around The Commander, long as they white.\"\n\nEtienne nodded. \"You know Josephine's last name? Where she's from?\"\n\n\"No last name. Where she's from, I'd hafta guess straight outta the bayou.\"\n\n\"Okay, thanks Lolly. Do me a favor, try and stay home for a few days.\"\n\nShe gave a bitter laugh. \"Easy enough for you to say, Detective.\"\n\nHe pulled out his wallet and handed her a twenty. \"Just...be safe. Please. At least try to stay where you and the others can keep eyes on each other.\"\n\nShe looked at the bill in her hand, her eyes wide. \"We do what we can, sir, but it's a solitary job, ya know?\"\n\n\"I know. Try and be careful.\" He turned to go. She caught the sleeve of his coat.\n\n\"You know, detective, it's still early.\" She held up the bill, stepped forward and caressed the lapel of his jacket with her other hand. \"This would buy you the whole evening if you wanted to spring for a room.\"\n\nHe gently disengaged her hand. \"You're mighty kind to offer, Lolly. I'm not one of those cops, though.\"\n\n\"I know that, sir.\" She smiled at him, making very cautious-yet-brief eye contact. \"Only reason I'd ever offer.\"\n\n~~ Four Days Later, Thursday October 15th ~~\n\nEtienne sat at his desk, leafing through a stack of daily patrol reports from the French Quarter. Nothing stood out. He tossed the latest report onto the rather large stack he'd built up and blew out a frustrated breath.\n\n\"Any word from that heroin bust down on the docks this weekend?\"\n\nHe looked up to see Captain Landry standing next to his desk. \"Nothing yet. The mope we hooked up for it hasn't given up his source, which is unusual. I'll be surprised if he wants to go down for the full weight himself and there's no way he imported a brick like that alone. Give him another day or two on ice and I bet he changes his tune.\"\n\nLandry eyed the pile of reports. \"What's all this?\"\n\n\"Patrol reports from the Quarter.\"\n\n\"Uh huh.\" Landry picked up one and thumbed through the pages. \"You're not working a murder, are you detective? Ronaldo told me he thinks you're stepping on his toes.\"\n\n\"Jesus Christ, I'm not... Captain, there's four girls that have been murdered now after the night before last!\"\n\n\"Etienne, I appreciate your concern, but you're not homicide. I need you focused on vice.\" He counted off on his fingers. \"Drugs, gambling and prostitution.\"\n\n\"I'm focused on it, Cap. And right now, these women, who are living and working in my area of responsibility, are not safe. They're being killed.\"\n\nLandry sat on the corner of the desk and lowered his voice. \"I get it, but Ronaldo's connected. I don't need two of my detectives gunning for each other, and if you get in a pissing match, I'm not going to be able to help you. If push comes to shove the Chief's office is going to come down on his side. You know well as I do his daddy works at City Hall. Step lightly.\"\n\n\"It's not like I'm busting the M.E.'s chops or hassling any of his witnesses or asking to see the case files. I'm just chatting up my sources, looking for any kind of pattern or a lead. If I get anything solid, I'll turn it over to Ronaldo.\"\n\n\"Okay,\" Landry rose and slapped Etienne's shoulder. \"You're a good cop, Etienne.\"\n\nHe watched his commanding officer walk out of the detective bay, then turned to look across the room towards the Homicide bullpen. Ronaldo was at his desk, leafing through the Times-Picayune. Etienne rolled his eyes, picked up his hat, and headed out on the streets.\n\nHours of walking around the Quarter that evening, chatting up his sources and various women, left Etienne tired and grumpy. Not to mention thirsty.\n\nThe one thing he had learned is the white women working the street seemed largely unconcerned. \"He ain't huntin' us, he huntin' them colored girls,\" Ruby, a streetwalker he'd arrested more times than he could count, had straight-up told him.\n\nHe found himself walking over to Decatur Street, to Tujague's. It was busy, but only for a Tuesday, which meant he still had his pick of several seats at the bar. There was a jazz trio he hadn't seen before playing in the corner of the room. Setting his hat down on the counter, he slid onto the stool, ordered a whiskey from the bartender, then pulled a cigarette out of his jacket pocket and stuck it in his mouth. He was fumbling for his lighter when a slim, feminine hand held an elegant silver lady's Zippo up towards his mouth, the flame already reaching for his cigarette. Startled, he turned to find a young woman standing next to him at the bar.\n\nShe was slim and willowy, of mixed race, what they called mulatto here in the South. She looked to be in her mid-twenties, with light brown skin and hair the color of mahogany, framing a heart-shaped face and soulful, dark brown eyes. Unlike the current style popular with almost every black woman in the city, her hair wasn't straightened. It was in its natural state, curly, the clips on either side of her head struggling to hold it back as it cascaded down her back. Her emerald satin dress was perfectly suited to a jazz singer.\n\n\"'Allow me, Cher,\" she said, with a smile.\n\n\"Thanks,\" he said, and leaned forward to light his smoke from her lighter. He looked around the bar to take in the expected hostile stares of the white patrons at the appearance of this beautiful-but-not-the-right-race young woman. Tujague's, along with almost every other bar in The Quarter, catered to whites only. The only blacks allowed in a nightclub or bar were entertainers, who were expected to use the back door.",
        "He was surprised that no one had even seemed to take notice of the young lady. Perhaps the lighting was too dim, the drinks too plentiful, for the other patrons or staff to notice his new semi-light-skinned companion.\n\n\"Lovely evenin' tonight, ain't it?\" She had a heavy Cajun accent, a sound familiar to Etienne, a comforting throwback to his childhood growing up in Metairie on the edge of the bayou. His own accent had been tempered during his stint with the Army in the Korean War, but he could still bring it out when it was useful.\n\n\"Ah suppose it is, that.\"\n\n\"You look like you got the troubles of the world restin' on your shoulders,\" she said, sympathetically.\n\n\"Been a long week.\"\n\nThe bartender set his whiskey down in front of him. Again, Etienne was surprised the barkeep didn't take umbrage at the presence of a colored woman at his bar. Etienne held up one hand to keep the barkeep from wandering off.\n\n\"Can I get you something? Pimm's and soda? Glass of wine?\"\n\nShe reached out and picked up his glass. She took a leisurely sip, then licked her lips with a sultry smile. \"This works fine fo' me, Cher.\"\n\nHe arched an eyebrow at her forwardness, the turned to the barkeep. \"Bring me another, please.\" The man behind the counter gave him a strange look, but nodded and wandered away.\n\nShe clearly was after something. It wasn't unusual for him to sit alone at bars and see if he was approached by a working girl. That pretty much never happened with the black prostitutes, as they didn't venture into bars, and it only worked with new girls who hadn't been around long, as they quickly learned to recognize vice. Which probably meant...\n\n\"You're... Josephine, ain't ya?\"\n\nHer smile became even more sultry, if that was possible.\n\n\"O-o-o-h, you a fast one, ain't ya now Detective Cheval?\"\n\nHe tilted his head to one side. \"How is it you know who I am?\"\n\n\"Detective, c'mon now. You a lil' famous on the streets among the ladies.\"\n\n\"Am I now?\"\n\n\"Sho' 'nuff. A white detective, who doesn't seem to have it out for only us colored gals? I hear you bust the white ladies jes as much as us. You even go after them johns too.\"\n\n\"I don't have it out for nobody. Ah'm just doin' mah job, like everyone else.\"\n\n\"Not everyone is, Detective. Doin' they jobs, that is. Too many are jes out to hassle those they don't care fo' or shake us down, or jes sittin' on they asses until they get they pensions.\"\n\n\"You seem awful informed 'bout the NOPD for someone who's only been in town a short time.\"\n\n\"I listen well, Detective. Mah ears stay close to the ground.\"\n\n\"So whatchu doing he'ah tonight? I hope you ain't he'ah to make me an offer, because I'm not that kinda cop and I wanna enjoy my drink. Hate to have to get up off this stool to take you into the precinct.\"\n\nShe laughed, a rich full sound. The laugh of a person with a real thirst for life. \"Cher, I hope I don' give the impression of being a gal dumb enough to solicit someone I just admitted I knew was vice.\"\n\n\"You do not, in fact, give that impression. Fact, you seem a little too sharp to be working the streets.\"\n\n\"Is that so?\"\n\n\"That's a fact.\" The bartender returned with the second drink. Etienne lifted it to her, and they touched glasses before he took a sip.\n\n\"Well, Detective, I'm not he'ah tonight to make you an offer.\" She trailed one finger down his arm. \"Not that kind, anyhow. Come to that, I'm not sure I'd want to charge a man like you anyway, Cher. We could call it a freebie, as it were.\"\n\nEtienne's eyebrows shot up. \"Well, you flatter me, but one, I don't usually date someone I might have to arrest one day, and two--\"\n\n\"Who said anything about a 'date', Cher?\" she said with a grin, cocking her head to the side.\n\nHe ignored her interruption. \"Two, you coming on strong tells me that you want something from me. Something besides a generous financial contribution that you might usually collect.\"\n\nHer grin faltered the slightest bit. \"You are a fast one. Lolly has you pegged, alright.\"\n\nHe took a sip then turned to more fully face her. \"Why don't we cut to the chase. What you lookin' fo' here?\"\n\nShe took a long drink of her own, then contemplated the bottom of her glass. Without looking up she said, \"You got any leads on the monstah what's huntin' us?\"\n\nHis heart softened a bit. \"Josephine, I'm doin' mah best. The NOPD is gon' find this guy and lock him up.\"\n\nShe snorted and looked up at him. \"Sugar, that's the first lie you done tol' me. NOPD ain't worried fo' shit 'bout black whores gettin' kilt. I'm asking what leads you gots. Far as I can tell, you's t'only cop in the city really worried 'bout this situation.\"\n\nHe felt chagrined. She wasn't wrong. \"Fine, I'm gon' find this guy.\"\n\n\"Alright. So, back to my question. Got any leads?\"\n\n\"I can't talk 'bout an open investigation,\" he offered lamely.\n\nShe turned and leaned back against the bar, watching the jazz trio. \"You at least got any kinda description of this... guy?\"\n\n\"So you ladies can avoid him?\" he asked, dodging her question. Truth was he had no leads on the killer. No one did.\n\nShe turned back to him with a gaze full of malice, her tone dead flat. \"So's I kin find 'im.\"\n\nHe stopped with his glass halfway to his lips. He was so shocked he dropped his accent. \"You need to stay off the streets right now, not go chasing after this guy.\"\n\n\"Rabid dogs need to be put down,\" she said. All the warmth was gone from her face.\n\n\"I'll catch him. I'm not going to stop until I do.\"\n\n\"Uh huh. S'pose you do. How many years ya think a white man go'n get for killin' some black hookers? That's assuming he don' get off entirely. Then he's back out agin' and it starts all ovah.\"\n\n\"What makes you think he's white?\"\n\nShe gave him a sour look. \"Sugar, they always white.\"\n\n\"Look, you can't go looking for this guy. It's not safe.\"\n\n\"Neither is working the streets, 'pparently. Now you gon' tell me anythin' 'bout this monstah, or am I wasting my time he'ah?\"\n\n\"I ain't telling you nothin' that you can use to get y'self in trouble. Even if you found him, and if you... tried to take care of him, then either you'd get y'self killed or I'd hafta arrest you for murder. I don't want either of those things to happen. I'd hate to see a lovely lady like yo'self strapped into the 'lectric chair.\"\n\nShe smiled. \"Sugar, that's sweet you think you'd have better luck catchin' me than you currently is having trackin' down him.\"\n\n\"I'm good at my job, I'll have you know.\"\n\n\"I believe you, Cher. If I didn't think you was, I probably wouldn't a' bothered talkin' to ya.\"\n\n\"Guess that'll hafta stand in for an apology.\"\n\nShe laughed her rich, throaty laugh again. \"Darlin, I hardly think you the sorta man whose feelings get hurt so easy.\"\n\nHe grinned. \"Well, now, you might be right about that.\"\n\nDespite this woman's insane assertion that she was angling to track down a multiple-murderer of women such as herself, there was something about her; an allure Etienne couldn't deny he felt. Something he'd never experienced talking to any other lady of the night he'd come across in his job as a vice detective, or his years as a beat cop in the Quarter. She seemed more confident than one would presume, like she was wise beyond her years.\n\n\"So, if you don' mind me askin', how's it a gal from the bayou like yo'self ended up doin' what you doin'?\"\n\nShe gave him a sly grin. \"Don't you think people should do what they best at?\" She ran a finger along the back of his hand. Her touch sent a thrill through him and he had to suppress the urge to shiver. \"Some might say I have a gift in that area.\" She leaned in and whispered in his ear, \"Maybe I'll show you sometime, providing' you can get over your reticence fo'... datin'... a lady such as myself.\"\n\n\"Why sho' that'd be an experience, of that I'm certain.\"\n\n\"Better believe it, Sugar. I's also good at mah job.\" She lifted her glass and finished her whiskey, licking her lips again.\n\nI bet those lips could do some amazing things, Etienne thought. Then he blinked at himself. Where the hell'd that come from? Stay professional, son.\n\n\"So how's you end up running with Lolly and Alice anyways? Most girls walkin' the streets are hard luck cases. You don't seem like someone who would ever let hard luck find her.\"\n\n\"Not hard luck at all. And fo' sho some'tin I ain't planning to do as a career, Detective. But if the opportunity is to present itself fo' me to come across this monstah, I have to be running where he is, no?\"\n\nHis face turned hard again. \"Josephine, ah'm tellin' ya, you cannot be trying to find this guy. It's too dangerous.\"\n\n\"That's sweet, Sugar, but the only men who getsta tell me what to do is them who's paid me first. You ever decide to come around on me, I'll let you tell me what to do though, even fo' a freebie. But not... in this partic'lar case.\"\n\n\"Look--\"\n\n\"Thanks for the drink, Sugar. I'm certain our paths gon' cross again.\"\n\nShe leaned in and kissed him on the cheek, then took a step back to let a waiter carrying a large tray of drinks pass between them.\n\n\"Josephine, I--\"\n\nHe stopped in confusion. The waiter moved past and she was... just... gone. He stood from his barstool and scanned the room. He suddenly spotted her, a good fifty feet away, exiting out the open French doors to Decatur Street. He quickly fished out a bill and dropped it on the bar next to his empty glass, then hustled out the doors onto the street.\n\nWith the exception of Fat Tuesday, the second day of the work week normally made for slow traffic in the Quarter. The street was sparsely occupied, mostly couples walking arm in arm.\n\nThere was no sign of Josephine in any direction.\n\n\"What the hell?\" Etienne muttered to himself, turning in circles, scanning the street.\n\nEighteen blocks to the west, two young women stood together on a street corner near a bar in the rougher area of the Quarter.\n\n\"T'night sho' been a bust,\" Alice said.\n\n\"Thassa a mouthful. Hope once we get closer to Halloween the tourists pick up,\" Nanette agreed.\n\nThe black girls working the Quarter usually made almost all of their money from white tourists from up north looking to satisfy their 'jungle fever' curiosity. White New Orleanians were not generally on their list of frequent customers. There were the rare locals looking for something their wives wouldn't give them who, for one reason or another, favored the black hookers over the whites. Black men tended to stay away from the popular tourist area to avoid being hassled by the cops for existing in the white folk's space.\n\n\"If'n I hadn't spent my last dollar on groceries this mornin', I don't think I'd even be out here tonight. Not worth it. Maybe--\" Alice broke off as she spied a middle-aged white man approaching them hesitantly. \"Hold the phone, we got a live one,\" she muttered to Nanette out of the corner of her mouth.\n\n\"Hello, girls... ah, I mean ladies, I... Ah, I was wondering if ah...\"\n\n\"Looking for a good time, Sugar?\" Alice purred as she stepped towards him, and wound her hands around the man's upper arm, pulling him close. \"Oooh! You a strong one!\"\n\nNanette had to stifle a laugh. The portly man was probably a salesman in town for some convention. Strong was not a word Nanette would use for him. She was briefly envious of how quickly Alice had moved on him. She was always quick to land a fish, and this gentleman looked like he'd both have deep pockets and a short fuse. A good combination, far as she was concerned.\n\nAfter some whispered negotiations, Alice was pleasantly surprised when he offered his nearby hotel room for the night's activities. The girls pooled their money for a tiny rented room in a flop house off Decatur Street for times customers wanted more than a hand job or whatever could be managed in an alley. A customer offering a real hotel room was a rare and pleasant (relatively speaking) occurrence. Most of the hotels wouldn't let colored women past the lobby, though, so it would be tricky for Alice to get up to his room.\n\nNanette jealously watched Alice head off arm-in-arm with her new-found fish.\n\nAfter another hour of no potential customers, she decided to call the night a wash and head back to the run-down boarding house on the edge of the Lower Ninth Ward she shared with Alice, Lolly, Josephine and, until recently, Sally. Thinking of her friend made her squeeze her eyes shut in sadness for a moment.\n\nShe was waiting for the streetcar to come trundling down the road when a familiar face walked up to her.\n\n\"Evening, girl,\" he said.\n\n\"Sir.\" She eyed the middle-aged white man. He'd seen her a few times before.\n\n\"Got a little time fo' me?\" he asked.\n\nShe debated with herself. The few times she'd serviced this particular customer hadn't been particularly pleasant, but neither had it been particularly unpleasant. She could use the five dollars for rubbing out a quick one, as she recalled he liked, but with everything that had been happening on the streets lately, she hesitated.\n\nHe saw her hesitation, looked around, opened his wallet and held up a folded ten-dollar bill between two fingers. Twice her normal fee for what he liked.\n\n\"Fo' this kinda money, you want to go to my room?\" she asked, taking the bill and slipping it in her purse.\n\n\"No, over the'ah's fine,\" he drawled.\n\nShe sighed. For some reason he liked doing it in an alley, rather than indoors. They waited until there was a lull in the foot traffic then slipped into an alley behind one of the ubiquitous bars of the Quarter.\n\nAfter taking a look to make sure they were out of sight from casual passers-by on the street, Nanette set her purse on the lid of a trash can, gently pushed the man back against the wall and unbuckled his pants. As he lowered his white briefs to mid-thigh, she took him in her hand and began to stroke him. Gently. She recalled he usually didn't like it rough.\n\nHe leaned head back against the wall as he quickly became hard in her palm. She stood to one side, intent on not getting his seed on her when he climaxed. After a few minutes of her quietly stroking him, he sighed with pleasure.\n\n\"Would you mind using your mouth?\" he whispered.\n\nShe cringed. Not her favorite thing. She'd rather just fuck him, to be honest. \"Umm... not tonight, Honey. Maybe another time.\"\n\nHe reached into his pocket and pulled out another bill. \"Please?\"\n\nAs she weighed her decision, she continued stroking him, and took the bill with her free hand and held it up in the dim light. A twenty. That would make this a really good night for a Tuesday, and she could get home before midnight.\n\n\"Alright, just this once. But you warn me 'fore you get there, hear me? I don't want it in my mouth!\"\n\n\"Thank you.\"\n\nIt was always odd to have a white man thank her for anything. Especially for something they paid her for. Something I bet his wife isn't doing for him, she thought, eyeing the wedding band on his finger.\n\nShe checked the alleyway entrance again, then squatted down in front of him. She wasn't about to ruin her stockings kneeling on the alley floor.\n\nShe held him steady with one hand, and looked up at him. He was staring down at her in anticipation. She didn't make him wait, leaning forward and taking the head of his cock in her mouth, sliding her tongue wetly along the underside. He sucked in a breath.\n\nNanette started bobbing her head along his length. She didn't think he'd last long, and as his breathing quickened she felt she'd made a safe bet.\n\nHe raised a hand and slid it into her hair and she stopped, reaching up and trying to gently disengage his hand.\n\n\"For thirty dollars, you can let me hold your hair!\" he growled.\n\nShe was slightly taken aback. This was far more assertive than this man had ever been with her. Fine, faster he pops, sooner I'll be on that streetcar.\n\n\"Okay, Honey, but you remember to tell me when you comin', he'ah?\"\n\n\"I will,\" he said, groaning as she took him back into her mouth.\n\nHe used his hand on her head to set the pace, a little faster than she preferred. Soon enough he groaned, and she felt his hand tighten in her hair and he grew even stiffer in her mouth.\n\n\"I'm gonna... gonna...\" he moaned.\n\nShe took her mouth off him and started jerking him quickly, trying to move aside to get clear. He held her tightly in front of him by her hair though, preventing her from rising, then his hips jerked and he started shooting ropes of sticky cum all over her dress, one especially long jet splashing along her cheek and neck.\n\n\"Godammit!\" she hissed, looking up at him in anger. \"You got this shit all over my dress!\"\n\n\"I'll give you another twenty,\" he said then pulled her back towards him. Before she could respond, he forced his cock back into her mouth, and groaned in pleasure.\n\nHellfire, I have to wear this dress home like this now! she thought as she reluctantly sucked him clean, his penis jerking and pulsing with the last dribbles of his seed.\n\nHe finally let her go and she stood. He opened his wallet and handed her another bill. She glared at him, took the money, checked and saw it was another twenty, and then reached out and yanked his handkerchief from the breast pocket of his jacket and used it to wipe her face off.\n\n\"That was real good, girl,\" he said as he buckled his trousers.\n\nShe spat a gob of cum onto the alley floor.\n\n\"Honey, let me tell you something,\" she said, venom dripping from her voice. He looked abashed, as if he knew he was about to get a tongue-lashing, and not the pleasant kind.\n\n\"Look, I'm sorry, I--\"\n\n\"What imma tell you, Honey, is that if you want to do that, we don't do it in the alley. Fifty'll get you want you want, plus you spring fo' a room so I can take my dress off first. You've ruined this one.\"\n\nHe managed to look both relieved and interested at the same time.\n\n\"You sayin' for fifty and a room, I can do that when you's naked?\"\n\n\"Everything's got a price, Honey. Doing that in an alley and ruining my dress comes at a steeper price than fifty dollars.\"\n\n\"I... I'm sorry, that's all the cash I have on me tonight.\" He looked almost ashamed, but added hurriedly, \"But, if'n you want, I'll meet you next Tuesday night and make it up to you. Another fifty plus some extra for yo' dress.\"\n\nShe tried not to roll her eyes. Still, this guy came so quick, it'd be another easy fifty plus whatever she could shame him out of for his treatment of her tonight.\n\n\"Fine, Honey. I'll look for you next Tuesday right out here. Same time, eight o'clock?\"\n\n\"My Masonic meeting gets out between eight and eight-thirty, but my wife thinks they end at ten.\"\n\n\"I don't care where yo' wife thinks you at, Honey. Just what yo' wallet has to tell me.\"\n\n\"Right,\" he grinned.\n\n\"Now go on, git. I don't want to walk out of t' alley with you. Gonna take me a minute to get cleaned up.\"\n\n\"Alright. Uh... thank you,\" he said again.\n\nShe forced a smile. \"Yo' welcome.\"\n\nShe watched him leave as she pulled another handkerchief from her purse and wiped at the stains over her breasts. After she got herself as presentable as she thought she could, she picked up her purse, contemplating whether she should walk home or risk the streetcar and having someone notice the faint lines of drying sperm on her dress.\n\nAs she took a step towards the alley entrance, an arm snaked around her throat and yanked her back. She tried to scream but a hand clamped over her mouth.\n\n\"You colored whores are all the same!\" a voice hissed in her ear, the man's breath sour in her nostrils. \"Degradin' yourselves t' no end, to take white men's hard-earned money!\"\n\nShe flailed with her purse, trying to strike the man behind her, but the arm around her throat only grew tighter. The dim light in the alley grew dimmer while spots appeared at the edge of her vision.",
        "How is it getting darker but I'm seeing stars? A detached corner of her mind wondered. Her heels were scraping a frantic tattoo on the pavement, trying to find some purchase to resist her attacker, as she clawed at the arm around her throat. I don't want to go out like this!\n\n\"No more,\" the voice whispered in her ear. \"I'm ending your depravity, whore!\" His voice was dripping with satisfaction.\n\nGod, this is how poor Sally went! I don't want... I don't... Her thoughts began to slip away.\n\nThe last thing she heard was a sharp cracking sound, like a dry branch being snapped.\n\n~~ Four Days Later, Monday October 19th ~~\n\nEtienne stood at the edge of Mount Olivet Cemetery, a historically black cemetery, watching from a distance. The funeral was small, less than a dozen attendees standing around the small, four-door marble sepulcher with Nanette's family name carved in the pediment. He recognized Lolly and Alice, as well as a few other girls that he didn't know that well. To his surprise, Flo from The Clover Diner was there too. He shook out a cigarette from his pack as he waited.\n\n\"Cheval, whatchu doing here?\" he heard behind him.\n\nHe turned to see Sam Ronaldo walk through the gates of the cemetery to join him. Etienne held out his pack and Ronaldo reached out to pluck a smoke for himself, nodding his thanks.\n\n\"Paying my respects. You?\"\n\n\"Looking to see who shows up,\" Ronaldo said, lighting both cigarettes with his own lighter.\n\n\"What for?\" Etienne said, then took a drag.\n\n\"Read something that murderers who go on a run like this sometimes show up at crime scenes or funerals to watch. Gets 'em off, supposedly. Dunno how much I believe that college-boy bullshit, but I got nothing solid on these cases.\"\n\nEtienne nodded. He was also here for the same reason, but didn't tell Ronaldo that. No reason to advertise that he was probably working these murders harder than homicide.\n\n\"You comin' to Stan's poker game Saturday?\" Ronaldo asked him.\n\n\"Don't know. Might have some work going on,\" Etienne said after a long drag of his cigarette.\n\n\"Good,\" Ronaldo said. Etienne eyed him questioningly. \"You damn near cleaned me out last month. Without you there, I might make some of it back.\"\n\nEtienne gave an amused snort. They stood, watching the ceremony down the aisle of the mausoleums. The water table in New Orleans was so high that most tombs were above ground to prevent the coffins from floating to the surface during heavy rains. Most mausoleums had six, eight or even more doors, depending on a family's wealth. Families would bury generations in them, breaking up the older coffins and laying the bones in the bottom of the tombs when new space was needed.\n\nRonaldo finally broke their silence, \"You get your card from the widows this month?\"\n\nEtienne shifted uncomfortably. The widow's and orphan's fund was a euphemism for the under-the-table racket run by the police in the Eighth Precinct. Businesses paid monthly protection money, collected by the beat cops, who distributed it throughout the precinct. Businesses that chose not to participate would find that any calls to the police would be answered in a less than urgent fashion. They also seemed to have a much greater than usual frequency of broken store windows.\n\nOnce a month Etienne found a small envelope with a few hundred dollars under the blotter on his desk, along with a list of businesses that were not current on their payments.\n\n\"Yeah, I got it.\"\n\n\"Widows' and orphans' day is my favorite day besides payday,\" Ronaldo said, taking another drag on his smoke.\n\nEtienne grunted. He didn't like it, but not taking it wasn't an option. Turning down his cut of the widows' and orphans' fund would mark him as someone out to upset the way things were done in New Orleans; a threat to the rest of the force. He'd quickly find himself on the wrong end of a street mugging, or someone would find \"evidence\" of him being on the take, or maybe a stash of drugs in his desk. It was easier just to take it and keep his mouth shut. Besides, he'd never have been able to afford his French Quarter apartment without his monthly graft.\n\n\"I only see the one male, 'sides the preacher. Wonder if that's him,\" Ronaldo said, gesturing to the group by the tomb.\n\nThe black man in the group that was gathered in a semi-circle around the open sepulchre door had caught Etienne's eye as well. He was of medium height, but his cheap suit didn't hide the muscles that bespoke a life of hard manual labor.\n\nEtienne puffed out a cloud smoke thoughtfully. \"Dunno. He looks pretty tore up. I can't imagine someone who'd killed all those women being that sad about it.\"\n\n\"He's a strong lookin' bull, though. Bet he could snap a girl's neck easy.\"\n\nEtienne didn't say anything to that.\n\nThe ceremony ended after the cemetery workers slid the plain wooden coffin into the tiny, four-door mausoleum. The group of mourners made their way towards the gates where Etienne and Ronaldo stood. Lolly and Alice led the party.\n\nEtienne respectfully removed his hat as the funeral party neared him. Ronaldo looked at him askance and did not remove his hat.\n\n\"Lolly, Alice, my condolences,\" he said.\n\n\"Thank you, Detective Cheval,\" Lolly said, with solemn dignity.\n\nAlice looked at Ronaldo, \"You any closer to catching who did this, sir?\"\n\nRonaldo ignored her and blew out a huge cloud of smoke towards the mourners. He looked at the man with them. 'Who might you be?\"\n\n\"Jasper Green, suh,\" the man said, in a quiet voice. His eyes were red from crying.\n\n\"Uh huh. Where were you three nights ago?\"\n\nShocked silence fell over the graveyard.\n\nFlo broke it, angrily snapping, \"Jasper is Nanette's brother, Detective. You here to imply that he's the murderer?\"\n\n\"No reason he can't be both,\" Ronaldo said.\n\n\"Jesus Christ, Sam,\" Etienne muttered.\n\n\"I's in Waveland, working at th' canning factory, suh. Same as erry day,\" the man said resentfully. \"Boss man gave me th' day off fo' the funeral.\"\n\n\"What yo' boss's name, so I can make sure you ain't lying to me, boy?\"\n\nFlo stepped around Lolly, and slapped Ronaldo hard across the face, the impact rocking his head back.\n\n\"Ow!\" Ronaldo said, reaching up and rubbing his cheek, a red handprint already springing to life on his skin. \"The fuck you do that for?\"\n\n\"You had it comin', trying to bait one of these poor, grieving folks into doin' that so you could lock 'em up, but I don't think you'll be quite so quick to lock up a white woman.\"\n\n\"That right?!\" he snarled.\n\nEtienne took him by the elbow and led him towards the gates. \"Sam, go on now. Let's not let this get outta hand.\"\n\n\"You takin' their side, Etienne?\"\n\n\"No, I'm trying to keep you from doing something you'll regret,\" he said, his voice pitched so only Ronaldo could hear him. He glanced back at Flo. \"You want to never be welcome to eat at The Clover again?\"\n\nRonaldo said nothing. He glared at Flo, then spun on his heel and stalked off. Etienne returned to the group.\n\n\"I apologize for Detective Ronaldo's behavior.\" He looked at Jasper and nodded. \"My condolences on your loss, Mr. Green.\"\n\n\"Thanks, boss,\" Jasper replied.\n\nThe funeral party moved on, but Flo remained.\n\n\"That man has all the couth of a swamp gator,\" Flo said.\n\n\"I think the gator mighta said something a little more comforting right then.\"\n\nFlo smiled briefly. \"Thank you, Etienne. I know you're tryin' to catch The Monster. I think Ronaldo's just lookin' for someone he can hang for it, whether he gets the right man or not.\"\n\nEtienne sighed. His instinct was to defend the NOPD's reputation, but he knew when it came to finding justice for colored victims, the department didn't have much to brag about.\n\n\"Doin' what I can, Flo.\"\n\n\"I know darlin'. See you tomorrow mornin', as always.\" She walked through the gates, leaving him to watch the two cemetery workers sealing up the mausoleum door behind Nanette's plain, wooden coffin.\n\nAfter the workers left, he put his hat back on and walked over to the tomb. The family name of Green was carved into the small pediment above the coffin doors. He ran his hand over the space where he assumed they would add Nanette's name when the cemetery could get around to it. Or when the Greens could afford it. The Green family mausoleum was very modest compared to most others in the cemetery.\n\n\"That was gentlemanly of you,\" he heard from behind him. He turned and found Josephine standing behind him.\n\n\"Sorry?\" he said, stupidly. In the daylight, it was far more obvious the woman was of mixed race, her light golden-brown skin glowing in the afternoon sun. She wasn't dressed for working the streets. Instead she wore a simple black dress that ended below her knees, with a wide black belt around her waist. A matching clutch purse, black gloves and a pill-box hat with a black lace veil that covered the top half of her face completed the look.\n\n\"Ah said, that was awful gentlemanly of you. Standin' up for those po' people.\"\n\n\"Shoot, all I did was keep things from getting outta hand. Flo's the one who put him in his place.\"\n\n\"Any lil' thing helps, Sugar.\"\n\n\"When did you get here? I didn't see you during the service.\"\n\n\"Ah was here,\" she said, vaguely waving a hand around at the graveyard. By unspoken agreement they both turned and started towards the cemetery gates, Etienne pacing her as they walked leisurely side-by-side, down the sidewalk towards The Quarter. \"Jes keeping my distance, lettin' the family and friends have they moment together. Ah ain't been around so long as to be one of the, ah, family, as it were. So ah's paying my respects from afar. Much like yo'self.\"\n\n\"So, you been keepin' off the streets like I warned you?\"\n\nShe smiled. \"Sugar, ah done tol' ya, you kin' only tell me what to do if'n ya pays me. Or takes me up on that freebie.\"\n\nEtienne cleared his throat. He'd been propositioned by more street walkers than he could count, almost always in an attempt to get out of a bust. Josephine's advances seemed more genuine than any he'd ever experienced from a prostitute. Certainly, they were more tempting. He was definitely drawn to her.\n\n\"Thanks, but I think I made myself clear, long as yo' line o' work and mine are at cross-paths, that's probably not a good idea.\"\n\n\"Yo' loss, Cher.\" Her smile faded. \"Anyway, stayin' off the streets won't help me find The Monstah, now will it?\"\n\nEtienne decided to humor her for a moment, in the hopes of reasoning with her.\n\n\"What you gon' do if you do come across The Monstah?\" He asked. It seemed like everyone outside the NOPD had decided to refer to the killer as 'The Monster'. The words fell easily from his lips as well. \"That lil' bag you got yo'self there ain't big enough to hold no gun.\"\n\nShe looked down at her clutch purse and the smile returned. \"Appearances can be deceivin',\" she said, her eyes twinkling in amusement under the lace veil.\n\n\"Where you from, ya don't mind me askin'?\"\n\n\"I wuz born he'ah, but I wuz raised near New Iberia.\"\n\n\"Near there? Not much o' nothin' near there.\"\n\n\"Daddy was a Cajun crawfisherman. Grew up deep inna bayou.\"\n\n\"What about yo' momma?\"\n\n\"Momma... momma wasn't around much. She had other goin's on.\"\n\n\"Yeah?\"\n\n\"She was Louisiana Creole, from th' city. Ah's never quite cleah as t' how they ended up meetin' t' make me. Daddy was also a traiteur. He travelled a bit, helping' people what's was sick. Maybe dat's how dey met.\"\n\n\"That right?\" Etienne, remarked, amused. Traiteurs were Cajun healers, thought to have mystic powers to cure disease given by God. Etienne's mother had brought one to their house when he had scarlet fever as a child. He was pretty sure it was coincidence that he recovered soon after, but he always thought fondly of the portly woman with the kind face and soft hands who had cared for him in her own strange way. \"What'd yo' momma do?\"\n\n\"Daddy told everyone she was a voodoo priestess.\"\n\n\"Do tell,\" Etienne said, fighting down the urge to laugh. Her story was getting wilder by the second.\n\n\"S'true. She was from the line of Marie Laveau.\"\n\n\"The Marie Laveau, huh? That would make you royalty of Crescent City, wouldn't it?\"\n\n\"That's right, Cher. Th' heir apparent.\"\n\nMarie Laveau was a free black woman who lived in New Orleans in the first part of the nineteenth century. Born in 1801, legend had it she'd ended up running the city from behind the curtains, with people believing she had great powers. When she died, thousands had attended her funeral, including many of the white elite class of the city. Her tomb in St. Louis Cemetery had become a tourist attraction. Popular lore held that if you drew three \"X\" marks on her tomb in chalk, Marie would grant you good luck for a year. It had also been rumored that she'd been seen in multiple times and places around the city for years following her death in 1881.\n\n\"Well, your majesty,\" he said, doffing his hat to her theatrically, \"it's an honor to meet a great-great-great-granddaughter of our own Voodoo Queen.\"\n\n\"Why, thank you Detective,\" she said, and paused to curtsy elegantly, the motion fluid and full of grace. They grinned at each other in shared amusement as they resumed walking. \"If I might ask, how is it you seem to be more, ah... tolerant, shall we say, of us colored folk? My daddy suffered no end o' grief from the bayou folk for raisin' a child like me, him being white an' all. You from the bayou, I'd expected you might be th' same kind o' awful as that Detective Ronaldo.\"\n\nHe puffed out his cheeks. \"Well, I'd like to say something like it was because we wuz poor and my momma taught me not to look down on coloreds because we wasn't much higher up the social ladder, but that ain't true. Momma would have loved to have been better off and enjoyed lookin' down on the colored folk in our town for bein' less than us. Think she felt steppin' on them raised her up.\"\n\n\"What 'bout you?\"\n\n\"Most o' my life, I didn't have the experience to have a different opinion, ashamed to say.\"\n\n\"So what turned you 'round?\"\n\n\"Korea,\" he said, while shaking out another cigarette. He offered her one, which she politely declined.\n\n\"You was in the war?\"\n\n\"Yeah. I wasn't happy about being drafted, and since Truman desegregated the Army back in forty-eight, I sho' was upset when I showed up at Fort Jackson and a third of my training platoon was black. After a while, though, realized all I cared about was if the guy next to me was digging his foxhole fast enough and shootin' straight enough. Damn if the colored boys wasn't as good a' soldiers as any of us white ones if'n you gave 'em the chance. When you got a wave of Chinamen headed toward you and the guy next to you can knock 'em down fast as you can, you don't rightly care what color he is.\"\n\n\"Hmmm,\" she offered thoughtfully. By this time, they'd reached the edge of the Quarter.\n\n\"I'm 'bout ready for some lunch,\" Etienne said. \"Fancy a bite? There's a lunch counter 'round the way that serves whites and blacks both. I think it's really supposed to be a black restaurant but the etouff\u00e9 is so good it doesn't stop a few open-minded white folk from eating' there now and then.\"\n\n\"Why Detective, you askin' me on a date?\" she asked, with a sly smile.\n\n\"I, ah...\" He felt himself flush. \"I'm only talking 'bout lunch, Miss Josephine.\"\n\nShe laughed delightedly. \"Detective, yo' ears turn a lovely shade of pink when you's embarrassed. Don' worry none, I gots to go back home and get a little sleep. Streets gon' be busy this evening. I need to be ready to go a'huntin'.\"\n\nHe stopped walking, and reached out to gently take her arm.\n\n\"Miss Josephine, please, I'm askin' you, please don't be tryin' ta find this guy. Stay in busy areas. Try to stay where you girls can watch each other. Or better yet, just stay off the streets. For a while. Please?\"\n\n\"Sugar, I appreciate you carin' 'bout us girls. It's touchin', really. Says good things 'bout you.\"\n\nHe let go of her arm. \"But?\"\n\nHer face turned hard under her veil. \"S'like I tol' ya. Rabid dogs needs t' be put down.\"\n\nHe sighed. \"You makin' more work fo' me Miss Josephine. Now I'll have to be out there tonight trying to watch out you along with the others.\"\n\nShe chuckled. \"If you c'n find me, yo' welcome to watch me, Cher.\" She looked him up and down and he got the distinct impression he was being looked at like a choice cut of beef at the grocery counter. \"Fact, if you ever want that freebie, you can watch me to yo' heart's delight. It'd be my pleasure.\"\n\nHe grinned uncomfortably and straightened his tie. \"You're mighty flattering, Miss.\"\n\n\"Hope to run up against y' again, Detective. I usually hang by that bar over the'ah on Friday nights.\"\n\nEtienne turned to see which bar she'd pointed at behind him, then turned back.\n\n\"By the way, I never have caught your last...\" he stopped. She was gone. He stepped off the sidewalk to look around the street, but there was no sight of her.\n\n\"...name. How in blazes does she do that?\" he muttered.\n\n~~ Four Days Later, Friday October 23rd ~~\n\nEtienne found himself stalking the streets of the Quarter well after midnight once again. He'd been trying to keep an eye on as many of the girls as he could every night this week. Discreetly, of course. He'd only seen Lolly twice, Alice once. He hadn't seen Josephine at all since Nanette's funeral; a fact which, he admitted to himself, had him popping far more antacids than he usually did in a normal week.\n\nAll his street sources and snitches had nothing on the killer. Speedy Jones, one of his more productive snitches in particular, was getting annoyed with him that he wasn't interested in a tip on a new pusher selling Mary Jane in the Quarter.\n\nHe'd forgone any pretense of arresting either prostitutes or johns as well, not wanting to be off the streets doing paperwork. Instead, he'd assumed the role of the watchman of the Quarter, skulking around in alleyways, watching streetwalkers ply their trade from the shadows, and ready to jump in if he thought things were going south.\n\nSo far, all it he'd accomplished was to make himself feel like a peeping Tom.\n\nAt least no more bodies had been found. At least her body hadn't been found, he thought.\n\nHe was headed south, toward the Port, The Clover Diner, and a much-needed cup of coffee when he heard a high-pitched cry come out of an alley off Commerce Street.\n\nHe quickly sidled up to one side of the alley entrance, one hand reaching under his suit jacket to the small of his back where he kept his snub-nosed .38 Special. He'd wrapped his hand around the butt and started to peer around the corner into the alley when a short, balding man came stumbling out onto the street with a frightened expression on his face, holding his pants up with one hand. He rushed past Etienne, his eyes wide, face pale.\n\nEtienne paused for a moment, watching him hurry away, then turned back to see Josephine emerging from the shadows of the alley, evening dress a little too elegant for a streetwalker and slightly askew. He let go of the butt of his pistol and couldn't help but lower his eyes to the roll of her hips as she sashayed towards him.\n\n\"Evening Miss Josephine. Havin' a spot a trouble tonight?\"\n\n\"Not 't'all, Detective. That man the'ah wanted a little attention. I wanted to find out if maybe he was the killa. He took my, ah... encouragement a lil' wrong is all. My guess, he don' like it that rough with his ladies and ah skeered him.\"\n\n\"Jesus, woman! Is that yo' plan to find The Monstah? Pick up johns and encourage them to get rough? What you think that's gon' do, 'sides get you killed?\"\n\n\"Cain't catch The Monstah without bait, Detective.\"\n\nEtienne huffed out a frustrated breath. \"Miss Josephine, am I gon' hafta lock you up for a few nights to keep me from gettin' an ulcer?\"",
        "\"Up to you, Cher. If you think you can catch me.\"\n\nEtienne looked down at her baby doll shoes with three-inch heels, and started laughing. \"You at least done tonight I hope?\"\n\nShe looked around at the sparse foot traffic. \"Guess I am. Don't look like there's much goin' on now. Suppos'd ta meet Lolly and Alice at The Clover right 'bout now anyways.\"\n\n\"Huh. I'm headed the'ah m'self.\"\n\n\"Sho' that ain't coincidence, Cher. You can escort me t' keep me safe from the Monstah, for a lil' while least.\" Her tone suggested the idea was amusing.\n\n\"Sho' yo' right. After you.\" He held out a hand courteously in the direction he'd been heading and they walked side-by-side towards the port district.\n\nThe Clover looked to be empty when they arrived, but Etienne could see Flo had up the portable divider the diner used to screen off the back set of tables when they had a large dining party.\n\n\"Thanks kindly for the walk, Detective,\" Josephine said as they walked through the double glass doors, then she headed around behind the screen. Etienne sat at the empty lunch counter as Flo came out of the back with a plate in each hand. Eggs, bacon and grits, it looked like.\n\n\"Hey, darlin' be right with you,\" she said. She delivered the plates to the back, then returned to the counter and poured Etienne a cup of coffee. From midnight until six, Flo was the only one working, so she did both the cooking and waited on the customers.\n\n\"Anything to eat tonight?\"\n\n\"Just coffee, thanks.\"\n\n\"Any luck out there?\"\n\n\"Nothing going on, far as I can tell.\"\n\n\"Least we haven't had another since poor Nanette.\"\n\n\"Thank god,\" Etienne agreed, making the sign of the cross. For good measure, he spotted a few grains of salt on the counter, pinched them between his finger and thumb and threw them over his left shoulder.\n\n\"Alright honey. I gotta go make one more plate, back in a bit.\"\n\nEtienne took a sip of coffee, then set his cup down and pinched the bridge of his nose, trying to will away the incipient headache creeping up on him. This isn't working, he thought. Creeping around, watching all the hookers and trying to catch this guy in the act. The Quarter was too big, there were too many girls to keep an eye on. What can I do differently? Maybe if--\n\nHis thoughts were interrupted by a loud crash from the kitchen. He heard Flo's voice, sounding alarmed.\n\n\"Red, what are you doing here?!\"\n\n\"This is my place! I don't need a reason to be here! I saw you got the screen up, you let them in here, didn't ya? Now get outta mah way!\"\n\nRed burst through the swinging doors of the kitchen, wearing a rumpled brown suit with a tear on the sleeve and the hem of his jacket, instead of his usual dirty t-shirt and apron, a heavy frying pan in his grip. He made a beeline for the back, grabbing the privacy screen and throwing it against the wall with a crash to reveal a very frightened Lolly and Alice. Josephine, however, looked to be simmering with anger rather than fear.\n\n\"You whores get the hell out of my diner!\" he yelled. He raised the frying pan and pointed it at one of the large signs on the walls that read Whites Only.\n\n\"Red, stop!\" Flo yelled, and tried to pull him back as he loomed over the frightened women's table. \"There's no one else here! The nearest colored restaurant open at this time of night is a mile away in the Ninth Ward!\"\n\n\"I don't give a shit! These colored girls ain't allowed in my place!\" He said, angrily shaking off Flo's grip.\n\nThe three women grabbed their purses as they stood from the table. Lolly and Alice started moving quickly toward the door. Josephine didn't move, placing herself between the angry cook and the other women.\n\n\"You hear me, whore?\" Red snarled, \"I want you out!\"\n\n\"Hear you jes fine, sir,\" she said, her voice dripping with insolence. \"Jes makin' sho you don't do som'tin you might regret, afore my friends get safely outta he'ah.\"\n\nRed's eyes widened with shock and anger as his face turned the color of his namesake, then he raised the frying pan and took a step toward her as Flo yelled, \"Red, don't!\"\n\nEtienne, unnoticed by Red until now, stepped up behind him, neatly plucked the pan from the beefy man's grip, and with a twist of his wrist, sent him spinning him away from Josephine and crashing into a table in the process. Red caught himself awkwardly, managing not to go to the ground. His suit stank of cigarette smoke and Etienne could smell liquor on his breath from six feet away.\n\nRed turned back towards him, snarling, and took a roundhouse swing at Etienne. Red was a veteran of World War Two, and carried quite a bit of muscle, but he was slow. Etienne was at least fifteen years younger, and easily dodged the powerful haymaker. Good thing too, as it probably would have laid him out, had it connected. He took another step back and flashed the badge inside his jacket to Red.\n\n\"Red, why don't we all calm down now?\" He could see Red slowly realize who his new adversary was.\n\nWith the realization that a policeman was standing in front of him, the diner owner changed tactics. \"Officer, these colored girls is breakin' the law, eatin' in here. I want 'em arrested!\"\n\n\"Nah, don't think that's happening Red. They gon' go on their way and we gonna forget all 'bout tonight.\" Etienne tossed the pan on the ground in front of Red, where it landed with a loud clang.\n\n\"It's illegal for coloreds to sit in a whites only establishment! I want them arrested!\"\n\n\"Fair 'nuff, you can make me do that, it's within your rights. Long as you know if I take them in, I'm also takin' you in for assaulting a police officer, with a side of drunk and disorderly. Now, you want that, or you want we just call it a night?\"\n\nSilence fell over the diner, broken only by the grinding of Red's teeth. Lolly and Alice were already nowhere to be seen. Josephine hadn't budged an inch.\n\n\"Fine,\" he hissed, picking up the frying pan from the floor, \"but I want you outta here, whore!\" He snarled, pointing the pan at Josephine. \"I don't want to see you near here again!\"\n\n\"Don't worry none, Sugar. Don't think you will.\" She turned and walked toward the door with her head held high.\n\n\"Someone needs to end your depravity! You and all t'others! Put an end to you parasites, sucking respectable white men dry! Put you in your place!\" Red called after her. Then he turned on Flo, \"And you, you're fired! Get the fuck out!\"\n\nFlo was pale, but said nothing in return. Etienne waited as she went behind the counter to collect her coat and purse, then walked her out.\n\n\"I ain't serving you no more either, Detective, you hear? I don't want you comin' back here again!\" Red called to his back.\n\nEtienne ignored him. He waited until Red locked the doors of the diner behind them before turning to Flo and Josephine. Alice and Lolly were nowhere to be seen.\n\n\"I'm real sorry that happened, ladies.\"\n\n\"Nothing I ain't used to, Detective.\" Josephine said. She nodded at Flo. \"I'm sorry you lost yo' job, Miss Flo. It wuz kind o' ya to stand up fo' us.\"\n\n\"'Course, dearie. It's not the end of the world, I--\" She paused as all the lights in the diner went out and she and Etienne turned to look at the windows. \"Anyhow, I--\"\n\nWhen they turned back, Josephine was gone. They glanced in both directions but saw nothing but empty streets.\n\n\"What in the world?\" Flo said, confused. \"Where did she go?\"\n\n\"Hang around her long enough, you'll get used to that, I'm guessin'. Although I still ain't,\" Etienne said with a chuckle. \"Can I walk you home, or to the streetcar?\"\n\n\"Thanks sweetie, I'd appreciate that. Not that The Monster is after a woman like me, but walking through empty streets in The Quarter in the middle of the night is enough to make a gal uncomfortable on a good day.\"\n\n\"Where do you live?\" Etienne shook out a smoke and offered her one as they headed down the street towards a streetcar stop.\n\n\"The Garden District,\" she said, as he lit her cigarette for her. She noticed his raised eyebrows. \"Don't think too much about that. I rent a one room apartment above a garage, owned by someone who can afford to live in the Garden. I can't afford to live there, or 'least I couldn't if not for the kindness of my landlord.\"\n\nThey walked in silence for a few blocks, then Etienne said, \"So, I gotta ask, why'd you let those girls eat at The Clover anyways? You had to know if you ever got caught Red would fire you. Hell, Flo, you could have been arrested if the wrong cop was there in a bad mood.\"\n\n\"Can't someone be kind to someone else in a bad situation without a reason?\" Flo snapped.\n\n\"Sure, they can,\" he said placatingly.\n\nAnother block passed before she spoke again.\n\n\"I... I used to work the streets. Like them,\" Flo said, quietly.\n\n\"What?\"\n\nShe crossed her arms, hugging herself tightly. \"My husband was killed on Iwo Jima.\"\n\n\"I had no idea, I'm sorry.\"\n\n\"We were married the day he got drafted. We were so young, I was just seventeen. Daniel was a kind man, but he wasn't the most detail oriented. He never got around to signing his G.I. life insurance before they went ashore, so I didn't get the ten thousand that most widows got. Wasn't long before I was a couple months behind on the rent. My landlord back then wasn't as kind as my current one. He came by demanding his money. When I didn't have it he said he was throwing me out... unless I wanted to... Well, let's just say he was my first trick, such as it was. Wasn't long before he, ah, referred a friend, then another and another. Not too long after I was working street corners.\"\n\n\"Flo, that's awful. I never had the first idea.\"\n\nShe pressed her lips into a thin line. \"That's not something one generally wants to share about one's past, as you can imagine.\"\n\n\"I imagine not.\"\n\n\"Anyway, the white girls on the street don't tend to look out for each other the way the black girls do. They're too competitive. 'Least they were back then. I got sick that winter. Real sick. There were a couple black girls who worked the same blocks as I did, Sarah and Daisy. They took me in and cared for me until I was back on my feet. I never forgot that.\"\n\n\"So now you take care of the girls when you can.\"\n\n\"The least I can do.\"\n\n\"What happened to Sarah and Daisy?\"\n\nShe looked down at the sidewalk. \"Sarah died a few months after. Drugs they said. I don't know, I never saw her using, we just found her in her room. Daisy got out a few months later. Met a man at church who didn't hold her job against her. Said Daisy was the queen flower of his life's garden. They live in Huntsville now, have a mess o' kids. She encouraged me to try and get out too. But now, anytime I can, I look out for the girls who fall into that, one way or another. I try to give 'em any help or encouragement I can to get out too. Once you're in, it's hard to leave unless you can up and move somewhere that no one knows you. People can be so unforgiving.\"\n\n\"Lord, ain't that the truth.\" Etienne was silent for a long while. \"I'm honored you trusted me enough to share that with me, Flo. Want you to know, I don't think any less of you. Think a little more of you than before, in fact.\"\n\n\"Thanks Etienne, I--\" She was interrupted by the chirp of a police car siren behind them. They turned as a patrol car eased up next to them.\n\n\"Evenin', Detective Cheval,\" the officer in the car said through the driver's window.\n\n\"Hey Johnny, what's up?\"\n\n\"Sorry to bother you. They put a call out over the radio a few minutes ago. They found a body. Can't find anyone from homicide yet, so they're looking for any detective who can take charge of the scene.\"\n\n\"Alright, where is it?\"\n\n\"Behind the Carousel Bar, off Iberville and Royal. Joe Rouse has the scene secured.\"\n\nEtiene cursed under his breath. Three blocks away. Had The Monster struck again while he was taking a break? \"Okay, I'll get over there right now. I want you to take this young lady home in your car.\"\n\n\"You got it, Detective.\"\n\n\"Sorry Flo, duty calls.\"\n\n\"Thank you, Etienne. Lord, I hope it's not another one of our girls.\"\n\n\"Me too.\"\n\nOfficer Rouse was at the entrance to the alleyway next to The Carousel, ostensibly to keep curious onlookers away, but by now it was almost three in the morning and anyone still on the streets was drunk and looking to make their way home or to their hotels.\n\n\"Detective,\" Rouse nodded.\n\n\"Joe, what we got?\"\n\n\"Bartender called it in. He was taking out the trash at closing and tripped over her body near the trash cans.\" He hooked his thumb down the alleyway. \"Fontenot has the other end covered.\"\n\n\"Okay. Got a flashlight?\" Rouse offered his flashlight, which Etienne switched on and headed into the alley.\n\nShe was next to the row of trash cans behind the bar's service door, her head bent over at the all-too familiar angle. Dammit. She was one of his. He wasn't sure of her name, but he knew she'd been busted a couple of times by the beat cops. He leaned down and felt her cheek with the back of his fingers. Still warm.\n\n\"God dammit!\" he hissed to himself. She hadn't been dead that long, maybe an hour or even less. It almost certainly happened while he was walking to The Clover or sitting on his ass drinking coffee.\n\nHe stood and looked around. He'd managed to sneak a peek at some of the crime scene reports, stealing them back to his desk for a few moments when Ronaldo had left them out while he was at lunch. Ronaldo wasn't big on securing his case files. He used his old trick to recall what he'd read. When he was a rookie detective, his training partner had taught him to picture himself back where he'd read whatever he was trying to recall.\n\nHe closed his eyes and pictured himself walking back from Ronaldo's desk, the file in his hands. Imagining himself sitting in his chair, his favorite mug sitting on his blotter next to the black bakelite telephone. He pictured the brown folder opening... the words before him... He saw it clearly. No physical evidence on scene. No traces of a struggle, victim was attacked and killed likely in place and quickly on unmarked pavement.\n\n\"Dammit,\" he whispered again. He shone the light around looking around for anything of interest when he heard steps behind him. He turned and was greeted by the beam of another flashlight stabbing into his eyes.\n\n\"Get that out of my face!\"\n\n\"Sorry,\" said Ronaldo. He lowered his beam to shine on the dead woman. \"Another of yours?\"\n\n\"Yeah,\" he sighed, \"She's in the vice files, she--\"\n\nRonaldo interrupted him with a chuckle. \"At this rate The Monster is going to put you out of business, Etienne, he keeps killin' off all the whores in the quarter like this. You could sit at your desk and read the paper until retirement.\"\n\nEtienne felt his face get hot. He fought the urge to yell, keeping his voice pitched low. \"Look, Ronaldo, I know this is a low priority for you. That's how you wanna work it, fine, but I'm going to catch this guy and put him away. Enjoy your crime scene.\"\n\nHe turned and stalked away as Ronaldo called after him, \"The fuck's your problem, Cheval?\n\n~~ Six Days Later, Thursday, October 29th ~~\n\n\"C'mon now, you're telling me you've seen nothing?\"\n\nThe doorman for The Carousel looked nervously up the alleyway. Etienne had agreed to talk to him around the corner from the bar entrance, not far from where the latest victim was found, to avoid patrons seeing him talking to a police detective.\n\n\"Listen, I can't be ratting out regulars to the cops just because I see them doing something shady after they've left here. Word gets out and we're outta business.\"\n\nEtienne nodded sympathetically. \"I hear you. I'm not asking for a list of anyone you think might be hiring hookers, I'm only asking if you saw anyone head out with this particular woman,\" Etienne said as he held up the photo of the victim again. The man looked at the photo once more. \"Last Friday night...\" he prompted him.\n\n\"I... I don't remember, I'm sorry Detective. I know I saw her working the block that night. I saw her talkin' to a bald dude in a seersucker, but didn't see her go off with him. Not down this alley, that's fo' sure.\" He looked down towards the trash cans and shivered.\n\n\"Can you describe the bald guy? Anything memorable about him?\"\n\nThe doorman pondered a moment. \"Not... just bald and old. Musta been sixty, sixty-five.\"\n\nCrap, Etienne thought. \"Okay, thanks. You remember anything else you call the station. Ask for me, no one else, got me?\" he said, handing the doorman a card and a folded five-dollar bill.\n\n\"I got you, boss. Sorry I ain't more help.\"\n\nEtienne lit a cigarette and started walking down Royal Street. Ain't no way a sixty-year-old man snapped that girl's neck like that, he thought. He cut over towards Chartres Street, in the general direction of Jackson Square. He was waiting for some cars to pass before he stepped off the curb when a familiar voice called out to him.\n\n\"Boss! Boss!\"\n\nHe rolled his eyes in frustration before turning around.\n\n\"Evenin' Speedy, what's new?\"\n\nSpeedy Jones was one of his main snitches on the street for drug sales. Seemed like he always had a line on whenever a new pusher moved into the Quarter. Etienne hadn't had time to work any leads in that area this month.\n\nSpeedy furtively looked around to make sure they couldn't be overheard. \"Any plans to move on that mook I tol' ya about last week?\"\n\n\"Not yet, things are pretty busy right now.\"\n\n\"C'mon Boss, you know I don't gets to collect my reward 'less you lock him up. I gots ta eat ya know?\"\n\n\"The law doesn't work on your schedule, Speedy. Can only do what I can do.\"\n\n\"Look, pretty sure he's over working in Jackson Square right now. C'mon Boss, let me point him out, you can watch him do a deal and bust him tonight.\"\n\nHe looked at his watch \"Alright, let's go see what's up.\" Drugs still are a part of my job, after all.\n\n\"Great, Boss, you won't regret it! I know you can bust him tonight!\"\n\nThey walked along the sidewalk towards the Square, but as they approached Wilkinson Street, a muffled scream came from an alley across the way. Etienne took off running, nearly getting clipped by a car as he darted across the street.\n\nThe alley was almost pitch black, but he could see the silhouette of two figures struggling.\n\n\"Police! Stop!\" He yelled at the top of his lungs as he charged towards them.\n\nThe larger of the two figures dropped the smaller one to the ground and fled down the alley. Etienne jumped over the prone figure on the ground to pursue the other man, but hesitated when he heard choking sounds and he skidded to a stop to check. It was a woman and she wasn't breathing.\n\n\"Whoa, Boss, what the hell?!\" Speedy said, as he caught up with Etienne. A sudden dim light appeared as Speedy flicked his lighter. As dark as the alley was, the sudden glow of the tiny flame was more than enough for Etienne's eyes.\n\nThe woman on the ground was Alice, and she was clawing at her throat.\n\n\"Speedy, go find a patrol officer and tell them to get an ambulance here right now!\" He leaned down and pulled open Alice's mouth. She'd swallowed her tongue. He used his finger to clear it and she gasped, then rolled over and vomited.\n\nEtienne looked back up at Speedy, who was gawking stupidly at him.\n\n\"Speedy! Patrol officer! Right now!\"\n\nSpeedy snapped out of his stupor. \"Right Boss!\" He turned around and ran towards the street.\n\nEtienne flicked open his own Zippo and lit it. Alice had stopped throwing up and was gasping in huge lungfuls of air.\n\n\"Easy, Alice, take it easy. I got you.\"\n\nThe ambulance arrived fifteen minutes later. Etienne took Alice's statement before they left to take her to the hospital. Her neck was bruised and she could barely whisper but the ambulance driver assured Etienne she'd be okay.",
        "She hadn't seen anything. She'd finished with a customer, giving him a hand-job for a few dollars, then the customer had left first. As she'd watch her john walk out of the alley someone had grabbed her around the neck from behind. She never saw him, just heard his whispering voice in her ear.\n\n\"He said he was gon' 'end my depravity', and stuff like that. Seemed real pleased with hisself,\" she'd told Etienne, her voice hoarse. \"I tried to fight, but he was strong. I clawed at 'em pretty good but I don' know if'n I did any damage.\"\n\n\"Okay Alice. You take it easy. These men gon' take you to the hospital and I'll check in on you later.\"\n\n\"Thank you, sir,\" she whispered with tears in her eyes for maybe the fourth time. \"You ain't come along just then, I'd be lying in that lousy alley like poor Nanette and Sally.\"\n\nSeveral patrol officers were there now, keeping the curious at a distance. Etienne borrowed a flashlight from one of them and went back into the alley.\n\nI almost had him, he thought bitterly to himself. I was thirty feet away from him. He knew he'd done the right thing. If he hadn't stopped, Alice very well could have choked to death. It didn't make it any easier to have been so close.\n\nHe shone his light around the area. Something against the alley wall caught his eye. He squatted down, pulled his handkerchief from his pocket and picked up the object. It was a brown button, the kind one might find on the sleeve of a suit jacket. Setting the flashlight on the edge of a trash can, he carefully took out one of the small envelopes he kept in his breast pocket, slipped the button inside and sealed it, then slid the envelope back in his jacket pocket. Maybe he could sweet talk that federal agent he'd met a few months prior, when he'd assisted on a big trafficking case, to run it through their fancy fingerprint identification department, or something.\n\nHe was scouring the alley for additional evidence when Ronaldo arrived.\n\n\"So, you saved the day, I hear,\" he said, by way of greeting.\n\n\"Don't know 'bout that.\"\n\n\"Don't be shy 'bout tootin' your own horn, Etienne. You stopped The Monster from doing away with another of your whores. All the colored folk going to be real happy with you after that.\"\n\nEtienne said nothing, but continued shining his flashlight around the alley. When he saw there was no response forthcoming, Ronaldo continued.\n\n\"Anyways, I've got the scene now. Any evidence you want to let me have?\"\n\nEtienne thought about the envelope in his pocket but hesitated.\n\n\"You ain't kicking me off this scene. It's not a homicide.\"\n\n\"You shittin' me? This was The Monster. This is my case now.\"\n\nEtienne turned to fully face the other detective. \"This was the scene of an assault immediately following a prostitution transaction. I have as much jurisdiction as you do.\" He took a step closer to Ronaldo to stare into his eyes and said quietly, \"And I know you don't give much of a crap about catching The Monster, but I do.\"\n\nHe turned back to continue shining his light around the alley.\n\nRonaldo stared at him for a moment, then laughed. \"You want to run the scene Cheval, you can have it. I don't mind headin' back to the bar.\"\n\n~~ Friday, October 30th, Devil's Night ~~\n\nEtienne took off his hat as he walked into Alice's room at Flint-Goodridge Hospital, one of the two black hospitals in New Orleans. The orderly was leaving with her dinner tray, mostly uneaten. Flo and Lolly were sitting in chairs next to her bed and they rose when he entered.\n\n\"Evening, Miss Alice. Sit back down, ladies, I'm just here to check on y'all. Hope you doing alright tonight?\"\n\nAlice nodded and smiled at him. Her cheek was swollen and bruised, and she had a thick foam brace around her neck that held her head up stiffly.\n\n\"Doctor says she's got swelling in her throat, sir, so she cain't talk today,\" Lolly said, while Alice was scribbling on a pad of paper in her lap.\n\nShe held up the pad towards him. It said thank you for saving my life\n\n\"Just sorry I didn't get there sooner, Miss Alice. Do you happen to remember anything else about your attacker today?\" She looked down at the sheets covering her lap and shook her head. \"It's okay, don't worry none. You're safe here.\"\n\nShe wrote briefly on the pad and held it up. What if he comes here?\n\n\"I don't think he will, Miss Alice, but I--\" he stopped as she started writing furiously. She held up the pad again.\n\nI'm the only woman who's been attacked by him and lived\n\n\"We're worried he might think he can't afford to have her walking around, Etienne,\" Flo said, \"Lolly is going to take her out of town, she got some friends in Shreveport. They're going as soon as she's released but the doctor wants to keep her here until tomorrow.\"\n\nAlice looked at him. She was trying to be stoic, but he could see the fear in her eyes.\n\n\"Alright, fair enough. Let me see if I can do something 'bout this.\"\n\nHe picked up the phone from her bedside and dialed a number, looking at his watch as it rang.\n\n\"Hey, Flaherty, it's Detective Cheval, from the Eighth,\" he said when the call was answered, \"Is Coates around? He should be getting ready to start his beat... Good. I want you to pull him off the street, I need him at Flint-Goodridge tonight... yeah, my authority. Well, tell your Captain I said so and I'll get with him later to make it right... okay, good. Tell him to come to room four-fourteen... yeah, soon as he can. Thanks, Flaherty.\"\n\nHe hung up and turned his attention back to Alice. \"Alright, Miss Alice, I have a patrol officer comin' and he's gonna sit right outside this room all night, to make sure ain't no funny business until you get out of here tomorrow.\"\n\nAlice looked dubious. Lolly said hesitantly, \"Detective, not that we don't appreciate it, but...\"\n\n\"Johnny Coates is one of NOPD's two black officers, he works the Ninth. Don't worry, I wouldn't stick you with someone who wasn't all that interested in making sure you were okay.\"\n\nAlice smiled gratefully at him and scribbled something. You are a good man Detective\n\n\"Well... thank you Miss Alice. Can you let me know how I can get a hold of you when you leave town? If I catch this guy I might need you to testify to help me put him away.\"\n\nThe resolve on her face as she nodded told him she'd be there if he needed her.\n\n\"I'll leave a phone number with Miss Flo, Detective,\" Lolly said.\n\n\"Thank you,\" he said. He opened his wallet and pulled out two twenties and a five, the only cash he had on him. \"Here, take this,\"\n\nAlice was shaking her head as Lolly said, \"We can't accept--\"\n\n\"Hell you cain't, Miss Lolly,\" he said, setting the bills on Alice's side table. \"I'm sorry I haven't gotten The Monster yet. I'm sorry he got his filthy hands on you. And I want you to know, I'm still after him. Ain't gonna stop until he's off the streets.\"\n\n\"We know you won't, Detective, thank you,\" Lolly said.\n\nHe broke the uncomfortable silence that followed, \"I'd better get back to it. Good luck Alice, Lolly. Good night Flo,\"\n\nAs he strode down the hall he heard Flo call his name and he stopped by the top of the stairs as she caught up with him.\n\n\"Etienne...\" Flo seemed at a loss for words, \"I... I just...\"\n\n\"You okay Flo?\"\n\n\"I am. I want to say, you're a good man Etienne. There ain't enough of you around, but you're doing the best you can and I wanted you to know that I know it.\"\n\nHe felt himself flush. \"Shoot, I'm just doing my job.\"\n\n\"There's not another detective in the city who would do right by those girls the way you are.\"\n\n\"Well... thanks. I'd better get out there. Sun's going down.\"\n\n\"I caught on at Marie's Lunch Counter. Working breakfast and lunch. Come by and see me, would you?\"\n\n\"How are the beans and rice?\" he asked, with a grin.\n\nFlo laughed. \"Fantastic, and the bowls are bigger than at The Clover.\"\n\n\"Alright, I'll be by then,\" he said, with a chuckle of his own.\n\n\"You be careful,\" she said, and squeezed his hand.\n\nHe gave her hand a squeeze back. \"Thanks again.\"\n\nWith Halloween the next day, tourists and locals alike were taking advantage of Friday night to celebrate early, with almost every reveler on the street sporting costumes or masks. He spent the evening checking the usual spots but it appeared the attack on Alice had been the straw that broke the camel's back for the rest of the ladies of the night; after four hours of walking he had yet to see a single prostitute on the street, black or white.\n\nHe pondered stopping into one of his normal drinking spots for a nightcap, but the fatigue of the past few weeks made him head home instead.\n\nHis apartment was a third-floor walk-up, one block off the main parade route. The apartment was tiny and too expensive for the size, but Etienne loved the balcony with the wrought iron railing off the combination living room-kitchen. The view somewhat ameliorated the guilt he felt about taking his share of the monthly bribe. He also felt living in the Quarter made him more connected to the people and places he was entrusted with watching over.\n\nHe pulled off his necktie as he walked into his bedroom and tossed it over the arm of the chair in the corner. His suit jacket followed, then he pulled the leather holster and gun from the waistband of his pants and opened the cigar box he kept on his dresser where he kept it when off-duty. He frowned at the sight of the evidence envelope with the button from the alley laying in the box.\n\n\"I really gotta get that logged into evidence tomorrow,\" he muttered to himself. He'd forgotten to take it with him this morning.\n\nHe looked to the icon of Saint Michael, the patron saint of police officers, that he kept on the wall next to his mirror.\n\n\"Anytime you want to help me out with this case, Mike.\" Then he sighed with guilt. He knew his momma would've rapped his knuckles for calling a saint a nickname.\n\nHe laid his gun on top of the envelope, closed the lid and went out to the tiny kitchen. He opened his noisy refrigerator and took out a can of Jax beer, punching two triangular holes in the top with his church key opener and went out to the balcony. Taking a long sip, he leaned on the railing, watching the revelers pass by beneath him.\n\nHe'd been staring at nothing, his mind adrift when he suddenly realized one of the costumed figures wasn't moving along with the rest of the sea of humanity below him, but was leaning against the building across the street, watching him. He straightened up and took a closer look.\n\nJosephine was wearing a green, sequined flapper dress straight out of the Roaring Twenties and an elaborate, black domino mask. It was easy enough to recognize her, regardless. Her hair was unbound tonight, and the natural curls formed a huge tawny mane around her entire head.\n\nNot knowing what else to do, he raised one hand and waved.\n\nHe could see a grin spread across her face from three floors up. She returned his wave, then walked directly toward him, vanishing from sight under his balcony.\n\nScarcely seconds passed before he heard a knock at his door, causing him to jump.\n\nThat can't be her, no way she had enough time to get up here, he thought. He set his beer down on the little table he kept on the balcony and went to the door.\n\nOpening it, he was dumbfounded to see Josephine standing there, one hand on her hip, her smile peeking out beneath her mask. Up close, he could see the mask had feline features, with whiskers painted on it, and pointed cat ears protruding up into her curly hair. The huge mass of hair around her head not only made her look somewhat top-heavy, but combined with the cat mask, looked like a lion's mane.\n\n\"How did you...?\" He froze. Does she have... cat's eyes? he thought.\n\n\"Well good evenin', Sugar,\" she purred. She blinked and he realized it must have been a trick of that light from the hallway. Her brown eyes were dancing with amusement. He tried again.\n\n\"How did you...?\" he started again.\n\n\"How did ah what, Cher?\"\n\n\"You... never mind.\" I must be more tired than I thought. \"What can I do for you?\"\n\n\"You could invite a lady in, fo' one thing.\"\n\n\"Ah, yeah, ah'm not so sho' that's--\"\n\n\"A great idea? Why yes, yes, it is,\" she said as she brushed past him into his apartment.\n\nHe closed the door and followed her as she walked through his living room and out to his balcony.\n\n\"Why this a lovely lil' home, Sugar. The view up he'ah is a delight.\" She picked up the beer from the table and took a sip.\n\n\"What are you doing here?\"\n\nShe set the can down. For the first time since he'd met her, her expression wasn't either amused or dangerous. She looked... grateful.\n\n\"Ahm he'ah t' thank you, Detective. You's wuz the'ah to save my friend last night when I wuz not.\"\n\n\"Ah's just doin' mah job,\" he said nervously, slipping back into his childhood accent. Everytime he was around her, he seemed to want to do all he could to put her at ease.\n\n\"No. No you ain't just doin' yo' job. You didn't hafta check on her at the hospital tonight. You didn't hafta give her money to get outta town. You didn't hafta get that nice officer Coates to watch over her.\" She stepped closer. \"You treat us like we's people. You know how rare a thing that is? Not just us colored women, but us women who's doing what we's doing?\"\n\n\"Y'all still human,\" he said, quietly.\n\n\"We is, but precious few willin' ta acknowledge it. You do.\"\n\n\"Well, I--\" he started but she took another half-step closer, laid both her palms on his chest and kissed him. The liquid heat of her lips startled him, as her tongue invading his mouth like a living thing of its own. Almost in defense, he wrapped his arms around her slender waist.\n\nAfter an interminable moment, he broke away from her and looked into her eyes.\n\n\"Josephine, this... this isn't the best idea.\"\n\nStepping even closer, she pressed her body against his. He felt her thigh press against a part of his body which obviously thought that, yes, this was a fantastic idea. She grinned under her mask. He gasped as he felt her hand gently grip his length through his pants.\n\n\"Don't worry none, Sugar, I ain't gon' tell no one. No one ever need t' know.\"\n\nShe kissed him again.\n\n\"I thought you ladies didn't kiss,\" he said, after a moment.\n\n\"That's only with customers, Cher. You sho' ain't that. You's a kind man, and I'm gon' show ya how much I 'ppreciate ya.\"\n\nShe kissed him again, his resistance crumbled as he felt nimble fingers unbuckle his trousers and reach inside. She wrapped her fingers around him through his boxer shorts.\n\n\"Ooh, Sugar! Don' know if you gon' believe me or not, but you a fair piece bigger'n mosta my customers!\"\n\n\"That right?\" he said, quietly with a grin.\n\n\"Fo' sho',\" she said. Then she sank to her knees in front of him.\n\n\"Are you nuts?!\" he said, looking over the edge of the balcony at the mass of people partying on the street below.\n\n\"Don' worry none, Sugar,\" she purred as she tugged on the waistband of his underwear. \"Ain't nobody ever seen me when I don't want t' be seen.\"\n\n\"But--\"\n\nShe interrupted him by leaning forward and taking him into her mouth. His thoughts immediately dissolved into a mindless fog of pleasure as he sucked in his breath and leaned back against the door frame.\n\n\"Lordy,\" he breathed.\n\nShe looked up at him as she bobbed her head along his length, then closed her eyes and, wrapping her hands around to grab his butt, slowly pushed forward, taking nearly all of him down her throat. She held herself there for a moment, then pulled back with a gasp, a thick line of spit trailing from the end of his cock to her bottom lip. She ran her tongue over her lips, breaking the string of saliva and it fell to the balcony floor with a soft splat. She made a pleased sound, leaned forward and ran her tongue along the underside of him, from the base to the tip and then sucked him back into her mouth as she stared into his eyes.\n\nWith her cat mask and mane of hair, she was probably the single most erotic sight he'd ever beheld in his life. He certainly wasn't inexperienced. He'd even hired a lady of the evening himself once in Tokyo when he was on R-and-R during the war. Bar none, Josephine was the most uninhibited woman he'd ever encountered.\n\n\"Ohhh... Lordy,\" he repeated, then he reached down and pulled her to her feet. She let his cock slip out of her mouth with an obscene pop. Her disappointment was obvious.\n\n\"C'mon Cher, don't tell me you ain't interested, cause the lil' gentleman says otherwise.\" She gripped him with her hand and slowly stroked him as she spoke, spreading her saliva along his length.\n\n\"Ain't gonna lie, ah'm interested. Just now that we goin' down this road, I'm not looking for a quickie and you was 'bout to finish me right he'ah.\"\n\nSmiling, she took a step back, and reached behind her neck. Her dress fell from her shoulders and, with a shimmy of her hips, puddled on the floor around her feet leaving her in just her domino mask, garter belt and stockings.\n\nEtienne drank in her beauty, letting his gaze roam up and down her body, her dark nipples standing up in the cool October air.\n\n\"You's a fine-looking woman,\" he murmured.\n\n\"Thank you, Detective. You pretty easy on the eyes as well.\"\n\nHe glanced down at the street. No one seemed to have looked up and seen the show being put on by the two of them. Still, this wasn't exactly in his comfort zone. He pulled his pants up from mid-thigh and fastened the button, then offered her his hand.\n\n\"Shall we retire inside?\"\n\nShe stepped out of her dress, reached down to pick it up, then took his hand and they walked back inside. She draped her dress over the back of his couch and turned back to him.\n\n\"Well Detective, what's yo' pleasure? Want me to keep mah heels on? My stockings? Want me nekkid as a jaybird? Do you want me in yo' bedroom, or right he'ah? Yo' sofa looks awful comfy.\"\n\nHe kicked off his shoes then took her in his arms. The skin of her back felt like warm velvet under his hands. \"Mah pleasure is that you call me Etienne, rather than 'detective', right at this moment.\" He kissed her, then wrapped an arm around her, bent his legs to slide an arm under her knees and scooped her up into his arms.\n\n\"Woo, the'ah ya go, Sugar!\" she exclaimed, then giggled, kicking off her shoes as he carried her into the bedroom. He laid her on the bed, and she leaned up on one elbow to watch him strip off his clothes. When he was naked, he slid into the bed next to her, cupping her breast as he did. Her nipple was already hard, poking into his palm.\n\nHe let his hands roam up and down her body as they kissed again. Her hair was like a halo, covering the entire pillow.\n\n\"Mmmm, yes, Etienne!\" She moaned as his hand slid between her legs, a finger parting her lips.\n\n\"That sounds much better than 'Detective', don't it now?\" he said. He kissed her neck, as he stroked her with his fingers.\n\n\"Too right,\" she said, then pushed him to his back and sat up to straddle his legs. \"Foreplay's fine, Sugar and we can get more inta that later if ya want, but right now I need me some more o' this!\" She gripped his cock, stroked it a few times then took him into the heat of her mouth again. As her head bobbed over him, he reached out towards the ties of her mask behind her head. She abruptly sat up out of his reach, grabbing his hands and removing them from her hair.\n\nFor the first time since he met her, he saw the smallest flicker of doubt in her eyes.\n\n\"Why Miss Josephine, you finally gettin' shy on me now?\"\n\nShe sat still, staring at him, her face unreadable. He shifted uncomfortably underneath her.\n\n\"Ah'm sorry... thought what with you kissin' me and callin' me Etienne and all... I didn't mean to make you uncomfortable.\"\n\nShe was still a moment longer, then she made a strange gesture with her hand and suddenly was holding a tiny foil packet. She used both hands to rip it open, then pulled out a condom and started rolling it down Etienne's shaft.",
        "\"What the... is you some kind o' street magician?\"\n\nShe finished putting on the rubber sheath, then shuffled herself on her knees closer to him and raised herself up.\n\n\"'Course, Sugar. Think the daughter of a traiteur and a relative of Madam Laveau wouldn't have a few tricks?\"\n\nShe grabbed his cock and rubbed it between her legs a few times, coating the head of the condom with her juices, then she sank slowly onto him, her breath hissing out as he filled her.\n\nShe started grinding her hips down against his, then she reached behind her head and untied her mask. She pulled it off, the silk ribbons trailing almost reluctantly out of her hair, and tossed onto the chair on top of his coat and tie. Her brown eyes were molten pools of arousal while she rode him.\n\nEtienne gripped her hips and thrust himself up to meet her movements, eliciting a growl of approval from her. After a few minutes of them staring wordlessly at each other while Josephine bounced on his lap, he pulled her down on top of him and rolled them over.\n\n\"Oop! Nice move Sugar!\" she breathed. He kissed her then started thrusting into her as she wrapped her legs around him.\n\nAfter a few minutes of heavy breathing from the both of them, Josephine started moaning and he felt her nails rake along his back, none too gently.\n\n\"I'm close,\" he panted.\n\n\"Oh no, Sugar, need you t' hang on a lil' longer,\" she replied. She reached up and caressed the side of his face with one hand and she muttered a word that sounded like French Creole, but he couldn't quite get his mind to latch onto it. Suddenly the urge to come vanished, yet he felt himself grow harder. Almost painfully so.\n\nHe slowed down, looking into her eyes. \"What did you do?\" he whispered.\n\n\"I tol' you Cher, ah'm really good at mah job.\" She used her heels on his butt to press him into her once more as she kissed him, then pushed him off. She quickly flipped over onto her stomach, arched her shapely behind at him and said, \"Now c'mon, Sugar, give it to me.\"\n\nEtienne needed no further encouragement. He rose to his knees, grabbed his cock, and guided himself into her again. She groaned in appreciation as he grabbed her hips and began thrusting. Her moans turned quickly into cries to accompany the rhythmic sounds of their flesh smacking together, to the point he was sure her voice would be heard out on the street. She reached down between her legs with one hand and rubbed herself as he fucked her.\n\nHer cries quickly reached a crescendo as she pushed back at him, then she froze, her muscles vibrating like a violin string. Etienne heard her mutter a syllable that, again, he couldn't quite get his mind to latch onto.\n\nIt was as if a dam broke. Suddenly he was coming, his orgasm rushing through him. He groaned loudly, slamming into her one last time and held her hips tightly against his groin as his cock pulsed and filled the condom with his seed. After a moment he released her hips, and she fell away from him as he slipped out of her with a wet sound.\n\nHe flopped down next to her as she rolled over.\n\n\"Damn Josephine... just... damn.\"\n\nShe leaned up, one hand cradling her head as the other pulled the condom off of him, then she gently caressed his slippery cock while it slowly deflated. More slowly than he was used to.\n\n\"Tol' ya ah's good at this,\" she said, with a grin.\n\n\"Sure you weren't lyin'.\"\n\n\"We'll give this handsom lil' guy a rest then ah bet yo' kin go again\".\n\nHe sat up, sliding back to lean back against the headboard and reached for a cigarette from the wooden box on the nightstand. He offered her one, which she declined with a shake of her head. He lit his with the heavy glass lighter on the table and took a long drag.\n\n\"Josephine, crazy as it's gon' sound, I need you to explain to me how you do all the things you do.\"\n\n\"Whatcha mean, Sugar?\" she said. The expression on her face told him she knew exactly what he was talking about.\n\n\"C'mon now. How you pulled that condom outta thin air. How you just... disappear when you want to. Fuck, whatever it was you did just now to keep me from coming. Are you...\" he couldn't believe he was going to ask what he needed to. \"Are you some kinda... witch? A voodoo priestess?\"\n\nHe expected her to laugh. She didn't. She released her grip on his manhood and looked at him, her soulful eyes full of knowledge and secrets.\n\n\"Ah tol' you, Etienne, I have some tricks. Some might call 'em powers.\"\n\n\"Powers.\"\n\n\"I don't call 'em that.\"\n\n\"You just did.\"\n\nShe did laugh then. \"I can do a few things. Things my momma taught me when she'd come 'round. Things I guess I... inherited from my daddy.\"\n\n\"Uh huh. Is that how you gonna take down The Monster if you find him? With some sorta tricks?\"\n\n\"Maybe.\"\n\nHe sighed and took another drag of his smoke, deciding not to press her further lest he offend the beautiful guest in his bed by challenging her insane-sounding claims of magic. He couldn't deny, some of the tricks she'd pulled in front of him seemed nothing short of supernatural. \"Sho' I could use a trick or two finding this guy. I was so close the other night.\"\n\n\"You prolly coulda got 'em if you'd been willing to let Alice die, you know. But that's not you. You's a good man, like ah said.\"\n\n\"He was right there. And he slipped away. And now he's still out there. Walking free. Ready to kill someone else. And I hardly have any evidence. Almost nothing.\"\n\nShe narrowed her eyes. \"Almost nothing means yo' gots somet'in. What do you gots on him?\"\n\n\"Found a button. That's it. One lousy button, in the alley where Alice was attacked. I got nothing except a single button from a suit.\"\n\nJosephine sat bolt upright in bed. \"Yo' tellin' me yo' got a piece of The Monstah's clothes? Where is it?\"\n\n\"Calm down. It's just a button. I don't even know for sure if it's his.\"\n\n\"Where is it?!\" she asked again urgently, \"Is it at yo' station house? Could yo' gets it fo' me tonight?\"\n\nHe suddenly was aware of how keenly she was looking at him.\n\n\"'Gets' you my only piece of evidence? Why would I 'gets' you police evidence'?\"\n\nHis eyes involuntarily flicked to the cigar box on his dresser. She caught his glance. She sprang out of the bed, stepped over to the dresser and opened the lid, peering eagerly into the box.\n\n\"Josephine, I can't let you--\" he stopped when she lifted his gun out of the box, still in the leather holster. \"Josephine, listen real careful to me now. I need you to put my gun back down nice and slow.\"\n\nShe made no move to obey him, instead she lifted the tiny envelope out of the box. Closing her eyes, she trailed it under her nose, inhaling like she was smelling a fine cigar. She opened her eyes and for a second, Etienne could have sworn they were... green, until she blinked, then her dark brown eyes pierced his.\n\n\"Sugar,\" she said, her voice hissing with pleasure, \"you jes gave me what I needs to get The Monstah. He's as good as mine now.\"\n\n\"Josephine, I need you to put the gun down and give me the envelope. Right now.\"\n\n\"It's been too long, Cher, and I lost too many people to let this chance go.\" She moved toward the door of the bedroom. He started to rise from the bed, but she pulled the gun from the holster, dropping the leather case to the floor as she wrapped her slim fingers around the butt. \"Nah-uh-uh, Sugar. Don' push me none.\"\n\nShe backed unhurriedly into the living room. The gun was not aimed at him, but neither was it more than an eye blink away from being so. Etienne got out of the bed and followed her slowly, his hands raised. He expected her to try and hold the gun on him while she got dressed and went out his apartment door.\n\nInstead he was confused to see her move towards his balcony, still naked.\n\n\"Ah's sorry to cut our night short, Sugar,\" she said with a grin. \"Ah's bettin' you coulda gone least once or twice more. I know ah'd have enjoyed findin' out.\"\n\n\"Josephine, listen, don't--\"\n\n\"Thanks fo' this, Cher,\" she said, holding up the envelope. \"Won't be needin' this tho', he'ah ya go Sugar.\"\n\nShe tossed him the gun, which he caught as carefully as he could while she moved through the balcony door and out of his sight. Etienne, cocked the hammer on the revolver and quickly moved to the door. The balcony was deserted.\n\n\"What the hell?\" he hissed. Taking a step out of the door, he looked up and down the street but there was no sign of her. There were still quite a few people walking about, though, and as he noticed one or two looking up at him he suddenly realized he was still completely naked.\n\nHe quickly stepped back from the doorway, carefully lowering the hammer on his revolver as he did. He looked around. Something seemed out of place. It took him a moment to realize Josephine's dress wasn't draped over his couch anymore. It was had vanished. So had her shoes.\n\nHe moved quickly back to his bedroom. The only thing she'd left behind was her feline domino mask. Except it wasn't in the chair where she'd tossed it. The mask was propped up on his pillows, staring mockingly at him. The phrase his momma used to say to ward off evil spirits sprang to his lips unbidden as he crossed himself.\n\n\"Je Vous Salue Marie!\"\n\n~~ Saturday, October 31st, All Hallows' Eve ~~\n\nEtienne sat at his desk, looking through his personal, unofficial file on The Monster. He was grumpy, not having slept at all. He'd put an A.P.B. out on Josephine as soon as he'd gotten to the precinct to have the beat cops in The Quarter on the lookout for her. He expected it to be about as useful as a fart in a hurricane.\n\nHe threw the folder on the desk in frustration. He had nothing on The Monster now. Literally nothing, now that he'd somehow let a prostitute into his home to seduce him and then he'd let her steal the one piece of evidence he'd managed to find.\n\n\"Morning Etienne.\"\n\nHe looked up to see Captain Landry walking up to his desk.\n\n\"Morning Captain.\" He pulled a smoke out of the pack on his desk then offered the pack to his commanding officer, who took out a cigarette for himself.\n\n\"I just stopped by The Clover to have a word with you,\" he said after they'd both lit up. \"Lo and behold, I find out you've been declared persona non grata at the precinct's favorite breakfast place. What gives?\"\n\nEtienne shrugged. \"Difference of opinion with Red is all.\"\n\n\"Would this difference of opinion be whether to enforce the laws of this town? Because I don't need to tell you that the city council takes the whites-only ordinances pretty seriously.\"\n\n\"Cap, there's a... well, there was a waitress there who sometimes feeds some of the less fortunate girls in the middle of the night when no one else is there. For some reason Red popped in and caught her. I happened to be there.\"\n\n\"And you refused to arrest the girls?\"\n\nEtienne frowned. \"Yeah, I did. Because Red was a half-second from caving in one of their skulls with a frying pan, and I stopped him. The ordinances are the law, but the punishment isn't the death penalty, especially not administered by a pissed off diner owner. I stopped him and he took a swing at me. I figured the girls were scared enough as a punishment, so I told him if he wanted me to put my cop hat on, I'd arrest them, but I'd have to take him in as well for assaulting me and being drunk and disorderly. He was three sheets to the wind.\"\n\nCaptain Landry eyed him through a cloud of smoke. \"Red's pretty incensed. Was raging at me on and on about those 'colored whores not knowing their place'. Also said something 'bout you needin' to be watching your back if you keep taking the colored's side against the upstanding white business owners of the Quarter.\"\n\nEtienne shrugged. \"I made my call.\"\n\nLandry paused for a moment longer then nodded as he stubbed out his smoke in Etienne's ashtray. \"Fair 'nuff. I've known Red for probably fifteen years, eating at The Clover. He's a hothead, but basically harmless, I think. I told him he'd better watch his mouth, threatening one of my detectives like that. I trust your judgment. Which is why I wanted to see you anyhow.\"\n\n\"What's up?\"\n\n\"I need you to help cover homicide for a few days. Gill's out sick. Thinks he has pneumonia. And Johnson is out of town.\"\n\n\"Ronaldo can't do that?\"\n\n\"I need at least two detectives on call. Ronaldo's primary, but you're his backup. He's out doing some interviews on Bourbon Street on that hold-up at Mary's Bar where the bartender was shot when things went sideways, so I imagine he'll be out of the station all day.\"\n\n\"Alright, whatever you need Cap.\"\n\n\"You can take Gill's desk and phone for the next few days. Any murder calls come in, you're on the hook for the scene. Also, this means you have full access to their files. If you know what I'm talking 'bout.\" Landry gave Etienne a significant look.\n\n\"Okay,\" Etienne said, slowly.\n\n\"You're gonna be ready for the big leagues soon, Etienne. I trust you to handle this.\" He held out a small ring of keys.\n\n\"Thanks Cap,\" he said, stubbing out his smoke and taking the key ring. \"Appreciate it.\"\n\nLandry slapped him on the shoulder as he usually did, then headed into his office. Etienne got up and went over to Gill Chartre's desk, which was next to Ronaldo's, took off his jacket and draped it over the back of the chair.\n\nRonaldo kept a large, antique wooden coat rack next to his desk as an affectation. Etienne found the right key, then pushed the sleeve of one of Ronaldo's spare jackets out of the way, opened the top drawer and started thumbing through the files.\n\nThe case file was actually labeled \"The Monster\", to Etienne's annoyance. It was pathetically thin. There was almost no physical evidence from any of the scenes. No footprints, fingerprints, eyewitnesses, nothing. A few used condoms, but after the attack on Alice, Etienne would bet those were from the customers the girls took into the alley before being attacked, not from The Monster.\n\nHe sat at Ronaldo's desk and read through the entire file three times. It took less than twenty minutes. No other detectives were in the bullpen, so he sat there, staring into space.\n\nWonder if all his files are this half-assed, he thought as he pushed himself out of the chair. He put the case file back and started thumbing through the other cases.\n\nEvery other file was at least twice as thick, with notes, interview forms, and evidence logs.\n\nThe Monster is either really good, or really lucky, he thought. I'm missing something. Something right in front of me.\n\nHe rolled his head back and forth to loosen his muscles. I'm not getting anywhere with this. He sat back down and returned to the file for The Monster. There were lots of interview forms, but precious few evidence logs. Just photographs from the scenes.\n\nIf I hadn't let my dick do my thinking last night, I'd have that button which would be at least one piece of evidence to--\n\nHe froze, looking up.\n\n\"The button. Torn from the sleeve of a suit jacket,\" he whispered.\n\nHe made a call to the desk sergeant then jumped out of his chair, throwing on his jacket. He almost ran over Captain Landry as he turned to leave.\n\n\"Careful, Cheval.\"\n\n\"I have to find Ronaldo! It's about The Monster! If you hear from him let me know right away!\" Etienne said.\n\n\"The Monster? What--\" Landry started but Etienne had already run out of the bullpen.\n\nEtienne spent the next few hours searching the Quarter. His first stop had been Mary's Bar, but the manager said Ronaldo had come and gone two hours ago. His next stop was The Clover Diner, but to his surprise, the diner was closed, locked up tight with the lights off. A sign on the door said Closed Temporarily for Re-staffing.\n\nSetting his jaw grimly, he headed back the way he came into The Quarter. He navigated streets thick with drunken people celebrating Halloween. None of the working girls seemed to be on the streets tonight, thank god.\n\nHe also couldn't shake the feeling he was being followed around the Quarter. A subtle itch between his shoulder blades.\n\nHours after sunset he found himself near where Alice had been attacked. He walked back into the alley, not flicking on his lighter this time. The moon was close to full, and the alley wasn't pitch black as it had been the night he'd gotten so close to The Monster.\n\nI should have looked at this like I was The Monster the first time, not a detective. I can't sneak in from the far end of the alley while they're at it, I'd have had to have been waiting in the shadows. Patience. He has patience. I can't believe it took me until tonight to figure this out!\n\nIf he hadn't been so tired, if he'd slept even a little the night before, he might've reacted faster. He heard the whisper of shoe leather on the alley floor and started to whirl around when something hard slammed into the back of his head. Stars filled his vision and he fell to his knees. Immediately, a weight came down on the back of his legs, keeping him from rising and a powerful arm wrapped around his neck.\n\nHe struggled to throw off his attacker, but he was woozy from the blow to his head and the man behind him was kneeling on the back of his calves. The arm tightened even more and his lungs started to scream for air. He threw an elbow into the ribs of the man behind him, to little effect. The second elbow he threw was noticeably weaker. He flailed for some kind of leverage, trying to reach the small of his back for his gun, but the man had it trapped between their bodies.\n\nThe all-too-familiar voice rasped in his ear, \"The balls on you, thinkin' you can stop me! I'm the fuckin' Monster! Ain't no one can stop me from doing what needs doing!\"\n\nEtienne's vision shrank to a narrow tunnel, and he felt his movements slow. As he started to feel bitter disappointment that he wasn't going to bring The Monster to justice, he saw movement at the edge of his vision. A huge blob of shadow detached itself from the alley wall and flew right at him. It struck with a violent impact and both Etienne and the man behind him flew across the alley into the far wall.\n\nWhile Etienne's body didn't appreciate being flung into a brick wall, he did appreciate the lungful of air he was able to suck in after being separated from his assailant. He couldn't do much more than get to his knees, but The Monster had regained his feet almost instantly. The Monster turned and faced the blob of shadows which quickly coalesced into...\n\nJosephine...\n\nAnd yet... not Josephine. Her hair was loose again, and wilder than ever, her green satin dress looking a little less elegant. She crouched to face The Monster, and bared her teeth in a snarl. Etienne blinked but it wasn't a trick of the light. Her teeth were long and sharp, and her eyes... her eyes were glowing green, the pupils were slitted like those of a giant cat. She hissed at The Monster, who took a step back, dropped the leather cosh he'd hit Etienne with, reached into his suit jacket and drew out a Saturday Night Special, cocking the hammer on the small revolver.\n\n\"Who the fuck are you?\" The Monster gasped.\n\n\"Tu peux m'appeler vengeance!\" she hissed back. Her voice was unearthly, inhuman.\n\nThe Monster raised his gun.\n\n\"Don't!\" Etienne shouted. Before The Monster could fire, Josephine disappeared into a mass of shadows again. Swirling darkness rushed forward to envelop the killer, and shadows began swirling around him like a storm, wind suddenly howling in the alley like a hurricane coming ashore. Then, as suddenly as it started, everything was still.\n\nEtienne was alone in the alley. He made the sign of the cross.\n\n\"Je Vous Salue Marie!\" he said for the second time in twenty-four hours.\n\nThe Monster sat up and tried to look around. Wherever he was, it was pitch black, he couldn't see his hand in front of his face. He quickly pulled out his lighter, struck the flame, and held it up over his head. He was in a large workspace or warehouse. Getting to his feet he spun in a circle, but he appeared to be alone. He saw there were metal workbenches and piles of scraps around him. He was both surprised and grateful that his gun was still in his hand.",
        "From outside the building, he heard the plaintive horn of a tugboat, the kind that pushed the hundreds of barges which overpopulated the mighty Mississippi River along the riverbanks of New Orleans.\n\nOne of the warehouses on the riverfront, then, he thought. He spied a pile of oily rags and picked one up. He set it on the metal work surface closest to him and lit it on fire. As soon as the glow from the flames exceeded that of his lighter, he clicked the Zippo closed and slid it in his pocket. Looking around he saw a door in the nearest wall, still almost a hundred feet away, and headed toward it. He'd taken only a few steps when the shadows from the gloomy corners of the building seemed to rush together with a whisper into a large, amorphous ball, blocking his path. He stopped as it quickly coalesced into the woman from the alley.\n\nShe looked more or less human now. Well, as human as these black girls ever looked to him.\n\nHe raised his gun and pointed it at her.\n\n\"Don't know how you got me here, but this was a dumb move, girl. I been snappin' y'all's necks 'cause I was workin' the middle of the Quarter. A gun does the job just as well. Ain't nothing stopping me from shooting you where you stand, whore.\"\n\nShe smiled at him. As she did, her incisors slowly lengthened into sharp fangs. She raised her hands towards him and the fingers look more like claws, the nails unnaturally long and pointed.\n\n\"What the hell?\" he whispered. Then he took a step forward and fired his gun at her face from a distance of less than ten feet. As he pulled the trigger, her form dissolved into shadow and the bullet passed harmlessly through, leaving a swirling hole in the dark mist.\n\nEerie laughter echoed around the room, seemingly from nowhere and everywhere at once.\n\n\"Know what I find amusing?\" the voice echoed at him.\n\nHe spun in place, pointing the gun everywhere his brain imagined motion in the shadows. The fire he'd started had begun to die out, so he scrambled back to the work bench and threw a few more of the oily rags on top of it. As the fire sprang up again, he turned back to the room.\n\nShe was standing at the edge of the light, looking human once more, smiling at him with a predatory look. Her green satin dress has been replaced by a black lace mourning dress, but out of style. Something a woman of distinction might have worn to a funeral, only decades ago. He raised his gun and fired twice more with the same futile results: her disappearance in a swirl of shadows.\n\nThe voice echoed at him again. \"I sho' find amusement in you thinkin' you's the only monstah what's huntin' these streets.\"\n\n\"Who the fuck are you?!\" he snarled, spinning around frantically looking for a target.\n\n\"Ah'm yo' end, Sugar.\"\n\nThe voice seemed to be coming from his left. He whirled and fired another shot into the darkness. Ghostly laughter rang in his ears.\n\n\"Who are you?!\" he screamed again, panic edging into his voice.\n\n\"Mah name is Josette Marie Chacere, first born child of Marie Catherine Laveau, Queen of The Crescent City. You done transgressed against mah momma, huntin' our people like you have.\"\n\n\"You're a bad liar, you crazy bitch,\" he yelled into the darkness, \"First born child of that colored charlatan would be over a hundred years old!\"\n\nThe laughter rang out again, then rose in pitch and volume until it more closely resembled the scream of a jungle predator. The sound seemed to spiral around him in the darkness, as if it was circling its prey. When it stopped, a pair of green glowing eyes appeared in the darkness in front of him.\n\nThe Monster pulled the trigger twice more as the eyes vanished, resulting in one more shot whining uselessly into the dark and an equally useless click, the hammer falling on an empty chamber.\n\n\"What the fuck?\" he whispered to himself, as he frantically dug in his pockets for more rounds. \"What the fuck, what the fuck, what the fuck is this bullshit?!\" He flipped open the cylinder of the pistol, the five empty brass casings tinkling to the ground at his feet as he backed towards the door. His hand was shaking so badly he dropped the first one as he tried to feed it into a chamber. He got one in on the second try and was reaching in his pocket for more when he sensed a presence behind him.\n\nHe whirled and she was there, her eyes huge, her teeth inhumanly long and sharp as she smiled at him.\n\n\"Le temps de la justice est arriv\u00e9,\" she hissed, and leaped, claws reaching out for him.\n\nOut on the river, a crewman on a barge tugboat leaned on the railing smoking a cigarette, watching the muddy Mississippi slide by under their hull in the moonlight. He took a last puff, and straightened to throw the butt into the river, when he paused. He thought he heard a shrill, panicked scream coming from the line of warehouses along the wharves. It stopped before he could determine where it was coming from or if he really heard it at all.\n\n\"Probably some damn fool tourist got lost, wanderin' off Bourbon Street and scared themselves,\" he muttered and headed back to the wheelhouse.\n\n~~ Sunday, November 1st ~~\n\n\"You should be good to go, Detective. Doesn't look like you fractured your skull, just a nasty bump,\" the doctor had said, while showing him an x-ray of his head.\n\n\"That's good news.\" Etienne was holding a towel full of ice cubes to the back of his head.\n\n\"Try and take it easy the next day or two.\"\n\n\"Easy as I can.\"\n\nThe doctor left him with Officer Rouse. Rouse had brought Etienne to the hospital after Etienne had flagged down his patrol car in the Quarter.\n\n\"So, you're telling me, you're just walking along down near Jackson Square and someone comes up behind you and socks you in the back of the head?\" asked Rouse for the fourth time.\n\n\"That's right. Never saw a thing,\" Etienne said for the fourth time, then groaned as he slowly got up from the examination table. He shrugged his jacket back on and they made their way out to the patrol car parked outside the emergency room. The sun was just coming up.\n\nEtienne sat heavily in the passenger seat and was about to give Rouse his address when the radio crackled.\n\n\"Central to all cars, looking for any detective who can respond to a 10-35 on the waterfront.\"\n\nRouse looked at Etienne. \"Want me to pretend I didn't hear that?\"\n\n\"Answer it, I'm one of the on-call detectives.\"\n\nRouse picked up his radio handset.\n\n\"Car fifty-three, en route with Detective Cheval. Address for the scene?\"\n\n\"Roger fifty-three, respond to warehouse six on Port of New Orleans Place between Julia and Poydras, over.\"\n\n\"10-4, Port Place, warehouse six, responding 10-38, out.\"\n\n\"I appreciate you laying off the siren,\" Etienne told Rouse, as they pulled up to the warehouse. He tossed the towel and ice in a nearby trash can as they got out of the car.\n\n\"Got a feelin' this could be a bad 'un,\" Rouse said, nodding towards the officer guarding the door. \"Ain't never seen Mick looking that green before.\"\n\nOnce inside, he found there wasn't anyone present who wasn't a little green around the gills. With good reason. There were body parts and blood strewn all over the place.\n\nEtienne organized the scene, detailing several officers to search the building and started Tony Weaver documenting the location of all the body parts with his camera. It seemed the victim had been neatly divided up and evenly spread around the warehouse. Etienne walked around the cavernous room himself, avoiding the puddles of blood.\n\nWalked over in a far corner of the warehouse, he spotted something that clearly didn't belong. On a shelf next to a pile of dusty cardboard boxes he spied a tiny doll, maybe three inches tall, made of straw, string and cloth. The figure was wearing a tiny suit jacket with a single button holding it closed.\n\nIt was the button from the envelope Josephine had taken from his apartment.\n\nHe looked over his shoulder to see if anyone was watching, and quickly stuffed the doll into the pocket of his own jacket.\n\nThere was a piece of paper in the shelf under it, written in ancient looking calligraphy.\n\nThank you for giving me what I needed, Cher. Rest easy, this particular monster won't be hurting no one else. - J -\n\nEtienne shook his head and pocketed the note as well.\n\nCaptain Landry arrived not long after.\n\n\"Another one?\" Captain Landry said quietly as Etienne walked over to him.\n\n\"No...\" Etienne said, rubbing the lump on the back of his head. \"This one is nothing like the others.\"\n\n\"Is she colored?\" his Captain asked.\n\n\"No, the vic's white. Also, it's a male.\"\n\n\"Really?\" Landry looked around at the carnage. \"How can you tell?\"\n\n\"We found his, ah, equipment displayed over there.\" He pointed to the nearby workbench where there was a recognizable lump of meat neatly laid out in the center of the tabletop.\n\n\"Jesus,\" Landry breathed.\n\n\"Detective!\" Etienne heard from the far side of the warehouse.\n\n\"What is it?\" Etienne called back.\n\n\"I think I got an ID over here.\"\n\n\"Well, let's go see who this unlucky bastard was,\" Landry said.\n\nThey found a uniformed officer near the far wall, squatting next to a pile of metal scraps.\n\n\"Whatcha got?\" Etienne asked as he crouched down next to the young cop.\n\nThe officer wordlessly shone his flashlight on a black leather wallet lying in a spatter of blood, and reached out with a pen to lift the fold of the wallet to reveal the contents.\n\n\"Motherfucker!\" Landry swore.\n\nEtienne said nothing. He stood and turned away from his captain and the young officer to hide the grim, satisfied smile that came over his face.\n\nInside the wallet, there was a gold detective badge with a brass nameplate that read, Det. Ronaldo.\n\n~~ Tuesday, March 1st, 1960 ~~\n\nEtienne stood on the corner of Jackson Square, taking in a deep breath of the sweet, early spring evening air.\n\nMardi Gras was in full swing, with tourists and locals alike crowding the streets. As he listened to the sounds of the brass bands marching in the parade a few blocks away, he lifted the bouquet of flowers he held and took a sniff. The florist had assured him any lady would be thrilled with these particular roses. He hoped so, they cost enough.\n\nHe checked his watch and when he looked back up, Josephine was standing in front of him, making him jump in surprise.\n\n\"Lordy, I don't know how you do that, but it's unnerving as hell!\"\n\nShe smiled at him. \"How you been, Detective? I hear you in homicide now. You in the big chair, no?\"\n\n\"S'right. How you been keepin' yo' self?\"\n\n\"Oh, you know, doin' a lil' o' this, a lil' o' that. Been helpin' Alice and Lolly find a lil' money to gets set up. 'Tween mah help and a buncha relatives, they managed to scrape enough cash together to open a lil' lunch counter over in Shreveport where the rent's cheap. Best greens in town. Lolly done reconciled with her momma and momma's doin' all the cookin' while the two o' them run the front. There was joyful tears fo' days after that reunion.\"\n\nHe smiled. \"I'm happy to hear that. How's the rice and beans, that's the important question?\"\n\n\"Excellent, if I ah'm any judge. They seem real happy running th' place. Makes me think about settlin' down and open in' a lil' place here in th' Quartah. Maybe a coffee shop or something. I could sell cafe au lait and beignets.\"\n\n\"What's stopping you?\"\n\nShe smiled mirthlessly. \"Ain't no bank in Louisiana that's gon' give a loan to a black girl. It's be a stretch a'fore I could pay cash money fo' a spot in The Quarter, even if they's any landlords who'd rent to me.\"\n\n\"Sorry to he'ah that,\" he commiserated.\n\n\"It's fine, got plenty to do anyway. Plenty o' monstahs out the'ah. Maybe someday I can slow down.\"\n\nHe frowned at that. \"I'm sorry I didn't put things together quicker. I figured out it was Ronaldo the night he... that you... well... that evening I saw one of his suit coats hanging on the rack next to his desk with a button ripped off the sleeve. I wish I'd noticed it earlier. It was right there in the detective bullpen for two days after he attacked Alice, but I didn't click the pieces together until that night.\"\n\nShe shrugged. \"Ain't too many ways my people can get justice when we's transgressed upon by yo' people. I ain't worried none, Sugar. He won't be hurtin' no one else.\"\n\n\"The cases are still officially open, you know. There's no real evidence tying him to the murders. And they're trying to figure out who... or what... got him in that warehouse.\"\n\nShe grinned at him. \"Th' killah of the killah's still at large? Oh my, what ev'ah shall we do?\" Then she turned serious. \"Want yo' ta know, woulda been harder to take care o' the problem without you. You's the one found that button. Wouldn't a had near as much power over him otherwise. So, thank ya, Sugar.\"\n\n\"Thank you. You saved my life.\"\n\nThey were silent for a moment.\n\n\"I don't understand how you do all you do, Miss Josephine, but I'm sorry it came to you havin' to... take care of the problem yourself.\"\n\nShe smiled. \"Ya know... hundred years ago, people like you owned people like me. But you's a good man, Etienne. Mo' men like you come 'round, 'nother hundred years or so, maybe people like you might stop killin' people like me just 'cause they can.\"\n\n\"One can hope, Miss Josephine.\"\n\n\"Call me Josette, Detective. Don't think ah mind you's knowing my real name now.\"\n\n\"Josette it is, then.\"\n\nShe winked at him, then she looked down at the flowers he was holding. \"Ooh, Sugar, those fo' me?\" She reached for the bouquet.\n\n\"No, I, uh...\" he stammered, sheepishly holding it away from her. She laughed.\n\n\"Cher, I'm teasin'. I know what's you gots goin' on. I'm happy fo' ya.\"\n\n\"I'm not gonna ask how you know.\"\n\n\"Girl's gotta have her secrets, Cher.\"\n\n\"You seein' anyone these days?\" he asked.\n\n\"Nah, I don't really... see anyone. That wouldn't really work out fo' me. Not in the long run. I settle myself fo' a night he'ah and the'ah with a good friend. Like yo'self.\"\n\nHe glanced around, as his cheeks flushed.\n\nShe glanced up at the clock set in the spire of St. Louis cathedral. \"Well, believe I'd best be off. It was good t' see ya again, Cher.\"\n\n\"You too, Josephine. I--\"\n\n\"Etienne!\" He heard his name called out behind him. He turned and waved, then turned back...\n\nThe sidewalk in front of him was empty. He grinned, ruefully shaking his head.\n\n\"Oh, my goodness sweetie, are these for me? They're beautiful!\" Flo gushed, as he handed her the bouquet. She wrapped her free arm around his neck and kissed him thoroughly.\n\n\"Evenin' dear. Ready for Mardi Gras?\" he said, pulling several strings of colorful beads out of his jacket pocket and draping them around each of their necks.\n\n\"Our first Fat Tuesday together!\"\n\nHe took Flo's hand, and as they walked towards the parade route together, they shared a smile.\n\n\"Laissez les bons temps rouler,\" he said.\n\nThe End"
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "1950s",
        "blowjob",
        "halloween contest 2020",
        "horror",
        "mystery",
        "new orleans",
        "sex",
        "spooky",
        "voodoo",
        "woc"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-hunt-48"
}