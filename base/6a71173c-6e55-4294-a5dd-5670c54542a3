{
    "title": "Trapped in a Game Pt. 02",
    "pages": [
        "Author's note: This is chapter 2 in my 'Trapped In a Game\" series. It's not a self-contained story so you'll be pretty much lost if you didn't read chapter 1.\n\nSpecial shout out to all those who kept me going through a difficult time on this one.\n\nYou know who you are. :)\n\n***\n\n\"Serra?\" I asked.\n\nShe had such a distinctive look; that brilliant red hair that she wore in twin ponytails, and the way that they bounced playfully as she swayed with the wind under the early morning sun.\n\n\"In the flesh!\" she quipped with a smile.\n\nI looked around.\n\nWhere was Kelly, and what was Serra doing here?\n\n\"Still not getting it huh, big brother?\"\n\nThe playfulness in her voice was starting to tick me off.\n\n\"Where is my sister?\"\n\nShe threw her hands up in a show of exasperation:\n\n\"I give up! You're beyond help!\"\n\nShe was still smiling coyly when I advanced on her: \"This is your doing, isn't it? What did you do? What did you say to her?\"\n\nI grabbed her by the hem of her robes, but her smile did not falter in the least.\n\n\"Now now, at least take responsibility for your own mistakes- 'little sis' left on her own... or did 'big bro' do something stupid?\" she added with a knowing wink.\n\nI let her up, and she frowned:\n\n\"Aww... done playing big bad wolf already? I was just starting to enjoy that. Although... there'll be plenty of time for that kind of play...\" she blew me a kiss, and I looked away miserably.\n\nKelly was gone...\n\nWhat the hell did this mean?\n\nI pulled up my character interface, and sure enough a message awaited me:\n\nDear Josh, <br >I know you're probably mad and kind of hating me right now, but please know that that was not my intention when I made up my mind to leave. I know you've been pretty miserable for some time now, and I know that somewhere along the way you stopped loving yourself... and I thought I could help you, I really did... I thought that maybe if I loved you enough you would be yourself again- the happy, easy going, fun loving big brother that I fell in love with all those years ago. Being around you made me the person that I am today, and being loved by you made me happier than I ever thought I could be. But when I almost lost you, I realized... that's not enough for me! I can't be happy until I see you genuinely smile again. I can't be happy until this sickness in your heart is no longer weighing you down, and tearing you apart. I want to see you live again Josh, not just for my sake or anyone or anything else, but for yourself... It hurt me to know that walking away from you would hurt you... especially knowing how vulnerable you are right now... but if there's a chance that you can find that something you've been missing... that something in yourself, to love, hope and live again. Then I'll take that risk. I know you must think I'm crazy for trusting you with this girl, and maybe- I probably am. But she's a top player, and she's given me her word that you'll be alright. Just please remember Josh... I love you. Please... don't give up like that again. Just... do your best and stay alive, so that when we get out of this we can really be together again.\n\nLove-<br >Kelly.\n\nI wiped away my tears as I re-read the message again and again.\n\nSender unknown- was the only response I got when I tried to access her name from the message, and a quick scan for her name came up blank.\n\nShe made certain that I would not be able to find her.\n\nI momentarily thought about heading over to the starting town to see if she was around- but I knew she wouldn't be that careless.\n\nWhen Kelly made her mind up to do something, she'd make sure to do it right.\n\n\"Gosh, the sentimentality is just so intense! It's almost breaking my heart!\"\n\nI rolled my eyes.\n\n\"Come on now- we're wasting time. I only stayed around this place because there's loot we can secure if I have my loyal 'plus one' little tempest to play with.\"\n\nI glanced up at Serra.\n\nEvery fiber of my being wanted to walk away and have nothing to do with her.\n\nBut this is what Kelly wanted.\n\nThis is what she thinks I need.\n\nI sighed, swallowing my pride as I responded:\n\n\"Fine- where do we start?\"\n\nHer eyes lit up at this.\n\n\"Really? I actually thought it would take longer to convince you. Hnn- you really trust that sister of yours, huh?\"\n\nShe took a step back, and studied me a little seriously now.\n\n\"Well then, let's get going! First things first- new spells. I know you spent all of your points on that swap places spell... like seriously, a spellcaster class? Even if you swapped places with your sister when she was in trouble, you would have just died! Dumb ass!\"\n\nI rolled my eyes again.\n\nThis girl was clever but a massive pain in the behind.\n\n\"You know, I don't remember you talking this much yesterday.\"\n\n\"Uh-huh! I know, right! Look at me! I'm all, 'opening up' and being myself around you. Lucky you, right?\" she gave me an enthusiastic nudge, before walking ahead.\n\n\"What would it take for you to stop?\" I muttered, but she didn't even take notice, as she continued to chatter away.\n\nShe led me eventually to the woodcutter who I'd spoken to when I played the tutorial part of the game on my first day.\n\n\"Was this your tutorial guide?\"\n\n\"Uh-huh... You're not going to make me play the tutorial again, are you?\"\n\n\"Hah. No. What do you think I'm here to teach you from the basics go up? That would take forever. I just need you to be able to kill stuff. Here- you can learn basic skills and spells for your class from your tutorial guide.\"\n\n\"Okay... I thought you were gonna pay for me to learn the good stuff.\"\n\n\"Yeah- but I don't wanna throw in a ton of gold and have you die on our first quest. Besides- what we need for our first hunt are some basic spells. Here-\"\n\nShe handed me some coins, and I choked back a gasp.\n\n\"Ten thousand? Really?\"\n\n\"Yeah- you'll need to buy some basic stuff. Relax, we'll make plenty more.\"\n\nThis girl needs a new understanding of what basic means!\n\nIt was more gold than our entire group had collectively!\n\n\"You'll need to learn; slice through wood/stone, earth tremor, and animal friendship.\"\n\nI watched her uncertainly.\n\nWere those skills really going to help in killing stuff? Or was I supposed to be her resident squirrel befriending lumberjack?\n\n\"Okay- do I need to unlearn any or-?\"\n\n\"Nah- not until we need your advanced class skills. These will do for now. Also, what's your strength/dexterity stats?\"\n\nI gave her the necessary info and she hurried off, but not before stopping to add:\n\n\"Oh, and learn minor illusion too!\"\n\nShe came back not too long later with a rapier and a leather shirt.\n\n\"That the standard stuff for a spellcaster class?\" I asked, a little sarcastically.\n\n\"No- but you have no offensive spells. So you'll need some way to contribute to combat. Here,\" she tossed me the rapier, and I almost cut myself trying to catch it by the hilt. \"Just stick 'em with the pointy end. Easy, right?\"\n\n\"So where are we headed first?\"\n\nAt this she cracked a wry smile:\n\n\"I dunno- so many fun things to do, I just can't decide! Although... there just happens to be a certain lich nearby that might be worth going after.\"\n\nThe lich?\n\nAnd just the two of us?\n\nShe's crazy! I thought.\n\nMy mind immediately went back to thinking of ways to find Kelly.\n\n\"Hmn. That look on your face is so pathetic. I see why 'little sis' left now.\"\n\nDon't let her get to you, I thought, as I stalked off to the edge of town.\n\n\"Tell you what- if you wanna give up so badly, I'll give you a chance. There's a little something that you need to master before we can go after the lich- and I'm not willing to waste more than a day on that. You fail, and I'll call little sis for you myself and let her know she can come pick up her no good useless failure of a brother- that is, if she even wants you still after you fail her like that.\"\n\nI glared at Serra a bit.\n\nKelly would never truly abandon me, I knew that.\n\nBut- she did have one teeny tiny little point, which struck a chord in my heart:\n\nI wanted Kelly to look up to me again.\n\nI wanted to make her proud.\n\nI didn't want to fail after one day before going back to her as a miserable failure.\n\nSure, a huge part of me was worried about her being in trouble without me there to protect her, but the truth was that she'd shown herself to be more than capable of handling herself.\n\nI had become the weak link- the thing holding her back.\n\nKelly already had my love, but now it was time I gave her my trust.\n\n\"Fine,\" I spat, \"what do I have to master?\"\n\n\"Oh-? I think I like that look, big brother,\" she responded, her tone as teasing as ever.\n\nSerra led me past the clearing outside of town, to where the woods began.\n\nWe walked to the edge of the clearing where there stood a great, tall majestic oak, which towered over the cluster of trees in the little grove.\n\n\"Kill this,\" she muttered, pointing at the tree, and I studied her, a bit confused.\n\n\"What?\"\n\n\"And no- I don't mean use your new lumberjack skills to hack it down. Kill this oak, treating it as if it were an enemy.\"\n\nI studied the tree for a moment.\n\nSure I'd just learned the 'slice through wood/stone' spell, but that was a near to useless skill in combat.\n\nCome to think of it, none of the spells she'd asked me to learn had combat purposes, did they?\n\nI drew my rapier then studied the tree a little.\n\nThere was no way I was going to hack that tree down with this little glorified toothpick...\n\nWhat else did I have? A hand axe?\n\nIt was for chopping wood, but if Serra didn't want me using a wood chopping skill, I doubt she wanted me to use a means like that.\n\nI sighed.\n\n\"Oh great and wise Serra- please show me the way to the light.\"\n\nI didn't to hide the sarcasm in my voice one bit, but she beamed happily at me nonetheless.\n\n\"Flattery! How did you know?\" she made a show of swooning over to me, wrapping her hands about my shoulders to my chagrin.\n\n\"Good big brother- at least I didn't have to watch you stand here hacking at it like some moron. Rapiers cost gold too, you know?\"\n\n\"So what- am I still killing the tree, or-?\"\n\n\"Yup, you are. But first there are a few things about this game that I need to make sure you understand. The first is this- stand here.\"\n\nShe led me over to a tree trunk, then after a second, a green glow appeared in her hand and I stifled a yelp a brilliant light shot out at me, knocking me off balance.\n\n*Thud!\n\nI landed on my back, and hard.\n\nJesus, did I actually just take damage?\n\n\"Good little moron,\" she quipped playfully, as she stood over me happily.\n\nSigh... this was a safe zone. I could have just taken the hit, huh.\n\n\"So, what have we learned?\"\n\n\"Don't damage yourself falling over like an idiot for no reason?\"\n\n\"Well... I was actually counting on you doing that. But I'm glad you noticed- you took damage, right?\"\n\n\"Yeah... fall damage, I guess?\"\n\n\"Uh-huh- but what did it feel like?\"\n\n\"Like if I hurt my back.\"\n\n\"Right! So...\" without warning, she pulled a hammer out from somewhere behind her back, and swung it at me.\n\nI rolled out of the way, then winced, as a pain shot up my back- but she didn't give me a chance to breathe.\n\nShe was on me with lightning speed and intensity; the first swing I got my rapier in the way, but clumsily stepping back, the second one crashed into me, and hard!\n\n\"Ugh,\" my vision was blurred, and I tried to fight away the stars.\n\nSerra stood over me, with a gloating smile.\n\n\"So- did that feel like combat in any other game you've ever played?\"\n\nI rubbed my head gingerly.\n\nSure, I didn't take any damage, but that hurt.\n\nA lot!\n\n\"No- it didn't. It almost felt like a-\"\n\n\"-real fight? Ha! You think I can swing a hammer and move like that in real life? No. The game just enhances your physical abilities to the point that you can do the things that would come naturally with your attributes.\"\n\nEven as Serra had that arrogant smirk on her face, I couldn't help but be impressed with her.\n\nTo her, this was just another game engine, and she had gone to work on mastering it without stopping to hesitate for even a moment.\n\n\"So how do I kill the tree?\" I muttered, genuinely curious.\n\n\"With slice through wood/stone! Duh!\"\n\nI studied her stupidly, and she grinned.\n\n\"Not using it on the tree of course, that's still off limits- but I said you had to treat that tree as the enemy. I didn't say anything about... that one, or that one. Or that one!\" she added, as she pointed cheerfully at the trees surrounding the oak.\n\nYou really think you're clever, don't you?\n\n\"Well? Get to work big brother! Lesson one: a falling tree does more damage than one idiot with a rapier!\"\n\nI walked over to the tree adjacent to the one I was supposed to kill, and Serra watched with exaggerated anticipation as I concentrated on the spell, then with a swing of my hand, sliced through the trunk.\n\n\"What a perfect idiot!\" she clapped her hands playfully, as the tree I had slashed fell several feet from the oak I was supposed to 'slay.'\n\nIs it just me, or is she enjoying this way too much?\n\n\"Your aim is terrible! Now if only there was some sort of skill- a tempest skill, if you must, that could improve your aim.\"\n\n\"Mark prey? I can't mark a tree...\"\n\n\"Huh? You can't hurt someone in a safe zone either...\" she nodded suggestively, and I got what she was saying.\n\n\"You're saying I can use spells in ways outside of what the rules state.\"\n\n\"There are no rules- it's called 'spell description' for a reason. How you use it is up to you.\"\n\nI stared at the tree and tried to activate mark, but still- nothing happened.\n\n\"It's not working,\" I muttered, sure that she was probably going to smack me and call me an idiot for falling for her bluff.\n\n\"Well that's because you're doing it wrong! Mark is a concentration spell- concentration spells are activated and maintained through thought. So just think about how it might be done. I've seen players mark caravans, weapons and armor.\"\n\nI pondered it a little, then tried again, this time imagining that the tree was some sort of monster coming to life in front of me.\n\nA mark momentarily shimmered about it, before fading.\n\nHoly shit.\n\n\"Was that it just now?\"\n\nShe walked over and put a hand on my shoulder, and I gave her a little uncomfortable glance.\n\n\"Come on, don't be like that. Use synergy. I wanna see.\"\n\nI did as she asked, then again, tried to visualize the tree coming to life in front of me, and the red outline flickered momentarily again before taking shape.\n\n\"Ooh- you learn quickly. Not half bad,\" Serra muttered appreciatively.\n\nThe genuine tone with which she said it actually hurt.\n\nI knew that low expectations could be a relief, but I forgot how insulting it could be.\n\n\"Now comes the hard part. Keep your mark on that tree, and...\"\n\nShe raised a hand, and fired a beam of light at a nearby rabbit, and it tore through the little thing mercilessly.\n\nI winced a little, raising my eyebrow at Serra questioningly.\n\n\"Do you think that's what she'll look like?\" she whispered wickedly, and I shifted my shoulders under her touch uncomfortably.\n\n\"What who will look like?\"\n\n\"Your little sister- when the monsters tear her apart in some dungeon.\"\n\n\"What the fuck?\"\n\nShe tightened her hold on my shoulder and wrapped the other arm around me as I tried to turn on her.\n\n\"Don't worry- she'll never blame you. It wasn't like you'd be able to protect her if you were there anyway... or maybe she might- as she draws her last breath... maybe she might curse you for abandoning her to die like a helpless little rabbit, all alone in some cold dark cave.\"\n\n\"Cut that shit out- I'm not kidding!\"\n\nShe cackled as I tried in vain to grab her, but she disengaged from me and bounded away with ease.\n\n\"Too easy big brother! By the way- just where did your tree go? Hmnnn?\"\n\nI was fighting the strong urge to lash out at Serra- but the feelings died immediately with the realization that she was right. The mark I'd placed on the tree was in fact gone.\n\n\"What happened?\"\n\n\"You're super easy to distract is what. Any mention of little sis and you're up in arms. Your concentration broke, and the mark disappeared. So what do you think is going to happen if you're dodging ice spikes and casting slice while concentrating on the mark?\"\n\n\"I see.\"\n\n\"Yup. This is your actual test. You have until evening to master your concentration. You won't hit the tree with other trees unless it's marked, and you won't be able to mark it and keep the mark up if you lose concentration every time you cast slice. So how about it? Think you've got what it takes? Or am I gonna have to call little sis to come get her loser big brother?\" She was smiling happily as she spoke.\n\nThis girl sure likes games, I thought.\n\n\"Now I could stand here and play with you all day, but I do have some things to take care of. So I'm going to send a little playmate along to keep you company. When I get back, I expect that tree to be 'dead'. 'Kay?\"\n\nWith that, she gave a curtsey then headed off, and I immediately began working on the concentration spell.\n\nBut it was easier said than done.\n\nEvery time I concentrated on casting slice through wood, the concentration on mark faded just before I could work out how to the right angle and positioning for slice.\n\nI had sliced through two more trees when a familiar face came wandering along.\n\n\"Hey! It's you again!\" the little girl called cheerily, before running up to me and giving me a hug.\n\n\"Lina? You remember me?\"\n\n\"Of course I do! Papa said he hoped you made it alright, and it made me worry.\"\n\nShe spoke so genuinely and the emotion she displayed felt so real, I found myself wondering if she really was an AI controlled neutral character.\n\n\"Oh- right! The funny lady said to help you with these!\"\n\nShe walked over to one of the fallen trees, and a green light appeared over both her hands, as she began chanting something inaudibly, and to my surprise the tree which I'd felled began to repair itself, and in just a few moments, was standing tall and looking as good as new.\n\nShe's a druid, I thought to myself in amazement.\n\nEven NPCs have jobs around here, don't they?\n\nI found myself wondering what other little tasks our AI compatriots were out and about performing as Lina went from tree to tree, repairing them.\n\nWhen she was done, she stepped back to the tree trunk closer to the clearing, and I took it as the signal to get back at my tree slaying exercise.\n\nI figured I'd start getting the hang of it sooner or later, but by the time my stomach let out a low growl letting me know that it was time for lunch, I had hacked no fewer than forty trees to the ground without so much as scratching the big oak.\n\nAs Lina got to work repairing the damage I'd done, I took a seat on the old stump and got out my lunch.\n\nThese were the skewers that Kelly had prepared, I thought, and a melancholic pang twanged at my heart as I wondered where she was now.\n\n\"Are you okay, mister?\" Lina asked thoughtfully, and I marveled again at her design.\n\nIt was such a curious thing. Lina was one of the first NPCs I'd met in this game, but unlike the others she really stood out.\n\nI'd so far met her dad, a couple guild masters and shopkeepers, but none seemed to convey the eerie lifelike nature that she embodied.\n\nAs I ate, I decided to test the limits of her apparent intelligence.",
        "\"Why are you repairing the trees, Lina?\n\nShe looked at me thoughtfully.\n\n\"Because the funny lady with the red hair said that it would help you save someone.\"\n\nHmm.\n\n\"Did she say anything else?\"\n\n\"Uh-huh. She said that if you asked me any questions about her, that I should tell you to 'quit fucking around and do your job.'\"\n\nI cringed as Serra's words came cutely from the otherwise innocent young girl.\n\nShe truly did have a twisted sense of humor.\n\n\"Okay. Back to it I guess.\"\n\nAfter eating the delicious meal that Kelly had cooked, I felt energetic and hopeful again.\n\nBut by the time evening came I was running out of magic power and nowhere near to mastering the task at hand.\n\n\"Ugh!\" I groaned in frustration.\n\n\"Are you okay, mister? Maybe you should take a rest.\"\n\nHer brow was wrinkled with concern, and it made me feel at ease a bit.\n\n\"I can't give up,\" I muttered to her.\n\n\"Oh... I see. Well then- give it your best!\" she cheered me on a little, and I found her support surprisingly invigorating.\n\nI took a deep breath, then tried to focus.\n\nEvery time I imagined the tree coming alive, it allowed me to cast mark.\n\nThe problem was that as I began to focus on slice through wood, the mark would fade.\n\nMaintaining the image of the tree coming to life was the problem.\n\nIf I lost sight of the image for even a second, the mark would falter; and that was before I even set about casting slice.\n\nI'd tried this from multiple angles, from trying to calculate the angles required before mark ended and hitting the tree with my own aim, to attempting to cast the spells as quickly as possible to get a hit off before mark was gone, but all had failed.\n\nI'd managed a few glances through sheer luck, but no solid hits just yet.\n\n\"Well this looks disastrous,\" a sickeningly cheerful voice spoke just behind me and I jumped, before casting a disapproving glance at Serra.\n\nLina smiled cheerfully at her, and I became nervous; my time was almost up!\n\n\"Well then, let's see if you can still do it. I reckon you've got, what-? Ten minutes? -before I start calling little sis.\"\n\nI gulped.\n\nHmm.\n\nKelly had been on my mind all day.\n\nMaybe I could use that to my advantage?\n\nI tried picturing her at the tree, but the thought of casting mark and hitting her with a tree wasn't the most enticing think to think of.\n\nThe mark faded and the tree fell, just to the left of the mark, with a loud *thud*.\n\nCome to think of it, there was an obvious image that I was yet to try.\n\nHer...\n\nI suppressed the urge to retch as I conjured the image in my mind of Tracey, my ex-wife, standing at the tree, and sure enough, my mark quickly took the spot, but as I sliced the image still faded and I managed only a slight glance again.\n\n\"Ooh, close! But unfortunately not good enough. Well- it was fun while it lasted. You can stop wasting your time with this loser, little one,\" Serra called to a confused Lina as she began walking off.\n\nNo.\n\nNo, no no!\n\nI took a deep breath.\n\nOne more shot!\n\nI conjured the image of Tracey again, and tried to make the image more life-like.\n\nWhat was the thing that pissed me off about her the most?\n\nOf course, it was the way she treated Kelly:\n\n'I've always hated her! You always put her before me. Always!' her image spoke the words to me from one of our many fights from the past.\n\nTracey knew how Kelly felt, didn't she?\n\nI suddenly recalled Kelly's admission, that she had done things to piss Tracey off, and it occurred to me that my bitch of an ex-wife had probably done the same thing to her.\n\nAll those times she was around, and Kelly was silent and not herself.\n\nSuddenly a new image appeared in my mind, of Tracey standing at the tree over an injured and dying Kelly.\n\nYou bitch!\n\nI'll fucking kill you if you hurt her!\n\nA deep red outline appeared around the image, and I screamed my conviction into my action.\n\n\"Arrrrgggghhh!\"\n\nI never took my eyes off of the image of her as I willed my slice into activation, and in a mad frenzy, I cut my way through tree after tree around the oak.\n\nSerra turned around at the sound in time to see every tree in the area crashing down onto the oak, and I fell to my knees, tears falling from my eyes, as the oak still didn't budge.\n\nI'm sorry, Kelly, I thought. I've failed you...\n\nI remained slumped at the foot of the Oak, unable and unwilling to raise my head as feelings of failure and inadequacy incapacitated me, until the shadow of a figure darting around from behind me drew my eye.\n\n\"Necrotic touch,\" she muttered, and a darkness which seemed to deny the very light of the sun began to pour from her hand.\n\nThe roots at the base of the tree began to wither and writhe, and a series of cracking sounds came from the great big oak as the massive trunk relented, and the whole mess of trees came crashing to the ground.\n\n\"One tree- dead!\" she muttered in triumph, before turning to my slumped form. \"Well now- there might be a gamer inside of you after all,\" Serra muttered appreciatively.\n\nLina was looking on, a look of combined fear and worry in her eyes.\n\n\"Although...\" Serra put a finger to her lips thoughtfully, as the darkness that surrounded her gave way to the light, \"I wasn't really planning to leave you- I just wanted to see how hard you would try!\"\n\nShe let out a shrill laughter, slapping her knees a few times.\n\n\"The look on your face right now is precious! You should see yourself. Hahahahaha!\"\n\nI reclined onto my back, and panted from exertion and frustration alike.\n\nCouldn't you have left me with someone less... crazy, Kel?\n\nI was pretty worn out, so we decided to just make camp by the clearing for the night.\n\nLina even helped us get set up before heading off to find her 'papa' just as it had begun to really get dark.\n\nTo my surprise however, Serra had Lina set up only one tent as I chopped some wood and prepared our dinner, and sure enough, as soon as we were finished eating, she walked over to the tent and beaconed for me to follow.\n\nI entered awkwardly and uncertainly.\n\n\"Come on. I won't bite... unless you ask,\" she teased playfully, but it did little to set me at ease.\n\nI began settling into a corner as far away from her as possible when she cleared her throat, forcing me look up.\n\n\"There's something we need to settle.\"\n\n\"Huh?\"\n\n\"Your synergy skill- it doesn't quite work with me.\"\n\nI pondered the situation.\n\nSynergy was a spell which had differing effects when used on different people.\n\nWith Kelly, it allowed me to share my stamina with her, as well as access to my mark and expanded field of view.\n\nCome to think of it, when Serra touched my shoulder it barely felt as if we'd connected at all, so I knew what she was talking about.\n\n\"Okay- does that affect our plans?\"\n\n\"Unfortunately- yup. But there might be a way to fix it...\" she was giving me a mischievous smile and I tried my best to suppress a shudder, as the suggestive look she was now shooting me gave me a clear indication of what she had in mind.\n\nIn my experience with video games, character interactions might be affected by certain random traits; from anything like one's favorite color to their compatibility according to their zodiac sign. So synergy might just be randomly more effective depending on these arbitrary combinations.\n\nBut my compatibility with Kelly suggested that it might be affected by the relationship between the two characters using it, making it was pretty plausible to think that the spell's effectiveness was a measure of how familiar our characters were.\n\nThis meant that my natural distrust of Serra would result in its effect being severely impacted.\n\nI let out a long, tired, sigh.\n\n\"What's the deal- are you into guys or something?\" she muttered teasingly.\n\nI looked up at her defensively.\n\n\"What? No,\" I replied.\n\nShe giggled.\n\n\"Am I not attractive?\" She asked.\n\n\"Your avatar, sure.\"\n\n\"Now don't go selling me short,\" she advanced as she spoke, removing her priest's garb, before cupping her sizeable breasts and adding with a wink: \"you know... they're this big in real life too.\"\n\nWithout her priest's robes, Serra wore only a translucent skimpy nightgown that seemed to cling to her body in all the right places, revealing the luscious outline of her body.\n\nWhile Kelly had designed her character with a body that was petite like her own frame, albeit with that delightfully enhanced bosom, Serra's design was outright curvy, with creamy brown skin to complement her belly-dancer like figure.\n\nI gulped.\n\n\"What's the matter? I know you care a lot about your little sis, but what's the holdup? Are you married?\"\n\nI shook my head.\n\n\"Otherwise spoken for?\"\n\n\"I- uh, something like that.\"\n\n\"Well- what she doesn't know won't hurt her... I won't tell,\" she whispered, with a conspiratorial smile. \"Besides, this isn't real Josh. Think of it as a- 'mental exercise' so to speak.\"\n\n\"I still can't.\"\n\n\"Oh come on- it's not like I could actually be a guy or anything like that...\"\n\nThis I knew was true as well- sure, you could design your character to fit whatever gender you imagined or identified with- but I knew from the medical reports that your character's biological makeup matched your own... so if it came down to sex, you'd know who was exactly what.\n\n\"Isn't there another way?\"\n\nShe pouted.\n\n\"Probably... but wouldn't this be more fun? Think about it, Josh. Sex in here is just like a game... and I'm really really good at games.\"\n\nIt was a pretty convincing argument, for sure. But...\n\n\"I'm sorry- I can't.\"\n\nShe crawled over to me before pouncing dramatically, knocking me onto my back.\n\n\"What're you-?\"\n\n\"Shh, we're bonding!\"\n\n\"It feels like you're trying to do something else,\" I muttered, as her hands, tried to roam a bit about my body.\n\nI resisted a bit before she relented:\n\n\"Fine fine,\" she muttered disappointedly, before settling down. \"Can't blame a girl for trying, right?\"\n\n\"You're still on top of me...\"\n\n\"Yeah, well get used to it- physical contact might help out with the synergy problem, and you better play along, because if this doesn't work then we're doing the 'other thing'.\"\n\n\"What do you mean? We're sleeping like this?\"\n\n\"Uh-huh!\"\n\nShe was playful at first, squirming and shuffling a bit on top of me, but soon she was settling down.\n\n\"So- do we turn on our sleep functions?\"\n\n\"Nope! That would kinda defeat the point of this- sleep mode kills your senses. The idea here is to start establishing a connection, and physical closeness doesn't accomplish anything if you don't feel anything.\"\n\nShe tossed and turned a bit, going quiet before eventually speaking again:\n\n\"You still up?\"\n\n\"Uh-huh.\"\n\nShe sighed.\n\n\"Were you sad- when she died?\"\n\n\"Huh?\"\n\n\"Your friend.\"\n\n\"Oh- we'd only recently met... but yeah... I was.\"\n\nShe shifted a little on top of me.\n\n\"I don't think anyone would be sad if I died...\"\n\n\"That's not true, I'm sure-\"\n\n\"Not that I care anyway. I'm probably like, the least likely to die in this place,\" she added with a scoff, and I rolled my eyes at her.\n\nShe gave me a sharp little nudge, but I couldn't help but wonder if maybe she was a little more fearful than she was really letting on.\n\nMy mind went back to Kelly. She was so scared on the first night, but at least we had each other.\n\nIf Serra really had no one, maybe it was hard on her?\n\nI tried to picture it and all I got was an image of her riding naked on a bear while throwing spears at goblins while laughing insanely and shouting 'this game fucking rocks!'\n\nThe image elicited a little chuckle, and Serra nudged me in protest, giving a little irritable whine.\n\nI tried to fall asleep, but no matter what I did I couldn't quite get comfortable and relaxed enough to drift off, and even when I did eventually fall asleep I found myself frequently waking, sometimes to the disgruntled groans of my equally uncomfortable sleeping partner.\n\nBy the time morning came and our wake up alarms went off, we were both somewhat miserable, and Serra wore a pretty grumpy expression on her face.\n\n\"That has got to be the worst night of sleep I've ever had in my life!\" she complained with a stretch.\n\nIt was such a curious thing; our virtual selves always looked so perfect at all times.\n\nWe didn't look disheveled when we woke up, and though I hadn't taken a bath since we first started playing, our bodies never smelled or produced any waste for that matter.\n\nYet the disgruntled look on Serra's face told me as plain as day that she slept about as miserably as I did even if her avatar looked as perky and fresh as ever.\n\nWe ate a light breakfast before heading out.\n\n\"So- what's the approach?\" I asked.\n\n\"Our lich has been busy- raising dead all over the place. We'll need to clear out some camps before making our move.\"\n\n\"Gotcha.\"\n\nWe made the trip to the ruins without incident, before surveying the scene.\n\nJust as she'd mentioned, undead were pretty much everywhere around the camps that we'd cleared out in our previous run.\n\n\"Should I scan?\" I asked, and Serra shook her head.\n\n\"Nope- waste of magic, that spell. Here-\"\n\nShe whispered something, and a white glow appeared momentarily about her, and soon a few small lizards came up to us.\n\n\"Talk to them,\" she said, nodding at them, \"ask them to scout around and see what's up.\"\n\nI did as she requested, and the lizards scurried off, and sure enough within ten minutes or so they returned, and revealed all that they had seen.\n\nIt was so surreal, hearing the lizards speak.\n\nTheir words were strange and echoey in my head, but they were clear enough.\n\nI relayed the info to Serra, and she nodded:\n\n\"Good- that's enough.\"\n\nI pat one on the head, and he nuzzled me affectionately before I dismissed them and they headed off.\n\nI kinda like that one, I thought.\n\n\"Okay- lets go,\" she muttered, and I followed after her.\n\nWe got to the bottom of the valley, when Serra motioned to me to stop.\n\nShe pulled a little sack from her bag, and began to scatter some salts, leaves and other tidbits about herself in a circle, then drew a few lines with a paint like liquid, then putting her hands together, the circle began to glow white.\n\n\"Whoa- what is that?\" I asked, and she arched an eyebrow at me disbelievingly.\n\n\"Are you seriously a tempest that doesn't know about rituals?\" she asked.\n\nI looked at her blankly and she sighed.\n\n\"I keep forgetting what a noob you are. Rituals draw spell energy from the components used to cast certain spells, instead of drawing power from the caster. They're handy, but take some time to set up.\"\n\nShe focused on setting up her ritual a bit, before adding:\n\n\"Okay. We're ready. This one is called silence; there won't be any sound within twenty feet of us. Use synergy and we should be unaffected though.\"\n\nI nodded, drawing my rapier.\n\n\"When I hit with my hammer, you go for a weak spot- neck, anywhere exposed. We hit and run, don't stop to finish anyone off. Got it?\"\n\nI nodded again, then as she activated the final part of the sequence, I placed a hand on her shoulder and we were off.\n\nAs we moved, she shot me an annoyed glance as despite using synergy our sync was distinctly off, but these enemies were pretty weak; they were all animated versions of the goblins we'd slayed, apparently, and with Serra in the lead we'd dispatched them quickly enough.\n\nWe tore through two camps easily enough before tragedy struck; I had just pierced an undead goblin in the neck, and just as I spun around in pursuit of Serra, we collided, hard, and it threw me to the ground.\n\nI was a little dazed, but as I tried to shake it off I noticed Serra staring wide eyed at me, her actions animated and panicked.\n\n\"Whats-\" I started, but stopped short as the words appeared not to come out as I talked.\n\nSilence spell, I thought. Guess the synergy had worn off.\n\nI was still trying to get my bearings when Serra deactivated the spell, and all at once, I heard a loud huff from behind, and turned around in time to see a large creature almost upon me, at full charge.\n\nI rolled just as it was upon me, a sharp extended tusk just missing me by mere inches as the galloping monstrosity went past me and further up the camp.\n\n\"Jesus Christ, what is that?\" I muttered with my newfound voice.\n\n\"Skeletal steed,\" Serra muttered, \"get up you need to draw him to something he can't charge past. There; that rock!\"\n\nI did as she ordered, but not before marking the steed and trying my best to transfer the mark.\n\nShe gave me a halfhearted thank you then took down a few undead around my position.\n\nThe steed took aim at me and charged again.\n\nJeez, maybe a level or two in rogue mightn't be so bad, I thought, as I once again made a clumsy dive to escape being skewered, but his charge this time wasn't as intense as he had to stop short to prevent a full on collision with the rock.\n\nHe turned on me, then hoofed at the ground with a snort, but before he had a chance to strike again, Serra came down with a leap from above the rock.\n\n\"Divine Smite,\" she muttered, and her hammer glowed, then exploded with light as the blow stuck, and the horse shattered into a mess of bones about us.\n\n\"Damn,\" I muttered appreciatively.\n\n\"Priest, remember? Undead is kind of my thing,\" she announced proudly, but we barely had time for the interlude as the undead around the camp began to swarm around.\n\n\"You have a plan for this I assume?\"\n\n\"Of course- what kinda girl do you take me for? Use your pulse, and tell me how many there are.\"\n\n\"About forty-five.\"\n\n\"Okay just back up, and wait for my signal.\n\nWe backed up until we were flat against the huge rock, a sizeable horde upon us, before Serra grabbed the sigil that hung from her neck and raised it up, releasing a blinding flash of light.\n\n\"Now!\" she yelled, and I followed her lead.\n\nI thought we were making a run for it, but as she got somewhere near the center of the crowd she stopped short, then shot me a serious look that said 'do not fuck this up.'\n\n\"Hit them as they freeze, got it?\" she asked, and I nodded.\n\nShe raised her hand and sword shaped lights began to appear before her.\n\nSuspended animation, I thought. This was what she had used that day to save us from the lich, but instead of calling up all of the lights at once, she was bringing them out one by one, with deliberate delays.\n\nI tried to remember if the spell was supposed be used like that, but as I noted the look of intense concentration on her face, I assumed that it was not.\n\nThe first light suspended a small group in front of us, and I struck.\n\nAs a spellcaster, it was pretty difficult for me to even land proper hits normally, but in their frozen state I noted that it was much much easier than ever.\n\nBe quick, I told myself.\n\nAs group after group approached us, Serra suspended them and I tried my best to take them down.\n\nBy the time she used the last of the lights, we had thinned the crowd to a manageable amount, and as she rejoined the fight with her war hammer we quickly took them out.\n\nI was panting from exhilaration, and even Serra seemed a little on edge.\n\nI studied her uncertainly, and after taking a final deep breath, she turned on me angrily.\n\n\"What the fuck is your problem? Are you just that stupid or are you actually trying to get us fucking killed?!\"\n\n\"I'm- sorry,\" I blinked a few times fully expecting her to continue her tirade on me, but instead her expression immediately shifted from anger to horror.\n\n\"Fuck me- I just wailed on you, didn't I?\" she took a few steps back, then slumped to the floor right there amongst the mass of corpses and skeletons.",
        "\"A-are you alright?\" I was concerned.\n\n\"Fuck,\" she whispered now, \"when the fuck did I become the idiot who rages at noobs?\"\n\nShe looked on the verge of tears, and I wasn't sure how to react.\n\nShe took a few long minutes to compose herself, before standing up.\n\n\"Come on, we need to burn these corpses,\" she muttered blankly, but I couldn't help but notice the absence of her usual playfulness in her voice.\n\nWe gathered the bodies and made a pyre using some of the firewood that Serra made sure we'd stocked up on after our tree slaying expedition, and set them ablaze, before setting up camp on one of the hills that overlooked the valley.\n\nSerra appeared to be deep in thought, and we ate in silence by the light of the camp fire.\n\nShe seemed curiously sentimental and I wondered what was going on in her head, but she never spoke up even as we set up our tent, and as we got ready for bed things were more awkward than ever.\n\nI lay down and she gingerly climbed on top of me, still silently brooding.\n\nShe was still for a bit, and I began to wonder if she'd drifted off already when she spoke:\n\n\"You probably hate me, don't you..?\"\n\nI thought about the question carefully, before responding:\n\n\"No. I don't. Why do you think that?\"\n\n\"I yelled at you.\"\n\n\"Yeah- well I kinda did fuck up...\" I countered.\n\n\"No. I knew what your skill level was getting into this. I made the choice to take you along. It was my error, not yours.\"\n\n\"Still-\"\n\n\"It's okay, you know. A lot of people hate me- so I understand-\"\n\n\"Hey-\" I sat up a bit, and she moved off of me. \"Where is this coming from?\"\n\nShe gave a little bitter laugh, \"Seriously, you don't know? Gamers can be some of the cruelest people on earth... you don't even need to suck to get yelled at... When we started playing competitive league, my teammates yelled so much I started yelling back, but they were assholes so I never really thought much of it. But I kinda always thought I would be different; that I wouldn't yell at noobs for sucking; but I yelled at you even though I knew it was ridiculous for me to expect you to instantly play outside of your tier.\" She sighed, \"one little death scare and I lost it.\"\n\nI still felt pretty bad.\n\nSerra was an amazing player, and I had the distinct feeling that I was just holding her back.\n\n\"Why'd you really offer to party up with me?\" I asked, and she shrugged.\n\n\"Having even one person with you makes a world of difference in this game, and you fit the bill perfectly; you listen, you don't outright suck, and you seemed like a half decent human being by my standards.\"\n\n\"Wouldn't someone more skilled be a better match?\" I asked.\n\n\"Hah- you clearly don't know what it's like being a girl in the world of professional gaming. Even when you play with players below your tier, you have your every decision questioned, everyone acts like if they know better than you do, and you get the added bonus of almost always being sexualized in every possible manner. Soloing was less of a choice and more of something I was pushed into.\"\n\nI chuckled a little.\n\n\"For someone who gets sexualized a lot you sure come onto me pretty often.\"\n\nShe shoved me in the chest.\n\n\"Jackass! Just because I hate being sexualized by every fucking loser that walks through the door doesn't mean that I don't have a sexuality of my own!\"\n\nI studied her, then held up my hands apologetically.\n\n\"You're right- I'm sorry.\"\n\nShe rolled her eyes, then sighed before reluctantly climbing back into position on top of me.\n\nShe shifted around a bit uncomfortably, before she spoke again:\n\n\"Are you sure? That you don't hate me, I mean? Synergy didn't seem to get better- at all...\"\n\nI thought about what she'd said for a bit, before suddenly sitting up and gesturing for her to get off.\n\n\"Hey- What gives?\" she complained.\n\n\"Just get up,\" I chided, nudging her off of me and onto her side.\n\nShe was about to continue her protest when I slid over to her, pressing my body into her back, and putting an arm about her, pulling her in tight.\n\nI put my other arm under her head, and she nestled herself into the nook between my arm and neck, and I caught myself just as I was about to give her a little kiss on the back of her head.\n\nFuck, I thought to myself, I really do miss Kelly.\n\nShe nuzzled my arm, and gave a little satisfied sigh.\n\n\"Are you sure you don't wanna do the other thing?\" she asked, rolling her hips against my pelvis; but all it did was earn her a little warning smack.\n\n\"Behave,\" I warned, and she whined softly in protest.\n\nShe squirmed a little bit in my arms before placing a hand on my own hand, which rested on her stomach.\n\n\"This is nice...\" she muttered absently, before suddenly asking \"Is this how you and little sis slept?\"\n\nI began coughing as the unexpected question caught me off guard, and left me distinctly flustered.\n\n\"Uh- not exactly,\" I responded, clearing my throat, and she giggled a little.\n\n\"Have you ever?\"\n\n\"What?\"\n\n\"Slept like this with someone...\"\n\nBefore I could think, images of going to bed with Tracey flashed in my mind, and I flinched instinctively at the sting that came with the recollection.\n\n\"Yeah...\" I answered softly.\n\n\"Oh... well- she must be lucky,\" she mumbled, before settling down.\n\nI let the words hang in the air, but it didn't take long before Serra's breathing pattern softened, and became more consistent, and I realized she'd actually fallen asleep.\n\nShe was right about one thing, though. I'd forgotten how nice it was to just have the comfort of another human being there when I slept.\n\nNot that it had ever really been comforting, sleeping like this with Tracey; but what it really made me think of was Kelly.\n\nSure we'd slept together from time to time, but I never had the chance to really hold her like this.\n\nThis situation was so surreal. Kelly was probably lying a few feet away from me in a hospital bed right now, but we might as well be a million miles apart.\n\nIt made me miss my sister more than ever, and I drifted off wondering what it would be like to hold her like this, not in the game, but with our real bodies.\n\n***\n\nWhen our alarms went off the next day, Serra woke up with a disgruntled moan.\n\n\"Ugh- five more minutes?\"\n\nI sighed.\n\nThe fact that sleep had been really peaceful and comforting actually annoyed me a little.\n\nShe turned over, still in my arms, and I found her closeness suddenly stifling.\n\nSerra rolled me onto my back, positioning herself on top of me, before stretching out on top of me like a lazy cat after a long nap.\n\nAs she arched her back, thrusting her breasts out invitingly, and I fidgeted nervously as their softness pressed first into my chest, then slipped forward, hanging enticingly over my face as she moved forward, suspending her body above me by her hands which were placed on either side of my head.\n\nI was about to ask her what she was doing when she relaxed her legs, allowing her pelvis to brush against my front.\n\n\"Seriously? Nothing? Not even some morning wood?\" she asked with a giggle, and I groaned in disapproval.\n\n\"It's too early in the morning for you to be misbehaving,\" I scolded, and she shrugged:\n\n\"I guess I just can't help myself around you,\" she added playfully, before I sat up, forcing her off of me.\n\nShe gave a little pout, before crawling out of the tent.\n\nI followed her out and was greeted by the sight of Serra stretching again, bathed in the soft orange rays of the early morning sun, and letting out a loud satisfied sigh.\n\n\"What a great day to kill a lich!\" she muttered with a huge smile, and I nodded, smiling a little despite my anxiousness.\n\n***\n\nWe stood over the mound where the Lich's lair was located surveying the scene.\n\n\"Doesn't look like anyone's here yet,\" she noted, and I studied her with a puzzled look.\n\n\"You expect that someone will come?\" I asked, and she nodded:\n\n\"Duh! A Lich appearing so close to a starter town is pretty rare. I'm sure word would have spread from your friends by now.\"\n\n\"I don't think they would-\"\n\n\"-I don't work with ifs and buts, buddy. Ideally I would have wanted to kill it the same day, but I needed a partner to get it done. Best case scenario; a bunch of noobs come by and just get wiped. Worst case- someone like me comes around with the same plan.\"\n\n\"Okay, so what do we do?\"\n\n\"This,\" she muttered with a playful smile as a few lizards and a bird came along, drawn to the greenish glow at her hand.\n\n\"There- there and there, let them watch out for players,\" she muttered, pointing out certain spots that she wanted my critter friends to keep watch on, before adding: \"No scanning unless I say so, got it?\" and I nodded.\n\nTo be safe she prepared a few alarm rituals around the ruins, and I managed to befriend a hawk, whose screeches we could hear from miles away, to alert us if anything at all got nearby.\n\nSerra activated her Chameleon cloak and using my synergy, I kept a hand on hers and we sneaked in.\n\nSerra took a deep breath:\n\n\"Okay- I can fight this thing for forty seconds max; you take longer than that and we both die,\" she whispered, in a last minute review of the plan.\n\n\"I know, I know,\" I muttered, trying to concentrate on the task at hand.\n\nMy lizard friends confirmed that he was indeed in the throne room, so we approached it while Serra put the finishing touches on her silence ritual.\n\n\"Josh- please don't fuck up my silence this time,\" she muttered, and I gulped, before nodding.\n\nShe took a deep breath, and we were about to go in when she pulled me back one more time:\n\n\"One more thing: you can't lose sight of it when we're leaving- you need to mark it before you lose sight, okay?\"\n\nI nodded again, but as she activated the silence spell and we moved for the entryway, she gulped nervously and my eyes shot open with surprise:\n\nYou're nervous? You can't be nervous! I thought to myself, and a little bit of panic momentarily gripped me, but as we entered the room with the seven foot tall skeletal monstrosity and I took her hand, I conjured an image of Kelly, walking ahead of me as she always had before looking back and holding out her hand for me, and as I activated synergy, a curious warm sensation fluttered through me.\n\nSerra looked back at me with a strange look that I could not place, before looking forward at the enemy we were about to take on.\n\n\"Lightning shackles,\" she muttered, and as the green glow appeared at her hand she aimed it at the Lich, firing a web of light which wrapped about it, and giving us just enough time to make it behind the pillars on the opposite sides of the entrance before the light broke into fragments and an icy spike shot across the room just to my right.\n\nI took a deep breath, before putting our plan into action:\n\n\"Slice!\" I yelled, swinging my hand as I activated the ability. I made several slices through the pillar I stood at, and as the stone began to crumble and the pillar gave way, Serra raised her hand, holding onto the pendant that hung from her neck as she brought forth the sword shaped lights from her suspended animation skill.\n\nThe pillar creaked a bit, before the first light appeared beside me, freezing it still and I dashed to the next pillar as Serra fired another lightning shackle at the lich.\n\nAs I sliced through the second pillar, I had to marvel at the sheer brilliance of her plan.\n\nI mean sure, everyone knew that the lair of a Lich was corrupted by his very presence; but who would have thought that the divine lights of suspended animation would have affected the lair itself just as it had the Lich?\n\nTwo down, six to go, I thought, as the second sword shaped light appeared at this pillar.\n\nWe repeated the steps three more times before a pulsar force emanated from the center of the room, knocking both myself and Serra off our feet just as a mighty screech came bellowing from the lich.\n\nShit, I thought.\n\nSerra had predicted that the lich would possess some means of ending the silence effect, which would directly impede his ability to cast spells and limiting him to the ice spike ability that he activated using his staff; but as the towering monster aimed a bony finger right at me I froze in panic.\n\n\"Sanctuary!\" Serra cried out, just as a wicked looking sword appeared out of thin air in front of me, and a white light appeared in front of me just as the blade swung, causing it to vanish in in mid slice before reappearing in full swing in front of Serra.\n\nThe blade cut a large gash across her shoulder and she cried out in pain before shouting:\n\n\"Move, idiot!\"\n\nHer spell had protected me, I thought, as I dashed to the next pillar and cut through it just as Serra's light shaped sword appeared.\n\nHer suspended animation ability was one which she could use only once per day, and typically it would only allow her to suspend all dangers in a radius marked by the sword shaped lights for five seconds; but she had discovered that if she slowed the activation sequence down, activating instead one single light at a time, she could increase the overall duration to forty seconds, instead suspending only small areas at a time.\n\nBut it would all end as soon as the final light was cast, and if at any point she delayed the activation by too long a time, the effect would end immediately.\n\nQuicker, I told myself, knowing that she couldn't delay the sequence by much.\n\nAs is, she was concentrating on the suspension ability while casting spells to distract the lich.\n\n\"Lightning shackles!\" she called again, as another sword sliced at her leg this time, causing her to hobble a little behind another pillar.\n\nI moved quickly, slicing through another pillar then without pause I dashed to the next and began slicing there as well as another light appeared at my side.\n\nSerra shot me a thankful glance, but as she was about to activate the final light, the lich raised his hand, creating three swirling beams of fire, and I quickly put my hand to the ground:\n\n\"Earth tremor,\" I muttered, and the ground shook causing the first two beams to crash into the wooden shelves just behind where Serra stood, and the final froze as the light appeared above him, slowing his movements to a slow motion crawl.\n\nI retreated to the entrance behind me and cast my mark skill on the lich, then dashed from the building just as I heard a loud explosion.\n\nFire storm, I thought to myself.\n\nA skill that cost close to five hundred thousand gold, and which she had just used in combat for the very first time.\n\nDespite the life threatening danger that the game presented, I found myself somewhat wishing that I could have seen it explode into the room, but the feeling was short lived as the very ruins seemed to be crumbling around us.\n\nI got to the entrance and looked up in time to see Serra leaping from the top of the ruins, presumably casting feather fall on herself, as she landed with a roll at the foot of the entry stairs; and I ran down the stairs to meet her.\n\nWe watched as the entire lair came down with a crash, and I nodded at Serra as my mark vanished, indicating that the Lich had indeed met his end.\n\n\"How do we kill a lich, Josh?\" she asked with an expression of mock thoughtfulness, and I rolled my eyes at her:\n\n\"We bury him in his lair,\" I responded.\n\nShe was panting and laughing all at once, and for the first time I laughed with her, as we hastened away from the ruins, but just as we made it to our safe point, a loud cawing sound came from an eagle far above us, and Serra and I exchanged a concerned glance.\n\n\"Think we need to worry?\" I asked, and she pulled me with her at once, leading me to one of the nearby camps.\n\nShe dragged me into one of the make-shift shelters there, then pulled me close, wrapping herself tightly against me, before retrieving an amulet, and draping it over us.\n\n\"Josh, use synergy- quick!\" she muttered, and I did as she asked.\n\nAs we hid, she was panting, and up close I got a proper look at how bad her wounds really were.\n\n\"Can you heal that?\" I asked, and she shook her head.\n\n\"Really low on magic- it'd hurt more to cast it than it would to just let it heal,\" she muttered with a wince. \"I kinda skimped on the low level heal spells anyway... because they don't do much in combat.\"\n\nShe was clutching onto me, her nails digging into my flesh, and I realized that she must be in extreme amounts of pain.\n\n\"Hold still,\" I whispered, as I retrieved the herb kit from my inventory.\n\nWhile I was still with Kelly, I had made it a practice to gather whatever useful medicinal herbs I could, making use of her class's survival skills, and using them to make medicinal salves in case Kelly ever got hurt.\n\nI applied one of the salves to Serra's shoulder, and she winced a little, tightening her grip on me once more. Her teeth were gnashed and her breathing choked as she tried to bear the pain, and I stroked her hair soothingly as I waited for the salve to take effect.\n\n\"Jeez, what's in that thing,\" she muttered after a little while, inspecting the wound on her shoulder with a surprisingly pleased expression.\n\n\"Ginseng, valerian roots and garlic,\" I replied, and she chuckled:\n\n\"We'll call it 'Josh's miracle cream' and sell it and make millions,\" she muttered, half-teasingly.\n\n\"What does that amulet do?\" I muttered, and she smiled smugly:\n\n\"Amulet of proof against detection,\" she replied, and I suddenly remembered that I had used my scanning ability on the day when we'd met her and it didn't detect her at all.\n\n\"That's pretty useful,\" I muttered appreciatively.\n\n\"Right?\" she beamed, and I ruffled her head to her chagrin:\n\n\"I'm not your kid sister, Josh,\" she scolded me, and my face went red with embarrassment.\n\nMy lizard companions indicated that there were four of them, all of which we were reasonably sure were other players (try asking a lizard to differentiate between a goblin and a human, it'll be fun, I swear), so I applied the salve to the gash on Serra's leg, and she settled into her place pressed tightly against me as we waited out our unwanted guests in our cramped little hideout.\n\nSerra was quiet for a little bit, before her chatty nature resurfaced:\n\n\"You know, I've been giving you more than ample opportunities to cop a feel. Are you sure you aren't gay?\" she asked with a seriousness that bothered me.\n\n\"No- jeez, can't a guy show some decency without having his sexuality questioned?\"\n\n\"Well I know you weren't snuggling with little sis like we did this morning, and you aren't married... soo- girlfriend?\" she asked, and I sighed.\n\n\"Is this really necessary?\"\n\n\"Yeah- we're bonding! Synergy might have worked today but it still needs to be a lot better if you and I are going to get anywhere.\"\n\nI sighed.\n\n\"No girlfriend,\" I muttered, and she studied me.\n\n\"So where'd you learn to hold a girl like that?\" she asked, and I looked away.\n\n\"Ex-wife, I guess.\"\n\n\"Holy shit, ex-wife? Wait, are you like some forty-something year old weirdo with kids or something? Because then I take back all of my flirting.\"\n\nI rolled my eyes.\n\n\"I'm twenty three.\"\n\n\"And divorced? Well shit- I guess that's worse than being twenty-three and still married though,\" she added with derision.\n\n\"So wait- who's the special someone? Are you like, still in love with your ex-wife or some stupid shit?\"\n\nI shook my head.\n\n\"Just leave it alone please?\" I responded, practically begging, but she was oblivious to my discomfort.\n\n\"I'm starting to take this personally, you know,\" she muttered, a little gloomily.\n\nWe ended up eating lunch while hiding, and a little while later my lizard friends came with the news that the group had inspected the ruins for a bit, camped out there for lunch then headed off soon after.",
        "We emerged from our hiding place, stretching our apparently sore limbs a bit and I marveled again at the incredible attention to detail in the game design.\n\n\"Now for the boring part,\" Serra announced as we stood above the collapsed ruins. \"Ready to start digging?\" she asked, with an expression of fake enthusiasm.\n\nThankfully my slice through stone skill made short work of some of the large chunks of stone, and Serra had a spell prepared called 'feather weight,' but it still took the better part of the evening for us to work our way into the Lich's room.\n\nThe phylactery, which Ren had unwittingly activated, was lying in pile near the center of the room, where the lich was nowhere to be found.\n\nI sighed, as Serra examined it.\n\nOne touch and the lich would be resurrected again.\n\n\"Protection from evil,\" Serra muttered, wrapping herself in a faint white light, then \"greater seal.\"\n\nShe reached out tentatively to the shimmering necklace, then with a touch, the glow turned from white to light blue.\n\n\"Wow- could you have done that before it came out, or-?\" I asked, curiously, but she shook her head.\n\n\"I was looking for a way to draw it out, but those goblins you all cleared out from here wouldn't touch it either.\"\n\nShe picked up the necklace, and it shimmered briefly before magically disappearing into her backpack.\n\n\"Mission accomplished,\" she muttered triumphantly. \"Now, let's see if there's anything else worth a damn in here.\"\n\nI quickly gathered up the valuables strewn about the room in the form of gold, precious stones and jewelry while Serra retrieved the Lich's scepter and searched around his throne.\n\n\"Score!\" Serra suddenly exclaimed with excitement, and I looked over to see her holding up a pendant hanging from a necklace, which seemed to be radiating a kind of dark aura.\n\n\"Magic item?\" I asked, and Serra nodded. Her hand glowed green and she muttered: \"Identify,\" momentarily illuminating the necklace with a dim white light.\n\n\"Whoa,\" she muttered, \"This is motherfucking perfect!\"\n\n\"What?\" I asked, and she tossed the necklace my way, to my surprise.\n\n\"Tempest-only item, Joshie! And a really useful one; Eye of the void.\"\n\n***\n\nAlthough the sun had long set by the time we were out of the ruins, Serra insisted that we make some distance between us and the ruins, but to my surprise she took us to the north; further from the town where we'd set out from.\n\nThe lands were strange to me, but I more importantly as I moved away from all of the places that had become familiar to me, I felt a disconcerting feeling of trepidation; as if I was being taken further away from Kelly as well.\n\n\"What did Kelly say to you?\" I asked.\n\nSerra was sitting on the opposite side of our tent, taking stock of everything we'd gotten from the ruins.\n\n\"Huh?\"\n\n\"Uh. Auriel- my sister I mean,\" I asked, and she laughed.\n\n\"Kelly, huh. Nice name...\"\n\nBut as she pondered the question she studied me seriously now.\n\n\"You two are pretty close, huh?\"\n\nI rubbed the back of my head as I nodded nervously.\n\n\"She just said to take care of you,\" she muttered absently, before going back to her work.\n\nShe seemed to be a little distracted though, and I was about to press the issue when:\n\n*Bzz!\n\nI twitched a little as the notification that I was receiving a call came up, and Serra glanced at me, a kind of worried look suddenly appearing on her face.\n\n\"Message?\" she asked.\n\nHer tone seemed concerned even though she appeared to be still busy at work on our stuff.\n\n\"Call,\" I replied, but before I could step out of the tent she stopped me.\n\n\"Not safe- talk here, or not at all.\"\n\nI sighed, then tapped the answer button under the notification that read 'receiving call from dumb bitch.'\n\n\"Hey...\" I answered, feeling self-conscious about the way Serra was glancing at me out of the corner of her eye.\n\n\"Jesus, Josh- do you have any idea how many fucking times I called?\" Tracey muttered angrily.\n\n\"Huh? I didn't get a call until now...\"\n\nNow that I thought about it, neither Kelly nor me had received a call except when we were in safe zones, which I guess did make sense given all the dangers involved.\n\n\"Whatever, look- can you do something about your mom? I can't sign over to her as your medical guardian, and she doesn't seem to get it.\"\n\n\"Uh- sure, sorry about that,\" I muttered.\n\n\"You should be- I keep getting calls and shit, why the fuck did you even have me listed as your medical guardian?\"\n\n\"I didn't do it on purpose- I just never got a chance to change it since you left.\"\n\n\"Never got a chance? Seriously?\"\n\nShe sighed exasperatedly, and I rubbed my temples.\n\n\"You never think about how the shit you do affects anyone, do you?\"\n\n\"Look Trace- it just slipped my mind, alright? I'll fix it as soon as I can.\"\n\n\"Great, and while you're off playing a fucking video game all day I get to have calls about your 'status' and all kinds of crap.\"\n\nI sighed.\n\n\"Really, I'm so sorry you have to be reminded that I'm alive. That must be a real pain.\"\n\nI glanced at Serra who was coming over to me now.\n\n\"Joshie- I need you right now,\" she muttered in an exaggeratedly girly tone.\n\n\"Wha-? Who the fuck is that? Kelly?\" she spat, and I shot Serra a thankful smile.\n\n\"No, that's not Kelly. I- uh, I gotta go Trace. Bye.\"\n\n\"What? Josh, what the-\"\n\n*Beep!\n\nI dismissed the 'call ended' message, then returned my attention to Serra.\n\n\"So... who was that?\" Serra asked, her tone teasing and playful.\n\n\"The ex-wife,\" I replied, and she began to circle me, curiously.\n\n\"So I tell you that I need you in a deliberately sexy tone and her first assumption is that you were with... Kelly?\" she asked, practically glowing now with excitement.\n\n\"She has- issues.\"\n\n\"Oh, I'm sure she does,\" Serra countered teasingly. \"Is that the secret to getting you all hot and bothered, Josh?\"\n\nShe drew in on me, and I tripped over, falling onto my butt.\n\n\"Oh Joshie- your little sister needs you.\" she moaned, climbing onto me.\n\n\"Ugh- stop that,\" I muttered, doing my best to show no reaction to her teasing.\n\n\"Please, big brother? Look how hot you've made your little sis,\" she continued, and I rolled my eyes, as she burst out laughing.\n\n\"It's not funny,\" I muttered, and she rolled away, still chuckling away with glee.\n\nShe relaxed onto her back, and as she calmed down a bit she looked over at me with a huge smile.\n\n\"You did good today,\" she muttered, and I blushed at the surprisingly genuine praise, but her gaze on me lingered just a bit, and she licked her lips before adding:\n\n\"Josh? I'm in the mood to celebrate a little...\" she muttered softly, and I noticed a subtle tone of urgency in her voice.\n\nShe's serious this time, I thought, and I gulped.\n\n\"You know I can't...\"\n\n\"Yeah yeah- but what can you do?\"\n\nI bit my lip nervously as she looked up at me.\n\n\"Kissing? Maybe some light petting?\"\n\nI shook my head, and she sighed.\n\n\"Fine- rub my feet then,\" she muttered blithely, waving her feet at me expectantly.\n\nI sighed, then reached for the foot to her delight.\n\n\"Mmh,\" she moaned, \"not sex but that feels damn good.\"\n\nI smiled absently at the compliment, and Serra gave a satisfied sigh.\n\n\"Wow- you've gotta be annoying as fucking hell- or one ugly SOB for your wife to walk out on this,\" she teased, and I shot her a look of feigned indifference.\n\n\"What's the matter- boyfriend doesn't give you any foot rubs?\" I asked, and she shook her head.\n\n\"No boyfriend.\"\n\n\"Really? That's so surprising,\" I responded sarcastically, and she gave me a little kick for my effort.\n\n\"Ha ha ha, getting snarky now, are we? I think I can work with that.\"\n\nHer hands began exploring her body suggestively and I shot her a disapproving glance.\n\n\"What? You won't at least watch?\" she asked and I resumed the foot rub as soon as she settled back down with a disappointed sigh.\n\n\"You really love this mystery girl don't you? Tell me about her,\" she muttered, and I studied her dubiously.\n\n\"What do you mean?\"\n\n\"I dunno... what do you like about her?\"\n\nI sighed, pausing the foot rub to Serra's annoyance, as I considered her request.\n\n\"She's... pretty. Smart. Kind and thoughtful,\" I muttered softly as I resumed Serra's foot massage, and she hummed contentedly in response.\n\n\"Uh-huh, what else?\"\n\n\"She's been looking out for me for as long as I can remember- since before I knew that was she was doing, even.\"\n\n\"Ever since your mom gave birth to her?\" Serra asked with a teasing smirk, and I pushed her feet away in retaliation.\n\n\"Oh come on, I'm just teasing,\" she complained, resting her feet expectantly on my lap again. \"It is Kelly though, isn't it?\" she asked, more seriously now, and I studied the question with trepidation before giving a little nod.\n\nShe studied me a bit more before pressing:\n\n\"So- why her?\"\n\nI shrugged.\n\n\"I don't think you decide these things. Sometimes, someone just makes you feel a certain way, and if you're just lucky that it ends up being mutual.\"\n\n\"I'll say,\" she mumbled, with a little frown. \"I'm kinda jealous,\" she added playfully, and I stared at her dubiously.\n\n\"What? I'm serious. My boobs might be this big in real life, but I'm kind of a geek. You know- skinny, pale skin, greasy hair. Not that I'm ugly or anything- but hey, guys think all gamer girls are just models and sluts who pose semi-nude with some kind of controller in their hands. Those girls probably don't even know how to turn the things on much less use them! Real gamer girls don't look like that- but that doesn't stop people from expecting you to...\"\n\n\"You're a kickass gamer though,\" I noticed.\n\n\"Doesn't matter to most. Once most people know you're a girl they kind of expect the slut with a controller thing. I mean, I objectively believe that I am pretty hot... but, apparently that makes no difference, because I can't even get you out of your pants with this smokin' hot bod.\"\n\nHer tone was teasing, but I noticed for the first time a kind of loneliness behind her words, and I sighed.\n\nShe did save my life and agree to take me in, I thought.\n\nI took a deep breath, then spoke:\n\n\"Fine- I'll watch.\"\n\nShe looked up at me disbelievingly, before her face broke into a huge smile.\n\n\"Seriously?\" she asked, doubtfully, and I nodded.\n\n\"While continuing my foot rub?\" she asked, with a wink, and I rolled my eyes in a show of exasperation, before nodding, and she wasted no time in stripping herself of her skimpy nightie, and removing her bra.\n\nShe studied me intently as her sizeable breasts sprung free of their confines, and she wasted no time in massaging them while shooting me a seductive look.\n\n\"Mnh. That foot rub is making me feel all kinds of tingly,\" she moaned, as she massaged her right breast with one hand while the other explored the rest of her curvaceous body.\n\nShe paused for a second to interact with her character interface, and the linen wraps about her hips suddenly disappeared in ball of light, instantly replaced by a skimpy pair of silky looking panties.\n\n\"Seriously?\" I asked, and she just giggled.\n\n\"What? Some of the merchants carry lingerie. Can't a girl want to look sexy?\" she replied with a sexy shrug, and I merely shook my head, trying my best not to get too distracted by the half-naked vixen pleasuring herself in front of me.\n\n\"Hey- you said you'd watch. It's not as hot if you're trying to look away,\" she scolded me with a pout, so I reluctantly re-fixed my gaze on her eyes, and she moaned appreciatively, rubbing her panty covered crotch sensuously and deliberately while keeping locked on my stare.\n\nShe lifted her hips off the ground for a moment to pull them down, leaving them at her knees:\n\n\"Could you- please?\" she asked seductively, and I paused my now distracted foot rub to remove the thin piece of cloth from her legs.\n\nSerra rested a leg on my shoulder, and spread her legs a little, giving me an open view of the way her fingers were now massaging the soft folds of her pussy, and a steady stream of moans were coming from her mouth as she continued to tweak at her nipples.\n\n\"Would you play with these?\" she asked, following my glance at her chest, and I shook my head.\n\n\"Nothing but the feet for you, sorry,\" I muttered, and she whined discontentedly while continuing to masturbate.\n\nI continued to rub her feet, my hands now moving to from her ankles to the soft swells of her calves, before moving back to the soles of her feet.\n\n\"Mmh, that's better than nothing I guess,\" she moaned.\n\nAs she worked her hands between her legs with increasing intensity, I studied the leg which rested against me, and I suddenly found myself distractedly admiring the wonderful texture of her smooth skin.\n\nThe honey-like shade of the tan skin looked positively delectable, and as I massaged the soft, smooth skin sensually, a peculiar impulse took me, and I raised her foot to my face as I rubbed at the soles and planted a subtle kiss on her instep.\n\nI was sure it would have gone unnoticed, but Serra's reaction was immediate and intense:\n\n\"Mmh! Oh Josh- Do that again!\" she pleaded, and I continued to rub her foot sensually as I placed another little kiss on the surface.\n\nI placed a few more little pecks before planting a much fuller, deliberate kiss on her feet, and her toes curled in my hands and her feet went tense in response.\n\n\"Oh! Mnh, unhhhhh!\" she moaned loudly, in a final orgasmic cry.\n\nI could see her juices squirting onto her hands as they furiously rubbed at her mound making a distinct sloshing sound, and she squirmed as the orgasm sent pleasurable shivers up her spine, and throughout her body.\n\nShe relaxed, then giggled a little as I gave her one final little peck on the foot.\n\n\"That was- unexpected... but good,\" she muttered with a satisfied sigh.\n\nShe wriggled back into her clothes, changing from the sexy underwear into her more typical wrap styled coverings, before pulling me down and onto her.\n\n\"Can I return the favor?\" she asked with a wink, and I shook my head.\n\nAlthough the whole experience had me slightly worked up, I had resolved to put my own desires on hold until I was reunited with Kelly.\n\nShe studied me for a bit, before shuffling onto her side and pulling me quite affectionately about her.\n\nShe snuggled herself up to me, and as I adjusted my hand under her head she nuzzled into my arm tenderly. But as I gazed at her, my eyes were drawn to the place where Serra had been wounded in the fight with the Lich.\n\nI withdrew a hand from around Serra, and she grumbled in response, quieting down as I traced the spot where she'd been hurt.\n\n\"You took a serious hit for me today,\" I muttered softly, and she was quiet.\n\nI put my hand back around her and pulled her tightly into a warm embrace, and she sighed contentedly.\n\n\"I promised her I would take care of you,\" she whispered, almost to herself, and I held her tightly in appreciation as we both drifted off to sleep.\n\n***\n\nOver the next few days we travelled to a larger city called Valhalla, where Serra had arranged a meeting with a rare item dealer.\n\nEvidently, options to instantly travel from notable safe zones, like the starter towns and large cities were built into the game, but these features like many others were disabled in the survival setting that the perpetrator of our virtual imprisonment had activated.\n\nThe trip, however turned out to be pretty interesting; I managed to see some glimpses into the spectacular design that had gone into building the world of Mythic Lands, and we came across a few small camps of bandits and other small enemies along the way, giving me some vital combat practice.\n\nAccording to Serra, there were more or less safe passages between the starting towns and the larger cities in each of the Seven Kingdoms, but there were a lot of unique places of interest scattered across the continent which were dangerous to access but where some really interesting things could be found.\n\nWhen we got to Valhalla, I was shocked to find a bustling town inhabited and run not by the games' artificial characters, or NPCs, but by real players, many of whom had given up adventuring in favor of some of the less dangerous avenues of gameplay.\n\nFor the most part, the initial crowding around the starter towns had faded; now, only those who were either too scared or altogether incapable of playing under the circumstances remained there, but these players were living in the virtual equivalent of poverty. They lived in basic accommodations, and survived on basic meals and rations, but even these players were now a minority.\n\nEven those who weren't hardcore gamers had by now begun to play a little, to stave off boredom if nothing else.\n\nThe result of this was a distinct low tier of players who played quite modestly, focusing almost entirely on the non-combat aspects of the game like trading, crafting professions, and production skills.\n\nAs I walked through the town with Serra, I couldn't help but marvel at the spectacle of this entirely virtual civilization springing to life before me.\n\nWe secured accommodations at a pretty nice place (a little to my excitement, as I'd not slept in anything but a tent since the game had begun), and headed to a local inn where we were to meet with her contact.\n\n\"So- what've you got for me?\" the man asked excitedly, obviously familiar with Serra's handiwork.\n\n\"A phylactery,\" she muttered proudly, and the man's eyes went wide with shock.\n\n\"Bullshit- not even you could make me believe that. No solo player can kill a lich,\" he muttered with a disbelieving grin, but his grin immediately vanished as Serra called out the item from her inventory, and placed it down on the table with a confident smirk!\n\n\"Didn't you hear? I'm not playing solo anymore,\" she muttered, as she nodded in my direction.\n\n\"What? Even if he's as good as you, you couldn't kill a lich.\"\n\nHe looked to me for some clarification, and I looked away in an attempt to deflect interrogation.\n\n\"Only one Lich has been killed so far, and it took a twelve player party- and three of them died in that fight,\" he muttered incredulously.\n\n\"Hey, you know me- I don't spill my secrets. So can you get me a price, or what?\"\n\nHe studied it a bit, then nodded.\n\n\"Give me until this evening,\" he muttered, and Serra nodded happily.\n\nAs we headed out of the inn, Serra met up with another player who handed her a note in exchange for some gold.\n\n\"What's that?\" I asked warily, and she smiled at me playfully in response:\n\n\"Info,\" she muttered with a secretive smile.\n\n***\n\nOver the next few days, Serra paid for me to learn a bunch of new spells and outlined a fighting strategy for us, built around the use of my new magic item; Eye of the Void.\n\nIt was a pendent which allowed me to see through darkness of any kind, which gave Serra the idea for me to learn the shade spell; a ritual spell which would cloak me in an area of magical darkness.\n\nAlthough it would blind the enemies directly around me, it also meant that Serra wouldn't be able to see, so it required a little work on our synergy spell and some practice to perfect its use.\n\nSerra was also keen on acquiring a magic item to assist me with my stealth skills.\n\nHer chameleon cloak was pretty good for camouflage, but sharing through synergy wasn't always practical, so she was after something that would help me out in this regard.\n\nAs we waited around for word on the magic item she was after Serra suggested that we tackle a nearby colony of Orcs.\n\nIt would keep us close enough to Valhalla until Serra could arrange the deals for the new items and gear, and allow us a practice ground to work on our combat effectiveness.\n\nOn our first day, I was absolutely shocked by how much more effective a fighting team we had become; we took out about fifteen camps, with not so much as an incident to complain of, although I did take my first real hit; a spear from an orc thrust wildly through my cloak of darkness, and I was unable to get out of the way as it stuck me on my thigh.",
        "Honestly it hurt so much I thought I would pass out, but Serra's mocking laughter about the face I was making as the pain ripped through me was enough to spur me into fighting on with the wound.\n\nI did notice however that later that day, as we were getting ready for bed in our lodging back in Valhalla, Serra kept examining the area where I'd been wounded with an expression of concern that felt so peculiar, coming from her, that it was just a bit unsettling.\n\nAs odd as it was though, the change was endearing, so I refrained from teasing her over it.\n\nOn the second day, as we were preparing to take on the leader of the orc group, a team of adventurers tried to beat us to the punch, and by the time we got to the main camp, they were already in combat with the tribe.\n\n\"Stupid bitches,\" Serra muttered, and I studied the scene with a little hint of worry.\n\n\"They don't seem to be doing too well,\" I noted. \"Should we help?\"\n\n\"Hah. They were trying to poach us, Josh. Why the hell should we?\" she asked, incredulously.\n\n\"What if someone dies?\" I asked, and she shrugged as she studied the scene.\n\n\"Then it's their fault for being stupid. Doesn't look like anyone's dying. Let's just wait till they get beaten up and leave,\" she muttered nonchalantly.\n\nDespite my concern she was right, and pretty soon they left in pretty bad shape, and we moved in to finish up what we'd started.\n\nAs we moved on the camp, I had to admit that Serra's continued brilliance in finding unique ways to take out our enemies impressed me to no end.\n\nWe took out an entire unit of orc riders, by drawing them out of their camp and up unto a rocky crag. Using some of my various utility spells we cut holes in the rocks and I used illusion, to conceal them, and as the riders rode over the traps, they fell from their mounts and Serra and I dispatched them with ease.\n\nThen there was an entire orc village we took out by slicing large chunks of rock from a cliff face, and hurling them by combining Serra's feather weight spell with my new catapult spell.\n\nThese were fights that would have taken five or six players and much longer periods of time.\n\n\"Ready?\" Serra muttered, and I gave a nod in response.\n\n\"Whispers of the void,\" I muttered, summoning a shadowy veil over the camp as we entered.\n\nI activated my shade spell and taking Serra's hand we slipped into the camp, striking down orc after terrified orc.\n\nBy the time the chief was aware of the attack, most of the camp had been cleared.\n\nThe chief required a bit more care though, as he would most likely be resistant to my fear tactics, and would fight relentlessly even in the darkness of my shade spell.\n\nAs he emerged from the large tent ahead, I sent an illusion of myself charging at him.\n\nHe braced to defend the blow which passed harmless through him, but Serra was on the heels of my image, and struck the chief's left leg with her smite empowered strike.\n\nShe turned and ducked, shielding her eyes as I shot a brilliant spark of light just over her head, blinding the chief who was poised to strike at her.\n\nShe spun, and aimed her blow this time at his chest, crashing hard into the heavy armor that he wore, but knocking him back.\n\nHe shook his head, then swung at Serra, who rolled out of the way just as I moved in to join the assault.\n\nConcentrate, I told myself, as I tried to cast my mark, not on the chief himself, but on an unprotected spot on the Chief's armor clad body.\n\nMy mark shimmered over a vital exposed area, and I took aim before striking with my rapier.\n\nThe blow hit hard, and the chief staggered, dazed by the blow, but Serra didn't give him time to recover.\n\nHer smite-empowered war hammer fell directly upon his helmet clad head, and he fell to the ground, motionless, with a thud.\n\nThat was almost too easy, I thought to myself, and from the huge smile on Serra's face I knew she was pretty pleased with how we were doing as well.\n\n\"Congratulations Josh, you almost don't suck!\" she called happily, and I gestured rudely at her before setting off to search the chief's tent.\n\nWe made a lot on valuables, and Serra, apparently in a celebratory mood led me to a nearby village instead of heading back to Valhalla.\n\n\"Come on- this was where I started out,\" she called enthusiastically, and I noted that it looked almost identical to my own starting village; where I last saw Kelly, my mind couldn't help but noting.\n\nI followed her past the bridge to the familiar clearing on the outskirts of the village, and she continued leading me into the woods to a little grove.\n\n\"You know that most of the S-rank player's died on the first day, right?\" she asked, and I nodded as we came to a halt. \"When I played the tutorial, I questioned the woodcutter and heard about a rumor; there was a dangerous boar which had killed an adventurer near a grove just outside of town, and since it was frequently seen around the area, the adventurer's belongings remained there, untouched. I thought it sounded like it would be some pretty neat gear to set out with, so- I went for it. Didn't even pick a class yet, just took a spear I got from the old woodcutter, and went in.\"\n\nI studied her, noting the fearful look in her eye as she spoke.\n\n\"It was a pretty easy kill. I had it wounded in a few hits, but I got cocky and it managed to catch me with a glance. I didn't expect it to hurt, and I was still reeling from the blow when it charged at me again. I almost gave up- thought I could just die, respawn, then log out of this fucked up bugged game and sue someone.\"\n\nShe bent down to the ground, and smiled bitterly.\n\n\"I almost died- right here,\" she muttered, \"all by myself, with not so much as a friend to mourn me if I was gone.\"\n\nI went over to her and patted her on the head reassuringly.\n\n\"You're not alone now,\" I muttered supportively, and she looked up at me with glossy eyes.\n\n\"I keep telling you, idiot- I'm not your kid sister,\" she muttered, wiping quickly at her eyes as she composed herself, but this time she didn't swat my hand away, so I kept petting her softly as she sat there, lost in her thoughts.\n\nWe ended up setting up camp in the clearing outside of town, and as we got ready for bed Serra shot me a telling mischievous glance.\n\n\"Oh boy- not again,\" I muttered, and she frowned at me with a playful pout.\n\n\"I have needs, you know,\" she responded defiantly, and I sighed with a reluctant stretch:\n\n\"Fine- what do you need, another foot rub?\"\n\n\"That depends- will you suck on my toes this time?\" she asked seductively, and I tilted my head at her request in disbelief.\n\n\"What now?\" I asked, and she laughed teasingly at my reaction.\n\n\"Actually- I kind of have something else in mind,\" she muttered impishly, and I studied her with trepidation.\n\n\"What fresh hell awaits me?\" I asked, making a show of my despair.\n\n\"Soo... you know that spell I made you learn? Make corporeal?\"\n\n\"Uh-huh.\"\n\n\"Well- let's say using it in combat is not exactly what I had in mind,\" she muttered suggestively, her tone turning surprisingly shy. It actually worried me slightly because if she had doubts that I would acquiesce to her request, it implied that I was about to hear something pretty outlandish, even by her standards.\n\n\"Okay- use minor illusion to make an image of yourself over there.\"\n\nI studied her for a moment, then did as she requested.\n\n\"Now cast 'make corporeal' on the image,\" she continued, and I complied despite my hesitation, as a few ideas of what she had in mind were now taking form in my head.\n\n\"Dominate,\" she muttered with an almost hungry smile, and I gasped as I suddenly lost control of the image of myself I'd created.\n\n\"Oh boy,\" I muttered, as she began to undress in front of my image. \"Can I sit this one out?\" I asked, and she shook her head emphatically.\n\n\"Not a chance, lover boy!\"\n\nShe quickly undressed my image, and ordered him to lay down, casting me a flirtatious smile as she stroked his cock teasingly.\n\n\"I'm not breaking any rules- am I?\" she asked innocently, and I shook my head disapprovingly at her.\n\nShe eyed my clone's cock hungrily as she bent down to wrap her mouth around the firm rod and she sucked on it, deliberately making eye contact with me, before withdrawing to climb above its erect member.\n\n\"Does it unsettle you, Josh? Seeing me 'have my way' with your very image?\" she asked tauntingly, and I shrugged.\n\n\"Not as much as I thought it would. Probably because he doesn't look like I really do and part of me refuses to see that image as myself,\" I muttered with a satisfied smile, and she pouted.\n\n\"You're no fun- you're supposed to be all like, 'noo, Serra. Please, I'll do anything- just stop fucking me,'\" she continued, but as she sunk herself onto the length of my copy's cock, she shuddered a little, before muttering a dazed little, \"oh my.\"\n\nI sighed.\n\n\"Well- how am I doing over there?\" I asked sarcastically, and Serra bit her lip as she began to rock her hips, moving her body back and forth along the length of my copy's engorged cock.\n\n\"Not bad- though I regret to admit that I do so miss your foot rub,\" she muttered, her voice now thick and husky as her breathing became tense.\n\nHer large breasts swayed as she moved, and as I noted the consistency of the movements I began to pay attention to the way she was working her body against me; her rhythmic movements almost picture perfect.\n\nWith her unrealistically well-proportioned body and those smooth, luscious movements she looked like a seasoned porn-star, and I was quickly finding my own breath a little choked up in my throat.\n\nMy tongue did a little dance behind my lips and I cleared my throat as an idea came to me:\n\n\"Relinquish control,\" I muttered, and Serra paused to study the look in my eyes as my right hand glowed softly.\n\n\"Hmn? Fine, then,\" she responded, as she submitted to my request to give up her control of my copy, but she gave a surprised shriek as I immediately made it sit up, pushing her forward and off of his lap.\n\n\"Hey- what gives?\" she asked with an annoyed pout, only to shriek again as the copy grabbed ahold of her hair and pulled her roughly into a kneeling position in front of him.\n\nAt my command, he wrapped an arm about her body and pulled her close, then using his knees, spead her legs wide before pressing her head down to the floor.\n\n\"Ohhhh,\" came the long satisfied moan from her lips, as the head of his ridiculously proportioned cock rested against her lips for a second, before slowly, and deliberately sinking all of the way into her well lubricated cunt.\n\n\"What did I do to deserve this gift,\" Serra muttered appreciatively, locking her eyes on me with a devilish look of lust.\n\nI shrugged, then had my clone give her hair a little tug as he thrusted roughly into her, and she grunted obscenely in response.\n\nHe was resting his weight onto her now, while the hand which wrapped about her was grasping one of those beautiful honey shade colored breasts, tweaking the dark nipple at the center while pulling her body tight with each quick, rough thrust.\n\nAs Serra's screams grew louder, I picked up the intensity of his pace and her individual 'ohs,' were quickly blurring into one long screaming moan, punctuated with the little huffs of breath that came with the meaty loud slaps each time their bodies collided.\n\nShe began to roll her hips to meet his thrusts, and as her lewd screams built to a crescendo her feet curled back and her body arched delightfully, going tense as she came hard.\n\nLittle shivers ran through her body, and I had my clone hold her a little more gently while he continued to thrust, softly but with a steady rhythm, prolonging her orgasmic bliss for as long as I could manage.\n\nShe finally withdrew from my clone and collapsed onto the ground, her breathing labored, but her eyes still on me.\n\nI dismissed him with a wave of my hand, and he vanished into nothingness.\n\n\"Wow,\" she muttered, between sharp labored breaths, before looking up at the tent's ceiling with a huge smile on her face. \"I know that was virtual sex with a lifeless copy of a still not actual human being, but that was so good, I think I'm going to count it as the time I lost my virginity.\"\n\nShe glanced sideways at me, before adding: \"Is it just me or are you really fucking good at that?\" and despite myself I blushed at the compliment.\n\n\"It's a lot easier to control everything when you aren't distracted by how good it feels- I guess,\" I muttered embarrassedly, and she giggled.\n\n\"I'm now convinced that your ex-wife is the dumbest bitch in existence,\" she added, and I smiled at her with a little shrug.\n\nShe caught her breath then crawled over to me resting her head on my lap.\n\n\"Get some clothes on,\" I muttered with a scold, and she begrudgingly complied before curling back up next to me.\n\n\"Did she get foot rubs and amazing sex like that?\"\n\n\"I'm not that good in bed,\" I muttered somewhat dejectedly, before adding: \"but she did get foot rubs almost every night... until she started getting all distant on me that is,\" and Serra shook her head disapprovingly.\n\n\"Cuddle me,\" she demanded, and I smiled a little:\n\n\"Yes mistress,\" I muttered teasingly as I complied.\n\n\"You're spoiling me, Josh,\" Serra muttered, her tone taking a strangely despondent tone, and I pulled her tightly into a warm hug.\n\nIt didn't take long for her to drift off to sleep, and I followed her not too long after.\n\n***\n\nThe next day for breakfast I decided to cook something instead of settling for another generic ration, much to Serra's delight.\n\n\"If I knew this stuff was so good I'd have made you cook for me every day!\" she beamed, and I grimaced disparagingly at my further decent into servitude.\n\n\"So, what's the plan?\" I asked, and she considered it.\n\n\"Well- I really wanted to get another magic item for you, but waiting around isn't exactly my forte. There is something we can do, but I need you to be better at sneaking before we can press on.\"\n\n\"I could multiclass to rogue,\" I offered, and she shook her head.\n\n\"You'd be paying a ton for basic level skills at this stage. A magic item or two would be cheaper.\"\n\nWe were still deliberating the matter when we noticed a small group of three players passing through the little village.\n\nSerra took up to chatting with them, and found out about a hill giant nest nearby.\n\n\"Hm- are we doing it?\" I asked?\n\nShe shook her head.\n\n\"Your rapier's critical hits won't be as effective against larger creatures, and my advantage against unholy creatures won't be of any use. We'd be at a disadvantage- besides. Something is up with them. They gave me that info way too easily. Info like that can go for a couple thousand gold easy.\"\n\n\"Oh.\"\n\n\"Might have been interesting to track them- if either of us could track,\" she shrugged, and gave a little smile.\n\nAfter considering our prospects, we got ready to leave the little village, when a bit of a commotion erupted.\n\n\"What the hell..?\" I muttered, as two players came dashing towards the little village, and the earth began to shake and quiver beneath our feet.\n\nWe left the clearing to climb a nearby hill, and as we cleared the summit we caught sight of a spectacularly large creature; A hill giant, standing some fifteen to twenty feet tall, was running in wide, earth shaking bounds, towards the village, where I now noted the two players who had come running in were panting, and trying to catch their breaths.\n\n\"It's gonna catch them,\" I muttered, and Serra nodded blankly.\n\n\"Probably some noobs who just learned that kiting doesn't work on a hill giant,\" she added with a chuckle.\n\nShe was just turning away from the scene, when something came to my attention:\n\n\"Are those kids?\" I asked, and she turned back, taking a closer look.\n\n\"That's impossible, this game was rated mature and there were way too many checks for any kids to slip past.\"\n\nBut as she studied the scene below she noticed as I had, the youthful appearances of the two characters who were now, in a panic, trying to hide amongst the few little houses that littered the tiny starting village.\n\n\"Could players design themselves to look like that?\" I asked, and Serra shook her head again.\n\n\"Did you have the option to set your age, weight or height?\"\n\nI considered the question.\n\nThere was a lot that the game selected automatically about our players that were based on the calibration phase. A lot of people might think that this was pretty limiting, but according to Kelly, in the beta test, a lot of players reported feeling incredibly uneasy when their game avatars deviated significantly from the appearance of their actual selves.\n\nSerra stooped down a bit, and considered the scene.\n\n\"Let's help them,\" I offered, and she cracked a wry smile.\n\n\"There's no guarantee that we can beat a giant in an open area like this. We have no terrain advantages to use, and nothing to stop him from just crushing us to death.\"\n\n\"Are you going to stand here and watch them die then?\" I asked, and she looked at me indecisively.\n\nKelly wouldn't want me to die, I knew that- but she also would never be happy with me knowing that I watched others get killed without doing a thing to save them.\n\n\"Josh- wait!\" Serra yelled, as I took off for the houses below, which the giant was now tearing apart as he chased the two youngsters.\n\nQuick, I thought to myself, come up with a plan.\n\nThe giant was attacking with a gigantic stone hammer; basically a boulder attached to the end of what appeared to be an actual tree trunk.\n\nMaybe I could slice through the trunk with my slice spell, and destroy his weapon? I thought.\n\nAs the giant swung his hammer down on the young boy, he rolled just barely out of the way, spurring me into action.\n\nDownward swings- I just needed to evade one swing and keep my footing to cast the slice spell, targeting the tree trunk that was the handle of his war hammer.\n\nI took a deep breath then went for it.\n\n\"Over here!\" I shouted, trying to draw the giant's attention away from the boy who was now sobbing, and lying in a heap before the creature.\n\nHe turned to me, and I readied myself.\n\nBut as he lifted the weapon, his swing was not aimed downwards at me, but in a great horizontal sweep.\n\nFuck, I thought to myself as the great club came swinging at me from the right.\n\nThere was no way I was going to get out of the range of the arc, and evading something as large as a tree trunk was out of the question.\n\nI placed my hand to the ground, casting the earth tremor spell, but the swing, though faltering, still came at me with serious force and I braced for the impact when a figure suddenly slipped to my side:\n\n\"Shield,\" she muttered, and a brilliant yellow rune-shaped shield appeared before us just as the Giant's blow landed, and the lights immediately shattered into a million pieces as the hammer collided with it, the force from the blow knocking us to the ground.\n\nI rolled, coughing as I tried to catch my breath, and clutching at my side which throbbed painfully.\n\n\"Serra!\" I called, going over to her, and she was struggling to get to her feet as well.\n\nHer spell had saved me, but we'd both been wounded nonetheless.\n\n\"Just when I thought you were growing a brain,\" she muttered, before pulling me with her to the tentative cover of a little hut.\n\nThe hut shattered into a mess of wood and stone as the hammer crashed into it, and we were shaken off of our feet by the impact of the blow.\n\n\"Brilliant strike,\" Serra muttered, and a beam of light shot out of her hand, striking the giant in the head, causing it to stumble back a few steps.\n\n\"Run- Josh, what're you-?\" Serra yelled, but I charged at the giant, and as he steadied himself, his hammer resting on the ground, I dashed to it:",
        "\"Slice!\" I yelled, slicing into the hammer's wooden handle, but the spell didn't cut through the thick bark.\n\nAs the giant steadied himself getting ready for another blow, I dashed behind the ruins of the destroyed house, before creating an illusion of myself and having it climb onto one of the house's broken pillars.\n\nPlease swing high, I thought to myself, but as I steadied myself for the impact, Serra appeared at my side. She placed a hand on the pillar, and muttered, \"Harden,\" and as the hammed swung into the house, it rebounded off of the pillar, landing just within reach.\n\nI didn't waste a second, dashing to it: \"Disintegrate,\" I chanted, as I leapt toward the handle, aiming for the spot where I'd previously sliced, and to my delight, a loud cracking sound pierced the air, as the wood gave way and snapped, and the hammer broke off by the middle of the handle.\n\n\"Not bad,\" she muttered, before hitting the giant with another beam of light, and he discarded the broken fragment of the handle as he covered his face defensively, with a roar.\n\nI prepared to charge the giant again when quite suddenly, an arrow came sailing through the air, striking the Giant's leg.\n\nI gazed past the giant to see the second of the two players, a youthful looking girl, driving a stake into the ground, which was apparently tethered to the arrow that she had fired through the giant's leg.\n\nThe giant let out a great roar, as he tried to pull against the restraint to get at me and Serra, and I moved in, attacking before dancing out of the way of a retaliatory swing of the hand.\n\nThe floor still shook whenever he struck the ground hard, but Serra was firing beams of light in the wake of my attacks, disrupting his attempted strikes.\n\nI had landed three or four hits when I noticed an arrow fly past the Giant, landing to Serra's right.\n\n\"You could land at least one, maybe?!\" Serra yelled at the girl in annoyance, and I noticed that her hands were shaking as she notched another arrow nervously, before letting it fly, again missing the mark.\n\nI landed another strike before an idea occurred to me:\n\n\"Mark prey,\" I muttered, then concentrated on relaying the effect to the girl.\n\nThink, I told myself as I evaded another swipe and stuck my rapier into the giant's leg.\n\nAs I studied the young girl; her hands shaking, and wiping back tears, I suddenly had an image of Kelly conjured out of a distant forgotten memory:\n\nWe were at a carnival when we were kids, and she was intent on winning this stuffed animal from one of those rigged shooting game booths. As a gamer, I could easily hit my targets, but the requirements for the prize was that we both clear all of the targets on our respective sides. She'd missed a few shots, and some kids started taunting her, and I remembered; her hands were shaking, making her hits certain to miss before she'd even fired.\n\nEven then; I wanted the entire world for her, didn't I?\n\nAs I remembered my desire back then to comfort her, I concentrated again on transferring my mark to the young girl and I felt a subtle, almost indistinct flutter as she glanced at me, before steadying her hand and taking aim.\n\nThe arrow sailed through the air, before striking the giant in the neck, and he roared.\n\n\"About time,\" Serra muttered, and we moved in now to strike at the giant in tandem, with arrows now consistently landing from the side.\n\nWe kept up the assault and it was only a matter of time before a final arrow sunk into his back and after taking a few shaky, delirious steps, he fell with a loud *thud!\n\nI collapsed to the floor in an exhausted heap, and Serra plopped down next to me, studying me curiously.\n\n\"Don't ever do that again,\" she scolded me, the tone in her voice flat and serious.\n\nI nodded, then looked over at the girl who had gone over to the younger boy, and was now hugging him, and sobbing openly.\n\nSerra studied me, and I just looked away, trying to ignore the nostalgic twinge that the sight elicited.\n\n\"Josh-\" Serra muttered as she tapped my shoulder, and I looked up in time to see three players approaching the children from just outside of the little village.\n\n\"What's up with them?\" I asked, studying the scene intently.\n\n\"I dunno- but they give me the creeps. Look-\"\n\nAs they approached the two younger players, the duo seemed to react to the men with outright fear.\n\n\"Let's go,\" I muttered, and Serra sighed as I glanced back at her, before following along.\n\n\"I don't want to get involved in this,\" she whispered at my back, but I called to the group anyway as we neared them.\n\n\"Hey- what's going on here-?\"\n\n\"Just move along,\" a man in a hooded robe uttered coldly, as he stood between me and the other two members of the group.\n\nI glanced around him to see the two kids casting a pleading look of fear in my direction.\n\n\"What do you want with them?\" I asked, and the man responded by throwing back his sandy brown robe to reveal a large sword on his back:\n\n\"I won't ask again,\" he muttered, and Serra approached me, whispering at my side:\n\n\"I have a really bad feeling about this, Josh.\"\n\n\"Look guys- there's no need for this to escalate into anything,\" called one of the men from the back.\n\nHe wore a chainmail type of armor, and had a shield and sword notched to his back.\n\n\"We just need to retrieve a little 'something' from this here giant, and then we'll be on our way.\"\n\n\"Um-\" the boy began, but the third member of the group, an older looking woman shot him a sharp glare, immediately silencing him.\n\nI studied the scene, and Serra tugged at me again.\n\n\"Josh- I think the vibe I'm getting from them is PK feedback,\" she muttered, and I gulped a little as I kept my eyes trained on the three.\n\nPK was short for player killing.\n\nIt was an interesting combat aspect of most games, but in a death game, a player killing was nothing short of murder.\n\nWe were in a safe zone though, so even if a fight broke out we weren't in any immediate danger.\n\nBut that still didn't mean that being hit wouldn't hurt.\n\nThe younger girl shot me one more pleading stare, but as I took a step towards the group, the man in the brown robe drew the large sword and swung it at me.\n\n\"Shade,\" I muttered, casting the spell without the ritual components, and Serra nodded as I grabbed her and tossed her past him and into the midst of the other two.\n\nShe crashed her hammer hard into the man in the chain shirt, before casting a protective spell:\n\n\"Spirit guardians\" she muttered, summoning two ghastly apparitions.\n\n\"Firebolt,\" the woman spoke, firing a bolt of fire at Serra, but her guardian deflected the spell and the woman shrieked Serra used the opening the strike her in response.\n\nI closed in on the man in front of me, avoiding his wild swings in the midst of the darkness that had now engulfed him and attacked with my rapier.\n\nHe deflected my rapier with his sword, but I was quick, attacking him repeatedly, and on the forth thrust I stuck the pointy end of the blade into his shoulder, and he cried out painfully as he went down.\n\nSerra was keeping the other two at bay, and I quickly went to her side, but the woman raised her hands, muttering something I did not make out which immediately caused a huge chunk of stone to explode at our feet.\n\nSerra leapt off of the ground, avoiding the shockwaves, but I was too late, and it knocked me off of my feet, disrupting my concentration and dissipating the darkness that had shrouded me.\n\nThe woman stood over me, conjuring up waves of flames in her hands when Serra suddenly struck her hard with her hammer:\n\n\"Smite, bitch,\" she muttered, as the woman fell to the floor writhing in pain.\n\nThe second man made a lunge for Serra with his longsword, but the spirits that she'd summoned now focused on him, deflecting the attack and pressing him.\n\nHe deflected two attacks from the spirit guardians with his shield, before I moved in and struck hard with my rapier, dropping him to the floor.\n\n\"We need to get out of here,\" Serra muttered, trying to get the children up, but they resisted.\n\n\"We need what the giant has,\" the girl muttered, and Serra tutted at her irritably.\n\n\"Then get it, and quick. They'll be back up as soon as the pain passes,\" she muttered.\n\nI walked over to the children, when suddenly a terrible pain shot up my back.\n\n\"Argh,\" I cried out, looking helplessly at Serra before the pain exploded, seemingly through every nerve in my body.\n\nEverything went white and I lost complete sense of my surroundings, with the mind numbing pain shooting through my body the only thing I was aware of.\n\nI passed out, and when I woke up, Serra was standing over me, a frantic look on her face and tears streaking down her eyes.\n\n\"Josh, josh- please, stay with me! Heal,\" she muttered desperately, and I felt a soothing feeling rush through me.\n\nI tried to move, and a wave of tumultuous pain shot through my body.\n\n\"Don't try to move, Josh- just stay with me, please! Heal,\" she muttered again, and the soothing feeling washed over me again.\n\nI could barely see, but I heard her repeating it over and over again, until a new, strangely familiar voice joined her.\n\n\"Regenerate,\" it muttered, and I suddenly felt as if my body and mind were being pieced back into a whole from a shattered mass of fragments.\n\nMy vision came back slowly, and I was greeted by Serra, rubbing at her watery eyes, and the familiar yet strange face of a young girl.\n\n\"Lina?\" I muttered, and the girl shook her head.\n\n\"My name is Rina, mister. Are you alright?\" she asked.\n\nI sat up, allowing Serra to wrap herself around me as I studied the little girl.\n\nShe looked every bit like Lina did, with some minor subtle differences, and I wondered if there was one of her in all of the little villages where the players started out.\n\nRegenerate was a high level cleric spell, and she had been to cast it.\n\nI immediately recalled Lina being able to regenerate the trees, and wondered if all of her apparitions had such incredible yet hidden latent powers.\n\n\"Ugh- what happened,\" I muttered, and Serra punched me in the shoulder.\n\n\"I told you not to fight them,\" she scolded me angrily, but I pulled her in for another hug and she immediately relented.\n\n\"I'm sorry. I didn't mean to scare you like that,\" I muttered, and she hit me again.\n\nAs I took in my surroundings, I noticed that the kids from earlier were still around, though none of the other players we'd fought still were.\n\n\"What was that?\" I asked, rubbing my head gingerly.\n\n\"Rend,\" Serra muttered glumly, and I tilted my head questioningly at her.\n\nIf my memory was correct, then rend was a pretty low level illusionist spell. So why did it almost kill me?\n\n\"It's a low level spell, but the spell temporarily rends a player's mind from their body. It's been known to forcefully disconnect players from the game, or cause mind wrenching pain as your brain tries to comprehend what's happening to your body,\" Serra explained. \"Using it, even in a safe zone, is nothing short of attempted murder.\"\n\nI stretched my muscles and realized that I had indeed barely lost any stamina, magic, or health apart from what I'd expended in the fight with the giant.\n\nMy mind still felt a bit woozy and dazed, but otherwise I felt fine.\n\nWhat a cheap trick! I thought to myself.\n\nI looked around, noticing again that the three were nowhere in sight.\n\n\"What happened to them?\" I asked, and the girl behind Rina gave a little fearful shriek.\n\n\"They'll live,\" Serra muttered, as she shot a sharp look at the girl.\n\nThe girl gulped fearfully in response, and I figured that Serra must have unleashed a pretty good serving of hell on them.\n\nI rubbed my head gingerly again.\n\n\"So what were they after?\"\n\nSerra looked to the girl behind us, and she gulped nervously before speaking.\n\n\"Hi. My name is Astrid, and this is my brother Lucas.\"\n\nThe boy gave a little bow, and I nodded at him.\n\n\"We're-\"\n\nThere was a little pause, before the boy's voice came out eerily, after his lips were finished moving.\n\n\"You can't tell them, Astrid.\"\n\nThe words sounded almost robotic, and I felt a little shudder go down my spine.\n\n\"What was that?\" I asked.\n\n\"His English isn't very good,\" Astrid muttered, before responding to her brother in a hushed whisper. \"We have to tell them something. They went through a lot of trouble for us.\"\n\nHe's speaking another language, I thought to myself.\n\nI did know there were mechanisms in place for players with different language backgrounds to interact.\n\nAutomated translation had come a long way in the past few years, and of course you'd expect an ambitious game of this magnitude to utilize those improvements.\n\nSerra was tapping her feet impatiently, and I noticed that the kids seemed particularly fearful of her.\n\n\"Look kid, if we wanted to hurt you we would have done it by now. What's the deal?\" Serra spat impatiently.\n\nAstrid looked as if she wanted to say something, but her brother was adamant that she shouldn't.\n\nShe gulped, before finally turning to Rina, who still wore an expression of concern and confusion.\n\n\"This girl,\" Astrid muttered, \"she's different from the rest of the NPCs.\"\n\nI studied Rina as I pondered Astrid's words.\n\nIf Rina was anything like Lina then I surely understood what Astrid was saying.\n\nI'd noticed myself on more than just a few occasions that her programming seemed much more lifelike than any of the generic villagers and shop keepers that I'd spoken to.\n\n\"What makes her different?\" I asked, and Astrid glanced at Lucas before continuing:\n\n\"She's not just a scripted robot. The man who created this game lost his daughter when she was about her age,\" she motioned at Rina, who was fidgeting nervously now that everyone seemed to be focusing on her. \"For a long time, he was trying to find ways to cope with her death. This girl's design was one of those ways.\"\n\n\"What do you mean?\" I asked.\n\n\"He found a way to replicate a portion of her consciousness, by coding it and uploading it into the program that you see before you.\"\n\n\"What a psychopath,\" Serra muttered blankly, and the girl looked away uncertainly.\n\n\"She has none of the memories of the person that she was- but her mannerisms, her quirks, even the way she speaks and thinks; they're unbelievably similar to the way she was before...\" her words trailed off, and I noticed that Lucas seemed on the verge of tears.\n\n\"You knew her- the daughter of the creator of this game. Who are you?\" Serra muttered as she advanced on the girl now, and Lucas stood protectively in front of her as she backed away from Serra fearfully.\n\n\"It's not our fault that this happened- how could we have known that dad would go this far?\" the girl muttered, before putting a hand over her mouth.\n\n\"Your- dad? Is he the one who's doing this?\" I asked, and she glanced at Lucas again before nodding. \"Please- don't hurt us. We didn't know.\"\n\nSuddenly I understood why they were so fearful of revealing their true identities, after all, there were some players in this game who would torture them on the spot just for the satisfaction.\n\n\"It's okay, we're not going to hurt you,\" I reassured them, and Serra backed off, laughing bitterly.\n\n\"Well this is fucking grand. Who is he?\" she asked. \"Is he playing too?\"\n\nAstrid shook her head.\n\n\"He's controlling things from behind the scenes, but I can't say who he is or he'll know we're here.\"\n\n\"Is it Gary Wright?\" I asked, and she shook her head.\n\n\"Papa used Gary to develop the game's core mechanics, but he didn't allow him to work on anything else. Gary's team built the foundation for the game, then there was another team that worked on building the environments, designing the NPCs, the monsters, and a different one to develop the final protocols.\"\n\nRigid compartmentalization, I thought to myself.\n\nThat's how this happened without anyone knowing. Some of the coders probably didn't even know what the protocols they were designing were intended for.\n\nI glanced back to the corpse of the hill giant.\n\n\"What did you need from the giant?\" I asked.\n\n\"This,\" Astrid added as she held up a little envelope, which had the letters 'invitation' scrawled across the surface.\n\nSerra glanced at it, then laughed again.\n\n\"So that's where he'll be?\" she asked, and Astrid nodded before adding:\n\n\"Most likely he'll be playing as the count.\"\n\nI shot Serra a confused look:\n\n\"That- is where we're headed, Josh,\" Serra muttered. \"An invitation to count Ludwig von Lahnstein's court beyond the realms; it's being touted as the game's first unofficial event. All of the top players are gathering.\"\n\nAs I processed the information, I felt woozy again, and Serra steadied me as my knees buckled a bit.\n\n\"Let's rest,\" she offered, and I nodded, as she led me to the little clearing where we'd camped before.\n\nShe had the tent set up in no time, and led me in, before leaving me alone for a bit.\n\nI fell asleep quickly, and when I woke up I found that my head was resting on her lap and she was stroking my hair soothingly.\n\n\"Did I die and go to heaven?\" I asked, looking up at Serra with a wry smile.\n\n\"Just shut up and enjoy it,\" she shot back, before flicking my ear in annoyance.\n\n\"Where are the kids?\" I asked, and she sighed.\n\n\"They left.\"\n\n\"What? Will they be okay?\" I asked, trying to sit up, but Serra stopped me.\n\n\"Relax. They'll be fine. 'Little Lucas' has cheat codes,\" she muttered mockingly. \"That's why those three were after them. Apparently when they came into the game, Lucas generated a toolbox; an item that lets him generate gold, and special items. But- he kind of fucked up and it ended up getting picked up by that hill giant. Without it they're no better than beginner characters, so they needed help to kill the giant to get it back. That's where those three came in.\"\n\n\"They were trying to use them to get access to the cheats?\" I asked, and Serra nodded.\n\n\"Wait- if they were able to get in, does that mean they know how to get out?\"\n\nSerra shook her head.\n\n\"Nope. The game's protocols are air-tight. They used a specially created back door to get in- apparently the same one their dad used to get in after launching all of the protocols. But even he couldn't get out if he wanted to apparently.\"\n\n\"Cheats, huh.\"\n\n\"Yeah- pretty sure the game's script will pick up on it sooner or later, but it doesn't matter to them. They're just trying to get to their dad, and put a stop to this. Although... I did guilt them into giving me a certain something.\"\n\nShe was smiling coyly, and I rolled my eyes.\n\n\"Seriously? You're fine with cheating?\" I asked, and she shrugged.\n\nShe opened up her interface and withdrew the item, which appeared in a ball of white light in her hand.\n\n\"Here,\" she muttered, as I sat up, studying a pair of boots that she was holding up. \"Fleet feet,\" she announced. \"This is what I was trying to buy for you before we left Valhalla,\" she added with a smile.\n\nI accepted the gift with a smirk.\n\nIt was an item which improved my ability to evade attacks and maintain a solid footing when on the move.\n\n\"Cheater,\" I muttered, and she stuck a tongue out at me.\n\n\"Hey- we were just rewarded for doing our duty as fine, kind hearted, responsible adventurers,\" she added with mock regality, and I rolled my eyes as she continued to chat away about it.\n\n\"So- this count. What's the deal?\" I asked, and Serra regarded the question thoughtfully.\n\n\"He seems to be assembling the game's top players, though nobody knows why. Some think the event might reward players with a ticket out of here- but whatever it's about its going to be an elite contest. I mean, the only way to get a legit invite is to kill a master vampire, which is one of the toughest creatures in this game. That's where we were headed next- but...\" her voice trailed off, and I studied her curiously.",
        "\"But-?\"\n\nShe sighed, then looked away a little.\n\n\"Look- being the top gamer? It means a lot to me. But that's not what you signed up for, and I don't want to be responsible for a repeat of today's events. I can contact Kelly and tell you where she is if you want to leave and meet back up with her.\"\n\nSerra was studying me intently as she spoke.\n\nI sighed, as I considered the matter, my thoughts going back to Kelly.\n\nShe'd handled herself pretty well when we played, and I could only imagine that she'd have gotten better with time.\n\nWould she be there too?\n\nI had a vague feeling that if she thought there was any way that this entire ordeal could be resolved she would be there, no matter how dangerous it was.\n\n\"I'm coming with you,\" I muttered.\n\nThose were words that I hardly ever imagined would come from my own mouth.\n\n\"Y-you are?\" she asked uncertainly, and as I looked over to her and gave a little reluctant nod, she broke into a huge smile.\n\n\"Hell yeah!\" she cried out excitedly, giving my chest an enthusiastic shove. \"Although... it's not like I needed you anyway,\" she added in her typical 'matter of fact' tone, \"But we're definitely going to rock this shindig.\"\n\nSerra snuggled up to me, facing me this time, and resting her head on my shoulders as she stroked my chest while humming happily.\n\nAs Serra settled down in my arms, my thoughts immediately returned to Kelly.\n\nI knew I could ask Serra to find out about her, but I had a feeling that she would want to keep her whereabouts secret from me nonetheless.\n\nWould she really be there?\n\nI had a feeling she would, and as I drifted off to sleep the thought that I might see her again was ever present in my mind.\n\n***\n\nThe trip to Ravenloft took about four days; though we spent a bit of time on the way going after a few noteworthy targets that Serra's contact had given her info on.\n\nThere was an owlbear nest just outside of a town called Kent, and a Hagraven camped out in a grove near Annwyn.\n\nAlong the way Serra also started me on a new training exercise to resist the rend spell.\n\nApparently the girl had attempted to use it on Serra as well, but Serra had kept her concentration up resisting the horrendous effect that I'd suffered, and followed it up by striking the girl with a good old fashioned smite to the face.\n\nI didn't know all of the details, although it appeared the girl had to be resuscitated as well, and the other two left with her after being single handedly bested by Serra in a second fight.\n\nBut Serra's training was as outlandish as everything else about her. It involved her sitting on my back while I was in the plank position, and I had to maintain my shade spell while she cut me at random intervals without warning, with a sharp little dagger.\n\nIt was an exercise which would not only improve my ability to deal with rend should it ever be cast on me again, but also improve my general ability to deal with pain in combat.\n\nOn the first day I lost concentration on the spell almost immediately every time, but I eventually got a better handle on it, and by the time we got to Ravenloft, I was pretty confident that I would be able to resist rend if it was ever again used.\n\nRavenloft, unlike Valhalla, was not a veritable bustling city center. Instead it was like a spooky little rustic town, and a lot of the NPCs here were created with that kind of vibe in mind; there was an old hag who ran an apothecary, a fortune teller who spoke with a thick eastern European accent, and a wily old caretaker who'd been looking after an old estate since its occupants died under mysterious circumstances many years ago.\n\nThe extent to which the town's aesthetic created an almost tangible aura of intrigue and mystique made me ponder on its choice as the location for the upcoming event.\n\nI mean sure, the attention to detail in everything had been amazing thus far, but the design of this town, coupled with the way in which it created such a distinct atmosphere, made every other place we'd been to feel generic and bland by contrast.\n\nAs Serra led us to a tavern in town, I noticed that there seemed to be a distinct buzz amongst the players; the upcoming event was on everyone's mind, and almost every conversation was related in some way to it.\n\nAs Serra tried to locate her contact, I paid attention to some snippets of conversation:\n\n\"Who do you think will be the first to get an invite?\"\n\n\"Galvan and the 'Black Hand'; no question about it,\" answered a young man.\n\n\"Hah- you're daft if you think that.\"\n\n\"Why? There's no other group that can match them in strength.\"\n\n\"Match them in numbers you mean.\"\n\n\"They killed a lich-\"\n\n\"Yeah? Well I heard there's a two man team that killed one.\"\n\nI glanced over my shoulder at the lean, middle-aged man who had spoken the words.\n\n\"Bullshit. Two players couldn't last a minute against one,\" the young man countered.\n\n\"Yeah? Well maybe that's all they needed.\"\n\n\"Hah. Is he on about the 'shadow stalkers' again? That's a fairy tale, Marth. Aren't you a bit too old to believe in fairytales?\" added a young girl, who took a seat next to the younger guy.\n\nSerra shot me a cheeky grin, before whispering: \"See? I told you they'd be talking about us in every tavern in this kingdom,\" and I rolled my eyes at her, as she made her way over to her contact.\n\n\"Fairy tale? I heard they took out the Hagraven by Annwyn on their way here,\" the man continued, and the two younger players laughed a bit, before a player from another table joined in on the conversation:\n\n\"The Hagraven is dead though. I checked it myself. And the trader from Annwyn said that only a couple of players had passed through that day.\"\n\nThe girl quieted down as the boy spoke again:\n\n\"So what? Does that automatically mean that it's the same two? I can buy two players taking down a Hagraven, but a Lich? Not without cheating.\"\n\n\"It's easy- Rogue/monk. If they're skilled they could evade hits forever and just whittle away at it,\" the old man added, with a self-righteous smile.\n\n\"Yeah- but one solid hit and one of them dies. Who's taking that risk in a death game?\"\n\n\"What do you think?\"\n\nI jumped as the question came quite suddenly from a girl standing right behind me.\n\n\"Uh- I dunno,\" I responded uncertainly.\n\nShe wore a simple green robe, and her face was shrouded behind a hood, but as I glanced at her I got the suspicious feeling that there was something unsettlingly familiar about her that I couldn't quite place.\n\nHad I met her before?\n\n\"I'm thinking one of them has to be a tempest,\" she muttered softly, and I studied her with renewed interest. \"But the other- I dunno. Wizard or sorcerer could compliment tempest well, but that might be way too squishy for a two man team.\"\n\n\"Hah- a tempest? In a two man team? That's crazy. They're useless in small groups,\" the older man responded.\n\n\"They're useless in general, Marth,\" someone else added, and he chuckled before continuing:\n\n\"Maybe a wizard and a rogue? Illusion magic and stealth. That'd do it.\"\n\nAs the older man spoke I looked over to the girl to see what she'd have to say, and I noticed she'd already slipped away, and was heading over to a table on the far side of the room.\n\n\"Well... I don't know about the Lich,\" continued another player, \"but three players came in from Valhalla yesterday. Said two players poached a hill giant from them, then beat them to pulp a few times over.\"\n\n\"Hey, I saw that giant's corpse! It wrecked a starter village- that was the big one from Kalm,\" added an older woman from the second table.\n\nI was about to settle down at a table when suddenly someone came barging in to the Tavern in a huff.\n\n\"They're here!\" he called, out of breath. \"Galvan and Auriel are here!\"\n\nAuriel?\n\nThat's Kelly's gamer tag.\n\nI gulped anxiously, and Serra, who had been chatting with her contact, suddenly paused what she was doing and was studying me with a pretty worried expression.\n\n\"Finish up here,\" I muttered to her softly, \"I'll go check it out.\"\n\n\"Josh- wait,\" she called, and as I looked back I could see her hesitating to say something.\n\n\"I'll be right outside,\" I reassured her. \"Just come meet me when you're done.\"\n\nShe nodded blankly, but she still seemed strangely harried by the news and I wasn't exactly sure why.\n\nI went outside to see that there was a large group of players walking into Ravenloft, and a huge crowd was assembling just to see them walk in.\n\n\"What's going on?\" I asked a player to my left, and he chuckled a little.\n\n\"The Black Hand,\" the man replied. \"People are a little fanatical about them these days.\"\n\nThe younger players I'd overheard in the tavern before were standing nearby.\n\n\"Is that Auriel?\" the boy asked, \"I heard she's pretty hot.\"\n\n\"It's a game avatar, idiot. I could design myself to look like that if I wanted,\" the girl responded.\n\n\"It's not just her looks- she absolutely rocks with a bow,\" he answered defensively, and the girl put her hands on her hips in annoyance.\n\n\"Whatever- not like if you have a shot. She and Galvan are pretty much a thing. I hear they've been sharing a tent since day one.\"\n\nI felt my heart beat two paces off track, and blinked a few times as my mind gave a little twirl making my head spin.\n\n\"Well- I can still admire from afar,\" he retorted cheekily to the girl's increased annoyance.\n\nAs the group neared us, I found my desire to see Kelly wavering.\n\nI'd resolved to turn her down, hadn't I?\n\nI should be glad, right? She's found someone that she can have a normal relationship with.\n\nWasn't this what I wanted?\n\nI took a wavering step towards the commotion, before pausing, and turning back, suddenly finding myself face to face with Serra.\n\n\"You're not going to see her?\" she asked, and I glanced away, feeling a strange sense of guilt; as if I'd been caught doing something I shouldn't have.\n\n\"It's better this way,\" I muttered softly, and she chuckled bitterly, before responding:\n\n\"Easier maybe... but better?\"\n\nI sighed.\n\n\"She has no future with me.\"\n\n\"That's something you two should decide together, Josh.\"\n\nI tried to walk past Serra but she stopped me.\n\n\"If I asked you to run away with me right now- would you?\" she asked, her tone surprisingly somber.\n\n\"What?\"\n\n\"Forget about Kelly, the event? We'll hole up somewhere until this whole thing is settled, kill some easier stuff and just enjoy playing. Then when the game ends- maybe I could come find you, meet up in person? You've been nice to me so far... we could- go on a date or two, and see where it goes from there?\"\n\nI gasped, but as I studied Serra with absolute shock, I noticed that she looked more serious than I'd ever seen her look.\n\n\"Could you do that Josh? Could you forget about Kelly, and devote yourself to making me happy? Could you pretend you're not lonely, when I hold your hand and smile? Could you make love to me and make me feel like I'm your whole world? Could you hold me every night when the nightmares come, and help me keep the loneliness at bay?\"\n\nI blinked at her uncertainly.\n\nShe was offering me every single thing that I'd missed since the day Tracey left, and I marveled at how easy it would be to just say yes right now.\n\nBut what would we be? Two broken people trying to fill the voids in our hearts with nothing but our desire to not be alone.\n\nI finally understood- Serra was as broken as I was, but she was trying to find meaning in that emptiness while I was trying to throw myself into that void.\n\n\"No,\" I muttered with a smile, and though she returned my smile genuinely I didn't miss the subtle hint of sadness in her eyes.\n\n\"The Josh who I first met would have walked away- but the Josh who's with me right now wouldn't give her up without a fight.\"\n\n\"You're right,\" I replied with a sigh, and as I spun around Serra offered me her hand, and together we made our way through the gathering crowd.\n\nI scanned the faces about us anxiously, until we neared the center of the commotion; and there she was- the very image of perfection.\n\nHer silvery hair was blowing in the wind, she had an arm linked with Galvan's and wore radiant smile on her face as she waved at the crowd with the affectation of someone of royalty. Her fair skin seemed to shimmer in the afternoon sunlight, and the tribal tattoos on her face, and long her arms and legs seemed to almost glow with radiance.\n\nI looked over to Serra and shot her a huge smile, before I broke out into a stupid laugh- because even though it was the splitting image of my sister's character, I knew beyond the shadow of a doubt that it wasn't Kelly.\n\n\"Uh, Josh- are you alright?\" Serra asked, bewildered and concerned.\n\n\"That's not her,\" I asserted amusedly, and Serra studied me with a smile that was equal parts amusement and confusion as I laughed at myself.\n\n\"Are you sure? I mean it looks like her- even if she's acting weird. So... she's not here then?\" she asked, and I shook my head at her as I took off.\n\n\"No. She's here- and I'm stupid,\" I called back to her with a grin as I rushed back to the tavern.\n\nI entered and confirmed that the girl in the hooded robe was indeed still sitting at the table across the room, and I snuck down a corridor that led to some stock rooms before putting my impromptu plan into action.\n\n\"Minor illusion,\" I muttered, and I studied the image I brought to life.\n\nI needed it to be perfect, so I cast the spell a few times, making small changes before I was satisfied.\n\nI finished up my plan by using the make corporeal spell to give it physical form, and had the image I'd created head over to a table and order a drink.\n\nI wasn't sure if it could really drink, but it didn't take long for the girl to take notice of the image, and as she walked over to it I had the figure get up, and head quickly to the corridor where I hid, and to my delight she quickly gave chase.\n\nThe image I'd created was that of my own; not my character's, but that of my actual real-life self, poorly disguised and dressed up in some typical fantasy rags.\n\nAs she rounded the corridor in pursuit, I had the image dash straight at me, vanishing just as we would have collided, and the girl paused; her mouth agape as she stood uncertainly a few feet away from me.\n\nI walked up to her with a big grin on my face, and in one fluid motion, I lifted her chin up to my face and kissed her full on the lips.\n\nShe gasped, and I looked down at her affectionately as I added:\n\n\"Found you,\" with a satisfied smile. "
    ],
    "authorname": "Kousakacomplex",
    "tags": [
        "brother sister sex",
        "brother sister incest",
        "incest novella",
        "siblings",
        "series",
        "fantasy",
        "romance",
        "video game",
        "sword art online",
        "gamer"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/trapped-in-a-game-pt-02"
}