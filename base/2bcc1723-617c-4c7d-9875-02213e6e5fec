{
    "title": "On The Train Ch. 05",
    "pages": [
        "As requested, Samantha and Alex are back for more. I hope you enjoy it. \n\nOn a more personal note, my calculations indicate that somewhere in this story, I will pass the \"one million word\" mark, for stories on Lit. \n\nFunny how time flies... and words, too... when you're having fun ;-)\n\nThanks for reading. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt was Tuesday, the day after Sam's daughters went back to their respective homes, and I was on the train as it came to Sam's stop. I had gone home last night, well after midnight. Our celebration dinner on Sunday night had gone long, and I had received hugs from both Cassie and Chloe when I left for home. They flew out, to their respective locations, on Monday, so Alex had been missing from yesterday's commute. \n\nPoor planning had forced me from her bed late last night, so that I could have a chance to change for work in the morning. I hadn't slept that well for the remainder of the evening. \n\nAll night, questions had been racing through my head. Questions about the future. \n\nQuestions about our future. \n\nWas I being selfish, thinking we had a life together? She was free now, unchained from her cheating husband. Maybe she wanted to stay free? Maybe I was just a stop along the way, and she wanted someone more her own age? And then there was the question of children, so maddeningly raised by Chloe. Kids had never been a priority for me, but I suppose my mental images of married life included rug rats at some point. \n\nMaybe I was overthinking things, and making myself crazy for no reason? \n\nMy thoughts were pushed aside when motion appeared in my unfocused field of view. It was Sam, who plunked herself down beside me, wearing a smile a yard wide. \n\n\"Hi!\" she giggled, snuggling against me. There was no reason to hide anymore. Frank was history. The girls were in the loop, and had gone home, happy for their mother and me. As for the other passengers on the train... well, let them find their own perfect woman. \n\nThat electric smile wasn't the only thing she was wearing. Her dress fit like a glove, and was showing more cleavage than anything I'd ever seen her wear to work. She saw my eyes lingering on her breasts. \n\n\"What do you think?\" she asked, shaking her shoulders slightly. \n\n\"I think it's a good thing it's summer, or you could catch a chest cold,\" I said softly. \"With a chest like yours, that could be life-threatening.\"\n\n\"Well,\" she chuckled, \"I've got this boyfriend, who just loves my boobs. I thought we might get together at lunchtime, for a noon quickie, and wanted to make sure he remembered what was waiting for him. Do you think he'll go for it?\" \n\n\"Yeah, I think he just might,\" I laughed. \"How are you this morning, baby?\" I leaned closer, and kissed her gently, feeling eyes on us from all around. Those who were familiar with us riding together probably noted the change in behaviour. We'd never kissed in public before. It felt strange, but nice. \n\n\"I didn't sleep well,\" she pouted. \"Too excited. I missed you. You're not going to leave me all alone in that big house again tonight, are you?\" \n\n\"No, honey,\" I told her. \"I'm sorry. I needed to change, and had to think a few things through. You're a bit of a distraction for me, you know? Can you forgive me?\" \n\n\"Forgive what?\" she smiled, cuddling in under my arm. \"I hope those thoughts weren't anything bad. Can I help at all? Is it about me?\" \n\nNot that I had ever tried, but there was no fooling Sam. It may sound sexist, but I think women in general are more emotionally perceptive than men, and Sam, in particular, had always read me quite well. I had never lied to her, and wasn't going to start now. She asked. I would tell her. \n\nThat didn't mean it was going to be easy, however. I took a deep breath. \n\n\"Okay... I'll spill it. I'm sure it's just me being paranoid,\" I said, looking into her sexy eyes, \"but I'll tell you.\" \n\nI paused, and took another breath. I wish I was as sure about my paranoia as I sounded. What if I was right? What if she really did want her freedom? What if I was wrong, and she misunderstood my concerns as not wanting her? What if... Oh fuck, just spit it out, before you drive yourself insane! \n\n\"Sam, honey, I hope you know what you mean to me,\" I began. \"I love you, but I don't want to assume anything when it comes to the future. You're free of Frank, and deserve to stay free, if that's what you want. I won't make a fuss if you want to seek out someone else. It's your life.\" \n\nIt came out easier than I expected, but I'm not sure it sounded the way I meant it. I'm also not sure I could explain it any better, without breaking down into a babbling fool. Please say you understand. \n\nShe gave me a little smirk, and dug into her purse, coming out with her phone. She scrolled down, and placed a call. \n\n\"Hi, Marcy, it's Samantha,\" she said quietly. \"I'm afraid I need to take a personal day, today. I have a few things to deal with that absolutely require my attention, right now. Right. I'll see you tomorrow.\" She pushed the 'end' button, and looked at me. \"Your turn. I'm not leaving your side until we get this sorted out.\"\n\nThat sounds promising, I thought, reaching into my pocket. A minute later, I was set to play hookey from work, too. The ball was back in her court. \n\n\"Okay. Now, we need someplace to talk,\" she smiled, \"among other things. I'm thinking... The Westin, on the waterfront, so let's stay on one extra stop. Sound good?\" \n\nLet's see... I began the day, thinking I would be spending a typically dreary Monday at work, worrying about our future. Then you say we're meeting for a nooner, get me to talk, and now we're going to spend the day together, at one of the city's most luxurious hotels? Yeah, I think it sounds just fine. \n\nSam lifted my arm, and wrapped it around her, cuddling tight against my side. I felt her big breasts squashed between us, and glanced down at her deep cleavage. This might indeed be a day to remember. \n\nUnless she's giving me a final tumble, to ease the pain. There's that paranoia again. \n\nWe passed the rest of the trip to our stop in silence, with Sam pressing herself deliciously against me. At last, the train slowed, and she stood up, grabbing her purse. We were standing by the door when the train stopped sharply. \n\nSam stumbled, and I caught her, just as I had back when we started. The only difference was that this time, she had done it on purpose, and made no effort to pull away, maintaining the contact between her chest and mine for as-long-as possible. The doors opened, and people started to flow out, around us, while I held her. Her lips found mine. \n\nThe rest of the commuters were surprisingly polite, merely going around us without comment, although there was one who told us to 'get a room' as she went by. \n\n\"Yes. Let's get that room,\" Samantha smiled, leading me out by the hand. \n\nIt was a three-block stroll to the Westin, and we took our time, making use of cross traffic to get in a few more lingering kisses. At last, I followed her sexy rear end, watching her skirt swish, as her heels clicked on the polished marble of the hotel lobby. She led us to the counter. \n\n\"Hello!\" the brunette behind the reception desk smiled. Her name tag said Margaret. \n\n\"Hi... Margaret,\" Sam smiled back. \"We'd like a room, please. Something nice, with a view of the water. Something very nice. A suite, perhaps?\" \n\n\"Certainly, Ma'am,\" Margaret said, pecking her keyboard. \"For how long?\" \n\n\"Checking out tomorrow morning,\" Sam answered. She leaned forward, and whispered something I didn't hear. The two women giggled, and Margaret cast a glance my way with a smile. \n\n\"Okay. I have two options for you; the Bridal suite, and the Owners' suite. Both have water views, but the Owners' suite has a bigger balcony,\" Margaret offered. \n\n\"We'll take the Owners' suite,\" Sam smiled, sliding her card across the counter. \n\nWithin minutes, Sam and I were in the elevator. There was a slot for our key card, and when we inserted it, the elevator doors closed, and it started upward briskly. There wasn't even a button for the floor we were headed to. \n\nAs the elevator slowed, Sam took my hand. The doors opened. \n\n\"Wow!\" I gasped, as we stepped out. I was expecting hallway, but instead, we found ourselves in the living area of the suite. It was like something you'd see in a movie, but this wasn't a movie. \n\n\"Oh! That's why we had to use our card! It's a private floor!\" Sam giggled. \"This could be fun, honey. I had no idea this even existed.\"\n\nTogether, we explored the suite, from the bar and kitchen area, to the huge deck outside, to a second bedroom. The living room was very luxurious, with a long, soft leather couch that would definitely be seeing some action, but we still hadn't found the master bedroom. There was only one door left... a big, double portal, across the corner of the living room. We stopped in front of it. Sam looked at me, excited by the situation. \n\n\"You want to open it, or should I?\" she asked. \n\n\"Please. It was your idea,\" I gestured, and watched her reach for the brass lever. She turned it. \n\n\"Oh my god!\" she gasped, stepping into the room, which was larger than most living rooms. \"I think I'm in heaven!\" \n\n\"Me too,\" I breathed. \"That makes you an angel, right?\"\n\nShe glanced at me and blushed, then sauntered over to the bed, which dominated the room. It seemed much bigger than just a king-size, and had four beefy posts holding up a large, ornate canopy. \n\nSam kicked off her heels, and giggled girlishly, jumping onto the massive bed. She rolled onto her back. \n\n\"Ooooo, a mirror! Kinky! I've never watched myself having sex before,\" she smiled, as I came out of the ensuite bath area, which housed, among other things, a sauna, and giant soaking tub. \n\n\"How much is this costing you, Sam?\" I asked her, feeling guilty that she was doing this because I needed reassuring. \n\n\"Don't know, and don't care,\" she giggled. \"You're worth it, and I can afford it, so put it out of your head. Sounds to me like there's enough going on up there anyway, without adding to it. Now, my love, I suggest you come over here, and let me relax you.\" Her gaze dropped deliberately to my crotch, and she licked her lips. \n\nA little 'relaxing' sounded like a wonderful idea. It had been several hours since I'd had the very great pleasure of her exquisite lips on my cock. I missed that heavenly sensation, even if it had only been since last night. \n\nI disrobed as I moved across the room toward her, I had only my underwear left when I reached the bed. She welcomed me onto my back, in the centre of the mattress, and peeled the last item of clothing off over my hips. \n\nMy dick was only semi-hard, but didn't stay that way long, as she slurped it into her throat, sucking it full depth. I just laid back, and watched the mirror above me. It was like watching a virtual-reality porn movie on a big-screen TV, as Sam, still fully clothed, bobbed her platinum blonde head in my lap. Channel one, overhead, was a unique perspective on the blowjob, but channel two, the POV version was more fun to watch, as Sam's lips stretched around my thick shaft, and her spectacular eyes looked up into mine. \n\nSamantha had planned to relax me, but that's not exactly what her mouth was doing. Laying with my arms behind my head, I passively accepted her attention, moaning softly, while she manipulated my cock expertly, making it harder and more un-relaxed. The pressure was building gradually, and I was breathing harder with each passing moment. She was increasing my desperation to cum, and driving me insane. \n\n\"Oh shit, Sam, I hope you know how incredible that feels,\" I groaned, stroking her hair softly. As soon as I said it, I knew it was a stupid question. She knew me so well. She knew my needs and wants implicitly. She wasn't using anything but her best, most effective technique on me, and it was only a matter of time before it had the desired results. \n\n\"Yeah, baby, getting close,\" I grunted. \"Oh fuck, it's so good. You're the best! Fuck, I'm gonna cum, honey! Suck it! Yeah, suck it harder! Oh, fuck! Oh, fuck! Oh... FUUUUUUUUUUUUUUCK!\"\n\nI watched my own face in the reflection above me. Why is it women have a look of contentment and bliss on their faces during orgasm, but men look like a chimp having an epileptic fit? I hadn't seen my own 'O' face before. I guess Sam must love me more than I thought. \n\nAnyway, embarrassing appearances aside, I was spewing the contents of my balls down her throat, to her accompanying moans of happiness. Sam was gulping it back, sucking smoothly, and milking every drop from me. As the last spasm waned, I flopped on the bed, spent. \n\nWell, she wanted me to relax, and in my current, gelatinous state, I was about as relaxed as I could get. Any more relaxed and I'd be dead. I watched Samantha wiggle across the bedroom floor, and could just see her in the bar area, getting a drink. She came back, put the drink down, and reached behind her, unzipping the sexy blue dress. It was placed on a hanger, in the large closet, looking very lonely. Her bra and panties found a place on the floor, along with my stuff, until she picked up my pants, shirt and jacket, hanging them beside the dress. \n\n\"We'll be heading to work from here tomorrow. Best not to look too wrinkled,\" she smiled, easing into the bed beside me. \"Alright, my darling. Ready to tell me what's going on inside your head? What's got you all worried?\" \n\nI looked at our reflection in the overhead mirror. If I do say so myself, we made a very nice couple. Certainly, she was everything I could ever want from a woman. Kind, honest, caring, perceptive, fun-loving, playful... and then there's that body, which was being pressed so delightfully against me right now. Beautiful, sexy, buxom and built for pleasure, that body had no equal, in my experience. Any man who wanted more than Samantha could offer was probably also looking for unicorns in his spare time. They just didn't exist. I loved her, with every fibre of my being. I knew I had found the one, but it wasn't only my decision. \n\nSam waited patiently, resting her head on my chest. Her fingers traced idle circles around my nipples, as though doodling on a notepad, and her breathing tickled my skin. \n\n\"Alex?\" she probed, hoping to break the inertia. \"Talk to me, honey. I'm here. Together, we can work through anything.\" \n\nWell, she was saying all the right words; 'we', 'together', that sort of thing. Here goes nothing. \n\n\"I just don't want you to look at your life twenty years from now, and come to the conclusion that being with me was a mistake. You've been disappointed by one partner already. That's enough for a lifetime.\"\n\nThe room was silent again, as she considered her response. It took longer than I was hoping for, and the vacuum was killing me. \n\n\"Alex,\" she finally replied. \"I can't foresee the future. What I'll think twenty years from now... No one can say. All I can say for sure is that I Love You, right here, right now, and I want us to be together. You make me very happy. I'd forgotten how good that felt with Frank. Now that he's gone, I feel like a great weight has been lifted off my life, and you helped me lift it. I owe you for that.\"\n\n\"That's exactly what I mean. I don't want you to feel like you owe me anything. If you want to be free, you should be,\" I said softly. \n\n\"Poor choice of words on my part,\" she shook her head, sitting up to look into my eyes. \"I'm not repaying a debt by being with you. I'm here because you are what I want my spouse to be. My big concern is that you'll get tired of being with an old lady, especially after both Cassie and Chloe threw themselves at you.\"\n\n\"So, if I'm hearing you right, we're both concerned about being good enough for each other,\" I smiled, suddenly feeling a whole lot better. \n\n\"That's correct,\" she nodded. \"I'm not looking for anyone else. I Love You.\" \n\n\"Well, you... Samantha Fordham... are everything I could ever want in a woman. I stopped seriously looking at anyone else the day I met you. I Love You too.\"\n\n\"Hmmmm. Then we have a serious problem, don't we?\" she giggled. Her lips moved closer to mine. \n\n\"Yep, a real pickle,\" I laughed. \"What to do for the next forty or fifty years?\"\n\nOur lips met, and Sam moaned softly, rolling atop me. Her luscious, soft body pressed against me, my favourite feeling in the world. Her kisses were gentle, and loving, reassuring me further. Crisis averted. \n\n\"I have an idea how we can start,\" she whispered, between kisses. \n\nI had the same idea. Her lovely, prescription quality blowjob, meant to relax me so we could talk out the problem, had done the job perfectly. Now that we had discussed things, I felt better. Much, much better, and having her body, so soft and exciting, pressed against me was allowing those better feelings to reach my dick. He stood up to volunteer his services. \n\nI rolled us over, and her hand immediately guided my refreshed erection into her wet depths. It slid in so easily, parting her juicy labia smoothly. \n\n\"Oh yes, that's exactly what I was thinking. Just like that. I'm never going to get tired of your big cock, so deep inside my pussy,\" she hissed, grabbing my ass with both hands. \"Tell me, darling; does divorced pussy feel different from unhappily married pussy?\" \n\nThat was a comparison I never thought I'd make. \n\n\"Well,\" I giggled, \"I'd have to say that the divorced model seems more relaxed. Less distracted. It might take me a few more trials to come to an informed decision.\"\n\n\"A few more, huh?\" she smiled, looking up at me with those incredible green eyes. Her arms were loose around my neck, and her legs wrapped tighter around my waist. \"How many more?\" \n\n\"Oh, I don't know. One or two... thousand. I'll get back to you,\" I smiled back, and kissed her. \n\nAll kidding aside, there did seem to be something different about this time. Not her pussy, of course. That succulent crevice was every bit as warm, tight, and juicy as it had always been, since our first time in the train restroom. The difference was emotional. Certainly, once Sam received the news that her divorce was final, that afternoon session, within earshot of her daughters, had been an energetic celebration. It was one helluva fuck. \n\nSeveral times, we had made love gently, letting our deeper emotions set the pace. Those sessions had been very satisfying, and protracted. \n\nToday, was unique, however. There was no longer any reason to hold back anything, and we didn't, letting our love for each other pour out, uninhibited. \n\nComing here today, Samantha had intended to give us a neutral, if luxurious, location to talk through the few doubts I had about our potential future. Talk is great, but this was even better. \n\nHumans don't think in words; we think in images, and there are literally unlimited images to choose from, floating through our minds. Those images get personalized by our own emotions, and people don't even realize the connections that their brains build between the two. The point is that words, no matter how carefully considered, fall woefully short at conveying those images and emotions. The phrase 'a picture is worth a thousand words' is even inadequate. Language is that watered down. \n\nThis connection, however, was not. Much more clear and concise than any words ever could be, it told me things about our future together than no conversation could approach, because I could feel them. Her emotions came out, loud and clear, no translation required. They told me I needn't have worried. \n\nSamantha's kisses and caresses very eloquently conveyed her feelings about our future. My thoughts shifted from our distant future, to the more immediate, more intimate one. The one where my cock was buried balls-deep in her succulent pussy. ",
        "\"Mmmmm, yes, my darling, that's it. Fuck my pussy. You make it feel so good, I'm never letting you go. You're mine, honey. Forever and ever,\" she smiled, her eyes on my face. \"You're so perfect for me, baby.\"\n\n\"And you for me,\" I replied, kissing her deeply while slowly stroking into her cunt. \n\n\"Mmmmm, harder,\" she breathed, closing her eyes in contentment. \"Fuck me harder.\" \n\n\"Do this, do that, fuck me harder. Next you'll be telling me to marry you,\" I whispered, increasing my pace. \n\n\"Hmmmm, sounds good, but let's let the ink on the divorce dry, first,\" she giggled. \"For now, just fuck me, with your big, hard cock. Fuck me, and make me scream. Fuck my brains out.\"\n\nSo, I did, on the gigantic, opulent bed, in the ultra-luxurious, private, Owners' suite, of a very expensive hotel. I fucked her, long and hard, through several screeching orgasms, until she begged me, gasping for air, to stop. \n\n***\n\nIt was early afternoon when we woke up from our nap. We had quickly dressed, and swiped our card at the elevator, which arrived seconds later, whisking us down to the lobby, where Sam took my hand, and led us at a casual pace outside. \n\n\"I'm sure you're hungry,\" she giggled, leaning against me. \"How does sushi sound?\" \n\n\"Always good,\" I nodded, and let her lead me into the mall in the lower level of a nearby office building. Inside, there was indeed a sushi restaurant, and we ate a very nice lunch, with her introducing me to a few rolls that I hadn't tried before. It was tasty, and filling, and recharged my batteries. \n\nAfter lunch, we strolled through the mall, finding a few shops for Sam to wander through. One, in particular, was interesting to me as well. \n\n\"Hello! Welcome to Yvonne's Intimates,\" the nicely built redhead smiled as Sam led us into the shop. \"Are you looking for anything in particular?\" \n\n\"Well, I don't know exactly. We were just walking past, and saw your window. I suppose I'll know it when I see it.\" Samantha glanced at me, and giggled, hooking her thumb in my direction. \"Or when he sees it!\" \n\n\"Hmmmm, yes,\" the clerk nodded, giving me a quick once-over. \"The target audience is very important, isn't it? Feel free to browse as much as you'd like. I think you'll find plenty of options in your size. We cater especially to women of, um, impressive dimensions,\" she gestured. Indeed, she was quite well endowed herself. \"I'm Yvonne. If you have any questions, just ask.\" \n\n\"Thank you so much, Yvonne,\" Sam smiled, and took my hand. \"Come with me, target audience,\" she chuckled. \n\nI love lingerie. I suppose most men would say pretty much the same thing, although most, myself included, are more interested in what's in the lingerie, than the garments themselves. Having a taste for women with, as Yvonne had put it, 'impressive dimensions', it had become apparent that lingerie was intended to make those who lacked those impressive attributes look a little less lacking. In other words, if you already have big tits, you were out of luck in the mainstream of women's lingerie. \n\nThankfully, this was not a mainstream lingerie shop, Yvonne was right; there were plenty of options. Plenty of silky, filmy, scanty, sexy options, most of which I greatly looked forward to viewing on my luscious Samantha's body. \n\nAt least until they came off, and we got down to more important things. \n\nSam was using me as her personal shopping cart, and within minutes, my fingers were full of hangers. Bras, panties, teddies, a bustier, a merry widow, and even a few that I couldn't put a description to, were in my hands, feeling just soooooo fucking sexy. The fabric alone had my dick twitching in expectation. \n\n\"Finding what you want?\" Yvonne asked, ostensibly to Sam, but her gaze was on me. It could be a flirt, an occupational habit, or a merchant asking a question of the target audience. She was very pretty, with huge blue eyes, framed by black glasses, and very seductive lips. Her boyfriend must have a lot of fun with that body of hers, which was nearly as 'impressive' as Sam's, but I wasn't doing anything more than window-shopping her curves. \n\nAfter all, I said I stopped seriously looking at other women the day I met Samantha. I didn't say I went blind. \n\n\"I think so,\" Sam replied. \"Won't know for sure until I try a few things on.\"\n\n\"The dressing rooms are back there,\" Yvonne pointed. \"Your young man is welcome to join you. We've made accommodations for just such situations. Enjoy.\" \n\nWhen Sam had filled her cart... me... to capacity, she led back to the dressing area. Yvonne was right. They had planned for this situation. Each changing room was inside another room, curtained off from the others, with a nice, soft, comfortable lounge chair for husbands, or in this case, me, to rest in. \n\n\"Very nice,\" Sam smiled, emptying my hands of goodies. \"Take a seat, sweetie. I'll give you a show.\" She began by getting naked, yet again, before my eyes. \"Anything in particular you want me to start with?\" \n\n\"Surprise me,\" I smiled, taking my seat, and tilting back with my feet up. \n\nSo, it began. I sat, and watched as a private parade of revealing undergarments was played out for me. The one common factor was Samantha, and her incredibly erotic body, spilling out of one outfit after another. This was my kind of shopping. \n\n\"How is it going? Everything fitting all right?\" Yvonne asked, poking her head into my seating area. I wondered if she saw the bulge in my pants, caused by the fashion show up to this point. \n\n\"For the most part. This bra doesn't quite seem right, which is a shame. I kind of like it,\" Samantha said, stepping out of the change room. \n\nI kind of liked it too. It was lilac coloured, with white lace trim, as was the pair of tiny panties that went with it. \n\n\"Hmmmm,\" Yvonne said softly. She stepped right in, and wasted no time, reaching for the straps of the bra. Satisfied with that adjustment, she stood behind Sam, and turned them to face the mirror. Her hands came up under my lovely lady's breasts, and hefted them gently. \"I think we have the wrong size here. I know he probably likes the 'overflowing cups' look, but it's not as comfortable as it could be.\" She spun Samantha around again, and tugged at the cups of the bra. \"When is the last time you were fitted?\" \n\n\"Fitted? For a bra? Never!\" Sam laughed. \"Trial and error. That's how I did it. I never thought I had an option to do otherwise.\"\n\n\"So I thought,\" Yvonne nodded. \"You're not alone. It's estimated that three out of four women are wearing the wrong size, and almost all of them feel the same way you do. The numbers are even higher among women such as ourselves, with breasts that fall outside what the industry considers standard. I suppose it's to be expected. Rather hard to please everyone, but it does seem a bit unfair to those of us who are packing more than a D-cup. What size did you wear in?\"\n\n\"36DD,\" Sam answered, plucking the garment off the hook, and handing it over. \n\n\"Not a chance,\" Yvonne laughed. \"You are no more a double D than I am! Before I was properly fitted, I wore a 34D. Actually, 'wore' is the wrong word. 'Confined by' would be more appropriate. I'm actually a 30F, by the way,\" she smiled, glancing at me out the corner of her eye. \"Just from looking at you, I would guess you're an F as well, if not more, but we'll let the tape measure tell us. Shall we?\" \n\nYvonne led the way, followed by Samantha, still wearing the ill-fitting bra, with me in the rear, out of curiosity. We went into the next room, and she drew the curtain. \n\n\"Okay, so here's the deal. When it comes to bras, things have changed. I suppose it had to, as women became prevalent in more and more areas of business. Men,\" she smiled, staring me down, \"have no fucking idea how bra sizes work. They focus on the number, as if that's the defining factor. Tell me, my friend... let's assume a woman actually measures 36-24-36...the stereotypical hourglass figure. What size bra does she wear?\" \n\nI wasn't biting. She was trying to show me up, but I have been on the Internet once or twice. \n\n\"Not enough information,\" I replied. \n\n\"Good answer,\" Yvonne smiled. \"There's hope for you.\" She turned, and unhooked the bra behind Sam's back, sliding it off. Sam giggled, and dropped it on a chair, glancing at me. She smiled. \n\nThere was something very hot about having my darling Sam standing topless in a room, with another woman handling her breasts, while I watched. Yvonne cupped the big globes, and squeezed them softly, causing Sam's eyes to flutter shut in pleasure. The nipples stood taller, and it wasn't from the air conditioning. \n\nYvonne fished a tape measure out of her pocket, and wrapped it around Samantha's ribs, just below her breasts. She sawed it back and forth a few times, sliding it up into the crease under the breasts. \n\n\"Inhale please,\" she said softly, and Sam complied. \"Now exhale. Good. Thank you.\" Yvonne noted the numbers on a pad of paper. \"Okay, arms up, please.\"\n\nShe moved the tape up, bisecting Sam's erect nipples, and took another measurement. That number was written down, and she moved Sam's arms back down, repeating the measurement. \n\n\"Lean forward, please. Try to get your back as close to level as possible,\" she asked, holding the tape loosely. Sam did, letting her big tits hang, as she often did in my face while riding my cock. Yvonne adjusted the tension on the tape measure, to just encompass the hanging globes without cutting in. That number was noted. \"Okay, just one more. Lie down please, on the table,\" she smiled, spreading the tape across the table. Sam laid down, and Yvonne took the last measurement. \n\n\"Alright. That should do it,\" Yvonne pronounced. \"Samantha, you really do have lovely breasts. They don't sag too much, despite their size. Hanging, they stretch out a bit, and of course, they spread when you lay down, but that's to be expected. They're pretty big! If breasts were solid, we wouldn't need to allow for the way they change shape in various positions, but they're not solid, are they?\" She bounced on her toes, jiggling her own perfect pair in response. \"If they were solid, we wouldn't need a bra at all!\" \n\nShe looked at the numbers on the paper, doing a few calculations. She picked up the lilac and lace bra, and walked out. \n\n\"Be right back,\" she called over her shoulder. \n\nSamantha rolled on her side, still virtually naked, and looked at me. \n\n\"Well, I don't know about you,\" she giggled, \"but I'm horny as hell. Who knew getting fitted for a bra was so arousing? She's got a very gentle touch. I think she's going to do well here.\" \n\nI didn't get a chance to answer, as Yvonne swept back into the room. \n\n\"Here you go. Try this one,\" she smiled, handing the bra to Samantha. \"This should be perfect.\"\n\nSam took the garment, and wriggled into it, looking in the mirror. Yvonne stood behind her, fastening the hooks, and adjusting the shoulder straps. \n\n\"Okay Yvonne, I'm officially impressed. This does fit perfectly, and it's so comfortable! You're a genius!\" Sam grinned. \n\n\"It's pretty simple, really,\" Yvonne nodded. \"Your ribcage measures just under 34 inches, so a 36 was waaaaay too big. Then there's the cups, which were waaaaay too small. You measure, on average, 7 inches larger around your breasts than your ribs. One inch per cup size... A, B, C, D, E, F, G,\" she smiled holding up seven fingers as she counted. \"Voil\u00e0. 34G, and now that you have the proper fit, you have even more options. You'd be surprised how much better other clothes look when things underneath are the right size.\"\n\nSamantha turned to me. I had to admit, she looked very good. The face-on, bulging boobs effect had been lessened somewhat... a regrettable loss... but as she turned, I saw what a difference it made to her profile. Those breasts projected further away from her body, no longer squished into cups that were simply too small. She looked bigger than ever, and my dick took notice. Sam glanced down, and saw the tent in my pants. \n\n\"I was going to ask what you thought, but I can see the answer,\" she giggled. \"Honey, could you get the other bras from the change room, and give them to Yvonne, so she can get me the right sizes.\"\n\n\"Will do,\" I smiled, and stood up, losing any camouflage my position might have provided for my erect state. Both women smiled as they saw it, and I heard the girl-talk starting as I left. Of course, it was hardly a long journey, being just the next room, and I was back with the other four bras in seconds, but I held back, just out of sight, but within earshot. A little harmless eavesdropping, couldn't hurt. \n\n\"... look very happy together. Have you been a couple long?\" Yvonne asked. \n\n\"Let's see. About ten months, all together. I just got divorced, and he's been reminding me that life goes on. He's the best thing that ever happened to me. I love him,\" Samantha replied, telling a total stranger our story. A total stranger who had seen her half naked, and held her breasts, but still a total stranger. \n\n\"Here you go,\" I smiled, stepping in briskly. I had heard enough, and handed the bras to Yvonne. Sam got a kiss. \n\n\"Alright. You go back to trying things on,\" Yvonne smiled back, \"and I'll exchange these for 34G sizes.\"\n\nSam took my hand, and literally dragged me back to the dressing room. Once inside, she drew the curtain. Her hand went immediately to the lump in my pants, and she wasted no time unzipping my fly. Seconds later, my cock was extracted, being caressed to full hardness by her hand. \n\nI'm sure the look on my face conveyed the mixture of arousal and alarm I was feeling. Arousal, for obvious reasons, and alarm because Yvonne would be back any second with the other bras. \n\n\"She said to enjoy,\" Sam purred, dropping to her knees. \"I'm going to enjoy this.\"\n\nHer mouth opened, and for the second time today, I felt those lips sliding down my cock. It was, as always, the most exquisite sensation, made more so by her beautiful eyes looking up at me, and the fact that we were in a semi-public place. I closed my eyes, and leaned against the wall. \n\n\"Here you g... Oh!\" Yvonne gasped, as the curtain flew open. Under normal circumstances, I would have tried to cover up, but Sam was sucking that reflex right out of my body. \n\n\"Is this what you meant by 'accommodating the situation', Yvonne?\" I asked softly, watching Sam's head bob gently on my cock. \n\nYvonne was watching, too, and her eyes never left my spit soaked shaft, smeared with Sam's lipstick, as she answered. \n\n\"Um, yeah. This is pretty much exactly the situation I meant.\" She made no move to close the curtain, or to leave, and the initial expression of shock melted away into one of lust and excitement. \"Mind if I watch for a while?\" \n\nWhat was I going to say? Yes, I mind? Please stop watching my lovely Samantha giving me one of her exceptional blowjobs, in public? Please stop making it even more erotic than it already is? I said nothing. Silence is consent, right? \n\nSo, Yvonne leaned against the door frame, and took in the scene. Sam barely acknowledged the presence of our audience, fully engaged in swallowing the last few millimetres of my shaft. \n\n\"She seems good at that,\" Yvonne observed. \n\n\"Good is something of an understatement,\" I moaned, my fingers tangled in Samantha's platinum mane. I turned my attention back to Sam, her lips clamped around the base of my cock. When she pulled back to take a much-deserved breath, I heard Yvonne moan.  \n\n\"Jesus! That's so hot!\" she sighed. I looked at her again, and saw her hand between her legs, her skirt bunched up around her waist. Her nipples were poking into the silky smoothness of her blouse. \"Nice cock, too.\"\n\nSam was diligently deep-throating my hard dick, drawing my orgasm ever closer. I tried to keep my attention on her, as it was only polite to do so, but Yvonne wasn't making it easy, openly masturbating mere feet away. Fate stepped in, and solved my dilemma. \n\nBing! \n\n\"Aww, shit!\" Yvonne cursed, knowing the bell meant another customer. \"Just when it was getting really good!\" She smoothed her skirt, and gave us a last glance, then went out to see who it was. \n\nI had no such concerns. The only person that mattered was currently moaning softly, sending vibrations up my cock. It tickled, and also felt fabulous, as always. I looked down at her, past her eyes and lips, at her new and improved cleavage, which appeared much longer from this angle. A final moan from her tripped the circuit. \n\n\"Fuck, Sam, I'm cumming!\" I gasped quietly, and began to squirt into her sucking mouth. She pulled back, locking her lips around the head of my cock, and stroking the shaft with both hands. \n\nThe curtain parted, and Yvonne was back, just in time for the climax of the show, such as it was. Sam wasn't showing it, simply swallowing my semen while mewling happily. \n\n\"Damn! I missed it! Was it good?\" Yvonne grinned. \n\nSam released me, letting my slowly wilting penis pop out of her mouth, while I slid into a seated position on the floor, breathing hard. \n\n\"I can only speak for myself,\" Sam smiled, licking her fingertips, and checking her lipstick in the mirror, \"but I'd say yes, it was very good. His cum always is. Delicious.\"\n\nYvonne looked down at me, with my expired dick still hanging out, glistening with Sam's saliva and the remnants of my cum. I gave her a weak thumbs-up signal. \n\n\"My boyfriend is really going to get it tonight,\" she giggled, and left us to finish trying on Sam's choices. \n\nI was a little fuzzy for the duration, sitting quietly on the chair, watching Samantha cycling through several outfits. Finally, she finished, and dressed for departure. \n\n***\n\nYvonne put Samantha's purchases in no less than four stylish pink bags, and handed them to me. \n\n\"Have a lovely day. Please come again,\" she grinned, clearly aware of the double entendre. \n\n\"Oh, believe me, he will!\" Sam giggled. \"You'll be seeing me again, that's for sure, and I'll be telling all my friends where to come for their undies from now on.\"\n\n\"Thank you. I really appreciate that!\" Yvonne smiled. \n\nLinked together at the arms, Samantha and I left the shop, and headed back in the general direction of the hotel. \n\n\"We need to make one more stop,\" she said softly, leaning against me closer. \"I didn't come prepared for all this, um, activity. We should get a bottle of lube, just to be sure, for tonight.\"\n\n\"Mmmmm, sounds promising,\" I laughed. \"Okay. You're the boss. After that last blowjob, I don't think I can find my way home without you.\" \n\n\"All part of my plan to become an indispensable part of your life,\" she giggled back. \n\n\"Well, it's working,\" I replied, stopping in place. Sam turned to face me, and placed a soft, loving kiss on my lips. We held each other for a minute, then continued our walk. \"So, darling... Which of your new outfits are you going to wear tonight?\" \n\n\"Let's just keep that a surprise, shall we? I didn't show you everything I bought,\" she smiled. \n\n\"Really?\" I asked, peeking in the bags.\n\n\"I'll take those, thank you!\" she gasped, snatching the pink bags from me. \"You just concentrate on walking.\" \n\nThat was about the extent of my physical skills at this point, so I nodded. \n\n\"Left, right, left, right, left...\" I muttered, plodding along. \n\n***\n\nThe elevator doors opened, and we once again stepped into the living room of our suite. \n\n\"I'm still astounded that this place exists,\" Sam smiled, \"and that it's ours for today.\" She put her four bags of lingerie, and the one containing the jumbo bottle of lube, on the bar. \"Now remember... No peeking!\" \n\nShe walked around to the other side of the bar, and perused the contents of the glass shelving. I could see her reflection in the mirror, looking at me thoughtfully, and she smiled. \n\n\"This should do,\" she said confidently, picking up the bottle of brandy from the shelf. \"The contents of the bar are included in the rate to stay here,\" she continued, \"so we don't need to worry about extra charges. I intend to stay very mellow for the balance of the evening.\" She poured herself half a snifter full, and swirled the glass, sniffing the contents. \"Yes, very nice.\"",
        "\"Is there a reason you need to stay mellow?\" I asked. \"I'm not getting on your nerves already, am I?\" \n\n\"Heavens, no!\" she giggled, taking a sip. \"It's a surprise, darling. Just trust me. All will be revealed soon enough. For now, I'm going to have a long soak in the tub. You can join me if you like? Or maybe a bit of a nap would serve you better. You're going to need your energy.\"\n\nSince I was pretty sure she didn't have a hike in the mountains in mind, her admonishing statement about conserving energy was intriguing. I had a feeling there was a bed involved. \n\nSam disappeared into the bathroom, and I laid back on the comfy leather couch, flipping the TV to something mindless. I was asleep soon after. \n\nI don't have any idea how long I was asleep, but I was wakened by soft lips on mine. I opened my eyes to see Samantha's green orbs looking back at me. \n\n\"Hi, baby,\" she smiled, standing up as she did. She was clad in one of the thick, soft robes from the bathroom. She walked slowly over to the bar, and refilled her brandy. \"I'm all ready for you.\" She raised her glass in a toast. \n\n\"How many of those have you had?\" I asked. \n\n\"This makes three,\" she giggled, \"but it's for medicinal purposes. You see,\" she nodded, unwrapping herself, \"tonight, you're going to fuck my ass!\" \n\nThe robe hit the floor, revealing my luscious, if somewhat drunken Samantha, wearing nothing but a fishnet bodysuit, red in colour. It covered her from her toes to her neck in a coarse but silky mesh that accentuated her curves, and was crotch-less, of course, giving me access to both her holes. One of her secret purchases. \n\n\"Honey, we don't have to...\" I began, but she just waved me off. \n\n\"Alex, my love, I know we don't have to, but I want to,\" she smiled. \"I love it when you finger my ass, and I really want you to fuck me there, but I'm afraid it will hurt. I don't know if you've noticed this, but your cock is much, much bigger than your finger. So, I'm taking measures to dull the pain.\" \n\nShe was back in front of me now, and straddled my lap, lowering herself into a kneeling position. She pressed her breasts against my face, rubbing her stiff nipples, which were poking through the fishnet, across my lips. \n\n\"Darling, I am all yours, every inch of me, inside and out. Every opening, every bit of me. I trust you absolutely, and I know you don't want to hurt me, but I also know you'd just love to bury that big dick of yours, all the way up my ass,\" she purred, grinding her body against mine. \"I have friends who have done it, and they say it's great, so I want to try it. I know I'm drunk, but not so drunk I don't know what I'm doing. Come on Alex, let's climb onto that giant bed, get those clothes off, and get to it.\"\n\nShe stood, gathered her balance on her heels, and sauntered away, swinging her hips seductively. \n\n\"I should warn you of one thing, though,\" she paused, at the doorway. \"Brandy makes me loud, and insatiable.\" She completed her stroll, and vanished into the bedroom. \n\nLoud, and insatiable? Hmmmm. What a problem to have. She was right about me wanting to fuck her ass. I was going to enjoy this. \n\nI stripped, laying my clothes neatly on a chair in the living room. Sam was right about us looking wrinkled tomorrow, too, and my cock was confirming her opinion about my desires. I swear, it grew even harder when I reached the doorway, and saw Samantha.  \n\nThere she was, leaning back against the padded headboard of the bed. Her right hand held the brandy snifter, which was nearly empty. The left was busy between her legs, jamming three fingers into her pussy, which was making wet, sucking noises as she did. Her eyes were on my erection, and they were ablaze. \n\n\"Ooooo, Alex, yes! That's what I want! Come! Give me that big cock! Fuck my pussy first, as a warmup!\"\n\nNote to self... Keep a supply of brandy on hand. She was hot enough without it, but with it she was, as she said, insatiable. Insatiable was a good thing. \n\nShe arranged herself excitedly on her back as I approached, spreading her legs wide. \n\n\"Mmmmm, such a nice, big bed, and the mirror is so exciting. Oh!\" she gasped. \"Idea!\" With that, she jumped up, and ran out the door, only to return a minute later with two items in her hand. She opened our closet, and retrieved two more, leaving her with four ties from the robes supplied with the suite. She threw them at me and jumped anxiously back onto the bed. \n\n\"Tie me down! Use the bed posts, and tie me down! Then you can fuck me, any way you want to. Oh god, yes! Please tie me down, honey! Spread out on the bed, at your mercy! Oh fuck! Do it! Do it!\" She spread her arms and legs wide, virtually vibrating with excitement. \n\nOkay. Add a very kinky side to the attributes revealed by brandy. No complaints, here. \n\nI made four loops in the robe sashes, and put one on each limb, stretching her wider as I tied her to the posts. I pulled them snug, then looked at her, gazing up at herself in the overhead mirror. Her breasts were heaving with her excited breathing, and she was squirming against the restraints. \n\n\"Oh no, please, don't hurt me,\" she panted. \"Please. I'll do anything you want, just don't hurt me.\"\n\nI suppose it just proves the theory that all women have a fantasy about being taken against their will, or at least in a simulated fashion. No woman really wants to be raped, but the idea of forced surrender holds an appeal. I could play along, for her benefit. \n\nMine, too. \n\n\"Nice tits, lady,\" I growled, groping her chest with one hand. The other hand went between her legs, probing her sodden pussy. \"Mmmmm. Nice cunt, too. I'm gonna like fucking you.\"\n\n\"No, please don't, I'm begging you. Please don't,\" she panted. \"No!\" \n\nI laid atop her, pressing down on her with my weight, retraining her further still. She twisted her face away, not wanting to look at me, or let me kiss her. I put one hand to her throat, making her freeze, while the other hand guided my dick into her. \n\n\"Oh, yeah, very nice,\" I grunted, pushing deep inside her. \n\n\"No... No, please... No. Please stop,\" she breathed. I started to fuck her harder, and she yelped. \n\n\"Go ahead, lady, scream. No one can hear you. Make all the noise you want,\" I told her, pounding into her body furiously. With her arms and legs tied wide apart, her breasts were going crazy, wobbling and shimmying wildly. Her blonde hair was flying about her face, obscuring her eyes on occasion, and she was screeching her resistance loudly, but those eyes, when visible, told another tale. Samantha was about as excited as she had ever been, even when she knew her daughters were listening to us fuck rambunctiously a few days ago. \n\nHer first orgasm arrived, causing a scream which she had difficulty keeping in character. She wasn't supposed to be enjoying this, but obviously was, and grunted through the waves of pleasure. \n\nI grabbed her by the hair, as gently as I could while still playing the role of aggressor. I made her look at me while I fucked her. \n\n\"You like this, don't you?\" I snarled. \"Admit it.\"\n\n\"No! No! Get off me!\" she begged, contradicting her eyes. \n\nNow, obviously, having her tied spread-eagled on the bed meant I could do anything I wanted to her, but it also meant my position choices were limited. What I could do, however, was vary the angle of my strokes, so I shifted higher on her body, and made my thrusts in a slightly more vertical fashion, rather than the horizontal path I had been using. It brought my hard shaft more into contact with her clit, and drove her crazy. \n\n\"MmmnnoOOOO! STOP! PLEASE DON'T! NOOOOOOOOO!\" she screamed, at the top of her lungs, proving that brandy really did make her loud. The insatiable part was still unproven, but looking likely. I kept drilling down into her, bouncing her off the mattress with each furious stroke, and punishing her clit repeatedly. Sam came again, and again, and again, and with each one, she grew more vocal, until she finally couldn't hold it back anymore. \n\n\"OH GOD... FUCK ME, YOU MISERABLE BASTARD! FUCK MY CUNT WITH THAT HUGE COCK! GO AHEAD AND TAKE ME! FUCK MY CUNT! FUCK ME HARDER! DON'T STOP! DON'T FUCKING STOP! I'M CUMMING AGAINNNNN!\"\n\nI continued slamming into her receptive cunt, and she kept screaming, as she kept cumming. Sweat beaded on her forehead, and her nipples stood taller than I'd ever seen them, turning purple with engorgement. Her pussy was awash with juices, soaking both of us in her delicious syrup, yet still she screeched for more. \n\nI pulled out of her, and watched her breathing hard. Her pussy was red, and abused, but oozing enjoyment. Time for the main event. \n\nI untied her left leg from the bed post, and lifted it high, tying it to her left wrist loosely. The right leg followed, and I cinched them tighter. She was spread wide open, and held in a folded position that let me get to both her pussy and ass. \n\n\"Mmmmm,\" I moaned, tasting the frothy juices that were dripping from her pussy across her tight little ass. I inserted one finger into her back door. \n\n\"Oh fuck, no! Please don't fuck my ass!\" she squirmed, reverting to the unwilling participant role. \"No! Please don't!\" \n\nRole playing aside, I didn't want to hurt her. It was time to lube her liberally, and I grabbed the bottle from the bedside table. I squirted a large blob onto her sphincter, and fingered it into her, holding her ass open with two fingers while I squeezed more directly into the hole. She moaned, and struggled to free herself, but she wasn't going anywhere. \n\nI was ready. My cock was greasy, and eager to go. I hoped the brandy was doing its job, and pressed the head of my erection against her little pink target. \n\n\"No! No! Please no!\" she gasped, as I pushed harder, until her butt hole relaxed, and my cock slipped inside. \"GnahhnNO! OH MY GOD! OH FUCK!\" \n\nSam's ability to stay in character was short lived this time, as she immediately changed her tune. \n\n\"OH MY FUCKING GOD! YES! FUCK MY ASS! JAM THAT BIG FUCKING COCK UP MY ASS! YES! YES! DEEPER! FUCK MY ASS DEEPER!\" she shrieked, trying to press her hips upward, and force more of my shaft into her slippery butthole. \n\nThere's something different about fucking a hot woman's ass. I don't know what it is, really, other than the initial tightness, that makes it so exciting. Visually, it always had a special appeal, the way the lack of lips made it look like my cock was just disappearing magically into her ass. Seeing her pussy gaping open, vacant added to it. Whatever the reasons of the individual, anal sex was a hot topic. \n\nI leaned over Sam's contorted body, and pushed the full length of my cock inside her, causing a deep groan of agonized enjoyment from her. I pulled back, and repeated the stroke. She repeated her groan. \n\n\"Ohhhhhhhhhhhhhhh yeah, that's it, honey. All the way up my ass! God, I'm stuffed so full! It feels wonderful! Now, FUCK ME! DON'T HOLD BACK! JUST FUCK MY ASS, HARD AND DEEP! I LOVE IT!\"\n\nPerhaps the brandy was playing a part in Sam's comments, but she wasn't complaining, so I took her at her word, and went at it, drilling her back door eagerly. \n\nIt didn't take long for her to cum, for the first time, from anal penetration. Her whole body quivered, and her face contorted into a mask of ecstasy, while she screamed \"YES!\" over and over. Her second anal orgasm was quick to follow, especially when I used my thumb on her clit, and when I slowed my rhythm to gather energy, she looked up at me. \n\n\"Let me loose, honey,\" she said softly, looking into my eyes. \"I want to participate more, and hold you.\" \n\nI suppose the restraints were no longer needed. The role playing had played itself out, and she no longer needed to pretend she wasn't enjoying it, so I pulled out, and began to untie her. I noticed that her ass remained open wide for a few seconds as I did so. \n\n\"Oh, that's better,\" she groaned, lowering her legs gently, and flexing them a few times. \"I guess I'm not quite as flexible as I used to be.\" She held her arms open, and invited me back in. \n\nI plugged into her rear socket again, and she wrapped her legs around my waist, pulling me deep. Her arms loosely draped my neck, and she gazed up at me with obvious love in her eyes. \n\n\"Yes, this is much more comfortable. Strange to say that with a giant dick stuffed up my ass, but it's true,\" she smiled. \"So, now that my legs are no longer numb, get to it, stud. Fuck my ass hard!\" \n\n\"Yes, Ma'am,\" I saluted, and picked up my pace, going from 'gently probing' to 'anal assault and abuse' instantly. All the lube, both her own natural juices which abundantly soaked the outer areas, and store bought, made her ass a buttery smooth recipient of my hard cock. It felt fabulous, and I was glad she was enjoying it. I was also glad we were alone on this floor of the hotel, because she was, as promised, loud. And filthy. \n\n\"MutherFUCKER! GOD, YES! FUCK MY ASS! YES! IT'S SO GOOD! STICK THAT BIG COCK WAY UP MY ASS! OH YES! OH YES! O-H Y-E-S-S-S-S!\" she screamed, as another orgasm hit her. She clutched me tight, wrapping me in an embrace of arms and legs that spoke of her emotions, in ways her words couldn't. I glanced at her, and saw her eyes locked on our reflection above, taking in the sight of us in blissful action. \n\n\"From behind,\" she smiled. \"Do me from behind. I love it in my pussy like that, so I bet my ass will be great, too. Let me up, so you can doggy-fuck my butthole.\"\n\nI lifted off her, and she quickly positioned herself on all fours. Her greasy, abused asshole looked sore, but she was asking for more, so I planted my shaft deep inside her once again. \n\n\"Oh, fuck, yes, that's the spot,\" she groaned. \"Finish for me, baby. I want to feel you shoot that hot cum in my ass. Fuck me, and let's cum together.\" \n\nI had a grip with both hands holding her sexy, narrow waist, and pulled her back to meet my thrusts. It was pretty hot, watching her rump shake inside the red netting as I slammed into her. There was a mirror behind the dresser, and I caught a glimpse of her big breasts swinging in the confines of the fishnet as well. As always, I found the sight extremely exciting, and it made the sensation of her ass around my cock even more so. \n\n\"Getting close, baby,\" I told her as I pounded her furiously. \n\n\"Not YET! OH FUCK! JUST A LITTLE MORE! PLEASE, JUST A LITTLE BIT MORE! FUCK ME! FUCK MY ASS! THAT'S IT! NOW! CUM IN ME NOW! DO IT, I'M CUMMING!\" she screeched, tossing her head back. \n\nShe gave me the go-ahead, just in time for me to pump a load of sticky semen deep inside her bowel. We both groaned in unison at the feeling, and Sam dropped her chest to the bed in exhaustion. We both gasped for air. \n\nMy spent noodle slipped from Sam's ass, and I leaned back on my haunches to catch my breath. Once free of my grip, Sam's body flopped down flat on the mattress, and she groaned softly. \n\n\"Damn, that was good,\" she giggled. \"And watching us in the mirror was so fucking hot! We might have to get one, for our bedroom.\"\n\nOur bedroom. Yes, I definitely liked the sound of that. \n\n\"Ooooo, I think my ass is broken!\" she moaned as she rose to her feet, and staggered toward the bathroom, combing her hair with her fingers as she went. It took a few minutes for her to return, and when she did, she was gingerly freeing herself from the sexy red fishnet. It only took a minute, until she was naked and smiling as she slid into bed beside me. \n\n\"First of all,\" she giggled, snuggling under my arm, \"that was fantastic! I'm not saying I could take you in my ass every day, but I liked it, and I think we can do it that way again. Maybe a couple of times a month, if you like.\" \n\n\"We'll see how your butt feels tomorrow,\" I smiled. \n\n\"Second, I hope you know the whole 'miserable bastard' thing was just role playing. It came out a bit harsh. Forgive me?\" she asked softly, caressing my chest. \n\n\"Of course, darling. I may have been a bit rough. I didn't hurt you, did I?\" I apologized, kissing her head. \n\n\"Only the part I wanted hurt,\" she smiled, looking up at me. \"Oh my god, your cock felt gigantic in my ass! It hurt, but also felt great after a few minutes. I've never felt so full, and when you thumbed my clit, while you were buried deep inside me, well, wow... that was one huge orgasm, baby. Thank you.\" \n\nWe shifted our positions, until we were spooning, and I had her wrapped in my arms, stroking her breasts gently. \n\n\"I can feel the brandy working on me now, honey, and I'm going to fall asleep soon, but before I do, there's one more thing I'd like to talk about,\" she said softly. \n\n\"Go ahead,\" I replied, holding her close. \n\n\"Alright. It's about the offer Chloe made, before she went home. About having our baby.\"\n\nOh. That. Hadn't given it a second thought. \n\n\"Go ahead,\" I repeated, squeezing her tighter. I wasn't sure what to expect from Samantha on the subject. It worried me a little. \n\n\"Well, the three of us had a good talk on the way to the airport,\" Sam said evenly. \"She was very serious, which for Chloe is enough to get my attention, as she so rarely takes anything seriously. Her offer is legitimate. If we want to have a child, she will carry it for us. She'll move back home, and live with us during the pregnancy, and as long as the baby needs her around.\"\n\n\"Wow. She really thought it through, didn't she?\" I replied. \"Of course, it only applies if we want a child, and I'm not really sure if it's necessary.\"\n\n\"No decision required right now, but it's nice to know we have her on our side, if need be, and it does solve one issue that's been bothering me a little,\" she whispered, and turned in my arms. Her eyes found mine, and there was a certain amount seriousness there. \"Alex, I'm forty-seven years old, and we may have made the decision to ignore our age difference, but that doesn't mean it doesn't exist. There's no avoiding the reality of it, and the longer we are together, the greater the impact of that reality will be.\"\n\nI suppose she saw the look of concern on my face, and wanted to quell my fears. \n\n\"Honey, don't worry. I'm not saying I don't want us to be together,\" she smiled, stroking my face lovingly. \"There's no way I'm letting you go now, after you've got me hooked on sex again, and made me feel loved once more. I love you, there's no doubt about that, so put away the sad look. I'm just thinking of the longer term, and I want you to be as happy in twenty years as you are now.\"\n\n\"I'm not sure I understand what you're suggesting,\" I shook my head, confused. \n\n\"I'm not sure I do either,\" she smiled. \"It's kind of a work in progress, in a way. I guess I'm suggesting that Chloe and Cassie may both be more involved in our lives than normal.\"\n\n\"More involved? Besides the obvious?\" I queried. \n\n\"Maybe. Believe me, after all the shit I went through with Frank, I never thought I'd be entertaining the thought, but...\" she paused, and bit her lip. \n\n\"Sam? I still don't understand,\" I laughed. \"What are you saying?\" \n\n\"Alex... This is really difficult for me. You know how much it hurt me when Frank betrayed my trust, and I'd like nothing more than to have you all to myself forever, but our situation is unique, and calls for a unique solution if we're both going to stay happy. Besides, if I can't trust you, and my own daughters, who can I trust,\" she rattled off nervously. \n\n\"Samantha, are you saying what I think you're saying?\" I asked her, suddenly putting the pieces together. I tried not to smile at the prospect, just in case I was reading it wrong, but it was tough to hold it back. \n\n\"Yes,\" she smiled, easing my tension, and softly touching my face again in a gesture of love and trust. \"I'm giving you permission to have sex with my daughters. It's still up to them, individually, whether they want to or not, but I think they've both made their feelings for you quite clear. It solves the children issue, if that's what you decide, and I think the three of us should be able to keep you happy. I'd rather we be open and up front about everything, and if I have to share you with another woman, well, at least it's with someone I love.\"",
        "Part of me wanted to do a backflip of joy, but it was a very small part. The prospect of having to be around those two sexy, voluptuous, younger copies of their mother, and treat them as family, was one I had dreaded. It worried me, as I didn't want to hurt Samantha, and could see how easily things could get out of hand. Now, that danger had been diffused, and while I wasn't planning on immediately bedding the girls, it made that possibility a whole lot more appealing. Still, I wondered what had driven Sam to make that conclusion. \n\n\"Sam, honey, I don't know what to say. Why?\" I asked her. \n\n\"Oh god, I don't know!\" she giggled, exasperated. \"Like I said, I'd like to keep you to myself, and I'd hope that I'm enough for you, but the fact remains unavoidable. You're so young, and I'm not.\"\n\n\"You felt pretty young today... skipping work, blowing me in a public place, while someone watched, getting tied to the bed, and taking it in the ass,\" I countered, and watched her blush at the recap. \n\n\"Yes, it was fun, every bit of it, but we both know every day can't be like that,\" she explained. \"I guess I'm just trying to look after all possibilities. Frank hurt me, badly, by cheating... There's no excuse for his behaviour, but it did make me think about things differently. In the end, I decided it wasn't so much the sex with other women that hurt me, as it was the lying. The deceit and disrespect are what really hurt.\"\n\n\"I would never do that to you,\" I told her. \n\n\"I know, I know, and that's part of it. You're a good and honourable man. That's why I love you, among other reasons,\" she smiled, pressing her body against mine and giggling happily. \"As long as I know about it, it's okay with me. Today, with the mirror up there, was like seeing you with someone else, in a way. It's actually kind of hot. I wouldn't mind watching.\" \n\nSo, that's how the best day of my life got even better. We talked a little bit more, but the brandy did eventually claim Samantha, and she slept in my arms peacefully, leaving me to mull over the possibilities. \n\nAnd what possibilities they were, but I think that's another story. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThanks for waiting, and for reading. I think we have another chapter or two with this group, but this is a good place to pause, and catch up with some others. \n\nShall it be Grace and Brian? Savannah and Nick? Brosie and Hank? \n\nI'll start work, and you tell me your choices."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "blonde",
        "older woman",
        "big tits",
        "lingerie",
        "public blowjob",
        "younger man",
        "anal sex",
        "love",
        "romance",
        "trust"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/on-the-train-ch-05"
}