{
    "title": "Wheels In Motion Ch. 02",
    "pages": [
        "*** This series was awarded the Most Literary/Genre Transcending award in the . Thank you to all my readers and all who voted. ***\n\nHello friend, and welcome to Chapter Two of my series, Wheels In Motion.\n\nIf you haven't read Chapter One yet, that's going to be a problem for you here. Fortunately, you have the power to go fix that right now! Go ahead, I'll be here waiting when you get back. Done? Okay, carry on!\n\nSpecial thanks to my editor, AwkwardMD, and my beta-readers Salandar and ArmyGal33. This chapter would be a lesser work without their help.\n\nI hope you enjoy. Leave me a comment if you care to.\n\n~~ George Washington Hospital, Washington DC, March ~~\n\nAnytime I got called out to meet a client at George Washington University Hospital, it always tugged my emotions in two directions. On the one hand, being summoned to the hospital meant there was a woman in trouble, one who had likely been beaten by her partner or had an abusive husband she needed help getting away from. Most of my work as an attorney for Lampedo Women's Legal Services was child support cases, divorces for indigent women, or for women whose husbands had done a really excellent job of cutting them off from their jointly-held finances before starting a divorce. Sometimes I handled restraining orders or victim advocacy with the district attorney. Most of that work could be done out of our office on Seventeenth Street or at the city courthouse. The fact that I was going to GW meant some woman's partner had probably hurt her, which made me feel horrible, but helping women in these situations was one of the reasons I signed up for this gig.\n\nOn the other hand, chances were good I'd get to see my friend Liz, which always brightened my day.\n\nI never knew her exact schedule; it changed every single week, but given the number of hours she worked she was literally more likely to be in the E.R. than not. I could never get my head around how much she worked. Since I'd come to LWLS, I'd started working more hours per week than I had on Capitol Hill, but that was nothing like what medical residents went through. It seemed designed to break a person, but Liz almost never lacked for a smile.\n\nAt the front desk I was told my client had already been admitted upstairs, so I went up to her room to introduce myself. I listened to her story and discussed her options with her. Same story, different day. Her husband had come home drunk and ended up taking out his frustrations on her.\n\nUnfortunately, she seemed to still be in the denial stage, blaming herself for her black eye and her dislocated shoulder rather than the man who had given her both. She didn't want to see the pattern of abuse, and wasn't interested in a restraining order or trying to get away. Yet. It usually took a few incidents before they got ready to pull the trigger. Sometimes they never got to that point before the chance to make that decision was taken from them.\n\nI ended up leaving my card with her and urging her to get help in the form of counseling and, failing that, left a pamphlet with the address for several women's shelters.\n\nI took the elevator to the main floor and walked into the E.R. The evening receptionist recognized me and buzzed me through the door from the waiting area after I flashed her my hospital ID. Down the hallway at the nurse's station, I ran into another familiar face.\n\n\"Hey Kat! How's it going?\"\n\nKathryn Hayden spun around in her chair and smiled. \"Addison, hey! Don't take this the wrong way, but we should meet up outside of work. Anytime I see you it means it's bad news for some woman.\"\n\n\"I was just thinking about something like that myself. I try to think that anytime I'm here, some woman is getting the help she needs rather than someone's been beat up.\"\n\n\"That's a much better way of thinking about it,\" she agreed with me.\n\n\"Is Liz around?\"\n\n\"I think she's in O.R. Two. We had a GSW come in about a half-hour ago. She's in there with Dr. Salvatore.\"\n\n\"I swear, you medical folk use more acronyms than we lawyers use Latin. What's a GSW?\"\n\nKat made a face. \"Gunshot wound.\"\n\n\"Oh...\" I said in a small voice. \"Maybe you should just tell her I came by.\"\n\n\"Well, hang on a second.\" She picked up the phone and made a call. \"Hey Gina, is Dr. Charles still in Two? ... Okay, thanks.\" She hung up, turned back to me, and pointed over my shoulder. \"She's just getting out now actually. Go down that hall there, take the second left. There's a locker room. You'll either catch her going in, or you can wait for her to come out if you miss her.\"\n\n\"Thanks, Kat. Oh, by the way, I'm still trying to run into your wife! I keep hearing she's the best litigator in the organization. I want to see her in action sometime, I'm always looking for trial tips.\"\n\n\"I'll tell her you said so. Catch you later.\"\n\nI followed Kat's directions, made the second left, and froze as I rounded the corner. Liz was sitting in her wheelchair outside two big, swinging doors labeled 'O.R. Two', slumped over motionless, facing the wall with a thousand-yard stare. She had a huge splotch of blood on her shoulder, and both the legs of her scrub pants and her sneakers were drenched in scarlet.\n\n\"Liz!\" I ran over and skidded to a stop in front of her. \"Liz, are you okay?! Are you hurt?!\"\n\n\"Hmmm?\" She shook her head and looked up, taking a second to focus on my face. \"Oh, hey! What's up?\"\n\n\"Forget about me! Are you okay?\"\n\nShe answered just before panic overcame me. \"What? Oh...\" She looked down at the crimson mess on her scrubs. \"No, th-this isn't mine.\" She shook her head again, and this time, when she looked at me again, she seemed more present. \"Sorry, it's fine. This is from a patient. I need to change actually. Come on, we can talk in the locker room.\"\n\n\"But--\" I started, but she'd already grabbed her wheels, given herself a push and was gliding across the hall to a door labeled 'Staff Lockers - Women'. She pushed the handicapped button to swing the door open and I followed her into the locker room. She rolled up to a big plastic bin labeled 'biohazard' and started stripping off her clothes and throwing them in the bin.\n\n\"Liz, what happened?!\" I asked.\n\n\"Gunshot victim. Had to do an emergency thoracotomy, and his aorta popped... kinda all over me. I had a face shield and gown, but it was like getting hit with a hose.\" She leaned down, pulled off both her sneakers and socks and dumped them in the bin.\n\n\"Oh. Is he going to be okay?\" I asked.\n\nShe didn't look up. \"No, he's dead. He died about four minutes ago.\"\n\n\"Oh Liz, I'm so sorry. Are you okay?\"\n\n\"I'm fine,\" she said, flatly.\n\n\"Uh huh, sure... You're fine. Can't look me in the eye. You're half-naked and it doesn't seem to bother you, and your underwear has blood on it by the way.\" I pointed at the shoulder strap of her sports bra. She looked down at where I'd gestured.\n\n\"God dammit! This was one of my most comfortable bras! Fuck!\" She whipped it off and slammed it in the bin. \"Hand me those wipes!\" she said, pointing to a Clorox wipes dispenser on the counter next to me. She snatched them out of my hand and started angrily wiping one over her naked shoulder.\n\nI averted my eyes until she had grabbed another top from a stack of scrubs on the counter and yanked it over her head. She kept up a litany of curse words under her breath. Some of them seemed to be in another language. She jerked fresh scrubs up her legs, then started trying to work them up under her butt, making sounds of frustration.\n\n\"Liz... Liz...\"\n\nShe ignored me, seemingly having detached herself from the present again.\n\n\"Liz!\" I yelled at her.\n\nShe stopped trying to get her pants in place and looked up at me. \"What?!\" she snapped.\n\nI knelt down next to her chair. \"Liz, I'm sorry your patient died.\" I leaned forward and hugged her, pulling her head onto my shoulder. She was stiff at first, then lifted the arm I didn't have trapped against me and wrapped it around me, pulling us tightly together. After a minute she drew in a deep shuddering breath, then let me go.\n\n\"Thanks. Sorry I popped my cork,\" she said, as she righted herself in her chair. \"I just get so mad. I lost people when I was in Afghanistan. I mean, most of the time I wasn't sure what the fuck we were fighting for there, but at least we called it a war. It just seems so... stupid, people shooting each other in the middle of a city where people are just trying to live their lives. I never even find out what the reason is most of the time. But what could be worth it? Drugs? Some stupid robbery? A fucking argument?\" She jerked her thumb towards the O.R. across the hallway. \"That guy probably wasn't even twenty-five years old, and now he's dead. For what?! It's even worse when it's a woman, because eight times out of ten it was her boyfriend or husband who shot her. It's just so goddamn dumb!\"\n\n\"I know. I'm sorry,\" I said.\n\nShe finished getting her pants in place then rolled over to a locker. She opened it, pulled out an extra pair of shoes and socks, leaned over in her chair and started pulling them on.\n\n\"When you were swearing a minute ago, I didn't recognize a lot of the words.\"\n\nFor a moment, her eyes became distant, and the edge of her lip curled up slightly. \"There was an old lady at the market outside our base who took a liking to me. Taught me how to swear in Pashto.\"\n\n\"Well it certainly sounded impressive.\"\n\n\"Right? It's just as satisfying as swearing in English, and I can get away with it in the E.R., but snarl 'fuck' one time in front of Dr. Chandra?\" She winced. \"By the way, never, ever say 'fuck' in front of Dr. Chandra.\"\n\n\"Noted,\" I laughed.\n\nShe clipped her badge onto her new top threw her stethoscope over her neck. She gave her upper body a visible shake to gather herself, then rolled towards the door.\n\n\"Do you have time for coffee?\" I asked, as I followed her out into the hall.\n\n\"No, we're stacked and packed tonight. I gotta get back to it.\"\n\n\"Okay. When's your next free night?\"\n\n\"Tuesday, I think.\"\n\n\"That sucks. I was hoping you could go out with me and meet some of my friends Saturday night.\"\n\n\"Well, I'm free Saturday morning. If it's not raining, I'm going to get some miles in if you want to come.\"\n\n\"If it is raining, brunch somewhere instead?\"\n\n\"How about at my place?\" she said, with a smile. \"I need to do a ton of laundry.\"\n\n\"Sounds good! Text me Friday night and let me know.\"\n\n~~ Arlington County Courthouse, Arlington, Virginia ~~\n\nMeeting Liz's friend Megan didn't start off quite as I'd expected. I had a free afternoon on Friday and had heard she was going to try a custody and child support hearing in Arlington. My boss Mary Jane Stamford, the head of litigation for LWLS, suggested we go watch.\n\nWe were talking in the hall outside Courtroom D in the Arlington County Courthouse when I heard a girlish voice behind me.\n\n\"MJ, what're you doing here?\"\n\n\"We came to watch the master in action,\" MJ said past my shoulder.\n\nI turned and found myself face-to-face with a woman in a light grey suit. She could have been in her mid-thirties, but something about the way she carried herself gave the impression of being much younger. She had shaggy black hair like a teenage wanna-be rock star, a silver stud in her nose, and when she laughed at MJ's greeting she showed huge dimples. This giggly woman certainly didn't look like the agency's best litigator. She seemed like she'd be more at home as a cocktail waitress. Or working in a children's toy store.\n\n\"Always happy to have an audience!\"\n\nMJ turned to me. \"Megan, this is Addison Wagner, she joined the DC team two months ago. She's been wanting to meet you, she's--\"\n\n\"Addison! You're Liz's friend, right? I've heard so much about you, it's great to meet you!\" She reached out, grabbed my hand, and shook it furiously. She was smiling so hard, and her dimples got so deep, I could almost see through her head. \"I'm so happy Liz made a new friend, you have no idea. She doesn't get out much!\" She giggled again, and I started worrying for whomever her client was.\n\n\"It's nice to meet you too,\" I said. \"I've just started trying cases myself, so I'm always looking for pointers.\"\n\n\"It's all in the prep work! I'd be happy to talk about trial strategy or anything you want sometime.\" She half-turned, and the smile lines around her eyes crinkled. \"Oh, hey, here's my client. Catch you afterwards, MJ?\" She actually skipped away from us, swinging her briefcase, to greet a woman who looked to be just about the hardest forty years old I'd ever seen.\n\n\"MJ, I hope you won't be offended, but that... girl... doesn't seem like the shark I've heard about.\"\n\n\"Just wait until the gavel drops.\" MJ chuckled, and led me into the courtroom.\n\n\"All rise!\" The bailiff called the court to order as we found seats in the gallery.\n\nThe opposing counsel was a slick-looking man in a charcoal grey suit. The proceeding started with some housekeeping and scheduling motions, and then after the preliminaries were out of the way he made a motion to dismiss some of Megan's client's filings.\n\nMegan systematically demolished him. I'd been in court numerous times for one reason or another since passing the bar but I'd never seen a performance like that. She had a counter-claim for every one of his motions with supporting evidentiary documents ready, or precisely cited a precedent supporting her position without even glancing at the papers spread out on the table in front of her. Within minutes the other attorney was so flustered he started raising his voice, which caused the judge to slap him down, which caused him to get even more flustered. The giggly, girlish person I'd met in the hall had been replaced with an almost scarily implacable... shark for lack of a better descriptor.\n\nHer face was utterly professional, her demeanor utterly competent. She just kept going at her opponent, never giving him a moment to gather himself, and countering every issue he raised as if she'd read the contents of his briefcase the night before the hearing. By the end, she'd gotten three of her opponent's motions thrown out and it was clear the judge was likely to rule her way on everything else. As the judge left the court, the soon-to-be ex-husband turned and started furiously whispering in his lawyer's ear while Megan and her client smiled at each other and walked down the aisle and out of the courtroom.\n\n\"Well, that went pretty good! Did you see the color his face turned at the end?\" Megan said, laughing in the hallway after she'd said goodbye to her client. The giggly girl was back. She looked at her watch. \"It's three-thirty. Too early for happy hour, MJ?\"\n\n\"Not after that performance, Megs. C'mon. I'll buy.\"\n\nWe went to the Four Courts bar one block over from the courthouse, and found a quiet table in the corner.\n\n\"So, the new model we've implemented in DC seems to be working pretty well,\" MJ was telling Megan, \"We'll probably start rolling it out to the Virginia and Maryland offices soon.\"\n\n\"Having dedicated attorneys for each hospital does sound like a good idea in theory, but you're going to need more lawyers than we have now in Virginia. We have more hospitals in Arlington alone than you do in DC,\" Megan said, following a sip of her Macallan; at least she didn't drink like a teeny-bopper. \"Then you throw in Fairfax and Prince William counties, plus we've been talking about expanding services out to Loudon.\"\n\n\"Not to worry. Our fundraising is way ahead of schedule this year with those two angel donors we scored last month. We'll definitely be able to hire up as needed. Speaking of which...\" MJ paused to finish her coffee. \"I have to get back to the office for an interview with a newly-minted barrister from Georgetown Law. She graduated sixth in her class, and for some reason doesn't want to make mid-six figures starting in New York City, so I need to snap her up quick. Addison, I know you're on call this weekend, so you can be done for the day,\" she said, smiling at me.\n\n\"Thanks, boss. I got the drinks,\" I said, waving her off when she pulled out her wallet.\n\n\"Don't expense it, I'll catch you,\" MJ teased as she left.\n\nMegan stopped the waiter, ordered a plate of potato skins, and then turned to me. \"So, what's the scoop with you and Liz? Dish, girlfriend!\"\n\nI blinked. \"Uh... scoop? What do you mean.\"\n\nShe smirked at me. \"I mean the scoop! Liz says you guys are just friends. True? Not true? She said you're gay.\"\n\n\"Yeah...\" I said slowly, \"and she's not.\" I was rather stunned at Megan's abrupt conversational turn and how fast she'd aimed it on me.\n\n\"I know, I know, that's what she says. That's what Kat says, too. And if she is, good for her, I never hold anyone's sexuality against them.\" She smirked again. \"I've only known her for a little over a year, since her residency started. But that whole time I've never seen her date a guy. And I've never seen her as animated about anything as she is about you.\"\n\n\"Uh, as far as I know we're just friends. I mean, we had a big misunderstanding the first time we went out. I thought she was asking me on a date, but she just wanted to hang out. We've gotten over that awkwardness and have been friends ever since. Honestly, I think she just doesn't have time to date.\"\n\n\"Huh. Okay, I guess. I just got a vibe when she started telling us about you.\"\n\n\"A vibe? What kind of vibe?\"\n\n\"Okay, don't tell my wife I told you this story. It embarrasses her, for reasons I don't get, but Kat thought she was straight when she and I met. We got caught in a storm, and one thing led to another, and then...\" She trailed off and shrugged. \"Then we were dating... and then we were married. I adopted her daughter. Our little family has been the best thing that's ever happened to me.\"\n\n\"Okay, and?\"\n\n\"And... well...\" She shrugged. \"I just got the same vibe when Liz started telling us about you that I got from Kat when she and I started dating. That there was this... realization happening.\"\n\n\"No, I'm pretty certain she's straight.\"\n\n\"Okay, if you say it, I believe you.\" She took a sip of her drink. \"So, how are you settling into our LWLS family?\"\n\n\"...huh?\" I blinked dumbly. My head was spinning.\n\n\"I said, 'how are...'\"\n\n\"Fine! Really good, sorry. I really love the work.\"\n\nMegan grinned at me, and sipped at her scotch again.\n\n~~ DuPont Circle, Washington DC, March ~~\n\n\"I'm so pissed,\" Liz grumbled, as she stared out the window at the rain. \"I'm half-tempted to go out anyways.\"\n\n\"Uh huh... and what does your doctor brain say about the wisdom of going for a miles-long wheelchair run when it's pouring and forty-five degrees out?\" I was sitting in Liz's wheelchair in her living room, making tentative attempts to pop a wheelie. \"I don't see how you make this look so-Whoa!\" I yelled as I tipped over backwards. The back of the chair slammed down behind me hard and I somersaulted out of it onto the floor in a tangle of arms and legs.\n\nLiz laughed at me. \"That one took me a long time to master. Another vet at Walter Reed taught me the trick. There was an unwritten rule that when a new vet came in with a wheelchair, you had to teach them any chair tricks you'd been taught. Also, I learned on the rubber mat in the gym instead of hardwood floors.\"\n\nLiz's apartment was very minimalist, not much in the way of clutter or knick-knacks. She lived on the first floor of a six-story condo building, two blocks off of DuPont circle. I'd never been in an apartment quite like it. There wasn't a lot in the way of storage in the kitchen, as all the countertops had no cabinets underneath so she could roll right up to them when she needed to cook or do dishes. The upper cabinets had hydraulic mechanisms that swung the contents out and down with the slightest tug on a bar mounted on the front so she could reach them from her chair with a grabber. I'd asked her how much it had cost to customize the place the first time I was over, but it turned out she'd gotten lucky and bought it from a paraplegic man who had decided to move from DC to Florida and it was already handicapped accessible. She'd only had to redecorate.",
        "I got up off the floor and picked up her chair. \"I'm going to figure this out before I go home,\" I said, sitting back down.\n\n\"It's actually one of the most important things to learn when you get a wheelchair. You can't really get around without knowing how to do it, otherwise you'll get stuck at every curb or hose lying across the sidewalk.\"\n\n\"Huh,\" I said, \"I never thought about that.\" I popped the front wheels a few inches off the ground again, but fell back down.\n\n\"When you pop the wheels, make sure you lean forward as they come off the ground. You have to pop a little harder to compensate for the lean though. That's the trick to avoid the tip, as he told me. It's a little counter-intuitive. You'd have an easier time if I had the anti-wheelie bars on, but I took those off years ago.\"\n\nI made a few more attempts with little success, managing to at least not fall over backwards again. \"When do you have to go in today?\"\n\n\"I have to leave at three. Shift starts at four, but I like to have some time to get some coffee, check out how busy the board is, and get settled before I have to dive in.\"\n\n\"Want to go see a movie?\"\n\nShe shifted, lifting her legs off the floor onto the couch with her hands. \"I'd like to, but this is the only time I have to do laundry for like ten days. I'd say we could watch something here, but I've let all my streaming accounts lapse since I never have time to watch anything. I guess I still have Amazon Prime.\"\n\n\"I could log in with my Netflix account. That's a smart TV, right?\"\n\n\"Yeah, the remote's over there. Give me my chair back though, I need to switch a load to the dryer first.\"\n\n\"You don't need to get up, I got you,\" I said, getting out of the wheelchair and heading into her bathroom. Her washer and dryer were next to the plastic chair mounted to a hydraulic lift that could move her in and out of the bathtub.\n\n\"Don't get up,\" she called after me. \"Ha-ha!\"\n\n\"You know what I meant. Don't get fake mad,\" I yelled out to the living room as I switched her laundry from the washer to the dryer. \"Need a new load started?\"\n\n\"I was going to put in my whites next. My hamper is next to the sink.\" After a moment, she added, \"So what are you and your friends doing tonight? Lie to me if you're staying home. I need to live vicariously through your social life.\"\n\nI finished sorting out her whites and started the washer. \"We're going to A League of Her Own in Adams Morgan, then dinner,\" I said, coming back to the living room and sitting back down in her wheelchair.\n\n\"What's that?\"\n\n\"Oh, it's uh, it's just a bar...\" I don't know why I was suddenly embarrassed, but I avoided meeting her eyes. I tried to pop another wheelie, with no success.\n\nShe laughed. \"You can say you're going to a lesbian bar, Addison. I've probably been to as many as you have. Besides you, my four best friends are two lesbian couples.\"\n\n\"I really doubt your math, but I take your point.\" I popped another wheelie. This time I got the front wheels to hover for a moment without falling over backwards. \"Hey! I did it, I'm--\" I lost my balance and the front wheels crashed back to the floor.\n\n\"I'm glad we're on the first floor, or my downstairs neighbors would be getting pissed.\"\n\n\"True. I should probably stop before I mark up your floors.\" I got up and grabbed the TV remote, and then sat on the other end of the couch from her. \"So, what do you want to watch?\"\n\n\"Well, now for some reason I feel like watching A League of Their Own,\" she said, laughing.\n\n\"Sold. I'll never say no to Gina Davis in a skirt.\"\n\n~~ Adams Morgan, Washington DC, March ~~\n\nAs I waited for my friends at the entrance to the Woodley Park Metro station, I gazed across the street at the Lebanese Taverna. It was hard to believe it had only been two months since Liz had invited me to dinner there. I felt so close to her now. Closer than many of my older friends, even though we only got to see each other outside the hospital every other week if I was lucky. It seemed like I saw her at the hospital almost every day with my work for LWLS.\n\nI felt a pang as I remembered the disappointment I'd felt when I realized she didn't have any romantic designs on me.\n\nWe'd hit it off so well that first dinner together. In truth, when I'd first accepted her invitation, I hadn't thought very seriously about actually dating her. I had just wanted to go out for a nice evening of conversation with a pretty and intelligent woman. Perhaps it was a built-in societal prejudice, but the idea of dating a woman in a wheelchair had been daunting, thinking about what the nuts and bolts of a relationship with her might be like. But within the first twenty minutes of our dinner, I'd thrown any reservations I'd had out the window. I'd been so taken with her confidence in herself and her sense of humor. My doubts had been swept away.\n\nAnd then she'd crushed my blossoming attraction to her, gently letting me know she wasn't into women. Not her fault really, a person can't help being who they are. I certainly couldn't help being gay. Not that I wanted to. I'd been comfortable with myself since college. I loved hanging out with Liz, and I truly appreciated her as a friend now. But sometimes I couldn't help but wish...\n\n\"Addie! Are you ready to p-a-a-a-r-t-y?!\" my friend Amber called out behind me. I turned and saw her coming up the Metro escalator with her partner, Nora. Amber's cute, curly red hair and blue eyes would never lead one to think she was an agent with the Bureau of Alcohol, Tobacco and Firearms. She was my height but with a subtly-strong build that came from daily trips to her agency's gym. She'd come to the ATF after a stint in the Army, doing explosive ordnance disposal. We'd met when she was accompanying her boss who was testifying at a hearing being held by the Congressman I worked for when I first came to DC four years earlier.\n\n\"Hey Amber,\" I said, giving her a hug. \"Nora, how's it going? How's life amongst all the books?\"\n\nNora, Amber's partner, was shorter than both of us and her dirty blonde hair softly framed her heart shaped face and dark eyes.\n\n\"I keep telling you, books are someone else's business, Addie, not mine.\"\n\n\"And you call yourself a librarian,\" I joked.\n\nNora had a master's degree in library sciences and worked at the Library of Congress as a digital media curator, whatever that was. All I knew was that she worked at the library but didn't work with books.\n\nHeading down Calvert Street together, we walked over the Duke Ellington Bridge into Adams Morgan. A League of Her Own was right next to a sports bar called Pitchers, a play on words between the two establishments I appreciated. The homey atmosphere and warm wood finishes made it a welcoming place to hang out and catch up with friends. I'd always felt at home at the League.\n\nWe found a spot at the crowded bar where the three of us could squeeze in. After the bartender delivered our drinks we toasted to our Saturday night. I took a sip of my Hendricks martini and turned to Amber.\n\n\"So, any cool new bombs lately?\" I asked her. The woman behind her turned and gave us a look.\n\n\"She's kidding,\" Amber told her, then said more quietly to me, \"Hey, crazy lady. Show a little discretion, would you?\"\n\n\"What? You investigate bombs, right?\" I grinned at her.\n\n\"Nothing she's said is untrue, babe,\" Nora laughed then kissed her on the cheek. \"Did she tell you she got me frisked last week?\" she asked me.\n\n\"What?! How did that happen?\" I asked.\n\n\"It wasn't my fault!\" Amber said, turning pink.\n\n\"She came back from a work trip and set her go-bag down on top of my carry-on in our bedroom, which I'd packed for a work trip of my own,\" Nora said, grinning and ignoring Amber's obvious embarrassment. \"So, when I go through the security checkpoint at the airport the next day, this big, floofy bomb-squad dog goes nuts over my bag. They swabbed it and it came back positive for, like, six different kinds of explosives or something. They unpacked my entire bag right there on the counter and then patted me down for so long I thought I was going to get a cavity search. I barely made my flight.\"\n\n\"I said I was sorry! How long am I going to be making this up to you?\" Amber protested.\n\n\"A little while longer, at least,\" Nora said, her blue eyes twinkling as she slipped her arm around Amber's waist and sipped her wine.\n\n\"What did you get up to that you managed to contaminate Nora's bag so hard?\" I asked.\n\n\"Some wing-nut whack-job in Ohio had stockpiled four thousand pounds of ammonium nitrate. The farm supply store where he got it tipped us off. He'd been buying it slowly over more than a year, but then he told one of the store clerks he'd been going 'all organic' using just manure on his fields so he could charge more for his produce.\" She paused to snicker. \"Ammonium Nitrate is not organic. The clerk called us. We went out to investigate and found a half-assembled VBIED in his barn.\"\n\n\"What's a VBIED?\" I asked.\n\n\"Vehicle-borne improvised explosive device. Basically, a truck bomb.\"\n\n\"Jesus! What was he going to do with it?\"\n\n\"When we arrested him, he started spouting government conspiracy theories that made Pizza-Gate sound like a bedtime story.\" She took a swig of her beer. \"We found a map in his house marking the location of the FDA headquarters in Rockville. We think maybe he was going to try and blow it up.\"\n\n\"That's crazy,\" I said. \"Well Nora, at least you got frisked for a good cause.\"\n\n\"If anyone is going to frisk me, I'd prefer it be Amber,\" she said.\n\nAmber laughed. \"Babe, if you want me to frisk you, you just need to ask. I'll even use my handcuffs.\"\n\n\"You can't threaten me with a good time.\"\n\nThe bartender walked up and set a shockingly pink drink in a hurricane glass in front of me.\n\n\"Hey, I didn't--\"\n\n\"This is for you, from the woman in yellow at the end of the bar,\" she said, tilting her head down towards a woman wearing a bright, yellow sleeveless shirt, then walked away before I could ask any questions.\n\n\"Woo! You've got an admirer! Go get her, girl!\" Amber said.\n\nThe woman raised her glass to me. It looked to be the same pink concoction that was sitting in front of me, hers half-empty. She was a few years younger than me, and a little more butch than I normally found attractive. Her hair was dark, cropped close on the sides and back and with the top spiked up over her head. I nodded my thanks to her.\n\n\"What are you waiting for? Go talk to her,\" Nora said.\n\n\"I don't know...\"\n\n\"Addison! Go down there!\" Amber gave me a gentle push.\n\nI leaned in closer to the pair of them. \"She's not really my type,\" I whispered.\n\n\"She's a living, breathing woman. You haven't been on a date in months! You need to flex your flirt muscles a little.\" She gave me another, less-gentle push.\n\nI sighed and picked up the drink. \"Fine,\" I muttered under my breath. I walked down to the end of the bar and the woman scooted over to make room next to her.\n\n\"Thanks for the drink,\" I said to her, \"I'm Addison Wagner.\"\n\n\"Vivian Esparza. Call me Viv,\" she said, holding out her hand. I shook it, taking in the full sleeve of tattoos on her right arm and the wide, heavy leather bracelet encircling her wrist.\n\n\"I haven't seen you in here before,\" she said. \"Love your dreadlocks. I couldn't resist sending you a drink! I hope that wasn't too forward, you looked like you were third-wheeling it with that couple.\" She tipped her glass towards Amber and Nora. I looked down their way, and got two encouraging grins.\n\n\"It was a first for me,\" I replied.\n\nShe blinked. \"No one's ever sent you a drink before?\"\n\nI grinned. \"Never a bright pink one.\"\n\nShe didn't grin back. \"But... so wait, you have or haven't gotten a drink sent to you before?\"\n\n\"Yes, I have, sorry. That was a joke.\"\n\nShe laughed, but it sounded forced. This is going great, I thought. I took my first sip, then struggled not to cough. It was fruity, but incredibly strong and not in any way smooth.\n\n\"What is this, anyway?\" I asked her hoarsely.\n\n\"It's called a 'weekend-fling',\" she said, with a grin of her own. It was apparent she was trolling for someone to go home with, which was not my style at all. Still, like Amber said, I could use the opportunity to flex my flirting muscles. I didn't have to actually let her close the deal.\n\n\"Really?\" I asked, \"I wonder if a 'one-night-stand' would be stronger or weaker than a 'weekend-fling'.\" That earned a real laugh from her. \"So, Viv, what do you do, when you aren't sending pink beverages to women?\"\n\n\"I'm a Metro driver,\" she said.\n\n\"Get out. You drive the actual Metro trains?\"\n\n\"Yup. I'm on the Green line most days.\"\n\n\"Oh. I pretty much only ride the Red and Orange lines. How long does it take to learn to drive one of those?\"\n\n\"They train us for a couple months before we go solo. I've been certified for two years now. What about you?\"\n\n\"I'm a lawyer. I work for Lampedo Women's Legal Services. It's a nonprofit that provides free legal work for indigent and abused women.\"\n\n\"Really? That's rad!\" she gushed.\n\nShe actually said rad. She might be younger than I'd guessed. \"Yeah, it is pretty rad,\" I said with a smile.\n\n\"Wow, I sounded like a teenage girl just then, didn't I?\" She looked embarrassed.\n\n\"It's okay. Most women spend their adult lives trying to seem younger. You're just getting a head start,\" I said, giving her a little smirk.\n\nShe blushed. \"And maybe you're getting a head start on your mid-life, taking-a-younger-lover phase.\"\n\n\"Touch\u00e9!\" She could banter. Perhaps I misjudged her. \"So, are you a regular here?\" I asked.\n\nA serious look crossed her face. \"Are you asking if I'm a regular here, or are you asking do I come here every weekend and try and pick up the woman with the hottest hair in the bar?\"\n\n\"The former, actually, but I wouldn't turn down an answer to the latter.\"\n\nShe looked away. \"I'm not a professional pickup artist, if that's what you're asking. I had a break-up about a month ago. Finally decided I'm ready to get back in the game, so... here I am.\" She turned back and met my gaze again. \"So, no, I don't cruise the bars every weekend looking to score a different trophy to take to bed. But if the right thing fell into my lap tonight I wouldn't say no.\" She let her eyes roam up and down my body. \"I hadn't seen anyone worth my time tonight, until you walked in.\"\n\nI flushed. \"Well, thank you for your honesty. I'll return the favor. I don't do one-night stands, or even fall into bed with someone I think I might want to date the first night I meet them, but I'm not unwilling to get to know someone I might want to see again.\"\n\nShe grinned at me. \"I like the sound of that, Addison... or, what do they call lawyers on TV? Counselor?\"\n\nI groaned. \"Oh god, please don't call me that. You'll make me feel really old.\"\n\n\"Fair enough.\" She raised her glass, and I raised mine. We clinked, and we drank, then she patted me on the back as I erupted into a coughing fit.\n\n\"Maybe we should get you a beer, or a nice glass of juice.\"\n\nI mock-glared at her, then caught the bartender's eye as she walked by and asked for a glass of water to go with my pink cocktail.\n\nI was surprised to find almost an hour had passed when I was interrupted by my phone buzzing with a text from Amber. I looked down at the other end of the bar where both she and Nora were conspicuously not looking at me. I read the message while Viv watched me.\n\n\"Got to go?\" she asked, as I typed out a quick reply.\n\n\"I'm afraid so. We have dinner reservations in Chinatown in half an hour. My friends were texting me to give me a hall pass to stay and hang out if I wanted to.\"\n\n\"And you don't want to stay and hang out?\" She looked mildly hurt.\n\n\"I would like to, actually, but I haven't seen my friends in a long time and I only hung out with them for five minutes before someone really cute bought me a drink and took me away from them.\"\n\n\"That's totally understandable,\" she said, with a smile. She took my phone out of my hand and started tapping at it. I watched her with amusement. Her phone, lying on the bar, lit up with a text. \"Now I have your number and you have mine.\" She reached for her phone and looked at her calendar. \"Wanna go out next Saturday?\" she asked me.\n\n\"Ooh, sorry I can't next Saturday. Friday maybe? Or rain check?\"\n\n\"Sure, let's text later and we'll figure something out. In the meantime, I don't want you to forget about me.\"\n\nShe stepped closer, lifting her hand to cradle the back of my head, and then she was kissing me. I knew some girls in lesbian bars could be pretty forward, but I certainly wasn't. Usually. I was acutely aware of all the women crowded around us as I felt my body react despite myself. I froze for a half second, then I shrugged inwardly and returned her kiss, wrapping my free hand around her to touch the small of her back. She smelled like vanilla and leather.\n\nShe pulled back and I felt myself flushing.\n\nI cleared my throat. \"Well, I certainly can't forget you after that,\" I said.\n\n\"That was the idea,\" she said, smiling wolfishly.\n\nShe pulled her hand out from behind my head, trailing dreadlocks through her fingers.\n\n\"I'll look for your text sometime this week then,\" she said, and playfully pushed me towards my friends.\n\n\"You're an idiot,\" Amber told me, after we were seated at our table at Momiji in Chinatown a short Lyft ride later.\n\n\"Amber, I'm not going to go home with someone I just met. Besides, I haven't seen you two in weeks.\"\n\n\"Not for not going home with her, you dummy. For blowing her off next Saturday,\" said Amber pointedly.\n\n\"Should we get a bottle of sake?\" Nora asked, as the waiter arrived.\n\n\"I need some more water first. That drink she bought me was potent,\" I said. We ordered drinks and appetizers, and the waiter left. \"Anyway, it's not like I was just blowing her off. I have plans already.\"\n\n\"You have plans with your straight friend. This is a gay woman, who's into you. You're a gay woman, in case you forgot.\"\n\n\"Liz gets maybe one night off every week. Maybe once every month one of those nights is on a weekend if she's lucky. I made these plans with her like a month ago. I'm not going to blow off Liz for someone I just met.\" I was starting to get annoyed.\n\n\"Plans to go see some dumb local cover band?\" Amber scoffed.\n\n\"Come on. The band members are some of her best friends! The guitarist was her commander and the pilot of her helicopter in the Army! Liz wants me to meet them, it's important to her. It's important to me!\"\n\nAmber was about to retort when Nora reached out, without looking up from the menu, and gently put a hand on her arm. \"Babe, you're out of line,\" she said softly.\n\nAmber pivoted in her seat to glare at Nora, and for a moment looked like she was ready to turn the heat up another notch, then she settled back in her seat.\n\n\"Sorry Addie... I'm sorry. Thanks Nor, you're right.\"\n\n\"Where is this coming from?\" I asked her. \"You're not usually like this.\"\n\n\"Addie, I just...\" She sat, looking uncomfortable.\n\n\"Come on, you can tell me whatever it is.\"\n\nThe words rushed out of her. \"You glow when you talk about Liz, and the only other times I've seen you do that were when you were falling for a woman. I'm afraid you're going to get hurt.\"\n\n\"What!?\"\n\n\"Tell me there's not some piece of you that's sitting around hoping that things will change. That if you're a good enough friend to Liz, she'll suddenly realize she's queer and you'll live happily ever after.\"\n\n\"That's not it at all! She's my friend!\"\n\n\"Just your friend?\"\n\n\"Yes, just my friend,\" I said. At least that's what my mouth said. My brain felt like maybe Amber was hitting close to the mark.\n\nI didn't like that she might be right.\n\n~~ Alexandria, Virginia, April ~~",
        "They say when March comes in like a lamb, it goes out like a lion. That was holding true, as DC was given an April Fool's joke in the form of what was looking to be maybe the biggest winter storm ever that late in the Spring.\n\n\"Are you sure we shouldn't just stay in and watch a movie?\" I asked Liz, as we arrived at her car in her basement parking garage. \"Getting to Alexandria is going to be a bitch with this much snow on the roads.\" I'd taken the metro from my apartment in Tenleytown to Liz's condo in DuPont Circle, but I was deeply hesitant about going out in bad weather. It had been snowing since noon.\n\n\"I texted Jo. She said the show's still on, so I'm going. I haven't gotten to see them play since before Thanksgiving. I'm not going to pass up a chance to see them because of a little snow.\"\n\n\"Okay,\" I sighed. \"Maybe we should take a Lyft instead of risking your car?\"\n\nLiz shook her head. \"We're going to be out late and it might be hard to get one home later. I'd hate to be stuck in Alexandria for the night with nowhere to stay.\" She clicked a button on her keychain, and the two doors on the driver's side of her Kia swung open like a clamshell. She rolled up to the driver's seat and shifted over into it, and then started folding her wheelchair up.\n\n\"Here, let me do that. That always looks like such a pain in the ass watching you try and put it in the back.\" I took her chair, finished folding it and put it into the cradle of the lift in the back. Liz hit the switch that brought the contraption into the back seat with a low mechanical whine.\n\nI tried not to talk to Liz while she focused on the road. It was kind of amazing how much better of a driver she was than most of the other idiots out that night, especially considering she was driving entirely with her hands. The throttle/brake lever in her right, the wheel in her left. She handled it all with dexterity. We passed at least a half-dozen cars who had slid off the road by the time we reached the Birchmere music hall.\n\n\"Ha!\" Liz smiled broadly as we pulled into the parking lot. \"This is the best thing about being in a wheelchair!\" she said, as she pulled into a handicapped space right next to the front door.\n\n\"I can't believe how many cars there are on a night like this,\" I said, \"and it's still almost an hour before the show. We might have had to park in the street!\"\n\n\"I told you, they have a pretty loyal following, and this is their first show since early December.\"\n\nI took her chair out of the back of the car and opened it for her. After we went inside, Liz claimed our tickets at the will call window, and we made our way towards the bar where there was a huge cluster of people. It soon became apparent that the band was in the middle of it, greeting fans and friends. We got in line and waited patiently.\n\nWe'd worked our way close to the middle of the group when I caught sight of a short, solidly built woman in the middle of the crush of bodies with a flat-top haircut, dyed platinum blonde, and prominent cheekbones. Her eyes widened as she spotted us through the press of people.\n\n\"Liz!\" she yelled in delight then she cupped her hands to her mouth and said in a shockingly loud voice, \"Make a hole!\" The crowd parted good-naturedly and the woman stepped forward to meet us halfway. When she leaned down and threw her arms around Liz, I felt a short, unexpected pang of jealousy.\n\n\"Dr. Liz, how ya doing?\" she exclaimed, as she stood up.\n\n\"Great, Chief!\" Liz said. \"How're you? Getting enough sleep?\"\n\n\"Holy shit, I am not! I thought basic was tough, but this is a whole other thing. I guess I was a lot younger then, though,\" she said.\n\nLiz laughed, then turned to me. \"Chief, this is my friend Addison Wagner. Addison, Jo Collins.\"\n\n\"Good to meet you,\" Jo said to me. \"I'm stoked you guys made it out. I had my doubts you would. It took us three hours to drive in from Front Royal, and that was this morning before it got bad.\" She turned and yelled through the crowd, \"Hey Blue! Liz is here!\"\n\nFor a moment I thought I must have misheard the name she'd called out, but then a tall woman moved through the crowd to join us and I understood. She had long, thick hair down to the middle of her back that had been dyed several different shades from electric blue, to sapphire, to almost purple. The effect was such that she looked like a mermaid, freshly stepped out of the sea. It was strikingly beautiful.\n\n\"You made it!\" she said, leaning down to give Liz a hug as well.\n\n\"A little snow couldn't keep me away! It's been too long since I've seen you guys!\" She turned to me. \"Addison, this is Jill Collins, Jo's wife and Rotor's keyboard player extraordinaire. Jill, this is my friend Addison Wagner.\"\n\n\"Pleased to meet you Addison,\" she said, shaking my hand.\n\n\"I love your hair,\" I said.\n\n\"Thanks! Your dreads are pretty cool too!\"\n\n\"How's the baby doing?\" Liz asked them.\n\n\"Not sleeping through the night yet,\" Jill said, \"Thank god for Jo. She gets up with him at all hours of the night, every night, so I can sleep and save my energy for feedings.\"\n\n\"You did the hard part for nine months,\" Jo said, \"plus almost a year of getting those damn hormone injections. My turn to carry some of the load.\"\n\n\"I have a hard time picturing you taking care of an itty-bitty baby, Chief,\" Liz teased her.\n\n\"Are you kidding me?\" Jill said, \"Eric's in her arms every second he's awake and a lot of times when he's asleep too. I have to ask her to let me hold him sometimes.\"\n\nJo blushed. \"Sue me, I love our little kid. I didn't even want to leave him with your sister tonight.\"\n\n\"His bedtime was like an hour ago,\" Jill said, laughing. \"He'll come to our shows someday. Just not yet.\"\n\n\"Is Sara here?\" Liz asked.\n\nJo grimaced, \"No, she's at home with little Henry. He's got a cold, so she didn't want to leave him with the other kids at Jill's sister's place. Justine only has Eric plus Larry Junior.\"\n\n\"That's plenty,\" Jill said.\n\n\"Jo! Showtime!\" someone yelled from over near the stage. I looked, and saw a man wearing a white button-down shirt and skinny black tie who was obviously Jo's brother, if not her twin. He had the exact same lopsided grin plastered on his face.\n\n\"Coming,\" Jill yelled back.\n\n\"Alright, time to rock!\" Jo said, with a little bounce on her right foot. \"We'll catch you guys after. Liz, make sure you come up front so you can see. I'll yell at the crowd for you if I see you having any problems getting close.\" She grinned at us, then grabbed Jill's hand and they made their way backstage.\n\n\"She's quite the bundle of energy,\" I said to Liz. \"I've never seen a couple so different from each other.\"\n\n\"They are a study in contrasts for sure, but they make it work. When we crashed in Afghanistan, we got airlifted to Ramstein base in Germany, and Jill flew out there to meet us, like right away. Jo was in a coma for weeks. Jill was there long before Jo even woke up and never left her side for her entire recovery. They're inseparable.\"\n\n\"That's really sweet.\" I looked around. \"Where do you want to try to watch the show from?\"\n\n\"Right up front, of course!\" She said and started slowly rolling through the crowd up towards the stage. It was clear that most of the people in attendance were regular fans, and Liz seemed to know most of them. She got a constant stream of hugs, fist bumps, and high fives, and no one seemed to begrudge us moving to take a space right up front.\n\nJust as we arrived at the spot Liz was headed for, the house lights went down and the stage lights came up. The band walked out to applause and hollering. There were five of them. The two I hadn't met yet were a Hispanic woman with long reddish-brown hair carrying a bass guitar with a red-and-yellow sunburst and an improbably-tall black man with a shaved head who jumped behind the drum set. Liz identified them to me as Suzanne and Larry, another married couple and high school friends of Jo and Steve.\n\nAs Jill walked behind a stack of three keyboards next to the drum set, Jo took her place right in front of us, a black and white guitar slung over her shoulder, while her male doppelganger, Steve, walked to the center microphone.\n\n\"Hello Birchmere! How's everyone tonight?\" Steve yelled out to huge cheers, while adjusting his black guitar. He waited for the noise to die down. \"Been awhile, right?\" More cheers. \"We haven't been wasting our time. We're gonna play a lot of your favorites tonight, but we have a bunch of new stuff for you. Hope that's okay with everyone.\" Louder cheers. \"Alright, let's go!\"\n\nHe turned and looked at Larry, who clicked his sticks together and yelled out, \"Two, three, four!\" Then he started pounding out a beat while Steve started strumming a fast-paced intro of chords, joined quickly afterwards by Jo and Suzanne while Jill danced behind her keyboards waiting to come in. It only took me seconds to recognize the notes of The Cure's Hot, Hot, Hot!!!\n\nI found myself rather taken aback at how good they sounded. I had known, from listening to the songs on the band's playlist on Liz's racing chair's speaker, that they did a bunch of great stuff, but knowing they were just a cover band, I'd had no expectation that they would be... good. Like, really good. Jo's guitars were indistinguishable from the original, and when the rest of the band joined in they sounded really, really good.\n\nSteve wasn't Robert Smith, but he had a great vocal style of his own and found a groove with the lyrics that was working for him. The entire crowd was dancing within the first few beats.\n\nDespite all that, what truly amazed me was Liz. She'd said, the first night we'd gone out, the night I'd wished was a real date, that she was quite the dancer. I'd taken that to be a joke at the time, but as the band got into the song I saw just how wrong I was.\n\nHer face lit up when she recognized the tune, and she started swinging her chair back and forth; spinning in circles, first one way, then the other. Her upper body was swaying side-to-side in her chair, arms moving fluidly, almost hypnotically, and all the while managing not to crash into any of the crowd pressed around us. I couldn't believe how graceful she made it look, as if her wheelchair was an extension of her. She'd taken her disability and made it into something beautiful.\n\nShe looked up at me and grinned, shouting over the music, \"C'mon Addison! Don't just stand there, dance with me!\"\n\nI belatedly realized I'd been staring at her. I shook myself out of my reverie and tried to just enjoy the music. Soon, I was dancing just as hard as the rest of the crowd.\n\nWhen the song ended the band didn't even pause. They went straight into Blur's Song 2, with Jo and Larry doing the simple intro until Steve let loose into the mic with a resounding \"Woo-Hooooo!\" and the rest of the band joined in. Jo kicked at her pedals to amp up her sound as the crowd redoubled their energy, bouncing up and down as one mass of humanity.\n\nLiz sang along with Steve's next yell, giving a loud \"Woo-hooooo!\" of her own, then popped a wheelie and, to my amazement, spun her chair in a complete circle before dropping her wheels back to the ground. She hadn't been kidding at all. She was an amazing dancer.\n\nThey followed up Blur with Veruca Salt's Seether, with Suzanne taking over the vocals from Steve. Once more I found myself really impressed by her voice.\n\nAfter what must have been more than an hour, I was exhausted. I hadn't danced that much since college. Steve stepped to the mic to address the crowd.\n\n\"Alright, we're going to take a break soon.\" Good natured boos drifted up from the crowd. \"But we're going to do something a little different right now. We know a bunch of you have been following us for years. And a bunch of you have met at our shows and become couples, like Mary and Dix over there.\" He pointed at a couple with their arms around each other. \"Or Damian and Laura, Mike and John, Alison and Mike.\" He kept pointing out different couples in the room to cheers for each couple. He continued, \"So, while we usually like to rock out, we added a few songs for slow dancing tonight for our favorite couples. That's pretty much all of them in this room,\" he said grinning. \"So, we'll do a few slow ones then take fifteen.\"\n\nSteve took off his guitar and put it in its stand next to Larry's drum kit, and then traded places with Jill; him behind the keyboards, while she came out and took his microphone out of its stand.\n\nSteve started off the song on the keyboards, piano notes filling the room. Jill joined in a few bars later, singing softly and soulfully, and I recognized the power ballad Alone, by Heart.\n\nI leaned down to Liz and said in her ear, \"Do you want to go get something to drink before the rush?\"\n\nShe was watching the stage as she answered, \"No, I've never heard them do something like this. I want to watch.\"\n\n\"Okay. I may head to the bar. My feet are killing me, I clearly wore the wrong shoes for dancing.\"\n\nShe grinned up at me. \"No problem, I carry around a built-in seat everywhere I go.\" She tugged at my elbow and suddenly I found myself in her lap with her arms wrapped around me. I was startled, but then figured what the hell? I wrapped an arm around her neck, legs hanging over the side of her chair and leaned gently back into her. I laid my head on top of hers as we listened to Jill sing.\n\nTwo tired friends, just enjoying music together. That's all.\n\nJill's singing voice was beautiful. I found myself surprised they hadn't found a way to feature it sooner. She was clearly the best singer in the group. She looked lost in the music, with one hand reaching out and resting on Jo's shoulder. Jo, meanwhile, was playing with a huge smile on her face, clearly thrilled to be accompanying her wife. As Jill sang about trying to get her would-be lover alone for the first time, I could smell Liz's hair.\n\nI glanced around the room and saw dozens of couples slow dancing while they watched the band. Jo, Suzanne and Steve all sang harmony during the chorus, their voices blending to create the illusion of a dozen singers on the stage. It was kind of a perfect moment.\n\nLiz dropped one of her arms, which had been encircling me. I thought for a moment she might want me to get up, but she held onto me tightly with her other arm and gripped one of her wheels with her free hand to slowly swing us back and forth in time with the music.\n\nWhen the song ended I made a move to get up, but the band launched straight into Eternal Flame and Liz kept her arm around me. Jill's voice was perfectly suited to the vocals, ringing out across the crowd. When Jo and Suzanne joined her in harmony, it was like The Bangles had stepped onto the stage. Steve and Larry just grinned at each other across the back of the stage while they played.\n\nThey ended the song to huge cheers. Jill told the crowd they'd be back in fifteen or twenty minutes and they left the stage. I got off of Liz's lap and stood up.\n\n\"That was totally different from anything I've ever heard them do,\" Liz said to me. \"I really liked it.\"\n\n\"Me too. I have to say, they're much better than I'd assumed they were going to be. They're really good. I have a hard time believing they all have real jobs.\"\n\nShe laughed and said, \"I know, right? You say 'cover band' and everyone assumes they're just some hack garage group. These guys are musicians. Playing stuff like this for their friends is just what they love to do. I mean to be fair, Suzanne is a music teacher, but...\" She trailed off, looking at the stage.\n\n\"What is it?\" I asked her.\n\nShe looked down at her sneakers on the footrest of her chair. \"This is going to sound sappy, but I'm really happy you made the decision to be friends with me. You coming with me tonight just...\" She looked back up at me. \"This band is important to me. Jo started inviting me to their shows when she was recovered enough to start performing with them again. She wouldn't take no for an answer, sometimes driving to my apartment before the show, putting me in her car, then taking me home afterwards. Going out, being with people, watching them play, it all had a part in getting me to a place where I could accept my life and the way it was going to be. A big part.\" Her eyes started glistening. \"For a long time, I didn't know if I'd ever be able to accept it. It really means a lot to me to get to share them for the first time with someone I care about.\"\n\nI felt a lump rise in my throat. \"I'm glad you invited me Liz.\" It was the first time since we'd met that I'd ever seen her show any vulnerability, any hint that she hadn't always been fully accepting of her path in life, or of what had been taken from her. She was always so confident, so self-assured.\n\nShe stared into space for a moment, then shook herself and grinned at me. \"Should we go get a beer and drink it in a macho fashion to overcome our girly emotional scene? Maybe slam a tequila shot?\"\n\n\"Anything you want Liz. Tonight's your night.\"\n\n~~ Chinatown, Washington, DC, April ~~\n\nI stood on the street corner at Seventh and H Streets, watching the sun go down behind the brick buildings across the way. I'd come up the escalator from the Gallery Place Metro station and texted Viv that I was here. After a couple of weeks of texting, we'd finally made plans to go out. She'd said to leave the plans up to her. All I had to do was dress casual and make sure I brought a jacket, which was weird as the snow storm had passed and left behind early spring weather. Almost warm enough to go without a jacket, but maybe not quite, depending on what she had in mind.\n\nWith those vague instructions, I'd worn jeans and a button-down blouse with my favorite leather jacket over the top. The butterflies in my stomach seemed unavoidable. It was the first real 'date' I'd been on since Liz had taken me to dinner, which turned out not to be a date at all meaning it was my first date since before Halloween.\n\nI caught sight of Viv coming up the escalator, and she gave me a big wave when she saw me.\n\n\"Hey girl, glad we finally got together!\" she said, as she gave me a hug.\n\n\"Sorry it took so long! it's been a crazy month.\"\n\n\"No worries! Better late than never, right?\"\n\n\"I suppose so,\" I mused. She looked even younger tonight than she had when I'd met her at the League. I had to remind myself I was just out to have fun, not get married, so letting the night play out still felt like the best plan. \"You've been pretty cagey in your texts. What's our plan for tonight?\"\n\n\"Well, I took a bit of a chance. Are you a sports girl?\"\n\n\"I can be. Badger's football takes up my every Saturday in the fall.\"\n\n\"Badgers? Who's that?\" She looked confused.\n\n\"Sorry, the University of Wisconsin. That's where I got my bachelors and then I went to law school in Madison as well. I'm a pretty big Badgers fan in any sport.\"\n\n\"Oh, gotcha. So, do a lot of people play hockey up there?\"\n\nI smiled. \"Are you making the assumption that because we have all the cold weather we must all play hockey?\" I joked. \"Yeah, actually, lots of people play. Wisconsin doesn't have an NHL team, but we have a minor league team. My brother played in high-school and a little in junior college too, so I watched him a lot.\"\n\n\"Cool! Then I won't have to explain the rules to you tonight. I got two tickets to the Caps game. Hope that sounds like fun.\"\n\nI looked down the street at the Capital One Center looming over Seventh Street. Surprisingly it did sound like a fun time. I'd spent many nights of my grade school years going to watch my brother play, so when I'd moved to DC I'd latched onto the Caps as the team I rooted for whenever I watched hockey.\n\n\"That sounds great, actually.\" I looked back at her. \"I think you nailed it.\"",
        "Her grin threatened to split her face in half. \"Great! Shall we?\" She offered her arm as if she were an old-timey gentleman. I laughed and hooked my arm through hers.\n\nWe walked the two blocks to the stadium entrance. She had our tickets on her phone and we made our way inside. I insisted on buying our food, and the first round of beers, since she'd bought the tickets. Once we went into the arena proper, I was surprised how good our seats were. She'd gotten seats in Section 111 and the view was amazing. I'd never sat in the lower seats, and we were near center ice, about twenty rows up.\n\n\"These seats are fantastic,\" I said. \"I hope they didn't cost too much?\"\n\n\"Nah, actually my boss's boss has season tickets and couldn't go tonight. He gave 'em to me at a discount. I just owe covering a shift for him next time they need a volunteer.\"\n\nNot only was I happy to be going to a Caps game, but they were playing the Blackhawks. Being from Wisconsin, I had a built-in animus towards all sports teams from Chicago, so I felt right at home when the game started.\n\nDuring the Blackhawk's first shift we both yelled \"Offsides!\" at the same time, then turned and grinned at each other. We were yelling at the refs, booing the 'Hawks, and laughing all through the first period.\n\nThe Capitols were up two-one during the intermission between the second and third periods, and we were talking about the Caps penalty-killing efforts in the second when she nudged me and pointed up at the jumbo-tron. They were showing members of the crowd with the \"Kiss Cam\" label flashing at the bottom of the screen. It was pretty hilarious watching all the different reactions. Some people were uncomfortable, some people were overly enthusiastic. Sometimes it was two different reactions from the same couple, which made it both excruciatingly awkward and hilarious at the same time to watch.\n\nSuddenly I was on the screen with the man sitting to my right. The camera man seemed to have assumed I was with him. He looked over at me and raised his eyebrows in an unspoken Well, how about it? while I tried to put my most serious, Are you kidding me dude? look. Suddenly Viv leaned over and, with both hands on my cheeks, turned my head towards her and absolutely laid one on me. I froze, startled as the crowd went wild cheering for us. This kiss was on par with the one she'd given me the night we'd met at the League.\n\nAfter an interminable moment, she pulled back and grinned at me. I looked up, and we were still on the screen. The man to my right reached over me to high five Viv. The high-definition screen clearly showed that I was blushing dark red from the neck of my shirt up into the roots of my dreadlocks, and my pale blonde hair was only making it more obvious.\n\nAfter the camera cut away from us, I slowly turned my head back towards Viv. I could see a little doubt creep into her eyes, that she was worried she may have crossed a line.\n\n\"Sorry,\" she said, a little embarrassed, \"I didn't think you'd want to be one of the spoilsports who refused to kiss for the kiss cam, and I know you didn't want to kiss that dude.\"\n\nI tried to emulate Liz's poker face when she was joking with me, and just looked at her.\n\n\"I, uh... Addison, listen I'm--\"\n\nI reached over, put my hand behind her neck, and pulled her to me as I closed my eyes and I kissed her. Softly. I startled her as much as she'd startled me, apparently, because it took her a second to relax. When she finally did, her lips parted, and our tongues brushed each other's, fleetingly, with the barest hint of a caress.\n\nI leaned back in my seat and winked at her. \"Thanks for not letting me be that spoilsport,\" I said.\n\nAfter the Caps went on to win four-one, we pondered our options for what to do afterwards.\n\n\"Do you want to get out of here and hit the League?\" Viv asked me. \"I've got a Lyft lined up that can pick us up outside.\" She held up her phone, showing me the app.\n\n\"Yeah, let's get out of here. But I get to pick where we're going since you picked the game.\n\n\"Fair enough. Where do I tell the driver we want to go?\"\n\n\"Georgetown.\"\n\nTwenty minutes later, we got out in front of L'Annexe in Georgetown. I kept an eye on Viv as she looked around a little uncomfortably.\n\n\"Everything good?\" I asked.\n\n\"I'm good. I just don't come to Georgetown to go out much,\" she said, the tone in her voice suggesting she'd maybe never been out in Georgetown in her life.\n\n\"You'll love it,\" I assured her.\n\nSince we'd arrived late due to the hockey game, we'd missed the dinner rush. I wouldn't have bothered trying to go there before ten without a reservation or expecting to wait an hour for a seat. The restaurant was half-empty as we walked in.\n\nThe hostess recognized me and smiled. \"Welcome back,\" she said. \"Dining or drinking tonight?\" she asked.\n\n\"Drinking, and maybe a little snack. Can we get one of the sofas?\"\n\nShe looked down at the seating chart on her podium and said, \"Absolutely. Please follow me.\" She grabbed a stack of menus and led the way back into the dark, intimate spaces of the lounge. She sat us at a plush, velvet couch with a low table in front it in a back corner of the restaurant. The empty couches around us provided quite a bit of privacy. I took off my leather jacket and laid it over the arm of the couch. Viv followed my lead, and then sat next to me.\n\n\"I've never been to a place like this,\" she said in a hushed voice.\n\n\"It's just a restaurant. Should I order for us or do you want to stick with beer since we had a couple at the game?\"\n\n\"Oh, by all means, you should order. I'd hate to deny you the chance to impress me with fancy cocktails,\" she said, with a grin. The waitress came by and, without looking at the menu, I ordered the cheese plate and the chocolate caramel tart and drinks. The waitress nodded and headed off to put in our orders.\n\n\"What the hell's an 'On the Vine'?\" she asked me. I'd guessed her drink tastes based off of the pink concoction she'd bought me at the League.\n\n\"I'll tell you what's in it after you try it.\"\n\nWhen our drinks came, she eyed the slightly pale green drink in a large, elegant martini glass. I lifted mine and held it out to her. We clinked glasses then she hesitantly took a sip. Her eyes widened in appreciation.\n\n\"That's good. What is it?\"\n\n\"It's melon-infused vodka and cucumber syrup,\" I said. \"Want to try mine?\"\n\nShe picked up my glass and took a sip. \"Wow! That might be even better!\"\n\n\"It's grapefruit-infused gin and dry vermouth,\" I said of my 'Ascots and Coats'. \"But if you like those, wait until the chocolate caramel tart comes. I wouldn't kill anyone for it, but I'd definitely hurt someone pretty badly.\"\n\nShe laughed, then stopped, catching herself and looking around like she'd made too much noise at a library. She sat back into the corner of the couch, and the dim lights of the bar showed me uncertainty in her eyes.\n\n\"What's wrong?\"\n\n\"I'm not sure I'm in your league, Addison,\" she sighed.\n\n\"What? Why would you say something like that?\"\n\n\"You're obviously... fancier than I am.\" She waved her hand around the bar. \"You didn't just go to college, you went to law school. I barely graduated high school. You're a lawyer. I drive subway trains. You hang out in places like this. I go to hockey games and The League, and--\"\n\n\"Hey,\" I interrupted her. \"Just because I know a fancy bar doesn't make me out of your league. It just means I've had opportunities to find places like this and maybe you haven't, and that's okay. And I like hockey games and The League too. Just because I've gone to school longer than you have doesn't mean I'm a better person than you. If someone ever tries to make you feel that they're better than you because you lack experience, you should know that probably means they actually have less character than you do.\"\n\nShe didn't say anything, just looked down examining her hands. I hated seeing anyone looking down on themselves like this, but I also understood where she was coming from. I'd put the chances of developing a serious relationship at close to zero just because of the gulf between our respective life experiences, but that didn't make me better than her. Or her any less than me. I liked her, and liked hanging out with her. She was quick-witted, if a little inexperienced. I certainly didn't think she should feel she was beneath me.\n\nI slid over closer to her. \"You and I talked for an hour at The League, and I wanted to go out with you again. Why would I do that?\"\n\nShe gave an ironic smile. \"Maybe you want to get into my pants.\"\n\nI chuckled. \"Except I told you then I don't do one-night stands and I also don't go home with someone on the first date. And usually not the second, and sometimes not the third. So why would I go out with you tonight?\"\n\nShe didn't answer but looked up at me.\n\n\"It's because I kind of like you. And I want to see if we hang out if I'll like you more. Okay?\" I said.\n\n\"Okay,\" she said. She made a little motion towards me, but stopped herself.\n\nI smiled. \"I said I don't go home on the first date, Viv. I didn't say I didn't want to kiss you some more.\" Then I leaned forward and covered her mouth with mine. We were interrupted a few minutes later by the waitress returning with our tart and cheese plate. She gave us a knowing smile and left without making conversation. I leaned back towards Viv but just before our lips touched, she pulled back.\n\n\"Wait, what do you mean our first date? What about the night we met at The League?\"\n\nI laughed. \"Sorry, that doesn't count as a date.\"\n\n\"Dammit, now I have to wait two more dates before I might get you into bed?\"\n\nI giggled loudly, but was interrupted by her kissing me again as she tangled a hand into my dreadlocks.\n\n~~ District of Columbia Courthouse, Washington, DC, April ~~\n\nThe arrival of Spring had brought warm weather and blue skies to the District, prompting me to wear one of my favorite spring outfits to court. Dressed in a pale pink Armani pant suit with shiny black heels, I had a little spring in my step as I walked up the steps into the District Courthouse. I'd tried enough cases in the past few months that I was no longer feeling the nerves. I was also taking a personal day so Liz and I could play hooky that next Friday and see the cherry blossoms around the tidal basin by the Jefferson Memorial. They were expected to hit peak bloom, and I wanted to try and get some good photos.\n\nThe prospect of spending the whole day with Liz, soaking up sunshine, then going to my second Rotor's show in Arlington had me smiling and nodding pleasantly at almost everyone I passed. Add that I was going to go out with Viv again on Saturday, and it was shaping up to be a good weekend.\n\n\"Hey Charlie. Beautiful day, isn't it?\" I asked the guard at the security checkpoint, as I ran my purse and briefcase through the x-ray machine and stepped through the metal detector.\n\n\"Sure is, Miss Wagner,\" he said with a smile, handing me my bags.\n\n\"Charlie, if you don't start calling me Addison, I'm going to start calling you Officer Christie again.\"\n\n\"Oh no!\" he said, with mock horror. \"I'll try, Addison. So many of the lawyers are stuffy, so it's hard to break the habit.\"\n\nI laughed. \"Well, I'm not one of those lawyers. Have a good one, Charlie.\"\n\n\"You too, Addison.\"\n\n\"See! There you go!\"\n\nI made my way to Courtroom 210, settled at the plaintiff's table and started spreading out my papers while I waited for my client.\n\nI'd had a few meetings with Megan to take some lessons on the finer points of trial strategy. It really was all in the preparation as she'd said. I thought back to our last session, in the conference room of our Seven Corners office, over salads and coffee.\n\n\"The best approach is to spend some time thinking like a vindictive, petty little man,\" Megan had said, \"'I'm pissed at this woman for daring to try and leave me. What can I do to fuck up her life more?' Then take your ideas and pre-plan your responses to those avenues of attack. Have responses ready to go for anything like that you can think of.\"\n\n\"That sounds like a lot of work, and also a bummer to have to think like that,\" I said.\n\n\"Yeah, it can be. But the more you do this, the more familiar you'll be with the different scenarios and you can just plug and play the work you've done in the past. What are the couple's finances like? Are they both poor? Or do they have money, but the husband has done a good job of cutting her off and that's why she's come to us? Is there violence involved? Kids? The more you think about all this ahead of time, the more prepared you'll be to just pull a filing out of your briefcase to hand to the bailiff, or you'll have the right precedent right at your fingertips\"\n\n\"Okay, makes sense,\" I nodded, taking notes as she spoke.\n\n\"So, the preparation is your ammunition. How you deploy what you have is the gun you load it into.\"\n\n\"What? What does that mean?\"\n\n\"Well, you've seen me in court, right?\"\n\n\"Yes.\"\n\n\"What do you notice about the lawyers I face on the other side of the aisle? How does the hearing usually go?\"\n\n\"The three times I've watched you...\" I thought about it for a minute. \"Two of them ended up getting pissed and yelling at you or the judge.\"\n\n\"Right! I make a point to try and be ready to counter any slick idea they think they have immediately. Nine times out of ten, it's always some motion to reduce or eliminate alimony or child support. It's always about the money with these guys. They're usually assuming I'll need until the next hearing to be ready to respond. Part of their strategy is to draw it out as much as possible hoping the woman will run out of money for the legal processes. By having something I can just throw out, and immediately counter them instead of waiting to respond another day, flusters the hell out of them. Especially if it's a male attorney. They take one look at me and think 'Oh this little sweetheart doesn't have a chance against me!' Then I hand them their heads, and they completely lose their cool. Now, that doesn't work all the time, but preparing to pull that off is just good practice. Then, if the wheels do come off their bus, so much the better for you, right?\"\n\nI looked at her thoughtfully. \"So, how much of this 'giggly punk rock girl' thing you have going on is a front you put on to throw people off for when you're ready to slide the knife in?\"\n\nShe gave a full-throated laugh, throwing her head back. \"Addison, this is the real me. Courtroom-me is the mask. Kat would have never fallen for courtroom-me. Me-me is what won over her and Cait.\"\n\nI smiled, remembering that conversation as I laid out all my papers on the table. My opposing counsel was also present and setting up, but neither one of our clients had arrived yet. I frowned looking at my watch, then back to the courtroom door. It was really unusual for Keisha to not be early, and she'd never been late for any appointment since I started working with her.\n\n\"All rise!\" the bailiff called out, a few minutes later, when the judge entered and took her place on the bench. Judge Cynthia Yang sat, put on her glasses, and then looked out at her courtroom.\n\n\"Counselors? I believe we were supposed to be having a hearing right now. Where are your clients?\"\n\n\"I apologize your honor, I don't know where my client is. She's never missed a meeting with me, and she didn't call or email to let me know she'd be late or wouldn't make it.\"\n\nKeisha's husband's lawyer made similar apologies for his client.\n\nThe judge looked at us for a moment, frowning, then said, \"Alright, let's give them ten more minutes then we'll reschedule. And we'll have to have a conversation about court costs with both your clients.\"\n\nAfter ten minutes, with neither of our clients showing up, Judge Yang rescheduled the hearing for the following week. I packed up my papers, then I called the office as I walked towards the street.\n\n\"She didn't show?\" Anna, the receptionist at the LWLS DC office said, when I called to check if there was a message from Keisha.\n\n\"No and I'm worried. I think I might swing by her place and check on her.\"\n\n\"I wouldn't do that,\" she said, then I heard a voice in the background, and Anna's voice, muffled answering it, then MJ was on the phone.\n\n\"What's going on, Addison?\" my boss asked me.\n\nI filled her in on the details then again said I was thinking of stopping by her apartment to check on her.\n\n\"We aren't babysitters. We can't handhold every client every step of the way. She'll call and we'll find out what happened and move on to the rescheduled hearing, okay?\"\n\n\"Okay, MJ. I've got to run a quick personal errand, then I'll be back in the office.\" By that time, I'd made my way out of the courthouse and into the bright April sunshine.\n\n\"Good, see you then.\"\n\nI hung up the phone, then pulled up my Lyft app and requested a ride to the Petworth neighborhood where Keisha's apartment was.\n\nThe place was very quiet as I climbed the steps up to her third-floor walkup. It didn't feel like anyone was home in the entire building, but it was the middle of the day. I checked my phone for the apartment number again as I reached the third floor. I wrinkled my nose. There was a familiar acrid smell that danced away from the edges of my memory. I walked past two doors to reach apartment 304. As I raised my hand to knock on the door, two things happened. I realized the door was ajar, and I also remembered where I knew the smell from. Just flashes, really; memories of shooting a rifle with my grandfather in rural Wisconsin when I was a girl. The smell of spent gunpowder.\n\nI called out, \"Keisha?\" as I pushed the door open. I looked into the room and saw her lying next to the couch, with rivulets of dark scarlet running over the floor away from her.\n\n\"Keisha!\" I screamed, and ran over to her.\n\nShe was unconscious, with a huge splotch of blood on her shirt just above the waist of her pants. There was a small hole in her shirt with more blood oozing out of it. I pulled out my phone and dialed nine-one-one. Then I grabbed a blanket off the couch, folded it up, and pressed it hard to the hole in her abdomen. I remembered in a conversation I'd had with Liz, that stopping the bleeding was the most important thing in a battlefield wound, and that most soldiers who had been shot died because of blood loss.\n\nI put my phone on speaker and used both hands to press down on the wound. In less than a minute, the dispatcher told me she had an ambulance on the way to me, and was asking me questions about her breathing, if she was awake, if I knew where the shooter was. I didn't remember answering her questions. I don't remember any of it until the paramedic pulled me away from her. He took over, pulling off the blanket and replacing it with a large gauze pad while his partner wheeled a stretcher in.\n\nThere were police officers in the room as well. I started to follow the paramedics as they rushed Keisha out of the apartment and down the stairs, but a huge policeman stopped me from going out and started asking me questions.\n\n\"I am going with her to the hospital right now!\" I yelled at them, trying to push past. They held me in the apartment, not letting me leave. Just then a short African-American police woman walked in, whom I immediately recognized.\n\n\"Officer Green!\" I yelled. She had been with one of my clients at GW the night I'd met Liz.\n\n\"Ms. Wagner, what is going on?\"\n\n\"That's my client they just took out of here! She no-showed a hearing and I came to check on her and found her shot. I need to go with her to the hospital right now! I'll answer any questions you want, but I am going with her!\"",
        "Officer Green took a look at my face then turned to the other patrolmen. \"Guys, she's a woman's legal aid attorney. Her job is helping women like this victim. She's the victim's attorney.\" She turned to me, \"You didn't see who shot her and no one else was here when you came in?\"\n\n\"No! Can I go please?\"\n\n\"I'll take you, but you ride with me and you talk to me the whole time, okay?\"\n\n\"Fine, can we please go!?\"\n\nShe turned back to the other patrolmen as she started to escort me out, \"I'll take responsibility for her. Tell the detectives they can catch up with us when we're ten-ninety-seven at the hospital.\"\n\nThe ride to the hospital was a blur. I answered Officer Green's questions while she drove, and was startled when she pulled into the emergency bay; it felt like the trip had taken seconds. I jumped out of the car and ran into the hospital with Officer Green on my heels. The receptionist recognized me and buzzed us in, with a shocked expression on her face.\n\n\"Addison, are you alright?!\"\n\n\"They just brought in Keisha Coates, GSW, where is she?!\" I yelled.\n\n\"You're covered in blood!\" she replied.\n\nI looked down. My pink pantsuit had blotches of scarlet up and down.\n\n\"It's not mine, it's Keisha's! Where is she?!\"\n\n\"I don't know! There was a GSW that came in maybe three minutes ago, maybe that's her? I think they're back in O.R. One.\"\n\nI wasted no more words and sprinted away from the reception desk towards the operating rooms. I frantically scrabbled my hospital badge out of my purse, and was both surprised and relieved when it opened the hallway door to the operating rooms for me.\n\nA nurse was going into O.R. One as I arrived and I tried to push past her into the room. She grabbed me, and stopped me just after I entered the operating theater.\n\n\"Whoa, you can't come in here!\" the nurse said.\n\nI took in the scene in front of me. Keisha was on the gurney, her shirt cut off and a paper drape laid over her with a circle in the middle exposing the bullet wound. There were eye-searing bright lights streaming down from a bank of lights on a movable arm above her. A doctor I didn't know was on the far side of the gurney, and Liz was on the side closest to me. Several nurses were quietly and efficiently doing unfamiliar medical tasks I couldn't identify. Everyone was in a full surgical gown and mask. There was a short, sturdy-looking platform with a small ramp someone had pulled next to the bed which let Liz get her chair up to a height that would let her work on the patient without lowering the bed so the other medical staff wouldn't have to lean down. The nurse started trying to push me out of the room, saying, \"Come on, you have to go.\"\n\n\"Liz! Liz, she's my client! I found her in her apartment! What's going on, is she going to be... Let me go! I am not leaving! Liz, what's...\"\n\nLiz barked in a tone of voice I'd never heard her use before, but one that instantly commanded everyone's undivided attention. \"Miss Wagner, shut up. Nurse Hayden, she can stay if she stands right there and doesn't talk. Get a mask on her. Nurse Navarro, hang two more units of o-neg, stat. Dr. Andrews, scalpel, right now.\"\n\nI belatedly realized that the nurse who was holding me near the door was Kat. She grabbed a paper mask from a nearby cabinet and helped me get it on, putting the elastic loops over my ears.\n\nThe other young doctor handed her a shiny silver-handled blade and said, \"Should we wait for Dr. Salvatore?\"\n\n\"Dr. Salvatore is in O.R. Two trying to stop an MVA who went through his windshield from bleeding out.\" She leaned forward over Keisha, and poised her scalpel.\n\n\"Residents aren't supposed to perform surgery unsupervised,\" he said, a worried look in his eyes above his mask.\n\n\"If we wait, this woman is dead. If any attending or surgeon answers their page while I'm working, they can take over or supervise then. Now, please get your head out of my light, and everyone... Shut. Up.\"\n\nThe room went silent except for the insistent beeps and alarms coming from the machines hooked up to Keisha, the rhythmic hissing from the oxygen mask over her face, and the sound of my own ragged breathing. Dr. Andrews reached up and adjusted the light while Liz was leaning over Keisha, making tiny movements with the scalpel I couldn't see from where I stood.\n\nShe said \"Retractor,\" and reached out without looking. Someone took the scalpel from her and slapped some sort of surgical grasping tool into her palm. She clamped the edges of the cut with it, and pulled the skin back. She repeated the move with several more retractors, making a grotesque looking hole in Keisha's abdomen, then said, \"Forceps.\" Another tool was slapped into her hand. \"Vitals?\" she asked, as she gently probed into the hole with the tool.\n\n\"BP eighty over forty-five, pulse one-ten pulse-ox seventy-eight,\" Nurse Navarro said.\n\n\"Suction please, Dr. Andrews.\"\n\nDr. Andrews reached into the hole with a plastic tube that immediately filled with thick, red blood.\n\n\"Get another unit of o-neg on board, please. I'm going to need four-oh PDS on a seven gauge in about thirty seconds, make sure it's ready. Okay, everyone... hold onto your butts.\"\n\nEverything in the room seemed to freeze, except for Liz and the excruciatingly deliberate motions of her forceps. She paused, adjusted her grip slightly, then slowly withdrew the tool out of the hole. There was a small, brass-jacketed bullet covered in blood clutched in the jaws of the forceps.\n\nShe held it up to the light and inspected it briefly, before dropping it into a pan held by one of the nurses with a little 'clink'. \"Save that for the police, please,\" she said quietly.\n\nShe held the forceps out to a nurse who took them and handed her a tiny, curved pre-threaded needle, held in the jaws of another pair of forceps. Taking a second pair of forceps from the nurse, she started making deft movements with both her hands, twirling the noses of the forceps inside Keisha's abdomen. I noticed that people in the room seemed to have started breathing again, tension draining out of the air.\n\n\"What's happening?\" I whispered to Kat, who was still holding me in place.\n\n\"I've removed the bullet, and I'm suturing a laceration on her liver,\" Liz said in a matter-of-fact voice without looking up, moving her hands in quick, precise looping motions. \"Dr. Andrews, flush that for me please,\" she said quietly. Dr. Andrews reached in with a small pitcher of saline and rinsed off the area she was working on. \"Looks like there's another bleeder over here,\" she muttered. \"Vitals please?\" she asked.\n\n\"BP coming up, ninety-five over fifty-five, pulse eighty-five, pulse-ox eighty-three\" Nurse Navarro said.\n\n\"What does that mean?\" I asked Kat. Liz answered me again.\n\n\"It means that because she happened to get shot with a twenty-two instead something bigger like a nine-millimeter, and since she got here when she did instead of ten minutes later, she's probably going to live. Nurse Navarro, how's that blood doing?\"\n\n\"I've got the fourth unit on-board, about half-way in.\"\n\n\"Let's hang one more unit to be safe. Miss Wagner, you said you found her?\"\n\n\"I was checking up on her when she didn't show up for a hearing. I found her in her apartment, lying on the floor. I called nine-one-one and put pressure on the hole like you told me you're supposed to do when someone's been shot.\"\n\nLiz's cheeks moved, hinting at a smile under her mask. \"Well, then you're pretty much responsible for this woman being alive right now. More PDS please.\"\n\nJust then a short, swarthy man brushed into the room past me. \"What have you gotten up to in my absence, eh Dr. Charles?\" he asked in a heavy Spanish accent as he grabbed a mask and covered his face. \"Gown and gloves, please,\" he said to one of the nurses who proceeded to assist him in donning the sterile garb.\n\nLiz answered him without looking up from her work. \"Late thirties African-American female, small-caliber gunshot wound to the posterior intercostal. I started a central line, and removed a twenty-two from the cavity intact, no fragments or spalling. I'm currently suturing. There's a heavy laceration on the liver in the right lobe, but it was a graze, not a through-and-through. Just missed the gallbladder.\" Liz kept quickly working the two pairs of forceps inside the incision. \"Four units o-neg on-board, just started a fifth. BP is...?\" She added questioningly.\n\n\"One-oh-five over sixty-five and still coming up. Pulse seventy, pulse-ox ninety,\" Nurse Navarro supplied.\n\n\"Pardon me, Dr. Andrews,\" Dr. Salvatore said, as he took Dr. Andrew's place and peered into the cavity to inspect Liz's work. \"So, Dr. Franks didn't answer his page in time and you couldn't wait for me, eh?\"\n\n\"She was maybe a minute or two from cardiac arrest due to blood loss. I figured I'd rather take the heat from the Dean than for someone else to have to shock her or crack her chest.\" She reached for a pair of scissors being held out by the assistant nurse, and neatly clipped off the thread. She leaned back a bit and looked up at Dr. Salvatore.\n\nHe leaned a little closer and peered down \"Mmm, yes, very nice. Your third and fourth are maybe a tiny bit close, but... no, there's that vessel there. Bien! Excellent job, Dr. Charles. Good thing I was supervising you for this procedure, eh?\"\n\n\"Good thing, Dr. Salvatore,\" she agreed. She turned and winked at me.\n\n\"Okay, I think you can go ahead and close then, yes? You've done an excellent job so far under my close watch so I think you should complete the job, eh?\" he said with a twinkle in his eye. He turned a bit more somber. \"Then we get this se\u00f1ora up to the ICU and we wait, eh?\"\n\nThree hours later I was sitting in a chair in the waiting room, knee bouncing nervously up and down. I'd finally let Kat take me out of the operating room when they'd transported Keisha up to the ICU. Kat found me a spare pair of sneakers and scrubs to change into, since the police had wanted to take my blood-soaked suit as evidence. MJ had shown up and was sitting next to me, trying to keep me calm with small talk while we waited for someone to come tell us if Keisha was going to be okay.\n\nI sat up as Liz rolled into the waiting room. Without preamble, she said, \"She's going to make it. She's awake and talking to Officer Green. They've put out an APB on her husband.\"\n\n\"Oh my god, thank you!\" I knelt next to her chair and threw my arms around her. \"Thank you, thank you, thank you! I was so worried.\"\n\nShe ruffled my dreadlocks. \"You're as responsible for her not dying as I am. If she'd gotten here five minutes later, she'd be dead. If you hadn't kept pressure on her until the paramedics got there, she'd be dead. You kept your head. You did good.\"\n\n\"I guess I'll stop telling you how to do your job,\" MJ told me. \"Next time you feel like you need to check on a client, you go check on your client.\"\n\n\"Tomorrow, I am going to treat you like the queen you are, Liz!\" I said, \"Our day just went from a casual day out to something special. You've earned some pampering.\"\n\n\"Well, like I said, you were as important to this story as I was. But if you want to spoil me I won't say no to that.\"\n\n~~ Waterfront Neighborhood, Washington, DC, April ~~\n\n\"When you said you would pamper me, I had no idea it would be this nice.\" Liz sighed, then moaned appreciatively as her masseuse worked into the muscles of her shoulders.\n\nAfter leaving the hospital, I'd gone home and started making plans. It took me a couple of hours of calling around but I'd finally found a spa where I could get appointments for the two of us the next morning. I'd gulped a little at the cost. L'Occitane was a high-end spa, but it was the only nice place I'd found where I could get us both in for full spa treatments on short notice, and I really wanted to treat Liz.\n\nWe'd already gotten manicures and pedicures while enjoying complimentary mimosas. I wasn't able to book two separate massage appointments but they'd had the couple's massage room available, which didn't seem like it would be a problem for two friends doing a spa day. At least at first.\n\nWhen we'd gone from the dressing room to the massage room, Liz had asked me for help in getting from her chair to the table, as it was a little higher than convenient for her. Her masseuse and I had both offered her an arm and lifted her to the table. I'd gotten an eyeful of her naked back as she'd laid down and I wrapped her towel around her. There was a thick scar along her spine starting six inches above her waistline and dipping down below her towel, likely from a surgery to stabilize her injury after her crash, but the scar wasn't what got my attention.\n\nHer back and shoulders were just... beautiful. I'd never seen another woman with such well-defined muscles in her back and shoulders. Her skin was almost flawless, a creamy pale white. As I lay down on my own massage table, I had a hard time drawing my eyes away from her exposed skin.\n\nI was surprised when Liz asked the masseuse to start off working on her legs.\n\n\"Just because I can't feel my legs anymore doesn't mean the muscles can't get knotted up,\" she said. \"You can't easily tell if your legs are in some slightly awkward position when you can't feel them. Sometimes I get a good muscle spasm out of nowhere. The first couple times that happened to me I freaked out. 'My leg is moving!' Kind of caused me some unwarranted optimism.\"\n\nI was having a slightly awkward moment of my own.\n\nI didn't know what it was, exactly. Maybe it was the life and death situation the day before. They say that confronting mortality can raise the sex drive, sort of a life-affirming desire, but the way she'd taken charge in the operating room... and that unshakable confidence. Her air of authority. It had been so compelling. So... attractive.\n\nI hadn't been able to stop thinking about it since that moment.\n\nThe situation in the room wasn't helping me put a damper on those thoughts either. The sounds she was making as the masseuse worked her shoulders were very distracting. Every time she moaned in pleasure, I pictured myself trying to draw those sounds out of her.\n\nI tried to distract myself from Liz by thinking about Vivian, but that quickly turned into imagining Viv taking the place of my masseuse. Her hands working on my thigh muscles, caressing and kneading me. That little change skyrocketed my excited discomfort, making every little moan or sigh coming from Liz hit me that much harder, and soon I was alternating thoughts between doing naughty things to Liz then Viv then back to Liz again. By the time our massage was over, I was about to go crazy. I couldn't even enjoy my massage as I was spending every ounce of my self-control not to let my excitement show so my masseuse wouldn't think I was some kind of pervert. In the dressing room afterwards, I changed quickly back into my clothes and told Liz I'd meet her outside.\n\nI stood on the sidewalk out front, soaking up the warm April sun and thinking about what had come over me. Was it just the idea of sex? I hadn't been with anyone for over six months now. Longer, actually. Making out with Viv the other night had primed my engine. I wanted more. Not to be too crude, but I really wanted to get laid.\n\nI knew that was something that I could easily accomplish with Viv if I wanted to. She was a terrific kisser. And she was young, full of energy and funny. And she clearly wanted me. But...\n\nThat might be what my body wanted, but I wasn't certain that's what my head needed. I wasn't yet thirty, not for another eight months anyway. This was the time of life one wasn't expected to settle down, when chasing a good time was acceptable. But that's not what I wanted.\n\nI wanted a partner. Yes, obviously someone I was attracted to, someone with whom I could act out the feelings that had rushed into me in the massage room, but also someone who would challenge me, would understand me, and who shared my goals in life. Someone I could see growing old with. And while I liked Viv a lot, I just didn't see her being that someone for me. It felt like such hypocrisy, after my big speech to her that I wasn't 'out of her league', but I didn't think I'd be satisfied with a girlfriend with so little life experience or drive to attain more. It wasn't just her youth. I needed something more...\n\nSomeone more like Liz, except Liz wasn't an option.\n\nWas Amber right? Could I be subconsciously waiting around for Liz? Was that why I was messing around with a woman five years my junior, whom I found attractive but knew I didn't have long term desires for? Someone I could pass time with without getting tied down while I waited for the moment for when Liz might realize...\n\nIf that's what I was doing, I was doing Viv a disservice. Liz too, for that matter, if I was only being her friend under false pretenses. But was that it?\n\n\"Hey, ready to roll?\" Liz called out behind me as she came out the door. I turned and looked at her as she glided towards me. Her brow furrowed when she saw me. \"You okay?\" she asked, tilting her head. \"You look like you've got something on your mind.\"\n\nI smiled. \"Nope. Not a care in the world. Ready to head over to the tidal basin? I want to get some good photos. The sun's perfect today.\"\n\nThe cherry blossom festival was one of my favorite times to live in DC. The Japanese government had gifted two thousand flowering cherry trees to the United States government in 1912, which were planted all around the tidal basin, a sheltered pond off the Potomac River with the Jefferson Memorial sitting astride the split of land dividing the two bodies of water. There were web sites and news reports every year trying to predict when 'peak bloom' would be, and this year it seemed like Liz and I got lucky on our choice of days off. Every tree around the basin was full of glorious pink and white blossoms.\n\nPhotography had been a hobby of mine since college. My parents had bought me a Canon D-30 as a high school graduation present, and I had thrown it in my bag on my way out the door that morning. I'd made sure I had an empty camera card, which I put to good use, taking photo after photo while Liz and I meandered around the area, looking for good vantages to shoot from.\n\nAt one point, I turned and saw Liz sitting under a tree with the memorial in the background.\n\n\"Hey, hold still,\" I said and raised my camera.\n\nShe held a hand up in front of her face. \"Addison, don't! I'm a mess!\"\n\nShe wasn't a mess. I knew Liz got a little embarrassed about the way she dressed. Casual was her hallmark style. She was always complimenting me on my clothes, and saying I should take her shopping to help her class up her closet, but simplicity really worked for her. She just had on a pair of light khaki pants and sneakers, and a teal Dri-Fit t-shirt from some race she'd done. Her hair was back in her signature ponytail, with a scrunchy the same color as her shirt, and the sun was giving her cheeks a rosy glow. She looked perfect to me.\n\nI pointed my camera and started shooting photo after photo. \"Oh yes baby, work it, show me something,\" I said, putting on an exaggerated British accent. She stopped protesting, and played along, putting on comical poses as I snapped pictures. Soon we were both laughing so hard I could barely keep my camera on her.\n\nAfter I stopped shooting I scrolled through the photos on my camera's tiny screen. I stopped with a gasp and said \"That's the one. Here, look Liz.\"\n\nShe protested that she didn't want to see how awful she looked, but I insisted.\n\nShe was sitting in her chair, leaning forward with her elbows on her knees with her fingers laced together. Only the tops of the wheels of her chair peeked up at the bottom of the frame. Her prominent laugh-lines around her beautiful grey eyes drew attention to them as she gave the camera a full-throated laugh, with her perfect white teeth showing. She was framed almost entirely by cherry blossoms, and in the one space over her shoulder free of flowers, the Jefferson Memorial stood watching, slightly out of focus.",
        "She stopped protesting when I showed her the photo.\n\n\"Holy crap, Addison, that's... that's the first photo I think anyone's ever taken of me that I love. I look... I look great! Why didn't you tell me you're such a great photographer?\"\n\n\"I'm not that great. My secret is just to take a hundred photos so I can find one or two that I framed right by accident. This one just happened to turn out perfect.\"\n\n\"Don't be so modest! This is really, really good. Can I have a copy? I'd like to send that to my grandparents.\"\n\n\"Sure, I'll email it to you once I get home.\"\n\n\"I might even have to put that on a dating app profile. Seriously Addison, that's the best photo anyone's ever taken of me!\"\n\nI felt a stab of pain in my heart. The thought of her taking a photo of mine and using it to find a boyfriend made my stomach roil, and I knew then I was in trouble. My fears about my feelings for Liz seemed to be growing stronger by the minute.\n\n\"Oh yeah, with that photo you'd be guaranteed to find Mr. Right,\" I said, trying to hide my dismay. This day I'd been looking forward to so much was now turning out unexpectedly painful.\n\n\"Mr. Right?\" She said, scoffing. \"Not likely. Maybe Mr. Right-Now, anyways.\"\n\n\"What, you need a fling, not a boyfriend?\" I asked.\n\n\"Eh... not sure a boyfriend is something I can handle until I finish my residency. I'm usually not lucky enough to find a good one, and I don't know if I have the bandwidth to find one that's trainable and whip him into shape. I think right now my standards might be too high. It'd be nice to have someone to make out with now and then, though,\" she laughed.\n\n\"I hear you,\" I said, although I wasn't thinking of just a make-out partner. I looked at the photo on my camera again and, unbidden, the thought of waking up next to that smile everyday filled my imagination. Jesus, I needed to get a hold of myself, I was losing it.\n\nWe had a late lunch at the National Portrait Gallery cafe and by early evening we made our way out to Arlington on the Orange Line. Liz checked the WMATA site before we went underground at the Smithsonian and noted that the elevator at the Clarendon station was out of service, so we rode past it to Virginia Square, even though it was a longer walk to the bar where the Rotors were playing that night.\n\nJust like at the Birchmere, the band was hanging out at the bar, greeting people as they came in, although there weren't quite so many fans packed around them this time. Jo spotted us as soon as we came in the door and waved. This time Suzanne and Larry were with the group, and both of them eagerly greeted Liz.\n\n\"S'up, Scooter? I'm looking forward to watching some more of those sweet chair moves tonight,\" Larry said, giving her a fist bump.\n\n\"You drop the beats, I'll throw the moves, Chrome-Dome! Suzanne, I'm sorry we didn't get to talk last show. What's new, girl?\"\n\n\"Same same. Teaching middle schoolers the finer points of music theory. Most of them are so bad, though, that I can't wait to get up on stage and make something that sounds good.\"\n\n\"That sounds kind of like my life when the first-year residents show up wet behind the ears,\" Liz said with a chuckle. \"They're so bad at everything. Sometimes I just want a patient to come in when they're all eating lunch so I can do it right without having to watch them mess up. They all get better, eventually, but it's painful.\"\n\n\"Can't say the same for a lot of my music students, unfortunately. Sometimes I think I should quit teaching music and be Larry's assistant coach at the high school.\"\n\n\"Baby, that's nepotism. Basketball is a profession with high ethical standards. I couldn't hire you in good conscience,\" Larry said, with a grave face.\n\n\"Even after I let you buy LJ a drum set? Man, that's cold,\" Suzanne said, laughing.\n\n\"Wait, how old is Larry Junior now? I thought he was, like, two. You got him drums already?\" Liz said, laughing.\n\n\"You can never get started too early!\" Larry protested.\n\n\"It's kind of amazing,\" Suzanne said, \"He just turned three in January but he can already keep three different time signatures. He's going to be way better than his dad.\"\n\n\"That's hurtful, but I know you just said that because you're bitter.\"\n\n\"She's bitter?\" I asked, laughing. Larry was cracking me up.\n\n\"Junior's into drums, not bass. I told her if she wants another bass player in the family, we'll just have to make a little sister for Larry Junior. In fact, if you want to get started on that, babe, I've got an open time slot after the show and I'm sure I can 'fit you in', if you know what I mean,\" he said with an eyebrow wiggle.\n\n\"Shut up, you perv,\" Suzanne said, smiling. She lightly punched him on the shoulder, which he promptly started rubbing with an obviously-fake hurt look.\n\nJo walked up as our laughter died, and barked out \"Specialist Charles! Attention to orders!\"\n\nLiz sat up straight, somehow giving the impression of being at attention in her chair and said \"Chief!\"\n\n\"Tonight's mission: Rock out and party hard.\"\n\n\"Yes Chief!\" Liz barked back, then Jo held out her hand and they did some complicated hand jive. Right hand slap, then left, then right fist-bump, then left, then they both spun around, Liz circling her chair in place, and snapped off salutes at each other while saying \"Hooah!\"\n\nLarry rolled his eyes. \"The military-industrial complex in all its glory,\" he snorted.\n\nJo grinned at him. \"Want to have another pull-up contest Larry? I'll cut it out when you can finally beat me.\" Then she turned to me. \"Hey, I hear you've been going out on Liz's training runs. How's that going?\"\n\n\"Pretty good,\" I said. \"I can keep up with her pretty well on my bike. Still working on my distance. When she's in the mood for ten miles I get pretty winded.\"\n\n\"That's awesome. I'm happy she's got a partner. It's always more fun to workout with someone.\"\n\nJill joined us from the bar and wrapped her arm around Jo's waist. \"Show time, you guys. Everyone ready?\"\n\n\"Always ready to rock out with you, Blue,\" Jo said then planted a big kiss on her. \"We'll catch you guys at the set break.\" Then the band made their way backstage.\n\nJo's voice echoed in my mind as Liz and I made our way to her favorite spot, right in front of Jo's microphone stand. 'Happy she's got a partner.' I knew what Jo meant--a training partner--but that wasn't what had sprung to mind.\n\nThe band's first set was just as good as the first time I'd seen them, starting off with Keep Your Hands To Yourself, by the Georgia Satellites. Jo showed off her surprising range as a guitarist, nailing the southern fried rock solos.\n\nLiz and I danced for the first hour straight, then Steve stepped up to the microphone.\n\n\"Alright, time to slow it down a bit,\" he said, \"Our slow dance section was a hit last time so we've got a couple new ones for you.\"\n\n\"You guys, this is going to be so good!\" Suzanne said into her mic with a huge grin. \"This isn't the happiest love song, but it's good for slow dancing and anyway, I've been waiting for this to happen for years!\" She seemed beside herself with excitement.\n\nThey started off a song everyone immediately recognized, with Jill playing the saxophone intro on her keyboards, but the big surprise came when Larry flipped his microphone around and started singing George Michael's Careless Whisper.\n\nLiz whooped and yelled \"Yes, go Larry!\" then turned to me. \"He almost never sings! I've never heard him sing something like this either!\" Larry spent almost the whole song staring at Suzanne after she stepped over in front of his drum kit.\n\n\"C'mon slow dance partner, this is our thing,\" Liz said. She pulled me down onto her lap and wrapped her arms around me just as she had at the Birchmere. I had a much harder time relaxing back against her, though, given everything I'd had going through my mind that day.\n\nAfter Larry's tour de force, Jill came out from behind the keyboards and sang Lisa Loeb's Stay. Jo switched out her black electric guitar for a beautiful white acoustic one with gold hardware for the song.\n\nSteve took the center mic again, and said they were going to do a few more songs then take a break. The band launched into a Sister Hazel tune. I'd gotten up from Liz's lap to dance again, but as I started listening to the words I slowed, barely rocking back and forth.\n\nI'm not right, and I'm not fine.\n\nI want to be rain that tastes like wine!\n\nI want to be good, I want to be great,\n\nI want to be everything except for your mistake!\n\nAs my body slowed to stillness my mind accelerated, thinking about the last months with Liz. Watching her work in the O.R. the day before. The picture I took of her at the tidal basin. My feelings for her bubbled up like a volcano, feelings I could no longer deny.\n\nAnd I don't want your sympathy just understanding,\n\nWe'd be better off if I just took some time to try to understand you.\n\nIt was a crushing realization. Despite how much I'd been thinking about it, it still hit me like a train. Amber was right.\n\nI want to be seen, I want to get clean,\n\nI want to just fall out of in-between!\n\nI'm not right, I'm not right\n\nI don't want to be your mistake!\n\nIt was a thunderclap of acceptance, of fully coming to grips with what had been going on in my subconscious. I had fallen head over heels in love with a woman I had no future with, and there was no way it could end except in disaster. The longer I let it go on the more it would hurt me, and Liz. And probably Viv too, who certainly didn't deserve to have to settle for being a distraction while I waited around for someone who would never be what I needed. It was inevitable. Unless I stopped it.\n\n\"I can't do this anymore,\" I heard myself say, as the song ended.\n\n\"What? Did you say something?\" Liz said, over the sound of the applause.\n\nI turned and looked at her. Her reaction was immediate.\n\n\"Addison? Are you okay?\" Liz asked, looking concerned.\n\n\"I... Liz, I'm sorry, I have to go.\"\n\n\"What?\"\n\n\"I have to... I have to go. I'm sorry.\" I turned and hurried out of the bar.\n\nOnce outside, I found myself hyperventilating in the cool night air. I looked up and down the street, saw the Metro sign for the Clarendon stop two blocks to my left, and started that way.\n\nI'd made it to the Metro entrance when Liz caught up to me.\n\n\"Addison, wait! What's wrong, what's happening?\" Her chair darted past me before coming to a stop and circling around between me and the escalator. \"Are you okay?\"\n\n\"I can't do this anymore Liz, I'm sorry.\"\n\n\"You're not making sense. Talk to me.\"\n\nI laughed but it came out as a sob, and I realized that tears were starting to run down my cheeks.\n\n\"Liz, remember what you said at the last show? How happy you were that I chose to be your friend?\" She nodded at me. \"I've been lying to you and to myself.\"\n\n\"What do you mean?\"\n\n\"I mean, you're more than a friend to me.\"\n\n\"You mean a lot to me too.\"\n\nI took a deep shuddering breath and plunged into the truth, knowing it would mean the end.\n\n\"Liz... I... I've fallen in love with you.\"\n\nShe didn't say anything, but her eyes widened and her chair rolled a fraction of an inch back away from me. The distance hurt.\n\n\"I tried not to, I tried to just be your friend but I've been lying to myself, and I'm so head over heels for you, and it's killing me to tell you because I know this will be the end of getting to see you, but it's not fair to you for me to keep pretending and it's going to destroy me if I keep going down this road.\" I stopped the rush of words from my mouth and waited.\n\n\"Addison, I don't know... I don't know what to say, I mean...\"\n\nI saw the look in her eyes and knew that was it. Just as I'd known it would be. I stifled a sob.\n\n\"I'm sorry Liz. I'm sorry for not being honest. I'm sorry I'm not... I'm just... I'm sorry.\"\n\nThere didn't seem to be anything else to say, and I had the uncontrollable urge to run. The tell-tale rumbling, and squealing of metal wheels, came up the escalator to announce a train was coming into the station below.\n\n\"I have to go. Goodbye, Liz.\" She started to say something but I was sure I wouldn't be able to bear whatever it was. I had to stop her from saying it. Without conscious thought, I leaned down and cupped her face with my hands. She barely moved as I softly kissed her lips, stealing a brief taste of what I desperately wanted and knew I could never have. We stared into each other's eyes for the barest moment before I let her go, then stepped around her chair and sprinted down the escalator.\n\nWhen I hit the first landing and ran towards the turnstiles, I heard her start yelling down after me.\n\n\"Addison, wait! Addison!\"\n\nI swiped my wallet over the sensor and ran down the escalator to the platform. The train had already stopped and stood with its doors open, pale yellow light spilling out onto the red tile floor. My tears began in earnest. I could barely see as I boarded the train and grabbed one of the handrails, ignoring the looks from the other passengers.\n\nI heard Liz's faint voice calling down into the Metro. \"Addison, come back! Addison! Addison!\"\n\nThe doors slid shut, and her voice was gone.\n\nTo Be Continued...\n\nFor anyone who hasn't read my series, Hard Landing, there is a playlist called 'The Set List', a collection of songs performed by The Rotors, available on Spotify. I have updated the playlist with the songs from this chapter. The link to the playlist can be found in the 'CONTACT' tab of my author page. I always appreciate getting follows on my playlist."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "disabled",
        "gay",
        "gay romance",
        "lesbian",
        "lesbian romance",
        "love story",
        "romance",
        "wheelchair"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/wheels-in-motion-ch-02"
}