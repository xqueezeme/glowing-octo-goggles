{
    "title": "Collateral Ch. 20",
    "pages": [
        "\"Is that you, little bro?\" he heard his brother calling for him.\n\n\"Yeah, it's me,\" Jake spoke. \"I'll make you something to eat.\"\n\n\"With your cooking, I might be dead by next week,\" Diaz joked.\n\nJake helped his brother up on to his good foot and then guided him to the kitchen table. At least he knew how to make scrambled eggs.\n\n\"How come you didn't go running back to that asshole?\" Diaz asked as he ate.\n\n\"I'm no longer collateral,\" Jake spoke as he fiddled with the cutlery. \"Whatever business he had with us, that's over.\"\n\nDiaz seemed to ponder. \n\n\"I thought fags were pussy ass bitches. He did a number on me, the fucker.\"\n\n\"I tried to warn you,\" Jake said. \"That guy, when he's not working, he's just training. He's into some weird shit kung fu stuff.\"\n\n\"You should have tried harder and fired that gun,\" Diaz mumbled.\n\n\"And have us both in jail? Or worse? You don't know this guy, Diaz.\"\n\n\"Yeah, I don't know him. But I thought I knew you. And you chickened out. So what if we ended in jail? This shit isn't a good life anyway. What do you do? Wash dishes?\"\n\n\"Diaz, just stop it. Any kind of work is good. Especially in our situation.\"\n\n\"Why don't you go to one of those construction sites? They pay better, at least.\"\n\n\"I don't want to go back to work for him,\" Jake replied. \n\nDiaz seemed to ponder.\n\n\"I suppose that would be shitty, yeah. But don't worry, once I'm on my feet, I'll be right back into action. And you won't have to wash dishes no more, little bro,\" he said.\n\nJake shrugged. Whatever plans Diaz had, he didn't want to hear. He could not give a damn about anyone's plans.\n\nLater, after his brother fell asleep, he took out his phone and stared at it. Missed calls, unread messages. He had to get rid of the damn thing. \n\n***\n\nIt was quite a surprise, Klaus thought, as his eyes bore into the papers in front of him like he wanted to burn a hole through them. A very unpleasant surprise. Like a shard of ice that made him feel cold from the inside. He frowned.\n\n\"Sir?\" his secretary's musical voice brought him back to the real world. \"Are the terms to your liking? You have not said a word. I can have the legal team ...\"\n\n\"No, it is all in order, Martha,\" he smiled at the woman who seemed relieved.\n\nEverything was in order except for one thing. And that had to be corrected. The past several weeks was enough time for things to settle down.\n\n***\n\nJake felt like he needed three nights of sleep. Working two shitty jobs was enough to make him a little crazy. Or just very tired. At least, Diaz was on the mend. Soon enough, they were going to be both working, and that meant he could catch a bit of rest. \n\nHe kicked a stone and watched it roll. Until it hit a pair of perfectly shined shoes. His head shot up.\n\n\"I think it is time for you to come home now.\"\n\n\"That's exactly where I was heading until you blocked the way,\" Jake looked away with growing unease.\n\n\"You are not answering your phone, nor reading your messages. I believe this rebellious period should come to an end. You did not even go to work.\"\n\n\"Believe whatever the fuck you want.\"\n\nThe man started walking towards him. Jake looked around. The deserted street didn't look to have too many escape routes. \n\n\"I do not like repeating myself, Jake. Come home.\"\n\nThe hand on his wrist was warm, but Jake was done with being lulled into a false sense of security. He pulled his arm free.\n\n\"Or what? Are you going to put a bullet through my head? Or beat me bloody?\" he spat.\n\nAgain, the blue eyes swam in hurt. Jake wanted none of it. Believed none of it.\n\n\"It is true that we need to talk.\"\n\n\"Talk about what? Are you for real, Klaus? You held a fucking gun to my head!\" he pointed two fingers at his temple to emphasize his words. \"Don't tell me that thing wasn't real!\"\n\n\"It was real,\" Klaus sighed.\n\n\"Was it loaded?\"\n\n\"Yes, it was loaded.\" \n\n\"For fuck's sake,\" Jake pushed his hands through his hair in despair. \"What do you want me to say, huh? That I'm crazy enough to like playing Russian roulette with you? That shit ain't flying; I can tell you that!\"\n\n\"Do you suggest that I could have hurt you? The safety was on.\"\n\n\"No shit,\" Jake spoke. \"Well, I don't give a fuck anyway. I don't want your fucked up games. Just stop being in my way. Ah, and take this stupid phone. It's yours, anyway.\"\n\nHe took the phone from his pocket and held it. Klaus made no move to take it.\n\n\"I bought it for you. I do not want it back.\"\n\n\"Well, you should take it, because it's not mine, either. I am not going just to break it or throw away your property; it's too expensive.\"\n\n\"You can keep it.\"\n\n\"Fine,\" Jake pushed it back into his jeans. \"I'll drop it by your house when I have the time.\"\n\nHe began walking. He could not stand one more minute to be around the man. He could not stand looking at him and think of all the stupid lies. And the time before. Before everything went to shit.\n\n\"I will wait for you, then,\" Klaus called after him.\n\n***\n\nJake was entitled to feel hurt. But he should have known better. Klaus tossed and turned. The boy should have trusted him. It did hurt like a bitch. Something of Jake's language seemed to rub off on him.\n\nAnd sleeping alone was a bitch, too. He gave up and went to the window to light another cigarillo. The prey was proving difficult to catch. Maybe he could start to corner it. Then Jake would have to talk to him. And he could settle things, explain everything, and they could go back to normal.\n\nIt felt unreal. Like a pain in his side that refused to go away. He could have just gone and forced the boy to come back. But the thought did not appeal. Jake had to want to keep up his part of the deal. After all, Diaz was free as a bird, despite being the most deserving of a few years behind bars in probably the entire town.\n\n***\n\nThat was the fourth place where they said they didn't need any help. The situation was starting to feel creepy somehow. At least, Diaz was bringing home money, only he knew how. Jake didn't care to know, and he didn't want to get involved.\n\nMaybe that was the sign he had been waiting for his entire life. This town was a dead end, nothing more. He could lie to himself all he wanted, but the thought of dying while peddling drugs or doing something stupid was not his idea. It was maybe his brother's, but not his.\n\nThere were a few loose ends to tie up. It hurt like a bitch, but it was needed. He felt so stupid for still caring for that asshole. But he would have rather cut his hand than grab the phone and call him. They were going to forget about each other. Klaus was probably already swimming in supermodels by now. And one day, maybe he was going to get together with someone else. Not like Klaus. That was as definite as the scar on his arm. \n\nHe went straight to the post office. Counting the few crumpled bills and change in his pocket, he spread them on the counter. \n\n\"I'd like to send a package.\"\n\n***\n\n\"What's with you home so soon?\" Diaz questioned.\n\n\"I can't seem to find a decent place to work in this shitty town,\" Jake shrugged. \"I'm thinking about leaving.\"\n\n\"Leaving? Why would you leave? You can work with me,\" Diaz grabbed him by the shoulder.\n\n\"Nah, I'll pass,\" Jake shrugged.\n\nDiaz threw him a strange look.\n\n\"Ever since you went to live with that fag, you got all these crazy ideas in your head. We have to rebuild the Outsiders. It's only you and me left now.\"\n\n\"Only you,\" Jake shook his head. \"I was never one of you, guys. You made sure I felt that. I was the fucking Outsider. Even to you.\"\n\n\"You were just a kid, little bro. I could not let you in everything. But now things are different. Come on. We'll have fun, women, everything. Don't tell me that fag made you like to take it up the ass, too,\" Diaz joked.\n\nJake recoiled from his brother's touch.\n\n\"Stop saying the word fag,\" he said through his teeth.\n\n\"Say what?\" Diaz moved closer like he pretended he could not hear well.\n\n\"I said,\" Jake straightened his back and looked his brother in the eyes, \"to stop saying the word fag.\"\n\n\"Are you taking that guy's side now? He took our gang away from us, our home, he beat me up, broke my leg, and you're on his side?\"\n\n\"I'm on no one's side but mine,\" Jake replied. \n\nDiaz's eyes grew wide. Then he began shaking his head.\n\n\"Nah, that cannot be,\" he spoke. \"What are you trying to say?\"\n\nJake sighed, and inhaled deeply, knowing it was now or never.\n\n\"I'm gay, okay?\"\n\nDiaz stared at him for a moment and then frowned.\n\n\"Is April's Fools or something?\"\n\n\"No. That's who I am. And don't worry, Diaz, you don't have to support your little brother's weight around no more. I'm leaving.\"\n\n\"Did that guy turn you like a little bitch then?\" Diaz asked.\n\n\"No. I was always gay.\"\n\n\"Like hell you were. You fucked girls. Don't tell me shit just to piss me off.\"\n\n\"I never liked it with a girl.\"\n\n\"Bullshit!\" Diaz swept the plates off the table, making them land on the floor and break into pieces. \"Stop joking, little brother or I won't mind beating the shit out of you!\" Diaz pushes his index finger into Jake's face.\n\nJake remained calm.\n\n\"I'm leaving tonight. If you have anything to say to me, just say it now.\"\n\n\"This is what I have to say to you.\"\n\nThe punch made him lose balance for a moment. But he regained it and put his fist into Diaz's face so fast that the other staggered, both in surprise and because of the strength of the hit. Maybe he had picked up a few things lately too.\n\n\"You don't get to beat me up anymore, big brother,\" he said bitterly. \"If you can't live with me being gay, I can. And I prefer it.\"\n\nHe went through the door without a look back.\n\n\"Jake, come back here,\" Diaz yelled after him.\n\nJake just continued to walk faster. They had not had a good surgeon. Diaz now had a limp. And that meant he could not catch him. \n\n***\n\nHe waved for another car, but the driver didn't stop. He could feel his jaw starting to hurt, where Diaz had hit him. That was not going to look good. But he had some money left from the time he had worked for Klaus to put a roof over his head until he found work. \n\nThe least pleasant thing, however, was not how his feet were starting to hurt, or how his belly grumbled. The annoying little thoughts dragging on him like an elastic band, and all related to that guy. The further he walked away from his place of birth, the further he was getting away from him, too. And that put an empty space in the pit of his stomach that was making it almost impossible to breathe. \n\nA car almost blinded him, coming from the other direction. Jake was tempted for a second to give the guy the finger, but he was too damn tired for that. Maybe he could just find a place to sleep not far from the road and continue his trip in the morning.  \n\nThe driver that had just passed by him made a sudden U-turn, and Jake looked behind him. The silver Merc didn't seem ominous by no means, but it was not like he could tell good guys from the bad guys lately.\n\nThe surprising part was that the Merc stopped by his side. When the window slid down, he wondered if he should make a run for it.\n\n\"Jake, buddy, what's with you here?\"\n\nJake stared in shock at the last person he was expecting to see.\n\n\"Fuck,\" he murmured under his breath, as he looked back into Hans's face.\n\n\"Come on, don't just stand there. Get in, and I'll give you a lift.\"\n\nHe looked down the road. There was a chance in a hundred he was going to get someone to drive him to the next town. And Hans was a nice guy, after all.\n\n\"So where to?\" Hans asked him, once he was seated comfortably inside. \"Is it just me, or you're traveling to the opposite direction of what I know to be your hometown?\"\n\nJake snorted. But he was thankful for the consideration.\n\n\"I just need to get to the nearest town. Or just somewhere that is far enough from here.\"\n\nHans made a small non-committal sound.\n\n\"Should I ask what happened?\" he kicked the car into gear and they started moving. \"Wait, what's that on your face?\"\n\nHans frowned as he spoke. \n\n\"Just tell me it was not my friend who did that to you or it means that I don't know anyone anymore and I should lose faith in humanity.\"\n\n\"No, it wasn't,\" Jake hurried to talk. \"It was my brother. I kinda came out to him or something.\"\n\n\"Then I'm surprised you don't look worse,\" Hans said in good humor.\n\n\"I know how to run,\" Jake replied.\n\n\"It looks so,\" Hans added. \"Do you want me to call Klaus?\"\n\n\"No,\" Jake said sourly. \"I'm through with that guy.\"\n\n\"Something did smell fishy to me,\" Hans spoke. \"Klaus only speaks about work, and you're never online. I should have guessed there was something wrong in paradise.\"\n\n\"Paradise?\" Jake snorted. \"It was not anything like it.\"\n\nBut it had been everything like it. Only it had been nothing but a fucking ugly lie, nothing else.\n\n\"But what brings you here?\" Jake chose to change the subject. \"And you even left your boyfriend behind, it seems.\"\n\n\"Well, Stephen has a lot of work to do. And he's not my boyfriend anymore.\"\n\nJake stared at the man in shock.\n\n\"What? Did you guys break up? Why?\"\n\nHans laughed.\n\n\"He's actually my fianc\u00e9 now. We're getting married.\"\n\n\"Fucking A!\" Jake exclaimed. \"That's pretty awesome, man! Congrats!\"\n\n\"I am here, actually, to invite you and Klaus to my wedding. I thought it was pretty important news not to deliver over the phone. And I wanted to see both of you losing it when I broke the news to you.\"\n\n\"Well, you can definitely say I'm losing it! It's fucking great! I hope you guys will be happy and all that stuff people say to those ready to tie the knot.\"\n\n\"I also wanted to propose something else, but never mind,\" Hans said quickly.\n\n\"Ah, man, it's like the biggest news ever,\" Jake shook his head in disbelief. \"But what did you want to propose?\"\n\n\"Ah, I'll bring it up another time. Let some things chill.\"\n\n\"If you say so,\" Jake said unconvinced.\n\n\"Now that I told you my secret, how about you tell me yours? What made you make a run for it? And how is Klaus not after us this very moment, with a special unit, just to take you home?\"\n\n\"Long story,\" Jake mumbled.\n\n\"I have time. I'll take you where you want to be, and then I'll see to you getting settled. It looks to me like you don't carry any luggage. Do you always travel this light?\"\n\n\"Okay,\" Jake exhaled. \"Well, maybe the story is not that long. He held a gun to my head, beat up my brother, and didn't even say sorry.\"\n\nHans remained silent for a moment.\n\n\"I doubt he had any intention to hurt you for real. And, while I don't know your brother, I suppose he had it coming.\"\n\nThat Jake could not argue with.\n\n\"Yeah, I guess. But ... I don't know this guy, Hans. He ... I don't have a fucking clue who he is.\"\n\n\"Well, did he explain to you why he acted the way he did? There must be an explanation for it. I know Klaus well, and this is not just me taking sides with my best friend. Despite his annoying personality, he always means well.\"\n\n\"I don't know,\" Jake shook his head. \"I just ... I cannot. I need to set my head straight. Be on my own. Learn who the fuck I am, you know? Maybe that's the problem. Not that I don't know who he is, but that I don't know who I am.\"\n\n\"Well, distance makes the heart grow fonder,\" Hans said while watching Jake intently. \n\nJake winced. At least, Hans was not quick to just take Klaus's side, and that meant something. As little as he had interacted with the man, he was sure they were friends, to some degree. Hans had grown on him, in a way that not many people had. \n\n***\n\n\"Hey, don't expect me just to leave you here!\" Hans protested as he forced the cash into his hand. \"And don't worry. I'm not Klaus. You're sexy as hell, but I want that money back to the last cent.\"\n\nJake snickered.\n\n\"I will pay you back, don't worry.\"\n\n\"And let us get you settled,\" Hans said as he took out his credit card. \"I'm paying for your stay, but then I'll be on my way.\" \n\n\"Isn't Klaus expecting you?\" Jake asked.\n\n\"He can deal with a bit of waiting. Plus, if what you tell me is true, he deserves it.\"\n\n\"All right. But don't let him wait too long. He's an asshole with that kind of thing.\"\n\nHans laughed.\n\n\"It looks like you do know him well, Jake. Yeah, he's a stickler for etiquette, when it pleases him.\"\n\n\"And ... please don't tell him anything about me. That we met and, you know, ... Everything.\"\n\n\"I won't. I'm your friend, too, and if this is your decision, I respect it.\"\n\nJake could not say he wasn't thankful for having Hans to help him. At least, this type of relationship was honest, and he didn't have to question the man's reason.\n\n***\n\nKlaus was carefully perusing his correspondence when his butler let him know of Hans's arrival. Anything was welcome to keep him occupied. It had been weeks since Jake had promised to drop by. His patience was wearing thin, and, for the first time in who knew how long, he felt like he had no clear idea what to do to make things happen. No, it wasn't like that. He knew what to do, how and where to squeeze. It was all a matter of time, and then Jake was going to have to listen to him. And then things were going to get back to normal. \n\n\"Hey,\" he stood up and let Hans pull him into a bear-like hug.\n\n\"How are you, my friend?\" Hans pushed him at arm's length and searched his face with inquisitive eyes.\n\n\"All well. Business as usual.\"\n\n\"That's what you're good at, after all. But where's Jake? I was expecting to see him running to the door, wagging his tail,\" Hans joked.\n\nKlaus froze his face into an expressionless mask.\n\n\"Oh, he's not here.\"\n\nHans seemed taken aback.\n\n\"I see you're evolving, Klaus. How nice of you to leave a longer leash for your lover. Good thing you're less of a control freak than usual.\"\n\n\"Trust me, that is nothing of the kind,\" Klaus pursed his lips. \"We are ... taking a break, I think.\"\n\n\"Taking a break?\"\n\nWhy on earth Hans had to sound like a fucking parakeet at this very moment? It made a small muscle in his jaw begin to tick.\n\n\"Yes, we had a bit of a misunderstanding, and now I need to let him cool his hot head off a little. He will come around, eventually.\"\n\n\"This sounds serious,\" Hans's eyes filled with worry. \"Come on, spit it out. Don't make me nag you until you tell me everything.\"\n\n\"I would appreciate if you skipped playing the best friend part, for now,\" Klaus snapped.\n\nNow Hans frowned.\n\n\"How about you skip being an asshole for a change? I don't 'play' this role. You should know better.\"\n\n\"Yes, I know,\" Klaus exhaled. \"I am terribly sorry. I have no idea what is happening to me these days.\"\n\nHans nodded in understanding.\n\n\"Apologies accepted. But I suppose you don't take Jake's absence as easy as you want me to believe.\"\n\n\"Maybe,\" Klaus shrugged. \n\n\"I don't understand how you're not after him, dragging him back. This is definitely new to you. I mean, everything is new when it comes to Jake and you.\"\n\n\"What do you mean? I never run after a lover.\"\n\n\"This is not just about any relationship you had in the past. Klaus, let me be honest with you. I don't remember ever seeing you so invested in someone.\"\n\nKlaus sighed.\n\n\"Jake had to be unruly at the most inopportune time. I needed to settle things with his brother, and he chose to make an appearance. He just misunderstood my actions.\"\n\n\"Oh,\" Hans murmured. \"And did you explain to him what really happened?\"\n\n\"He is too stubborn to listen to reason sometimes. So, no, for now, he believes whatever he thinks he is entitled to believe.\"\n\n\"How long has it been until you two are like this?\" Hans questioned.\n\n\"I think a few months,\" Klaus felt irritated by the question.\n\n\"And aren't you afraid he's going to go down some wrong path? You know where he's coming from, right?\"\n\n\"Well,\" Klaus's frown deepened. \"If he wants to be a gangster, let him be a gangster. He knows what is on the table.\"",
        "\"Wow, I thought you would be more into making him take the right path. You don't sound like yourself.\"\n\n\"In this matter, my friend,\" Klaus ran one hand through his hair, \"I must say ... I want him to come back because he wants to. This, whatever happened between us, was never real if he does not choose me over that asshole of a brother he has.\"\n\n\"Oh, my ... fuck me,\" Hans chuckled. \"You're frigging jealous! I've never seen you jealous! Frankly, I think Jake should be examined by a team of CERN scientists to see what he carries in that pretty head of his because if he managed to make the Ice Man himself jealous, he might have the keys to some important mysteries of the universe.\" \n\n\"Stop joking. And I cannot be jealous. It is not like he is fucking his brother. Why would I be jealous?\"\n\n\"So making him choose between you and his family is totally normal,\" Hans shook his head.\n\n\"I do not make him choose.\"\n\n\"My friend, you're a total bundle of contradictions. I'm this close to want to smack some sense into you.\"\n\n\"I think you should refrain from that,\" Klaus replied sourly.\n\n\"Well, it appears that Jake is not the only one with a hot head in all this. Anyway, I wanted to tell you something important.\"\n\nKlaus examined his friend and pondered.\n\n\"You are smiling like the famous Cheshire cat. What did you do?\"\n\n\"Well, you don't have to be so annoying, but yes, I did something. The most important thing in my life to date.\"\n\n\"Hmm, did you buy a new house? I have yet to see someone with so much aversion for new property. Seeing that I am engaged in real estate businesses everywhere I go, that is a tad unnerving.\" \n\n\"No, something more important than that.\"\n\n\"Hans, you are testing my patience. Just do not tell me that you fell in love, because that I heard at least one thousand times in the past few months. Unless, of course, you were so excited for the new law that has just passed, that you went and did something stupidly romantic like getting on one knee.\"\n\nHans's smile widened. Klaus chuckled.\n\n\"Ah, you old devil. This is it, right? And what did he say?\"\n\n\"Actually, I was the one proposed to,\" Hans said with satisfaction. \"And of course I said 'yes'.\"\n\n\"Wow,\" Klaus leaned against his desk. \"So when should we expect the happy event to take place?\"\n\n\"We both decided that Christmas is a wonderful time of the year to have the celebrations. And you are invited as the guest of honor, of course.\"\n\n\"Have you decided on a place for the event? I would love to offer my house, you know,\" Klaus spoke.\n\n\"That is wonderful news,\" Hans clapped his hands. \n\n\"Yes, it is,\" Klaus said, and a bit of warmth returned to his voice. \"I am happy for you. It was something you wanted for a long time, was it not? And do not worry; I know you just manipulated me into putting my house at your disposal for the party. That means that nor you or Stephen want a thousand people you don't know at your wedding. You know the place is rather cramped.\"\n\n\"It's perfect for what we have in mind. The only thing is, I want to invite Jake, too.\"\n\nKlaus felt his lips twitching, seeking to form a grimace. \n\n\"That would be difficult. The annoying brat is not answering his phone.\"\n\n\"But you know where to find him, right? I expect you to tell him the news,\" Hans said.\n\n\"I do know where to find him,\" Klaus admitted. \n\nThat could be the perfect opportunity. Klaus thought about it. It was worth considering, nonetheless. \n\n\"So you are settling down,\" he said after a small pause. \n\n\"Yeah. He's perfect, you know?\" Hans said with a small smile.\n\nPerfect. Something usually difficult to achieve. But not impossible. He loved imperfections most now.\n\n\"I also wanted to hold you to your promise from our childhood,\" Hans added.\n\n\"What promise?\" Klaus asked.\n\n\"You know, the joint wedding,\" Hans said with a small smile.\n\nKlaus snorted.\n\n\"That was just something stupid. Plus, I think the twins are already married with children by now. You know they were older than us.\"\n\n\"Joke all you want, but just think about it,\" Hans smiled again. \"Jake seems to be a commitment type of guy. And, just to be sure, you won't have any issues with him straying, if you tie him up properly.\"\n\n\"Regardless of your choice of words, Hans, for me, it would be just a stupid idea.\"\n\n\"Why? You told me you wanted to take Jake with you to Germany.\"\n\n\"Yes, so we can continue what we have begun. But marriage? Sometimes, Hans, I think you know me too little.\"\n\n\"Again, you're contradicting yourself. You know, you're not getting any younger. And Jake, well, he does have a future. He might grow bored with you, and head over to greener pastures.\"\n\n\"And that is how I know you sometimes like talking out of your ass,\" Klaus shrugged, but a small annoying seed fell and dipped right into his heart. \"As I see it now, Jake and I are hanging by a thread. He holds it in his hand. If he chooses to severe it, I have no qualms about it. I am not like you. I do not believe in romantic nonsense, and happy-ever-afters.\"\n\n\"Oh, no,\" Hans pressed his chest in a theatrical gesture. \"The saddened prince decided he could live without love. And then he roamed the earth, trying to rekindle the flame in his heart to no avail.\"\n\n\"Frankly, Hans, you sometimes make me want to punch you in the face. We are not 15 anymore, nor will we ever be again. Jake was more interesting than many others I have met. But he is not the end of the road for me. I am not going to wait for him forever.\"\n\n\"As you say, my friend,\" Hans shrugged and threw Klaus one shrewd look that seemed to see down right into the bottom of his heart.\n\nThat night, he slept like hell. He had not thought about Jake finding someone else. And Hans had to come and just say that. Now, he could not get that stupid idea out of his head, regardless of how hard he was trying.\n\nTBC\n\n*****\n\nAuthor's note:\n\nThank you for reading! Only a few chapters left and this story will be concluded. Jake took quite the leap of faith, while Klaus ... he should take one, too, right? Both guys now need to clear their heads. If love is there, it will survive :)\n\nUntil next time,\n\nAll the best,\n\nLaura."
    ],
    "authorname": "laurasfox",
    "tags": [
        "gay novel",
        "gay romance",
        "romance",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/collateral-ch-20"
}