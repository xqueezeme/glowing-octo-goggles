{
    "title": "Extraordinary Talent Pt. 04",
    "pages": [
        "(These events occur in a world where legalized, non-hereditary slavery is common-place for serious crime, unredeemed debt, or voluntary self-indenture. Eighteen years of age is the minimum for anyone in this world to be enslaved or be involved in slave business operations. This particular story focuses on the low end of coercion, primarily Femdom within the context of a voluntary personal services contract requiring a young man to serve a wealthy woman while they attend college together. If you object to the basic premises of this story, I recommend that you find something else to read. As always, this is strictly a FANTASY.)\n\n(Matt Hewitt's Viewpoint)\n\nI spent hours at the Golden Police Department that night in March of my sophomore year in engineering school. As I expected, the police were unhappy to find that I had used a baseball bat and handcuffs on the half-naked guy struggling in Theresa's bedroom. Things got better for me when an officer found a plastic bag, containing half a dozen unidentified pills, in Hank's pants pocket; lab analysis of both the pills and Terri's blood later established that it was GHB, a roofie drug, as I had feared.\n\nI tried to tell the truth but not the whole truth: I was Ms. Thornton's roommate, employed by her father to be her tutor. I had entered our apartment and heard her protesting \"No, No,\" and found this guy standing over her, dropping his pants, so I whacked him with a baseball bat and cuffed him, then alerted Ms. Thornton's security service. I insisted that I couldn't wait for the police to arrive, for fear he would rape her. When the detective asked me why I hit him with a bat, I just looked at him and replied, \"Did you see the muscles on that guy?\" I did NOT tell him that I'd considered shooting him with Terri's pistol instead.\n\nNor did I tell the police that, at the insistence of her father, I had signed a personal services contract. Under Texas law, this contract obligated me to act as if I were Terri's slave until we graduated. Colorado had never accepted the resumption of slavery in the United States, and any mention of my Free In Name Only (FINO) contract would have made the police even more suspicious. I also \"forgot\" to tell them that I had shadowed Terri and Hank because I feared exactly what had happened\u2014THAT would have made me a stalker.\n\nAbout two hours after I was taken to the police station (while EMS took Terri and Hank to the Denver Health Medical Center), a high-powered lawyer appeared, obviously sent by Terri's father, and I was sprung. The lawyer took me to the hospital, but because I was not a blood relative I couldn't see her or find out her condition. Fortunately, soon thereafter Mr. Thornton and his security chief, Hans, showed up, having taken the corporate jet from Texas. The oil baron was understandably focused on his daughter's health, but Hans took me aside and found out the story. Hans had always been critical of my clumsiness, but for once he approved of me.\n\nEventually, the physician briefed Thornton so that I could overhear\u2014Terri was awake, still feeling sick, and asking for me. So her father insisted that I come with him to see her. Narcan and stomach pumping had brought Terri back to consciousness. She was very embarrassed once she realized that she had been drugged, and repeatedly told her dad that \"Matt warned me, but I wouldn't listen.\" Between us, we finally calmed her down and assured her that no harm was done. She had to stay overnight for observation, and Hans arranged for a 24-hour security watch on her room. I heard him talking very quietly to Mr. Thornton about what I had done, and after that, I could do no wrong. Theresa's dad kept thanking me, and I kept repeating that I wished I had done a better job of heading off the situation\u2014but he knew that my slave status prevented me from defying her. Meanwhile, a rape kit established what I had hoped, which was that Hank hadn't had a chance to penetrate her. Finally, about 3 a.m., I told the father, as respectfully as I could, that I was dead on my feet and needed to sleep. I don't really remember how I got back to the apartment\u2014I think Hans drove me.\n\n*****\n\nThe next day I showered and went back to the hospital, meeting the same police detective just coming out of Terri's room after getting her statement. The physician released her, and Mr. Thornton and Hans drove her home while I followed in her car, accompanied by the first of a series of armed security guys. Sunday, I gently asked Terri whether she was well enough to go to class the next day, at which point she suddenly perked up and shoed her father out, thanking him for everything and pretending she was fine. I knew better, and the 24-hour security guards shadowing her for the next ten days didn't improve her attitude. Finally, she had a long telephone conversation with her dad, obviously trying to convince him that she didn't need a guard. All I heard was \"Who needs this when I've got Matt?\" and I went away grinning to myself. The protective detail was withdrawn while we frantically tried to catch up on our studies\u2014even 36 hours had left us struggling in class.\n\nHank pled guilty to possession and use of a controlled substance, which sent him to prison for several years. Mr. Thornton's lawyer reminded him to keep his mouth shut and stay away from Terri and me if he wanted to avoid attempted rape charges.\n\nPhysically, Theresa was safe. Psychologically, however, she had suffered a close call that made her leary of other guys. Once the guards were gone, I could resume my usual task of servicing her orally, which relieved some of her stress, but she was still under a lot of pressure from school.\n\nI finally asked her to sit down and talk to me. No sense beating around the bush\u2014I'd already had my face in it that day, anyway. \"You probably don't want to hear this, Terri, but we need to talk about what's bugging you.\" She grimaced, but nodded for me to continue.\n\n\"On the one hand, you obviously don't want to go on a date for a while.\" Another rueful nod. \"On the other, you're still wound too tight about school, and I'm afraid my 'Extraordinary Talent' [she always joked that cunnilingus, not tutoring, was what gave me that classification] isn't enough for you.\"\n\n\"Yeah, Matt. I can never thank you enough for looking out for me, and your tongue is fantastic, but . . .\"\n\n\"Yeah, But,\" I agreed. I went off on a tangent. \"Do you remember the day you took me to the Longhorn last year, and that slave wrangler, Florence, tried to convince you to milk me if I got uptight?\" She giggled, for the first time in two weeks. \"No, I don't want you to shove a vibrator up my behind, nor would I dare suggest doing something like that to you.\" I continued. \"But, I think now you're the one who needs some kind of stress release. At the risk of getting my face slapped, can I suggest that you do what you did last August 20th?\"\n\n\"What happened on August 20th?\" She asked, looking blank, but then the coin dropped in her mind. That night, she had tied me blindfolded to the bed so that she and her two girlfriends, all somewhat drunk, could play with my body\u2014what good is having a slave if you can't use him, right? I could see in her face, however, that up until now she'd thought I wasn't aware that she had ridden not just my tongue but my cock that night. \"Crap!\" she muttered. \"I thought I got away with it, so both you and I got off without you knowing that I'd done you. If Daddy ever finds out that I screwed my FINO, we'll both be in a world of do-do.\"\n\n\"He's not going to hear it from me.\" I reassured her. \"My point is\u2014I know I'm not like the studs you usually date, but would you at least consider using me as your substitute, sort of like a living vibrator? I apologize for suggesting such a thing, but I really think it would help you. If you don't trust me, you can always tie me up, but I thought we both enjoyed it that night. OK\u2014time for me to shut up. Are you mad at me?\"\n\n\"Hell, no.\" She replied, with a tiny smile on her face. \"You're the only guy I trust--you literally went to bat for me!\" Another giggle. \"I would LOVE to play with you in bed, but this can't change our relationship, and you sure as hell can't let anyone else know about it, got it?\"\n\n\"Of course; if I told your father, guess who would end up being the scapegoat?\" I decided to tell her the truth, again wrapped up in a humorous reference to my slave status. \"Your slave would be honored beyond measure if you would use him for your pleasure\u2014I live to serve you, Mistress.\"\n\nShe smiled, but was still serious. \"That's the main reason I didn't want you to know about last August, so that if Daddy ever guessed, I could pretend you were just my victim. But for now, I think your proposal has some merit, Mr. Hewitt. Strip!\"\n\n(Theresa Thornton's viewpoint)\n\nI guess I'd been dumb to worry about our friendship\u2014I could see in his eyes that Matt had the hots for me, and now he'd actually VOLUNTEERED to have me mount him. After almost a year on his four-year FINO contract, he didn't hesitate a moment when I ordered him to disrobe. Meanwhile, I went into the bathroom and changed from my usual blouse and sweatpants (it was still winter outside, after all) to a babydoll nightie with no panties. When I emerged, he had just finished folding his own clothes, but stopped and stared at me.\n\n\"I did NOT expect you to see you dressed like that,\" he mumbled.\n\n\"Any objections?\" I asked, grinning, as I released his chastity belt lock.\n\n\"Absolutely none, Ma'am! You look magnificent, as usual. Where do you want me?\"\n\n\"On your back in the middle of the bed.\" As he complied, I tossed him a condom packet. \"Put this on\u2014I'm on the pill, but we don't want to take any chances.\"\n\n\"Just as well,\" he replied, with a sheepish smile. \"Seeing you dressed like that, I need something to calm me down so I don't come too quickly.\"\n\n\"Why, thank you, kind sir.\"\n\nThere's something to be said for having authority over another person\u2014without that confident familiarity, I would have dithered around. Now, however, I eagerly climbed up beside him, then swung my leg over his head, facing towards his feet, and told him \"Get me ready, Matt.\" At the same time, I grasped his latex-coated prick. He was obviously telling the truth about being over-excited, since his cock was the proverbial iron rod. I tried to entertain him without bringing him prematurely, while his familiar tongue bathed my labia and clitoris.\n\n\"Ummm. Good boy!\" I murmured, approvingly, but then felt embarrassed that I was still addressing him like a slave rather than a lover. After less than a minute of his oral efforts, I was so excited that I had to dismount and lie down beside him. Good thing I had brought a towel from the bathroom to wipe off his damp face. We were both breathing heavily when I leaned across and kissed him, softly. I'd hugged him and given him a few cheek kisses in the past, but this was the first time we really kissed\u2014he was almost as good at that as he was at cunnilingus, and that's saying something!\n\nHe was still trying to figure out where my head was. \"Are you OK, Terri?\" At least he didn't call me \"Mistress;\" for once, I wanted this to be about us and not that fracking contract!\n\n\"Of course! I'm just giving you a few moments to cool down before I screw your brains out.\"\n\n\"It would be worth flunking out.\" He replied.\n\nI impulsively kissed him again, then straddled his hips, reached for his shaft, and sat down hard, sheathing him inside of me. We both groaned, then simultaneously started pumping. After a few false starts, we quickly synchronized our movements. Damn! That felt marvelous\u2014HE felt marvelous. I was enjoying the rhythm of going up, down, up, down, while his eyes seemed mesmerized by my thinly-veiled boobs, which were swaying gently along with my body motion.\n\nAfter several minutes of heavy humping and even heavier breathing, he gasped out. \"I really need to take a break or I'll come\u2014can we stop?\"\n\n\"Hell no!\" I replied, equally breathless. \"Fuck me, Matt\u2014right now!\" I tried to clamp down on his marvelous member, making a tight fit even tighter so I felt every millimeter of that oversized probe. A frantic 45 seconds later, he stiffened and convulsed\u2014I was only a few seconds behind him, collapsing onto his chest with my face in his collar bone and my breasts pressed into him. He automatically wrapped his arms around me\u2014that felt even better. Hmmm.\n\nFor a long while, there was only panting until our breathing slowly returned to normal. When I shifted my weight as if to dismount, his arms tightened to keep me there, and I happily cuddled into him. Eventually, we got up and, by unspoken agreement, went into the bathroom to shower together. In between some gentle kisses, Matt spent way too much time soaping and fondling my breasts and butt. Typical guy, but I couldn't help being flattered as he repeatedly mumbled about how sexy I looked and felt. He was by no means the first sex partner to talk like that, but this time the compliments were coming from my best friend who actually believed that I had a mind as well as a body. . .\n\nSigh. Time to return to reality. When we finished the shower, I wrapped my hair in a towel, put on a robe, and handed another robe to Matt. Then I led him to the little table in the apartment's kitchenette, and told him we needed to talk.\n\n\"The words that every guy dreads.\" He replied, with a thin smile. \"But, I know you're right\u2014we just went way outside the boundaries of friendship and slave contract. I don't know where we go from here, except that it's time for me to shut up and listen to my Mistress.\"\n\n\"I'm glad you see the problem,\" I replied, then paused to collect my thoughts. \"Matt, that was the best sex I've ever had\u2014I thought you were good with your mouth, but this was even better. And I want to do it all over again, that is, if you're interested?\"\n\n\"Duh!\" he replied. \"I mean, Duh, Mistress\u2014I've dreamed of something like this, but I thought the contract would prevent it even if you were interested.\"\n\n\"That's it in a nutshell,\" I replied, thinking his nuts in my shell. \"You have a goofy grin on your face and you're looking at me as if you're worshipping a goddess.\" [\"Exactly,\" he interjected.] \"If Daddy or Hans or ANYONE saw us right now, it would be obvious what we've been doing. Besides, you look so preoccupied with me that you couldn't solve the simplest equation right now, and we can't afford to let up in class.\"\n\n\"Damn\u2014you're right, as usual,\" Matt muttered.\n\n\"So, the only thing we can do is try to put the genie back into the bottle, or at least screw the top back on. And don't make any lame jokes about screwing, either\u2014I'm serious. For the rest of the semester, not to mention the next three years of school, we SHOULD go back to the way we've been before\u2014studying our brains out six and a half days a week, interrupted on Saturday nights by your tongue practice.\" I could see the disappointment and resignation on his face, so I held up a finger. \"That's not enough for me, either. So, let's compromise\u2014once a month at school, when I decide\u2014not you, so you don't get the blame if this ever comes out\u2014we'll spend an evening like we just did. When we're on internships or semester break, we won't mess around at all UNLESS Daddy's out of town and nobody else is around to notice, got it?\"\n\nHe nodded, reluctantly.\n\n\"One other thing, Matt. I've seen the puppy-dog look you give me when you think I'm not watching, and now suddenly you look like the puppy who just got a juicy steak. REALLY suspicious, you know? Imagine what Hans would tell Daddy if he saw you right now. Yeah\u2014game over; if you were LUCKY, you'd wake up at some engineering program in Tennessee the next day, and we wouldn't see each other until Daddy passed away. Besides, we don't need the other students gossiping about us.\"\n\nNow he looked even more unhappy, but I went on. \"To counteract that, near the end of every school term and maybe other times, I'm going to have to punish or humiliate you. Hard. And I guarantee that you WON'T like what I do, but that's the idea! It will put a temporary chill between the two of us to cover up our real feelings. I'd prefer to tell Daddy and Hans that you're sulking because I punished you, rather than have them suspect that you'd put something OTHER than your tongue into me.\"\n\n\"It seems pretty drastic, but I see your point, and of course the contract permits, maybe even requires, you to discipline me whenever you want.\" He conceded, then snickered. \"Only trouble is, you might turn me into a masochist, when I start to associate you giving me a pain in the butt with us making love.\"\n\n\"I can guarantee you, it'll be a real pain in your butt. Now, come back to bed and snuggle with me; we'll return to the status quo tomorrow.\"\n\n\"Your wish is my command, Mistress.\"\n\n*****\n\nWhen Terri had promised to be a pain in my butt, she wasn't kidding. Not only at the end of every term, but usually after every infrequent night of passion, she reminded me who was in charge\u2014and it both hurt and humiliated me. She came up with a number of variants over the next three years, but her favorite punishments included,\n\n-Six of the best, whacking my ass with my own belt and leaving red marks and bruises (deliberately, I'm sure) that Daddy would see days later when he visited my suite at home. I was always uncomfortable sitting with her on the flight down to Bush International.\n\n-Unlocking my chastity belt and then insisting that I kneel, naked, before her and jerk myself off until my cock was almost raw. The sight of her got me instantly hard, but it was really embarrassing to perform like a horny dog in front of the fully-clothed woman I loved.\n\n-Milking me, as Florence the wrangler had suggested a year previously. In preparation for this, she would have me give myself an enema and then crouch on all fours while she tied my wrists to my knees, holding my face into the towel she had spread on her bed to protect the sheets. Then she would use rubber gloves, a large vibrator, and lots of lube to gently invade my rectum. Once she located my prostrate, she teased me until I discharged without any pleasure involved. The first time she did that, I thought that the dripping out of me must be blood, not jism. I had to get used to it.\n\n-Most humiliating of all was when she acquired a \"feeldoe\"\u2014a dildo that fit into her birth canal so that she could peg me without a strap-on harness. This knocked my head for a loop. I really WASN'T submissive, so being butt-fucked by my best friend was intensely humiliating. On the other hand, she was embracing me tightly, her magnificent boobs pressing into my back while her feeldoe lit up all the nerve endings in my anus. So I got an enormous hard-on and sometimes ejaculated, which only increased my sense of emasculation. Talk about being conflicted\u2014I didn't know whether I was in lover's heaven or Femdom slave hell.\n\nI don't want to give the impression that Terri was some kind of domme who enjoyed inventing new ways to torment me, even though she did seem to get some pleasure out of our kinky intimacy. In her defense, however, I have to point out two things. First, her trickery achieved the original purpose\u2014neither her father, her aunt, nor Hans, nor anyone else associated with the Thornton empire gave any evidence that they suspected our intermittent affair (or whatever the heck we were doing.)\n\nSecond, her escalating punishments and humiliations didn't happen in a vacuum; although we never talked about it, we actually engaged in a competition, escalating our teasing and domination of each other. By that I mean that, whenever she signalled that we could be intimate together, we would first have a torrid session of mutual stimulation and fucking after which I would dominate HER in our second mating. Over time, she experienced and seemingly enjoyed most of the submissive treatments she had imposed on me. In turn, these experiences encouraged her impish sense of humor to dominate me even more fully, as described above.",
        "I began by pointing out to her that, although I certainly enjoyed \"dining at the Y,\" after about 80 such meals in the course of the past year it was her turn to be on her knees providing oral sex. Before I could blink, she had folded herself between my legs, licking and sucking with apparent relish. She rarely had to swallow my jism on these expeditions, since I preferred to save my climaxes for more strenuous (and mutual) couplings, but the sight of her smiling up at me with a mouthful of cock was fantastic.\n\nThe first two times (including what I just recounted) that we had \"normal\" sex together, Theresa was the aggressor, riding astride me. Again, the vision of her smiling face, her beautiful body pumping on me as if I were her horse, was magnificent, but I still hankered for other, more equal, forms of fucking. The third time, I rolled her over so that I was on top and pinned her hands to the bed while we enjoyed screwing and touching each other fully. Her only comment was \"what took you so long?\"\n\nAfter two and a half years of my contract, Terri decided to \"remind me of my place\" and reinforce her father's sense of my subordination by giving me an unusual Christmas present: a new slave collar with a personalized tag that read \"Slave Matt; property of Ms. Theresa Thornton\" with her telephone number. This stung me at the time, since it reminded me (and her father, who was present when I unwrapped it) that I was technically no more than her property. On reflection, however, I realized that she was right\u2014we had probably been too friendly in front of Mr. Thornton, so it was again time to cool it.\n\nNot to be outdone, I escalated our game on the following Valentine's Day, when I gave HER a slave collar, similarly personalized with the label \"Slut Terri\u2014return to her Master, Matthew Hewitt.\" Fortunately, she laughed and immediately asked me to put it on her, after which we role-played being two slaves in my cage, where we made fantastic love and cuddled together.\n\nFor the rest of our school years, she periodically played slave again, and seemed to enjoy it a great deal. We could only do it behind locked doors, and I was careful to respect her as a person: we only played when SHE brought out the collar; unlike me, she had a safe word to halt anything she didn't want; and (other than playful spanks) I never inflicting any pain on her. Still, once she decided to play, I got to call the shots, including collaring her, installing a well-lubed butt plug, ordering her through slave yoga poses, and making HER lie across MY lap while I fondled and stroked her soft-as-silk ass.\n\nOne time when she wore that collar, I turned the tables on her completely, ordering her to \"spread\" facing upwards in the cage. Then, as she had done to me several times, I used zip ties to restrain her ankles and wrists to the walls of the cage. After that, I crawled inside to fondle, tease, and finally shaft her helpless body, being careful that she reached several orgasms before I released into my condom. When we showered afterwards, she told me she really wanted that scene to happen again\u2014and proved it by kneeling under the spray to blow me yet again.\n\nAll this was a lot of fun in its own right\u2014what guy wouldn't like to have a sexy woman who allows him to play with her body like that? It also provided some kind of mental balance for the rest of the time, where I remained her docile pet/servant including, yet again, frequent sessions with my tongue on her labia and clit.\n\nAs for our unspoken domination competition, Terri clearly won, if only because I didn't want to hurt her physically or risk our relationship. Hence, for example, I never put anything other than a small plug in her rectum, preferring to mate with her the \"old fashioned way.\" I'm sure she would have allowed me to take her there, with either a vibrator or my cock, but I left it as is.\n\n*****\n\nRe-reading the past few paragraphs, it sounds as if we had a non-stop orgy for three years. Would that it were so! Instead, we continued to study and practice our new profession as much as 90 hours per week. As I said, during the school term we were celibate and focused on engineering for six and a half-days out of seven. The remaining time, usually on a Friday or Saturday evening, was often a repeat of our previous relationship, with me on my knees providing her some oral stress relief. Only very rarely\u2014perhaps once a month and sometimes less\u2014did we lock the doors and spend an evening as lovers or role-playing that she was my sex slave. For reasons of secrecy, we had even less contact with each other when we were staying at her father's mansion for holidays or internships. So, contrary to appearances, we were not conducting some marathon sex session. I doubt if we got together 60 times over the next three years.\n\nll this time we never talked about our long-term prospects\u2014were we lovers or friends with benefits or just temporary fuck-buddies? Terri kept saying we needed to wait until graduation, when I was again free, before we talked about any future together. Not only would her dad go ballistic if we reached any conclusion, but legally I was not free to make any long-term commitments until my contract expired. In the meantime, we remained incredibly close in and outside the bedroom. I can't tell you how many times I had to bite my (often tired) tongue to avoid saying the \"L\" word, and I occasionally caught her looking at me in a very loving manner.\n\n*****\n\nOur final internship, in the fall of our fifth year, was even more stressful. Each of us had to design his/her own engineering project, which meant that for a change we couldn't work together. To avoid any appearance of favoritism, Dean Hardiman had talked with Mr. Thornton, who arranged for me to work on a project in HIS home office while Theresa interned at a rival company, Lone Star Resources. (I'd be interested to see how they arranged the non-disclosure rights for her project, since everyone expected that, nine months later, she would be working in Thornton's empire, perhaps in competition to Lone Star!) So the two of us spent our usual marathon work weeks in different locations, and I noticed that Hans sent a security guard to accompany Terri to work because she stayed late so often. On the rare evenings when Terri and I were awake and in her suite at the same time, we proof-read and murder-boarded each other's projects, leaving little time for sleep and NONE for intimacy\u2014not even my \"Extraordinary Talent.\"\n\nAfter both of our projects got accepted, we returned to Colorado for our final term as undergrads. OK, I'll admit it\u2014we DID make up for some lost time in the bedroom. I don't know which was more satisfying, fucking each other's brains out or snuggling with her in between bouts of passion.\n\nThe long-awaited end of my personal services contract fell in the middle of final exams; at some point, I would have to consult with Dr. Nikki and close out the FINO arrangement, but there was no time to worry about that right now, let alone time for a serious discussion with Terri. I also received an employment offer to start work for Thornton a month later at an annual salary in six figures, but I couldn't act on that until I knew where I stood with the daughter.\n\nSomehow, Terri and I survived again, and graduated on schedule. Three guesses who received an honorary degree and was the commencement speaker\u2014William Thornton, of course.\n\nThen came my long-deferred discussion with her, a discussion that went terribly wrong. Smiling a mile wide, she nudged me as we waited in line after the ceremony to turn in our rented academic robes. \"Glad that's over! Now, Mister Matthew Hewitt, Bachelor of Petroleum Engineering, I don't intend to let you get away just because your time has expired. How about another contract, this time for five years as my FINO?\"\n\nOf all the outcomes I had imagined for our bizarre affair, re-enslaving myself to her had never entered my mind. I wanted to marry her tomorrow, I would settle for an on-going friendship (with benefits, if possible), but resetting the clock back to slavery? That had no future.\n\nShe must have seen my sadness, but mis-interpreted it as rejection. \"You don't want to be with me? But, I thought . . .\" and then her face crumpled and she ran off. One more time, I picked up after her, turning in my robe along with hers. Then I hurried to find her, arriving just in time to see her father help her, still sobbing, into a car. After he closed the door he walked over to me, but his face showed no signs of anger. Instead, he seemed slightly amused.\n\n\"So you turned her down for another FINO contract?\" I nodded, not sure where I stood with him. \"Good! I told her you wouldn't go for that. Her reaction tells me that you two were a lot closer than you let on, am I right?\"\n\n\"Umm, yessir.\" I replied, acutely aware that he was both a powerful man and my potential employer. \"You knew how I felt four years ago, so I hope you're not too displeased?\"\n\n\"Absolutely not\u2014I'm glad you've somehow become essential to my daughter's happiness\u2014took her long enough; I blame her mother for that stubbornness.\" Mr. Thornton realized that I was as stressed out as Terri, so he put me out of my misery. \"Don't worry, Matt. Your job is safe, and I think when she calms down she'll be willing to talk about the future. Tell you what\u2014it will take her half an hour to pack some clothes and get out of the apartment, then I'm flying her home. The packers are coming to the apartment tomorrow, so why don't you pack your stuff into her car and drive it down to see us. Call me when you reach Houston, OK?\"\n\n\"Yes, sir. Thank you.\"\n\n*****\n\nTwo days later, having put up at a cheap motel and taken a shower, I knocked on the door of the Thornton home. The boss had briefed Ralph, the butler, who let me in and told me that \"Mizz Theresa\" has been mopping around the house, obviously upset, ever since she came home from college. There was no answer when Ralph knocked on the door of her suite, so I used my key and went in to find her lying on the bed, not even looking to see who had entered.\n\nI didn't have much to lose, so I decided to take the offensive. \"You know, if we're going to have any kind of relationship, you're going to have to learn to listen to me instead of going off in a huff.\"\n\nTerri startled at the sound of my voice, but then tried to assume a look of disdain when she rolled over. \"What makes you think I want to hear what you have to say?\"\n\n\"Well\u2014you asked me if I wanted to sign another FINO contract, and didn't wait for the answer. The problem is, you asked me the wrong question.\"\n\nI could tell she was hopeful, but didn't want to appear eager. \"So, what should I have asked?\"\n\n\"Let me put it this way, Darling\u2014I don't want to be your FINO, but I do want to make three agreements with you. For the first one, I'm going to get down on one knee\u2014you better enjoy this, because it's the last time I intend to kneel to you!\"\n\n\"You mean . . .\"\n\n\"Yup. Theresa Thornton, would you do me the honor of marrying me?\"\n\nLet's leave out the next five minutes, which we spent frantically necking and hugging until I pulled out the modest engagement ring I had bought for her on the way down. Then more necking after she tried it on.\n\nAfter some spontaneous make-up sex, she remembered what I'd said, and asked, \"OK, besides marriage, what were the other two agreements you wanted?\"\n\nI grinned. \"Well, first we need a pre-nup agreement excluding our incomes and property from any marriage settlement. Not only would your dad expect that, but I want everyone, including you, to know that I'm not marrying you for your money.\"\n\nHer habitual smirk had returned. \"Oh, yeah, then what DO you want to marry me for?\"\n\n\"Your body, of course. The fact that you had to ask that shows that your mind is slipping! And speaking of your body leads me to the third agreement.\"\n\n\"Which is?\" she demanded.\n\n\"ALMOST the same question you asked me after graduation. Will YOU sign a 5 year contract to be MY FINO, one day a week? I'll pay you ten dollars a month, and I won't even make you sleep in the cage; instead, I'll keep you in bed with me, but you may have to be cuffed.\"\n\n\"Deal.\"\n\n*****\n\nWe got married a month later, and by then both of us were bowlegged from our frequent coupling. I'll spare you the details of the wedding, except to say that Butch, Nikki Sheldon's four-year-old son, did a great job as the ring bearer. Dean Hardiman and Terri's father were both grinning as if they were responsible for the match\u2014which in some sense I guess they were. I was distracted during my duty dance with Terri's Aunt Elena, trying to avoid stepping on her feet, but she said something about Theresa's mom smiling down on us from heaven. I know I sound like a wannabe to say it this way, but Texans be crazy, using slavery to find love.\n\nWhat I WILL tell you, in slightly more detail, is what happened the day after the wedding. The wedding had been on a Saturday, which meant that it was Sunday afternoon when Terri and I arrived in the empty Longhorn parking lot, parking as close to the main entrance as possible. That was by design\u2014she insisted that she had to undergo the same embarrassment that she'd put me through 49 months earlier, but I wanted to avoid any paparazzi photographs of my nearly-famous wife when she was slave naked on a leash! Which she was within two minutes of stepping out of the car. I took the opportunity to feel her up when I hugged her, then calmly instructed her to \"Heel, slut,\" patted her beautiful butt, and led her inside.\n\nShe was prepared to meet Nikki Sheldon and several wranglers (including Florence, the woman who had in-processed me four years earlier, whom I had requested by name), but she turned 17 shades of pink when she realized that her father was also looking at her naked, collared, and bound body. He acted as if this was a normal situation, and perhaps he was right, given that Theresa's mom had started out as a slave consort for him 20-odd years earlier. Once she read, initialled, and signed her personal services contract, his daughter had to kneel for the Longhorn collar. At that point, he patted her head, shook my hand, and left, still smiling.\n\nThe week before, I had insisted that Terri practice nude for her block positions (aka Slave Yoga), so she was graceful and sexy as hell on the practice platform that afternoon. She obviously was as turned on posing and announcing slave mantras as I was watching her. By the end of this practice, her nipples were on high beam and she was damp down below. Because her original slave grading photos were now more than five years old, Theresa had to pose for the usual standing (Present), kneeling, and rear view photos\u2014and I took the opportunity to snap my own versions of those photos. If she weren't my wife, I could have marketed those images to horny young guys, but as it was I couldn't even use them as a screen-saver! Well, maybe on my home computer. . .\n\nThere were some differences between her processing and mine. When the vet had her restained on the GYN bondage wrack, Florence wanted me to insert a small plug into her rear, but I insisted on a larger size\u2014Terri handled it just fine, but let out a tiny \"eep\" when I pushed it into her. I also refused to use a strap on my slave wife's butt, saying that I didn't want any bruises that would interfere with my using her that night. Terri blushed again and Flo chuckled. Instead, once I had her bent over my lap, I spanked her just enough to make her rear cheeks as pink as her face, then toyed with her plug and threatened to sodomize her in the near future.\n\nOf course, the highlight for me was the oral instruction, watching my wife, rather than me, licking Florence and then having her service my cock. As I've said before, I often saved my erection for other activities, but this time, at Florence's instructions, I walked her gently through the entire procedure, including holding my jism on her tongue and displaying it before I approved her swallowing it. At least I brought her a sample bottle of mouthwash to rinse out afterwards. And then, on the way back out to the lobby, I finally got to cup MY hand around HER naked ass, as she had done to me several times. The whole experience obviously aroused her\u2014when she was dressed and we had returned home, she practically ran into her suite, where I found her kneeling and begging me to \"Please, fuck my slave brains out, Master.\" I could get used to coming home to that every day!\n\n*****\n\nOf course, that's not what happened every day. Outside the bedroom, Theresa was no more submissive than was I, although we certainly enjoyed out games when we were alone. Moreover, after a two-week honeymoon, we both began to work long hours for Thornton Enterprises. Occasionally for me, and quite frequently for Terri, this work involved travel. After four years living together almost 24/7 as students and occasionally lovers, each of us experiences a flash of disappointment whenever we enter her suite only to find the other gone.\n\nWe try to conceal our relationship at work, so that only a few people in Human Resources or her father's private office knew we were married. Every morning, she ritualistically shifts her wedding rings from left hand to right as a bodyguard drives her to work while I made my own way there. We barely see each other; I'm working in the same group where I had performed my senior project, while Terri is a vice president, board member (by virtue of her own stock), and heir(ess) apparent. Her dad said he didn't know how much time he had left, so she is drinking from a firehose.\n\nMy life is somewhat easier than it had been as an undergraduate, but hers is even more demanding. In a male-dominated field, too many people assume that she is an empty-headed bimbo rather than an intelligent and qualified engineer. That means that I have no idea how she'll feel when she gets home at night. Some nights she wants to be left alone, while other times she wants to complain about the pig-headed, arrogant, expletive-deleted men she dealt with every day. (Occasionally, she transfers her frustration onto me, and I have to remind her that I'm on her side.) Frequently, Terri just wants to cuddle or watch something mindless on TV. And a few marvelous times she has come home determined to make love to me all night!\n\nIn our copious free time (joke), we also have to study together for our P.E. (Professional Engineer) exams. I don't know if her dad would approve of my motivational techniques\u2014we bet on who scored better on the practice problems, and the loser has to service the winner orally. I've promised her that, if she passes the P.E. the first time, we'll take a week off and she can collar me like she did in school.\n\nOn those occasions when we're both in town on a Saturday night, however, things are different. Right now, for example, I've got to quit writing. On instructions from her master, a voluptuous, black-haired slut has given herself an enema and then installed a rather large plug to keep herself stretched down there. She's kneeling beside me in the Expose position, hands behind her neck, waiting for me to take her to bed and plow all three of her openings. We're both looking forward to it.\n\n(The end)"
    ],
    "authorname": "Carl_Bradford",
    "tags": [
        "free in name only",
        "legal slavery",
        "non-con",
        "non-consent",
        "noncon",
        "nonconsent",
        "oral",
        "slave",
        "slavery"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/extraordinary-talent-pt-04"
}