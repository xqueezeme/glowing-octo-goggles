{
    "title": "Game of Phones",
    "pages": [
        "Some of you may recognize this as one of my older stories, one I'd had removed from literotica for publication. Long story short, the world of self-publishing wasn't to my liking. As such, I'm returning this work where it belongs, edited and free of charge for any to enjoy. If you feel differently, and choose to reflect this in comments or rating, I certainly won't argue.\n\nFor those of you reading this for the first time, you're in for a real treat. Please enjoy!\n\nThis is a work of fiction and all characters are unrelated to real individuals\n\n*****\n\nSawyer couldn't wipe the grin from his face, not that he truly wanted to. Anyone watching from the street might find his behavior odd, the way he slowly slid the key into the lock, turning the knob quietly and creeping into what was clearly his own house. He found the living room empty though the TV was on. Perfect.\n\nUsing the background noise of whatever silly program Charlotte had left playing, Sawyer slipped down the hall, flowers in hand and ready to surprise his fianc\u00e9e. It wasn't often he was sent home early from work. He saw the bathroom door was open and the light was on, and the grin intensified as he imagined sneaking in to find her soaking in the tub, her naked body dripping in suds. \n\nHe froze just outside the door and his smile disappeared. Charlotte was laughing, and he could make out her voice. Perhaps she was simply talking to herself, but curiosity and worry took hold of him. There was another voice now and more laughter, and for a moment he worried he would be walking in on his lover with another man. \n\nThen he realized that the voice was almost certainly female, and though he wasn't quite sure if he knew exactly to whom it belonged, it did sound familiar. Still, creeping silently, Sawyer peeked around the edge of the door. Charlotte was in the bath as he suspected, sitting up but facing away from him. The other voice had indeed been another woman, and he could see enough of her face to identify her. \n\nMegan was a close friend of Charlotte's, and also the recent wife of Sawyer's best friend James. The two girls were sharing a bath and laughing over glasses of wine, but unfortunately for Sawyer, Megan was participating via Skype. Charlotte had purchased a wooden platform that functioned as a table across the tub so that she could work while she relaxed. He now saw just how much work she actually achieved.\n\nHe hadn't been spotted yet, so he decided to do what any curious man would do when confronted with a situation like this: he eavesdropped. He couldn't see enough of the screen to determine if Megan was also taking a bath on the other side of the conversation, but he had to assume that she was. Charlotte wasn't covered above her navel, the bubbles fizzing gently below her breasts. Megan would probably see more of his fianc\u00e9e than most people could ever dream of.\n\nMore important than the visual was the conversation itself. Sawyer hadn't paid much attention at first, focusing more on what he might see of Charlotte and her companion. They were giggling about something though, and he wanted to hear more. Charlotte wasn't whispering, believing herself to be alone in the house. Megan was harder to hear, the volume barely loud enough to make out actual words. He listened, and after a few minutes the grin was back in place. \n\nSawyer made his way stealthily back to the front door, flowers still in hand as he opened and closed it as he normally would. It was loud enough for Charlotte to hear, and sure enough when he stepped into the bathroom with her flowers in hand, Charlotte had replaced her video chat with homework.\n\n\"Hey sweetie! You're home early!\" She noticed the roses by his side. \"Oh lovely! Are those for me?\" \n\nSawyer bent down to give her a quick kiss. \"Well, they aren't for the cat, though she'll probably end up eating them anyway. Thought you might like a surprise visit.\" \n\nShe leaned back, letting him enjoy the view a bit. \"Are you home for good?\"\n\nSawyer wasn't fond of lying to his fianc\u00e9e, but after hearing her conversation it was clear she had a few secrets of her own. \"No, I'm just passing through. I had to meet a client out in Greer and I'm on my way back to the office to finish up some stuff. But I won't be late for dinner, I promise.\"\n\nCharlotte gave him one last kiss as she stood, letting him wrap a fresh towel around her before heading back out to the car. Sawyer pulled over a few minutes into his drive and found James' number in his phone. He wasn't going back to the office today.\n\nONE HOUR LATER\n\nJames wasn't a huge fan of ambiguity, and so when he received a vague text from his best friend requesting his presence at their favorite bar, with strict instructions not to tell Megan, James began to feel a bit irritated. In the year he had been married he had never had to lie to Megan about his whereabouts, and doing so now felt criminal. Sawyer had insisted that whatever excuse he made up, it would pay off for everyone involved.\n\nLuckily James didn't have to get creative with his lie. Megan was going out with Charlotte to look at more dresses for the wedding ahead. He told her not to worry about making anything for lunch, and that he would go out and grab something fast and easy instead. \n\nJames found his friend sitting alone in the corner booth. If this place had any privacy, this was about as much as they would find. He took a seat and ordered a beer from a passing waitress. Sawyer waited for her to leave before speaking.\n\n\"Thanks for coming, and sorry for asking you to keep it a secret.\" \n\nJames shrugged it off. It was hard to be irritated with Sawyer for long. They had history. \"No problem man. Aren't you supposed to be at work?\"\n\n\"I got out early today. That project we were working on is a finished deal as of this afternoon.\"\n\n\"Fair enough. Why the secrecy though? I'm sure Charlotte doesn't mind if you grab a drink with me every now and then. You don't give up your balls for another few months,\" James joked.\n\nSawyer laughed. \"Yeah, I know. I probably could have just told her the truth, but I really needed to talk to you today, in private, and I didn't want to risk her suggesting that we all meet up for a drink since they're going out to do their own thing. I'm not good at making up excuses on the fly.\" \n\n\"I see.\" James said, though he truthfully did not see what Sawyer was getting at just yet, but he took a sip of his drink and waited for him to elaborate. \n\n\"Look, we've known each other for a long time. We've had some interesting conversations. Sometimes...weird conversations.\" He took a breath. \"Let me just ask you this. Have you ever had a dream about Charlotte? Like, a sexual dream?\" Sawyer seemed nervous.\n\nJames' eyes grew wide. He hadn't known what to expect, of course, but now he was even less certain. Sawyer was his best friend, and had been since grade school. When James and Megan became a couple it had been difficult trying to balance his friendship with his relationship, but Sawyer had been completely understanding. Then Megan moved in with Charlotte and they were introduced. After that things seemed so much easier.\n\nJames thought of Charlotte now. Megan was his goddess, a stunning brunette with chocolate eyes and the most adorable freckles he'd ever seen. She was tall, not quite his height, but her love for high heels often made up the difference. Her voice was sweet, and while her hair had been short when they first met it was now long and straight, though James enjoyed her locks no matter what style she fancied. \n\nCharlotte, by contrast, was much shorter, barely coming up to his chest. Her eyes were blue, and her chestnut hair was a bit wavy, though almost as long as Megan's was now. Both women were slim with curves in only the right places. Megan had the most amazing legs and an incredible ass to top them off. While Megan filled out the jeans, Charlotte's breasts were what grabbed his attention when she wasn't dazzling him with her smile.\n\nThe biggest differences weren't physical, however, but rather in personality. Megan was quiet and reserved, more interested in listening than talking. She wasn't exactly shy, but James had been attracted to the way she would sit quietly for hours, book in hand and sunshine on her features. Then there was Charlotte, almost a polar opposite to Megan. Charlotte craved adventure, and while she refused to admit that she was a hipster, she fit the bill. Her personality could only be described as \"bubbly,\" and when the two girls got together Charlotte had a way of bringing out the adventurous side of Megan that James adored so much. \n\nHis mind had been wandering and Sawyer was still waiting for an answer. Truthfully, yes, he could recall a handful of dreams in which he and Charlotte had discovered intimacy with one another. The first had occurred after their first meeting, and the last one had caused him to wake with a throbbing erection only a few weeks ago. Megan had noticed his arousal and, assuming it was her own body in his dream, had generously relieved him of any remaining sexual frustration. He had felt slightly guilty as her lips caressed an erection not intended for her.\n\nBut was this something that he should really confess to Sawyer? His friend was now grinning across the table, already knowing the answer. James might not be sure of where this talk was heading, but in Sawyer's friendship he could be certain. He nodded.\n\n\"Yeah, a few times. I'm not going to go into details of course, but you know I'd be lying if I said otherwise.\" James took a quick sip of his beer. The two of them had shared so much in the past. James knew as much about Sawyer's sex life as Sawyer knew of his. They had broached every topic imaginable, and thanks to a drunken night of card games back in college they had all seen each other naked. This, however, was a subject that hadn't been discussed, though James knew he shouldn't feel so nervous about it.\n\n\"Breath, buddy, it's all good,\" said Sawyer. He must have noticed his friend's apprehension.\n\n\"I know. I just...it's human nature, right? I mean, Charlotte is a good looking woman, and can you honestly say you haven't done the same with Megan?\" \n\n\"Of course! I've had dreams too, plenty of times. It's part of being human, seeing someone desirable and thinking of the possibilities.\"\n\nJames wasn't an idiot. Sawyer had to be going somewhere with all of this, and he was fairly certain he knew where. \"This isn't about a dream though, is it?\" \n\nSawyer leaned back in his seat. He hadn't truly thought of a good way to bring this up, and now that he was confronted with the question he was even less certain. But honesty had been a defining characteristic of this friendship, and he decided that honesty was probably the best way to continue.\n\n\"You're right, it isn't. Look, this is awkward enough, so let me just lay it all out for you. I actually left work much earlier today, and I decided to buy some flowers and surprise Charlotte at home. So I get home, I sneak in all ninja and shit. She has no idea I'm even there. Well, I find her in the bathtub, and I'm about to creep in and surprise her, but I notice she's on her laptop. Turns out she's doing some video chat thing with Megan.\"\n\nJames was already aware that his wife liked to bring her own computer into the bath with her. Charlotte had mentioned the table that Sawyer had bought for her, and Megan didn't waste much time ordering her own. He had always assumed that she did work or listened to music during her soaks, but video chats hadn't crossed his mind. \n\n\"You're saying that Megan and Charlotte like to watch each other take baths?\"\n\n\"I don't know about that. I think they just like to chat, in privacy and whatnot. I try not to bother her too much while she's in there, but then again I always thought she was doing work. Anyway, that's not what matters. I don't care much if she's having a Skype session with your wife even if it is hot. What matters is what I overheard them talking about.\"\n\nJames felt his body grow tense. Sawyer's previous comments about dreams were now forgotten. What could his friend have overheard that would warrant a secret meeting like this? Sawyer must have seen the nervousness in his friend.\n\n\"Relax, amigo, you'll like what I have to say.\" Sawyer leaned in closer and James did the same. \"They were talking about us, about what it would be like if, for whatever reason, Charlotte gets to have her way with you and Megan gets the same with me.\"\n\nIt took James a few seconds to register what his friend was saying. \"Wait, are you saying that our girls spend these secret bathroom chats talking about swapping guys? Like swingers?\" \n\nSawyer hadn't wanted to use that particular word in regards to this conversation so quickly, but at least James was getting the idea. \"More or less. I mean, they're not seriously planning shit from what I can tell, but trust me, I can tell when Charlotte is joking. They were taking the idea somewhat seriously. It's kind of like when you and I talk about our sex lives and stuff, guy talk. But Charlotte and Megan are totally open to the idea, I'd bet my life on it.\"\n\nThis was a lot to take in. The unspoken question was whether or not the two of them could reach the same conclusion as their female companions. There were so many conflicting emotions going through James' mind at that moment. On the one hand, the idea of sleeping with Charlotte had always been a fantasy of his, and to know that he might actually have Sawyer's blessing to do so seemed too good to be true. On the other hand, this would also require him to reciprocate.\n\nCould James actually be okay with the idea of letting Sawyer fuck his wife? And would Megan seriously allow any of this to happen anyway? He looked back at his best friend, who also appeared to be deep in thought. To the first part of his question the answer was yes. Sawyer was probably the only man alive that James would ever allow to touch Megan intimately. This wasn't a friendship that needed to be tested; they had already proven their loyalty to one another time and time again.\n\nAs for Megan, James still had his doubts. Regardless of what Sawyer may have heard, there was still the argument that words and actions are often very different in practice. His wife may enjoy sharing fantasies in secret with her best friend during bath time, but when the opportunity actually arises she may not feel so certain. She was, after all, the more conservative of the two.\n\n\"I need more information,\" James said. \"Tell me exactly what was said.\"\n\nSawyer smiled. He had worried that James would simply get up and walk away, too angry or disgusted by this suggestion to even speak. Though it hadn't officially been declared in words, the two friends had more or less come to a new level of understanding. Should the situation ever present itself, Sawyer and James would have permission from one another to proceed without worry.\n\n\"They were already talking about this when I started listening, so I can't be sure what all was said beforehand,\" Sawyer answered. \"Charlotte was doing most of the talking, and I believe the exact words she used were 'I swear if I ever find myself alone with James I am going to seduce him, you can't keep teasing me with stories and photos and not expect me to jump him at the first opportunity.' And then Megan laughed and said something like 'I think that would be super hot, sneaking up and watching through a window while you get plowed by my husband. But of course while you're busy with him, I'll be busy distracting Sawyer...with my vagina.' Okay, I added in that last part, but the rest is absolutely legit.\"\n\nJames raised an eyebrow. \"Are you sure they weren't joking? Maybe they were just playing around?\"\n\n\"I thought the same. Then I realized that Charlotte wasn't just sitting there bathing, she had her hand between her legs. She was masturbating to the idea of fucking you, and Megan was watching her. Hell, she may have been doing the same. I couldn't see her on the screen very well, but I could hear them just fine. Megan started going into detail about what she would do to me, and then Charlotte would add in something of her own, back and forth. If this was all jokes, then I really need to tap into her sense of humor more often.\"\n\n\"Holy shit! Are you serious?\" James hadn't meant to shout, but nobody paid much attention anyway.\n\n\"Dead serious dude! I heard my own fianc\u00e9e moan your name, fingers in her pussy while your wife watched and laughed. She started to cum and I used the distraction to get out of there, or at least I made it seem like I just got home and hadn't heard anything,\" Sawyer finished.\n\n\"Did she suspect anything?\"\n\n\"Nah. She didn't expect me, of course, but I gave her a few minutes to calm down before I came in.\"\n\nJames was smiling now. It was still fairly awkward, listening to his best friend talk about this with him so casually, but for the most part he was excited. Even the idea of Megan bringing herself to climax while thinking of Sawyer didn't bother him one bit. Had it been any other man, or even a celebrity crush, he would have found himself jealous. But with Charlotte and Sawyer also in the mix there was a genuine balance to the equation that made it all seem normal. \n\n\"Alright buddy. I have to admit, this started out kind of awkward, but now you have me convinced. But that doesn't explain why you couldn't just tell me all of this later?\" James asked.\n\n\"I suppose it could have waited, really, but I actually have something else in mind, and I needed to know if you were on board first.\"\n\n\"Wait, so you just found out today, like a couple of hours ago, that Megan and Charlotte are okay with swapping, and you've already started coming up with schemes to make it happen?\" James asked with raised eyebrows.\n\nSawyer's grin returned. \"We all have our hobbies, and our fantasies. I'd be lying if I said the idea of something like this hasn't come up before. The cool thing is that I actually might be able to make it happen.\"\n\n\"How?\" James was a bit skeptical. The four of them spent almost every weekend together in some form or fashion. Usually this meant a movie or game night, with plenty of alcohol to go along. In college the four of them had managed to use a drinking game to get everyone out of their clothing for a few brief minutes, but other than that there had been nothing close to X-rated in their history. James had even brought up the idea of playing strip poker a few times only to receive menacing glares from his companion.\n\n\"It's actually really genius if I do say so myself,\" Sawyer replied. \"The company I work for mostly makes software for banking systems, merger stuff specifically, but we also bought this little kick starter company that makes apps for smartphones. Most of the stuff has just been sitting there unused, so a few buddies and I have been looking into a few of the applications in our spare time. One of them is a real simple party game, made for younger people. The idea is simple enough, you answer questions and if you get them wrong you have to do some sort of penalty.\"\n\n\"I don't see how a children's game is going to be much help,\" said James.\n\n\"As it is now, it won't help much at all. The thing is, we both know that we can't just outright say anything to our girls about what we just talked about. Even if we already know what they think about the idea, that's just not how it works. We can't just throw the idea at them and hope they bite,\" Sawyer explained.\n\n\"Yeah, I know what you mean. You and I could suggest we play strip poker or skinny dipping this weekend, or something like that maybe, but the last time we did that the girls just laughed.\"\n\n\"Exactly. Charlotte might seem super outgoing and all, but decisions like this will still put her on the fence. Too much pressure up front and they may get nervous and back out. It's understandable. No, what we have to do is find a way to slowly build up the sexual tension until they can't hold it in any longer.\"",
        "\"And you think a phone game might be the way to do that?\" James asked, still skeptical. \n\n\"Why not? I can use the basic framework of the game I to build one of my own, just a bit more specific to our needs. I'll have full control over everything, from the graphic interface design to the way the game links with other players. We keep it simple, something that can legitimately pass as a normal party game, but one that gradually builds up the excitement until BOOM! People are running through the house naked and not even realizing it.\"\n\nJames had to give Sawyer credit for his creativity. He still had a few worries, but he also knew that Sawyer was good at his job. He was always tinkering with programs and games, and if he managed to make this entertaining enough then there was no reason why it shouldn't work. After all, they were all growing tired of playing Monopoly. \n\n\"We'll have to playtest it when you're done, of course, and think of a good cover story before they download it.\"\n\n\"Of course, I agree. I'll definitely need your help coming up with some of the pieces, and we'll play through a few times before we do anything else. As for legitimacy, we can just tell them part of the truth: that our company bought a small gaming company, and that they want some of us to fool around with the games and find ways to make them profitable. We go into it not knowing what to expect, and when the fun stuff starts popping up we just go by their reactions. Cause and effect, action and reaction. If they start raising eyebrows, then we say 'sorry, didn't know what kind of game this was' and we pull out Clue or something.\"\n\nAnother secret from Megan. James still wasn't fond of the idea of keeping things from her. He wanted to see how far things would go under the right conditions with all four of them present, but never at the expense of his marriage. Megan meant everything to him, and their loyalty and trust had never been called into question. \n\nThat being said, this wasn't any worse than for Megan to be masturbating to his best friend, and in the end everyone might just be glad for it. \"How long till you can have it ready for testing?\" James asked, his smile providing Sawyer with reassurance. \n\n\"Give me two weeks,\" Sawyer answered. \n\nONE MONTH LATER\n\nAll men have their vices, and for Sawyer that vice was time management. Deadlines had always been his greatest adversary, and James had fully expected this project to take longer than the allotted two weeks. In the meantime, he had been diligently assisting whenever possible, providing feedback and suggestions where needed. \n\nHe had also been doing his homework in regards to Megan and her open-mindedness. From time to time the two of them would put their smart TV to use in the living room, selecting something naughty to watch before they made love on the couch or floor. Most of their past selections had been rather \"vanilla\" by today's standards of kinky. Recently, however, James had \"accidentally\" selected something a little different.\n\n\"Sorry babe, didn't mean to click the button.\" Even as James said it Megan was raising her eyebrows. His accidental selection was a group session, with several couples at a party having sex in the same room.\n\n\"Sure you didn't, sweetheart.\" she said with a wink. \"But leave it on. You're supposed to be focusing more on me anyway.\" She leaned back against the arm of the couch and parted her legs, wearing nothing more than a white tank top and some sexy panties. She watched the screen as she slid one hand beneath the lace, the other hand undoing his fly so that she could prepare him for whatever naughty behavior the video inspired.\n\nSawyer had likewise done the same homework with Charlotte, though she didn't usually enjoy watching porn with her lover. Instead, he began perusing through her side of the bookshelves in their library. He began to notice a pattern among the more adult themed books. More than a few of them involved women being shared by two men, either simultaneously or separate, but with consent of the other. There was also a lot of same-sex situations, though to be fair there were also instances of incest, exhibitionism, and most surprising of all, werewolf orgies with human women. \n\nThere wasn't much he could do about that last particular fantasy, but if Charlotte was entertained by the concepts of group sex and exhibitionism, not to mention girl-on-girl action, then he would certainly do what he could to accommodate.\n\nSawyer apologized to James several times for his lack of timeliness, but in the meantime the two had at least been having fun coming up with questions to program into the game. They met regularly at the bar to talk things over, and over the weeks the two friends had grown extremely open with one another about the idea. \n\nThe playtest finally came, and although the user interface needed some work, the game itself appeared to perform beyond their own expectations. Sawyer had to buy two smart phones from a pawn shop to simulate the two girls, but after their second test run, in the bar among curious eyes, the two were finally satisfied with the product. Sawyer gave his friend a hug and promised to have the visual aspect finished before the weekend. Game night was around the corner.\n\nJames had a lot of prep work the day of their game. While his wife was out for groceries James changed all of the bed sheets to clean linens and restocked the alcohol with plenty of choices. Wine and spirits would certainly help move things along. He even cleaned out the pool, just in case. \n\nMegan appreciated the gesture so much that she shed her clothes for a pre-shower skinny dip. Their guests hadn't even arrived yet and already she was finding ways to make his cock hard. He resisted the urge to pull her out of the water and fuck her in a deck chair. She was content with being a tease for the moment.\n\nNow they stood together in the kitchen preparing the meal that hopefully would preclude their night of fun. James had dressed in his usual attire for such occasions: khaki pants and a v-neck sweater on top of a nice button-up shirt. Megan outdid him, as always, when it came to her appearance. She wore a charcoal dress with black leggings. He hadn't been in the room when she exchanged her towel for lingerie, but he assumed she would be wearing a matching set. All of this was great, but the addition of black heels made her appearance prize-worthy. \n\nWhen their guests arrived on time (Charlotte made sure Sawyer was punctual) James also took note of what they were wearing. Sawyer was also in slacks, black instead of khaki, and he wore a white button-up with a black blazer jacket. The number of clothing items one wore might play into activities later. Charlotte was Megan's equal in ability to dress sexy. She took a more casual approach, opting for skinny jeans and a white blouse under a black corset top. She also wore black heels similar to Megan's. By James' calculations she was likely wearing six articles of clothing, including the shoes.\n\nCharlotte went to join Megan in the kitchen, already pouring a glass of wine while Sawyer joined James in the dining room with their plates. They took the time to reassure one another.\n\n\"So, what do you think? Will this work?\" Sawyer asked his friend.\n\n\"Your guess is as good as mine,\" James answered. \"But that's the beauty of our game, isn't it? We start out slow, ease into it, and see how they react. If we think the girls are feeling a little uncomfortable with the way things are going, we pull the plug. Simple as that.\"\n\n\"Of course. We want to have fun, but in the end it has to be a group decision. We let their actions move us forward.\"\n\nThe voices in the kitchen were moving now and the girls were bringing their drinks and their gossip to join them. The boys pulled the chairs for their ladies and settled in for dinner. Laughter and clinking wine glasses filled the room until everyone was full and the plates were put away. With drinks refilled they all made their way in to the den.\n\nMegan was the first to suggest a game, though nobody really seemed eager with her selection. This didn't dissuade her, and she began to go down the list of every board game they owned. Eventually, once every title had been offered up, James made his opening move.\n\n\"Damnit Sawyer, this is what your company needs to be doing with that new gaming department they acquired! This is an age of tablets and smart phones, shouldn't we be able to download games for nights like this?\"\n\nMegan gave him a playful smack on the shoulder. \"Are you suggesting that the board games I buy are boring?\" she asked.\n\n\"I think what he means,\" said Charlotte, \"is that if you buy any more of these games you'll have to buy yourself a ladder to go with them.\" Even in heels Megan would have trouble reaching the games stacked on the top shelf of their closet.\n\nSawyer took the leap. \"Actually, they've had us tinkering with some of the apps left behind after that buyout. I've been super busy with that last project, but I know some of my coworkers have managed to get some working prototypes in the cloud.\"\n\n\"In the cloud?\" Megan asked.\n\n\"We can't put them on official app stores until they're approved for sale, but we have a cloud server we can use to download the games for free whenever we want. Shall I see if there's anything worth trying?\" Sawyer was already reaching for his phone. \n\nThe girls exchanged a look of genuine curiosity. Megan spoke up first. \"I suppose it can't hurt to look, but don't think I'm any less offended that nobody wants to play Monopoly with me anymore.\"\n\n\"You only like that game because your husband slips you money under the table,\" Charlotte joked.\n\n\"He slips the real money in my thong after you leave,\" Megan replied. Humor wasn't rare in Megan, but James took it as a good sign that his wife was being flirty with her jokes tonight.\n\nSawyer made a show of searching through a list of apps. James knew that there was no list, just the one link, but appearances mattered. Finally, he seemed to find one he liked. \"Here's one that could be interesting. All of the other ones didn't seem to fit what we were looking for.\"\n\n\"What's it called?\" Charlotte asked. \n\n\"Game of Phones. Clever title,\" said Sawyer, secretly praising James for his creativity. \"I'll send everyone the link.\" \n\nNobody objected, and Sawyer quickly copied and pasted the download link into a group text message. It only took a few minutes for everyone to complete the download.\n\n\"How does this work?\" Megan asked once everyone had opened the app. \n\nSawyer still had to pretend that he didn't know much about the game, instead reading directly from the directions on screen. \"Requires at least four players. We at least meet that requirement. Everyone has to enter their name, age, and gender when they sign in. Go ahead and do that while I get a group formed.\"\n\nThe setup was easy enough. Everyone followed another link to join into Sawyers group while he continued to read off the rules. \"This game is more than a test of friendship, it is a test of limits, and boundaries, and how far each of you is willing to push them. During each round of the game one player will be assigned a question to answer in secret. Once their answer is recorded, the remaining players will then attempt to guess the answer that was written, within the thirty-second time limit. Player A will then decide which players are correct and the original answer will be shown.\"\n\n\"So basically we're being tested on how well we know each other. What happens if we lose?\" Charlotte asked. \n\n\"I'm getting to that,\" replied Sawyer. \"The questions will grow more personal in nature as the game progresses, and players may opt to pass their question if they choose. The players that fail to submit the correct answer will be assigned a penalty task which they must complete. These, also, will increase in their brazenness as the game progresses, testing how far you and your friends are willing to play.\"\n\n\"Wait, does that mean like taking off clothes and stuff?\" Megan asked, though she didn't seem so much worried as she was curious. A good sign, as far as Sawyer was concerned.\n\n\"It doesn't say. Maybe? Either way, if things get too out of hand, or if someone gets uncomfortable, it's not like we have to keep playing. Agreed?\" \n\n\"True, I suppose,\" Megan answered, her eyebrow raised.\n\nSawyer continued. \"Each player also has one 'player switch' card which they may use at any point during the game to replace any player with another of their choosing, including yourself. Remember to respect each other in regards to privacy and personal boundaries, and above all, have fun!\"\n\nJames and Sawyer glanced around, already nervous that their plan was dead in the water. Megan and Charlotte finished reading the rules themselves and glanced at one another, shrugging before leaning back in their seats. \n\nMegan was first to consent. \"We'll give it a try, but if this game sucks then I get to choose the next one we play. Deal?\"\n\n\"Fair enough,\" James answered as he let out an imaginary sigh of relief. \"Who starts it?\"\n\nSawyer had already finished most of the graphic design of the game. There was an orange button labeled \"start\" for them to press, and the first player could choose the order of their questions. The sofa and loveseat were arranged in an L shape around a glass coffee table. The television was across the room on the wall, which was currently on, but just for background noise. Charlotte and Sawyer sat on one couch while Megan and James sat on the other, and that would be the order in which they played.\n\nCharlotte was the first player. She clicked for her question and stared at her screen. Everyone else could see the same question on their phone but not her answer. She was asked for her favorite color. James was already unable to make a guess. Sawyer, of course, would know the answer, and Megan was also likely to have an idea. James typed in \"blue\" and sent his answer in with the others.\n\nCharlotte was now able to review them all. \"Aw, sorry James, looks like you're the odd one out. My favorite color is purple, not blue. Good job to Sawyer and Megan though.\"\n\n\"I was just making a guess,\" said James. \"Oh well, let's see what I have to do then.\" James swiped the icon and his penalty was displayed for everyone to see. \"Take a drink and relax, there's no shame in being the first loser.\"\n\nThe giggles that followed were a good sign that the girls were enjoying the idea of the game so far. James took a sip of his beer, without a care, hoping that much more would be happening soon enough. \"That was easy enough. Next?\"\n\nSawyer's question was actually easy for James. \"What was my first car?\" He submitted his answer with confidence and looked up to find that neither Megan nor Charlotte seemed to be typing. Charlotte finally shrugged and submitted something, but Megan remained puzzled. The thirty second timer expired before she could type anything in, automatically labeling her as a loser this round. \n\n\"Looks like Megan forgot about the time limit,\" Sawyer observed. She blushed in reply. \"And Charlotte, do better! I know I've told you this before.\"\n\n\"Yeah, but you mention cars so often that it's hard to keep track! So it wasn't the Camaro?\" Charlotte asked.\n\n\"Nope, sorry babe. But don't worry, I'm not going to replace you with James, even if he was the only one who knew I used to drive a Subaru.\"\n\n\"Are you sure you don't want to replace her?\" Megan joked. \"She can come live with me while you and James get cozy.\" \n\n\"Is he potty trained?\" \n\n\"I'll pack plenty of diapers.\"\n\n\"Do I get any say in this?\" James asked. \n\n\"Of course not!\" Megan gave him a quick kiss all the same. \n\n\"Penalties are served, drink up ladies!\" Sawyer had swiped the icon to reveal their task.\n\n\"Drinking is something I can definitely handle,\" Charlotte said as she leaned in to clink her wine glass with Megan's before they both took a long sip.\n\n\"Don't get cocky just yet,\" James added, \"because it did say that things get harder the longer the game goes on.\" Things were already getting hard just thinking about it.\n\nMegan was next in line. Her question: \"Who was your celebrity crush as a teenager?\" She didn't have to think long before her answer was in place. The rest of them, however, were completely puzzled.\n\nJames felt that he should know this answer. Perhaps the alcohol was clouding his memory, but this seemed unlikely after only one drink. He chose the first name that came to mind before the timer closed in on him.\n\nThe look of disappointment was clear on Megan's face as she read the answers. Justin Timberlake. Leo DiCaprio. John Stamos. None of which were the correct answer.\n\n\"Gerard Butler? Really?\" Charlotte did not approve of her friend's choice. \n\n\"Painted abs aside, that accent makes my panties drop,\" Megan swooned.\n\n\"How does that make you feel James?\" Charlotte asked. \n\n\"Whatever it takes to land me that acting job.\"\n\nMegan gave him a playful punch in the shoulder. \"You'd whore me out for an audition?\"\n\n\"Oh please, you'd put me on the corner for a Snickers,\" James countered.\n\n\"We'll see about that later. Time for your punishment.\" Megan clicked the penalty button. \"Since you all failed me so miserably you have to take more than a sip. Shots for all of you!\"\n\n\"I'll get it. Tequila or whiskey?\" James asked his friends. Once he had their preferences he went to the kitchen and returned with four shot glasses.\n\n\"Why four?\" Megan inquired. \n\n\"You really think we're going to drink without you?\" James asked. \"Just this once, Babe.\" He knew she would play along, and the extra tequila in her blood might make things easier later on. \n\nThey made their toast, losers and winner alike, and threw back their glasses. Everyone was smiling and laughing, signs of a good start to the night. \n\nJames was at the end of the line, finally seeing his first question now that the glasses were empty and on the table. Another \"favorites\" question. \n\n\"Sawyer, Charlotte, I don't even know what to say. I mean, seriously? Both of you thought that my favorite book genre would be sci-fi and fantasy?\"\n\n\"I just figured since you watch all that elf porn...\" Sawyer joked.\n\n\"Shut up Sawyer, don't give away all my secrets!\" \n\nMegan was the only winner, knowing very well that James loved his mystery novels most of all. The other two were told to drink.\n\nThe first round was finished, and everyone now understood how the game was played. The questions and penalties were about to make things more interesting. Now it was Charlotte's turn again.\n\n\"Have I ever stolen anything worth more than two-hundred dollars?\" she read aloud. \n\nMegan was first to answer, and Sawyer second. James wasn't really sure. He eventually decided that Charlotte probably wasn't nearly as mischievous as that. He was wrong. \n\n\"Thank you, James, for believing in me. I'll make sure I call you if I'm ever on trial. But Megan and Sawyer both know about that time I broke up with my ex after he cheated on me. I took his Xbox with me, and gave it to my roommate's boyfriend. He never asked for it back, probably knowing that if he fucked with me I would tell everyone he fucked a tranny.\"\n\n\"Ouch. Well, I suppose that given the circumstances I can't blame you. I take my punishment with dignity.\" James clicked the button. He had helped program the penalties, so this one didn't actually surprise him, but for the sake of appearances he pretended to be amused. \"How the fuck am I supposed to dance like a chicken?\" James asked, while the girls giggled. He gave it his best attempt, flapping his elbows and stamping his feet around the coffee table while the girls choked on their own laughter. Seeing their smiles made him happy, especially Megan's. The game could have ended right then and he would feel satisfied. Luckily, it continued.",
        "\"Thank goodness for that! I was worried it would just be a glorified drinking game!\" said Charlotte. If only she knew. \n\nSawyer's question was simple enough. \"Favorite movie?\" James had this in the bag, and he assumed that Charlotte would as well, yet she appeared to be struggling with her choice as she submitted it. \n\nSawyer shook his head a few seconds later. \"Back to the Future? Really Charlotte?\"\n\n\"Aw, sorry sweetie, I tried. What was it?\" She looked genuinely embarrassed for not knowing.\n\n\"Monty Python and the Holy Grail. There's a poster of it hanging in his office!\" James answered. He was the only one to answer correctly. \n\n\"Meh, he likes a lot of movies,\" replied Charlotte. \"What did you say, Megan?\"\n\n\"'Scarface.'\" \n\n\"Oh well. What sort of penalties do we have? Please no chicken dancing, these heels won't let me!\"\n\nThey didn't have to dance, but the heels still wouldn't make things easy for them. \"Ten pushups!\" Charlotte exclaimed as she read the penalty.\n\n\"I don't know if I can do them in this!\" Megan gestured to her dress.\n\n\"Do we really have to?\" Charlotte pleaded. \n\nSawyer agreed to negotiate. \"Tell you what, if you can do five I'll let you both off. But if you can't, you take another shot.\" \n\nThey agreed with his compromise, and neither James nor Sawyer could complain if the girls at least made the effort. They pushed the table aside and watched as Charlotte and Megan crawled down into position. Sawyer gave his friend a wink as he gestured to Charlotte's ass, her jeans shaping it in ways that were impossible to ignore. \n\nAfter Megan's third pushup her dress began to slide up her hips and her own rear was showing, though her leggings covered her well enough. She couldn't hide the shape, however, and Sawyer nodded his approval. They finished their five pushups and climbed back into their seats, straightening their clothes as they did so.\n\n\"That wasn't so bad, was it?\" Sawyer asked with a grin.\n\nCharlotte pointed down to her shoes. \"You want to try these on and give me fifty?\"\n\n\"I'll pass.\" \n\n\"Fine then, my turn.\" Megan seemed excited to continue. \"I'm going to enjoy seeing someone else suffer.\" She swiped the screen to receive a question. \"Alright, have I ever used marijuana, yes or no?\"\n\nSawyer was the slow one this round. Megan was fairly conscious about her body and taking care of it, but in the end he assumed that everyone tried weed at least once in their life. Unfortunately for him he guessed wrong.\n\nMegan shrugged it off. \"Sorry Sawyer, maybe I'm a little too innocent for today's world?\"\n\n\"I've never known you to be innocent with anything,\" said Charlotte as she winked at her friend from above her wineglass. \"Maybe we need to make a sinner out of you sometime if that's how you feel?\"\n\n\"I get into my own mischief, thank you very much!\" \n\n\"Oh? Such as?\" Sawyer asked. He and Charlotte leaned forward with curious eyes, teasing Megan. \n\n\"Keep playing and maybe we'll find out!\" she replied. \"Now, what shall we have poor Sawyer do?\" She swiped the screen. \"Oh my! Looks like you owe me a massage!\"\n\nIt was the first penalty that required physical contact. James knew how much Megan loved to have her shoulders or feet rubbed after a long day. Sawyer would definitely be winning points with her if he did this right. \n\nCharlotte pouted in her seat. \"Lucky! I don't even get massages at home!\" \n\nSawyer gave her a kiss as he stood. \"Megan can be my test subject. If she approves of my work then I promise to start giving you the special treatment whenever you want.\" Charlotte smiled and gave him a second kiss, lingering a bit longer this time. Sawyer was going to win points with everyone, it seemed.\n\nFinally, he turned to James and Megan. \"You okay with this bro?\" \n\nJames laughed. \"Go for it! I have plenty of practice, so I'm not too worried I'll be replaced.\" \n\n\"Fair enough. Alright Megan, shoulders and back sound good?\"\n\n\"Actually,\" Megan replied, \"after those pushups my feet are killing me. Mind making them feel better?\" James caught the wink she sent to his friend, but didn't mention it.\n\n\"As long as you don't judge too harshly,\" Sawyer answered. Charlotte leaned forward in her seat, curious eyes watching as Sawyer removed Megan's heels and she stretched her long legs to place her feet in his lap. She still had the leggings on so her feet were covered, but Sawyer was still able to work her contours with ease. \n\nMegan closed her eyes and leaned her head back. She took her husband's hand in her own and squeezed, letting him know that she was still his. Still, he could tell that whatever Sawyer was doing to her was building up to the inevitable moan he was accustomed to. She squeezed his hand harder, but the sound never came, and James suspected that she held back only because he was in the room. \n\nThree minutes passed before Megan opened her eyes and pulled her feet away from Sawyer, ending the massage before she was ready, but they had a game to play and she knew that letting Sawyer continue would lead to her wanting more. She already had that urge. He smiled at her as he withdrew to his seat. \n\nCharlotte asked the question on everyone's mind. \"So how was it? Should I keep him?\"\n\nMegan gave her a wink. \"He needs training, but I bet he's a fast learner.\" \n\nJames wasn't jealous. He knew all of Megan's weak points, and could have her writhing in ecstasy with just the brush of his fingers. He also knew that Sawyer had aroused her, of course, but that was the idea of the game, and the sooner his wife began to fantasize about Sawyer the sooner he could plant the same seed in Charlotte. It wasn't the only seed he wanted to plant. \n\nMegan slipped her heels back onto her feet, much to James' surprise. She must have thought it rude to be the only one without. He knew he would have plenty of chances to get her out of those clothes anyway, so he swiped for his question. \n\n\"What was the name of my first kiss?\" James felt awkward asking his own wife to type this in. She wasn't fond of mentioning exes, but the massage seemed to have put her in complete bliss, and so she typed her answer and locked it in without a frown. She was the only winner. James hadn't mentioned this to Sawyer since they technically only talked about sex, and Megan wouldn't have told Charlotte this information either. They guessed at names, already knowing they would be facing punishment.\n\n\"Charlotte and Sawyer, for your failure here today you must...\" James swiped. \"Oh, that's easy enough. You have to kiss for thirty seconds.\" \n\nCharlotte didn't waste any time, pulling her man down by the chin, her lips connecting to his while his hand caressed her cheek. The phone was counting down the seconds, but nobody was paying attention. All focus was on the way Sawyer and Charlotte shared their affection. James couldn't resist, and Megan didn't object when he pulled her close, giving her the same. Tongues danced with one another while fingers played with hair. James kissed Megan down her neck, the moan she had worked so hard to restrain earlier finally making its release. \n\nThe timer finished long before the kissing ended, with both couples laughing and smiling as they settled back into place. For James and Sawyer, it was important that before anything else happened, the girls had to see how much love their partners had for them. None of this would be worth anything if Megan or Charlotte felt anything differently from their men. Moments like this were proof enough, their smiles and their eyes shining with adoration. \n\n\"Should we keep playing?\" Sawyer asked. Nobody said it out loud, but they were all thinking the same thing. That could have easily been James and Charlotte, or Megan and Sawyer, facing that penalty. How would that issue be dealt with?\n\nMegan exchanged a knowing glance with Charlotte. James often wondered if the two women shared a form of telepathy. Surely, they would have some sort of conversation with stares alone. Finally, she nodded. \"I'm curious to see where this thing takes us. Just no more pushups.\"\n\n\"Agreed, though I could use a bit more wine,\" said Charlotte as she held up an empty glass. \n\nSawyer stood. \"I'll take care of the drinks this time since James grabbed the shots. Megan, would you like more as well?\"\n\nShe nodded and handed over her glass with a \"thank you.\" James was still working on his beer. When Sawyer was out of earshot, Charlotte leaned forward to speak in a whisper. \n\n\"So, what happens if the game asks me to kiss James?\" It was aimed at Megan, and James decided the best play was to let her answer without his input. \n\nMegan took a long look into her husband's eyes, deep in thought. He gave her a reassuring brush on the cheek. \n\nShe smiled back at him and turned to her friend. \"James and I have a love that can't be broken easily. He's had plenty of chances to cheat on me, but he's never left my side. A kiss isn't going to change that, not as part of a silly game. So, if Sawyer doesn't have a problem with it, neither would I.\"\n\nJames felt too many emotions simultaneously for one man to handle. At the top of the list was complete adoration for the woman next to him, to know that her heart belonged to him, and his to her. There was excitement in the knowledge that things were progressing better than planned, and fear in the assumption that, should they continue far enough, the boundaries would continue to be tested. His wife had shown him a great deal of trust just now, but would it be strong enough to go all the way to the end? He suspected that it was, and he knew that his trust in Megan was solid. \n\nCharlotte gave James a wink and blew him a kiss. \"That will have to do for now,\" she said in a flirty voice.\n\nSawyer returned at that moment with drinks in hand, and the conversation ended. \"Alright, that's been two rounds so far,\" he observed. \"Charlotte, are you ready to start round three?\"\n\nShe was already swiping the screen of her phone. \"Hope my battery lasts long enough to finish this game.\" James had plenty of chargers on hand if it came to it. \"This one should be interesting. At what age did I lose my virginity?\"\n\nSawyer knew this one. James and Megan, however, did not. Megan had probably had this conversation with her friend before, but she was having trouble remembering anything specific. She did know that her friend had at least been of legal age, so she typed in '18' and locked in her answer. James guessed as well, adding a year to Megan's. \n\nCharlotte opened her submissions and gave Sawyer a pat on the back. \"Oh good, you remembered! And you too, James. A guess, I'm assuming?\" James nodded. \"Good boy. Sorry Megan, you're a year short. I didn't lose my v-card until college. I kept my inner slut restrained while I was under dad's roof.\" \n\n\"Your poor prom date must have been really disappointed,\" Megan joked.\n\n\"I never said I didn't do anything else before college,\" Charlotte replied.\n\n\"Sure, sure. So what sort of punishment do I owe to my formerly innocent friend?\"\n\nThe words that appeared on the screen gave everyone a good laugh. Everyone, that is, except for Megan. \"You have got to be kidding me!\" she cried, her cheeks already flush.\n\nJames read the penalty aloud, though there was no doubt everyone understood. \"Let Charlotte give you three spankings for your naughty behavior.\"\n\n\"Oh there is no way I'm doing that! Good thing I have that swap card thing.\" Megan started to click the icon, but Charlotte stopped her.\n\n\"Megan! Don't waste that card just yet! It's only three spankings! You can handle that, can't you? I'll be gentle I promise!\"\n\nMegan raised her eyebrows. \"What, you don't want to show some discipline to the boys tonight?\"\n\nCharlotte laughed. \"Oh trust me, I do. But I'll probably hurt my hand long before I'm able to put a dent in either of those asses.\"\n\nMegan looked back at her swap card. Was it really worth giving up over this? Probably not. Megan wasn't an idiot; she knew that things were only going to get wilder from here. How far was she willing to let this go? She wasn't entirely sure, but probably far enough that this card might be useful later on.\n\n\"Okay, you win. I'll save it, but be gentle, okay?\" Megan pointed a stern finger at her friend. Charlotte grinned and gave a thumbs-up in reply. With a sigh, Megan stood and shuffled nervously over to the other couch where Charlotte was sitting. She couldn't really lay across Charlotte's knee, so instead she propped herself against the arm of the couch with her hands and arched her back so that her rear was in front of Charlotte. The view was fantastic from where James was sitting, and Sawyer was quick to move over for a better angle. \n\nCharlotte put her hand on Megan's body, sliding it over her back and following her curves until it rested on its target. There was no warning. Charlotte lifted her hand quickly and sent it back down with more force than any of them expected. It was loud, but not loud enough to conceal the little gasp that Megan made as she flinched. It wasn't the type of sound one normally attributes to pain. \n\nCharlotte's grin widened at the realization. James and Sawyer stayed on the edges of their seats, unsure of what they had just heard but eager to see more evidence of what they suspected. Charlotte taunted her friend. \"Was that a little squeal I just heard?\"\n\nMegan turned her head back. \"What? I didn't...\" Her voice was cut off by the sudden sound of her second spanking. Charlotte didn't hold back, and when she lifted her hand she had to shake away the sting. Megan squealed again, louder this time. James couldn't believe what he was witnessing.\n\n\"Well I'll be damned! Megan, you're actually enjoying this, aren't you?\" Spanking wasn't something James had ever tried with his wife, but now that he saw what it could do to her he was strongly reconsidering his view on the subject. \n\nMegan turned back to her husband. \"Maybe a little, but don't get any ideas! You'll have my ass so red I'll be able to stop traffic whenever the wind blows!\" \n\nCharlotte giggled before replying. \"Sweetie, with an ass like this you'd be stopping traffic regardless of whatever James does to his 'little princess' when she's naughty.\"\n\n\"Oh, and you!\" Megan now directed her gaze at Charlotte. \"I thought you said you would be gent-!\" \n\nShe never finished the sentence, the words replaced by the sound of one last gasp as Charlotte gave her friend the final smack. The last squeal ended with what sounded suspiciously close to a moan. \n\n\"Oh, my!\" It was all Megan could say.\n\n\"'Oh my' indeed,\" Charlotte said as she gave Megan a quick pinch on the other cheek. Megan jumped up with another squeal, her face as red as her ass would be if it were visible. Megan returned quietly to her seat, easing down gently beside her husband. \n\n\"Are you okay?\" he asked.\n\nMegan gave him a smile and a nod. She then leaned over to whisper so only he could hear. \"I'm fine, don't worry. She hits hard, but I know you can do better. Just give me time to recover before you try anything new, okay?\" \n\nHe gave her a kiss on the cheek. \"You're so full of surprises. It's better than any mystery I could ever read. I love you so much.\" \n\nCharlotte cleared her throat, bringing them back to the moment. \"You guys are so adorable, really, but it's Sawyer's turn, and I'm anxious to see if James is about to have his tushie punished. Just like his wife!\" \n\n\"Was that punishment, or reward?\" Sawyer asked.\n\n\"Just swipe the damn screen, perv.\" \n\nSawyer did as he was told. \"Alright, biggest turn on. Let me think about this one for a second.\" After half a minute Sawyer entered his answer with a smile. Now it was their turn.\n\nJames knew Sawyer very well, so he knew with confidence that his friend would probably show his romantic side with Charlotte to balance out the sexual tension that was slowly building around them. In the end, Charlotte thought the same, though perhaps for different reasons. Both of them had simply typed her name in as the answer. \n\n\"Good job, guys. Well, except you Megan. Funny, I would have thought that as a girl you would have also been able to guess this.\" \n\nMegan had struggled with the answer, finally submitting \"lingerie\" before the timer ran out. It was worth a try, but now she was angry with herself for not realizing how obvious the answer should have been. Then again, she had gone shopping with Charlotte often enough to know exactly what sort of frilly things grabbed Sawyer's attention. \n\nEither way, she was worried. She had just endured the worst that Charlotte had to offer to her rear end. There was no way she could handle the same punishment from a man like Sawyer so soon after. He and James were roughly the same size. They were tall and fit, with bodies that were living proof that gym memberships do make a difference. James was able to carry her with one arm while the other undid her bra, so she knew that Sawyer would also be strong. She would have to use her swap card if she wanted to survive.\n\nShe expected more spanking, but instead she was given something that made her even more nervous. \"You have to make out with Sawyer for thirty seconds,\" Charlotte read aloud for all to hear. For what seemed like an eternity the room was silent except for the dull background noise of the television. Megan could feel her heart beating harder, the sound of it growing louder in her ears. She had given Charlotte permission a few minutes ago to do this very thing with her own husband, but now she was faced with doing it herself. It was the moment they'd all been anticipating. \n\nSawyer, sensing that somebody should say something, spoke up at last. \"Well we have three options here. One, we decide that this is where the boundaries are and stop the game here.\"\n\nCharlotte shook her head. \"No way! We've only been playing for half an hour and things are just now getting interesting!\"\n\n\"Okay,\" Sawyer continued. \"Option two is that Megan uses her swap card and I'm making out with Charlotte instead.\"\n\nMegan was the one to speak this time. \"I thought of that, but we only get one. What happens when this situation comes up again and we have no more swaps to use?\" \n\nCharlotte nodded in agreement. James knew it was a silly argument. The game was simply a tool. If the group chose to do so they could have as many change-outs as they wanted. But the point was to test limits and have fun, so before he suggested this he wanted to see what Megan would do when confronted with the final option.\n\n\"Option three is that we just do it and move on with the game,\" Sawyer finished. \n\n\"What if we just skip this penalty and keep playing like it happened?\" Charlotte asked.\n\n\"Then we could theoretically do that for any penalty after this point, and wouldn't that defeat the purpose?\" Sawyer answered. \n\nMegan looked over at her husband. She didn't say anything, but her eyes asked the question for her. James provided an answer. \"You said it earlier. You and I have a relationship based on trust, one that isn't easily broken. So, the way I see it, one kiss isn't going to change that.\" James then thought about what would likely be coming up in the near future. \"I trust Sawyer, and you trust Charlotte. That's good enough for me. It's just a game, after all.\"\n\nThis seemed to please Megan, and James knew that she didn't need more convincing to proceed with her task. Charlotte had likely shown Megan private photos of Sawyer and vice versa. Curiosity was a virus, and tonight none of them were immune. \n\nCharlotte was by far the more eager of the two ladies present. James suspected that she had hopes for where this game was leading, and could probably assume that if Megan backed out now then there would be no fun for her later. She was already nudging Sawyer forward to claim his prize. \n\n\"Are you sure you're okay with this?\" Sawyer directed the question to both Charlotte and James. ",
        "\"What's wrong Sawyer, feeling nervous? Am I not pretty enough?\" Megan was teasing him now, her flirty side returning now that James had given her his blessing. \n\nSawyer laughed. \"No, it's definitely not that! Just want to make sure everyone is cool before we do this.\"\n\n\"Will you just kiss me already, before I change my mind?!\" Megan asked.\n\nBefore Megan could change her mind, Charlotte leaned over and started the digital timer on her phone. \"Okay you two, thirty seconds!\"\n\nMegan gave James one last glance and a smile before she leaned over. She and Sawyer were both at the corner of the L shape made by the two couches, so they didn't have to move very far. Her lips found his and began to explore the unfamiliar territory. Sawyer brought his hand up to her cheek and caressed her face as they kissed. His tongue found hers and began the familiar dance.\n\nJames couldn't help but smile. If it had been anyone but Sawyer his jealousy and anger would be uncontrollable, but knowing that she was in the care of someone he could trust put him at ease. In fact, it was a major turn on to watch the action, seeing his wife so nervous and excited at the same time, her love for her husband remaining untarnished. He wondered if Charlotte would be feeling the same?\n\nReluctant to turn away from the kissing duo before him, James eventually glanced over to Charlotte to see her reaction. She was also smiling, and their eyes met for just a moment. He gave her a smile, hoping that she would understand the meaning behind it. The wink she returned, and the kiss she quietly blew to him, were a clear confirmation. His arousal intensified, and he wondered if Charlotte was herself aroused?\n\nJames had images in his mind at that moment, of walking over to Charlotte while Megan and Sawyer continued their challenge. Of pushing her back so that he could slide her jeans down her legs. Of her mouth wrapping around his shaft as he teased her with his finger. Megan and Sawyer would catch on and do their own thing in this particular fantasy.\n\nThose images disappeared, scattered by the sound of the timer announcing that thirty seconds had elapsed. His attention turned back to his wife, who was now grinning beside him even as her cheeks radiated in blush. She had obviously enjoyed herself, and when she turned her eyes to James, in guilt, he gave her a smile to reassure her that none necessary.\n\nMegan had another reason to smile, as it was her turn once again. Whatever penalties occurred this round would be in her favor, although she had to admit that the last had been more pleasure than punishment. She swiped the screen as everyone settled down, the kiss already in the back of their minds as they awaited new challenges. Her question wasn't very scandalous. \n\n\"What is my favorite guilty pleasure? I think I have the perfect answer for this!\" Megan proclaimed as she typed. The others began submitting immediately, though Sawyer was a little slow on his reply. Megan targeted him as a likely loser. She was not wrong. \n\n\"Okay James, Charlotte, you two get to live to fight another day, though I thank you for not judging me too harshly. Lots of young women still sleep with a stuffed animal, right?\" Megan asked with more blushing. \"As for you Sawyer, I'm a bit disappointed. Do you really see me ever wearing a snuggie?\"\n\nSawyer shrugged. \"I don't know, I don't normally imagine you with clothing.\" His confidence had grown now that the first line had been crossed. He had meant it as a joke, but that didn't stop Megan from wondering how often he actually did imagine her in the nude. \n\nCharlotte gave him a smack on the arm. \"One kiss doesn't mean you get to be such a flirt, mister! Only I am allowed to imagine Megan naked!\"\n\n\"It's one of my favorite things to do,\" said James.\n\nMegan was still laughing, the alcohol in her blood making it difficult to maintain a straight face for long. \"Okay children, calm down! All of you are allowed to imagine me in any amount of clothing, or none at all if you wish. Just as long as that clothing doesn't ever include a snuggie!\" \n\nMegan swiped for the penalty. \"Okay Sawyer, I get to give you a hickey! Don't think you're getting off easy, because when Ieave my mark, I make sure it stays there for days!\" \n\nJames didn't speak, but he nodded in confirmation. He had fallen prey to Megan's hickey's on multiple occasions, and not always on the neck.\n\nMegan raised her eyebrow as she looked back at the screen. \"It says that I can only do it on skin that is currently visible,\" She noted. \"Do you think that's implying more skin will be visible later on in the game?\" \n\nJames didn't necessarily see that the question was implying anything of the sort, and suspected that this was just an excuse to ask the question that was on her mind. It was clearly on Charlotte's as well. As Megan leaned in and began to suck on Sawyer's neckline, Charlotte answered. \n\n\"I say we just play it by ear and keep going anyway. I want to see where this goes,\" said Charlotte. \"But I will say this, the first person to chicken out had better find something just as interesting to do next weekend.\" \n\nIt was true that tonight had been more exciting than any of their previous game nights, and they were still only warming up to the more risqu\u00e9 elements of the app. Megan finally released Sawyer and, true to her word, the scarlet mark left behind was surely going to remain visible for another day or two. Charlotte examined her friend's work with approval in her smile.\n\n\"Not bad Megan! I might have to add one of my own a bit later on!\" \n\n\"Maybe you'll get your chance, but right now, it's my turn,\" James said as he touched his screen. He read his question and immediately knew that this would be easy enough for most of them to answer. \"Have I ever kissed anyone of the same sex?\"\n\nSawyer and Megan were already typing before he had a chance to look up from his phone, but Charlotte appeared less certain. She shrugged and typed her answer in, the last submission, and James brought them up for judgment. \n\n\"Only in your imagination, Charlotte,\" he said. \"Those fantasies you have of Sawyer and I having hour-long make out sessions while you're away are all fiction.\" As he swiped to reveal her punishment, Charlotte shook her head.\n\n\"Wait, so you're telling me you've never kissed a guy, ever? Like, not even on a dare, or while you were at college just to see what it's like?\" she asked.\n\n\"Nope, never have. I'm pretty sure it's not as common for guys as it is girls.\"\n\n\"You're assuming girls kiss other girls all the time?\" Megan added.\n\n\"I know you've kissed another girl before,\" James countered. \"And I'd venture a guess that Charlotte has too.\"\n\nCharlotte didn't seem content with his answer. She looked down at her penalty. \"You have to refill drinks for everyone, but first you must finish your own. The game cannot continue until the penalty is complete.\" \n\n\"Sounds like you're getting off easy, but I could use some more wine,\" Megan said as she held out her half-empty glass. \n\nCharlotte looked around at everyone's glasses. They had already been refilled not long before, and with all of the gameplay going on there had been little time to drink what remained. Her own glass was nearly full, and Charlotte didn't fancy the idea of chugging it. Her grin returned with sudden brilliance, and it almost scared James in a way, because smiles of this nature don't occur without a wicked idea in mind.\n\n\"I have a better idea! We can always refill the drinks in a little bit, that doesn't seem like something we really need right now,\" she said.\n\nSawyer chimed in. \"But it also says you have to finish your drink first.\"\n\nCharlotte looked at her wine glass. \"You don't chug wine, sweetie, and trust me, if I get sick then it won't matter what penalties the game throws at me. I won't be in any condition to do them.\"\n\nThey contemplated this for a moment and all agreed. A drunken Charlotte was never dull, but a sick Charlotte would ruin the night. \"Okay then, what's your alternative?\" Sawyer asked.\n\nCharlotte leaned forward with her mischievous little grin. \"Megan and I have to make out.\"\n\nJames and Sawyer exchanged a look. There was no way they were going to complain about a little girl-on-girl action. Megan, however, raised her eyebrow. \n\n\"Not that I'm super unwilling to make out with you, Charlotte, but I'm not the one who lost this round. You are,\" said Megan.\n\n\"True,\" Charlotte replied, \"but this is just to keep things interesting. Besides, there's a catch. The boys here will determine how many seconds our little kiss lasts.\"\n\n\"How so?\" James asked, sensing a trap. Charlotte was very clever, after all.\n\n\"Simple! You have to kiss Sawyer, and however many seconds you last with him, Megan and I will match!\"\n\n\"Hell no, forget it!\" Sawyer was already against the idea. \"James and I didn't lose the round! He was the one judging. Why should we have to do any sort of penalty?\"\n\n\"Because,\" Charlotte said as she walked over to Megan's side of the couch, \"If you can make it a full ten seconds, I'll even let you record it.\"\n\nThis got Megan's attention. \"Do I get any say in whether or not they get to video the two of us making out?\"\n\n\"Of course you do, sweetie, but who are they going to share it with? They spend all of their time together. It's not like they go to work and show our photos to their coworkers. Right, boys?\" Charlotte asked.\n\nBoth James and Sawyer shook their heads, in honesty. There weren't many people outside of this room that they could trust with that sort of secret. But was a recording of the kiss worth sharing one of their own?\n\nJames turned to Sawyer to see there was a look of contemplation on his face. \"What do you think? Can you make it ten seconds?\"\n\nSawyer didn't seem too pleased. \"You actually want to go through with this?\" he asked.\n\n\"Not particularly, no. But...\" James turned to the girls. Charlotte was running her hand along Megan's thigh, causing the hem of her dress to rise ever so slowly. Megan, meanwhile, was playing with her own hair and biting her lip, seducing them with her eyes while her friend explored. It was a compelling argument.\n\nSawyer finally relented, convinced that whatever level of disgust he felt towards kissing James, watching Charlotte and Megan kiss would certainly make up for it. They would show little restraint with one another, he assumed. \n\n\"Okay bro, ten seconds?\" Sawyer asked, mentally preparing himself for what was about to happen.\n\nJames thought it over before answering. \"We'll let them keep the time, in silence. If you think of a number, it'll just make us stop at a certain time. Just, I don't know, hold it for as long as you can and hope that it's more time than we bargained for?\" \n\nSawyer nodded in agreement. If they just kept their mind on other things, then the time would pass without them realizing. \"Okay, just don't be offended if I finish my drink when it's over.\"\n\n\"You know, I just might be a little offended,\" James replied, \"but I'll keep it to myself.\" \n\nCharlotte clapped her hands in giddiness. \"Yay! See, isn't this more fun than just having a fresh beer?\"\n\n\"I'm starting to wish I'd just asked for a beer.\" James replied as he sat beside his male counterpart. He leaned closer to Sawyer anyway, reluctant but determined. Sawyer did the same.\n\n\"Okay, on three. One...two...three!\" \n\nJames forced his eyes shut as his lips connected with his best friend's. He instinctively began a countdown in his head before realizing they had agreed not to do so. He needed to focus on something else, so he let his mind wander to the two girls sitting next to them. He imagined them kissing, their hands wandering and exploring one another. He imagined them both topless, Megan's head back and eyes closed as she moaned, with Charlotte's lips on her neck and her hand caressing Megan's breast. Her teeth would nibble at the soft skin of her throat the way he always did, her fingers would play with the nipple until it stood firm and erect.\n\n\"Um...James? Are you getting turned on by this?\" Megan asked out loud.\n\nThe two men separated quickly. Sawyer immediately began to wipe his mouth clean and reach for his beer. James, however, looked down to see that his cock had indeed become quite stiff during the kiss, the consequence of his vivid imagination. The erection was evident even through his pants and underwear, and he knew how it looked to an outside observer.\n\n\"There something you want to tell me, babe?\" Megan teased, her brows raised once again.\n\n\"Oh for fucks sake, I'm hard because I was thinking of your tits!\" James answered, embarrassed. \"I thought it would keep me distracted from what was actually going on! I guess it worked better than I expected.\"\n\nSawyer laughed. \"Sure bro, that's what I would say too if I were caught with a hard-on after all of that. I'm a world-class kisser after all!\"\n\nJames wanted to change the subject. \"How long did we make it?\"\n\nCharlotte pressed something on her phone so that she could check the timer. \"You guys lasted almost seventeen seconds before Mr. Woody came to break it up. Damnit Megan, if you hadn't said anything...\"\n\n\"Shhhh!\" Megan was suddenly flushed, hiding a grin behind her hand.\n\n\"Wait, why are you telling her to be quiet?\" Sawyer asked. \n\nJames was quicker to understand what was going on. Charlotte had been on her phone, but she had had to click an icon to bring the timer back to the screen. She had left it running in the background while she did something else. He had a feeling he knew what it was. \n\n\"You were filming us, weren't you?\" he asked. \n\nThe laughter burst out of them. They had been caught. \"What did you expect?\" Charlotte proclaimed between snorts. \"Besides, it's good to have insurace! If you ever leak the video of us making out, we can always do the same with you. And trust me, I think your video will get just as many online views, especially if I mention in the title that one of you gets turned on!\"\n\n\"I told you, I was thinking about the two of you. It had nothing to do with Sawyer.\" James was really embarrassed, but he had to admit it was funny.\n\n\"Oh? Before, you said you were just thinking of my tits,\" Megan added. \"Now you're saying it was both of us on your mind?\"\n\nJames had been caught. \"It was just you at first, but then I started thinking about the two of you kissing each other,\" James admitted. \"Then I got carried away and started imagining you both topless, and then you were touching each other. I have a very vivid imagination, as you can tell.\"\n\n\"Very interesting,\" Charlotte said. \"Well, a deal is a deal. You two didn't do much. Just kind of had your lips together, but don't worry, we'll make this worth the effort.\"\n\n\"I certainly hope so,\" said Sawyer before finishing his beer. \n\nCharlotte scooted over to Megan. \"Ready, babe?\"\n\n\"Wait!\" James opened his camera app and had it ready. Sawyer did the same. \"Okay, now we're good!\"\n\nMegan turned to Charlotte with a smile. \"It's so cute,\" she said. \"They don't know this isn't the first time we've done this!\" \n\nBefore James or Sawyer could form a reply to this revelation, the two girls were leaning into each other and their lips were pressed together. Charlotte's tongue quickly began searching for Megan's, and found it eager to play. Nobody had started a timer; they would enjoy the kiss for as long as they felt like it. It was already going on twenty seconds when Charlotte's wandering hand began to travel up Megan's waist and over her chest.\n\nMegan didn't move away, but she did break lip contact and smile, knowing that Charlotte was up to something naughty. Their lips reunited and the boys stared in silent awe. James wondered if Charlotte would actually push Megan's dress to the side, freeing one of her breasts to play with as he had imagined. \n\nSadly, she was all tease. Charlotte slid her hand under the fabric of the dress and beneath Megan's bra, careful not to move any clothing out of the way as her hand began to slowly caress Megan's body. Their lips parted once again, and Charlotte traveled down Megan's cheek and onto her throat, where she continued to deliver the soft kisses from before. \n\nMegan let out a soft moan in return, and her own hands wandered over Charlotte's back, her nails digging into the fabric as a thumb teased her nipple below. Unlike James, Megan's arousal was not the product of her fantasies. She melted to Charlotte's touch, forgetting the camera and the game as Charlotte's kisses drew lower down her collarbone.\n\nA few more seconds passed before Charlotte withdrew her hand from her friend's dress. The two separated slowly before Megan leaned in and gave Charlotte one last kiss on the lips before sliding back into her original seat. Charlotte stood and returned to her place by Sawyer, smiling wide while he and James sat in stunned silence. \n\n\"I hope you got all of that?\" she asked.\n\n\"I'm going to make backup copies of this in case I ever lose this phone,\" Sawyer replied.\n\n\"Good, I want a copy. Just don't post it online!\" Charlotte then gave him a quick kiss, the taste of Megan still on her lips, before standing again. \"Looks like you boys could use a fresh drink after all. Megan, care to join me?\"\n\n\"I could use some more wine,\" Megan replied. The two girls left the room together, still giggling and smiling. James took advantage of this moment alone with Sawyer.\n\n\"Am I crazy, or did they tell us this isn't the first time they've made out?\" James asked, unsure of what he'd heard.\n\nSawyer nodded. \"Looks like they've been cheating on us with one another.\"\n\n\"They're welcome to do it more often,\" said James. \"Especially if I'm around to watch it happen.\"\n\n\"I'm with you there, bro.\" Sawyer checked the doorway before leaning in. \"It looks like it's working pretty well. I mean, we haven't started getting undressed yet or anything, but they're definitely not afraid to do things outside of our normal comfort zone. I think if we keep this up, going slowly, we might be getting lucky tonight, in ways we never thought possible.\"\n\nThe girls returned before James could give a reply, their wine glasses full and carrying two fresh bottles of beer for the guys. They took their seats, after thanks were given for the refills, and the game continued.\n\nIt was Charlotte's turn now, and she seemed unfazed by events thus far. She eagerly swiped for her question, but found it immediately disappointing. \"Have I ever flashed anyone?\"\n\nCharlotte had indeed flashed people before, in college. This included the three other people in the room at this very moment, the result of plenty of alcohol and a game of truth or dare. It had been quick, only a couple of seconds, but it had happened all the same, and nobody had forgotten.\n\nObviously, nobody failed to answer correctly this round. \"So what does that mean?\" Charlotte asked. So far at least one person had lost each round.\n\n\"Swipe and find out?\" Megan implored. \n\nCharlotte did as she was told, and was met with more upsetting news. \"It says that because everyone was correct, I have to perform a penalty instead!\" \n\n\"That sounds pretty fair to me,\" Sawyer replied, shortly before receiving another smack on the arm from his counterpart. \n\n\"What's the penalty then?\" Megan asked.\n\nCharlotte swiped. \"Oh for fucks sake! I have to flash everyone! But it says I can keep my bra on at least.\"\n\nMegan's eyes were wide. \"Oh my!\"\n\n\"Well it's not like we didn't all just agree that this isn't the first time...\" Sawyer received another smack. His arm would probably fall off after another hour or so of this. \n\n\"Fuck it, it's just tits,\" said Charlotte standing with confidence. She first had to push her corset down far enough to unbutton the top of her blouse. It took a few minutes, but finally she was able to spread the top of her shirt open enough to show off the black lace hiding beneath, curving with her body. Black was one of James' favorite colors to see against fair skin, and even though he wasn't able to see breast, he was already growing aroused once again. His khakis were annoyingly tight.",
        "Sawyer was used to seeing his woman in her underwear on a regular basis, but the looks of approval from Megan and James gave him a good feeling. Eventually, the cat-calls died out and Charlotte closed her shirt and lifted the thin corset back into place.  \n\n\"I wonder if it'll be asking us to flash them without the bra in the future?\" Megan asked as her friend wiggled back into her seat.\n\nCharlotte laughed. \"Maybe it'll be the boys showing the skin instead? Come on, let's keep this up!\"\n\nSawyer wasted little time, his question already on his screen before Charlotte had finished speaking. \"How many partners have I been with sexually?\" he asked as he read.\n\nJames smiled, another question he knew the answer to. Prior to his relationship with Charlotte, Sawyer had only been with three girls, two of which were one-night-stands. That brought the number up to four. James knew this because he had been Sawyer's roommate during each of these encounters. \n\nSawyer studied the submissions a minute later. \"Good job James, and Charlotte of course you would know. It's required information after the fourth date, isn't that the rule?\"\n\nCharlotte nodded as she sipped her wine.\n\n\"That just leaves Megan, who apparently thinks I am a horny little fucker.\"\n\nHer answer had been \"22,\" which she assumed was a low number these days for single college men. \"Sorry Sawyer, I just made an assumption,\" she said. Megan didn't add that this assumption was based on how attractive he was, or that she wished she could raise his actual number by one. \n\n\"Shame on you,\" Sawyer replied. \"Let's see what your punishment is.\" They all checked with anticipation. \"Woo! Looks like you owe me a lap dance!\" Sawyer was grinning with excitement, the hesitation and guilt no longer relevant when it came to gameplay activity involving his best friend's wife. \n\n\"Oh, come on! Why am I the only one doing stuff tonight?\" Megan exclaimed. \n\n\"Hey! I just had to show everyone my bra!\"\n\n\"Yeah, but you enjoyed it. Doesn't count!\"\n\n\"Like you're not going to enjoy doing this?\" Charlotte retorted with a giggle. \n\nMegan turned to James. \"Are you okay with this?\" She didn't seem as nervous this time as she asked for permission. It could have been the alcohol, but James had a feeling excitement played the bigger role.\n\n\"Only if I get to pick the music,\" James joked.\n\n\"Fine, but nothing too long,\" Megan answered, relieved.\n\nJames connected his phone to the Bluetooth speakers in their entertainment center while Megan stood and faced Sawyer. While James was looking through the music he glanced over at Charlotte, still judging her reaction. She smiled back and gave a wink, but this time it wasn't flirting. She held her phone by her side, hidden from the others but with the camera lens aimed in their direction. \n\nJames returned her smile and selected a song. As soon as he hit the play button Megan began her punishment. \"Forgive me if this is awkward. I've never really done this before,\" she said as she started to move. \n\nShe began dancing, her hips moving slowly in front of Sawyer while her hands teased and caressed the curves of her body. Her palms worked their way over her waist and up her stomach, then sliding over her chest until her fingers were running through her hair. She closed her eyes, leaning her head back in a silent moan as she continued to slowly dance in place. She hadn't even touched him yet, but Sawyer was already stiff down below. \n\nMegan opened her eyes and gave a smile as she leaned forward, brushing her fingers under Sawyers chin as she bent over at the waist. James had a great view of his wife's rear as she ran her hands down Sawyers chest and between his thighs, spreading them apart before crouching between them. She rolled forward, pushing her body up between his legs and up to his chest, her hands grabbing onto his shoulders as she lifted herself up.\n\nShe brought her chest up to his eyes, and with one hand she caressed one of her breasts, just inches from Sawyer's face. Then suddenly she was pulling herself to her feet, and with perfect grace Megan threw one leg onto the couch beside Sawyer, giving him a nice view of the inside of her thigh before she placed the other leg beside him. \n\nMegan was now straddling her friend, and as she arched her back and placed one hand on his shoulder, the other still exploring her body, she felt delight in knowing that the throbbing in his pants was her own creation. She could feel him pressed against her body, so very close to her womanhood. She wanted to feel him inside of her, but for now this would have to suffice.\n\nHer hips rocked back and forth to the beat of the music, pushing down into his erection. Charlotte and James watched with lusty eyes as Megan lifted herself up, shoving Sawyer's face into her cleavage before she stood and spun away from him. She slowly slid her hand over her bottom and gave herself a gentle smack as she let out another one of the moans that had driven everyone wild a few turns before. \n\nAs the song reached its conclusion Megan bent down and sat in Sawyer's lap, her ass now pressed against his crotch as she reached an arm back around his head. She arched her back and continued to wiggle her bottom, still able to feel his cock throbbing beneath his trousers. Her own body was responding to the sensation and the feeling of warmth and wetness between her legs caused her mind to wander. \n\nThe song ended and reluctantly she returned to her feet, suddenly aware of everyone's stares. Sawyer was speechless, his mouth a permanent grin as he watched her leave. Charlotte was holding a hand over her mouth to suppress her own laughter, while James simply gave her a thumbs up. \n\n\"If that was your first time, I can't wait to see how the second and third time goes,\" James said as his wife sat beside him. \"Maybe you can try it with me later?\"\n\n\"Of course, Sweetie, that was fun!\" Megan replied to her husband with genuine excitement. Perhaps the alcohol had given her courage, but Megan felt that she would enjoy dancing for her husband, feeling his own throbbing cock against her panties.\n\nSawyer finally managed to regain his speech. \"Wow. That was... I don't even... wow.\" He turned to Charlotte. \"If you can dance as good as she can, I'll never need to see the inside of a strip club again.\"\n\n\"Oh trust me, no stripper can do the things that I'm going to do to you when all of this is over,\" Charlotte promised.\n\n\"Hmm. Maybe we should end it here and head home then?\" Sawyer asked. James wasn't sure if he was serious or not. \n\n\"Absolutely not!\" Megan replied. \"So far I've been spanked and had to give a lap dance. I'm ready to see the men do something dirty!\"\n\n\"We did have to kiss,\" Sawyer reminded her.\n\n\"Only so you could watch me and Charlotte do the same,\" Megan retorted. \"Who's next?\"\n\n\"You are, Megan. Did all that dancing rattle your brain?\" Charlotte asked with a giggle.\n\n\"My brain is fine, and I hope you get this one wrong.\" Megan received her question. \"How many sex toys do I own?\" She blushed as she said it, the wine not quite strong enough to subdue her embarrassment this time. \n\n\"Should I count James in that?\" Charlotte asked. \n\n\"Nope, just the ones that require batteries,\" answered Megan, hiding her flush.\n\nJames knew the answer and was the first to submit. Charlotte also knew, but was a bit slower as she did a mental check, unsure if Megan had mentioned any recent changes to her nightstand. Sawyer simply guessed. In the end, however, all of them were correct.\n\n\"I suppose I should take it as a compliment that everyone knows you only need one vibrator,\" James said with a smirk. \n\nMegan had been disappointed with the outcome, but her husband still managed to amuse her. It was worth a small laugh at least. \"God damnit!\" Megan shouted. \"Even when it's my turn I still have to perform for you perverts! I'm not dancing again, just so we're all clear.\" \n\nMegan swiped her phone and was delighted to see that her penalty was fairly simple. \"Finish my drink. I can manage that.\" Megan turned up her wineglass and finished the last two swallows. \"James, would you be a babe and pour me another glass?\"\n\n\"Sure thing, darling.\" James took Megan's glass and retreated into the kitchen. \n\nWhile James was out of the room, Sawyer decided to pry. \"So Megan, was that really your first time dancing for a man?\"\n\nShe blushed again. \"It was indeed. I've never really had a reason to before.\"\n\n\"Well I've got to say, if you start practicing with James, he's one lucky man.\" \n\n\"Aw, thank you Sawyer! I'm sure Charlotte can do it much better than I can though.\" \n\nCharlotte laughed. \"That was a pretty hard performance to outdo.\"\n\n\"Well you should probably know, the dance wasn't the only thing that was hard.\" She gave her friend a wink.\n\nCharlotte turned to Sawyer. \"Babe! Are you getting a hard-on for my best friend?\" \n\n\"Is that a problem? You didn't seem to mind much.\" Sawyer was starting to worry that the boundaries had reached their end. He need not worry, however. Charlotte reached over to his lap, pressing her hand against his crotch. She found the shaft and took gentle hold of him, measuring his firmness with her fingers. \n\n\"It's not a problem at all,\" she replied with a smile. \"Just save some of this for me tonight, okay? And maybe save a little for Megan as well.\" \n\nSawyer wanted to ask Charlotte for clarification, to see if she was truly serious, but at that moment James reentered with Megan's glass. Megan herself was still flushed pink, shocked that her best friend had been so bold as to suggest that Megan would make use of Sawyer's erection. \n\nJames, having heard none of this conversation, returned to his seat and claimed his turn with the swipe of his finger. \"Oh this should be interesting. Have I ever worn underwear of the opposite sex?\" \n\nOnce all of the laughter died down the answers were submitted. James opened them with expected results. \"Of course Sawyer and Megan both know about that bet that I lost in college. I had to wear one of her thongs to class for an entire day.\"\n\n\"Are you fucking kidding me?\" Charlotte exclaimed. \"You've never kissed a guy, but you've walked around campus with a thong cradling your balls?\" \n\n\"Well, when you put it like that it sounds really bad,\" James said with a laugh. \"But it did happen, and you're the only one who said that I've never worn a pair of panties in my life. You know the drill by now.\" James was hoping for a lap dance from Charlotte, but the penalty she received was the beginning of something just as exciting.\n\n\"It's telling me to remove an article of clothing!\" Charlotte seemed genuinely shocked, but Sawyer knew it was pretend. They had all seen this coming by now. The question was whether she would follow through with the challenge.\n\n\"Guess that answers my question about stripping challenges,\" said Megan. \"Well, are you going to chicken out and find us a better game next weekend, Charlotte?\" It was a challenge, and it definitely paid off.\n\n\"I refuse to be the first to quit! Besides, I'm counting my shoes as an article.\" Charlotte slipped out of her heels and let them fall to the floor, pushing them out of the way with her stocking feet. \"I think that's fair.\"\n\n\"I don't know, shoes are more like accessories if you ask me,\" Sawyer replied. It was worth a try but he knew it was a losing argument.\n\n\"Aren't you supposed to be wanting me to keep my clothing on, dear?\" Charlotte asked, but with a wink. \"At least in front of your friends anyway.\" Before he could argue further, Charlotte retrieved her phone from the arm of the couch. \"Okay, let's see what's next. Hmm, this one could be interesting. Have I ever played strip poker?\"\n\nJames recalled Sawyer mentioning this not long ago, a night where he and Charlotte played a game and clothing had come off. He assumed this meant that she had indeed played the card game and submitted his answer. Sawyer submitted at the same time, and Megan was last. \n\n\"Oh boys, rotten luck for you two,\" said Charlotte as she checked the submissions. \n\n\"What? Sawyer, didn't you say that you two had played strip poker alone before?\" James asked.\n\n\"No bro, we played a video game. Every time we lost we removed clothing, but it wasn't poker,\" Sawyer answered.\n\n\"Then how did you also get it wrong?\"\n\nSawyer shrugged. \"I guess I just assumed that everyone has tried it at least once in their life?\" He turned to Charlotte. \"You've seriously never played strip poker?\"\n\nShe laughed. \"I have a terrible tell. I'd be naked in the first few rounds. Besides, this is the twenty-first century. There are plenty of other games to get naked to.\" The irony of her statement was not lost on Sawyer.\n\nHe thought it over. \"Maybe we should all play sometime, to cross it off your list?\"\n\nCharlotte rolled her eyes. \"Let's just get through this and see where things go from there, okay?\" She looked to Megan now, the triumphant smile brilliant on her face. \"You at least remembered me telling you this back when we met. Thank you, gorgeous!\"\n\n\"No problem!\" Megan replied, glad to not be a loser for yet another round. \"Now, what do these two fools have to do in return?\"\n\nJames had a feeling it would be the removal of clothing. Sure enough, their fate was announced along with the cheers of both girls. \"Take it off boys! One article of clothing each!\" \n\nBoth of them removed their shoes, following Charlotte's lead. James also removed his socks as well, stating that his toes could use a stretch and that the carpet felt nice on his tired feet. Sawyer, sensing that James was using this as an excuse to have one less item available, followed his lead. The idea was that the less clothing they wore, the more attention the ladies would pay to their throbbing body parts. Or perhaps they would simply find their nudity amusing and laugh. Either way, this could only lead to entertaining times ahead. \n\nSawyer, now barefoot, proceeded with his turn. His question was rather personal. \"When was the last time I masturbated?\"\n\nJames knew that whatever the correct answer was, it certainly wasn't today. He had to assume that Sawyer, like himself, would want to have plenty of cum ready for Megan should tonight's events progress that far. He wrote in \"Wednesday\" and hoped he was correct.\n\nMegan and Charlotte had already submitted answers by the time James looked up. Sawyer was already waiting to judge. He seemed happy with the results, but James knew this could only mean one of the girls had lost.\n\n\"Not sure how you two knew, but good job to Charlotte and James,\" said Sawyer.\n\n\"I was just guessing. James probably knew because he was there to play catcher,\" Charlotte joked.\n\n\"At least he isn't afraid to take a load to the face, babe.\"\n\n\"I do that all the ti-\" Charlotte caught herself midsentence and, with the flush of embarrassment, went silent. \n\nBefore James could add anything to the conversation, Megan chimed in. \"So that means I lose again? I should have known you wouldn't have done it today. You haven't had much time.\" She didn't seem upset at losing this time.\n\n\"Yeah, nothing for me today. So, let's see your penalty.\" Sawyer swiped. \"Oh yeah! You have to let me do a body shot!\"\n\nCharlotte was quickly on her feet and heading to the kitchen. \"James, come cut some lime while I find tequila and salt,\" she commanded, looking over her shoulder.\n\nJames wasn't used to being ordered around in his own house, but Megan shooed him off while she adjusted her dress, careful not to pull it above her bra. Her leggings kept everything else hidden. \n\nStepping into the kitchen, James expected to find Charlotte already browsing through his liquor cabinet. Instead she was leaning against the counter and facing him with a grin on her face. \n\n\"Are they busy out there?\" she asked.\n\nJames peeked around the doorframe. Megan was now laying on her back on the couch, and Sawyer was chatting with her about something, probably doing a bit of flirting while they were alone. They wouldn't be bothering them for a few minutes.\n\nJames turned back to Charlotte and nodded. She stepped forward and reached out to grab him by his shirt. Charlotte pulled James against her and leaned against the counter, his head coming down to meet her lips. It wasn't part of a penalty, but Charlotte was determined to experience a kiss with James the same way Megan had been allowed to kiss Sawyer. It was only fair, after all.\n\nJames felt her tongue slip between his lips, and he wrapped his arms around her to hold her closer against his body. She was quite a kisser, more aggressive than Megan at least. The contrast was striking, and James couldn't help but let his mind wander again to Charlotte's naked body beneath his. He began to kiss down her neckline and was greeted with soft sighs and the feeling of her fingers along his belt. \n\nThe images in his head were causing consequences in his underwear, and when her fingers found the growing bulge in his pants Charlotte smiled and teased him with whispers. \"Looks like someone is enjoying this game quite a lot! Maybe if you're lucky you'll get to see your best friend's fianc\u00e9e do more than just show off her pretty new underwear.\"\n\nShe let him kiss her neck a few more seconds before placing her palms against his chest and gently pushing him away. \"I think that makes things even for now, wouldn't you agree?\" She was beaming.\n\nJames nodded. \"For now, at least,\" he replied, smiling.\n\n\"I'd love to tease you a little more James, but they'll wonder where we've gone. Now, how about that lime?\" She turned away from him as she said it, bouncing over to the liquor cabinet. She turned and gave smile as she bent over to peruse the bottom shelves. James didn't bother to hide his gaze as he took in the view.\n\nBack in the living room, Sawyer was also taking advantage of the alone time with Megan. \"So, tell me more about that kiss you had with Charlotte. You said that wasn't the first time?\" he asked.\n\nMegan was laying on her back now, legs toward Sawyer and her dress pulled above her belly, just beneath her bra. They would no doubt put salt in her cleavage for Sawyer to lick clean, but Megan's dress was cut low enough to accommodate. She had blushed deeply as she positioned herself, conscious of Sawyer's eyes on her legs. She had almost returned to her normal shade before Sawyer asked his question, and now the red was returning.\n\n\"We've done it a few times actually. The first time was in college. We were all drunk, and I think you and James had gone to get tacos or pizza or something. She asked me if I'd ever kissed another girl, and I told her that I hadn't. Somehow we both agreed that it wouldn't really count if we were both drunk, so we kissed. And it wasn't so bad, actually.\"\n\nSawyer raised his eyebrows. \"But you've done it since then?\"\n\nMore blushing. \"Yes, a few times. The last time was during my bachelorette party. Charlotte looked so hot that night, and we were drinking of course. Charlotte said something along the lines of 'I'll make out with the next person to buys me a drink.' She wasn't really serious, of course, but I was closest to the bar so I went and got her something and brought it back to her. I told her she had to keep her word, so without any hesitation she crawled into my lap and started kissing me. Everyone else was too drunk to really care.\"\n\nSawyer was imagining the scene play out before him. He wanted to ask for more details, perhaps even about other times the two had kissed, but James and Charlotte returned to them with the body shot supplies. \n\n\"Okay Megan, try not to laugh or this is going to spill all over the couch,\" James instructed as he tilted the bottle over his wife's stomach. Megan's body was slender and smooth, and her bellybutton was a perfect container for Sawyer's reward. She didn't react to the cool liquid on her skin, or to the dabs of salt that Charlotte was now applying between her breasts. Sawyer would have to dive deep to retrieve all of it. The finishing touch was the wedge of lime that James held out for her to bite down on.",
        "Megan was careful not to move, and although she found the situation somewhat laughable she resisted the urge to giggle. A few spasms still made it past her defenses, and the tequila gently rocked back and forth across a stomach that any woman would envy.  \n\nSawyer took his position by the couch on his knees. James took a seat beside Charlotte so that he could watch, and was not surprised to feel her hand on his leg soon after. Sawyer dipped down with his lips and quickly sucked away as much of the amber liquid as he could. He swallowed quickly, allowing the burn to linger a moment as he climbed up Megan's body to her breasts. He didn't make eye contact, knowing already that his own eyes would give away too much of his desire. \n\nHe quickly slid his face into her cleavage, taking in the scent as his tongue searched for salt. The taste was a welcome comfort to his tongue, still burning with tequila. Sawyer wanted to linger there longer, but didn't want to make things any more awkward than they already were. He came up to her mouth, unable to avoid eye contact this time as he plucked the lime wedge from her lips with his own teeth. \n\nSawyer bit down into the fruit and let the acid finish off the usual combination. As he stood he looked back into Megan's eyes, sensing that beneath those wonderful brown irises there was a similar pleading, a desire, just as strong as his own. \n\nCharlotte was cheering in the background and James was all smiles. He had been prepared with a napkin for Megan to finish cleaning up with, and she was grateful, though Sawyer had been thorough in leaving very little behind. She sat up carefully, still mopping away the last traces of alcohol from her stomach and brushing away the residual salt. \n\nWhen she finished, Megan slid her dress back into place to cover her body, giving James another smile and a very long kiss to show her continued affection. She worried deeply that, although James said aloud that he was fine with tonight's activities, inside he would be angry, or jealous, or hurt. She couldn't allow that. \n\nAt the same time, however, Megan had seen something in Sawyer's eyes. There was a desire burning inside of him, and she knew it was all for her. She was fooling herself if she didn't admit that a similar lust was building inside of her own body. \n\n\"Okay Megan, if you're all adjusted I think it's your turn!\" Charlotte's words snapped Megan back into the moment.\n\n\"Oh yes, I think I'm all good now!\" Megan retrieved her phone and viewed her question. \"You have to guess what color my panties are!\"\n\nJames wanted to kick himself. He had known this question would likely come up, but had forgotten all about it as Megan had gotten dressed. He should have peeked in to see what color her lingerie would be. \n\nHer dress was charcoal, and James knew his wife would want to match as much as possible. She had grey and black panties in her collection, several of each. He hoped that his guess was correct and submitted \"black.\"\n\nThey were suddenly interrupted by two sounds. The first was the familiar chime of Megan's phone as she received a text message. The sound that followed was similar to a siren, and it came from Charlotte's phone. James suppressed a smile, already knowing what this indicated\n\nCharlotte's eyes grew wide as she read her screen. \"It say's I've been caught cheating!\"\n\nThe same message was now on display for everyone on their screens. \"Texting other players is not allowed during gameplay. You must pay for your actions, naughty girl!\"\n\nSawyer had less control over his own smirk. This had been one of James' ideas, and he hadn't expected it to actually pay off. \"Did you actually text her to ask about the question?\" Sawyer asked.\n\nMegan opened the text and ready it aloud. \"Hey babe, want to help me out and tell me what color your undies are?\" Charlotte had obviously tried to corner Sawyer into another penalty absent his fianc\u00e9e. It had almost succeeded.\n\nCharlotte couldn't stay upset for long. She had been caught, and now the situation was something else to giggle over. \"Okay, fine! I cheated! I won't complain, just give me my penalty.\" She swiped her screen to uncover the consequences of her actions. \"It says I have to lose two articles of clothing, but Megan gets to choose which ones, and she has to remove them with her own hands!\"\n\nJames and Sawyer were already cheering as Megan stood with her hand on her hips. \"You naughty girl, thinking that I would help you cheat!\" She shook her finger in mock disappointment. \n\nCharlotte was past the point of caring whether or not she kept all her clothes on, though she did at least want to see more of the men at the same time. She jokingly plead with Megan to be easy on her, but her friend was already contemplating which articles of clothing Charlotte would need to shed.\n\n\"Don't worry babe, I'm not going to have you out of your panties just yet,\" Megan said as she considered her options. \"I think I'll start with that lovely corset you're wearing. Yes, that needs to go.\" Charlotte stood and faced Megan, holding her arms out to the side so that her friend could unzip the corset and fling it to the side. \n\n\"Okay, that's one. What next?\" Charlotte inquired. She was still smirking, enjoying the sounds of cheer and excitement from James and Sawyer. \n\n\"Hmm. I really want you out of those pants, but skinnies are hard to take off. I'll just take this instead.\" Megan began unbuttoning the blouse. Charlotte rolled her eyes but allowed her friend to continue, finally letting the white shirt slide off of her arms and onto the floor. \n\nJames took in the view. Charlotte and Megan were both very fit, and just as Sawyer had admired Megan's tummy during the last round, James was now admiring Charlotte's. She was slender and short, and her waist curved in all the right ways. Her breasts were a cup size larger than Megan's, though James certainly couldn't complain about his wife's body. \n\nCharlotte kicked her discarded clothes away from the couch before returning to her seat. She didn't try to cover herself, much to their satisfaction. She still wore her black bra, but the sight was distracting nonetheless for the two men present.\n\n\"Okay, that's one penalty down, but I still have to judge your answers!\" Megan reminded them that there was still a chance more clothing would be removed, and not necessarily from Charlotte this time. \"Let's see who my victims will be. Ah, looks like Charlotte didn't answer in the time limit, so she automatically loses.\"\n\n\"Oh no fair! I was a bit distracted by the phone telling me off for cheating!\" Charlotte said, unhappy with how this was proceeding. \n\n\"That's what you get for cheating, dear!\" Megan replied, winking. \"But don't worry, Sawyer also guessed wrong. I'm wearing black panties, not white. James is the sole winner this round.\"\n\nJames sighed in relief, though he wasn't sure why. The penalties were proving to be more fun than punishment thus far, and he knew the trend would continue. \"Awesome! Maybe you can reward me with a kiss while we dish out their punishment?\" James asked, hoping to gain brownie points with his lovely wife.\n\nMegan smiled wide and leaned in for a very affectionate kiss while she absentmindedly swiped her screen, trusting that Charlotte and Sawyer would read it aloud for all to hear. \n\nCharlotte was first to reply. \"Well I guess that's not so bad, better than keeping my pants off anyway. It says we have to actually show you what underwear we're wearing. Makes sense, considering the question we lost to.\"\n\nJames released his wife and gave her another wink before turning his attention to his guests. They were already on their feet next to each other, Charlotte giggling as she tried to retain her balance. The wine was getting to her now. Sawyer first removed his jacket and laid it across the back of the couch. Then, he quickly loosened his belt and undid the button of his pants so that he could slide them down his legs. \n\nCharlotte did the same next to him, struggling first with the stubborn zipper, then again with in attempt to wiggle the tight jeans down her legs without pulling her panties with them. James caught a quick glimpse of the top of Charlotte's mound, perfectly smooth and begging for the touch of his fingers, before she caught herself and pulled the underwear back into place.\n\nSawyer was wearing a pair of black boxer briefs. James didn't pay much attention to his friend, but Megan was unable to restrain herself. The fabric of his underwear was tight, and the outline of his bulge left nothing to the imagination. James was blessed with a large penis himself, and it seemed Sawyer was equally as gifted. But seeing his erection, and knowing that she was the source, made it all the more exciting. She caught Sawyers eye and gave him a grin that was dripping in mischief. \n\nCharlotte was too busy showing off for James to notice. She had known that her thong would cling to the denim of her jeans as she slid them slowly below her mound. She did this on purpose, hoping that James would get a brief glimpse of what waited for him beneath the pink lace. She had waxed herself only a couple days prior. Just before she readjusted herself, Charlotte caught his eye, and she understood from his gaze that he had indeed caught a glimpse of more than just her taste in lingerie. Now, Charlotte held her arms out in a pose as she twisted slightly to the side, giving them all a view of her panties as the lace curved around her hips and disappeared between the cheeks of her ass.\n\n\"Those are cute!\" Megan said, now trying to pay at least some attention to Charlotte as she modeled for them. Nobody was fooled. Megan's ability to keep a straight face had long since disappeared, and the way she bit her lip as she stared at Sawyer's bulge made it clear which of the two models she was most interested in.\n\n\"Thanks Gorgeous!\" replied Charlotte. \"Can't wait to see those black ones you're wearing!\" Charlotte pulled her jeans back up to her hips and sat down without touching the zipper or button. James could still see the pink lace in the gap and was suddenly aware of how distracting this would be.\n\n\"Stop staring at her goodies and play your turn!\" said Megan, giving James a playful punch on the arm when she realized he wasn't paying attention. \n\n\"Oh, sorry!\" James felt himself blush slightly, but Megan was laughing and sipping her wine. Content that he was safe for now, James took his question. \"What's my favorite genre of porn?\"\n\nJames wondered if Megan would correctly answer this question for him. The couple was rather fond of viewing pornography together on certain occasions, but that was definitely not the same category of porn that he would watch in private. He locked in an answer and waited patiently.\n\n\"Well at least Sawyer understands me,\" James said as he viewed the submissions. Megan had tried thinking outside the box and suggested that his preferred genre involved bondage, but her guess was still wrong. Charlotte, meanwhile, had hoped that Sawyer's interest in lesbian porn was something the two men shared, but she, too, was incorrect. Only Sawyer had known that James spent much of his time clearing the browser history of search terms related to public sex.\n\n\"Maybe Megan is trying to send you a hint there, James,\" Charlotte suggested as the answers were cleared. \"Maybe she wants you to tie her up sometime?\"\n\n\"Who says we haven't tried that already?\" Megan added. \n\n\"Touch\u00e9.\" Charlotte knew, however, that Megan would have told her if James had decided to use handcuffs or rope on his sweet and innocent wife. That didn't mean they wouldn't take the suggestion seriously after tonight.\n\n\"Penalty time ladies!\" said Sawyer, eager to move the game along. \"Come on, be something good!\"\n\nJames swiped his screen. \"You both have to show us your best attempt at a fake orgasm.\"\n\nCharlotte began to giggle. \"What happens when you realize our fake orgasms are a bit too familiar for your comfort?\" More giggles ensued as Sawyer gave her an unforgiving look. \"I'm kidding, Sweetie! I've never had to fake an orgasm with you, I promise! I wouldn't be marrying you if you didn't know how to properly keep me satisfied.\"\n\nMegan turned to James, but found him smiling. \"Don't worry, babe. I know when you're getting the real thing. It's a difference I can feel.\" \n\nShe returned the smile. \"Okay, well let's get this over with.\" Megan turned back to the others as she prepared herself. All eyes were on her now, but she didn't mind at this point. Megan closed her eyes and tilted her head back, arching her spine and sliding the palms of her hands across the couch fabric. She squeezed her thighs together and imagined the actual bliss of orgasm. She moaned softly, letting her breathing mimic the rapid contractions she would normally experience. She gasped with each rhythmic memory and let her nails dig into the cloth beneath her. Her body shivered slightly and she finished her final gasp by biting her lip. It was practically her trademark.\n\nThe entire scene lasted just over thirty seconds, and when she opened her eyes it was to the sight of open jaws and wide eyes. Charlotte was still giggling in her seat while Sawyer and James were literally speechless. Megan straightened her back and placed her hands in her lap after brushing a few loose strands of hair from her face. \"Well, that was fun. But I think I much prefer the real thing.\"\n\n\"Shall I compare the two later?\" James asked with a grin.\n\nBefore he could answer, Charlotte was beginning her own version of simulated pleasure. While Megan had demonstrated that a quiet orgasm can still be incredibly sexy, Charlotte was much more animated, and vocal. Like Megan, she arched her back and closed her eyes, but the similarities ended there. Her breathing was fast, the rise and fall of her chest evident as her bra pushed outward with each excited gasp. She curled her toes as she mimicked the climax, and her rapid gasps vanished into a silent moan. She held her mouth open and arched her back further as the imaginary waves coursed through her. As it subsided she was finally able to relax her spine and release a very loud moan, followed by a rather loud \"Oh yes!\"\n\nCharlotte opened her eyes without bothering to sit up straight. James was nodding his approval and Sawyer was grinning. Her head was in his lap now, something she hadn't planned to do, but now she could feel him throbbing beneath her and this only increased her desire to achieve an orgasm that was genuine. \n\n\"Not bad. Maybe a little over the top...\" Megan was cut off by the couch pillow that Charlotte threw at her head. She missed, but the laughter that followed from all four of them was uncontrollable. \n\n\"Alright, Sugar, get yourself calmed down and let us know when you're ready to keep going,\" Sawyer said to the panting woman now rising from his lap. \n\n\"Oh, I'm fine,\" Charlotte answered. \"Unlike the real deal, fake orgasms don't come with a recovery period.\" Charlotte winked at her fianc\u00e9 and picked up her phone. \"Okay, next question for me. How do I groom my pubic hair?\"\n\nCharlotte knew she was in trouble this time around. Sawyer would obviously know the answer to this question, and she had often talked with Megan about the subject. As for James, she had shown him the answer just two rounds prior. It had been meant as a bit of flirtation, but now it seemed like a silly move. She was clearly going to have to perform her own penalty this time around. Sure enough, when the submissions were up for viewing, they all spoke fondly of her waxed vulva.\n\n\"Well, fuck! I guess that's just the luck of the draw though, right?\" Charlotte asked. Without an answer she swiped for her penalty. \"And of course, remove more clothing. You know, I may be having fun, but that doesn't mean I want to be the first one naked in this group.\" Charlotte clicked the icon on her screen that would allow her to switch her penalty to another player. \"Megan, you look so very delicious in that dress, but I think it's time for it to come off!\"\n\n\"Charlotte! How could you!\" Megan protested. Her screen was already flashing that she was now the chosen penalty performer. James seemed satisfied with this turn of events, as did Sawyer, but Megan continued to blush. Then she remembered that she was still the only one wearing her shoes. With the flick of her toes she let them fall to the floor with a satisfied grin. \"Ha! We'll see who ends up naked first!\"\n\n\"So, you're saying you're okay with getting naked?\" Charlotte asked. It almost felt like a trap. James and Sawyer waited quietly for an answer while Megan blushed more.\n\n\"I guess it depends, really. I didn't expect this game to be this much fun at first. Maybe I'm just too tipsy to care?\"\n\n\"So we're good to keep playing?\" Sawyer asked as he held up his phone for his turn.\n\n\"I'm not going to stop it over a pair of shoes,\" answered Megan.\n\n\"Alright, here we go then.\" Sawyer swiped. \"Okay, it's a yes or no question. Have I ever had a threesome of any kind?\"\n\n\"Are we counting that one time with me and that other guy?\" James asked jokingly.\n\n\"Shhh! No, we will never count that,\" replied Sawyer, who winked at his friend.\n\n\"Something you want to tell me about, dear?\" Charlotte asked, getting in on the humor.\n\n\"Just answer and submit before the timer runs out.\"\n\nWith only two possible choices it didn't take long for the answers to roll in. Sawyer had indeed been a part of a threesome back in college. This was before Charlotte was in the picture, and was the result of having a roommate who couldn't handle his alcohol. He had passed out on the couch early, and his date had been adamant that she would not go home until she had been properly taken care of. So, naturally, Sawyer had offered to kill two birds with one stone. Except in this case, the stone was his cock, and no animals were harmed in the process.\n\nMegan was the only one in the group not privy to this information. It hadn't been need-to-know up until this point. Sawyer didn't give her much lip for not knowing, but it did mean that she would once again be faced with a penalty.\n\n\"Remember what you said earlier about not being first one naked? Be careful what you say, Gorgeous!\" Charlotte was giggling.\n\n\"Well you never know, it might not be another stripping penalty!\" said Megan, pretending to be hopeful. \n\nIt was. \n\n\"Jeez, Megan. This game seems to have it out for you tonight,\" said Sawyer. He looked at James before adding, \"Forgive me if I don't complain about it.\"\n\nMegan's frown twisted into an incredibly mischievous little grin. \"Not this time, Sawyer!\"\n\nHis phone lit up to reveal that Megan had selected Sawyer as her switch. He would have to perform the penalty for his own question. \n\n\"Wait a minute! I already took off my jacket earlier without having to do it as a penalty!\" Sawyer argued. It was a weak protest against two intoxicated young women who were ready to see male flesh. \"Okay fine! I'll give you my shirt if it makes you happy!\"\n\nSawyer unbuttoned the garment slowly, hoping that this was enough of a tease to stimulate further interest from the ladies. Sawyer, like James, was very well defined as a man. His shoulders were broad and his chest was always smooth. The gym had already paid for itself, giving him firm pecks and incredible abs. His arms were just as muscular. Charlotte enjoyed the feeling of security they provided to her at night.\n\nThe crowd scrutinized his body for a few seconds, finding nothing at all to complain about. Charlotte playfully ran her hand over his abdomen, the same way she loved to do in private. Normally, she would slip her hand lower, letting it vanish into his pants, but now wasn't quite the time. Not yet. \n\nMegan unconsciously bit her lip, wishing that she herself could lean over and touch Sawyer's body. James had a similar build, but the thought of exploring someone new was exciting. James nodded his approval, no longer self conscious or envious of Sawyer's body now that his friend had forced him to work out with him. The competition ended when they left the gym, and for good reason. Neither had anything to be ashamed of."
    ],
    "authorname": "Vaginalpuppetry",
    "tags": [
        "swinger",
        "swingers",
        "swap",
        "young",
        "app",
        "foursome",
        "body shot",
        "masturbation",
        "sex games",
        "friends wife"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/game-of-phones-2"
}