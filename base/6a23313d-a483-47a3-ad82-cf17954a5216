{
    "title": "Limits Ch. 17",
    "pages": [
        "Jude couldn't believe Mel had been so unsympathetic. In many ways she saw Mel and Lucy as the perfect D/s couple. They had clearly defined roles: Mel the tough butch and Lucy the pretty femme. And yet, there was Mel doing the ironing. What on earth was that all about? Surely Mel could see that doing the ironing was degrading for a Domme, that it reduced her stature. How could a sub be respectful to a Domme who did the ironing?\n\nBut it was the things that Mel had said that had really got to her. She had been completely unsympathetic and had said that, somehow, she had 'pushed Karen away'. And then there was this nonsense about Friday nights, how they were on hold for a few weeks, how they wouldn't feel right without Karen. Although Mel had ducked the question, it was quite clear where she was pointing the finger of blame. What sort of friends were these, to turn on her like this? She had been so sure they were going to understand how she felt; and yet they had gone and taken Karen's side. Where was their loyalty? \n\nShe got into her car feeling hurt and confused. She'd already had a couple of drinks at the club, and probably shouldn't be driving; but, well, just as far as the next pub wouldn't hurt, would it? Weaving slightly as she pulled out, she drove the couple of hundred yards or so to the corner, into the car park of the Rose And Crown, where she parked up and went inside.\n\nShe went up to the bar and ordered a whiskey, no, make that a double, and, moments later, Bushmill's finest slid down her throat, warming her inside. She perched on a barstool and, hunched over her glass, took another sip and let the whiskey do its stuff. \n\n\"Do you want another?\" the barman asked. Jude looked up and realised her glass was empty. She nodded and the barman poured her a refill. Another followed that one and Jude was just starting on yet another, when the door of the pub opened.\n\n\"Come along, Judy, you know you're barred,\" the barman called out.\n\n\"Be a love, just the one. Look, I've got the money.\" \n\nThe back of the bar was mirrored and, when Jude looked up, there, in the reflection, she saw a bag lady shuffling across the pub, holding out a handful of loose change in front of her. However, the barman had come round from behind the bar and had started to kindly but firmly guide her back towards the door. Jude stared at the woman and then at the glass in front of her and her whole world seemed to shift. Sure, this wasn't the first bag lady she'd seen; pulling the drunks out of the gutter was part and parcel of her job, albeit one she didn't particularly relish. But why in Hell did this one have to be called Judy? There was even a faint physical resemblance. But she wasn't a drunk, was she? Jude thought back over the previous week and realised she'd been tipsy, and that was putting it mildly, every day since she and Karen had split. She felt as if she were standing on the brink of an abyss, teetering on the edge. That forlorn figure being guided out of the door was her future unless she did something about it now. She put down her unfinished drink and walked out into the night. There, standing in the car park was Judy, the bag lady.\n\n\"Judy, Judy, wait up!\" she called out after the shuffling figure. Judy just turned and stared.\n\n\"There's a shelter, just down in Crown Street,\" Jude continued. \"You can get a cup of tea there.\"\n\n\"Don't want tea. I just need a little drink and that bastard....\" Judy muttered.\n\n\"Please, let me help you,\" Jude said firmly.\n\n\"Don't want help, don't need help, just want a little drink, that's all,\" Judy said in reply.\n\n\"Now come along....\" Jude started.\n\n\"Go 'way,\" Judy snarled, \"I don't need you, I don't need anyone, I just need a drink.\"\n\nAt this point, had she been on duty, Jude would have had a number of options. Now, off duty and more than a little worse for wear, she could do nothing. She just stood and watched as the bag lady shuffled off. The stubborn pigheaded fool, Jude thought to herself before, once again, realising that the description fitted them both.\n\n\"I don't need anyone, I just need a drink.\" That's what Judy had said and the words resonated deep within Jude. She felt as if the very ground beneath her feet had been whipped away and she was lost, floating, falling; she needed to go somewhere, anywhere, anywhere but here, although for the life of her she didn't know why. She thought of going home but her house would be empty and lonely. She thought of calling up one of her friends but, after her roasting from Mel, she wasn't sure what reception she would get; anyway, ten thirty at night is a little late to go calling. She went over to her car, got in and tried to start it, but she was so uncoordinated she couldn't get the key in the lock. The realisation hit her that she was too far over the limit even to consider driving. She got out again, and, reeling slightly, locked the car after three tries, and walked away.\n\nMore out of something to do than any real hunger, she walked towards a kebab stand that she knew could be found just around the corner. She'd eaten there often when on duty and their kebabs were not too inedible. She ordered a doner with everything and took it outside and started walking. Anything just to keep moving.\n\nTen minutes later Jude threw the soggy remains of the paper bag that had once held the doner into a waste bin. Now that she was walking it seemed like she just had to carry on; it wasn't that she was going anywhere, it was simply the thing to do as her mind churned over the night's events. So far the fortress of her pigheaded self-confidence was holding fast, but it was under siege from two fronts. Firstly there was the way the group, her so called friends, had apparently ostracised her, had taken Karen's side and effectively banned her from Friday nights. Suddenly she was the outsider, the one who didn't fit, and that brought back all sorts of memories of school days, of crushed emotions, hidden feelings and an overarching loneliness. \n\nBut if the past was painful so too was the glimpse of the abyss into which she was falling. Just because she could still afford Bushmills, and had yet to descend to Special Brew out of a can shakily gripped in a paper bag, didn't detract from the fact that her first reaction to Mel's harshness had been to head for the pub and that wasn't the first time she had done so. She couldn't deny it, she had been drunk every day since... every day since... every day.\n\nDamn it, damn it, damn it! Why had she been so weak and let this happen to her? Karen was just supposed to be a bit of fun. She was just supposed to be a game, a silly little straight girl whose world she would rock, and then and then... but if anybody's world had been rocked it wasn't Karen's, it was Jude's. But what was it that Karen wanted from her? If she didn't want Jude the Domme then what other Jude was there?\n\nJude's meanderings had led her down to the river, and she turned right towards the promenade. On one side the closed arcades looked empty and forlorn; on the other the low tide had exposed acres of exposed mudflats dotted with the occasional pleasure boat. The streetlight's yellow glow reflected on the oily surface, giving it an extra air of desolation. She leaned against a railing and stared out across the estuary, not staring at anything in particular, just staring. A sudden squall brought with it a shower of rain and Jude turned up her collar; all those nights on the beat meant that she wasn't bothered by a drop of rain. But this rain had set in for good and, as the shower turned to a downpour, she just stood, leant against the railing, staring out to sea.\n\n\"Excuse me, are you OK?\"\n\nJude turned to see who was calling her. A police panda car had pulled up at the curb and a copper had got out and was coming towards her.\n\n\"Oh, it's you. Hello, Jude. A bit damp to be out at this time of night.\"\n\n\"Hi, George,\" Jude replied. \"I just needed some fresh air.\"\n\nGeorge gave her a long hard look.\n\n\"Are you sure you're OK? You don't look it. I could give you a lift home if you want. Sarge won't need to know.\"\n\n\"No, that's OK. Thanks, George, really, I'm fine.\"\n\nThe look on George's face told how much he disbelieved her but, after a moment or two he said goodnight and went back to the car. Jude, her reverie broken, started walking again. With her head down against the rain she trudged through the night; it was as if somehow, when she was moving, the ache within her was easier. The only thing was not to stop, to just keep going, and going, and going.\n\nWorn out at last, she leaned against a tree. Here it was slightly dryer and she could rest for a while. She looked up to see where she was and realised with a start that she was outside Karen's house. Whether it was chance or her subconscious that had brought her this way was a question she didn't want to answer. The neat suburban street with its row of identical houses, each with its manicured garden, spoke everything about Karen from the outside, the little Englander, the petit-bourgeois values. Here and there along the street a window glowed, often with the flickering light from a TV set, but Karen's house was dark. Surely she must be in bed, asleep. Jude could just picture her, snug and warm in her flannelette nighty; so prim, so proper, so...\n\nso warm, so desirable, so loving, so simply perfect. \n\nJude's hunger for Karen was physical; she quite literally ached with need. But it was something other than sex that she craved; she wanted to be held, comforted, mothered. Sure it had started as sex but there was this other Karen, this real Karen, who kept coming through. Just beyond Karen the sexy sub there was another Karen she also needed, the Karen who stood up for herself, the Karen who was strong, who knew her mind, who took no nonsense, the Karen who....\n\n\"Jude, is that you? What on earth are you doing?\"\n\nJude turned. She had been so lost in thought that she hadn't heard the approaching footsteps and, there on the pavement, standing under an umbrella, was Karen, walking home from the bus stop after an evening out.\n\nJude felt like a fool. What was she doing there, how could she explain it?\n\n\"I was just out for a walk,\" she said lamely.\n\nKaren just stood and looked at her.\n\n\"Out for a walk. Pull the other one, it's got bells on. Excuse me, but it's pouring with rain, you're right over on the other side of town from your house, it's,\" Karen glanced at her watch, \"the thick end of midnight and you're just 'out for a walk'. Please, Jude, give me some credit. What are you doing, stalking me? I'm not a complete fool, you know.\"\n\n\"No, you're not a fool, I never thought you were. Nor am I stalking you, I just... I just.... Look, I'm sorry, I'm really not stalking you but, you're right, I shouldn't be here, I'll go.\" Jude, physically and emotionally exhausted, simply couldn't find a way to explain. There was so much to say and she hadn't the words to say it with. Better to leave, better to walk away. She pushed herself up away from the tree where she had been leaning and turned to go.\n\n\"Jude, it's tipping it down, this is no weather to be out walking the streets. Can't I at least offer you a cup of coffee?\" Karen asked to Jude's retreating back but Jude was already leaving. \"Jude, stop, please!\" Karen called out and, this time, Jude turned back.\n\n\"Jude, please,\" Karen continued, \"Stop being a bloody fool. I don't know what's got into you but I can't let you just walk away like this. Please, come inside, have a cup of coffee and let me call you a taxi.\"\n\nJude looked at Karen and, for a while, her stubbornness fought with common sense. She was cold, she was wet through and Karen was right, she was just being a bloody fool but, somehow, saying yes would be too much like capitulation. For a long while she just stood there dithering as the last vestiges of her pride held out but, in the end, common sense won. She turned back and meekly let Karen lead her across the road and into her house.\n\n\"There's a spare towel in the bathroom,\" Karen said as they stood in the hallway. \"Go upstairs and dry yourself off. If you bring your clothes downstairs I'll put them in the tumble for you and they'll all be dry in no time. You can use my dressing gown in the meanwhile.\"\n\n\"I thought this was just coffee,\" Jude protested.\n\n\"Jude, stop being such a damn fool,\" Karen said with exasperation. \"Just because we're not sleeping together any more doesn't mean that... Oh, for Pete's sake just do it, will you. Come on, bathroom, top of the stairs, second door on the right. You know the way.\"\n\nKaren's school ma'am tone got through to Jude and, reluctantly, she did as she was told. She peeled off her sodden clothes and dropped them in the bath. The towel had been hanging over the radiator and was lovely and warm and, for the first time in ages, Jude was feeling some comfort. However, once she had finished, she realised that Karen's dressing gown wasn't hanging on the back of the bathroom door. It must be on the equivalent hook on the back of the door to Karen's bedroom. Wrapping the towel around herself, she crossed the landing to find it. It was exactly where she had thought and, now that she was in Karen's bedroom, she felt an overwhelming wave of nostalgia; they'd had so many good times right here. She remembered their first time, Karen's mixture of na\u00efvet\u00e9 and joy, of shyness and gay abandon; why had she thrown all this away? She looked around the room, wallowing in the memories. To top it all, there on her dressing table was a jewellery stand and, in pride of place, the necklace complete with its dog tag. Jude went to have a closer look and saw that, as well as the necklace, tucked in the clips holding the dressing table mirror, there was a photo of them both in happier times.\n\nThe contrast could not have been more clear; whereas Jude had been running away from all their shared memories, Karen was embracing them, treasuring them.\n\nWith a sense of shock Jude realised the extent and intensity of Karen's feelings and, therefore, just how much it must have hurt her to walk away. Jude had been so wrapped up in her own self-pity that she hadn't considered whether Karen would be hurting too. Here, dramatically, was all the evidence she needed. Just because Karen had acted with more dignity didn't mean she didn't feel the pain. Jude felt humbled, a petulant child beside this grown-up. However, it was time to go downstairs and face up to what she had done.\n\n\"I've made you coffee, is that OK?\" Karen asked, as she took the sodden clothes from Jude.\n\n\"Perfect. Er... Karen,\" Jude started.\n\n\"Just a minute,\" Karen called out from the utility room. Jude heard the tumble dryer start up and Karen returned. She sat down at the kitchen table and motioned Jude to take the other chair.\n\n\"That's better. Your clothes will be dry in no time. Now, are you OK?\"\n\n\"I don't deserve this,\" Jude said.\n\n\"What, I should have left you out in the rain? Just because we're not... just because we've stopped.... Dammit, Jude, whatever has happened between us I still care about you! I can't stop that.\"\n\n\"That's what I don't deserve,\" Jude said simply. \"I don't deserve you. I'm a bitch who only thinks of herself and I don't deserve someone as wonderful as you.\"\n\n\"Is that what you came all this way to say to me?\" Karen asked gently. She reached out and took Jude's hand in hers. \"Anyway, I'm not sure that what you deserve has anything to do with it.\"\n\nThere was another awkward pause as neither one dared say what she really wanted to. Jude looked down at Karen's hand. Such a simple gesture but with so many meanings.\n\n\"I saw Mel's video, the one of you coming out,\" Jude said finally as a way of breaking the silence.\n\n\"That damn thing, I wish she'd just delete it.\"\n\n\"I'm glad she didn't. I'd never have known otherwise. I never thought you had the bottle, although I ought to have known. You were just fine and, well... I was proud of you.\" There was another pause. Jude stared at their conjoined hands. She felt overwhelmed by the power of the emotions she was feeling but didn't know how to put it into words. Sorry, that seemed like a good place to start.\n\n\"Karen,\" Jude lifted her head and looked Karen in the eye, \"I'm sorry, I'm so, so, sorry. I never should have hurt you, I was a pigheaded fool and couldn't see right from wrong. Look, you said you had a girlfriend, in the video, I mean. Did you mean me?\"\n\n\"Well, there's no one else, if that's what you mean.\"\n\n\"No, I don't mean that. It's just that I wasn't sure that I was your girlfriend any more. I mean I'd like to be but... well... I know I don't deserve it but, please, do you think we could try again?\"\n\n\"With you making all the rules and me agreeing to anything you say?\" Karen knew she was being hard, but she had to know.\n\n\"No, no, not like that. I love you, I love you with all my heart and all my soul and I will never, ever, ask more of you than you're prepared to give. I was a self-centred idiot who didn't know what she had until she lost it.\" \n\nKaren, her heart singing with joy, was too overwhelmed to respond and Jude, taking Karen's silence as uncertainty, slipped off her chair and fell on her knees before her.\n\n\"Karen, I need you, I'll do anything for you....\"\n\n\"Oh, Jude, did you really think you would have to beg? I never stopped loving you, not for one moment.\" Karen looked down at Jude on the floor in front of her. Seeing proud Jude on her knees felt wrong, so wrong. \"Please, Jude, you don't belong down there. Get off your knees and kiss me.\"\n\nJude stood up and there was a moment's awkwardness as now she was standing over Karen and she didn't want that either, so she pulled Karen to her feet and, standing together in Karen's kitchen, they kissed and kissed and kissed. Jude knew that, whatever happened now, her life would never be the same. She had changed, changed for the better, and Karen had been the one who brought that about. But it wasn't just about her, Karen too had changed and, as they snuggled together she could feel Karen pulling at her dressing gown so as to get closer, so as to have one less layer between them. Their emotional need had a very physical expression.\n\n\"I need you in bed, now!\" Jude demanded huskily.\n\n\"I thought you'd never ask,\" Karen replied and, still touching each other as much as possible, they made their way upstairs.\n\nSix-thirty the next morning found Karen bringing a breakfast tray to Jude who was still sleeping. \n\n\"Come on, sleepy head, I've got work to go to. What shift are you on?\"\n\n\"Eight 'till four. God, my head is thumping. Is that the time, I need to get a move on. Where are my clothes?\"\n\n\"Still in the tumble. Shall I go and fetch them for you.\"\n\n\"Please, I've got to rush. And my wallet, my mobile....\"\n\n\"All downstairs on the kitchen table. You eat your breakfast and I'll go and sort out your clothes.\"\n\nKaren was busy running an iron over Jude's stuff when, wearing Karen's spare dressing gown, Jude appeared at the kitchen door, holding her tea in one hand and a slice of toast in the other.\n\n\"Ironing? I've no time for that, Please, Karen, I'll have to wear them creased. I've got to pick up my car and then go home and change. Do us a favour, will you, call me a cab?\"\n\nKaren kept an eye out for the taxi whilst Jude pulled on her clothes. She was barely dressed when she heard Karen call 'it's here' so, grabbing her wallet and phone, she made her way towards the front door.\n\n\"Look, I've got to dash... Karen... really... look... must talk soon... really important... but we've no time now... I love you....\" Anxious or not Jude took the time to kiss Karen, a kiss that threatened to go on and on.\n\n\"I love you too, now go!\" ordered Karen. \"Come on, your taxi's waiting.\"\n\nTogether they went to the front door but just before she left Jude turned once again to Karen. ",
        "\"Karen... honey... look... don't tell Mel... about us, I mean... will you? \"\n\n\"Why not?\" Karen started but Jude was already halfway to the garden gate and there was no time for explanations.\n\nCome mid-morning, Karen was busy compiling the weekly figures when her phone bleeped, announcing that she had received a text. Surreptitiously she reached down and took her phone out of her handbag. It wasn't like her to break the rules, but this wasn't any ordinary day.\n\nPhone you noon I love you Jude\n\nKaren's heart gave another little leap. It was so unlike Jude to use 'I love you' in a text.\n\n\"I do hope someone isn't using her phone at work,\" Mel's voice made Karen jump.\n\n\"Just a text....\"\n\n\"Hey, you don't have to explain yourself to me. I'm not the boss around here,\" Mel joked. \"Would that text be something to do with whatever's making you so happy today?\"\n\n\"Happy?\"\n\n\"Yeah, happy, beaming smile, big grin all over your face. What's up?\"\n\n\"I... I... I promised not to tell,\" Karen said sheepishly.\n\n\"Really? What was it you promised not to tell? OK, OK, I'm only joking. I'll keep quiet; I won't tell Lucy that you're back with Jude.\"\n\n\"How did you know?\"\n\n\"So you are back with Jude. How did I guess? It's written all over your face. Something to do with the way you can't stop smiling. Do you know how hard it's going to be for me not to tell Lucy?\"\n\n\"Please don't. I promised.\"\n\n\"You may have promised but I didn't.\" Mel saw Karen's face drop. \"Don't worry; I'm only teasing, I'll keep quiet. Your secret is safe with me.\" And with that Mel went back to her desk.\n\nOn the dot of midday Karen was out of the office and on her way to the park. She was less than half way there when her phone burst into life with Jude's name displayed on the screen.\n\n\"Hi, Karen, look, it's Jude. I can't chat for long, one of those days, but can I pick you up after work this evening?\"\n\n\"Yes, please!\" Karen couldn't keep the delight out of her voice, nor did she want to.\n\n\"You get out at five, don't you?\" Jude asked.\n\n\"That's right.\"\n\n\"I'll see you then. Oh, and have I told you lately that I love you?\"\n\n\"You stole that line from Van Morrison.\"\n\n\"And what if I did? Doesn't mean I don't mean it. Love you, gotta go.\"\n\nAnd with that the phone went dead.\n\nThe afternoon passed in a blur for Karen. All she could think about was five o'clock and all that that would bring. She was the first out of the office and, when she emerged, she found Jude waiting for her outside. She went straight over and kissed her right on the lips.\n\n\"Wow! Someone's getting bold,\" Jude joked.\n\n\"I'm just so happy I want the world to see,\" Karen replied and they hugged again.\n\n\"Look, there's something I want to say, something important; let's go to Franco's, you know, the Italian in Water Lane, we can stop there for our tea and discuss it over the meal.\"\n\nJude led Karen to where her car was parked and, twenty minutes later, Karen and Jude were settled at their table, having ordered from the early-bird menu.\n\n\"OK, I've waited long enough, what's so important, what do you want to talk about?\" Karen asked.\n\nJude looked suddenly serious.\n\n\"When I woke up with you this morning I realised I want to wake up with you every morning. I've been thinking about this all day. It's stupid us living apart, stupid us having two houses. Please, darling, I want share all my life with you, every moment of it, not just the weekends. Please, what do you say? Will you move in with me?\"\n\n\"I'm not sure...\" Karen started. Jude looked devastated. Teasingly Karen waited a moment longer before continuing, \"I'm not sure if I should move in tonight or whether we should wait for the weekend.\"\n\n\"You tease!\" \n\n\"Better get used to it. Seriously, it's still quite early and if we swing by my place I could pack a few things and then, maybe, we could move the rest of my stuff this weekend, if you're not on the beat, that is.\"\n\n\"No, for once I've got the weekend off. Are you sure?\"\n\n\"Am I sure I want to move in? Unlike some people around here I've been sure for months. If you knew how much I've wanted to move in with you and all the while you wouldn't even grant me a little space in your closet but, hey, that's all in the past. Oh, Jude, I'm so happy you've asked at last. You've no idea how happy that makes me.\" For a long, long while they just stared at each other until they were disturbed by the arrival of a waiter. \"Ooh, that looks good. Yes, please, I'm the insolata caprese.\"\n\nSo it was that Karen and Jude spent the early part of the evening at Karen's house packing for the move. Karen was amazed at how much junk she had accumulated over the years, and the pile to go to Oxfam was almost as big as the pile to go to Jude's. Even so, by the time they finished, both the boot and back seat of Jude's car were packed with suitcases and boxes and, even in the front, there was barely room for Karen. When they arrived at Jude's house, it took several trips to unload the car and the hallway ended up littered with items that had yet to find somewhere to live.\n\n\"If I'd known you had so much stuff I wouldn't have asked you to move in,\" Jude joked as they unpacked Karen's clothes in the bedroom. \"I'm not sure if we need a new wardrobe or a skip.\"\n\n\"There is quite a bit and you're right, we are going to have to get another wardrobe. Our clothes will get all creased crushed in together like this,\" Karen commented as she tried to squeeze in yet another dress.\n\n\"I guess so. How do you fancy a trip to IKEA on Saturday?\"\n\n\"That makes sense; I won't put anything else away until then.\" Karen looked ruefully at the overladen shelves. \"Not that I'd be able to if I wanted to.\" \n\nIt was quite late by the time they had finished, well, finished for the day. Exhausted but happy they snuggled up in bed together.\n\n\"So, lover, why is this a big secret? Why can't I tell Mel?\" Karen asked after she had kissed Jude on the tip of her nose. \"And it's not just her; what about all the others? You know I'm dying to tell everyone.\"\n\n\"You're not the only one who wants to tell everyone but I want to make it special and that's why I want to keep it secret for just a little longer. Please, if you tell Mel then she'll tell Lucy and, after that, you might as well announce it on the nine o'clock news. Tomorrow it's Friday and everyone will be down at the club. We'll go down a bit later than normal, wait until everyone is there, and then, together, we'll make a formal announcement. How does that sound?\"\n\n\"That sounds perfect but, if we're going down the club, what about afterwards? Will we be inviting them all back here?\"\n\n\"Well, I'd like to but... Look...\" This was the first time they had talked about the Friday evening sessions and Jude was really nervous; she didn't want to open up old wounds and upset Karen. \"It's up to you; I don't want anyone coming back here if you don't.\"\n\n\"But I do, really I do,\" Karen assured Jude. \"Seriously, honey, I don't want Friday nights to stop, it's part of who you are; it's part of who we are.\" And Karen meant it. Apart from anything else there was a plan coming together, a plan that would only work if the whole gang were to come back after the club. Jude wasn't the only one who could make surprise announcements. They sealed their agreement with a good night kiss, and another, and another....\n\nCome the morning, Karen got a real thrill from waking up knowing that her clothes were in the wardrobe and not in her overnight bag. Knowing that she'd woken up in her bed, in her house, the one she shared with Jude. She went downstairs to her kitchen and made breakfast, using her pots and pans. It was wonderful to feel at home as she laid the table for two. By the time Jude came down she had everything ready; the coffee was all sorted and two full English breakfasts were just coming together under the grill.\n\nAnd later, after the day's work, Jude was, once again, waiting outside for Karen, which was another thing she could get used to. It wasn't just that she didn't have to catch the bus, far from; it was far more that her evenings were, from now on, going to be filled with a shared life, not a lonely existence. They would go home and Karen would cook a meal for two, a meal she would share, a meal that would be an act of love. \n\nBut it wasn't just Karen who was walking on air. Jude, too, was finding that the sun was shining more, that life was a little brighter. Even one of her colleagues commented on her good mood. The fact that he put it as 'What's wrong with you? You're normally such a grumpy cow,' was just part and parcel of the station banter and, for once, she didn't mind.\n\nAfter their meal they got ready to go out. Karen noticed that Jude seemed to be taking just a little more trouble over her appearance and, when it was time to leave, Karen felt that Jude was looking just right, that she was going to be so proud to walk into the club accompanied by such a fine woman. \n\n\"Are you ready?\" Jude asked after the taxi had dropped them off.\n\n\"I've never been more so,\" Karen replied. Jude took her hand and they went on in. \n\n\"Hi guys,\" Jude said as they approached the booth where the others were sitting. Just as they had wished, all the others were there, chatting together. They looked up to see Jude and Karen holding hands and there were smiles all round.\n\n\"I've... err... I've got an announcement to make,\" Jude continued.\n\nKaren was a bit taken aback; wasn't this their announcement, not just Jude's?\n\n\"I've been more than a bit of a fool,\" Jude continued, \"and, as you're probably all aware, I've been blind to the fact that the most wonderful woman in the world was in love with me and I with her. On Thursday she did me the honour of moving in with me. Today I want to ask her something more.\"\n\nJude fumbled in her jacket pocket and brought out a small box. She opened it up to reveal the ring inside before getting down on one knee in front of Karen.\n\n\"Karen, my love, my only, my sweet. Now that I've stopped being such a fool would you do me the honour of becoming my wife? Please, Karen, will you marry me?\"\n\n\"Oh, Jude, oh, yes, oh yes, oh yes!\" Karen replied. \"But Jude, please, get off your knees, that's not where you belong. What will the other's think,\" she joked, \"a Domme on her knees before her sub.\"\n\nJude stood up and, holding Karen tight, took her hand and fitted the ring. Karen felt she would burst with happiness, there was simply too much emotion going on inside her. Jude, as ever, hadn't stinted on the ring and the diamond sparkled. They kissed and then turned to the others to share their joy. Lucy, of course, was ecstatic at the news and couldn't help but remind everyone that it was she who had first introduced Karen to the club and, as such, she could take the credit for getting the two of them together. \n\n\"We'd like you all to come back later,\" Jude said, once things had settled. There was an awkward pause and all eyes turned to Karen.\n\n\"Yes, please, all of you,\" Karen added, \"please, we'd love you to.\"\n\n\"Of course, why wouldn't we,\" was the general response now that they knew that Karen was willing. \"It is Friday after all.\"\n\nLater on Lucy was, once again, admiring Karen's ring.\n\n\"Lucy, I need a favour,\" Karen said quietly.\n\n\"Of course, what do you need me to do?\" Lucy asked.\n\n\"When we get back I want you and the other subs, well...\" Quietly Karen outlined her plan and Lucy, as soon as she got the gist of it, was more than keen to join in. Indeed, a few minutes later she, Beth and Kathy disappeared to the toilets together and, when they came back, there were sly winks all round.\n\nWhen they all arrived at Jude and Karen's house, Kathy announced to the Dommes that, should they take their places downstairs, their subs would be with them shortly. There was a certain amount of good humoured muttering but no one was going to deny anyone anything that night. The four subs went into the kitchen where Karen retrieved a shopping bag from the bottom of the fridge and another from behind the veg rack.\n\n\"You've no idea how hard it was to smuggle this lot past Jude,\" she commented. \"I had to tell her it was food for the weekend.\"\n\nShe put the bags on the table and retrieved two bottles of champagne, some candles and a piece of white fabric. She opened up the fabric to reveal a full-length cloak in white satin with gold thread highlights.\n\n\"Wow, this is fabulous. When did you get this?\" Lucy asked.\n\n\"Mel and I went into town during our lunch break. I don't how I'd have managed without her.\"\n\n\"You mean Mel knew about this all along!\"\n\n\"Well, bits. Even I didn't know that Jude was going to propose.\"\n\n\"I'll kill her!\"\n\n\"Please, Lucy, she promised not to tell. It's just that she wormed it out of me at work and then, when I needed to go shopping.... She said you'd be mad.\"\n\n\"Well, OK, if she promised.\" Lucy was only partially mollified but there were things to do and the Dommes were waiting. Kathy took the candles downstairs while Lucy, Beth and Karen all went upstairs to the bedroom to help Karen get out of her clothes and into the cloak. The cloak was quite straightforward; its long white folds reached almost to the ground and a simple gold chain at the throat held it together. Karen clasped her hands behind her back so that, as she moved, the cloak would swing open, framing and displaying her naked charms beneath. Lucy was both delighted for her friend and, truth be told, a little jealous. She might have to mither Mel for a similar garment. By the time Kathy returned, they had returned downstairs and were sorting out eight champagne glasses. Kathy quickly stripped off and then it was the time for the four of them to go downstairs to the playroom.\n\nWith Karen in front, Lucy and Beth as maids of honour and Kathy struggling slightly with the heavily laden tray, they went downstairs where, as Karen had planned, the candles gave the room a soft glow; just the atmosphere she had wanted. She went over and knelt in front of the thrones and Lucy and Beth reached down and removed the cloak.\n\nKaren looked up at Jude and their eyes met. They shared a smile, this was right, this was proper; the sub knelt before her Domme, a naked supplicant, her body, her soul, her heart, her gift to the woman she loved. There was just one more piece of the jigsaw to put into place.\n\n\"Mistress Jude, Karen began, \"today you asked me to be your wife and I accepted with all my heart. I am proud and honoured to wear your ring showing all the world that we will soon be married and I am yours and only yours from this day on.\n\n\"But, whilst the ring is for the world, this,\" Karen brought her hands out from behind her back and held out the necklace, the one that Jude had given her, \"this I wear for you and you alone. I am your submissive, yours and only yours and I will not be complete unless you are my Mistress, you and you alone. Please, my darling, my love, my Mistress, my Jude, take me and make me yours.\"\n\nKaren lifted up her hands, offering up the necklace, and then bowed her head. The room was silent, all of them lost in the moment. Jude reached down and took the necklace and just held it for a moment before placing it around Karen's neck and locking it tight. Then she put her hands either side of Karen's head, lifted it up and kissed her long and hard.\n\n\"Karen, my darling Karen,\" she replied, once the kiss was over, \"now that I've found you how could I possibly want another? You are mine as I am yours. You honour me by wearing my necklace and I promise from the bottom of my heart to do all I can to honour you in return.\"\n\nAnd then, words would never be enough. They looked at each other and just knew that, for evermore, they would be Judeandkaren, or possibly, Karenandjude. They both knew the others were there, that they were watching but this was their moment and they only knew each other. Jude reached out, took Karen's hand, and guided her up, onto her lap. Their kiss lingered on and on until, well, if it went any further then it needed to continue in private. Slightly embarrassed they broke apart and looked at the smiling faces all around them.\n\n\"I think this calls for some champagne,\" Jude announced. \n\nEpilogue - six months later.\n\n\"Well, you must be pleased with yourself, winning the award for best team performance,\" Mel said as they packed up after a full day's work.\n\n\"It's a team award,\" Karen replied firmly. \"It's for all of us, we all won it, not just me.\"\n\n\"Yeah, well, of course, this lot,\" Mel waved her arm to indicate the desks around them, \"they were doing so well before you took over, weren't they?\"\n\n\"We just needed to find our direction.\"\n\n\"Nah, what we needed was a great big kick up the arse and that's what you gave us. I don't think any of us will forget that day. Quite a speech, even without you coming out.\"\n\n\"Well, it needed saying, for my sake as much as anyone else's. And talking of top performers, have you applied for that supervisor post yet? The closing date is pretty soon.\"\n\n\"I'm still not sure if I'm the right person.\"\n\n\"Well, I am. After all, we both know you're good at bossing people around.\" Karen gave Mel a friendly nudge and they both laughed. \"Please, Mel, promise me you'll apply.\"\n\n\"OK, maybe I will,\" Mel wasn't used to being the uncertain one. \"Changing the subject slightly, how are the wedding plans going? You've only got a couple of more weeks before the big day.\"\n\n\"I never knew that so much needed organising. If it weren't for your Lucy....\"\n\n\"My Lucy is like a pig in shit and loving every second of it,\" Mel laughed. \"On the other hand, if I see another bloody magazine all about wedding dresses I'll explode. What about,\" Mel knew she was getting onto sticky ground here, \"what about your family? Have they made up their minds yet?\"\n\n\"George is still a bit dubious, but Jess, she's decided that it's modern and trendy to go to your gay sister's same-sex wedding and, apparently, she's boasting about it to all her neighbours. Wonders will never cease.\"\n\n\"I am pleased, really I am. It doesn't feel like a proper wedding unless your family are there. When Lucy and I got married, it really helped heal the wounds; dad never thought he'd finally get to dance with his daughter at her wedding, even if I was wearing a suit at the time. Nowadays mum keeps mithering us about grandkids and, if Lucy has her way, well, lets just say we're looking at options.\" \n\n\"So, will we be seeing the two of you tonight?\"\n\n\"Wouldn't miss it for the world. In fact, as Lucy has been driving me so scatty with wedding this and wedding that, I think a little short, sharp spanking might be in order. And, given that you just encourage her, I might ask Jude if she can't do the same for you.\"\n\n\"What, together, over the same horse, sort of thing,\" Karen asked tentatively but with a twinkle in her eye. It was clear that she was far from averse to this suggestion.\n\n\"I'm sure we can work something out and stay within your limits,\" Mel laughed. \"Just because you're a fussy cow....\"\n\n\"Mel, please....\"\n\n\"OK, OK, I'm just winding you up. Actually you've changed Fridays, do you know that?\"\n\n\"How do you mean?\"\n\n\"You've made us all think about what we're doing and who we're doing it with. Before you came along it was all about the sex. Now... now it's more of a couples thing.\"\n\n\"I'm sorry, I didn't mean to ruin things, it's just... well, you know how I feel.\"\n\n\"But that's it, we all felt that way to some extent, it's just that nobody had the guts to say anything. You didn't ruin things, you just changed them, changed them for the better. I like it that Lucy is mine and mine alone.\" Mel glanced up at the clock. \"Oh my god, is that the time! Gotta go, see you later, bye!\"\n\nAnd with that Mel dashed off. As Karen tidied away the last few items from her desk she felt content, happy in the knowledge that her partner, her Jude was waiting outside and that, come the evening, she would be spending time with her new-found friends, those who had become so special to her. And, if she were in for a smacked bottom later, well, that was all part of it as well. She was blissfully, gloriously happy as only a bride-to-be can be."
    ],
    "authorname": "MissLisaJones",
    "tags": [
        "lesbian d/s",
        "lesbian drama"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/limits-ch-17"
}