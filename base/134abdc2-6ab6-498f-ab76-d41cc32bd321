{
    "title": "My Little Ventrue Pt. 08 Ch. 04",
    "pages": [
        "~~Natasha~~\n\nThey went back to her apartment. With the hunters defeated, and the few remaining still in the Prince's custody, there wasn't any reason she couldn't sleep in her apartment anymore. Maybe Samantha would get her own place too? Daniel slept in the Elysium Tower, somewhere secret, but that didn't mean Samantha had to as well.\n\nShe sat on the couch between her boyfriends, and looked between them as they obviously prepared a tale.\n\n\"It was ten years ago,\" Art said, smiling down at her, half turned to face her. \"Matthew and I had become great friends by this point. We hung out all the time, and we went on patrols together. Eventually, we did our hunting together, when we realized how much we complimented each other.\"\n\n\"We were hunting a spirit,\" Matthew continued. \"It'd possessed someone.\"\n\n\"H-How do you free someone from a possession?\" she said.\n\n\"You have to learn about the spirit,\" Art said, \"and figure out how to manipulate it with a bane or ban. If a fire spirit, desperate to turn the possessed into an arsonist, got soaked in water for example, some fire spirits would have to vacate the body.\"\n\n\"Oooh. A puzzle.\" She did oh so enjoy puzzles.\n\n\"This one,\" Matt said, \"was a spirit of... a sort of revenge, I guess. It was kinda hard to pin down. It'd possessed a girl who'd just found out her boyfriend cheated on her.\"\n\nArt laughed and looked down. \"And, well, when we got rid of the spirit, it left an impression on the girl. She somehow got it into her head that she could hurt her ex by sleeping with the two of us.\"\n\nMatt shook his head. \"She didn't say that though. Instead, she invited Art and me to a thank you party sorta thing. She got drunk, and got us drunk.\"\n\n\"No easy feat,\" Art said, \"but she really wanted a party.\"\n\n\"And she, uh, kinda jumped us. Situationally speaking, I mean.\"\n\n\"She was a tall woman, and apparently pretty, uh, comfortable with her sexuality. She went to take a shower, and was in there for a pretty long time. It was especially weird when we heard the shower running, and ten minutes later, still nothing. Matthew and I were thinking maybe we should leave, when she told us to come in.\"\n\n\"Into the bathroom?\" Natasha said.\n\nMatthew nodded, scratching the scruff of his cheeks. \"Yeah. Like, the both of us.\"\n\n\"W-What'd you do?\"\n\nArt laughed and shrugged. \"Details are a little fuzzy. We were pretty drunk, woozy, and not really thinking straight, or thinking at all. So Matt and I kinda just... went with it.\"\n\n\"Yeah, we did. I blame the alcohol.\"\n\nTash scrunched up her nose and looked up at the big guy on her left. \"I'm sure there was m-more than alcohol in your veins.\"\n\nHe scratched the scruff of his neck a little, looking away, embarrassed. \"Er, I mean... well, we are werewolves. We're kinda always--\"\n\n\"Ready to fight,\" Art said, grinning down at her as he did. Yeah, right. Fight, in this case, being anything strenuous involving biological functions. Should be changed to fight or flight or fuck response.\n\n\"W-What happened next?\"\n\n\"She was naked, grinning at us, and waving a small bottle of lubricant side to side.\"\n\nThe exact opposite situation Natasha had been in. They'd had to bully her, to get her to accept. A risky move, cause she could have reacted badly, and the situation would have ended horribly. But they'd been tipped off by Jessy. The stranger in their story, on the other hand, was the aggressive one, and guys were, well, guys.\n\n\"And you j-just went with it?\"\n\nMatthew shrugged, with more hand waving this time. \"We were drunk! And a naked girl was beckoning! She wanted to repay us for helping her.\"\n\n\"So,\" Art continued, \"we got naked. Apparently she'd done this kinda thing before, cause she took lead, and, yeah, that was Matt and I's first experience with that sorta thing.\"\n\n\"N-No, um... problems?\" She held out her hands in front of her, and mimed smooshing orbs together. \"Cause, you know, things can touch, and it can get awkward.\"\n\nThe two men laughed, hearty sounds that made her smile.\n\n\"We were pretty drunk,\" Matt repeated. \"A lot of that sorta stuff didn't really register. The next time this kinda situation came up, we weren't drunk, but we'd talked about it already, admitted we'd had a lot of fun being with a girl like that, and wouldn't mind doing it again.\"\n\nNatasha laughed. \"I'd say it's strange for t-two guys to agree to something like that. But, it's pretty normal in Dolareido.\"\n\nThey grinned at her. Tinglies went through her belly, and she quivered at the rising tension in the air. If she pushed them just a little more, they'd pounce, pin her down, and do things to her. She kinda wanted to do that.\n\n\"You're the first,\" Art added, \"that we've ever dated like this though. Like, really... committed to a relationship with.\"\n\nShe suppressed the need to gasp, and managed a peek up at the man beside her. \"Y-Yeah?\"\n\n\"Yeah,\" Matt said, and he set a hand on her legs. Usually that'd be a precursor to much touching, no matter how much she squirmed to get away. The look in his face didn't scream sex though. They were being serious.\n\nArt sighed and shook his head. \"Actually, we wanted to talk to you about something else, tonight.\"\n\n\"Oh?\"\n\nHe nodded. \"Yeah. The pack has found more clues pointing to Maria. Red wraiths have been sneaky across the Gauntlet, and we're sure they've been talking to her. Far as we can tell, they work for Black Blood, or it's got a firm grip on them and they have no choice. Either way, Avery's convinced she's up to something.\"\n\nThis again. Frustrating beyond belief, that the werewolves were the only ones capable of acquiring this sort of evidence. Except, that wasn't true. The Prince got glimpses of things on the other side of the Gauntlet, and that necklace the Prince had acquired some time ago had drawn a spirit that also pointed toward Maria. Combined, it was hard to ignore.\n\n\"I could t-talk to her about it,\" she said.\n\nArt shook his head again. \"Before we were sure, I'd say do it. But now we know she's in deep. No idea if it's linked to the tears we've been finding, but she's into something dark if she has to go through those wraiths. If you ask her now, she might wise up, change her tactics or something.\"\n\n\"I suppose it m-makes sense. If Maria suspected anyone the Uratha might send, to ask questions about what she's doing, it'd be m-me.\" Since she was so close to the Uratha, compared to anyone else. \"I'll ask D-Damien. He's already keeping an eye on her, and says he hasn't seen anything suspicious. B-But, I can ask him to look harder.\" He was Mekhet, after all. It wouldn't take much prodding to get him interested in searching for more. The curse of all Mekhet, to hunger for secrets to learn.\n\nThe problem was, Damien seemed to care for Maria, to some extent. Maybe he felt guilty for Lucas, and was doing his best to help Maria in his absence? Not very Kindred of him, to behave like that.\n\n\"I'll be taking a trip into the Hisil tomorrow,\" Art said. \"I want you to tag along.\"\n\n\"M-Me? Why?\"\n\n\"Because you're sneaky. And you provide some objectivity; the pack sucks at that. And because I'd like to hang out with my girlfriend for a while.\"\n\nShe beamed, but washed the expression away quickly. \"Ok, b-but, if I see an opportunity to learn something, I'll take it.\"\n\nHe grinned. \"Avery won't like that.\"\n\nShe returned the grin. No way it had that smoldering look Art's did, but damn it, she could do a smart aleck grin.\n\n\"That's the p-p-price! I mean, if you want my help sneaking around, then I'm going t-to take the opportunity to learn about things. I w-want to see some of the tears.\"\n\nArt winced, but nodded. \"Sure.\"\n\n\"W-What about Matt?\"\n\n\"I can't sneak for shit.\" Laughing, he shrugged. \"If you two can cover for me, sure. I--\"\n\nThe phone started to ring. Natasha's, and the ring announced it was the Prince calling. She pulled it out, and held up a finger for her boyfriends.\n\n\"Yes, my Prince?\" she answered.\n\n\"Natasha. Have you seen Jack?\" First names and no additions meant she was serious.\n\n\"Jack? N-No, Prince. Is he missing?\"\n\nThe quiet growl through the phone was like a knife's edge against her skin.\n\n\"Yes, he is. Again.\"\n\nOh damn it.\n\n\"Um, d-dawn is nearly here. And tomorrow I was going t-to see about going into the Hisil with Avery's pack, to learn about... possible... things.\" The word 'things' was enough to have the Prince thinking about it for a moment.\n\nAnother phone rang, and Art pulled it out to check a message. His eyes went wide.\n\n\"Then,\" the Prince continued, \"I have no choice but to ask for that man's help.\"\n\n\"D-Damien?\"\n\n\"Damien.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nS\u00e1ndor's bleeding slowed, and stopped. Jack did his best to ignore the smell of blood, and so did Clara. For her, it must have been pulling at an instinct, some animal anxiety or need to get aggressive. For him, it was just making him hungry. Over two years ago, when he was just a freshly embraced fledgling, being hungry was terrifying. Feeding on people was terrifying, especially after his Beast had flipped out that first night and killed someone.\n\nThese days, he fed regularly, both on Antoinette's ghouls, but also random people he found on the street, in dark alleys, or occasional trips to Bloodlust and other night lounges and clubs. The last thing he wanted was to get hungry, to give his Beast any excuse to run rampant. That meant feeding, often, keeping it sated and quiet.\n\nHe'd come into confidence quickly, to be able to feed so readily; except with women, of course. Something about talking to a woman always threw him off, made him hesitate, doubt himself, all those things women generally found unappealing. The Prince found it endearing. He'd gotten a lot better at it, especially when it came to hunting, but still.\n\nHe licked his lips as the smell of blood hit his nose again. S\u00e1ndor's, and Clara's, where it soaked her jeans. The smell was different. Each smelled inhuman in their own way, Clara's like some kind of rich meal, while S\u00e1ndor's smelled almost like alcohol. Subtle smells a human nose wouldn't pick up on, but to a Kindred, blood was life. Given another few hundred years, maybe he'd be able to smell the difference between human blood with different diets. Maybe he'd be one of those elders who insisted on feeding on kine of specific age groups, sexes, blood types, or ethnicities.\n\n\"He's healing,\" Clara said.\n\nJack nodded as he looked over at the man still hanging off Clara's shoulders. \"Yeah, but he's lost a lot of blood. And he pushed himself tackling the azlu.\" S\u00e1ndor's head drooped, the man trapped somewhere between falling asleep and groaning in pain. \"I... don't think he's going to be able to help us for a little while.\"\n\n\"Then I'll climb the wall.\"\n\n\"I mean, sure, if you can.\" He looked up at the huge, smooth rock wall, wincing. \"I saw how much the azlu hit the ground with its claws and feet. They didn't leave much impact. No grooves anywhere.\"\n\nShe snorted, set S\u00e1ndor down against the sloping wall, and let out a quiet growl in her throat. Quiet turned into a heavy, bassy rumble as she transformed, becoming an eight-foot beast of muscle. Leaner than the male werewolves, he couldn't help but notice how her furry form didn't hide her feminine physique. Short fur meant he could still see the shape of hips, waist, legs, and even the hint of bust, and more impressive, the place where legs and back met. Very, uh, shapely, even with a wolf tail stick out over it.\n\nClara noticed him looking, and she managed the wolf equivalent of a quiet chuckle.\n\n\"Brianna has fucked, like this.\" She gestured to herself. \"Says body changes, for sex. Says it was fun, but... hard, to control herself.\" Clara's words came out harsh, half bark, but he could hear the playfulness in them.\n\nJack nodded, gulping. \"Uh, very dangerous, I imagine.\" He was not a furry. He was not a furry. He was not a furry. He was not a furry.\n\nShe grinned, as much as a snout can grin, turned to the wall of rock, and slammed both of her hands against it at the same time, claws out, palms forward. They pierced the rock, a whole quarter inch, and the moment she tried to pull her weight upward, her claws came right back out. She tried again, harder, and for a split second, Jack was sure he could see a small, red glow on her claws.\n\nAvery had done something with her claws, when she'd fought the azlu. She'd set them on fire somehow, but not really on fire. Maybe she could pierce the rock they needed to climb to reach the tear above, or maybe those fire claws were better for killing azlu, but either way, Clara didn't seem capable of it, or any other trick that might let her climb the rock.\n\nApparently, the Gauru side of her didn't like that. She roared, loudly, and Jack flinched back as the unnatural power of it crashed into him. She slammed her claws into the wall again, but got no further, despite the hard crack sound. Movement drew their eyes, and they both looked up to see through the fog, way way way up, several scurrying sets of spider legs run off into the darkness. The azlu spiders were still around, hiding in the mist, and staying out of reach. They hated Clara, but they were also afraid of her. And now, they were afraid of him.\n\nBut he couldn't take advantage of that fear if he couldn't force an engagement. And besides, better to not, and just escape.\n\nClara slammed her claws again and again into the rock, but she got nowhere. \"Fuck!\" she half screamed, half barked.\n\nS\u00e1ndor coughed a few times, before he looked up at the two of them. \"Get me up. I'll fly us up there.\"\n\n\"You can't even stand,\" Jack said.\n\n\"Then I'll burrow a tunnel home, and you can follow.\"\n\n\"I get the impression you'd have done that already if you could.\" Sighing, Jack came over to the man and squatted in front of him. \"Opening portals, tunneling, opening your lair so it overlaps with other worlds, all of that must take effort. Right now, you're useless. Which means we got two options. We wait until you're feeling well enough to get us out of here, or wait until someone figures out what happened, and comes looking for us.\" The first option looked rough, cause it could take S\u00e1ndor days to recover, or more, depending on how well his human body could heal. The second option was rougher. S\u00e1ndor hadn't opened his lair to the other Begotten, and hadn't really been in contact with them. They had no way of knowing where he was.\n\n\"So... what's the plan?\" Clara said. She'd already transformed back into her human form.\n\n\"Fuck me, I don't know.\" He sat down against the wall edge beside S\u00e1ndor, and leaned his head back against the stone. \"I can feel sunrise; it'll be here any minute. I'll try and stay awake as long as I can, but...\"\n\n\"But if we all fall asleep, we'll be killed in our sleep.\" Sighing, she sat down next to him, taking a breather while still scanning left and right. \"Guess I'll be pulling an all... dayer.\"\n\nThey laughed, and let the sound die away as the dangers of the situation sank in. A glance to the Begotten showed he was already asleep, and not in good shape at all. S\u00e1ndor had seemed confident he would heal, but guys like him had a habit of lying about that sort of shit, right into a grave. But, him being asleep did give Jack and Clara a moment to talk.\n\n\"Clara,\" he said at last, \"I... I'm thankful, you know.\"\n\n\"Thankful?\"\n\n\"For how you don't seem to let the curse bother you, after everything you've seen.\"\n\nShe watched him for a while, before she looked down, pulled up her knees, and hooked her elbows on them. \"It bothers me.\"\n\nHe winced. \"Oh.\"\n\n\"It bothers everyone, Jack.\"\n\n\"Yeah, I... I know. I meant, you don't seem to let it bother you enough to keep you away.\"\n\nShe looked at him, hesitating, a hint of pain in her eyes. \"Yeah, well, someone needs to be there for you. Not like any elder ever risks their own neck on missions like this.\"\n\nHe couldn't hold her gaze for long. Her eyes were sad. It was the sort of look he'd seen in movies, when someone watched a friend go off to war. Why did she care about him so much?\n\n\"It's not like my friends aren't concerned too, Clara. Damien, Antoinette, they're all looking for ways to remove the curse. Elaine might be able to help with that, too.\" Assuming whatever devious scheme was she was up to allowed for that.\n\n\"And Beatrice?\"\n\n\"Triss? She... she...\" He shivered as he looked down. \"She needed my help, and I was glad to give it.\"\n\n\"And when Damien needs your help, and only the curse can provide it, what happens? Or the Prince? Or the others?\"\n\n\"I don't know. It's a bridge I'll cross when I get to it.\"\n\n\"Come on, you know what's going to happen, Jack.\"\n\nHe couldn't keep a bit of venom out of his voice. \"Educate me.\"\n\n\"Things will happen that the power of the curse can help with, and you'll help the people who need it. You'll help because that's you. But...\"\n\n\"But?\"\n\n\"But, you've got a self destructive impulse, Jack.\"\n\nHe kept his eyes down. Easier that way, to have this painful conversation without any eye contact.\n\n\"I'm not self destructive.\"\n\n\"Come on, that's exactly what you are.\"\n\n\"I--\"\n\n\"You wouldn't hesitate to put yourself in front of a train if it meant you could do something you felt needed doing. Problem is, you jump to that conclusion pretty damn fast, you know?\"\n\nHe tightened his hands into his fists, but still kept his eyes down. \"I make quick decisions because it's the only way things can happen. He who hesitates is lost.\"\n\n\"Against the first azlu, you threw yourself down at it, a monster clearly stronger than you.\"\n\n\"If I didn't, it would have killed you, and escaped.\"\n\n\"Maybe. How about when you escaped Jeremiah and Angela, that first night when they captured you? You cut off your own hands.\"\n\n\"If I didn't, I would have been trapped.\"\n\n\"Maybe. What about that rescue attempt you made for me, Jessy, and Eric? You came in guns blazing. And then there was our assault on their home turf. You went in first, on intel you got that very night, and took them all on yourself.\"\n\n\"I--\"\n\n\"Jack.\" Her voice was heavy and sad, not loud, but the impact was enough to shut him up. \"The point I'm trying to make, is... I've dealt with vampires before. They take advantage of other people, without even thinking about it. That's just what vampires do. It's who they are. But you're different. You put yourself in positions where you'll take the brunt of the pain, and... and I know vampires are going to take advantage of that.\"\n\nHe licked his fangs slowly, before he ground his teeth until his jaw threatened to break. The anger hit him like a ton of bricks, and it wasn't the anger the curse used to slip into him, before he'd freed it. It was the anger of an indignant child, not liking what it was being told. It was an anger he was familiar with from his whole life, from someone saying something he disagreed with, while he internally realized they were right, and he was wrong.\n\nBeing wrong sucked.\n\n\"But... you won't do that,\" he said.\n\n\"Do what?\"\n\n\"Take advantage of me, of the curse.\"\n\nShe smiled at him in the corner of his eye. \"I don't know. I don't think so?\"\n\n\"You wouldn't.\" It wasn't in her, that much was obvious. The werewolves didn't think like that, think in terms of the self first. They were so far from the Kindred mindset, it seemed alien to him.\n\n\"You said the Prince and her friend are looking for ways to remove the curse?\"\n\n\"Yes. Elaine is, in particular. She's my great grandsire.\"\n\nClara's eyes shot open. \"Oh...\" He gave her a minute to process that.\n\n\"She had the curse, but never unleashed it, like I did. At some point, centuries ago, she removed it. Now she's willing to help me.\"\n\n\"Does she know how she did it?\"\n\n\"She has some notes, and some hazy memories.\" He shrugged, tension fading from his shoulders. \"But, I'm not an idiot. Like you said, Kindred take advantage of anything they can, including each other. She's up to something, and...\"",
        "Clara laughed. \"But you slept with her anyway?\"\n\nHe sat up straight and winced. Awkward. \"Uh, yeah. But, it's not what you think. With Antoinette, the sex isn't the intimate part. And even mid...you know, she never truly lets her guard down.\"\n\nLaughing, Clara looked up and stared off into nothing. \"I suppose I can understand that, considering what I was doing.\"\n\n\"You mean with Jessy's ghouls?\"\n\nHer turn to wince. \"Yeah. You... you didn't see the pictures, did you?\"\n\nHe raised a brow. \"Pictures?\"\n\n\"Oh thank god. Those ghouls took some pictures, probably because that slut Jessy wanted to see. I was drunk, and I... guess I didn't really care. When in Rome, right?\"\n\n\"Ha, yeah, when in Rome.\" He gave her a small punch in the knee. \"So, I've slept with four women at once, and you've slept with four dudes at once?\"\n\nShe blushed, horribly at that, face going bright through her tan skin. \"Apparently.\"\n\n\"Sounds hot.\"\n\nShe choked on a laugh. \"I mean, yeah, it was. Jessy, uh, definitely trained her ghouls.\"\n\n\"Sex is a sport, in Dolareido. But intimacy, romance, that stuff? It's so damn rare.\"\n\n\"And you have that with Antoinette.\"\n\nAfter a long, heavy sigh, he looked at her and forced himself to make eye contact with her. \"Yes, I do. It's a strange relationship, no doubt about that. We've talked about it, and... it's something we're both aware of, and we'll both work on it.\"\n\n\"The sex?\"\n\nHe choked on a laugh. \"The relationship.\"\n\n\"I suppose she's mastered basically every aspect of sex, right?\"\n\n\"Yeap.\" No way around admitting that.\n\n\"Lot of women in Dolareido really seem to take the lead, sexually speaking.\"\n\n\"I guess? I mean, the guys do too.\" Julias did, definitely, but he didn't say it. \"It's just, people kinda notice it more when women do, cause it's not something that female kine normally do, you know? But, Kindred aren't kine. For vampires, it's a pretty even split on most behaviors, sexual aggression included.\" Far as he could tell, the Beast did not have gender proclivities. It didn't have a gender. It was a mass of shadow, claws, talons, beaks, fangs, fur, and feathers. How much of the human remained, when one became a vampire? A question for the Ordo, or the Circle, he supposed.\n\n\"Yeah, I guess. It was the same thing, in Tijuana. The vamps, girls included, were pretty damn aggressive about what they wanted. The sex was... everywhere, and it was pretty intense, from the sounds.\"\n\n\"But, that's not what binds me and Antoinette, if that's what you were thinking. Yeah, we have sex, and we enjoy it, but there's a lot more to us than that.\" He didn't want to have this conversation, but maybe it was good to have it. Painful, sure, but Clara was interested in him, and thought his current relationship wasn't a healthy one. Much as it sucked, it was probably a good idea to try and fix her impression.\n\n\"Do you joke around with her?\" she said.\n\nHe shook his head. \"Not really, not the way you're thinking, anyway.\" She was undoubtedly referencing how the two of them had joked around tonight, as seamlessly as two old friends who knew each other well. Hell, he could joke around with Clara more easily than Damien, or even Julias. Something about her was so damn enjoyable and fun.\n\nShe raised a brow at that. \"You don't?\"\n\n\"No, but that's not what makes us happy, you know? I mean sure, I enjoy laughing, and joking around, but to me, it's... it's not what I crave.\"\n\nThat confused her, and she tilted her head to the side as she watched him. \"Eh?\"\n\nHe laughed and shrugged. \"I'd sound pretty pretentious if I explained. But, uh... ever seen Frasier?\"\n\nShe laughed, and before he knew it, his laugh grew to match hers. No need to say it, they were both bringing up funny memories from the sitcom. Clara was old enough to have watched the show when it aired, and Jack found modern television mind numbing, stupid, and written specifically with ADD in mind. Naturally, he deferred to older shows.\n\n\"Well,\" he continued, \"you know how a lot of the humor was poking fun at those two for their elitist mindsets? Fancy wine, fancy decor, nitpicking details about opera, etcetera?\"\n\n\"Yeah?\"\n\n\"Well, those are the kinds of conversations Antoinette and I have. Not about wine or decor, but that is how we approach topics, things like science, music, movies. We obsess and nitpick over specifics and minutiae, and... it's fun for us. We can talk for hours about it, argue, debate, or indulge each other. It's really satisfying, and fulfilling. I... I know it's not what most people think of, when they think of a relationship, but it makes me happy.\"\n\n\"So, you're Niles?\"\n\n\"Aha, I mean, I guess?\" Niles's greatest weakness was women. Jack could relate.\n\n\"You know Niles ended up with Daphne, right?\"\n\nOh, right. Well, that example backfired pretty quick, and the look in her eyes said it all. Niles had been with a wretched, elitist woman before he fell for Daphne, and once he'd finally started a relationship with Daphne, he'd found his happiness.\n\nIt was painful, holding Clara's gaze, and they both looked down at the same time. Reality wasn't like a sitcom, and he was stupid for bringing it up.\n\n\"Jack,\" she said at last. \"I--\"\n\n\"Hello.\"\n\nJack and Clara jumped up, and Jack wasted no time drawing a dagger from within his suit. But, the new figure did not attack them. It just stood there, looking at them, occasionally tilting its head from side to side.\n\nA woman, and a ghost. Like Mary, she had hollow eyes, with a see-through body, and mist trickling out of her legs to mix into the gray fog that surrounded them. Her face was soft and her hair was long, going past her shoulders. Gray. From her clothing, Jack guessed she wasn't some crazy ancient ghost or anything; probably someone from the 90s, considering the t-shirt and jeans. But the jeans and t-shirt were faded, gray things, just like her hazy skin.\n\nOnly the strange, green light in her chest stuck out from the oppressively dreary grayness of it all. How the fuck had a glowing green light managed to sneak up on them? The ghost must have been able to turn that off or something.\n\n\"Hello,\" Jack said eventually. \"Um, I'm Jack. This is Clara, and S\u00e1ndor.\" Might as well be nice to the ghost, and do his best to not make enemies. He put his dagger away, and brushed his thumb against the silver knife hidden underneath his jacket. He doubted silver would work against a ghost, but he could be wrong.\n\n\"I'm Sabrina.\" The ghost hovered closer, and Jack and Clara both took a step back, only for the huge rock wall to greet them. If the ghost noticed their retreat, she didn't care. \"Why are you in the Great Below?\"\n\n\"Great Below?\" Clara said. \"Is that where we are?\"\n\n\"Yes, the Great Below.\" The ghost nodded, and gestured to the fog behind her, and distant, drifting green lights. \"You're alive. You shouldn't be here. You could get hurt.\"\n\nJack frowned. \"Hurt, by who?\"\n\n\"Us,\" Sabrina said, and again gestured behind her. No other ghosts were nearby, and the gray mist was thick, but that didn't stop Jack from seeing the hundreds, maybe even thousands of distant, drifting green lights move about. The green glow pierced the fog somehow, almost like a lighthouse, or maybe an angler fish \"Why are you here? Are... are you here because of the spiders?\"\n\nClara nodded. \"Yeah. They're called azlu. I--\" She stopped herself, and leaned over to Jack. \"How much should we tell her?\" she said, hand up to cover her mouth and his ear.\n\nJack turned, repeating the gesture. \"We're up shit creek without a paddle, and can't afford to piss anyone off. Tell her... most things.\"\n\nClara nodded again before looking back to the ghost. \"Sabrina, have you seen a giant spider... monster thing, running around?\"\n\nThe ghost woman shivered and hugged her chest. \"Yes! Very scary.\" Hints of a perfectly normal, human voice were underneath the raspy, harsh ghost voice, the remains of whoever this girl had been, someone named Sabrina. \"And it hurts us. We left it alone after that.\"\n\n\"We'll try and kill it if we can,\" Jack said. \"But... but...\" He blinked down at the ground, and then at the ghost Sabrina, then Clara, and then fell onto his ass. \"Oh shit. Shit shit. Not now. Not now...\"\n\n\"Jack! What the--\"\n\n\"It's alright! It's alright, just... it may not be sunrise here, but it is back on the... surface, I guess.\" It certainly felt like they were underground, in the three dimensional sense, and the alternate dimensions sense. Great Below sounded right. Normally, dawn knocked vampires out within seconds, but Jack tapped into his vitae, and forced it up through his body and into extremities. Keep him moving, keep him talking, just for a few moments. \"Clara, you--\"\n\n\"I'll play guard dog until you're awake, Jack. Don't worry, no one's getting close.\" She wriggled her fingers, like a cat unfurling their claws experimentally. \"Ghosts are made of ephemera. If I have to, I can defend you and S\u00e1ndor.\"\n\n\"Try... try and play nice, ok? Better to make friends than enemies, you know?\"\n\nShe laughed as she squatted down beside him. \"Jesus. Even after everything that's happened, you're still trying to play diplomat?\"\n\n\"Call it a habit, by this point.\" He looked at the Begotten beside him, then to Clara, then to the ghost. \"Sorry, suppose this is a strange way to learn I'm a vampire.\"\n\nHe watched the ghost, scanning for any unusual behavior as torpor dragged him down. No hostility, no movement, only a confused expression on her face. Well, hopefully she wouldn't kill him while he slept.\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Antoinette~~\n\nThe first thing she did once the sun disappeared beneath the horizon, and she awoke to a new night, was inform her sheriff of the situation. The second thing, was ask for an update from her student. Natasha confirmed Jack was not answering his phone. Apparently, neither was Clara, according to her lovers Matthew and Arturo.\n\nClara, missing. Jack, missing. A hint of worry ran through Antoinette's spine. Considering the conversation she had with Jack not long ago, about the nature of her relationship, the idea that her love and that woman were both together somewhere was a painful notion. But the fear passed quickly. Jack was an honest soul, and even if he struggled with some internal conflict, it would not drive him to commit a dishonest or treacherous act. He was simply incapable of crossing that line.\n\nHer phone rang, the sound announcing it was her sheriff. She answered.\n\n\"Jack?\"\n\n\"Not at his mansion. Auspex found a few hints that Clara was here, along with S\u00e1ndor.\"\n\nJack, with the werewolf and the monster. It was the boy's job to work with the Begotten and the Uratha, but such things were done through Avery and Azamel, not Clara and S\u00e1ndor.\n\n\"Can you follow their trail?\"\n\n\"No.\"\n\nGroaning, she got up from her chair and looked down at her city from her tower. A message came through on her phone. She checked it, and sighed. \"Michael has not seen him either. He does not need to report every day to the Invictus leader, but nevertheless.\"\n\n\"Talked to Damien yet?\"\n\nDespite her best attempts, she scowled. \"I suppose if it must be done, it must be done. How do you feel about the man, now that you have been training him?\" Yet another favor she did not entirely agree with. But, in the future, if she demanded a favor of Damien Burksen, he would hardly be in a position to say no. Silver lining.\n\n\"He's a lot more mentally stable than he has any right to be, considering what happened to him and Lucas. I see a lot of Jack in him. The calm, calculating part of Jack. The boy has probably helped Damien overcome a lot of his past.\"\n\n\"Yes, I imagine Jack has. He cannot help himself.\"\n\n\"And the nightmare monster seems to have sparked something else in Damien.\"\n\nAntoinette chuckled. Yes, Fiona's unending optimism and joviality would likely melt any heart, and Antoinette knew Damien's heart well, from when he had cut off one of her arms, and legs. There was much to be melted.\n\n\"If S\u00e1ndor and Clara are with him, then I am sure Jack is alive. But he is indisposed, and that is startling.\" The hunters were dead, after all. What could have captured or harmed Jack, the monster, and the werewolf? There were many possibilities, but they were all unlikely. And without an idea as to where the boy could be, what she needed to find him, was a hound. \"Return to your previous task, Daniel. I will speak with Lucas's childe.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Damien~~\n\nWithin several minutes of waking, Maria and Damien got to work. The joys of being Kindred, waking and sleeping came instantly, and this night, he'd stayed at Maria's. She'd wanted to get started early, and he didn't mind. Fiona had said she was busy with Athalia anyway.\n\n\"Good, good,\" Maria said. \"You are learning to relax your hands.\"\n\nHe nodded, and let his fingers drift along the keys, moving rapidly but never flexing his wrists or tightening his hands. It was important to allow the hands to move with the keys, to dance along them, or they'd trip and stumble.\n\nMonths of constant practice had allowed him to move onto some fairly interesting classical pieces, and he impressed himself with both his ability to learn them, but also his joy in playing such music. Classical music held a depth in both technical and emotional dimensions he had never considered in the past, but now, it was water he was happy to swim. This piece, Petite Suite by Claude Debussy, was charming and soothing, with a bounce in its step. A simple song, compared to the stuff Maria played, but a good stepping stone for Damien.\n\nIt was also played by two people. The ghost lady sat beside him in one of her typical, old fashioned white dresses, and she watched his fingers while playing on her half of the piano. Deep under the Grand Cathedral of Dolareido, the music filled her large den, as her deformed-but-pleasant ghoul drifted about, cleaning, lighting candles, and humming expertly to the melody.\n\nDamien smiled at her. The sight of her broken skin, and the hints of mist that dripped from her, didn't bother him anymore. And his presence didn't seem to bother her anymore, either. It was obvious that the introduction of him into her personal life as a student and bishop of Longinus had interfered with her routines; he spent a lot of time in her underground den. But after a time, she'd adapted, as had he.\n\nHe didn't try and teach her about the things that interested him; not that he had many, considering how limited his life had been. But the greater reason, was he knew better. Maria was ancient, and set in her ways. Their relationship worked far better if he simply let her teach him what she was willing to teach, and maybe occasionally ask her to teach him a bit more, but never the other way around. Maybe some day in the future, he'd have something to teach her, but for now, their relationship was of teacher and student. And, because they were the only two in their covenant in Dolareido, leader and follower.\n\nA phone ring interrupted their song.\n\n\"Go, answer it,\" she said.\n\nHe nodded, fetched the phone, and froze. \"Uh... it's, the Prince.\" Everyone knew the Prince's number, the one she used when making an official call. The fact this was coming to him, and not to Maria, was very, very weird.\n\nMaria turned on the piano bench, and raised a brow as she watched him. \"You best answer it then.\"\n\nHe gulped, and did. \"Hello, my Prince.\"\n\n\"Damien. Have you heard from Jack?\"\n\nDamien? She called him Damien?\n\n\"Jack? No, I haven't. Last I knew, he was going to talk with S\u00e1ndor, about the situation with Azamel. That was yesterday.\"\n\n\"I see. Well, the boy is missing, as is Clara, and likely S\u00e1ndor.\"\n\nHe was very tempted to say 'Jack's missing, again?' in an annoyed drawl. He did not.\n\n\"Clara as well?\"\n\n\"Yes. You are to make contact with Avery, and request her assistance.\"\n\nHe froze. \"The Uratha?\"\n\n\"Yes. Normally, Jack would go, as you can imagine. But tonight, it would appear I am requesting that you go in his stead.\" From the tone of her voice, the request was very much an order. \"Natasha is otherwise preoccupied.\"\n\n\"I see.\" He put his hand over the receiver. \"Jack's missing. The Prince wants me to look for him, and to ask Avery to help.\" The ghost lady frowned at his explanation, but after half a second's consideration, nodded. \"I will leave at once.\"\n\n\"No need. Jack informs me the Uratha have finally, thank the stars, acquired smartphones. I have her number, for emergency purposes only mind you, such as now.\" She gave him the number.\n\nHe was going to smack Jack once he found him. The city had seen enough damn excitement, since the last time Jack had randomly disappeared.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Eric~~\n\nMultiple layers of blackout curtains and closed windows prevented any light from getting into his apartment, including the red of a setting sun, but he could still sense dusk approaching. Despite that, the jolt of Jessy's body, sitting up with a startle, had Eric sitting up with a jolt as well.\n\n\"Ah, fuck, sorry,\" she said. \"Still happens sometimes.\"\n\nShrugging, he leaned in toward her and set a kiss on her bare shoulder. \"You never wake up gently anymore?\"\n\n\"Nah. Kindred wake up like someone nearby has shot a gun. Sometimes we handle the jolt well, sometimes we don't, but it's never slow or gentle.\" Nodding with her explanation, she turned to face him, grinned, and threw herself at him. \"Gimme!\"\n\nHe let her flatten him to his big, hilariously nice bed, and Kat let out a meow in greeting. Apparently Kat's meow was more inviting than Eric, because Jessy reached out, scooped up the cat, and cuddled her over her shoulder. The purring was audible.\n\n\"Your cat is totally brain damaged.\"\n\n\"Yeap.\"\n\n\"I love her.\"\n\n\"Everyone does.\"\n\n\"Ha, she's such a cuddle slut.\" Jessy laughed and rolled onto her back. She held Kat up and out at arm's length, smiled up at the adorable dumbass, and lowered the cat back down onto her bare chest. Kat didn't care about boobs. Kat just wanted cuddles.\n\nEric rolled over to her, pressed his chest into her right shoulder, and pet Kat the cat, gently scratching under her chin. With Jessy's right arm holding the cat, they both had free access to pet the hell out of the pampered queen. She purred like a lawn mower.\n\n\"I feel bad, about Azamel,\" he said.\n\n\"What? Why?\"\n\n\"She wanted my help, remember? Before things went crazy, she was hoping to hire me. Said I couldn't trust the vamps--\"\n\n\"Which you can't.\"\n\n\"Which, I can't. Said I could trust her, sorta, because I was an odd one out, not a part of the werewolf pack, and not a vampire.\"\n\n\"All very true things.\" Jessy flashed him a hint of a grin before she buried her head into Kat's neck, hiding half her face in the dumb cat's fur.\n\n\"And now she's fucked, dying.\"\n\n\"Yeah well, from what Jack told us, it was her past catching up with her. She's a nightmare monster, you know? Literally survives on scaring people.\"\n\nHe shrugged. \"Not like she asked to be that.\"\n\n\"No, but, it's still reality. I can't blame a predator for being a predator, but that doesn't mean me, or anyone else, is just going to lie down and let them eat me. And they shouldn't feel bad if a predator gets fucked by the prey, either. Circle of life.\"\n\nThat was an oddly wise view of it, and he raised a brow as he watched her snuggle and spoil his already spoiled and slightly fat cat. \"And vampire hunters?\"\n\n\"Same thing. There are vampires, so there are going to be vampire hunters. It sucks, but no way should someone feel guilty for not helping me deal with that problem. It's my problem.\" After hugging Kat with both her arms for a few moments, she lifted the cat again up over her head, and set her on the head corner of the bed, before turning to look at Eric. \"So we try to not kill anyone, to minimize that problem. Azamel's done the same. Considering how old she is, she's done a good job. Nothing to feel guilty about.\"",
        "\"Yeah, you're right. But still, I can't help but think about what-ifs.\" Athalia and Fiona did come and join the rescue effort, when Eric had been attacked by S\u00e1ndor. He owed them, in a strange way.\n\n\"Add it to your list of good guy things to do.\"\n\n\"Good guy?\"\n\n\"Good guy.\" Nodding, she leaned in to him, kissed him, and pushed his shoulder until he was on his back again. \"I'm hungry. Gimme.\" Like a cat, a far more aggressive and prowly cat than Kat would ever be, Jessy slid the blankets down to their knees, then climbed up onto his pelvis, and sat down in all her naked glory.\n\nHe tilted his head up at her, one eyebrow raised. \"You 'ate' yesterday.\" He airquoted ate; seemed to be the 'in thing' to do these days.\n\n\"Yeah but, I'm feeling peckish. And having you around all the time is like, any woman hanging around chocolate. Can't help ourselves.\"\n\nHe nodded. Even Sheryl had been unable to resist chocolate if they had any in the place.\n\n\"I am pretty delicious.\"\n\nLaughing, she nodded, and slid down his legs. Soon she was on her belly, elbows between his thighs, and she grinned up at him as she placed a kiss against the underside of his soft shaft. Not soft for long. The mischievous glee in her eyes was enough to have him hard in seconds as the wolf inside reacted.\n\n\"I'll trade. Blowjob for blood.\"\n\n\"Sounds an awful lot like I'm your sugar daddy, if I'm paying you for sexual services with blood.\" He forced himself up onto his elbows, and watched the blonde woman set another kiss on his length, and another, lips working up toward the engorging tip.\n\n\"But, I give you real money for your services. I'm your sugar momma.\"\n\n\"Sounds like a paradox.\"\n\nShe laughed, shrugged, grabbed his cock with one of her hands, and started to stroke its base as she set its body along her cheek and up to her forehead, measuring her face against its length and girth. \"Almost like we're a couple, who just like giving each other stuff.\"\n\n\"Crazy.\"\n\nNodding, she wrapped her lips around the head of his cock, and started to bathe it in suckling kisses and massaging licks. She'd started Blushing Life, so the sensitive skin of his glans was treated to the wet warmth of her mouth. And it was clear she was in one of her moods, her playful moods, her almost cat-like moods. For the moment, he was her toy. He was perfectly okay with that.\n\nShe wasted no time, and god damn, she was skilled. Within minutes, he reached down, and ran his fingers through her hair as he felt the warm gush of his cum flood his length. Jessy's playful gaze melted into something soft and beautiful, as his fingers slid along her scalp and through her hair. She smiled at him and hummed happily, as his cum poured into her mouth, each wave sending sparks of bliss down his cock and down between his legs.\n\n\"Three minutes, bitch,\" she said, doing her best to not spill the mouthful she had. She jumped off the bed, disappeared into the bathroom, spat, and returned with a hop in her step. Still Blushing Life meant the fit woman's nipples stood out on her large breasts, and he stared, hypnotized by how her tits bounced with her skipping. And, of course, by how her large ass rippled. God damn. \"I've known college students that last longer than you.\"\n\nRolling his eyes, he sat up, and motioned for her to come closer. She did. They hugged. She sank her fangs into his neck, and he shivered as the unnatural power of the Kiss sent jolts of relaxing pleasure through his body. It was almost like an orgasm, just the reverse, with flowing waves of exhaustion happening before the pleasure did. But the wolf spirit in him was strong, and it didn't let the Kiss knock him out. And Jessy only took a little blood, this time.\n\n\"Ah fuck, now I'm horny too.\"\n\n\"Wh--hey!\"\n\nShe pushed him back onto the bed again, straddled him, and before he knew it, they were having sex.\n\n\"Come on, you're good for it, right?\" She pointed down at where he was still hard, and was indeed penetrating her. She was wet, hot, and so very damn tight.\n\n\"Just, a little shocked by the drive-by fucking.\"\n\n\"Well, I--\" The phone on the nearby nightstand rang. Kat, half asleep and still on the head corner of the bed, hadn't reacted to their movements at all. The ringing, however, managed to pull her head up enough to look at the smartphone nearby, and earn an annoyed meow from her, before the spoiled queen went back to her slumber.\n\nJessy grabbed the phone and handed it to him. \"Answer it.\"\n\n\"Uh, we're--\"\n\n\"How often are your phone calls social calls?\"\n\n\"... basically never.\"\n\n\"Exactly. It's probably important, so answer it.\" Nodding, she leaned down into him, spread her knees, and ground her pelvis down toward his to swallow his length to the base. With her knees spread out and on the blankets, she had the leverage to really grind her body left and right, and she did. Her hands slid around his back, and she pressed her breasts into his chest as she hugged him. Her lips found his neck again, but she didn't Kiss, only kissed.\n\nHe gulped, and answered the phone. \"Hello?\"\n\n\"Eric, it's Damien.\"\n\n\"Damien? I--\" He forced down the rising need to groan, as Jessy clenched on him tight. \"Um, hey, what're you--\"\n\nJessy snatched the phone out of his hand. \"Damien? Dude, what's up?\" She leaned back from him, hooked the back of his neck with her free hand, and ground back and forth at higher speeds. He stared, awestruck by the way her body rolled like a wave, how her abs flexed and unflexed, and how her huge breasts jiggled with each motion.\n\nSomething was in her hand. Phone? Phone! Right, she was on the phone. Damn easy to forget, looking at what he was looking at.\n\n\"He's missing again, are you fucking serious? Clara too? Ugh, fucking typical. City's finally not trying to kill us, and those two somehow go missing.\" Despite being in the middle of sex, and fast, almost rough sex at that, her voice didn't change. Vamps didn't need to breathe, so it wasn't like physical exertion would affect her air. But that didn't mean she could just ignore pleasure easily. And she was feeling pleasure, considering the warm wetness soaking him.\n\n\"Not sure what that has to do with Eric... Oh, I getcha. Like, they'll be here soon?... because I am literally fucking him right now, and we're not stopping until I get off at least once.\"\n\nEric suppressed a groan of pleasure, only for a groan of awkwardness to seep out. Jessy did not give the slightest shit if someone knew she was having sex, and that brazenness was very attractive, usually. Right now, it made Eric freeze as he realized the man on the phone could now turn every noise into a likely accurate image of what was happening.\n\nBut after realizing what he was doing, Jessy gave his face a gentle pat with her free hand, tightened her grip on his shoulder with it, and ground her body faster while squeezing her insides harder, reaching rough sex territory. The pleasure started to build again, and Eric set his hands on her hips to hold on.\n\n\"Right, I getcha. Why not Natasha and her boys? I--oh, busy. Fine, I--\" She started to cum. Her voice broke for a moment, and she let out a long, pleased sigh as her rocking motion slowed. Warm insides clenched hard, and she quivered, her breasts jiggling as the random spasms of her muscles earned a few shudders of her chest. It was more than enough to tip him over the edge.\n\nJessy laughed as she got control of herself, and she ground herself back and forth again on his cock. Her insides dripped wet heat down his length, and soon dripped with his cum, as the vise grip of her depths milked him to almost painful levels of pleasure.\n\n\"Sorry,\" she said into the phone. \"Just had to work that one out. Ca--no you can't talk to Eric! Talk to me, asshole. Jeeze, don't act all awkward and shit. You're worse than Eric. It's not like we didn't see you fucking Fiona on the roof in front of, you know, all the Kindred in the city.\" She laughed again. Teasing her workmate. But damn that laugh was warm, and she pat Eric's chest as she worked her hips back and forth a few more times, squeezing hard and wringing his cock until she squeezed every drop out of him, all while laughing on the phone.\n\n\"So, they'll be here any minute? Yeah yeah, sure, we'll go. But if the Prince thinks S\u00e1ndor was involved, they could be in the Dream. We'll need a Begotten... You can't be fucking serious. Um, alright... Yeah yeah, I'm sure he'll agree.\"\n\nHe sat up, took his phone back, and put it to his ear. Nothing, conversation over.\n\n\"How rude,\" he said to her, though he couldn't keep the smile off his face.\n\n\"Yeah, I'm rude. But you love that about me.\" Winking at him, she slid off him, walked down the hall, huge ass swaying left and right, and returned with a couple wet rags. She tossed him one, while wiping herself down with the other.\n\n\"Yeah, I do.\" He said it slowly, with a little more weight than he consciously intended. Subconsciously, he wasn't so sure.\n\nThey froze and looked at each other for a while. Yeap, that was the L word, except, not really said in the way that'd carry the emotional weight to earn the freezing. But they froze anyway, and stared at each other, eyes locked.\n\nA dilemma worthy of a romantic comedy, he supposed. He'd been burned by the L word before, while she didn't have the wiring to recognize the emotion or embrace it. Easily worth a few seasons of romantic tension, with the two of them circling each other, trying to find ways to say it, or hoping for it to be said to them by the other. It'd all come together in the end in a big confession, made by one of them screaming out from the street, in the rain; no one would hear that shit in Dolareido, but still.\n\n\"Eric,\" she whispered, eyes falling. \"I--\"\n\nKnock knock. Right on time, comedic timing and all.\n\n\"Rain check?\" he said, and he gave her a smile to let her know it would, hopefully, be a good conversation.\n\nApparently he had a good smile, because once she saw it, she beamed. \"Yeah.\"\n\nThey put on their underwear and suit pants, and Jessy grabbed her bra as she walked down the hall of the massive apartment, and opened the door, without bothering to put the bra on.\n\n\"Caleb, Noah,\" she said, frowning at them, hand on a hip and holding the black bra. \"Hope you realize you nearly ruined a quickie. But we're both pretty damn quick, so, all's well.\"\n\n\"I, uh... what?\" Caleb said.\n\nShe shrugged and motioned for them to come in as Eric walked down the hall, buttoning up his shirt. She walked past him, slipping on her bra and fetching her suit shirt, too. So brazen.\n\nCaleb and Noah came in, and stayed by the door on the mat. Good. Their shoes were filthy, and honestly, Eric was starting to become attached to a clean apartment. It was easy to get attached to neat and orderly, when he had the money to keep everything streamlined and professionally cleaned.\n\nNoah was an interesting looking man, and it was hard to guess his age. Average height, or maybe a bit taller, but it was hard to tell considering he was bald, with scalp and other pale skin covered in tattoos. Clean shaven made him look younger than he probably was, and his dark blue eyes matched his cold personality.\n\nCaleb had a similar build, same as Noah, same as Eric, about average height with some definite muscle on their lean frames. But unlike Noah, it was easy to tell he was probably in his mid twenties, short red hair, also clean shaven, and a smattering of freckles. He smiled more than his partner, and he was smiling a lot more, eyes snapping between Eric and the hallway Jessy had just disappeared down.\n\nEric smiled too, a small but pleasant one. \"Yeah, she's shameless as fuck.\"\n\n\"All vamps like that?\" Caleb said. \"I mean, whenever Tilly's around, everyone in the building gets to hear it. Whole damn block knows what her moans sound like now.\"\n\n\"You were at the ball,\" Eric said, \"you tell me.\"\n\nCaleb laughed. Noah nodded. Yeah, the vamps in Dolareido really let loose, sexually speaking, and it was rubbing off on everyone else. Case in point, the two guys in front of him had just seen his girlfriend's tits, and everyone brushed off the encounter within seconds.\n\n\"We were supposed to speak with you,\" Noah said, \"about your progress as Uratha, your visions of Luna, and... how it is you're capable of having sex while transformed, something others in the pack have expressed... interest in.\"\n\nEric raised a brow, but Noah's expression was solid. The man definitely had a cold, calculating personality. Sorta reminded Eric of the sheriff, except Noah seemed like he could be suave and smooth if he wanted to be.\n\n\"But?\"\n\n\"But,\" Caleb said, \"Avery called us on the way here with an update from Damien. Clara's missing, she figured that out last night. But apparently so is Jack. We know they were at the mansion, so we're going there now to pick up the trail.\"\n\nPick up the trail, like hunting dogs. Or any predator, he supposed.\n\nJessy returned, fully clothed in her suit, opened his closet, pulled out his suit jacket, and tossed it to him. \"Let's go. I want this situation solved ASAP. Kid is probably just... fuck, I dunno, stuck in a hole somewhere.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"I don't know what to tell you guys. Yeah, sure, when I'm transformed, it's a pretty overwhelming rush. There's definitely an urge to hunt and destroy. But, it gets kinda buried by the need to... fuck.\" God, this conversation was awkward. Jessy may have been slowly -- or not so slowly -- corrupting him, to the point he'd be able to fuck her in the middle of the street without a second's hesitation, but he wasn't there yet. And talking with two guys about how they fucked was especially weird. He'd never been into locker talk, and locker talk never got super personal anyway.\n\nThe four of them hopped along the rooftops of Dolareido, making their way through the thicker entertainment districts quickly as they headed for Rich Side. The three werewolves adopted their Dalu forms, the hybrid between human form and the titan Gauru form. They each grew a few inches, got surprisingly hairy, and put on a good fifty pounds of muscle out of nowhere. It put the wolf spirit right under the skin where it was easy to tap into, particularly its strength, and allowed them to jump from rooftop to rooftop without effort. Despite the massive increase in bodyweight, they landed smoothly; not as smooth as Jessy, but smooth enough to keep up without hurting their ankles.\n\n\"It might have something to do with why you transform,\" Noah said between jumps. \"I suspect the wolf in us all is capable of more than just hunting and destruction. If it's summoned to express itself sexually, then the result would be different.\"\n\n\"Kinda makes sense, sure,\" Caleb said. \"I suppose it'd take a werewolf born and raised in a place like Dolareido to even consider trying it. Didn't you kill a bunch of people the first time you changed, Eric?\"\n\nEric frowned over at the young guy. \"I was literally being murdered at the time. Christ, I still have a bone to pick with Terra Den over that shit.\" He'd mostly let it go because the fucker with the knife was dead, but Montoya and his boss Jeremy Long were still alive.\n\n\"We'll get them eventually,\" Jessy said from up ahead. \"Just gotta figure out a way to do it without Garry being able to pin it on us.\"\n\nCaleb and Noah looked at each other, before Noah called out. \"Being kinda open with that information, don't you think?\"\n\n\"Ha. Garry knows we'll try and find a way to bring his new buddies down. Nothing surprising there.\"\n\nThe two wolves looked at Eric, and he shrugged. Jessy was right, but it was a little weird how openly she talked about it. She didn't say anything that could backfire, but she still said more than the other vampires did.\n\n\"You two boys looking to fuck some people while transformed?\" she continued. \"Definitely make sure your girl -- or boy -- toy knows what she or he's in for. Eric don't stop until he's satisfied, and he's big enough it's like fucking a record-setting cucumber, home grown in some old lady's garden, attached to a piston on a car motor.\"\n\nAll three men coughed, but it wasn't long before Caleb was laughing, then Eric, and eventually even Noah managed a chuckle.\n\n\"When we were fighting,\" Caleb said, \"I wanted to test you, Eric. A lot of Uratha go psycho when they transform. You didn't. You lost control faster than I would have liked, but at least you didn't go crazy and start attacking everything that moved. Hell, you even seemed protective of the vampire.\" He gestured to Jessy ahead of them. \"Some Uratha go into Gauru form more easily than others. Some have trouble with it, and some have trouble controlling themselves when in it.\"\n\n\"Rahu like Matthew, in particular,\" Noah said.\n\nJessy shrugged, mid leap over a large gap. \"I think Natasha's safe,\" she said once she landed. \"She's too scared to fuck a couple of giant werewolves. Maybe I can change her mind, but I'd need someway to show her what it's like. Her boys say it can't really be filmed?\"\n\nCaleb nodded. \"Luna, or her proxy or something, affects people and technology alike. Otherwise, people would have us on film, or people would be telling some pretty detailed stories about a giant wolf on two legs, you know?\"\n\n\"I think,\" Eric said, \"maybe we should let the tiny woman and her two huge boyfriends be? Who knows what those two would be like with her if they transformed.\" Last thing Eric wanted was to trigger some sort of sexual social movement with the Uratha, and then learn that they'd killed someone mid sex. Jesus, that'd be scarring to hear.\n\n\"Matthew can be hard to control,\" Noah agreed. \"But, as long as Arturo is there to calm him, he's never lost control. Those two are as thick as thieves.\"\n\nThick as thieves. That partly explained their ability to both be in a romantic relationship with one woman.\n\nJessy slowed her running until she was between Eric and Caleb. \"You just let me handle Natasha. I've known her for decades. All she needs is a push, and before she knows it, she's blissfully swimming in the new experiences I've thrown her into.\"\n\nEric shook his head. \"Something tells me you haven't had a hundred percent success rate with this.\"\n\nShe rolled her eyes. \"Nobody's perfect.\"\n\n~~~~~~~~~~~~~~~~~~~~~~\n\nOnce they got past the main district of South Side, the jog to Rich Side didn't take very long. They were all damn fast. More importantly, once they were out of sight of all the lights, and could start skirting the edge of the city where it met the desert, they were free to use their wolf forms, Urhan. Urshal, the near-wolf form, was a massive beast of power and strength, but the smaller, full wolf form was ideal for stealth. Eric didn't spend much time in it, but that was out of habit. According to the Uratha, some of them spent just as much time, if not more time in their wolf form. They weren't human after all, they were werewolves, half human, half wolf, with freedom to be in either form as much as they wanted. Which meant, as much as he felt more normal in his human form, being in wolf form felt perfectly natural, too.\n\nJessy said it was different for her. Her wolf form was an extension of her Beast, a malleable creature, filled with blood lust no matter its form. Different instincts, then.\n\nWolves were fast. Wolves were very, very fast. They'd jumped along the rooftops in human shapes because, if anyone spotted them, they would have looked like parkour-obsessed risk takers. Unusual, but not call-the-cops unusual, and definitely not supernaturally unusual. Wolves, on the other hand, were definitely worthy of media attention. So they saved the wolf forms until they were out of the city. And once they did that, it was only a matter of minutes to cover miles.\n\nThey shifted into human form, and walked up the last few feet of the mansion's driveway. A glance Jessy's way showed a hint of something she rarely showed on her face: sadness. Right, this used to be Julias's mansion, after his sire Viktor died, in a cotton mill explosion or something. Eric could still remember hearing about it on the radio in his taxi. It hadn't been very long since Julias died, and she was still sad about it, and probably would be for years. Considering the lifespan vampires operated on, and how they were naturally territorial and didn't make friends easily, losing a close friend must have affected them in a way he would never really be able to understand.",
        "Damien, Fiona, and oh good god, Athalia waited for them on the stairs.\n\n\"Athalia.\" Jessy said, bite in her voice. \"Still not sure why you're coming along.\"\n\n\"I am here to help find S\u00e1ndor. Azamel desires to speak with him.\"\n\nEric frowned slightly as he looked between the two women. Athalia had apparently not done what she was supposed to do, when Jack attacked the hunters, and that put her on a maybe-enemy list for the vampires. But, considering how well the ball had gone, maybe it wouldn't be so bad.\n\n\"Dinnae worry yer pretty head, lass! Ye can trust her.\" Fiona folded her arms across her chest and leather jacket, nodding sagely.\n\nEveryone looked to Damien, who stood beside Fiona, his girlfriend between him and Athalia, and he shrugged, offering little more than a cold and calculating gaze. Just like Noah, and just like the sheriff, he didn't let his expression show much, except that he was prepared to handle things with a cool, albeit sneaky approach, if it came to it. They were scary fellas.\n\n\"None of you can follow the trail without us?\" Noah said.\n\nDamien shook his head. \"Vampires have a good sense of smell, but not that good.\"\n\nThe bald man gestured to the two women beside the vampire. \"And them?\"\n\n\"Different, for each Begotten,\" Athalia said. \"Fiona and I can see in total darkness, but our sense of smell is nothing special. And Mark isn't leaving Azamel's side.\"\n\nThat made sense. If Begotten were each a nightmare monster, and each unique, then each would come with different abilities or handicaps.\n\n\"Alright, let's go,\" Caleb said. Everyone except Noah raised a brow as they looked at the man, but he shrugged and waved it off. \"I've been hunting with Clara for years. Easy to pick up her scent. Come on.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Beatrice~~\n\nOnce dusk arrived, she and Jennifer left, and went out into the desert where Jacob had set up the... interrogation room. Beatrice wrapped them in her best Cloak, and both did their best to spot any followers. If the sheriff wanted to find them, he could, unless Jacob was there to help. But Jacob was off, doing his own thing, apparently uninterested in helping them anymore.\n\nResurrection was not feasible, according to him. He'd captured Elen for no other purpose than to let Beatrice attempt it, and inevitably come to the same conclusion. Jacob, like all the elders, played the long game, and seemed intent on teaching Beatrice quite a bit about being a witch. And, in classic evil witch or warlock fashion, enjoyed teaching lessons the hard way, for maximum impact. Sick bastard.\n\nShe smiled to herself as she thought about her boss. The man was an enigma, even to her, and despite the Prince's request that she try and help Jacob out of his pit of depression, the closer she got to Jacob, the more she found herself thinking like him. He'd lost the love of his life, and so had she. He was neck deep in occult shit, seemed to enjoy it, and she found herself kinda liking it too. Using pain to empty the mind so she could speak with her Beast wasn't fun, but the rewards for tapping into the creature, and then using it to learn rituals from the great beyond, was a rush.\n\nJacob was preparing her. She knew that, she wasn't stupid. Like a moth to flame, she was getting sucked into his world of butchery, sacrifice, and darkness, spurred by the train wreck that was her second life, and the misery that her friends suffered. Misery, and death. She wasn't stupid. She saw all that and saw how Jacob was using it to shape and mold her.\n\nJennifer saw it too, and was invested in making sure Beatrice didn't drown. God, it felt great to have a friend like her. It was the only damn thing keeping Triss from going full psycho and tearing Elen's guts open in some pointless attempt to torture answers out of her. She didn't want to do that, to go so far she'd lose all connection to the human half of her.\n\n\"I think,\" Jennifer said, walking alongside her on the sand and rocks, \"that the sheriff knows exactly what's going on out here.\"\n\n\"Then he'd have stolen Elen away already. We know they have her book and tools. If they had her, they'd have the whole set. Pretty sure the dragons would want her, just to experiment on her and shit.\" If the Circle was filled with witches and warlocks, the Ordo was filled with Doctor Frankensteins. They'd cut off Elen's head and stick her on a younger body or something.\n\n\"Maybe. He might think the cave is booby trapped.\"\n\n\"True,\" Triss said. Surprising that Jen didn't jump at her own mention of booby, but she didn't. Probably picking up the vibe that now was not the time. It wasn't. \"I know Mekhet like the sheriff can do some pretty insane feats with Auspex. But, I suppose if that's true, Jacob may have accomplished equally insane feats using Cr\u00faac rituals. Maybe he's put a spell on the cave, to hide it from Daniel, or to strike at the man if he gets too close?\"\n\n\"Yeah, I wouldn't put it past him. Or maybe the sheriff just stays away because he respects Jacob.\"\n\n\"That respect didn't stop him that one time.\" Daniel had walked into the main sacrificial chamber Jacob maintained, and had basically interrogated them, on Jacob's home turf. Gently, but still, terrifying, to have the fucking sheriff asking questions. \"He was looking for something. I don't think it had to do with Jacob.\"\n\nJennifer nodded, and they continued along in silence for another minute before she spoke up. \"So, that S\u00e1ndor, he--\"\n\nOkay, time to call this out into the light before it drove Triss nuts.\n\n\"Jen, I see what you're trying to do with S\u00e1ndor.\"\n\n\"Well, yes, he's a valuable ally, and--\"\n\n\"No, I mean, you're trying to use him to fill the Julias-shaped hole in my life. And I get it. He fits the bill, sorta, I guess. He's handsome as fuck, and he used to have a family, like Julias. And he's probably a nice guy, when he finally removes the stick from his ass. Not nice like Julias was,\" suave and smooth and charming, \"but nice. Plus, he's a literal monster, and probably doesn't give a shit about my fucked up mouth.\" She kept walking. If she stopped, it would have given the conversation more gravitas than she wanted. Instead, she wanted to casually let Jen know that she knew what her friend was up to, in greater detail than Jen realized.\n\nJen grinned at her. \"You forgot a big reason.\"\n\n\"Ha, yeah? What's that?\"\n\n\"That he can be a great source of blood, and orgasms.\"\n\nLaughing, Beatrice finally stopped. Had to. She buried her face in a hand and laughed and laughed, until she was sure her Cloak wouldn't be able to suppress the noise. Jennifer was relentless.\n\n\"I guess that's true. You know it hasn't really been that long since Julias died, right?\"\n\n\"Yeah, I know.\" Jen's smile faded, and she stepped in a little closer. \"But, it wasn't last week either. It's been long enough that you should at least start looking at other people. Not fuck them, but look. That's all I'm hoping for, honestly, that you start looking.\"\n\nAfter a heavy sigh, Triss nodded, stepped in close to Jen, and set her hands on her shoulders. Jen set her hands on Triss's hips, and she stepped in close as well, eyes a little wider than usual, surprised. Surprised even more, when Triss triggered a kiss, a proper one, deep, long, and slow. Kissing didn't have the same impact without the Blush of Life, not as warm, or moist, but it was still pleasant and inviting enough.\n\nMore pleasing and inviting, was Triss's hands gripping Jen's ass through the snug skirt of her business suit. Jen purred, and pressed her chest into Triss's, squashing her large rack into Triss's, dwarfing them, burying them, and within seconds, Jen's lips found Triss's neck. Always on a hair trigger, Jennifer. Triss knew the moment she actively engaged Jen sexually, the girl would give in instantly; lo and behold.\n\n\"You've been patient,\" Beatrice said into Jen's neck. \"I appreciate that, a lot. A... a lot lot lot. We can have some fun later, ok?\"\n\nJennifer tightened her hug, gave her another kiss on the neck, and stepped back. \"You sure?\"\n\n\"Yeah, I'm sure. Julias is gone, and it has been a while. Not nearly long enough for a stranger, you know? But... I have missed you.\"\n\nHer friend nodded, squeezed Triss's hand, and started walking again. \"I've missed you, too. And, you have no idea how hard it is to see that ass every night, and not do something about it.\"\n\nTriss laughed again. It felt damn good to laugh. Maybe she was feeling better because she had something she could do now, a project to work toward, to put her energy into. Whether or not dealing with Elen would succeed, and it probably wouldn't, it felt nice to be able to think about something other than Julias. For now, her focus was on finding a way to make Elen do what she wanted. The fact that that meant resurrecting Julias was such a distant dream that she dared not consider it possible. First step was making Elen obey commands. Resurrecting Julias would probably be step six six six.\n\nAnd, as the weeks went by, she did find it easier to stop thinking about him. The waves of depression weren't gut wrenching anymore. Painful, yes, but they didn't make her want to puke up all the blood she'd managed to force feed herself, not anymore. More than once, she'd managed to fall asleep come dawn, with Jen in her arms, and not dream of him. It was sad, knowing that she was slowly getting over him, and a colossal relief, too. Part of her had worried she'd end up like Jacob, and probably forever trapped in a loop of depression over Minerva. The guy had an amazing poker face, but Triss and Jen, and Aaron for that matter, were pretty sure the man still thought about her, all the time.\n\n\"Think Jacob will connect with Samantha at all?\" Triss asked. If there was hope for him, then, by comparison, it'd be easy for Triss to find happiness again. Maybe.\n\n\"Maybe. He did say there was something special about her. And if she's Jack's mom, I can only imagine that's true.\"\n\n\"Except, if it's the curse that makes Jack special, then there'd be nothing special about his mom. Except, you know, being the Prince's childe.\"\n\n\"Good point. But I doubt the curse is the reason Jack continuously throws himself in front of oncoming problems with such... enthusiasm.\"\n\nTriss nodded. \"Yeah. The way Samantha dealt with Athalia? Fuck, I should thank Samantha for that. I was kinda worried Athalia would find me and kill me when I had my guard down. Or, find a way to get into my dreams.\" She shivered. That crazy skeleton monster, in her dreams, stalking her in the dark? Good god. \"Samantha's got spirit. I hope she can get through to Jacob. Maybe, you know, settle him a little? Make him happy, if only a little?\"\n\nJen nodded, eyes down, chin in her fingers. \"I expect Jacob is using her, but at the same time, is genuinely intrigued by her.\"\n\n\"So, he'll try and use her, but she'll melt his heart in the process?\" After a few chuckles, Triss made the classic swooning sigh. \"So romantic, and unrealistic.\"\n\n\"One can dream.\"\n\nThey laughed, and kept laughing as they found the giant rock blocking the entrance to the cave. Then, they stopped laughing, and the horrible reality of the situation they were both ignoring set in.\n\nTime to see if Beatrice could summon Black Blood, without Jacob's help.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nHe woke up. That was a plus. He wasn't entirely sure he would wake up, and the worry infected the dreams of his torpor. Scary nightmares, about things jumping out of an endless mist.\n\nAnd, of course, he sat up in an endless mist. He expected to see a cave, but instead, found the tunnels of Dolareido. What the fuck?\n\nHe got up and turned around, trying to figure out what he was looking at. Yeah, these were Dolareido tunnels. He recognized the concrete work of the tunnels, and the way the old tracks were set up, tracks he'd walked along many times in the deeper tunnels when going to visit Azamel. They were beneath him, maybe three feet down, since he was on the edge of a landing platform.\n\n\"Jack,\" Clara said.\n\n\"Clara?\" He smiled as relief hit him, and walked over to join her. She was leaning against a subway gate, one of the older ones that used to be manned, with someone who'd check your ticket and everything. Beside her, S\u00e1ndor sat on the floor, back to the wall. He'd woken up, and he wasn't sweating excessively or panting heavily, so that was a good sign.\n\n\"Jack,\" the Begotten said, a hint of smile showing, but only for a moment.\n\nJack hopped over to them, but slowed when he remembered he had no idea where the fuck they were. \"Glad to see everyone's alive, but, uh, where--\"\n\n\"Still in the Underworld, or Realm of Ghosts, or Great Below or whatever.\" Clara shrugged. \"Sabrina took us here. Said not many ghosts drift this way, and we should be safe. She also said we should do our best to just avoid any ghosts we run into.\"\n\n\"Right, right. Wandering, angry ghosts? Yeah, after meeting my sister, I'm happy to avoid ghosts.\" Sure, he could probably survive any beating they threw at him, but he had no way to strike back. He had to imagine a ghost couldn't go on the offensive forever, and would run out of juice long before they could kill him. Clara and S\u00e1ndor, on the other hand, were not so impervious.\n\nBut, Clara said she could probably hurt ghosts, since they were spirits. Hopefully that was true, if it came to it.\n\n\"So, this is pretty neat, eh?\" Clara said, gesturing around them. \"Looks like we're in Dolareido.\"\n\n\"Yeah, my thoughts exactly.\"\n\n\"Sabrina says it's the first level of the Great Below.\"\n\nHe quivered at that, and slowly spun around as he took in the sight, and scanned for potential threats. In the physical world, ghosts could hide anywhere, in anything, even air, but he had no idea if it worked any differently in the Great Below.\n\n\"The first level of the Great Below looks like Dolareido?\"\n\nShe shook her head. \"Sabrina said the first level is sorta like, a place where the environment reflects the underground stuff you'd find in the physical world.\"\n\n\"First level? What's--\"\n\nShe put up her hands. \"She doesn't know. And judging from the conversation, the fact she knows as much as she does is a little unusual. We passed a few ghosts on the way here, and they were... kinda spaced out. I don't think they realized they were dead.\"\n\nHe quivered again, and stepped in a little closer. \"Ok yeah, that's creepy.\"\n\n\"Yeah, it is.\" She said. \"I didn't want to leave, but she insisted it wasn't safe. Lot of ghosts wandering around.\"\n\nNodding, Jack paced back and forth, rubbing his chin. \"Sabrina. Sabrina Sabrina. That name is familiar.\"\n\n\"She says she died here in Dolareido. I'm guessing mosts of the ghosts we're seeing died here.\"\n\nHe rubbed his head and paced faster. \"So, this Great Below place, or at least this top part of it, reflects the underground of the physical world. If we go deeper, we...\" He shuddered again. The cold, sterile, unendingly bleak atmosphere of the mist-filled fake Dolareido tunnels, was sending spiders up his spine. It was just like back at home, with Mary, how her ghost altered and affected his old home, burying it in an oppressive blanket of death. \"Well, the fact that there's a deeper is enough to tell me: don't go deeper.\"\n\n\"Agreed,\" S\u00e1ndor said.\n\nClara nodded. \"You're awake now, and S\u00e1ndor's feeling a little better compared to yesterday. Let's go back to the hole, and see if S\u00e1ndor can get us out of here.\"\n\nThe two men nodded, and Clara and Jack helped S\u00e1ndor to his feet.\n\n\"I don't think you should go,\" another voice said.\n\nEveryone froze, and looked around for the origin of the voice. It came up from the mist, a subtle green glow growing until it bathed the area in its gentle hue for a good twenty feet.\n\n\"Sabrina,\" Jack said. \"Um, hello.\" Time for diplomat mode, and to put all his experience to use. \"Thank you, for helping my friends out, while I was asleep. Greatly appreciate it, you have no idea. But, we don't belong here, and we really need to--\"\n\n\"There are others, in the tunnels,\" the ghost said. Christ, those empty eyes were disturbing. \"If you go now, they'll notice.\"\n\nJack eyed her, then looked to his friends with a wary expression on his face. Either the ghost was telling the truth, and it'd be dangerous to go, or the ghost was lying, and it'd be dangerous to turn their backs to her.\n\nS\u00e1ndor coughed, a harsh sound, and looked down. Yeah, he wasn't in the best shape, even if he was willing to go. Clara looked at the man hanging over her shoulder, then over at Jack, a wince on her face. Thinking the same thing he was about Sabrina.\n\n\"We can... stay for a little while,\" Jack said, slowly turning his eyes from Clara to the ghost.\n\nSabrina smiled and clapped her hands twice. \"Great! You can tell me about how Dolareido's changed since I died. Right, Jack?\"\n\n\"R... Right.\""
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "suspense",
        "slow",
        "violent",
        "paranormal thriller",
        "paranormal romance",
        "vampire",
        "werewolf",
        "monster"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-08-ch-04"
}