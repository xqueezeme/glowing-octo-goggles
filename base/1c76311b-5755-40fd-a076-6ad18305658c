{
    "title": "Don't Piss Off Lou",
    "pages": [
        "There I was, sitting on a stool in the neighborhood bar crying my eyes out, figuratively at least, even if no actual tears were coming down. I knew I wasn't the first man to discover that his wife was cheating on him; I wasn't the only man whose wife was cheating on him, and I certainly wouldn't be the last man whose wife cheated on him. Knowing all of those things didn't make me feel one bit better.\n\nPart of the bitterness of the whole thing came from the fact that just about everyone but me knew about it -- I know, I know, what a clich\u00e9. I hated being the clich\u00e9. All of my wife's friends knew, but of course they wouldn't tell me. Everyone at the bank where my wife worked in the loan department knew. A lot of my friends knew, but they were afraid to tell me; worried that my first reaction would be to put a fist in their face, which was probably true. I guess they were smarter than they looked. And I wouldn't have believed them anyway.\n\nIt was finally my boss who broke the news to me.\n\nHe called me into his office at the plant and asked me to sit down. He took a deep breath and said,\n\n\"Sven\" (That's me.)\n\n\"Yes, Mr. Johnson.\" (That's him.)\n\n\"I hate to be the one to tell you this, but your wife is having an affair with her boss at the bank.\"\n\nI jumped up and was about to punch him, when I remembered that he was my boss, after all. He winced and kind of cowered a bit when I jumped up. His hands and arms went up to cover his face.\n\n\"Boss, I don't think that you should be talking about my wife like that if you know what's good for you.\" I growled at him. Oh yes. I'm a pretty fair sized fellow, and usually I'm pretty mellow, but when my dander is up my Swedish berserker genes sometimes show. A crazy-mad 6' 5\", 280 pound pissed off Minnesota Swede gets people real nervous.\n\n\"Sven, I'm REALLY sorry to be the one to tell you, but everyone here respects you, and we've been hoping that you would catch on yourself without our interfering. But we finally decided that true friends would let you know, since just about everyone else in town does.\" my boss said, kinda looking down at his desk and just glancing up at me every couple of seconds, trying to avoid my increasingly blazing blues eyes.\n\n\"You better have something to back this up, boss.\" I said, my temper just on edge, and slightly in control.\n\n\"I do, Sven,\" he said, as he pushed over some photos and invoices from the local hotel, \"We knew that you wouldn't believe us if we didn't have some pretty strong proof for you. Sven, I'm so sorry, and I'll do anything to help you through this. Time off, money for a lawyer, whatever. You're a good man and I don't want to lose you, but we figured you would be even madder about things if you found out about it some other way and realized that we didn't tell you, even though we were aware of it.\" \n\n\"My son-in-law is the manager of the hotel, and my daughter works at the bank with them. They helped us gather the evidence to show you.\" He was kind of rambling by this time.\n\nI didn't notice though. I was looking at pictures of my wife Sally and her boss, Glen, doing the nasty just about every way that I had ever heard of, and a couple that I never believed anybody would ever do.\n\nWell, my temper just drained right out of me. It was then the weeping inside started. My voice almost choked when I turned to Mr. Johnson and said,\n\n\"Boss, thanks for telling me and getting me the proof. This is so hard, but you're right I wouldn't have wanted everyone knowing except me. You are a true friend and a good man.\" I told him.\n\n\"Well,\" he said to me, slightly nodding his head as he said it, \"to tell you the truth we knew how hard you would take it, and it was up to me to tell you.\"\n\n\"That was pretty smart of all of you. Because you're the boss and I respect you, I wouldn't just smack you.\" I nodded.\n\n\"Actually,\" he said looking up with his hands turned to the ceiling, \"I drew the short straw. Why don't you take the rest of the day off, to think about how you want to handle the situation, and such, and let me know.\"\n\nI left work. I was surprised at how many of the big guys I work with were coming up and putting their arms around my shoulders and telling me to call them if I needed anything, or just to talk. I thanked them, but honestly I knew that talking with my co-workers about my grief and anger wasn't my way. Instead I stopped at a bar on the way home to consider what tomorrow would bring to my 15 year marriage to Sal.\n\nSo there I was sitting alone at the bar nursing a beer, thinking and drinking, drinking and thinking, and thinking that life was just stinking. \n\nThen I noticed, it really was kind of stinking in the bar. Yuck, a kind of sulfur or sulfur-dioxide smell (yes I know, I'm not stupid -- rotten egg smell.) The septic system must be backing up again. That's what I get for sitting down at the end of the bar, close to the restrooms, I thought. But I was feeling too low down to even get up and move.\n\nJust about the same time I noticed the smell, I heard some guy's voice behind me.\n\n\"Hey Bub, what's got you so down?\"\n\nI was just about to tell whoever it was to piss off when the stranger offered me his hand,\n\n\"M' names Lou.\" It was a firm handshake, and Lou was at least as big as I was. He was a handsome devil, or at least I figured a woman would find him handsome. He was as dark as I was blond, with a deep tanned looking face, with short dark hair, and a solid chin. Most likely worked outdoors a lot. He wasn't smiling or being funny - if you know what I mean. He had a serious look on his face and he looked me straight in the eyes.\n\n\"Sven.\" I introduced myself.\n\n\"Don't mean to intrude or anything, but I've been drinking at the other end of the bar for awhile, and you look like someone who has a problem that needs solving.\" he said.\n\n\"Well,\" I began, \"I'm not sure whether I should kill myself and be dead \u2014 or kill my wife and be lonely and in jail \u2014 or kill her boss and be cheerful and in jail. Maybe I'll kill both of them, and be lonely and cheerful in jail.\" I think that I had too many beers by this time.\n\nNow, darned if I know why, but found myself pouring out my troubles to this stranger. He was a great listener, he didn't interrupt, but you knew he was REALLY hearing what you were saying. My heart just let all of my sadness and anger about my cheating wife come out, how much I loved the woman, but how I couldn't allow myself to be a cuckold. \n\nWhen I was more or less talked out, I sat there for a minute. We both just sat there for a minute, sipping at our beer, thinking. Finally, he turned and said,\n\n\"Sven, here's what you do. Go home and throw her clothes into a couple of trash bags and put them by the door. When she gets home, tell her that you know about her cheating, that you have pictures and evidence, that you are divorcing her, and throw her out. Then throw her stuff in the bags out after her. I'm going to do something for you that I haven't done for an eternity; I am going to help you out of this mess. No strings attached. I promise that within two days she will be begging you for forgiveness and to let her back into your life. Then, if you want her, you can have her back. If you don't, well, you can tell her its too little, too late.\"\n\nWith that Lou turned and walked out of the bar. I knew then that I had too much to drink, because I swear that when I looked at him as he walked away, I saw a ... well, you would think I was crazy if I told you. Anyway, with a greatly lightened heart, and a plan to follow, I went home.\n\nI got right to work. You know, it doesn't take long to empty a bunch of drawers into a couple of trash bags. The stuff on hangers took a little longer. I was going to have to let her come back for shoes, there were too damn many of them, but I threw a couple of pairs into the bags as well. I actually got a cardboard box for all of her bathroom things. I was trying to pack her jars and bottles of woman's potions, gels and lotions, not to destroy them. Like Lou suggested, I stashed the bags and the box off to one side of the door. Sally would probably think that it was trash waiting to be taken out.\n\nA few phone calls and the credit cards were canceled, even her cell phone was only a quick phone call -- it would be turned off by the morning. The bank account would have to wait.\n\nBy the time Sally arrived home, I was more or less sober, and I was pretty damn angry again. But I wasn't feeling helpless and on the defensive anymore. I was ready to stop being a cuckold and start being in charge again.\n\nI think that she knew as soon as she walked in the door from the garage that something was wrong. I told her to sit down at the table in the kitchen. She complained that she wanted to change out of her work clothes.\n\n\"Sally, just sit down. You can change at your new place. Right now, your clothes are sitting in a bag by the front door.\" I told her, my eyes looking hard at hers.\n\n\"Sven, are you well?\" she asked, \"What are you talking about 'my new place'?\" she asked, with a glint of fear in her eyes.\n\n\"You don't think that I am going to let you continue to live here with me, while you are fucking your boss and cuckolding me.\" I barked at her, with a cold stare in my eyes. \n\nShe hesitated for just a moment. I have to give her credit -- she was fast on her feet. She came back on the attack.\n\n\"Sven, are you crazy. Where did you get an idea like that? I am not having an affair, with my boss or anyone.\" she replied, trying to sound sincere.\n\n\"Sally,\" I responded, in a rather terse manner, \"Everyone in town knows about your affair. Everyone at the bank knows, all of my friends know. Lying to me about it doesn't make things better, it make it worse.\"\n\n\"Oh, come on Sven, don't be absurd, how can you possibly listen to malicious gossip like that!\" Sally said firmly. She was getting her feet back under her, and for a minute, she figured that she could pull it off.\n\nUntil I held up some of the photos, fanned out like a hand of cards. She tried to grab them, and I pulled them back.\n\n\"Oh no, my loving wife, I will keep my hands on these, and the other evidence of your infidelity, for the divorce.\" I said triumphantly. \"But you are leaving this house immediately. Tonight. Call up your lover to come and get you.\" I took a shot in the dark, \"That is if he can get away from his wife and kids to deal with you.\" I could see that my dart had struck home.\n\nNow she was crying. At least I should let her stay until tomorrow. She could explain. She really loved me. It was only sex. I didn't understand. Blah, blah, blah.\n\nI understood. I understood the entire time, as I took her house and car keys from her (we could argue about the cars in the future,) and I understood when I took her arm and led her out the front door, threw the trash bags of her clothes out after her, and placed the box of toiletries on the front step. I stood with my arms folded, watching her from the open door. With her cell phone, she called up a woman friend from work who arrived in her car shortly. Then, before I closed the door, I said,\n\n\"You can take some time to think about your affair and your marriage. We will talk in a couple days and decide where to go from here.\" I turned and closed the door and locked it. Sally stood there looking at the door like a deer caught in the headlights. She finally, slowly, picked up her things and took them to her friends car and disappeared into the night.\n\nSurprisingly, I slept pretty well that night. Lou seemed to exude a confidence about him, that when he said things would work out in a couple of days, I believed him.\n\nThe next morning I was first in line at the bank. Now you can understand my dilemma: our checking account was at the same bank where my wife was a loan officer. But the loan officers didn't have the kind of fixed hours that a teller has, so I figured that Sally wouldn't get there right as the doors opened.\n\nIt turned out even better, Sally had called in sick. I had the bank make out a cashier's check for all but $100 from our account. The only thing that the teller asked me about was whether Sally was feeling OK. I told her I didn't have a clue, since I'd kicked Sally's ass out the night before. I guess that I threw the fox in the hen house with that remark. Funny, before I got out the door three of the tellers came up and whispered to me that I'd done the right thing, and two of the others slipped me cards with their phone numbers on them and told me to call them if I was dumping Sally. Real loyalty in that place!\n\nWhen I got back home, there were about ten messages from Sally. I guess that she had found out about the credit cards when she tried to rent a room at the local motel. So she had to stay with her friend until her next paycheck. The message she left after she found her cell phone wasn't working any more wasn't very nice, in fact, she was pretty pissed about it. When she finally got around to going to the bank and found less than $100 in our checking account she went threw the roof. Maybe Glen, her boss, would lend her some, I thought with a smile. \n\nThe last message she left was entirely different from the earlier ones. She had a completely different tone, I guess because someone at the bank had told her about the reception I had gotten from her fellow workers. At least that's what I think she was saying, I was having a hard time understanding her through the blubbering, but I'm pretty sure that it was something like, \"Don't even think of taking that hussy Betty out, and Mary Lou would probably give you some horrible STD!\" Hmmm.... fancy that, Sally calling that nice young woman Betty a hussy; after all, she had been screwing that little wimp Glen! \n\nThe last call was from Lou. I returned his call.\n\n\"Lou, this is Sven. How ya doing?\" I said.\n\n\"Burning it up, Sven. Now tell me what you've done so far.\" came Lou's reply.\n\nSo I described the goings on of the last twenty-four hours.\n\n\"That's good, Sven,\" Lou finally spoke, \"Don't you answer any calls from Sally. Things are in the works that will break in the next twenty-four hours. So you just play it cool, and go out and have a good time. Is there anything that you could do that would get you out of town until tomorrow night?\" \n\n\"Oh, sure, you bet. I could go out fishing at the lake. My brother owns a little cabin out there that he lets me use whenever I want.\" I thought about it for a second. \"And I'll bet the large-mouth bass fishing will be great. It's been warming up during the day, and its a full moon tonight.\"\n\n\"Yup, sounds good,\" Lou said, endorsing my plan, \"Have a great time out at the lake.\"\n\nAnd you know what? I did. I landed the biggest bass I have ever caught that day, just a little under 15 pounds. In fact, I had been reeling them in all day, although I am a catch and release man, so they all got tossed back into the lake. I had the luck of the devil that day! There is just nothing to compare with a great day in your boat, fishing. When I returned home, only two days after I had kicked my wife out, I was feeling pretty good.\n\nAs I was driving home, I stopped at the store to pick up something for dinner. I got a big steak to BBQ, as well as a couple of medium containers of side dishes, you know - some German potato salad, some salad, a six pack of beer. That would keep me from getting hungry.\n\nBut on my way out, I spied the local newspaper. Then I dug two quarters out of my pocket and bought a copy.\n\nThere, on the front page, was my wife's boss/boyfriend, Glen, being hauled out of the bank by the police in handcuffs! Seems like the bank examiner's had been looking at some of the money that the bank was holding in trust, and found that Glen had been stealing the accounts blind. And there, in the same article, was my wife's name. It seems that the the police had put her in the bracelets too, but after questioning her, I guess they thought she was too dumb to be an accomplice, and let her loose on her own \"recognizance.\" Lucky her -- she didn't have enough money to more than about $10 in bail! Her picture in the paper didn't really flatter her, with her hair all blown every which way, and tears smearing her make up. She seemed to be shouting something at the photographer. I'll bet ya it wasn't very nice.\n\nIt's funny, though, Glen kept going on about how he was innocent and the real culprit was some fellow he knew as \"Lou.\" But no one believed him, because no one remembered ever seeing this Lou fellow.\n\nWell, sure enough, when I got back to my house, there was Sally, sitting on the doorstep. I guess she was too cried out by this time to even shed a tear. She looked like hell, and I told her so. She looked at me so pathetically, that I opened the door and told her to come in, and I would make some coffee and we could talk.\n\nJust like Lou had promised, Sally was begging and pleading with me to let her come home. She had been fired from the bank (even though she hadn't been charged with anything, she had lost the bank's trust,) and she had realized that she loved me more than life, that she was miserable without me, and would do anything to prove herself to me. And more of the same.\n\nThe one thing she knew, she said, was that she would never even look at another man sexually.\n\nI asked her how she could make me believe that? And what she told me started me thinking.\n\nIt seems that after I had kicked her out, her boyfriend Glen had showed up. She told me there was something funny about it, because she hadn't called him or anything, but he seemed to know what was going on. She also noticed that he had kind of a faint rotten egg smell that she hadn't noticed before. And when Sally told him it was over between them, he had not only refused to accept it, he had tried to force her to give him a blow job! Her reaction to Glen was that she found herself puking in the bathroom toilet. According to Sally, since then, every time she even thought about Glen, she felt like puking. She said that in addition, a couple of the guys who worked with her in the bank tried to hit on her once they figured that she was open to all comers, and she found herself feeling nauseous. She couldn't even stand the thought of another man. So could I please take her back and we could work it out together and get past her mistake.\n\nIn the end, I gave in. I told her that Glen was strike one and strike two combined; fool around on me again and you will be out of the house and divorced. I also told her that I was going to punish her for cheating on me: I made her take off her pants and panties, and I put her over my knee and walloped her bare ass but good. By golly, she had one pink colored butt by the time I was done with her. Funny though, when I was finished, she had a dreamy look on her face, and turned around and gave me a big wet kiss, and as she ran into the bedroom, she told me to get in there quick. Boy, oh boy, did I learn a few new things that night! I never thought that my big tool could even fit in back there, but Sally seemed to like it.\n\nA couple of days later, I was back in the bar where I had first met Lou. The phone number that I had for him didn't seem to be connected anymore, and I didn't know where to go looking to thank him for everything. So I sat there drinking a beer, and then I turned and saw him walking across the room to where I was sitting. I smelled him first -- that rotten egg smell. And the hooves where he should have had feet. It was the tail under the back of his long coat that I had seen the first time we met.\n\n\"Well hello, Lou,\" I said, as I extended my hand to him, \"or do you prefer 'old scratch'?\"\n\n\"Lou or Luke is fine.\" he replied, giving me a firm handshake, \"And how is Sven tonight?\"\n\n\"Oh, I'm just great. Sally came back, just like you said, and she is eager to please. Seems like she gets sick just thinking of any other man but me,\" I told him.",
        "He grinned. \"I thought you would appreciate that touch. You don't have to worry about her straying again. At least not with another man.\" He looked at me meaningfully when he said that.\n\n\"I'll keep my eyes open.\" I grinned as I said it.\n\nI called the barman and bought Lou a beer, and we sat in silence and sipped for a couple of minutes. I had a question that I had to ask.\n\n\"You know, Lou, I was wondering. Aren't you supposed to get my soul for eternity for doing a big favor like what you did for me?\"\n\n\"Well, technically, yes.\" he said, a thoughtful look on his face, as he stared into space, \"but sometimes, when a woman cuckolds a man, I get so angry about it that I give a freebie.\"\n\n\"Whys that?\" I had to know.\n\n\"Its a long story and goes back a long time. Back to when I loved Lillith, the she demon. We had been an item for almost forever, until God decided to create Adam.\" he explained.\n\n\"Just like you, I never suspected a thing, until some of the other demons decided to torment me with the news that Lillith was messing around with the new guy on the block. There she was cuckolding me with a mere human, and I was crushed. More than a few demons paid for my anger THAT DAY, let me tell you.\"\n\n\"I tried to get her to come back, but noooo,\" he said with a sneer, \"Adam was God's beloved, and so Lillith was going to marry him. She'd never even hinted to me about marriage before. Come to think of it, marriage didn't exist before that, but anyway.... \n\nI knew that her thing with Adam wouldn't last, and pretty soon Adam was fed up with her and got God to cast her back into the pit. She came back to me, but I wouldn't have anything to do with her. As far as I was concerned, she was damaged goods.\"\n\n\"So what did you do then?\" I asked.\n\n\"I got my revenge, believe you me. I waited until Adam convinced God to create Eve for him, and one day out in the garden, I seduced her and gave her the big snake, just like Adam had done to me with Lillith. Boy was Eve easy! A few compliments, a couple of whispers about how Adam wasn't really all that great, and when I told her how exciting it was to try new things and described a few examples -- well, she ready to rock! And ever since then I have had a special place in hell for women who cuckold their husbands. Old big-nose Dante thought that betrayers were in the lowest level, but I never showed him the LOWER basement. You don't even want to know how I torment them!\" His eyes glistened as he said that. \n\n\"So what happened to Lillith?\" I inquired.\n\n\"She's still there, begging my forgiveness, hoping that someday I'll take her back. But why should I? I have Nefertiti, Cleopatra, Helen, Marie Antoinette, and a million others available. Madonna and Hillary in a couple of years. Why should I take back that old bag?\"\n\nWell, that sounded pretty reasonable to me, and we bid a fond farewell as he walked out into the night, his tail swinging back and forth under the back of his coat.\n\nHe wasn't quite finished, though.\n\nGlen's wife divorced him after he was arrested, while he was waiting for trial. The judge didn't allow him visiting rights with his kids; he said Glen was about the worst example of a father that a kid could have!\n\nI heard that after Glen was convicted, he was accidentally put into the general prison population, even though he was a smallish guy. They say he was gang banged every night, and that he learned to use his mouth better than any woman. I guess that one day someone decided that he should be a complete woman and used a shiv to cut off his dick and balls. After he got out of the hospital, the meanest guy in the prison, who I understand smells mildly of rotten eggs, made him his bitch, and Glen wears makeup and dresses now. Boy, ol' Lou just plain doesn't like folks who cuckold their spouses. \n\nSally and I made it through her mistake, and we're still married today. Strange thing, though, she confesses all sorts of things to me and tells me I should punish her for being so bad. A good spanking always seems to help, and I don't mind -- its a husband's duty to keep his wife happy!\n\n*\n\nAuthor's note: The names have been changed in his story. I didn't think that Lars and Jan would like having their story published, so I called them Sven and Sally instead. "
    ],
    "authorname": "SoCalOvid",
    "tags": [
        "cheating",
        "humor"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/dont-piss-off-lou"
}