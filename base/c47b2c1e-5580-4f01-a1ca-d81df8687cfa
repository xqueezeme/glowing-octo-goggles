{
    "title": "My Golden Shower Wishes Come True",
    "pages": [
        "When I was nineteen, I discovered websites that were pee related, and I had many enjoyable jack-off sessions looking at those sites.\n\nI used to be married, but my wife just wouldn't have anything to do with piss play. About 4 years ago, we divorced. Not because of her aversion to pee play, but for other reasons not relevant here.\n\nBecause of my fetish, I have an extensive collection of photos and videos of pee that I've found on the internet. I keep them in an encrypted folder on my home server. I open up that folder whenever I want to enjoy my fetish. I very much like watching women pee, almost anywhere other than on a toilet. Outdoors, on the floor, into a sink basin, in the shower or tub, etc. I like seeing women peeing on each other or on men, and men peeing on women.\n\nAbout a year ago, I met Glenda. She works in the same building as I do. We were in line at the little diner nearby, and she asked if we could have our lunch together. We began dating shortly after. We're both twenty-eight years old. Glenda is a fantastic looking brunette with long hair. She has 32B breasts and slender hips that make up a wonderfully tight ass. And long legs. Really sexy long legs. It wasn't too long after we met that we began having sex. Really great, uninhibited sex. Very enjoyable for both of us.\n\nGlenda has her pubic hair closely trimmed and she likes mine to be the same. We have had some nice erotic fun trimming and shaving each other. Sex with her is exceptional, and she's willing to experiment with different methods and toys. We both enjoy a little dressing up and role playing, which we get into occasionally.\n\nWe often sleep over at each other's apartment, but we haven't moved in together yet. I expect we'll progress to that in the near future. We both like to stay in shape, and we frequently go jogging at the same time when our schedules match up.\n\nOne day I drove over to her place, picked her up and we went to our favorite running spot. Before running, we both had been drinking a lot of water. When we got back to my car, we discovered that the public toilets at the parking area were closed for repairs.\n\n\"Damn,\" Glenda said. \"I really need to pee! Guess I shouldn't have had so much coffee and water.\"\n\n\"Me, too. Let's just walk back into the woods a bit, find a private spot, and piss there.\"\n\n\"Umm...Okay, I guess we can do that.\" But as Glenda said it, she smiled like she was a bit excited about the idea.\n\nWe found a secluded spot. We both just kind of stood there looking around and at each other. Even though we've been fucking a lot and staying overnight together, we've never watched each other doing our thing in the bathroom.\n\nGlenda kind of giggled and in her role-playing little voice said, \"Hey, Joe-wee - I'll show you mine if you show me yours!\"\n\n\"Sure. Like we haven't seen each other's stuff already.\"\n\n\"Well, it's never been out in the woods, in a kind of public area like this. You go first.\"\n\nSo, I dropped my running shorts and underwear down a bit and pulled out my cock. Being in the new location with a bit of a risk of someone seeing us had caused my cock to stiffen up a bit. I looked over at Glenda as she lowered her shorts and panties down to mid-thigh, letting me get a good daylight look at her shaved pussy.\n\nGlenda sounded excited as she said, \"Joe, I want to watch you pee. Piss for me, please?\"\n\n'This is starting to get good,' I thought to myself, hoping it might get even better. I held my cock with one finger and thumb like I normally do when I piss. But it didn't want to start flowing. I've never had someone watch me pee before, and my cock was getting a bit stiffer, which also inhibited my flow.\n\n\"Come on, Joe-wee. Can't you go pee-pee for me?\" Glenda said, again in that giggly little voice.\n\n\"Well, you're not helping. Just stay quiet and let me concentrate.\"\n\nI closed my eyes and tightened up my bladder muscles, willing my piss to start. Finally, I started to pee a bit, then it came full stream. I opened my eyes and looked over at Glenda. She was staring at my cock, fascinated as my stream flowed out and formed a puddle on the ground. I kept peeing for what seemed like a minute, until my overfilled bladder was finally empty. I shook the remaining drops out, then pulled my underwear and shorts back up. I turned to Glenda and smiled. She smiled back.\n\n\"Damn, Joe...that was fun to see. I've never watched a guy piss before.\"\n\n\"Well, I haven't watched a girl piss in person before either. It's your turn to piss for me now.\"\n\n\"What do you mean -- 'In person'?\"\n\n\"I'll explain later. Maybe. I want to watch you pee now.\"\n\nI thought Glenda might take her shorts and panties completely off, but she just pulled them down to the bend behind her knees. She squatted down and held them bunched together with one hand. Then she reached the fingers of her other hand down between her legs and spread open her pussy lips. I could tell that she was straining a bit to get her pee started.\n\n\"Come on, Gwenda. Can't you pee-pee for me?\" In a high-pitched role-playing voice, I imitated her earlier question to me and chuckled.\n\n\"Damn it, just shut up for a minute. Let me work at it.\"\n\nI watched as she did the same thing I did earlier -- she closed her eyes. She was kind of biting on her lower lip as she spread her fingers a bit more, opening her pussy lips wider. A few drops trickled out, then her stream got fuller. She looked up at me and smiled in satisfaction. Her urine steam was strong, pushing the leaves aside and making her own large puddle in the dirt. I was fascinated by the sound her piss made as it formed the puddle. I was amazed at the amount of piss coming out of her small body. As I watched, I imagined her pissing on me, and my cock grew to full hardness.\n\nFinally, Glenda finished pissing. As her stream ended, she had pee dripping off that fleshy area between her pussy and her ass hole.\n\n\"Damn it! I don't have anything to wipe with. Shit!\" Glenda looked around a bit, shrugged and used her two fingers to wipe off as much as she could and flicked her hand, shaking the pee off of her fingers. She stood and pulled her panties and shorts back up. \"Oh, well. I guess that will have to be good enough.\"\n\nThen she looked at me and noticed my hard cock bulging the front of my shorts.\n\n\"You kind of enjoyed that, didn't you?\"\n\n\"Hell, yeah! That was amazing to watch.\"\n\nI pulled Glenda close to me and kissed her. I put one hand down between her legs and pressed, feeling the wet spot on her shorts. She reached down and squeezed my erection. I was hoping this might lead to an outdoors hand job from Glenda. But we heard a car pull into the parking lot, and car doors and voices. Knowing that we couldn't go any further then, we stepped apart.\n\n\"Fuck. I'm so turned on right now,\" I told her. \"Let's just walk around for a bit and let my hard on go down.\"\n\nAfter a few minutes of walking around, my cock softened up enough. We went back to my car and drove to her place.\n\nBefore we got there, Glenda looked over at me.\n\n\"What did you mean when you said you'd never watched a girl piss in person before?\"\n\n'Shit!' I thought. 'Why did I have to say that? What do I say now? What if she thinks I'm a pervert or something?'\n\n\"Umm...well, I kind of like looking at pictures, you know? And maybe I've seen a video. Err...\"\n\n\"So, you're a bit kinky, huh?\"\n\n\"Maybe. I don't know. Please don't think bad of me. It's something I found on the internet a couple of years ago. A few websites related to piss and piss play. And I kind of like it. But I won't ask you to do it again.\"\n\n\"Hey, I asked you first. Remember? I said I'll show you mine if you show me yours. And I asked you to pee for me first. Remember?\"\n\nDamn. She's right. She's the one who started it.\n\n\"Uh, yeah. You did. I liked you watching me, and I loved seeing you piss in front of me.\"\n\nGlenda smiled at me and said, \"Yeah, it was very obvious that you like watching me pee. I kind of liked it, too. You watching me. And me watching you. Maybe we can do it again, next time we're out. And I think I'm going to search for some of those websites you mentioned. I might like what I see.\"\n\nThat evening she came over to my place. We didn't bring up our pee session, but I could tell that we were both thinking about it when he had another great fuck session in my bed.\n\nA few days later, I drove to her apartment and picked her up for another run. We both knew that we would have another pee session out in the woods. We had discussed it on the phone. We planned to drink lots of water before our run, and to not pee before we headed out, so that we both would have full bladders.\n\nAs we got out of the car, I commented. \"Look, Glenda. The restrooms are open again.\"\n\n\"Who cares? I don't plan to use them today. We're going to find a nice place in the woods to watch each other pee again. And I brought tissues to wipe myself this time.\"\n\nWe started our run, and as we got deeper along the trail, I could feel my bladder wanting relief. Apparently, Glenda had the same need. She slowed to a stop. After a few steps past her, I stopped and walked back to her.\n\n\"Let's do it here, Joe. There shouldn't be anyone else out this far.\"\n\n\"Nice place here. But let's walk away from the trail, just in case.\"\n\nWhen we got to a good spot, Glenda asked me, \"Joe, can I hold your cock while you pee? I'd like to see what it feels like.\"\n\n\"Okay, if you want to. But let me get started first. If I get too hard, it's really difficult to pee.\"\n\nGlenda stood right beside me and watched as I pulled my pants down again, held my cock and started to pee. It was easier this time, and when my stream was going good, Glenda reached over and grabbed me like she had seen me do. She pointed my dick in different directions, making circles and patterns on the dirt with my stream. When I finished, she shook the drops off like she had watched me do the first time.\n\n\"Wow, Joe! That was hot. I liked that. I could actually feel your pee flowing through that big vein on the underside of your cock. Amazing....\"\n\n\"Hmmm... maybe you're a bit of a kinky girl yourself.\"\n\n\"Well, I found several of those piss websites you talked about. And I saw a girl holding a guy's prick and aiming his piss stream. I wanted to see what it was like. And if I like it and it makes me a little kinky, well that's Okay too.\"\n\n\"I'm glad you found the website. But it's your turn to pee for me now.\"\n\nGlenda smiled at me and lowered her pants down to behind her knees like the first time. But I had a different idea.\n\n\"Hey, let's do it another way today. Instead of you squatting down, take your pants completely off. Pee standing up for me, Okay? And let me hold your pussy lips apart. I want to get a close look while you're pissing. After all, you got to hold and aim my cock. I want to hold your pussy lips open and see what your piss stream does.\"\n\nGlenda paused a bit, like she was considering what I said. I hoped she wouldn't think I was asking too much and back out. But she smiled and did as I asked. She put her shorts and underwear on a nearby tree limb and stood in front of me with her legs apart, letting me see her shaved pussy in the afternoon sun.\n\nI could tell she was a bit aroused; her pussy lips were plumper than usual. And there was some moisture apparent between them. When I spread her lower lips apart with my fingers, she took a quick breath. I opened them enough that I could see her pee hole exposed just below her clitoris. I thought about rubbing her clit, but I had another goal in mind.\n\nAfter a few seconds, a small stream of urine dribbled out from her opening. Then the flow increased. I moved my head just above her pussy where I had a splendid view of her piss stream shooting out onto the ground below us. My cock started growing as I watched. I moved my two fingers slightly side to side and up and down. I watched, fascinated, as her pee stream made patterns on the dirt.\n\nBut I just had to see what her pee felt like. As I kept her pussy lips spread apart with my fingers, I put my other hand directly into the stream, letting it flow over my palm and fingers. Her piss felt really warm -- almost hot -- and the pressure of it hitting my hand was arousing. My cock got harder.\n\nGlenda gasped a bit when she felt her pee splash off of my hand onto her thighs, but she didn't stop. She continued until she was empty. She was standing there naked from the waist down, looking at me and my hand dripping with her piss. She pulled a packet of tissues out of her jacket pocket. She used those to wipe her pussy lips. Then she dried off the inside of her legs, wet from the piss that had splashed there earlier.\n\nGlenda looked at me as I lifted my dripping fingers up to my nose and sniffed. The aroma was so nice -- a bit musky, but I liked it. Then I licked her pee off of my fingers. It was still warm, and it felt nice on my tongue. It tasted nice, too -- slightly bitter, and fairly salty. But so good, and so erotic.\n\n\"Ewww!\" Glenda said. \"Isn't that kind of gross?\"\n\n\"No, it's not. A little bit different maybe, but I really like the taste. And it makes me horny to know it's your pee I'm tasting.\"\n\n\"Well, I did see videos of men and women drinking each other's piss. But I thought that might be too kinky for us. Do you really like the taste of my pee?\"\n\n\"Absolutely! And it's gotten me so horny right now.\"\n\nIt was like she didn't want to be outdone. \"I can see that. But let me taste your pee, Joe. Can you piss some more right now?\"\n\n\"Maybe. I'm not sure, since I have a hard on. But I can try.\"\n\nGlenda held my dick with one hand and put her other hand at the end of it. Straining a bit, I was able to push out a couple more tablespoons of urine from my bladder. She let that fill her palm and flow onto her fingers. Like I did, she sniffed her wet fingers, then slowly dipped her tongue into the pool of pee that was in her cupped hand. She concentrated on the taste for a couple seconds, then she smiled. My cock started to ache from my need to release.\n\n\"You're right. It tastes kind of funny. And salty. But I think I like it. It is arousing. You've made me so fucking horny right now. And you have a big hardon. What do you think we should do about it?\"\n\n\"I think we can fix that right here.\"\n\nI pulled off my running shorts and underwear, putting them on the tree limb beside hers. Now I was nude below my shirt just like Glenda. I pulled her to me and kissed her. She moaned as she pushed her tongue into my mouth. Her legs were still apart. I put my hand onto her pussy, cupping her wet pussy lips. I eased my middle finger up into her vagina. She was obviously aroused; her pussy felt so hot and so juicy on my hand. As I finger-fucked her, she took hold of my erection and began stroking slowly. Pre-cum was already flowing out, and she used that for lube.\n\n\"Shit, Joe! That feels so good! Finger me hard. Finger-fuck me!\"\n\n\"Damn, Glenda. You kinky girl, you've gotten me so horny. I need to cum! Stroke faster!\"\n\nThe inside of her pussy felt so warm and tight on my finder. After a couple minutes of me finger-fucking her, I could feel her pussy walls start to pulse on my finger.\n\n\"Shit, Joe! I'm cumming now. Harder... finger me harder! That's it! Unnnh.... unnh.... cumming... I'm cumming!\"\n\nGlenda's pussy squeezed my finger and flowed slick juices onto my palm as she had a strong standing orgasm. She grabbed me around my neck with one arm to keep from falling as she continued jacking me off faster and faster. I felt my own orgasm starting.\n\n\"Fuck, Glenda! That's it! Yes! Yes! I'm cumming... I'm cumming now!\"\n\nI moaned as my cock started spurting rope after rope of cum, all over Glenda's leg and onto the ground below. Finally, our orgasms subsided. We kissed some more, then leaned on each other for support.\n\nSuddenly Glenda's eyes got big. \"What the fuck is that?\"\n\nShe looked down at her leg. Then she shook her finger at me in fake anger, smiling as she did.\n\n\"Shit, Joe. You spurted cum all over my leg. And now I can feel it running down into my shoe. What the fuck am I going to do with you?\"\n\n\"I'm sure you'll think of something.\" I smiled back at her.\n\nGlenda used more tissues to clean up my cum that covered her leg. Then we put our clothes back on, walked back to my car and went home.\n\nOver the next few weeks, piss play became our favorite outdoor pastime. I'm not sure why we hadn't tried it in one of our apartments yet. We only (only? LOL) had regular (but very great) sex at home. Maybe it was the kind of kinky erotic excitement that kept us doing it outdoors. We always pissed on each other's hands. Each time, we tasted each other's pee as well as our own, experimenting with different foods and drinks the night before to see how the taste varied. And we always finished off with a hand job and finger-fucking to orgasm. Glenda did learn to recognize when I was about to spurt. She would aim my cock so my cumload wouldn't splatter onto her leg. Usually...\n\nAfter a few more weeks of that, we came up with some more erotic ideas.\n\nOne day Glenda said, \"Let's see who can pee the longest distance.\"\n\nWe called it power pissing. We would hold our pee until we couldn't stand it any longer and let loose. We were always in our favorite wooded spot. I would stand with my cock pointed out and lean back against a tree. I would squeeze my bladder muscles hard while I tried to get the angle of my penis exactly right for distance.\n\nGlenda figured out that if she leaned over backwards with her knees bent and both of her hands flat on the ground behind her, she could get a good distance if she arched her back properly. Wow, her pelvic muscles were so strong - she could make her pee stream really shoot out. We'd start from the same spot and mark the distance. Glenda almost always won the power piss game.\n\nThen one day - \"Joe, let me squat down here in front of you. When I start to pee, you pee in the same puddle. We can mix our pee together, and I'll have a front-on view of you pissing.\"\n\n\"Okay, whatever you want.\" I was enjoying Glenda's progressive kinkiness.\n\nWe were both in our usual mode -- partially nude with our bottom clothes hanging on a nearby tree limb. Glenda squatted down in front of me, her legs spread. She was leaning back a bit with one hand on the ground behind her. Her pussy was fully exposed to me. I stood directly in front of her and waited for her to begin. As soon as I saw her stream start, I forced my pee out. Her puddle grew, and I aimed my pee stream at the same spot. I wiggled my stream back and forth a bit, playing it into her pee stream. As she continued to piss, I let my stream move up and I began to pee right onto her pussy.\n\nAgain, Glenda's eyes widened in surprise. But she wasn't upset about it.\n\n\"Nice, Joe! Your piss feels so hot on my pussy! I like it there! Don't pee on my clothes. Just keep on peeing right there where it is now.\"\n\nAs our bladders emptied, my cock got hard from what we had just done. Yes, once again we fingered and stroked each other to orgasm there in the woods in the full afternoon sun.\n\nAs we walked back to my car, Glenda suggested that next time we should see who could hold the bigger quantity of piss in our bladder. On our next trip to the jogging trail, I brought along an empty water bottle. It was one of those cheap, transparent plastic squeeze bottles that could hold sixteen ounces of water or a sports drink.\n\nWe both drank a lot of extra water that morning before we started out. When we got to our usual quiet stopping point, we both took off our lower clothes like we had done so many times before.\n\n\"You go first, Joe. See how much you can pee into the water bottle. Make sure you catch it all.\"\n\nI took off the lid and put the end of my penis inside the large opening. I tried to pee, but it didn't want to start.",
        "\"Damn, I don't think I can. This feels so different. I don't usually stick my prick into something that's not warm and soft.\"\n\n\"Warm and soft...whatever could that be? I'll hold the bottle for you. You can hold your dick like you usually do, and I'll make sure your piss all goes in.\"\n\nFinally, I started to piss. Glenda did catch all of it. When I finished, she even tapped the end of my cock on the opening, getting the last of the drops in.\n\nShe raised the bottle up and looked at the graduations on the side. \"Just over fourteen ounces. Not bad, I guess. Now it's my turn. You can hold the bottle for me if you want.\"\n\n\"I do want. I like watching you piss. It makes me horny. And this should be interesting.\"\n\nBefore Glenda emptied the bottle, she raised it up to her nose and sniffed it. Then she dipped a finger into the pee. She raised it up to her tongue and licked it all off.\n\n\"Nice bouquet. Maybe a bit musky. Good flavor, with a nice finish on the palate.\" Like she was judging a fine wine.\n\nShe handed me the empty bottle. I knelt in front of her as she spread her legs. Using one finger from each hand, she pulled her pussy lips open, revealing her pee hole to me. I held the bottle in place, and after a couple of seconds her flow started. A couple of drops dribbled to the ground, but I was able to catch the rest of her stream.\n\nMy cock started rising as I listened to the sound of her piss stream filling the bottle. As the bottle got heavier, I could feel the warmth of her pee through the plastic. I watched as the level reached the fourteen ounces line where I had finished. It rose higher and higher, past the top mark of sixteen ounces. There was a bit more room in the bottle, but it shortly overflowed. She continued to piss, her hot pee running down onto my hand. Finally, after a few more seconds, her stream tapered off to a couple of drips. Then she squeezed her bladder muscles once more, squirting a final shot into the overfilled bottle. The sound, weight and heat of her piss stream along with what overflowed onto my hand had my cock raging hard.\n\n\"Damn, babe! That's a lot of piss! How can you hold that much? You're a lot smaller that I am, so I figured your bladder would be smaller, too. Amazing!\"\n\n\"I think that women may naturally have larger bladders than men. Or maybe it's because we hold it so much. Sometimes I'm embarrassed to tell someone that I need to pee. Or at least I used to be. Maybe that makes our bladders stretch out.\"\n\nI stood up with my cock fully hard. Imitating Glenda's earlier action, I raised up the bottle so I could see the pee inside. I sniffed it. Then I took a little sip out of it, swished it around in my mouth, and swallowed.\n\n\"Nice color. A very pale yellow. Clear with no cloudiness at all. A pleasant bouquet to the nose. Slightly tart on the tongue, with just a hint of saltiness.\"\n\nWe looked at each other and laughed before moving together for another session of heavy kissing, finger-fucking and a hand job like before.\n\nOne night, I was over at her place after we'd gone out to dinner. We were sitting in her living room drinking wine and chatting about our piss episodes and some of the websites we had found. I mentioned that in one of the videos I watched, the guy and girl were indoors fully nude and pissing all over each other.\n\nGlenda's eyes got big. \"Joe, do you want to try that? And maybe a bit more?\"\n\nI was happy to hear Glenda say that. I had been hoping that our pee play could progress to another level, but I wasn't sure how to push her in that direction. It looked like my wishes might come true.\n\n\"Damn right I do! What do you have in mind?\"\n\n\"Well, let me show you.\"\n\nGlenda grabbed my hand and pulled me into her bedroom. She started taking off my clothes. I returned the favor by helping her disrobe. My cock started to rise in anticipation. When we were both naked, Glenda led me into her bathroom. She stepped over into her garden-style bathtub, laid back and smiled up at me.\n\n\"Pee on me, Joe! Please, piss on me. I want to see what it feels like when a guy pisses on me.\" Glenda pleaded. She put one hand on her pussy and rubbed it slowly. She massaged her breasts with her other hand.\n\nWatching her laying nude there in the tub, with her hands busy playing with herself, and her horny eyes looking back at me, my cock immediately got stiffer.\n\nI stepped over the side into her tub. I stood between her legs and stared down at her gloriously nude body. Glenda was fingering herself while she looked up at me. I had difficulty getting my piss stream going because I was so hard. Finally, I started to pee. I directed my stream straight onto her pussy and over her fingers while she was finger-fucking herself. The splashing sounds of my stream and the slapping noises of her palm and fingers mixed with her moaning.\n\n\"Oh, yes! Joe, your pee is so hot. Piss on my pussy and my clit! Now piss on my tits!\"\n\n\"Oh, damn, Glenda! This looks so erotic and nasty. Rub my piss all over your titties!\"\n\nGlenda used both hands to rub my piss up and down on her breasts. Then she used one hand to pinch her nipples hard. She put her other hand back down and fingered her pussy faster and faster as I peed on her some more. I could tell that she was about to have an orgasm because she was jerking herself so hard and moaning.\n\nI found that so fucking erotic! My cock got so hard that I couldn't piss any more. My stream dribbled to a full stop, but I could tell that I still had lots more left in my bladder.\n\n\"Shit, Joe! I'm cumming! Oh, fuck... Oh, fuck... I'm cumming now!\"\n\nGlenda moaned and closed her eyes as her leg muscles jerked with her orgasm. At the peak of her climax, she popped her finger out of her pussy and pissed a big, long stream right onto the floor of the bathtub and all over my feet. I watched her piss puddle up against her firm ass. Her pussy continued to throb for a while as her post orgasm spasms tapered off.\n\nGlenda laid back, relaxed and smiling up at me. My cock stayed hard as I watched her wipe my pee up from her belly and breasts with her hands. She rubbed as much of my piss as she could onto her face. Then she licked the rest from her fingers and smacked her lips in satisfaction.\n\n\"Damn, Joe. Your pee tastes so good tonight. And you made me cum so hard. Let's keep going. Do you think you can pee some more?\"\n\n\"Maybe. Probably later. But I'm so hard right now, I just can't pee.\"\n\n\"Let me fix that for you. Stay standing there. I think I know what to do.\"\n\nShe slid herself up to a sitting position, then knelt in front of me. She stroked my cock a few times, then she sucked the head of it into her mouth. Glenda has always been good at giving me a blow job, but that night she seemed to be more into it than before. I felt her hot tongue flicking and sliding up and down the back side of my hard dick as she sucked me in and out of her mouth. She seemed really eager for me to cum and get soft so I could pee on her again.\n\n\"Oh, yeah, Glenda. So good! Keep going! Suck me!\"\n\nThe inside of her mouth felt so hot. I could feel the slight roughness of her tongue as it pressed against my cock head. She had her finger and thumb wrapped around the base of my cock, stroking in rhythm with her sucking. She moved her other hand between my legs and down below my balls. She put one finger up to my anal opening. She pushed against it with urgency, wanting me to cum. And then I did!\n\n\"I'm cumming, Glenda! Jesus, I'm cumming!\"\n\nI felt my cock start to throb as my prostate muscles contracted and pushed a huge load of cum out of my pee hole and right into her mouth. Glenda gulped and swallowed as she sucked all of it down. Slowly my cock softened as she continued to suck as much of my cum out of it as she could.\n\nGlenda stood up slowly, holding onto me for balance. There we were, standing in a piss-slickened bathtub, smiling at each other. She tilted her head up and pulled mine down to hers. She gave me a big kiss and pushed her tongue into my mouth. I could taste my cum on it.\n\nGlenda smiled at me and said, \"Joe, I want more of this. And I have more for you. Let's catch our breath, drink some wine and water so we'll have more pee, and get back in here for more play. Okay?\"\n\nWell, I couldn't argue with that. \"Hell, yeah! I'm ready for more!\"\n\nI leaned my head down and licked all over Glenda's breasts and nipples. Her regular body smells blended with the scent of my pee was wonderful. And the taste of my piss mixed with the natural flavor of her skin was so erotic! I wanted more!\n\nI grabbed a pair of towels from the rack by the tub and dried us both. Her B-cup breasts looked amazing. Her tits still had a red flush from her orgasm. I remembered splashing them with my hot piss as Glenda squeezed them together with her hands and as she pinched her nipples hard just before she had her orgasm.\n\nGlenda put on a bathrobe, and I wrapped a towel around my waist. We went back to the living room, and each had another glass of wine and several glasses of water.\n\n\"Joe, I'm glad you turned me onto this piss fetish thing. Funny, I never thought of peeing as erotic before. Then you peed for me that first time and told me about the internet sites. Now I'm really into it, and I want to experiment some more. You're turning me into a kinky kind of girl, I think.\"\n\n\"Nothing wrong with a little kinkiness,\" I told her. \"Not if it's fun for both of us, and it's not the only thing we do. There's plenty more we can get into if we want to.\"\n\n\"What other fetishes are you into?\" Glenda winked at me as she asked that question.\n\n\"Well, I do kind of like panties. Ones that have been worn and not put into the laundry. But right now, I'm really into peeing with you.\"\n\n\"Hmm...panties. That's another something to think about. But some other time. Joe, I feel like I'm about to pee all over myself. Are you ready for more?\"\n\n\"Sure, let's go! I need to piss like a race horse myself.\"\n\nGlenda led me back to her bathtub, and we resumed our earlier positions. She again laid down with her legs spread and I stood between them, facing her.\n\nShe looked up at me and smiled. \"Okay, I'm ready for another level if you are. Joe, I want you to piss on my face and into my mouth.\"\n\n\"Damn, sweetie. I'm not sure I'm ready to do that. Isn't that going to be a bit degrading for you?\"\n\n\"It would only be degrading if I didn't like it. Or if you wanted to do it to punish me. But in the videos that I have watched, it wasn't degrading for either person. They enjoyed it so much, I really want to see what it's all about. Please, Joe. Piss all over my face and hair. Piss on my pussy again. Piss on my tits some more. But really piss on my face! Please? Pretty please?\"\n\nThen she used that role-playing little voice again. \"Pwease, Joe-wee? Pwease go pee-pee on my face!\"\n\nShe pouted a bit as she finished speaking, and then put both hands behind her head, pushing her breasts up towards me.\n\nWell, I just couldn't say no to any of that. \"Okay, get ready. Let me see what I can work up.\" I grabbed my dick, closed my eyes, and concentrated on getting my flow started. When it was going well, I opened my eyes and watched my piss stream splashing down onto her. I aimed it so it flowed right onto her pussy. She moaned.\n\n\"Yes, Joe. That feels nice. Your pee is so hot! But piss on my face. Please!\"\n\nI smiled and aimed a bit higher, pissing right onto her firm tits and hard nipples, alternating from one to the other. My pee was splashing off of her tits and up onto her face. Glenda tried to catch the drops on her tongue. She also licked her lips to taste the droplets that were there, but it wasn't enough for her.\n\n\"Yes... Yes... Yes! That feels good on my tits. But I want it on my face! Stop teasing me and piss on my face now!\"\n\nWith quite a bit of effort, I slowed my stream and then pinched my piss tube closed with my fingers. Glenda stared up at me in disappointment.\n\n\"You're not empty already, are you? You don't mean that you're finished?\"\n\n\"Nope. Not even close to empty. I just wanted to tease you a little bit more. Get ready now -- here it comes!\"\n\nAs Glenda stared at my cock in anticipation, I pointed it directly at her face and squeezed my bladder muscles until I felt like my dick was going to burst. Suddenly I released my fingers that had been pinching my urethra closed. A big straight stream of piss shot out of my cock, almost like a big rope of cum. Glenda's eyes opened wide as she saw it coming her way. Her mouth was open, and that pee stream hit directly onto her tongue. She coughed as her mouth was almost immediately filled with my pee.\n\nShe closed her eyes and moaned.\n\n\"My face, Joe. Pee all over my face!\"\n\nI moved my stream upwards a bit, splashing my piss stream onto her nose. I moved side to side a bit, hitting her on her closed eyelids. She moaned more and moved one hand down to her pussy. She started finger-fucking herself again.\n\nGlenda tipped her head down a bit. I peed right in the middle of her forehead, and then onto the top of her head, saturating her long brunette hair. Then she put her head back and opened her mouth, inviting me to pee in it again. I moved my stream down a bit to accommodate her and watched in amazement as her mouth filled with my piss. She closed her mouth, quickly swallowed, and opened up to show me it was empty and to let me fill it up again.\n\nShe swallowed again, then turned her head to the side and said to me, \"Joe, I'm about to cum. Piss on my pussy some more. Piss on my clit!\"\n\nI moved my stream down and pissed as hard as I could directly onto her pussy as she frigged herself hard and deep with two fingers inside.\n\n\"Fuck, yeah! Fuck, yeah! That's it. Hot piss! So hot! Cumming.... Cumming... I'm cumming now!\"\n\nJust as I ran out of piss, Glenda had another strong orgasm. She bucked and thrashed so hard, she almost kicked my feet out from under me. I had to grab the towel bar there by the tub to keep from falling down onto her. We were both still for a few minutes as she recovered from her orgasm. She smiled up at me and looked at my once again hard erection. I had gotten so aroused from pissing all over her and watching orgasm. I began to stroke my cock, intending to shoot my cum where I had just pissed.\n\n\"Stop, Joe. I don't want you to cum yet. I have a better idea.\"\n\n\"Umm... Okay... but I really need to cum soon. What are you thinking?\"\n\n\"Let's change places. I really need to piss a lot right now. And I think you'll like what I have in mind.\"\n\nShe stood up and had me lay down on my back in her piss slick tub. My legs were together with my cock at an angle towards my face. She knelt over me, stroked my cock a few times, and played with my nipples. I was groaning because my cock was so hard. I wanted -- needed -- to cum so bad.\n\n\"Glenda, I've gotta cum. Either you help me or I'm gonna jack my self off.\"\n\n\"Okay, get ready for this!\" Glenda raised up a bit and positioned her pussy directly over my cock. I watched as she pissed her hot pee stream directly onto it.\n\nHer pee stream was so hot, and the force of it felt so good. With her fingers between her pussy lips, Glenda moved her hot piss stream up and down my cock, like it was stroking me.\n\n\"Oh, fuck! Babe, that feels so good. Your piss is hot! Keep pissing on my cock!\"\n\nIn about two more seconds, the heat of her piss and the pressure of her stream on the back side of the head of my cock caused me to cum right then, hands-free. I kept watching her hot piss flood over my cock as I erupted.\n\n\"I'm cumming, sweetie! Oh fuck, I'm cumming! Don't stop. Make me keep cumming!\"\n\nI shot several ropes of cum up onto my chest, my cock throbbing with intensity.\n\nHoly crap, that was fantastic! She leaned back and fingered her piss stream up onto my chest. When she finished pissing, she leaned forward and used her hands to blend her pee and my cum together on my chest and belly. Then she leaned forward and licked all over my chest, sucking a lot if it into her mouth.\n\nLooking me right in my eyes, Glenda pressed her pussy lips onto my softening cock and slid up and down it a few times. She leaned forward to kiss me, flowing some of the mix of her piss and my cum into my mouth. I moaned as my cock started ot grow again.\n\nSmiling at me, Glenda sat back in the tub with her legs laying over mine. I watched as she fingered her pussy to another quick orgasm.\n\nWe sat there for several minutes catching our breath. Finally, we stood up and used the flexible shower head to clean each other and rinse the piss and cum out of her tub. Then we moved to her bed and had another great fuck session.\n\nGlenda and I have progressed on our pee fetish path -- now we both enjoy peeing and receiving pee on each other's face and swallowing mouthfuls of hot piss.\n\nI've been practising starting and stopping my pee stream when I have an erection. I'm getting pretty good at it. My plan is to surprise Glenda by pissing inside her while we're fucking. I think she'll like it.\n\nI'm glad I finally found someone that likes pee play as much as I do. I hope our fun continues."
    ],
    "authorname": "JoeLucas69",
    "tags": [
        "piss",
        "fetish",
        "urine",
        "pee",
        "outdoors"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/my-golden-shower-wishes-come-true"
}