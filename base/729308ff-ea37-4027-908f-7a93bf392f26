{
    "title": "The Class Nudist",
    "pages": [
        "\"Are you going to tell me where we're going now?\" \n\nCarson swatted away a mosquito while tromping through the brush under the oak and cedar. For all the fond memories he had of running around his friend's wilderness backyard while growing up, playing their imaginary games as alien hunters or fugitives on the run, he never could quite shake his fear of stumbling upon a rattlesnake, scorpion, or even the odd tarantula. They'd rarely ever seen any such creatures, but it wasn't impossible to come across one in this part of Texas.\n\n\"Almost there,\" Wes said. \"Gotta keep it a surprise.\"\n\n\"Ugh,\" Carson said as a small branch caught him across the cheek. \"Better be a good one. Are we even still in your yard?\"\n\n\"Probably not,\" Wes said. \"Just hope we aren't let down. The...let's call it a show...has been regular as clockwork the last couple days.\"\n\n\"Show?\"\n\n\"You'll see.\"\n\nWes led on in silence for another couple minutes until a large house began to resolve itself up ahead from among the trees. Carson didn't remember having ever seen a house back here before, meaning it was probably a couple years old at the most. This far out of town, the difference in houses from one neighbor to the next could be substantial. Trailers rolled in next to ranch houses that could pass for small mansions, and this new house fell into the latter category. The residents all shared a desire for the peace, quiet, and privacy that came with the large tracts of relatively cheap land in the rolling hill country. Carson, in spite of having enjoyed the perks of growing up in town within walking distance of school, fast food, and the public swimming pool, still found reason to be envious of his friend's place.\n\n\"New neighbors?\" Carson said. They were now close enough to see a well-tended backyard replete with gorgeous in-ground swimming pool, patio, grill, and vegetable garden.\n\n\"Yeah,\" Wes said, lowering his voice. He slowed his approach and tried to utilize the undergrowth as cover from the house. \"They built the house last fall and moved in over the winter. Pretty sweet place, if I do say so.\"\n\n\"And what, now you've taken up spying on neighbors?\"\n\n\"I prefer the term 'passive observation.'\" Wes was clearly a little sheepish at being called on his behavior, but it wasn't enough to deter him from sharing.\n\nCarson followed as his friend moved closer to the yard. Wes finally stopped when he found a small clearing behind some dense bushes, dropping his backpack and crouching down behind the cover. Carson followed suit, though he felt a flutter of nerves and fought down a strong desire to just head back to the house and play some Playstation. Nothing good could come of whatever Wes had led him here to witness. It might have flown when they were kids, but they were both adults now, on the doorstep of graduating into the real world.\n\n\"Water?\" Wes said, offering him a bottle from his backpack. Carson gratefully accepted it as he was already hot and sweaty from the short hike. Despite only being early May, the late afternoons were flirting with mid-summer like temperatures.\n\n\"How long we gonna have to wait for this surprise?\" Carson said.\n\n\"Shit, get down,\" Wes whispered, waving him down with his free hand. \"She's a little early today.\"\n\nCarson followed Wes's gaze toward the back of the new neighbors' house and saw a young woman emerge through the back patio doors. She was wearing a bright yellow beach cover-up type shirt and carried a towel and book. Her legs were long and lean, while her hair was cut to about chin length. Carson could appreciate the view, but still felt a little sullied at his complicity in Wes's voyeurism.\n\nThe woman stopped by one of the lounge chairs to lay out her towel and set the book down. It was when she removed her large-framed sunglasses that Carson's heart skipped a beat.\n\n\"Is that Emmy?\" Carson squinted to try to get a better look. They were still quite a distance from her, but he was now almost certain that he was right about her identity. \n\n\"Uh huh,\" Wes whispered smugly. \"Your sweetheart.\"\n\n\"Shut up, dork,\" Carson said, blushing slightly. Once again, he regretted sharing his secret crush on the new girl in school. Wes's teasing had only gotten worse when Emmy was partnered with Carson in their AP Physics lab. Every time Wes brought up the crush, it made him realize what a coward he was for not having the courage to ask her out. She was a polite girl, though when they worked together it was almost entirely focused on the task at hand. She was rarely forthcoming about herself and Carson always took that to mean a lack of reciprocal interest. Still, she seemed to shy away from most everyone else at school, but that could just be a result of being a new transfer in her last semester of high school.\n\n\"I can't believe you've been spying on her,\" Carson said, unable to avert his own eyes as she set her sunglasses down beside the chair as well. \"What the hell would Gracie say if she knew?\"\n\n\"Oh, she broke up with me last weekend,\" Wes said, clearly not distraught over the short-lived relationship.\n\n\"Oh.\"\n\n\"Anyway, I wasn't really trying to spy on her at first,\" Wes said. \"Didn't even know she lived back here. But you'll understand why I brought you. Just...about...now...\"\n\nCarson felt his mouth involuntarily drop open when Emmy pulled her shirt over her head and revealed a gloriously naked body. Stark. Freakin'. Naked. There was no way, he thought, that in the real world any girl from his school would do that sort of a thing. Not a nice girl like Emmy, at any rate. She tossed her shirt aside with the same casual ease and stretched her arms above her head. He was doubly smitten and knew he now could never, ever hope to find the courage to ask her out. Simply talking to her during class would be a nigh insurmountable challenge.\n\nEmmy walked around the edge of the pool with uninhibited, casual grace, her narrow hips swaying gently. Her breasts were modest-sized, fetchingly conical and tipped with slightly puffy aureolas. She had a flat tummy leading down to a well-trimmed patch of pubic hair. And, as she turned around to let herself down the ladder into the pool, the girl revealed an invitingly perfect ass.\n\n\"You can breathe now,\" Wes said, tapping Carson on the leg.\n\n\"Wow.\" He still felt dirty for spying on her, but couldn't fault his friend for wanting to share. \"It's been like this all week?\"\n\n\"Couple days in a row,\" Wes said. \"And, judging by the complete lack of tan lines, I'd say she's been doing this for quite a while. And by that, I mean years.\"\n\n\"You think she's a...?\"\n\n\"Nudist? Yeah, that's my guess,\" Wes said. \"They're never the ones you'd think, eh?\"\n\n\"No, guess not,\" Carson said. He continued to watch her, though as she swam there was little to see other than her slicked back hair and sparkling eyes. It was enough.\n\n\"Plus, yesterday I saw a guy come out to call her in for dinner or something,\" Wes said. \"Must have been her dad. Didn't even bat an eye at her lying out naked, nor did she make any effort to cover up or anything.\"\n\nThey watched on in silence for some time, Carson only shifting his legs the minimum necessary to keep them from cramping up. Emmy swam only for a short while before climbing back out and returning to her lounge chair. Every curve of her body, each highlighted by the late afternoon sun glistening off the beads of water, entranced him completely. He wondered at how he could be so completely oblivious to something this big about his lab partner. Did anyone else in school know she did this?\n\n\"You know, you have to ask her out now,\" Wes said, breaking their extended silence. \"She's sweet, smart, and obviously likes to take her clothes off.\"\n\n\"I don't think I could ask her now,\" Carson said. \"I'm still trying to wrap my brain around it. I'd probably freeze up.\"\n\n\"Oh. Well, I guess you won't mind if I make a move then.\"\n\n\"What? Yes, I'd mind.\" Carson wasn't sure if his friend was serious or just messing with him. \"Besides, what kind of relationship starts with spying?\"\n\n\"You're spying on her,\" Wes said. \n\n\"Yeah, but I didn't know that's what I was coming here to do,\" Carson said. \"Besides, I liked her before I knew about the naked thing.\"\n\n\"Well, that's why I'm giving you...\"\n\nWes, in shifting his weight around to stretch, leaned into a dry branch and caused it to snap loudly. Both boys froze. Carson, still looking Emmy's way, saw immediately that she had indeed heard the noise when her head popped up from behind the book she was reading and looked straight their direction. Behind her sunglasses, it was difficult to tell just how concerned she was about the sound.\n\nFinally, she settled back into her chair and brought the book back up. Carson released the breath he didn't realize he had been holding and gave Wes a dirty look. Wes at least had the decency to look embarrassed. The incident made Carson realize that it would be almost impossible for the two of them to sneak away as long as she was still outside, since doing so would almost certainly create more noise and she would likely be more aware of additional sounds. \n\n\"You think they go to nude camps and vacations?\" Wes whispered several minutes later after their hearts had settled back down.\n\n\"I have no idea,\" Carson said, almost a little defensively. While he appreciated the young woman's beauty, he still felt awkward for being here. He didn't want to be intruding on her personal life. What she and her family did was neither his nor Wes's business.\n\nAnother minute later, Emmy set her book down, stood up, and went back inside the house. Carson saw it as their opportunity to sneak away without getting caught and suggested as much to his friend.\n\n\"Are you kidding? She left all her stuff outside. The show's probably good for another hour at least.\"\n\nCarson rolled his eyes. \"Yeah, she's very attractive and very naked. If you want to see naked girls, there are plenty on the internet. I think we should give Emmy some privacy.\"\n\nWes studied him for a moment. \"Either you're turning gay on me, or you really do have a thing for her.\"\n\n\"I'm not turning gay,\" Carson said, shaking his head.\n\n\"See, I was right then,\" Wes said with a victorious glint in his eye. \"Fine, have it your way Mr. Chivalrous.\"\n\nAs they made their way quietly back through the woods toward Wes's house, Carson couldn't help but look back a couple times, hoping he might catch one more glance of Emmy. He was already wondering how he would be able to look at her with a straight face at school tomorrow. \n\n* * * *\n\nCarson's heart was beating heavy in his chest and he could feel a warm flush across his face. It was as bad as the time he had asked Janie Holmann to the homecoming dance, only this time he wasn't doing anything nearly as stressful. All he had to do today was sit next to Emmy and work through their physics lab together.\n\nHe carried a box of electrical components to their bench, his heart skipping a beat when she looked up from her notebook and met his eyes. He was certain that she would be able to see right through him, read him like an open book, and openly accuse him of being a peeping Tom right in front of the entire class. It was stupid, he knew, but it terrified him nonetheless.\n\n\"Got the meter?\" Emmy said as he took his seat beside her.\n\n\"Huh?\" Carson was so flustered at her saying anything to him that he completely missed the question.\n\n\"The volt meter? Did you grab one?\"\n\n\"Oh, yeah,\" he said, pulling it out of the box and handing it to her.\n\n\"Great, thanks,\" she said, taking it and setting it aside on the bench. \"I think I have the first circuit figured out, if you're ready to start assembling it.\"\n\nThey worked their way through the exercises, calculating the electrical characteristics of the circuits their teacher had drawn up on the board and then testing them with physically constructed models. Carson, usually pretty sharp at physics, found himself making several mistakes while futilely trying to refrain from picturing his partner's naked body under the tight shirt she wore today. Making him even more nervous, Emmy seemed considerably more talkative with him today than he ever remembered. She seemed downright conversational, though he suspected it might just be his mind playing tricks on him.\n\nMercifully, the lab finally came to a conclusion and they packed up. Carson's nerves had finally started to settle down toward the end of class and he had been able to carry a little bit of conversation without making a complete fool of himself. If she had sensed anything amiss about him, she had not let on.\n\n\"Carson?\" Emmy said.\n\n\"Yeah?\"\n\n\"I was wondering if I could ask a favor of you.\"\n\nCarson's heart skipped a beat and his palms instantly became sweaty again. \"Sure.\"\n\n\"I really need to do well on this final next week,\" she said. \"One of my scholarships I'm getting has a pretty tough GPA requirement and I'm right on the edge. If I don't do well, I think I could lose it before I even see the first check, which would really suck.\"\n\n\"Ouch. They can do that?\"\n\n\"It's a private scholarship, so yeah. Anyway, I was wondering if you might be willing to give me a hand studying for it. I know you're probably pretty busy studying for all the finals next week, so it's totally cool if you can't...\"\n\n\"No, no,\" he said, a little flustered. \"I'd be happy to help.\" \n\n\"Great! I figured, since you've practically carried me through a few of these labs already, you'd be my best hope.\" \n\nEmmy, for her part, looked a little sheepish at having to admit to her shortcoming. It was a look that Carson found both endearing and completely at odds with the woman exuding self-confidence yesterday by the pool.\n\n\"Thanks, I guess,\" he said, feeling dumb the way it came out. \"Sure hope I don't let you down. When did you want to study?\"\n\n\"You free after school today?\"\n\n\"Uh, sure,\" he said, though he wasn't thinking clearly enough to remember if he actually had any other plans or not.\n\n\"We could do it at my house, if you want,\" she said. Where I like to get naked, Carson heard in the back of his head, the unspoken follow up to that sentence.\n\n\"Ok,\" he said, his voice cracking.\n\n\"Here,\" she said, grabbing a scrap of paper and writing as she gave him directions. \"5598 Westchester, off FM9066.\"\n\n\"Yeah, I know where that is,\" he said as he took the scrap.\n\nEmmy raised her eyes at that. \"You do?\"\n\n\"Yeah,\" he said, trying not to get flustered. \"My best friend lives out there. Not the easiest place to find unless you know where it is.\"\n\n\"No, it's not,\" she said, a curiously satisfied look crossing her face before quickly vanishing. \"I'll be home by four, so any time after that is fine. Probably sooner is better than later. Call if anything comes up.\"\n\n\"Right,\" he said, noticing that she'd written her phone number beneath the address. \"I'll shoot for four then.\"\n\n\"Great, see ya then!\"\n\nCarson nodded and watched dumbly as she headed for the classroom exit. His gaze was helplessly drawn to her butt and the memory of seeing it bare. He might have survived their time together in the lab, but he wasn't so sure he would be able to make it through a one on one study session alone with her. He swallowed hard and pocketed the slip of paper.\n\n* * * *\n\nFor most of the drive over to Emmy's house, Carson's imagination wildly speculated on how he would react if she were to answer the door naked. It was the sort of fantasy that would probably unhinge him if ever he faced it in reality. Still, he worked mightily to convince himself that she would be nothing other than ordinary during his time there.\n\nQuashing the last twinge of trepidation, he climbed the spacious front porch and pressed the doorbell. Emmy, still dressed in her school clothes, answered a few moments later and welcomed him inside. To his relief, she seemed almost as nervous as he was -- the same sort of jitters he got the few times he had previously visited a girlfriend's house for the first time.\n\n\"I thought we could just work at the dining room table, if that's okay,\" she said.\n\n\"Sure,\" Carson said, following a step behind while taking in the new surroundings.\n\nThe house was at least twice the size of his parents', but it used its extra space to give the rooms vaulted ceilings and other open areas. Skylights allowed sunlight to cast a warm glow across the wood floors and simple artwork on the walls added elegant splashes of color to the otherwise minimalist furnishings. The place was neat and clean and he got the impression that they were alone for the time being.\n\n\"Nice place,\" he said as they cut through the kitchen and stopped at the broad table already covered with her class notes.\n\n\"Thanks,\" she said. \"It's more or less mom and dad's retirement house, though they're still years away from actually retiring. I'll only get a few months out of it before heading off to college.\"\n\n\"Probably make it feel more like a vacation home to you, then, I suppose.\"\n\n\"Yeah, which isn't all bad I guess.\"\n\nEmmy grabbed a couple sodas from the fridge at they settled in at the table to get to work. Carson was a little nervous when she sat in a chair beside him, but it ended up being the most practical way for them to go through several equations from their homework that had been giving her trouble over the last few weeks. To his great relief, they very quickly focused in on physics and he found himself finally able to relax and talk conversationally in her presence. Emmy, likewise, seemed to open up to him far more than she ever had in class, and he discovered in her a sweet, self-deprecating sense of humor that he had never seen before.\n\n\"You know, I think you'd probably do a better job teaching this material than Mr. Andrews does,\" Emmy said after about an hour of pouring over material. \"Some of this is finally starting to sink in.\"\n\n\"Good,\" Carson said, blushing slightly at the compliment. \"It's probably just seeing it done another way that helps, though.\"\n\n\"Well, I appreciate it regardless.\"\n\n\"Honestly, I think this is turning out to be the best way I could have studied, too,\" he said.\n\n\"How so?\"\n\n\"Well, in trying to explain how I do the problem solving to you, I'm forcing myself to really understand how the equations work and not just how to plug the numbers in.\"\n\n\"Cool. Glad to hear I'm not completely wasting your time, then.\"\n\n\"No, not at all.\"\n\n\"I was gonna take a break for a minute,\" Emmy said. \"I need to find that other lab notebook before we get any further with the kinetic energy stuff. If you want, you can tag along -- get the tour of the upstairs and see my room.\"\n\nSomething about the offer felt like a trap to Carson. He genuinely liked her, but didn't want to come across as too eager. On top of that, he still had reservations about his ability to get past the visions in his head of her in the buff. If he declined, though, he risked coming across as aloof or completely uninterested.\n\n\"Uh, sure,\" he said weakly. \n\nAs she led him upstairs, they made small talk about their respective interests and hobbies. Carson was surprised and impressed with her interest in sailing and scuba diving, which she had picked up with her family over the years. Carson's dabbling in computer programming and website design, by comparison, sounded rather dull and pedestrian, though Emmy at least tried to act interested.\n\n\"Well, here it is,\" Emmy said, opening the door to her moderately cluttered sanctuary. \"Sorry about the mess. I still haven't completely unpacked from the move.\"\n\n\"Nah, it's fine,\" he said. \"A lot cleaner than my room...and with a much nicer view.\"\n\nCarson was drawn to the windows that overlooked both the backyard as well as the side of the house. Even from just the second floor, the view across the rolling countryside was impressive. The pool, along with the beautiful stonework and landscaping, also drew his attention along with reminders of yesterday.",
        "\"Yeah, I love the view, especially at sunset,\" Emmy said as she rummaged through a bookshelf looking for her class notes.\n\n\"That's a sweet pool, too,\" Carson said, trying to find a safe conversation point and realizing too late that he might have chosen poorly.\n\n\"Isn't it? I love just lounging around out there, especially after school now that it's hot out.\"\n\nWarning bells started going off in Carson's mind when she said that, though he tried to convince himself that he was being paranoid. Emmy, having found her notebook, joined him by the window. He tried to keep his focus safely out on the horizon.\n\n\"We get quite a bit of wildlife out here,\" she said, picking up a small pair of binoculars that were sitting on the window sill. \"Deer, turkey, all kinds of stuff. Sometimes cool just to look around.\"\n\nShe adjusted the lenses and peered around for a moment before pausing while looking off toward the side of the backyard. \"Ah, like that,\" she said, handing him the binoculars. \"Here, take a look.\"\n\nCarson took the binoculars with a growing sense of dread at what he would see. Following Emmy's guidance, he looked down into the trees and almost immediately spotted Wes camped out behind a bush some twenty feet back from where the properly trimmed lawn began. Carson hadn't bothered to tell Wes about his plans to come study with Emmy after school, and his friend was probably just hoping for another of her repeat performances poolside. His heart sank, though, knowing that he had probably been caught as well.\n\n\"Yeah,\" Carson said, handing the binoculars back to Emmy. He couldn't tell if she was pissed or not, so blank was her expression.\n\n\"Your friend?\"\n\n\"Yeah,\" he said, hanging his head while flushing in embarrassment. \"I'm sorry.\"\n\n\"For?\"\n\n\"You saw both of us out there yesterday, didn't you?\"\n\n\"I did.\" Her voice was just as unreadable as her expression and Carson began to suspect that she was indeed very pissed. It made him marvel all the more, though, that she could have acted so pleasantly toward him all day through class and their studying.\n\n\"I'm sorry about the whole spying thing,\" he said. \"Honestly, I didn't know what Wes was bringing me out here to see. He just said it was a surprise. I feel terrible and I had no intention of ever coming back here to do it again.\"\n\n\"You swear that's the truth?\"\n\nCarson looked her in the eyes and said that it was. She nodded.\n\n\"What about your buddy? How long has he been up to this?\"\n\n\"Just a couple days,\" Carson said. \"And after yesterday I strongly suggested that he'd better cut it out before he got into trouble.\"\n\n\"Either of you tell anyone about this?\"\n\n\"No!\" he said. \"Well, I sure haven't. I don't think he has, either, though I could find out for sure.\"\n\n\"It's not that big of a deal,\" Emmy said, softening her voice a bit when she heard Carson's sincerity. \"I'd just rather it not become common knowledge that me or my family are active nudists.\"\n\n\"I totally understand.\"\n\n\"It's not that I'm ashamed or anything,\" she said. \"Quite the contrary, actually. It's just that it's more of a hassle than it's worth among high school types. One of my old friends spilled it at my last school and suddenly all these guys started hitting on me, thinking that because I liked to be naked that I must also be easy.\"\n\n\"I'm sorry.\"\n\nEmmy shook her head dismissively. \"Like I said, don't sweat it. I was pretty pissed yesterday, but calmed down a bit after I had time to think about it. After all, I always had you pegged for a pretty nice guy. And, well, you two are teenage boys.\"\n\n\"Wow, thanks for not calling the police or something.\"\n\n\"Just don't ever do it again,\" she said. \"Either of you. If you want to come over to swim, that's one thing, but none of that snooping crap.\"\n\nCarson was a little startled by her last statement. It was okay with her if he wanted to come over? Whether she meant it sans clothing or not, it almost certainly meant that she liked him on some level, even after she had caught him spying on her. That little bit of hope did wonders for easing his angst.\n\n\"Don't worry,\" he said. \"It'll never happen again. And I'll personally make sure Wes knows his ass will be kicked thoroughly if he doesn't cut it out. In fact, I'll tell him right now if you want.\"\n\nEmmy smiled at that and it prompted Carson to be proactive. He flipped the catch on her bedroom window and swung it wide open.\n\n\"Wes,\" he called out, loud enough that his friend couldn't possibly miss it. Sure enough, Wes's head snapped up toward the window. \"Emmy knows you've been watching and it's time to stop. For good.\"\n\nWes, even from this distance, was clearly mortified. He got up from his crouched position and bashfully waved back up at the bedroom window.\n\n\"Uh, sorry!\" Wes said. \"Really, sorry Emmy. Won't happen again. But, thanks for making me a happy man for a couple days!\"\n\n\"I think that'll do the trick,\" Emmy said in a lighthearted tone as Carson closed the window back up. \"Both of you seem to be sufficiently embarrassed by this episode.\"\n\n\"Yeah,\" Carson said. \"Like, I want to crawl into a hole and hide until after the semester is over embarrassed.\"\n\n\"Nope. You still have to help me study, which we should probably get back to before it gets any later.\"\n\nCarson couldn't believe that she really was going to let him off the hook that easily, but maybe she was being honest in that she wasn't ashamed about having been seen nude. The very concept was difficult to grasp, but admirable nonetheless. He simply couldn't put himself or his family into the same context as Emmy's and make the visual work.\n\n\"So, wow, I guess I'd have never called that one,\" Carson said, trying to be conversational as they headed back down to the dining room.\n\n\"What, me being a nudist?\" she said with a wry grin.\n\n\"Yeah. Just something you grew up with?\"\n\n\"Yup.\"\n\n\"You and the family go to, like, camps and stuff, or just hang out around the house?\" Carson couldn't believe he was actually prying into what was an awkward subject for him. The way Emmy was so casual about it, though, gave him the sense that she almost wanted the opportunity to be open about an otherwise fairly hidden part of her life.\n\n\"Yeah, we'll do some vacations at nudist friendly resorts,\" she said. \"Not all the time, but a couple times during the summer we'll usually go somewhere. And we don't exactly parade around the house naked. Usually just while swimming or something. There are some nudists who feel like they have to do anything and everything they possibly can get away with in the buff. We're a little more laid back than that around here.\"\n\n\"Cool,\" Carson said, sitting down beside her at the table. \"Guess it's just a little hard to wrap my head around. I mean, I've known there are nudists for a long time, but I never really thought I'd meet one. Kinda wondered what they were like.\"\n\n\"Pretty normal, usually,\" she said. \"Only we tend to have fewer tan lines.\"\n\nThat she was teasing him about it now made Carson feel a lot more relaxed. They soon dove back into their studies and the subject of nudity faded away to irrelevance. Carson found himself finally able to focus solely on studying and making sure Emmy mastered the material. He also realized that his interest in her had grown far beyond the bounds of the simple crush he had harbored for the last few months, now that he was getting a feel for her personality.\n\nShortly before six, Emmy's parents arrived, creating another slightly awkward moment for Carson as he was introduced to both. Like Emmy had told him earlier, there was nothing remarkable about them, nothing that screamed out \"nudist.\" Both were polite and welcomed him warmly, especially after their daughter raved about how helpful he had been in getting her ready for the final exam. Carson was even invited to stay for dinner but declined, feeling he had already enjoyed more good fortune this afternoon than to which he had any right.\n\nEmmy walked him out to the front porch and thanked him again for helping her study.\n\n\"My pleasure, really,\" he said. \"And, thanks again for being understanding about that other thing.\"\n\n\"It's nothing,\" she said, and he was confident she meant it. \"Say, if you have time, I'd like to go over a few more things before the exam that we didn't get to yet.\"\n\n\"Yeah, sure,\" Carson said. \"This weekend, maybe?\"\n\n\"I'm actually pretty busy for most of it,\" she said. \"Except for tomorrow night. And I wouldn't want to interfere with your Friday night plans.\" \n\n\"Oh, that's okay. I don't have anything planned.\" He felt a little ashamed to admit it, but it was the truth. He probably would have arranged something last minute with Wes, but spending time with Emmy, even if just studying, sounded too good to pass up.\n\n\"Ok then,\" she said. \"Wanna do it here again?\"\n\n\"Sure.\"\n\n\"And, if you want, we can order a pizza or something,\" she said, a little shyly. \"My parents are going to a show, so I'm pretty much on my own anyway.\"\n\n\"Yeah, sounds good,\" Carson said, realizing that it was almost turning their study session into what could be construed as a date. \n\n\"Cool. Oh, and if you want, we could hit the pool for a while. You know, just to chill out. Don't have to study straight through or anything.\"\n\nCarson felt giddy and nervous all at once. That sort of invitation was definitely more than just for a study partner, and it gave him a thrill that she might actually have some of the same interest in him that he had for her. He also found it sweet that she seemed to get all shy about the invitation.\n\n\"Yeah, that sounds great,\" he said.\n\n\"See ya in class tomorrow, then,\" she said, giving him a little wave.\n\nCarson was flying so high emotionally that he was halfway home before it occurred to him that she might have been intending for that swimming invitation to be in the buff. He hadn't thought to ask and figured to do so might come across as incredibly prudish. The idea had some tantalizing possibilities, but he wasn't sure he had the confidence to overcome the sheer magnitude of his nerves. The rest of the drive home was a battle of possibilities -- could he or couldn't he? Would he or wouldn't he?\n\n* * * *\n\n\"I can't believe how burned I got yesterday,\" Wes said as he sat down beside Carson in the cafeteria. \"But man, the humiliation was totally worth it.\"\n\n\"If you'd just let it go after the first time or two, she'd probably have never known,\" Carson said.\n\n\"Whatever. Now, spill it. What were you doing over at her place?\"\n\nCarson rolled his eyes, though he had known his friend would grill him over lunch. \"She asked me to give her a hand studying for her physics final.\"\n\n\"That's it?\" Wes sounded disappointed.\n\n\"That's it.\"\n\n\"Was it naked studying?\"\n\nCarson closed his eyes and took a deep breath. \"No. We were quite clothed, thank you.\"\n\n\"You are so boring. Go to a nudist's house, a hot nudist's house, and not get naked with her.\"\n\n\"Yeah, crazy that we might actually want to focus on studying,\" Carson said, polishing off the last of his sandwich and wondering if he could find a good excuse to leave early.\n\n\"Did she know that you were watching her the other day with me?\"\n\n\"Yup, she knew. And she wasn't too happy with either of us.\"\n\n\"And she still invited you over to help study? That's a good sign.\"\n\n\"I think she just chalked it up to us being teenage boys,\" Carson said. \"And luckily she seems to be pretty forgiving.\"\n\n\"Must have the hots for you or something.\"\n\nCarson thought about not mentioning their follow up study session planned for tonight, but figured there was little point in hiding what would eventually come out anyway. \n\n\"I'm not sure she's interested in much more than using me to get a better grade,\" Carson said. \"But, she did invite me back tonight for some more studying.\"\n\n\"Studying, on a Friday night? You gotta be kidding me.\"\n\n\"Studying, with pizza and swimming pool,\" Carson said, knowing it would tweak Wes from disdain to jealousy.\n\n\"You're going swimming? Now that's more like it. Please, please, please tell me she'll be naked.\"\n\n\"I didn't ask what she was going to be wearing,\" Carson said. He was wondering the same thing, but had no intention of letting on to his friend that it mattered that much to him. \"And so help me, if you're anywhere near her place tonight, I'll personally kill you.\"\n\nWes grinned widely. \"Nice, you think she might be going buck then. You lucky mother fucker.\"\n\n\"Just stay away, okay?\"\n\n\"I know, I know. You'll kill me if I don't. I'd better have a full report on how it went come Saturday morning, though.\"\n\n\"Prepare to be disappointed,\" Carson said.\n\n* * * *\n\n\"What?\"\n\nCarson blinked, realizing that he'd been caught staring at Emmy while she was working on an equation. \n\n\"Sorry,\" he said. \"Just spacing out for a moment.\" \n\n\"Think it might be about time to order the pizza and call it a night for the studying,\" Emmy said with a wry smile. \"You're losing focus and I'm getting hungry.\"\n\nCarson couldn't argue against the lost focus. Unlike the previous day's study session, both of them seemed far more inclined to get off topic and joke around than actually focus on the books. The awkward barrier of distant classmates seemed to have been replaced with a sense of friendship, and Carson found that their personalities matched better than he had dared hope. Emmy, for her part, didn't seem to mind the distraction either.\n\n\"Besides, I think we've beaten this dead horse of electromagnetism long enough,\" she said, closing up her text book and piling her notes up.\n\nCarson packed his own materials up in his backpack while Emmy wandered off to order their pizza. While he had eagerly been looking forward to their post-study time this evening, he was starting to really suffer from the nervous butterflies in his stomach. He hadn't found the courage to ask her about the presumed swimming attire during class and now it seemed a little late to bring it up. Her parents were gone for the evening, which was a plus in terms of his willingness to maybe go nude, but there it was still a huge hurdle for him mentally.\n\nWhile they waited on dinner, Emmy led him to the living room where they sprawled out upon the couches and carried on an aimless conversation about all manner of topics. Much of it revolved around their families and childhoods. Emmy, to Carson's surprise, had two siblings. Both were older and moved out, with her sister due to be married in a month. And, as if anticipating Carson's question, she said that it was not going to be a nude wedding.\n\n\"Nah,\" she said. \"I'm sure they thought about it. But, frankly, there are too many family and friends they'd want to invite who wouldn't really be down for that sort of affair.\"\n\n\"I'm sure it would be quite an ordeal for some,\" Carson said, grinning at the idea.\n\n\"Not that there's anything wrong with doing it that way,\" she said. \"I've actually been to a couple nude weddings over the years. Lots of fun. I think they just settled on taking their honeymoon somewhere where they can make up for having to deal with all that wedding attire.\"\n\n\"Nice,\" Carson said. \"Which sounds awfully handy for a honeymoon.\"\n\n\"How so?\"\n\nCarson blushed at her seemingly innocent question. He thought the meaning of his joke was perfectly clear. He felt uncomfortable having to explain it.\n\n\"Well, you know,\" he said, fumbling for a polite way to say it while she looked on innocently. \"Honeymooners are generally known for taking off their clothes a lot.\"\n\n\"Oh? What for?\"\n\nCarson suspected that behind her straight face, Emmy was deliberately putting him on just to try to embarrass him. It was working.\n\n\"Well, consummating the marriage and stuff,\" he said weakly.\n\nEmmy finally cracked and laughed out loud. \"I see,\" she said. \"So, you're saying that by being naked, it's easier for them to get it on at a moment's notice.\"\n\n\"Yeah,\" Carson said, hoping desperately that the darkening room was hiding his red face.\n\n\"I'm sure they'll take advantage of the circumstances,\" she said. \"And I'm just messing with you.\"\n\nCarson marveled at the girl -- both a nudist as well as comfortable talking about sex openly. It was an intimidating combination and not one he had encountered before in his life's experience. Perhaps that would change after a while in college, but for now she certainly had him at a disadvantage.\n\nThe doorbell rang, saving him from further embarrassment for the moment. Her teasing did little, however, to ease his anxiety about what might come after dinner.\n\nDinner was, blessedly, a relaxing affair over which the conversation stayed safely away from nudity and sex. Emmy provided some remarkably insightful and often scathing commentary on many of Carson's long-time classmates. He was impressed at how well she seemed to grasp the difference between those who were fake and genuine after only having been in their school for a single semester.\n\n\"You find the same people everywhere,\" she said, polishing off another slice of pepperoni. \n\n\"So what kind of person do you have me pegged for?\" Carson asked.\n\nEmmy raised an eyebrow, knowing that he had just put her on the spot. She rose to the challenge, however.\n\n\"You are no pretender,\" she said. \"You're comfortable with who you are and what you want, even when you're uncomfortable about it.\"\n\n\"That sounds almost cryptic enough to be on a fortune cookie.\"\n\nEmmy smiled. \"Ok, that was pretty vague,\" she admitted. \"Basically, I think you're okay with you and you're not inclined to do things just because you think other people want you to do them. You'll forge your own path and let those who like you for it either accept you or fall behind. It's a good thing.\"\n\nCarson was impressed and humbled. He had never really thought about himself in those terms before, but it seemed that she really had distilled a fundamental part of his personality down into an insightful analysis. She would probably make a good psychologist or therapist if she had a mind to pursue such a field.\n\n\"I won't pretend to be near as good at pegging people as you are,\" he said. \"But, I'd have to say that you seem to have the same sort of traits you just described in me.\"\n\nEmmy shrugged. \"Well, you know what that gets you?\"\n\n\"No.\"\n\n\"Apparently an invitation for pizza and pool,\" she said, smiling. \"Speaking of which, you still up for a swim?\n\n\"Aren't we supposed to wait an hour after eating or something?\" Carson's nerves jumped back to life and he was wondering if postponing things just a little longer might help.\n\n\"Nah,\" she said. \"We can hop in, as long as you promise not to start swimming laps or something.\"\n\n\"I'll try to refrain,\" he said. Time was up.\n\n\"C'mon, we can get changed upstairs,\" she said, leading the way toward the stairs. Her use of the word \"changed\" made him a little hopeful that he might not be faced with a dilemma after all.\n\n\"So, as you're probably well aware by now, we don't have much of a dress code around here,\" Emmy said as she reached the top of the stairs and waited for him to catch up. \"Especially when it comes to the pool. Just want to make sure you don't feel like there's some unwritten rule around here that swimming is only done in the buff.\"\n\nCarson felt an inward sigh of relief now that she had broached the subject. \"Ok.\"\n\n\"So, wear as much or as little as you feel comfortable with,\" she continued as she turned to lead the way to her bedroom. \"As for me, well, you know by know that I prefer au natural. But, if that makes you in the slightest uncomfortable, just say so and I'll dig out my swimsuit. Probably still packed away in a box somewhere, but I'll find it. And really, it's not a big deal.\"\n\nShit, Carson thought to himself. Now he was stuck in perhaps an even more awkward place, being given the choice of what to wear not only for himself but for her as well. In all honesty, he knew that he'd be far more in his comfort zone if they were both dressed. Another part of him, however, really admired her confidence in her own skin and didn't want to inflict his ingrained prudishness on her.",
        "\"Honestly, while I think it's really great that you're into the nudist thing, I'm not quite sure I'm ready to dip my toes into those waters, so to speak,\" he said, hoping she would take his words at face value. \"And if you're more comfortable naked, then go for it. It's your house, your pool, and I'm just learning as I go.\"\n\n\"Cool,\" she said. It was simple as that and the hours upon hours of agonizing were past. All he had to worry about now was trying not to stare at her too much, or, god forbid, get aroused.\n\n\"Maybe you'll be able to corrupt me yet,\" Carson said. \"You've already got me thinking about it.\"\n\n\"Corrupt you? Nah, you're already corrupted. I just have to undo the damage.\" She gave him a wink and flipped on the light in her bedroom against the shadows of the last bit of sunset.\n\n\"You can change here or use the bathroom across the hall,\" she said, already pulling her shirt up over her head and causing him to try to find something else to look at. \"I'll grab a couple towels from the closet.\"\n\n\"Right,\" he said and did an about face for the bathroom. With the door closed, he quickly shed his clothes and donned his swim shorts that he'd stashed in his backpack. He still felt overly modest in Emmy's presence, though at least she was very cool about it and seemed to be going out of her way to make him feel comfortable. A little part of him regretted his lack of courage, but he hoped that perhaps with time he'd be willing to give it a go.\n\nChanged, he flicked off the light and crossed the hall to Emmy's room. Tentatively, he looked inside and found her gone. He set his pack down in the corner, wondering if he should wait for her or just head down to the pool.\n\n\"Here's your towel,\" Emmy said from behind.\n\nHe turned just in time to catch the towel as it sailed from the doorway toward his head. Emmy was grinning at him as she stood there naked and gorgeous and completely comfortable. Unable to stop himself, he gave her a good look up and down.\n\n\"Nice suit,\" she said, glancing at his own uninspired forest green board shorts.\n\n\"You too,\" he said, eliciting a small laugh.\n\n\"You like? I was worried I might be showing a little too much skin.\" Emmy posed for him and then twirled around once.\n\n\"Nah,\" he said. \"It works for you.\"\n\nShe winked at him. \"Glad you like it. Now, let's hit the pool.\"\n\nMesmerized, Carson followed Emmy's ass downstairs and out onto the back patio. While she wouldn't be considered among the most attractive girls in school, she was certainly had her beauty. He thought of her more in the girl-next-door cute category, which he found amusingly appropriate. Even in her undressed state, though, Carson realized he was more attracted to Emmy's personality than her body, and in that he found the ability to get past some of his discomfort.\n\n\"That end's just deep enough to do some diving, as long as you don't get too crazy,\" Emmy said, pointing toward the side of the pool over which a low diving board was suspended. \"I don't use it that often, but it's certainly the quickest way to get over the temperature shock.\"\n\n\"Is it that cold?\"\n\n\"Nah. A little brisk, maybe, but it's decent.\"\n\n\"Which way are you going in?\" Carson followed Emmy's lead and slung his towel over one of the lounge chairs. She turned back toward him and he made a conscious effort to keep his eyes on her face.\n\n\"Think I'll use the diving board tonight,\" she said.\n\n\"Lead on, then,\" he said.\n\n\"Guest goes first,\" she said, motioning for him to lead.\n\nCarson climbed the couple steps, feeling the abrasive texture of the springy board beneath his feet. The pool itself, lit by underwater lights, was particularly gorgeous and inviting at night. He glanced back at Emmy and found her smiling and waiting with her arms crossed. He sighed, took a quick approach to the end, bounced twice to get some elevation and then leaped off the end to land in a classic cannonball. The water was cool, but not near as bad as he had feared. By the time he surfaced, pulling himself clear of the diving area, he was already feeling comfortable.\n\nHe turned back and watched as Emmy focused herself on the board, staring off in the distance. She took a few confident steps toward the end and bounced like a professional before launching herself into the air. Carson couldn't help but watch the way her free breasts bounced wildly, making him wonder if it might be uncomfortable to do that sort of thing without a swimsuit. Emmy flew into the air with her arms extended above her, then folded neatly in half and extended once again as she entered the water head first in a smooth line. It was simple, but elegant.\n\n\"Show off,\" Carson said when Emmy surfaced next to him.\n\n\"Whatever,\" she said as she ran her fingers through her hair to pull it back. \"See, water's not too bad.\"\n\n\"Nah, it's nice. Bet this is really sweet in the summer time.\"\n\n\"We'll see. Only got warm enough to start using it a couple weeks ago.\"\n\nFor a blissful while, Carson and Emmy just aimlessly paddled around the pool while making small talk across all manner of subjects. They rarely strayed more than a few feet from one another, and occasionally brushed against one another. Carson's awareness of the girl's nudity further dissipated while she remained mostly submerged. Occasionally her breasts would surface when they ventured into shallow water or she had a mind to swim on her back for a few strokes, but it was no longer a consuming distraction for him.\n\nThe one thought that kept returning to Carson through their conversation was how he regretted not having been a little more assertive in trying to get to know Emmy earlier in the semester. He hadn't been dating anyone regularly and now he discovered that they got along very easily. Never before had he been able to feel so comfortable talking to a girl he fancied, and she seemed to be just as relaxed in his presence. \n\n\"Could you excuse me for a minute? Need to hit the restroom.\" Carson had been fighting down the need to use the bathroom for a while, unwilling to break their rapport, but the discomfort had finally become too much of a distraction.\n\n\"Sure,\" she said. \"I'll be here.\"\n\nCarson lightly toweled off and headed inside. He knew there was a bathroom on the first floor, but it had the feel of being more of a showpiece with shell-shaped soaps and fancy hand towels than a functional facility. Instead of using that, he trotted upstairs to the bathroom across from Emmy's bedroom. He quickly relieved himself while his mind absently wondered about where this relationship might be going.\n\nFinished, Carson stole into Emmy's room on a whim. He left the light off and peered out the back window at the pool below. Emmy was floating on her back in the middle of the water, her angelic figure dark against the blue glow of the underwater lights. It clicked in his mind that she had something he wanted, but it wasn't something she could give to him.\n\nCarson returned to the bathroom and peeled off his shorts. He quickly wrung them out over the tub and then hung them over the edge. The cool, climate controlled air chilled his damp and now exposed nakedness. He suppressed a shiver, be it from the cold or nerves, and looked at himself in the mirror. \n\nThis was what he wanted, Carson realized as he looked at his reflection. He wanted the confidence and carefree attitude that Emmy had. It wasn't something that he was doing for her, but rather something that he needed to do for himself. Finally, he had found the courage to admit it to himself and to act upon his own desires. \n\nAs he walked back downstairs, Carson again had to fight down his agitated nerves. This time, however, it had very little to do with being nude. Granted, he was a little nervous at the prospect that Emmy's parents might come home at any time and disapprove. What really made him nervous, however, was the possibility that Emmy might take his sudden change of heart to be some sort of sexual overture toward her rather than an awakening in himself. The last thing he wanted was to come across to her as overly needy or desperate.\n\nCarson paused before opening the doors to the patio. If he was going to change his mind and chicken out, this was his last opportunity. He caught a glimpse of Emmy slowly drifting along in the water and decided that there was no going back. He slid the door open and walked out into the warm evening air.\n\nHe walked toward the pool as casually as he could manage, neither in a hurry to hide in the water nor slowly in an effort to be seen. Emmy did notice him and paused in her swimming to face him. He could tell that she looked him up and down for just the briefest of moments, though her expression didn't change for a moment as she did so.\n\n\"As long as you're out, would you mind grabbing the beach ball?\" That Emmy didn't even mention his nudity was an incredible relief to him. He wanted it to be no different than what she was used to -- a non-factor. So far, so good.\n\n\"Sure,\" he said, heading over toward the bin with the pool toys and grabbing the requested ball.\n\n\"Thanks,\" she said, catching it as he tossed it to her.\n\nCarson hopped into the pool from the side and let the cool water wash over him. The feeling of water moving over and around his scrotum unimpeded was a novel one. He found that the sense of freedom and weightlessness was rather enjoyable, enough so that he would likely miss it in the future when he had to swim properly clothed.\n\n\"Incoming,\" Emmy said, tossing him the ball from across the pool. Carson batted it back and soon they were engaged in a playful game of trying to keep it aloft without holding onto it. Soon after they had the knack of it down, they started intentionally making the return hits from the other more challenging, forcing wild lunges with splashing and submersion increasingly required.\n\nCarson followed an errant ball into the deeper end of the pool. Rather than sending it back into play, however, he heaved himself up on the ball, wrapped his arms around it, and half submerged it as he used it as a floatation device. He glanced back at Emmy as he slowly started to paddle further away.\n\n\"Hey, where are you going with my ball?\" she said playfully.\n\n\"Oh, just out and about,\" he said. \"You sent me this way, after all.\"\n\nEmmy swam after him and quickly caught up. She positioned herself on the opposite side of the ball and wrapped her arms around it as well, overlapping his. Their heads were scarcely a foot apart as they rested their chins on the ball and their feet occasionally brushed one another as they lazily swung them around for stability.\n\n\"Kinda nice to just float around sometimes,\" Emmy said.\n\n\"Yeah, especially after you had me running all over the place after the ball.\"\n\n\"Like you weren't doing the same to me.\"\n\n\"Whatever.\"\n\n\"I noticed you seem to have lost something while you were inside,\" Emmy said, innocently enough that she was clearly trying to broach the subject without making a deal out of it.\n\n\"Yeah, funny thing that,\" Carson said. \"I know I had some inhibitions when I went in there and, you know, they just seem to have gotten misplaced.\"\n\nEmmy joined him in smiling at his joke. \"I'll keep an eye out for them,\" she said. \"And, if I do find them, I'll see to it they're never heard from again.\"\n\n\"Thanks. Seriously, though, it was something I realized I wanted to do after seeing how comfortable you could be with it. Just took me a little longer to accept it myself.\"\n\n\"That's great. I'm really proud of you. It's not something that people can come to very easily if they weren't raised doing it.\"\n\n\"I'm sure. Granted, it's not like I'm doing this in front of a whole bunch of people or anything.\"\n\n\"Honestly, I think it's easier when there are lots of people around,\" Emmy said. \"You feel more like part of the crowd rather than an individual. Not the easiest thing to describe, I guess.\"\n\n\"I suppose I could see that,\" Carson said. \"Well, at least as long as most everyone else was also naked.\"\n\n\"I hope you didn't feel like I was pressuring you or anything.\"\n\n\"No, not at all. If anything, you were almost too casual about it. I like you enough that I think I'd have done just about anything you asked.\"\n\nEmmy appeared to blush. \"You like me, huh?\"\n\n\"Yeah.\"\n\n\"Good.\"\n\n\"Good?\"\n\n\"Yeah, cuz I like you too. And I'm really glad you came over.\"\n\n\"Me too.\"\n\nAn awkward silence descended between the two of them as they just floated there lazily, gazing into one another's eyes. Carson wondered if they might have snapped the magical spell of their budding relationship by being just a little too forthcoming with their feelings so soon. The little smile that cracked in the corner of Emmy's mouth allayed his fears, though.\n\n\"So, you'd have done just about anything I asked?\" Emmy raised a curious eyebrow at him.\n\n\"Yeah, probably,\" Carson said.\n\n\"What if I'd asked you to kiss me?\"\n\nCarson's heart skipped a beat, even as he thought he heard a nervous crack in Emmy's voice when she asked the question. They both wanted it and she was at least brave enough to bring it up. \n\n\"I'd certainly have done that,\" Carson said, trying to sound far smoother than he felt.\n\nSubconsciously or not, the gap between their faces across the beach ball had slowly closed until they were now just inches apart. Below the ball, when their feet brushed together, the contact lingered longer and longer. Carson was acutely aware that the back of his hands around the far side of the ball were in constant contact with her chest, just below her breasts.\n\n\"Would you...?\" Emmy began to say. \n\nCarson leaned forward and Emmy did so as well, their lips meeting and muffling anything else she might have said. Their kisses were light and tentative, just brushing the outside of their lips together with varying pressure and for increasing duration. He felt her mouth open slightly and their tongues soon began a similar slow dance of exploration.\n\nAfter several blissful minutes of silent kissing, Carson found his neck getting sore from the awkward position leaning across the beach ball. He broke off the kiss and they shyly looked at one another. Both were grinning enough to let the other know that this was a very okay thing that was happening between them. Carson tossed the ball out of the pool, leaving them holding hands while using their feet to tread water in the deeper part of the pool.\n\n\"Maybe we should go somewhere we can stand, so we don't drown,\" Emmy said, barely above a whisper.\n\nHand in hand, they swam toward the midpoint of the pool where they both could comfortably touch the bottom. Immediately, they were kissing again, this time with their arms wrapped around one another. Carson was intensely aware that his growing erection was bumping up against her waist and he hoped that she wouldn't be bothered by the uncontrollable reaction.\n\nFor several blissful minutes, they simply held one another and kissed, reveling in the nuances of one another's taste and feel. Carson resisted the urge to let his hands roam her body, instead keeping them safely on her back and occasionally daring to massage her ass. Making out with a girl for the first time while nude was entirely new territory for him, and he was inclined to let her take the lead in establishing what sort of contact was okay. As long as she was only engaging in kissing and holding, then he would do the same.\n\n\"You know, you're a pretty good kisser,\" Emmy said when they both finally came up for a breather. The way her eyes sparkled made Carson's heart flutter.\n\n\"You're not,\" he said.\n\n\"What?\" Emmy's eyes went wide as she pushed away from him.\n\n\"No, you're not pretty good. You're fantastic.\"\n\n\"Dork,\" she said, splashing him in the face with water.\n\nCarson laughed and dove under the water, swimming back toward Emmy until he was able to wrap an arm around her waist. He surfaced, picking her up with him and tossing her a short distance away as she yelped in surprise.\n\n\"How dare you?\" she said in mock anger once she had wiped the water from her eyes.\n\n\"Hey, you started it,\" he said.\n\nEmmy rolled her eyes. \"I need a drink,\" she said. \"You want anything?\"\n\nCarson felt a little disappointed in that she seemed to be signaling an end to their little make out session. Still, he had hopes it was just the beginning of something bigger and better. He just had to make sure he could find the restraint to take it slow.\n\n\"Yeah, sure,\" he said. \"I'll come along.\"\n\nCarson followed Emmy as she climbed out of the pool and walked over to her towel. For having spent the last hour with her naked, she had been under water for most of the time. Now, after their make out and the attending surge of hormones, he was unable to take his eyes off her. She would never make it a model, but to his eyes she was wonderfully attractive and desirable -- particularly in her self-assuredness.\n\nWatching her towel off was even more enjoyable than watching her walk. The way her curves moved as she touched herself through the terrycloth was riveting. Under his own towel, he tried in vain to calm down his erection that had sprung back to life after almost relaxing prior to exiting the pool.\n\n\"Might want to be careful where you point that thing,\" Emmy said while he was busy toweling off his hair.\n\nCarson flushed with embarrassment when he realized that she was looking at his cock and smiling wryly. He still didn't know where the boundaries of propriety sat between them and was worried that his body had led him over the line.\n\n\"I'm sorry,\" he said, weakly trying to cover himself with his towel.\n\n\"No, no, don't be,\" she said, the tone of her voice abruptly changing to one of guilt. \"I'm sorry. It's rude to point out that sort of thing.\"\n\n\"Just, well, it's not something I can really control,\" he said.\n\n\"I know,\" she said. \"And I'm sorry I said anything. Really, I don't mind. At all.\"\n\nCarson stood frozen as Emmy reached for his towel and tossed it aside on a lounge chair. She looked blatantly at his cock which twitched slightly as it pointed straight at her. Biting her lower lip, she reached out and gently ran the tips of her fingers along the underside of its length. Carson gasped involuntarily at the surge of accompanying sensation.\n\n\"Guess the usual nudist rules don't exactly have to apply right now,\" she said. \"Not when we're alone.\"\n\n\"Does this sort of thing happen often to guys? You know, like at the camps and things you do?\"\n\n\"No,\" she said. \"Well, not real often, anyway. It does once in a while, though, and it's considered rude to make a big deal of it. Usually, it'll settle back down quickly enough. I think it's probably easier for guys to stay relaxed when in bigger groups of people just hanging out than when alone and...well, making out.\"\n\n\"Yeah, I would imagine so,\" he said.\n\nEmmy let her fingers drop from him, though she almost seemed a little reluctant in doing so. \"Sorry, I didn't really mean to get you so worked up. I did want to kiss you. Guess I shouldn't have been surprised at anything else since we are naked and all.\"\n\n\"New experience for me,\" he said.\n\n\"Me too.\"\n\n\"Really?\"\n\n\"Well, the making out part,\" Emmy said. She nodded her head toward the door and led the way back to the house. \"Not that I haven't made out before, but I just haven't done it while naked with a guy.\"\n\n\"So, you haven't had any boyfriends from any of the nudist groups?\"\n\n\"Nah. Couple guys have hit on me and I'm fine with hanging out with them and all, but I wasn't really up for more than that.\"\n\n\"So I'm your first.\"\n\n\"Yup.\"\n\n\"Firsts all around tonight, then.\" In a way, Carson found the revelation to put him much more at ease about the whole nudity aspect of the evening to know they were both in somewhat unfamiliar territory. At least they were doing it together, and so far it was going pretty darn well.\n\nEmmy poured two glasses of lemonade and they both quickly drained and refilled them. Carson leaned casually against one of the kitchen counter tops, marveling at how surreal and yet wonderful this evening had ended up. Three days ago, it idea of pleasantly chit chatting in Emmy's kitchen, both nude, was inconceivable. It was all he could do not to smile uncontrollably at the strange twists of fate.",
        "The sound of a door opening somewhere in the house startled Carson, effectively deflating what little was left of his relaxing erection. Emmy recognized his immediate discomfort and quickly placed a reassuring hand on his arm.\n\n\"Just my parents getting back from their show,\" she said.\n\n\"And they'll be okay with this?\" Even for a family of nudists, he found it difficult to wrap his mind around the idea that the parents of a teenage daughter would be okay with finding her hanging out with a naked boy in the middle of the kitchen. She might be legally an adult, but not by much.\n\n\"Yeah,\" she said. \"Just relax and don't make a big deal of it.\"\n\nEmmy made it sound so easy, but Carson could tell that she understood his discomfort and sympathized. Moments later, her parents walked into the kitchen, still dressed up nicely from their evening out. It required every bit of his nerve to just stand there and act like there was nothing out of sorts while they took in the scene. To his amazement, neither blinked twice.\n\n\"Hello Carson,\" her father said. \"Nice to see you again.\"\n\n\"You too, sir,\" Carson managed to say, giving an abbreviated wave.\n\n\"How did the studying go?\" her mother asked. \n\n\"Went very well,\" Emmy said. \"We got through all the material by dinner.\"\n\n\"That's great,\" her mother said, giving Carson an appreciative smile. \"It was so nice of you to help out, especially this close to finals when you probably have studying of your own to do.\"\n\n\"It was no problem,\" Carson said. \"If anything, it was probably more useful to me than just studying on my own would have been.\"\n\n\"Looks like you two have been enjoying the pool,\" her dad said.\n\n\"Yeah,\" Emmy said. \"I think we're probably done for the night, though.\"\n\n\"Oh, ok,\" he said. \"Your mom and I might take a quick dip, but didn't want to intrude if you two were going to be out there for a while.\"\n\n\"Nah, help yourself.\"\n\nCarson was pretty certain that Emmy's parents would be out there nude as well, so he was relieved that Emmy was going to leave the pool to the two of them. Not that he particularly minded the idea of them skinny dipping, but he wasn't quite sure he was ready to hang out with them socially under those conditions. Not yet, anyway.\n\n\"Well, good to see you again, Carson,\" her dad said. He and his wife proceeded to take their leave.\n\n\"Yeah, you too,\" Carson said, genuinely meaning it. In spite of his initial misgivings about being seen by her parents, they were so friendly and open that he couldn't help but like them.\n\n\"C'mon,\" Emmy said. \"Let's go upstairs.\"\n\n\"What did you have in mind?\"\n\n\"Well, if you're not in a rush to leave, I thought I could show you some photos.\"\n\n\"Sure. What kind of photos?\"\n\n\"Vacation ones, mostly.\"\n\nEmmy flicked her bedroom light on and walked straight over to her dresser to grab a hair brush. She started pulling the brush through her still-damp hair, trying to undo the snarls from swimming before they became a worse mess. Carson waited in the middle of the room, half watching her and half wondering if it would be appropriate for him to put some clothes back on. Nudity in and around the pool was one thing, but being naked in a girl's bedroom was something entirely different.\n\n\"You can turn on my laptop, if you want,\" she said, effectively deflecting him from having to decide whether to dress at least until she made a move to do so first.\n\nCarson walked over to her desk and pressed the power button. While it hummed to life, he couldn't resist taking a peek out the back window over the pool area. Her parents weren't out there yet, nor would they have been unless they had gone straight from the kitchen to the pool, stripping along the way. It was just a little bit of insatiable curiosity that made him look anyway.\n\n\"C'mere,\" Emmy said, laying belly down on her bed and patting the space beside her. A little nervously, he grabbed the laptop and laid down beside her, also face down. Emmy, propped up by her elbows such that her breasts were just freed, took the computer and set it before them.\n\n\"I could tell you're curious as hell about what some of our vacations are like, so I figured I'd get this out of the way so your imagination doesn't get the better of you.\"\n\n\"Thanks, I guess,\" Carson said, a little embarrassed but unable to deny what she said.\n\nEmmy clicked through a couple folders and pulled up a slide-show of pictures from \"camping 10.\" Moments later, they were greeted with a snapshot of Emmy's parents from the top up, sitting at a picnic table with a deck of playing cards and quite nude. As she clicked through the pictures, she described the camping area they frequented in the summers and the sorts of activities they did there. Carson found it all to be very much what he would expect of an ordinary camping trip -- campfires, food, fishing, swimming, volleyball, and so on. The only difference was that most of the people in the pictures were nude. It was almost so pedestrian that Carson found himself hardly judging or getting caught up in that aspect.\n\n\"So that's my older brother, Scott,\" she said, pointing out a tall, skinny guy who was probably a few years her elder. \"He's off studying art in California.\n\n\"And this is my older sister, Camille, and her fianc\u00e9 Rick. They met as physics undergrads at Arizona and are both working toward doctorates now.\"\n\n\"Nice,\" Carson said. He thought her sister was attractive, if entirely unlike Emmy. Camille looked to be about half a foot shorter, a little heavier set, and more fully endowed up top. It was only in their faces that he could see any hint of family resemblance. \"So, I take it Rick was brought into the...lifestyle?\"\n\n\"Yeah, she recruited him to the dark side,\" Emmy said, playfully nudging him on the shoulder.\n\n\"So, I probably have them to thank for your parents' relaxed attitude toward me this evening?\"\n\n\"It probably didn't hurt any, no,\" she said. \"But, honestly, you jumped in a lot faster than he did. I don't think she even told him about her nudist past until they'd been dating for half a year. And it was another year after that before he finally agreed to come along on one of the family trips. Once we got him out of his clothes, though, it was all good. I think he's a lifer now.\"\n\n\"You said they were getting married next month, right?\"\n\n\"Yup. In Arizona. Maybe I'll even ask you to be my date if you play your cards right.\"\n\n\"Mmm, could be fun.\"\n\nEmmy flipped through some more photos, pointing out various friends and acquaintances. She told him several funny stories about their experiences there over the years and it served to give him the sense that she was part of a very close knit family. His family got along pretty well, but there was something about hers that seemed to go well beyond that. Perhaps it was something in the philosophy of nudity that got past the more superficial social barriers.\n\n\"Whoa, what's that?\" Carson reached for the arrow keys when Emmy refused to go back. She pretended to fight him off for a moment before relinquishing control. He skipped back a slide and found a picture of Emmy and another girl of about the same age standing arm in arm, their bodies painted wildly with flowers and other colorful symbols and abstractions.\n\n\"That's my friend, Penny,\" she said.\n\n\"No, the painting,\" Carson said. \"That's pretty cool. Another usual camp activity?\"\n\n\"Not something we do all the time, no,\" she said, clearly a bit embarrassed. \"But once in a while, yeah.\"\n\n\"Cool. It looks good on you.\"\n\n\"Whatever.\"\n\n\"No, really. It's cute. You paint yourself, or does someone else do it?\"\n\n\"You can do it yourself, but it's usually easier to let someone else do most of the work. Penny and I took turns working on each other. And, clearly, she's a much better painter than I am.\"\n\n\"You do that with brushes?\"\n\n\"Sometimes. Or just fingers. Either one works.\"\n\n\"Hmmm...not sure that's an activity I could see myself doing. If I were to ever, you know, go along to something like this.\"\n\n\"Why not?\"\n\n\"Well, I'd want to be running my fingers all over you,\" he said, blushing. \"And, that would probably result in me reacting a little indecently.\"\n\n\"Oh, I see,\" she said, teasing him. \"You'd be into the finger painting?\"\n\n\"Maybe. Probably.\"\n\n\"And what would you paint on me?\" Emmy rolled back to her side so she could see him better, exposing her front side to him in the process. He tried not to let his eyes wander down too far.\n\n\"I don't know,\" he stammered. \"The flowers looked nice on you. Maybe just swirls and stuff.\"\n\n\"Hang on,\" she said, and rolled completely off the bed. She grabbed a bottle of lotion from her dresser and returned to the bed, handing it to him.\n\n\"What's this for?\" he asked.\n\n\"It's not paint, but show me what you'd paint on me,\" she said, laying flat on her back beside him. He sensed that she was just a little bit nervous, though that did little to ease his nerves.\n\n\"You serious?\"\n\nShe nodded and watched him expectantly. Carson sat upright and squirted a large glob of the white lotion into the palm of his hand. He then set aside the bottle, dipped his forefinger in it, and started by drawing a nice, safe, wavy line from her sternum to her navel. Her belly quivered just a bit at his touch, but she kept smiling.\n\nIt was obvious to Carson that there were strong sexual undertones to Emmy's desire to have him touch her. She had, after all, already touched his erect cock. They had only shared a first kiss less than an hour earlier, though, and he was far from certain what sort of boundaries he was working under. While she seemed rather confident talking about sex, he had the impression that she was possibly as inexperienced in that arena as he. The last thing he wanted to do to this budding relationship was to ruin it. \n\nHe continued to draw simple geometric patterns on her body -- mostly on her stomach, but also her thighs, shoulders, and even her cheeks. The mere act of touching her body caused him to become aroused again, bringing further embarrassment, but she paid it no notice. He had to keep reminding himself that this was her idea and that she wanted his hands touching her.\n\nFinally, he summoned up the courage to be a little bit more intimate. He dabbed his finger in the lotion and used it to draw flower petals around one of her breasts. When he finished the circuit, he dotted the middle by placing a glob right on her hard nipple. She giggled, a wonderful and happy sound to his ears and conscience.\n\n\"You have some mad artistic skills there,\" she said.\n\n\"It's all in the canvas,\" he replied. \"And the muse.\"\n\n\"You gonna fill up the rest of the canvas, or are you just gonna stare at what you've already got done?\"\n\nCarson blushed slightly, but was greatly relieved that there was a sense of growing comfort between them. Somehow, they seemed to be skirting along through the awkward territory of new love and stark nudity without screwing anything up. He was still careful not to blow it and painted her other breast as a big smiley face with her other nipple standing in as the nose.\n\n\"I might have you replace Penny in any future body painting,\" she said.\n\n\"That almost sounds like an invitation,\" he said.\n\n\"Might turn into one if you don't watch it. You're skinny dipping with your lab partner one night and the next thing you know you're spending every weekend at a nudist beach preaching about the failure of a prudish culture.\"\n\n\"Maybe we can just stick to the skinny dipping for a while.\"\n\n\"For now,\" she said, though not without considerable meaning. He found it very exciting, however, to think that she was professing an ongoing interest in him, reflecting the very feelings he had for her. \"Now, maybe you should rub in your artwork so my parents aren't wondering just what the hell we were up to in my room.\"\n\nCarson started rubbing the lotion around and into her skin. There was so much of it, however, that he had to frequently rub it onto her arms and legs where he hadn't previously drawn anything. It was a combination of clean up job and sensual massage, because he took his time rubbing her skin with gentle caresses that she seemed to enjoy immensely.\n\nAfter rubbing in the majority of the lotion from her legs and tummy, he leaned forward to rub in the dabs that he'd placed on her cheeks. He spread it over the hard curves of her smile and then down her chin and around her neck. When he finished with the face, he bent over her to kiss her gently. She kissed back for a good minute before pausing to remind him that he wasn't finished yet.\n\nAll that was remained was the flower and the smiley face around each breast. He'd intentionally left these for last. Starting with the smiley face, Carson streaked the lotion across her breast first in one direction and then the other, leaving behind something of a messy checkerboard. Unable to resist any longer, he placed his entire hand over her breast and massaged it lovingly. The flesh was warm and soft under his hand, yielding to his gentle pressure. Her nipple strained at the stimulation, and he ran his fingers over and around it, eliciting silent gasps from Emmy.\n\nUnder his attention, she had closed her eyes and her smile had vanished. It its place was the unmistakable look of arousal and pleasure. Her breathing was becoming shallow and quicker and her hands and feet moved unconsciously.\n\nCarson brought his other hand to the remaining untouched breast and rubbed the last of the lotion into her skin. Soon, both hands were rubbing her breasts in perfect tandem, and Emmy let out a faint but unmistakable moan. Her eyes snapped open when that happened and she gave him a helpless smile.\n\n\"Kiss me,\" she demanded, beckoning him closer with a curled finger.\n\nCarson rose to his knees, no longer bothered by the way his erection flaunted itself in her direction, and leaned into her waiting lips. Her mouth opened wide at the contact and their tongues mashed together in a frantic release of pent up passion. With the one hand not supporting his own weight, he resumed massaging her breasts, further driving her enthusiasm.\n\nAfter several minutes, Carson grew bolder and began kissing his way to her earlobe and then down her neck. Encouraged by her soft moans and the way she was now rubbing his back, he continued to kiss lower and lower until he was flirting around her breasts. Without any sign of resistance from her, he finally reached one of her nipples, kissing and then sucking it into his mouth.\n\nIf Emmy's moaning wasn't enough of a hint that she was enjoying his attention, Carson got the point when he felt her fingertips trace along the length of his erection. The touch was so unexpected that it sent a shock wave through his entire nervous system. He did his best to continue licking and kissing each of her nipples in turn, but it was difficult to focus with her running her hand up and down his cock and then cupping his balls. She wasn't trying to get him off, but he was so aroused that it wasn't impossible to imagine it happening spontaneously at any moment.\n\nEventually, Emmy removed her hand from his cock and he took that opportunity to lay beside her. She rolled into him and they resumed kissing for a while, restraining their hands to gently rubbing each other's back. Carson was painfully aware that his erection was now pressed up against her pubic bone, scant inches away from having sex. His body was screaming at him to get on with it, but the last lingering remnants of his conscious mind told him that he'd better not.\n\nEmmy draped one of her legs over his, somehow drawing them even closer together. Carson, with his free hand, moved from rubbing her back to massaging her butt. With her leg splayed over him, he soon realized her pussy was very accessible. Tentatively, he rubbed closer and closer until he could feel the heat radiating from her sex. Not meeting any resistance, he closed the final fraction of an inch and ran his fingers across the swollen, slippery folds of her pussy.\n\nEmmy gasped and moaned at the touch of his fingers, then spread her legs wider to allow him easier access. This being his first time touching a girl so intimately, Carson took his time getting a lay of the land. As her breathing became increasingly labored, he inserted one and then two fingers deep inside, to which she responded by pushing against his hand as if eager for more. He then played his thumb across what he hoped was her clitoris, alternating between quick oscillations and slow, gentle circling.\n\nAfter several minutes of kissing and fondling Emmy, Carson felt her begin to roll back from him, forcing him to disengage from her sex. He was momentarily afraid that he might have gone too far, but the dreamy expression on her face allayed his fears. She darted back in to give him a ferocious, penetrating kiss before rolling back again.\n\n\"That was nice,\" she said. \"Really, really nice.\"\n\n\"Thanks,\" he said. \"You're welcome. First time, really, so I'm glad I didn't totally screw up.\"\n\n\"Not in the slightest.\"\n\nThey laid there, facing one another and scant inches apart, for a blissful minute or more. They simply looked in each other's eyes and smiled. Carson, unable to resist, reached out to brush a stray lock of hair back from her forehead and then caress her cheek.\n\n\"What are you thinking?\" she asked.\n\n\"Two things,\" Carson said after giving it a moment's thought.\n\n\"Tell me.\"\n\n\"Well, first, I'm thinking how incredibly wonderful you are and how lucky I am to be here right now with you.\"\n\n\"Aww.\" She leaned in to kiss him again. \"And the other?\"\n\n\"That this is exactly the sort of thing that makes most guys nervous about being naked in public. That I'd see a girl I liked and, well, not be able to control myself.\"\n\nEmmy giggled. \"Well, I'm pretty sure if we were down by the pool with my parents right now, this wouldn't be happening.\"\n\n\"No, I'm sure it wouldn't.\"\n\n\"To be fair, though, you're probably right in a sense. If we hadn't been nude tonight, I'm pretty sure we wouldn't have been quite so...intimate.\"\n\nCarson felt a bit guilty when she said that. \"I'm sorry. Did I push it too far?\"\n\n\"God, no,\" Emmy said, reaching out to grasp his still erect cock. \"No. I certainly didn't do anything I didn't want to, and I hope I didn't come on too strong with you.\"\n\n\"Not at all,\" he said sheepishly.\n\n\"If anything, I think being nude simply forced us to be more open and honest with each other sooner than we might otherwise have been.\"\n\n\"Just wish we'd opened up earlier in the semester,\" Carson said. He kissed her passionately in response to the attention she was giving him.\n\n\"Guess we'll have to make up for lost time this summer,\" she said between kisses.\n\nThey broke off the kiss at the sound of a door shutting downstairs. Carson felt the mood fleeing at the presence of her parents in the house. He might almost be able to wrap his mind around them being comfortable with him and their daughter hanging out in the buff together, but he was pretty sure they wouldn't take too kindly to finding them making out.\n\nEmmy released him and rolled onto her back so she could peer over at the clock on her nightstand. She sighed and looked back at him apologetically.\n\n\"Think we may have to call this a night,\" she said. \"We're driving up north tomorrow and have to be on the road by six.\"\n\n\"Ouch.\"\n\n\"And their room is just at the end of the hall.\"\n\n\"No worries,\" he said. He would be lying to say he wasn't disappointed, but the promise of so much more left him giddy. \n\n\"You said you were gone for the weekend. When can I see you again?\"\n\n\"Next week is finals, so I'm sure we'll both be busy,\" she said. \"But, I imagine we'll manage to find some time. And until then, you do have my number.\"\n\nCarson dressed, retrieved his damp suit from the bathroom, and packed his backpack. Emmy followed and they chatted idly about her weekend trip back to her old hometown to attend her best friend Penny's graduation party.",
        "\"She's the one from the picture, right?\"\n\n\"That's her,\" Emmy said. \"Maybe I'll subject you to meeting her someday.\"\n\n\"Subject me? Sounds ominous.\"\n\n\"She's my opposite in some respects. For starters, she's an insatiable flirt, has a mouth like a sailor, and isn't afraid to tell a guy exactly what she'd like him to do to her, or what she'd like to do with him.\"\n\n\"Okaaay.\"\n\n\"She'll be here next weekend for my party, if you're feeling brave.\"\n\n\"Will I need to bring back up?\"\n\n\"Actually, that might be a good idea,\" Emmy said with a smile. \"Is your voyeur buddy attached?\"\n\nCarson shook his head no. \"And I don't think it'd take much convincing to get him to come along.\"\n\nEmmy, still nude, took his hand and led him downstairs to the front door. They passed her parents' room, hearing only muffled talking behind the closed door. Carson was a little relieved not to have to confront them again, especially if they might have been undressed. Maybe next time he'd be ready for that.\n\nThey stepped out onto the covered porch and closed the door, leaving them in near total darkness. Only a couple distant lights indicated the presence of neighbors' houses through the trees, and these were joined by twinkling stars and a sliver of crescent moon to punctuate the blanket of nighttime. He would have to be careful just walking to his car parked near the end of their driveway.\n\nEmmy moved in front of him, taking his other hand, and raised on her tip toes to kiss him. He parted his lips to permit her eager tongue. Facing a long weekend away from her, he soaked in every detail -- from the taste of her lips to the smell of her hair and the soft peach fuzz in the small of her back -- memories that would get him through the absence. Or, more likely, distract him immensely from studying for exams.\n\nWhen he felt Emmy brush his reinvigorated cock through his shorts, he allowed himself to cup her breasts again. Her nipples quickly hardened between his fingers and she grasped him more firmly in response.\n\n\"Carson?\" she asked, breaking off their kiss but not relinquishing her hold.\n\n\"Yeah?\"\n\n\"This is kinda embarrassing, but I want to ask you something.\"\n\n\"Uh, okay, sure.\" He couldn't imagine what sort of question could embarrass a girl who had no qualms standing on her front porch completely naked.\n\n\"Do you have blue balls?\" He could sense the embarrassment in her voice, tempered with genuine curiosity and concern.\n\n\"Uh...\"\n\n\"I don't know why I asked. Penny told me that with one of her first boyfriends, before they were, you know, doing the deed, they would make out so long that the guy would get really sore. Once she started finishing him off, he didn't have that problem anymore.\"\n\nCarson smiled at her explanation. He reached down and wrapped his hand around the one she was using to tease his erection. He guided her fingers around until they cupped his testicles. They were, indeed, a bit tender, though he'd had worse with a previous girlfriend who'd refused to go any further than petting with clothes on.\n\n\"They're a little sore,\" he said. \"Not too bad, though, and certainly worth the effort.\"\n\n\"I'm sorry,\" she said. \"Guess I don't have much experience with that sort of thing.\"\n\n\"Don't worry about it.\"\n\nCarson felt Emmy free her hand from under his and unzip his shorts. She pulled his shorts and briefs down just far enough for his erection to pop out into the mild summer breeze. Gently, she stroked his length with alternating hands.\n\nEmmy leaned in close, kissed his neck, and then whispered in his ear. \"Don't tell me what not to worry about.\"\n\nShe knelt in front of him and kissed the bulging tip of his cock. In the near total darkness, Carson could scarcely make out anything, so he closed his eyes and focused purely on the physical sensation. Her initial efforts were tentative, perhaps inexperienced, but she soon moved from kissing and licking to taking most of his length inside her mouth. She alternated with holding him firm while using her tongue and sliding him quickly in and out while relying on her lips to stimulate him.\n\nAfter a couple short minutes, Carson could feel himself blazing toward release. He grunted an almost incomprehensible warning to Emmy. In response, she latched onto him firmly with her mouth and with her hand stroked the base of his cock until he came in her mouth. He felt her pull back without disengaging, swallow, and then massage the remaining semen from him with long strokes of her tongue.\n\nShe took her time bringing him back down, gently licking and stroking as he softened slightly. His legs were shaking and he had to run his fingers through her hair and hold her head for support. He reflected on what an amazing sensation it had been, and he could hardly wait until they could try it again where it was light enough to see her beautiful eyes look back up at him.\n\n\"Feel a little better?\" she asked as she stood and snuggled into his embrace.\n\n\"Fantastic. Thanks.\"\n\n\"My pleasure.\"\n\nThey kissed for several more minutes, each seemingly reluctant to be the one to call it a night. Eventually, though, they finally separated and said their farewells.\n\n\"So, maybe Monday night?\" Carson said, turning back to her as he was halfway to his car.\n\n\"It's a date,\" she said. \"And, maybe just for this next date, we could try wearing clothes.\"\n\n\"Kinky. As long as you're there, though, I don't care what you're wearing.\"\n\n\"Or not.\"\n\nThey shared a laugh. As Carson started his car, he caught one last glimpse of Emmy in silhouette as she opened the front door and turned to wave goodbye. Focusing on his studies was going to be hell. "
    ],
    "authorname": "WatchingCloud",
    "tags": [
        "nudist",
        "class",
        "student",
        "study",
        "swimming",
        "pool",
        "lotion",
        "blowjob",
        "first time"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-class-nudist"
}