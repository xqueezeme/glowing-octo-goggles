{
    "title": "How To Use Erotic Hypnosis",
    "pages": [
        "All of my stories have elements of \"how to.\" This is a short description of how to use simple erotic hypnosis. It will not make you an accomplished hypnotist. If you like the article, vote. Fives are appreciated. \n\n* * * * *\n\nErotic Hypnosis can make sex even more fun than you already know about. It is very erotic to be either directed or do the directing. Especially if the actions are without prejudgment. First, let me make one thing very clear. You will not do what I do in my stories. \n\nWhat you will do is take most of the anxiety out of sex. Men or women can take either role and, indeed, can rotate roles. Everything you do must be done with consent. The consent will be to start the process. You do not stop in the middle and ask further permission. Let\u2019s begin.\n\nFirst. You discuss the program with your sex partner. You get an agreement that you will be the hypnotist and the partner will be the subject. It is a given that you and your partner will not be experienced with hypnosis. This article will not make you an accomplished hypnotist. That might happen, but that will be as a result of your efforts and not just this article. Some of the things you will discuss are what will happen and will I do anything that I am against doing?\n\nWell, the answer to that is complicated. If you remember my stories, I frequently have the hypnotist \u201ccontrolling\u201d someone who doesn\u2019t realize they are hypnotized. I certainly have done that. But, the person did nothing they really didn\u2019t want to do at an unconscious level. As a writer I have the privilege of assuming everyone will behave as I expect. You have an advantage, also. The person you will be hypnotizing is already a lover of yours. If there are things that haven\u2019t happened, it may just be inhibition or shyness. What you will discuss is that nobody can be made to do something they are truly against. Hurting a child, suicide, or sex with a stranger (unless that is a secret desire). In my stories the subject, unconsciously wants to have exciting sex - even with a stranger. Your lover would probably not be happy if you brought a stranger to the party, unless that was part of the plan that was discussed. \n\nWhat you can do and should discuss is speeding up and magnifying orgasms. Making the body parts more sensitive. You will be able to either speed up or slow down your lovemaking. The most important part of the discussion is establishing a comfort level. You don\u2019t want your subject anxious. It won\u2019t work.\n\nSecond. Have the subject sit in a very comfortable chair. In my stories I use a number of techniques that involve standing. Those methods work, but they are not for the novice. Establish that the subject is comfortable. The subject should be wearing loose clothing (or no clothing - in a warm room) to increase comfort. There are several methods that you can use to induce a trance. You are dealing with a willing subject, so they should all work. All of the methods take enormous patience and confidence. Hypnosis does not happen quickly the first time. Again, my stories assume perfect conditions and a very accomplished hypnotist.\n\nOne method is to have the subject stare at your finger from about five feet. You bring your finger to the subjects nose, repeating that the subject is going into a deeper trance as the finger gets closer. When the finger touches the nose the subject\u2019s eyes will close. You should take five minutes moving your finger. That is very slow! What makes this system work is the subjects eyes will begin to cross making closing the eyes desirable. It will have the feel of an involuntary act which is important in advancing the trance. Everything you do is designed to build credibility with the subject. Once you convince the subject that you have made it difficult for them to move a part of their body, a deep trance will follow. Incidentally, only 20% of the population are somnambulists and won\u2019t remember what happened under the trance. You should assume the subject will remember everything. It really will not change the benefits of the erotic hypnosis.\n\nAnother method to get to the same stage is to start with the eyes closed and have every part of the body relax and become limp. Use any order you are comfortable with, but do the whole body.\n\n\u201cYour head is heavy, very heavy. Your neck is limp. Your head is falling onto your chest. Your arms are heavy, limp and relaxed. Your legs are limp and relaxed. Your whole body is very relaxed and completely limp.\u201d Just make each discussion of the body part MUCH longer. The process should take 5 - 10 minutes.\n\nThird. Now that the subject\u2019s body is relaxed from one of the two methods, you need to deepen the trance and set the mood. \u201cAs I talk to you your trance is deepening. You are feeling aroused as you listen to my voice. You are imagining me caressing your body and your trance is deepening.\u201d Keep that up for several minutes and watch for small changes in the subject\u2019s body. The limbs should become a little more limp.\n\n\u201cI am going to count to twenty five. With each number your trance will get deeper. As your trance gets deeper you will feel a tingling in your vagina/penis.\u201d Later you can suggest the subject is either getting wet or erect. Count slowly, repeating the instruction that the trance is getting deeper and the subject is getting more aroused. When you get to twenty five, tell the subject that they are now in a deep trance. Lift an arm and drop it. Does it drop as if it wasn\u2019t attached to the body? It should. If the dropping of the arm seems like the person is controlling the limb, go back to the relaxation mantra and try again.\n\nIt is possible that your subject will not get any deeper than they are at this point. You can still use the power of suggestion to improve your sex experience.\n\nFourth. You are now going to make suggestions about sexual conduct. For illustration only, I am going to assume the hypnotist is a man and the subject a woman. I am also going to assume that the parties will not be insulted by street language. Using the words: cunt, cock, pussy, fuck, blow job, tit, etc., can be a turn on to many people. You use such words for shock effect. Many men or women feel sexy if they imagine they are being \u201cnaughty\u201d without being in control. That is why the power of suggestion works so well in erotic hypnosis. The subject wants to be relieved of her moral limitations. Her mother always told her that you never do what the hypnotist is ordering. The subject decides she has no choice but to do it. A blow job or photographs or doggy position, whatever.\n\nNow you start making sexual suggestions, while still deepening the control. \u201cTake your pants of and rub your cunt. As you get more aroused, your trance will deepen.\u201d You continue that as long as it seems to be working. Look for signs of increased arousal. In a man, an erection. In a woman, increased moisture in the vagina, flushing and deep breathing. Keep it up as long as the arousal deepens. Tell her that she will not have an orgasm until you say so. The power of suggestion works very well with masturbation. You are authorizing what would be forbidden fruit to many people. You can have your partner masturbate herself close to an orgasm and finish her with intercourse, instructing her to cum when you do. It works!\n\nI suggest you repeat this process many times before attempting to advance. You will know if your partner is responding to the suggestions. Try involuntary commands. During the early sessions you always end with the command: \u201cWhenever I tell you to sleep, you will go into a deeper trance.\u201d Always do it. Now you are going to see if it is working. You say, \u201cSleep!\u201d If the subject stops what she is doing and goes into a trance you have a good beginning. Don\u2019t try this until you are comfortable with the process. You don\u2019t have to ever get to this stage to get benefit from erotic hypnosis. Directed sex is pleasurable and works. Many people will react to the sleep command out of a desire to please. That is all right. Much of hypnosis is based on a desire to please the hypnotist. \n\nIf you have arrived at this stage you can try to be more adventuress. One thing that has worked for me is changing the taste of the ejaculation. You need a good subject for that trick. You can certainly create an environment. A desert island, or any place where the environment would promote enjoyment of sex. I once created a whore house and had my partner be the whore. She loved it. No inhibitions. You can have your partner imagine you are a sex symbol, Mark McGuire, whoever. \n\nUsing erotic hypnosis you should be able to get your partner to do things to please you that were not considered before. It is easier for you to say the things that will please you and it is easier for your partner to do them without conditions. It adds eroticism to the experience. Good luck.\n\n* * * * *\n\nIf you enjoyed the article, vote. Fives are appreciated. "
    ],
    "authorname": "masterhypnotist",
    "tags": [
        "erotic hypnosis",
        "subject body",
        "trance deepening",
        "fives appreciated",
        "trance deeper",
        "sex stranger",
        "vote fives",
        "deeper trance",
        "make sex",
        "body relaxed"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-use-erotic-hypnosis"
}