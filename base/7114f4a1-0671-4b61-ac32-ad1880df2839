{
    "title": "Hubris of Youth Pt. 02",
    "pages": [
        "Several readers asked for more, so here it is. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"Oh, my god, Nick! Where did you learn that?!\" Savannah gasped. A smile of wonder covered her face. I rolled off her, pulling my rubber-clad cock out of her with a 'pop'. \n\n\"It's a secret,\" I replied, settling back. \"Can I trust you?\" \n\n\"I never reveal a source,\" she giggled. \n\n\"Okay,\" I nodded. \"It's part ex-girlfriend, part instructional videos.\" \n\n\"Instructional videos, huh?\" she smiled, still breathing hard. \"Maybe we can watch a few of those together.\"\n\nMy eyes naturally fell on her heaving breasts. I was really enjoying them. I'd always been a boob fancier, often choosing my 'instructional video' based on the actress's rack, but hadn't ever dreamt of being with a woman so bountifully endowed. \n\nOkay. That's not true. I had dreamt of it, but never actually thought it would come to fruition. Now that it had, I was in heaven. When we had talked about her augmentation, she told me her philosophy on it. \n\n\"I figured if I was going to do it, I might as well do it right,\" she had said. \"Go big, or go home. I always wanted to be bigger, and now I am.\" \n\nOf that there was no doubt. So deliciously big, full and round. I still marvel that her jogging bra could contain all that magnificence. \n\nWe had been an item for only a few days, and she had a birthday coming up in a few more, so I was hoping to get her something nice. Unfortunately, the only things I really knew about her, other than our first conversation, revolved around her bedroom. I had no idea what gift I could give that might touch her heart, so I was going to start with a nice dinner out. Maybe a movie. Hopefully, I would figure something out before her birthday. \n\nUntil then, we would just continue to explore each other physically. With that in mind, I laid back and let her climb aboard. She reached under herself, and guided my cock back inside her. \n\n\"Mmmmm, Nick, that's the way I like it,\" she smiled, undulating her hips to settle onto my stiff shaft. Once fully impaled, she leaned forward, resting her boobs on me, and eyeing me from close range. \"Would you like to come down to the studio, today?\" she asked, tracing my nose with her fingertip. \"You might find it interesting, the whole 'behind the scenes' routine of a TV show. You can meet some of my co-workers, watch the broadcast from the set, that sort of thing. Then we can go to dinner.\"\n\n\"I'd like that,\" I whispered, accepting her soft kisses. \"It sounds like fun.\" \n\n\"You know,\" she smiled, this one with a naughty curl to her lips, \"I have a private dressing room.\" She let the comment stand on its own, for me to take any way I wanted. \n\n\"Why Savannah Lynch? You bad girl! Just how many innocent men have fallen into your clutches, and visited your dressing room?\" I laughed, patting her rump playfully. \n\nShe sat up, slowly fucking herself on my cock. \n\n\"Hmmm, let's see,\" she purred, \"How many men? Plenty, although I'm not sure any of them were innocent. Certainly, not after I was done with them. As for how many have visited my dressing room?... Well, that is a list of one. Just you.\" \n\nI looked up at her, peering into those fabulous blue eyes of hers. Just me? I suppose that's a sign, isn't it? I started this with the thought that I wanted more than just a roll in the hay, and a story for my buddies to banter about, and now I had the first indication that she felt the same way. \n\nI reached up, and pulled her back down, meeting her lips with my own. This was a kiss of escalating passion, and within seconds we were pawing each other in desperate need. More than just the physical act, we had both let down an internal wall of protection, and were allowing our emotions to mix on a deeper level. \n\nSavannah was still grinding her cunt on my cock, and I was thrusting up into her, all while we maintained the kiss. She wrapped her body tight to mine, and rolled us over, then pulled away for an instant. \n\n\"Fuck me, honey,\" she urged, in a voice dripping with desire. Her legs were lifted higher, and she crossed them behind my back. \"Fuck my pussy deep.\"\n\nI was feeling the same way. There was something different about this. Something somehow more intimate. Fuck you? Absolutely. \n\nI kissed her throat, and drilled into her receptive vagina, reveling in the heat and wetness of the tight opening. She was my dream girl, even if she passed the 'girl' stage years ago. \n\n\"Unff! Unff! Unff! Yes! God yes! You're so good for me, baby!\" she moaned, as I continued to pound her pussy. She held me tight, absorbing the thrusts with little puffs and grunts, while I nibbled on her neck and collarbone. She was obviously enjoying it, as was I. \n\nI felt her perfectly manicured nails digging into my ass, along with her heels. Spurred on by those requests, I upped the pace, slamming my cock into her harder and harder. Her vocalizations grew louder, and more direct. \n\n\"YES! OH GOD YESSSS! FUCK ME HARDER!\" she screamed. \n\nIn order to do that, I needed to rise up on my arms, and she reluctantly let me establish my perch. Now I could really drive my hips home, and answered her requests. \n\n\"AIIIIEEE! AIIIIEEE! AIIIIEEE!\" she yelped, her face contorted in a mixture of pain and pleasure. \"YESSSS! LIKE THAT! POUND MY CUNT! FUCK ME WITH THAT BIG COCK! I LOVE IT! I'M CUMMING, BABY! I'M CUMMING!\"\n\nI watched her face as she came, twisting her body in movements of agonized bliss, while I kept hammering into her. Of course, in this position, her face wasn't my only focal point, and I found my gaze falling to her huge, swinging breasts, which were doing their own dance of joy. Her nipples were standing tall, and puckered tight, and a pink flush grew on her neck and chest. Yep, she was cumming alright, and I was going to be close behind her. \n\nShe stopped arching and twisting, as her body went limp, allowing her legs to drop away with a 'thud' to the mattress. I thought she might have passed out, but she was smiling, and muttering sweet nothings. \n\n\"Oh god, so good,\" she whispered, among other things. \n\nWith the knowledge that I hadn't killed her, I set to my own, selfish task, and stroked into her juicy cunt eagerly. Seconds later, I exploded, filling the condom with hot semen. She moaned, and wrapped her arms around me. \n\nWe lay like this for a few minutes, panting and sweating in a tangle of limbs. I tried to keep most of my weight on elbows and knees, but eventually she needed me to move. I rolled off. She turned on her side to face me. \n\n\"Um, wow,\" she giggled, dragging her nails across my sweaty chest. \"I mean, wow, a girl could get used to that kind of treatment. That was just... Wow.\" \n\n\"A professional journalist, reduced to 'wow'? Is that a compliment, or do you just need your teleprompter?\" I laughed. \n\n\"Wouldn't help anyway,\" she responded quickly. \"After that orgasm, I couldn't read it.\" She patted my chest. \"Wow.\" \n\nThat started us laughing, and the bedroom filled with happy sounds. Happy enough to attract the attention of someone else. A small face and two paws appeared at the edge of the bed. \n\n\"Sox! How are you, little one?\" Savannah smiled, reaching down to scoop the small dog onto the bed. \"Daddy and I are done having fun,\" she giggled, glancing at me, \"for now, at least. Hello, little girl!\" \n\nSox immediately did what beagles do best, sniffing everything in sight, and licking whatever smelled good. Savannah covered her pussy with a hand, blocking Sox's access. \n\n\"I think your dog is a lesbian,\" Savannah laughed, as she tried to protect her nipples as well. \"This is not the threesome I envisioned.\" \n\n\"Sox. Off please,\" I said, causing a pause and a tilted head from her. \"Off, please,\" I repeated, and pointed. She reluctantly jumped down, and wandered out of the bedroom. \n\n\"So...\" I smiled, turning to face her, \"... tell me about this threesome thing, as you envisioned it.\"\n\nSavannah Lynch, co-anchor of the six o'clock news, was quite clear, detailed and eloquent as she described the aforementioned threesome, as though it was a real event. It was, um, wow, and resulted in my cock rising once again to the occasion, but I suppose that was the idea. \n\nGood thing she had lots of rubbers in her bedside cabinet. \n\n***\n\nLater that afternoon, I went home with Sox to get changed, and drop he dog at home. My mother was there to greet me with a wry, knowing smile. \n\nIt was, to say the least, strange to have Mom know about Savannah and me. It was made even stranger by Mom's repeated messages to my new lady. \n\n\"Tell Savannah she's lucky,\" she had said. \"Say hi to Savannah for me,\" another time. Similar platitudes were dispatched, every time I went to meet her. It was weird. \n\nToday, I dressed nice, and waited for her to arrive. She was picking me up any minute now. \n\nI heard the crunching of tires on gravel, and a distant beep, which signalled her presence. I gave Sox a treat, and made my way out, locking the door behind me. \n\nIn our brief time together, I had driven my car to meet her at the studio on our first real date. Every other meeting had been on foot, at her place, so I had no idea what vehicle would be waiting for me in the driveway. As I turned the corner around the garage and walked into view, she surprised me again. \n\nI was expecting... I don't know... maybe a Beamer, or a little Mercedes. Something elegant, but sporty. What I was not expecting was a muscle car, or for her to be standing beside it, with the passenger door open, and one foot inside. \n\n\"Savannah! What's this?!\" I laughed, walking around to her side. She didn't say anything, just looked at me expectantly. \"Oh, right. First things first. Hi, honey. You look fabulous,\" I back-peddled, and leaned in for a kiss. The car door kept me from hugging her properly, but I made an effort. \n\n\"That's better,\" she giggled. \"Hi baby.\"\n\n\"Now, what's this?\" I repeated, stepping back to take in the whole view. \"You could have told me. After all... You've seen mine.\" \n\nI was intending to reference the fact that she had seen my car; My 1967 Mustang, which I had resurrected from the auto graveyard with my own two hands. What came out was a blatant and clumsy sexual reference. She laughed. \n\n\"Yes,\" she smiled, when she finished chuckling. \"Yes, I have, and you've seen mine.\" She adjusted her bra theatrically, to return the flirt. \"Now you've seen my car, too. What do you think, mister mechanic?\"\n\n\"Hmmmm,\" I smiled, looking at the grill. \"2015 Dodge Challenger. Very nice.\" I pointed to the badge on the hood. \"Hemi 392. That's a lot of power, for such an elegant lady. Love the colour.\" \n\n\"Me, too,\" she giggled. \"Jazz blue pearl, they call it. Really pops in the sunlight. You drive. You know the way.\"\n\nI walked around to the driver's side, and slipped behind the wheel. The door closed with a satisfying 'thud', and when I turned the key, that monster Hemi engine rumbled to life. \n\n\"Oooooooooo,\" I smiled. \n\n\"Ooooo, indeed,\" she smiled back. \"It makes me wet. Love that sound.\"\n\nI pulled out of the driveway, and off we went for the half-hour drive to her studio. Along the way, she said little, comfortable with the silence. \n\nI found the whole situation amusing. Consider this; I was in a relationship with an older woman, and I drove an older classic car. Appropriate. That older woman had been surgically updated for the modern world, and her choice in cars?... well, an updated version of an older classic, of course. God must have a sense of humour. \n\nPulling into the studio parking lot, Savannah pointed me to her spot. There, on the curb, was a marker. 'Reserved S. Lynch' it said, with a little star beside it. Seeing the studio for the first time in the daylight, I wasn't overly impressed. There was little to indicate what was inside the plain, concrete and brick structure, at least on this side. Maybe the front entrance was more impressive? \n\nSavannah took my arm, and walked me in, through the back door and down a plain hallway, which led to the front lobby. At last, we arrived at the public entrance. \n\n\"Hi, Marcy,\" she smiled, as we stopped in front of the large reception desk. \n\nThe petite brunette behind the desk looked up, and smiled in response. \n\n\"Ms. Lynch! Nice to see you. What can I do for you?\" \n\n\"I was hoping you had a Visitor's badge back there, for my friend. He's going to watch from the background tonight,\" Savannah replied. \n\n\"Of course,\" Marcy grinned, opening a drawer and coming out with a card on a lanyard. \"Can't have security tossing you out, can we? If you need anything else, please let me know.\" I assumed the last bit was meant for Savannah, but Marcy was looking at me when she said it. \n\nWith the pass around my neck, Savannah led me through a set of double doors, into the studio area. Now I understood why the outside of the building was so plain and featureless, with so few windows. There was a whole other building inside. \n\nJust as your stainless-steel coffee mug has inner and outer walls to stop the transfer of heat, the studio was actually a room inside a room, inside a room, inside the building. The multiple layers insulated the broadcast area from extraneous, outside noise, as well as the sounds of other areas of the building. Between layers were storage and office spaces, as well as the dressing rooms and control booths. At last, another set of doors opened, and we were inside the set. \n\nIt was surprisingly small and cramped, with one side of the room filled with cameras, boom microphones, and other technical equipment. At least the rest of the area looked familiar. \n\n\"Ah. The desk,\" I laughed. \"It looks a little more frail in person. Does the camera add ten pounds to the desk, too?\" \n\n\"Ha ha, smartass!\" she giggled, taking her usual place standing behind the glass top. \"It's not built for strength.\"\n\n\"I'll say. It looks like it would collapse about thirty seconds in,\" I grinned mischievously. \n\n\"Thirty seconds? What?\" she asked, before the lightbulb went off. \"Oh! Ooooo, aren't you being bad! No, I don't think it would hold up either, but I do have a nice little couch in my dressing room that has never been christened,\" she winked. \"Besides, too many cameras in here. I'm not looking for that much publicity. The name's Lynch, not Kardashian.\" She stepped over to me, and kissed me softly. \n\n\"Ahem,\" a gruff, disembodied voice said from above. It echoed through the silence. \"I can see you.\" \n\n\"Is that God, or Santa Claus?\" I asked. \n\n\"Neither,\" she laughed, and tipped her head back. \"It's my director, Ken. Hi, Ken.\" \n\n\"Good afternoon, Savannah,\" the voice answered. \"Going to introduce me to your friend?\" \n\n\"Ken, meet Nick,\" she complied. \"Nick, meet Ken's voice.\"\n\n\"Hi, Ken,\" I smiled. \"Nice to, um, hear you.\"\n\n\"You, too,\" the voice said. \"We'll meet properly, later.\" \n\n\"That's great, Ken. Do you have anything important to say, or were you just spying on us?\" Savannah said, in the general direction of no one. \n\n\"Nope. Just thought I'd let you know you weren't alone. Next time, I'll wait until it gets more interesting,\" the voice laughed. \n\n\"Bye Ken,\" she giggled, and snuggled into my chest. Isolated from the outside world, it was so quiet in here every little sound seemed to echo. Breathing, the swish of hands on fabric, and even our combined heartbeats pierced the vacuum. \"Wanna try that couch?\" she whispered. \n\nI nodded, and she took my hand, leading me out of the studio. Along the way, we were met by numerous other staff members, both male and female, who greeted Savannah with smiles while giving me a quick inspection. Their expressions leaned towards surprise, but also acceptance. We finally stopped in front of a door, emblazoned with her name. This star was bigger than the one on the curb. \n\n\"My humble abode,\" she smiled, then pointed down the hallway. \"Braxton is down there, but I seriously doubt he's here yet. We're quite early... For reasons I'll leave you to guess... and he always rolls in at the last moment.\"\n\nI watched as she opened the door, unveiling the dressing room for my eyes. A mischievous grin was on her face as she reached in and produced a 'do not disturb' sign for the doorknob. We stepped in, and she closed the door behind us. \n\nAbout the size of a large bedroom, Savannah's dressing room was more of a one room apartment. Well, two rooms if you count the attached, private bathroom, complete with shower. Racks of clothing covered one wall. A dressing table and makeup chair occupied the opposite one, and in the corner, was a small sectional sofa, coffee table and lamps. The lighting was soft and relaxing, but could obviously be ramped up for certain tasks. \n\n\"Sometimes, I do my run in a straight shot, right to here, so I need a shower when I arrive,\" she explained. \"My room is bigger than Braxton's. I've got more clothes. He could wear the same suit every day, for a year, and no one would notice. If I wear the same thing twice in a month, we get letters. That's proof enough that people aren't really tuning in for information, isn't it?\"\n\n\"I guess so,\" I nodded. \"I meant to ask you... How did the viewers react to the new you? I mean, they had to notice, right?\" \n\n\"Well, it was all timed for me to return after a long summer vacation, so as to minimize the comparison, but yeah, you could say they noticed,\" she giggled, cupping her breasts suggestively. \"Pretty hard to hide these. The response was mostly positive. Not all, of course. You can't please everyone, but the complainers were far outweighed by the supporters. Male viewership went up ten points!\" \n\n\"Purely for the news, I'm sure,\" I laughed, taking her in my arms. We kissed again, and she moaned softly. \n\n\"If we're going to, um, you know, use the sofa... we'd better get to it. People will be looking for me soon enough,\" she whispered. \n\nSavannah pulled me across the room, and sat me down in the corner of the couch. Once I was settled, she straddled me, and took her place in my embrace again. Her lips resumed the kiss, while I held her close. \n\nShe was dressed about as casual as I had ever seen her, workout gear excluded. A white silk blouse draped her fabulous curves, and felt wonderful under my hands, which were taking full advantage of our privacy. Her dress slacks were classic black, and equally smooth to the touch. We made out in the silence, trading soft moans of happiness. \n\nShe didn't even pull away from my lips as she unbuttoned her blouse, slipping it off her shoulders. Even when she deftly reached behind her back, and unfastened her lacey white bra, her mouth stayed on mine, tongue probing wetly. With nothing between my hands and her breasts, I naturally caressed those huge globes reverently. She finally broke away, and watched me fondling her for a few seconds. \n\n\"Don't keep me waiting, baby,\" she moaned, pressing closer. \"You know what I want, and I know you want it, too.\"\n\nI smiled and kissed the full upper curves of her breasts, while she pulled my head lower. With one breast in each hand, I lifted them, and kissed her nipples. Her wide areolas puckered at my touch, pulling tighter, and rising into tall spires in the centre. I flicked my tongue across the rubbery nubs, and she moaned her appreciation. \n\n\"Mmmmm hmmm, that's it, honey,\" she purred, tracing her fingers through my hair. \"Suck my tits. It gets me so hot, and wet.\"\n\nI was latched firmly onto her right breast, suckling dutifully, while I twanged her erect left nipple with a fingertip. For her part, Savannah was mewling contentedly, while rubbing her crotch over the burgeoning lump in my pants. \n\n\"It feels like you're enjoying it, too, honey,\" she giggled softly, undulating her hips more. \"I think I'm going to have to have another taste.\"\n\nThis morning, at her place, we had sampled each other thoroughly, but if she wanted some more, who was I to say no. I watched her stand, retrieving her blouse from the floor, and hanging it over the dressing chair. Her slacks followed, leaving her only with a very sexy little thong, and a hungry expression. She was soon on her knees, tugging my pants and underwear off. She licked her lips, and dropped her mouth over the head of my stiff cock. ",
        "\"Oh god, Savannah,\" I groaned, as her lips slid further and further down. \"You're the best. Absolutely the best.\" \n\nShe looked up at me and smiled around the mouthful of meat that made conversation impossible, then pointed to the shelf on the wall that held numerous trophies. \n\n\"May I assume those awards are for performances of a different sort?\" I laughed, watching her head bob in my lap. She nodded, and continued, driving me crazy with not only her mouth, but also the sensation of those massive boobs against my thighs. She kept it up for another few minutes, then moved back up, wiping saliva off her chin. \n\nI sat, my drool soaked erection pointed skyward, and watched her rummage through her bag, before holding the condom she found aloft. Her breasts swayed and jiggled as she tore open that package, and wrapped my package. \n\n\"Ready for action,\" she smiled, straddling me again. Her delicate hand reached under her body, pulled the string of her thong aside, and grasped my shaft, pointing it into her vagina. With a satisfied purr, she lowered herself aboard. \"Ah, that's better. Now, please continue with my nipples.\" \n\nThis position was very convenient. I was seated comfortably on the soft, supportive sofa, with my hands on her hips, and her big tits hanging pleasantly right in front of my face. The effort required to reach her nipples was minimal. It was sort of like having sex in a comfy recliner. All I needed was a football game, some chips, and the remote control. \n\nIn the absence of a remote, I decided to just go ahead and change the channels manually, using my lips to bring those nipples to full attention. Within seconds of suckling, gentle gnawing, and kissing, I had both nips standing tall, and was alternating from one to the other, in order to keep them that way. \n\nSavannah was holding my head close to her chest, while stroking herself on my cock smoothly. The occasional pause in her up and down motion let her grind against the thick base of my hardness, abusing her clit and moving her ever closer to orgasm. \n\n\"We interrupt regularly scheduled programming for this breaking news,\" she sighed, hanging her head back in pleasure. \"This just in... I have a boyfriend, and he has a nice big cock, which does marvellous things to my little pussy.\" \n\n\"This is Nick, reporting...\" I joined in, causing her head to whip upright and look at me intently. It didn't stop her riding me, but her smile told me she was amused. \"I'm on the scene of that pussy now, and from what I can see, it's very warm, and wet. I get the feeling that the pussy is enjoying itself, and the owner seems happy with the situation. On a related note, the owner of the pussy also has a fabulous pair of tits, which this reporter has personally met. Her boyfriend is a lucky guy.\"\n\nShe giggled, and kissed me, then sat upright again and pulled my face back to her nipples. \n\n\"And now, back to our program,\" she moaned, and picked up her pace a little. She liked it playful. She also liked it gentle, or hard, or rough. She liked to be revered, or treated like a cheap whore. She was many different women, all rolled into one, which was lots of fun, but a little confusing. I had learned to read her moods a bit better by now, and she was pretty good about putting me on the right track. \n\nRight now, that track was up and down rapidly. She was fucking herself furiously on my shaft, and I had been forced to abandon my lip lock on her breasts, now sitting back to watch those big globes dance happily before my eyes. My hands were on her hips, guiding and bracing her through her frenzy of sexual pleasure. \n\n\"Oh god, yes...\" she moaned, her face contorting. \"Oh yes, yes, yes, here it cums, I can feel it! Oh fuck! Oh fuck! Oh FUCK! OH FUCK, I'M CUMMING, BABY! OH YES! YES! YESSSS!\" \n\nHer screams pierced the silence, and I found myself wondering it they also pierced the soundproofing of the dressing room. My concerns were put aside while I held her upright, as she bucked and twisted atop me in the throes of bliss. The final spasm wracked her body, and she went limp, resting in my grasp. \n\n\"Oh god... So good,\" she breathed, as I laid her back on the couch. It took me a few seconds to untangle myself from her legs, move atop her, and re-enter her vagina. She moaned as I slid back in, and wrapped her body around mine. \"Mmmmm, my man.\" \n\nI really liked it when she said things of that sort. 'My man' resonated with my soul, and I had begun to think of her in similar terms. She had become more than just an exceptionally enjoyable pussy, spectacular tits, and provider of blowjobs to die for. \n\nWith that feeling in mind, I was stroking into her pussy smoothly, and kissing her lips with gentle passion. She had done a good job of satisfying her own immediate needs, so now I could play the long game, and give it to her slowly, building up to a mutual crescendo, if possible. Her pussy was extremely wet, and warm, as were her kisses. \n\n\"So, I'm the first guy you've brought here?\" I asked, between kisses, while still grinding into her. \n\n\"That's right,\" she smiled, gazing up at me dreamily. \n\n\"Why me?\" \n\n\"Hmmmm, why you?\" she asked, her smile growing crooked and mischievous. \"Well, I've had hundreds of chances, but my dressing room isn't that big. I'm such a slut.\" \n\n\"Uh huh,\" I responded, letting the self-deprecating remark fall flat. I continued to fuck her slowly. \n\n\"Okay, okay. I'm not that much of a slut,\" she allowed. \"Still, I do like sex, a lot, and on the occasion when my fingers or vibrator just haven't satisfied the itch, I have been known to allow myself to be taken. So, I'm not really a slut, but I'm not a nun either.\"\n\n\"Mmmmm, now that's a naughty Halloween costume I'd like to see on you,\" I growled, going a little faster. She moaned in response. \n\n\"Nude underneath?\" she whispered, her voice trembling. \n\n\"No,\" I grunted, fucking her deeper. \"Your best, most revealing bra, stockings, suspenders, and fuck-me high heels.\"\n\n\"Hail Mary! I'm cumming!\" she hissed, and shuddered under my body, while I continued to ream her cunt firmly. As she came down from her orgasm, her eyes found focus again, on my face. \"Ooooo. Good one.\" \n\n\"Answer the question, please,\" I reminded her. \n\n\"Huh? Oh! Why you?\" she giggled, remembering where we were before the prospect of her in a nun's habit and an orgasm interrupted us. \"Well, it's like I told you. Most of the guys I've slept with since my divorce were only in it for a good fuck and a story to tell their friends. They burned their bridges on the first night, and truthfully, I didn't want them back for a second night, either.\"\n\nShe paused. I was still stroking into her pussy rhythmically, but I think the emotion I heard in her voice was from her heart, not her loins. \n\n\"Then, we met. You seemed like fun, and I knew you were watching me every time we met on your walk, but you were respectful in your observance,\" she smiled. \"After our first date, I was sure I wanted you to take me home and fuck my brains out... but you turned me down, saying you wanted more than just a trophy. That started me thinking. I wondered if maybe it was time for me, too...if maybe I was ready for more than just a hard fucking. It opened my eyes again.\" She gave me a sheepish expression. \"Incidentally, that night, instead of a cold shower, as you suggested, I spent the entire night masturbating. I think I came six times, all to images of you and me, before exhaustion took me. I've never done that before.\"\n\n\"So, the short answer is that I never wanted to share any of my male partners with my friends, until you. You're the first,\" she said quietly. \n\nI knew that telling me the whole story must have made her feel very vulnerable. She had bared her soul, and was trusting me not to break her heart. \n\nWe had briefly discussed my last relationship, so she knew it hadn't been as long for me as it had for her. \n\n\"I care very much for you, too, Savannah,\" I whispered, and kissed her passionately. Her lips responded with the emotion we had both confessed to sharing, and soon we were fully engaged in a tongue battle. Her hands moved to my ass, urging me to fuck her harder, so I did. \n\nThe room was less quiet now, with our wet moans, passionate kissing, and colliding bodies filling the silence with the sounds of sex. The couch joined in, harmonizing with its own squeaks and thumps. We fucked like this for another minute or so before her nails raked my ass, and I could feel her nearing another zenith. \n\n\"Oh, fuck! OH FUCK, YES, NICK! YES! FUCK MY PUSSY! I'M CUMMING!\" she screeched, bucking under me. Her whole body flexed, and her cunt grabbed my cock tighter. I paused my strokes to watch her cum, and it was quite the sight. \n\nWhen her eyes opened again, she smiled and pulled me down into her embrace, holding me close against her full breasts. Her legs wrapped around my hips, stopping my strokes. \n\n\"Just hold me, baby,\" she whispered. \"Just hold me, for a minute.\"\n\nSo we rested, holding each other in a lover's embrace, while she recovered from her climax. I heard her soft voice in my ear. \n\n\"Okay, sweetie. It's your turn. How does doggy sound?\" \n\nI don't know any guys who don't like fucking a woman doggy-style. You can be purely selfish, fucking her as hard and deep as you want, with the added bonus of watching your cock plunge in and out of her pussy. For me, that's a recipe that adds up to pleasure. \n\nI lifted off her, and watched her reposition herself, ass high in the air. My cock found its way back into her warmth, guided by her soft hand. With a firm grip on her waist, I began the run up to my own orgasm. The sharp 'slap' of my hips meeting her firm rump filled the room. In the relative silence, it seemed so loud. \n\nThe knock on the door, which seemed even louder, nearly made me jump out of my skin. I lurched forward, giving her an extra deep thrust, which caused a yelp of surprise. \n\nTo my surprise, Savannah replied, barely concealing our activity. \n\n\"Yes?\" she said, with difficulty. \n\n\"Sorry to disturb you... Just a reminder that we're coming up on one hour to air,\" the female voice responded. \n\n\"Thank you, Tracy,\" she replied, pushing back against my cock with a soft moan. \"I'll be out in a few minutes.\" \n\n\"Of course, Ma'am,\" the voice said. \n\n\"If you're going to cum,\" she said over her shoulder, wriggling her sexy ass suggestively, \"you'd better get with it. Fuck me hard, honey. I'm supposed to be in that chair in ten minutes, with Tracy doing my hair and makeup, and she can't do that if you're still doing me.\" \n\nI was going to mention that the room clearly wasn't as soundproof as I'd hoped. If the two of them could converse through a closed door, then her earlier, highly descriptive screams had quite obviously been audible beyond these walls. I say I was going to mention it, but she started to pound herself back on my cock, and moan loudly. \n\n\"Come on, baby... Fuck me! Pound me with your big cock! I love what it does to me!\" she groaned. If she wasn't concerned about it, then my only worry should be getting myself off. I repositioned myself, braced a foot on the floor, and began to slam my hardness into her furiously. \n\n\"Oh yeah, oh yeah, that's it... Fuck my cunt!\" she growled. \"Fuck me like a bitch in heat!\" \n\nMy grip on her narrow waist grew tighter, and I pulled her toward me with each desperate stroke, making the collision between our bodies even more pronounced. I really wanted to cum, and was fucking her brains out, something she seemed to be enjoying every bit as much as I was. If not for the numbing effects of the condom, I'm sure I would have filled her with hot semen by now. \n\nSavannah shrieked, and tossed her hair back. \n\n\"Pull my hair! PULL MY HAIR! MAKE ME CUM AGAIN, YOU FUCKING STUD!\" \n\nI grabbed a handful and gave it a solid tug, to her delight. \n\n\"UHNNN! YES! MORE! FUCK ME HARDER! UHNNN! UHNNN! OH YES! CUMMING! CUM...\" she screeched, arching her back. It was just what I needed, and I exploded inside her, grunting like an animal, while she retained some of her eloquence. \"Oh god yes, that's it baby, cum in me! I love the way your cock flexes and that surge of warmth! It's so good.\" \n\nFor me, words were an impossibility. My head was spinning, and a post-orgasmic tingle had taken over my body, making staying upright difficult. It's a good thing I had her ass to hold onto. \n\n\"Wow,\" I breathed, exhausting my slowly returning vocabulary. \"Wow.\" \n\nSavannah pulled away, leaving me teetering for a moment, before I flopped back on the couch. Her steps were marginally more stable than I felt as she walked into the bathroom. \n\n\"Whew. Good thing I have a professional makeup artist, or I'd be in trouble,\" she called from inside the restroom. \"I look like I just got fucked.\" Her head peeked around the door frame. \"Thanks, baby. That was fantastic! I like it gentle, the way you were doing it, but sometimes a little frantic shafting is just what the doctor ordered. Makes for a very big finish.\" \n\n\"My... pleasure,\" I panted. Two words. Now ask me my name. \n\nIn a minute, she was back in the room, recovering her clothes. I watched her dress, before she grinned at me. \n\n\"You know, Tracy is a lovely girl, but I think even her discretion has limits,\" she giggled. \n\n\"Huh?\" I asked. \n\n\"Oh, I just thought you might like to get dressed before she comes in here. Naked man in my dressing room is pretty obvious,\" she suggested. \n\n\"Yeah, and 'make me cum you fucking stud' is ambiguous,\" I laughed, retrieving my underwear from the floor. \"Stevie Wonder knows what we were doing.\" \n\n\"This room is like an embassy... of Savannah-land,\" she smiled. \"What happens in here, stays in here. Just get dressed, okay?\" \n\n\"Looking for my other sock,\" I replied, as I pulled my shirt on. It only took a minute to find everything, and head for the bathroom, where the semen-filled condom met its end in the toilet, and I washed up behind closed doors. At last, after checking myself in the mirror, I opened up and went back into Savannah's dressing room. \n\n\"Tracy, this is Nick, my boyfriend,\" she giggled, sitting in the chair and gesturing in the mirror. \n\n\"Hi Nick. I've heard so much about you,\" the petite brunette smiled, holding out her hand. I took it with a sheepish smile in return. \n\n\"I'm sure you did. This room isn't soundproof, is it?\" I asked, embarrassed. \n\n\"I don't know what you're talking about,\" she giggled, and winked, \"but it sounded like fun.\" \n\n\"Alright, Tracy,\" Savannah interrupted. \"That's enough flirting. In case you haven't guessed... he's taken.\" She made eye contact with me and winked, too. \n\n\"All the good ones are,\" Tracy sighed, turning back to her task. \n\n\"Honey, why don't you go get a snack. I'm sure you're hungry after all that exercise,\" Savannah's reflection smiled at me. \"There's lots of goodies in the lunch room. You have your pass, right?\" \n\n\"Um, yeah,\" I laughed, fumbling with the lanyard which was hanging down my back. \"I am a little peckish. You want something?\" \n\n\"Not now, baby,\" she replied. \"Saving it for dinner. And dessert.\" Another wink. \n\n\"Okay. I'll be wandering around out here,\" I nodded, and left, pulling the door shut behind me. \n\nNow... Where's that lunch room? \n\n***\n\nFinding my way through the maze of passages and expensive looking equipment toward the lunch room took a few minutes. Along the way, I passed several crew members, all of whom greeted me with a smile, and a nod. It seemed like every one of them was saying 'Good job fucking Savannah. That sounded like fun.' \n\nOr, maybe it was all my imagination, and they were just being polite. \n\nI finally found a passage which looked more like a main road than a parking lot, and followed it, reaching my goal at last. Savannah was right; there was lots to eat in here, with trays of muffins, danish, and bagels, as well as veggies and dip. I was gnawing on a chocolate chip muffin when a hand clapped my shoulder from behind. \n\n\"Hey there, young man!\" I heard, wincing internally. I expected a security guard, and was fumbling with my pass, when I turned to see Braxton Barnes, Savannah's co-anchor. \n\n\"You must be this boyfriend of Savannah's I've been hearing about,\" he smiled, his voice a distinctive, low rumble that had made him a staple of the local news for decades. He extended his hand. \"I'm Braxton Barnes.\" \n\n\"Yes, I know. Nice to meet you. I'm Nick,\" I nodded, swallowing the muffin quickly, and shaking his hand. My mind immediately did a quick personality assessment. Watching him on TV over the years, he had seemed to be a decent enough person, but Savannah's opinion had differed. 'A sexist, misogynistic bastard' or words to that effect, had been her evaluation. \n\nI was quite sure she had a logical basis for that opinion, and really wasn't looking for confirmation. He provided it anyway. \n\n\"So, Nick, tell me... Man to man... \" he said, then lowered his voice and looked around conspiratorially. \"Those big tits of hers? Are they as soft as they look? Are they fun to play with?\" \n\nUh huh. So, Savannah was being kind when she called you that. The truth is much worse, isn't it? You're actually the kind of guy that makes me ashamed to have a Y-chromosome. Man to man or not, vocalizing a question like that, especially about a co-worker, is just wrong on so many levels, I couldn't even justify a response. Instead, I just glared at him. \n\n\"What?\" he shrugged. \"Come on. You know you were asking the same things before you scored. Don't give me that look.\" \n\n\"How good is your makeup artist?\" I asked, turning my gaze away. \n\n\"Why?\" he answered, oblivious to his own obnoxious nature. \n\n\"Because if you ever say anything like that about Savannah within earshot of me again, she's going to have a black eye to cover up,\" I threatened. \n\nHe opened his mouth to reply, surely with some snide comment of superiority, when Savannah appeared at my elbow. \n\n\"Hi honey,\" she chirped, rubbing against my arm. Her presence derailed Braxton, and he merely muttered something about 'seeing her on set' and left. \n\n\"That was fast,\" I laughed, surprised at seeing her so quickly. \n\n\"What was that about?\" she tilted her head in the direction of the departing asshole. It was so cute when she did that. \n\n\"Nothing really, just his way of saying hello, I guess,\" I shook my head. \"I thought you'd be longer in your chair.\"\n\n\"Well, I didn't need as much makeup, today,\" she giggled. \"Seems I have a natural glow going, thanks to you. All she really had to do is my hair, eyes, and lips.\"\n\n\"Oh god, don't say 'lips',\" I groaned. \n\n\"Nick? Didn't you get enough, already?\" she said softly, pressing her body closer. \n\n\"There's no such thing as enough of you,\" I smiled, wrapping her in my arms. \n\n\"Aren't you sweet!\" she giggled, then tilted her face down, giving me a very sexy glance. \"Does someone enjoy watching sexy, lipstick-covered lips... sliding up and down their cock?\" she purred, licking her plump, deep red beauties. \n\n\"Yes,\" I croaked. \"Someone loves it.\"\n\n\"Well then, keep that in mind, my darling,\" she smiled pecking me carefully on the nose. \"Perhaps you'll get a special treat later.\" \n\n***\n\nThat thought keep surfacing in my mind, as I sat quietly in a tall chair, in the background clutter of the set. I could see her between the cameras, and also on the monitors that lined the bulkhead above. Savannah knew exactly where I was, and her piercing blue eyes found me whenever possible. \n\nEver the professional, she was all business when the red light was on, but during the station breaks, she wasn't above a little teasing. The pen she used to check her paper copy tapped those intoxicating lips repeatedly, and a sly smile crossed her face.  \n\nSitting in my chair, I couldn't help my mind from wandering back to earlier in the day. That woman over there, so calmly and smoothly reporting the day's events to an enthralled audience of millions... was my girlfriend. I was proud of her professionalism and skill, but pride wasn't the only thing I felt. ",
        "My wandering mind had me feeling something more basic, and my body was reacting on autopilot. Before I realized it, I had a full-blown erection, uncomfortably crowding my pants. Fortunately, the lighting in this background area was dim enough to conceal the bulge. Now if only it could ease the swelling. \n\nSo it went, as I spent the hour of the broadcast battling with my body's natural reactions. If I didn't watch her, then I would relax, and my erection would subside, but it was nearly impossible to keep from watching her. In the end, I gave up, and resigned myself to sitting with a huge boner in my pants for the duration. When at last they had signed off, I remained seated. Savannah picked her way over to me. \n\n\"Well? Did I do a good job?\" she asked, leaning over for a kiss. Her hand fell on my lap. \"Yikes! I guess I did! Poor baby. Can I help you with that?\" \n\n\"You're the only one who can,\" I laughed. She tilted her head. \n\n\"Suddenly, I have a craving for sausage.\" \n\nWe never did make it to the restaurant. \n\n***\n\nThe day of Savannah's birthday, we had no opportunity to get together, other than that evening, so I picked her up after her broadcast. The plan was for a nice dinner, maybe a late movie, that we probably wouldn't actually watch anyway. Back at her place, we would spend the entire night expressing our appreciation for each other physically. \n\nAt least, that was my plan. \n\nIn the restaurant, the waitress directed us to our table, and left us with menus to sort through. I noticed that she wasn't really into it. \n\n\"You seem a little distracted tonight, honey,\" I observed. \"Is everything alright?\" \n\nSavannah smiled over her menu, but it was forced. \n\n\"I'm sorry, baby,\" she said softly. \"It's just that I'm not very fond of birthdays. I appreciate the sentiment, and I'm glad to be out with you tonight, but this is the one day each year when I just feel... old.\"\n\n\"Not from where I sit,\" I laughed. \"You sure didn't feel old last night.\" \n\n\"Why, thank you,\" she smiled, genuinely this time. \n\n\"Would it help if I told you my mother wished you a happy birthday, too?\" I offered.\n\n\"She did, did she?\" Savannah laughed. \"Well, thank her for me.\" \n\n\"She always tells me to say 'hi' for her,\" I continued. \n\n\"Then, why didn't you?\" she asked, pointing a chastising finger at me. \"We've never really talked about your mother, other than that you live there. What's her name?\" \n\n\"Daisy,\" I replied. \n\n\"I once knew a Daisy, a long time ago,\" she said quietly. \n\n\"Mom always said that Dad rescued her from torment. Taking his name meant she wasn't 'Daisy Haysie' anymore,\" I chuckled. \n\n\"Daisy Haysie?\" Savannah asked. \n\n\"Well, her maiden name was Hayes, but kids can be cruel,\" I replied. \"I suppose the rhyme was inevitable.\"\n\nI looked at Savannah, who seemed pale. \n\n\"Honey? Are you okay?\" I asked, concerned. \n\n\"Um, no, not really,\" she answered, closing her menu. \"Would it be okay if we called it a night? I don't feel well. I'm sorry.\"\n\n\"Of course, honey,\" I nodded, touching her hand, just as the waitress arrived to take our orders. After a quick explanation from me, she took the menus and left us. \n\n\"I know you had plans for tonight,\" Savannah apologized, again, \"but I might be coming down with something. I think I just need to go to bed.\" She saw me grin, and added, \"Alone, baby. Sorry.\" \n\nThe drive back to her house was quiet, with no conversation to speak of. Parked in her driveway, I turned off the car, and we sat in silence. \n\n\"Are you sure you don't want me to come in, and take care of you?\" I asked her. \n\n\"I'm sure, honey,\" she said, softly, opening her door. I opened mine, and hopped out, to meet her at her side, anticipating at least a kiss goodnight. \"Just a hug, okay? No use getting you sick as well.\" \n\nI held her for a minute, feeling her soft breathing. I wanted to say something, but I was confused. Was she really sick? Was this just the birthday blues? Did I do something wrong? I felt her stir. \n\n\"I should get to bed,\" she said. \"I'll probably turn my phone off, so don't worry if I don't respond, okay?\" \n\n\"I, um, yeah. Okay. You're certain I can't help?\" I offered once more. \n\n\"Goodnight, Nick,\" she said, with decided finality. I watched her go to her door, unlock it, and go inside. \n\n\"Um, happy birthday, baby,\" I said softly, to myself. \"Get well soon.\" \n\n***\n\nHave you ever had one of those dreams where you, despite your best efforts, are in a situation totally beyond your control? One where you are trapped, helpless on the sidelines, while events unfold like a slow-motion train wreck? \n\nI had several of those that night. Every time, I woke up, my heart pounding, and when I fell back to sleep, my subconscious chose to resume the horror as though it had a remote control with a pause button. \n\nAfter a fitful night's sleep of emotional distress, I woke up alone, a stark reminder that things had not gone according to plan last night. I lay there, rehashing the whole scenario in my head, still unsure of where I went wrong. While it is true that I had only been with Savannah for twelve days, in that time we had grown very close to each other. Now, it appeared that it might be over, and I didn't know why. \n\nOr, I might be totally wrong. Maybe she really was sick. \n\nI checked my phone. Nothing. No response. \n\nI was nearly useless at work that day. Checking my phone every few minutes, and finding no messages each time, did nothing to ease my dread. By the end of my shift, I was sure things were over. \n\nAnd I still didn't know why. \n\nThat evening, during dinner at home with Mom, I was sullen at best. She had the news on as usual, and noticed that I wasn't paying my usual rapt attention. \n\n\"Nick? Something wrong?\" she asked, giving me her concerned look. \"Girl problems?\" \n\nHer generic terminology belied the fact that she had been aware of the situation between Savannah and myself since the onset. Denying it would be an exercise in futility. \n\nBesides, maybe it would help to talk it out, even with my mother. \n\n\"Um, yeah. Girl trouble,\" I nodded. \n\n\"Oh, honey, I'm so sorry to hear that. I've always liked her, and I hoped things would work out for you,\" Mom said softly, touching my hand. \"Tell me about it?\" \n\n\"That's just it... There's nothing to tell really,\" I told her. \"Everything was fine. Better than fine, actually. I thought we were falling in love, then suddenly... It's over.\" \n\n\"I'm sure it feels that way, but there must be more to it than that. She must have had a reason to turn away,\" she suggested. \"When did this happen?\" \n\n\"Last night. We were out for her birthday, and we were talking, just like usual, then everything changed,\" I said, exasperated. \n\nMom rolled her eyes, and smiled. \n\n\"Last night? Don't you think you might be jumping to conclusions?\" she asked. \"Just because she didn't text you today doesn't necessarily mean it's over.\" \n\n\"No, but it's very unusual for us. She said she wasn't feeling well, and not to worry if she didn't respond at first, but I can't help it. It just feels wrong,\" I said sadly. \"Seeing her on the news means she can't be that sick.\"\n\n\"Okay, back up a second,\" she directed. \"She was sick?\" \n\n\"Not really,\" I sighed. \"Alright. I'll tell you everything.\" My eyes were closed, and I recapped the whole evening. \"We're at the restaurant, and she seems a little bit down. Not her usual self. She says she's not fond of birthdays.\" \n\n\"Not unusual for a woman,\" Mom replied. \n\n\"I suppose. We talked a little more, and she seemed happier,\" I added. \"I even told her you wished her a happy birthday. We were talking about you, and then suddenly, she gets pale, and wants to go home.\" \n\n\"Talking about me?\" Mom gasped. \"Oh my.\" \n\n\"Yeah, she asked about you, and I told her. We even talked about your old nickname, when you were a kid,\" I replied. \n\nMom sat back, and exhaled slowly. \n\n\"What?\" I asked. \n\n\"I think I understand,\" Mom sighed. \"I think this is my fault.\"\n\n\"Huh? You've never even met Savannah,\" I wondered. \"How could it be your fault?\" \n\nMom got up, and poured herself another cup of coffee. When she came back and sat down, she was holding the cup in both hands and looking down uncomfortably. She obviously had something to tell me. I had no choice but to wait, until she was ready. \n\n\"Honey,\" she said softly, \"the truth is, I have met Savannah.\"\n\n\"You have? When?\" I asked. \n\n\"Oh, about forty years ago,\" she admitted. \"Maybe a little less. I grew up with her, and her older sister. In fact, her sister Shannon used to be my best friend.\"\n\n\"So, that's why you always said to say 'hello',\" I answered. \"I thought you were just being polite. So, why would that be a problem? Does it matter that you know her?\" \n\n\"Well, it doesn't really matter to me,\" Mom said. \"I mean, I know my opinion isn't the one that matters when it comes to your love life, but I would have imagined someone closer to your age, and further from mine, when I pictured your girlfriend. Still, your happiness is what matters to me, and if she was your choice, then I could make peace with it.\"\n\n\"Thank you,\" I nodded. \n\n\"Like I said, my opinion isn't important. It doesn't bother me,\" she looked up, and fixed me with a stare, showing her seriousness. \"Just because it doesn't matter to me... Well, it might matter to her.\"\n\n\"She knows how old I am. It's hardly a secret,\" I replied. \n\n\"Nick, stop thinking like a man,\" she laughed. \"Maybe age isn't her concern. Maybe it's something more personal. Something from her past. Maybe it's me.\" \n\n\"I'm going to need some help with that one,\" I shook my head. \"Thinking like a man is a habit. What do you mean?\"\n\n\"Really? I thought I taught you better than that,\" she sighed. \"Okay, fine. I'll spell it out for you. You may have noticed that we women don't always say what we mean. Well, it's not because we are being dishonest. It's because our emotions have changed, and that has changed our intent.\"\n\n\"Okay, so you're saying she's changed her mind? There has to be a reason, doesn't there?\" I said, hoping there was one. I might not like it, but at least I'd know why. \n\n\"I'm betting it has something to do with her knowing me,\" she said. \"You said you were talking about me, and you hadn't done so before. She didn't know my name, and certainly didn't know my maiden name. I imagine it was something of a shock to find out the young man she had become involved with was the son of a childhood friend.\"\n\n\"Oh. Daisy Haysie,\" I groaned, suddenly cluing in. I slapped my forehead. \n\n\"Yeah. Daisy Haysie. That must have been a surprise, to say the least, and more than a little embarrassing,\" Mom discerned. \"You said you felt like you were falling for her? You think she felt the same?\" \n\n\"I think so,\" I nodded. I couldn't actually tell my mother how I came to that conclusion, as it would be divulging a little more about our relationship than I was comfortable telling. \"Nothing concrete, but it felt that way.\"\n\n\"Early in a relationship, emotions can be very fragile, don't you agree?\" Mom suggested. I nodded. \"Perhaps fragile enough that shock and embarrassment are enough to shake them. She may not have changed her mind, but she might need time to figure out how she really feels.\"\n\n\"So, I should let her go?\" I questioned. \"I really hate that idea.\" \n\n\"No, don't let her go, but don't press too hard,\" she smiled. \"Let her know you care, and that you are there to talk to, but don't inundate her with messages. That looks desperate, and desperate isn't what any woman wants in a man.\"\n\nI sat back, silent. All of this was just an opinion, of course. Another woman's opinion, but still better than anything I had come up with, and despite the fact that nothing had really changed, it did make me feel better. \n\n\"Thanks, Mom,\" I said softly. \n\n\"Anytime, honey,\" she smiled. \"I truly hope it all works out.\"\n\n***\n\nTo say this situation was bizarre was an understatement. I mean, when was the last time you took your mother's advice on your sex life? In this case, it was even stranger, as Mom not only knew what was happening, but with whom. Hell, she even knew the 'whom', before I did. \n\nIn the absence of anything contrary, in terms of advice, I went along with Mom's plan. I gave Savannah some space, and took great care to keep my messages from sounding like I was feeling angry, or desperate, which is exactly what I was actually feeling. I sent her only one message, and it was crafted with great attention, so as not to cast guilt or blame. \n\nHi Savannah, I sent. I hope you are feeling better. I now understand that you need some time and space to sort things out, and I promise to give you that space. I miss you. My life seems somehow lessened by your absence, but I know it's not only my decision to make. Please, if you want to talk, don't hesitate to call me, anytime, day or night. I just need to know you're alright. \n\nTo my great relief, that message brought a quick response, where as the previous ones had been met with silence. \n\nThank you, Nick. Miss you too. I'm okay. Please be patient. \n\nMy heart leapt with joy. While hardly an unequivocal declaration of love, it said enough to put hope back into the equation. \n\n'Please be patient', she asked. Easier said than done. I had sampled the goods, and they were really, really good. Now I felt like an addict, forced to go cold turkey. Hours seemed like days, and days like weeks. \n\nIn actuality, it was only five days of silence, but I was about ready to scream, when at last she surfaced. \n\nHi Nick. Can you meet me at our corner, this afternoon? she sent. We need to talk, face to face. I owe you an explanation. See you at 3?\n\nI'll be there. Thanks. I replied. \n\nUh oh. I once got fired from a job, and was told we 'needed to talk', which is a whole different animal than 'want to talk'. It didn't fill me with confidence. \n\nAs for the location, 'our corner' was the corner where she had waited for me, on our first time together. I had deliberately been avoiding the usual route for walking Sox, so that it wouldn't appear that I was stalking her. For all I know, she'd been doing the same, and running elsewhere. \n\nAt least I'd know. At 3 o'clock, on our corner, I'd know whether, or not, we were over. \n\nIf I thought time moved slowly before, I now had a whole new appreciation for the effect. It seemed like it had stopped completely. When at last the damned clock finally neared 3, I put Sox on her leash and headed out. My heart was pounding in anticipation. \n\nRounding the corner at the top of the hill, I saw her, patiently waiting at the corner, a block away. It was almost like seeing her for the first time, all over again. \n\nShe was dressed for her run, and looking fabulous, as usual. As we approached, she smiled, but having been the recipient of her full-wattage version, I knew her polite one. \n\n\"Hi Nick,\" she said softly, then bent to pet Sox, giving me an agonizing peek down her top, at the huge rack I might never again have the pleasure of fondling. When she stood, her smile was gone. \"Let's go over here,\" she directed. \"There's a little park, with a bench, where we can talk.\" \n\nI nodded, and followed her, watching her ass wiggle in the tight spandex. It was torture, having her nearly naked body so close, yet so off limits. \n\nWhen we reached the park, she sat, and patted the spot next to her, shifting slightly further away as I sat as well. \n\n\"Nick, I'm sorry about the other night. It wasn't fair of me to act the way I did. I'm sure you must have been terribly hurt,\" she said, apologetically. \"It's true, I don't like birthdays, but you were being very nice, and you had planned a celebration. It wasn't your fault.\" \n\nSo far, I had nothing to add, so I let her continue uninterrupted. \n\n\"I'm afraid something has come up, that might make us being together difficult. Something from my past, many, many years ago. That's the real reason I have been pulling away. I needed time to think.\" \n\nHmmm. Maybe Mom was right, I thought. \n\n\"Oh shit, there's no easy way to say this, so I'm just going to spit it out. I know your Mother,\" Savannah gasped, and hung her head. \n\n\"Yes, I know,\" I replied. Her head lifted slowly, eyes wide. \"Let me clarify... I didn't know then, but I know now. Mom told me that you grew up together. You, your sister Shannon, and Daisy Hayes.\"\n\n\"Oh god. This is so embarrassing!\" she moaned, resting her head in her hands. \"I'm fucking the son of a childhood friend? What a cruel joke!\" \n\n\"Savannah?\" I said softly, putting my arm around her. She didn't pull back. \"Honey? Who cares? Other than the three of us, no one knows, and no one cares. Does it really matter?\" \n\n\"It shouldn't, but it does,\" she blubbered, tears flowing. \"I'm the one! I'm the one who called her 'Daisy Haysie'! She must hate me! I can't put you in the middle of that!\" \n\nSonofabitch! Mom nailed it. I gotta get her to work on my lottery numbers. \n\n\"She doesn't hate you,\" I replied, holding her closer. The longer we stayed in contact, the less stress I felt from her. \"She always said she liked you on TV. When she found out I was seeing you, she was happy.\"\n\n\"She was?\" Savannah sniffed. \"I'm almost her age, and I know her. Isn't it a bit creepy?\" \n\n\"Not to me, and if she feels that way, she hasn't said so. We talked about the whole situation, and she's okay with it. It wouldn't be her first choice, but she understands,\" I told her. \n\nSavannah sat silent, processing her thoughts, the tears restrained for now. I decided to seal the deal, and fished my phone out of my pocket. Two movements of my thumb, and the call was placed. \n\nBefore Savannah knew what was happening, Mom was on speaker. \n\n\"Hello?\" she answered. \n\n\"Hi, Mom, it's me,\" I said. I could feel Savannah tense. \"Could you please tell me again how you feel about me dating Savannah?\" \n\n\"Of course, dear,\" Mom said softly. \"May I assume that the reason for this question is that she is listening?\"\n\nThe silence was deafening. Savannah obviously didn't want to reveal her presence, and was trying to hide, but nature abhors a vacuum. She finally broke. \n\n\"Hello, Daisy,\" she said sullenly. \n\n\"Savannah Banana!\" Mom chirped happily. \"Long time!\" \n\nI watched Savannah's face change, going from ashamed, to surprised, to smiling, in the space of seconds. \n\n\"Savannah Banana?! My god! I forgot all about that!\" she laughed. \"You're the reason I don't wear yellow often!\" \n\n\"Well, you look better in blue, anyway,\" Mom giggled back. \"Brings out your eyes. So how have you been? How's your sister?\" \n\n\"Shannon has four kids, all grown. None for me, but I'm sure you know that. I had no idea about your husband. I'm sorry,\" she replied, as though reporting a story. \n\n\"Thank you. You couldn't have known. But enough about the past. You have a question I need to answer, right?\" Mom asked. \n\n\"Oh, this is weird,\" Savannah smiled. \"I never imagined I'd be having this conversation.\"\n\n\"Me neither,\" Mom giggled again. \"Savannah... Can you get any younger?\" \n\n\"Um, no. I wish I could,\" she answered. \n\n\"Didn't think so. I'd like to, as well,\" Mom said. \"Well, then, if you're going to be in a relationship with my son, it will just have to be the way you are. I just want my boy to be happy, and he's been very happy with you. I'm not putting pressure on you, just saying that whatever you two want to happen, I'm okay with it.\"\n\n\"You realize what you're saying, don't you?\" Savannah grinned, looking like a huge weight had been lifted. \n\n\"Yes,\" Mom sighed. \"Go ahead. Have sex with my son. Talk about weird. I'm giving my childhood friend permission to do things a mother doesn't like to think of.\" \n\n\"Thanks, Mom,\" I laughed. \"I'll be home late.\" \n\n\"Have fun. I love you,\" she giggled, and the phone clicked off. I put it back in my pocket. ",
        "Savannah was sitting, eyes unfocused, staring into the distance. She was deep in thought, and I let her have some time without forcing my way into the internal conversation. Eventually, she looked at me. \n\n\"So, where does that leave us?\" I asked. \"You know where I stand. It's up to you, now.\" \n\n\"Come with me,\" she smiled, standing up decisively. \"We still need to talk, but I can think of a more comfortable place to do it.\"\n\nI was happy to fall in behind her, as she led us down the path into the ravine that brought us out near her house. We walked in silence most of the way, until we reached the log that crossed the small stream that resided in the bottom of the ravine. Serving as a footbridge, but quite narrow, it caused Savannah to pause, and ask for my help. I held her hand, then scooped up Sox to make the crossing myself. \n\nOnce on the other side, I noticed her glance at our hands, and we walked the rest of the way side-by-side, still connected that way. As we picked our way along the path, she began to open- up. \n\n\"Nick, I'm sorry. I hope you can forgive me. In retrospect, I can see how much I overreacted. It's just that I was already feeling very emotionally fragile, and then you tell me about your mother. It was just more than I could handle right then. Not your fault, of course, but it made me feel terribly embarrassed, and old, all at once,\" she explained. \n\n\"You're right. No one knows about any of this, except us. You have to be someone's son, don't you? The fact that I know Daisy is only a problem if we let it be. I'm happy your mother is okay with us being together.\"\n\nBy now we were almost to her door, and she waited until we stopped to unlock it before continuing. \n\n\"When we were apart, I was feeling ashamed, embarrassed, sad, lonely, and a little angry. After a few days, I finally realized that the solution, to all of that unwanted emotion, was you. If we were together, and I felt that way, I'd have you to hold me until I felt better. I had almost scraped up enough courage to tell you that today,\" she smiled, \"and then your mother told me she's okay with us being together. At least we don't have to deal with embarrassment.\" \n\nWe were now inside the door, and it was closed. \n\n\"Will you say something, please!\" she gasped. \"You're mad at me, aren't you? I'm so sorry, Nick! I...\" \n\nI had her pinned to the back of the door, and was muffling her exasperation with a kiss. Her arms stopped gesturing, and came up around my neck, holding me in place. I could feel the negative emotions being swept aside in both of us. When we broke the embrace, her eyes fluttered open again, looking much happier. \n\n\"You're not mad?\" she whispered. \n\n\"Nope.\" \n\n\"Then why the silence?\" she asked. \n\n\"I was listening, and letting you get it out. I won't lie... I was mad, a little, but that was just part of the initial shock,\" I told her. \"I could hardly expect you to respect my emotions if I don't respect yours. I understand how you felt, and I'm so happy we got through it. Together we can...\" \n\nShe shut me up with a return kiss, dragging my face down and planting a good one on me. Her tongue was fully involved, putting an immediate end to all this talking. \n\n\"Right,\" I breathed, as she let me go, and backed away, heading towards the stairs. \"Where's Sox? Sox?\" \n\nA 'wurf' from the kitchen told me where to find her, and I let her out into the yard. I already knew where I'd find Savannah. My dick was already stiffening as I raced upstairs to her bedroom, passing a few articles of her clothing along with way. I followed suit, shedding layers, and was down to my underwear by the time I rounded the corner into the empty bedroom. \n\nI could hear her in the bathroom, so I kicked off my shorts, and opened the bedside cabinet to retrieve a raincoat. My cock was ready to go, standing at attention as I dressed it for duty. I sensed an audience, and turned to see a stark-naked Savannah eyeing me hungrily. \n\n\"Mmrowrrr!\" she giggled, and pounced, her boobs bouncing crazily as she did her linebacker impression, bowling me over onto the bed. She pinned me down under an avalanche of passionate kisses, not to mention her bountiful chest. I didn't fight it. My hands found her hips, guiding her over the target zone. \n\nI could feel the heat of her pussy rubbing against the side of my shaft. She moaned softly, and manipulated her supple hips expertly, managing to capture the head of my cock. A few more deft undulations had my erection sliding into her slippery opening. \n\n\"Mmmmm,\" she moaned, and pulled away from my lips. \"Just a sec...\" \n\nI watched her sit up high over me, lifting off my hard shaft. She smiled, and ripped the condom off with an elastic snap, tossing the empty item over her shoulder. She wasted no time in resuming her task, dropping down on my cock, which slipped in smoothly. Bareback, at last. \n\n\"Oh, that's much better,\" she sighed, grinding herself down eagerly. She sat back, arching her back, and thrusting her chest upward. I looked up through the valley of her cleavage, and caught her eye. \"Remember what I told you about rubbers?\" she asked. \n\nI did. She had set the rule, on our first day of intimacy. Rubbers were mandatory, until we decided to stay together. I guess the decision had been made. \n\n\"I suppose we'll just have to stay together, then,\" I smiled. \n\n\"Absolutely,\" she groaned, beginning to impale herself energetically. \n\nAbsolutely. Indeed. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nI hope you enjoyed this chapter. Please cast your votes, and send me your thoughts via Feedback and Comments. \n\nThanks for reading."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "blonde",
        "blue eyes",
        "big tits",
        "older woman",
        "famous woman",
        "younger man",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/hubris-of-youth-pt-02"
}