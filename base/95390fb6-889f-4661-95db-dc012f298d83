{
    "title": "Felicity Ch. 16",
    "pages": [
        "Chapter 16: Charles\n\nI answered the knock on my door and found a very pretty strawberry blonde there.\n\n\"Are you Charles?\" she asked.\n\n\"Yes. What can I do for you?\"\n\n\"You can come with me. There is something very important I want you to see.\"\n\nI studied her face and saw anxiety, perhaps some anguish, desperation. Her hands were wringing each other incessantly. I decided to go along.\n\nShe drove us to the warehouse where my wife worked and took us in a door I did not know existed. She took us on a catwalk above the floor of the warehouse. She signaled to me to be silent and led me to a corner and urged me to look down. I saw two people fucking.\n\n\"That is my husband,\" she whispered. \"Is that your wife?\"\n\nI nodded yes. I guess I should have been irate, or devastated, but I was simply embarrassed.\n\nShe led me to an office and closed the door.\n\nShe said, \"They do that every Friday. I wanted to warn you but since the husband of his previous lover refused to believe me I decided to show you in person. What do you intend to do about it?\"\n\n\"Support you in court as a witness.\"\n\n\"Nothing else?\" she asked incredulously. I felt that she had hoped I would have beaten the hell out of her husband.\n\n\"Probably not. She trapped me by claiming she was pregnant with my child. By the time I knew otherwise we were comfortable living together. She helped put me through graduate school. I owe her.\"\n\n\"And you don't mind that she fucks around?\"\n\n\"Yes I do. I find it very embarrassing. But we were pretty much strangers when we wed and I knew that three months after our wedding she was fucking any one that asked.\"\n\n\"So why are you still married to her?\"\n\n\"Like I said, I owe her.\"\n\n\"How long have you been married?\"\n\n\"Ironically two years ago today. I take it this is not his first time to stray. Why are you still married?\"\n\n\"Because I don't have a job. I used to work here as a secretary, in fact this used to be my office, but when we got married he insisted I quit. My work visa and alien resident card are under his control. Changing either would require me to owe him for his cooperation. I depend on him for financial support but as soon as I find a job I will divorce him.\"\n\nI gave her a sympathetic smile.\n\n\"What I don't understand is how he gets all these women when he is actually lousy in bed?\"\n\n\"I don't know about his other lovers but my wife Lily simply loves having a cock in her even though her only orgasms come from her own fingers. My wife likes the idea of being fucked more than she likes being fucked.\"\n\n\"Do you like watching her get fucked?\"\n\n\"No.\"\n\n\"You had an erection when we came into this office.\"\n\n\"Yes, well when were we crouching down to spy on them I could see under your skirt. I saw that you are not wearing panties.\"\n\n\"So seeing my pussy gave you a hard-on?\"\n\n\"Yes.\"\n\nShe suddenly lifted her skirt and sat on the desk. \"Fuck me,\" she said.\n\nI quickly lowered my slacks and entered her pussy.\n\n\"Whoa, slow please. Your cock is definitely bigger than his,\" she said.\n\nAs I slowly slid my cock into her I saw her facial expressions go from anger and sweet revenge to shy embarrassment. She was not going to stop me from fucking her but I could see she no longer thought it was that good of an idea.\n\nIt never occurred to me to stop.\n\nAs soon as I was completely in her I hugged her to me. She needed the hug. In retrospect I needed it too. I tilted her head to kiss her but she seemed reluctant. I kissed her forehead, nose, cheeks and neck. I felt her tremble when I kissed her lips.\n\nI caressed her and continued giving her soft kisses. Her lips began to mold themselves to mine. I began short slow strokes into her pussy. I doubt she felt them at first since she was now concentrating on enjoying the kisses. \n\nHer arms went around me. I increased the length of my strokes although not the speed. Her pussy was now very well lubricated.\n\n\"My name is Shirley,\" she whispered.\n\nI felt her legs wrap themselves around me and I began a gentle fuck. Her first orgasm caught both of us by surprise. I slowed down until her spasms had calmed then fucked her harder. She began a long string of moans that carried cums in them until she gasped and groaned her way through a major orgasm. In the midst of that I filled her pussy with my semen.\n\nWe held on to each other for a while. I resumed kissing her. She seemed both surprised and grateful for that so I kissed her some more and continued to do so until my cock slid out of her pussy.\n\n\"Oooh,\" she said with a giggle. \"That felt so good.\"\n\n\"Yes it did.\"\n\n\"I needed this and I needed you. This is the first time I have cheated in my marriage but I do not feel guilty at all thanks to you. Had you just fucked me I probably would have hated myself for it in the long run. Instead you made love to me, made me feel special, wanted. I don't feel too bad, for a loser.\"\n\n\"Me neither. I said. \"This was also the first time for me to cheat. It is also my best sex in a long time and right now you are definitely special.\"\n\nWe kissed some more before I helped her off the desk. I dressed and we went out. After checking and seeing that our spouses were gone we walked to her car hand in hand. She dropped me off at the corner of my street and I walked home. I was not surprised to find that Lily still wasn't there.\n\nThree weeks later Shirley walked into my house and announced, \"They got a hotel room.\" We were fucking on my couch thirty seconds later and continued to do so for over an hour. After a long afterglow make-out session she left. Both of us were wearing big grins when we kissed goodbye. Both of us were fucked out.\n\nLily did not come home until nearly midnight. \"Problems at the plant,\" she said.\n\nShe was asleep in our bed within minutes. As I watched her I decided I did not want to sleep in the same bed with her anymore and went to our guest room. I slept like a baby.\n\nLily never questioned why I no longer slept in the same bed with her. She knew I knew she fucked around and likely assumed that I had reached the limit of my tolerance.\n\nWe had seldom fucked over the previous months and when we had I had worn condoms. She probably understood that our last fuck had been our last fuck. Lily also understood that being shown the door would follow sooner or later. She began to look for another patsy.\n\nIn the meantime Shirley and I cooled our affair a bit, she was trying to make her marriage work she said. \n\nThree months after we began to sleep in separate rooms Lily left. In her note she thanked me for putting up with her and wished me luck in my life. In a separate note to the \"Divorce Judge,\" she stated she would not be returning and would not contest the divorce.\n\nWe had always kept our finances separate so I did not have to worry about that end but as I looked through my house I became strangely proud of her. The place was clean and she had not taken anything that did not belong to her. \n\nHad I had the opportunity I would have thanked her for her financial support through school and for all her lessons on how to please a woman in bed. I regretted not being able to take her to where she needed to go but the lessons had paid off with Shirley.\n\nI had thought more than once that if Lily had not been five years older than me our relationship might have worked, but probably not.\n\nShirley was happy for me and we made love in celebration. Part of her elation was the fact that her husband's principal lover had left town. \n\nAlthough we did not fuck very often at all we did talk everyday. So her husband would not be suspicious to see my number on his phone bill I bought her a disposable cell phone and loaded it with lots of minutes. \n\nOne night she came over in tears. She had threatened to leave her husband and he had laughed at her. He had called her a pathetic loser that should be grateful to have him to support her. She spent the night with me, crying.\n\nThe next morning her husband called her and apologized for his words and claimed it was the stress from work. Shirley told me that it took all she had to keep from countering, \"Oh. That's right. Your lover left.\"\n\nShe did go home and later claimed to me that he did seem to appreciate her more. Yet he never asked her where she had spent the night. It occurred to us that he had not spent the night at home either.\n\nSoon after that event I got my biggest wish, a meaningful job. I was hired by a law firm to be their CPA. \n\nIt was down the coast in a town I had never heard of but after spending a day and night there it took me less than an hour to convince the lawyers that I would love to work for them and already loved the town. Both statements were true and I was sure they saw that. I was hired on the spot.\n\nI gave notice at my accounting firm who seemed to be surprised that I was not happy with the long hours and low pay. I put my house up for sale and took the first offer then bought a new house in a new subdivision in my new hometown.\n\nShirley was the first to know I was leaving The City and claimed to be happy for me. We made love for hours after I gave her the news. I was going to miss her and she apparently was going to miss me. When I had everything set to go I visited Shirley at her home. \n\nI thanked her for her affection. She was probably as fond of me as I was of her. Well, probably not as much as I was fond of her. She did shed a tear or two but assured me that things were much better and not to worry about her.\n\nStill, I worried about her. I reminded her that she had my cell number and my e-mail address. I wanted her reassurances on a regular basis. We kissed and I drove to my new life in a town called Felicity.\n\nShirley and I talked on the phone nearly every day and she still claimed she was fine, that her husband was no longer insisting on sex and seemed to be happy enough with her cooking and cleaning.\n\nFour weeks after I moved to Felicity she called me on my cell. She wanted to know if she could crash with me for a couple of days.\n\nI immediately said sure and to come down as soon as she wanted.\n\n\"I am in your parking lot,\" she said. \n\n\"Come on in right now. I have something to finish up that will take five minutes then we will go to lunch.\"\n\n\"I am not very presentable,\" she said.\n\n\"This is a tourist town. Nobody is very presentable. Come on in. The receptionist will point you my way,\" I said and hung up.\n\nFive minutes later she walked in. She had a black eye and a split lip. I immediately called our chief of police and buzzed Carly, one of the partners in the law firm and my immediate boss.\n\nWhen Carly got to my office and saw Shirley she ordered me out of the room. Three minutes later Shawna, our police chief, came in and rushed straight to my office.\n\nThirty agonizing minutes later Shawna came out. Before I could ask her anything she embraced me and kissed my lips. \"I love good guys,\" she said, kissed me again and left.\n\nIt would be another twenty minutes before Carly and Shirley came out.\n\nCarly said, \"I am taking her to the Women's Shelter to register her there. I will call you when you can come take her home.\"\n\nShe stepped over to me and grabbed the lapels of my jacket so I would lean over and she kissed me on the lips then led Shirley out. I had not had a chance to talk to her at all.\n\nAn hour later Carly called me and said, \"We will be in your driveway by the time you get here. Bring us something to eat.\"\n\nI briefly wondered how she knew where I lived but quickly rushed next door to get a big batch of burritos from Janie's Gourmet Junk Foods and sped home.\n\nIt took a while for me to hear the entire story. Carly was famished and Shirley had to be careful with her food so talking had to wait for the end of the burritos.\n\nThe gist of it was that Shirley's husband was now in jail under assault charges and had a restraining order in the works as well as divorce papers. \n\nThe cops had been interrogating him for hours because he was suspected of murdering his wife. Witnesses had heard him threaten to kill her.\n\nCarly said, \"If I had known he was in the middle of that I would have asked Shawna to hold off on her call to the city for a few hours.\"\n\nThe incident started when Shirley was called to their doctor's office for an exam. It turned out that Bastard had an STD and had blamed her. Apparently he did not know that protocol called for contacting the spouses.\n\nIt likely never occurred to him that it had been six weeks since they had sex and expected her to test positive. She did not. He got mad for proving him a liar and beat her up right there at the doctor's office. He chased after her when she fled but was delayed when a nurse tried to stop him. He shoved her to the floor but the delay allowed Shirley to beat him to the elevator. \n\nBy the time he got to the parking lot she was gone but he assumed she was going home so he sped there. He was raging in frustration because she wasn't home when the police arrived. He was immediately arrested.\n\nInstead of running home Shirley had gotten in her car and driven straight to Felicity. I was shaking in fury when they finished the story and they silently waited until I had myself under control. As soon I had calmed down Carly gave Shirley a short pep talk.\n\nBefore leaving my home Carly kissed me again and whispered, \"I am glad she has you.\"\n\nShe then kissed Shirley on the cheek and left.\n\nI did not know what to say or do so I hugged Shirley to me and kissed her everywhere I did not think would hurt. That turned out to be what she needed. A few sobs ensued but she was visibly relaxing. She knew she was safe.\n\nI took her to my bedroom and removed her clothes before ushering her into the shower. I allowed her to enjoy the cascade for a while then dried her off. After I had her take some ibuprofen I put her in bed. She was asleep in minutes. I gathered her garments and went into town. \n\nAt Allison's Boutique I gave the young blonde in the store Shirley's items and asked her to give me a variety of summer clothes in those sizes. The girl smiled at me and called \"Mom!\"\n\nAn older blonde came over and the daughter said to her, \"I think this must be Charles.\"\n\nI nodded in confusion, which deepened when the woman kissed me. \"Where is Shirley?' she asked.\n\n\"Home, sleeping.\"\n\n\"Good. She probably needs it. Tell me what she looks like.\"\n\nI had become a bit flustered and rambled, a bit. \"She is beautiful. Reddish blonde hair, green eyes, a few freckles, dimples when she smiles. She is beautiful. I brought her clothes because I do not understand women's sizes. She is beautiful.\"\n\nThe woman and her daughter smiled at me then asked me, \"Do these clothes fit her nicely?\"\n\n\"They are maybe a bit too big. Oh no, I forgot to bring her shoes.\"\n\n\"Shoes she will need to try on. We can take care of the rest. Are you going home or back to the office?\"\n\n\"Work, I need to explain my delay.\"\n\n\"You will not need to explain anything but you do need to see Carly, she has papers for you to take to Shirley. On your way back home stop by, we will have some things for her.\"\n\nI reached for my wallet to give her my credit card but she stopped me saying, \"Settle up later. We are going to give her enough to take her through the next few days but she will still need a wardrobe. When she feels it's OK to be out in public bring her back.\"\n\nShe kissed me and began to look through Shirley's stuff. The daughter walked me to the door and kissed my cheek before saying bye.\n\nI was confused. How did she know Carly wanted me? And how did Carly know I would be going to the boutique?\n\nI hurried to my office across the boulevard and found Carly waiting for me with the papers Shirley needed to sign. I began to apologize but Carly said, \"Go. You do not want Shirley to wake up and find herself alone.\"\n\nI was waiting on traffic in the middle of the median when it occurred to me to ask myself, \"How did Carly know Shirley was taking a nap.\"\n\nI rushed into the boutique and was handed two big bags then rushed to my car and home. Shirley was in a sound sleep. \n\nI put the bags on the floor on her side of the bed and the papers on the desk in my home office. I connected my computer to my office unit and worked for about two hours.\n\nI wondered if I was going to kill the bastard.\n\nI had just started to look around the kitchen for something I could fix for dinner that would not be too painful for Shirley to eat when my doorbell rang. A very tall brunette and a very small redhead came in carrying boxes.\n\n\"Hi. We are Karen and Marina and we brought you supper. Is Shirley up yet? Where do you keep your large spoons? Chef Mike made you some amazing sort of stew thing that tastes just like a cheeseburger. Shirley's is the one with the smaller pieces so it wont hurt her. That bag has an amazingly good tiramisu ice cream. Put it in the refrigerator, not the freezer the chef said. Oh, here. This is an application to be a secretary at the new elementary school. Shirley will like it there. How do you like Felicity so far? We love everybody even Bernice who thinks she is everyone's bossy grandmother. Oh. This bag has a toothbrush, deodorant, and a hairbrush. Shawna said she was as tall as she is. Carly said she looks like family even if she is Canadian.\" \n\n\"Charles?\"\n\n\"Oh good Shirley is up.\"\n\nI had long ago given up trying to get a word in edgewise so I did not think to stop them from going to the bedroom. They led a still naked Shirley to the dining table and set her up with her dinner. It did look and smell delicious.\n\nAfter they kissed Shirley and me they left just as abruptly as they had come.\n\n\"Who were they again?\" Shirley asked.\n\n\"Karen and Marina. Karen, the small redhead, is a sister or cousin of Carly. Marina I had not met until just now. They were not kidding, this stuff is delicious. Does it hurt to eat?\"\n\n\"Only when I overload the spoon. My lip is a lot less swollen and the eye looks worse than it is but I am beginning to suspect my nose is broken.\"\n\n\"Do you want to wait until you finish dinner before we go to the clinic or do you want to go now?\"\n\n\"I am fine. Carly wanted to take me to the clinic after we went to the shelter but I wanted to go home, I mean here.\"\n\n\"Home is here and vice versa. Eat your dinner slowly.\"\n\nAfter a few spoonfuls Shirley began to giggle and said, \"I am eating dinner naked. A first for me.\"\n\n\"I certainly hope not the last.\"\n\nI leaned to her and kissed her cheek as I pinched a nipple.\n\n\"I look terrible, how can you find me attractive?\"\n\n\"I can show you proof.\"\n\n\"Show me.\"\n\nI stood and quickly became as naked as she was and proudly displayed my erection.\n\n\"I've missed this thing,\" she said as she gripped it.\n\n\"That thing has missed you. Finish your supper first.\"\n\n\"Yes sir.\" she said although she was very reluctant to release her grip on my cock.\n\nAfter we finished dinner she stood and pulled me up by my dick and led us to the bed. She had me lay on my back and slowly inserted my cock into her. After she was completely seated she said, \"I am going to give you some details you don't know about my relationship with Bastard.\n\nRight here are two big differences, I am on top and I am talking. He would not allow either. He would not go down on me. He would not kiss me after he ejaculated. He grabbed but did not caress any part of me.\n\nI told our doctor that Bastard and I had not had sexual relations in six weeks but it was a lot longer than that since our last normal fuck. For months all he had wanted was to fuck me in the ass. There was one thing I was very happy for when I was at the doctor's office, when he fucked my ass he always wore a condom.\"\n\nI was not surprised at all to hear he was a selfish bastard. Shirley had given me the impression that the only caresses she ever got were from me. Going down on her always resulted in loud orgasms.",
        "I said, \"Ass fucks are not my thing so you are safe from that. You on top I love more than me on top because I can see your face, play with your tits, and I love it when your nipples graze my chest. Plus I can be sure I wont crush you with my weight. Anything else you need to tell me?\"\n\n\"Not at this time.\"\n\n\"Then get off me and let's go to the clinic.\"\n\nI still had a very erect cock so she was surprised when I urged her up. I however had seen that the other eye was starting to show signs of trauma. I was sure her nose was broken.\n\nI handed her one of my t-shirts that covered her to her knees. We dressed quickly and off we went.\n\nHer nose was in fact broken and she did end up with those q-tip things up her nostrils but the doctor said everything else was OK; her lips only needed an ice pack. \n\nLike everyone else that day Dr. Hills seemed to know a lot about Shirley and me. She asked Shirley if she needed a tranquilizer or pain pills.\n\nShirley answered, \"No thanks. Ibuprofen works well enough and he is my tranquilizer.\" I felt myself blush.\n\nDoctor Hills smiled and told us to come back in a week.\n\nShe kissed us both when we left her office.\n\nI drove us to my office building and had her wait in the car; her purse was in my office and her car was in our parking lot.\n\nWhen I came out a policewoman was talking to her. As I approached she extended her hand and said, \"Hi, Charles. Good to meet you. I'm Verna, the deputy chief of police. Shirley told me you nagged her into going to the clinic. I am glad it's only a broken nose but those things up her nostrils sure make her sound funny. Let me know if I can be of help in anything.\"\n\nShe kissed me then helped Shirley move from my car to hers and kissed her. I handed Shirley her purse and as soon as she found the keys Verna said \"Good night,\" and left.\n\nI told Shirley to follow me but not to panic about losing sight of me; I would be keeping her in my rearview mirror.\n\nWe made it home and I immediately made us both nude. I pulled out her dining chair and had her sit. I brought her a bag of ice for her lips then brought out our dessert.\n\n\"Did the girls bring this too?\"\n\n\"Yes. Dinner tonight was courtesy of a Chef Mike but I don't know who that is.\"\n\n\"We need to find him and thank him. By the way, you have been in this town only a month. How is it that everyone kisses you?\"\n\n\"That started just today when Shawna came out of my office and kissed me saying she loves good guys. The chief of police kissed me. Amazing. \n\nThen Carly, my boss, kissed me. Then this lady at a dress shop and her daughter, then Marina and Karen, then the doctor tonight, and now the deputy chief of police. More women have kissed me today than all women have kissed me in total over the last four years. \n\nNow, having said that I will tell you that many of the women in this town routinely hold hands and kiss on the lips. Some are probably gay but basically it is married or single, young or old, Hispanic, Asian, Black, Redheads, Blondes, Brunettes, all of them do it, even tourist do it if they stay longer than a weekend. My guess is that as soon as your lips heal they will be kissed often and by many.\"\n\n\"I would love that. What dress shop?\"\n\n\"I figured you did not have a chance to pack so I went to this shop near work and asked them to get me some emergency clothes for you. I took your clothes with me so they could get the sizes.\"\n\n\"Where are they?\"\n\n\"In the bags on the floor on your side of the bed.\"\n\n\"Oh, I thought those were your things. My side of the bed, I like the sound of that. Are my clothes pretty?\" \n\n\"I don't know, I haven't looked.\n\n\"Time for a fashion show.\"\n\n\"But I just got you naked.\"\n\n\"How about if every other turn I come out and model nude?\"\n\n\"I can live with that.\"\n\nHer first outfit was a light green sundress with large yellow flowers printed on it. I whistled and said, \"You look fabulous.\"\n\nShe said, \"I love it and twirled around.\"\n\n\"Umm, baby. I could see your glorious pussy when you twirled.\"\n\n\"I haven't found any panties yet. They may be in the other bag.\"\n\nShe left and as promised returned naked. I growled at her. She giggled.\n\nShe returned wearing a dark blue sundress with a deep red flower embroidered over the top. We both loved it too.\n\nHer next nude walk brought her directly in front of me. She made a quick turn and paused and I took the opportunity to gently bite an ass cheek. She squealed and ran back to the bedroom.\n\nShe returned wearing flared khaki shorts and a black blouse.\n\n\"I love this but it needs accessories. Does this town have a Cube-Mart?\"\n\n\"No, the nearest are a twenty five minute drive west or forty minute drive north. Your best bet for that in town would be the tourist shops in the resort or the shop your clothes came from.\"\n\nShe nodded and returned naked, stopped in front of me and dangled her full and beautiful tits by my lips. As I kissed them she said. \"No bras and no panties in either bag except my own and one that matches the green dress.\"\n\nI sat her on my lap and said, \"You know, I don't think anybody at my office wears a bra. The doctor did not wear a bra. Neither Karen nor Marina wore bras and Marina has impressive tits. Neither the mother nor daughter at the dress shop wore bras. Maybe it's the norm in this town. Now you have me wondering if any of them wear panties.\"\n\n\"So I see you notice when a woman is braless.\"\n\n\"All men do. I personally love to watch them dance.\"\n\n\"I sometimes go out without panties as you well know but I would be afraid to go out without a bra. I may be too big to do that\"\n\n\"You were not wearing a bra when you modeled the clothes and you looked great. Anything else in the bags?\"\n\n\"Two nice shorts and three nice pullover shirts. I need to thank the ladies at the shop. My outfits are great. They are the most stylish things I have owned in ages if not ever.\"\n\n\"Are you done modeling?\"\n\n\"Yes. It's been a long day and we need to get some sleep.\"\n\nFor the second time that night she pulled me up by grabbing my erect dick and for the second time that nigh I found myself on my back with Shirley impaled on my cock.\n\n\"Sweetheart, we can't fuck until those things come out of your nose. You can hardly catch your breath after an orgasm under normal circumstances and with those things in your nose you would choke to death.\"\n\n\"But I can give you a nice cum,\" she said as she began to fuck me. \n\nI enjoyed it for a while but saw that she was getting into it too much and was already gasping for air so I stopped her by hugging her to me. She sighed and said, \"A handjob then.\"\n\n\"In the morning. Are you coming down?\"\n\n\"No.\"\n\nI put a pillow on my shoulder and she put her head down on it. I covered us up and turned my lamp off. I began to caress her back and ass as I kissed her forehead. She held me tightly. \n\n\"As different as night and day the saying goes. Today I lived it. I love the night part of it,\" she said with a soft giggle.\n\nSuddenly her vaginal walls began to rhythmically squeeze my cock. My cock had been waiting patiently for anything good to happen and was immediately overjoyed. I ejaculated into her pussy. \"Thanks,\" I said.\n\nShe whispered in my ear, \"Anytime.\"\n\nThat first night she was asleep draped over my body in less than two minutes. My cock was very slow going to sleep and so was I.\n\nI wondered about my future, our future. I hoped there was a lot of the present in it. \n\nI was alone when I woke up the following morning. I heard noises in the kitchen so I began my normal workday morning routine. I was dressed except for my suit jacket when I joined her. She had coffee and a ham and cheese sandwich ready for me.\n\nI kissed her lips softly and said \"Good Morning.\"\n\n\"Good Morning. That kiss did not hurt and you can kiss me like that all day. I did not find anything to make you breakfast with this morning so I made you that. You don't have eggs or bacon, or sausage or even cereal. Do you eat breakfast at home?\"\n\n\"Not often during the work week. I never have eggs, I can't stand the smell, but I normally have bacon and sausage here. I do use them a lot when I cook and I do my cooking for the week on Sundays. I forgot I was out.\"\n\n\"Are you allergic to eggs?\"\n\n\"Yes and no. If I can smell them even if they are cooked I get nauseous, sometimes I throw up. But when they are part of a piecrust or cake or anything that makes the smell disappear I am OK with them. I take it you like eggs.\"\n\n\"Yes, but I will make sure you never smell one though. May I make out a list for the grocery store?\"\n\n\"Absolutely. Oh, I almost forgot. You have papers to sign before I go. They are on my desk.\"\n\n\"I will get them, you finish your breakfast.\"\n\nIt was a very fine sandwich and the coffee was perfect. It was my most leisurely breakfast in months and my most pleasant morning company in years. As Shirley signed the papers I was strangely affected when I saw how feminine Shirley's handwriting was. Somehow it made me proud.\n\n\"You have to witness that I signed them. What is this other form from the school district?\" She asked.\n\n\"Oh, Marina and Karen brought that for you. It's for a school secretary job at a new school. Fill that out too and I will drop it off.\"\n\n\"Ha, another job I wont get.\"\n\n\"As a famous player said, \"In one word, youneverknow.\"\n\n\"Who said that?\"\n\n\"Joaquin Andujar.\"\n\n\"Was he the pitcher that put his warm-up jacket over his non-pitching arm?\"\n\n\"The one and only. I am very impressed that you would know that.\"\n\n\"He was one of my granddad's favorite.\"\n\n\"Huh, interesting. He was a favorite of my granddad too. All done?\"\n\n\"Yep, here you go. By the way I promise not to rearrange your furniture while you are gone.\"\n\n\"That is nice of you.\"\n\n\"Yes, no problem. I can wait until you get home so you can move the heavy stuff for me.\"\n\nI gently swatted her butt and learned the only thing she had on was the t-shirt I had loaned her the night before. I told my dick to go back to sleep because I had to go to work.\n\n\"Do you talk to your dick often?\"\n\n\"No, first time in years. It does become unruly when you are around.\"\n\nShe wrapped her arms around me and said, \"You know, you are the first man I have ever sent off to work that was wearing a suit. I feel like I have been promoted.\"\n\nI laughed and kissed her gently but still slipped my tongue into her mouth. She tried to trap it with her own tongue and I was tempted to allow it but I did need to get to work and she needed to breathe.\n\nAfter a softer kiss I said, \"Keep your phone handy in case Carly or Shawna need you. I will bring lunch.\"\n\nI kissed her again as I gently groped her ass and went to work.\n\nMost of the time I was the only male at my office. We were a new firm. Harry, the CEO of the firm, only showed up when requested or when he wanted somebody to take him to lunch. \n\nThe four other lawyers were women, two sisters, a seldom seen cousin and an in-law of sorts. The five of us shared a receptionist, two secretaries, a paralegal and my accountant. All were women and all were under forty so at twenty-four I was the youngest in the firm except for our receptionist. She had just graduated from high school.\n\nAll of them kissed me when I walked in that morning. \n\nEveryone asked for an up-date on Shirley. Everyone told me they were glad she had me.\n\nI gave Carly the papers Shirley had signed and accidentally included the job application. I asked for its return but Carly said, \"I can take care of this too. Tell Shirley I sympathize with her broken nose. Karen broke mine in a pillow fight once and I was miserable until they took those doohickeys out.\"\n\n\"You were kids then?\"\n\n\"No, it was just a year ago, the night before a wedding in which we were bridesmaids. I was the one that looked like a raccoon.\"\n\nI smiled at the though that a lawyer and a schoolteacher would get into a death match pillow fight in the first place.\n\nIt was a surreal day at work. Every client that called or came in asked about Shirley. By noon I understood that this town had no secrets and we had apparently been absorbed into the giant organism called Felicity.\n\nA few minutes before noon I called Shirley and asked her if tacos would be OK for lunch. She said she loved tacos. My thinking was that I could get them next door and that would allow me to spend a bit more time at home with her. \n\nBut when I went over to pick up the tacos from Janie's she handed me a huge bag. \n\nIn response to my shock she signed to me, \".... called and ordered, (?) fourteen tacos. I was to.....cokes.\"\n\nIn my month in Felicity I had quickly learned that my favorite restaurateur was deaf and so where several other clients of the firm. There were ongoing sign language evening classes at the high school and I had been attending them for three weeks. \n\nI was flattered that Janie did not feel she needed to write things down or get one of the kids that worked for her to interpret for me. Even though I missed a third of what she said I got the gist of it. I also got a fine kiss from what until yesterday had been the prettiest girl in town.\n\nAfter stopping for a case of cokes I got home to find I had no place to park. I parked in front of my neighbor's house and worried about it until I saw that my neighbor Leslie was in my house along with at least five others. All kissed me as they took the tacos and the cokes. \n\nShirley came to me and gave me a ferocious hug and said, \"Marina and Karen got here just a few minutes after you left this morning. At one time I think there may have been at least twelve women here. I have been hugged and kissed more than I have ever been hugged and kissed in my whole life. I have already cried once. I think I am about to cry again.\"\n\nI returned her hug then allowed her to join the maelstrom around the tacos and drinks. I spent the next twenty minutes receiving hugs and kisses and making failed attempts to grab a taco.\n\nThe blonde woman from the dress shop and a tall redhead came in. All of the girls jumped into their arms and gave them fierce kisses. I was introduced to Wendy and Janice and I got hugs and kisses from both. Shirley was introduced to them and got the same treatment except the kisses were longer and more meaningful. I saw a tear slide down Shirley's cheek.\n\nI kissed the tear away and announced I was going back to work, which won me more hugs and kisses.\n\nI had not had a single bite to eat so after I parked my car I went back to Janie's and ordered two tacos and a coke. Janie laughed and patted me on the back when I sat down to eat.\n\nMy afternoon in the office went by quickly as I had to work hard to steer a client away from an un-necessary move. I also needed to reassure her that Shirley was OK.\n\nSince I started my working life I had never paid attention to quitting time, there was never anyone home waiting on me. Since arriving in Felicity my usual quitting time was always after seven, often after eight, sometimes after nine. It took a phone call to remind me that I had someone waiting for me at home.\n\n\"Dinner will be ready when you get here,\" Shirley said. It was after six, office hours ended at five. I rushed home and was relived to see that the only car there was Shirley's. \n\nShe greeted me with a kiss and suggested I take a quick shower but not to bother getting dressed. We were eating supper nude.\n\nThat became the usual pattern for our evenings. Kisses and gropes accompanied the nude dinner. We remained nude during our time on the loveseat as we watched TV, it felt very nice, normal, and comfortable.\n\nIt did take me two days to realize she actually had rearranged the furniture. I was enjoying sitting naked next to her naked body too much to notice anything but her. The only seat facing the TV before had been the recliner. When the loveseat took its place everything else had to be moved and still keep the recliner facing the TV. It was such a logical arrangement I had not noticed. \n\nMost of the younger women that had suddenly surrounded Shirley with friendship were teachers and the school year had ended the previous Friday. I remembered that there was a lot of women muscle power available that day.\n\nI learned from Shirley that on most mornings at least two girls would come by the house and fill her in on all the necessary gossip. After her lip was back to normal she was kissed hard and often by all of them.\n\nShirley said, \"Some even run their hands over my ass, and yes I love the attention. You and I are the babies in the group although Marina is just nine months older than me and Karen and Carly just over two years older. \n\nKaren and Marina seem to be here all the time and I finally learned that their homes are just down the street. Carly lives directly across the circle from Karen. Did you know that?\"\n\n\"No, I have never driven around the circle. I did not know any of my neighbors until you got here.\"\n\nShirley giggled and continued, \"They think you are a hero and love you for treating me like I was the center of the universe. Thanks. I have never been as happy being me as I am now.\"\n\nShe then gave me a kiss that showed me her lips her perfectly fine but those things up her nose still shortened the kisses to well before either of us wanted them to end.\n\nThat Friday when I walked nude to the table for dinner I found a mouth-watering steak with a loaded baked potato staring at me, daring me to eat it up. Shirley's steak was cut into strips and was suffering in a bed of vegetables.\n\nI had demolished half of my dinner before it occurred to me I did not have any steaks or potatoes in the house.\n\n\"Where did this come from?\" I asked.\n\n\"The girls took me grocery shopping. What should have taken me less than forty-five minutes to get took over an hour and a half because of all the people that wanted to welcome me to Felicity. \n\nShawna came in just to kiss me and left the store as soon as she did. I loved her kiss knowing that had Bastard seen it he probably would have shot both of us.\n\nThe girls helped me put the groceries up then took me to lunch. I met Janie and now I know why you want me to go to your sign language class with you. I signed up at the school office.\n\nThe girls were very impressed when they noticed you had given me a credit card. They were really impressed when I told them you had given me two hundred dollars in cash just for make-up and perfume. They all referred to you as 'the worlds biggest boy scout.' I agreed with their assessment. I got a couple of new outfits from Allison's boutique. you will see me model later.\"\n\n\"Do they sell undergarments?\"\n\n\"Yes but they are parts of outfits or for special occasions. \"Special seductive occasions,\" Leslie said. \"A place called Bernice's carries regular underwear and I bought a bra and some panties there.\n\nLeslie is gay by the way. Her partner is on a business trip so I have not met her. Leslie knocked on your kitchen door yesterday morning when Marina and Karen were here. She was naked which did not faze the girls a bit. She wanted Marina to confirm that one of her volleyball players had passed the semester. \n\nMarina followed Leslie to her house to bring it up on her computer. Marina was also naked by the time she went out the kitchen door. Did you know you have a gate that goes to her backyard?\"\n\n\"Yes, all the houses in the sub-division have gates to the neighbors yards. Everybody knew everybody before they moved in. We are the only outsiders here.\"\n\n\"I don't think we are outsiders anymore.\"\n\n\"I hope so, I know you are not.\"\n\nShirley gave me a big happy grin and a very sloppy kiss.\n\n\"I bragged about you maybe a little too much today. Sorry.\"\n\n\"Sorry about what?\" I asked as I looked at my now very empty plate.\n\nShe did not answer but simply stood and gave me a nice soft kiss before taking my plate to the kitchen. \n\nAfter modeling her new outfits, (with a nude turn between them), we sat on my love seat naked like we had every night and tried to watch a Netflix movie as we played with each other.",
        "Twice after we went to bed I tried gentle fingerfucks but as with other attempts to bring her to a mild orgasm her response was never gentle and left her gasping for air. \n\nShe did get much pleasure from my adoration of her tits including what felt a little like short and sweet orgasms. Each night I was gifted with the most loving handjob a man could get. Still, I was as anxious for those things to come out of Shirley's nose as she was.\n\nNeither of us mentioned it but we were very happy to be with whom we were. We adored adoring each other.\n\nThat Sunday we had a few visitors to our house via the backyard. The girls were topless and the guys wore gym shorts. \n\nShirley and I decided we needed patio furniture and I asked her to get the girls to help fill up our covered patio with comfortable but sturdy stuff. I decided to start looking for a grill.\n\nOn Monday our hopes for jungle fucks were dashed when Doctor Beverly decided to insert new doohickeys in her nose; Shirley had not yet healed completely. \n\nOur life settled into a comfortable zone that week. She would come up to my building and bring me lunch every day and kiss her way to my office. I learned that not only did Shirley like to cook she was very, very good at it. She ended up making larger portions to insure there were \"leftovers\" for the rest of the office.\n\nThat following Sunday afternoon I took Shirley to Port Aransas and went fishing. We caught enough fish for a month. It had been her first time to fish from a boat.\n\nThe following Monday Shirley had a full buffet for everyone in the office but me. She ushered me to my office, locked the door, and after raising her dress sat on my desk and ordered, \"Fuck me now!\"\n\nThe things in her nose were gone. We may have been too loud to keep our activity a secret but I was not too worried since Carly and her husband Jimmy sometimes enjoyed the same lunch treat we were having and we were not nearly as loud as they were. \n\nJimmy's office was on the second floor of our building. There was an ad agency up there and I suspected Jimmy was in charge. If we ever needed Carly for something and could not find her we called his office.\n\nWhen we emerged from my office Shirley received long tender kisses from everyone. I saw her eyes widen then close when Carly kissed her. I suspected a tongue had made a visit. Shirley obviously had enjoyed the kiss.\n\nCarly said, \"I need to run upstairs for a few seconds. Be right back.\"\n\nAll the other women giggled and we heard her big sister Rhonda say, \"When has it ever been a few seconds?\"\n\nThe remaining ladies laughed out loud and I walked Shirley to the door and shared a long kiss. As I walked back to my office our defacto head of the office Fay asked me, \"So, how was your lunch?\" which renewed the giggles from the ladies.\n\nI felt myself blush all the way to my desk.\n\nThat night when I got home we fucked first, ate dinner, fucked, watched a movie, then fucked. The next morning she was as usual up before me and in the kitchen. I had just gotten into the shower when she joined me and we managed another fuck.\n\nAt noon she rushed into my office and handed me a fabulous steak salad and left telling me she had a lunch date with Lucy.\n\nThat night when I got home she was dressed. Shirley said, \"Take a quick shower and get dressed but comfortably. I have a job interview tonight at seven. It will take place at Sam's Grill and Tiki Bar. You are going to meet a few guys and drink beer, I am going to meet a woman and do a job interview.\"\n\n\"I did not know the place was open for business yet.\"\n\n\"Lucy said it isn't. Weird, huh? Apparently tonight is the dress rehearsal for the grand opening. Relax we have plenty of time. Enjoy your dinner.\"\n\n\"Aren't you eating?\"\n\nShe shook her head no and said, \"Too nervous. After the interview I will probably stay for a hamburger. They say his are the best in town.\"\n\n\"Who is the interview with?\"\n\n\"The superintendent of schools.\"\n\nAs soon as she saw I had finished dinner she said, \"We could go early if we wanted to. They are eating dinner there.\"\n\n\"In that case let me go pee and we will go.\"\n\nWhen we got to Sam's several of the women that we had gotten to know came over and kissed us. We were introduced to the superintendent of schools who turned out to be the same woman I knew as Carly's and Rhonda's mother. \n\nJuanita, who I knew as Janie's mom, then led me to the patio outside and I was introduced to five guys that were sitting on the floor with their backs to the wall. \n\nThe men greeted me warmly and introduced themselves. That was when I began to get the same jitters Shirley was probably suffering. These were the men whose money I was keeping track of, the wealth of Felicity and the forces behind the resurrection of the town.\n\nHalfway through of my beer they had put me at ease, I had been accepted as the new kid on the block. The youngest one other than me, Robby, thanked me for convincing his mother to abandon her harebrained idea of inviting Starbucks into her gallery. He said he especially liked my suggestion to her to recruit some coffee shop workers from Starbucks and set up her own. No franchise fees.\n\nHis mother was one of my five wealthiest clients. So was he.\n\nThe guys sitting on the floor around me were the \"General\" of Felicity, (Jim), the CEO of Felicity Music, (Robby), the architect of Felicity Center, (Sam), my big boss Harry, and the main force behind the new Felicity, (Ben). All of them were my bosses.\n\nAlthough all of them seemed to like me OK I was relieved when I was asked to come inside, Shirley needed some information.\n\nI went in and was pleased to see her munching on a hamburger as she chatted with her new friends. Among them was a short woman with whom she was speaking French.\n\n\"This is Chef Mike,\" Shirley said as an introduction. I gave her effusive thanks for Shirley's welcoming dinner and desert. She said she was happy we liked it then gave Shirley two cheek kisses and a more than friendly kiss on the lips and followed that with similar kisses for Martha then retreated to the kitchen.\n\n\"Here,\" Shirley said as she handed me a form and a pen. If you sign as a personal reference I will give you a blowjob tonight.\"\n\nThe ladies laughed and cheered and I pretended to consider it then said, \"No deal.\"\n\nI cut off the boos when I added, \"You couldn't breathe through your nose for two weeks and would have suffocated before there was a happy ending. I want two weeks worth.\"\n\n\"Ooh, a hard bargain\" the girl I knew to be Lucy said. \"Still, it sounds fair to me. Martha?\"\n\n\"Just sign the fucking thing,'\" Martha said to me to the great delight and laughter of all. I meekly signed. In a way, as of the previous Monday, Martha was my boss too.\n\nJanie came up to me and after a kiss she kissed Shirley and signed to her that she was pleased to see how well she looked. Karen translated that as \"You have yummy tits.\"\n\nAfter the giggle filled altercation ended Janie introduced me to her fianc\u00e9 Martin. He was the events manager at the resort on the next block. Shortly after that Shawna came in and kissed us then introduced her husband Sammy.\n\nI knew Janie and Sammy could read lips but I tried to sign as I spoke to them. Apparently Janie and Sammy were very much loved by everyone and everyone was very pleased that I was making and effort for them.\n\nMartha however put a dent in my ego trip by telling me I had just called Sammy a douche bag. Before I began to panic and apologize Martha got swats on the butt from Janie and Shawna as Lucy said, \"You mean old witch, you know he said no such thing.\"\n\n\"I swear I need to put her in a home,\" Carly said.\n\nUntil that moment I had not realized she was there. My boss had heard me negotiate blowjobs.\n\nMartha distracted me by standing on her chair and giving me a hug and a kiss. She then whispered in my ear, \"You would never ever find anyone better for you.\" I lifted her down and she kissed her way out of the room. It was easy to see that everyone loved and respected Martha.\n\nBefore she left Lucy hugged me and said, \"Martha is the best judge of character anyone has ever known. I wanted Shirley as my secretary last week but we all yield to Martha and I was probably as nervous as Shirley was tonight.\"\n\nIt was not until then that I realized that Lucy was the principal of the new school. \n\nLucy continued, \"Martha asked her only one question and it was about you and living in Felicity. Shirley had not finished the story of how happy she was to have a true gentle man in her life and how much she loved the town and everyone in it when Martha began to write out her contract. We know there is no formal or unstated agreement between the two of you, but please try not to hurt her.\"\n\nShe saw the stunned look on my face when she said that. I know Carly did too. Lucy kissed me hard then kissed Shirley hard before leaving the place. Carly got up on Martha's chair and gave me a clinging hug and big kiss before sliding down my body. Both kissed their way out of the place.\n\nI sat at the table and sipped what was left of my beer as three small redheads and Marina filled Shirley in on who was who inside and outside the place. It became clear to us we were in the midst of Felicity royalty. It also became clear that said royalty had no idea they were such.\n\nWe learned that in addition to being Janie's mom Juanita was Sam's wife and a member of the city government. She joined us with a bottle of wine and kissed me on the cheek then poured wine for the ladies. \"You will love this,\" Karen said to Shirley.\n\nJuanita said to me, \"My daughter Janie has told me a lot about you. In fact she was about to start fixing you up with a friend of hers who is terminally ditzy. I am glad you will not be subjected to that. Can you take on another client?\"\n\n\"Yes, I am busy but not inundated.\"\n\n\"Good, I have become very busy upstairs and Mom is having a difficult time with the books at our store. She would enjoy leaving the books to somebody else. I will bring you what we have this week. A word of warning, the store is over a hundred years old and for the first part the records are a bit of a mess. It is a completely different entity than Bolero and Janie's place. Janie handles her own books and hers will be perfect when you get them. You already do Bolero.\"\n\n\"I will see to it you get the family discount,\" I said in jest.\n\nJuanita smiled and gave me a terrific kiss.\n\n\"Oooh, we are going to tell Sam,\" Karen said.\n\n\"Tell Sam what?' Came Sam's voice from behind us.\n\n\"\"Oooh, your so busted,\" the girls told Juanita as they giggled.\n\nSam asked me to follow him to a quiet end of the bar. I had not noticed until then that the original small crowd of friends had thinned out considerably. It was after all just a Tuesday in a bar that was not yet open for business.\n\nI began to apologize but he chuckled and said, \"The kiss? You have treated our daughter like the gorgeous human being she is and for that you can pretty much count on many more kisses like the one she just gave you.\n\nI have a more serious thing to ask you about. Do you think you will end up killing the bastard?\"\n\nMy fury surfaced for less than an instant but he saw it.\n\n\"That's what I thought. If and when you do I strongly suggest it happens in Felicity. We have zero tolerance for abusers here. \n\nOn a different note I am happy to finally meet the guy that knows where my money is and happier still to see he is the right guy. Welcome to Felicity.\"\n\nHe shook my hand then went around the bar and reached into a small refrigerator. When he turned he had three beers in each hand. He gave me one with a nod then went outside. The bartender looked at me and smiled as she opened the bottle. \"Enjoy,\" she said.\n\nWhen I returned to the table the ladies were pouring out the last of the wine and finishing off the fries and onion rings.\n\nI took a sip of my beer and was immediately awed by it. I looked at the label and saw a language I could not read.\n\n\"It's a pilsner from the town of Pilsner in the Czech Republic,\" Juanita said. \"When it shows up in the market Sam buys all he can but that is just maybe a case or two a month. He drinks most of it himself although normally only one a day. He does share it with the guys outside at times. You have just been accepted in whatever nefarious group they invented. Sam is very lucky I don't like beer.\n\nThat beer has a lot higher alcohol contents than American beer so be careful with it. For most of the guys their limit is one. Inga can drink three before she starts singing.\"\n\nThe girls laughed in agreement to that last line. Shirley and I just smiled. We had no idea who Inga was. We were then told that she worked in the city which is why we had not met her yet but would be living on my circle soon.\n\nI briefly considered sharing my beer but then I though they had been drinking wine and that the tastes would clash. By the time I had finished that train of thought the beer was gone.\n\nSo was the wine so Allison, Karen, Helen, Maggie and Marina decided it was a good time to go next door and pry their husbands away from the electronic games and go home. We kissed them and then kissed Juanita. We stepped to the patio to say goodnight to the guys and went home. I took the Pilsner bottle home with me. I had a liquor import connection in the city.\n\nWhen we got home and undressed Shirley took a position by my cock and began a slow kissing blowjob.\n\n\"That was my best unsuccessful job interview ever. I had fun tonight and everyone seems to like me and everyone adores you. I should be able to get a job here.\"\n\n\"Why would you do that, you already have a job.\"\n\n\"Nah, I royally fucked up the interview with Martha,\"\n\n'How so?\"\n\n\"I cried.\"\n\n\"What was I signing when we were haggling over blowjobs?\"\n\n\"My application. I assume they have to file it.\"\n\n\"You know, I sort of know what an application looks like and that was not an application I signed. It was a contract. \n\nIt was not just a reference that I signed. As the newly designated interim controller for the school district I just approved for the school district put you on the payroll.\" \n\nI loved the way her expressions changed as she processed what I had just said. Her glee at the end was phenomenal even though for an instant I worried she was going to pull my dick completely off.\n\nShe burst into tears and giggles and did not seem to be able to control either. I pulled her up over me and kissed her. I allowed her emotions to flow.\n\nI reminded myself that getting a job is an affirmation of your worth. I was proud and happy for her.\n\nHer emotional rollercoaster throughout the day and night and the wine she consumed put her to sleep within seconds after her last giggle. For the sixteenth night in a row she had fallen asleep with her naked body draped over mine.\n\nI again began to think about the future. She now had a job and although she would not start work for nearly two months and would not get a paycheck for a month after that she now had a target date for getting her own place. She could of course go the women's shelter anytime she wanted but she seemed content to live with me.\n\nI asked myself if I was content with her living with me. My chuckling almost woke her up so I resumed kissing and caressing her. It had been the stupidest question I had ever asked myself.\n\nI asked myself another pointed question. Would I allow her to go without protest is she decided she wanted to be on her own? Sadly I knew that the answer to that one was also yes.\n\n\"Try not to hurt her,\" I had been urged. I was afraid they were talking to the wrong one.\n\nThe next morning she was already astride my hips when I woke up.\n\n\"Good morning,\" she said. \"You will need to get breakfast at Pedro's this morning. You may need to do that all week since I plan to begin each day like this for a while. I am confident you can handle it,\" she said as she began trying fuck me to Madagascar. My cum was so intense that I saw lemurs.\n\nShe joined me in the shower and took over the complete job of making me clean. As she scrubbed away she said. \"Last week I got confirmation to your guess that most women do not wear bras. The ones with C cups and up normally do but both Lucy and Marina are at least that and neither wears a bra, at least not during the summer. Most don't wear panties either unless it is the inconvenient part of the month.\n\nLast night I was fine knowing I had no undergarments. No, it was better than that. It was liberating. Many of the girls seem to enjoy having each other's hand on their tits as they kiss. I am wondering how you feel about that.\"\n\n\"Did somebody cop a feel from you last night?\"\n\n\"Yes.\"\n\n\"Did you enjoy it?\"\n\n\"Yes.\"\n\n\"Who?\"\n\n\"Carly, but in her defense I don't think she realized she had done it. I feel like I am keeping them from enjoying each other's company to the fullest. They don't want to shock me.\"\n\n\"Let me suggest something. Carly is probably frantic worrying about copping a feel. Next time you two kiss return the favor. I saw that she gave you a French kiss once, I assume she has special feelings for you anyway\"\n\nShirley put down the soapy washcloth and hugged me hard. She said, \"Carly has been giving me tongue kisses all week, her hand is on my ass almost as often as yours is. Mine is on hers often. She is special to me too.\"\n\nShe then whispered something to my chest that I did not catch and I said, \"What?\"\n\nShe giggled and said, \"You are going to be late to work. I will write you a tardy note to give to Carly. Coffee is ready.\"\n\nShe stepped out to dry and I soon followed her. She brought me a cup of coffee to the bedroom and stayed to watch me dress. She did write me a tardy excuse for Carly but there was no need because I was at work on time and she wasn't.\n\nHalfway through the morning Carly came to my desk spotted the note from Carly addressed to her and picked it up. She laughed out loud as she dropped the note on my desk and was still laughing when she left my office. I had not read the note so I picked it up.\n\nIt read, \"Dear Carly. Please excuse Charles' tardy this morning. I was fucking him to Mars. Thank you.\"\n\nAs I chuckled over the note I heard howls of laughter outside my door.\n\nJuanita came in, handed me a box if files then said, \"It's almost lunch. Lets go harass the kid in the fast food joint.\"\n\nI followed her and simply watched as she ordered Janie's help around. The two girls ignored what she was saying and ran to her for hugs and kisses. Janie came out and the two began a silent argument that had the two girls laughing and then blushing.\n\nThey were both signing way too fast for me but the girl's blush strengthened my resolve to get much better at it. I had apparently missed something really juicy.\n\nTheir argument had brought them face-to-face and it ended in a fierce kiss. Both signed to me, \"Well, I told her.\" I laughed as they embraced then Janie came to me for a kiss and hug.\n\nShe asked me if I was taking lunch to Shirley, (I had figured out what the sign for Shirley was the previous night). Shirley and I had not talked about lunch and I did not know if she expected me to bring it to her so I called.\n\nShe was at the almost completed elementary school with Lucy. She said, \"Bring us lunch here, Lucy said she wants two number twos with extra onions. Her husband James will be joining us soon. I want three burritos. We have cokes here.\"\n\nJuanita asked me to ask if she could come over and look at the building. Janie signed \"me too.\"\n\n\"Lucy said the more the merrier,\" Shirley said.\n\nJuanita went back to the kitchen with her daughter to help put lunch together and while they were there I tried to get the girls to tell me what had made them blush. My question made them blush.\n\nOne did say that the two say some amazing things to each other sometimes but they knew from the start that it was just part of their fun.",
        "Mother and daughter zoomed out of the kitchen each carrying a box and announced I was driving. Since I was the only one that did not know where the school was I thought it was fair.\n\nJuanita had me go down streets I have never driven before. They suddenly had me stop in front of a store that looked like a Woolworth's. An older black lady was sitting by the door and I sensed Janie sign to her. The woman signed back that she was going to whip both her and her mother. Janie and Juanita stuck their tongues out at her and she stuck hers out. I had never seen eyes smile so brilliantly as that woman's did.\n\nAfter I resumed driving Juanita said, \"That is Bernice. Since Aunt Rosa became blind and moved to the assisted living facility Bernice has inherited the mantle of everyone's grandmother. Aunt Rosa was the benevolent one, Bernice is the terrible one.\"\n\n\"Why is she the terrible one?\"\n\n\"She thinks the girls are so busy they are missing the joys of motherhood. She has ordered all of the girls to get pregnant and nags them about it. She does enjoy all the hugs and kisses she gets from the girls and that does shut her up for a while. Karen and Janie pick on her unmercifully.\n\n\"Your Aunt Rosa, how did she rule the roost?\"\n\n\"She bribed everyone with her cooking, especially the burritos you love so well. I was too busy trying to be a successful businesswoman and never learned her art. \n\nThank God Janie did. She stuck by Aunt Rosa every time she went into the kitchen. She knows all the tricks and secrets and is the only person on Earth that does. She will not even tell me. I would have strangled her long ago if it weren't for the burritos. Oww!\"\n\nA small hand had reached over from the back seat and punched Juanita on the shoulder. Of course I did notice Juanita signed her last sentence as she spoke it. She had volunteered for the blow.\n\nI had figured out that my route to the school had been amended just for the drive-by insults with Bernice when I suddenly found myself almost driving past the building which turned out to be less than half a mile from my house. I found an unblocked entrance and parked next to a lime green beetle. \n\nAs I was helping the ladies with the boxes a tall redheaded guy drove up. He got hugs and kisses from Juanita and Janie and was introduced to me as James, Lucy's husband and the head of the high school science department. He took one box and I took the other and we followed the ladies inside. The outside of the building looked finished but the interior was not close to being ready. Electricians, plumbers and painters were everywhere.\n\nWe found what was to be the office and went in. Shirley and Lucy were laughing at something Martha had just said. Everyone kissed everyone, (except for Shirley and James), and attacked the boxes. This time I quickly grabbed my two fish tacos and found a corner to wolf them down. James did the same thing with his enchiladas. We really did not have to worry because Janie and Juanita figured others would be there and we had plenty. \n\nIt was the first day the building had been open to school personnel but Shirley, Martha and Lucy were wearing hardhats.\n\nShawna came in and after kissing all of us she grabbed a small bag, donned a hardhat and went in search of her husband. Sammy was heading the electrical crew and Juanita had packed some tacos for them. There was lots of food and everyone was happy until Maggie came in and took the last of the fish tacos. She was bombarded with French fries several of which she managed to catch and eat before they hit the floor. Apparently the others had been eyeing the taco for themselves.\n\nAfter things settled down Maggie told us, \"Jason just won an award, this one actually had a cash prize to it.\"\n\nMartha said, \"At last. I am not complaining about Jason. I am complaining about all these societies that give him awards and no money.\"\n\n\"Which photo was it Maggie?\" Lucy asked.\n\n\"The one of Bernie in the park when he was teaching the boys how to play chess.\"\n\n\"Oh I really like that picture. Bernice was so proud it shut her up for a week,\" Lucy said. \"Wait till she finds out.\"\n\n\"She is finding out now. Jason just went there to tell Bernie and give him half the prize money,\" Maggie said.\n\nI had expected some smart remark about that from Martha but what I saw was pride. I was already a fan of hers since she gave Shirley a job but I became fond of her when I saw that.\n\nI mentioned that I needed to get back to work, apparently the one and only person that needed to do so.\n\nJuanita said, \"Hold on, \" and punched two numbers on her phone. \"Carly, I have Charles tied up looking over some stuff for me, he will be back a little late.\n\nNow what do you mean by that? And what makes you think I am not entirely truthful?\n\n\"Because I am walking into the school office right now and there better be a burrito left.\"\n\nCarly was indeed walking in and she had another small redhead with her. The two jumped into James arms for a kiss then jumped into Lucy's arms for a kiss and kissed everyone else.\n\nCarly covered her mother's face with kisses. When she was done Martha stopped her from leaving her side and pointed to a place by her jaw line and told her, \"You missed a spot.\" Carly apologized and licked where her mother had pointed.\n\nMartha said, \"Ewww.\"\n\n\"The new redhead inspected Shirley's lips for damage, saw that they were healed so she kissed her lips as she said, Hi, I'm Charlie, James' sister.\" She came to me and kissed my cheek and said, \"You must be Charles. Wow, you are taller than James.\"\n\nJanie signed, \"He is taller than Sammy.\"\n\nMartha said, \"I will be the point guard on their basketball team.\"\n\nHer deadpan delivery of zingers had roped me in before but that time my laughter came with everyone else's.\n\nCharlie turned to Carly and asked, \"Any burritos left?\"\n\n\"One more, Here. Why are there so many fries on the floor?\"\n\n\"Maggie helped herself to the last fish taco.\"\n\n\"Oh,\" Carly said with a smile. Apparently food fights were not rare in that clan.\n\nCarly then looked at me and said, \"You do need to get back. Jim Stewart needs your help on something, maybe about the upcoming city budget. It's pro bono but take your time. If Uncle Jim needs advice it must be something important.\"\n\nI kissed Shirley and everyone kissed me except Janie who had decided she needed to get back to work too and was riding over with me.\n\nWhat our Commissioner of Public Works wanted was a way to bring a small airport to Felicity. He had already prepared a list of hurdles for me and asked me for some ideas on how to get past them. I asked him if he preferred a private company or wanted the city to own it. \n\n\"Private,\" he said. \"I know they change hands often and do not always live up to their promises but I do not want to put the managing and maintenance problems on the city.\"\n\n\"How soon do you need this?\"\n\n\"No hurry. I heard you just got a big job dumped on your lap and I believe you are about to get another. You might start pestering Harry for an assistant.\"\n\nI laughed, pestering the big boss was out of the realm of possibility for me. I told Jim I would keep him posted and returned to my office.\n\nI drafted my accountant Edna into helping me bring a bookcase to our office workroom then gave her the job of putting Juanita's records on the shelf by year, oldest on the top shelf. I asked her to put the floppy disks and cassettes in smaller boxes by year on the bottom shelf and then get our bookkeeper started on it.\n\nI also said to her, \"Don't you get hooked by looking at the old entries fascinating as they are. You will be happy to know that the last three years will be on a disks and happier to learn that Janie did them.\"\n\nEdna said, \"Charles, we need our own secretary. Shirley was a secretary. We need our own secretary.\"\n\nI smiled and for some reason I kissed her cheek, only the second unsolicited kiss I had ever given in my life. My cock twitched when it recalled that it was inside Shirley's pussy when I gave my first such kiss.\n\nEdna welcomed my kiss. \n\nI said, \"Shirley has a job but you are right, we need our own secretary. I will plead and whine to Carly while you scrounge around for one. We want to hire someone the second Carly gives in. Do we need another bookkeeper?\"\n\n\"If we stay as we are no. If another big account comes in then yes. Neither of us has ever gone home at five and we are a new office. I am afraid we will get swamped and never get out from under\"\n\n\"You better scrounge around for your second bookkeeper while you are at it then. I will do my best to gain some courage and ask Harry.\"\n\nEdna smiled at me then embraced me warmly.\n\n\"You know, when I first saw that my immediate boss was twelve years old I just about quit. Do you remember what you said to me that day? You told me you needed me. Now here I am hoping you never leave and that if you do you will take me with you.\"\n\nEdna gave me a long soft kiss on the lips then asked, \"Have you told Shirley you are in love with her?\"\n\nShe gave me another kiss then picked up the first box and took it to our bookkeeper.\n\nI was suffering a mental gridlock when Carly buzzed me and asked me to go to her office. When I got there a stunningly beautiful brunette was with her. I was introduced to Miss Laura DeSilva and informed that Miss DeSilva had decided to become a part time resident of Felicity and that the firm would be handling her needs. Those needs would include the handling of some foreign accounts that she wanted to have easier access to but preferred to keep them where they were for tax purposes.\n\nI gave her a welcome speech and had just started assuring her we would always do our best for her when Janice ran into the office, squealed and jumped into Miss DeSilva's arms. The kiss they shared made me blush.\n\nI noticed Carly did not seem surprised by the interruption or the kiss.\n\n\"Do you have what you need from her?\" Janice asked Carly.\n\n\"Yes, you can abduct her, I guess,\" Carly answered with a weary voice.\n\nThat voice was in contrast with her smile. I suspected it had been Carly that let Janice know who was in her office. It also occurred to me that she was the new account Jim Stewart hinted we were about to get.\n\nJanice gave Carly a big kiss and quickly pulled a delighted Miss DeSilva out with her.\n\nCarly closed the door behind them and asked me to sit down.\n\n\"Do you expect to leave Felicity at any time?\"\n\n\"You mean permanently like for another job? No.\"\n\n\"Do you know if Shirley is bisexual?\"\n\n\"No, I have no idea if she is or not.\"\n\n\"If your relationship becomes permanent would it bother you to learn she was?\"\n\n\"As long as it did not interfere with our relationship, probably not.\"\n\n\"Almost every woman you have met in Felicity will be happy to hear that.\"\n\n\"You included?\"\n\nShe nodded yes. I was not at all surprised by that. I guess that thanks to the many not very subtle clues I had already picked up on it. I was also OK when I realized that it would likely not take much for some of the ladies to seduce Shirley, probably Carly first.\n\nCarly was looking at me as if she expected me to say something. I stood, walked to her and kissed her lips then said, \"I need my own secretary and another accountant and bookkeeper.\"\n\nShe laughed and said, \"I'll see what I can do.\"\n\n\"Thank you,\" I said and left the office.\n\nAs soon as I walked out I found Edna and I asked, \"Are you bisexual?\"\n\n\"No, I am a lesbian. Why do you ask?\"\n\n\"Carly seems to think every woman in town wants Shirley.\"\n\n\"We do but nothing is going to happen until you two decide what your relationship is. Since you are both in love with each other I don't expect that to take long. You do realize you love her don't you?\"\n\nI kissed her lips and went on to my desk without answering. I did wonder if I was enough of a grown-up to handle my new world.\n\nWhen I got home that Friday Shirley had a nice dinner for me with some of the wine she had grown to love. We cleared the dishes together after dinner then settled on my love seat naked as usual.\n\nThe plan was to watch TV for a while but I never turned it on. I just stared at her. I kissed her often. The color had returned around her eyes. I kissed each of them and added a soft kiss to her nose. She was beautiful.\n\nI decided to be brave for a change and said \"I...\"\n\nShe said the same thing to me at the same time. We both laughed, perhaps a bit nervously, and I invited her to go first.\n\nShe said, \"I have been thinking that you were likely relieved to see I have a job and will be able to take care of myself soon. It will be many weeks before I get a paycheck but this is a light at the end of the tunnel thing.\"\n\nShe paused for a deep breath. I checked to see if I was breathing. I was not.\n\nShe continued, \"Having said that I want to make sure you understand I do not want to leave you. I do not want to leave this house. If you ask me to I will leave without tantrums. I will leave grateful that I had you to rescue me during the worst part of my life. I will always be grateful for that. \n\nIn the meantime I promise you I will be your best friend and the best, the most passionate and faithful lover you will ever have. I am going to make it as difficult as I can for you to ask me to leave. End of rant. Why are you smiling at me like that?\n\n\"Your speech was a lot longer than what I was going to say. I should have gone first.\"\n\n\"What were you going to say?\"\n\n\"I love you.\"\n\n\"What?\"\n\n\"I love you, we are going to grow old together.\"\n\n\"You mean you want me to stay?\"\n\n\"Indefinitely. I want everyone to know this is your permanent address, your home. I want everyone to know that we are living together because we choose to do so not out of necessity. I want everyone to understand we are a couple.\"\n\nI kissed her softly then looked at her and said, \"Believe me. I want you here with me. No time limits, no deadlines, no restrictions, no clothes.\"\n\nShe gave me a soft giggle and I gave her another soft kiss. I felt her tears on my cheek.\n\n\"I love you,\" she said.\n\nI kissed her again. \"I love you,\" I said.\n\nWe spent the weekend naked. We visited Timbuktu and Vladivostok in our fucks. \n\nThat Sunday afternoon we had a lot of visitors, all of them nude. All the girls begged Shirley to make my cock erect. She promised she would the following Sunday. She knew that I was too shy and too nervous to get one then.\n\nI basically stayed at the grill cooking hamburgers and hot dogs as the women streamed in and out of the house and the yard. Their husbands stayed outside with me, ate and drank beer.\n\nA lot more people than lived on our street showed up at our house that afternoon. I assumed it was simple curiosity on their part about Shirley and me but as I talked to the guys I learned that our loop was the most popular anyway. Almost everyone on our loop had family in the other two loops and they simply rode their bicycles over, most wearing only a t-shirt. \n\nJames added that our loops combined backyards had pools, trampolines, fountains, beach volleyball, and an extensive kids playground complete with adorable little girls. The only thing they had needed was a yard with an enormous grill. They raised their beers in salute. I was happy I had splurged on my grill.\n\nJames told me that he and Lucy where starting on a trip to San Francisco the next morning. He advised me that Lucy had asked Shirley to go by the school a couple of times a week and check for deliveries. He chuckled and apologized for his wife putting my wife to work so soon and without pay.\n\n\"I laughed with him then asked, \"San Francisco, why there?\n\n\"We have never been there. We are also camping at a few parks along the way that we missed on our first trip together. Our mission is to go where no one has gone before\", he added with dramatic flair.\n\nI laughed and said, \"I have never been out of the state.\"\n\n\"Then you need to start. A fun nearby planet is New Orleans. Short cheap flights out of The City's nearest airport leave late on Friday and return late on Sunday. It is a great planet to explore and that begins with the food and the music.\"\n\nWe were interrupted when two stunning blondes hugged James and after quick kiss he introduced them to me as his sisters in law, sort of. One of them was named Jana and she really was Lucy's sister. The other one, Inga, was Jana's partner. They ignored my hand and kissed my lips then they glanced at my cock. It remained shy.\n\n\"Oh well,\" they said. \"We need to meet Shirley,\" and went inside.\n\n\"James said, \"Don't worry about your reaction to the women. They all do prefer that their gorgeous nudity be acknowledged anyway. Let it fly if it wants to.\"\n\n\"You did not react to them either.\"\n\n\"That stopped when I managed to put both of them in the bratty little sisters category. Lucy helped when she swatted my cock every time my erection was for Jana.\"\n\n\"Ouch, that must qualify as tough love.\"\n\n\"Yes, but it is strange that when I get hard for anyone else she seems to be proud of me, like she would to a child that just showed proper manners. She does not mind when it is just Inga, hell she does not mind when it's her mother. Lucy kissed me when she saw my reaction to Shirley, sorry if that bothered you.\"\n\n\"It probably would have except that yours was the fourth or fifth such salute and by then I was embarrassed by my own lack of manners.\"\n\nJames laughed and asked, \"Is it true the girls begged Shirley to make you hard?\"\n\n\"Embarrassingly true.\"\n\nIt was a great Sunday afternoon and I was pleased by our company and very glad that the guys had chosen to be friends with me. That had not been very common for me in my life.\n\nFunny thing, later on as everyone started to drift home the hugs and kisses began to take effect on me and as soon as the last naked ass slipped past Leslie's gate I put Shirley on the picnic table and fucked her hard.\n\n\"Thanks, I needed that too,\" she said.\n\nWe agreed that we had just experienced the most amazing afternoon of our lives. We also agreed that a few seemed to sense a change in Shirley's and mine relationship, particularly Karen and Carly, but the question never came up that afternoon.\n\nIt did that night.\n\nWe had cleaned up and showered, Shirley and I had begun a nice slow fuck then the doorbell rang. Visitors to the front door means clothing everyone had told us so Shirley put on a t-shirt and I put on gym shorts and a t-shirt. It was Karen at the door.\n\nWe suspected what she was going to ask so Shirley asked first, \"Do you have your cell phone? I have seen how fast everybody communicates with text messages. I need you to fire out a news bulletin. \n\n\"Who do you want me to send this message to?\"\n\n\"Everybody.\"\n\n\"OK, what do you want me to send?\"\n\n\"That Charles and Shirley.........are an,,,,,, official... couple.\"\n\nKaren had been busy with the input and it was not until she clicked send that it sank in. She squealed and gave each of us ferocious hugs and big kisses. Before she was done with my hug her phone rang followed closely by Shirley's and mine.\n\nTwenty minutes later we were still answering calls when Marina, and Carly showed up. \n\n\"We could not get a call in to any of you so we just walked here.\" None of the women were wearing anything other than a t-shirt.\n\nWe enjoyed our hugs and kisses and when Carly went back for seconds from Shirley I smiled and nodded to her. She grinned and as they kissed Shirley moved one of Carly's hands to her breast before placing her own hand over one of Carly's small breasts. Tongues were exchanged.\n\nOnce the kiss and grope ended Carly jumped up and down as she clapped her hands. That confirmed to me that the t-shirt was all she wore. Somehow I thought she was sexier then than she was when she was walking around nude. Maybe it was because that afternoon I was afraid to look at anything but faces.",
        "One second later Karen was enjoying Shirley's kiss and grope. Marina was by far the tallest of the girls but Shirley was just two or so inches shorter. They each had tits big enough to get them pressed together during their kiss. Shirley moaned when her hand became full of Marina's tit. \"That happens with everybody,\" Karen said to me.\n\nAmid the giggles I heard Shirley being asked about her groping limits and my tolerance levels. \n\nWhen Shirley told Carly that I was the one that suggested she grope her right back Carly flew into my arms and gave me a nearly pornographic kiss. I briefly had her bare ass in my hands.\n\nI went to the kitchen to get the ladies some wine and to hide my erection. Marina followed me to the kitchen to help.\n\n\"How tall are you, six-five, six-six?\"\n\n\"Half way between.\"\n\nShe stopped me from getting the stuff together and hugged me firmly.\n\n\"Hmm, you are more solid than I thought. I figured you for two-twenty but now I figure two thirty at least.\"\n\n\"Two thirty six. Sorry, I am not joining your football team.\"\n\nShe giggled then said, \"Your exploring appendage seems to be awake now. We were all hoping to see it erect this afternoon but we understand your shyness. Jay could not get his up until the third time we joined the group.\"\n\nShe pressed her body to mine and kissed me then helped me carry stuff to the living room.\n\n\"Marina and I have one of those relationships and....\"\n\nKaren's sentence ended when I walked in the room and I immediately understood Shirley was being schooled on the relationships between the women. I kissed Shirley and excused myself saying I had homework.\n\nAfter they had a second glass of wine they got louder and I could hear their conversations from the office. I heard a debate over the loudest orgasms in which at least one of the contenders was apparently in my living room. \n\nI heard Shirley describe my cock when erect and I heard the ladies say they were looking forward seeing that for themselves. I heard Marina say she believed it. Shirley must have exaggerated some but I was proud of her doing so. What Marina had said made me nervous though.\n\nThen I heard an eerie silence. I listened more closely and I could hear a few moans. I had taken a step into the hallway to take a peek when the doorbell rang scaring the hell out of me, it was right next to my head.\n\nI continued out and as I passed through the living room I saw nude bodies being covered by t-shirts. \n\nShawna was at the door in uniform; she needed to talk to Carly and me. She had us step outside and told us, \"The bastard is out on bail. He is looking for Shirley and thinks she is going back to Canada. He has apparently been calling her and I am afraid that when he gets her phone statement he will figure out she is in Felicity.\"\n\n\"Is he the type of guy that would ignore a restraining order,\" Carly asked me.\n\n\"He is the kind of guy that would easily exchange the consequences for a another two or three blows. But he will not be able to trace her from phone records. I gave Shirley a disposable phone well before I came here. That is the only one she uses.\"\n\nThey both kissed me for that and Carly said, \"I will start the process to change her last name to her family name. You need to get on the web and make Shirley Baxter disappear from everywhere.\"\n\nShawna said, \"We need the phone Shirley used to talk to everyone but us. He has probably been leaving her messages and those are evidence.\"\n\n\"I will get it\", I said.\n\nThe ladies inside had correctly guessed the topic of our conversation outside and were reassuring Shirley that there were hundreds of people in Felicity that would make sure nothing bad would ever happen to her. Her face turned pale when I asked for her old phone. Her hand was shaking when she handed it to me.\n\nI took it to Shawna and said, \"If he comes to Felicity the first place he would go would be the shelter. Maybe we should alert them.\"\n\nShawna said, \"All the women in there are there because of guys like him. They have a good security system and we patrol every five minutes. It would be nice if he would oblige us like that. It would be even better if some lover's outraged husband would make his displeasure known to him before then. Well, I need to go and listen to phone messages and see if we have enough to void his bond. Good night.\" \n\nShawna kissed Carly and me and left. Carly had heard Shawna's wish but her only comment to me was a nod.\n\nShe went back inside and said to the others, \"It has been a lovely evening but we need to go home. Our husbands should be done with their bowling tournament and we will need to console them for their loss. Lets go home ladies.\" \n\nEverybody gave Shirley a strong hug and big kiss. I did not see any hand on any breast.\n\nWhen we were alone I asked Shirley why she had not told me or Shawna or Carly that he had been calling her. \n\nShe said she had turned that phone off as she drove out of the city. It never occurred to her that anyone but Bastard would be calling and she never wanted to speak to him again so had not turned her phone back on.\n\nI told her that he was apparently searching for her. He still had no idea where she was but tracing her would not be too difficult if he knew where to look. I asked her to follow me to the computer.\n\nI asked for her ATM card and her credit cards. She assured me she had not used any of them since she got to Felicity. She had assumed he had frozen her out of the accounts by the time she had gotten to town. The only credit card she carried and used was the one I had given her.\n\nWe found that he had not cancelled her accounts; he was probably waiting for her to use one. We closed every account that had her name on it. It was all I could think of to do so we went to bed. She draped her body over mine as usual but there was no sex. What we needed was each other's warmth.\n\nThe next day changed my life, again. Carly asked me to go to her office. Shawna was there with Shirley's phone and the phone messages were playing. Message after message Bastard accused Shirley of disloyalty, called her every vile name under the sun and promised the he would beat her into obedience.\n\nCarly and Shawna were not surprised to see my anger flare. They were confused when they soon saw signs of resignation on my face. Shawna turned off the phone. They remained silent; they understood there was something about me they did not know.\n\nI began, \"I was always the biggest kid. Because of that all my life I had many challenge me to a fight, guys wanted to prove their manhood, their toughness. I would tell them to tell their friends I had backed away from the fight, that they had intimidated me. Some saw that as what it was and we immediately became friends. Some took me up on the offer and bragged about me backing down. One not very bright school bully began to verbally abuse me in front of everyone every time I walked by. I soon had enough of that and stopped and told him I accepted his challenge to fight. \n\nHe could not back down because his friends were all around him, egging him on. He threw a punch and I threw two and walked away. He was taken by ambulance to the hospital with broken ribs and a concussion.\n\nThere were perhaps thirty witnesses so I was not given anything other than school detention but what I was hoping to avoid did happen as more and more of the bully types came after me. I got tired of it and put one in a coma.\n\nEven though I had never started a fight the school decided to expel me. Mom sent me to live with her brother, the one guy in the family bigger than me. He gave me lessons on avoiding fights and lessons on how to stop an attack but causing minimum damage to the attacker. \n\nI idolized my uncle even though he had once killed a guy with his fists. The guy had raped his girlfriend to force my uncle to fight him. My uncle was charged and convicted of manslaughter but the all woman jury and female judge gave him probation.\n\nHe helped me wind my way through college but that was not as bad as high school since I was not nearly the biggest guy around. When I got my first job my boss became the bully. When his boss, the company president, asked me why I had not broken every bone in his body I just told him I was not fond of fighting. He fired me. Apparently I had been hired for the express purpose of beating up my boss, the company president's brother-in-law.\n\nMy next job was better, they ignored me.\n\nWhen I first came to Felicity I expected the usual \"I can take you\" look from guys and the distrust from the ladies. Instead everyone smiled at me. Everyone seemed to be delighted to see me. I knew immediately I was home.\n\nBut I know I have to jeopardize that because if Bastard hurts her again I know I would not stop hitting him until he was dead.\" I sighed in resignation and said, \"I will try to convince him to leave her alone.\"\n\nShawna said, \"Just be careful and do not tell him who you are. Tell him you are a private investigator sent by a client. By the way, he is known for carrying a knife in his boot. The City P.D. told us. They also said he is left-handed. How is Shirley?\"\n\n\"Pretending she is not a nervous wreck. Her security detail was there when I left and I am sure it will still be there when I get home.\"\n\n\"I saw Karen and Marina walking towards your house when I drove by. Of course security is not likely the only thing on their minds,\" Carly said with a giggle.\n\nShawna laughed and said, \"I don't know if they are making my job easier or not.\"\n\nCarly shook her head with a smile then said to me, \"Take a day off and do what you need to do to give us all peace of mind. Today you might start by getting Shirley a one-way ticket home. Tell her to leave her car at the airport garage and do a lousy job of parking. \n\nThen get her a ticket to come back with a hyphenated name, her maiden name and your name. \n\nHer passport has her maiden name and so will her work visa. I already have submitted a document for her to prove the hyphenated named lady has a job waiting for her here. Once she gets back her new drivers license, bank account, and credit cards will all have her hyphenated name.\n\nHer resident alien papers have her married name and that is the person we want to vanish. If the bastard is as stubbornly stupid as he seems to be he will spend his life looking for her in the wilds of Canada. What is the name of her hometown? Moose Goose?\"\n\nI smiled which was what she wanted from me. I knew Carly knew the name of the town because I had heard her make fun of its name the previous evening.\n\nI loved her plan and kicked myself mentally for not thinking of it myself. Apparently the crisis had me more preoccupied than I thought.\n\nShawna came to me and gave me a strong hug but a soft kiss. \"Putting him back in jail for what was on the phone is in the works but it will be next week before it happens. Wear gloves.\"\n\nShe kissed me again and after kissing Carly she left. I walked to Carly and kissed her lips softly and said, \"I love you,\" then kissed her again. \n\nI then sat in the chair across from her and said, \"We need to add an accountant and a third bookkeeper. You and I need our own secretaries. Miss De Silva's accounts made a hole in the dike; we need to plug it up quickly before we drown. I am already near panic about Melody's concert next week. If that goes off as well as predicted we will need an army to just keep up.\n\nI have not told Edna yet but we have two more clients, Erato and Alice and Marie. Along with Edie, Allen and Ruthie we are already a talent agency of sorts. We need to get in front of all of this before it eats us for lunch.\"\n\n\"You are amazing,\" Carly said. \"I have a very difficult time separating life and work. I am jealous you can do that and do it well. I was so worried about you and Shirley I had not seen that storm coming.\"\n\n\"It's OK, I should have thought up your devious little plan to make Shirley vanish but didn't. It is nice we see things with different eyes. With any luck we will never be caught unprepared.\"\n\nCarly stood and came to me and sat on my lap. She said, \"I love you too\" and gave me a nice sweet kiss.\n\n\"About yesterday afternoon, please don't worry about erections but we will be disappointed if you don't ever have one. You may have noticed that most of the guys had at least a partial one. You may have also noticed they became full erections when they saw Shirley. That also happens with Inga, Jana, Lucy, and Marina so she in select company already. We know erections are compliments. We explained that to Shirley and she told me how flattered she was. I want you to flatter me please. That's an order.\"\n\nShe kissed me again and said, \"You have work to do. Get started.\"\n\nShe stood and I left her office still trying to process all the information I had just gathered so I decided not to talk to Edna just yet. Instead I got on the computer and got Shirley Baxter a one-way ticket to Montreal for Wednesday then a train ticket to Vancouver. That would be where Shirley Baxter's trail would end. I then added a plane ticket from Montreal to New Orleans. The name on that ticket was Shirley Michelle Cotillard-Hammond. \n\nI will be waiting for her in New Orleans and we would spend the weekend celebrating the end of Shirley Baxter and the beginning of Madame Cotillard-Hammond. \n\nBefore lunch I went to a souvenir shop and bought a nice key chain for her then got some tacos. When I got home I showed her my gift and asked for her keychain, as I switched my house key and her car keys to the new ring I removed her old house keys and put them in my pocket. \n\nShirley, Marina, Karen, Helen and Leslie were too busy grabbing tacos to see my sleigh of hands. All were wearing just t-shirts I noted. After eating lunch with them I announced I needed to get back to work although it was just barely past eleven.\n\nI was soon on the expressway heading towards the city. \n\nI knew Bastard went home for lunch every day. Shirley had always fixed him a nice meal. I figured that the habit still persisted. He was not yet home so I put on my gloves, went in the house, and made myself comfortable. I was wearing an old hooded sweatshirt that I kept in the trunk of the car. I was wearing sunglasses. Bastard had never seen me but I did not want him to have too good a description of me.\n\nA few minutes later I heard his motorcycle and I stood just inside the door. He did not look up until he had closed the door behind him. As soon as he saw me I hit him on the solar plexus. \n\nThat bundle of nerves is the substation that sends signals for the rib muscles to contract and relax and thereby allow you to breathe. If you hit it just right the nerves freeze so the rib muscles freeze and breathing becomes impossible for a few seconds. The panic of not being able to breathe is overwhelming. It was the first thing my uncle taught me on how to temporarily disable someone without causing major injury. Of course I had every intention of causing somewhat major injuries.\n\nHe was bigger than I had guessed when I saw him fucking my wife. I decided not to pull my punches.\n\nI said, \"Hi, good to meet you. I was sent by the husband of a woman you soiled. As you can imagine he is really pissed at you.\"\n\nI saw he was regaining his breath so I bruised his ribs on the left side with a punch, and continued. \"He wants you to understand that if you go anywhere near his wife your last visitor ever will be him.\"\n\nI punched his left side ribs again a little lower on the chest. I tried to just bruise them but I felt at least one of the ribs give way.\n\nHe fell to his knees as he leaned to a wall trying to put it between his ribs and me. He was still gasping for breath.\n\nI continued, \"He heard that you beat up your own woman. He did not like that at all. In fact he asked me to make sure you know better than to do that again.\"\n\nI slapped his face hard. I saw a trickle of blood come out of his mouth.\n\nFor some reason guys seem to be more psychologically damaged by a slap than a punch. I was waiting for him to go for his knife and that did it for him. \n\nHis move was clumsy; it is painful to move at all when you have bruised ribs. I put my foot on his hand hard enough to get him to release the knife, maybe break a finger or two, then kicked the knife away from him. I paused for a moment then shook my head and broke his nose.\n\n\"Look what you made me do. I was not supposed to leave you with obvious injury and I was done here. But you pulled a knife on me. Well hell, I will need to apologize for this and I do not like to be in that position so....\"\n\nI punched him on the nose again. He collapsed to his side and he whimpered. I loved hearing that.\n\nHe had a box of fried chicken when he had come in but had dropped it with the first blow. As I continued my warnings and expanded on my employers distaste for wife beaters I ate his chicken. Each time he tried to get up I punched him back down and ate another peace of chicken, He really was beyond stubborn, he was stupid.\n\nEventually I saw that he could not get up again. I figured he would at least consider my advice and decided to leave. All the fried chicken was gone anyway.\n\nI told him, \"Well I have to go. It was nice visiting with you. A word of advice, do not go near the woman again. And do not hurt your wife again. The man has no sense of humor at all. Thanks for the chicken. Have a nice day.\"\n\nI left and as I closed the door I heard him groan. I had a smile on my face all the way home. It was then that it occurred to me that I had just done what Shirley had wanted me to do in the first place.\n\nI was back in my office when Harry called me. He wanted Carly and me to meet him at The String of Pearls. I got Carly and we walked to Felicity Place. By then holding hands with Carly as we walked did not seem to be out of the ordinary to me.\n\nHarry was giving ballroom dancing lessons but stopped when he saw our arrival and motioned us to join him at a table. He wanted us to bring him up to date on the state of our part of the firm. Carly allowed me to explain what I saw happening and what we needed to do to manage things.\n\nHe agreed with every suggestion including planning a new entity if the show business part of the agency began to get out of hand. Harry wanted Carly to be the president and me the treasurer of the new entity. He also agreed to the accountant and two bookkeepers for me and to give each lawyer and Edna and me our own secretaries too.\n\n\"How is Shirley?\" his wife Margo asked me.\n\n\"She is fine. She will be out of town for a few days, we have a big date this weekend.\"\n\n\"Where is this big date going to be?\" Carly asked.\n\n\"New Orleans, we have never been there.\"\n\n\"I love New Orleans,\" Margo said.\n\n\"And she has the beads to prove it,\" Harry said.\n\nMargo blushed and slapped his shoulder. Carly and I understood how she got her beads.\n\nMargo mused, \"I wonder if Juanita would be interested in doing a New Orleans night once a month or so. We could decorate the plaza like Bourbon Street and bring in some blues bands.\"\n\n\"Sounds like a great idea to me,\" Carly said. \n\nWe said our good byes and walked back to our building. We again held hands as we did.\n\n\"Did you go home for lunch?\" Carly asked me.\n\n\"Yes, but went shopping for a gift for Shirley first. I took tacos for four. Karen and Marina were there. Leslie was there too. I got only one taco.\"\n\nCarly laughed and when we got to the office we put together the rough framework to Felicity Talent Agency. \n\nAs we worked I concluded that Carly truly did not know I had been gone for nearly three hours during lunch. If anybody asked her if I had worked there all day her answer would have been yes. I would have never asked her to provide me with an alibi if things came to that point. I was pleased that I would not need to put Carly in a bind. She noticed but did not comment on the fact that the off day I asked for was Friday afternoon. I had a plane to New Orleans to catch.",
        "It suddenly crossed my mind that I had not told Shirley she was going home in two days.\n\nI called her from Carly's desk and explained Carly's plan to make Shirley Baxter vanish from the face of the Earth. She asked me if I objected to the fact that she would by sharing my name. I laughed.\n\nI suggested that she call her brother and warn him she was coming and that Bastard might follow.\n\n\"He is in Australia, will not be home for months. I will go home and pack up a few things then make sure everyone I know sees me. I may even hint to them that I will be going on to Australia to be with him.\"\n\n\"Very good idea,\" I said. \"By the way, Carly suggested that at the airport you park in the short term lot at the terminal and take up more than one space. The car is in his name so he will get the call and the ticket.\"\n\nShe giggled at that.\n\nI gave the phone to Carly but their conversation started with whispers so I went to Edna's office and had her sit on my lap. I explained to her that we saw a tidal wave coming at us and Carly and I were counting on her to do things above and beyond the call of duty.\n\nShe told me she was up to no matter what.\n\nIt seemed to me that she thought I was giving her a pep talk.\n\nShe knew it was not a pep talk when I told her to get a secretary and a bookkeeper for herself, a secretary, an accountant and a bookkeeper for me, and a secretary for Carly. I hugged her to me and gave her a soft kiss. \n\nShe was still reeling when I added, \"We have doubled your salary. I love you.\"\n\nEdna wrapped her arms around my neck and hugged me tightly as she allowed a sigh to escape.\n\n\"I will not let you down.\" She sobbed.\n\n\"I am sure of that,\" I said as I kissed her lips.\n\nEdna sobbed again then kissed me hard, even sending her tongue down my throat. She said, \"You know, until you stop the sexual harassment of this old lesbian I can't get back to work,\" then gave me another kiss even more pornographic than the first.\n\nShe stood and said, \"I have phone calls to make and interviews to set up. How soon do you expect we will need all these people?\"\n\n\"My best guess is the day after Melody's concert.\"\n\n\"That's next week,\" she said.\n\nI nodded, kissed her cheek and left her to her panic. I had my own panics to handle.\n\nOn Wednesday afternoon Shirley drove to the airport. She parked as suggested and went through security by the Continental Airline's terminal. She walked to the international departures gate and had an uneventful flight home. She visited with old friends for two days then asked for a ride to the train station. She told her friends that her flight to Sidney would be leaving from Vancouver. \n\nShe got off the train at the Montreal airport; changed planes in Dallas then flew on to New Orleans. Early that Friday afternoon we met at the N.O. airport and we took a shuttle to our hotel on the edge of the French Quarter.\n\nShe and I acted like the honeymooners we were that weekend except that I talked to and got information from the agent of several of the Blue's bands we had heard and enjoyed. It made the trip tax deductible. We were back in Felicity late Sunday night happy that the plan had worked.\n\nShawna and Carly were waiting for us. They had news Shawna said.\n\nShe began, \"Baxter had staked out the airport waiting for Shirley. He had been at the Air Canada check-in terminal before every flight to Montreal for a week. Airport security had noticed and were keeping a close eye on him.\"\n\n\"Why didn't they just pick him up?\" Shirley asked\n\n\"They were waiting to see who he was there to meet.\n\nBaxter did not see you when you got to the airport because you were not flying Air Canada. As he was walking by the escalator he did see you as you walked by upstairs at the gates level. He tried to get to you and rushed through the security area. He was stopped and wrestled to the ground. As he tried to get back up he pulled out his knife just before he was slammed back down. He landed on his knife. You are now a widow.\"\n\nShirley burst into tears but not for her loss. The tears were of relief. She did not have to look over her shoulder any more.\n\nCarly took her to the bedroom. She was wearing only a t-shirt. Shirley was only wearing a t-shirt. They were both nude before they got on the bed.\n\nShawna saw my perplexed expression and said, \"Oh no. This is not a seduction. This is the best way to talk a woman through an emotional upheaval. They share their softness and body heat. Soft words and soft caresses are given. Reassurances are given. Tears are allowed to flow. \n\nThe one under stress falls asleep and the worst of the incident is over. It only works with women and works best when they are both naked. There is probably a mother daughter basis to it.\n\nJanice did that for me when my mother died. Jana did it for me when my father died. Edie does that for Melody when she has panic attacks. Carly did that for Edie when she was overwhelmed by a standing ovation of all things.\n\nIt has a curious side effect, the women who do this bond for life and whatever sexual feelings they have for each other fade into a strong sisterly relationship.\n\n\"Wow, I know Carly really wants Shirley. She must know she just put that in jeopardy,\" I said.\n\nShawna looked at me and said, \"You are something else,\" and gave me a long, soft love filled kiss.\n\nAfter the kiss she continued, \"The BCPD told me some strange things about Baxter. He was beat up by airport security but the video of the struggle at the airport seemed to indicate that his more telling wounds and bruises did not happen during the incident. I reminded them that the lunatic rode a motorcycle. They seemed to like that theory.\"\n\nI nodded but did not give her the slightest indication that I knew what she was talking about.\n\nShawna continued, \"Go to sleep in the spare bed. Carly will get you up before she leaves. Do not let Shirley wake up alone. I have to go.\"\n\nShawna gave me another long soft kiss then left.\n\nI looked into my bedroom and saw that Shirley was still sobbing but much more softly. Carly was caressing her and talking about the beauty of hummingbirds.\n\nI was mesmerized by the sight of the naked women in soft embrace and instantly got a very hard erection. Carly noticed. I nodded to her and quickly went to another bedroom and went to sleep. Carly woke me up about three hours later. She did that by squeezing my cock. \n\n\"Just wanted to see if I could wrap my hand around it. The answer is no,\" Carly said. She gave me a lover's kiss and said, \"Go to your bed and hold her close. Make sure you are right next to her when she wakes up even if it is ten in the morning. Come in to work when you can.\"\n\n\"I have a better idea. You stay with her and make love to her when she wakes up. I will cover for you until you get there. From what understand about what you did tonight this may be your only chance.\"\n\nI could not decipher her facial expression but she squeezed my cock again as she gave me a big kiss then removed her t-shirt and returned to my bedroom. They were still asleep when I went to work the next morning. I told everyone that Carly would be late because she was trying to figure out what Shirley's legal status was. \n\nCarly came in about eleven that morning and just before noon asked me to come to her office. I went in and sat by her desk. She sat on my lap and began to kiss me. She continued to kiss me for several minutes. I got an erection and she briefly rubbed her crotch on it. \n\n\"Ooh, thanks for the compliment,\" she said.\n\nShe gave me a long kiss and said, \"Thanks, I needed Shirley. Still do. You can watch.\"\n\nShe kissed me again then left my lap and stood by her desk.\n\n\"Understood,\" I said. \"Now, did you want to see me boss?\"\n\nShe smiled at me and said, \"Shirley Baxter's legal status in the country will be questioned of course but that persons trail will end in Vancouver.\n\nGreat idea by the way, the next logical place to look for her now is Australia.\n\nWe were happy to pay for Shirley Baxter's ticket home. We got her out of a bad situation that as it turned out could have ended in disaster. We doubt she knows her husband is dead; she is likely still running from him. \n\nI doubt anyone will ask but if anyone does the Shirley we know is married to the company treasurer. She is also Canadian as is the star of Felicity records, an elementary school teacher, the bartender at the resort and several others. Canadians like it here; we don't have real winters.\n\nShawna is at your house giving all the girls this speech. I know this robs you to of a wedding but sort of legally you are already married. In a year you can \"re-new your vows and have a traditional wedding.\"\n\n\"You are taking too many risks for us. You could be disbarred, you could go to jail. Why do it?\"\n\n\"Because I love you. Because I love Shirley. Because it's the right thing to do. Because we have already gotten away with it.\"\n\nShe handed me a resident visa. It was issued to Shirley Cotillard-Hammond. I gave Carly a big kiss. Her tongue slipped between my lips and I welcomed it.\n\nWe separated and told her I needed to go home, that something had come up.\n\nShe giggled and said, \"Yes, I can see that,\" she said as she slid her hand over the bulge in my pants. She was dialing her phone before I opened the door. I heard her say, \"Jimmy, I need you, now!\" before I closed it.\n\nThere was a party going on when I got home. I got a lot of kisses and congratulations on my wedding and questions about how many honeymoons we thought we needed. Shawna suddenly looked at me and asked, \"How much time do you need?\"\n\n\"An hour.\"\n\n\"OK ladies, let's go home. They have some serious matters to take care of.\"\n\nThe confused expression in the girls face was quickly replaced by knowing smiles. They gave deep kisses and gropes to both Shirley and me then left. Those kisses and gropes made both of us even hornier for each other than we already were so we literally ran to the bed, undressed, and fucked. It was a primeval fuck, a loud fuck, an I love you madly fuck.\n\nI was a bit late returning to work but noted that I was at my desk before Carly was.\n\nAs it turned out it would be three weeks before anyone inquired about Shirley Baxter. The homeland security people still had Baxter listed as a terrorist threat and wanted to talk to her. The only ones they talked to were Shawna and Carly who said the last time they had heard of her at all was the day she left. \n\nEvery one was happy she was leaving the country to get away from her abusive husband. No one thought it was anything other than that and she probably did not know he was dead and was still hiding from him. \n\nNo one heard from Shirley Baxter again, it was as if she had vanished into thin air.\n\nThere was never a question asked about Shirley Hammond."
    ],
    "authorname": "jjcolejr",
    "tags": [
        "romance",
        "love story",
        "drama",
        "blonde",
        "redhead"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/felicity-ch-16"
}