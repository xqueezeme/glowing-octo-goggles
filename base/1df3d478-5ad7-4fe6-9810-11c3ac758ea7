{
    "title": "Storm of Shadows Ch. 03",
    "pages": [
        "Dara placed her backpack beside the front door and turned towards the living room where she knew her family were waiting for her appearance. To say she was apprehensive about the upcoming trip was an understatement but she ensured her expression was confident as she braced herself to enter the room. She was deceptively calm, particularly after the fraught emotions in their Alpha's study \n\nShe put that down to Cassia coming to sit with her for a while when she had started packing. Her sister's presence had been a silent comfort that had soothed the racing of her heart as the enormity of what she had agreed to began to truly seep into her mind. She had to be all kinds of stupid to do this thing, and yet, she couldn't not do it. That simply wasn't an option.\n\nCassia had asked only one question, her blue eyes intent as she'd examined her sister's face. \"Are you certain, Dar?\"\n\n\"Do I want to be Kothi's only hope? Hell no, Cass, but it appears that is the case.\" Throwing another t-shirt into her backpack, she had turned to look at her sister. \"I can't leave him out there alone, Cassia. I just can't do it. I know this mission is dangerous, and I won't have the backup of the pack like I'm accustomed to. I guess I am just going to have to be everything that you, mom and dad, and our Alphas believe me to be - a strong soldier.\"\n\nHer sister's expression had changed then, turning thoughtful and a bit distant. Then she had risen from her seat on Dara's bed, engulfing her in a tight hug that contained all her love and the concern she couldn't quite hide. \"Remember the vampires over there are quick to attack wolf shifters. It might be wise to avoid shifting as much as possible. Concentrate on your vampiric side and try to convince them you're one of them. If you do come into contact with any wolves over there...tell them you know Fox, that should help gain their trust.\"\n\n\"Fox?\" Dara hadn't even attempted to hide her confusion from her sister. Cassia would have sensed it down their link anyway. \"Who's Fox?\"\n\n\"A European wolf I bumped into a couple of times in the city recently. He tried to protect me from Pietro of all things.\" \n\nCassia's rolled eyes had brought a smile to Dara's face. \"Why would he think you would need protecting from your mate?\" Just the thought of that misunderstanding was funny. She wished she'd been there to see it.\n\nHer sister had shrugged, a smile gracing her lips. \"Most likely because of his distrust of vampires which is understandable considering he's from Europe. There was just something about him that struck me as honourable...that he was possibly a Beta in his pack. He was most certainly a soldier. He carried himself as one who was used to having to be on guard all the time. He seemed like a good man to have at your back.\"\n\nIt had been a strange conversation but something Dara filed to the back of her mind to remember just in case she needed it. There were likely few people over in Europe she could count on and having at least one additional ally couldn't be a bad thing.\n\nNow she squared her shoulders and entered the living room, walking across to her mother who immediately rose from the sofa with her arms open wide. It was hard to hide her nervousness, and not to cry as her mother held her tightly. She knew how hard this was for her, how hard it was for all of her family.\n\n\"I'll be okay, Mom. You and Dad have trained me well, not to mention the pack and V\u00e2rcolac training I've had. I won't place myself in any unnecessary risk.\"\n\n\"I'm sure that's what Gard and Rayne thought too,\" her father muttered, a frown darkening his handsome face as he took his opportunity to hug his youngest daughter.\n\n\"We've been through all this.\" Dara couldn't hold back the sigh that was threatening to escape. \"Now we know there is someone out there that is strong enough to best Gard and Rayne, I will be especially vigilant.\"\n\n\"That's all well and good, Dara, but who the hell is going to protect you from Kothari if he has gone rogue?\" he argued, his frown only deepening.\n\n\"Kothi won't hurt me, Dad, no matter what his state of mind is. I am certain of that, so please try not to worry about things that aren't likely to happen.\" It was important to get that point across to her family because it was something she truly believed. It was the only reason she was willing to go to Europe.\n\nHer parents' resigned expressions were enough to tell her that they were reluctantly agreeing to her mission. Her father handed her a piece of paper with a name and address on it. \"This is the vampire Kothari most likely went to see to get ID. Your Uncle Andrei says he's the best on the black market, and he isn't slow at knocking people around if they get too uppity with him. Try to be respectful in your dealings with him. You might find it easier to get what you need with honey rather than with a stick. If you want, I could come with you?\"\n\nDara smiled at her father, resisting the urge to let out another sigh. He couldn't help himself with his overprotectiveness and she really didn't want him to ever change. \"I will be fine, Dad. Now, I need to get going because Kothi has God knows how many hours' head start on me. Try not to worry too much, I will check in regularly.\"\n\nNow that the moment to leave was finally there, she was hesitant to leave the sanctity of her family and pack, but she knew she had no other choice. She had agreed to this assignment and she would do her best to bring Kothari back safe and sound. If they were lucky, they may even return with Gard and Rayne. \n\nWith final hugs to her parents and sister, Dara headed out of her home and raised a hand in Rafe and Lacey's direction. Her Alphas were standing outside their home, their gaze intent on her. \n\n\"Be safe, Dara, and bring our boy home,\" Lacey whispered, a tremor in her voice as she hugged her and then stepped back to allow her mate to embrace her.\n\n\"In the event that the risk is too great, you are to protect yourself first, Dara Romanov, even if that means returning to us alone. I mean it...don't you dare put your life at risk for Kothari or anyone else, if it becomes clear that he doesn't want to be helped.\" There was so much Command in Rafe's voice that it would have been impossible to disobey him even if she'd wanted to.\n\n\"I understand, Rafe. Let's hope it doesn't come to that.\" With a final wave to them, she climbed into the waiting Jeep that had her Uncle Aaron, their pack's second in command, behind the wheel.\n\n\"I'll drop you off close to the district you need,\" her uncle told her. His blue eyes stared intently for a long moment and then he nodded his head as if coming to some internal decision she wasn't privy to. \"I am proud of you, Dara. You are an Alexander through and through even if your DNA is messed up with those Romanovs.\" He winked as he spoke, drawing a loud peel of laughter from his niece. \n\n\"\"You're outrageous, Aaron, but thank you for the back handed compliment. I know you adore Dad and Uncle Andrei, despite your grumbling.\"\n\nHe laughed with her, and her nervousness eased a bit and her smile widened. Her uncle had deliberately said what he had to lighten her pensiveness. That was what made him such an excellent number two...he always knew what every pack member needed at any given time. Settling back in her seat...she closed her eyes as the Jeep surged forward, away from the pack, and her mission truly began in earnest.\n\nIt seemed like no time had passed before she was getting out of the Jeep, after submitting to a huge bear hug from her uncle. Now she watched the car drive away and realised that she was now truly on her own for the first time in her life.\n\nSquaring her shoulders, Dara checked her surroundings quickly before she shadowed her presence and headed towards the address she'd been given. This part of the city was particularly seedy, and it made sense not to advertise a lone female wandering around. She didn't want to have to kick ass just to get to her destination.\n\nShe found it easily enough, scented the area carefully to see if she could pick up any trace of Kothari. She thought she detected a faint scent but couldn't be sure it wasn't just wishful thinking on her part. Making her way down the alleyway, she unknowingly echoed her friend's movements, slipping passed the vampire guard who was staring perplexedly at the steel door that had appeared to open all by itself twice now.\n\nAs she entered the door at the very end on the hallway, the dark-haired vampire looked up with a shrewd expression but didn't rise from his seat behind the desk. Dara unshadowed herself as the door closed, keeping a respectful distance from the elder male.\n\n\"It's customary to knock when you wish admission,\" the male growled, displeasure crossing his face as he glared at her.\n\n\"I didn't want give you the opportunity to refuse,\" she countered, moving further into the room and sitting down in a chair across the vampire. \"I seek one who is like me.\"\n\n\"I don't know any blondes. My taste runs to brunettes.\"\n\nShe supposed he thought he was being witty but she wasn't very amused by his response. Fighting not to allow her temper to rise, Dara took a deep breath and tried again. \"The person I seek is around six foot, with short dark hair and an unnatural predilection for sunglasses and the colour black.\"\n\nThe male sat back, steepling his fingers as he watched her intently. \"What makes you think that I would know anything about this individual?\"\n\nDara smiled, mimicking his position. \"Because you weren't the least bit surprised when your door opened all by itself and I revealed myself to you. In addition, you had the sense not to instantly attack me. That tells me that the person I am looking for has been here ahead of me, and you, being an Elder of some age, learn quickly. Hence why you didn't attack me. You've already had one lesson today.\"\n\nThe vampire's expression changed, turning guarded as he leaned forward onto his desk. \"Let's say...just hypothetically...that such an individual did come to see me. And let's say that the said individual promised to take my head should I divulge his visit, and that I might only do so to one other person and only if said blonde was to say one word only...what would you have to say to that?\"\n\nDara felt elation well up inside and fought to keep her expression as neutral as possible. Kothari had been here, she was certain of that, and he had known that she would come looking for him. He did want her to find him just as she suspected. Only now, she had to try to come up with the password he had left in place for the forger. She had to think carefully because the wrong answer would lead to her having to kick the vampire's ass to get the information she needed and that would take too much time.\n\nWhat word would Kothi have chosen? What did he believe she would be able to come up with when asked? Dara's thoughts went to the journal nestled in her pack, the journal that was an insight into Kothi's mind and a map to where he was headed. Taking a chance, she met the vampire's unwavering gaze, and took a deep breath before she answered...\n\n\"Angel.\"\n\nFor a long moment the vampire just looked at her, then she heard the whirring of the printer beside him, and he pulled off an A4 sheet and handed it to her. \n\nGlancing down, Dara stared at the image of Kothari, now called Simon Ducat. He had been here as they had expected. Clearly she must have given the correct password for the forger to give her the information. Looking back at him, she gave him a brief smile. \"How long ago was he here?\"\n\n\"Close to five hours now. He's had sufficient time to leave the country with the travel documents I gave him.\"\n\nIt was enough to make her heart sink, but Dara tried not to be too disheartened. At least they had a name now and she could call it in and have one of their contacts at the airport let them know when Kothi had travelled. \"Thank you for your assistance. I won't bother you any longer.\" She didn't need travel documents, her mother had arranged those with their own contact while she was packing.\n\n\"Just who the hell is he? And you?\" Faraday asked as she turned around to leave.\n\nGiving him another smile over her shoulder, Dara stored the printed page in her pack beside Kothi's journal. \"Let's just say my father and his twin brother are extremely grateful for your assistance today.\"\n\nThe vampire watched the pretty blonde leave, swallowing hard as he did. He didn't need to ask just who her father or his brother were, there was only one vampire family that consisted of a set of twin brothers. However, that wasn't why he swallowed hard, even though the Romanov twins were something to be feared by anyone with any intelligence. \n\nNo, the reason he felt fear clog his throat was he finally understood that he had been in the presence of not one, but two, hybrid offspring that day...and they scared the complete shit out of him.\n\n*****\n\nThe darkness was oppressive, holding him sucked downed in a maelstrom of bonds so tight that no matter how hard he fought, he couldn't free himself. Something nagged at his sluggish mind, something so urgent that he fought against the darkness with renewed vigour, desperate to overcome it.\n\nSarayne...Sarayne...Sarayne...\n\nHe had to find her, had to save her. Where was she? Why couldn't he think clearly? Gard tried to call to his mate, tried to find her down their mate bond but there was nothing there, just more darkness...Dear God if she was...he couldn't continue down that line a thought. \n\nSuddenly there was a faint light, so minute that for a moment he thought he'd imagined it, but it began to blossom a little brighter, and his sluggish mind travelled towards the beacon. It was like staring through a keyhole, locked out of the room that was bathed in light and offered freedom. A flash of red beside the illumination, the colours beginning to mute as soon as they had arrived...\n\n\"Anakatrine! Ana, hear me!\"\n\nThere was no answer...there was only the darkness once more. The light faded away and the fragile lucidity that had gripped him faded within as he swirled once more into the void.\n\nNo! No! He had to reach her...he had to reach someone! It was to no avail though, as shadowy figures in the real word injected a serum into his arm as he lay helpless. Gard was once more entombed in a world of utter blackness, where he silently screamed knowing no one could hear him.\n\n*****\n\n\"Annie?\" Rafe's voice cut through the babble of noise surrounding Rhianna as they sat in the Alpha's study being updated on everything that had happened since they'd left the night before.\n\nCaleb had woken her early, knowing that she would have wanted to find out what had happened to Gard and Rayne as soon as possible. He'd informed her of Demetri's visit in the early hours of the morning, and the more recent news of the discovery of Michael's body by Freya and Nors. Once they had reached the Armand-Hanlon Pack, they had learned of Kothari and Dara's absence, and the magnitude of what had happened was only now sinking in. \n\nHer brother's voice startled her out of her reverie, and she blinked slowly, trying to clear the fog that was whirling through her mind. Caleb was staring at her with a concerned expression, and it was only then that she realised that some time had passed since she'd last spoken. Something else had teased at her subconscious mind; something so urgent she had completed zoned everything else out.\n\n\"He's alive,\" she whispered, feeling the elation of the long dead vampire queen within her mind. Anakatrine had gone deep, to a place Rhianna didn't know how to go to. Wherever she had gone, she had returned with those two words.\n\n\"Gard is alive,\" she said more firmly, just the words helping to shake some of the overwhelming grief from her soul. Anakatrine wouldn't have told her if it wasn't true. She had to hold onto that hope.\n\n\"Are you sure?\" It was Caleb who asked the question, his concern still apparent. \"I can't feel anything down the Triumvirate bond, Annie.\" It was clear that he was afraid she was getting her hopes up.\n\n\"Neither can I, Caleb, but Anakatrine is certain. She must have had some kind of contact with him. Gard is alive. That's all I know. There is no news on Rayne, but we have to believe that she is too, for Gard's sake.\"\n\nJust the mention of the vampire queen's certainty was enough to bring some relief to Rafe and Lacey. Anakatrine hadn't been proven wrong yet, so if she had been able to sense Gard somehow, there could still be hope that things would turn out okay.\n\n\"I hope you're right, Annie, because I fear for Kothari if he doesn't find them safe,\" Rafe answered, running a hand through his rumpled hair. His eyes felt as if someone was stabbing hot pokers through them, his large shoulders were uncharacteristically hunched over with tension. When had he last slept? He couldn't remember, and he couldn't afford to sleep at the moment with all that had happened.\n\n\"That's it, time for you to go sleep.\" Aaron Alexander gave his Alpha a pointed look from his position at the window. Rafe had asked him to attend when Caleb and Annie had arrived, to ensure his number two was completely up to date on the situation.\n\n\"Aaron.\" \n\nRafe's warning growl would have intimidated some of the more maternal pack members, but it just brought a cocky grin from the blond wolf. Aaron had been instrumental in Rafe's recovery when he had been the victim of a forced turning many years before. He had been his best friend ever since, and often his partner in crime before they had met their mates. \n\n\"There is nothing you need to be doing that is urgent, Rafe. Should we get any news from Dara or Europe, we can wake you up and let you know. The pack is secure and the Praetorians appear to have taken it upon themselves to adopt the pack as a whole rather than just the V\u00e2rcolac.\" Aaron moved over to stand in front of his friend.\n\n\"In addition, Lacey doesn't look like she's willing to go rest without you, and she needs as much rest as possible in her condition,\" he added. \"I can take care of things for a few hours.\"\n\nRafe looked at his pregnant mate, seeing the lines of fatigue under her eyes. He felt a pang of guilt at not having noticed it earlier. She hadn't uttered one word of complaint, and she had been there at his side to help lend him strength. He knew it was pointless to try to make her get some rest without him, so he gave in to his friend's common sense. Truth be told, there was nothing he wanted more right now than to lie in his beautiful mate's embrace. \"Fine.\" \n\nHe gave his sister a tight hug, understanding the strain she was under with her brother from another time missing. His Annie felt things so intensely, he knew it was killing her. However, she had Caleb to be her strength, so he had no qualms about leaving his sister in the vampire's capable hands. \"If Anakatrine has any more news...\"\n\n\"You'll be the first to know. Aaron's right, Rafe. Both you and Lacey need some rest. I will stay here with the pack until you wake.\"\n\nHe could maybe have argued with them but he couldn't argue with his deep-rooted need to take care of Lacey. It was ingrained into his soul, and he needed to ensure Lacey and his children were safe and well. Looping an arm around his mate's shoulders, Rafe headed out of his study and upstairs for some much needed sleep.\n\nAs the Alphas left, Caleb pulled Rhianna into a warm hug, leaning down to kiss the top of her head. \"I need to check in with Demetri,\" he sighed. \"He and Mara are arranging an emergency session of the Council. I should probably attend given the difficulties they'll likely face. I'll be back in a few hours. Will you be okay on your own?\"\n\nRhianna could understand his concern, but the foolishness of his words couldn't be ignored. \"Caleb, I'm in the heart of one of the strongest packs on the Northern Continent. We're surrounded by Praetorians as well. I am hardly alone, my love. Go and do what you need to be doing. I want to catch up with Mac anyway, to discuss Aaron's interesting observation with him. It's been a while since I checked in on what the Praetorians are up to.\"",
        "Her mate appeared mollified by her words and gave her a lingering kiss before he nodded farewell to Aaron and head out, leaving Rhianna alone with the blond wolf.\n\n\"We haven't spent any time together in a long time either, Aaron,\" Rhianna smiled, threading her arm through his. \"How about I visit with you and Jen for a bit after you ask Mackenzie if he could come down to the pack?\"\n\nThe wolf burst out laughing, his cerulean blue eyes twinkling with amusement. \"I love how you make everything sound so perfectly innocent, Annie, even when you're moving chess pieces across a board. It will be our pleasure to have you visit with us while you await Mac.\"\n\nShe gave him another small smile, allowing him to escort her from the study. If only he knew that she was terrified of being left alone right now. The earlier grief that had numbed her soul the night before was still there, ready to overwhelm her if she wasn't fully occupied. She needed company around her now, as they began what would likely be the long wait for some news of what was happening in Europe. Still, she wasn't upset that he thought she was up to something. There was nothing wrong with keeping other people guessing.\n\n*****\n\n\"Another urgent Council meeting? This is becoming tiresome.\" Sasha's softly spoken words were cold, her deep blue eyes bordering on black as she frowned down the opposite end of the ornate dais.\n\nThe Vampire Council was in session, and for once, the brooding presence of Demetri Bozic wasn't in attendance. His wife and mate, Mara, was safely tucked away between the Romanov twins as was customary at the other end of the large table. Emily was braced between Mara and Stephan, with Cristoph, William, and Corinne taking the next three seats as was the usual makeup of the less intractable members.\n\nFollowing more traditional rules, the Council still sat in order of allegiance, the six closest to the left hand side of the dais looking outward, being those aligned with the Were Pack alliance. The remaining members were more conservative, less tolerant of the alliance with the wolves. Sasha was always in the latter half of the dais...today she was at the very end of the long table.\n\n\"The Council demanded to be informed immediately of anything further happening with regards the Amort poison. Now you want to complain when we accede to your demands?\" It was Alexei who spoke, his tone cold and derogatory. His thoughts were still on his daughter who has been gone for a few hours now. He didn't have any patience to deal with Sasha and her cronies.\n\n\"The wolves have found a cure?\" William asked, his green eyes turning to look to his left. His wide shoulders tilted ever so slightly away from Sasha, making it more than obvious that he didn't care for the white-haired woman very much.\n\n\"My daughter found the cure,\" Alexei answered, pride turning his tone smug. \"The antidote is being synthesised at the moment, so we need to inform the others of the threat and set up some form of clinic so that those who require the antidote can receive it.\" \n\nHe shot a withering glance in Sasha's direction. \"I take it you will be one of the first to be inoculated?\"\n\nHer eyes darkened and fury crossed her beautiful face, however, it was Claude who spoke, flicking a long reddish-blond strand of hair behind his shoulder. \"Naturally it is only sensible that ALL Council members receive this inoculation. How are we to lead our people if we do not do so by example?\"\n\n\"Which translates into you're all shit scared of dying,\" Andrei muttered, his smile containing no humour. \"You don't want to have anything to do with the wolves but when it comes to having your asses being saved, suddenly they're your new best friends.\"\n\n\"Squabbling among ourselves isn't very productive,\" Mara sighed, rolling her shoulders to try to release some of her tenseness. Having Demetri present at these meetings was often a nightmare, however today she would have killed to have him lurking in the background. The tension was so high, she wasn't sure that an actual physical fight wouldn't break out. Alexei and Andrei were spoiling for one, and only Demetri or Caleb could keep them in check when their beasts were so close to the surface.\n\nTrying to diffuse the situation, she smiled at William and looked to his companion, Corrine. The other woman's expression was more curious that anything else, and that boded well. \"We need a liaison with the wolves, someone to direct the setting up of the clinic and keeping a record of who is inoculated. Corinne, would you be willing to do that?\"\n\nFor the barest fraction of a second, green eyes slid to the male at her side who stared straight ahead, and then Corrine nodded her head. \"I would have thought one of you would have preferred to oversee such an undertaking,\" she answered. \"Though, I have no issue with performing the task, if required.\"\n\n\"Our time will be taken up with other tasks,\" Alexei replied. \"Last night the European vampires attacked the Armand-Hanlon pack and tried to kill two of our members. We are needed there until such times the threat has been neutralised.\"\n\n\"They what?\" Stephan growled, fury blazoning from his hazel eyes. \"Just who the fuck are these upstarts that they come onto our home territory and think they can attack us?\"\n\n\"They attacked a wolf pack, Stephan,\" Piers snorted, refusing to be intimated by the low growl that escaped Andrei's lips at his words. \"Yes, you have cast your allegiance with the wolves, Andrei, and Caleb has given his edict to the Council that they are not to be harmed. This attack is from no vampire aligned to this Council, and while none of our kind here will break Caleb's edict, that does not mean that we will simply rush to protect the wolves from other attacks.\"\n\nAndrei rose slowly, a flash of fury glinting from his eyes before all emotion suddenly vanished from his expression.\n\n\"Alexei...\" Mara whispered, her breath catching as the one she called to in a bid to try to subdue his brother was rising with an equally terrifying expression on his face.\n\n\"...And nor would we ask you to...\" \n\nAll heads whipped around to the main doors, Mara's shoulders slumping with relief as not only Demetri, but also Caleb strode into the room. Her husband immediately went to the twins' side, a long, hard stare being enough that the brothers sat back down without a further word.\n\nCaleb walked towards the centre of the room, his gaze travelling each face, his expression calm. \"As I said, we are not asking the Council to provide any protection for the Armand-Hanlon pack, thought just for the record; it was two vampires that were almost killed in the attack. It was the wolves who protected them.\"\n\n\"That's beside the point. Why are you here, Caleb? You shouldn't be here anyway. The Ancient Council is having far too much involvement in matters that are Council business. We are not your puppets to dance to your tune.\"\n\nClaude's tone was quiet but his anger was evident. It was clear that half of the Council shared his view, and even William and Corrine nodded their agreement to that point. They sat there silently, all eyes on the Ancient vampire whose expression remained deceptively calm though deep within he was fighting the urge to rip Claude's head from his shoulders. \n\n\"I am here because someone in Europe developed a toxin that could wipe out our entire race,\" Caleb drawled, his voice so soft that Demetri automatically shifted his weight into a defensive stance and the twins tensed in their chairs.\n\n\"I am here because that same someone sent vampires across the ocean to attack us in the heart of one of our strongholds.\" \n\nCaleb moved then, leaning his arms on the table, cold fire dancing from the depths of his eyes. \"I am here because Gard and Rayne have vanished somewhere in Europe, and if someone is strong enough to do that, then it's time we stop this petty bickering and we start working together...ALL of us...before we wake up to find that we're completely fucked!\" \n\nHe roared the last words out, unleashing all his frustrations into the room, letting the importance of what he'd revealed sink in for a moment.\n\n\"Now...does anyone else have any other stupid questions to ask or will this Council now stop thinking about their own petty agendas and start acting to protect our people? Because believe me, if you don't, I will fucking break this Council the same way I broke the last one, and I will keep breaking Councils until you lot get the fucking message!\"\n\nStunned silence greeted his words, a flicker of unease crossing most of the vampires' faces. Demetri moved to escort Mara from the dais, coming to stand beside Caleb. Andrei and Alexei followed, making it perfectly clear they stood with the Ancient.\n\nStephan rose slowly, his hand moving to rest lightly on Emily's shoulder though he appeared to be unaware of the gesture. \"How could this happen to Gard and Rayne? They are the oldest among us.\"\n\n\"Exactly,\" Caleb answered, his tone a little less strident but his displeasure still very evident.\n\n\"Threatening to abolish the Council isn't the way to go though, Caleb,\" Stephan continued, rebuke in his tone. \"That may have worked once before, and it prevented a civil war, but if you try that again...you'll be starting a civil war.\"\n\nCaleb sighed loudly, frustration riding him so hard it was difficult to articulate words for a moment. \"Stephan, you are missing the basic point here ...we are already at war and we have no inkling of who our enemy is. They have attacked us three times now and so far...we're losing! Now, if you lot can just grasp that fact, maybe we stand some chance of finding out who this enemy is and taking them out. If not...I will not hesitate to risk a civil war here if it means that I will have at least half of our people at my side when I take on this enemy.\"\n\n\"Then why are we all still pissing about here?\" William growled rising. \"It is the Council's job to protect our people. That means we protect our allies too, as they protect us. We have an antidote to a toxin that would wipe us out in a heartbeat because of our allies. There is an invisible enemy out there that can reach into our midst and neutralise some of our best people. It's time we act. I stand with Caleb!\"\n\n\"I stand with Caleb...\" Corrine rose at William's side.\n\n\"You know you have my support,\" Stephan sighed, \"I just wish you were less of an ass about it sometimes.\"\n\n\"We are stronger when we act as one,\" Emily said quietly.\n\nThere were enough votes to give him the Council, but Caleb still looked to the remaining seated members.\n\n\"It would seem that the logic presented to us is compelling,\" Sasha said coldly. \"Until this threat is neutralised, you will have my full support to protect our people.\"\n\nOne by one, the remaining Council members nodded their agreement, and slowly Caleb relaxed. \"Good, then let's all sit down and I'll provide a detailed account of what we know so far. Then we can see what, if any, ideas we can come up with.\"\n\nAs the room settled, Caleb ran a quick inventory of just how much detail he was willing to give to the Council. Freya and Nors were fairly certain that there was the possibility of a mole in their camp, though that didn't necessarily mean that person was on the Council. Still, each Council member had their trusted support teams, and if someone were smart enough to get that close to the upper hierarchy...well maybe it would be wise to keep a few things close to his chest for now. Dara and Kothi were on their way to Europe. They didn't need any eyes turning in their direction...\n\n*****\n\nThe plane journey had been less of an ordeal than Dara had anticipated, but it had been frustrating waiting for the time to pass to reach her destination. Kothari had too much of a head start on her as it was, his attempts at trying to throw them off his tracks quite inventive. He'd used the pack's credit cards in four major cities, going online each time and purchasing tickets to multiple different European cities under the name Kothari Hanlon. \n\nIt was a good tactic, one that would have left them all scratching their heads if not for knowing his forged travel details. Simon Ducat had only shown up at one airport and with one destination...Edinburgh, Scotland. Kothi was following his parents directly, as she had known he would have.\n\nRafe had called her before she'd boarded her flight to Edinburgh, letting her know that Caleb had contacted his friend Joshua, who would meet her at the airport. She was now scanning the waiting faces, unknowingly echoing Gard and Rayne's actions of only a short time ago. She found him quite quickly, a slight inclination of his head acknowledging that he was the one she sought. Joshua was gorgeous with a slightly roguish look about him, but he exuded a confidence that only came with reaching an advanced age. She hadn't even spoken to him and yet she knew she was going to like him.\n\n\"Joshua?\"\n\n\"At your service,\" he said with a smile, tipping the brim of his hat. It should have looked ridiculous when he did it, but it seemed to fit his personality well.\n\nDara couldn't help smiling, despite itching to get on her way. \"I bet you drove Gard insane with that charm.\"\n\n\"He appeared oblivious to it,\" Joshua chuckled, \"Now Rayne on the other hand...\"\n\nShe burst out laughing, rolling her eyes at his shamelessness. \"Yes, you drove him insane; I have no doubt about that.\" It felt good to have a moment of respite, even if it wouldn't last very long. What was to come would probably be full of danger and possibly death...for this one moment it was just nice to forget the darkness that was ahead.\n\nDara's expression sobered and she shouldered her backpack and motioned Joshua to lead the way out of the terminal. \n\n\"I'm sorry to hear our friends are missing,\" Joshua said quietly, as he led her to a beat up old van. \"Can't believe it was only a few days ago I was picking them up here. I liked them a lot.\" His gaze slid to watch her as she climbed into the van.\n\n\"They are special people,\" Dara answered, a frown marring her brow. \"We want them back just because of that...however there is another very important reason we need them back too. How much did Caleb tell you?\"\n\nStarting the engine, Joshua pulled out of the parking lot and heading away from the airport. \"Just that they had vanished after they left me and he was sending someone over to look for them. He told me of your arrival and I was to give you any assistance you needed, and I was to try to determine when a Simon Ducat had arrived and provide you with that information.\"\n\nHe shot her another quick look before concentrating back on the traffic head. \"Forgive me, I don't mean to be rude, but I am struggling a bit to understand why Caleb would send a Youngling that appears to be around the thirty year old mark to find out how Ancients of Gard and Rayne's years have disappeared. He did add that you would fill me in on anything you felt I needed to know but...\"\n\n\"Excellent.\" Dara breathed out the word, a slow smile crossing her face.\n\n\"Sorry?\"\n\n\"You see me as a thirty year old vampire. That was what I was aiming for so it's a relief to know it's working. Most vamps here won't pay me any attention if they don't view me as any kind of threat.\"\n\nThe quizzical look he sent her way had her smile widening. \"Can we find somewhere private to go? Kothi has hours on me as it is, so another ten or fifteen minutes are not really going to make that much of a difference.\"\n\nHe appeared to consider it for a moment and then he turned off the main road and wove through some streets until he reached a modern block of apartments. \"One of my coven's safe houses. It should be empty at the moment; we're keeping close to our main hideout these days.\"\n\nShe could understand that. She would likely do the same given the volatile circumstances in Europe. Following Joshua out of the van, Dara headed inside to the small, one bedroomed apartment. It was cold and stark, designed in the minimalistic style, but there was something about it that appealed to her. She could imagine Kothi in a place like this.\n\n\"You have empathic abilities, Joshua,\" she said, as she set down her pack and turned quickly to face him. She caught the surprise he couldn't quite hide.\n\n\"I have too,\" she admitted with a smile. \"Circumstances stateside have given us all a need to be aware of any and all special abilities the vampires around us may have. I felt you leaning on me at the airport...I allowed it to test your strength. I think when this is all over, you should come visit with us at the pack. Liam and Reasa can help you hone and expand your considerable skills.\"\n\nFor the first time since they'd met, a flash of unease crossed the elder vampire's face. \"Just who are you, Dara?\"\n\n\"I will answer that, but first I must ask permission to enter your mind. I need to know that you are as trustworthy as Caleb believes you to be.\"\n\nJoshua backed up a step, distrust joining the unease in his eyes. \"The last person who walked inside my mind headed stateside to commit murder. You'll forgive me if I don't particularly want a total stranger messing with my head after that.\"\n\nDara didn't want him to be frightened of her, and she didn't want to force her way into his mind either. She was fairly certain that he could be trusted, but there was so much at stake here she had to be one hundred percent sure. \"I'm sorry, Joshua, I do understand why you would be reluctant. I do need to do this though, and I would ask that if you trust in Caleb and he has vouched for me, that you please extend that trust for a brief moment to me. I promise you I have no ill intent in mind.\"\n\nJoshua stared at the strange woman, unsure of what to do. He did trust Caleb with his life, and Dara was clearly special to his friend. It was only a small leap to extend that trust to her, but he was still hesitant to do so. \"Tell me who you are first.\"\n\nShe was shaking her head before he finished speaking, regret in her eyes. \"I'm sorry, I can't do that, not until I have done what I must do. What I can tell you is that I ask this of you so that lives may be saved, not only stateside, but here in Europe too. The longer I hesitate here, the more blood will seep into the soil on this continent. One moment of trust may mitigate some of that destruction, Joshua.\"\n\nIt was clear she meant every word she said. She truly believed there were lives at stake, and that could mean a clear and present danger to his coven and others where he had alliances. Caleb had asked him to give her every assistance... and this was what she was asking of him. Joshua moved to the sofa in the living room, sitting down slowly. \"Okay, do what you have to.\"\n\nDara moved to sit beside him, a reassuring smile on her face. \"I promise this won't hurt a bit, and I will talk you through everything that I am doing. Just relax and let down your mental guards. It will make this easier and less dangerous.\"\n\nWhen he relaxed a bit more, she reached out and slipped inside his mind with as light a touch as she could manage. She'd only been honing this technique for a very short time, and only on one other person before this. Kallum had agreed to help her and to keep it secret until they were sure of what it was she could actually do. They'd only had three sessions before the shit had hit the fan at the compound and Kothi had gone missing. This was still new to her.\n\n\"You will be aware that old skills are returning, things the vampires have long forgotten. One of them is dream walking, being able to travel through a mind and influence events if required.\"\n\nJoshua sat as still as possible, feeling the slightest of brushes against his mind. \"There have been rumours though Caleb didn't answer any direct questions I posed.\"\n\n\"That sounds like Caleb, never willing to share too much, just in case the information falls into the wrong hands.\" Dara gave him another reassuring smile, as she sought deeper and deeper within the pathways of his mind.",
        "\"What I am doing isn't dream walking in the traditional sense. We don't know what it's called to be honest. I just know I was in my early teens when I realised that I had an uncanny knack for knowing when someone was lying to me. I learned from my father that some of the old Vampire Council used to be able to do it, but my uncle somehow managed to block them from knowing when he lied. I didn't pay much attention to this skill at the time but with things moving so rapidly back home, I decided it was best if I honed it as soon as I could.\"\n\nShe paused, breathing in deeply and closing her eyes as she felt along a pathway. \"We discovered that not only could I sense if someone was lying to me, but that I could walk within a mind and discover any falsehood, no matter how well it was hidden. There is nowhere anyone can hide from me, and my strength is growing on a daily basis.\"\n\nHer voice trailed off and she sat back, slowly opening her eyes to meet his. \"Who is Dante?\"\n\nTo be continued..."
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "werewolves",
        "mating",
        "love",
        "hybrids",
        "paranormal romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/storm-of-shadows-ch-03"
}