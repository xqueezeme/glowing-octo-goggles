{
    "title": "Little Packages Ch. 10",
    "pages": [
        "(Kitten/Ashley, Mid-August, 22 months since Kitten and Daddy started dating, three months since Chapter 9)\n\n\"Fucking Saskatchewan,\" I said, looking out the car window at the endless landscape of nothing.\n\nDaddy glanced over at me from driving. I refused to look at him. It was entirely his fault that we were back in this province. I was perfectly happy to leave this place behind after I graduated high school three years ago. I was going to be cranky this entire drive. I knew it and he knew it. At least he had the sense not to try and make things better.\n\nWe were already in improv mode. Because of airline delays we didn't arrive in Regina until 11 last night. Rather than try to drive to Kipling in the dark and arrive after midnight, he decided we'd just get a hotel and head out in the morning.\n\nI would have preferred to go to Kipling in the pitch black. At least I wouldn't be subjected to the endless fields of grain. It felt like it was closing in on me. I tried telling him it's not like he had to worry about many twists and turns in the road, but he said the hotel was a better idea, and that was that. I later remembered he didn't like driving when it was dark anymore and felt a little guilty about that. He was also probably hoping a good night's sleep might take care of some of yesterday's crankiness. My current mood and body language were destroying that theory.\n\nThe trip was a little less than two hours, which was probably just as well. It's not like I was in a hurry to get there, but much more than two hours of never-ending fields of grain would likely drive me mad.\n\nI sighed again, took my feet out of my sandals, put them up on the dashboard, and leaned back in the car seat. Staring at the roof of the car was a better option. I had made this trip approximately 10,000 times in my life. There was nothing new for me to see.\n\nThe feet on the dashboard was Daddy's breaking point. He always had a thing about it, considering it rude. Most guys would be happy with the opportunity to look at my legs, but he does get to see a lot of them already.\n\n\"Kitten,\" he started.\n\n\"Better start calling me Ashley again, Ben,\" I said. I caught him wincing out of the corner of my eye. \"If you call me Kitten in front of mom she'll call out the whole town to stage an intervention. If I call you Daddy she'll probably have the RCMP shoot you.\"\n\n\"Yes, I know you don't want to do this. Yes, I know this is going to be...uncomfortable for you,\" he said, which was the understatement of the year. \"But I think your mom and I should meet at least once. You're her only child. If nothing else, I'm curious to see what she's like.\"\n\n\"We're nothing alike,\" I said. I hoped this would preemptively cut off any attempt at talking about our similarities.\n\n\"Yeah, and Beth said that about her mom before I met her, and Meg said the same thing about her mom. Every woman around your age swears they are nothing like their mom except, of course, there are things in common. It would be crazy if there weren't.\"\n\nI could feel myself boiling up again and barely managed to beat it back down. We so rarely fought that we didn't know the rules of engagement. How far we could push the other before knowing we had gone too far. The instant I felt the urge to snarl something about his mom was when I knew I needed to shut up. It would be unimaginably cruel to do that.\n\nBesides, we were just rehashing arguments that we've been having for the last two weeks, ever since he and Susan tricked me into making this trip. Aside from knowing the disaster waiting for me at the end of this highway, I also hated being guilted into doing something. What's worse, Daddy knew what he was doing and seemed perfectly ok with it, because he knew what was best for me.\n\nHe had a 99% accuracy rate on that belief. Most times I found it sexy that he believed that. But this was the 1% time where he was dead wrong.\n\n\"You'll see soon enough, Ben,\" I said, just to remove any doubt how pissed off I was. \"There's no way this goes well.\"\n\nHe looked like he was going to respond, but instead turned back to focus on the road.\n\n****\n\n(Three weeks earlier)\n\nAfter mom sent me that text back in May, Daddy had been unsubtle in thinking I should attempt to make amends with her. I understood why. Of course I did. His mom was dying, and he thought I should try and grab every moment with mine while I could.\n\nHowever, I sucked at explaining my mom's motivations. We'd spent years fighting with each other. Then I had a whole year where she vanished from my life and it was amazing. I'd never tell Daddy, but part of the reason the last year had been so great was not thinking about her. A huge weight went poof.\n\nStill, I wrote back to her and confirmed I was alive and would see what I could do about coming out for a visit, as I was pretty busy with school and work. There were a few other texts back and forth, but I was determined not to commit to going. Besides, I figured working on the tv show would keep me busy well into August. Then Daddy was taking me on vacation, and then it was back to school. Oops, no time for a trip to Saskatchewan. So sorry. I'll text you a picture of the wedding.\n\nThree weeks ago that plan fell apart. It was late July and the tv show was getting ready to go on an extended break. We'd filmed 12 episodes, which would start airing in September. Depending on how they did, the crew would come back to work on it some more. If not, that was that.\n\nMost of the crew seemed to think the show had no chance. Being cooped up in closets and tiny rooms sewing away from the action, I had no way to judge if that was true or not. But sometimes I got to help out with a fitting for one of the actors and most of them seemed kinda glum. One was muttering to himself and aggressively texting someone who, I guess, was his agent.\n\nBehind the scenes, things weren't so bad. Mary was the acting head of wardrobe. She was in her 40s and had a very \"do not fuck with me\" vibe. A few years ago she got married and now only did productions in Toronto \"to keep the peace.\" I could tell she missed working on some of the bigger shoots and travelling.\n\nWe got along pretty ok. During a break I went out to get some fresh air and Mary was out having a cigarette. I was curious so I asked her why, if the show was so bad and likely to be cancelled, everyone behind the scenes were so chill.\n\n\"Actors are high maintenance and fragile egos, honey,\" she said. \"There are some on this show that are as close as they'll ever get to being famous. For the rest of us, this paid the rent and put food on the table. And in a few weeks we will get a call to go and work on something else.\n\n\"Most of us are never even going to watch this show, Kit. Just a fact of life.\"\n\nI found that kinda sad, but I was happy enough to be done with the show. I'd saved up enough money to afford a small studio apartment by myself for the fall and put a dent into my tuition. I didn't need much as I would be spending three nights a week at Daddy's place anyway. Gillian and Soo want some space to themselves, although they made it clear they expected me to come and visit all the time.\n\nI'd gained experience and Mary told me I did a good job. Susan, who initially hired me, was coming up from New York to do a post mortem with the wardrobe crew. And, I suspected, to have a chat with me.\n\nMaybe I hadn't been 100% honest with Daddy when I told him no one was bothering me on set. In May, that had been correct. But by the end of July...\n\nThere's only so long you can wear a hoodie and jeans in Toronto in July if you don't want to die. I understood why downplaying my age and looks when I first got on set was a good idea. There was no shortage of gossip about who was sleeping with who. When I made it clear I was engaged and had no interest, people left me alone. It's a TV show; it does not lack cute and sexy people.\n\nBy the time July came around, I felt more confident being on the set; I wanted to wear something, not sexy, but at least comfortable. But comfortable in July in the heat means you're going to be showing off more skin. And showing off more skin means you're going to get attention.\n\nI wouldn't have thought a pair of modest jean shorts, sneakers, a Batwoman t-shirt (a CW show, it was essential to wear IP-appropriate attire) and a scarf to keep my hair back made me a sex goddess.\n\nIt did make me look young and cute, but hardly jailbait. I was careful to make sure I looked 21 just so I would be taken seriously on set. However, word had gotten out that I was engaged to a much older man. The rest of the wardrobe girls badgered me for weeks about my fianc\u00e9, wanting to see a picture of him. I finally showed them one. It was hardly scandalous, just a silly selfie from a Blue Jays game that Daddy dragged me to a few weeks earlier.\n\nBut it was clear he was much older than me. And that got around the set. So the next time the actor who played a father on the show came to wardrobe for a fitting, he was pretty blatant in letting me know that if I had a thing for older men, he was certainly there to help me out with that. And maybe he could put a word in for me on his next movie if they were looking for someone.\n\nAs seduction attempts go, I found it pretty laughable. Still, he could make things a pain in the ass for me as I was just a work term student. So I said I was very happy with my fianc\u00e9 and my career, so thanks, but I was good. He didn't push things, but he certainly made himself a minor nuisance for several days trying to be charming. Maybe I should have been worried, but I was more annoyed. Someone must have had a word with him because he magically became less of a pest.\n\nHowever, movie and tv productions are a lot more sensitive about these things. I suspected it was the reason Susan was flying in. She'd also 'requested' that Daddy be there as well. I pleaded with her not to tell him what happened because he would massively overreact, and I was fine.\n\n\"Well, I also want to talk to you about a few things, aside from that. Invite him to the set and we'll arrange a tour. He should be there with you,\" she texted.\n\nThat didn't sound dramatic at all. I told Daddy about the set invite and he was profoundly uninterested.\n\n\"Kitten, I grew up in Vancouver. I stumbled over movie and tv shoots every other week. Seeing the set of a doomed teen drama is not that enticing to me,\" he said, putting together some supper for me in Meg's kitchen.\n\nMeg vanished off to Europe weeks ago and without her around to bother, it got lonely in the condo. Daddy wasn't fond of coming back to Toronto for extended periods, but my pleas and promises of doing 'anything' for some company lured him back. Plus he wanted to make sure I was eating ok.\n\nSo he was putting together a stir fry and I was wandering around trying to look adorable so he would cave. In this case, it was my red hair in pigtails, glasses, a Ghost-Spider t-shirt that I maybe accidentally-intentionally shrank so it was tight on me and barely came past my ass. And thanks to the bliss of Meg's condo having air conditioning, I was wearing a pair of rainbow thigh-high socks. Underwear was a non-starter.\n\nOur roleplaying had evolved over time. Daddy had never been comfortable with the idea of me playing an underage little girl, and I could understand that. But there was an almost 30 year age gap between us, so just pretending to be 18 instead of 21 was plenty scandalous. Also, I was on Instagram and saw how some girls my age were dressing. I had a lot of inspiration to draw on when I wanted to tease him.\n\nBesides, being a brat was ageless.\n\n\"Please, Daddy. My co-workers all want to meet you because I talk about you so much. Plus, Susan is flying up from New York and wants to talk to me, so it'd be nice to have you nearby just in case,\" I said.\n\nHe glanced over from the stove with a slightly worried look on his face.\n\n\"Is everything ok? Did she say why she wanted to talk to you?\"\n\nI shook my head, the pigtails flipping around in what I was hoping was an adorable way. I mean, the food was nice and all, but it had been three days and I was hungry for something else.\n\n\"I know she's coming to talk to all of us. She likes doing post mortems on how things went so they can improve things on the next show. And if there were any problems so she can talk to the producers,\" I said, not adding in that I might have been one of the problems. Hopefully, it wouldn't come up during Susan's visit.\n\n\"I don't know, Kitten,\" he started. I went over next to him and began rubbing up against him.\n\n\"Please, Daddy. We could spend some more time together on set,\" I said. \"And I'll make it worth your while now.\"\n\nHe looked down at me. I made my eyes extra wide and adorable. Look, I know it's an evil superpower; Daddy has told me as much. But it's not like I'm using it to get him to rob banks. I'm using it so he'll fuck me. Win-win. Totally.\n\nHe shook his head, reached across the stove and turned the burner down on low. \"It's your fault if dinner is inedible,\" he said.\n\nThen he turned around and put his hands under my shirt and on my naked ass. I squealed as he lifted and placed me on the island in the middle of the kitchen.\n\nDaddy adjusted one of the chairs as I made quick work of the t-shirt. It was around 8 pm so the blinds were closed and no one from the neighbouring condos could see inside. I was hoping I might be able to adjust that later.\n\nBut first thing first. I looked down and noticed he'd finished adjusting the chair and was looking at me. I leaned back on my arms and opened my legs.\n\n\"Care for an appetizer,\" Daddy?\" I asked, somehow managing not to start giggling as I said it.\n\n\"Oh God, you deserve to be punished for that,\" he said, but still moved closer to my pussy. I could feel my brain start to slow in anticipation.\n\n\"Promise me you'll do that later. Right now, I need this,\" I said huskily.\n\nAnd because he could deny me very little, he dove in.\n\nThe instant his tongue touched my clit, my brain shut down. All my clever plans and teasing vanished from my brain. Along with my ability to spell and do any kind of math. My Daddy just knows how to lick pussy. One of these days I'm just not going to come back out of it once he finishes eating me. I'll just be some brainless, giggling bimbo.\n\nThat would be bad. Obviously. Totally. But right now, that's a chance I'm willing to take.\n\nDaddy knew all the tricks to get me going and when to ease off so I didn't cum too quickly. He knew how to make me beg for more. He knew just how to swirl his tongue around my clit. Hell, he knew how to make his damn beard an erotic torture device; running it against the inside of my thighs was often enough to set off fireworks in my brain.\n\nThe thing that killed me, though, were his fingers. When he had me wound up just right, he'd slide his fingers into my pussy, curl them and begin moving them across my g spot. Guaranteed to make me cum in seconds.\n\nLately though, he'd been complaining I was going to kill him doing that. At first, wrapping my legs around his head and trapping him between my thighs was kinda fun and cute. But there was an incident a few weeks ago where I came so hard, I blacked out for a few seconds. When I came back to reality and relaxed my legs, he gasped for breath and said he saw stars.\n\nOops.\n\nSo he introduced a new rule. If I wanted him to slide his fingers into my pussy, I had to grab and hold onto my ankles. It was easier when he just cuffed them, which I asked him to do a few times. But in this case, I was going to have to focus because he was serious. One time I let go of my ankles and he pulled his fingers back out, which did an unpleasant number on me and my orgasm.\n\nSo while Daddy was going to town on my clit, I managed to focus enough to leverage my legs open and grab my ankles.\n\n\"Please, Daddy. You know what I want. I'm a good girl, see?\" I moaned, wagging my toes to show that I had a hold of my feet.\n\nHe glanced up between my legs and I gave him a pleading look. Yes, I could cum from him licking me, but the fingers assured something next level.\n\n\"Are you going to be a good girl?\" he asked. I nodded frantically.\n\nHe went back down and began licking me again, and ran his fingers along the opening of my pussy without putting them in. Infuriating.\n\n\"Daddee,\" I whined. \"Stop teasing!\"\n\nHe stopped licking for a second, and through the haze I wondered if I might not have been too bossy. Then I felt his fingers slide into my pussy while he resumed his attack on my clit.\n\nBoom.\n\n\"Oh Fuck! Yes, Daddy! Oh yes, oh yes, oh yes,\" I screamed. I was dimly aware that I had my fingernails into my socks to keep a grip on them.\n\nThen he did something with his fingers while sucking hard on my clit. Later, I came back to reality soaked in sweat, my throat sore, and my pussy was still throbbing. So I'm guessing it was a pretty good orgasm. With some pride I noticed I still had a grip on my ankles.\n\nWhen Daddy saw I was alert again, he gently took my hands and removed them from my ankles. He rested my legs on his shoulders which made my thighs grateful.\n\n\"You ok, Kitten?'' he asked, touching my face. I turned my cheek in his hand and purred. He smiled, knowing I was ok.\n\n\"You ok to go into the bedroom? I don't fancy trying to fuck you on Meg's island. Christ, she's going to set this place on fire if she ever figures out all the different surfaces we've fucked on,\" he said.\n\nI glanced into the living room. There was a glass door there that slid open and went out onto a deck. I'd asked once about doing it out there, but Daddy said unless I fancied being the star of a PornHub video, it wasn't happening. He indulged my minor exhibitionist streak, but he was probably right. With all the condos in the area it was inevitable someone would record us.\n\nThat didn't mean we hadn't improvised a bit. Daddy saw where I was looking and shook his head. Then he smiled.\n\n\"Go set it up, Kitten,\" he said. I bounced down off the kitchen island, did a little wobble, grinned at him, and went into the living room. I glanced back and saw him taking the food off the burner and then taking off his shirt.\n\nI quickly turned off the lights and then opened the curtains, mindful that except for the socks, I was naked. I dragged one of Meg's chairs close to the sliding door. I also opened the door a crack, just because I still liked a little thrill. People couldn't see me, but they still might hear me. Then I threw a cushion on the floor and knelt in front of the chair. As I was kneeling, Daddy was walking towards me, already naked.\n\nI felt my breath hitch. I'd been online and chatted with other girls in similar relationships. Just because sometimes you need people in similar situations to talk to. Some of those girls did it for the money or were just tired of immature boys and wanted a man. And yeah, most of us loved how much more experienced and skilled our men were in bed. But most of them talked about their men's appearance as a necessary evil. Maybe they dressed nice, but if you could combine all of that into a cut body, that would be awesome.\n\nNot my Daddy. I'd seen pictures of him from before when he was heavier and cared less about his appearance. His 50th birthday was not far off and he was breathtaking. He was lean from working out and eating better. The grey in his hair, beard and on his chest hair just added to things. He was a good-looking man. Oh, and there was also his lovely cock which was, unsurprisingly, rock hard. I mean, I'd be worried if it wasn't.\n\nHe sat in the chair. The room was dark, although some light from outside was still coming in. But I could see the most important things; Daddy's face and his cock. And his face was showing that he was waiting for me to take care of the other. I moved between his legs, rubbed my face against his cock, and then looked up.",
        "\"Can I suck your cock now, Daddy?\" I asked. He nodded his head, and I quickly slid my lips down over his cock.\n\nTo say that I loved my Daddy's cock would be an understatement. It was thick and just the right size. It fit perfectly in my mouth, my pussy, and my ass. I loved the texture of it, the taste of it and the smell of it. There were times when I was perfectly happy to just rub my face against his cock and bob my mouth up and down. If I'm anxious, it will calm me down. And if I'm horny, it's the only thing that takes the edge off.\n\nI was humming and moving my mouth up and down his cock when he grabbed my pigtails. I'm obviously hoping they'll get used if I'm seducing my Daddy with my hair in pigtails. I glanced up at him, saw him smiling, and I nodded. He pulled on the pigtails and I deepthroated his cock. He then held me in place.\n\nI was helpless and I could feel my pussy gush. I was in no real danger, but being helpless while my Daddy dominated me like this always kicked my horniness up a notch.\n\nI was a good girl and didn't try to pull my head back up. I kept working on his cock while it got harder and harder to breathe. I then squeezed his leg with my hand and he pulled me up. I gasped for air, stars swimming in my eyes.\n\n\"Are you ok, Kitten?\" he asked. I nodded and spent a few moments catching my breath. Then I smiled.\n\n\"Again, Daddy?\"\n\nThat went on for 10 minutes or so. I'd bob up and down on his cock and he would grab my pigtails, making sure I couldn't pull back. I knew he worried, but I also knew he would take care of me. As soon as I touched his leg he pulled back so I could breathe. And I loved it because after doing that enough times I felt super spacey. Whether it was from being dominated or the lack of air, I didn't know or care. I just loved how it felt.\n\nAfter the last time I pulled back, gasping, Daddy reached under my arms and lifted me. I was a bit shaky as he spun me around so I was looking out the window. I spread my legs and then let him slowly lower me. He knew what I wanted. Soon enough, I felt his cock rubbing against my clit as I sat on his lap. I directed his cock with my hand and it slid into my pussy with perfect ease.\n\n\"Oooooooh, Daddy,\" I moaned. He might have said something, but I was pretty far gone at this point. I was still spinning from being choked and now I had his cock buried in me. Through my glazed eyes I looked out the window. Toronto was out there in the dark. People could be watching me fuck my Daddy right now.\n\nI groaned again and began bouncing slowly on his cock. I leaned back so that my head rested on his chest.\n\n\"You are such a slut,\" he whispered, and then nipped my ear. I could only groan.\n\nThen he began to go to town on me. I loved fucking like this, not just because people could be watching, but because Daddy had free access to my body. His hands began to roam over me. They slid across my breasts and pinched my nipples. One hand went up and gently wrapped around my neck while the other continued playing with my nipples.\n\nI started whimpering louder.\n\n\"Do you like that, Kitten?\" he asked. I nodded. Then he pinched one of them harder. I cried out.\n\n\"Use your words,\" he said.\n\n\"I love everything you do to my body, Daddy,\" I managed to get out. \"I'm your little toy. Play with me however you want.\"\n\nHe took that to heart, with his hand sliding down from my breast to my clit. I bounced a little faster, the orgasm coming quickly.\n\n\"They're probably watching you right now, Kitten. You're giving them quite the show,\" he said.\n\nI then saw myself reflected in the window. I looked like a massive slut. My face was flushed crimson and my eyes were glazed and unfocused. I was sweating and the pigtails were askew. My nipples were rock hard and all I could see was that I was bouncing up and down on some guy. You couldn't tell it was my Daddy; it could be anyone.\n\nMy brain shattered. I screamed and dimly recalled that I'd opened the door a crack. People probably heard that at street level. I collapsed back against my Daddy and tried to remember how to breathe and think for a few minutes. I think I might have cried a bit, because I felt Daddy hold me and run his fingers over my face.\n\nEventually, I came back to reality a bit. I was almost embarrassed how intensely I'd cum, but then I realized that Daddy was still hard inside of me.\n\n\"You didn't cum?\" I asked, my voice slurring a bit.\n\n\"I wanted to take care of you first. Besides, I was enjoying the show,\" he said. I huffed at him. Then I squeezed the muscles in my pussy hard. He groaned. That's all I needed to hear. I sat up on his lap and then leaned forward and rested my hands on his knees, being extra careful with his bad one.\n\n\"Silly Daddy, you were supposed to cum at the same time I did,\" I said and began moving. I didn't have much energy left, and I hoped he didn't have much willpower left after my little show.\n\n\"You were too sexy, fucking me like that. I got distracted,\" he said, with a strained voice. Time for the kill.\n\n\"Fuck your Kitten, Daddy. Everyone is watching me fuck you, give me your cum. I need it,\" I said.\n\nThen I felt him grab my hips and move me up and down on his cock. I loved it when he took control like this. After a half dozen times, he lifted his hips as he slammed me down and then I felt his cum flood my pussy.\n\nDaddy groaned; I hissed out a \"Yessssss\" of victory.\n\nThen I was well and truly done. I flopped back and was glad to discover he was as sweaty as I was. We paused for a few minutes, just enjoying the afterglow.\n\n\"If the police kick in that door it's your fault and you're going to owe Meg money,\" he said. \"I noticed the door to the deck opened a crack, Kitten.\"\n\n\"Sorry, Daddy,\" I said, not meaning a word of it. He sighed, knowing I didn't.\n\nEventually, I stood up, holding my hand over my pussy to prevent any of Daddy's cum from leaking out. We would have to do some serious scrubbing in this condo before leaving, but there was no need to make more of a mess. I made my way to the bathroom. Then I remembered what we were talking about before we got distracted.\n\n\"So are you coming tomorrow?\" I asked.\n\n\"Not without pharmaceutical assistance,\" he replied.\n\nI turned around, put a hand on my hip, and cocked my head to the side. He was grinning. Honestly, how could I stay mad with him when he had that kind of smile? That, and all the orgasms, of course.\n\n\"You know what I mean. Will you please come to the set with me tomorrow? You won't have to stay long, I promise.\"\n\n\"Like I could say no to you when you want something,\" he said. \"Thank god you're not evil.\"\n\n\"Maybe a tiny bit evil, Daddy,\" I said. Then, knowing he was watching, I turned around, gave my ass a little bit of an extra wiggle, and went into the bathroom. The last thing I heard was him groan. Thankfully, he couldn't see my smile. Some might classify it as evil-looking.\n\n***\n\nThe set was pretty low-key when Daddy arrived. With only a few days left in shooting, some cast members had already finished their scenes and moved on. We were shooting interior scenes in a studio space and none of the wardrobe demands were exceptionally high. We'd started packing up some of the clothing, although I had no idea where it was going.\n\nThe girls immediately jumped on him when I brought him back to where they were working. Curiosity levels about him were high and I'd given him the head's up that they would be poking at him quite a bit.\n\nHe nodded as if he expected it, and we both entered our public personas. No longer Daddy and Kitten, but Ben and Kit. When the girls were chatting with him he behaved perfectly. I'd seen him do this a few times, but it was always kind of weird to watch. He smiled and was friendly but never poured on the charm. He would smile when talking about me, reach over and squeeze my hand sometimes, but was never possessive over me. He gently deflected if they pried into our personal lives; instead he asked how the shoot was going or how they got into the business.\n\nEllen, one of the girls I'd worked with during the shoot, snuck over when Daddy talked to Mary about something.\n\n\"Please God, tell me he has a twin brother,\" she said.\n\n\"Only child,\" I said with a regretful smile.\n\n\"God damn it,\" she groused. \"You literally knocked him over at a comic con and now he's going to marry you?\"\n\n\"Yup.\"\n\n\"Well shit, maybe I'll give that a try. It's got to be better than the dating apps I use,\" she said.\n\nEventually I managed to pry him away and give him a small tour of the place. By now I was pretty good at knowing how to stay out of the way and be invisible.\n\nDaddy mostly smiled and nodded as I pointed out things and different actors on the show. One actress, who had a small, recurring part on the show came over to say hi and we chatted a bit before she had to run.\n\n\"Hobnobbing with the stars?\" Daddy teased.\n\n\"It's never a bad thing to be polite to people. This was her first TV gig and she's super excited to be doing this. One of the girls told me that for some of the actors this might be the only part they get. So why not be kind? Why ruin something that makes them so happy to be doing?\" I said.\n\n\"You're a good girl, Kitten,\" he said and then took my hand, gave it a little squeeze and kissed me on the head. I could feel the little space swooping into my brain. That kind of gesture always did the trick.\n\nThat's when my phone buzzed, reminding me of my meeting with Susan in five minutes. That snapped me back to reality quickly. I took his hand and headed over to the office she had commandeered. She walked over and shook Daddy's hand.\n\n\"It's nice to finally meet you, Ben,\" she said. \"I feel like I know you. Kit talks about you whenever we chat and, well, there was your video from last year.\"\n\nI could practically see the smile freeze on Daddy's face. When he proposed to me at comic con, some girls recorded it and put it on Tik Tok. We became social media celebrities for a few days, which annoyed him at the time. Meg dined out on it for months. It all died down, but when someone mentioned it he made a face; politely good-humoured but eager to move on.\n\n\"Well, the video made a lot of people happy and she said yes, so that was the important thing,\" he replied.\n\nSusan saw he wasn't 100% comfortable with the topic. She changed gears and asked me to come join her in a tiny room she was using as an office, and checked to make sure Daddy would ok being alone with the rest of my co-workers. He said he'd be fine and Mary, Ellen and the rest looked like they were happy to try and pry more information out of him.\n\nI had a funny feeling the next time we fucked, Daddy would be spanking me a lot. And hard.\n\nI sat down across from Susan, with a small table separating us.\n\n\"Did I ruffle his feathers by bringing up the video? I thought it was adorable,\" she said.\n\nI made a see-saw gesture with my hand. \"A little bit. He took a lot of teasing from his friends and family and the usual group of online assholes gave him a hard time over proposing at a comic con. I loved it and, like he said, I said yes.\"\n\n\"Any date planned yet?\"\n\nThat minefield hadn't gotten any easier to navigate since May.\n\n\"Sometime next summer, I think. We're still negotiating a time and place,\" I replied. She got an interesting look on her face, as if she was processing that information and how it worked with her plans.\n\n\"Kit, let me say you did a great job this summer. I spoke to Mary and chatted with the rest of the girls while you gave Ben his tour. They all said you worked hard, showed up early, stayed late without complaining, asked good questions, and never got starstruck. And you handled that harassment....incident, with maturity. This isn't so much a post mortem of what you could do better next time as it is me offering you a job when you graduate,\" she said.\n\nIf I wasn't already sitting down, my ass would be hitting the floor. I thought this would be a little 'nice job, and we'll talk again next year' chat. I wasn't expecting a job offer. The look on my face must have been priceless because Sudan laughed, not unkindly.\n\n\"You did great, Kit. The only concern I had was about Ben, to be honest. You're only 21 and engaged,\" she said.\n\n\"I don't understand; what does my relationship with Ben have to do...\"\n\nSusan put up her hand, sensing I was upset.\n\n\"Kit, I like minimal drama with my employees because I work for people who deal with high-level drama from actors and directors. They don't need drama from the people who handle the costumes. So yeah, I wanted to make sure you and Ben are in a healthy relationship and there's no manipulation, coercion, or power plays going on.\n\n\"That might annoy you, but if you work on big-money productions, there's going to be huge workloads and expectations. Not all relationships survive the stress, especially if it's not healthy to begin with. So I like to screen out potential problems in advance,\" she said.\n\nI took a moment to process all of that. Of course what Susan was saying made sense. I was not the center of the universe and they needed to make sure I was going to be able to do the job. God, I'm 21 and I have a lot of big decisions to make in the next year. Then a thought hit me.\n\n\"You met Ben for like 30 seconds. How do you know there's no drama?\" I asked.\n\nSusan grinned and tapped the iPhone on her desk. I could see she was getting texts.\n\n\"Those girls are the most effective asshole detectors in the world, mostly because they've married or dated so many of them. Just awful taste in men and women for themselves, but they can spot trouble for others a mile away. They told me they loved him before you guys came back. I've been getting updates. Their opinion hasn't changed,\" she said.\n\nI couldn't help myself. \"What are they saying?\"\n\n\"Mary says he's 'just lovely.' Ellen is frustrated that he doesn't have a brother, that he seems a little sad, but adores you. And so forth. Despite the age difference, it's obvious the two of you love each other. That's all I need to know,\" she said.\n\nI nodded my head and blushed a bit. It was always a little weird when people noticed how sickening we were with each other. It's not like we were making out in public, but I was always close to him when we were walking together and he always looked at me and smiled. Of course others will notice; it just never dawns on me that they will.\n\nI finally shook my head and went back to what was happening right now.\n\n\"Do you need an answer now?\" I asked, aware that it might sound ungrateful. Susan didn't take it that way, thankfully.\n\n\"Before Christmas,\" she said. \"I need to plan who will be working on what sets. If you're interested in travelling to Europe, let me know. I think there will be a few productions in England and Prague that I could get you on.\"\n\n\"Oh wow,\" I said.\n\n\"Yup,\" she said, standing up. Our chat was over. \"You do well by me, I'll make sure you get the opportunities you want to shine.\"\n\nWe walked out of the office and Daddy was still chatting with the girls. He looked over and smiled. It was funny, I noticed his smile, but I also noticed the other women's reaction to him. I could tell they all loved his reaction to seeing me again, even if we were only apart for a few minutes. It made me appreciate again how lucky I was.\n\n\"So did you survive the interrogation?\" he asked with a grin.\n\nI glanced over at Susan, and she nodded to my unspoken question.\n\n\"Susan offered me a full-time job if I want it,\" I said.\n\nThere was a lot of noise after that, with the girls coming over to give me hugs and congratulate me. They seemed to have leaped from offer to accepting, but I took the hugs and said thank you. After a couple of minutes they parted, and Daddy came over and hugged me.\n\n\"I'm proud of you, Kit,\" he said.\n\nImmediately panty soaker. I wanted to ask if I could take a 15-minute break and find a private spot, but I figured that might be pushing my luck.\n\n\"So what are you going to do now? You still have a month until you have to go back to school. Big vacation plans?\" Susan asked.\n\nI looked at Daddy, letting him answer.\n\n\"Well, we're going out to Vancouver to see my mom for a few weeks. She's not doing great,\" he said, in what was an understatement. According to his father, she was fading quickly. \"Then I promised her some time in the Rockies around Banff.\"\n\n\"Nice,\" Susan said, smiling.\n\n\"I'm hoping to convince her to spend some time in Saskatchewan, but we'll see,\" he said.\n\nSusan looked baffled, trying to figure out why anyone would want to go to Saskatchewan so I answered her unspoken question.\n\n\"My mom lives there. We have...issues. So it's best I not go and see her. Less drama that way,\" I said, hoping to appeal to the part of her that enjoys no drama. Instead, she disappointed me.\n\n\"I didn't get along well with my mom when I was your age. I was a bit of a wild child,\" she said. Given that I'd see her do a somewhat raunchy burlesque routine at comic con, I could only imagine. \"But when I had my kid, well, good luck keeping a grandmother away from her grandchild. If I were you, I'd make peace now. Trying to deal with her while you're pregnant or with a small baby is drama you don't want.\"\n\nWell, shit. I didn't have to look at Daddy to know his reaction.\n\n\"Well, maybe we'll pop in for a quick visit and see what we can do,\" I managed to get out.\n\n\"Cool,\" Daddy said. \"I think that's a great idea. I'll book some tickets to Saskatchewan.\"\n\nWell fuck. That happened fast.\n\n****\n\n(Mid-August)\n\nThree weeks after the ambush, Daddy was steering the car into town. My anger was switching over the anxiety. I had so many memories in this place and so few of them were good or that I was proud of. Dad abandoning us, all the fights I had with mom, all the drinking and drugs, the terrible taste I had in men, the bad things I did with and to my friends. This was a nightmare.\n\nSensing my mood had shifted, Daddy pulled into the local gas station and killed the car engine.\n\n\"Kitten, are you all right? Seriously?\"\n\nI took a deep breath and refrained from screaming at him that it was a little late to be asking that question now. We were here. Mom was expecting us and the volume of drama that would come from changing my mind could not be contained by a water tower. I took a few deep breaths and turned to him.\n\n\"We're here and we're going to do this. But you have to understand I'm not kidding when I say there's nothing good for me here. There's a reason I left and have avoided coming back as much as possible,\" I said. \"So if things get bad, if mom freaks out, if someone sees me and loses their shit, we leave and you do not argue with me about it. Ok?\"\n\nHe nodded. This was not a side of me he was used to seeing. I've always been bratty with him; it was part of our games. But I could feel myself becoming bitchy, like it was in the air and seeping through my pores.\n\nI also looked at what I was wearing and sighed. It would be precisely what everyone expected of me. I reached into the back seat, opened my travel bag, and pulled out a pretty sundress. Daddy looked around and didn't see anybody, and nodded at me that it was ok. I quickly slipped it on and took off the t-shirt and shorts. I looked a bit more adult. No bra though, which I'm sure would be enough to scandalize my mother.\n\n\"Kitten, just remember that you are a successful designer who has worked on a tv show and has an offer to work on an international movie shoot. You're engaged and happy. I'm not saying to throw that in people's faces; you shouldn't. But just be confident and relaxed that you're a good person and doing well,\" he said.\n\n\"They won't think I'm a good person,\" I said. 'They' being a fairly nebulous group, but I figured most of the town was happy when I left.\n\n\"I do,\" he said and took my hand and kissed it. I hated that he dragged me here, but I loved him madly for moments like that. I nodded my head that he should keep driving and slid the sunglasses over my eyes.",
        "As we drove through town I kept expecting people to come running out and throwing rocks at the car. Such a drama queen, I thought. Most people were working or on vacation.\n\nWe were driving down towards the town council office where mom worked when we went past the paper clip.\n\n\"What the actual fuck?\" Daddy started. I just groaned.\n\n\"It's the World's Largest Paperclip,\" I said. \"Seriously. It was a whole thing when I was a kid. Some blogger had a paper clip and was trying to trade up to see what he would get for it. As a publicity stunt, he eventually got a house here in town.\"\n\nDaddy looked over at me and grinned. \"Seriously?\"\n\n\"How on earth could I make up something like that? It was a whole thing for a few months. Hell, they still do a paperclip celebration once a year. Tragically, we've missed,\" I said with a tone of voice indicating that it was far from a tragedy that we missed it.\n\n\"Damn,\" he said, only half-joking. Giant Paperclip Days would be something he would love, I could just tell. We pulled up in front of the town hall, next to the paperclip, and I could feel my stomach clench. Daddy tried to distract me.\n\n\"Does he still live in that house?\" he asked.\n\n\"God no. Moved out to Whistler last I heard,\" I said. Deep breathes.\n\nDaddy opened the car door, walked around, and opened the door on my side. Yes, it could be chivalry, but it prevented me from hopping behind the wheel and driving off. I slid out of the car, the air conditioning vanishing and the hot, still summer air slammed into me. I took his hand and held onto it like I was drowning.\n\n\"Off to face the Jabberwocky, snicker-snack,\" he said quietly to himself. I couldn't help but giggle a bit.\n\n\"You only think you're funny,\" I said.\n\n\"You do as well. It's a limited audience that appreciates my genius, but I'll take it.\"\n\nWe walked into the building and there she was, my mom.\n\nShe'd aged a bit since I last saw her. There was more grey in her brown hair and she was wearing glasses, which was new. Her dress looked straight as if it came from the second-hand clothing stored we past coming here. I got my hair from dad, my height and my eyes from mom. From all the fights we had over the years, pretty much every aggravating personality trait I had - my stubbornness, creativity, addiction issues, and temper - came from my father. Or so she said. I can't be sure, but I think she had some part to play regarding my temper.\n\n\"Ashley,\" she said, as if I was a ghost who had just unexpectedly materialized in front of her.\n\nDaddy squeezed my hand and reminded me to breathe. \"Hey, mom. We're here,\" I said.\n\nShe pushed her glasses up her nose and I could tell if I had stayed here that was going to be a new tell on when she was annoyed with me.\n\n\"Yes, and late as well. We were expecting you last night,\" she said.\n\nWait, what? 'We?' What we? But before I could say anything Daddy jumped in.\n\n\"Well, I'm afraid I have to accept the blame, Ms. Clarke. After the flight got in late last night, I asked if it was ok to stay at a hotel. Given what's happened to me in the past, I'm not 100% comfortable driving at night,\" he said. Then he let go of my hand and walked slower than usual towards my mom, leaning hard on the cane. He stuck out his left hand, which was weird. \"I'm Ben. It's nice to meet you.\"\n\nMom looked like she had the wind knocked out of her sails and reflexively stuck out her hand for him to shake. I was momentarily in awe. He completely took her off her game. He was playing the sympathy card, which he never does. I mentally kicked myself. Just because he dragged me here didn't mean he wasn't going to take care of me. Of course, he would.\n\nThen something weird happened between the two of them. I couldn't exactly see what passed between them, but a sudden look of surprise crossed mom's face. She quickly jerked back her hand. She then composed herself.\n\n\"You've managed to be both late and early. I have work to do until noon. I'll meet you at the Cottage at 12:15,\" she said and then vanished into an office, leaving me with a dazed look on my face.\n\nDaddy walked back towards me with a grin on his face, took my hand and walked me outside.\n\n\"The Cottage?\" he asked.\n\n\"Paperclip Cottage,\" I replied automatically. \"It's a local place to eat.\"\n\n\"Of course,\" he said, shaking his head. \"Shall we walk? Stretch our legs a bit.\"\n\nWe started moving, although I noticed Daddy's limp magically went back to normal, so it took me a few minutes before my brain kicked back in.\n\n\"What happened back there? I mean, I appreciate you coming to the rescue, but the weird handshake and it looked like she had a stroke when you shook her hand,\" I said.\n\n\"You didn't notice,\" he said. I pulled his arm so that we were heading in the right direction. \"You mom said 'we' were expecting you last night.\"\n\n\"Yeah, that was weird.\"\n\n\"I tested out a theory and shook her left hand. Most people don't expect that. That's when I felt the diamond press into my hand.\"\n\n\"Diamond?\" I said, still not putting it together. Daddy stopped and looked at me.\n\n\"Kitten, she was wearing a ring much like the one you have on your left hand right now. She's engaged.\"\n\n***\n\nWe were sitting in the snug confines of the Cottage and I was still processing what he had said. Mom was engaged?\n\n\"Are you sure, Ben?\" I asked. We were in public and I'd noticed a few glances my way while we were sitting. So we were back to being Ben and Ashley.\n\n\"As I said the last half dozen times, I didn't see the ring, but I felt it and judging by her reaction, I'll be astonished if she wasn't.\"\n\nI didn't understand my mother, and that understanding got less and less the older I got. Why wouldn't she tell me she was engaged? It's not like I was going to be scandalized or outraged by this. Dad was gone for almost 15 years. Of course she was allowed to start seeing someone else. I wish she'd started seeing someone years ago. Maybe if she got laid occasionally she'd have been less of a bitch during my teen years.\n\nI was still processing all of this when I saw a pair of legs come up to the table and then a voice say, \"I guess it's true what they say on the classic rock station, 'the bitch is back'.\"\n\nI looked up and saw a grin framed with dirty blonde hair looking down at me. I wasn't sure what my reception would be like coming back to town, especially with the friends I kinda burned going out the door. But it was good to see at least one friendly face.\n\n\"Well, given your reputation, you are an expert on bitches, Kris,\" I said.\n\nShe laughed and bent down to hug me. I heard a loud \"ahem\" from behind the counter, so hugging customers was frowned upon. Kris stood up straight and shrugged her shoulders. Kris always had curves that I envied. I got in trouble because I looked cute and innocent and wasn't. Kris's tits and ass came in early and she was a trouble magnet. Together we caused a lot of trouble.\n\n\"So how's it going, scandal girl?\" she said, and then she glanced over at Daddy. \"And you must be the scandal.\"\n\n\"I guess I must be,\" he said, standing up and offering his hand. \"I'm Ben, her fianc\u00e9.\"\n\nKris took his hand and shook it. She stared at him for a moment, appraising him and then nodded.\n\n\"Yeah, ok. I like him,\" she said.\n\nDaddy sat back down and laughed. \"Just like that? I thought it might be harder.\"\n\n\"Oh, I've been around most of the other boys she chased after, and every single one of them gave off a vibe that made me want to take a shower. You make me want to curl up in your lap.\"\n\n\"Kris...\" I said, with a surprising amount of jealousy and warning in my voice. We may have stolen each other's boyfriends a few times in school.\n\n\"Oh relax, I'm kidding. Besides, the gossip wasn't 100% accurate because you're not giving off a creepy vibe at all,\" she said.\n\nSo everyone in town knew we were together, if not engaged. And I absolutely could not see my mom running around town talking about that. But maybe Kris knew.\n\nShe must have seen I was getting ready to ask the question, so she provided the answer.\n\n\"You remember Heather at the school? Biggest gossip whore in town? She was visiting her sister in....\" she said, doing a little drumroll on the table with her fingers.\n\n\"Kingston,\" I sighed. Kris nodded.\n\n\"She was so scandalized she simply had to spend 20 minutes following you and taking photos. Which she then shared on the local Facebook. Take a guess how your mom reacted?\" she said.\n\nI could feel the rage building. If Heather walked through the door right now Daddy would need bail money.\n\n\"I'm guessing this would have been back around April or May?\" I said. Kris nodded. \"Right around when mom suddenly became interested in talking to me again. For fuck's sake. And she's engaged?\"\n\n\"Yeah to the new fire chief. Nice guy. No idea what he's doing with her,\" she said, then glanced over at the kitchen. \"Look, for the sake of appearances, I should take your order before she fires my ass and I kinda need the job.\"\n\n\"Tuition money?\" Daddy asked. Kris shook her head.\n\n\"Nah, that didn't work out so well. Too much partying, not enough studying. I'm doing this while I figure out the next step,\" she said.\n\nWe ordered a couple of sandwiches and some coffee. Mom would probably be pissed not waiting for her, but I skipped breakfast and was hungry. I didn't want to be hangry dealing with my mom. She jotted down the order and went to the kitchen.\n\n\"Wow, that was a lot to process,\" Daddy said. \"But she seems nice.\"\n\nI was still lost in thought and only caught the tail end of what he was saying.\n\n\"Yeah, she is. I was worried she'd be pissed with me, like everyone else. But we always had thick skins for each other's bullshit. I'm glad she's not mad at me, but her being back in this town is not surprising. She's my worst fear. I was terrified I would leave town, fail, come back, and end up waiting table or working at the thrift shop. Never leaving, living with my mom, and always wondering where it went wrong.\"\n\n\"That's not a lock for her yet,\" he said.\n\n\"I saw it a couple of dozen times growing up. You leave town, try, and maybe you get the escape velocity to keep going. But a lot of times you don't and end up back here,\" I said, sighing. \"I need to keep in touch with her from now on. Maybe I can help.\"\n\nThat's when mom walked in. With her was a man who looked to be around her age, bald but in half-decent shape. He was wearing a jacket with the fire department logo on the front, so I guess this was the new fianc\u00e9. My world had taken a turn for the surreal. Daddy stood up as they approached the table. Mom's fianc\u00e9 stuck out his hand.\n\n\"So you must be the famous Ben, Ashley's man. Nice to meet you. I'm Frank, Peggy's fianc\u00e9,\" he said. They shook hands and Daddy gave him one of his friendly smiles. Frank looked towards me. I tried not to sigh and huff and reminded myself that I was 21, which meant I had to try and pretend I was a grown-up.\n\n\"Nice to meet you,\" I said, and we all stood up there awkwardly for a moment. Out of the corner of my eye I could see Kris taking in the scene. I'm surprised she wasn't eating popcorn.\n\nDaddy finally waved to the chairs and we all sat down.\n\n\"I hope you don't mind, but we already ordered. We skipped breakfast this morning...\"\n\n\"Say no more,\" Frank said. \"I skip a meal and I'm not fit to talk to. Besides, they know what we like here. I imagine they've already started.\"\n\nFrom there an awkward silence settled in. The men didn't know what to do, and mom and I just stared at each other. Finally, I broke the silence.\n\n\"So, when did you get engaged?\" I asked, not sure who was going to respond.\n\n\"Back at Christmas,\" mom said. \"We had only been seeing each other for six months. I thought it was a bit soon...\"\n\n\"But I can be pretty persuasive,\" Frank responded, laughing. \"Besides, I knew she was the one.\"\n\nKris took that moment to bring out our sandwiches, put them in front of us, and gave me a look that only I could see. It was her trying not to crack up at the weirdness of the situation. If nothing else, the momentary urge to want to throttle Kris combined with agreeing that the situation was absurd made me want to laugh.\n\nThe rest of the meal was just as weird. There was small talk, but nothing of substance. Daddy and Frank did most of the talking while mom and I glared at each other. We'd barely seen or spoke to each other for 18 months, yet she looked like she would prefer to be anywhere other than sitting across from her daughter.\n\nI took a deep breath. Time to get a few things out in the air otherwise the tension was going to crack the restaurant in half.\n\n\"Mom, why didn't you tell me you were engaged? I literally found out when Ben shook your hand. And why did you wait a year to reach out to me after Ben and I got engaged? I'm just....\" and I threw my hands up in exasperation.\n\nShe gave me one of her looks that I recognized all too well, which was she didn't appreciate having her decisions questioned. She looked at me for a moment and then down in her lap.\n\n\"This is not the appropriate time or place to talk about that,\" she said, looking at the two men sitting at the table. Oh well, I had a solution if that was the problem.\n\n\"Frank...Ben, could you possibly give us a few minutes to ourselves,\" I said. Both of them looked at their women, looked at each other, came to the conclusion that there was a chance we might kill each other, but it was slim, and got up.\n\n\"Do you smoke?\" Frank asked Daddy.\n\n\"Can't say I do,\" he replied.\n\n\"Me either, but now seems like a good time to stand outside anyway,\" Frank replied. I almost laughed. I've no idea what he saw in mom, but he seemed decent enough. They went outside and Frank began chatting away and Daddy laughed. It was nice that they could get along.\n\nI looked at mom again and gave her my \"well?\" look. She sighed.\n\n\"You always make things so difficult. Your behaviour in school was bad enough, and then running off to some French school in Montreal instead of staying in Saskatchewan. I hoped it might make you more mature. But then you waltz back into town, not even wearing a bra for God's sake, and bringing along this....man, and I'm just at my wit's end,\" she said.\n\n\"I thought this was going to be just another incident among your endless waves of immaturity. Of course you were going to be foolish enough to get engaged at a ridiculous age. But I fully expected it to blow up before you did something stupid.\n\n\"But then Heather had to spot you when she was out east visiting family, and she saw you with him, behaving scandalously. Calling him....things. I'd hoped you'd fly out here alone so I could talk some sense into you, but I should have known better.\"\n\n\"You wanted to meet him,\" I managed to get out.\n\n\"Oh please, I said no such thing,\" she spat out. \"The whole relationship is ridiculous.\"\n\nWhen we were flying out, Daddy advised me that every time mom said something that made me want to strangle her, not to respond right away. Take five or ten seconds, focus on my breathing, and then respond. I did that. It worked only in that I didn't flip the table and walk out.\n\n\"Are you kidding me? I. Am. Engaged,\" I said, waving my hand with the engagement ring on it. \"I didn't want to come back, but he wanted to meet you in the hopes that we could patch things up.\"\n\nShe rolled her eyes.\n\n\"I wanted you to come back alone so Frank and I could talk some sense into you. God help me if you go through with it and marry him or do something disastrously stupid like have children with him. I will tell you right now that you won't be coming back into my house dragging some brood of brats behind you after he dumps you and chases after the next barely legal thing he sees,\" she said.\n\nAnd that's when it happened. The light went off in my head. Everything in the cafe seemed sharper and more focused. I'm sure she expected me to yell at her after saying something so cruel and stupid as that. Instead, I smiled. I felt like I could float off the chair.\n\n\"You know, last summer Ben's parents came out to Kingston to visit, and they were nothing but kind and welcoming to me. Just lovely people. His mom gave me this Claddagh ring, which makes what's happening to his mom even crueler,\" I said. Mom looked puzzled. \"She has rapid-onset dementia. The first time I met her was one of the last times she was 'there.' Her doctors don't expect her to live more than another year or so. After we leave here, we're off to Vancouver to spend some time with her.\"\n\nMom at least had some decency to look a little mortified with that information. Too late. I stood up and leaned on the table towards her.\n\n\"When he was there Ben's dad asked me if I ever experienced a 'moment of clarity.' A moment so profound that you know exactly what you have to do. He had one of those when he met his wife for the first time. I just had one, right here, right now. He was correct; it was like a light going off and I can see with perfect vision.\"\n\nI knew Kris was watching. Hell, there were a dozen people in the cafe and most had given up any pretence of not watching us. Still, this was for her only, so I leaned in and spoke softly, but forcefully.\n\n\"I'm walking out that door and we are done. We are never speaking again. You're not invited to the wedding. When we have children, and we are going to have a bunch, and they ask about my parents, their grandparents, I'm going to tell them they're dead. And that will be 100% true. I am never exposing my husband and our children to whatever toxic crap that is in your heart instead of love.\"\n\nI straightened up, tossed some money from my wallet on the table to cover our bill, turned around and walked towards the door. Kris ran over towards me and had a wide-eyed look on her face. She wanted to say something, but I guess the look on my face stopped her. Instead, I put my hand on her arm and whispered in her ear.\n\n\"If you need any help getting out of here, you text and let me know, ok?\"\n\nShe nodded. Then I hugged her and walked out the door. Mom never said a thing.\n\nFrank and Daddy turned to look at me. Frank looked surprised, but Daddy saw the look on my face. He knew we were done here.\n\n\"Tell me what you see in her, Frank?\" I asked.\n\nHe paused for a moment, caught off guard by the question.\n\n\"We met in church. She can be a hard woman to get to know. Respectfully I think your dad did quite the number on her. But we grew to like each other's company. It's just nice to have someone around, you know. It's not like Tindr does you much good in a place like this,\" he said, trying to make a joke.\n\nIt was too bad. He genuinely seemed like a nice guy. I leaned up and kissed him on the cheek.\n\n\"It was nice meeting you, Frank. Take care of yourself.\"\n\n\"You're not staying? I thought you might come over for supper. I was just telling Ben I do a hell of a barbecue,\" he said.\n\n\"There's nothing more for me here,\" I said, and started walking towards where we parked the car. I heard Daddy say it was nice to meet him and moved to catch up with me as quickly as possible. He didn't say anything, waiting for me to speak first. I didn't say anything until we got to the rental car.\n\n\"I'm not mad with you, and I still love you madly. But I'm not going to be talking much for the next couple of hours and I need you to respect that,\" I said.\n\n\"Ok.\"\n\n\"I need to get out of here. Can we check into wherever you booked us early, and can you change flights so we can get the hell out of Saskatchewan as soon as possible?\"\n\n\"Absolutely.\"\n\n\"Good,\" I said. I caught a glimpse of myself in the car side mirror, wearing the pretty sundress to impress my mom. I had the urge to burn it, but instead I reached into the backseat and grabbed the shorts and t-shirt I was wearing earlier. I didn't care if anyone was watching as I pulled the dress over my head and put back on the t-shirt and shorts. Daddy's eyes got wide, but he didn't say anything. One more thing to scandalize my mother. I tossed the dress on the nearby grass. I liked that dress, but I was never wearing it again.",
        "I got in the car, and Daddy slid into the driver's seat, buckled up and looked at me.\n\nI nodded my head. \"Let's get the hell out of here.\"\n\n***\n\nWe drove for about 20 minutes. There was a hotel in Kipling, but I told Daddy from the start that we weren't staying with mom, and we were not staying in this town. He found another place that rented cabins along a lake. There were lots of splashing kids playing and running around. It was loud, but it would be fine. At least we'd have some privacy and, if we were lucky, we'd be on a plane to Vancouver tomorrow.\n\nIt was also a cabin with the benefit of a shower. As soon as we walked in, I stripped off my clothes and got in the shower. The water pressure was shit compared to Daddy's mega shower back in Kingston, but it would do. I just needed to feel clean again.\n\nTwenty minutes later I walked back out into the rest of the cabin. I was still naked and dripping wet. The clarity that I had dealing with my mom a few hours ago was long gone. Suddenly I didn't know what to do with myself, so I stood there, just staring off into space. Daddy got up from his chair, walked over and wrapped me in his arms.\n\nAnd then I just lost it. I didn't even know it was there, although in retrospect it had been bottled up for a long, long time. I just started sobbing into his chest. I hated her, but I didn't have a mommy anymore, and the enormity of it just slammed into me. I don't know how long I was crying, but when the tears finally dried up, I was sitting on my Daddy's lap on a couch with my head buried into his shoulder. His shirt was soaked from holding me. I looked up at him with bloodshot eyes.\n\n\"I'm the biggest baby in the world,\" I said, making a snurfing noise.\n\n\"No, you're not,\" he said, running his fingers through my hair and kissing my head. \"You're the most amazing woman I know.\"\n\n\"More amazing than Meg?\" I said. He nodded. I gave him a very skeptical look.\n\n\"Hey,\" he said. \"I'm going to be shedding my share of tears over the next couple of years and I know you'll be there for me. I'm here for you, Kitten.\"\n\nI burrowed into his chest. \"Thanks Daddy,\" I said in a little voice.\n\n\"Now, do you want to talk about what happened?\"\n\nI nodded my head and recounted the conversation I had with her. I could feel him tense when I got to the particularly cruel parts. It was a brief recap, but it felt good to finally talk to him about it. I could see how upset he was.\n\n\"I will never stop apologizing about dragging you back there,\" he said. \"I should have listened to you. I'm so sorry.\"\n\nI shifted around so my knees were on either side of him. I was sitting on his lap and facing him directly. I reached out, stroked his beard, and smiled.\n\n\"No, no, you were right. I needed to go out and do this. I needed to know that this was to be the way she was going to behave. I had the brief hope that maybe she mellowed out, but it just confirmed everything about her,\" I said.\n\n\"You know how I feel about hurting you,\" he said.\n\n\"It gets you hard?\" I said, grinding on his lap a bit. He laughed and gave me a gentle slap on my ass. To my surprise I felt myself getting wet.\n\n\"You know what I mean. It kills me when you're upset and it's my fault.\"\n\nI took him by the chin and leaned in close.\n\n\"It's not your fault that my mother is insane. It's not, ok? You didn't hurt me.\"\n\n\"Ok,\" he said.\n\nThe feeling between my legs was not going away. If anything, it was getting stronger. Then I thought, what the hell...\n\n\"Although if you're feeling guilty and want to make it up to me, I have an idea of how you can take care of that,\" I said, grinding on his lap a little more. His eyes got wide and before he could say something to kill the mood, I leaned in and kissed him. It took him a second to respond, but then he leaned into the kiss and wrapped his arms around me, crushing my naked body into his chest, which was still tragically clothed. We made out for a few minutes, and I could feel his cock respond beneath the shorts he was wearing. Eventually, we came up for air.\n\n\"Before you ask, yes, I'm sure. I just...she said some cruel things, Daddy. It's silly, but I need you to show me she was wrong,\" I said.\n\nI thought he would get into a lengthy discussion on how mom was wrong, then he wasn't going to run off with someone when I got older, and that I was never going to go crawling back to her. If he said all that I knew it would make me feel worse.\n\nBut give my Daddy credit; he knows me pretty good by now. Instead he reached up and touched my face and smiled. God, the warmth he had in his smile and he never knows the effect it has.\n\n\"Well, then I'm wearing entirely too much clothing to help you with that, Kitten,\" he said.\n\nI stood up but grabbed his shirt and yanked it over his head while he tried to pull down his shorts at the same time. It was a clumsy mess and we both cracked up. He tried to stand up and head towards the bed, but that's not what I wanted. Once he was naked I put my hands on his shoulders to keep him in place. Understanding what I needed, he reached down and adjusted his cock so it pointed up.\n\nI lowered myself and briefly wondered if I would be wet enough given our lack of epic foreplay. It was a silly worry. His cock pushed into me. I wasn't already fully wired after a couple of orgasms, so I wasn't as relaxed. It felt different when his cock entered my pussy. But it was far from bad, just different. He felt enormous. I gasped and rolled my head back, his arms holding me securely as I adjusted. Eventually, I looked back at him.\n\n\"Ohhhh, that'll chase away the blues,\" I said.\n\nHe leaned down and took my right nipple into his mouth, sucking on it for a few seconds before his teeth latched on and he gave it a little nip. It sent pulses from my tits down to my pussy. He let go and laughed.\n\n\"That your pussy pulses every time I do that is amazing,\" he said.\n\nI deliberately pulsed the muscles in my pussy a few more times, and he groaned and then laughed.\n\n\"Well, then you're going to love the next few minutes, Daddy,\" I said. Then I wrapped my arms around him. It was a pretty shitty couch and low to the ground. The advantage was keeping my feet on the ground and bouncing up and down on him.\n\nWe were both giving and taking. I'm his little girl, which means I'm very submissive when we fuck. Whatever he wanted to do to me, I was 100% game for. Whatever he wanted me to do to please him, I would do it gladly. But this time I wanted to show we were equals. And he picked up on it. We took turns being in charge.\n\nAt first, I bounced up and down on his cock, and then I leaned in and kissed him hard. He ran his hands down my back, but let me take charge. I kissed and nibbled along his neck. I ran my fingers through his hair. And then I leaned back and gave him a show, running my hands through my hair.\n\n\"Am I a good girl, Daddy?\" I asked, giving him a look that was far from what a good girl would give.\n\nHe grabbed my hips and slammed me down on his cock hard. I screamed as he wouldn't let me move. He leaned forward and attacked my tits, moving from one to another, all the while forcing me to grind on his lap. Magically, his cock was hitting just the right spot in my pussy.\n\n\"Oh fuck, Daddy! Just keep doing that, just like that. Oh God, please never stop! Never stop! Fuck!\" I screamed and then came, sending more pulses through my pussy. My head collapsed onto his shoulder and for a few minutes I enjoyed not having a single thought going through my head.\n\nAnd when one did finally creep in it was, \"Huh, I wonder how close the nearest cabin is because they probably heard that.\" Then I laughed.\n\nDaddy didn't ask why. When I looked at him again, he smirked.\n\n\"It's not like we're ever coming back to this area again, Kitten,\" he said. \"I wouldn't worry about volume.\"\n\nAnd I laughed. Oh my fucking god, I was laughing so hard I couldn't breathe after a few minutes. It was the weirdest feeling, laughing and trying to gasp for air with Daddy's thick cock buried in my pussy. When I calmed down a bit and could look at him without cracking up again, I could see he was just...happy. He wasn't frustrated I was having a laughing fit while we were fucking. He wasn't annoyed or embarrassed by me being weird. He was happy because I was happy.\n\nI wiped the tears away from my eyes; very different tears than what I'd been doing earlier.\n\n\"Oh God, I love you so much,\" I said, touching his face.\n\n\"I love you too, Kitten,\" he said. \"I plan on doing that for a very, very long time.\"\n\nI knew what he meant. I smiled.\n\n\"You can do that for a long time,\" I said. \"But now I plan on breaking you.\"\n\nThere was nothing subtle about what I did next. I growled and began bouncing up and down on him as hard and fast as I could. When he tried to grab hold of me or touch me, I pushed him back on the couch. He got the hint.\n\n\"Just sit there and let me fuck you, Daddy,\" I panted.\n\nThe muscles in my legs were beginning to burn. I wasn't in terrible shape, but doing squats on your man while his cock is in your pussy will burn a few calories. Plus, the bastard was holding back; I knew he was.\n\n\"Come on, Daddy. Cum in your Kitten. I need it,\" I said.\n\nThat upped things a notch with him. Whatever reserve he had was starting to crack. My dirty talk always did with him. I leaned forward and stopped bouncing. I started grinding on his cock and fluttering the muscles in my pussy. Then I whispered in his ear.\n\n\"I called the doctor before we came out here, Daddy. My next birth control shot is scheduled for September. I cancelled it,\" I said, nipping at his ear.\n\n\"This is one of the last times you can cum in me without making me pregnant. After September, well,\" I said and blew in his ear.\n\n\"Christ, Kitten!\" he cried out, lifting his hips off the couch and cumming in me. I had a small orgasm, most from feeling his cum, but also from his reaction. Once his hips settled back down on the couch, I wrapped myself around, content to just absorb all the skin contact I could from him.\n\nAfter a couple of minutes, he stopped breathing so hard and his arms wrapped around me. I purred, happy and content for the first time in days. A good fucking will do that to me.\n\nThen he asked the obvious question.\n\n\"So was that sex talk or did you actually do that?\" he asked.\n\n\"Do what?\" I said, mainly to provoke a reaction. I got one as he uncoiled his arms and one of his hands came down on my ass. It stung, but with the amount of endorphins still going through my system, my body worked its usual magic and made it feel good. Still, I needed to maintain appearances.\n\n\"Ow, Daddy,\" I said, squirming on his lap a bit. That caused both of us to groan. He wasn't getting soft much, and I had the brief idea of trying another round, which rarely happens so quickly with us.\n\n\"Answer me, little girl,\" he said. Ah, that tone of voice. I could feel myself getting very obedient, very quickly.\n\n\"I haven't...yet,\" I confessed. \"But I was seriously thinking about it. My next birth control shot is in September. Once I stop it could be anywhere from a couple of months or up to a year for me to get pregnant.\"\n\nHe nodded and had a strange look on his face that I couldn't read. I was about to ask if that was ok, when he started speaking.\n\n\"So you're going to pass on the job and stay home to raise a family? I'm not saying no to you wanting that, Kitten; I just wanted to make sure that's what you want.\"\n\nAh, I wasn't explaining things right. When I had my moment of clarity with my mom, it wasn't just that I didn't want her in my life anymore. I just wanted everything else.\n\n\"No, not at all, Daddy. I want to marry you next summer. I want to start a family with you, and if I'm pregnant at the wedding, well, I don't think either one of us cares all that much,\" I said.\n\n\"And the job?\"\n\n\"I want that too. And I'll tell Susan that yes, I'm taking the job, but I might need a couple of days off to get married and have a honeymoon. I think she'll understand. She was a wild woman when she was younger and she had to do most of it solo. I'll have you with me. I think she'll understand. Is that ok? Is that too much or too selfish?\"\n\nI wasn't sure how he might react to all of that. It was a lot on top of an already very dramatic day and I hadn't exactly been the easiest person to be around.\n\nInstead, he smiled.\n\n\"You want it all, my princess?\" he said. It was a tone that was playful and happy and not at all judgemental. I felt a glow go through my body and that I could float on air, if it wouldn't have meant floating up off his lovely cock.\n\n\"I do. I just, I don't want to live a small life anymore. I saw that today. I know some people live in small towns and they love it. And if that's what gives them joy, if that gives them peace and security, then that's great. I'm glad if they're happy with their life.\n\n\"But I won't be satisfied. I don't know if my mom has been happy a day in her life. I can't recall one. Today I saw a woman who forgot how to be happy and doesn't know how to fix it. And if she can't be happy, neither should I. Because my happiness makes her feel worse and she's selfish enough to want to ruin it.\n\n\"So when I thought about what would give me joy, I thought that I wanted to marry you, have kids that I will love and help them grow up to be amazing people, and I want the awesome job. I'm going to start with wanting all of that. I don't know if I'll end up with all of it, but I'm going to try damn hard. If you'll help me.\"\n\nEven by my standards that was a rambling speech. He probably thought I was crazy or selfish. Instead, he put his hand on my face and smiled. I leaned my head into it.\n\n\"Ok then. Let's have everything,\" he said.\n\n\"Really?! You don't think I'm crazy?\" I said, straightening up.\n\nHe grinned. It was an easy set-up.\n\n\"Of course I think you're crazy, but I love you, and you love me, and most people think that's a good size swimming pool of crazy right there. So what the hell, let's go into the deep end, Kitten,\" he said.\n\nI squealed and threw my arms back around him, hugging him hard.\n\n\"I love you, Daddy.\"\n\n\"I love you too, my crazy little girl.\"\n\n****\n\nThe week in Vancouver ranged from relief and joy, to exhaustion and grief. Ben's father looked older than when I last saw him, although he noticeably brightened up when we first arrived at his condo in Coral Harbour part of the city. From his deck I could see Stanley Park. I might be naive about some things, but I knew Vancouver real estate was insane.\n\n\"I know your father is a lawyer, but is he really so successful that he can afford this place?\" I asked Daddy on our first trip out.\n\n\"He is successful, but he's also pretty shrewd about real estate. We had a house out near Horseshoe Bay growing up. He bought it cheap when it was a nothing area. They kept it for a few years after I moved out, then sold it. He never told me how much he sold it for, but it was easily seven figures.\n\n\"Then he bought this condo when they started building them. And yeah, he paid a lot for it, but when he sells this place, he can probably afford to buy an island or something,\" he said. \"Crazy' is a bland word to describe the real estate market out here, but it's accurate.\"\n\nIt was wet and gray the first time we were out, but now it was mid-August and, yeah, there were still wet and grey days. But also some nice ones. That helped because visiting Helen was hard.\n\nMike had a routine at this point. He dressed nicely, and then we drove to the care home where Helen was staying. It had been over six months and if Mike looked older and frailer, then Helen looked like she'd fallen into the abyss. Her hair was no longer stylish and she'd lost a lot of weight. There was no humor or amusement in her eyes anymore, just confusion.\n\nFor most of our visits she'd recognize Mike at some point. Only a couple of times did she remember Ben. And she never recognized me at all, but always smiled and said I was \"a pretty girl.\"\n\nAfterwards, we'd go for a walk in Stanley Park.\n\n\"Helen hated moving into that condo at first. Didn't like it at all,\" Mike said as we walked near the breakwater. \"But Ben had moved out, the commute into town was getting more and more annoying and we had people practically driving vans full of money to our house wanting to buy it.\n\n\"So we moved to that condo. Helen gave me no end of grief about it for the first three or four months. But then she discovered the park, and grew to love it. She used to beg me to come home earlier so we could go for more walks there. And sometimes I did, but never enough.\"\n\nHe paused and we took it all in. I had to admit it was stunning. I loved Daddy's house, well, pretty much our house right now. The view, the privacy, the jacuzzi, and the walk to the waterfalls. It was perfect and I would never want to leave it.\n\nBut as I watched boats sail past and beautiful people jog by, I realized this wouldn't be a bad place to live. Not that it would ever happen. Even if Daddy inherited the condo he would likely sell it. After Beth's death, he seemed scarred by condos. That was weird, but weird things happen when you go through that kind of trauma.\n\nLike maybe dating a woman almost 30 years younger than you.\n\nWhen Daddy first asked me to come out with him on this trip, I thought it was so I could spend some time with his mom. But after a few trips to visit her it became clear that we were there to spend some time with his dad. He did have friends and people from his law firm checking in on him. And he did have the housekeeper. Still, Ben was his only family.\n\nSo when he mentioned cancelling the trip to Banff and spending more time with his mom and dad, I quickly agreed.\n\n\"You don't mind? I know you've been looking forward to it, and after the blowout with your mom you might want some downtime. But I'm worried about dad,\" he said. We were lying in bed around midnight. He'd gotten over his paranoia about having sex in the same home as his father, but he did insist that we had to be quiet.\n\nIt meant he had to muffle me, which was kinda hot the first couple of times, but lost some of its kinkiness after that. The sex was fine, and it certainly kept me from going insane, which happened when I went more than a week without an orgasm. But it was a bit bland compared to our usual sex.\n\nThe thought of spending another week or so here instead of relaxing in Banff was not ideal, but I'd be the most selfish little girl ever if I whined about it.\n\n\"It's fine, Daddy,\" I said, running my hands along his chest. \"He needs all the time he can get with you, and you're not back out this way until Thanksgiving.\"\n\n\"Thanks, Kitten. I'll make it up to you, I promise,\" he said.\n\nI rolled on top of him, naked skin on naked skin. I wore a nightshirt when I came out to say good night to them, but promptly tossed it when I was alone. Wearing clothes to bed drove me nuts now.\n\n\"Oh, I know you will,\" I said, kissing him.\n\nBut when he floated the plan to stay longer to his father the next morning, Mike was adamant that wasn't happening.\n\n\"I've told you before you're not sacrificing your life to spend time with us. Your mom doesn't know what's happening anymore. If a miracle happens and that changes, you're my first call. But it's not. I'm not having you and your fianc\u00e9 sad and miserable for when she heads back to school,\" he said.\n\n\"Mike, I like being here with...\" I started, but he cut me off.\n\n\"You're an amazing young woman, and I'm glad every time you come out for a visit. But you won't make me or Helen any happier sacrificing what's left of your summer being here. If you want to see me, I think I've finally figured out Zoom, so give me a call every once and a while,\" he said. \"But I'll be happier knowing you're off in the mountains, relaxing and recharging for the final push for getting your degree.\"",
        "That went back and forth for about an hour until Mike threatened to change the locks the next time we went out, so that was that. A couple of days later, we were at the train station. Mike had said his goodbyes at the condo. We both promised to be back out for Thanksgiving in October.\n\nAt the train station, Daddy was pensive. I tried to be supportive and cuddle into him a bit. I also resolved that if our time in the Rockies was to recharge me for school, my job was to distract him from thinking about his parents.\n\n\"Kitten, I know it's probably a long way off, but you know I'm not putting you through that, right?\" he said.\n\nIt was still early and the coffee hadn't kicked in. I was also distracted by the thought of spending 12 hours on the train to Banff. Daddy swore it would be fun, but riding the train between Montreal and Kingston for almost two years had killed any romantic feelings I had towards rail travel. So I wasn't sure what he was talking about and it must have shown.\n\n\"The only thing that bothers me about our relationship is that because I am so much older than you that I might get sick and you might have to waste years of your life taking care of me,\" he said. \"And if this dementia is something that runs in the family and that I'm vulnerable to it, I am not putting you through that. Do you understand?\"\n\nIt was better than a triple shot of espresso for waking me up. I also wanted to hit him repeatedly for being that stupid. I took a deep breath.\n\n\"Daddy, if I got diagnosed with leukemia tomorrow and told you there was nothing you could do and you should just abandon me, what would you do?\" I asked, looking across the train station.\n\n\"Kitten...\" he started.\n\n\"What. Would. You. Do?\" I asked again.\n\nHe lowered his head. \"Assume you weren't thinking correctly, ignore you, and do everything I could to take care of you.\"\n\n\"Exactly. Don't be so dumb, Daddy,\" I said and then waved my hand with the engagement ring by his face. \"For better or for worse isn't some idle promise.\"\n\nHe took my hand and kissed it.\n\n\"It's killing my dad. I just don't want to put you through that,\" he said quietly.\n\nI wanted to strangle him for worrying, but I also knew his heart was in the right place.\n\n\"You're going to live to be 110, I'll be 80, and we'll be scandalizing the residents of seniors' home when I'm walking around with the anal plug tail,\" I said. He laughed. \"I know you mean well, but I don't want us buying worries that we may never have to deal with.\"\n\nHe had an odd expression on his face. Then he nodded and kissed me on the head.\n\n\"When did my little girl get so wise?\" he said.\n\n\"From my very wise Daddy,\" I replied.\n\n***\n\nBanff was beautiful but weird. For a prairie girl like me, all the big ass mountains were odd. I'd flown over the Rockies several times in the last year, so I knew they were there and they were big. I'd seen lots of pictures of them as well.\n\nBut it's something else when they're right....there. I resisted the urge several times to grab my Daddy and point at them, just to make sure that he saw them too.\n\nThe town itself was also weird. I was used to seeing large numbers of tourists. I'd just come from Vancouver; I spent the summer in Toronto, and lived in Montreal. Hell, even Kingston got its share of visitors.\n\nBut I'd never seen so many obviously foreign visitors in such a small town. That was kinda cool. What wasn't cool was the attention I seemed to be getting. I'd bought a few things when I was in Vancouver, a few sundresses to replace the one I left in Saskatchewan, a halter top, a couple of mini-skirts, and a few other things. It's summer, and I wanted to be comfortable and look cute for my Daddy.\n\nBut I certainly caught a few people trying to sneak pictures of me. In some cases, not even subtly trying to sneak pictures of me. At first it was amusing and even sort of flattering. By day two, it had switched over to annoying and occasionally creepy. Plus, it was agitating the crap out of Daddy, who has a huge protective streak for his little girl. We were even getting it when we were walking in the woods or hiking.\n\nBut things came to a head when we hit the hot springs. Maybe it was immature or silly to wear the tiny green bikini, but I love how I look in it, and I know my Daddy loves how I look in it. So why shouldn't I wear it?\n\nBut then I got a reminder that I can be naive. Because the instant that Daddy left my side to use the bathroom, it was like there was blood in the water for a particular variety of male shark. I was sitting in one of the springs when three guys, all around my age, came over to chat me up.\n\n\"You must love your dad,\" the blonde bro with some tattoo on his bicep said to me. It momentarily threw me until I realized he didn't say daddy. I tried to give the vibe that I wanted to be left alone, but these kinds of guys are not usually the type to pick up on \"fuck off and leave me alone vibes.\"\n\n\"He's not my father; he's my fianc\u00e9. He'll be back in a minute, so if you don't mind...\"\n\nThe bro groupmind couldn't comprehend that and started laughing.\n\n\"What? He's old enough to be your father. C'mon, you can do better than that,\" said bro #2, who had a shaved head. The implication being that he and his buddies would be the ones who could help me do better.\n\nI'd dealt with assholes when I was a teenager, but I was rusty due to lack of practice. I had Daddy since I hit college and was so busy at school I hadn't had to deal with them. And now, I had three of them around me, trying to be what they thought was charming. Because, you know, shitting on a woman's decisions is always the way to heart and panties.\n\nI sighed and lowered my sunglasses. I am a tiny thing and these are three large men. But in my favor I am a redhead with a latent vicious streak. I like it when Daddy takes care of me; it doesn't mean I can't take care of myself when I have to.\n\n\"Look guys, I'm sure there's someone around here that will be flattered by your attention, but it's not me. He's my fianc\u00e9, I'm off the market, so if you wouldn't mind moving along, that'd be great,\" I said.\n\nThe smiling and easy charm evaporated, which I expected. They didn't look like the kind of guys that took no for an answer easily.\n\n\"It's not her dad; it's her sugar daddy,\" bro #3 chimed in. He was growing some tragically long beard. \"Just another whore.\"\n\nThe three of them looked at me with disgust and moved away. The smart play was to let them leave and nurse their overinflated egos. I'd never tell Daddy about it and I'd forget about it soon enough.\n\nThe problem was, ever since the dust-up with mom in Saskatchewan, I was less willing to put up with people's bullshit. And I was feeling a bit bitchier. So...\n\n\"Better a whore than a small dicked Incel,\" I fired back at them.\n\nOoops.\n\nThe three of them whipped back around to face me as if they were a bro hive mind. It wasn't the smartest thing to say, but fuck those guys. They moved towards me and I could see a lot of posturing and profanity was coming my way. There were way too many people around for me to feel threatened. But Daddy was going to be back soon so this was going to become a thing.\n\nBut just before things got epically stupid, a blonde lady waded into my area with a couple of kids behind her. She looked like she was in her early 30s, wearing a one-piece suit. She wasn't overweight but had curves.\n\n\"Karen! We've been looking all over for you! Did you get lost?\" she asked.\n\nI am not Karen, but I know a life preserver when I see one. The bro hivemind was confused. They wanted to teach the uppity bitch a lesson, but a mother and kids blocked their path. I could tell it hurt their brains.\n\nI decided to take the lifeline. The bros weren't worth it, and if it kept Daddy from getting into a yelling match and using his cane, all the better.\n\n\"Yeah, sorry Kate. The fianc\u00e9 and I just wanted some time alone,\" I said.\n\nThe kids looked baffled by their mom talking to a stranger like an old friend. The bros decided retreat was the better option but shot vengeful looks my way as they departed. I'd have to keep an eye out for those assholes for the rest of the trip.\n\nI nodded at \"Kate\" to give her the all-clear. She glanced over his shoulder to confirm they were gone. Then she told the kids they could go off and play, which they gladly did, and then turned and looked at me.\n\n\"Small dicked Incels?\" she said, putting a hand on her hip.\n\n\"Tell me I'm wrong,\" I replied.\n\nShe laughed and introduced herself as Sonja. It turns out she spent a chunk of her 20s working bars and was used to bailing out girls who got themselves in over their heads.\n\n\"I was over my head?\" I asked, knowing that, yeah, I probably was in deeper water than normal.\n\n\"It's a great line and funny as hell. But you know what group doesn't have much of a sense of humor?\" she asked.\n\n\"You're right, but I don't like being called a whore,\" I said, running a hand through my hair.\n\nShe nodded. \"Yeah, nobody should have to put up with that shit, but may I recommend in the future if you're going to pick a fight with three guys who conservatively weigh six times as much as you do, have some back-up.\"\n\n\"Fair enough,\" I said. Off to the side, I saw Daddy coming back our way. She caught my glance and looked over where I was staring.\n\n\"Your man?\"\n\nI nodded.\n\n\"Are you going to tell him what happened?\"\n\n\"Noooooo,\" I said. \"Well, maybe tomorrow. If I tell him now it'll be a whole thing.\"\n\n\"Probably a good idea. Nice meeting you,\" she said and then walked off to track down her kids.\n\nDaddy came up and gave me an inquisitive look.\n\n\"She complimented me on my bikini,\" I said, feeling a slight pang for lying to him. I hated doing it, but it was the lesser evil.\n\n\"Well, it is quite the bikini,\" he said, leaning down and kissing me. My pussy got damp in a way that had nothing to do with the hot springs I was sitting in.\n\n\"I'm happy to model it for you in a more private setting,\" I said. It served the dual purpose of getting us out of here if those clowns came back and it got me laid. It was a full-of-win proposal.\n\n\"Well, how can I resist that offer,\" he said, holding out his hand.\n\n***\n\nI told him what happened the next day.\n\nWe were hiking up in the mountains. I'd whined to Daddy that while I liked hiking, there were so many people around. Many of them were rude because we were taking it slow on account of Daddy's bad knee. Plus, I figured at some point, being in the middle of the woods, we might find a place with some privacy.\n\nIt turns out there was a reason why Daddy wanted to spend a week in a place with so many mountains and where one of the main activities was hiking. When he was a kid his parents took him here a couple of times and he had fond memories of the place.\n\nSo when I whined about too many people on the trails, he smiled and drove us to a spot about 30 minutes away and we started hiking, albeit with extra gear in case there were bears.\n\n\"Bears?\" I asked.\n\n\"Don't worry, it's been ages since anyone's been eaten,\" he said.\n\nI assume he was kidding, but stuck close to him. Just in case.\n\nSo while we were strolling up the hill, with no voices around us, and no one pushing by to get their Instagram selfie, we had a chat about my actions. Just as I suspected, he was both proud of me for standing up for myself, furious at those bozos, amused at the shot I took at them, but frustrated I was so careless.\n\n\"I honestly don't know if I should be mad or not. I just want to keep you safe and those are exactly the kind of assholes who don't mind hurting a woman because they were 'disrespectful,'\" he said.\n\n\"I know, but I'm not taking crap from anyone like that. That's not who I am. I didn't in high school and I'm not now. You've never seen me seriously angry at a guy. It's not pleasant,\" I said. \"I only get wobbly when dealing with psychologically manipulative girls. But dealing with immature guys' bullshit? I've been handling that since I was 13. It's one of the reasons I love you. No unnecessary bullshit.\"\n\n\"There's something to put on my resume. Just...weigh the situation and handle it appropriately, all right?\"\n\n\"Fair,\" I said.\n\nOnce that was over with, I just enjoyed the walk. Daddy wasn't messing around, wearing a good pair of hiking boots, a brace for his knee, and a bunch of Columbia clothing. Over my protests, he was also carrying the backpack with most of the food for our picnic. I was taking advantage of the still-warm weather even if we were up in the mountains by wearing my usual wide-brimmed hat, a pair of snug shorts, a red sports bra and one of Daddy's snazzy hiking shirts. I'd started off wearing it, but it was now wrapped around my waist. I caught him \"checking up on me\" several times, which made me grin. Almost two years and I could still get him leering at me.\n\nI was trying to absorb all the affection I could because we'd be apart again soon enough. In two days we were heading to Calgary. From there it was a plane to Toronto, packing up my stuff from Meg's place before she came back, and then a couple of days in Kingston. After that, back to a tiny, lonely flat in Montreal.\n\nIt was depressing to think about.\n\nFortunately, before I could get too maudlin, Daddy pulled up and simply stated, \"we're here.\"\n\nI'd been daydreaming and hadn't noticed my surroundings. We exited the trees and were on a rise. A hundred metres or so below us was a small mountain lake, and surrounding it were tall trees and mountains.\n\n\"Oh wow,\" I said. And I meant it. I'd seen lots of beautiful scenery the last few days, but this had the bonus of not having anyone around. \"How did you know about this place?\"\n\n\"Dad shares your aversion to large crowds of tourists. On one trip he got to know some of the locals and they told him about this spot. I've never seen another person up here,\" he said.\n\n\"Excellent,\" I said, and walked up to him, put my arms around his neck, and leaned up for a kiss. His hands quickly found my ass and gave it a squeeze and little boost so I was up on my toes. Eventually, we came up for air.\n\n\"Want to have a snack first? Give you some extra calories?\"\n\n\"Oh please, you're going to be the one who needs the extra calories,\" I said, being a brat. He placed the backpack on the ground by a flat rock. I dove into the bag to get food and a blanket, which left my ass up in the air. He didn't disappoint, giving me a swat for being a brat.\n\n\"Mmmmm, foreplay,\" I said.\n\nHe shook his head. But yeah, it was nice to tease things out. He sat on the rock, resting his back on a tree and stretching out his legs. I sat next to him, cross-legged and taking in the view, which was amazing. We started digging into our picnic of sandwiches and fruit, while chatting. He mentioned school, which got me depressed, so he changed topics.\n\n\"So have you heard from Meg lately? Has she given you any idea when she's coming back?\" he asked.\n\nMeg vanished off to Europe at the end of June and I was getting semi-regular texts from her. However, pictures of her eating fantastic meals, visiting cool places, buying amazing clothing, and sitting on a beach were driving me mad.\n\nThe last one was the worst. She was lying topless on a beach and wearing a thong which managed the trick of showing almost everything but hiding just enough. It was scandalous but not pornographic.\n\n\"Who took that? Are you finally getting laid? What is s/he like?\" I immediately texted back.\n\nI got a cryptic smiley face and nothing else. I showed it to Daddy, who whistled.\n\n\"Damn,\" he said. \"Looks like she's having fun.\"\n\n\"You're missing the point, though,\" I said.\n\n\"Which is?\"\n\n\"It's clear from the angle of the photo that it wasn't a selfie. Someone took it for her,\" I said.\n\nHe looked at the photo again, shook his head and smiled.\n\n\"I assume whoever she's fucking took it.\"\n\n\"Yes, I know. But who is he?\"\n\n\"Or she,\" he interrupted.\n\n\"Or she...Meg is giving me no details. At all. It's driving me mad.\"\n\n\"My poor little girl,\" he said, running a hand down my cheek. \"I'm sure you'll get the details whenever she comes home.\"\n\n\"I wanna know now,\" I said, pouting.\n\nThat was my cue that the eating portion of our break was now over. Daddy's fingers slipped into my thin cloth choker around my neck and gently tugged me closer.\n\n\"Behave, Kitten,\" he growled.\n\n\"Don't wanna,\" I whispered back.\n\nDaddy quickly pulled me over his lap, reaching underneath me to make quick work of the buttons holding my shorts in place. I may have wiggled a bit to help him when he pulled them down.\n\nI do love fucking outside. It's not like I had many private indoor spaces growing up when I wanted to fool around. And with Daddy's place being pretty isolated we'd gotten used to going outside whenever it was warm enough. But with me working in Toronto this summer, plus this trip, there hadn't been many times we could get outdoors. It's one of the reasons I was getting antsy for some privacy on our hikes.\n\nBut now, I was lying across Daddy's lap with my ass up in the air. While he was fussing with the shorts, I adjusted my top quickly so my tits were now free and rubbing against the rock. I could already feel Daddy's cock was hard against my stomach. I shifted around a bit, partly to make my ass a more inviting target but also to rub up against his cock.\n\n\"You're being a disobedient little brat,\" he said.\n\n\"Uh-uh,\" I said, in a disobediently bratty way.\n\nCrack! His hand landed on my right cheek with force. No warm-up today. As I was yelping out loud, I noticed the sound of his hand hitting my ass echoed. I giggled.\n\n\"Oh, I'm sorry, was that funny?\" he asked. And before I could try and explain what was going on a half dozen swift, hard slaps landed on my ass. There may have still been echoing going on, but my head was spinning.\n\nWhen I realized I liked spanking, I tried to figure out why. There were theories you'll like spanking as an adult if it was a form of punishment for you growing up. But I don't recall ever being spanked as a kid. I prefer the theory that there are a lot of nerve endings in the ass and slapping them sets off an excellent chain reaction.\n\nWhen the person setting off that chain reaction is a sexy older man you have a Daddy fetish for, well, the nerve endings in my ass were doing quite the happy dance.\n\nDidn't mean it didn't hurt too, though.\n\n\"Ow, ow, ow! I'm sorry, Daddy! I'll be a good girl from now on. I promise!\" I said.\n\n\"I doubt it. You don't know how to be a good girl, brat,\" he said, and gave my ass another couple of hard swats.\n\nPutting those tight shorts back on and walking down the hill will be interesting if this continued much longer. As much as I was enjoying the spanking, I needed to make things enticing to get him to stop.\n\n\"I can show you what a good girl I can be if you give me a chance to prove myself, Daddy,\" I said in a coy voice.\n\nHe gave me another couple of slaps, but I was squirming against his cock, which was practically bursting out of his shorts. He stopped and gently pushed me off his lap. I got on my knees in between his legs and undid his shorts. With a quick tug and some maneuvering, I pulled them down and there was the very thing I wanted; his cock.\n\n\"You just sit there and let your Kitten show you what a good girl she can be,\" I said, reaching up to stroke his cock a few times. But instead of the appreciative groan I was waiting for, I got a stern look.\n\n\"Your hand is not the way to show me how good you are, Kitten,\" he said. I nodded, knowing what he wanted and that he was not in the mood for some teasing. I leaned forward and took his cock in my mouth, burying it into my throat with one move.\n\n\"Fuck,\" he hissed, and I resisted from grinning around his cock. Instead I focused on making it feel as good as possible. Anything to prevent him from getting tempting to wail on my ass again.",
        "I loved this. We were outside, it was warm, but a slight breeze was swirling around, taking some of the heat out of my ass, but somehow making my pussy hotter and wetter. We were sheltered and isolated, but yeah, somebody with a good camera or binoculars could be watching me suck my Daddy's cock right now. They could be taking photos of my bright, red ass. I couldn't help myself and reached under my body, between my legs, and began rubbing my clit. I moaned around his cock.\n\nI heard Daddy chuckle, and I looked up at him. He was grinning, having caught what I was doing. But the important thing was that he didn't stop me from doing it, or punish me for playing with myself. Instead, he ran his fingers through my hair.\n\n\"Did my little spanking get my Kitten all hot and bothered?\" he asked.\n\nThere was nothing little about the wailing he gave me. They probably heard it back in Banff. Instead, I briefly popped my mouth off his cock, nodded, and said, \"Yes, Daddy.\"\n\n\"Mmmmm, maybe I should spank you some more before we fuck,\" he said, keeping his hand on the back of my head so I couldn't pull back and say, \"Fuck No!\" Instead, as much as I could, I shook my head, made a disapproving sound, and then resumed sucking his cock with more vigor.\n\nHe laughed, and let me suck on him while my fingers flicked and rubbed my clit. But after a few more minutes I could feel my orgasm building, and cumming like this without his permission would get me an epic spanking. Instead, I pulled my mouth back, and flicked my tongue against the head of his cock.\n\n\"Please Daddy. Can I ride your cock?\"\n\nHe stroked his beard and pretended to consider it. I managed not to roll my eyes because that would have had consequences. Besides, if I was hot and bothered and needed to cum, I knew my blowjob was getting him pretty worked up too.\n\n\"Ok Kitten, hop up,\" he said. I gave the tip of his cock one last kiss, and then stood up. I also pulled the top off over my head and kicked my shorts off from around my ankles. Except for my shoes, I was naked. I stood up in front of Daddy and gave him a little pose.\n\n\"God, you are the sexiest fucking thing,\" he said, his voice filled with wonder. It made me blush.\n\n\"How do you want me, Daddy?\" I asked, reaching down and rubbing my pussy some more. We were both done with foreplay. Plus, it was fun being outside and exposed, but the longer you do it, the greater the odds your luck will run out.\n\n\"Sit on my cock facing me, Kitten. I want to watch you cum,\" he said, lightly stroking his cock. He didn't have to ask me twice. Yeah, facing away from him meant I could take in the view. It was a nice view and all, but it's not like my brain was going to be in any state to appreciate it about 30 seconds from now.\n\nI knelt over his cock, gently took it away from his hand, and then lowered my hips. And then my favourite thing in the world happened; I felt his wonderful, amazing, thick cock push into my pussy. I threw my head back and groaned and just sat there with it buried in me, appreciating it.\n\nI love fucking, sucking and everything in between. But that first moment when Daddy enters me? Magic.\n\nHe must have felt the same way, because after my moment of appreciation, I felt his hands reach around my back and gently tip me forward. I didn't open my eyes, letting instinct take me straight to his lips. I hummed into the kiss, and we eventually parted. I opened my eyes and looked at him. If I was never going to get tired of that moment he first entered me, I was also never getting tired of how he looked at me during moments like this.\n\nI touched his face and smiled. No more bad little girl and stern Daddy. Just a couple very much in love.\n\nMy legs were a little wobbly from the hike up, so I decided to use them to sprint to the finish. I was happy to grind on his lap, just as he was happy to slide a finger down and rub my clit, before leaning down and beginning to lick and suck on my nipples.\n\n\"Ohhhhh, every time,\" I groaned out, feeling my orgasm rushing forward. Daddy continued on my nipples, but I could feel him grinning.\n\nI put my head on his shoulder and my hips began moving more and more quickly, trying to grind the orgasm out quicker. Daddy took his mouth of my tits and replaced them with one of his hands, which proceeded to pinch and pull on my nipples. The sudden hint of pain was all I needed. That, and the magic words.\n\n\"Cum for me, little girl,\" Daddy whispered in my ear.\n\n\"Oh fuck, Daddy!\" I cried out. I don't know why I bothered to try and keep quiet when I cum. It never works. My brain always short-circuits.\n\nI caught my breath and looked at Daddy. Sometimes he's amused by my reaction. Sometimes it makes him hungry and then he pounds the fuck out of me. This time he looked serene.\n\n\"What?\" I finally managed to get out.\n\n\"I love watching you cum,\" he said.\n\n\"Awwww, Daddy,\" I said, and leaned in for a kiss. I liked making him happy. Then I felt his cock pulse in my pussy and I remembered I had other ways to make him happy. I pulled back from the kiss, looked at him, smiled and then shifted my legs so that I could move up and down on his cock more aggressively.\n\n\"Uh oh, I'm in trouble now,\" he said, smirking.\n\n\"Bet your ass, Daddy,\" I said and then began bouncing on his cock like I was a crazy bunny rabbit and not his Kitten. Given the way his cock had been pulsing in me earlier and his flushed face, I knew he wouldn't last long. I gave him a little show to make sure that was the case, playing with my nipples as I bounced on him. It also had the added benefit of making sure I would cum with him.\n\n\"Mmmm, do you like the view, Daddy?\"\n\nHe managed a smile and welcomed the temporary distraction. \"Those are some pretty spectacular hills in front of me,\" he said. I groaned, and not from his cock.\n\n\"So bad,\" I said.\n\n\"Lovely peaks, as it were.\"\n\nNormally, I loved whispering dirty things to get him to cum, but I might have to smother him if he kept talking. Instead, I leaned in and kissed him to get him to stop talking. To retaliate, he reached back and gave my ass a few slaps, which flared things up but also set me off again.\n\n\"Oh fuck!\" I managed to cry out, but not at quite the same volume. With my pussy clamping down on his cock for the second time in a few minutes, he stood no chance.\n\n\"Oh God, Kitten!\" he groaned, and then I felt him cum in me. I purred. I love it when he comes in me. And soon enough, every time he did there was a chance it would be the time he finally got me pregnant.\n\nBut that would be soon enough. For now, I was happy to be outside, on his lap, and filled with his cum.\n\n\"Mmmmm, spectacular as always, Daddy,\" I managed to get out.\n\n\"Well, I know how antsy you get without some time outside.\"\n\n\"This is true,\" I said, lifting off of him with a groan. My legs quickly gave out and I flopped on the tablecloth. Unfortunately, I landed on my sore ass, which caused me to give a small cry of discomfort. Oh, and all of his cum was leaking out of me.\n\n\"Oh God, I'm a mess,\" I groaned.\n\nDaddy lifted himself and stretched. \"Well, we'll head back to the hotel, get a shower, and then soak in the jacuzzi. How does that sound?\"\n\n\"Sounds great. Except between all this cum and my sore ass, it's going to be an uncomfortable walk back,\" I said, making a futile effort to clean up some of the mess. I looked at the shorts tossed over to the side. I was not looking forward to trying to put them back on.\n\n\"So don't put anything on,\" he said. I looked at him like he was a lunatic. \"Look, everyone around here is wearing bells to give bears a warning that we're coming so they can move off. If anyone is coming up the trail, you'll have time to cover up. Just wear my shirt that you stole earlier over your top if you're worried about a burn.\n\nIt was appealing. Walking almost naked in the woods was getting my hormones going again. Walking down the hill with his cum still leaking out of me. Yeah, it was slutty as hell and maybe a bit gross, but it was also hot as fuck.\n\nI bounced up, picked up my shorts and top, and stuffed them in the backpack. I draped Daddy's shirt over my body, but didn't button it up. It came down mid-thigh, so if I buttoned it in a hurry, I should be fine. It was also blue, and not transparent. It could work.\n\n\"How do I look?\" I asked.\n\nHe looked at me and I saw the familiar hunger in his eyes.\n\n\"You're making me regret not packing my Viagra for this hike,\" he growled.\n\nI went over and kissed him.\n\n\"Pop one when we get back to the room. I think we'll need a Round 2 today,\" I said, and skipped ahead down the trail, giving him a quick flash of my ass.\n\n***\n\nTwo days later we were in Calgary airport and I was my usual tired and cranky self. I hated airports when we were returning to reality. Daddy was doing an admirable job of caffeinating me and humoring my rotten mood. That's when my phone pinged.\n\nI glanced at it and saw that it was a text from Kris. Ever since the blow-up in Saskatchewan we'd been texting a bit. I kinda felt bad...not about telling off my mom, because fuck her. When Kris went to the University of Saskatchewan and I went to Montreal, we lost touch. That was deliberate on my part, as I wanted a clean start. Kris and I got into our fair share of trouble growing up in Kipling; I didn't want it following me to Montreal.\n\nBut I'd changed and it seemed like she had, so where was the harm in keeping lightly in touch?\n\nI looked at her text and groaned. Daddy looked at me.\n\n\"When I was having my melodramatic moment in Kipling, I told Kris if she needed help getting out there to let me know,\" I said.\n\n\"She's asking for help?\" he asked.\n\n\"Oh better, she's asking if she can crash on my couch for a few weeks. She wants to move to Montreal,\" I said, sighing.\n\n\"No good deed....\" he started.\n\n\"I know. I know.\"\n\n\"So, what are you going to do?\"\n\n\"What else can I do?\" I said, and quickly responded with, \"Sure. Getting on a plane. Will talk later.\"\n\nThen I tossed my phone in my bag. Here's hoping Kris had changed and I hadn't just bought myself a world of trouble in my last year in Montreal."
    ],
    "authorname": "thanagar",
    "tags": [
        "older man",
        "younger woman",
        "ddlg",
        "daddy",
        "spanking",
        "mature",
        "oral sex",
        "romance",
        "exhibition"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/little-packages-ch-10"
}