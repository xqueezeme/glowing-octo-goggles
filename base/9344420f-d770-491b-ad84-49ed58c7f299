{
    "title": "There and Back Again Ch. 140",
    "pages": [
        "Chapter One Hundred Forty: Walking Nightmare \n\nIt was two more days before my brother finally returned. While we waited, Sigrun resumed caring for Faren, and Alim shut himself in the library. Alistair went out to meet with Conrad, who'd seen no sign of darkspawn on his patrols; he was worried, however, that Rolan and his patrol hadn't made it to their last meeting. The patrol routes were planned such that each group met with one of the others once per day, and the former templar hadn't been there in the morning when Oghren, Conrad, and Wulf had arrived. Alistair gave Conrad permission to take his group back along the route Rolan should have followed, hoping to find them, perhaps having discovered darkspawn and unable to send a messenger for some reason. \n\nI wasn't so sanguine, but had no better ideas of where to look. An extra squad of soldiers accompanied the senior Warden, along with a cage carrying one of Nathaniel's trained birds to bring a message back once Rolan was found. \n\nWhen Aedan finally did return, I almost forgot completely about Rolan, because my brother brought with him the nightmare I'd spent over a year trying to prevent. \n\nAedan and the group who accompanied him were filthy; I avoided hugs in favour of an enthusiastic wave, squealing and running away when a grinning, grimy Aedan threatened to grab me. \n\nThe problem first became apparent when Vander, previously so vocal and aggressive, walked past the servants and soldiers milling about in the courtyard as though they weren't even there. He had a blank, unfocused look on his face, and I raised an eyebrow as he ignored even the elven servants being harassed by soldiers clamouring to have their armour cleaned, or food brought to the barracks, or baths drawn. One poor servant, a slight, mousy fellow with yellow teeth and a dramatic cowlick, looked distinctly intimidated, and several of us went to his defense, but Vander wandered past in a fugue, oblivious. \n\nAedan winced, and Zevran gave Vander a distinctly nauseated look before practically disappearing before my eyes, clearly in an effort to avoid whatever was happening with the elf entirely. Prince, covered liberally in mud, his tail tucked between his legs, slunk off after another servant who was threatening the mabari with a bath; it was an unusual sight, as it usually took threats, treats, and at least Aedan or me to get him to submit to being scrubbed clean. I raised my eyebrows at my brother, and he sighed. Wading forward through the chaos, he grabbed Vander by the wrist, gestured to me and Alistair to follow, and led us inside to our usual private meeting room. \n\nHe didn't stop until the four of us were locked in, he and Vander still dripping mud and Maker-knew what else all over the thick rug. And the entire time, Vander hadn't said a word - not about being grabbed, practically dragged through the Keep, or about the black slime that coated their armour and boots almost entirely. \n\nWith a dramatic flop, Aedan released Vander and threw himself into a nearby chair. Judging by the goop that scraped off his armour onto the fabric arm, the poor piece of furniture was going to have to be burned after he was done with it - as would the rug. Vander just stood there awkwardly, posture stiff and unnatural. Alistair and I traded concerned looks, before turning to Aedan hoping for an explanation. \n\nMy brother rubbed irritably at his temples, and then pinched the bridge of his nose between his fingertips. \"You're going to kill me.\" \n\nI wasn't sure who that was directed at, but Vander shifted uncomfortably until Aedan raised a hand and finally looked straight at me. His eyes were bloodshot, with dark circles underneath. He looks like hell. \n\n\"Aedan, what happened?\" \n\n\"I'll...get to that. I think I should start at the beginning.\" He held a hand up as Vander's head snapped up and his mouth opened; to my shock, the elf looked away again without saying anything. \n\n\"When we were in Amaranthine, we got word from some of the farmers who'd fled to the city that darkspawn had been spotted. The reports sounded like the darkspawn were too organised, so we assumed there must have been one of the sentient ones leading them, but no one knew exactly where they were headed. We went east, picked up the taint, and followed it across to the peninsula. We fought a large group of darkspawn, but no emissary or anything; then Vander found a trail. It led to the Blackmarsh.\" \n\nBlack Marsh? The name sounded familiar, but I couldn't place it. I tried to think back to my patrol planning with Nate, but I was sure we'd never discussed it. Was it from the game? \n\nAnd then it came to me. Blackmarsh. An abandoned town full of ghosts that inhabited the Fade, forever fighting against the Baroness who abused, and then trapped them. Ghosts who drew the attention of a spirit of Justice. \n\nA place the Wardens in my alternate version of Thedas were never supposed to go. \n\nI looked at Aedan desperately, dread settling in the pit of my stomach like so much spoiled meat. \n\n\"We found the darkspawn - he called himself the First. And he had this orb, he did something...\" \n\nNo! My mind screamed while my body was paralysed with horror and disbelief. My poor brother had been trapped in the Fade, and then... \n\nThat meant... \n\nI swivelled to face Vander, studying his face, his hair, delicately sniffing the air to see if I could detect the scent of decomposition. I couldn't smell anything, but something about the way the elf stood, back ramrod straight, expression blank, almost like he wasn't seeing... \n\nAedan had kept talking, unaware of my internal dialogue and my budding awareness. I interrupted him as he started talking about the Baroness, addressing the body in the room that I was more and more sure wasn't the home of an angry Grey Warden any longer. \n\n\"Justice?\" \n\nVander's body turned to look at me, clearly startled, if you looked only at the body language and ignored the unnaturally still face. \"Yes?\" His voice was deep, deeper than any elf had the right to, without the eerie double-timbre of an abomination - like Connor, or Uldred - but clearly no longer belonging to a person. \"And no,\" it continued, ignoring Aedan as he jumped to his feet and Alistair as he took one look at my face and gripped the pommel of his sword. \n\nAedan's eyes narrowed as he looked at me. \"You knew? You did. Of course you did.\" He rubbed at his face irritably, making lines in the muck caked on his skin. \"Why didn't you warn us?\" \n\nI couldn't take my eyes off the body in front of me containing a spirit I'd hoped never to see. I ignored Aedan's question for the moment. \"No?\" I inquired. \"You aren't Justice?\" \n\n\"Not...entirely,\" he replied tonelessly. \"I am Justice, but I am also Vander.\" \n\nI took a step back, shocked. \"What? How...?\" \n\nAedan responded, tone irate. \"Vander was injured. The First stabbed him before we went into the Fade. With no healer, and after being in the Fade for so long...\" \n\n\"He was dying,\" Justice cut in. \"He fought to defend the villagers trapped in the Fade, fought for justice. He would not have survived the blood loss. When I found myself in the real world, not the Fade, I...helped. Together we could survive wounds that otherwise would have been mortal. There would have been no justice in letting him die. But now we are one, in a way I did not expect.\" \n\nMouth agape, I stepped back, stumbling away from the abomination - wait, it isn't called an abomination unless the possessed is a mage; what's this called? - in front of me until I bumped into a chaise, sinking down onto it mindlessly. This is worse than I could have imagined. Not only is Justice in the real world, but he's already possessed someone. I wrapped my arms around myself, trying to stop myself from shaking. \n\nAlistair still had his eyes locked on the creature who'd accompanied Aedan back from the swamp; Aedan however, watched me, and his irritated expression morphed into one of concern as he got up and knelt in front of me. \n\n\"Sierra? It's okay. It's a spirit, not a demon. Vander lived, thanks to Justice! It's going to be okay, I promise. Just breathe, sis.\" \n\nI must have looked pale; I didn't resist when Aedan encouraged me to lean forward, putting my head between my knees as I hyperventilated. I let out a hysterical laugh. \n\n\"It's not okay. It's...\" I trailed off, sitting upright again and meeting my brother's eyes. \"Do you know the difference between a demon and a spirit?\" \n\nHe looked puzzled, and opened his mouth to reply. I cut him off before he could. \n\n\"There isn't one, Aedan...they're the same, except one has been corrupted by the negative aspects of emotions. Pride, fear, desire, greed...they all have spirit counterparts. Spirits that can be corrupted.\" \n\n\"I am no demon!\" Justice roared suddenly. \"I am Justice!\" Blue light flickered in the room, surreal, like I was back on earth standing near a failing neon light. I looked at Vander to see cracks in his skin, the blue bleeding through and glowing like a lantern. His voice took on that frightening, supernatural double-timbre I associated with abominations, and I cringed. \n\nAlistair, still watching the possessed elf while we talked, had his sword drawn and held to Justice's neck before he could take a single step towards me. \"You're doing a poor job of reassuring us of that, then, spirit,\" he quipped, his arm not wavering as the point drew a tiny trickle of blood from the creature's flesh. \n\nAedan sprang up from the floor, turning to the spirit, surprised at the rage audible in the creature's unnatural voice. \"Justice?\" \n\nThe blue light faded as quickly as it had come, Vander's normal tanned skin colour returning with no sign of the cracks we'd seen moments before. Face flushed, Justice took a step back, looking away in what would have looked like shame had he been a person. \"I apologise, Commander. These emotions...they are stronger than I'd imagined.\" \n\nAedan nodded, expression unreadable. \"Justice, I would like to send you to a room to get cleaned up. I will have someone escort you. I will come talk to you in a little while, alright?\" \n\nThe spirit nodded, and with a quick squeeze of my shoulder, Aedan stepped out of the room. Alistair lowered his sword but didn't sheath it, moving to stand between me and the spirit. \n\nJustice leaned around Alistair to see me, where I sat staring wide-eyed at him. \"I apologise. I hope you will give us another chance to talk with you. I would like to explain.\" \n\nAlistair grunted, but I just bobbled my head - neither a nod nor a shake; an undecided motion that didn't commit me to anything. Seeming to accept that, Justice turned to face the door Aedan had slipped out of, and when my brother returned a moment later, a servant in tow, he followed the servant wordlessly out of the room. \n\n\"Sierra? Can I clean up, and then meet you in your room in a few minutes?\" He scowled down at me, expression softening slightly when he saw my pale face, lip trembling. \"I think we should talk somewhere private.\" \n\nI nodded, and got up to follow him upstairs; Alistair retrieved my little shower head for Aedan to help speed things along, and my brother disappeared into his room. I followed Alistair into ours, sighing heavily as he wrapped his arms around me. We shifted to the small couch by the hearth, and I crawled into Alistair's lap, resting my head against his chest and listening quietly to the sound of his heart beating as I concentrated on slowing my breath. He didn't ask me anything, to my relief; he should have been angry with me for keeping secrets, but it seemed he knew something more was going on. He just sat, rubbing my back, until there was a knock on the door and both Aedan and Zevran slipped in when Alistair called out. \n\nThe two men settled - Aedan into the chair, Zevran on the floor at his feet - and looked at me expectantly. I sighed. \n\n\"In the game, there were Orlesian Wardens here after the Blight to help 'rebuild' the order.\" Aedan nodded; I'd already told them that. \"One of them was named Kristoff. Before the attack on the Vigil, Kristoff had received word that a talking darkspawn had been seen heading into Blackmarsh. He went alone to look, and was killed by the First. When you came to Amaranthine, Varel knew that Kristoff was the only Warden not here during the attack on the Vigil. You followed his trail to Blackmarsh, found his body, and became trapped in the Fade. When you escaped, Justice ended up possessing Kristoff's corpse.\" I shook my head. \n\n\"Without Kristoff, with the Mother having so much less time...I thought we could avoid Justice. You were never supposed to go there! I couldn't even remember the name of the damned swamp where he came from.\" I tucked my head under Alistair's chin, shuddering slightly. \"Justice helped fight the Mother, even tried to make it up to Kristoff's wife for essentially stealing her husband's body.\" \n\n\"Sounds admirable enough. But...?\" Aedan prompted. \n\nI sighed. \"Kristoff's body was decomposing. It was gross. Eventually Justice made a deal with one of the Wardens. He abandoned Kristoff's body and they...merged.\" \n\nI stood, pacing over to the hearth anxiously. \"Justice seems like such a good ideal, doesn't it? Sounds so...righteous.\" I looked over my shoulder at my brother, only to see Zevran nodding almost ruefully. I wondered if he'd somehow guessed what happened. \"Justice is fine and dandy, but do you know what justice without mercy, without compassion looks like?\" I looked back at the crackling fire. \"Vengeance. It looks like murdering innocents because they didn't do 'enough' to help those who were being abused. It looks like starting a war that killed thousands to avenge the wrongs done by others in the past.\" All I could see in my head was the Kirkwall Chantry exploding, the bodies of innocents scattered in the streets. \n\nI turned back to Aedan. \"In the game, the spirit of Justice became a demon of Vengeance when exposed to someone's anger. He became corrupted. And that person...was never nearly as angry as Vander. He was a willing host. How much worse will it be with Vander's bitterness, with Vander never volunteering to be a host in the first place?\" \n\nAedan and Zevran exchanged horrified looks, and Alistair held his arms out for me to crawl back into. I huddled into a miserable ball, pressing my face into Alistair's neck in despair. I couldn't face the angry expressions I expected on all those in the room. \n\n\"I'm sorry. I honestly thought I'd prevented this from happening. I should have told you.\" A couple of tears soaked into Alistair's shirt, and I wiped at them irritably. \"I keep thinking I can control things, fix things...I should have known better.\" \n\nAedan sighed, then reached over and took my hand. \"I won't say that I don't wish you had told us. But honestly, it would have made little difference. The First still needed to be dealt with, so someone would have ended up in the Fade, and I don't think there would have been a way of preventing Justice from being expelled. We're just going to have to try to limit the damage. And keep him away from Anders, obviously.\" \n\nI looked up at that, startled, wondering if I'd somehow messed up and mentioned the mage during my explanation. \n\nAedan snorted. \"I can read between the lines, Sierra. Anders needs to be in Kirkwall, you've told me. The war between mages and templars starts in Kirkwall. Justice becomes Vengeance and starts a war...it's not hard to put the puzzle pieces together. Anders became possessed by Justice and they both went to Kirkwall, right?\" \n\nI nodded. \"Rolan and some of his templar friends attacked Anders, who merged with Justice and slaughtered them. But you can't tell Anders. Please? He isn't the same person he was in the game. He's different - more settled, less angry. I don't want him to think it's inevitable, to think he will become a monster.\" \n\n\"Alright. Here's what we'll do. I'm already in discussions with Viscount Dumar to allow a branch of the Ferelden Grey Wardens to open in Kirkwall. He sees it as a way of increasing his own power. I managed to point out that it was a bit insulting that Kirkwall never had a permanent Grey Warden presence despite its 'importance'.\" He grinned at me, and I smiled wanly back, just relieved he wasn't as angry as I deserved. \n\n\"When they get back from the Circle - hopefully with a cure for Faren, and another healer - I'll transfer Anders and Solona to Kirkwall as soon as possible to 'establish a Warden presence'. Nate and Cailan are going to send some people as well to see if they can't facilitate the return of some of the Fereldan refugees. Anders can open a clinic, if he wants. It will serve multiple purposes - endear the Wardens to the locals, help out the Fereldan refugees, recruit some Wardens, and maybe return some of the Fereldans home to help with the recovery from the Blight.\" \n\n\"And it keeps Anders away from the spirit of Justice, yes? Cleverness is very sexy, amore mio.\" Zevran grinned lasciviously at my brother, and Aedan flushed slightly at the praise. \n\n\"You already contacted the Viscount?\" I was flabbergasted. When has he even had time? \n\n\"Well, I wasn't about to have Anders leave the Grey Wardens, but you told me he needed to be in Kirkwall. This way, he stays a Warden but can still do the things he needs to. And Solona can go with him to keep him grounded. She's got a good head on her shoulders. She won't let him do anything too stupid.\" \n\n\"So what do we do about Justice?\" Alistair finally asked the question we'd all been avoiding. \n\n\"We need to talk more, first. He says Vander is still in there. I want to know what that means, exactly, and if there's any way to get him back. I want to find out if they can be separated safely. I'm thinking we'll need a trip to see Avernus, perhaps. And then we can decide what to do from there.\" \n\n\"And if they can't be separated?\" I cringed, almost not wanting to know. \"If Vander's anger corrupts Justice?\" \n\nAedan grimaced, refusing to make eye contact. \"I won't allow someone who's possessed, especially someone who is linked to the Wardens, to harm anyone.\" He left unsaid what that would mean, but that didn't make it any less clear; regardless of the pity he might feel for Vander, Justice would be killed if necessary. \n\n\"Did you ever get a chance to figure out Vander's story, anyway?\" \n\nZevran flushed and looked away; Aedan shook his head ruefully. \"And now I don't know if we will. He says Vander is in there, but from what I've seen, Justice is the one with control.\" He sighed. \"Shall we go meet with Justice?\" \n\nAedan fetched the spirit, and the five of us met in our usual room near the dining hall. I was relieved to see the carpets and chair that had been soiled by Aedan's filthy armour had been removed, though not yet replaced. I'll have to pay Nate back, since the Wardens haven't worked out the details on tithes with Cailan - and there's lots of things they'll need with the gold Aedan managed to squirrel away during the Blight. I sank into a couch with Alistair beside me, Aedan and Zevran in chairs on my other side, and a blank-faced Vander - Justice - standing across from us. \n\nNo one seemed to know where to start; the four of us exchanged uncomfortable glances while Justice stood, unnaturally still and implacable. Finally I sighed. \n\n\"Justice? Should we call you Justice? Or Vander?\" \n\n\"I am Justice,\" he responded in his unnaturally deep voice. \n\n\"Please, sit? It tends to make people uncomfortable when you stand while they are sitting.\" \n\nHe seemed to consider this for a moment before nodding and pulling up a chair. He was clean, so I assumed someone had drawn him a bath, and he wore some unfamiliar breeches and a tunic which was slightly too small for him; I wondered if they'd put him in Vander's room, or somewhere else. ",
        "\"Can you tell us what you mean when you say you are also Vander?\" \n\nHe fixed me with an unblinking gaze. \"Vander's essence is within this mind, just as my own is. I have access to his knowledge and memories.\" \n\nI tried to suppress the horror I felt - or at least keep it from showing on my face. \"But you have control of his body? It is you speaking to us, not Vander?\" He nodded. \"So he is trapped in there? A prisoner? Can he hear us?\" \n\nJustice shook his head, expression almost...frustrated. \"It is not like that. He is not listening, not a separate being. If anything...it would be like he was asleep. I know what he knew, but I am also Justice. We are one and the same.\" \n\nI tugged a lock of my hair roughly. \"Can you...are you able to tell how he feels, or would have felt, about things?\" \n\n\"His emotions are my emotions, it seems. So yes, in some way, I can.\" \n\n\"And how does...how would he feel about sharing his body with you? About you being the one with control?\" \n\nHe seemed to think about it for a moment, eyes going distant and vague, and I wondered if he was trying to ask Vander or just combing through his memories. \"Perhaps there is some difference between us. From what I know about Vander, he would have found this situation infuriating, however I do not feel his irritation.\" \n\nZevran muttered something in Antivan under his breath, and though I couldn't understand him, the sentiment was clear - Justice wasn't irritated, because it did not bother him. He wasn't the one whose body had been stolen. \n\n\"Tell me this, then, my unusual spirit,\" Zevran finally asked in Common. \"How do you feel about humans? As opposed to elves, say.\" \n\nJustice tilted his head curiously, and for some reason the gesture gave me the creeps. If he's a spirit, how does he know people often cock their heads when they're confused or surprised? I yanked my hair again, until Alistair reached up and took my hand, gently untangling the brown strands and tucking them behind my ear before lacing his fingers through mine. \n\n\"I...Vander feared humans. Shems, he would call them. He had many reasons.\" \n\n\"But do you? Fear or hate them?\" \n\n\"No. I have watched the human souls trapped in the Fade for a long time. I am not afraid, though at times since we merged I have found myself...suspicious.\" \n\n\"So you do have separate emotions, but his...bleed through?\" I was fascinated, but also horrified. And we did need to know how much Vander's anger would transfer over. Maybe Anders' transferred over more because Anders was in control and Justice the passenger? \n\n\"I do not know. Perhaps.\" \n\n\"Do you know Vander's reasons for being afraid of humans?\" Aedan asked. Justice blinked, looking away, and then refocused on my brother and nodded. \"Would you tell us?\" \n\n\"Only if...only if you think Vander wouldn't have minded,\" I cut in. I can't seem to stop talking about him like he's dead - though he might as well be, for all the impact he can have on his own life at this point. \"I think it's important we respect his wishes and not divulge information he would have preferred to keep to himself.\" \n\nJustice thought again, longer this time, and finally nodded. \"I believe Vander, had he learned to trust you, would have come to tell you himself. I have no reason not to trust you, Commander; you gave those people justice and have treated me fairly despite the situation we are in.\" He took a breath, prompting me to wonder if Justice, inside Kristoff's corpse, would have needed to breathe, and then to wonder whether remembering to breathe was difficult for a spirit unused to the physical demands of a body. He does forget to blink a lot - I wonder if his eyes get dry? \n\nI was interrupted in my musing when Justice, his voice somewhat muted compared to the almost booming I'd become used to, began to speak. \"I will attempt to start at the beginning...\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance",
        "modern girl in thedas",
        "awakenings",
        "origins",
        "da2",
        "inquisition"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-140"
}