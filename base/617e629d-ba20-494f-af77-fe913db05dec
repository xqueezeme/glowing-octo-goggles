{
    "title": "Down the Rabbit Hole Ch. 05",
    "pages": [
        "-- \n\nGreetings All! I can't tell you all how much I've enjoyed sharing all of this with you, the previous chapter brought up a lot of emotions. This will be the final installment in this story, I'll explain more at the end.\n\nCh 01. Discovering my attraction to bras and panties.\n\nCh 02. Dildo play and lingerie.\n\nCh 03. Going out in public for the first time.\n\nChapter 04. Angie.\n\nChapter 05. Girlfriends.\n\n---\n\nI'd been spending my weekends with Angie for nearly five months before COVID shut things down. In that much time, we became very close, if I'm honest, I think I fell in love with her the first weekend we spent together. You have to understand, before Angie, I'd only had 'okay' sexual experiences. I had the dream pictured in my head, but the reality had always come up lacking. With Angie, she re-defined the dream.\n\nBut there were some issues.\n\nI'd originally met her a couple years previous, although nothing happened between us, I had a lingering crush on her. She's incredibly beautiful, but has the sweetest personality, she could get away with being a bitch, and still have the guys lined up, but she never did, she really is one of a kind. We met again at a Halloween party thrown by a mutual friend, we were both dressed as Angels, and that is where my relationship with Angie started.\n\nSince then, every Saturday afternoon, I'd dress up in something sexy, drive to her place and we'd spend the rest of the weekend having the most intimate, passionate sex imaginable. I'd always drive back home Sunday nights and feel emotionally wasted. I didn't want to drive home, I wanted to stay with her. We had talked about our relationship early on, Angie wanted a 'Girlfriend with a cock' and I was happy to be her Girlfriend. I still loved slipping on my various bras and panties, I really enjoyed applying my makeup and transforming my other-self into Nina, a woman who had truly blossomed in confidence, and sexiness. By this point, I had zero concerns with going out in public as Nina. Angie and I would go shopping, go out to eat, we'd do almost anything, including flirting with guys.\n\nShe'd asked me back at the beginning if I had ever been with a guy, and I admitted I had not been, but it felt like that could happen. I hadn't made any plans to see that through, but almost all of my dildo play early on, before Angie, involved fantasizing about a well-built stud pushing his warm thick cock into my 'pussy'. The thing is, when I wasn't dressed as Nina, all I could think of was pussy, Angie's pussy to be specific.\n\nSo shortly after the two of us girls would be out and about, she'd tease me that this guy was checking out my ass, or that guy was staring at my tits, and so on. Inevitably, we'd arrive back at her place, and while fucking she'd ask me if I wanted any of the guys that had been checking me out to fuck me 'Would you let the big Blonde guy fuck your pussy, Nina? Would you suck his cock?' She'd say these things with a voice dripping in sex, and automatically I'd tell her that I'd love to have them fill my pussy up or suck the cum from their big thick cocks.\n\nIn the heat of those moments, I always felt like if a guy walked in on our lovemaking, I would have not let them leave until I had done all manner of slutty things to them.\n\nBut on the drive home Sunday nights, I just wanted to be back there with Angie. Another issue and this one really served to further confuse my sexual identity, is that I had admitted to Angie that I wished I had real tits, well, at least some of the time. I'd had this fascination with wanting tits since the very first time I put on a bra. I could picture the flesh, the softness, and the weight on my chest. I imagined how sensitive my nipples would be, and Angie would gently squeeze my bra, loaded with silicone breast forms, and pout 'It's not fair, you can suck my titties, but you don't have any for me to suck.' Which made me want tits even more.\n\nFinally, the last problem was that Angie hadn't seen me as my other-self (my male self) since before the Halloween party, and that had been quite a while. I'd arrive at her house dressed as Nina on Saturday afternoon, we'd fuck, then we'd shower separately, I'd get dressed and get my makeup done while Angie would shower and similarly get ready. She was perfectly fine with this, and to be fair, I mostly was as well, but there was a part of me that wanted to drive up to her house, dressed as my other-self, get out of the car, walk up to her door, have her answer, and just wrap her in a big hug, kiss her passionately and make it clear to her that on this particular weekend, we'd be a more conventional couple, and she'd be having me fuck her as a male.\n\nI wondered if I even knew how to do that anymore. Our sex was fantastic, but there wasn't any of the caveman stuff with the grunting, and power-slamming my cock into her, there wasn't any of the conventional raw fucking that she'd be getting if she were with a guy. Our sex included a lot of oral, she gave easily as much as she got, and when we fucked, I could put my mind someplace else so that her silky warm folds wouldn't put me other the edge too soon. Now, don't take this like I wasn't fucking her. That happened all the time, the difference, is that when you fuck someone while dressed as a woman, you fuck differently.\n\nAs with most Lovers, we became intimately aware of how our bodies communicated, each of us could tell when the other neared orgasm, each of us could feel when things were working, and when things weren't. One night while Angie had my Girl cock in her mouth, she was caressing my balls, and I laid back moaning in pleasure with my legs spread. Her fingers slipped below my balls, and I could feel her searching for my 'pussy'. She hadn't done this before, this was extremely exciting for me, I wanted her to have this part of me if she was curious. I spread my legs a bit further apart, and I saw her eyes shift up into mine. I just nodded to her, and her eyes went back to my crotch. I felt her exploring, trying to find where the entry was and it felt like she gave up after a minute or so. I felt like I needed to let her know that I'd be very much into her getting into me. I lifted her head off of me, and said 'My turn.'\n\nShe smiled and rolled onto her back, and spread her legs. I got comfortable and began kissing her inner thighs (this is how it always starts.) and in short order, I had a finger sawing into and out of her delicious pussy, while I lapped at her clit, just as she had described she liked best. I lifted my mouth from her glistening bare mound and said 'Can I fuck you in your ass?' she moaned but didn't answer, so I went back to licking her pussy, then pressing my tongue back to her clit, tracing fast circles on her stiff little bud. She ground her pussy against my fingers and tongue, and I quickened the thrusting into her sopping wet crotch, I lifted my face and asked again 'Baby, can I fuck you in the ass with my Girl cock?'\n\nShe made a whining noise (translated: don't ask me this right now, keep eating me!) and so I got back to work, and brought her to a shaking orgasm. I crawled up from between her legs, and lay next to her, watching her breathe, and her glistening lips parted 'You can if I can.' she said.\n\n'I can?' I had already figured out what she said, but I wanted her to say as much.\n\n'You can fuck my ass, if I can fuck your ass, that's fair.' she opened her eyes and turned to look at me.\n\n'That's fair.' I said, as calmly as I could manage, although, on the inside, I was already imagining all the things she'd soon be doing to my 'pussy'.\n\n'Really?' her eyes were wide-opened, and she was being very serious.\n\n'Mmhmm..' I said, watching her.\n\n'Oh my God.. that's so fucking hot. I've wanted to do that to you forever.' she gasped out.\n\n'Really? Why didn't you say something? I've never had anybody do that to me (that wasn't a lie, sure, I had a dildo that I had used on myself, but nobody else had, ever..) and I think it would be really hot to have you take me like that.' I admitted.\n\nShe just stared at me in silence for what seemed like a minute, and then said 'Tomorrow, we're going shopping.' I grinned evilly, I had a pretty good idea of what we'd be shopping for, but at that moment, my Girl cock was at full attention, so I moved back between her legs, and put my lips to hers, and eased my length inside her.\n\nWe slept that night as we typically did, on our sides spooning. I was on the outside as usual but in typical fashion, I spent more time being upset that I didnt have a nice pair of tits to press into Angie's back, instead of just realizing how lucky I was to have this incredibly sexy woman curled up against me. As I lay there, I wondered if having tits, real tits would even be possible for me? I haven't talked a lot about my 'home' life in this story because it's never been great, hell, it's never been good. If I showed up one day with tits, I don't know that it would have made things much worse. Work wouldn't have been an issue, especially now since everyone was working from home with the COVID scare, but ultimately, I wondered if I wanted tits, forever tits, not the silicone forms that were tucked into my bra at the moment. If I decided to get some tits, that would be the end of my other-self. I dozed off wondering why that would be a big deal.\n\nI woke later in the morning than I had planned to, but smiled and sighed as Angies soft hand moved along the length of my quickly growing Girl cock.\n\n'Good morning Beautiful.' she said and kissed my cheek. I smiled a bit and reminded her that she was the Beautiful one in the room.\n\nI stared at the ceiling for a moment and calmly said 'I want tits, I want the surgery.' I didn't turn to look back at her, I was doing this more for me, I didn't want her to be freaked out, or to be too into the idea. This was something that I had to do for myself.\n\nShe reached for my chin and turned me to face her. \"Nina, whatever you decide to do, please decide if this is something that's right for YOU. I'd feel terrible if you did this because I've said things to you. I would never forgive myself.\" her eyes had gone back to being far too large, and saucer-like, it looked like she was about to start crying.\n\nInstead, tears began to fall down my cheeks 'You're all I have, and you're so much more than I ever hoped for.\" I shook my head and tried to stop sobbing \"I live my life for two days every week, the other five, I spend counting the minutes to be with you again.\"\n\nShe launched herself onto me, pinning my shoulders to the mattress, I turned and looked away, feeling embarrassed and ashamed for crying.\n\n'Look at me.' she said softly, but my shame kept my head turned 'NINA!' she said louder 'Baby, LOOK at me!' I looked up at her and saw her own tears streaking her cheeks 'Baby, I love you, with, or without tits..' she shook her head 'If Nina had to leave, if Nina couldnt come around anymore, if your 'other-self' were here right now, I'd tell him the same thing 'I love you Baby, I do.'.\n\nMind blown at this point.\n\n'But...' I started, then stopped, I wasn't sure of the words I needed.\n\n'I love YOU!' she said, pointing a finger into my chest. 'Nina is the part of you I know the best, but Baby, I love YOU.' those dark brown eyes were burning into my soul.\n\n'Don't hurt me, Nina, please, it'd kill me.' she blinked and I could tell she was trying to hold back any more tears.\n\n'I love you, Angie. Nina loves you, and that guy-part of Nina you never see loves you. We both love you, and you're all we ever think of.' my heart laid bare before her.\n\nShe asked me to get my bag from my car, and switch into my other-self's clothes, and that we'd go get an early lunch. I nodded, and as I was getting dressed, I felt alien. I felt like the beautiful woman watching me was the same Angie I had always known, but this guy getting ready to go have lunch with her, how much of that guy was left? How much of that guy did I want to have left?\n\nWe stopped by one of the places we liked to get dinner at and ordered salads, we talked, we were close, she kissed me several times during our meal. But it wasnt the same. Now listen, this wasn't bad, this was incredible, but I felt like an imposter in my own body. I wasn't sure I liked my Girlfriend kissing this guy, even though that guy was me.\n\nAs we drove I talked to her a bit about all of this, I told her it was harder than I imagined being a guy in a relationship with her because all of our time together had been as two Girls.\n\nShe nodded and laughed 'it feels different, not bad or anything, just different. Do you want to go back and change into Nina?\n\n'No, I want the world to see me with you because nobody would believe it if I told them you're my Girl.' I puffed up my chest with my boasting.\n\nAngie laughed and we started getting more comfortable, but there was definitely a different dynamic between me and Angie, and Nina and Angie. I wondered how this would change things, I kept hearing her heartbreaking plea 'Don't hurt me, it'd kill me.' in my head, and I just wanted to hold her and reassure her everything would be alright.\n\n'So.. we have tonight, what did you have in mind?' she asked me.\n\nI nodded, then said 'I think we should definitely spend the night having sex, what do you think?' I grinned back at her.\n\n'No Silly, I meant..' then her voice went softer, almost like she were too shy to go on 'Are you, or.. or Nina staying the night?'\n\nI was quiet for a bit, there was too much to think about, then I said 'I don't want Nina to go away, for whatever reasons I created her, she's a big part of me now, and you've made her the happiest part of me..' I smiled at her, realizing that for the first time. Nina was created because I was a sad, lonely guy that accidentally ended up with some bras and panties, Nina grew into the Slut she had become because Nina was the kind of woman my other-self lusted after, but Nina had grown into a very confident, very feminine woman because of Angie. Angie was the final piece of the puzzle that truly brought Nina to life, and I loved her for that. I loved her for many other reasons, but mostly because she completed me.\n\n'I don't know if things may change for me in the future, but I want us as Girlfriends again.' I said 'I feel so happy though, that you've seen this part of me, and that you trust this part of me. Maybe Nina will be okay with sharing you, but not just yet. I hope that's okay with you?' I asked.\n\n'That's fine with me when you're ready, I hope you and I can spend more time together, even if it's just like what we're doing right now, or if you decide sometime you'd just want to bend me over and take me.' she grinned 'I want you to know that I want all of you.'\n\n'I love you, Angie, all of me does' I said.\n\n'I love all of you too Baby' her smile slowly changed into a wicked grin, and then she asked 'So, have you ever been to an Adult Toy store before?'\n\nMy eyes widened, and I shook my head.\n\nWe arrived back at her house before the sunset, and as we walked up the driveway, I asked her quietly 'Do you think any of your neighbors wonder who the guy is that brought you home in the same car that Nina drives to spend the weekends with you in?'\n\nShe stopped then reached her hands to my shoulders, and smiled as we closed to kiss 'I hope so, I really hope so.'\n\nInside I showered and took the enema kit we had bought from its packaging. I let the water run in the sink till it was lukewarm and began filling the rubber bag. I'd never particularly enjoyed enemas, but the alternative would be nasty, so I made sure to do three thorough cleanings. I finished up and slipped into the new black cotton, mini-dress we had bought for me at the mall. The dress fit like a glove and made my tits look fantastic. My tits. Well, I had a lot to think about as far as getting actual tits, but for right now, the silicon forms pressed tight up against my chest looked fantastic in my new black balconette bra. I pressed my testicles back up into my body and pulled the shaft of my Girl cock between my legs. I shimmied up into my black lace panties and then got to work on my makeup.\n\n'How much longer! You're worse than me in there!' Angie cried on the other side of the door.\n\n'I'm putting my face on now, I'll be out soon.' and tried to hurry, but I wanted to look extra hot for her tonight.\n\nWhen I opened the door, I found it was mostly dark in her bedroom, she had all of the lights out, and there were candles burning on her nightstand, and on her bureau. Angie was in bed with a blanket pulled up to just below her bare tits, which looked even more amazing in the flickering candlelight.\n\nShe let out a low whistle, and curled her finger, beckoning me towards her. I giggled and reached down, slipping on my Bordello 5 1/2\" black platform pumps, and held myself in the doorway for a moment, sticking out my hip, licking my shining red lips 'Baby, I'm feeling... extra bad.' I purred at her.\n\nHer finger came up and beckoned me once again 'Don't make me wait Girl, now bring that fine ass to bed.' she said in a deep, husky voice. My groin began to betray me, but I moved towards the bed, slowly, teasingly, swaying my hips as I moved.\n\n'I thought we were going dancing?' I lied 'You know how dancing always gets me so.. wet.' I licked my lips, and slowly moved my hands to my tits, and started caressing them. 'Can't we please go dancing Baby? I cooed at her and started to gyrate slowly at the foot of her bed, as I turned around, I made a quick note to confirm my minor adjustment to her mirror was now aligned so we could see ourselves when on the bed.\n\n'Do you want to go dancing?' Angie asked lowly, her hand under the blanket, slowly moving up and down. 'Or if you want, you can just dance here for me Beautiful..'\n\nI giggled and said 'But if we went dancing, we could drive all the Boys crazy.'\n\n'Do you want to drive the Boys crazy Nina?' she asked.\n\n'mmHmm' I said and kept swaying my hips to some unheard music.\n\nAngie continued to move her covered hand up and down below the blanket 'If you danced like that with any of the Boys, they'd want to take you home and fuck you, they'd want to fuck you hard for being such a naughty little cock-tease, you know that right Nina?'\n\nI had gooseflesh at her words, I stopped swaying 'Uh Oh' I said with a surprised look on my face, and then frowned 'That would be bad tho..' I said.\n\n'Why would that be bad Girl?' she asked, her hand was moving a bit faster now.\n\n'Well, because I forgot to fill my birth control prescription, and I might get pregnant' I blinked and frowned again.\n\n'Baby, I don't think you should get pregnant.' Angie said, she beckoned me closer once again, and as I made my way to the side of her bed, she drew back the blanket, and I could see that she was slowly stroking the strap-on dildo we had bought from the Sex Toy Shop earlier that day. 'How about I just fuck you instead, and you won't get pregnant.' she paused a moment, and then 'I promise..' she said, with lust in her eyes.\n\nI licked my lips, and knelt down on the floor next to the bed 'You're really big.' I whispered. 'You'll have to go slow, please.' and I leaned forward and kissed the head of her cock, it was one of the Doc Johnsons Realistic Cock's with the Ultraskyn material. I left my lipstick mark on the thick head of the dildo, then batted my eyelashes, and opened my mouth, and sucked the head inside.\n\nI've never been good at giving head to my dildo, and this one was close to the same size as the one I had at home. My jaw starts to ache pretty quickly, and I've never figured out how some women can manage to deepthroat big cocks, I just wasn't great at this, but did the best I could, and after a few minutes Angie said 'Come up on the bed Baby, I want to fuck you.'\n\nI nearly came on the spot hearing that.",
        "I climbed into the bed, and she positioned me on all fours and had me put my head on the bed, again, that position that just completely exposes me. She climbed behind me and started caressing my ass 'Your ass is remarkable Nina..' I felt her tongue drag across first one cheek then the other. 'I'm going to fuck you Baby' she said 'but first, I want to eat your pussy.'\n\nNobody had ever done that before to me, it excited me on one hand but honestly scared me a little at the same time. I knew that her dildo would fit into my 'pussy' without much trouble, as I said, the one I had at my house was about this size, and I had taken that one to the balls many many times, but having her mouth, her tongue on my ass?\n\nI felt something warm and wet, and then her lips on my pussy, she kissed it and moaned. I let out a long sigh, this felt, really good. I felt her lick from the bottom to the top, and she drew little circles around my opening. 'Relax Baby, I'll be gentle, I promise.' she said.\n\nI didn't want her to stop, and thankfully, he tongue went back to work, only this time, when she put her lips to my ass, she began pressing her tongue to my opening. She'd press, and then relax her tongue, pulling it back, then press against my opening, and relax. This was all strangely reminiscent of the early day training my pussy with that dildo that I thought would never fit inside me. I played along, and soon I could feel her tongue just inside me, moving around just a bit. I began pushing my ass back onto Angie's mouth, wanting more. But shortly afterward I felt her slap my ass, and announce that it was time to get fucked.\n\nShe squirted a generous amount of lube into the palm of her hand, and rubbed it into her hard cock, I watched in the mirror as I was about to be fucked for the first time. I was shaking with excitement. She reached her lubed hand to my ass, and began rubbing the gel around my opening, and slipped a finger inside me, and then two fingers, which caused me to inhale sharply.\n\n'Relax Baby..' she purred into my ear.\n\nI nodded but said nothing, I was so looking forward to this. I kept my ass up in the air like a good girl, and Angie put the spongy head of her cock against my pussy, it too felt warm, and wet.\n\n'Okay Baby, ready? she asked in a throaty voice.\n\n'Fuck yes' I answered and wiggled my ass a bit. She began pressing forward, and my pussy just opened up and swallowed that cock whole. She was balls deep inside me in seconds.\n\n'Oh Fuck, Baby your pussy just swallowed my whole cock..' she gasped.\n\nI just let out a low, long sigh, then turned to look at her and said 'Fuck me..'\n\nShe started slow, but in time, she was actually fucking me, there were times where I'd feel the pressure against my prostate, I'd experienced this before, but had no idea that an orgasm can actually be achieved through the proper stimulation there, it wouldn't happen then, and it hasn't ever happened, but those glimpses of extreme pleasure have kept me in pursuit of my first 'P-gasm'. Just the same, while Angie was fucking me, I'd steal glimpses in her mirror, and watch us fuck, I could tell she wasn't versed in the whole 'Strapon Sex' thing, and that was fine, I think we've all watched scenes where the woman is pegging a guy, and they are trying to find their rhythm, or otherwise a bit uncomfortable. I think in Angie's case, this was just new for her. She definitely didn't sound uncomfortable. She had my hips in her hands as she drove into me, and I was thrusting back, showing her what a naughty slut I was. She grinned and gave my ass a heavy slap, and stopped with her cock buried balls deep in my pussy.\n\n'You're a bad girl, aren't you?' she asked, already very aware of the answer.\n\n'Yessss.' I purred.\n\n'Baby, I have a surprise, do you trust me?' I could feel her nails gently dragging up and down the length of my thighs.\n\n'Yes' I said, nodding.\n\n'Don't move.' she ordered, and pulled her cock out of my pussy, went to her bureau, and opened a drawer, she reached in, grabbed something then came back to the bed, and stood at its edge, with her hard glistening cock aimed right at my face 'Suck my cock..' she said.\n\nI opened my mouth and she leaned forward, her cock was hot as it moved past my lips and she groaned.\n\n'Look up at me.' she demanded as my eyes met hers, I saw she had a length of black satin in her hands. She stretched the material out and placed it over my eyes, and tied it behind my head.\n\nA blindfold? We'd never played with anything like this before, but I was game. this would be...\n\n'Don't move, and don't say anything.. you said you trust me.' she whispered into my ear.\n\nI just nodded.\n\n'I'll be right back, don't move, seriously, don't move,' and I heard her footsteps wander out through her bedroom door. I could swear I heard the tones of a cellphone making a call.\n\nNow, I was worried, we hadn't discussed anything besides getting the strap on, why did she leave the room, and why was she on her phone?. I did say I trusted her, and I knew she wouldn't do anything that would have made me too wildly uncomfortable, so I stayed there, on my knees, with my ass up in the air, blindfolded, waiting.\n\nI don't know how much time had passed but it couldn't have been more than a couple of minutes, I heard her footsteps coming back into the room and then a\n\n'Ssssh..'\n\n'Sssh? what the fuck?' I was thinking.\n\n'Baby.' I suddenly heard her voice in my ear. 'Are you okay?\n\nI nodded. I didn't say a word, she'd said to stay quiet, but I wasn't feeling very comfortable at the moment.\n\n'I have a nice surprise for you, Nina..' I could feel her breath on my face, and my Girl cock began to stiffen. 'I don't have a load I can shoot in your pussy that we can share Baby.' One of our normal kinks was sharing my cum with her anytime I'd orgasm\n\n'It's not fair that we can't share a load from your.... pussy.' she whispered directly into my ear, and at a moment later, I felt someone get on the bed behind me, then that someone smacked my ass once, hard.\n\nMy mouth opened and just as I was about to call things to a stop, I heard her say 'I know you want this, and I want this for you baby, just relax, and let it happen.'\n\nMy mind was racing, I really wasn't sure about this, there WAS a part of me that had always been curious about what a real cock would feel like inside of me, and now.. well I suppose now I'd find out. I felt the Stranger move up closer behind me, I heard a zipper get pulled down, and then the sound of the lube we'd' bought being squirted.\n\nI was about to well and truly lose my anal virginity, I was moments away from some perfect Stranger sicking his real live cock into my 'pussy' and my body was vibrating with the excitement.\n\nI suddenly felt something hot between my cheeks, and then a hand on my hip. There was a sudden pressure and my pussy opened up, exactly as it had for Angie's cock, I felt the Strangers zipper pressing into my ass cheeks as he held still, his cock fully embedded inside me.\n\n'Aaahh... fuuck..' I moaned, and the cock began pulling back, then thrusting in once again. I was being fucked, Nina had officially lost her virginity. As he moved deep inside me, I wiggled my ass, I wanted whoever this was that was fucking me to know I wasn't a dead fish, he'd better be strapped in because his night was about to get much better.\n\n'Oh my God, that is soo sexy..' I heard Angie say. I know it's fucked up, but I wanted her to watch me getting railed, and be proud, to know her Girlfriend could take care of her Man (although I had no idea who this guy was that was fucking me.) at this point, I just became a complete slut. I had only a single focus and that was to have my Lover empty his balls into my pussy. A moan escaped my lips, a short while ago I was playing with Angie, and pretended that going out dancing may have been dangerous because I forgot to fill a birth control prescription that I didn't have, that didn't exist, and now I was going to be bred, without protection, and I wondered if I'd ever see his face, or would he just use me, and leave. Would this happen again? Would Angie want to watch me get fucked like the CumSlut I'd become? Would this become part of our weekends?\n\nI heard a deep growl, and then his pace quicken, and finally thrust fully forward deeply, holding me impaled as I felt a warmth inside me spreading 'Oh my God, he came inside me, Oh fuck..' my own cock was rock hard, leaking pre-cum.\n\nI felt the stranger pull out of me, surprisingly still hard, I thought he'd want me to clean off his cock and so I licked my lips and waited. I felt him move off the bed,\n\n'That was sooo sexy Baby..' I could feel Angie's breath on my face again.\n\nI stayed there, on all fours, with this Strangers cum leaking out of my ass and down the inside of my thigh, with far too many emotions going through my head.\n\n'Nina, how do you feel Baby, did you like getting fucked?' I heard Angie whisper to me. I felt her finger move along my inner thigh, scooping up some of the cum that had leaked out of me. The sounds of her licking her lips and then purring 'mmm so delicious..' she purred and felt her finger press against my lips.\n\nI licked my lips and thought, and turned up my nose, whoever had just cum inside me, had the worst tasting cum..\n\nAngie giggled 'It's not as tasty as your Girl cum is it Baby?'\n\nI shook my head, still looking for the right words.\n\n'Okay, well you can take off the blindfold, the fun is over..' she said.\n\nI lifted the black satin material from my eyes and Angie was standing in front of my, wearing a tight pair of jeans, with the zipper opened, and a strap-on dildo standing at attention. She held a little bulb in one of her hands and gave it a squirt, which caused the dildo to spurt out a milky white substance into the palm of her other hand.\n\nA wide grin spread across her face.\n\n'It was you?' I asked, knowing, and maybe just a little disappointed.\n\nShe nodded, the grin remained.\n\n'But you were breathing in my face, whispering in my ear...' I asked.\n\n'Only before and after I fucked you.. Anything else I said I said while fucking you.'\n\n'That dildo was so warm, it felt hot?' I kept wondering how this all actually happened.\n\n'It was wrapped in a towel and covered with a heating pad, the lube, err, the 'cum' too.. tastes like shit doesn't it?\n\nI nodded, and my heart started beating again.\n\n'So, do you still want to fuck a guy?' she asked.\n\n'A guy just did fuck me.' I responded.\n\n'I fucked you.' she said.\n\n'That felt like a guy just fucked me.' I said, 'and if you wouldn't have explained all of this, I would have gone to my grave feeling like some Stranger took my anal virginity.'\n\n'Did you enjoy it?' she asked.\n\n'I did, it was scary at first, but then I just wanted to be a complete slut while getting fucked...' I trailed off.\n\nShe nodded and said 'Baby, can you do something for me then?' she batted her eyelashes at me, I'd seen this before..\n\n'Uhhuh..' I nodded.\n\n'Could you.. umm.. could you fuck my ass now?' and she batted her eyelashes a few more times, just to make a point.\n\nI reached for the lube, and she hopped on the bed. 'Go easy okay?' she asked.\n\nI grinned at her 'I promise..'\n\nThe End.\n\n---\n\nAgain, thanks to every one of you that enjoyed this story, and left feedback, and comments.\n\nThis series is my first story, and you may be surprised to hear that it's almost entirely true. There is an Angie, we live together these days, and have been for almost a year. Angie read through each chapter, nothing was included that she isn't okay with.\n\nSomeone asked about me ever getting with a guy. Honestly, it's never happened.\n\nI'm planning on writing more stories, although anything in the future will be complete works of fiction, look at it this way, all you perfect strangers know more about us than our own families do. I do hope whatever content I publish here in the future is as well-received as this series has been.\n\nLove to all,\n\nNina and Angie"
    ],
    "authorname": "SilkeeSmooth",
    "tags": [
        "crossdressing",
        "girlfriend",
        "oral sex",
        "dildo",
        "intercourse",
        "anal sex",
        "exhibitionism",
        "feminization"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/down-the-rabbit-hole-ch-05-2"
}