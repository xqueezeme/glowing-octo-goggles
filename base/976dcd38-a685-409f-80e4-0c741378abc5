{
    "title": "\u00c6gir\u2019s Bride Ch. 05",
    "pages": [
        "Kirsty watched him. Something was up. He was quiet. Too quiet. Too laid back. She always knew that 'Happy' hid a dark side, but it had been out in force today. \n\nShe smiled as she remembered giving them nicknames over dinner that first night on the boat. Mikael was Grumpy she had decided, though she might have to change that one now that she knew him better. Sven was much too serious for any of the seven dwarfs. The way he carried the weight of the world upon his shoulders earned him the name of Atlas. \n\nBjorn with his broad smile had been Happy. No doubt about it. Except as she watched him now, just leaning against the door. He was anything but. And that scared her...perhaps more than her 'bad boy.' She wanted to make this man laugh, see that smile which she was so used to. \n\nShe remembered what Mikael had said earlier. But she still did not get why Bjorn and even Sven seemed so upset. Sub drop, if that was what it was, was common. It was just that she was not used to it. She had not known what it was or what to do...now she did. \n\nShe frowned and turned back to straighten the mess up while she thought about it. It was not the fact that they had used most of his shaving cream, she chuckled at the thought as she picked up the can. There was still just a bit left. Even his anger with Mikael did not fully explain the dark mood hanging like a cloud over him. When all else failed, she decided to take the straight approach, \"Why are you so angry with Mikael?\" she asked as she shook the can.\n\nHis handsome face darkened even more if that were possible as he crossed his arms across that magnificent chest, \"Because he damned well should have taken better care of you. That was his fucking responsibility...just as much as it is mine and Sven's.\"\n\nKirsty felt anger course through her. The way he said that went against all that she had ever been taught. Women were strong, capable of making their own decision, they did not need anyone, especially a man to look after them. She could almost hear her mother's voice in her head. Nancy Dickens would never tolerate such 'drivel' from anyone.\n\nIt was the biggest reason why she had had such a hard time coming to terms with her own submissive nature. But choosing to submit to him, to them was one thing. Being 'their responsibility' was a whole new level. One she was not ready to cede to anyone...even him. Especially this stranger that towered over her darkly. \n\nWith the wet towel in one hand and the can of shaving foam in the other, she stood and faced him. Her anger might not equal his but it was getting there. \"Responsibility? I am a big girl. I am no one's responsibility. I have been taking care of myself all...\"\n\nHe was across the room before the next word was out of her mouth. His fingers laced through her hair and pulled her up against him. \"And how exactly was that working for you, darling? Do you want me to remind you of all the little secrets you told me over the past few months? The friends who aren't really. The man you stayed with but did not love. The roommates that you barely spoke to. Have I missed any, Kirsty? Oh yes, the parents you see once a month for an hour.\"\n\nBeing reminded of all that by him just then was not what she wanted. The fact that it was all the truth only made the situation worse. She brought the can of shaving foam from behind her back and sprayed it in his face. \n\nHis green eyes darkened as he swiped the worst of it off and lowered his face towards hers, \"That was not a smart move, my sweet Freya.\" \n\nHer whole body trembled in his arms. A moment before her anger had been blazing, but at those simple words it was an inferno of a whole different kind that was consuming her. \"That was not fair,\" she whispered as his mouth covered and claimed hers. \n\nHer sweet, gentle Bjorn was demanding and thorough as his tongue and teeth conquered every corner of her mouth. Her nipples that had instantly hardened at those words were chaffing against the heavy, wet material of her top and bra. All she could taste was the shaving foam but by the time, he finally drew back from the kiss, she was trembling but it was from anything but anger. \n\n\"Strip,\" he growled almost against her lips. \n\n\"What is it with you guys and the stripping thing? There are clubs for that sort of thing,\" she tried to tease but it came out more a throaty whisper. \n\nHe stared at her, \"We'll save the table dance for another time, Kirsty. Right now, we both need a shower.\" He should have been laughing. Where was her Happy? \n\nShe looked at her wet clothes and the shaving cream, there was no denying his words. But still she could not fight the thread of fear that was weaving itself through her mind. She brought a hand to his chest, \"Please Bjorn, you're scaring me. Just tell me what's wrong. Please.\"\n\n***\n\nHe wanted to be angry. Some part of him still was. But her words, those simple words were all it took. He closed his eyes and leaned his forehead against hers as he breathed deeply for a couple of minutes. The anger and jealousy were still there when he opened them but at least they were under control now. He tried smiling at her but knew it was a feeble attempt. \n\n\"Let me bath you please,\" he tried again. She studied his face for a long moment and then nodded. She reached for the hem of her t-shirt, but his hands covered hers and stilled them. \"No, let me. Let me care for you tonight. Okay, my love?\"\n\nShe frowned up at him but once more she merely nodded. His fingers in her hair tightened and he pulled her head back further, \"Bad manners, my sweet Freya.\" He felt the shock race through her whole body. He smiled, his beautiful wife was so fucking submissive, her mind so open to his and her body was so damned responsive. The conditioning was happening even faster than he had imagined. \n\nBut not fast enough. He craved that power, especially now. He needed to know that there was something he could give her that the others could not. Something deeper and intensely binding between them. But he had always favored the mental component to these games...the mind fucks. And he needed to be so deeply inside this woman's mind that she could never fucking get him out. \n\nHe breathed deeply again, forcing his mind back from the darkness that he only ever barely managed to keep hidden just beneath the surface. Unlike Mikael, he had never coveted Sven's role as leader. He was more than satisfied to just do his part, a member of the team was not his issue. But when it came to women he had always known where his proclivities lay...and they frightened even him. The depth of control he craved was deeper than most.\n\nWhen it was just games, carefully negotiated consent in clubs, it had been easy. But he had always felt like an ass even then. He knew those women always wanted more than he gave, offered more than he could ever accept. It was why he had so rarely played. \n\nBut with her...it was so fucking different. She was different. With her, he wanted it all. And he wanted it instantly. He wanted the very air she breathed. He wanted her dependent upon him for that. He wanted her orgasms... Oh, fucking, goddess, did she realize why he had chosen those words as the trigger. He smiled as he reluctantly released her. \n\nHe stared at her as he spoke, \"The correct response was not nodding that pretty head of yours. The correct response was...'Yes, Master.' Do you understand me, Kirsty?\"\n\nHe heard the quick intake of her breath. She always did at that word. Let her. It was a powerful reminder of what he wanted from her...the depths of his need. But after that brief pause her expressive eyes widened at that word, she dropped her head and whispered, \"Yes, Master.\"\n\nHe smiled and brushed the pad of his finger across her cheek, \"Good girl.\" He pulled her into his arms and just held her for a long moment. Trying to calm and reassure them both. \"You will wait while I get your bath ready. You are not to undress. I will do that. Do you understand, Kirsty?\"\n\nShe started to nod, then she whispered, \"Yes, Sss.\" Again she caught herself, he watched as her throat moved up and down, swallowing back the words, \"Yes, Master.\" He was so fucking proud of how much stronger the words were when they came this time. \n\nHe kissed the top of her head, \"Good girl.\" \n\nThen he broke the embrace and finished rinsing out the tub. His mother's favorite. The ancient bear claw tub was huge. It would easily fit them both. Of course, she might have to sit on his hard cock, but they would save that for another time, he promised himself. He made adjustments to the taps, using his wrists just as he had on the rare occasions that he had bathed Monika as a baby. \n\nThey had all taken turns caring for her. That woman had never been maternal. Never really wanted anything to do with the child. He supposed that they had dismissed the obvious with Monika for so long, blaming it upon her childhood. He really was happy to see how quickly Kirsty had taken to his niece. It was his...\n\nHe closed his eyes and breathed deeply, forcing his mind back from that path once more. This was his night with her. And he was not going to let Mikael spoil it. Sven either for that matter. But what worried him most was not his brothers...but his reaction to them. His uncle's words aside, he never once remembered his father or his uncles being anything but united when it came to his mother. He would have time later for unravelling that mystery too. Maybe even speak to his mother about it, but right now, he wanted...needed...to focus upon the present. Upon her. \n\nHe stood up and gathered the other things that he needed. His body wash, his shampoo. He knew that he should have ordered her own while he was purchasing the clothes he wanted her to wear. But he had not. The truth was that like his shirts he wanted her to wear his scent. \n\nWas that part of this too? Washing his brother from her body? He could easily do that, but what he had seen earlier of the two of them bent over this tub laughing and chatting so easily warned him that no matter how hard he scrubbed, he could not wipe Mikael from her mind. And that fucking bothered him more than he was ready to admit just then. \n\nSo he did not as he poured half the bottle of body wash into the tub until a plethora of bubbles floated upon the surface. The whole room filled with the dark musky scent that he favored. Only then did he stand and face her. She was just watching him. He smiled at her, tried his best to reassure her...or maybe it was himself that he needed to reassure.\n\nWhen he stood before her, she brushed the side of his face tenderly. \"Bjorn, please, Mikael really did not...\"\n\nHe shook his head firmly and placed his finger over those sweet lips that were still red and slightly swollen from his kisses. \"No more. I do not want to talk about my brothers tonight. Is that understood?\"\n\nShe sighed and tried to smile, but it did not reach her eyes as she nodded, \"Yes, Master.\"\n\nHe smiled as he lifted the t-shirt over her head and tossed it in the laundry basket. His hand covered her breast as his thumb caressed her hard nipple through the thin silky material of her bra. It was hard to begin with but puckered even more at his touch. He was fascinated by it as he toyed with it for a long moment. Her breathing was quicker and more shallow. He could do this all night. \n\nBut maybe not, he thought as he fitted her whole breast into the palm of his hand and squeezed softly, \"You fit so fucking perfectly into the palm of my hand.\" The way that she leaned into him and stared up at him did funny things to his guts. \"Do you know why I choose Freya?\"\n\nHe loved the funny dazed sort of look in her face, like she could not manage to focus upon what he was saying for what he was doing. He dropped to his knees. His hands on her waist drew her closer still as his mouth captured that turgid peak and suckled upon it. When he finally did release it, his tongue toyed with it between words as he spoke, \"I choose the words...My...Sweet...Freya.\" \n\nHer moan was loud as her knees buckled, only his hands around her waist kept her from falling to the ground in a puddle. He could tell that she was incredibly close. So fucking close to an orgasm. And she still wore those damned impossibly tight jeans that hugged her curvy ass. \"Do you know who she is?\" he whispered against her belly button as his tongue swirled around it slowly. \n\nShe whimpered, \"Some fucking goddess. Bjorn, you're driving me crazy. I need to come so fucking bad. Please.\"\n\nHe shook his head against her softness, \"Not yet, I want you to hold it back as long as you can. Can you do that for me, sweetheart? Can you hold back the tide that wants to sweep you away? For me?\" His tongue went back to toying at her navel as his thumb brushed her nipple so lightly that he was not sure she could even feel it. But her moans said she did.\n\n\"I'll try,\" she whimpered as he unbuttoned her jeans and slowly lowered the zipper. His tongue followed their lead and drew a wandering path across her lower belly. His cock stiffened even more in his jeans. \n\nIf Monika had been the bait he used with Mikael, it had been a son that had drawn his elder brother. But if Sven thought for a moment he was just going to step aside on that one... No, he was every bit as determined as his brother to get her pregnant and just as determined that it be his son...or his daughter for all he fucking cared. But his. He wanted that part of her too. 'Fucking, hell, admit it...you want all of her.'\n\nBut he fought that voice back as surely as he fought the sudden urge to push her jeans and panties aside, to bury himself inside of her, to come so deep and so often in her body that it ripened with his baby. That was not their way, he reminded himself for what seemed like the thousandth time that day alone.\n\nIf he could not control his thoughts, he did his actions as he slowly trailed his hands from her full breasts that he knew would only become fuller once she was pregnant. His hands finally slipped inside her jeans, he frowned as he found she wore nothing beneath them. \n\nHis tongue travelled lower as well. He pressed a soft kiss at the bottom of the zipper as he began to push the jeans down her impossibly long legs. Legs that he imagined wrapped about his waist as he pressed her against the cold tiles of the shower, as he buried himself inside of her body over and over again.\n\nThe jeans puddled around her ankles as he pressed another kiss on her bare mound. He inhaled the sweet smell of her need as he leaned his face against her abdomen wrapping his arms about her and holding her as tightly as he could. Too tightly perhaps as his demons raged inside his fucking mind. Demons that he had battled as long as he could remember. Demons that this woman alone seemed to ignite, to stir to life...and to calm. \n\nHe lifted first one foot and then the other, removing that final barrier and flinging it too across the room. He wished he could as easily fling the demons in his head aside. His hands guided her body to the edge of the tub. He tugged her hips until she sat on the edge of the cold steel and enamel rim. He tilted her pelvis and his hands made their way to her knees, \"Open for me,\" he growled. \n\nHe smiled at how quickly, how automatically she obeyed his command. But he did not dwell upon it as he lend forward and buried his tongue between her soft thighs. His tongue homed in upon the tender morsel of flesh at the juncture of her thighs. He toyed with it, licking it, twirling around its sweetness slowly. \n\nHe felt her tremble then tense. \"Not yet,\" he blow the words right across it and revelled in her soft whimpers as he returned to the torture...and the sweetness. \n\n***\n\nShe knew this game...it was not new to her. But this was totally different from what Mikael had done. He had sensed when she was close then drawn back, leaving her wanting, needing. This was worse, so fucking much worse. Bjorn knew how close she was...how fucking much she wanted and needed to come. He did not even try to back off, his tongue continued torturing her stiff clit...and still he demanded that she hold back her orgasm. \n\nThe task seemed impossible as he licked at her...once, twice, thrice...what the fuck was four, she tried to focus upon something else. Anything else other than how incredibly good his tongue felt on her clit. She bit her lip as she thought about how different this felt without whiskers abrading her thighs...how easy it would be to just...\n\nThen he was leaning back on his heels once more, reaching for the handles to turn off the water. Her whole fucking body was on fire...and he stopped. She wanted to hit him. She wanted to pull her hair out. She wanted to scream. \n\nThen his hand landed a solid blow to her outer thigh, \"Bath time. My sweet, greedy little cunt.\"\n\nShe shivered at those words. If the man was trying to calm her down, relax her, dirty talk was not the way to do it. But all she said was, \"Yes, Master,\" as he lifted her legs and turned her, slowly lowering them into the incredibly warm, almost perfect water. She moaned again as she slid into it. \n\nShe leaned against the end of the tub and closed her eyes with a sigh. She could almost lose herself in it. Fall asleep again. If it were not for him. She was torn again. Not even the lapping of the water could extinguish the fires he had ignited in her.  \n\nBut at the same time, she found herself blushing, fighting the illogical need to cover her full curves as much as she could with her arms. She was not certain, no matter what this man said, if she would ever be completely comfortable being naked like this with her Adonis...Thor.\n\nThen his hands were on that body as he spread more of the soapy suds over her. She frowned...him. It was the smell of him. Each of them smelled just slightly different. Perhaps each used different scents, she frowned. She giggled...who would have thought that after working with damned fish all day they could all manage to smell so fucking sexy.\n\n\"Tell me,\" his voice caressed her ear lobe as surely as his hands had once more found the aching fullness of her breasts. \n\nDid she have any choice? \"Why don't any of you smell of the fish? The sea, yes, but not the fish...just sex, sea and man.\"\n\nHe chuckled as she felt his lips brush hers as lightly as his thumbs strummed across her nipples. \"Because we have the good sense to shower before we come to you, sweetheart.\"\n\nShe opened her eyes and stared up into his lazily, \"And what if I wanted the pleasure of bathing you like this?\"\n\nHe sighed and smiled back, \"You are so fucking fascinating woman. I don't think I will ever grow tired to exploring your depths.\" He paused for a moment as he filled his hands with soap once more. \"Dunk under the water,\" he ordered. \n\nWhen she emerged and wiped the water from her eyes, she noticed that he had moved from the side of the tub to the end behind her. His fingers slid through her hair as he gently began to build the lather. It was almost as fucking amazing as her friend Roz who was the cranio-osteopathist ...no, better, because his touch was firmer, more sensual. She found herself moaning with each stroke. \n\n\"It is called service submission,\" he said as he continued the slow message. \n\nShe sighed just enjoying the feel of his hands on her head, \"What is?\"\n\n\"The need to bath your Master. Do small things like bring coffee in the morning. It takes traditional chores that just need to be done, that should be a shared responsibility...it takes all of that to another level. A depth of submission that is not common,\" his voice was low and she could feel his breath caressing her skin as well as his fingers.\n\n\"Why? You do those things for me all the time. You brought me cookies,\" she smiled at the memory of waking in the cabin that first time. Her hands were still tied and she was completely naked with Sven's bite marks on her tits. She woke to this god kneeling next to her with a plate of freshly baked cookies and a smile. \"And my tea...you're always bringing me tea in the morning,\" she frowned. \"How is that any different? It is just what you do for someone you...\"",
        "\"Love,\" he whispered against her ear as he kissed the side of her face.\n\nDid she? She shook her head. She wanted to deny it. Less than a week she reminded herself...five fucking days. It did not happen like that. It was not supposed to. You met someone through school or work or friends. You got to know one another slowly. Then you dated...eventually you had sex. Then after a year or so you became a couple. You married after two or three years...or six...or never. \n\nBut from the beginning this has been out of her comfort zone. Those books, that site. Their messages. And that was it...their messages. As much as she might want to count days upon her fingers and deny what her heart told her head, the truth was that she knew these men. She had shared secrets with them that she had told no one else...ever. \n\nIt was so easy to do. It was just a computer screen. She would never meet this man...these men she realized now. That made it so incredibly easy to spill secrets that she would never share with anyone else. Him, especially. She wanted to laugh hysterically at how easy it would be now to file those messages into Sven, Mikael and Bjorn folders. \n\nAnd his folder in particular would be full of those secrets...how hard it was admitting her submissive nature...how she felt like such a disappointment, especially to her mother...how she had never felt like she fit in with her group of friends who valued their careers, their homes, marrying the right man...how hard she had tried to be like that and in the end how badly she had failed. This man knew all of it. \n\nSometimes he had just listened. Sometimes he had offered words of wisdom or comfort. But never once had he judged. Even those things that she judged herself for...especially those. \n\nHer eyes swam with tears that had nothing to do with getting soap in them and her throat was tight as she looked up at him, \"Yes, little things you do for someone you love.\"\n\nHe smiled at her and whispered, \"Time for a rinse.\" Then his hand on her head was pushing her under the water. Her first reaction was immediate. Instinctual. Fight. But then her heart took over...this was him. Him. He would never hurt her. He never could...and she relaxed and opened her eyes. Staring up at him through the refraction of the water and the bubbles.\n\n***\n\n'What the fuck are you doing, asshole?' the voice of reason in his head demanded. The woman just practically admitted she loves you and the first thing you have to do is try to drown her? \n\nIt made no sense, Bjorn knew that. But his dark side never did. Yes, maybe she had come close but she had not said the words. The ones he really wanted to hear. So that twisted fuck in his mind felt the need to assert his complete dominance. To test her limits. \n\nOh, he thoroughly hated himself for it. This...this was beyond breath play...much beyond it. And he had never even fucking practiced this. This was stupid. 'So, why the fuck are you doing it, asshole?' Because he needed that fucking much control. \n\nHe stared into her eyes, felt the tension, the fight drain from her. He smiled and released her. Her head had barely broken the surface as she sputtered water when his mouth covered hers. He breathed into her deeply as his tongue plunged into her sweet depths. Once more their breath mingled, became as shared as the life he needed with this woman whom he so desperately wanted not just to love...but to possess...completely...to own.\n\n\"Love,\" he whispered against her lips. \"Sex,\" his tongue outlined her full bottom lip. \"Beauty,\" it ran the full length of the seam of those swollen lips, begging and pleading for entrance. \"Fertility,\" his hand slipped beneath the bubbles and slowly rubbed circles over her womb. Then he reluctantly moved lower still, resting on the outside of her bare mound, \"Gold.\"\n\nHis fingers slipped lower into her wet folds, slippery in a way that not even the water could account for, \"Sei\u00f0r...sorcery as ancient as time itself.\" They slipped just inside of her, but remained still, denying her what she needed just as what he had needed remained just out of his grasp, \"War and death too.\"\n\nHis lips ran along hers so close that the air mingled, they shared a breath without even touching. \"She is all of those things. Just as you are. Nothing else would ever do, my sweet Freya.\" His mouth covered hers as she screamed her powerful release into his soul. Her body shook and arched, trying to draw his fingers deeper inside of her. But he held them still. Savoring the feel of her inner muscles contracting and squeezing them.\n\nBut still it was not enough. Her orgasm had not even finished when he took his fingers from her, gathered her hands in his and tugged. She faltered a bit, unsteady on her feet as she stared at him in confusion. \"Out of the fucking tub,\" he growled. \"Now.\" \n\n***\n\nKirsty was dazed. The demon was back. Demons? She reached up to touch his face, but he shook his head. \"Don't touch me now,\" he growled before he pulled her across the cold tiles to the shower. He was silent as he turned on the water. He adjusted the dials. The spray pulsed, then pounded, then softly caressed. \n\nWhen he was finally satisfied, he plunged her beneath its spray. He arranged her hands on the tiled wall. Spread apart and above her head. \"Open your fucking legs, my sweet little slut.\" His hand slapped her bare bottom and she jumped. The wetness made the impact more pronounced. She felt the sting burn in a new and exciting way.\n\n\"Spread those sexy thighs wide, baby,\" he growled as she felt his teeth sink into the soft tissue where her neck met her shoulder. He pinned her like that as she obeyed. His fingers plunged inside of her once more, finding that special spot. She was not certain if his order to hold back still applied, but she could not have if she wanted to as her body took the relief his fingers offered. \n\nBut as quickly as his fingers had invaded her, they were gone. Her knees were weak and she whimpered in the unrequited need. Then she felt his body cover hers. His fingers laced through hers on the cold tile as the wet denim of his jeans chafed the back of her thighs. His t-shirt seemed almost as scratchy as the wool of Mikael's shirt had against her bare back as he pushed her forward.\n\nHer eyes flared wide. Her fingers grasped his even tighter. She gasped as she felt him enter her. He was hard and thick. There was nothing soft or gentle about it. He pushed inside of her deeper. \"Come for me, my sweet fucking Freya. Come on my hard cock as I fuck you,\" his voice was guttural, feral even as his body plunged violently inside of hers.\n\nThere was an edge of pain to it, he was deeper than he ever had been...than anyone had been. The pleasure overshadowed the pain, consumed it, and blended with it until the two became one. Just as they were in that moment. If her body had been on fire with this man before, this was throwing petrol on those flames as they arched and raged to new heights...and depths. \n\nShe bit her lip from screaming, but only managed to muffle the cry that she could not stifle as her body tightened and drew him impossibly deeper still. \"Yes,\" he raged as the demon surged inside of her, \"Yes, come for me, my sweet Freya.\"\n\nShe almost collapsed against the wall. Her body was already clinching and pulsing around him. She was so fucking full that there was simply no more room for those muscles to tighten even more. But that was what her body wanted...what it needed...what it simply had to do. \n\nThe result was an aching pain low in her abdomen...like a period cramp, sort of, but intensified by the pleasure that simply would not abate. She hung there. Suspended on his hard cock as he plunged deeper and faster inside of her. Her body was on overdrive...unlike anything she had ever known. \n\nEach stroke was deeper, more painful than the last, but still her body responded. Craved his. Craved the darkness. Craved the pain even. She was not sure how long they stayed like that, locked in a carnal embrace as he took her. The water went cold, but it did not matter. The heat of his body warmed her. The fire that burned inside of her generated its own heat. \n\nShe heard him growl. It was almost the pained plea of a wounded bear as she felt his pace quicken even more. The short, shallow stabs pressed the head of his cock so deep inside of her that she felt the pressure as if he were trying to invade her very soul. He pressed her forward until her tits too were squashed against the cold tiles. \n\nStill he raged on like that animal in pain. Then the pain was shared as his teeth once more sunk deep into her shoulder. \"Mine,\" he growled painfully as she felt him swelling inside of her. She turned her head and bit her hand to keep from screaming out. But not even her mind knew if it were pain or pleasure that overrode the other as they melded as surely as his body was with hers. \n\n\"Fucking mine,\" he panted as she felt his liquid heat burn inside of her body. His fingers squeezing hers tighter. His teeth sinking so deeply that she feared he had broken the skin. His wet shirt and jeans rubbed her skin almost raw. And his cock pulsed inside of her sore cunt as jet after jet of his hot come filled her. She closed her eyes and swallowed hard...filled her unprotected womb. \n\nThen there was perfect silence. Perfect peace after the storm. His large body still surrounded hers, but somehow it felt different. Like it cradled hers. His teeth loosened their grip to be replaced by the gentle lapping like a puppy might after it accidently bit its owner. His head leaned against hers and she would have worsen that the water warmed again at least against her neck. \n\nShe squeezed his fingers gently as she turned her head towards his face. Those green eyes glistened as he whispered, \"I'm sorry.\"\n\nShe chuckled and realized too late just how painful that could be with his hard cock inside of her and her own muscles suffering fatigue from how hard and often they had come. She winced and saw him frown. Something shifted in her chest. Her heart skipped a beat at the intense tightness there as she caressed his cheek, \"I'm not.\" She pressed a soft kiss to his lips. \n\nHe shook his head, \"No, Kirsty, I should not have lost control. It's just that it is all so new...\" He frowned.\n\n\"I know, Bjorn. But I meant it. I am not sorry. It was incredibly intense granted and I'm not going to lie. I will probably be sore tomorrow, but damn it...I still...\" She kissed him softly, \"Maybe not all the time mind you. But damn, that was amazing.\"\n\nHe shook his head as he wrapped his arms about her, \"Never tire of your depths, sweetheart.\"\n\n\"Yeah, well, you certainly went deep this time,\" as if to emphasis the point he flexed inside of her. She would have sworn it impossible but her body quaked around his and in an instant she was as weak and needy as if none of it had happened. \n\n\"No more, my greedy little cunt.\" He softly nibbled her ear, \"Well, maybe later, but not right now. We both need to finish this cold shower. Then I have a surprise for you.\"\n\n\"Another one?\" she chuckled. She whimpered and pouted as she felt him slip from her body. \n\nHis hand once more made that stinging contact with her bum. \"No pouting. I think you will like this surprise,\" he said as he stripped the soaking wet shirt over his head and tossed it into the basket. The jeans were right behind it as he stepped beneath the cold spray. His Norwegian blond hair was already damp but it instantly darkened from the water that ran like rivulets down his firm chest and arms. \n\nShe could not resist the temptation as she nipped over to the tub for the shampoo and body wash. She did not bother with a wash cloth as she poured the wash into the palm of her hand. Any excuse to touch him skin to skin. He moaned as she began at his fingers and slowly caressed down his arms. She discovered that he was very ticklish as she caressed his underarms and across his ribs. \n\nBut she paid a price for that discovery as the other bum cheek reddened and warmed, \"That made the top ten of the 'Things You Don't Do to a Dom' list,\" he teased. \n\nWithout the heat of their love making neither wanted to tarry long though. But she smiled as she promised herself...soon. Soon she would explore this thing he called 'service submission.' The idea of running her hands leisurely across his body sounded like anything but 'service' to her though. \n\nHer cheeks reddened to match her bottom as she realized it was not just him that she wanted the excuse to explore at leisure. She wondered how long Mikael's stone walls of friendship would last if she got him naked in the shower. And Sven? Could she manage to coax a smile from him? Yes, she definitely wanted to give this 'service' thing a try...her mother's feminism be damned. \n\nBut then he took the body wash from her and it was his hands once more all over her body. How the fuck could her body still want him? But it did. Each place he touched ached and tingled for more of his sweet, tender touch. Until she was softly moaning as his fingers once more slipped between her legs. She blushed as he washed her there too. It was strange; how could she still be shy after... But she was. \n\nHe sighed and brushed a kiss to the tender spot where her shoulder met her neck. \"We could stay in here all damned night if we are not careful. Every time I get you clean I want to make another mess in that sweet pussy.\" His thick cock brushed her outer thigh to make his point as his hand covered her lower abdomen and drew her back against him. \n\nHe kissed her softly, \"But the water is cold...and next time I come inside of you I want you on your back in that huge bed,\" he whispered as he turned off the water. She shivered and he drew her closer as he opened a cabinet and drew out two over-sized bath sheets. He wrapped one about his waist and the other about her chest and knotted it over her tits. \n\nShe wanted to chuckle at the way he pushed her behind him and looked around the door before lacing his fingers through hers and drawing her out into the hall. For some odd reason, it made her feel that they were teens, sneaking around behind their parents' backs. She could not stifle the giggles as she 'snuck' into her room. \n\nBut when she looked at him...he was all business and very serious. That dark brooding intensity was back in the depths of those Kelly green eyes and she shivered. In anticipation and the teeny tiniest smidgen of fear.\n\n***\n\nBjorn breathed deeply and fought back the raging demons. He had spent the whole fucking day ready to throttle Mikael. And the truth was that the moment he was alone with her, he was no better. The 'drowning' thing was among his darkest fantasies. Something he had always thought they might get to one day...or not. But he had pushed it now? Why?\n\nBecause you are jealous of your brothers? Because she makes you feel too much? Because you are still afraid of losing her? Because she could not say those words? Or simply because the truth is that you are sicker and darker than your sadistic fuck of a brother? He did not like any of those options. But his time with her was slipping away like sands through the hourglass. \n\nAnd this one...this one he knew he could handle. It was his specialty. The thing that always got him noticed in the clubs. Hell, he always had subs lining up, begging for it. And he knew it was something that fascinated her. Something he wanted to share with her. \n\n\"Sit on the bed, Kirsty,\" he commanded. He had laid everything he needed out earlier. He watched her eyes widen when she saw the lumps on the bed covered in black cloth. His cock hardened again, \"Actually, kneel. Kneel next to it.\" \n\nHe would have never taken himself for a high protocol prick like his eldest brother. In fact, it had always made him a bit uncomfortable when the subs they played with in the clubs knelt before him. But she was different...so fucking different. Her...he longed to see kneeling at his feet. It turned him on. 'Fuck, idiot, she turns you on,' chided that little voice.\n\nHe pushed it aside as she whispered \"Yes, Master.\" She sank to her knees on the floor near the bed. Her chin almost touched her chest. Those small, soft hands that could drive him insane were palm up on her spread knees. Though she still wore the towel, it gapped open revealing her tight cunt. Too tight for him to lose control like that very often. Despite the newness of it all, there was no excuse for how rough he had been with her. \n\nBut it was time for something softer now. Time to show her...how much he loved her. He frowned, he still was not any more comfortable with those words than she appeared to be. But he knew they were true, whether he liked it or not. Honestly, he had fallen for her when it was nothing more than fucking messages. Her intelligent mind, her caring heart, her submissive nature...how could he not? \n\nBut holding her, talking with her, laughing with her that first night, he was a goner. And he honestly did not care. The only thing that remained was to awaken his lovely wife to what was so fucking obvious to him...that she loved him too. That she belonged here with him. Fuck it...with them...as hard as that was right now.\n\nAnd what he had planned to fulfil one of her fantasies was a good start. He crossed the room and sat on the bed. He turned her body just a bit so that she fit perfectly between his open thighs. He tugged softly on her hair as he ran his fingers through the long wet strands. Wet it was so dark that is was almost mahogany like her bed. It gleamed in the low light. \"Beautiful,\" he whispered.\n\nShe blushed and he could almost hear her thoughts. She was not comfortable in her own skin. He cursed their warped society that had made her feel less than what she was simply because of her lush, round, softness that he adored. He leaned down and whispered, \"Take off the towel.\"\n\nHer eyes came open, stared into his. He saw the panic there. Saw her want to fight, to argue. How was it that she could allow him to push her head beneath the water, hold her there and force her body to surrender into his sick need for utter and complete control of her very life...but she could not be naked with him? He took that choice from her as he tugged the end free from between her soft breasts. \n\nHis other hand reached down and captured one. It fit so perfectly in the palm of his hand. He had always known it would somehow. His thumb softly caressed it. \"One day, sweetheart, I promise you, you will realize how beautiful you are to me.\" \n\nHe smiled, \"But until then, I need the same type of trust and submission you give me when I place my hand on your throat. When I pushed your head under the water. I need you to trust me that I will never hurt you. Do you understand me?\"\n\nShe sighed and looked down at the floor. He could see the tears glistening in her eyes. He knew the 'mind fuck' that modern culture had done to her, telling her constantly that beauty was so thin as to be unhealthy, but still he was surprised at the depths of her pain and insecurity. He wanted to fix it all. He wanted to do what he promised...let her see herself through his eyes. But he knew that would take time. Problem was that when it came to her, he was discovering that he was not a very patient man.\n\nIn the end, her response was a slight nod and the whispered words, \"Yes, Master.\"\n\nHe shook his head and forced her to look up at him, \"Not in this, sweetheart.\" His thumb brushed the moisture from the corner of those eyes, \"In this, I am just your husband, your lover, your friend. This is about more than obedience. It is about real trust. The hard kind. Can you give me that?\"\n\nHer throat moved up and down as she swallowed several times. More tears gathered in the corner of her eyes. It was a very long moment that seemed to mock all he wanted with her, but in the end she nodded, \"I'll try. I promise.\"",
        "\"That is good enough. And I promise that I will always respect how hard this is for you. That I won't take it for granted. That I will treasure the trust you are placing in me,\" he bent and kissed the new tears away from the corners of both eyes. They were so much like her...like the way she made him feel. Salty and earthy but sweeter than summer's first wine. \"Thank you, my love,\" he said as he sealed it with a tender kiss to her lips.\n\nHe positioned her back so that she was facing forward and once more ran his fingers through her hair. \"You know I love your hair.\"\n\nShe chuckled, \"Being ginger is not easy. Besides the obvious freckles and burning at the least little bit of sun, no one finds it particularly attractive. I always hated the dolls my mother bought me...so thin and all that light blond hair. I used to...\"\n\n\"No dolls like that for our little girls then. I want them to realize that they are as beautiful as their mother,\" he said as he tugged gently at a knot.\n\n***\n\nKirsty wanted to blame the modest pain for the tears that clouded her vision and made her head swim. But she knew it would be a lie. His words simple as they were touched her deeply. She had tried so fucking hard to come to terms with the idea not of being married to these men, not of loving them, she was beginning to realize just how fucking easy that would be...she had only to allow herself really. \n\nBut babies...the children that she had begun to long for, especially after the break up with Raj, when she first heard the ticking of her biological clock and realized that she had wasted six years. That she did not want to waste more. The idea of getting pregnant...like this...was still hard, especially after what had happened in town yesterday.\n\nMikael's words last night had confirmed what she suspected...to Sven she was nothing more than a brood mare. Something...someone to give him the sons he wanted. To continue their legacy. \n\nBut the way he said it, the fact that he spoke so tenderly of daughters, girls, not merely fodder for the sea, hands to work the nets, but little girls who would play with dolls as much as they ran in the fields. She felt the tightness in her throat grow. It was almost as if some invisible hand was constricting around her neck. For the first time, getting pregnant was not so scary. Not with him. Not with a man who spoke of little girls and worried about their dolls. \n\nShe reached up and wrapped her arm about his neck, drawing him down until their lips met. \"I'd like that,\" she admitted a bit shyly. \n\nHe smiled and his large hand moved to cover her lower abdomen, \"We'll get back to work on that in a bit then. But right now, stop distracting me, woman. I spent half of last night fucking planning this whole seductive scene.\"\n\nShe chuckled, \"Yes, Master.\"\n\nHe untangled her arms from his neck and turned her back around. Once more his fingers caressed her scalp. If the man ever wanted to give up fishing he would make a damned good masseuse. Then she felt something else, the teeth of a comb scraping lightly against her head. He sectioned her wet hair off. But what came next shocked her...he began to actually braid it. \n\nHe chuckled, \"Rope, hair? What's the difference?\" Then he paused, \"Actually, huge difference. Your hair is so fucking soft. I could just touch it all night long...if I did not have other plans.\"\n\nHe picked up something from under that cloth. It took her a moment to realize that it was rope. He wove it through her hair then used it to tie off the ends. Several feet of it trailed down her back. \"There now. That is done. Against the wardrobe.\"\n\nHis voice was doing funny thing to her tummy. Butterflies danced there as he helped her to stand. \"Facing it for now,\" he said. Then she felt the gentle pull of the rope as he laced the free end of it through the center ring on the wardrobe and tied it off. Her hair was pulled up, not enough to be painful, but it effectively got it off her back and out of the way. \n\nShe frowned as he lightly tapped her bottom, \"Don't go anywhere.\"\n\n\"You guys only say that when rope is involved,\" she teased.\n\n\"What can you say...you played with dolls as a little girl, all we had was rope,\" he replied as she watched him in the mirrors gathering something else into his hands.\n\n\"And all the little girls were just begging you to tie them up, I bet?\" she teased.\n\n\"No, only the big ones. When we were little, it was usually me that Mikael tied up...to keep me out of his way.\" Did he realize how much he revealed with those words, she wondered. \n\nBut then she had other things to think about as he slipped another rope around her wrist and lifted her arm. He secured this one to an outer ring and repeated with her other hand. In the end, her body was pressed securely against the wood, both hands outstretched to the side and her hair acting as an anchor.\n\nHe kissed her shoulder softly and she knew what he was going to say, \"Don't go anywhere, right?\" she teased.\n\n\"I do so love a smart woman,\" he laughed as his hand landed much more firmly on her bottom. It stung this time, \"But not a smart mouthed one. Remember that. I have several ways to keep that pretty mouth occupied. Gag balls among them, sweetheart.\" \n\nHis hand caressed her other cheek before giving it an equally sound smack that echoed around the room, \"Of course, my favorite thing to stuff in that pretty little mouth would be my cock. I bet you'll look so fucking sexy with tears in your eyes and drool running down your chin as you gag on it.\"\n\nHow the fuck could he make something that sounded so demeaning and disgusting sound sexy, she pondered. \"Spread your legs for me, my sweet Freya.\"\n\nHer body went almost limp against the hard wood. It was instantly on fire...a fire that seemed unquenchable. Her nipples were painfully hard pressed against the smooth cold surface. She blushed as she realized that she could almost feel the wetness leaking down the inside of her thighs. \n\nOnly the solid blow to her bare bottom brought her back to reality, \"I said, spread those soft thighs for me,\" his voice was low...controlled. He held no threat, only command. And her obedience was instant this time.\n\nThen his fingers were once more buried deep inside of her, \"You do not have permission to come,\" he whispered against her ear. \"Good girls must earn their orgasms. And you want to be my good girl, don't you?\"\n\nShe was whimpering. Moving and undulating against his hand between her legs. But no matter how hard she tried she just could not seem to get enough, to push herself over the edge. She wanted to come so fucking badly. Then she froze as she realized that she could not. As on fire as her body was she knew...just knew...that she would not be able to. Not without those words...not without his permission. She trembled as that realization filled her mind.\n\n\"Trust me, my love. Trust that I adore and am fascinated by these lush curves that just fucking fit my hands so goddess damned perfectly,\" his hands caressed her breasts, cupping and weighing them before lightly squeezing them. One hand travelled to her throat and squeezed ever so lightly, \"Trust me with the very air you breathe.\"\n\nDid he know how much easier that one was for her? She knew that he would never harm her physically. That was easy. But still some corner of her mind screamed...'chubby chaser.' Men like him never really wanted to be with women like her, they just wanted to use them. \n\nAs for this one...how was it even fucking possible. How could he so easily take control of such a basic physiological response? Orgasms were automatic...your body reached a threshold of excitement and as long as your mind did nothing to stop it then it just happened. So how had this man seemed to put up a wall around that? A wall that only he held the key to the gate. \n\n\"It's okay. I promise you...everything will be fine. Trust me, my sweet Freya.\"\n\nAnd just as easily as her body had stopped at his command, its flames instantly flared to a raging inferno. His fingers inside of her did not even move. Her hips did not either. But still those contractions milked them, sucked them deeper. She cried out as her body exploded around them. \n\n\"Yes, just like that. Come on my fingers. On my hard cock. Soon, my love, you won't need anything at all. Just my voice...just those words. I'll be able to sit across the room and watch as you come over and over again. Helpless to stop your body from giving me what I want,\" this time his fingers plunged all the way inside of her and the orgasm that was already one of the most powerful she had ever felt went to another level as she rode them, took what he offered.\n\nUntil her knees buckled. She collapsed spent. Only the rope, his fingers still inside of her and his thigh between her legs held her up. His damp head leaned between her shoulder blades as he pressed tender kisses there. \n\n\"I know, sweetheart. I really do know how much I am asking of you. I know how hard this is. Being naked and vulnerable like this. And especially the power I hold over your orgasms. I know that is a lot to ask. But know this...I love you. I will never hurt you.\" He turned her head to face him, \"Thank you. Thank you for trusting me.\"\n\nHer throat was dry and tight. She knew there was no way that she could speak. Not a single word. Especially not the important one that pounded almost like a migraine at her temples. Right or wrong...too fucking quickly or not...she knew that she loved this man. Loved him in a way that she thought only existed in the fantasy world of her books. But all she could fucking do was nod through the tears. \n\nHe kissed her lips so softly that it was like the feel of a lady bird walking along your arm...more of a whisper of what could be than what was. \"Now, let me give you a taste of another of your fantasies,\" he whispered before turning back towards the bed. She moaned and whimpered...as he retreated. Nothing he could offer her was worth his retreat just then. She only wanted him to stay close...his touch...him. \n\nAs if he sensed it, he returned quickly. She could see in the mirror, the long thick strands of leather that hung from the handle in his hand. Her breath caught in her throat. It was huge. One of the longest and thickest that she had seen. And she had seen a couple. Not just on that site, but in the sex shop where she bought the corset. But none of them were as beautiful, as well crafted as this one."
    ],
    "authorname": "Tara Cox",
    "tags": [
        "breath play",
        "domination",
        "submission",
        "sexual intercourse",
        "dirty talk",
        "bathing",
        "love",
        "romance",
        "shower sex",
        "bondage"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ashgir-s-bride-ch-05"
}