{
    "title": "James & Jasmine Ch. 02",
    "pages": [
        "Sunday \u2013 Paris\n\nJames watched from the back seat as Jasmine exited the limo in front of the hotel. It was impossible to depart gracefully with such a dress and the doorman who opened her door was certainly privy to a magnificent view of her long lean legs as she placed her right foot on the cobblestone drive and brought her left around to steady herself and stand. James sat transfixed for the moment and then opened his own door to exit in a hurry so he could come around and assist.\n\nThey were finally in Paris, about to enter the Hotel Splendide, and he felt excited by the journey they'd already shared, as well as the prospect of the visit about to unfold. He swung around the open trunk a little too late, as the doorman had already assisted Jasmine from the limo and was guiding her under the porte-cochere to the front door of the elegant hotel. James smiled at the prospect. He'd better get used to folks going out of their way to interact with Jasmine \u2013 open a door here or pull out a chair there. She had that effect on people. He tipped the driver generously and followed them into the hotel.\n\nThe flight had been wonderful, as he expected it would be. He had seen the glee on Jasmine's face as they had entered the jumbo jet at Kennedy and settled into angled first class seats that were several steps above anything she'd ever experienced before. She had never in her life been served Champagne before even taking off. They shared a double seat combo and had had a great flight in every respect. The service had been impeccable and they had even managed to get a little sleep, nestled into their cushy seats that reclined into pseudo beds.\n\nJasmine had worn a simple silk shift and semi-sensible shoes. But once she was seated, her dress had slid up her long lean thighs in a tease to all who happened to walk by. The pull of her body and her personae was unlike anything James had ever felt before. He was thrilled to be sharing this journey with such an exquisite beauty. \n\nNow, after a smooth flight and limo ride from De Gaulle, they were entering the lobby of one of the most romantic and classy hotels in Paris. James made fast work of the check-in process and they proceeded up to their rooms \u2013 both on the same floor, but across the hall from one another. They were all business as they moved into their respective rooms. James could tell that Jasmine was excited by the understated class of their accommodations. \n\n\"Oh, James. This is a lovely hotel. So elegant,\" she gushed with unbridled enthusiasm.\n\n\"Only the best for you, Jasmine,\" he chided.\n\nIt was mid-morning and they had checked in early. As they parted ways in the hallway, James suggested that they both take a nap and rest up for a couple hours, then reconvene in the lobby around 5pm. He knew that Jasmine hadn't slept all that well on the plane \u2013 she'd been too excited \u2013 and a good solid nap would slowly bring them both into the time zone and resolve the six hour time difference from the east coast. She agreed and they went their separate ways, both ready for a good sleep. \n\nAfter a solid nap, a shower, a shave and a little office email business, James eagerly descended several floors to the lobby, hoping Jasmine had been able to wake up according to plan. He had no reason to fear as she was sitting in the ornate lobby as he sauntered in slowly to join her. \n\n\"Hi, James,\" Jasmine cooed. \"I'd say good morning, but it's late afternoon and I really don't know what time of day it is or where I am,\" she joked. \n\n\"Well, as long as you got a little shut-eye, we should be able to while away a few hours now and get to bed early enough to get back into a Parisian rhythm by tomorrow,\" James proffered.\n\n\"Works for me,\" she replied. \"I did sleep a little. But I'm in Paris!\" she exclaimed. \"And I can sleep when I get home. I can't wait to get out on the streets.\"\n\nNeither could James. Jasmine was wearing tight black pants that stretched around her curvaceous form, a lovely short orange jacket over a silky white blouse, and relatively sensible walking boots. Her hair was wild and flowing, but in a measured way. Jasmine saw James's eyes scan her attire in approval and she lightly hooked her hand into the crook of his elbow as they departed the hotel.\n\n\"If you don't mind walking \u2013 and I hope you don't \u2013 then we'll take a stroll and find a place to eat. It's extremely early by French standards, but we're off by six hours so we'll have to eat as we see fit. I have a few places in mind, but let's get the lay of the land first. What do you say?\" knowing exactly how Jasmine would respond.\n\n\"Lead the way,\" she responded.\n\nThey wandered north across the Seine and headed east along the Left Bank as they skirted Notre Dame on the Ile de la Cite and headed into a district that James referred to as \"Le Marais\". James could tell that Jasmine was happy to now be semi-alert and cruising the boulevards of Paris with her boss and traveling partner. And James was high on the subtle touch of Jasmine's fingers crooked into his bent arm. He could have walked for hours just so.\n\nThey headed further north into a maze of curving streets, James leading the way. He remembered a small bistro he'd visited before and they came upon it soon, ducking into the warm wooded interior from the early Paris evening. They shared a lovely meal, a nice bottle of red wine from the Rhone, and good conversation. Neither openly acknowledged the incredible situation that they found themselves in, yet both were highly aware and excited by the prospects of what lay ahead.\n\nJames kept looking at Jasmine in the flickering candlelight of their very private table. He was seated across from a woman whom he could not stop looking at. He kept waiting for some visual shoe to drop, but it never did. In fact, the more he looked at Jasmine's warm beauty, the more enamored he became of her. Never had he felt such an incredible draw; a magnetism that rivaled anything he'd ever experienced. James kept telling himself that this was a business trip; he had to exhibit some self-restraint, she was so much younger than him. Yet Jasmine's easy smile, lovely nature and deep green eyes kept him swimming in a warm pool of desire. The swirling rivulets of mahogany tresses that framed her gorgeous face just reinforced the focus of her intoxicating beauty and her lovely laugh melted away any hope he had of maintaining decorum. Still, he had to try.\n\nThey left the restaurant, a little tipsy and feeling no pain, and Jasmine was not shy to latch onto his arm again as they meandered back toward the 6th. James guided them down Rue de Rivoli and they headed left and back across the river at Pont Neuf. Halfway across the bridge they stopped to survey the scene. The dark inky waters of the Seine swirled below their feet as the golden lights of the monuments along the river glowed in the Parisian night. It was a magical view and moment to match. James felt Jasmine curve her arm up tighter into his as her warm body pressed against him. \n\nHe looked down at her fondly, embracing the moment at hand, and in a response to his gaze, she looked up into his eyes. He hesitated, though it was a hesitation borne of doubt more than desire. She was his assistant, his employee, his junior by more than twenty-five years. Yet he was more drawn to her at this moment than he had any right to be. \n\nShe returned his gaze as he looked down at her gorgeous face, shimmering in the warm Parisian light. The urge to lean down and kiss her at that moment was almost overwhelming. Perhaps she'd even respond if he did so. But his conscience curbed his growing desire \u2013 barely \u2013 and instead he made a comment about the beautiful lights, resisting, for the time being, the urge to embrace her. \n\n\"Oh, James. Can you believe we're here? I don't know. Maybe you're used to this kind of thing. It's so exciting for me, though,\" she said, beaming at him as she spoke. \n\n\"Well, to some extent that's true. I've been here a few times. But,\" he hesitated for a moment, \"never with someone as beautiful as you.\" \n\nHe couldn't believe he had said that, but he was just speaking the truth. \n\n\"Aww, James. Thank you,\" she responded. \n\nShe tucked her hand around his upper arm once again and snuggled up close to him as they gazed down at the Seine, her soft bosom mashed against his elbow. \n\n\"How am I going to resist you over the next few days, Jasmine?\" he exclaimed, peering into the glistening pools of her eyes. \n\n\"Who said you had to?\" she replied with a smile. \"And it goes both ways, you know.\"\n\n\"Well, I'm happy to hear that,\" he replied. \"We should keep walking,\" James offered. Jasmine grasped his arm tightly as they began to walk again, wending their way back to the hotel. They walked in silence, both processing the moment and the situation. James knew he had to focus on the reason they were in Paris in the first place. He couldn't let himself get caught up in the seductive web of this beautiful woman \u2013 at least yet. \n\nBy now the jet lag was catching up with both of them and it seemed a good idea to get a good night's sleep so they could enjoy the sights the next day. They hesitated in the hallway as they each prepared to open their respective doors.\n\n\"Jasmine, I hope you get a good night's sleep,\" he stated. He hesitated for a moment, and then continued. \"But, you have to know that I am completely and utterly attracted to you. You are one of the most beautiful women I have ever laid eyes on. But, there are a million reasons why we have to be careful here. And first and foremost is the fact that we're here to do a job \u2013 to close a sale. I can't lose sight of that \u2013 we can't lose sight of that. So as much as I want you right now, I...\"\n\nIt took every ounce of strength for James to keep his word as he looked into Jasmine's deep green eyes. He could see the resignation in her expression as she began to speak.\n\n\"I know, James. I'm letting Paris go to my head, unfortunately,\" she laughed. \"But you're right. We have work to do and we need to keep a clear head these next few days.\" \n\nThe words were convincing; the tone of voice was not. He placed his hand on her arm and squeezed it gently. Waves of possibility roared through his mind, but he maintained a calm head. \n\n\"Good night, Jasmine,\" he said quietly. And without a thought, he did what just seemed natural. He leaned down to give her a soft kiss goodnight. And while it was a goodnight kiss, the minute their lips touched, there was a spark that jolted his senses. It was a kiss that was only meant to last a second \u2013 and maybe it did. But the energy and desire that passed between their lips at that moment was undeniable. Jasmine's lips were so soft and smooth, warm and wet, yielding to the gentle probe of his kiss. \n\nThey could have gone on. The portent of what might be on the horizon was clear to them both as James leaned back, looked into Jasmine's pleading eyes, squeezed her arms and said goodnight. Turning, they both opened their doors and went their separate ways for the night. \n\nMonday \u2013 Paris \n\nThe next morning they met for breakfast and were both beginning to feel normal again. Jasmine had donned a pair of skin-tight gray jeans and a thin black cardigan sweater. It was unbuttoned enough to show a black camisole peaking from below, a scalloped edge of lace barely visible. Her cleavage was subtle, but noticeable, and James smiled at the thought of being able to take a gander whenever he felt like it throughout the day \u2013 which would be often. Her heeled sandals gave a sexy lift to her form, but were sensible enough for a day of walking. Her hair looked casually tousled and a pair of long dangling earrings peaked out from the wavy strands of her brunette tresses. \n\nJames had outlined a full agenda for the day and they were both excited to be on their way, knowing that the promise of the previous evening might further unfold later that night. For the next six hours James led Jasmine on a whirlwind tour of Paris. They hit the highlights of the Louvre, visited the Impressionists floor at the Musee d'Orsay, window-shopped along Saint Germain des Pres, watched the young boys sail their boats in the Jardins des Luxembourg, and wandered the length of the Tuileries. They had lunch at a small bistro near the Palais Royal and James showed Jasmine one of his favorite spaces in Paris \u2013 the hidden gem of a park called Place des Vosges. \n\nJasmine was entranced by both the beauty of one of the world's great cities, but also by her guide. The more they walked and talked, the more they both seemed to curl into an orbit that included just the two of them. James moved about the city with a self-assurance that was both sexy and comfortable. The prospect of the magical days to come only added to the excitement of the moment. \n\nFor his part James was becoming further entranced, if that was even possible, by his traveling companion. She was observant of her surroundings, respectful of the culture and had a bright-eyed giddiness that was both infectious and seductive. James imagined her wandering the streets of Paris with her mother and aunt. Now, she was here as an adult, with her boss, for a project. There was no script to follow in the coming days, other than focusing on the primary goal at hand: their presentation to Caresse.\n\nJames kept stealing glances at Jasmine as they walked about Paris on this beautiful spring afternoon. The gray jeans hugged her lower curves in a sinful way, highlighting the perfect ass and thin, but muscular, thighs that lay below. Occasionally he would catch her in profile: a sweater covered breast jutting softly into space, her hip arcing outward against an urban backdrop, her curvy ass swaying as she strolled down a rue or boulevard. Her laugh made him giddy and her eyes danced with the excitement of the moment. She often spoke too softly for him to hear, but that gave him the excuse to lean in closer and gather in her scent as she repeated whatever it was that she'd said. It was like they were orbiting around one another for the entire day \u2013 circling in a slow and steady motion. \n\nAt lunch James laid out a plan.\n\n\"So, today is for fun. Tonight we'll have a working dinner and review our strategies for tomorrow's meeting.\" He immediately regretted sounding so clinical in his agenda.\n\n\"Oh my,\" Jasmine responded with a grimace. \"This sounds serious. Should I wear overalls and a hard hat,\" she joked.\n\nJames softened and welcomed her reproach. \"I'm sorry if I got a big hard-edged there. We'll still have a very nice dinner. I've got a reservation at a small bistro very close to our hotel. We'll have to talk a little business, though. We do have a big day tomorrow. But I really don't want to see you in overalls tonight,\" he grinned. \"Unless that's all you're wearing,\" he joked. \n\n\"Mmhmm. Well, good, because I didn't bring any. I only brought silky slinky Parisian things,\" she said, batting her eyes flirtatiously. \"Hey, you were the one who sent me off to the store with Missy to stock up on sartorial goodies. So you're gonna have to be flexible, Mister.\" She flashed that amazing smile of hers as she took a sip of white wine. James tingled with anticipation.\n\n\"Well, I think I can handle that. Sorry if I get a little overbearing. There is a lot riding on this trip. I'm doing my best to stay focused \u2013 and being with you makes it, well, hard.\"\n\nJames realized Jasmine could have jumped all over his wording. Instead she took another sip of wine and gave him a knowing smile over the rim of her glass. Her hair hung over her face as she looked at him to reply.\n\n\"Well, James. You've got to keep things in perspective. Our client is selling lingerie, not machine parts. We've got to be loose and real. We've got to come across as two people who understand their mission and their consumer.\" She put her glass down and played serious for a moment. \"But, yes, I truly do understand the importance of tomorrow and I am here as your assistant and will do, well, anything you want,\" she said seriously, but playfully as well.\n\n\"Anything?\" he asked with a raised eyebrow.\n\n\"Well, you'll just have to wait to find out,\" she teased.\n\nThey enjoyed the rest of the afternoon, wandering one of the great cities of the world, and returned to the hotel late in the afternoon, tired, but exhilarated. They had reservations for dinner at eight and a few hours to rest up and get ready. \n\n\"I'll be knocking on your door about 7:30, Jasmine. Get a nap and rest up. We're going to have a great evening,\" he stated with confidence. \n\n\"I'll be ready,\" she replied with a little twist of her hips; subtle, but certainly noticed by James. Their doors closed and each went about preparing for the night ahead.\n\nAt precisely 7:30 James knocked on Jasmine's door. The woman who answered completely took his breath away. Jasmine was dressed in a springy silk dress that hugged each and every curve of her upper body and flared and flounced loosely around her lower extremities. It was an intricate pattern of weaving deep colors and paid a compliment to her fair skin. The bodice swept down low under her full breasts, inviting anyone interested to savor the dark crease of her deep cleavage and the full thrust of the upper slopes of her glorious bust. Her hair was wildly tousled, her beautiful face made up to subtle perfection, and the hem of the dress stopped just below her knees, accenting her gorgeous calves and a pair of impossibly high heels, spiked and strapped. James's eyes drifted over his traveling companion and he couldn't help but smile broadly at the beauty before him.\n\n\"Oh my,\" was all he could utter at first. \"You clean up nice, young lady. My God, Jasmine. You're simply beautiful,\" he rambled. \"Thanks for not wearing overalls,\" he joked.\n\n\"Maybe next time, James.\" She did a quick twirl for approval, her dress flaring out for a brief glimpse of her toned legs. She stretched her long bare arms over James's shoulders and pulled him in for a hug. Her scent was intoxicating and he rested his hands lightly on her silk clad hips, amazed by the tautness of her slender physique. \n\n\"I'm so looking forward to tonight, James,\" she whispered in his ear. He pulled back, held her lightly and looked into the glistening eyes of this most stunning woman. He felt like he was floating on a cushion of warm air. \n\n\"Allons,\" James offered, holding his elbow out in a gentlemanly gesture. Jasmine grabbed a hold and they headed off into the Parisian night. \n\nJames had selected a lovely little bistro just a short walk from the hotel. He figured Jasmine might be wearing very high heels, as she was, and he didn't want to make her walk too far, nor did he want to drive or take a taxi. He wanted to walk with this beautiful woman on his arm. The next few days would be a whirlwind of activity, so they both looked forward to an evening just for themselves.\n\nDinner was superb, washed down with a beautiful 2005 Bandol, and the service was impeccable. As much as James enjoyed his meal, he enjoyed the beautiful woman who sat across from him even more. She looked so lovely in the soft candlelight and her eyes danced with the promise of the evening as it unfolded. They talked about the impending meeting with Caresse as they laughed and flirted and let their attraction for one another weave its web. \n\nJames had brought a shoulder bag with the small prints of the larger photos they would present the next day. They looked at the images and discussed their approach and who would say what as they gave their pitch. The photos they were looking at, of course, were of Jasmine wearing little and in the sexiest poses imaginable. Most were anonymously sexy, of course: a close-up of a soft bust or the shadow soaked curve of an exquisite derriere. No one would be the wiser. \n\nBut when they came to the one shot that showed Jasmine's face, they both hesitated. She looked at James for some reassurance that this was the right thing to do. ",
        "\"Jasmine, I said it the day we first looked at these and I will say it again. This shot is so right. It's sexy, but also girl-next-door, you might say. It's got a cool demeanor, but an underlying sensuality that is palpable and exactly the look we were going for. I love this shot. They are going to love it too. Trust me,\" he added reassuringly.\n\nThere would be no mistaking who the model was from the previous shots, once they saw this one. But Jasmine wasn't embarrassed anymore. She knew it was a great photo and she was confident enough in her body and looks that she knew that it conveyed what she had wanted from the very start: a sexual allure without pretense. \n\n\"Well, thank you, James. I may have been hesitant about using these photos before and about being the stand-in model in the first place. But I'm totally fine with it now and, to be quite honest, a little turned on knowing that I'm the model in the photographs we're presenting. It's kind of strange, but also very sexy and very arousing, in a strange way,\" she said, as she looked into James's eyes and took another sip of wine. \n\n\"You are a bit of an exhibitionist, aren't you,\" James stated; more a declaration of fact than a question. \n\nJasmine smiled shyly, looked James in the eye and nodded. \"I am,\" she admitted.\n\n\"Well, anything that turns you on is okay in my book,\" James offered.\n\n\"Mine too,\" she replied, tipping her glass in his direction.\n\n\"Well, enough business talk for one night. I think we're on the same page. And we can have a little planning session tomorrow at breakfast. Our meeting with them is at 11. Let's put work aside for now,\" he said smoothly. \n\nJasmine lightly wrapped her slender manicured fingers around the stem of her wine glass and James couldn't help but imagine them lightly wrapped around something more personal. His eyes gazed down into her deep cleavage and he felt his core stir with a desire to nuzzle into her flesh. He could never get tired of looking down into the intoxicating valley between her lovely soft breasts. He reached out and lightly stroked her hand. God, he wanted this woman.\n\n\"Jasmine, you look so incredibly beautiful tonight. I swear I am the luckiest man in Paris, without a doubt. Thank you for making this trip,\" he said softly as his fingers grazed her hand. His touch lit a fire in her belly as she heard James make his declaration.\n\n\"James, that is nice of you to say, but, believe me, the pleasure is all mine. I can't believe you invited me. I can't believe I'm here!\" she stated with a hint of incredulity. \"I have to say, there is something incredibly exciting and sexy about being in a city like Paris with my boss,\" she added with a subtle smile.\n\n\"And to think I could have been sitting here across from Paul,\" he laughed. \"What a crazy turn of events. Here's to Paul,\" he offered, raising his glass to hers.\n\nJames felt conflicted and he wondered if she had any idea how excited he was to be here with her. On the one hand he was drawn to Jasmine in such a basic and powerful way; there was no way he could shrug that feeling off and pretend it didn't exist. On the other, however, she was a young employee he'd really just met. He couldn't deny the incredible attraction he felt, but he also knew he had to exert some will power, considerable though it may need be, to resist the temptation sitting before him. Perhaps he'd feel different in a few days when the meetings in Paris were done and they were off to the south of France to enjoy a few days of fun and relaxation. But, for the moment, he was on guard and wary of letting it down. \n\nHe paid their bill and they strolled into the Parisian night, the air cool, but settled. She felt no hesitation about weaving her hand into the crook of his arm as they walked slowly back to the hotel. They'd only been in Paris a little over 36 hours, but they had established a level of trust and friendship that was palpable. James felt her generous breast press against his arm, and the combination of wine and womanly flesh made his head spin. He knew he'd need to maintain some distance, for at least another night or two, but her closeness and lovely floral scent made that difficult. \n\nThey laughed easily as they strolled up Rue de Buci, weaving through the young Parisians crowding the pedestrian only street on a Monday night. Their conversation kept returning to their meetings the next day and that kept a lid on the desire to just keep walking and find a small caf\u00e9 to while away the rest of the evening. They were both cognizant of the need for a good night's sleep as they enjoyed the slow walk back to the hotel. \n\nUpon returning they reached the spot in the hallway outside their rooms where they had kissed the night before. There was a bit of tension to the moment, but it was eased by Jasmine as she suggested they go into James's room to say goodnight. James opened his door, turned on the light and held the door for Jasmine to enter. She stood surveying the scene as James closed the door and stopped in the entry hall, unsure about going any further. He leaned against the wall directly across from a large full length mirror. She walked back and stood before him, inches away, her heels tall enough to bring her face in line with his. For the moment, no words were spoken.\n\nJames lifted his hand to her cheek, softly caressing her face before moving his fingers into the tangled tresses of her gorgeous hair. He pulled her face to his and their lips met in a tender good night kiss. And while the kiss started as last night's had, this one didn't end. There was an urgency to this kiss that hadn't been there the previous night. Jasmine's lips were open and inviting and James felt her tongue tentatively begin to explore. He answered with his own and they both heard each other whimper quietly and their breath catch with the excitement of their kiss and the moment at hand. \n\nJasmine pressed her body up against James and he knew she could feel his growing excitement. The sensation of her body pushing against his \u2013 her full breasts softly compressed against his chest, her thighs aligned with his \u2013 was too much to resist. His arousal was instantaneous. She leaned back to give his erection some space and looked down at the physical evidence of his excitement. Wearing boxers and pleated silk pants offered little resistance to his rigidity and his cock formed a thick tent pole in his expensive black slacks. Jasmine's smiled knowingly.\n\n\"Well, one disadvantage men have is hiding the fact that we're turned on,\" James offered in way of explanation.\n\n\"Hmm. Why would you want to hide that?\" Jasmine responded. \"Though it does look like the circus has come to town,\" she joked. They both laughed nervously. She gave the tip a little squeeze and James felt a bolt of energy rocket to his core. \"Such a beautiful tent,\" she said. Jasmine moved around to his side as he stayed put with his back to the wall. She put her hand on James chest and leaned in to whisper in his ear. \n\n\"Well, if it makes you feel any better, James, if you were to slide your hand inside my panties right now, there'd be no mistaking how excited I am too. None,\" she stated unequivocally. \"I am so very wet right now,\" she seethed into his ear. \"In fact, I'm dripping,\" she added softly.\n\n\"God, Jasmine. We can't,\" he moaned, trying to exert some modicum of will power. His brain was blood starved at this very moment, but he tried to think about what would happen if they let themselves go. There was too much at stake.\n\n\"Don't worry, James. I am going to go in a minute. I know if we let things get out of hand that we'd be up all night and in no shape for tomorrow. And it's too important for both of us,\" she reasoned. James felt relieved, but also, he couldn't deny, a little disappointed.\n\n\"But let me ask you a question, James. If I were to walk out the door right now, what would you do next?\" Her hand slid from his chest to his stomach, as she rubbed her palm back and forth just above his belt.\n\n\"You know what would happen, Jasmine. I'd find release,\" he replied. \"Immediately.\" Their lips met again \u2013 the longing between them palpable. \n\n\"Mmhmm. Well, I have a suggestion, James. I'm only going to stay for a couple more minutes, but I can't bear to leave you in such a state. So I'm going to take that hard cock out of your slacks and I'm going to touch you and stroke you until you explode, James \u2013 standing right here. And I'm only going to touch you, as much as I'd love to get down on my knees and suck you right now. But I want to watch you cum, James. And then I'll leave, knowing that you'll get a good night's sleep.\"\n\nJames couldn't believe his ears and his cock strained even harder against the fly of his pants at Jasmine's words. Taking his silence as assent and hearing his breathing quicken at the suggestion, Jasmine's hand found his belt buckle and pulled on leather. His right hand wandered down to caress her ass as his left hand wove into her hair. \n\n\"Does that suggestion meet with your approval?\" she whispered, as she slowly began to unbuckle his belt. \n\n\"Oh, yes!\" was all he could mutter.\n\nWith quick precision she unclasped his slacks and then grasped his zipper \u2013 and pulled \u2013 out and over the bulging cantilever of his rock hard dick. She moved in front of him for a moment to grab his pants and boxers with both hands, and she pulled down, his clothes sliding to a heap at his ankles.\n\nJasmine moved back to his right side, nestling in against him once again. His erection stood hard and proud, projecting out at an upward angle between the tails of his white cotton shirt. She lightly brought her hand to rest on his raging manhood and her slender manicured fingers encircled the girth of his thick shaft. James moaned from some deep seated place. \n\nHe glanced at the mirror a few feet across the hall and stared at his semi-naked form and Jasmine curled up against him with his stiff dick in her small hand. He's always had a fascination \u2013 a love, really \u2013 for the sight of a hard cock in a woman's hand. There was something so primal and enticing about that image.\n\n\"Mmmm, I knew you'd have a nice cock, James. I just had a feeling. And, my God, it's so hard,\" she cooed into his ear as she began to run her right hand along his length, just grazing his hardness with the softest touch. \"And so big.\"\n\n\"I love a soft touch, Jasmine,\" he begged; his voice a low whisper.\n\n\"Mmhmm. So I see,\" she replied. \"Or feel,\" she added.\n\nHer hand slid along the length of his shaft, curved underneath and reached down to cup his balls. She would come to find out how much he loved to have his balls gently caressed.\n\n\"Oh, James,\" she declared. \"I love a man who shaves. Your balls feel so silky smooth. Did you do that for me?\" she queried breathlessly.\n\n\"Yes,\" James hissed, as she kneaded his testicles with an expert touch. He was breathing hard now and he knew Jasmine was enjoying the power she held over him at that very moment. She slowly slid her hand back up his length, encircled his cockhead with her thumb and forefinger and began to lightly pull the thin outer skin back and forth against the steel hard flesh just below. Her grip was just below his bulbous crown and as she began to move her hand in a gentle stroke, slowly at first, their lips met again in a deep passionate kiss. \n\nThe intense arousal of the past few days was coming to a head, literally, and James felt like he was going to explode. He knew what they were doing was wrong on so many levels, but at that very moment, nothing had ever seemed more right. He needed to cum and Jasmine was going to lend him a hand, so to speak. \n\nSuddenly he felt her left hand slide between his legs and she cupped his aching balls as her right hand began to stroke at a faster tempo. Jasmine could feel his body tensing and knew from experience the signs of a male's impending orgasm. His body stiffened, his breathing became erratic, he moaned involuntarily and she felt him grabbing her ass and pulling her hair. \n\n\"Uhh, ohhh, Jasmine,\" he said with his eyes clenched shut. \"Oh, God, don't stop. Don't...\"\n\n\"Cum for me, James. I want to see you spurt. Open your eyes. Watch with me.\"\n\nHe opened his eyes to the incredible scene he was feeling, but now, also watching. Faster and faster her little hand pistoned up and down the tip of his shaft as she felt his balls begin to tense, followed by his whole body. And then with a cry from a higher register, followed by a deep seated groan, James felt his body spasm as a climax washed through his body like a giant wave.\n\n\"Yes, yes, yes, James!! Shoot for me!!\" \n\nShe felt his body pulse and his thick cock began to throb as it erupted like Vesuvius. The first jet of hot sperm burst out of his cock like a rocket, followed by two huge spurts that shot across the narrow hallway and landed in a crazy crisscross pattern of creamy white cum all over the mirror. The next few spurts landed short and shot this way and that as Jasmine's hand jerked right through James's orgasm. \n\nHis breathing was erratic as he held onto Jasmine for dear life. She felt his fluids empty and she slowed her pace, lightened her touch, and gradually let go of his spent cock as it continued to throb in the aftermath. \n\n\"Oh my God, Jasmine,\" was all he could whisper. He was rendered speechless. \n\nShe knelt down momentarily and took his semi-flaccid dick in her mouth, washing his head with her tongue and gathering any cum that may have oozed out toward the end. Cleaning him thoroughly, she stood up straight and moved in for a kiss. James obliged as he tasted his own semen in her mouth. \n\n\"Mmm, I love a man who's not afraid to taste his own cum,\" she said with certainty. \"Look at the mess you made on the mirror, James. What is the maid going to think?\" she joked. \"That was a very nice load, boss. I can see that it's been building up for quite some time.\"\n\n\"Oh, Jasmine. You have no idea,\" he replied. \"You are something else.\"\n\n\"Well, I should be going. Big day tomorrow,\" she said matter-of-factly. James objected.\n\n\"But, Jasmine. I need to return the favor. I can't just let you go.\"\n\n\"No, James. Best for me to go. Believe me, if we got started, we'd be here for hours. I said I would touch you and go \u2013 and that is what I'm going to do. I'll take care of myself. We'll explore more soon enough,\" she said with a smile of certainty.  \n\nShe straightened out her hair, adjusted her clothes and collected herself while James stood solidly against the wall, unable to move. His cock hung at half-mast and his pants lay in a heap at his feet. \n\n\"So, boss. See you at nine for breakfast?\" she asked in a cheery voice, not sounding like someone who had just jerked off her boss all over a hotel mirror. James pushed off the wall, stepped out of his wadded slacks, and walked a few steps to stand in front of her.\n\n\"Yes. Tomorrow. It's going to be a very interesting day, Jasmine.\" He placed his hand gently on her face and looked into her eyes. \"Thank you,\" he said simply.\n\n\"You're welcome, James. Good night.\" \n\n\"And good night to you, Jasmine. Sleep tight.\"\n\nShe gave him a soft promising kiss on the lips. And with that she turned and departed. And James slept like a baby that night. \n\nTuesday \u2013 Paris \n\nJasmine blinked as she opened her eyes to the French sunrise. This was her big day and she felt a surge of excitement course through her veins as the realization crept into her consciousness. Today was the presentation to Caresse. The thought awoke her immediately and she surveyed her surrounds \u2013 a lovely room in a romantic Parisian hotel. She arose, took a shower and dressed for a day she'd been thinking about constantly for more than a week. \n\nShe'd been vacillating on what to wear to the presentation. But as she dried off and observed herself in the mirror, she knew in her gut what the day called for. They were going to be meeting with Caresse, after all, so she felt she had to wear some of their lingerie for good luck. She chose a white lacy bra with subtle black trim and a sexy matching thong that she had worn the previous week. She remembered James ogling her in this particular combo at she stretched across the bare wood floor at the photo shoot. She liked the way the low-cut cups accentuated the swell of her breasts and the thong swept high on her hips before delving deeply to barely contain the gentle rise of her mons. \n\nShe donned both and turned before the mirror to see the result. Excellent, she thought to herself. She loved the way the thong divided and accented the soft globes of her cheeks. The whole ensemble showcased her body to perfection. She sat down at the vanity to apply her make-up and do her hair. She decided to keep it clean and simple and wanted her hair to fall in loose lustrous waves over her shoulders; studied, but as casual as possible. She slipped into a charcoal gray pencil skirt that hugged her ass and fell a little below her knees. The pinstripes accentuated the tight roundness of her curves and a dangerously long slit up the right side was a gesture toward naughtiness; an improper detail on a proper, but very tight, skirt. \n\nAs she buttoned the expensive white silk blouse \u2013 the one that Missy had insisted she include in her purchases \u2013 she smiled at the memory of her shopping spree. Buying all these expensive clothes had felt surreal at the time, but wearing them was now becoming a reality. She remembered Missy's soft touch and lingering eyes and she felt her nipples harden at the memory. She made herself a mental note to be sure and look up Missy when she returned to New York.\n\nShe left one more button than she should have undone at the top, knowing that bending over might afford a sexy view for someone before her \u2013 man or woman. She smiled at such a thought, but knew she had to be a little daring. This was, after all, a lingerie company they would be presenting to. And they'd be seeing plenty of her skin anyway in the photographs that would be unveiled later that morning. There was no need to be too shy about showing off her body, she decided.. \n\nShe put on the matching jacket, short enough to clearly display her curvy ass, and hung a colorful pendant around her neck, knowing that it dangled seductively in the early crease of her cleavage. She slipped into a pair of black high heels that suddenly gave her long lithe frame an aura of overt sexuality. As long as she didn't have to walk too far or wear them for too long, the stilettos would serve the purpose well \u2013 raising and highlighting her exquisite body for all to see. She donned a pair of two inch hoop earrings and finished with a subtle spray of her favorite perfume \u2013 French, of course. She stood before her full length mirror and cast a critical eye. She felt elegant with a subtle, yet very distinct, sense of sexiness. Professional with a sensuous flair, she thought to herself. Perfect. She took a deep breath, looked at herself one more time in the mirror and left the room \u2013 ready for the day to begin.\n\nJames was already in the dining room when she entered for breakfast. He beamed approvingly at her as she felt his eyes scan the length of her lithe body. \n\n\"Good morning, kind sir,\" she said sweetly.\n\n\"Bon jour, Jasmine. You look like you're ready to conquer the day,\" he stated emphatically. \"Gorgeous, just gorgeous.\"\n\n\"Well, thank you,\" she replied. Then, with a devilish twinkle in her eye, she continued. \"So, have you had a chance to reflect on last night?\"\n\nJames smiled at the comment and replied. \"Well, I have to hand it to you for last night.\" He hesitated before continuing. \"That was a stroke of genius,\" he smiled.\n\nThey both laughed at the innuendoes as the waiter approached and took their breakfast order. It was a big day for both and Jasmine felt both nervous and excited. James was dressed in black slacks, a stylish white shirt and a tightly checked sport coat that looked European in cut. His calm demeanor helped her settle down as she took a deep breath.",
        "James reviewed the day about to unfold. They'd be picked up in an hour and driven to the main office of Caresse. They'd arrive a little early to survey the conference room and get their storyboards set up on easels. The boards had already been shipped over and would be waiting for them. They had opted for using actual mounted photos instead of a digital slide show. James was old school and had a disdain for the slickness of Power Point. They'd meet with the executive committee and work through lunch. They'd have a little time to themselves late in the afternoon and then they had been invited to Pierre and Nicole's for dinner that evening. If everything went according to plan, it would be a full, fruitful and very productive day. \n\nAside from the first few comical references, nothing more was said about the previous night. Jasmine hoped she had done the right thing. The memory of James spurting cum all over the gilded mirror was an erotic image that she had a hard time shaking. She was a bit embarrassed in the light of day, but also turned on by the memory of his creamy seed splayed across the shiny glass surface. She took a sip of coffee to clear her head and bring her focus back to the matter at hand. \n\nAfter breakfast and a brief return to their rooms, they met at the hotel entrance and found their ride already sitting under the porte-cochere awaiting them. The dark blue Mercedes sedan brought them to Caresse's offices just off Boulevard Montparnasse in the 5th. They entered a nineteenth century five story building and rode a lift to the top floor. \n\nJasmine wasn't expecting to exit the elevator into such a modern office, but they stepped off into a light filled space that felt like a complete time warp from the historical feel of the building they had entered at street level. A pyramidal skylight filled the central office core with natural light and the white walls and steel gray carpeting allowed the light to refract and give a clear contemporary feel to the interior. Huge black and white photos of beautiful women in lingerie were located on a few of the large blank white walls. Ornate pendant lights adorned the high plaster ceiling and contrasted nicely with the slick modern feel of the space. \n\nA beautiful young Asian receptionist greeted them warmly and led them to a conference room close by. Their storyboards were in two large carrying cases and four easels had been placed at the front end of the room. They proceeded to set up and get ready for the meeting. Jasmine felt a little strange looking at her own image as they set up the boards, but she'd grown used to the fact that it was her body on display and hoped that fact didn't compromise their presentation. \n\nA very handsome man suddenly swept into the room and he and James greeted one another with warm welcomes. He was tall and lean with a young-looking angular face and sparkling brown eyes. He was wearing a three day old stubble and his short dark hair was disheveled in a remarkably sexy way. He was strikingly good looking and Jasmine knew she was smiling uncontrollably at him as he turned his gaze to her and smiled back.\n\n\"Bon jour, Jasmine, and welcome to Caresse,\" he said with a charming French accent. \"I am Pierre and it is my pleasure, our pleasure, to have you here.\"\n\nJasmine shook his hand and felt his warm grip encase her slender hand. She quivered at his touch as she looked into his shining eyes. 'This is one beautiful man', she thought to herself. His gaze seemed to bore a hole through her heart and straight into her gut. What was it about his eyes that made her tremble with such a deep-seated arousal? He held her gaze with an almost erotic composure. \n\n\"The pleasure is all mine, Pierre. I'm so excited to be here,\" she replied, doing her best to maintain her breathing and a steady sound to her voice. \n\nBefore they even had a chance to carry on the conversation a gorgeous young woman entered the room and approached them with a broad smile. She gave a warm hug and greeting to James and turned to be introduced to Jasmine.\n\n\"Jasmine, this is my wife, Nicole,\" Pierre said with a beaming smile.\n\nNicole was very slender and petite, but wore open-toed, high heeled sandals that added a good three inches to her height. Her hair was honey-colored and flowed long, loose and wild over her slim square shoulders. Her huge brown eyes twinkled with an inquisitive air. She wore a short violet dress with yellow flowers that flounced about her tight little body. Jasmine couldn't help but notice that her breasts were rather large for such a small frame, yet undoubtedly natural from the way they sat on her torso. She allowed herself one quick glance before shaking Nicole's slender hand and smiling back at her. A bolt of electricity coursed through her body as she looked at Nicole's beautiful face.\n\n\"Welcome, Jasmine. We are so glad you are here with James. We miss Paul, of course, but James has told us about all the good work you've done on our behalf and we thank you. We're so excited to see what you two have come up with.\" Her sexy accent was intoxicating to Jasmine. \n\nOthers then began to drift into the conference room and the greetings and introductions continued. Jasmine knew she'd never remember everyone's name, but she was struck by the friendly comfortable vibe of the group. Everyone was extremely attractive, as James had mentioned at dinner the previous week.\n\nAs about a dozen of them settled around the conference table, Pierre cleared his throat and gave a brief introduction before turning the floor over to James. James stood up and took command of the room. Jasmine felt safe, but ready to do her part. They had rehearsed and discussed the presentation and she had been dreaming of this very moment for over a week. \n\nJames gave an overview of the campaign and a brief history of their approach. Then, as planned, he turned to Jasmine to present the storyboards. She felt all the eyes in the room turn to her as she stood up; confident in her preparation and her appearance. She knew she looked good, and she had created much of what she was about to present, so the words flowed naturally. \n\nSoon she and James were engaged in a very natural repartee, back and forth, as they described one image after another \u2013 explaining how they felt Caresse must approach the American marketplace. The black and white images they displayed were exquisite and seemed to be striking a chord with their French audience. All the images were focused on a lovely lady in Caresse lingerie \u2013 anonymous and sexy. They could both see the smiles and nods of approval as they showed their photographs and underscored their image-based marketing approach. \n\nFinally, toward the end of the presentation, Jasmine unveiled their last image \u2013 the one of her looking over her shoulder into the mirror and the only one actually showing her face. There were a few gasps from the table as they realized that the images they'd been looking at up to this point were, in fact, Jasmine.\n\n\"We've shared a number of tag lines with you, but we saved what we think is the best for last,\" she said, as she unveiled the last photo. Along the top border it said 'Caresse' and along the bottom it said 'Next to Nothing'. \n\n\"We think that says it all,\" ended Jasmine, smiling and making eye contact with each person in the room. She paused and waited for a reaction.\n\n\"Mon Dieu,\" said someone at the table.\n\n\"Incroyable,\" stated Pierre in that sexy French accent of his. \"You have been a busy young lady, Jasmine. Not only are you working on the design of the campaign, you are modeling for it as well \u2013 and beautifully, I might add. I hope your boss is paying you well.\"\n\nJasmine had thought about what it would be like the moment the Caresse folks realized that she was, in fact, the model in all the photos. At times she had dreaded the thought. But now, in that moment, she felt empowered and strong. She could feel everyone around the table looking at her and assessing her body. She was particularly aroused by Pierre's direct and unflinching gaze; a look bordering on lust. 'God, I could get lost in those eyes,' she thought to herself. She looked at James who was beaming at her. She felt totally alive and aroused. \n\n\"Very well, thank you, Pierre,\" she replied, regaining her composure. \"Certainly the bonus of getting to come to Paris and participate in this presentation is a huge reward.\" She paused for effect. \"But I will remind him what you said that when we get back to New York,\" she added, to laughter around the table. \n\nShe looked around the room and felt an enormous surge of adrenaline, unlike anything she had ever experienced before. Or maybe it was some other body chemical soaring through her body. Whatever it was, she loved the feeling it gave her. She had not expected that this particular moment would be so incredibly arousing. \n\n\"Well, I'm not sure we have to go through an expensive shoot when we have such wonderful photographs as a starting point. We thank you for your effort. It is simply stunning,\" Pierre said, surrounded by smiles and nodding heads from those around the table. \n\nThey spent the next hour discussing the campaign, photos, locations, strategies, ad formats, and tag lines \u2013 all the normal matters to be discussed when the creative juices flow between client and designer. They had lunch at the conference table and worked into the early afternoon. \n\nJasmine was impressed by the energy in the office \u2013 a palpable creative force that covered a seething sensuality that lay just below \u2013 just as James had portrayed. She noticed how everyone was attractive in one way or another. The older employees seemed to have a mature wisdom that was settling and serene; the younger folks had an energy and sexual vibrancy that was tangible. She loved being a part of this and felt accepted and appreciated. \n\nThe hours sped by and at three o'clock they broke up the meeting. They would reconvene the next morning to finalize strategies and sign a contract extension. Jasmine noticed James making plans for later in the evening with Pierre. They shook hands and double kissed with everyone \u2013 smiles and congratulations all around \u2013 climbed on the elevator, and descended back down to the bustling street life of Paris. They were both beaming on the car ride back to the hotel. \n\n\"Well?\" James inquired with a grin.\n\n\"Oh, James. That was so wonderful and so exciting. Thank you for having faith in me,\" she replied.\n\n\"It's completely warranted, Jasmine. And this meeting turned out just as I thought it would. I'm glad you were able to see the fruits of your labor appreciated by the client. Fun stuff, no?\"\n\nJasmine nodded in agreement and reached for James's hand without thinking. He smiled as she entangled her fingers with his and she felt a surge of warmth throughout her entire body.\n\n\"Listen,\" he said as he squeezed her hand. \"I've arranged for you to use the spa when we return, Jasmine. You can use any of the services they have on their menu. So, relax and revive for the next few hours. I'll knock on your door about seven thirty and we'll head over to the Marais to have dinner at Pierre and Nicole's home. It will be a very casual evening, but, as always with the French, with a flair.\"\n\n\"Mmm, thank you, James. You do know how to treat a lady.\" She paused for a minute and lightly rubbed his hand as she continued. \"I'm really excited about tonight. I liked Pierre and Nicole. They seem like very nice people, very friendly. Very sexy too,\" she added, with a lascivious grin.\n\n\"Yes, it's going to be an interesting night,\" James responded as the car pulled up to the hotel. \"On many levels,\" he added. \n\nJames and Jasmine went their separate ways for the afternoon \u2013 James doing a little work in his room while Jasmine went to the spa. She received the full treatment, including a massage, and returned to her room relaxed and revived. \n\nShe settled into a leisurely bath and was so aroused and excited from the day that she couldn't help but touch her body. Her soapy hands slid over her full soft breasts, grazing her stiffened nipples and didn't stop moving until her fingers slipped into the slick smooth folds of her sex. She dipped a finger between her lips, but then thought better of getting carried away. There was a full night ahead and she wanted to have every ounce of sexual energy at her disposal. It felt so good to rub her freshly shaved labia in the warm soapy water, but she exhibited great restraint and dragged herself out of the bath and grabbed a towel. She observed her form in the mirror as she dried off, smiling at the fact that photos of her naked body had been the focus of attention by a group of strangers just a few hours earlier. She had felt them all undressing her with their eyes and she smiled at the fact that it had aroused her so. She finished drying off and got dressed.\n\nBy seven thirty she was ready and waiting for James. She had decided to wear a form-fitting maroon knit dress that left little to the imagination. It hugged her lovely rear, was snug along her taut thighs and flared slightly just below the knee, accentuated by a very long slit along the outside of the left thigh. The low-cut bodice cupped her full breasts perfectly and was held up by thin spaghetti straps stretched over her slender square shoulders. She had debated about wearing a bra \u2013 the dress didn't really need one \u2013 and in the end she decided to go without. The dress hung just a little more naturally that way and she also felt a little naughty without any support. She also debated about wearing a thong. The dress was so tight that it might be noticeable. But she found one of the tiny Caresse thongs that she'd brought along that seemed to hide itself along her soft curves in a way that couldn't be seen. Plus it seemed only fitting to wear a Caresse product while in the home of its founders. She donned some tall tan heels, a pearl necklace that looped strategically just above her cleavage and dangling antique earrings. She grabbed a light tan sweater that matched her shoes and felt ready for the Parisian night ahead. \n\nJames knocked on her door at precisely seven thirty and whistled his appreciation. She had grown used to his admiring glances and slowly turned under his lustful gaze.\n\n\"Magnifique,\" he announced. \"Our host and hostess will be most appreciative, I'm sure.\"\n\n\"Host and hostess? What makes you so sure?\" she inquired.\n\n\"Oh, just a hunch. I watched both of them ogling you today \u2013 and I emphasize both. They wanted to eat you right up, I could tell. So, I'm just warning you,\" he chided. \"And that makes three of us in that category,\" he added with a laugh. \"I hope there is enough of you to go around.\"\n\n\"Well, thanks for the warning. I'll try to behave myself,\" she responded. \"You better do the same, Mister,\" she teased.\n\n\"Not if I can help it,\" he replied with a smile. \n\nThe same driver was waiting for them as they exited the hotel and in minutes they were cruising along the Seine en route to the Rousseau's flat in the Marais. They pulled up in front of a narrow five story townhouse and were directed to the elevator hidden in an inner courtyard. It whisked them up to the top floor where Pierre and Nicole were waiting as they disembarked from the elevator.\n\nObligatory two cheek kisses and French pleasantries were exchanged. Jasmine was drawn in by Nicole's scent \u2013 a subtle mix of musk and vanilla that wafted into her nostrils and coiled in her belly. Pierre was dressed casually in designer jeans, dapper loafers and an expensive white linen shirt with several buttons undone. Nicole was again wearing a flouncy short blue dress and very high heels that accentuated her slender legs and gave her entire torso a sinful profile. The upper slopes of her breasts were on full display and the dress deftly accentuated her healthy bust line. \n\nJasmine could feel both of their hosts looking her up and down as she entered their apartment. She removed her sweater with both hands, the movement forcing her own bust forward; a gesture that was duly noted by both Pierre and Nicole and met with looks of admiration. The generous curves of Jasmine's breasts were gently supported by the bodice of her dress and the thin straps seemed to tease, like they were too thin to hold such soft fleshly treasures. No doubt her hosts would know that the braless curvature of her bosom was all her and totally natural. And she knew, at some point, her nipples might give her away.\n\nThe flat was large and light-filled, much like their offices, with a tasteful combination of French antiques and very contemporary furniture. The rooms were spacious and baroque moldings adorned the ceilings, walls, windows and doors. Each narrow floor to ceiling opening had a pair of French doors with a wrought iron balcony just outside. \n\nTheir hosts gestured for them to sit down on a low slung L-shaped black leather couch that sat on an ornate Persian rug. A chilled bottle of ros\u00e9 was open on the glass coffee table with four tall flutes awaiting a pour.\n\n\"Allow me to fill our glasses in celebration of a productive day and a burgeoning partnership,\" said Pierre as he filled all four glasses and handed them around. \n\n\"Salut,\" they chimed in as they imbibed and began a night of lively conversation. Jasmine found their hosts both fascinating and engaging. They touched on a wide variety of topics as they finished the ros\u00e9 and Pierre opened a lovely Burgundy, bringing in fresh goblets. Jasmine continued to look around the flat as they talked and Nicole noticed her surveying the premises. \n\n\"Jasmine, let me show you the rest of our home. Please,\" she said, standing and holding out her hand in a friendly gesture. Jasmine obliged and they left the men talking about EU politics. Nicole held Jasmine's hand as she gave her a tour of the large flat and it was obvious that some serious money had been spent on the interior. Everything was designed to a tee and the exquisite nature of each and every detail was indicative of the high level of craftsmanship that had gone into the construction. \n\nJasmine was particularly interested to see their bedroom as they wandered down an art-filled hallway and entered a high-ceilinged space with large windows with a view of a distant steeple. A large four poster bed sat against the long wall and a huge mirror was mounted on the wall to the side of the bed. She smiled as she thought about last night and allowed herself to think toward what might still lie ahead as the evening progressed.\n\n\"How nice that you were able to make this trip, Jasmine. I can see why James wanted to bring you along. Paul is a lovely and talented man, but I sensed on his last trip that James much preferred lovely young ladies...such as you.\" Jasmine tingled at the sound of Nicole's accent; it seemed so sexy and evocative. She liked that she was having a private moment with her hostess.\n\n\"Well, thank you, Nicole. Merci! I'm thrilled to be here and so excited to be meeting you. I can't tell you how wonderful it is for me to be in Paris, but also in your home. Most of us in the office never get to meet the clients we work for. This is all incredibly exciting for me.\"\n\n\"The pleasure is all ours. Truly.\" She paused before going on. \"So, pardon me for asking, Jasmine, but are you and James, umm, in a relationship?\" Nicole inquired carefully.\n\n\"Hmm. This may sound strange, but, I don't know yet. Let's just say that things are, well, evolving,\" she said in reply. \"I only met him for the first time about ten days ago, even though I've been with the agency for a few months.\"\n\n\"Mmhmm, I understand,\" Nicole replied with a knowing look. \"Well, I know he is quite a bit older than you, but I will say that the two of you make a lovely couple. I find him to be a very sexy man, I must say. And I don't need to tell you how beautiful you are, Jasmine. Your photographs are a testament to that. And such a lovely dress,\" she added as Jasmine felt Nicole's eyes sweep over her slender maroon clad body. ",
        "Nicole reached out and lightly ran her fingers along Jasmine's side, from just below her breast to the flair of her hip. She could feel her nipples stiffen and present themselves through the thin fabric of the dress. Jasmine knew the dress showcased her body: her large full breasts, her shapely torso and tightly toned ass. She could see the hunger in Nicole's eyes as she ogled her pokey nipples and sensed they were both beginning to feel a deepening erotic connection. Jasmine allowed her own gaze to caress Nicole's d\u00e9colletage without trying to hide the fact that she found the view alluring.\n\n\"So, tell me, Jasmine. Are you staying in Paris after tomorrow or returning to New York?\"\n\n\"Well, we are staying tomorrow night and then leaving the next morning for Nice. We'll stay there through the weekend and then return to New York on Monday.\"\n\n\"Nice? Really? Oh, how interesting,\" Nicole replied, suddenly very excited. \"You know, Pierre and I have a villa overlooking the sea just outside of St. Tropez. We are going down for the weekend too. You and James should come spend a night or two with us. I know you've probably already paid for all your accommodations in Nice, but we would love to show you that area. Our villa is very private, sits on the water, but has a lovely pool, a beautiful tiled patio to sunbathe,\" she said with a smile and another survey of Jasmine's sinuous curves. \"Oh, please. Talk to James and join us. We'd love for you to visit,\" she pleaded\n\nJasmine could tell this wasn't just a polite offer. And she had to admit, she was very enamored of Pierre and Nicole. They were a worldly and interesting couple, but also very warm, welcoming and incredibly sexy. And, as James had suggested, there was a lurking sensuality to the way they both talked and moved that was both alluring and inviting. Jasmine did love the thought of getting to know them better. The interest was most definitely mutual and the thought of a sexy overnight or two at their villa gave her a shiver.\n\n\"Well, I'll have to talk to James. He's made all the arrangements. I am truly along for the ride. And one of a lifetime, I must say. You should ask him, Nicole. I'm sure he'd have a hard time saying no to you,\" Jasmine said with a conspiratorial grin. \n\n\"Maybe. But I'll mention this idea to Pierre. I'm sure he'll insist. I don't know \u2013 we may even have to make it a stipulation in our contract. No deal unless the two of you come visit us for a couple nights in St. Tropez,\" she said with a warm laugh. She has the sexiest giggle, Jasmine thought to herself. She felt Nicole lightly brush her arm again as she flushed with arousal and a sudden and growing need; her stiffened nipples giving away her current state of mind. They rejoined the men and sat down to dinner. Nicole leaned over to whisper something in Pierre's ear and he smiled and nodded. \n\n\"Already done, mon cher. I found out James and Jasmine were going to be in Nice for a few days and I insisted they join us for an evening at least, if not two. James has tentatively agreed, but was going to talk to Jasmine first.\" All eyes turned on Jasmine as if it was all up to her.\n\n\"Fine by me,\" she replied, and they all raised their glasses in a toast full of warm laughter. She smiled at James and he winked at her in appreciation. \n\nThe dinner and wine were wonderful and the conversation flowed smoothly. Jasmine became aware of the barrage of sensual undertones as the evening unfolded. Subtle glances, light touches, a glimpse of skin, the profile of a curve, a sexy giggle and conversational innuendo all rolled together to create an erotically charged atmosphere \u2013 and all with a sexy French accent. \n\nThe evening whisked by and soon after dinner the foursome was seated once again on the leather sofa enjoying a very old cognac. Nicole was snuggled up against Pierre and the two looked very comfortable together. Her dress was riding up high, exposing her lean smooth thighs, yet she seemed not to notice, or not to care. All four were feeling a warm glow from several bottles of fine French wine and Jasmine found her mind wandering. She watched the rich young French couple with keen interest \u2013 wondering what they did in bed. She felt naughty thinking such thoughts, but she found herself fantasizing about how much she would love to watch them fuck \u2013 suddenly imagining Nicole riding Pierre, her lovely body impaling itself on his length, up and down, her soft breasts swaying and jiggling, while they watched in the mirror of their bedroom. She snapped out of her daydream state and brought herself back to the moment at hand. \n\nShe and James were seated closely, his arm on the back of the sofa, her thigh pressed tightly against his. While they weren't snuggled up quite as closely as their French hosts, their closeness still belied a purely business connection. Feeling emboldened by the wine and her sexy hosts she placed her hand on James's thigh as they talked. She saw Nicole glance at where she had laid her hand and they shared a look. Jasmine still felt a little awkward, but she also knew all of that was going to change in the coming days. She felt James begin to lightly rub her bare shoulder as they talked. \n\n\"So, Jasmine,\" Pierre asked, his piercing dark eyes now turning their focus to her. \"Have you done much modeling before? You seem to be a natural,\" he complimented. \n\n\"Not really. A bit here and there. A few boyfriends have played with a camera a time or two. Nothing serious,\" she answered, melting at the intensity of Pierre's gaze and the personal nature of his question. She loved the way his gaze slid up and down her body; clearly enjoying the view. She could tell he seemed to appreciate the way the natural shape of her breasts stretched her dress.\n\n\"I must say, that is hard to believe,\" Pierre continued in his sexy French accent. \"You have a great presence in front of the camera, as you do in real life. And you do our lingerie proud, I must say,\" he said, as he tipped his glass in her direction.  \n\n\"That is an understatement,\" added Nicole. \n\n\"Why, thank you,\" Jasmine responded modestly, shifting her legs so the slit slid further up her long lean thigh. She could see both of her hosts eyeing her leggy display and sculpted calves, accentuated by her sexy strapped heels. She felt emboldened by the sexual aura of her hosts, coupled with the slick wetness gathering between her legs. The alcohol was certainly adding fuel to the fire as well.\n\n\"And, James. Were you present during the shoot?\" Pierre queried as he sipped his cognac and eyed James over the rim of his snifter.\n\n\"I was. I wasn't going to miss that for the world,\" he laughed.\n\n\"I don't blame you, James,\" said Nicole. \"I would have loved to have watched that shoot,\" she added with a delicious smile. \n\nNicole leaned forward to place her glass on the coffee table, making sure that her low-cut dress hung down enough to give both of her guests an eyeful of her large soft hanging breasts, barely encased in a black bra with a frilly edge. Jasmine eyed them hungrily and shifted her gaze to Pierre who was eyeing her just as carefully. As Nicole placed her glass on the low table, she looked up to find both James and Jasmine eyeing her luscious bust. She smiled knowingly, satisfied that her leaning over had caught her guests' attention. She sat back and placed her hand high up on Pierre's denim-clad thigh. \n\n\"What can we bring when we come to visit on Friday?\" James asked. \n\n\"Nothing. Just yourselves,\" Pierre replied. \"Bathing suits are optional as well, so no need to bring any with you,\" he added with a broad grin. \"We have plenty of sunscreen for the sensitive places.\"\n\nPerhaps it was her competitive spirit or that the wine had further fueled her own desires, but Jasmine waited a few minutes before repaying Nicole for the lovely view she had afforded. She'd been cradling her snifter for some time and decided to lean forward to place it on the coffee table too. As she did so she curled her shoulders slightly, knowing that the bodice of her dress would hang down enough to afford a wonderful view of her own breasts. They might not see her nipples, but the shape and slope of her full soft bust would let her lovely guests surely know that she was not wearing a bra, as if there were any doubt. She glanced up quickly, as Nicole had, and found both Pierre and Nicole staring at her dark seductive cleavage with looks of unbridled lust in their beautiful eyes. She smiled at them both.\n\n\"Wonderful,\" said Jasmine in a soft whisper. \"We'll travel lightly, then, and look forward to sharing the sun.\"\n\nThe comment elicited a soft groan of approval from Pierre as he tightened his grip on Nicole and she slid her hand between his thighs. \n\nJames interrupted the gathering moment with a declaration.\n\n\"Well, we really should be going. We have to meet a client tomorrow,\" he joked. \"And we need to be in top form. So, we thank you for the wonderful dinner, exquisite wine and fine company.\"\n\nJasmine was a bit relieved that James had broken the spell she was under, but a bit disappointed at the same time. She could tell from the body language and conversation that staying much longer might have led down a path they weren't quite ready for. 'Maybe by Saturday,' she thought to herself, 'in St. Tropez.' She shivered at the naughty thoughts that raced through her head. \n\nThey each embraced their hosts, much friendlier and less formal than when they had arrived, and made their way down the elevator and back to the car that was waiting right where they had been dropped off. They were a block from their hotel when James told the driver to pull over and let them out. They climbed out in front of a small caf\u00e9 and the driver departed.\n\n\"I thought we should have a night-cap, even though we probably don't need one,\" James offered.\n\nIt was a warm Paris evening, so they sat at a small table for two on the corner; perfect for watching the world go by. They each ordered a glass of wine and James toasted once they arrived. \n\n\"To an amazing day,\" he offered.\n\n\"And night,\" she said. \"And to what's left of it too,\" she added with a twinkle in her eye.\n\n\"Indeed,\" James agreed. \n\n\"So, I'm curious, James. Where are things headed here? I know you're a most eligible bachelor back home and have many women at your disposal. Am I a passing convenience on this Parisian jaunt or is there something else at work here?\" Jasmine had a way of being direct when the situation warranted and this was one of those times. James eyed her carefully as he took a sip of his wine and responded.\n\n\"Jasmine, I won't deny that I've enjoyed the company of a few women since my divorce. But I will tell you, unequivocally, that I have never been so drawn to a woman as I am to you. You're bright, you're kind, you're creative, you're spirited...\" He paused. \"And you are, without a doubt, one of the most beautiful women, if not the most beautiful, I have ever laid my eyes on.\" Jasmine blushed a little and cast her eyes down in embarrassment. This was not exactly where she'd been expecting the conversation to go. \n\n\"So, to answer your question, I'm not sure either of us knows where this is going yet. But I assure you that, whatever it is and wherever it is going, it will continue once we're back on our home turf. I hope you trust me when I tell you this. I'm totally enraptured by you.\" He lightly touched her hands as he made his point.\n\n\"Mmm. Thank you, James. The feeling is mutual. And I must say, I'm glad we're taking it slow and steady. It's so much more, oh, I don't know...fun and erotic this way,\" she said, holding her glass out to clink another toast.\n\n\"Oh, I agree. And tonight, of course, it's my turn to return last night's favor. Tonight you play by my rules,\" he stated with an air of finality.\n\n\"Well, I suppose I can live with that...as long as your rules are fun,\" she chided. \"What do you have in mind, pray tell?\"\n\n\"You set the tone last night. So I will follow suit. Tonight we'll go to your room and tonight I'm going to keep my clothes on,\" he said.\n\n\"Ohhhh, I'm not sure I like these rules so far,\" she joked. James ignored her and continued.\n\n\"And tonight I get to touch you, Jasmine. Tonight I get to explore every inch of your exquisite body. I plan to leave you in much the same state of bliss as you left me last night. And I can't wait,\" he suddenly exclaimed. \"So drink up and let's go.\" \n\nJasmine laughed and took the last swig of her wine. James did the same, dropped a 20 euro note and a few coins on the table and held out his elbow as she stood up. She cradled his bicep and pressed her warm body against his as they walked the short block to their hotel. \n\nAs Jasmine slid her key card into the slot, James murmured to leave the door ajar \u2013 he'd be right there. Jasmine freshened up as James slid quickly into his own room and reappeared in a few minutes holding several things in his hand. Jasmine watched with interest as he set up a small wireless speaker unit on the shelf above the headboard, placed open bottles of wine and water on the bedside table, along with a lotion of some sort. \n\n\"You're very prepared. Quite the Boy Scout, aren't you?\" she joked.\n\n\"Always,\" he replied. He queued up some music on his IPhone and as a throbbing bass beat and electronic flourishes filled her room, James sidled up to Jasmine and stood before her, cupping her cheek and looking into her eyes.\n\n\"So beautiful,\" he exclaimed, before leaning in for a soft kiss. He gently palmed the side of her face as their lips met \u2013 barely touching. He leaned back to look at her. \"First order of business. Hair up,\" he instructed. \n\nJasmine smiled and saluted in jest. \"Yes sir,\" she replied, as she coiled her long mahogany tresses and clipped them casually above her head, strands falling to either side. \"I assume there is a method to your madness.\"\n\n\"Most definitely,\" he said, as he moved to stand behind her. \"This way I have much better access to your ears and lovely neck,\" he whispered, as he placed a soft kiss on her left shoulder and nibbled his way up to her ear. He could feel her squirm and arch her back, moving her round bottom against his body. \"Because my first goal,\" he continued as he nibbled her earlobe, \"is to find out where all your sensitive spots are.\" \n\n\"Of which there are many,\" she cooed sexily as James wrapped his arms around her body and lightly placed his palms on the gentle rise of her belly. The feel of her soft slender body made his erection soar and he knew she could now feel his rigid thickness against the deep cleft of her ass. \n\n\"Well, I think we can put ears and neck on the top of the list,\" he whispered softly. \"I'm going to bet your back is one long sensitive spot too,\" he continued. \"And, of course, that soft spot on your inner thigh just above the stocking line. Maybe just behind your knees. Those are surely on the list,\" he added. Jasmine pressed her ass back against his rock hard root and turned her head to kiss him. Their kisses were getting a bit more desperate now and Jasmine realized that James had barely touched her, yet she was already soaking wet; her tiny thong drenched with arousal. \n\n\"Yesss,\" she panted. \"All of them.\"\n\n\"But, if I was a betting man,\" he said, slowly beginning to slide the right spaghetti strap toward the edge of her shoulder, \"I'd wager big money that one place that is super sensitive is your...\" He paused and kissed his way up to her earlobe again and whispered, \"...nipple.\"\n\n\"Mmhmm. Good guess. Are you going to lick them, James? Will you suck my nipples? Please?\" she begged breathlessly. Her hands began to reach behind to grab James's erection, now tenting his pants at an awkward angle. \n\n\"Now, now. Hands off, young lady.\" Jasmine pouted as she released her grip on his raging erection and placed her hands over his as he caressed her body. James leaned down over her shoulder, leering down into her heaving cleavage, now more exposed with the right strap hanging mid-arm.\n\n\"What a wonderful view,\" he stated, looking down at the swell of the upper slopes of her glorious breasts. \"I've never seen anything so completely intoxicating,\" he continued. He gathered her between his arms and squeezed, forcing her breasts to bulge and ooze above the bodice line that barely contained her bust. \n\n\"So did you enjoy leaning over for Pierre and Nicole earlier?\" he asked. \"I saw that move and saw their reaction as well. They were entranced, as am I.\" James watched the full flesh of her breasts rise up and down as she breathed deeply with gathering excitement; her skin flush with arousal. \n\n\"I did enjoy it, James. I was so turned on when we were on their sofa. You got us up to leave just in time. I was going to get us into trouble,\" she laughed. \n\n\"I know you were. I was your knight in shining armor,\" he joked. \"But next time you're on your own. It could be a different story when we visit them in St. Tropez.\"\n\n\"You think so? God, I would love that, so much. Mmm, they're such a sexy couple. I wanted to watch them.\"\n\n\"Mmhmm. Me too. What do you want to watch, Jasmine? Do you want to watch Nicole slide out of her clothes? She has such a sexy body. Maybe she'd pull Pierre's cock out of his pants and suck it as we watched?\" James had moved his hands to Jasmine's shoulders and was kneading her neck as he leaned back toward her left ear; his hardness still planted firmly against her pliant ass.\n\n\"Yes, oh God, James! How did you know? I do want to watch them,\" she admitted. \"I kept thinking about them having sex \u2013 right in front of us.\" James put his mouth against her ear again.\n\n\"Do you want to watch them...fuck?\" he asked, with an accent on the \"k\". He bit the left strap in his teeth and edged it off her shoulder. Now, with both straps down, her bodice held onto her jutting bosom by sheer friction. She waited for James to remove it and expose her breasts. She pushed her chest forward, hoping he'd bare her tits once and for all. \n\n\"Oh, James. Yes. But they're our client. I shouldn't think this way. It's...\"\n\n\"Hot,\" James finished her sentence. \"Way hot. And I bet you'd like them to watch you too, wouldn't you, Jasmine?\" Jasmine's breathing was labored now and her body was squirming for contact. \"Would you like to strip for them? Show them your lovely naked body so they can drool over you? Can you imagine seeing Pierre get hard as you unveil your body? And just think how wet Nicole would be,\" he continued. \"Can you just imagine Nicole stroking Pierre's big hard cock as they both leer at your naked body, Jasmine? I bet you'd love to turn them on.\" James was on a roll.\n\n\"Mmm, yes. I do want them to see me, James. I want them to want me \u2013 just like I want you to want me,\" she implored. James knew the feel of his erection against her backside made it quite evident how much he wanted her. There was no question. \n\n\"Did you think of what they must do in bed? Would you like to join them, Jasmine? Would you like to get in the middle of that?\"\n\n\"Oh, fuck! Yes, James. I do. I would,\" she replied. \"When Nicole showed me their bedroom, all I could think about was them fucking in that bed,\" she confessed. \"I was so turned on with the way she was showing me their most private space.\"\n\nHe lightly grasped the top of her dress now and pulled it down, slowly \u2013 finally exposing her protruding tits, so soft, round and supple. Her nipples were distended and pointed high and proud above her perfect bosom. \n\n\"God! What perfection?\" he seethed. Her breasts were so full and soft for such a slender girl. James cupped each in the palm of his hand, feeling their supple fleshy weight. His thumb and forefinger came together to lightly pinch her rock hard nipples and she groaned at the pressure. Then James licked his middle fingers, one at a time, and returned them to lightly graze and circle her areola. Both of them looked down at her distended nipples, glistening lightly with James's saliva. ",
        "\"So I guess we can add nipples to your list of sensitive spots. Yes?\"\n\n\"Mmhmm. Yes, James. My breasts are so sensitive \u2013 and especially my nipples. Mmm \u2013 I love your touch,\" she answered. \"God, I'm so turned on,\" she hissed.\n\n\"Take your dress off for me,\" James instructed. Without hesitation Jasmine walked a few feet away and faced away from him as she began to slide the dress down her long lean body. She bent forward to do so, shimmying a bit as she pushed the dress off over her hips; her large natural breasts hanging down, dangling and jiggling as she moved. James leaned back on his elbows, his erection spearing the pleats of his expensive wool slacks. Jasmine loved seeing a man harden at the sight of her body; that never failed to turn her on. She took her time removing the dress, sliding it slowly over her luscious ass as she looked over her shoulder at James with a seductive glare. She then turned to face James in just her tiny black thong and heels. James whistled under his breath. \n\n\"You're a goddess,\" he stated. \"Come here,\" he demanded as he sat back up on the edge of the bed. Jasmine edged forward and stood between his spread legs, her soft bobbling breasts protruding proudly just inches away from his face. He looked at her fleshly perfection and gently blew on each pointed tip.\n\nHer areolae were lovely circles of smooth pink flesh, punctuated by the dimpled nub of her nipples, stiffened in arousal. James looked up at her beautiful face as she placed her hand on his head. He stuck his tongue out as he looked into her eyes and, with the very tip, lightly grazed her left nipple; spiraling it with soft slow licks. He moved to her right nipple and repeated his oral caress. Pulling back, he blew softly against her hard tip and then opened his mouth in a circle before descending over her entire areola. He sucked, gently, and pulled her nipple into his mouth where his tongue greeted her again. \n\n\"Oh, James,\" Jasmine whispered in breathless desperation. \"Suck me,\" she begged. \"Suck my nipples.\" \n\nJames continued, lifting each fleshy orb in his hand to feed himself \u2013 one, then the other \u2013 back and forth to each gloriously soft tit. He moaned his appreciation and Jasmine felt the vibration shoot directly from her nipples to somewhere deep down inside her belly. He alternated between eating her nipples like a starving vagrant to lightly licking the tip of each nipple with a feathery touch. He had a feeling that Jasmine was a woman who liked variety in all things \u2013 and he made a mental note to self \u2013 keep it varied and interesting. \n\nHis hands left her breasts and gathered behind her legs. He continued to suck and lick her nipples, then buried his head in the very cleavage he had ached for every time he'd seen Jasmine in the past week or so. His hands slid up and down her back and legs, then cradled the soft tight cheeks of her bottom in his palms, kneading and squeezing her derriere. He smiled at the thought \u2013 when in France...\n\nHe reached down as he continued to dine on her breasts, and wrapped his hands around her legs, sliding his hands up slowly, his fingers turned back so they reached the inside of her thighs from behind. Jasmine's breathing was erratic and punctuated by occasional little moans of pleasure. His hands slid higher and higher, until his fingertips were an inch from her soaking wet core. He could feel how moist she was without touching her \u2013 feeling the warm heat emanating from her pussy. He didn't touch her yet, though he wanted to. He pulled his hands back out and upwards, grabbing her sleek cheeks and spreading them as he lightly bit on Jasmine's nipple, not sure if she would like this, or not. She gasped in appreciation, and at that moment he let go of her cheek and slapped it hard, then gripped it tight before spanking the other cheek.\n\n\"Oh, fuck, James. What are you doing to me?\" she crowed. He grabbed and kneaded her bottom with abandon; moaning as he spanked her ass again and again. Jasmine groaned with deep-seated arousal. James leaned down and undid the ankle strap of each heel. She removed them, her breasts quivering as she stepped to the floor and stood barefoot in front of her lover, only a tiny black thong hiding her nakedness.\n\n\"Lay down on the bed, Jasmine,\" James directed. \"Face down.\" \n\nJames pulled the bedspread back to expose just the expensive white cotton sheet. She obliged without a sound, crawling to the middle of the bed, where she sprawled out and put her hands above her head. James looked down at her sensuous form: her full mane of tangled mahogany hair, her long lean back, the beautiful pert rise of her bottom, split deftly with a tiny triangle of black satin, and her sculpted dancer legs. She stretched and arched her back like a feline in heat as James sat down on the foot of the bed.\n\n\"Take your panties off,\" he directed. She lifted her ass into the air, accentuating her dangerous curves, hooked her thumbs on either side of her thong, and slid it down, ever so slowly, over the rise of her cute bottom, exposing the dark crease of her sex in the dim light of the moment. She looked seductively over her shoulder as her thong made its slow descent. James grabbed a pillow and slid it under her tummy, helping to keep her ass in the air just a little. He grabbed the tiny thong to assist and slid it down her legs and threw it on a nearby chair. Jasmine now lay naked before him; her long lean naked body at his disposal.\n\nJames leaned down to whisper in her ear. \"I want you to just relax, Jasmine. Let me touch you and give you pleasure. There will be plenty of time this week for other things. Tonight, let me explore your beautiful body. Just lay there and enjoy,\" James stated with finality. Jasmine felt a wave of submission wash over her. She took a deep breath and let James use his gentle touch.\n\nHe knelt to her side and savored the view of the beautiful lady on the bed before him. James laid his hands on her back and began to move them in long sweeping motions \u2013 down her legs to her feet, up her back to her neck and head \u2013 his fingertips grazing over her smooth flesh. He marveled at the silky feel of her skin and the way her body reacted subtly to his weaving touch. Her back was long, lean and muscular; a dancer's body. He alternated his fluid touches with pauses to massage and squeeze her supple flesh. \n\nThe music was pulsing nicely and he found his fingers playing her body like an instrument. Years at the guitar had trained him to be able to do different things with each hand. While one hand was kneading deep tissue, the other might be rhythmically caressing to the beat of the bass line. James could feel her relaxing as he touched her and relished this moment of feeling every inch of her amazing body. \n\nFor a second he wished he was naked and able to take this connection where it was meant to go. But he knew there'd be time for that and he pulled back within himself, ready to focus all his sexual energy on this lovely woman, her pleasure and the sense of touch. He knew the approach would pay dividends \u2013 just as Jasmine had known the previous night. He was enraptured in the eroticism of the moment.\n\nJames leaned up to grab the massage lotion he had brought in with him. He placed it on the bed next to him and squirted a huge glob of cream onto his palm. He mixed it between his palms, straddled Jasmine's backside and placed them on her upper back. He began to massage her deeply, using his hands and fingers to knead her shoulders as he leaned down to apply some pressure. He continued to move his hands to the beat of the music; maintaining a subtle, but powerful, connection to the sound cascading down on them both.\n\nJames spread his hands wide and worked his way down Jasmine's back, his thumbs guided by her spine and his fingers curved around the sides of her torso. He slid further down and continued to work the lotion into Jasmine's skin. He added a large dollop to his palms and went back to working his way down her spine, arriving slowly at the small of her back. He gazed down at her sexy curve as it rose to the perfect globes of her soft round backside. \n\nJames shifted and placed his knee between Jasmine's thighs, tucking his lower thigh tight up between her legs. He returned to her lower back, applying the pressure of gravity along with deeply kneading the center with this thumbs, still using the tempo of the music as a timing guide. He pushed down and back, and heard Jasmine groan under her breath as he felt the steamy furnace of her pussy grind against his thigh. She was getting very turned on and James felt the incredibly erotic power of his touch as she responded to each move.\n\nJames applied another huge dollop of lotion to his palms and moved back slightly to look down at her gorgeous ass, slightly risen by the pillow under her tummy. He spread his fingers wide and began to massage and knead the soft pliant flesh of her ass cheeks. The light was dim, but Jasmine's legs were spread slightly and he could make out the beautiful rounded profile of her pussy lips framed by the gap between her thighs. He spread her cheeks with his greasy fingers and could now smell her arousal distinctly, her sex open and engorged. \n\nAs James kneaded her buttocks, he could hear the sticky sound of her wet lips separating. He was enthralled by the sound and smell of her sex and gazed with lust at the perfect puckered starfish of her anus \u2013 so beautiful. His thumbs oozed down along her outer labia, digging deep, as his other fingers continued to caress her greasy cheeks. \n\nJames applied one more large glob of lotion and moved down to massage Jasmine's thighs. With long upward strokes and soft downward sweeps, he slid his fingers over her slippery flesh. Each slide up her inner thighs brought him closer and closer to her gaping lips. He grazed her labia and teased her lovely inner lips, but restrained from dipping his fingers too deep into her wet pink treasure. James also let his slippery fingertips glide gently over Jasmine's asshole, applying just a little pressure to see how she might react. He heard her moan softly and lift her ass into the air \u2013 a welcoming sign.\n\n\"Oh, God, that feels so good, James. Where did you learn to touch a woman like this?\" she queried.\n\n\"Just comes naturally, I guess. Not too hard when you're touching someone so beautiful, however. You inspire me,\" he stated softly.\n\nJasmine was beginning to move her body to meet James's touch. He knew it was almost time to have her turn over. But for a few more minutes he relished unfettered access to her glorious bottom. He applied one more generous dollop of cream and used it to cover every inch of her back \u2013 from her shoulders to her toes and everything in between, using wild sweeps and kneading squeezes as he touched Jasmine deeply.\n\nAnd just as he was finishing up on her sweet rear, he slid his right hand down between her legs. She raised her hips instinctively, giving him full access to her sex. James curved his palm and cupped the entire length of her baby soft pussy, feeling the dripping heat, his fingertips curled all the way to her bare mound. Ever so slowly, he drew his hand along the length of her soft wet flesh. His middle finger dipped inside her and slid along through her buttery folds, now disappearing deep into her hot slick hole.\n\nJasmine groaned and squirmed under his touch. He continued to drag his finger toward the back of her pussy, across her perineum, until his digit reached her asshole and he slid the tip in up to the first digit. He did so with some trepidation, wondering how Jasmine might react. A deep groan and a rising of her pelvis told him everything he needed to know. \n\n\"Oh, James,\" she seethed, as he moved the well lubricated tip in and out of her darkest hole. \n\nHe leaned down, his finger still barely in her ass, and whispered in her ear.\n\n\"Time to turn over, Jasmine,\" he said as he slowly withdrew his finger. \"There will be plenty of time to explore your lovely bottom later,\" he said.\n\n\"Mmm. Promise?\" she mumbled.\n\n\"Oh, yes, Jasmine. Definitely.\"\n\nShe turned over with some reluctance, but she knew he was serious when he said that he'd explore her later. He'd better, she thought to herself. She loved anal play, as he would eventually find out. \n\nJames watched as she turned over, adjusted the pillows, and laid down on her back. Her breasts jiggled seductively as she bounced around on the bed and the image kept James rock hard as he got ready to explore her front side. Her breasts were so big and soft for such a thin slender frame; her nipples still distended and puckered proudly with arousal.\n\nShe settled down and James gazed at her admiringly before he placed his hands on her again. She had a contented smile on her face, her eyes closed and her arms by her sides. The soft flow of her curves was artistic in its beauty. Her legs were sculpted and smooth. Her breasts, even though she was on her back, were round, proud and full. Her bare pubis rose up from her taut tummy and tucked tightly back down between her legs, framed by the protrusion of her slender hip bones. She was an intoxicating vision of sexual wonder. He leaned down to whisper in her ear.\n\n\"So lovely, Jasmine. You are so fucking sexy,\" he seethed.\n\nJasmine smiled. James kissed his way along her cheek until their lips met in an innocent kiss \u2013 its innocence belied by the fact that Jasmine was laying totally nude in front of her boss. Their lips softened and their tongues probed. The level of excitement ratcheted up precipitously as the kiss intensified and James began to run his right hand up and down Jasmine's body again; touching what his eyes had just visually caressed. \n\nHe broke the kiss and greased his palms with a generous amount of lotion as he continued his frontal approach. His delicate touch slid up to her breasts and James could feel Jasmine respond as he gently squeezed and fondled her natural goodness with slippery hands. She moaned softly as his fingertips circled her areola and lightly pinched and pulled on her sensitive nipples with his slippery fingertips. The music playing was electronic and ethereal and created an otherworldly atmosphere for the gentle exploration taking place. \n\nJames knew where his next stop would be as his hand slid down the lower slope of her breast and inched down her stomach, over her belly button, where he flattened his hand out on her flesh. Further down he went, sliding over the prominent rise of her mons until his hand descended far enough for him to palm the fully engorged lips of her sex. He didn't probe; he just applied gentle pressure on the silky wetness of her pubis as her breathing laid testament to the state of her arousal. \n\nThen, leaving his hand still for the moment, he leaned down to kiss her again. He nibbled his way down Jasmine's jawline and along her slender neck, before ascending the soft slope of her breast. He could hear, and feel, Jasmine's body clench as his mouth found her tip. As he began to suck on her creamy nipple, first one, then the other, he began to move his right hand. He could feel her hot slippery crease luring him in, opening to his probing fingers.\n\n\"Oh, James,\" she seethed. \"Suck me. Touch me,\" she pleaded.\n\nJames found himself moaning as he licked and sucked her gorgeous nipples, taking breaks to kiss the edible flesh of her breasts and nuzzle the delicious valley of her cleavage. His middle finger barely probed until he found Jasmine's opening. With little fanfare his finger slid, deeply and slowly, into her tight slick hole. The only sound other than the music was Jasmine, groaning with delight. She was so warm and slippery, her inner flesh smooth and silky to the touch. \n\nHe had had every intention of massaging her front with lotion, as he had her back. But the moment at hand was rising with such intensity and James could sense a burning need from Jasmine. He shouldn't stop; he was on the doorstep of an amazing moment. \n\nJames nestled in, parallel against her supine form, and pressed his raging erection against her hip so she could feel how hard and aroused he really was. He gathered her juices all over his finger and then slowly retreated, sliding up until he could feel the tiny bud of her center. His lips left her breast, glistening in the dim light with saliva, and he kissed his way north back to her mouth. \n\nBut on returning, he didn't kiss her. He placed his mouth just inches from hers, looked into her eyes, burning with need and passion at that very moment, and began to touch her clit. He started slowly, finding that perfect groove just to the side of her clitoris, but nestled into the inner folds of her womanhood. He watched her, gauging her reaction to the subtlest change in direction or rhythm. His antennae were on high alert, sensing each sound she made and each movement, voluntary or not, that she made as his finger strummed her sex like she was a finely tuned instrument. \n\nThe music had shifted and the nameless song had a heavy pounding beat with multitudes of intricate rhythmic layers. James watched in awe as Jasmine succumbed to the frisson of his flying fingers, now in the groove and rubbing with an unrelenting passion and desire. He looked down briefly to see her breasts, jiggling tightly from his manual assault. Her hips lifted up off the bed to meet his touch; her breathing was erratic with arousal. \n\nShe was rising toward orgasm, but James felt she wasn't yet at the tipping point. He decided to slide his fingers back inside her So with a long slow curving motion, he slid his middle finger down through her slippery folds and curled inside her in one steady motion. He pushed his finger in as deep as it would go and rhythmically massaged her g-spot to the beat of the kick drum. Then, to keep things varied and interesting, he withdrew his finger almost all the way, and pushed it back inside. Jasmine grunted her approval.\n\nShe was tight, but much wetter and looser now, so James added his ring finger to the party and began to finger fuck Jasmine with both fingers at a steady pace that grew with tempo and intensity. Soon his fingers were slamming in and out of her juicy cunt at a rapid pace. The sound of the pads of his hand slapping against her pussy flesh, making that juicy sound that only fingers can produce, was soon echoing in the hotel room. The tempo and slapping sound made an interesting counterpoint to the steady beat of the music. Jasmine groaned loudly and her shifting body bore testament to the magic James was working with his hand. \n\nAnd then, in another reverse of movement, James pulled up against Jasmine's body and slipped his hand out from inside, again finding the sensitive nexus of her clitoris. His left hand slid under the cleft of her ass and a few fingers re-entered her sopping wet hole from behind as his other hand went back to strumming Jasmine's clit. Her arousal was complete and inching toward orgasm.\n\nJames could tell it was time to halt the games and find the groove that he knew would bring her climax. He again found that slippery little pocket to the side of her clit and nestled in to do his good work. He could sense that Jasmine was on the verge and that now was the time to rub for all he was worth. This position brought his face in line with her heaving breasts. To maximize the moment, James began to lick and suck on Jasmine's right nipple as his two right hand fingers found that magic groove that would lead to the point of no return. \n\nHe started out fast, and then went faster, then faster still. Between the wiggling fingers of his other hand and his tongue flicking her rock hard nipples, James found his groove. He could feel that Jasmine was now totally and ultimately attuned to his flying fingers as he rubbed her with a tenacity and rapid rhythm that soon had Jasmine lifting her hips to meet his digital assault. ",
        "\"Mmmphf, yes. Oh, James, don't stop. Keep it, unfff, yes, go...oh fuck, oh fuck...\"\n\nHe sensed the early stages of climax approaching as Jasmine's body began to spasm slightly and her breathing became erratic and unsteady, punctuated by nonsensical words that were clear indicators of her impending eruption. Her hips rose higher, as did her vocal response, and in a matter of seconds Jasmine exploded with an epic orgasm. An animalistic cry of pleasure came from some deep dark place as suddenly James felt Jasmine's tight wet pussy clench and pulse involuntarily \u2013 her orgasm strong and direct. Her body spasmed and jerked wildly with release and the sounds of his fingers rapidly rubbing her fleshy wet groove were a testament to her juicy climax.\n\nJames eased her back down, slowing his digital stimulation until he felt Jasmine relax and release his fingers from the clutches of her pussy. James gave a last light massage of Jasmine's sopping wet sex before slowly extracting and removing his fingers from her inner sanctum. He felt her body go soft and he could sense her smiling, even though he couldn't see her in the dim light.\n\n\"Oh, James,\" Jasmine said, finally able to speak. \"That was so amazing. Thank you,\" she said, adding a simple peck to his cheek. \n\n\"You're more than welcome, but the time got away from me, Jasmine, so I'm going to depart and leave you in this lovely state of bliss,\" he replied. \n\n\"No, James. Please stay. I need to touch you,\" she implored. But James would have none of it.\n\n\"One step at a time, Jasmine. Tomorrow is another day, and we'll still be here in Paris with a few more days and nights together following that. There are no rules and there is no hurry. This was wonderful tonight. Get a good night's sleep and find me downstairs in the morning.\"\n\nDespite her objections, she knew he was right. Jasmine felt herself drifting off in a post-orgasmic haze as James gathered his things and slipped out the door. \n\n\"See you in the morning, Jasmine. Come find me at breakfast,\" he added.\n\n\"Mmhmm. I will. Thank you, James,\" she cooed as she curled up under the covers and drifted into a deep dark sleep."
    ],
    "authorname": "gapster7",
    "tags": [
        "older/younger",
        "boss/intern",
        "french",
        "paris",
        "lingerie",
        "soft breasts",
        "other couples",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/james-and-jasmine-ch-02"
}