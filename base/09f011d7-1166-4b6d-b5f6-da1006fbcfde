{
    "title": "Father Figure",
    "pages": [
        "I started my electrical contracting business when I was twenty-seven. It was just me, my beat up pick-up truck and the occasional helper working out of my garage. Twenty years later, I've got four trucks, twenty-two employees and lots of work. Diane was a pivotal part of my world but in April she decided to leave and take care of her new grandbaby. I was happy for her but scared for myself. My matronly office manager had been with me for over seventeen years and worked her magic so that I was free to be in the field with customers and crews as needed. Losing her would be a huge blow but I'd make due. \n\nMy initial plan was to enlist Carol, my accountant/HR lady to help me with the change and spread the load between us. It didn't take long for me to realize that Diane was some kind of Grand Master of Office Management that I had no clue on how to emulate. When Carol threatened to leave if we didn't find a replacement, I gave in and told her to start looking.\n\nTwo weeks passed and we hadn't found a qualified candidate. I was starting to lose hope. We'd looked at dozens of resumes but the applicants were not what I needed to fill the void. So to see Carol smiling at me when I returned from the field one late afternoon in May, I was hopeful she had some good news.\n\n\"Mike, I want you to take a look at this person's resume and application,\" she said, placing the papers on my desk.\n\n\"Do they look promising?\" I asked with just a hint of skepticism.\n\n\"I think you'll like what you see,\" Carol replied stepping back and leaned against my door.\n\nI sat down and looked over the papers in front of me and quickly noticed Elizabeth Billings was fresh out of college with a degree in business administration. \"Okay she's got book learning but virtually no experience,\" I commented then read on, \"Except for working at a plumbing business during her High School years; nothing since graduating.\" I sighed and looked at Carol knowing I couldn't be too choosy since we've struck out so far. \n\n\"Set up an interview and see what you think of her,\" I said offering the paperwork back.\n\nHer smile broadened, \"I already have. She's in my office right now. I think we've got a winner.\"\n\nI stoked my chin and close cropped beard as I studied Carol's smiling face. She'd been with me along time too. Her husband John and I are good friends and I trusted her opinion so I guess I needed to meet Elizabeth for myself. What was the worst that could happen, she didn't stack up and the search was still on? I sat back in my chair and looked down at the piles of paperwork and files on my desk.\n\n\"Alright, send her in.\"\n\nCarol made a jubilant hop then disappeared toward her office. I moved some of the files aside, making room for the new applicant's resume in front of me. I saw movement and Carol had returned with a petite young woman in tow. I rose from to my feet as Elizabeth entered and stood before my desk. My initial thought was, 'You've got to be kidding!' She looked like a twelve year old in business attire. I'd done some quick math in my head when I'd looked at her resume and knew she was in her twenties but my God she looked so young and so tiny. I guessed maybe 5'-3\" but I couldn't tell how tall her heels were with the straight leg slacks she had on. And if she was more than a hundred pounds soaking wet, I'd be amazed. She was sharply dressed in a crisply ironed blouse and pants and had her cinnamon hair up in a tight bun. She smiled and extended a hand. I took her delicate hand in my meaty calloused paw, hoping not to crush it as I gave her a firm shake.\n\n\"I'm Mike Worthington, nice to meet you Elizabeth. Have a seat,\" motioning to a nearby chair.\n\n\"Nice to meet you too Mr. Worthington,\" sitting and crossing her legs, \"but please, call me Beth.\"\n\nCarol motioned she would leave and I nodded as she was closing the door. I looked back to Beth who was smiling at me with a sparkle in her eye that made me smile too. I felt myself becoming aroused and I wasn't sure why so I distracted that train of thought by looking down at her resume once more.\n\n\"I see you've recently graduated college,\" she nodded, \"So what have you been doing since you finished?\"\n\n\"Odd jobs mainly,\" she fidgeted, \"I haven't found what I'm looking for in my field.\"\n\n\"I see you had some experience at a plumbing contractor...\"\n\n\"That was my Dad's business. I worked for him since I was sixteen and only quit when I left for college.\"\n\n\"What exactly did you do for him?\"\n\n\"I ran his office. I did everything from taking calls, filing, ordering products and materials, payroll and even scheduled appointments for him to meet customers,\" she proudly replied.\n\n\"That was a lot of responsibility for a teenager, I'm sure if I contacted him he'd give you a glowing review.\" I noticed Beth's brilliant smile slacken.\n\n\"He passed away last year but my brother is running the business now and can verify everything I've said.\"\n\n\"Oh...I'm sorry to hear that,\" I said seeing the pain in her eyes.\n\nI talked to Beth for nearly half an hour but I knew in the first five minutes she was the one. I had to play it cool though so as not to tip my hand. We talked money and benefits and she didn't seem offended by what I was offering so I hired her. I stood and she shot to her feet as well. We shook hands again and she looked like she was about to burst.\n\n\"Welcome aboard Beth. When can you start?\"\n\n\"I can be here tomorrow if you'd like? Thank you so much Mr. Worthington,\" she trembled with excitement.\n\n\"CAROL!\" I shouted then looked down at Beth, \"First thing Beth, call me Mike. We're very informal around here so you don't need to use mister or anything like that.\" I stepped around my desk to open the door and found Carol reaching for the handle. \"Beth is joining the family and will be starting tomorrow so could you get her all the information she needs?\"\n\n\"Sure thing Mike. Come with me.\"\n\nAs Carol turned, Beth surprised me with a hug around my mid section. At 6'-2\" and 250 pounds I dwarfed the little woman but I enjoyed her gratitude. I just hoped she was up to the task. I needed to get back to dealing with customers and not office minutia. She had 90 days to impress me or I'd be looking again but it barely took her two weeks and I was sold. \n\nShe had jumped in feet first and didn't look back. I was overjoyed; as was Carol, her life had just gotten easier too. Beth knew her stuff and was right at home taking over where Diane had left off. She made some changes that suited her own working style but all in all it felt like Diane had never left. She handled customers humbly but didn't let them walk all over her. She even kept me in line when I would lose my temper over insignificant things. Being young, petite and pretty made many people under estimate her as most of the single guys who worked for me found out. I thought I might have to step in and say something to them but Beth handled it just fine. She politely turned down their advances and let them know she had a boyfriend. She also let them know she wouldn't tolerate any kind of harassment. \n\n***\n\nBy the time my annual 4th of July BBQ rolled around I was pleased that Beth had been a good choice. I invited her and her boyfriend who I'd yet to me to the gathering. I had all my employees and their immediate families come over for a barbeque/pool party every year at this time. It was my thank you to them for their hard work. My backyard was on a hill overlooking the city park where they had a huge fireworks display so everyone brought chairs for the evening. I supplied the food and drinks with a little help from Carol and her husband it made for a fun day.\n\nGuests started arriving around three in the afternoon but I didn't see Beth. I found that to be unusual considering her fanatical punctuality at work. By five o'clock the party was in full swing. People were splashing in the pool, John was manning the bar keeping drinks filled and I was at the grill flipping burgers, hot dogs and chicken breasts. That's when I saw Beth come out onto the patio. She gave me a slight wave as she came over.\n\n\"Hey Beth, glad you could make it,\" I said with a huge smile.\n\n\"Thanks...Umm sorry I'm late...\" she was clearly not her effervescent self.\n\nWhen she finally met my gaze I could see the redness in her eyes and knew she had been crying. I never liked seeing my people upset and there was something special about Beth that made seeing her this way even worse. \n\n\"Is everything alright Beth?\"\n\nShe sighed, \"I'm fine...Just some personal things going on that...Well...I don't want to talk about it.\"\n\nI wasn't going to press her on the matter. \"Is your boyfriend parking the car?\" I asked looking for an unfamiliar face.\n\n\"He couldn't make it,\" her tone was sharp.\n\nShe was in cut off shorts and a patriotic tank top with a pink swim wrap over it all. Her large shoulder bag had a towel sticking out of it and I assumed it was doubling for her purse today. It was then I realized just how tiny she was. She always wore heels in the office but today in her flip-flops there was no mistake she was much shorter than I originally guessed. She stood maybe 5'-0\" or a hair under but definitely no taller. Her long hair was down today as well; another first. She always wore it up or in a ponytail at the office. She was beautiful and I had a hard time taking my eyes off her. I needed to stop staring so I pointed out where things were.\n\n\"Carol is around her somewhere. She can show you where to change if you want to go swimming and if you head over to the bar, John will make you something to cheer you up,\" I turned to face Beth, \"And if you flash him that amazing smile of yours, he'll probably make you something that'll cause you to forget your name.\"\n\nShe chuckled and gave me a weak smile but at least she smiled. Beth thanked me and went back toward the house. When I saw her later in that tiny bikini I nearly dropped a plate of burgers. It was small but not provocative. It did show off her petite body very nicely though. My cock jumped to attention as she passed by to lay her towel on one of the lounges. I had to be careful and not trip over my tongue the rest of the day.\n\n***\n\nAs darkness fell, I lit the many Tiki torches around the yard and people set up their chairs and blankets to watch the fireworks display that would be starting soon. I grabbed a drink and sat down on a lounge to wait. Beth appeared beside me in her swim wrap tied at the waist and drink in her hand.\n\n\"Is this seat taken?\" motioning to the lounge next to me.\n\n\"Nope, it's all yours.\"\n\nShe sat down and reclined then untied her wrap. I could see her brightly colored bikini and her nicely proportioned body just a few feet from me. My cock began to respond. 'Shit!' I thought not wanting to be pitching a tent in my board shorts but what could I do? I nervously looked at my watch, hoping the show would start soon. I took a big swig of my rum and coke.\n\n\"Thanks for inviting me over today,\" Beth said turning toward me.\n\n\"It's the least I can do for you and the rest of my family on the fourth.\"\n\n\"Your family?\" she looked around, \"Is there members of your family her? All I've seen is employees and their families.\"\n\n\"My employees are my family,\" I replied looking into her sparkling eyes. My cock continued to grow even though I was willing it not to.\n\n\"You don't have any actual family members? What about your parents?\"\n\n\"My mom passed away at about my age from breast cancer and my dad passed about five years ago.\"\n\n\"No brothers or sisters? Any cousins?\"\n\n\"Nope...I'm an only child and ironically both my parents were too.\"\n\nWhen Beth briefly turned away I pulled my t-shirt down as far as possible to help camouflage my throbbing erection. I checked my watch again.\n\n\"Carol said you aren't married and you don't have a girlfriend to her knowledge,\" she looked at me inquisitively, \"Why not?\"\n\n\"My business and my employees are the most important things in my life right now. I have to devote all my time and energy to them. Most women I've met and dated don't understand that and they don't want to play second fiddle to my work. So I haven't found a woman who understands this or is willing to accept it.\"\n\n\"I do,\" Beth replied meekly staring into my disbelieving eyes. There was a thunderous boom over head, lighting up the sky with a shower of gold and blue. Beth turned her attention skyward while I kept staring at her.\n\n'Was she flirting with me or messing with my mind?' I wondered, still in shock at her statement. My cock was straining for freedom and I had to divert my attention elsewhere or there might be some serious problems. \n\nThe display continued for another twenty minutes bringing many oohs and ahs with it. As the finale burst then faded you could hear applause from my guests and my neighbors alike. The party went on after the show was over but people started to leave gradually until just a handful remained. By ten, Carol and John were saying their goodbyes and I thanked them for all their help. When they were gone, I poured another rum and coke and went back out to the pool to sit and watch some of the illegal fireworks going off around the area. It was then I noticed Beth still sitting on the lounge where we'd watched the show. \n\n\"I didn't realize you're still here Beth,\" I said as I sat down next to her. I made sure my shirt was adding cover for my rambunctious member hiding in my shorts.\n\nShe suddenly stood and said, \"I'm sorry I'm still here, it's just so nice looking at the stars.\"\n\n\"I'm not kicking you out,\" giving her a big smile, \"Stay as long as you like.\"\n\nI couldn't tell for sure but by the light of a nearby torch, it appeared she may have been crying. Beth gave me a strange look then scooted her lounge up against mine and sat back down. I watched as she adjusted the angle of her lounge to match mine then got comfortable with her drink in hand. She lay there for a couple minutes, not saying anything and staring into the night sky.\n\n\"Are you alright Beth?\"\n\nShe took a deep breath and sighed, \"I broke up with Alex this morning.\" She took a long drink from her glass as a tear ran down her cheek. It took her a moment then she explained how she caught him with another woman and kicked him out. She told me she was hoping to marry him at some point but now was happy they hadn't made it that far just to have this happen. I listened as she talked about their relationship and what she had wanted and how this turn of events had crushed her. I put my arm around her shoulders as she started to cry. We sat that way for several minutes in silence. I didn't know what to do but be there for her.\n\n\"I miss him,\" she said still looking at the stars.\n\n\"How could you miss that douche bag after what he did to you?\" anger filled my words.\n\nA smile crossed her lips then she said, \"I'm not talking about Alex, I mean my dad. I miss him at time like these. When I was hurting he would just hold me and I felt safe and comforted. He always made things better for me,\" she turned her eyes my direction; \"You remind me a lot of him.\"\n\nThat caught me off guard. It's true I think of my employees like family but I've never been considered an actual father figure before. \"Thank you Beth...That's a great compliment.\"\n\nBeth rolled toward me, throwing her arm across my chest and a leg over mine. She cuddling into me but I didn't want any growing problem to embarrass me. I slowly brought my arms around her trying not to touch her in an inappropriate way. Feeling her warm soft breasts pressed against me was causing other issues to arise. I was hoping she didn't feel my cock begin to grow stiff in this potentially compromising position. It was a warm night but I felt a shiver run up my spin. I was holding this beautiful, sexy and very vulnerable young woman in my arms and becoming very aroused. It was wrong to feel this way about an employee and could cause tremendous legal problems but I didn't want to let go. She clung to me and I could feel my temperature rising. I finally made the decision to move.\n\nI sat up, \"I'm going to take a quick dip in the pool,\" looking down at her sad eyes, \"Care to join me?\" I didn't want her to think I was abandoning her in her time of need but I had to put some distance between us so I could think clearly.\n\n\"No, I think I'll just lay her for a while and look at the stars,\" she replied moving back onto her lounge.\n\nI stood and stripped off my shirt as she watched me. I was turned away to try and hide my arousal but I think Beth noticed. I dove into the deep end of the pool praying the cool water would help shrink my rampant cock. I swam the full length of the pool then back again. Starting toward the shallow end once more I heard a splash close by. I stopped and was just able to touch the bottom when Beth surfaced less than a foot from me. She was treading water at first then put her arms around my neck and her legs around my mid section to keep from going under.\n\nI could feel the heat of her pussy pressed against my stomach as she stared at me with an odd smile on her face. It wasn't helping my efforts to deflate my raging hard on. I put me arms around her back, fighting the temptation of them going to her tight little ass. I was hoping if I held her to me she wouldn't sink down and feel the steel rod in my suit. There was an awkward silence between us as she kept her eyes locked with mine.\n\n\"Since you consider your employees family,\" she started, cocking her head, \"Are we like your children or brothers and sisters to you?\"\n\nI laughed, \"I don't think I can consider Tom one of my kids,\" picturing my shop foreman, \"He's older than I am by at least ten years. And Carol's more like a sister I guess...\"\n\n\"What about Diane?\"\n\n\"She was like my mother,\" I chuckled and got a giggle from Beth.\n\n\"So does that mean you consider me like a daughter?\"\n\nThe incestuous implications a side, her question seemed to have an ominous tone. I hoped I wasn't crossing some unseen boundary with the answer I was about to give.\n\n\"Sure...I guess I consider all you youngsters in my employ my kids.\"\n\nThat odd smile returned. She gave me a quick kiss on the cheek and released me. I let her go too and she moved away.\n\n\"You'd make a good Daddy,\" she stated then swam to the side of the pool, \"I should go...It's getting late.\" \n\nI could smell alcohol on her breath and when she got out of the pool she lurched to the right before correcting herself. She got to the lounge with her towel and began to dry off, swaying slightly as she did. I think I was so shocked by her statement that it took me a moment to realize she was in no condition to drive. I swam to the side and quickly got out before she had collected all her things.\n\n\"Wait Beth, I can't let you drive home like this.\"\n\n\"I'll be fine. I don't live that far away.\"\n\n\"No...You're not fine. Why don't you spend the night here?\" The moment the words left my mouth I knew how they must have sounded, \"I mean...I've got a couple guest rooms...it won't be a problem.\"\n\n\"No...that's okay. I can make...\"\n\n\"I'm not letting you drive home,\" my voice had become stern, \"If you insist on going home, I'll call you a cab or Uber but you aren't driving.\"\n\nShe met my austere gaze and that same look she had when she talked about her father returned to her blushing face, \"Alright...I'll stay as long as you're sure it isn't any trouble.\"\n\n\"None at all.\"\n\nI led Beth to the house and showed her to one of the guest rooms. It had a queen sized bed and was the least masculine of the four bedrooms available.\n\n\"Wow...This is nice,\" she said, placing her bag on the bed.\n\n\"The bathroom is right here and there are plenty of towels if you want to take a shower,\" I pointed out, \"If you need anything I'm right down the hall.\"\n\nShe hugged me fiercely, \"Thank you Mike...I really mean it...for everything.\"",
        "I stroked her damp hair then slowly pulled away before the urge to pick her up and carry her to my bed grew overwhelming. She had a melancholy smile on her face as I backed out of the room. Walking to my room seemed almost painful. I didn't want to leave her but I had to. When I reached my door I turned to see Beth carrying her towel into the bathroom, the same sad look on her face. I waited until I heard the water running before entering my room.\n\nI walked to my bathroom and turned on the shower, letting it warm up. I rinsed off the chlorine and lathered up, but my mind was one Beth. My cock was still aching for attention but I didn't feel right about jerking off to my thoughts of her, not while she was in my house. I finally turned off the water and dried myself. Moving to my bed, I realized I'd left my door open out of habit and was standing nude in plain view of the hall. I didn't usually have guests so I didn't think about it. Fortunately the only light I could see was coming from under the door of the room Beth occupied.\n\nI slid in under the covers and turned out the light. I lay there, staring at the ceiling trying to make sense of the feelings running around my head regarding Beth. My hand was on my cock, mindlessly stroking its steely length. I wasn't sure what drew my attention to the door of my room but I saw a small figure standing there in the dark. I could just make out her face and knew it was Beth. She was wearing one of my old Iron Maiden shirts I had stuck in the dresser of her room. It was long on her and I couldn't tell if she was wearing underwear but it was incredibly sexy to see her like that.\n\nRemoving my hand from my swollen dick, I sat up facing her. \"Is there something wrong?\"\n\nShe timidly entered the room and walked to the side of the bed, \"I don't sleep well in unfamiliar places...Can I please stay with you tonight?\" Her voice sounded demure and pleading. \n\n\"Beth, I don't think...\" but before I could finish she was in bed with me.\n\nMy arm over my waist kept the sheet from revealing my extreme arousal as she moved close to me. She lay down on her side with her back to me and snuggled down onto the pillow. Suddenly my king size bed felt very small. I rolled onto my stomach and put my right arm under my pillow. She scooted closer to me then I felt her hand touch my left arm. She pulled it over her, tucking it under her arm and cuddling it like a stuffed animal. I had to shift to my side which only drew her closer. Fortunately our size difference kept my cock from prodding her backside. \n\n\"Good night,\" she purred contentedly.\n\n\"Good night Beth.\"\n\nI was stuck. My arm was trapped between her breasts as she held it firmly. Had this been anyone but an employee, anyone but Beth, I'd be enjoying the closeness. But this could be a serious problem in the morning. Yet thoughts of sexual harassment lawsuits and rape accusations did nothing to diminish my erection. I just had to hope she'd pass out and I could extricate my arm and go sleep in my den before things got out of hand.\n\nI was drifting off to sleep when I felt Beth move. She shifted downward and at first I didn't react, them my cock became wedged between her ass cheeks. She wasn't wearing underwear after all. I was awake now. I froze. Her left hand released my arm and moved back to my hip. I didn't move for several moments then when I thought she was asleep I tried to shift my hips away from her but her hand stopped me.\n\nHer hand left my hip but I felt her leg lift, exposing her wet valley. Her hand closed around my cock and I jumped. She guided it to the entrance of her drooling pussy.\n\n\"Beth wait...What are you doing?\"\n\n\"I want to feel you inside me,\" she cooed.\n\n\"This isn't a good...Aah!\" she cut me off by rocking her hips back and impaling herself on my cock.\n\nShe was so tight and so wet it took my breath away. The heat of her molten pussy was intense. I felt her muscles contract, pulling at me and I thrust forward instinctively. She gasped as more of my steely member filled her fiery hole. It felt so good but I knew this shouldn't be happening.\n\n\"Beth what are we doing here,\" stupid question but I wanted to know her motivations.\n\n\"I wanted to feel you inside me Daddy,\" she purred.\n\n\"What...What did you call me?\" I was stunned.\n\nBeth turned to look at me as her hand went back to my hip to keep my from pulling out, \"I've always wanted an older man, a father figure if you will, that I trusted and that made me feel safe and loved like my father always did. I also wanted that man to touch me in ways my father couldn't. I didn't want to have sex with my father, just someone that made me feel the way I did when I was with him. Please Mike; be that man...be my Daddy.\"\n\nThe imploring tone in her voice made the strange request seem less strange. My cock was throbbing inside her, how could I deny her plea? I moved my left hand to her mound and drove my hips forward making Beth groan. My fingers found her stiff clit and began to flick and stroke the tender bud.\n\n\"OH FUCK! That feels so good Daddy...Don't stop!\"\n\nShe felt so good in my arms, so good on my cock. I kept thrusting and her hips rolled and bucked in time with mine. Beth was moaning and crying out adding fuel to my fire. Knowing I was pleasing her so intensely was making me even more aroused. I knew I wouldn't last much longer but I didn't want it to end. The grip on my cock increased as Beth went stiff for a moment. Tremors ran through her body then her hips started to slam back into me. I tried to keep my movements steady so as not to accidently pull out but she was bucking wildly.\n\n\"OH Daddy you're making me cum,\" she cried, \"Your cock feels so big inside me. Don't stop!\"\n\nHer rippling vaginal muscles were pulling at me in a way I'd never felt before. I was getting close.\n\n\"You like that baby? Your making Daddy very happy,\" I drifted into the persona she so desperately wanted.\n\n\"Oh yes Daddy. I want you to feel good. I want you to cum for me.\"\n\n\"I'm real close baby,\" I replied through clenched teeth.\n\n\"Cum for me Daddy...Cum in your naughty little girls pussy,\" she begged.\n\nI have to admit I never considered any of this role-play stuff as anything I'd do with a partner; especially not a Daddy/daughter thing but it was making me so hot. I felt my balls tighten and knew I was on the brink of release.\n\n\"I'm gonna cum baby...Aaaahh\" I cried as the first rope of hot cum sprayed into Beth's clenching cunt.\n\n\"OH GOD...I feel it! It's so warm,\" she moaned, \"Fill me up Daddy! Fill my tight little pussy. Oh yes...I'm gonna cum again!\" And she did.\n\nI held Beth tightly until we'd both finished quaking. The intensity of my orgasm drained the energy right out of me. Her pussy continued to milk my twitching member as we lay panting together. No words were spoken after that. She fell asleep in my arms and I lay there in the dark quietly contemplating the circumstances of our erotic tryst. I don't know how long it was before I too gave up the fight and drifted into unconsciousness. \n\n***\n\nI woke with a start the next morning; alone. Light was filtering through the blinds as I sat up and tried to think clearly with cobwebs still clouding my mind. Beth was gone. Was she ever here? I'd had a lot to drink last night as evidence of my aching head but did Beth and I actually have sex or was it just wishful thinking on my part? The faint odor of sex still lingered and there was the remnant of a significant wet spot on the sheets. No it happened but did Beth leave realizing she and I had crossed the line. Was she ashamed? Was she scared? My heart was racing now as the thoughts of date rape and sexual harassment came flooding back. Then I heard the toilet flush in my bathroom. Beth came around the corner and saw me sitting there staring at her in disbelief. \n\n\"I hope I didn't wake you?\" she said in a soft tone.\n\nShe was no longer wearing my t-shirt and kept approaching the bed totally naked. Her young nubile held my gaze. Everything about her was sexy. Her breasts were nice size and very perky with deep pink areolas and erect nipples crowning them. Her narrow waist gave way to round hips, firm thighs and incredible legs. Even her tiny little feet with bubble gum pink toes exuded sexiness. My cock was coming to life yet I was still conflicted about what we'd done. She seemed to read my thoughts as she crawled onto the bed and knelt before me.\n\nBeth kissed me tenderly on the lips. It was a soothing kiss, a warm kiss, a friendly kiss devoid of sexual desire but filled with love. I sat there still in shock looking into her beautiful eyes. She looked happy, not scared or embarrassed but there was a hint of concern. She lay down beside me but left a noticeable gap between us. I propped myself up on an elbow searching for the words I needed to say but was struggling.\n\n\"I want to thank you for last night,\" she said, \"It was very special to me.\"\n\n\"Beth I'm sorry I let that happen. I know it was wrong...\"\n\n\"You shouldn't feel sorry unless you didn't enjoy it,\" she replied with a concerned look on her face, \"If that's the case then I should be the one apologizing.\"\n\n\"No...It's not that. I did enjoy it. It's just...It's that I took advantage of you when you were drunk.\"\n\n\"Mike I wasn't drunk,\" she flatly stated.\n\n\"I could smell the alcohol on your breath.\"\n\n\"I'm sure you did. That's what I wanted you to notice. I also wanted you to see me stagger and believe I had no reason to be driving home,\" she brought her hand to my bristly cheek, \"I wanted you to think I was intoxicated so you'd insist I stay. How else would I have been able to get you to fuck me?\"\n\nI stared at her in stunned disbelief. \n\n\"Ever since the first day we met, you've turned me on so much. I've always had this Daddy/daughter fetish but I've never been comfortable sharing it with past boyfriends. I did with Alex and I think it may have contributed to him cheating on me. But you were always so caring and thoughtful. I've kept myself in check hoping my relationship with Alex would work out but...Anyway, yesterday I made up my mind to follow my heart and hope you didn't think I was a horrible person,\" she cast her eyes down, \"I knew it could cost me my job but last night was worth it, Mike. You made me feel wonderful.\" \n\nI knew I should be mad or at the very least upset at being played like that but I wasn't. All I could think was how incredible it felt to have such a young, beautiful and intelligent woman wanting me so much she'd put her heart and job on the line like that. Against everything I should do, I made the only decision I could give my feelings for Beth.\n\n\"It's not nice to trick your Daddy that way,\" my tone deep and stern as I sat up.\n\nHer eyes met mine, \"What...What did you say?\" Her expression was one of astonishment and confusion.\n\n\"I said...It's not nice for you to trick your Daddy like that.\"\n\nI saw tears welling in her eyes as she let out and exasperated laugh. It took her a moment to get control of her emotions then she gave me a doe-eyed look of remorse, \"Please Daddy, don't punish me.\"\n\n\"I don't know,\" I said, cocking my and furrowing my brow, \"You've been very naughty.\"\n\n\"I know and I'm sorry. Let me make it up to you. Let me show you how good I can be Daddy!\" she threw back the covers to see my cock fully erect and dripping with pre-cum. She looked into my eyes and could see I was really into playing the Daddy role; the smile she gave me made my heart melt.\n\nBeth took my cock in hand and began to lovingly stroke it as she pressed her lips to mine. This time her kiss oozed passion. Her tongue found mine and they dueled wetly. I could smell her arousal thick in the air and I wanted her badly but I knew if I was to truly please her I'd have to play her game. She broke our kiss panting and turned her attention to my throbbing cock. Her hand continued to stroke up and down with a twisting motion while her lips captured the head of my cock. I moaned deeply. Beth sucked the gooey pre-cum from the tip then took me deep into her mouth.\n\n\"That's it baby; you're doing a good job sucking Daddy's cock.\" I heard her moan at the praise I'd given her.\n\nShe suddenly started bobbing very fast up and down on my pulsating member. It made me gasp and groan and I knew if I let her continue much longer, I'd be cumming in her mouth. Not that it would have been bad, it's just I wanted to do so much more before shooting my load into her. I lifted her head off my cock and she gave me a disappointed look.\n\n\"Am I doing something wrong Daddy?\"\n\n\"Not at all sweetheart but I want to make sure you're ready for my cock when I slid it into your tight little pussy.\"\n\n\"But I am Daddy! See...\" Beth flipped onto her back with her head on a pillow, spreading her legs wide for me, \"Look how wet I am for you.\"\n\nShe held her delicate lips open and I had to admit she was dripping wet but I wasn't about to give in. I got down between her splayed thighs for a closer inspection. \n\n\"You definitely are very wet,\" I looked up to see her smiling at me, \"Does being naughty always make you this wet?\"\n\n\"Yes Daddy it does,\" bashfully biting her lower lip.\n\nI leaned in and inhaled her fragment aroma. My cock twitched with urgent need at the scent of her arousal. I ran my tongue up her wet cleft and gave her clit a quick flick. Beth jumped then gasped at my touch. Lapping slowly at her abundant juices I made sure to not make contact with her inflamed clit. It stood out from its hood, stiff and angry but I wasn't going to play with it just yet. Instead I focused on her flared lips, sucking and licking her nectar from them. I plunged my tongue as deep as I could into her clenching cunt, making Beth whimper for more.\n\n\"Oh please Daddy, don't tease me like this,\" she begged, \"Make me cum.\"\n\n\"I will my dear but not until I'M ready for you to cum.\" Beth groaned knowing I was in control of her pleasure.\n\nWetting my middle finger I slowly inserted it into Beth's spasming cunt. It pulled at my finger like it was a small cock that she wanted deeper inside. It took me a couple tries to find her G-spot. She was such a tiny woman that I was reaching too deep but once I realized my mistake and found her special spot, Beth let out a primal groan as a powerful tremor shot through her whole body. I sucked her clit into my mouth and she screamed. Making slow fluttering circles on her sensitive bud, my tongue matched the rotations of my finger inside her pussy. She began to tremble as her orgasm neared then I removed all the stimulation I was giving her.\n\n\"SHIT NO!\" she cried, looking down at me in desperation.\n\n\"Naughty girls don't get to cum.\"\n\n\"I'll be good Daddy I promise,\" her pleading eyes were so sexy.\n\nI began again, slower than before building her up with my torturously slow stimulation and when she tensed up again I stopped. I could feel the tension in her thighs as they shook uncontrollably. Her body was aglow with a fine sheen of sweat; her breathes coming as fast ragged gasps.\n\n\"Please Daddy...PLEASE LET ME CUM!\" she growled.\n\n\"Are you gonna be a good girl from now on?\" I kissed her right thigh.\n\n\"Yes Daddy I promise,\" she panted.\n\n\"And you're gonna do everything I tell you?\" I kissed her left thigh.\n\n\"OH God...Yes Daddy anything...ANYTHING!\"\n\nI drove two fingers into her sopping pussy, applying the same technique I was using when there was only one. My mouth sucked at her clit as my tongue lashed it mercilessly. With my free hand I squeezed one of Beth's breasts firmly while rolling her nipple between my fingers. Her body exploded in orgasm. She arched off the bed with just her head and toes touching. Her hands were grasping at the air for support but finding none. It was all I could do to keep contact with her to maintain the stimulation. Beth was shrieking and crying out unintelligibly while her orgasm ran its course. It took a few minutes for her to come down from that tremendous high and when she collapsed back down onto the bed panting, I thought she was going to need a rest. Boy was I wrong.\n\nBeth flipped over with surprising speed, pushing herself up on her hands and knees looking back at me longingly. A river of milky liquid flowed from within her in long syrupy strands. \n\n\"Daddy I need your cock in me,\" she panted, \"I want you to fill me with your cum!\"\n\nI was so turned on at that moment that I just wanted to fuck her six ways to Sunday but I restrained my base instinct. I liked this role play game of hers. I'd never been so aroused by a woman and playing 'Daddy' for one as sexy as her was really getting to me.\n\n\"Is that how you want me to fuck you?\" I crawled up and lay down on my back beside her.\n\n\"Yes Daddy, please fuck me like this. I want your cum deep inside me,\" the desperation in her voice was hard to resist.\n\nI moved the hair out of her face, tucking it behind her ear, \"You have to do something for me before I'll fuck you like that and give you my cum.\"\n\n\"Anything Daddy, anything!\"\n\nMy cock curved up and was pointing straight at my face, leaking a steady stream of pre-cum. Using one hand I pointed it toward the ceiling, \"I want you to ride my cock until you cum really hard but you can't bounce up and down. Do you understand?\" She nodded briskly and started to move but I held up a hand to stop her. \"You may only rock your hips side to side or front to back. You have to be careful and not make me cum or you won't get what you want. Only good girls get their Daddy's love.\"\n\nI didn't realistically believe I could hold out for more than ten seconds in my current condition but I wanted to push this game to its limits. If I could it would be all the more fun satisfying Beth in what must be her favorite position. She quickly climbed aboard and my cock sank into her tight drenched pussy. It was so hot and tight I had to grit my teeth to keep from cumming right then and there. Her body was already shaking as she rested her hands on my chest. It looked as if she needed a moment to get use to my size. I'm not hung like one of those porn studs by any means, I think I'm very average as far as it goes but given how tiny Beth is, my cock must feel huge in her snug little cunt.\n\n\"Oh Daddy you're so big,\" she finally said as her hips began to rock back and forth.\n\nShe sat up straight and I knew if she started bouncing on my dick the game was over. My hands gripped her waist tightly, not allowing her to do anything but move back and forth.\n\n\"Remember, no bouncing or you won't get what you want,\" I reminded. The look of frustration in her eyes was priceless.\n\nBeth lowered back down with her hands on the bed, flanking my chest. I brought her lips to mine and gave her a passionate kiss and while our tongues wrestled my hands caressed the velvety skin on her back. Her hips stopped moving as we enjoyed our kiss. I pulled back and gave her a big smile. At the same time I rolled my hips forward, changing the angle that my curved cock made contact inside her. Her eyes went wide and her mouth opened as if to say something but no words came out. She made a low grunt then her hips began to frantically rock back and forth.\n\n\"OH Fuck Daddy, I'm gonna cum,\" she announced.\n\n\"That's my good girl, cum for me,\" I said watching the blissful mask of ecstasy shrouding her face.\n\nI had to concentrate very hard not to succumb to her convulsing cunt. She rode out that orgasm then collapsed on top of me. Her face was buried in my neck as she tried to slow her breathing.\n\n\"That was incredible,\" she whispered. I couldn't tell if she was still in character.\n\n\"Is my good little girl ready for Daddy to fuck her?\"\n\n\"Yes Daddy, I want you so bad. I want you to fill my tight little pussy with your cum,\" scrambling off me.\n\nShe was on her hands and knees waiting for me. As I knelt behind Beth I felt like a giant with this horny little woman offering herself in front of me. She was trembling when my left hand closed on her waist. I guided my slick cock to her dripping sex. I teased her clit with the tip making her shudder before sheathing myself in her warm wet depths. We both groaned. I held still, languishing in her velvet grasp.",
        "\"Fuck me Daddy...Fuck me good.\"\n\nI withdrew slowly then plunged back in with a loud wet slap as our bodies collided. I repeated the same move again and again, gradually increasing the speed and force of my thrusts. Beth was squealing and shrieking with each lunge. I held her firm by the waist, pulling her back into me as my hips drove forward. It was like she was a living fuck toy that had control over me, making me fuck her harder and faster as I rushed head long to a powerful release.\n\n\"That's it Daddy, you feel so good fucking me,\" Beth moaned, \"I love how your big cock fills me up. Mmmm...That's it, you're gonna make me cum again.\"\n\n\"I'm almost there too baby,\" I panted, \"Cum for Daddy and I'll cum for you.\"\n\nBeth was pushing back into me, matching my movements and rhythm then I felt her body stiffen and the contractions begin in her pussy. Her tiny hands balled into fists as she was carried away by her orgasm. That was all I could take. My balls unleashed a torrent of scolding hot cum into her womb. She cried out when she felt it. My thrusts were erratic as I pumped her quaking body full of my cum. Beth's pussy continued to squeeze and pull at my cock even after it had stopped spewing into her. It was as if she didn't want to let go. I didn't want to let go either. I held her ass tight to my hips until my deflated cock finally slipped from her vaginal grasp. \n\nI flopped onto the bed beside her, trying to slow my rapid breathing. She lay face down on the bed trying to catch her breath as well. Minutes passed then Beth laid her body over mine, her arms hugging me fiercely. I hugged back just not as tight; I didn't want to crack her rips. I heard a soft murmur but didn't know if she just sighed or actually said something.\n\n\"I love you,\" her voice barely a whisper.\n\nI smiled, \"Daddy loves you too.\"\n\nBeth raised her head and looked me in the eye; tears were running down her cheeks, \"No Mike...I love you.\" \n\nShe wasn't in character anymore. She meant what she said to me, Mike Worthington. \n\n\"I love you too Beth.\"\n\nWhat a strange turn of events. This young, beautiful and intelligent woman that came into my life has opened my eyes to a whole new world of pleasure and has captured my heart in the process. Who knew being a 'father figure' could be so rewarding?"
    ],
    "authorname": "Drakon66",
    "tags": [
        "role play",
        "daddy/daughter role play",
        "mature",
        "older man",
        "younger woman",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/father-figure-4"
}