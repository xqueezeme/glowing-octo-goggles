{
    "title": "Buried Treasure Ch. 51-55",
    "pages": [
        "Spider Monkey's POV \n\nI-5 North out of Los Angeles \n\nI let Chase deal with the traffic while I focused on keeping all of us out of jail for the rest of our lives. \n\nI'd had some time with Chase and his brother Sawyer while Carson was ferrying the men to the airport. I liked his big brother, he was calm in a crisis and didn't mess around. Our little liberation exercise was going exactly as planned until Vic was shot twice. We all were involved in a robbery that resulted in the deaths of seven men, and our car contained millions in cash. We went through everything that could tie us to the crime, one by one. \n\nThe first was the U-haul. Traffic cameras were the likely cause, so I hacked the system and froze the cameras during the times we drove from the staging area to the warehouse and back. We talked about extending the blackouts to when we returned the truck to the store. Sawyer thought that would just draw attention to what should have been a routine transaction; since I was the one picking it up, and I didn't look like I was knocking off a violent motorcycle gang, I should be all right. \n\n\"Will the clerk at the rental place remember you,\" Sawyer asked. \n\n\"Probably, but only because of the stories I told when renting and returning,\" I said. \"If they don't have the license plate number to tie to the robbery, it will seem innocent enough. If they look hard at me, my fake identity will crumble. All it would take would be a visit to my 'apartment' that doesn't exist.\" They agreed, and I put my alternate identity back into the hidden compartment in my bag. \n\nAll of the guys were wearing black clothes, gloves, and hoodies, so even if a camera saw them, they wouldn't be able to identify them. \n\nThat left the blood. \"With DNA, won't they be able to identify Vic,\" I'd asked. \n\n\"Doubtful,\" Sawyer said. \"He's not in the databases because he has a clean record. We need to keep it that way. If he gets arrested and they take a sample, he is going to jail for a long time.\" \n\n\"What about if they run the blood samples through other databases? I saw some true crime shows where they are using sites like 23&amp;Me to solve cold cases by identifying relatives to people who they have DNA samples of.\" I looked at both of them, and they looked at each other. \"What about his family?\" \n\n\"I'm pretty sure they aren't in the databases, but there isn't much we can do about it right now. When he's recovered, he can warn them not to use those services,\" Chase said. It didn't give me a warm fuzzy, but we couldn't go back and clean up his blood now. \n\nThe weapons they had used were packed and on the plane with them, and Sawyer promised he would take care of them. The full-auto weapons would result in a long spell in prison if seized, so they would end up in a very deep lake back home. \n\nAs we drove out of town, I took the Mariko's credit cards back out. Transferring money from reloadable Visa cards, I paid off the balance and closed the accounts. I canceled the insurance on Mariko's car, and donated it to a local charity. I sent a text to my friend with the apartment; the innocuous-sounding message told him to close out the mailbox and provide the key and title to the charity when they came. Before we hit Burbank, Mariko was a ghost again. \n\n\"How long is he going to be out,\" I asked Chase as I looked back at Vic lying in the back seat. \n\n\"A few more hours,\" he said. \"We'll swap drivers and get gas and food when we get away from town a little. I need to check his chest tube and make sure his bleeding is stopped.\" \n\n\"If he was in a hospital, how long until he could go home?\" \n\n\"At least a week,\" Chase said. \"We'll have to trade off monitoring him, and we still have things to do. We hit the Sons hard today, but we can't let our boot off their necks.\" \n\n\"I have more ideas, but I don't want to use cell data out here. I'll wait until I get home,\" I said. \"I have nothing going on, I could drive now if you want to read more of the files,\" I said. \n\n\"It's all right. We'll have plenty of time for research as we're holed up in your house. Can you take some vacation time, maybe call in sick?\" \n\n\"I kind of did, I said my mother broke her hip and I was going to be out for a couple weeks,\" I said. It was as good an excuse as any for my sudden disappearance. \n\nHe reached in his pocket and handed me a digital thermometer. \"Can you take his temperature? I need to watch for signs of infection.\" \n\n\"I bet, the back of a moving van isn't the most sterile surgical environment.\" I took the thermometer and lowered my seat back before unbuckling my belt. We were on a fairly straight section of road, and traffic was finally letting up as we got to the edge of the metro area. I moved our bags behind my seat, then climbed back on top of the bags of money that filled the area between the back and front seats. I climbed between, then laid down on the bags in front of Vic. I wiggled around, moving some of the loose bundles underneath me to make it more comfortable. I felt a little like Huell in Breaking Bad, taking a rest on the money pile. \n\nI looked over at the man who I'd become close to in a very short time. He was such a big guy that his knees were poking the back of the passenger seat, while his head was tight to the door. I adjusted the blanket covering him, then put my hand on his face. He felt a little warm to the touch, and I turned the thermometer on and worked it under his tongue. While I waited, I pushed his salt-and-pepper hair off his temple, tracing the edge of his hair with my finger. I continued down, tracing the scars on his neck and down to his shoulders and chest. His body was scarred heavily, as I'd found in my explorations while I waited for him to recover for the next rounds. When I asked him about it, he was evasive; he said he had fought in several wars, but he didn't want to talk about it. \n\nI traced the four parallel lines that carved from his left shoulder onto his chest, the raised scar tissue covering his pectoral muscle. So much pain in his life, and now he'd been shot twice. I hoped to God that he would be able to stop all this and settle down now that we had liberated all this money. I wanted to take this beautiful man to a beach, making love in a cabana as the waves roll in. No, better... one of those bungalows built over the water, with a thatch roof and windows open on all sides to the ocean breezes. A big bed, making love on the deck as the sun sets, diving in the waters, yeah, that's more like it. \n\nThe beep of the thermometer broke me out of my daydream. I pulled it from under his tongue and looked at it. \"One hundred point four,\" I told him. \n\n\"Low-grade fever, that's to be expected,\" Chase said. \"I need you to monitor his temperature for me. I gave him a dose of antibiotics, but if he spikes, I'll have to try a different one.\" \n\n\"Don't you know?\" \n\n\"I can't exactly take him to the hospital, Spider. I have to deal with what I have in my bag for now.\" \n\nI hated the thought of it going bad. There was nothing I could do while driving, so I pulled back the blanket from him. \"I'm going to lie down with him, that way if he has problems or spikes a fever, I'll feel it,\" I said. \n\n\"Just be careful of his chest wound,\" he said as he looked in the mirror at me. \n\n\"Please, I'm just a tiny thing.\" I skooched until I was lying on my back, my legs in front of his and clear of his thigh wound. I pulled the covers back over us as I rested my head on his bicep. I moved his other arm over my waist and relaxed into him. \n\nI fell asleep to the sound of him breathing. \n\n\"Spider, wake up,\" he said as he stopped the car. I opened my eyes; we were at a gas station. \"Go use the restroom and buy some food and drinks for us. I'll pump gas then switch when you return; I don't want him alone out here.\" \n\n\"All right,\" I said. I sat up, turning to check Vic's forehead with the back of my hand. He didn't feel feverish, but I'd check when I came back. I moved back into the passenger seat, making sure Vic was covered up along with the bags, then got out and stretched. \"Where are we?\" \n\n\"Kettleman Station, we have another couple hours to your place,\" he said. He put a reloadable Visa card in the pump and started to fill it up. \n\n\"There's an In-N-Out burger over there, we should just drive through. There are few things in life I trust less than a gas station burrito.\" He laughed as started to clean the windshield. \"I'll drive the rest of the way.\" \n\nHe had picked a gas pump at the far end of the station, not wanting people around, and so I hit the bathroom and picked up some Starbucks and a bag of sunflower seeds. He was just finishing as I got back out, so I got in and adjusted the seat way forward so I could drive it up to the entrance to pick him up. He messed with the bags in back so he could even get in my side, then I drove through and got us some tasty burgers, fries, and he got a big shake. \n\nThe drive back was pretty good, traffic picking up as we got closer to home, but we beat the late rush hour. News radio was full of stories about the raids this morning. We were saddened by the loss of the officers, and shocked that the leaders weren't caught. \"Can we pull into your garage,\" Chase asked. \n\n\"I'll have to move my motorcycle,\" she said. It was a double garage, and I parked in front of the door. I got out and unlocked the side door, then moved my Harley in front of my Ford Focus. I went out to his car and soon had it parked inside with the door down. \"How do you want to do this?\" \n\n\"Leave the cash in the car for now; I'll get it after Vic is resting again. If you can grab my medical bag and open up the doors, I'll get him out of here.\" \n\n\"You can't carry him alone,\" I said. \n\n\"He's waking up,\" he said. I looked in, and his eyes were blinking open. \"Easy, Vic. You're safe. We're back at Spider Monkey's place.\" \n\nHe opened his eyes, searching for me, then smiling when he saw me. \"Baby?\" \n\n\"Welcome back, Vic. Don't get shot again, you scared the hell out of me.\" \n\n\"Sorry,\" he said. It took a few minutes for Chase to carefully lift and pull him until he was standing naked on his good leg. I ran ahead, making sure the doors were open and the path was clear. \n\n\"Where do you want him,\" Chase asked. \n\n\"My bedroom, of course,\" I said. I ran ahead, turning down the sheets. \n\n\"Open the bathroom, I need to change his bandages and check the wounds first,\" Chase said. \n\n\"Good, because I have to piss like a racehorse on a flat rock,\" he said. After he used the toilet, I spread a towel on the vanity for him to sit on, then went back and closed everything back up. When I returned, Vic was grimacing as Chase used alcohol and cotton balls from my medicine cabinet to clean the blood from the gunshot wounds. \"Damn that stings,\" he said. \n\n\"It beats an infection,\" Chase said. I handed him his doctor's bag, and he soon had him bandaged up again with a pair of boxers and a T-shirt on. He gave him more antibiotic pills and painkillers, then we helped him to bed. He was asleep in moments. Chase went back out to get the rest of the bags from the car, while I took a quick shower. \n\nHe had them stacked in the spare bedroom when I came out, wearing a Steel Ladies T-shirt and cotton shorts. \"Feel better?\" \n\n\"Much. I'm beat, I'm going to lay down with Vic for a bit, then I'll start working on the next form of our water torture.\" \n\n\"I think I'll take a shower too. I'll wake you up when it's time for dinner, I'll get something delivered.\" \n\n\"You need me to get you some cash for that,\" I teased. \n\n\"Funny. No climbing his tree until he's medically cleared,\" he said as he closed the door. \n\nCh. 52 \n\nDEA Director Frank Grimes' POV \n\nAnaheim Home \n\nBy the time I got back home, I was exhausted. I'd been up for almost forty hours, the short naps on the plane hardly counting. The raid in Oakland and the revelations about the agents the Cartel bought would have been enough for the whole week, but then Chase showed up. \n\nHis information was a gold mine, and we'd acted on it. As I thought over the raid, I wondered if we had done the right thing by hitting all the Chapters in coordinated raids. The Sons behaved like they were warned of them, and they were ready. We'd lost good men, and that knowledge ate at me as I took my shower. \n\nI didn't have any more answers when I got out, and it was almost noon. I was asleep seconds after hitting the pillow. \n\nI woke to a banging noise on the door. \"FBI AGENTS! OPEN UP!\" I rubbed the sleep out of my eyes, looking over at the clock. It was four-twenty and still light out, so it was the afternoon. I grabbed my glasses, pistol, and badge off the bedside table. I hung the badge by its chain over my head. \n\n\"COMING,\" I said. I pulled on the suit slacks I'd tossed on the chair when I got home and padded my way to the door. My back hurt, and I was exhausted, the combination becoming more common in my mid-fifties. I looked through the peephole of the door; there were two men there, both in FBI jackets with badges hanging. I set the pistol down on the table next to the door, then unlocked it. \"What's going on, gentlemen?\" \n\n\"I'm sorry we have to do this, Director Grimes, but we have a search warrant for your home. Please step outside.\" He handed me a piece of paper. \n\nI looked behind them, there were two FBI Suburbans and a truck parked there, and a dozen agents were coming up the path to my porch. \"What the hell is this about,\" I asked as I walked over to the hanging chair on my porch. As soon as I was out of the way, the people moved inside. \n\n\"GUN,\" one of them said. \n\n\"No shit? Gee, you'd think he was an agent or something,\" another man said. \n\nI ignored them, looking at the warrant with my bifocals. The search warrant was based on phone records that showed I had texted an unknown number an hour before the raid, with the information of the start time. There wasn't much else, but I could guess. \n\nThe raid had gone south, and failure always meant finding the scapegoat. I'd just been volunteered. \n\nAnother man in a suit came up to me, it was my Deputy Director, Terry Jimenez, and he didn't look happy. \"What's going on, Terry,\" I asked as he came up to me. \n\n\"The Director flew in this afternoon, and Justice and some other heavy hitters were with him. The State and County are raising hell, wanting to know why their men died. The Director has suspended you pending the results of an investigation into the events of the past day,\" he said. \"I'm sorry, Frank, but this is becoming a shitshow. I have to take your gun and your badge.\" \n\nI just shook my head. \"It's the way it is, Terry.\" I pulled my badge over my head and handed it to him. \"My gun is on the table just inside the door, if the FBI hasn't bagged it already.\" \n\nHe nodded. \"The FBI and Justice want to talk to you. Can you come downtown with us?\" \n\nI looked down at the search warrant in my hand. \"We're a little past that point now.\" \n\nHe looked at the agents already removing my computers and other stuff, all sealed in evidence tape and carried to the truck. \"Yeah, I expect so. Everything is moving so fast; I can't believe they didn't even interview you before this.\" \n\n\"They must think they have enough already.\" I looked down at my wrinkled pants, bare feet, and wifebeater. \"See what you can do about getting me some clothes plus my wallet, phone, and keys. If they aren't arresting me, I want to talk to a lawyer.\" \n\n\"You know anyone?\" \n\n\"I've got a good idea.\" He handed me his phone, and I looked up the name of a lawyer I knew from his work defending an agent against an excessive force complaint. He specialized in law enforcement officers facing criminal charges. Five minutes later, I had an appointment with him at six at his office downtown. A few minutes after that, Terry led me back to my bedroom with an agent watching my every move. I shaved and put on deodorant, then dressed in a suit and pocketed my stuff. The agents had checked it all before I put it on. \n\nAs we walked out, I pointed at the key hanging near the front door. \"That's the extra key, lock up when you're done,\" I told him. \"Try not to wreck too much.\" \n\n\"I'll do what I can, but I have my job too,\" the FBI man said. \n\nThe search of my car was already over; I didn't keep much in it. I unlocked it as Terry shifted nervously. \"The office is yours, Terry. Take care of it,\" I said as I stuck out my hand to him. \n\nHe shook it. \"For now. This shit will blow over, and you'll be back in charge again.\" \n\n\"I don't think so. I'll be in tomorrow to clean out my desk and file my retirement papers. It's about time I spent some time with my grandchildren.\" \n\n\"I hope they are coming out here, boss. North Dakota in December is a frozen wasteland.\" \n\nMy son was a pilot in the Air Force, flying B-52 bombers out of the Minot Air Force base. He was three years out of the Air Force Academy and had nine years left on his service commitment. The B-52 he flew was older than I was, but it was still a formidable plane. Since they only fly out of Minot or Barksdale AFB in Louisiana, he'd chosen to get the winters out of the way early. He was married and had twin daughters that were now ten months old. \"It's about time I spent some time with them. Let the Director know for me? I just... I was thinking about doing it soon anyway, and I don't want to leave you in a bind, wondering if I will come back.\" \n\n\"Sure thing. I'll see you tomorrow.\" I drove off, heading downtown. Traffic sucked, and I was running late by the time I arrived at the office building. I walked into his reception, where a striking young lady smiled at me. \"Hi, I'm Frank Grimes,\" I said to her. \n\n\"Ah, Mr. Grimes, I'll let Thomas know you are here.\" She spoke into the phone, then escorted me into the twentieth-floor office of Thomas Carpenter. I gave him a summary of my day, and signed a form and a check for his retainer. This defense wasn't going to be cheap. Four hundred dollars an hour adds up real quick. \n\nOver the next two hours, I laid out everything to him. I didn't have to hide what happened since attorney-client privilege protected me. \"Can I summarize,\" he finally said. \n\n\"Of course.\" \n\n\"The Sons of Tezcatlipoca found out the name of your friend and former undercover agent and killed him and his wife, then expanded the war to the Steel Brotherhood by going after their daughter, then the Clubhouse. Chase Nygaard approached you with a deal; he would get you information that would allow you to take down the Sons while keeping the Brotherhood from escalating this into a gang war. He came through, giving you information on the drug pipeline through Oakland, then offshore financials that tied all the chapters to the drug trade. Correct so far?\" I nodded. \"The Oakland raid went off perfectly, but Chase asked you to give him a heads up before raiding the Long Beach clubhouse because he had an asset there he needed to get out of the way.\" \n\n\"That's what he told me, and I believed him. We've never been able to turn one, but he's not a cop.\" \n\n\"Do you know what he is? Why he would have such reach?\" \n\nI shook my head. \"I'd never met him before Orlando. What I do know is that the Brotherhood trusts both of them. He had resources we didn't, and the information he provided proved that. Our accountants lit up like Christmas trees when they started looking at the bank statements he provided, and everything about the drug pipeline was confirmed. I'm not involved in investigating the compromised law enforcement agents, though, so I don't know how accurate that was.\" \n\n\"Well, let's just say that you aren't the only agent looking for a lawyer right now.\" He picked up the search warrant. \"They've already executed a search warrant on your phone. Is there anything else on there I should worry about?\" \n\n\"No, all the information Chase sent me came as a text and I forwarded it. We never spoke directly; when I met with him after returning from Oakland, it was because he was waiting for me on my front porch. Since I sent him the text with 'go time 0600' I haven't heard from or spoken to him.\" ",
        "\"You can't burn him,\" he asked me as he looked up from his notes. \n\n\"No, I gave him my word, and he's sure as hell held his end up.\" \n\n\"I had to ask. You know the drill with the suspension?\" I was very familiar with the process, though this was my first time on the receiving end. I nodded. \"When they call the hearing, I will be there to represent you. We are saying as little as possible; you were protecting a confidential informant and will not disclose further details. Given the reputation of the Sons and their recent attacks, it's reasonable to think that the information would only come if you gave your word that their name would remain secret.\" \n\n\"And I gave him that.\" \n\n\"If there isn't more for them to find, they don't have probable cause to arrest you for anything. We'll cross that bridge when we come to it,\" Thomas said. \n\n\"What do I do now?\" \n\n\"Clean out your desk, file your papers, and take some paid time off while you are on suspension. While you are out, assume your electronics and phone are under surveillance, your car has a GPS locator on it, and you are being watched everywhere you go. Don't do anything suspicious.\" \n\n\"What if Chase sends me more information?\" \n\n\"Forward it to the acting Director immediately. Don't hide anything, and hope Chase is smart enough not to do anything that lets them know who or where he is.\" \n\n\"Thanks, Counselor.\" \n\nI left the office feeling a little better about things. I grabbed dinner in a restaurant downstairs, turning on my phone again. It had blown up with text messages and emails from friends and colleagues, dividing into two subjects. One was congratulating me for taking down the Sons, the other shocked that I'd been suspended. I read through them but didn't respond to any. \n\nI went to the Los Angeles Times website and started reading the coverage from the day I'd slept through. The coverage of the raids focused on the loss of life on both sides; the SWAT team leader said they had run into more difficulty making entry than they expected, and praised the driver for getting his men out of the kill zone. There were photographs and profiles of the dead Deputies, and my hand shook as I read about them. It was my operation, and men had died. I felt horrible about that. \n\nI was shocked to see the pictures of the escape tunnel we discovered after the fact. The building it came up in was registered to a shell company out of the Bahamas. The company was linked with \"overseas banking transactions linked to the Sons\" according to sources within the investigation. That was an understatement. The information Chase gave me had been enough to get warrants for the entire Club and would take them down on RICO charges. No matter what happened with the investigation or my suspension, I felt good about it. We had taken down a violent biker gang and shut down a drug pipeline. \n\nThe tunnel and the lack of senior leadership in the raids keyed the FBI and Justice Department to look at me. Well, that and the evidence of the Sons being ripped off at the same time. There were seven dead Sons in the warehouse, from five different chapters. They were all long-time members, the senior man being the Treasurer of the LA chapter. That was too bad; it would be perfect if he would have flipped. What no one knew yet was what the other building was for. Drug dogs didn't hit on it strongly, and the search came up empty. \n\nWhatever it was, it was attractive enough for a team to hit it hard and quick. The drone footage was intermittent, but the robbery team was in and out in under three minutes. They had timed the robbery perfectly, using our raid of the Clubhouse as a distraction. \n\nThis conclusion left a bad taste in my mouth. Chase had taken advantage of me, using me so his own Club to take their revenge. He'd taken something important from the Sons, and I was paying the price. \n\nI would let things quiet down for a while. I was going to show up on his doorstep unexpectedly, and I wasn't going to leave until Chase gave me my answers. \n\nCh. 53 \n\nSenior Agent Frank Donovan's POV \n\nOrlando Office, Sons of Tezcatlipoca Task Force \n\nThe office had been reeling with the news of the morning raids and the losses of life and overwhelmed by the volume of evidence that had come in. There were Federal judges in California, Florida, and Washington, DC that did nothing this day except issue search warrants. The information that Frank Grimes had provided was both accurate and explosive. \n\nThe raid in Oakland got the press, but it was the other information he had that caused heads to roll. The list of names rumored to be on the Cartel payroll was disturbing. The DEA Director in San Francisco had been replaced, multiple senior agents and lawyers suspended, and investigations opened. Frank Grimes was suspended and rumored to have tipped off the Sons of the attacks coming, which was ludicrous. Frank hated those guys more than anyone; they'd killed his friends. \n\nI had just gotten back from visiting the Steel Brotherhood's Orlando clubhouse and passed along the information to Mongo and his men. I hoped they listened to me and stayed out of the spotlight because the investigation was starting to resemble a feeding frenzy. Good men like Grimes were being caught up in it, and the Brotherhood could be next. \n\nIt was past eight at night when I walked into the office, and the tension could be cut with a knife. \"About time you showed up, Donovan,\" Al Perkins said from his office door as I took my seat at my desk in the middle of the space. \"Commander Lindstrom has been on a conference call for almost an hour now, and it isn't going well from what I can see.\" She was the FBI manager who had taken over the Task Force from Frank Grimes. \n\n\"I don't think anyone is comfortable right now, especially me,\" I said. \"Frank Grimes was my boss and a close friend; I was half expecting to be asked for my gun and my badge when I walked in.\" \n\n\"Well, you might want to know what I found out from our friends in Canada,\" he said. \n\n\"Anything we can use?\" \n\n\"Actually, yes. You can't use intercepted communications between US citizens, or between a US citizen and a foreign national. You CAN use communications between two foreign nationals. The list of numbers that Grimes gave us, we used that to search for international numbers, then pulled the conversations. We identified two numbers belonging to the Sinaloa cartel, and four belonging to Sons of Tezcatlipoca chapters in Mexico. We couldn't tie them directly to the smuggling, but between the phone numbers and the bank accounts, we have the Club on money laundering.\" \n\nThat was good; that was one of the crimes the RICO statute could use. \"At least it is something.\" \n\nAl nodded. \"True, and the call histories of the Sons chapters here to the known Cartel numbers will help.\" \n\nI heard a loud belly laugh in the room, and everything stopped as people turned to see what was going on. It was one of the FBI men, on the phone. \"Hang on,\" he said. \"This is too good to keep to myself; I'm putting you on speakerphone.\" He hit a button. \"Everyone, this is Claire Bennington, she's one of our forensic accountants back at Headquarters. Claire, we're all listening.\" \n\n\"Well, let me back up a bit and explain. My office has been following up on the account statements that Director Grimes provided. The bank in the Cayman Islands refused to cooperate at first, so we focused on the other end of the transactions. The US bank accounts connected to the Sons, that was easy, and receiving those funds was the basis of the raids this morning.\" \n\n\"That was good work; I still can't believe we got the warrants that fast,\" I said. \n\n\"Thank you. Anyway, the tougher part was tracing the deposits going into the account. We have to go from one offshore bank to another, but we finally traced the funds to Bank of Mexico accounts. The Mexican banking authorities took over from there and confirmed the transactions. Tens of millions in US currency has gone through a half-dozen Mexican banks.\" \n\nThere was some applause at this; we all wanted them for violent crime, but money laundering laws had severe penalties. \"All right, now tell them the good stuff.\" \n\nShe laughed. \"We put pressure on the Cayman bank to freeze the account, but it's taken us most of the day to get them to provide us with the account records. The statements are legitimate.\" \n\n\"Did you seize the funds,\" I asked. \n\n\"We got them to freeze the account, but I don't think it's worth the legal headaches of seizing the funds,\" she said over the phone. \n\n\"Why not, that account had almost ten million in it,\" another agent said. \n\n\"No, it had nineteen dollars and eighty-seven cents left.\" My jaw dropped, and I could hear several people gasping. \"All the money was transferred back to the United States yesterday, before the raid on the Oakland warehouse.\" \n\n\"Well, then we go after the funds in the United States,\" I said. \"That's even easier, and we can take down the people who received the funds.\" \n\n\"I don't think you want to do that. Look, either the Sons had a complete change of heart, or someone hacked their account and drained it. My money is on the latter, and if I ever meet the person who did this, I'm buying them a beer.\" \n\n\"What did they do?\" \n\n\"The contents of the account were distributed charitably. About two hundred and twenty-five million sent to each of the GoFundMe pages of the three Orlando police officers, the victims of the attack on the Orlando clubhouse, and Harleigh Ryder. The remainder was divided among a few charities supporting law enforcement and military foundations. The Marine Corps/Law Enforcement Foundation, the Gary Sinise Foundation, a few others.\" She started laughing. \"It's fucking classic. Someone took the gang's drug money and used it to help the victims of the gang. We don't have to go after the money; it's already gone.\" \n\nI thought about it, then started laughing too. Others soon joined in. \"Oh man,\" I said as I wiped my eyes. \"I wish I could be a fly on the wall when Jesus Correria or the others pull up their account information and see it gone.\" \n\n\"I can't wait until they are behind bars, and all the guards are thanking them for their charitable donations,\" Al Perkins said. \"Honestly, this is better than any other option. The money would be tied up for years before the Government adds it to the general fund. Instead, a whole bunch of families and deserving people are going to get some financial help out of this.\" \n\n\"Well, I'm done investigating where the money went. I'll put the final destinations in the report. I've already checked with Legal; since the charitable organizations and funds did not know the source of the money and did not solicit it directly, they can keep it. The Government could sue to retrieve it, but that would be the dumbest move ever.\" \n\nI had to agree. At that moment, the door finally opened to Commander Perkins' office. \"Donovan, a moment.\" \n\n\"Yes, ma'am.\" I walked into the room as she held the door; she gestured for one of the chairs in front of her desk and closed the door behind her. I waited for her to sit down behind her desk before I sat. \"You heard about the Cayman account?\" \n\n\"I've been briefed,\" she said. \"You know about Director Grimes?\" \n\n\"Just what is on the rumor mill. I left a message on his phone, but he hasn't returned it. The guys in the Los Angeles office don't know anything; I know the Deputy Director is taking charge.\" It all seemed surreal to me, I could only imagine what Frank was going through. \n\n\"He is suspended; there is evidence he tipped off an unknown person about the timing of the raids. That person we suspect hit the building where the tunnel came out at the same time we raided the Clubhouse. They killed six men and took something; we believe it was a large amount of cash.\" \n\n\"I don't believe he would do that,\" I said. \n\n\"He may not have known what the other person was doing, but at this point, it doesn't matter. He has informed the Director that he will be retiring anyway, and so he won't be going back. Acting Director Terry Jimenez has asked for you to return, and I've agreed to let you go from the Task Force. You are to turn over your information to the team tonight and clear out your desk. Catch a flight back to Los Angeles and report to work.\" \n\nI just nodded, I was shocked to be off the task force so quickly. \"I understand. Thank you, Commander Perkins. Maybe we will work together again.\" \n\n\"Sooner than you think, Agent Donovan. The Sons task force is relocating. There isn't anything left in Florida to deal with now. The Florida Attorney General is closing out the investigation into the events here; all of the Sons involved are dead or presumed dead. If there is evidence of a conspiracy to commit murder, it will be in another state and pursued at the Federal level.\" \n\nI whistled. \"I didn't think the locals would give up that easily.\" \n\n\"They aren't the priority anymore, and they want to close this chapter out. No one likes open cases involving dead cops.\" \n\nIt made sense. \"You said the task force is relocating. Where?\" \n\n\"Los Angeles,\" she said. \"I've been asked to head up the Federal law enforcement group; the Justice Department will be heading it up, with State and County officials. This task force is going to be huge; there are multiple states involved, and hundreds of people indicted. I will close out this office tomorrow, then head west. That's not to be talked about yet; I'll make the announcement soon.\" \n\n\"Understood. Congratulations, Commander.\" She started to work, so I took the hint and got up. \"I'll check out with you when my turnover is complete,\" I said. \n\n\"Go.\" I walked out the door and back to my desk, several of my colleagues gathering around to find out what is going on. \"It's true, Director Grimes is suspended and is retiring. I've been taken off the Task Force and directed to return back to the Los Angeles office to support the Acting Director.\" \n\n\"Shit, sorry man,\" Al said. \"I'm not surprised; all the action is out west now.\" \n\n\"Hey, I get to sleep in my own bed again. It's been good working with you,\" I told him as I handed over my card. I called my home office and had them get me a flight; I took one that left at two in the afternoon tomorrow so I could sleep in. I didn't have a lot to turn over, so I exchanged contact information and cleared out my desk. \n\nWhen I went to check out, Commander Perkins was on the phone; she just waved goodbye to me and turned to look at her computer again. I dropped my keycard at my desk, shook a few hands, and walked out just before ten at night. I opened the trunk of the rental car and set my suit jacket and tie inside, then put my gun and badge on top; I wasn't on the clock now. \n\nI needed to make one more stop before I left, so I drove the familiar route to the Orlando Brotherhood clubhouse. Parking outside, I told the Prospect manning the gate that I needed to see Mongo. \"Follow me,\" he said. \n\nHe opened the gate. I followed him inside, and he led me to the bar area of the big space that they had. The Clubhouse was packed, music was blaring, and the tables were full of members and their Old Ladies. Mongo was at one of the long tables, Three Tequila on his lap, surrounded by a few of the other Chapter Presidents I recognized from the service. \"Sorry about dropping in, but I needed to talk,\" I told him as he looked up. \n\n\"Let's go to my office,\" he said as he started to lift Three Tequila up. \n\n\"No, this is fine. I'd rather do this over a couple of beers.\" He raised an eyebrow at that but gestured to the Prospect to get me my drinks. \"I'm off the clock and the case,\" I said. \n\n\"Well, in that case, have some barbecue with your beers.\" Another prospect came up, bringing a plate loaded with chicken, ribs, cornbread, and beans. \"You picked a good time to go off the clock; the party really starts up in the next hour or two.\" \n\nI tried the chicken; it was excellent. \"I'm off the Task Force,\" I told the men at the table. \"I've been recalled to the Los Angeles office. I fly out in the afternoon.\" \n\n\"There's a lot of shit going down out there,\" Three Tequila said. \"I'm not surprised they are sending you home.\" \n\n\"You heard about Frank Grimes?\" A few of them nodded. \"He's out; if he gets off suspension, he'll already have his retirement papers in. They need me back there, and like you said, all the action is out there now. We don't have any suspects in Harleigh's abduction or the attack on your Clubhouse who are still alive.\" \n\n\"The Sons are still a danger,\" Shimmy said. He was acting President of the Fort Lauderdale chapter now, with Granite still in the hospital and paralyzed from the waist down after taking a bullet in the back. \"Jesus Correria is still at large.\" \n\n\"For now,\" I said. \"The Sons are going to be buried in indictments and injunctions soon. We're going to RICO their asses until they are all in prison.\" I started to laugh. \"You wouldn't believe what I heard tonight before I left.\" \n\n\"You can't just leave that hanging,\" Three T said. \n\n\"Notice anything in your Go Fund Me pages,\" I asked. \n\nThree T's eyes lit up. \"It's been amazing,\" she said. \"Some of the families are over three hundred thousand in donations.\" \n\n\"Well, SOMEONE hacked the Son's offshore account where they kept their drug money after laundering it,\" I said. \"They donated over two hundred thousand to every one of the victims, and made big donations to some other military and law enforcement charities.\" \n\nHer jaw dropped. \"THAT is where the money came from?\" \n\nI nodded. \"My God, I wish I could see their faces when they find the money gone, and then when they find out where it went. It's poetic.\" I started laughing, then the rest of the table joined me. \n\n\"We don't have to give that money back, do we,\" Tripod asked. \n\n\"No, the Government isn't going to go after it, I have that straight from the FBI and their lawyers.\" I tucked into the ribs; they were even better. We didn't get good barbecue in Los Angeles, not like this. \"Damn, this is great stuff.\" \n\n\"One of the guys at the Myrtle Beach chapter came down and cooked this. We have an unofficial barbecue competition since the Chapters love to drink and eat. He won Best Ribs,\" Eclipse said as he ate a few more. \"We've been doing whatever we can to help out the Orlando chapter while they get set up again.\" \n\nI took a long drink. \"Well, keep your heads down, and things should blow over soon. I don't think the Sons will be able to put another attack together given the pressure we are putting on them, but you need to stay safe.\" \n\n\"We'll make sure they are,\" Eclipse said. \n\nWe talked for a while about other things, and they were disappointed to learn I didn't ride. \"Jesus, you're in Los Angeles, you should be riding all the time,\" Mongo said. \n\n\"I never learned,\" I said. \n\n\"There's nothing like it,\" he said. \"It's never too late. The stats say the average Harley buyer is a professional male in his forties. You're in the zone,\" he said. \"Once you retire, you could even prospect if you wanted.\" \n\n\"That's all I need, to be fifty years old and waiting tables,\" I said with a laugh. \"Where's the bathroom?\" \n\n\"Back this way, I'll show you,\" he said. I wiped off the sauce with a napkin, tossing it on a plate that only had the bones left, and chugged the rest of my beer. Following him through a door and down a hallway, we went into a smaller room. \n\nMongo checked that it was empty, then locked the door as I was using one of the urinals. \"She's safe,\" he said. \n\n\"Good. Keep her that way.\" I finished up and went to wash my hands. \"I was able to keep the investigation from going in the direction of Chase and Rori, but I'm off it now. Make sure they keep their noses clean and avoid attention.\" \n\n\"We will. Come on, the band should be starting soon.\" We went back out to the party, and I let myself have fun for one night. They had a Prospect drive me to my hotel. ",
        "The flight to Los Angeles was brutal with the hangover I was nursing. \n\nCh. 54 \n\nRori King's POV \n\nArrowhead Alpha's House \n\nCoral came in and sat with me as we fed the babies after their afternoon nap. \"Did Three Tequila make it out all right?\" \n\nShe nodded as she picked up Hope and sat in the comfortable glider next to mine. \"Ron and the boys trailed her and watched until her plane was in the air. They didn't detect any tails, and she managed to get there without sliding off the road.\" \n\nI laughed at that; I remembered from my time in Florida how inept Southern drivers are when it comes to driving on snow and ice. What we in Minnesota wouldn't think twice about, Florida drivers would stay home for days to avoid. \"Are they back yet?\" \n\n\"Nope. The lockdown meant the Betas had a long list of items needed from town. They're making a Sam's Club run in Duluth and loading up both the trucks. He did say they were having a good sale on Porterhouses and Prime Rib roasts, and they are running holiday sales on turkeys and hams. He authorized exceeding the normal food budget to so we could stock up on meat. The Pack could use a good feed.\" \n\n\"You're right.\" Cheryl finished nursing, so I handed her to the nanny as I waited for Mark to finish. \"We need to do something about Heather. Three Tequila went through a lot to warn us; we have to get that to Greg. We just don't know where he is.\" \n\nThere was a knock on the door, and Keith came in, kissing his mate and his daughter before sitting in an extra chair. \"Coral and I talked about this earlier. I think I have a plan that will work for that,\" he said. He pulled out his iPad, which displayed a highway map of Minnesota. \"The last we heard of Greg and Heather, they were southwest of Wadena, and he said he was heading south. I doubt if he wanted to spend all day driving, so I'm betting he's somewhere in Minnesota or Iowa.\" \n\n\"We don't think he's in a big city,\" Coral said. \"Too many people who might recognize her and too expensive long term. Better to stay among small towns, pay cash for a room, that kind of thing.\" \n\n\"Makes sense,\" I said. \"What are these shaded areas along the highways?\" \n\nKeith pointed at the light blue one that followed Highway 10 towards North Dakota. \"I set the width of these shaded areas to twenty miles, the effective range of mental communications for normal ranked Pack members. If we sent a Pack wolf along the highway and he's in the shaded area, we should be able to talk to him and give him the warning.\" \n\n\"Since we only use the Pack bond, there's no possibility of our the government or the Sons picking up our communications. We can find out their status, address and pass along the warning, all while driving down the road normally.\" He pointed at the next line down. \"If they aren't along Highway 10, we go down Highway 210 south of Wadena to Fergus Falls. If not there, Interstate 94, then Highway 12, then Highway 212 and so on. We keep running cars east and west until we pick him up, moving south with each run.\" \n\nI looked at the map. There was a lot of overlap on the routes because things didn't always go neatly east-west in the land of ten thousand lakes. \"That's a lot of driving. How long would it take?\" \n\n\"It depends on how many wolves we put on it. If we sent four out, they could make a sweep out and back in a day. They would clear down to Interstate 90 the first day, the second they could clear the rest of Minnesota and into Iowa. We can keep this up until we find him. If we send two, twice as long, eight or ten we could do it in a day.\" \n\nI burped Mark and handed him off. \"I like the idea, but I don't want anyone leaving the Pack alone. Pair up one warrior with one Omega, and send four teams out. Make sure they understand that they are only to turn around when they get to I-29 in the Dakotas; we don't want anyone stopping and drawing attention to the area Greg is at.\" \n\nCoral nodded. \"We send two cars together down to the Twin Cities, the other two head west towards Brainerd. That way they can watch for trail cars. If there is any sign of danger, they are to high-tail it back here.\" \n\n\"Pick the teams. The message is simple; Heather was recognized; Greg needs to keep her out of sight and off the grid. Get their address and ask if they need anything. Once we know where they are, we'll send a driver past every Saturday afternoon to check on them,\" I said. \n\nCoral put her hand on her mate's arm. \"And tell Greg that if he needs to get out of there, call the Pack Security line and say 'eject eject eject.' We'll send warriors to get them.\" \n\n\"You've been watching 'Top Gun' again, haven't you baby?\" \n\n\"Of course, the sequel is coming,\" she teased. \"What else do we need to do?\" \n\n\"We need to let the Pack relax a bit,\" Keith said. \"Tempers are getting shorter. Christmas is next week and the kids are out of school for two weeks. With the lockdown, we can't go to town or visit people. I had to break up more arguments today than I normally do in a week.\" \n\nI nodded towards the Pack House. \"Is the pool back up yet?\" We'd drained the whole thing when the Werejaguars attacked; Roadkill had insisted on cleaning and repairing some items before he refilled it. \n\n\"He said it would be heated up to normal by dinnertime,\" Keith said. \n\n\"So, we've got a ton of steaks coming, the pool room is back in business, and we miss seeing our friends?\" They nodded. \"Simple solution. Beach party at the Pack House all day tomorrow. Start things about ten, go through lunch and dinner and into the night for the adults. Slumber party for the young ones in the basement; having everyone here will make security easier. I'll call my aunt and uncle and invite Oxbow to come down, that will make it a real party.\" Oxbow didn't have anything like our indoor pool complex, so I figured we'd get a good turnout from our neighboring Pack. \n\nKeith smiled wide at this. \"We can set up the grills, maybe have some games and tournaments to lend some excitement. I'll make sure we have plenty of beer and drinks, too. We have the ice fishing houses on the lake; we can have a fishing tournament if we want.\" \n\n\"We can put Christmas movies on the big screen in the pool room, and football in the dining hall.\" Coral thought of something. \"Heck, we could turn the morning into a decorating party, get all the trees put up with the kid's help.\" \n\n\"I love it,\" I said. \"Work with the other Betas to see what needs to happen and set up signup sheets for help. We'll tell the Pack at dinner.\" The babies were all sleeping now, so I left them with the nanny and the warrior and walked out with my sister-in-law and her mate. Keith went off to talk to the kitchen workers. \"The first thing Luna Margaret is going to ask is if they can bring anything. What should I tell her?\" \n\n\"Snacks and desserts,\" Coral said. \"We can handle the meats and sides, and those are easier to transport. By the way, you know that Mom is coming tomorrow, right?\" \n\nMy shocked face gave my answer away. \"Chase didn't tell her to reschedule?\" He was supposed to talk to her and get her to change her flight since he was going to be out of town. \n\nCoral just laughed. \"You think she would give up time with her grandbabies just because her son isn't here? That's just more snuggle time for her!\" I groaned and sat back in my office chair as she sat down. Colletta had a rough past year; her husband almost tore the family apart before he went feral and we had to put him down. She'd been moving between her three son's Packs, helping each of the new Alpha pairs adjust to the job. \"She flies to Duluth at 1:20 tomorrow. Keith and another warrior will go pick her up.\" \n\n\"I'm worried about her being here while we are under lockdown from the threat,\" I said. \n\n\"To her, that's another reason to be here. Another Alpha blood to defend the Pack, that's how she thinks. She won't be anywhere else when her three little grand-pups are in danger.\" Werewolf mothers and grandmothers were extremely protective of the children, and an Alpha blood extended that to the entire Pack. Colletta wasn't technically a part of our Pack; she was still a member of her original Pack, the Cascade Pack, now run by the unmated Alpha Carson, and helping him as a pseudo-Luna. \"Her room is ready on our floor, and Keith and I will handle it. You handle the party.\" \n\n\"Fine,\" I said. Coral hugged me before she left, she had her own work to do. I picked up the phone and called Luna Margaret, the sister of my father, who died when I was a year old. \"Good afternoon, Aunt Margaret,\" I said. \"Did I catch you at a good time?\" \n\n\"Nothing much else to do in this cold,\" she said. \"How are the babies doing?\" \n\n\"Almost ready for solid food and weaning,\" I said. We caught up on things for a few minutes before I got to the point. \"Margaret, our Pack is a little down from the threat and the lockdown. We decided to have a beach party at our pool tomorrow, from ten in the morning until late at night. We'd like to invite you and any of your Pack members who would like to attend.\" \n\nShe gave a little squeal. \"Oh, that would be great! We could use a diversion too. What can we do to help?\" We talked for a few more minutes about food, security, activities, and logistics. \"I'll announce it to the Pack tonight and give you a call later with the count. This is going to be so much fun!\" \n\n\"We're thinking that with it going so long, we'll be able to rotate out the people on security duty or other support so everyone gets to have some fun.\" \n\n\"We'll do the same,\" she said. \"I have to leave a few people here to keep the lights on, but I'm sure almost everyone else will be coming.\" We eventually hung up when I got the message the babies were up and wanted their dinner now. \n\nI'd asked the whole Pack earlier to eat dinner together, so the dining hall wing was full when I walked in with Coral, Keith, and our entourage of warriors and nannies. I spent a lot of time before dinner was served reassuring and comforting my Pack. Beta Ron and his team had come back from Sam's Club earlier, the freezers restocked, and the shopping needs addressed. Over dinner, I talked to everyone about the security situation, which remained unchanged. \"Right now your Alpha is out there helping the Federal government in their effort to wipe out the Sons of Tezcatlipoca,\" I told them. \"You've seen the news of the raids, but you also need to know that the leadership, the ones who are Werejaguars, are still at large. We have to assume they know or suspect that Chase and I are part of this since one of their Presidents scented us at the Memorial. While our Alpha does his work, we need to remain safe and secure here. The lockdown rules will remain in effect, maybe for weeks.\" There were groans in the crowd. \"If this creates specific hardships, work with your Betas to see if we can find some relief. As you think of the restrictions, understand what the people threatening us are capable of, and why we are so protective of you all.\" I let that sink in, building the drama for the fun part. \"That doesn't mean we can't have fun. The pool is back, and Oxbow Lake will be joining us tomorrow for an all-day Beach Bash!\" The Pack let out cheers at that news. \n\nCoral and I laid out the plans, and they had sign-ups for shifts at the various activities and help needed. The mood picked up noticeably as we walked out. \n\nThat night, as I tried to fall asleep alone in my bed again, I prayed that Chase would finish up quickly and get back to us. The sooner the threat was gone, the better. I tossed and turned for almost an hour before I gave up; my wolf was acting weird. I turned on the light and got up. It had been a few days since I had let her out, maybe a good run would help me sleep. \n\nI checked the babies and let the warriors know I was heading out, then went through the tunnel to the Pack House. The Security Center was quiet, and they were about to send out patrols. The Oxbow Lake pack was still patrolling part of our border in wolf form, so I brought one of the trainees with me to check that out while the others went for the snowmobiles. The tunnel came up well away from the lake, hidden by a hill and dense trees, so our shifts were unseen by the humans around the lake. \"Ready to run, Vicki,\" I asked the formerly enslaved wolf who had come to Arrowhead with the other Omegas. \n\n\"Nice night to run,\" she said as she left her clothes in a cubby. Her wolf was larger than a true Omega's; not the size of a born warrior, but long and lean like a tracker. I finished putting my clothes away and closed my eyes, calling for my wolf to come forward and take control of our body. \n\nNothing happened. \n\n\"Come on,\" I told her in my mind. \n\n\"No. Pup.\" I reached my hand down over milk-swollen breasts to my belly. I didn't think it would happen until I had weaned the twins. I'd have the Oxbow Lake doctor verify in the morning, but my wolf wouldn't be wrong about this. \"Vicki, shift back and return to Security,\" I said. \"Something has come up; I can't run the patrol tonight.\" \n\nShe shifted back. \"Aww, I was looking forward to this,\" she said as she reached for her clothes. \n\n\"Plans change quickly sometimes,\" I said. I dressed, and we walked back through the tunnels. I checked the babies before going back to bed. \n\nSleep didn't come for hours, as my wolf and I reached out in vain for the mate we wanted by our side. \n\nCh. 55 \n\nFrank Grimes' POV \n\nDowntown Los Angeles \n\nThe more I thought about Chase and Rori Nygaard, the madder I got. The thought that Chase played me in this whole thing was the worst. If he had fed me all that information just so the Brotherhood could steal their money without getting caught? I didn't know what I was going to do if that was the case. \n\nI could sing to the investigators about everything, and I'd still be the guy who let men die by tipping off another. \n\nI thought about it; I didn't have anything that I needed to do in Los Angeles right now. The house was locked up, I couldn't work, and they could put my stuff in a box for all I cared. I went to a travel website, looking for flights to Minot. \n\nThey only flew out of there once a day, and to make it; I'd have to be at the Minneapolis airport before nine in the morning. There was a redeye leaving at midnight, just a few hours away, that got into Minneapolis at six. The last-minute fare was still cheap, meaning the plane would not be full. I booked the flight, then arranged for a rental car out of the Minot airport. \n\nThe arrangements made, I looked at the clock. It was past nine at night, meaning it would be past eleven in North Dakota. With twin babies in the house, there was no way I was going to wake them up. I'd call them in the morning. \n\nI got back in my car and drove to the airport, leaving my car in the long-term lot. I went into the trunk and took out my go-bag. As a DEA manager, I could be called to travel on a moment's notice anywhere in the country. I'd learned long ago to keep a suit and a bag with enough for a few days in a hotel in my trunk. I'd been wearing this suit all day, and I wouldn't need one in Minot. I took off the jacket, tie, and shirt, leaving them on top of the garment bag with the spare suit, and pulled on a white DEA logo polo shirt. I put on fresh deodorant and used the electric razor to take care of the stubble. I didn't have a winter coat, but I did have a DEA logo hoodie and thin gloves. That would have to do; I put them inside my garment bag, then headed for the terminal. \n\nI checked my bags and got through security, and for the first time in a long time, I wasn't flying armed. My gun and badge were back at the office in a safe. As I checked in to get my boarding pass, the woman at the counter did a double-take as she looked at my identification and my shirt. \"Are you Frank Grimes, the DEA director who got suspended?\" \n\nI nodded. \"Yes, but it's a formality. I'm going to take two weeks it will take them to figure out I'm innocent and go visit my grandchildren.\" \n\n\"Ouch, Minot in December. You must love them to leave this weather for that.\" She tapped a few keys. \"I upgraded you to First Class on the flight to Minneapolis, but the regional carrier to Minot doesn't have sections. You'll be lucky if you aren't on a bench between the chicken cages and the pilot,\" she joked. \n\n\"Thank you, Jennifer. I appreciate it.\" \n\n\"My husband is a Deputy Sheriff in Los Angeles, Mr. Grimes. He doesn't blame you, none of them do. The Sons are a menace, and you're the man who took them down.\" She handed me my ticket and boarding pass, and the gate number. \"Enjoy your flight, sir.\" \n\n\"Thank you, and have a good Christmas, Jennifer.\" I walked away, feeling a lot better after that conversation. I didn't bring a carry-on bag, just a book, and my phone. I got through the TSA checkpoint and found a bar where I could wait for my flight, ordered a beer and some buffalo wings, and opened the book up. It was a good one; Windswept Stars by PenumbraMine. I'd read the other books about Pagosa Cliffs and couldn't wait to see what would happen with Tank and the others. \n\nI was on my second beer when someone slid into the empty barstool next to me. \"This wasn't my idea, Frank.\" \n\nI looked over at the woman in the grey pantsuit next to me. \"Agent Jenkins, fancy meeting you here,\" I said. She was one of the agents in my office; well, what used to be my office. She was a good agent who just needed more experience in the field. \"They send you to see if I'm making a run for the border?\" \n\nShe nodded. \"Your car and phone at the airport caused some concern with Justice. Some expressed concerns you are fleeing the jurisdiction.\" \n\n\"I'm suspended, not under arrest,\" I said. \"I'm tired, I'm off the case, and I've only seen my son's baby girls once since they were born.\" I pulled up a photo on the phone, my son in his uniform, he and his wife each holding a baby girl. \"Christmas is coming, and I'm not going to waste it around here waiting for them to get their collective heads out of their asses.\" \n\n\"They want you to speak to the investigators,\" she said. \n\n\"They can speak to my lawyer about that; he will be contacting them in the morning. I'm going to Minot unless you are here to arrest me, in which case they can STILL speak to my lawyer in the morning.\" I could see this was difficult for her; she was just a messenger. \"I know you can't drink with me, but can I interest you in some overpriced appetizers and a Coke? I've got another hour before the flight boards.\" \n\n\"Sure,\" she said. \"I'm supposed to make sure you board the plane to Minneapolis and then report back. I haven't eaten dinner yet, things have been so hectic at the office.\" We had a good time, and I waved to her as I boarded. \n\nThe flight was only half full, and I slept most of it in the first-class seat. We landed at six, and the flight attendant told me to check-in at the desk when I got off the plane. \"I'm Frank Grimes,\" I said to the woman at the gate desk. \n\n\"Ah, Mr. Grimes. Bad news I'm afraid; our regional partner has canceled your connecting flight to Minot. There's a blizzard coming across the state, and everything will be shut down for the next day, maybe two,\" she said. \n\nI pulled out my phone, checking the weather report for Minot. It wasn't good. \"Can you get me closer?\" \n\n\"I might be able to get you on a flight to Fargo or Grand Forks, but those just as likely to be snowed out.\" \n\n\"Could I drive?\" \n\n\"Sir, with all respect, people who live in North Dakota aren't driving in this weather. Roads are closing already. I can book you standby on the flight tomorrow; you could get a hotel room here, maybe see the Mall or something?\" \n\nIt sucked, but she was right. I wasn't going to make Fargo, and I was glad I hadn't called them yet. They would have told me to stay put until it blew over. \"Well, I have other business up in Duluth, can you get me there?\" ",
        "She hit a few keys. \"There is a flight leaving at one, arriving at two that I can book you in first class. The morning flight is full, but I can put you on standby if you want.\" \n\n\"Yes to both.\" I handed over my credit card. \"Can you make sure my baggage gets tagged for the new destination?\" \n\n\"Of course, sir. Enjoy your time in Duluth.\" I got some breakfast, finished Windswept Stars then moved on to reading JoLeeHunt's \"Heart of Stone\" on Inkitt. I didn't make standby for the early flight, so I did some shopping and bought a heavier jacket and a Minnesota Vikings stocking cap so I wouldn't freeze so bad. I bought a cinnamon roll and a large coffee, then sat down in the gate area to wait for the flight. \n\n\"That roll smells amazing,\" a woman said as she stopped in front of me. I looked up; she was a striking woman, probably in her late forties. She had her hair pulled back from her face, a little bit of grey streaking through it. Her eyes drew me in, and I smiled as I waved for her to take the empty seat next to him. She dressed comfortably; designer jeans tucked into tan Uggs, a turtleneck ski top with a fleece vest. She wasn't wearing a ring; in fact, she wasn't wearing any jewelry. \n\n\"It's way too much for me, would you like some of it?\" \n\n\"Oh, I couldn't,\" she said. \n\n\"You'd be doing me a favor; this thing has about five million calories, and it will save me an hour on the treadmill tonight if you share it with me.\" I reached my hand over the small table between us. \"I'm Frank, I flew in this morning from Los Angeles,\" I said. \n\n\"Colletta, and I had a redeye from Seattle,\" she answered as she took my hand in a firm handshake. \"Can you watch my stuff? I need a big coffee, and I'll get myself a fork.\" \n\n\"Of course,\" I said. I watched her closely as she got up and walked off. She was effortlessly beautiful, and her body would make the starlets in Hollywood envious. Maybe this trip wouldn't be so bad if I could get a phone number and a dinner date out of it. \n\nShe came back a few minutes later; I'd taken the box the Cinnabon came in and tore the top off, placing half of the cinnamon roll in it. Her face lit up as I offered her the extra icing I'd bought. \"You're very kind, Frank,\" she said. \n\n\"It's my pleasure. It's all part of my devious plan to attract desirable young maidens into my lair by using flour, butter, and spices as bait.\" \n\nShe laughed as she spread the icing. \"Well, it clearly isn't working if you ended up with me,\" she said. \"I'm nowhere near young.\" \n\n\"You're the most beautiful woman I've seen in a long time, and I live in Los Angeles,\" I said. \"I'd say it's working perfectly for a soon-to-be-retired guy on a trip to see his twin granddaughters.\" \n\n\"Oh my word, you have twin grandchildren too?\" Her face lit up, and she pulled out her phone. Pulling up a photo, she turned it to show three babies, all sitting together on a blanket. \"I'm going up on the North Shore to visit my son and my daughter. That's my grandson Mark and his twin Cheryl on the right, and my daughter's girl Hope on the left. They sent this picture last week; I can't believe they are six months old already.\" \n\n\"They are beautiful,\" I said as I pulled my phone out. \"You realize that Federal law requires me to show you the photos of my son's twin girls now.\" \n\n\"Well, don't get in any trouble on my behalf,\" she said with a smile. I showed her my granddaughters, both wearing Air Force shirts and pink pajama bottoms. \"Oh my, they are so cute!\" \n\n\"I think so.\" \n\n\"I love the shirts, is your boy in the Air Force?\" \n\nI nodded in between bites of the still-warm Cinnabon. \"He is. He went to the Air Force Academy, and now flies the B-52 Stratofortress out of Minot Air Force Base.\" \n\n\"That's wonderful, and you must be so proud of him! I don't think I've ever seen a B-52, but we see B-1 bombers sometimes flying over. I mostly live in the Cascade Range, east of Mount Ranier in Washington.\" \n\n\"Beautiful country out there,\" I said. \n\n\"Winters aren't fun. We've seen six feet of snow, and it's not even Christmas yet. I think you have the better winters,\" she said. She finished up her Cinnabon, taking my box and throwing the trash away. \"That was more sugar than I needed, but it's soooo good. Thank you again.\" She glanced down at my left hand and looked away when I caught her. \n\n\"Divorced sixteen years ago,\" I said as I showed her my ring finger. \"We're still friends; it just didn't work out for us. I was always tied up with my work in the Drug Enforcement Administration, and she was always tied up naked in our neighbor's bedroom.\" Her jaw dropped, then she busted out laughing. \"I got my son out of it, and now grandchildren.\" \n\n\"You never remarried? No girlfriend?\" \n\n\"I was bitter, and I threw myself into my job. I rose to the highest levels of the DEA, only to lose everything yesterday. Now I'm sitting here in an airport, with nothing but the company of a beautiful lady. Today is the best day I've had in a long time.\" She blushed, and I reached over and took her left hand, turning it to show her empty ring finger. \"No ring or tan line for you, what is your story? How is a smart, beautiful, and classy woman like you stuck here in an airport, eating pastries from a stranger?\" \n\nShe giggled but didn't pull her hand away. \"My husband died a little over a year ago.\" \n\n\"I'm sorry.\" \n\n\"I'm not. He was a good man and a good husband at first, but at the end, he was a real asshole. I left him before he could hurt us more.\" I squeezed her hand, and she squeezed back a little. \"It's been hard, but I still have my three sons and one daughter, all but one who are now m... married. I spend some time with each of them, moving on when they get 'Mom'd Out' as my oldest boy says.\" I laughed a little at that; my Mom used to have us that way by the end of her visits. \"So, I'm going to spend a few weeks with my son and daughter to celebrate their first Christmas with the babies, and then I'll visit my boy in the Donner Pass area of California.\" \n\nI just shook my head. \"You need one of your kids to move south. The Donner area gets more snow than you do in the Cascades!\" \n\n\"I know. If only I knew someone in a warmer climate.\" I'd moved my other hand over hers, lightly stroking the back of her smooth skin. Her eyes were wide, her mouth slightly parted, and she licked her lips. I started to lean forward, and she tilted her head slightly. I couldn't believe how lucky I was that my flight plans changed so I could meet Colletta instead. \n\n\"Now boarding, Delta Flight 2429 to Duluth in Gate Bravo Forty,\" the announcement came. \n\n\"That's us,\" I said. I grabbed my new coat while she picked up her things before we walked together to the boarding line. \"What seat do you have?\" \n\n\"Three A, window seat,\" she said. \n\n\"I think God is smiling on me today,\" I said as I showed her my boarding pass. It was Three Bravo. \"I get to enjoy your company a little longer.\" \n\nWe sat in our first-class seats and talked, as I learned more about this woman who fascinated me. She asked about my job, and I was honest with her as I gave her a condensed version of my past week. I could see the emotions on her face as I told her of the raids and the loss of life that led to my suspension. \n\n\"They didn't even ask your side of the story,\" she asked. \n\n\"No, and now that it's tied up in disciplinary space, I'm not inclined to cooperate. I already told my boss that when my suspension is over, I'm retiring. I've had enough.\" \n\n\"I heard about you on the news, Director Frank Grimes. You seem to be a good man; I'm sure it will all work out in the end.\" \n\n\"Just Frank now. Or Grandpa Frank.\" I held her hand as we taxied out and waited our turn. We didn't say anything for a while, we took off, and she looked out the window at the city below. \n\nShe finally turned to me as we got above the clouds. \"So why are you going to Duluth? Your son is in Minot, that isn't exactly on the way.\" \n\n\"There's a blizzard in the Dakotas, so I found out this morning that getting out there isn't happening for a day or two. One of the Steel Brotherhood members I worked with in Orlando, he and Canvas live up near Two Harbors. I wanted to clear up some questions, and let him know in person that I'm off the case now.\" \n\n\"Frame and Canvas?\" Her face was white as a sheet as she pulled out her phone. \"These two?\" \n\nShe showed me a photo of Chase and Rori, standing next to their motorcycles on an overlook on Lake Superior. It was my turn to have my jaw drop and turn white as a sheet. I just nodded. \"Your son is Chase Nygaard?\" \n\n\"Yes, I'm Colletta Nygaard, and Chase is my youngest.\" What are the odds? I should buy Lotto tickets as soon as we land. \"What the hell has that boy done now?\""
    ],
    "authorname": "partwolf",
    "tags": [
        "biker",
        "gang",
        "pack",
        "werewolf",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/buried-treasure-ch-51-55"
}