{
    "title": "Hero Worship Pt. 07",
    "pages": [
        "We're at the penultimate chapter!  Only one to go!  This is part seven of eight, if you're just coming in now read those first or you'll be lost.  This chapter opens from Taylor's perspective during their lovemaking on Aly's birthday. All characters are over eighteen.\n\n*****\n\n- Taylor -\n\nOn Aly's birthday \n\nMy God, Aly was beautiful. I knelt beside her, my hand running over her soft skin. As much as I'd imagined it, I couldn't have begun to understand what having her here, like this, would feel like. I gently massaged her breast, and as I pinched her nipple she moaned through the gag she was wearing. I hadn't been sure about that one, but Trinity had told me she would love it. So far, at least, she hadn't been wrong.\n\nI could feel Aly's trembling energy as I'd cuffed her in place, and when I'd leaned back for a good look it had been my turn to gasp as I'd taken in the sight. She was completely in my power. If I had any questions about whether she was excited about this, one glance at her wide open sex, which was literally dripping wet, answered that question.\n\nGod, the trust it would take let someone do this to you. I couldn't imagine it. And she'd placed that trust in me. I could hurt her, I could take pictures and blackmail her, I could steal and pawn her computer, anything I wanted.\n\nBut my goal, the only thing I cared about, was to make her feel like she had never felt before, to take her to new heights of pleasure. I know that sounds kind of corny, but it's all I could think about. She was the perfect medium, and her bliss was my new art form. So I set to it. I was a little nervous using the clips, especially the one for her clit, but I know Aly had enjoyed me pinching her nipples, so I went for those ones first, and her immediate, powerful reaction told it had been the right thing to do.\n\nI put my mouth to her. She was so delicious, and I was enjoying her immensely, but she hadn't come. I figured that she would go off almost immediately, because of how worked up she'd gotten all week. That night when she'd touched herself in my arms was the sexiest thing I'd ever experienced in my life. At least, until now. I was just starting to worry that this wasn't working when I realized what the problem might be.\n\n\"Come for me, baby.\"\n\nShe exploded into my mouth, which was the most amazing feeling, and when I pulled the nipple clamps off it sent her into orbit. I put on the strap-on and attached the clit clip. Trinity had raved about this, too, saying that after she'd used one the first time she would never have penetrative sex without it again. She'd also suggested I give direct stimulation when I removed it. It had been really bizarre having those conversations with someone one step away from a perfect stranger, but it had been totally worth it.\n\nAnd this time I hadn't panicked when Aly had cried afterwards. Everything I'd read said that was normal, as was the down, empty feeling Aly had mentioned. I'd also read that many subs needed time to themselves after to recover. That would have been very hard for me, but it turned out Aly wanted just the opposite, which I was thrilled with. Next time I wouldn't schedule anything afterwards. The dinner had gone really well, but I could tell Aly had needed to rest. Still, she'd got through it like a champ, and I think we'd all had a great time.\n\nHer parents had been wonderful, reserving the table at her favorite restaurant, and letting me know exactly what her favorite thing to get there was. And when her dad offered to pay for the group, I decided to not make it an issue. I was going to have to get used to the fact that Aly and her family had money.\n\nI'd been a little worried about Aly and her sub drop, which is what all the websites I'd read had called it, but by the time she left in the morning to go back to school she seemed her normal self. I made a very brief mental checklist for next time. Something to eat and drink, plenty of time to rest, and lots and lots of cuddles. I could get on board with that. Have I mentioned how much I love cuddling with Aly? How incredible it feels having her in my arms? It was one of those things I had to start getting through my head was okay. It made me feel soft and vulnerable, how badly I needed her. But that was okay. I didn't have to be the tough chick with Aly.\n\nI'd done that plenty before I met her, and all I'd ever accomplished was making myself miserable. But now I was happy, and I was starting to get it through my thick skull that she loved being with me. Me. Not my hard persona, certainly not my bank account, but just me. That was still hard to swallow. But the begging look she'd given me when we'd gone to bed, and the way her whole face, her whole body had lit up when I'd told her she could pleasure me. Just wow.\n\nI headed out to the warehouse where I put in a last hour or two of work on my commission. They were coming out to pick it up tomorrow morning, and I was planning on being out there for most of the day making sure it got placed and hooked up properly. As soon as I was finished I sent off the final photo to my client, who approved. It was a beaten copper wall intended to sit at the slightest angle so water flowed continuously down, and along the length was a dolphin, a marlin, a sailboat, the whole thing topped with a whale tail, designed to appear to be rising from the flowing water.\n\nI treated the copper and then snapped a couple of photos. I carried my momentum through some work on several smaller pieces that were copies of things I'd sold at the fair, only with minor, in my eyes, anyway, improvements. I'd told myself that I wanted to have all the recreations done by Christmas, and I'd start on new stuff after the new year. I was forcing myself not to work on Aly's sculpture, as I wanted my mind clear and unfettered with deadlines and other work when I set to it. That didn't keep me from thinking about it though.\n\nThis was really good, having whole days to just work, and one of the biggest benefits was that I didn't feel like I had to spend all hours of the night working here. I knocked off around nine, heading home and picking up an In &amp; Out burger on the way. I flopped down onto my sofa and looked at my phone, which I hadn't thought to check before I'd left.\n\nAly -- Hey, give me a call when you can. She included a smiley emoji and a rainbow. I shook my head and touched my screen.\n\n\"Hey, sweetie!\"\n\nI could hear commotion around her. What was going on? \"Hey, where are you?\"\n\n\"I'm in the common room, watching some silly show on Netflix with a bunch of the girls. How are you? You just get home?\"\n\nI started to answer when I heard some comments from behind her.\n\n\"Is that Taylor?\"\n\n\"Yes it is. I'm going somewhere private so I can talk to her.\"\n\n\"No! We want to hear!\"\n\n\"Huh-uh. Go get your own girlfriends.\"\n\nI was trying to wrap my brain around what I'd just heard, while Aly's running feet sounded through the phone.\n\n\"Hey I'm back. Just went into the dinning room so I could hear you.\"\n\n\"Um, what's going on?\"\n\n\"I came out to my sorority.\"\n\nMy jaw hung open stupidly for a second before I recovered. \"Really, that's, wow, baby, that's awesome. I'm so proud of you.\" I felt a tear sting my eye as she launched into the story. As she spoke the reality of the situation sank in. Aly had come out to everyone who mattered in her life. Her family, her sorority. When she finished I was speechless.\n\n\"Sweetie? You still there?\"\n\nMy voice cracked with emotion as I spoke. \"I love you.\"\n\n\"Aww. I love you, too. Did you eat?\"\n\n\"I got a burger.\"\n\n\"Good. Don't forget to eat it before you go to bed, okay?\"\n\nI laughed. \"Yes, dear.\"\n\n\"Friday, Dinner with Jen and Vicky, right?\"\n\n\"Yeah. I'll see you then.\"\n\n\"I'll be at your apartment when you get off work.\"\n\nWe talked for ten more minutes, and I sent her a picture of the completed waterfall sculpture, which she raved about. Eventually though she went back to her friends and I made myself eat my now lukewarm burger. It would be so nice when she was done with school, and we could be together every night. I realized what that meant. Living together. Would she even consider moving into my little apartment? I shook my head. Too early for that, plenty of time, really.\n\n***\n\n\"So how did your install go yesterday?\"\n\n\"Really well.\" I closed the door behind me and set down my bag and helmet. I embraced Aly, who'd met me in the entryway. \"I was out there until almost four o'clock. His wife loved it, and I think it looked great, even though not all of the stonework was finished around it yet. The pump and the waterline all worked perfectly.\"\n\n\"That's great. I got your mail, there's something from Idaho.\"\n\nI furrowed my brow and walked over, where sure enough there was a thin brown envelope with my name on it in very neat penmanship. I didn't recognize the return address, though, so I tore it open. My mouth dropped open a little when I read what it said.\n\n\"What is it, sweetheart?\"\n\n\"It's a 'Save the Date' card. My brother Gabriel is getting married.\"\n\n\"That's wonderful! And you're invited. Maybe ...\"\n\n\"No, I'm not invited. The girl I used to be in high school is the one invited, not me. They don't want some bull dyke at the wedding.\"\n\n\"Hey!\" I winced at Aly's tone, which was suddenly angry. \"Don't you ever call yourself names in front of me.\" I stared at her for a moment before closing my eyes. I heard her sigh and she took my hands. \"Look at me, Taylor.\"\n\nI made myself obey.\n\n\"You, Ruth Taylor Knox, are a brave, talented, amazing woman. And if they can't see that, it's their loss, and they're wrong.\" Aly rose up and kissed me on the cheek. \"C'mon, let's go see our friends.\"\n\nI put on my bravest face, but I'm a shitty actress, and before we were finished with dinner Vicky was trying to get me to tell her what was up. I was trying to be dismissive about the whole thing, but Aly wouldn't let me.\n\n\"Her brother's getting married, She just got the card.\"\n\nVicky's eyes lit up. \"Really? When? Where?\"\n\n\"In Idaho, as far as I can tell, on Valentine's Day weekend. Who does that? A wedding in Idaho in February? It's going to be freezing, and they could be buried under two feet of snow during this. It's insane.\"\n\nJen decided to cut through my ravings. \"Are you going to go?\"\n\nI shrugged. \"They'd be happier if I wasn't there. Actually, they'd be happiest if I showed up contrite with long hair, in a dress, and on the arm of an acceptably male human.\"\n\nVicky shook her head. \"Your brother obviously wants you to be there. So the real question, Taylor, is do you want to be there?\"\n\nI took a deep breath. \"I missed my little sister's wedding. And that sucked.\"\n\nJen nodded. \"Yeah. Look, someday your family's going to pull their head out of their ass, and when you get together with them you're going to want those memories.\"\n\nWe went back and forth for another fifteen minutes before We eventually broke out a game, and by the time I was tucked into bed that night I was still profoundly undecided as to what I wanted to do. Luckily I didn't have to RSVP or anything yet.\n\nFortunately my security blanket was lying next to me, and I was profoundly grateful that the emotionally confusing card had arrived on a day when Aly was here. I don't know if I'd have been able to sleep without her.\n\n\"Sweetheart, I just want you to know, that if you decide to go, I'll be right there with you, but I'll stay away, too. Whatever you want.\"\n\n\"I smiled at her. \"Baby, if you weren't there I wouldn't even be thinking about it. No way I'd go. That'll decide a lot. If you aren't welcome, neither am I.\"\n\n\"'Cause we're a team?\" Aly snuggled closer, which made me smile.\n\n\"Yeah. But I'm a little scared of what my family, my parents, might say to you. I don't want them to hurt you.\"\n\n\"Like my dad hurt you?\"\n\nI grimaced a little. Looking back her dad had raised very normal, paternal concerns, and I didn't fault him for it. \"Actually, your dad was great. He helped me set up that dinner for your birthday. My dad will be a completely different story. I don't want to drag you into the drama.\"\n\n\"Honey, if we're going to be together we're going to have to get used to each other's drama.\"\n\n\"There isn't any drama with your family.\"\n\nAly chuckled. \"Wait until I go see mom's family after Christmas. Might be a different story.\"\n\nShe'd told me before that her family always goes out to Kansas for a week after the holiday. \"I won't be able to come, you know. I'm sorry.\"\n\n\"It's okay. Next year, maybe.\"\n\n\"Already thinking about next year?\" I heard the hint of insecurity in my voice when I said it.\n\nAly looked me straight in the eye. \"I plan on spending a lot of holidays with you, a lot of birthdays. Maybe the rest of them. Does that scare you?\"\n\nI shook my head, a tear forming in my eye. I tried unsuccessfully to blink it away.\n\n\"What are you scared about, Taylor?\" Aly's face was concerned and on the edge being hurt.\n\n\"Um, ...\" I couldn't speak, words catching in my chest.\n\nUnderstanding spread across Aly's face. \"Are you worried it won't happen?\"\n\n\"I'm sorry.\"\n\nAly kissed me softly on the lips. God, kissing her was so wonderful, her lips were so soft. How could I live without this? I'd lived without it for the last four years, and right now I understood exactly how much those years had sucked. I deepened the kiss, feeling Aly relax into my embrace.\n\nWhen we broke apart Aly was gazing into my eyes, her fingers running through my short hair. \"Taylor, I love you, and I'm not going anywhere, and I will tell you that as many times as you need to hear it. Okay?\"\n\nI nodded, tears in my eyes, trying to tell her that I loved her, too, but I couldn't get it out. But it was okay. She could see it in my eyes, and I knew that from her smile.\n\nAnother soft kiss. \"Actually, I do have something to ask you. A step forward with us being a couple.\"\n\n\"What's that?\"\n\n\"You want to take me to our Christmas Ball?\"\n\n\"Really?\"\n\n\"Of course. I want to show off my handsome girlfriend. And...\" Aly ran a finger down my sternum. \"I'd love to see you in a tux.\"\n\n\"Aly, you think I have a tuxedo stashed away somewhere?\"\n\n\"See, they have these shops, where you can rent clothes...\"\n\nI laughed. \"Brat.\" I pushed her over onto her back, making her squeal, which I cut off with a kiss.\n\n***\n\nIf I had any lingering reservations about whether or not I was in an honest to God relationship they evaporated forever the day before Thanksgiving. I got back from the warehouse just before seven. I was supposed to come home at five. Ostensibly I'd lost track of time, but for real I'd been stalling. I'm not sure why I was so nervous. I'd spent every other recent Thanksgiving alone in my apartment or out at the warehouse. You'd be surprised how many of my peers were out there during the holidays instead of with family. Jen and Vicky always went to visit Jen's parents in Arizona for the long weekend, so there just hadn't been anywhere else to go.\n\n\"Where've you been?\"\n\n\"Sorry.\"\n\nAly shook her head and put her hands on my shoulders. \"It's going to be okay.\"\n\nI slid my arms around her waist and pulled her to me, our lips meeting gently, and I did immediately feel better. Aly nuzzled into my neck. \"You, know where we're going to be tonight?\"\n\n\"Where's that, baby?\"\n\n\"In my bed, at my parents house.\" Another nibble.\n\n\"That's true.\" I held her to me, loving her warmth. \"Has my baby been imagining doing grown-up things in her childhood bed?\"\n\n\"If My Lady wishes.\" I smiled, because there was no mistaking the timbre in my baby's voice. She wanted it badly, probably driven at least in part because nature had prevented us from doing much over the weekend or on Tuesday.\n\n\"Mmm, I do.\" I looked her in the eyes. \"Go get the strap on, the double ender, and get the clips, and anything else you think I might want to use to pleasure you.\" I ran my fingers down the skin of her back exposed by her wide-necked top.\n\n\"Yes, My Lady.\" There was a husk in her voice that made me shiver, and she ran to comply. In fifteen minutes we were on the road, headed to Aly's parents house. Somehow, the knowledge of what was packed in Aly's bag kept a hint of a smile on my face the whole way over. This time Aly didn't ring the bell, and we just parked and walked in, which felt a little strange.\n\nAly called out, and her mother came around the corner and gave her a big hug. I stood to the side as they rocked back and forth in their embrace for a moment. Mrs. Winterberg held her arms out to me and I let her hug me as well.\n\n\"You guys are so late! I was getting worried.\"\n\n\"I'm sorry, Mrs. Winterberg, it was my fault. I got caught up at my studio.\"\n\nShe looked at Aly. \"See, sweetie, this is what happens when you date an artist.\" There was humor in her voice, and it made me smile. \"And you, Taylor, please call me Jessica.\"\n\n\"Yes, ma'am, I'll try\"\n\n\"Well, come in, take your shoes off. There's still plenty of pizza. Just leave your bags by the stairs.\"\n\nKelsey made her appearance and gave her sister a hug, before stopping short at the sight of me, her cheeks coloring. \"Hi.\"\n\n\"Hi. You been staying safe?\"\n\nShe nodded shyly, and her mother and Aly laughed.\n\nWe went into The family room, where warm greetings were expressed again by Aly's father. He stood and shook my hand, looking me in the eye. \"Good to see you, Taylor, I'm glad you could come.\"\n\n\"Thank you, sir.\" He didn't offer his first name like his wife had, and I certainly wasn't going to take the liberty, but his demeanor was friendly and he sounded sincere, so I was going to take that as a step in the right direction and not push things.\n\nThe Laker's game had just started, so Aly settled down on the couch to watch with her dad. I could smell the pizza her mother had mentioned, which made my stomach rumble in response. \"I'm going to go get some pizza, baby. You what some?\"\n\nShe smiled up at me. \"Sure, sweetie, thanks.\"\n\nI grimaced a little as her dad shot me a sideways glance. Maybe he didn't like me calling Aly 'baby,' but he still didn't look mad. Honestly, I'd told myself I was going to avoid doing that while I was at her house but it just came so naturally. Damn it, Taylor, stop over thinking everything.\n\nIn the kitchen were two huge, New York style pizzas. One sported pepperoni and mushroom and the other sausage and green peppers. I opted a piece of the former and got Aly one of the latter, since I knew how much she liked green peppers on her pizza. I also tucked two cans of cold soda under my arm before heading back into the great room. Aly had left me room on one end of the huge sectional to sit next to her. I handed her the plate with her piece before sitting down and setting both cans of soda in the cup holders in the arm of the couch. Cup holders in the couch! So this is how the other half lives.\n\nAly leaned against me as she took her first bite, and my arm automatically went around her as her leg pressed against mine.\n\n\"So Taylor, are you a Laker girl?\"\n\nI shrugged. \"Actually I grew up a Trailblazer fan, but I never followed it that closely. Football, now, that's another story. Go Broncos.\"\n\nAly's dad made a face. \"Ugh. Could be worse I guess. Could be a Niners fan.\"\n\n\"I follow swimming closely, too. I was a swimmer in college, you know.\"\n\n\"I think Aly told me that. What did you swim?\"\n\n\"My best event was the 400m individual medley. I always had good endurance and I loved trying to perfect all the strokes. Wasn't fantastic in any but I was all around solid in everything.\"\n\nAs the game on the TV progressed we continued to talk amiably about our sports backgrounds. He regaled us all with stories of his glory days playing shortstop for his High School, and I made sure I sounded suitably impressed, especially regarding the time he stretched a double into a triple in the bottom of the ninth against their archrivals, which let him score on a wild pitch to win the game.",
        "As soon as he started Aly gave a little moan and I saw Jessica roll her eyes. Clearly this was a story that had been told and retold often, and probably embellished more than its fair share along the way. But Mr. Winterberg told it with gusto and excitement, and I wondered if hearing it wasn't some kind of initiation into the family.\n\nKelsey was very excited to tell Aly that she'd made the traveling cheerleading squad for the varsity basketball team, only six girls made it each year. Jessica talked about how quickly rentals were going in the new office building she was representing.\n\nI just sat back for the most part and listened. They spoke with affection and intimacy. There was no chaotic competition for a father's limited affection, no cold undercurrent of expectation and judgment. Aly stayed pressed cozily against me the whole evening, and I soaked in the love of this family, realizing with every moment how truly fucked up my own upbringing had been. And more than anything, I wanted to be part of them.\n\nIt was suddenly blindingly obvious where Aly's easy ability to love had come from. I had always thought it was some beautiful quirk of hers. But maybe that's how everyone was supposed to be able to show affection, unreservedly and naturally. Maybe a lot of us just had that beaten out of us somewhere along the way.\n\nThe game was close, but the other team hit a couple of big three pointers down the stretch to pull away and win late. I watched Mr. Winterberg so to see if that would sour his mood like it would have done to my father. But he seemed to take it in stride.\n\nI let go a yawn, and Aly rubbed my leg. \"You ready for bed, sweetheart?\"\n\nI nodded. \"I think so.\"\n\n\"I think we're going to head upstairs. Goodnight.\"\n\nAly hugged her parents and led me by the hand to the stairs and up to her room. I was almost afraid to look into her father's eyes, but when I did glance his way there was nothing but a slightly pained smile.\n\nWe made it to her room, me carrying our bags, and she shut the door behind us as I laid them against the wall. I turned back towards her and she met me with a kiss, and I could feel the fire behind it.\n\n\"How does My Lady want me?\"\n\nThe pure innocence of her voice made me shiver from head to toe. She was really worked up, which meant I wanted her to wait. The longer I drew it out, the more incredible it would be when I finally let her release. I looked around the room, noticing a dressing chair in the corner. I didn't answer, instead crossing over to it and sitting down, facing her.\n\n\"I want you to strip for me, baby. Slowly. I want to enjoy looking at you.\"\n\nI waited to see if there was any insecurity or worry in her eyes, but I should have known there wouldn't be. She turned and locked the door before dimming the lights to an appropriately sultry level. She placed her phone in a holder on her dresser with speakers attached.\n\n\"Siri, play 'West Coast' by Lana Del Rey.\"\n\nThe sensuous beat filled the room as Aly's lovely body began to sway to the music. Hey eyes closed as her hand ran up her neck, gathering her hair up in a sexy bundle, letting it fall like water on the other side. She was wearing a light grey, loose, button down sweater with a black bra underneath, along with tight faded jeans with the knees ripped out, like something straight out of the eighties, in the best possible sense.\n\nShe pulled the waist of her sweater down, stretching the fabric over her perfect breasts before turning around and rolling her hips in wide, sensuous circles. I sat back, my eyes open to aching as my baby danced for me. A tear formed as I took in the sheer loveliness of her.\n\nHer face was innocence made alive, but her body dripped sex as she peeled off her jeans, her top giving just hints of her lacy, black panties. She moved toward me lifting the sweater free of her shoulders and arms.\n\nShe straddled my lap, her arms moving over her head, lace covered breasts inches from me. Slowly, she reached around behind her and released her bra, and as it fell away I took her left breast into my mouth. Her fingers ran through my hair as she held me to her, sighing softly.\n\nI stood, and she wrapped her legs around my waist as I carried her to the bed, where I laid her down and feasted on her. I moved slowly, stripping off her panties and holding her thighs as I savored her. I could tell she was holding back, waiting for my permission, which I had no intention of giving quite yet. I knew exactly how I wanted her when I opened that floodgate.\n\n\"Don't move, baby, I'll be right back.\" I went to our bag and pulled out the strap-on, along with the clips. I really only wanted one of them, and I made a mental note to stop by the toy store and get a simple clip for times like this.\n\nWhen I got back to the bed I was naked as well, except for my accoutrement. Aly was lying on her side, staring at me with her big, beautiful doe eyes, a look of lust and wonder on her flushed features. Well, I had all three clips. Might as well use them.\n\nI held them up, letting them form a Y pattern. \"You remember these?\"\n\nHer voice trembled. \"Yes, My Lady.\"\n\n\"You liked them, didn't you?\"\n\n\"Oh, yes, My Lady.\"\n\n\"I'm going to put these on you,\" I climbed up on the bed, \"and then I'm going to take you, deep and hard, just like you like it.\" I ran my hand over Aly's leg, which was trembling along with the rest of her. \"But whose pleasure comes first, baby?\"\n\n\"Yours, My Lady, your pleasure comes first.\"\n\n\"That's right. So you cannot come until I do. After that, you're free to come as much as you want. Do you understand?\"\n\nAly nodded, her eyes desperate with need.\n\n\"Good. Lie back baby.\"\n\nAly obeyed with a shudder. I took a turn with each breast, sucking them into my mouth until her nipples pert and swollen before clamping them. I moved slowly down her body, parting her lips with my fingers so I could give the same treatment to her little clit. It was still quite aroused from my earlier attentions, and in moments all three clamps were firmly in place.\n\nI flipped on the vibrator that I was wearing, which meant it was my turn to shudder as the delicious sensation ran through my body. I drew my fingers through Aly's sex, using the copious nectar there to lube my phallus.\n\nI positioned myself, and the length slid into Aly like she was butter. Aly moaned deeply as I filled her, and I covered her mouth with my finger. \"Shh. Remember, your parents are just down the hall. Don't want to wake them.\"\n\nAly gave a pathetic little whimper as her eyes begged me to keep going.\n\nAnd I did. Aly wrapped her legs around my waist as her arms encircled me, nails tracing lines of ecstasy over my shoulders. I'd missed this during our last session, how intimate it was to be wrapped up in her. I drove into her with long, clean strokes, giving a little grind each time which felt amazing for both of us.\n\nAly's dance had me more than worked up myself, and as valiantly as I tried to stay in control I knew it was a losing battle. I slowed a bit trying to extend the moment for as long as I could, and I was able to find a pace I could maintain for a time.\n\nAly was bucking against me, her coos and sighs becoming more and more insistent. I concentrated on her, trying to take her right up to her breaking point.\n\nI increased the pace just a little, and my breathing became ragged. I was close, so close. Then Aly's hand wrapped around my neck and shifted lifted herself towards me, pressing her lips to the sensitive flesh there.\n\nThe new sensation was too much, and I lost myself in her and my own pleasure as my body pulsed and shook in release.\n\nI drew in great, shaky breaths as I recovered. Aly continued to kiss my neck, and once my wits returned I resumed my movement, very slowly to start.\n\nAly was looking deep into me. \"Did you come, My Lady?\"\n\n\"Mmm, yes, baby. You are such a good girl. Are you ready for yours?\"\n\nAly nodded with a whimper as I started moving faster inside her, and I covered her mouth with mine. The energy building in her was a palpable thing, and just before it crested I whispered in her ear. \"Come for me, baby. I love you.\"\n\nHer body exploded around me, pulsing and bucking. She buried her face in my shoulder to stifle her moans, and I held her close, rocking through her ecstacy. As she calmed I slowed, but didn't stop. I'd seen her have an incredible string of orgasms during our last lovemaking session, when I'd had her bound tightly, and I wanted to see if I could do that for her again.\n\nI could tell she wasn't in that deep, trance-like state she'd been in then, where she'd been almost insensate to anything I said. She was much more aware this time, but I wondered if I could still give her the same pleasure.\n\nI continued my long deep strokes, reaching between us and massaging her nipple clamped breast. Less than a minute later Aly came again. It was unmistakable, if not as all consuming as the first. I knew I had her then, and I took her through a beautiful string of climaxes. I was even rewarded with another of my own before I finished.\n\nI moved down and released the clit clamp, sucking her into my mouth as she covered her face with a pillow to muffle the screams. Both nipple clamps came off simultaneously as I massaged her breasts, and I pulled one more powerful orgasm out my baby's lovely body before I climbed and took her into my arms. I spent a moment unbuckling the strap on and tossing it on the floor. When I turned back Aly had a finger in her mouth, giggling like a kid.\n\n\"I can't believe we did that. Oh, God, what if my parents heard?\"\n\n\"Can you hear your parents when they have sex?\"\n\nAly shook her head.\n\n\"Then I think we'll be okay.\" I hoped so anyway. The last thing I wanted was to be given the evil eye by her father tomorrow for defiling his little girl. \"So, was that everything you dreamed it would be?\"\n\n\"Oh, yeah. That was amazing.\" She snuggled against me. \"But mostly I wanted this. Us together, with my family, in our bed, no one questioning us.\"\n\nI pulled her to me and we spooned under the covers, the now messy comforter piled over the corner. My fingers ran through her soft hair as I felt. \"So if your parents did hear us, would they be mad?\"\n\n\"I think I'd be more embarrassed. They were always very pragmatic about sex. I got 'The Talk' before sixth grade, and my mom made me promise that if ever decided to, you know, to tell her so I could get on birth control.\"\n\n\"And did you?\"\n\nAly laughed. \"No. The first time I put my faith in a condom he'd stolen from his dad. I did ask to start birth control before college. She was good to her word. No judgment. But I haven't taken it since I met you.\"\n\n\"Aren't I special?\"\n\nAly giggled. \"No point now. How about you?\"\n\nI sighed. I really didn't want to talk about my parents right now. But maybe I needed to try being more open, with Aly especially. \"No rational, pragmatic discourse in my house. My father made it clear that anyone who had sex had declared themselves capable of supporting both themselves and a child, and would be put out of the house to do just that.\"\n\n\"Seriously?\"\n\nI nodded. \"At least he didn't have double standards for my brothers vs. us girls like some do. I never paid attention to all that. I had other things on my mind. Boys weren't an issue.\" I heaved a sigh. \"Your family's wonderful. You're lucky, y'know.\"\n\n\"I am.\" She turned towards me and gave me a kiss. \"Just don't forget, Taylor, they're your family, too.\"\n\nI wanted to protest, but the reality of where I was caught up with me. I was about to spend Thanksgiving with these people. I was sleeping with their daughter in her childhood bedroom with their full knowledge, if not blessing. And they'd treated me like I was truly welcome. I hadn't felt like that in my own home since I was ten, maybe earlier. Jen and Vicky were wonderful, and I was always welcome with them, but I didn't belong there.\n\nI belonged here, with Aly in my arms. Maybe this was a place I could just be happy.\n\n***\n\nThe next morning Aly was resting against me as we soaked in Aly's parent's huge tub. I swear you could do laps in the silly thing. We'd had a bit of a lie in, and when we finally did get up Aly had called straight down over the banister asking her mom's permission to use the tub. My cheeks must have been neon red from blushing.\n\nBut I have to admit this was pretty awesome. Aly had thrown bath salts in, which felt great, and I was just gently holding her while we talked.\n\n\"I hate that you have to work tomorrow.\"\n\n\"I'm lucky they close the beach on Thanksgiving. Why? What goes on tomorrow?\"\n\nAly looked over her shoulder at me like I'd just asked what country South America was in. \"The day after Thanksgiving? Shopping! Me and mom and Grandma and Kelsey. It's a tradition. We pan on singlehandedly stimulating the economy to the point of orgasm.\"\n\nThat made me laugh.\n\n\"Besides, I have to look for my dress for the Christmas Dance. Did you call about a tux this week?\"\n\nI grimaced. \"No, I will Monday, promise.\" I honestly wasn't looking forward to that, since I didn't have a clue what I was doing. Do they have tuxes that would fit me well? Contrary to popular belief, I am not a guy, and I have no desire to be generically dressed like one, even if I don't wear dresses.\n\n***\n\nWe eventually made our way downstairs, where Aly's mom was working in the kitchen.\n\nAly grabbed a box of cereal and began to pour us a couple of bowls. \"Hey, mom. Where's dad?\"\n\n\"He's out on the patio, trying to put together that thing he bought.\"\n\n\"Are you really going to let him cook the turkey?\"\n\n\"I have two back up turkey breasts in the fridge. Don't tell your father.\"\n\nAly laughed, especially when she saw my face, which clearly showed my confusion.\n\n\"Dad bought a turkey fryer. He's trying to get it set up.\"\n\nI smirked at her. \"I take it this is something we should be concerned about?\"\n\nAly smiled wryly. \"Um, dad and directions, well...\"\n\n\"Doesn't you father build buildings for a living?\"\n\nAly giggled. \"No, dad plans and finances. He pays other people to actually build the buildings.\"\n\nThat made her mom laugh, and I joined in. Aly fiddled with her cereal for a second. \"You're good with your hands, sweetie, maybe you should go out and help him.\"\n\nI stared at her. \"I'm sure he's got it. I doubt he wants my help.\"\n\n\"Honey, this is a good chance for you guys to spend some time together. And he'll be grateful, I promise.\" She gave me one of those looks that made me willing to do absolutely anything for her, and I caved, leaving Aly inside and heading out back.\n\nMr. Winterberg was indeed out on the back patio, down on his knees fiddling with a two foot square metal stand. A huge silver pot sat nearby. He looked up as I closed the door.\n\n\"Hey.\"\n\n\"Hi. Your wife and daughter are under the impression you could use an extra set of hands.\"\n\n\"They,\" he turned a screwdriver without looking back, \"are probably not wrong.\" He sat back and shook his head. \"Can you lift the pot and put it on? We'll see if this works?\"\n\nIt didn't, and we had to disassemble the unit to figure out why it wasn't getting any power. I even went so far as to read the directions, something that had not been done yet. Men.\n\nIt was actually a lot of fun, and I gave myself an inward shake as I noted my baby's brilliance in suggesting this. What really surprised me was how much I was expecting Mr. Winterberg to start acting like my own father. But he didn't. We'd actually talk things over, instead of him just barking orders, and he'd actually given me a high five when we got the test oil inside heating properly.\n\nTo be honest, it was amazing. I'd never gotten anything but judgment and condemnation from my old man. And any time we did anything together as a family, vacations, picnics, my dad held court, and we kids just scrabbled at his feet for attention and approval. I'd been so young that I didn't know any better. Aly and Kelsey never had to do that, I bet.\n\nAnd the concept of my dad and I doing something together, like what Mr. Winterberg and I had just done, I just couldn't fathom it. At one point I glanced back into the house and saw Aly standing at the window, a soft smile on her face. I held my hand up and she waved back, her grin widening. Her dad said something, and by the time I'd looked back Aly was gone. She'd looked happy, though.\n\n\"So how long will it take to actually cook the turkey?\"\n\n\"A little under an hour. But we have to keep an eye on it the whole time.\"\n\nI nodded. I'd heard the horror stories about people blowing up their fryers and burning down their houses. \"It's fully defrosted, right?\" Water, frozen or otherwise, does not get along with hot oil.\n\n\"Yeah. I had it in the pot yesterday to check how much oil we needed.\"\n\nWe went back inside and prepped the bird, and as we did the doorbell rang, and Kelsey jumped up from the couch and ran to the foyer.\n\n\"Hi sweetie! Oh, come here!\"\n\nIt was an older woman's voice. Aly's grandparents had arrived, and my lover followed her sister into the other room at a more sedate pace, followed by her parents. I hung back in the kitchen, my heart beating a little faster. Aly had told me that they would be here, and more importantly that they knew I would be here. The happy gaggle of voices moved closer and all the ladies piled into the kitchen.\n\nI was standing at the far counter trying to keep smiling and attempting not to look awkward. Aly's Grandma was easily the shortest woman in the room, but she carried herself with a wide smile and a palpable authority.\n\nAly came right up to me and slipped her arm in mine. \"Grandma, this is Taylor, my girlfriend.\"\n\n\"It's nice to meet you, Mrs. Winterberg.\"\n\n\"Oh, pish. Come here.\" She wrapped me in a hug. \"I understand I can thank you that I still have two granddaughters.\"\n\n\"Ahh,\" I stammered for a second before glancing down at Aly, who was beaming up at me. \"I was just glad I was there, ma'am\"\n\nShe reached up and put her hand on my cheek. \"Oh, you dear thing. Call me Holly, or grandma.\"\n\n\"Okay.\" I got the word out through a wide smile, and I stepped back in a little bit of shock. I hadn't spoken to any of my grandparents since I'd come out, and I was a little overwhelmed. Aly dragged me out into the dining room where her Grandfather was speaking with his son. He also thanked me for my part in Kelsey's rescue, and he listened attentively and without judgment as I told him about both my lifeguarding and metal work sculpture.\n\nJessica and Holly started in on the sides as Aly's grandfather turned to his son. \"Thomas, is that bird ready?\"\n\nMr. Winterberg laughed, looking at me and hooking his thumb at his dad. \"He's more excited about this than I am, I swear.\"\n\n\"Well, come on, let's get on it.\n\nA little over an hour later I was out sitting on the patio with Aly's dad and grandfather sipping a beer while the turkey sizzled away in the huge silver pot. The hetero-normative aspect of the scene wasn't lost on me by any stretch, but given my track record with my own family I was more than willing to overlook it for the time being.\n\nTo be fair, Aly's Grandfather, who insisted I call him Harold, did ask if I planned on going shopping with the ladies tomorrow.\n\nI shook my head and answered with a negative. \"I have to work. Besides, I don't think Aly would let me. She's planning on shopping for that Christmas dance at her sorority.\"\n\nTom drank from his bottle. \"Oh, yeah. I wonder how much that's going to cost me.\"\n\nHarold tipped his beer in his son's direction. \"Won't be cheap, I'll promise you that.\"\n\nThomas laughed. \"No. How 'bout you Taylor? Do you have your, umm...\" He stumbled over his next word, and I appreciated that he wasn't assuming anything.\n\n\"Are you asking if I'm going to wear a dress?\"\n\nHe grimaced. \"Actually, I was trying not to ask.\"",
        "\"That's alright. I'll be rocking a tux, assuming I can figure out how to rent one that doesn't look awful.\"\n\nHarold pointed at his son. \"I remember taking you for you first tux, your junior prom.\"\n\n\"Yeah, that was an experience.\"\n\nI sipped my beer. \"I've never done it before, so I'm not sure what to expect.\"\n\nMr. Winterburg looked at me thoughtfully. \"When were you planning on going?\"\n\n\"Probably Monday morning, before I head out to the warehouse for the day.\"\n\n\"Well, if you want some company, I'd be happy to join you. I'll even treat for lunch afterwards.\"\n\nI was dumbfounded. \"Sure. I'd, um, I'd like that.\"\n\n- Aly -\n\nI kept glancing outside to where my dad and Grandpa were sitting with Taylor, trying to get a read on their facial expressions.\n\n\"Alyssa Winterberg, you are going to slice up your finger if you do not pay attention.\"\n\n\"Sorry, grandma.\" I looked back down at the potatoes I was supposed to be peeling.\n\nGrandma sat down next to me, snapping me back from gazing outside again.\n\n\"Aly, they are going to be fine. I like your Taylor. Your dad does, too.\"\n\n\"You met her like, five minutes ago, grandma.\"\n\n\"I can just tell sweetheart. And I can see the way you look at her. It reminds me of the way I used to look at your grandfather, when I first met him.\"\n\nMy brow furrowed. \"Grandpa always said you ignored him when he tried to ask you out.\"\n\n\"Well of course I did, child. But that doesn't mean I didn't take him in when he wasn't watching.\"\n\n\"You're terrible.\"\n\nGrandma giggled. \"Probably, but I knew he was a good man from the first moment I met him. Just like I knew your mother was a good woman, perfect for my little boy.\"\n\n\"You think Taylor is perfect for me?\"\n\n\"I do, Aly. There's an energy between you. It resonates, and it reminds me of what I felt when I saw your parents together for the first time. You tell me you don't feel it?\"\n\nI nodded. \"Sure, of course.\"\n\n\"Had you ever felt it before?\"\n\nI shook my head. \"Not really. Inklings, maybe, but never around boys. It was always girls, grandma, the girls on my soccer teams or at school. They're the ones I wanted to notice me, the ones I wanted to be close to. I was just too stupid to realize what it meant.\" Grandma glared at me. \"Sorry.\"\n\n\"That's right. You are not stupid. It's not easy to figure out your life sometimes. And you did it before you were thirty-five, married, and with a couple of kids, so I think you're doing very well.\"\n\nI glanced back outside, where my father was gesticulating while telling some story, and I watched Taylor laugh, her face and body relaxed. This was really happening. The woman I loved, accepted by my family, us spending a holiday together. And I was so, just, thankful, no other word really. Apropos for the day, I guess.\n\nDad's turkey actually turned out pretty well, moist and juicy and apparently fully cooked. At least it passed mom and grandma's inspection and was deemed worthy of being served to the family. He and grandpa were quite pleased with themselves.\n\nAfter dinner I changed into some stretchy yoga pants and a loose top and waddled back into the family room. Grandpa had stolen dad's easy chair, and mom and dad sat on the short side of the sectional. Taylor was on the other side, up against the edge of the sofa, and her arm went around me as I snuggled in close to her \"Who's playing?\"\n\n\"Dallas and Washington.\"\n\n\"So no one we care about, right?\"\n\nTaylor shook her head while my dad made a scandalized noise. \"Hey! Have some respect for tradition.\"\n\n\"It's almost over, but there's another one after this.\"\n\n\"And that one?\"\n\n\"Steelers Ravens.\"\n\nI rolled my eyes and groaned, which made Taylor laugh and give me a squeeze. For a moment I actually envied Kelsey and Grandma, who were in the kitchen cleaning up, but I'd had a lot of turkey and stuffing and potatoes and Taylor was warm and so comfy...\n\nI woke up several hours later. I'd slid down so my head was laying in Taylor's lap, and someone had covered me with a blanket. My dad and Grandpa were both zonked out where I'd last seen them, Grandpa snoring magnificently.\n\nI looked up into my girlfriend's beautiful blue eyes. \"Hi\"\n\n\"Hi, sleepyhead.\"\n\n\"Mmm, sorry.\"\n\n\"That's okay.\" Her fingers ran through my hair as she smiled down at me. She's so beautiful. \"But you are going to have to take me home soon. I have to work tomorrow.\"\n\nI whined for a moment. \"Can't we just stay here?\"\n\n\"I won't have a way to get to the beach, sweetie.\"\n\n\"Just take my car. Come back here after. Mom'll even make you a lunch.\"\n\nTaylor thought for a second before agreeing. That burden lifted, I snuggled back down, but I really wasn't tired. Eventually mom got out the scrabble board, and Taylor, Grandma and I took her on. And lost. Miserably. But it was fun.\n\nUnfortunately, the guest room, where my grandparents would be staying, was right on the other side of the wall from my bed, so there would not be any repeats of yesterday's festivities, but any night I got to spend cuddled up with Taylor in bed is a good night.\n\nI know that I'd said my mom would pack Taylor a lunch, but I made sure to get up early and have one ready for her. I waved as she pulled away before I headed back into the house.\n\nAs much as they did love to shop, my mom and Grandma were not door-buster people, so we headed out to a local pancake house for a nice breakfast. Dad and grandpa were already watching football when we left, as things start early out here on the west coast. He'd enjoy his leisurely day with complete control of the remote, I'm sure.\n\nI was excited, because I was going to the dress shop, the same place I'd bought my prom dress. I'd never had a chance to really dress up for Taylor.\n\nI badly wanted it to be something special, and there it was as soon as I walked in the shop. They spent the next thirty minutes fitting me, and by the time they were done I was floating. I'm not going to tell you about it yet, I'll let Taylor do that on the night of the dance. I did pick up a few other pieces of clothing that I liked. Nothing too racy, I was with my grandmother, after all, but I'd had an idea and I needed the right thing to wear.\n\nI knew where Taylor parked while at work, and I had no trouble finding my Mini in the lot where I had mom drop me off. I was wearing my brand new button fly cuffed denim short shorts, and a sleeveless, high necked top that showed a bit of midriff and had a laced window for a bit of peek-a-boo cleavage.\n\nI was leaning against the driver's side door when Taylor came out.\n\nI watched the smile break over her face when she saw me, but I didn't let myself return it, instead trying to look innocent and lost.\n\nTaylor caught on as she approached, her face morphing into that seductive smirk of hers. \"Hey, little girl. You need a ride?\"\n\nI looked up at her through my lashes and nodded.\n\n\"Where're you headed?\"\n\n\"I don't know. I don't have anywhere to stay tonight.\"\n\n\"Really?\"\n\n\"Uh-huh.\" My voice wavered. She was right up next to me now, and the reality of her presence was palpable.\n\n\"Well, I know a place, but it'll cost you.\"\n\nI tried to look pathetic. \"I don't have any money.\"\n\nShe ran a hand up my arm making me shiver from head to toe. \"That's a shame. We'll have to think of something else, then.\"\n\n\"Something else? Mmfh!\" Her mouth pressed against mine and I felt myself melt into her kiss.\n\nSeveral hours later I was lying on my back in our bed at Taylor's apartment, gratefully paying for my room and board as Taylor sat on my face, turned away into a pseudo sixty-nine. We'd tried the full version of that position before, but Taylor's long torso and my shorter one didn't match up well. But this, where she could play with me as I ate her out, mmm, yummy.\n\nI'd sucked her inner labia into my mouth, caressing it with my lips and tongue when she slipped two fingers inside me. I hadn't been expecting it, and I accidentally bit her labia for a second.\n\n\"Hey, no teeth. Bad girl.\" Taylor gently spanked my pussy, right over my clit. A spike of pleasure rocketed through my body, and I gasped loudly and wiggled my hips as I pulled my mouth from her sex.\n\nShe misinterpreted my reaction. \"Oh, God, Aly, I'm sorry.\"\n\nI pulled her back to me. \"No, you can keep doing that. I was a very bad girl, biting My Lady.\"\n\nShe rubbed the inside of my thigh before softly spanking me again. Wow, that felt amazing. I moaned and wiggled my hips against her hand.\n\n\"Mm, my baby does like that. You better get back to what you were doing if you want me to keep going.\"\n\nI instantly buried my mouth back into Taylor's wet folds, and she started a soft, rhythmic slapping against my clit. I'd been fighting back my orgasm for a few minutes, and this new sensation was suddenly making that extremely difficult. I redoubled my efforts, knowing that My Lady was more apt to give me permission to come after a climax of her own. Unfortunately I couldn't wrap my tongue around her from this angle, but still I felt her stiffen and release only a few minutes later.\n\nMy head fell back onto the pillow, my whole body trembling and shaking.\n\n\"Does my baby want to come?\"\n\n\"If it pleases My Lady.\" I could barely get the words out.\n\n\"It does.\" She slipped two fingers back inside me. \"Come for me, baby.\"\n\nThey were the four most beautiful, heavenly, glorious words ever spoken, and I relaxed my grip on my pleasure and let the bliss wash over me. It pulsed and pulsed, my toes, fingers and hair all tingling as I rode the waves of my orgasm. When it finally receded I had only moments to catch my breath as Taylor moved down the bed, her lips and tongue bathing my incredibly sensitive sex in attention, and it was probably less than a minute later I was spinning back into the heavens again.\n\nThrough our lovemaking I'd developed good control over my first orgasm, but once I'd let go I had almost no say in the subsequent ones. And there were always more, so many more I usually lost track, if I ever tried to count. Eventually Taylor stopped with her oral ministrations and climbed back into my arms as I tried to stabilize my breathing.\n\nShe pulled the covers around us, and I held her tight between the sheets. \"Did you have a nice Thanksgiving, My Lady?\"\n\nHer hand twined gently through my hair and she kissed me on the forehead, making me purr. \"Yeah, Aly, I did. Best in a long time. You?\"\n\n\"It was great, mostly 'cause you were there. And you're getting along with my dad.\"\n\n\"Yeah. He was really trying. Did he tell you he wants to take me to the tux place Monday?\"\n\n\"That's great!\"\n\n\"Yeah, I think so.\"\n\n\"Just be yourself, 'cause you're amazing.\"\n\n\"Thanks, baby.\"\n\n\"And get something nice, 'cause my dress is amazing, too.\"\n\nShe laughed before asking me about it, but I didn't tell her anything, other than the color, which she might need to know. Silver and dark blue. \"So after work tomorrow, come back over to my parent's house? We'll put the tree up.\" I could see that it made her uncomfortable for a second, but she pushed away the feeling, not without effort.\n\n\"They still make you nervous?\"\n\n\"Your dad taking me out to lunch? Yeah, a little.\"\n\n\"No, I mean just being part of family functions.\"\n\n\"Sorry, I'm just...\" Taylor choked a little on the words and her eyes flicked up, seeing old, painful memories I'd guess.\n\n\"I know. But my family can see how happy you make me, and they love you. Or they're starting to. Just trust yourself enough to let them.\"\n\n\"Trust myself?\"\n\n\"Yeah. Think about it.\" With that I closed my eyes and turned in Taylor's arms, so she was embracing me from behind. I kissed one of her hands. \"Good night, Taylor. I love you.\"\n\n\"I love you, too, baby.\" I could hear the emotion in her voice, the fear. Everyone she'd ever loved had rejected or abandoned her. But still she was willing to try again with me. I was going to teach her what it meant to be loved without conditions or expectations if it was the last thing I did, even if it took a lifetime. That didn't scare me in the slightest. A lifetime spent loving and being loved by Taylor? God, that sounded like heaven on Earth.\n\n- Taylor -\n\nIf it hadn't been hammered home on Thanksgiving how different Aly's family was to mine, trimming the tree on Saturday night sure clinched it. It wasn't just the tree, it was the whole house, and they did it right.\n\nTheir tree was up, but they'd waited for me to get there before hanging any ornaments or setting out other decorations. We hung lights and ribbon before getting into the ornaments. I was the second tallest person in the room, so I helped Aly's dad with that. We really did work well together as a team. Everyone started hanging ornaments one at a time, a story being told as each was revealed, with brief, good-natured arguments breaking out when recollections differed.\n\n\"Taylor, I think you should hang this one.\" Jessica handed me an ornament I hadn't seen her take out of the box.\n\nI looked down at it. It was a blonde lifeguard wearing a visor and a red swimsuit. She was blowing a whistle and holding a red flotation device. The words 'Tagalong Beach' were on the flotation device, and 'Taylor' on the strap.\n\nMy mouth hung open in shock. \"When did you...?\"\n\n\"The day after Thanksgiving, at one of those kiosks at the mall.\" Jessica put her hand on my elbow as I stared down at the figure. \"All of my daughters have their own personalized ornaments. All of them.\"\n\nI nodded my thanks, not trusting myself to speak. I got it hung up, and I was able to recover myself sufficiently to articulate my appreciation.\n\n\"You're welcome, dear,\" was all Jessica said. It meant so much to me.\n\nWe kept on our task. Aly hung her soccer player with her name on the back, and Kelsey's was a cheerleader. Jessica had a large Christmas village that covered a table set out for just this purpose, complete with a fluffy white tablecloth imitating a snowscape. There was also her collection of Santa Clauses from around the world, each a small statuette with a different country's take on St. Nicholas.\n\nWe spent the night on Saturday at Aly's parent's, but by the time I got back to my apartment after work Sunday Aly's car was in the driveway in what I was beginning to think of as her spot. When I entered the apartment there was Aly, standing next to a three foot Christmas tree, which now sat on one of my end tables up against the window.\n\n\"Just a little color.\" The only thing decorating it was a string of lights and a package worth of colored glass balls\n\nI laughed. \"I like it.\"\n\n\"And this one.\" She handed me another ornament. \"I was at that Kiosk, too.\" This one was shaped like two people in pajamas embracing in front of a Christmas tree. You couldn't really tell if one or the other was supposed to be a man or a woman, but our names were on the caps they were wearing. I hung it up, marveling at how much this woman had changed my life.\n\n***\n\nDespite everything that had happened over the weekend to put me at ease I was still nervous about spending time alone with Aly's dad. He texted me the name and location of a tux shop that he said did rentals for women, and I met him there at ten, right as they were opening. The lady who helped us was very friendly, and she had obviously done tux fittings for women before.\n\nShe measured me quickly before sitting us down in front of a large touch screen computer.\n\n\"You said this is for a formal dance? Is there a certain style you're looking for?\"\n\nI grimaced. Like I knew anything about tuxedo styles. \"My goal isn't to end up looking like a boy, I can say that. I want something that fits me.\"\n\nThe woman nodded and pulled up a group of photos. \"Just look through these, favorite anything you like, and when you're done we'll take a look.\"\n\nI nodded and started swiping through the pictures. If there was any awkwardness in doing this with my girlfriend's father it vanished quickly. I'd expected him to be the typical guy, without any opinions on the styles themselves, but he offered advice freely and seemed truly involved.\n\nI'd marked a couple of possibles when I saw it. It was a two buttoned coat featuring a wide, velvet looking lapel. The model wearing it also had a white pleated shirt with a high lace collar, and lace ruffles poked out from under both jacket sleeves. There was also a loose western bow tie along with her fitted pants. I loved it.\n\n\"What do you think of this one?\"\n\nMr. Winterberg frowned thoughtfully at the screen for a second. \"Yeah, I like it. I think that would look really good.\"\n\n\"Did you find something you like?\"\n\nI showed the picture to the saleswoman and she nodded. \"Actually, I might have something in that style in the back.. Let me see.\"\n\nTen minutes later I was wearing the top half of the outfit. The jacket they had on hand was a size too big, but I loved the lines. It was sharp and dignified, without being aggressive or too masculine. I just felt good in it.\n\nAlso, I really appreciated that Mr. Winterberg did not try to pay for it. I'm not sure if he was testing me to see if I would ask, or if Aly warned him off, but either way I didn't have to embarrass him.\n\nHe had offered to pay for lunch, so I figured I'd let him do that. I have my pride, but I'm not stupid. We ended up at a Ramen Noodle place, fancier than the one Aly and I had gone to, at least to my uncultured eye. He ordered the Gyoza to start and we both looked over the menu, which was full of a bunch of names I could barely pronounce. The descriptions were helpful though, and I managed to pick something out.\n\n\"Taylor, I just wanted to say thank you. That was something I never thought I was going to get to do.\"\n\nI chuckled. \"What, you never though you'd have to rent a lesbian tuxedo?\"\n\nHe smiled and shook his head. \"Just the tuxedo part. My dad took me for my first tux before my junior prom. I remember seeing myself in the mirror. I felt like I was so grown up, and my dad looked so proud of me. I always imagined doing that with my own son.\"\n\nI smirked at him. \"But life gave you daughters. And I'm not what you expected them to bring home.\"\n\nHe laughed and shook his head. \"No, but that's par for course with children. My dad told me when Aly was born to set boundaries, not expectations. Let your kids surprise you. I've tried to do that. Although this was a big one, I'll admit. But Aly's always been very level headed, and I've always trusted her judgment. And the more I get to know you, Taylor, the more I understand. I can see it. You love my daughter very much, don't you?\"\n\nMy cheeks colored, but I made myself answer firmly. \"Yes sir I do. She's, um, she's the most fearless person I've ever known. Everything she does, she does with an unreserved joy. Just being near her is special. That she'd choose to be with me, it's very humbling.\"\n\nMr Winterberg nodded. \"When Aly was born she came a couple weeks early, just under six pounds. She was so tiny. I remember being there in the hospital room. Jess was sleeping, she'd just finished feeding her for the first time, and I was sitting there, holding our baby. I never knew it was possible to love something so much. She opened her eyes and looked at me, and I could see she trusted me completely, to care for her, to protect her. For twenty-two years I've done those things. It's not easy turning responsibilities like that over to someone else. But, Taylor, well, I think my daughter's in good hands.\"\n\nI was getting a little misty, and I couldn't help but dream about what it would mean to have my own father say something like that to me. \"Thank you, sir.\"\n\nHe nodded, the emotion evident in his own eyes. \"It's Thomas, or Tom. Someday, maybe even dad.\"\n\nI nodded happily, and our food arrived. We talked through the meal, him telling me about his current projects, and I elaborated on some of the sculptures I was doing. I was in the middle of going on about Mr. Beville's studio, and that I'd likely find out the date of my show at his Christmas Gala in a few weeks, when we were interrupted.",
        "\"Tom! How've you been?\"\n\n\"Bill, good to see you.\" Mr. Winterberg shook hands with an older man in a nice suit who was standing by our table. \"It's been awhile, but you'll be hearing from us soon for the Westgate project. How are Jeanine and the kids?\"\n\n\"Good, thanks. The youngest started college this year, so I need that contract.\" He laughed and looked at me. \"Sorry, you interviewing?\"\n\n\"No, no. Taylor, this is Bill Crouse, his company supplies the bathroom fixtures and plumbing equipment for my buildings. Bill, this is Taylor Knox, Aly's girlfriend.\"\n\nI tried to keep the look of surprise off my face as Bill's eyebrows shot up. I hadn't been sure how Mr. Winterberg was going to pass me off, but direct honesty wasn't what I was expecting.\n\n\"As in...\"\n\nTom nodded. \"Um-hm. It's been an interesting few months, but Aly seems really happy. She graduates USC in the spring. Architecture.\"\n\n\"And what do you do, Taylor?\"\n\nI felt my cheeks heat up, but I answered firmly that I was a lifeguard.\n\nTom continued for me. \"She's also a very talented, up and coming artist. She has a show scheduled for the spring.\"\n\n\"Really? Where at?\"\n\n\"Beville Art Gallery.\" I saw his eyes change from skeptical curiosity to respect as I answered.\n\n\"I've been there, my wife has dragged me to a few of those parties. That's very impressive. Well, Tom, give my best to Jess and the girls.\"\n\n\"You do the same.\"\n\nBill wished me good luck at my show and headed back to his table. I swirled my chopsticks through my bowl.\n\n\"You okay?\"\n\n\"Yeah, I just, I wasn't...\"\n\nHe nodded. \"I'm not ashamed of you, Taylor, and I wasn't kidding about how happy Aly seems. Welcome to the family.\"\n\n***\n\nI was on a cloud the rest of the day. I sketched out a new sculpture, a daughter burying her father in sand at the beach, and another where a father was pulling his daughter through the water as she kicked.\n\nI wanted to start them but I made myself work on other projects first, completing a few that were meant for the show. If I worked hard I thought I could get close to finishing all the repeats by next week, and I could start on the new stuff, as well as continue Aly's sculpture.\n\nI was still in my really good mood on Tuesday morning, so I texted Aly and told her exactly what I wanted her to wear when she came over (her lacy, white skirt and her blue halter top) and what I didn't want her to wear (bra or panties). I love Aly in skirts. Not that I didn't enjoy seeing her in a nice tight pair of jeans, but there was something so perfect and feminine about her in the flowy skirts she liked.\n\nI ordered and picked up her favorite from the local Chinese place, cashew chicken, and had it ready when she got there. I slipped her blindfold on as soon as she walked in the door, even before I kissed her. I took off her top before cuffing her wrists behind her and leading her over to the table, where she sat in my lap and I fed her her lunch. In between bites I let my hands wander freely over her exposed skin, holding her breast, pinching a nipple, caressing her smooth tummy.\n\nMy baby's energy was humming, and I knew I had her well on the way to where I wanted her, so when she was finished I had her stand as I stripped off my jeans and underwear. I sat back down, guiding her safely under the table so she could pleasure me while I ate, which she did brilliantly as always. It was an amazing feeling, savoring the yumminess of my orange chicken while being able to glance down to see my baby blissfully lapping away at my sex.\n\nWhen I was finished I was so close, and I just leaned back and let my orgasm roll over me. Just like always it energized Aly, and she kept going, so that I had to make her stop so I could take her back to bed.\n\nOnce there I didn't mind a bit more, especially as she started using that glorious tongue to wrap up my clit. God, I'd consider marrying this girl just to keep access to that forever. Eventually I pulled away, which caused a pathetic little whimper from Aly.\n\n\"No baby, it's time for you to feel good, too.\" I pressed my lips to hers, and the power of her kiss took my breath away. As I rolled her onto her stomach I could feel her slip deeper as she gave herself to me, and that excited me to no end.\n\nI'd spent a decent amount of time last night and this morning dreaming about what I was going to do to her, and what positions I wanted her in. I started with wrist cuffs, her arms pulled apart and attached to each corner of the headboard. Next came the thigh cuffs, just over the knee, keeping her legs pulled forward and slightly spread so I could kneel behind her. Finally, ankles tied back to the foot of the bed, holding her legs in place.\n\nI ran a finger down her spine, her whole body trembling at my touch as she moaned into her gag. Two feelings just spun around in my head, the incredible rush of strength and power I felt having this beautiful creature totally in my control, and second, how much I loved her, and needed to make her feel wonderful.\n\nI ran my hand over her backside and between her legs. She was soaked, moaning lustily as I stroked her clit. I took her from behind. The way she tied she could still rock against me, and I took full advantage, pushing deep inside her, reaching around and stimulating her with each stroke.\n\nIt was awesome. I waited until my baby was hanging on by a thread before whispering my permission in her ear. The way she responded was unbelievable, just dissolving into bliss. I could feel her body pulling on the phallus as I pushed in and out. It was so incredible that I toppled right after her, spasms of joy pulsing through my limbs.\n\nAfter the first, my baby generally came quickly and a lot, so I took her through several more orgasms before changing the position, detaching her from the frame and rolling her onto her back. Ankles and wrists were reattached to my headboard, spreading her arms and legs wide, completely exposing her to me.\n\nI started to pat directly onto her clit while I slid two fingers inside her, stroking her G-spot. Aly shook and shook as each climax wracked her small body. I climbed back on top pushing inside her. After a few moments I pulled off her blindfold so I could look into her eyes. They were full of wonder, silently begging me for more. I wanted to give it to her, god, I would have given her anything.\n\nHer lids closed as her body seized again, and I slid down, taking her sex into my mouth and pulling more and more from her body.\n\nFinally Aly made a noise that I knew meant she needed to stop. She'd have kept going if I let her. She'd hurt herself if it meant pleasing me, but I couldn't let that happen. She trusted me to know when it had to end, and somehow, I did.\n\nJust a few moments later I had all paraphernalia off of her, and held her as she cried on my shoulder. I rocked her gently, telling her how amazing she was, how happy she made me, and how much I loved her. I was totally connected with her, knowing no one had ever had the privilege of seeing this raw, primal side of her but me. Some minutes later she fell asleep in my arms.\n\nI was ready this time, pulling a blanket from the side of the bed around, and I held her as she drifted away. I read on my tablet, even played a game, but I didn't move, there wouldn't be a moment that I wasn't touching my baby, and when she woke, she would still be in my arms, safe and adored.\n\n- Aly --\n\nMy eyes cracked open, My Lady's beautiful face and startling blue irises coming into view. I managed to creak out a word. \"Hi.\"\n\n\"Hey, baby. You okay?\"\n\n\"Yeah.\" My mouth felt like it had a wad of cotton in it. \"Thirsty.\"\n\n\"Here.\" She reached over and pulled out a sports drink from somewhere. She sat up and helped me do the same. \"Drink this.\"\n\nI sucked the orange liquid down like it was the elixir of life.\n\n\"You want another?\"\n\nI nodded, and one magically appeared. I nursed this one slower, just resting in Taylor's strength. She pulled a pump bottle from her nightstand and started putting lotion on me, paying particular attention to my wrists and ankles where the restraints had been. My body felt like it was made of Jell-O, so I just let her do it. It felt wonderful.\n\nI glanced over at the clock. \"God, it's almost four o'clock. How long did I sleep?\"\n\n\"About two hours. I had you restrained for more than one.\"\n\n\"Really? Wow, that's longer than last time, isn't it?\"\n\nTaylor nodded. \"Can't you tell?\"\n\nI shook my head. \"Huh-uh. When you have me like that I have no idea how long it's been.\"\n\nHer fingers ran through my hair as I leaned against her. \"What's it like, baby?\"\n\n\"Mmm, it's perfect. It's like I'm floating, I feel very warm, safe, and loved, and my whole body tingles.\"\n\n\"Can you feel what I'm doing?\"\n\n\"Oh, yeah, I'm aware of it, and when I come, oh, god, it's magic. Especially the first one. When you say it's okay, it's like, that moment, I'm able to completely let go. I'm totally yours, every part of me. I can't describe it. But I love it. So much.\"\n\nTaylor pulled me close, and I snuggled into her. \"I'm sorry I cry, though. I don't know why I do it. I know you don't like it.\"\n\n\"Oh, baby, it's fine. It scared me the first time, I thought I'd hurt you. But I know it's normal now. And I know what to do.\"\n\n\"I just need you to hold me.\"\n\n\"I know. And that's so special for me.\" She gave me a squeeze.\n\n\"So how did it go with my dad yesterday?\"\n\n\"Good. I got my tux ordered.\" She went through the details, and it seemed that she was being sincere.\n\n\"I did think about one thing, though, baby.\"\n\n\"What's that?\"\n\n\"I don't know what to get you for Christmas.\"\n\n\"Hm, I have an idea, kind of a generic one. You'll have to be creative.\"\n\n\"What's that?\"\n\n\"I want something I can wear that reminds me that I belong to you. But not a tattoo. No way. And it has to be discreet, not like a leather collar, or anything.\"\n\n\"Okay, I'll think about that.\"\n\n\"I already know what I'm getting for you. And I'm not telling you. Also, I'm going to get something for us. Probably something to enhance that clit spanking you did that one time.\"\n\n\"You like that, huh?\"\n\n\"Oh. My. God.\"\n\n\"You are just full of surprises.\"\n\n\"You have no idea.\" My voice dropped a little, really hoping that the answer to my next question was 'no'. \"Do we have any plans tonight?\"\n\n\"Nope. Just you, me, a couch and a movie.\"\n\nI leaned my head on her chest. \"That sounds wonderful.\"\n\nAnd it was. Taylor had a frozen stir fry meal to make for dinner, one of the ones where the sauce comes in meltable nuggets. She tucked me onto the couch, but I could still feel my mood sinking while she prepped our meal. I kept the smile plastered on my face, though. I didn't want Taylor to get the wrong idea, but I should have known I couldn't hide anything from the woman I loved.\n\nTaylor came back over to the couch with two steaming bowls of chicken, veggies and rice. \"Hey, baby. You dropping some?\"\n\nI opened my mouth to deny it, but there was complete understanding in My Lady's face, so I just nodded. Taylor sat next to me and handed me my supper. It was warm and good, and My Lady's presence was warmer and better. She put on a comedy, 27 Dresses, and I laughed at the movie, the clouds in my mind dissipating as she held me. I couldn't wait until this was my life, instead of just a couple times a week. I just hoped Taylor wanted the same thing.\n\n***\n\nThere were basically two topics of conversation at the house that week, finals and the dance. I'd recounted how I'd met Taylor probably a dozen times by now, and I'd had multiple girls ask me what sex was like with her. Unfortunately in my heady rush of acceptance and freedom I'd answered those questions with more detail than I likely should have, but the real surprising moment was still coming.\n\nOn Thursday as I left for class I heard a voice call out. I turned around and saw Kat, one of our sophomores, hurrying after me.\n\nAs she came alongside she asked if she could walk with me.\n\n\"Sure.\"\n\nShe hemmed and hawed for a minute. Kat was a pretty girl, and really smart, with an air of sexy librarian behind her glasses and conservative hairstyles, but she wasn't terribly outgoing.\n\n\"What's going on, Kat?\"\n\n\"Aly, how did you know you were gay? I mean, you had boyfriends. How, um, why did you change?\"\n\n\"I never changed, I don't think. It just took me a while to realize what I was feeling. Why? Is there something going on? Is it someone at the house?\"\n\nHer eyes went wide. \"No! No, I mean, there is someone. A girl in my Chem III class. We've been going out to lunch after class, like every day we have Chem. She's so easy to talk to, and I love being with her.\"\n\n\"Are you attracted to her?\"\n\n\"I think so. I get all nervous around her some times, and when we touch...\" She stopped talking, her cheeks turning bright red.\n\nI smiled at her. \"Do you have any indication if she's gay?\"\n\n\"Yeah, she is. She was dating a girl when we met, but they broke up a few months ago. And she's always finding excuses to touch me. It's really sweet. I don't want it to stop.\"\n\n\"Then don't. Touch her back. Smile at her. Let her know you're interested. You know how to flirt.\"\n\n\"But that's the thing! I still like boys, I still think they're handsome, but I still really like Teri, too.\"\n\nI smiled at her. \"So? Kat, maybe you're bi. Or maybe you're mostly straight except for this one girl. There don't have to be any rules, other than being honest with yourself. And her.\"\n\nHer facial expression showed that hadn't answered her question. I stopped walking. \"Okay. Close your eyes. Picture, um, Teri, right?\" Kat nodded. \"Picture her face. Now she's moving closer, she's going to kiss you. Do you want it to happen?\"\n\nKat's head went up and down again.\n\n\"And if you never got the chance, if the semester ends and you never saw her again, would you regret it?\"\n\nKat bowed her head. \"Yeah. I would.\"\n\n\"Then don't let that happen.\"\n\n\"Okay, thanks, Aly.\"\n\nWe went our separate ways, but my mind raced as I continued to walk to class. I guess I'd asked for that, and it made me feel good that someone felt safe enough to come to me to talk. How long had she been holding that in, I wonder? All semester, probably. I hope I'd given good advice.\n\nI saw Kat later that night, and as soon as we were alone she broke out into the biggest grin. \"We're going out tomorrow.\"\n\n\"That's great. Like, on a real date?\"\n\n\"She was holding my hand when she asked. I mean, while we were eating, I said something that was funny and she laughed and put her hand on mine, and I just turned mine over so we were holding hands. She smiled so big, then she asked me.\"\n\nKat's eyes were just dancing, and I gave her a hug and wished her good luck, running up to my room to call Taylor. I needed to tell someone, and for once in my life it couldn't be Sadie.\n\n- Taylor -\n\nI couldn't help but hear Aly's excitement. She'd caught me just before I was getting ready to head back home, having spent almost twelve hours working today. But I wasn't tired, at least not mentally. But I had work in the morning and I needed to be sharp. I also had one thing to do when I got home, so as soon as Aly and I hung up I called Vicky.\n\nA went in through the garage door, and Jen and Vicky were waiting up for me in their living room, Jen turning off the TV as I arrived and heading into the kitchen to get me a cup of decaf.\n\nVicky's face was shining with anticipation, and I decided not to keep her in suspense any longer.\n\n\"So, next Friday, I am taking Aly to this dance for her sorority. I've got my tux ordered, but I want everything else to be perfect, too. So, I need your help.\"\n\nThat started the ball rolling, and by the end of work on Friday I had a hair appointment for Wednesday and a promise for dressing help on Friday. Vicky also informed her wife that she was giving me next Friday afternoon off so we could get ready.\n\nMy hair was already longer than usual, and I'd been meaning to get it cut, so I didn't mind that bit. Of course, I thought I'd have at least some say in what was eventually decided on. Instead, between Vicky and her professional stylist Tara, I had no more input than a poodle at the groomers.\n\nOkay, maybe I'm being a little extreme, but that's what it felt like. Once they had me in the chair they started going through books looking at shorter styles. Luckily they moved quickly past the girlier cuts and into things I liked better. They ended up presenting me with three options, and I chose the one I liked best. Then Vicky decided she didn't like that one after all, and she picked a different one.\n\nI didn't mind her alternative, so I assented and they started to work, Tara cutting and Vicky commentating. Tara teased and trimmed and clipped, and when she was finished she applied some product, and I almost didn't recognize myself.\n\nGone was my unruly mop of blonde hair, and in its place was a coiffed, semi-pompadour sort of thing. It was parted on the left with the hair cut short, but not fully buzzed, over each ear. Damn, I looked good.\n\nTara looked at Vicky. \"You can style this, right?\"\n\n\"Absolutely. Oh, minha querida, you look perfect.\"\n\n***\n\nOn the Friday of the dance Jen picked me up at two in a beach truck and dropped me off at base. \"Vicky has your tux. She'll be waiting for you in your apartment.\"\n\n\"Oh, joy.\"\n\nJen smirked at me. \"You know you'll thank her for it, so let her have her fun, and have a good night.\"\n\nI was supposed to be at Aly's sorority house at six-thirty, so I figured getting back to my apartment by three would be plenty of time. I mean, who needed three hours to get ready for a dance? Nevertheless Vicky started clucking about how late I was immediately upon my entrance, practically throwing me into the shower. At least afterwards she let me put my underwear on before she started in on me.\n\nI pulled on my robe as she dragged a chair into the bathroom, plopping me down in it before she started in on my hair. First came a ton of mousse, and then several other bottles. I didn't know what they were but they smelled like a hair salon. Then blow drying, followed by an intense session with a flat iron. I hadn't been through anything like this since my mother had fixed my hair for my older sister Esther's wedding when I was sixteen. And I had a lot more hair then.\n\n\"Are we done yet?\"\n\nI heard the top pop off a spray bottle. \"Nope. You're just lucky you have relatively fine hair and I don't have to backcomb it.\"\n\nI heard the hiss of the hairspray bottle begin, and I swear it went on for ten solid minutes. But when the haze cleared, I'll admit my hair looked good. Vicky was standing behind me, looking into the mirror.\n\n\"Awesome. So, should I get dressed now?\"\n\nVicky laughed like I'd made some sort of joke.\n\n\"What's so funny?\"\n\n\"Make-up, dear.\"\n\n\"I don't wear make-up.\"\n\n\"You do tonight. Now don't move. And stop scowling.\"\n\nI took a deep breath and tried to relax as Vicky set her make-up contraption on the counter and opened it.\n\n\"Now, gently, close your eyes and lift your chin.\"\n\nI felt various brushes and pencils and things, and I was convinced that when I opened my eyes again I was going to resemble a circus clown, but I didn't. If you didn't know me, you wouldn't be able to tell I was wearing anything. My skin was just a little smoother, my eyes popped just a little more, and my gaze was just a little extra intense. Of course it also looked a little silly while I was wearing just my bathrobe, but still.\n\nIt took an effort to keep pretending I was annoyed by the whole thing, but in truth I was really excited. I'd also thought about the fact that Aly was doing the same thing right now. I'd never seen her all dressed up, other than a prom photo on her parent's wall. Then she'd been dressed in red, and she'd been stunning. What would it be like to see her real life?",
        "I added a touch of cologne, cheap stuff I could afford, but it smelled good, I thought. My clothes were laid out on the bed. First on was the shirt, with the long sleeves ending in frills, then the pants, which fit like a glove, making me thank my foresight for owning at least one pair of panties that wouldn't show a line. The thin cummerbund eased the waistline. The only major item left was the jacket, and when it was on I stared at myself in my mirror.\n\n\"Meu Deus, Taylor, you are so handsome.\" Vicky handed me the tie, which I put on as she tucked a blue handkerchief into the jacket's breast pocket.\n\nWith that the effect was complete, and I couldn't believe my eyes. Aly was going to flip out when she saw me. She'd be so happy, and, damn it, I'd do anything to make that girl happy. And I wasn't ashamed about it. Besides, I looked good.\n\nVicky's phone chirped and she glanced down at it. \"Your ride is here.\"\n\n\"My ride?\" I'd expected to borrow Vicky's car, but we walked down the steps to a black sedan, complete with uniformed driver, who was holding the door open.\n\n\"Our gift to you. Have a wonderful evening, Taylor.\" I hugged her, and she insisted on a picture to show Jennifer, and I was on my way to the sorority house.\n\nThe place was huge, like something out of a movie. I mean, I knew it would be big, Aly said it housed up to forty women in any given semester, but good grief. It was three stories of red brick with massive, stately Doric style columns.\n\nThe sweeping drive was a bit of a zoo, as cars of all shapes and sizes filled every available inch. I was about ten minutes late, so I was anxious to get out. The driver told us she'd wait for us there, and I made my exit and headed toward the front doors, where I was greeted by a sea of men in formal wear.\n\nI suddenly felt small and a little scared. A group of them standing on the exterior of the crowd noticed me, and they started to stare. It appeared to just be shock, as opposed to any overt animosity, but it still made me feel uncomfortable. I made my way through the crowd, trying to get a look at the front door, when I heard a familiar voice.\n\n\"Taylor! Over here!\" I looked and saw Noah, Sadie's boyfriend, waving and I made my way to him. He was standing with a group of guys, who he introduced. \"Guys, this is Aly's girlfriend.\" They were all friendly enough, and I asked what was going on.\n\n\"They're in getting group pictures. We'll be able to go in and get them in a minute.\"\n\nI nodded, hearing murmuring behind me. \"Dude, that's a chick. Check it out.\"\n\n\"Fuck, man, I didn't know there were dykes in this sorority.\"\n\nI looked back over my shoulder, face twisting.\n\n\"Hey, Taylor, ignore them. You look great, by the way.\"\n\n\"Thanks. You don't clean up so bad yourself.\"\n\n\"I just hope Sadie likes seeing me in a tux. Maybe she'll say yes when I ask her to let me wear another one sometime.\"\n\n\"You thinking about proposing?\"\n\n\"I've been imagining proposing to Sadie since I met her when she was a freshman. How about you?\"\n\nI blushed and shook my head, looking down. The image of Aly in a white dress, promising to love me and only me for the rest of her life, well, it made my knees weak\n\nNoah laughed. \"Hey, no pressure.\"\n\nOne of Noah's buddies spoke up. \"So what are you studying, Taylor?\"\n\nA shot of shame-spurred ice ran through my veins. \"Um, art. I plan on being very poor.\" That made the guys laugh, but I suddenly felt on the outside again. I could almost guarantee none of the young men I was standing with would have any trouble finding work that dwarfed the money I made. I knew from Aly's birthday dinner that Noah was going to be an electrical engineer. Listening to them talk confirmed my suspicion. One was pre-med, another was majoring in business and was headed to Stanford for his MBA next fall. They good-naturedly teased one who was graduating with a nursing degree, but I knew it was just that, teasing. The lowest paid nurse in the country makes a crap ton more than I do.\n\nLuckily my souring mood was interrupted by the doors to the house opening. The men at the front began filing inside, and I followed along with Noah. By the time I got into the entryway people were starting to partner up. I'm reasonably tall for a woman, but in this sea of tuxedos I couldn't see much of anything. Eventually I made it inside, where dozens of beautiful young women were finding their dates. I just didn't find the one I was looking for. There was a wide staircase to the left of the entryway, so I made for the base of it. When I got there I saw her, slowly descending the stairs with a hand on the rail.\n\nMy heart leapt into my throat. She was a vision, golden brown hair cascading over her left shoulder, sparkling with what I hoped weren't real diamonds woven into it. Her eyes danced as her face split into a dazzling smile as she saw me. Her dress was strapless, the silver bodice giving way slowly into a shimmering, deep blue fabric that belled out down to the floor, white, elbow length gloves completing the outfit.\n\nI held out my hand and she took it. I opened my mouth to say something, but she shushed me. \"I just want to drink you in.\" Her eyes ran up and down my body. \"You look amazing, Taylor, so beautiful.\"\n\n\"Aly, you're stunning.\"\n\nShe beamed at me, hooked her arm in mine, and let me lead her out into the night.\n\nThe dance, or the ball, or whatever you want to call it, was something else, far and away the most high-class thing I'd ever been to. There were hors d'oeuvre trays and waiters serving non-alcoholic champagne. The lighting was soft and almost twinkling, and there was silver and white everywhere, making it look like a winter wonderland at night.\n\nThere was a real string quartet and a huge dance floor. We danced several times, before moving over to a table where Aly began introducing me around. There was such pride in her voice, and I began to shrink up inside. I went through several more rounds of 'So what are you studying?' or \"What do you do?' I tried to answer honestly and with pride, but it got harder and harder as the night went along. Aly was always expounding on my artistic talents, but every time she did I couldn't help but hear my father's voice, telling me art was nothing, that without a man I'd starve on the streets, which is what I deserved, being a godless abomination.\n\nBut still, dancing with Aly was the most wonderful feeling in the world, one perfect island of happiness. And as much as I tried, though, I couldn't hide how I was feeling from my baby. \"Hey, what's going on?\"\n\n\"I'm sorry, baby. Just...\" I looked around, a tear forming in my eye.\n\n\"They're intimidating you.\" It wasn't a question.\n\nI gave a nervous chuckle. \"All they can talk about is job offers and graduate schools, and I...\" I shook my head. \"God, I thought I was past this.\"\n\n\"You'd be surprised. Do you think all of them want to be going into the fields they are?\"\n\n\"They look pretty pleased with themselves.\"\n\n\"Some of them. But a lot of them are doing exactly what their parents have always told them to do. Like Evelyn.\" Aly nodded towards a beautiful young woman of East Asian descent in a green gown. \"She's an amazing actress, and has a beautiful voice. She'd give almost anything to go to New York and be on the stage, but her parents would cut her off. So she's going to law school like they want. Most wouldn't admit it, but a lot of them envy you, I promise.\"\n\n\"I think the only reason they'd envy me is because I have you on my arm.\"\n\nAly smiled, and I melted a little inside. \"You're sweet. Do you want to go?\"\n\nI leaned down and kissed her. \"Not yet. I want to dance with the prettiest girl at the ball some more.\"\n\nAnd so we danced, and the world slowly sank into the background as I held my baby in my arms, her head on my shoulder. I kept telling myself that Aly said I was good enough, that I made her happy. I could make something of myself; I would make her proud. I remembered something that Tilda Swinton's character had said in 'Dr. Strange.' We never slay our demons, we only learn to live above them, or something like that. It's probably not the best idea to take life advice from superhero movies, but it sounded wise.\n\nMy father had told me there was something defective and unworthy about me. He'd been telling me that since before I'd known he was talking about me. I hated him for it, but a part of me still believed he was right. He was my father, after all.\n\nI felt like there was a war inside me. There was the perfect rightness of being with Aly, fighting with the condemnation of family for feeling these things. How did Aly do it? I've know I was gay for more than decade, she's known for four months, yet I'm still fighting myself over it, and she had embraced it completely.\n\nI wondered what Aly was thinking, if she was thinking anything. Didn't she say her mind went blank when she went to that place? She wasn't immersed, but she was dipping her toes in it now as we moved together. Only one way to find out I guess.\n\n\"What are you thinking, baby?\"\n\n\"Mmm, not thinking, just feeling. Warm, happy.\"\n\n\"Ready to be warm and happy at home in bed?\"\n\nHer hand snaked up and around my neck, pulling me down for a kiss. Our tongues caressed each other as fire raced through my body.\n\nI took Aly home and made love to her, every square inch, as tenderly and worshipfully as I was able. She was the most incredible woman I had ever known, the most real, the most giving, the most genuine and honest, and the idea that she would share her bed with me was humbling beyond words. And when she fell asleep in my arms that night I held her close, and tried to rise above my demons.\n\n***\n\nI didn't see Aly again for the rest of that week. It was finals week, her last real one, she'd said, and she'd spent the whole weekend holed up in the library and her room at the house. We texted some, and she was planning a party with Sadie and Evelyn and a few other girls on Thursday night before the others headed home for Christmas break. I spent the evenings trying to find a perfect gift, something that showed her, and me, that she was mine. Eventually, I saw it.\n\nWhen I got home on the Friday before Christmas Aly's car was in the driveway, and I opened the door to the smell of baking chicken. She'd gone with boneless skinless chicken breasts and Shake and Bake, and it was great. Baby steps.\n\nEach night that week was the same. I'd go to work, either at the beach or at the warehouse, and come home to Aly, to her smiling face, her soft kiss, and every night I'd fall asleep holding her in my arms.\n\nOn the twenty-third, she told me not to be late, so I made sure I was home from the warehouse by six. Dinner was laid out on the table, take-out from a local vegan curry establishment, but put on nice plates. That wasn't strange, of course, Aly was still just learning to cook, after all. She'd done her make-up, understated, but she looked beautiful, and she was wearing that simple yellow dress of hers that I loved. Her hair fell in long waves, pulled back in a plait.\n\nHer gift had arrived in the mail just two days ago. I'd had it left on Jen and Vicky's doorstep so she wouldn't see.\n\n\"When you get home tomorrow, we're going to my parents, right?\"\n\n\"Yeah.\"\n\n\"Okay I'm going to give you your present now, then. Okay?\"\n\nShe stood up and led me to the couch and turned around. \"Go ahead, unwrap it.\"\n\nI unzipped her dress, which fell away revealing a transparent, sunshine yellow corset with thigh high stockings and the barest wisp of a thong. The bust was just a shelf style, lifting but exposing her breasts. Aly's body was the perfect picture of womanhood, and I ran my hands over it.\n\nShe turned around slowly, and I admired her from every possible angle. When she faced me again she was holding a gift-wrapped box.\n\n\"Another present?\"\n\n\"This one's for us.\"\n\nI tore off the paper and opened it. Inside was a cat of nine tails with a long hard leather handle. I touched the tresses, and they were impossibly soft. Still, though.\n\n\"Aly, are you sure?\"\n\n\"I need to be deep under when you use it, and you can't use it to, um, punish me, but yeah, but I want to try.\"\n\n\"I just don't want to hurt you.\"\n\n\"Oh, sweetie.\" She kissed me. \"You won't, just be very gentle to start. And if I don't like it, we won't do it again.\"\n\nI nodded, standing and taking Aly's hand and leading her back to the bed.\n\n\"Baby, do you remember what you asked for?\"\n\n\"Yes, My Lady. Something that I could wear, that would remind me who I belong to.\"\n\n\"That's right. Merry Christmas, baby.\" I took two small packages from the bed stand. I handed her the larger one first. She pulled off the ribbon and opened the small white box, revealing a set of tattoo style chokers in a variety of colors.\n\n\"Oh! I love these, I used to have some.\"\n\n\"But that's not the whole gift. Here.\"\n\nThe smaller package revealed a tiny silver padlock, the body a little bigger than a dime, shaped like a heart. .\n\n\"See, the way it works is the chokers can be fastened with the padlock, like a collar, but it doesn't look like one, and your hair will hide the lock if you want it to. What do you think?\"\n\nI looked up at Aly's eyes, which were shining with awe, her mouth open slightly. \"Put one on me?\"\n\n\"I intend to.\" I pulled the yellow one from the box, taking out the padlock as well. I sat on the edge of the bed, crooking a finger at Aly. \"Come here, baby. Turn around. Kneel.\"\n\nShe obeyed, and I heard her let go a shaky breath as she went down to her knees. I put my hands on her shoulder, which made her jump a little. God, she was excited. My lips pressed against the sensitive skin of her neck, earning a little gasp before I pulled the choker around.\n\n\"To whom do you belong, baby?\"\n\n\"You.\" Her voice was thick with emotion. \"I belong to you, My Lady. My mind, my body, my heart are yours.\"\n\n\"That's right. The choker reminds you that you are mine, and no one else's. And the heart shaped lock, it reminds you that Your Lady loves you and only you, and treasures you above all things.\" The lock clicked into place, and Aly gave a little moan. I'd practiced that speech in the mirror for a week, but with her here, trembling excitedly in front of me, I almost couldn't get the words out. I had to project confidence, though. For her.\n\nI gave her permission to turn around, and I noticed her hand twitched toward her neck, but she kept it down. \"Would you like to touch it?\"\n\nAly nodded, her eyes never leaving mine.\n\n\"Go ahead.\"\n\nShe reached up, gingerly pressing her fingertips to the wiry material. She worked her way around to the back and felt the lock in place, a soft smile forming on her lips. \"Thank you, My Lady.\"\n\n\"So you like it?\"\n\n\"Very much.\"\n\n\"That's good,\" I stood up, towering over her, \"but I think you should say thank you properly, don't you?\"\n\nAly bit her lower lip and nodded, reaching up and starting to undo my jeans. Once she had them off she stripped me of my underwear, and I sat back down on the bed. She gently pushed my legs apart, taking me into her mouth as I leaned back on my elbows, wondering what I had ever done to deserve this perfect woman.\n\nI let Aly service me for a good length of time. I knew it relaxed her, and I was still very nervous about using our new toy.\n\nConfidence, Taylor. As lovely as Aly's outfit was, it did have to go, and I took immense pleasure in slowly stripping it off of her.\n\nI slipped her arms into the leather sleeve and fastened it over her head as she lay on her back, and I lifted her leather-cuffed ankles up towards the headboard, similar to the position I'd had her in before, but more pulled back. I wanted access to the fleshy part of her backside as well.\n\nI used my mouth to bring right up to the edge and beyond, knowing she wouldn't come until I told her it was okay. I held the flogger in my hand, letting the tassels glide along her skin. Aly was trembling from head to toe.\n\nI continued to trace the tips of the flogger over her skin, alternating between the soft leather and my mouth over and over, holding her on the brink. I could tell she was finally fully relaxed into her bonds and deep into subspace when I finally pulled away.\n\nI rested the tresses of the flogger against her skin, listening to her moan as she shook at the contact. I took a deep breath, rolled my wrist, and brought the leather firmly against Aly's skin.\n\n*****\n\nI know you all hate me for stopping here, but it was the only place that made any sense.  Going to the end of the scene made the last section too short. and I promise I'll  have the final part up ASAP.  Only one to go!  Please rate and comment.  They keep me going.\n\n \n"
    ],
    "authorname": "JCMcNeilly",
    "tags": [
        "lesbian",
        "romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hero-worship-pt-07"
}