{
    "title": "Tumbleweed Ch. 03",
    "pages": [
        "By Woodmanone copyright September, 2015\n\nThis is the concluding chapter in Jake Hightower's story. Please read the previous two chapters to give you an understanding of the character's actions and the story line.\n\nI bet you know the next part. Constructive comments, critiques and emails are welcome.\n\n<center>********************</center>\n\nChapter 3\n\nJake pulled Via and the pack horse to a stop in front of the livery stable; it was just after midnight and no one came to take care of the horses. The big main door wasn't locked so Jake led his animals into stalls. He tended to them, unsaddling, watering, washing a little of the trail dust and grime off them and made sure they had good clean hay for feed. Then he walked to Mrs. Stewart's boarding house. \n\nJake would normally have spent another night on the trail but he wanted get home. The summer heat had descended on west Texas and long rides were harder on both horses and men. \n\n\"Glad to be done with the trail for a spell,\" Jake said softly. Looking forward to one of Mrs. Stewart's good meals and a soft bed, he thought. A bath wouldn't feel too bad either. \"Be glad to see Emily too,\" he admitted in a soft voice as he entered the boarding house.\n\n\"Jake, you're home,\" a surprised Jeremiah almost yelled. The boy ran to Jake, throwing his arms around him. \"I'm so glad you're back.\" Jeremiah's voice was sad, full of fear and anger.\"\n\n\"Glad to be home little pardner.\" Jake pulled the boy's face up. \"What are you doing up so late? I've never heard you so upset boy. What's the problem?\"\n\n\"Ma's been taken by some men. You gotta do something Jake, you just gotta.\"\n\nJake took hold of Jeremiah's shoulders and held him at arm's length. \"What do you mean taken?\"\n\nMrs. Stewart entered from the kitchen and motioned Jake to follow her and then to sit at the table. She poured a cup of her strong coffee and gave it to Jake. \"Three men robbed the stage depot this morning; they took Emily, as a hostage I guess. She was in front of the depot when they came out. The Sheriff fired a shot and one of the men grabbed Emily to hide behind.\"\n\nPouring her own coffee she joined Jake at the table. \"Two of the men mounted and the one holding Emily handed her up to one of them. He draped her across the saddle in front of him and the three high tailed it out of town.\"\n\nJake was stunned but he put his arm around Jeremiah. \"Didn't the Sheriff get a posse together?\"\n\n\"He was worried that the men would hurt Emily and said he'd trail after them when they had a chance to think they'd got away and hopefully turned her loose.\"\n\n\"While that bastard sits on his duff, those men could decide they didn't need her anymore,\" Jake said. They could kill her or even worse, he thought not wanting to upset Jeremiah anymore than he already was.\n\n\"Jeremiah go to the stable, brush Via real good and saddle him; use a clean saddle blanket,\" Jake ordered. \"Make sure he gets water and fill my three canteens.\"\n\n\"You're going after them,\" Mrs. Stewart said. It was a statement and not a question.\n\n\"Yes em. I'm going to change into some clean clothes, put my gear together and follow Emily.\" He put his hand over Mrs. Stewart's and added, \"I'll bring her back Amanda,\" he promised. \"I'll bring her back or bury the men that took her.\"\n\nMrs. Stewart started to say something but stopped. She felt a chill at the look on Jake's face and in his eyes. There's no arguing with him, she thought. \"Get your gear together and I'll rustle up some trail supplies.\"\n\nLess than twenty minutes later Jake reentered the stable. Via was tied off to a hitching post in the aisle. The big horse was saddled and the three canteens were fastened to the saddle. A wet bandana was tied around the Via's nose. \n\n\"Why the bandana?\" Jake asked. He walked around Via running his hands down the horse's legs and body. Jake wanted to make sure Via's legs showed no swelling from the ride back to El Paso. The horse seemed as strong as always. Via shook his head and nodded it up and down and acted like he wanted to get back on the trail.\n\n\"It will get more water into him without making him founder,\" Jeremiah answered. \"Just like you taught me.\"\n\nJake walked toward the tack room and opened the door. He took the saddle scabbard with his Winchester to where Via stood and tied it under the protective fender on his left stirrup with the butt facing forward. The rifle was even with the saddle horn and could be pulled for use in a split second. \n\nHe also packed two boxes of cartridges in a saddle bag; one for the Winchester and one for his Colt. \"Good job son. Do you know or did you hear which way those men rode out of town.\"\n\n\"I heard the Sheriff say they rode southeast along the Rio Grande. He said it didn't look like they cut across the river into Juarez. The depot manager said he heard one of men say they could cross the border at Fort Quitman.\"\n\nJake pulled the boy to him in a hug. \"I'll get you mama back son, don't you worry none about that.\" He mounted and looked down at Jeremiah. \"You go roust the Sheriff out of bed and tell him I've gone after Emily.\" He nodded at Jeremiah and rode Via out of the stable.\n\nThe full moon enabled Jake to cut the trail of three horses just outside of town headed south along the Rio Grande. The trail showed that one of the animals was riding heavy and all three were running hard. Jake put Via into a slow lope that the big horse could do for many miles. \n\nSoon the trail showed the fleeing men had slowed their getaway. Fort Quitman was close to 80 miles; a hard 4 day ride from El Paso. Jake knew the men would have to rest their horses pretty soon after the gallop out of town.\n\nVia had put in a full day but was still pretty fresh. Jake figured he would stop at midday, rest the horse until late afternoon or early evening and then continue the hunt. He dismounted and examined the hoof prints more closely. \"If they keep up this pace, we'll catch em in another day or so Via.\"\n\nThe Hunter's moon flooded the Chihuahua desert with light. The low ground along the river was home to cottonwood trees and green vegetation and the night air was cool; at least along the water. As the land rose away from the river channel it changed into a desert with Mesquite trees, Creosote bushes and different types of cactus. Nothing moved along the Rio Grande except for one man and his horse.\n\nJake rode until the sun reached its zenith and the temperature climbed into the high 90s and low 100s. He stopped on the banks of the Rio Grande, finding a shady spot under a huge cotton wood. \"Reckon we could both use a rest Via,\" Jake said as he unsaddled the animal and made a cold camp. The big horse shook his head as if to say he could still travel.\n\nJake understood horses and knew they could go for two weeks or more without food but they needed water as much or more than a man. He let Via take a little water then led him to a tree and tied the horse off on a short lead. About an hour later he watered the big horse again. \n\nHe knew that he could ride hard and catch the men taking Emily in the next ten hours or so. Problem was he and Via had already made a long ride back to El Paso and he didn't want Via breaking down. So he followed his plan to water and rest which would leave Via enough bottom to return home.\n\nAfter letting Via drink, Jake tied the big horse with a long lead so Via could graze on the rich grasses growing along the river but the real boon was the water. He used his saddle as a back prop and rested until early evening. The heat of the day would have passed and the air would have cooled to make travel easier on both the horse and the man. The moon would be full for another few days so he could follow the sign. \n\nHe picked up the trail at dusk and put Via back into a ground covering lope. The hoof prints told the story of the men slowing their pace but still pushing their horses hard. They'll run their horses into the ground if they don't let up soon, Jake thought. Course they don't have to worry about getting back. \n\nJake never faltered and continued on through the moon lit night. Jake and Via traveled until around 1 AM and stopped for another short rest. After 2 hours, they hit the trail again. They had rode for at least 18 of the last 24 hours and were catching up to the men and Emily. \n\nFort Quitman had been called the worse site for a military post ever conceived. It was surrounded by dry, arid mountains and the river was the only water for many miles in either direction. The problem was that unlike other shores of the Rio Grande the land around the fort was hard rock scrapple and couldn't be used for farming. \n\nThe fort was miles from civilization and supplies had to be carried in by freight wagons. Sometimes the freight trains were attacked by the Apache and even the Comancheros. These bandits were the dregs of the earth consisting of thieves and renegades, both white and Indian. The attacks severely hampered the soldier's mission of military expeditions against the Apache and the Yaqui. \n\nIt was midday and stopping at the army post's stable, Jake took care of Via. With the help of the sergeant in charge of the stable he tended to Via. Jake offered to pay the grizzled old veteran and a trooper to wash the horse down as Via was covered in the alkaline trail dust. \n\n\"I'll not be takin payment for caring for one of God's creatures comin out of that damn desert,\" the Sergeant replied in a disapproving voice. \"And I'll see the great beast is fed and watered as well.\"\n\nThe big horse didn't seem any the worse for wear but Jake knew the hard ride in the oven like heat and dry arid country had to have been hard on Via. I know it was damn hard on me, Jake thought. After arranging for Via's care, Jake went to see the commanding officer of the post, a Major Tom Flores whose name was on the door to his office. \n\n\"Howdy Major. I'm Jake Hightower.\"\n\nMajor Flores could have been used as a model of how a modern day army officer should look. He appeared to be about 40 years old and was as tall as Jake at 6 feet. Flores had a strong slender body with wide shoulders and his face showed the result of being out in the weather for most of his life. His hair was dark and worn a little long; his well trimmed mustache had just a few gray hairs. \n\nThe only thing that marred the picture was the Major's missing left arm. His empty sleeve was pinned up on the shoulder of his uniform. Jake glanced at the empty sleeve but didn't mention it as it would have been bad manners.\n\nThe Major saw Jake's glance and motioned with his right hand at the absence of his arm. \"Lost the arm at the battle of Sailor's Creek Virginia in April of 65; Lee surrendered three days later.\" Flores seemed to look in on himself for a few seconds and recovered.\n\n\"I wanted to stay in the military and the Union Army thought I would be a fine commander for this out of the way post. They gave me the rank of Major and my appointment let them keep more physically capable officers for more important duties.\" Major Flores didn't sound sorry for himself, he just was stating facts. \"Anyway, how may the Army and I assist you Mr. Hightower?\"\n\n\"I'm lookin for three men that should have come this way sometime late last night or early this morning. Wonder if you saw them?\"\n\n\"And what is your business with these men?\"\n\nJake started to say that it was his business and none of the Major's but reconsidered. Like my Ma always said, you can catch more flies with honey than with vinegar and I need information from this man, he said to himself. \"Those men robbed the stage depot in El Paso.\"\n\n\"You're not a law man or at least I don't see a badge,\" Major Flores said.\n\n\"No sir, it's more of a personal nature for me,\" Jake replied. \"They took a young woman, Emily Santee, hostage when they rode out of town. I aim to bring her back home. Her son needs her...and me too for that matter.\"\n\n\"Is Miss Santee your fianc\u00e9? \n\n\"Not yet.\" Jake smiled and added, \"But she will be once I get her back.\"\n\n\"What about the men? Will you take them back to the law?\"\n\n\"That's up to them Major. I will bring Emily back, if she's still alive; the how is up to the men. If she's dead....\"\n\n\"I suppose I would feel the same. However, she is still with them Mr. Hightower. A sentry reported he saw four riders cross the Rio Grande just about dawn.\"\n\nJake stood, \"Thanks for your help Major. Guess I better get back on their trail.\"\n\n\"You realize that the Army can't help you Mr. Hightower; My men and I cannot cross into Mexico.\"\n\n\"It's like you said Major, I'm not the law. I don't have to follow those rules.\" Jake stood, nodded his thanks again and walked very fast to the stable.\n\nHe was surprised to see Via waiting in the shade of the building being combed and curried by the young trooper. Jake's saddle rested on the cross bar of the hitching post along with a clean saddle blanket. The sergeant was putting something in the saddle bags and there was an extra canteen tied to the saddle horn.\n\n\"I was sure it is that you would be heading out rite quick when you got the word about those three men and the young colleen,\" the sergeant said with that pronounced Irish brogue. \"Filled your canteen and gave you another one; water's scarce once you get past the Rio Grande and it's like manna from Heaven. Put some trail supplies in your saddle bags as well. Not much, just some jerky and beans.\"\n\n\"How'd you know about those men? What's you name Sergeant? Jake asked with a grin.\n\n\"I'm Sergeant Major James Francis Patrick O'Flynn and it would be a poor excuse for a sergeant I would be if I didn't know what goes on around my post.\" He grinned and added, \"And I had one of my troopers sort a listen in while you was with the Major.\"\n\nIf Major Flores was the picture of a fine army officer, Sergeant O'Flynn was the opposite. O'Flynn was short, stocky with a barrel chest and was bow legged from his years on horseback. The deep red hair with streaks of gray and his blue eyes told of his Irish ancestry. \n\n\"Thank you Sergeant Major and thanks for taking care of my horse.\"\n\n\"Would be best if you took the time to get something to eat,\" O'Flynn suggested. \"You're covered in alkaline dust and could use a bath your own self. You've been in that saddle for a long time. And for all the saints it wouldn't hurt to take a bit of time fore you hit the trail again; both you and that fine animal there could use the rest.\"\n\nJakes smiled and nodded. He followed O'Flynn to the mess hall and was soon elbow deep into a big steak and fried potatoes. He finished the steak, potatoes, used a piece of bread to mop up the meat juices and finished with a very large mug of water. Again following the old veteran, he went behind the stable and shucked his clothes. Using a horse trough he washed the dust and grime away. As he was bathing the young trooper washed Jake's sweaty, dirty clothes. \n\nHanding them back to Jack, the trooper said, \"You'll have to wear them wet but they'll dry damn quick in this heat.\"\n\nAs Jake dressed, he said, \"Thanks son and thanks again Sergeant Major.\"\n\n\"A blessing it is to be able to help Mr. Hightower. Those scoundrels will probably head for Los Frailes; it's the only village half way close. At that, it's a good two days hard ride. The only water hole for 60 miles in any direction in this god forsaken country is Mesquite Springs. It's a day and a half's ride southwest. Not much of a spring but men on the run to Los Frailes to get away from the law stop there.\" Jake started to thank the sergeant again but the older man waved him away. \"Go on with you now; just you make sure you bring that young lady back. That village is no place for a fine lady like herself.\"\n\nJake waited until the trooper saddled Via, checked the cinch and mounted. He walked Via across the shallow river and once on the Mexican side and through the mountain pass put him into that ground eating lope again. He couldn't wait any longer if he hoped to catch the men and Emily before they got to Los Frailes.\n\nThe land beyond the windswept mountains on the Mexican side of the Rio Grande was even drier and had less vegetation than the desert around Fort Quitman. At least at the fort a man could go to the river and get fresh water or cool off. These desert plains that stretched as far as the eye could see were barren as a table top.\n\n\"Via if I owned this place and Hell, I'd live in Hell and rent this place out,\" Jake said as the heat reflected back up from the hard pan. \"Course that's if I could find some fool that wanted to live here.\"\n\nThe heat soared as the sun climbed past its zenith but Jake didn't feel like he could stop and he hoped he wouldn't ride Via into the ground. Need to catch them fore they get to Los Frailes, he repeated to himself. He had found the trail coming out of the mountains and rode in that direction. The only place the men could have gone was Mesquite Springs and then on to the outlaw haven.\n\nAbout every hour, Jake would pull Via down into a slow trot and dismount. He ran beside his horse holding onto his stirrup for 15 to 20 minutes. Remounting he would push Via back into the slow cantor and continue on the men's trail.\n\nThe hoof prints showed that the men had slowed as their horses tired. Finally, very late in the afternoon, Jake saw a bump on the horizon and vultures circling over it. As he got closer he could see that it was a dead horse. Jake dismounted and examined the animal. He put his hand on the shaded underside of its neck and found it was still quite warm.\n\n\"That horse hasn't been dead more than a few hours Via,\" Jake said as he vaulted back into his saddle. \"We'll catch em before first light.\" Putting his heels in Via's flanks he pushed the animal into a faster lope than before.\n\nThe trail sign showed that now two horses were riding heavy. \"At least that shows Emily is still with them,\" Jake muttered. He saw that the men had slowed their horses even more after losing one. \"Too late boys,\" Jake said to the wind. \"Your horses are about done in and I'm on your tail.\"\n\nJake pulled Via into the shade of one of the few Mesquite trees on the plain, dismounted and loosened the saddle cinch. Taking off his big Stetson, he filled the hat with water from a canteen and let his horse drink. \"We'll rest a spell Via and then hit the trail again.\"\n\nThe full moon rose about two hours after Jake and Via stopped. It flooded the desolate plain with a soft light that made following a trail pretty easy. Just before dawn, in that time span of darkness and almost being able to see, Jake saw a clump of trees and bushes about two hundred yards in front of him. He rode Via another fifty feet forward. He knew that this must be Mesquite Springs that the sergeant had told him about.\n\nPretty sure they'll hold up at the water hole, Jake thought as slowed his horse then stopped. I was right, Jake continued his thought as he peered through the predawn light toward the water hole. Ahead shining in the darkness he could see the remains of a fire with glowing coals and a small flame showing like a beacon over the flat land. \n\n\"There you are,\" Jake whispered as he slipped off his horse, dropped the reins to the ground knowing that Via wouldn't move and pulled his Winchester from the scabbard. Loosening the safety strap on his pistol and holding the rifle at the ready, Jake slowly crept toward the glow of the dying campfire. \n\nBetween the light from the setting moon and the glow of the fire, Jake could see the camp site. There were four forms lying around the fire and three horses tied loosely next the water seeping out of the ground. The horses were drinking from the small pool formed by the shelf rock, shouldering each other to get at the water.\n\nDamn fools are gonna kill those horses, Jake thought. You can't let hot, tired animals drink too much or they'll founder. Jake had planned to take at least one of the horses for Emily to make their getaway. They sure won't go far after drinking all that water, he continued his thought. Reckon we'll just have to see how far one of them will go fore it can't go anymore.",
        "Jake squatted down behind a Creosote brush. The desert had cooled down considerably during the night from the heat of the day. A small light breeze blew into Jake's face and he shivered a little in the chill as the sweat on his face dried. The cool air apparently affected one of the sleeping forms as he stood and put a dead Mesquite branch on the fire; the figure was the only one that didn't have a bedroll. The fire flared up with the added fuel and Jake saw Emily's face in the glow.\n\nHe wasn't sure of how to get Emily away from the men. Jake didn't want a gun battle with the men if he could keep from it; Emily might be harmed in the crossfire. Finally after a few minutes thinking he began to make his way to the side of the camp where Emily was sleeping. \n\nJake used all his skills so he wouldn't make a noise as he crept up to the camp. He was down on all fours and crawled forward; making sure to avoid dead brush and branches. It took him almost ten minutes to get close to where Emily was sleeping. Kneeling next to her, Jake leaned down close and put his hand over her mouth. \n\nEmily opened her eyes, tried to sit up and scream. When she saw Jake, she sort of slumped and then grabbed him, pulling him into a tight embrace. Jake put his finger across his mouth to warn her to be quiet. Then he motioned for her to follow him and led her away from the camp.\n\nAs they left the circle of light cast by the fire, one of the men sat up and saw them. \"Hey,\" he yelled which woke up the other two. \"Get back here,\" another one shouted and started shooting at Jake.\n\nVia had been munching on some buffalo grass that had escaped the desert heat. He raised his head as Jake and Emily scurried to where he was standing. Picking up the reins, Jake wrapped them around the saddle horn and helped Emily to mount up. After she was in the saddle she moved her foot and Jake used the stirrup to climb up behind the cantle of the saddle.\n\nTurning Via back toward Fort Quitman, Jake spoke to the horse in a quiet voice. \"Sorry old son, I'm gonna have to push you some more. We need to get Emily back to the fort and safe.\" The big black nodded his head and Jake put him into a very fast lope; almost a gallop.\n\nAfter a few minutes with no sounds of pursuit, Jake slowed and followed his usual practice. They rode, at a slower pace, for about half an hour and then slowed even more to a fast walk for half that time. This was where the routine changed. Jake would dismount and run along beside the horse holding onto a stirrup; after ten minutes or so he would remount and resumed the lope.\n\nAt midday, just before the sun reached its highest point, Jake guided Via into the same grove of Mesquite trees that he had used when he was following the men and Emily. This was the first time that Emily and Jake had had a chance to talk. \n\n\"Are you alright Emily? Do they hurt you?\" Jake asked.\n\n\"No other than a bruise or two I'm fine. They made some vile suggestions, taunts and threats but they didn't bother me.\"\n\n\"Do you know why they didn't just leave you once they got a good distance out of El Paso? Why were they taking you to Los Frailes?\n\n\"I heard one of them say they could get a lot of money selling me to the Comancheros in Los Frailes; I think Lem was his name.\" Emily looked down for a few seconds and added. \"I wasn't gonna be a play toy for a bunch of Comancheros; I would have made them pay before I killed myself.\"\n\nEmily gave Jake a grim smile and shrugged her shoulders. \"Why are we pushing so hard Jake? Their horses are about done in and I don't think they could catch us. They were complaining about how long it was gonna take them to get to Los Frailes.\"\n\n\"Via is about rung out. I had just got back to El Paso after a hard day on the trail when I found out they took you. The big guy didn't get more than an hour's rest fore we came after you. He got a couple of hours rest at Fort Quitman but he's been carrying me at a fast pace for a few days now. I know he's strong but it's bound to catch up to him.\"\n\nJake smiled at Emily. \"I'm glad you didn't have to face the Comancheros.\" Then in almost a whisper he added, \"I don't know what I would do if you were not around.\" \n\nHe made sure than Via got water, using his hat as a bucket so the horse could drink. As Jake and Emily tried to rest in the sparse shade of the Mesquite trees, about every half hour Jake would wet his bandana and tie it across the big black horse's nose. After two hours rest they each took a long drink from the last canteen and Jake emptied the canteen into his hat for Via.\n\n\"We can get back to the Rio Grande and Fort Quitman by morning,\" he explained. \"But not if Via breaks down. Right now he needs the water more than we do.\"\n\n\"Do you really think they will come after us?\" Emily asked. \n\n\"They might since we didn't get away clean and even if they don't, Los Frailes is a lot closer to them than Fort Quitman is to us. They could go on to Los Frailes, pick up fresh horses and come after us. I want to get you safe at the Fort before that can happen.\n\nJake had Emily mount, take the reins and put Via into a fast walk. He ran and walked along holding on to the saddle as he had done before. This time he was able to run along for over a half an hour. Then he let the horse rest for close to an hour before he got up behind Emily and put Via into a lope. It took less time for Jake and Emily to return to Fort Quitman than it had for Jake to catch up to Emily and her captors as he'd had to find and follow their trail. He pushed Via harder than he wanted to but felt he had to put miles between Emily and those men. \n\nAs Jake, Emily and Via topped the crest of the rise overlooking the Rio Grande, they slowed to a fast walk. Via was an extremely strong horse but even he had slowed until the walk was about all he could manage. The river was just over two feet deep at the crossing and Jake sent Emily and Via across. He followed along behind them carrying his Winchester, looking over his shoulder watching for riders.\n\nEmily rode onto the shore close to a four man squad of troopers washing clothes in the river. They seemed surprised to see the young white woman, on an obviously tired and lathered horse, cross the river from the Mexican side. They were just as surprised to see a man wading along behind her while watching the far bank.\n\nThe soldiers walked to Emily but waited until Jake came up to speak to her. \"You all right Ma'am?\" One young trouper asked. Turning to Jake he said, \"You folks look about done in.\"\n\nSmiling Jake replied, \"We'll be fine after a good meal and a couple of days rest. Is Sergeant O'Flynn around?\"\n\nThe young man nodded and turned to go find his sergeant. \"And who is wantin to see the O'Flynn?\" The Sergeant Major asked as he came to the river bank. \"Oh, tis you Mr. Hightower. And this must be herself that you went to rescue.\"\n\nJake, even though he was tired enough to fall down on the riverbank had to smile at the sergeant's Irish brogue. \"Emily Santee, this old war horse is Sergeant James O'Flynn.\"\n\n\"That's Sergeant Major O'Flynn Miss,\" he said tipping his army issued Stetson. \"Let's get you both up to the fort. It's a meal and a rest that you both need.\" Looking at Jake, he added, \"I'll treat that fine charger of yours as if he was my own; don't worry about him.\"\n\nShortly Emily and Jake were in the mess hall being waited on by the cook and two of his helpers. Sergeant O'Flynn got a huge cup of coffee and sat with them as they ate. Before they finished, Major Flores joined them.\n\n\"I'm glad to see you accomplished your mission Mr. Hightower,\" he said. Turning to Emily, Flores stood at attention and bowed from the waist. \"Major Tom Flores at your service Miss Santee. If there is anything you need while you are here at my fort, please let me know.\"\n\nTurning Flores faced Jake. \"I would assume you and Miss Santee having had something to eat now need to rest.\" Looking at O'Flynn, the Major said, \"Sergeant Major, see that Miss Santee is made comfortable in the visiting officer's cabin and put Mr. Hightower in the empty NCO quarters.\" \n\nTurning his attention back to Jake and Emily he said, \"Please join me for supper later this evening in my quarters. I would like to hear the story of your adventures. Shall we say at 6:00, after you've had time to freshen up and rest?\" He bowed to Emily again and returned to his office.\n\nSergeant O'Flynn led Emily to the officer's quarters and had a small horse trough, no more than 4 feet long and 2 feet deep, brought into the cabin. \"For sure it's a bath you will be wanting Miss. I'll have the boys bring you hot water. It's sorry I am that we can't offer a fine young lady as yourself better.\"\n\n\"Thank you Sergeant O'Flynn. You are very kind.\"\n\n\"And you fine sir,\" O'Flynn said as he turned to Jake. \"It is the trough out behind the stable for you or the river for the likes of you.\"\n\nJake had to grin again at the Irish brogue of the old veteran. \"I'm not one of your dandies from Dublin Sergeant; the river will be fine enough for me.\"\n\nO'Flynn directed his squad of troopers to bring buckets of hot water to Emily and he also had them bring her a pair of pants and a shirt from the smallest trooper in the company. \"She'll be wantin to get out of them dirty things, she will,\" he explained to Jake. \"We don't have a dress shop on post so it's trooper's clothes she'll have to wear.\"\n\nCarrying a spare set of pants and shirt from another soldier, Jake made his way back down to the Rio Grande. The Sergeant walked with him, carrying an Allin Springfield army issued rifle. \"Quiet as a church it is now,\" he explained to Jake. \"But those Indian devils like to give us a surprise now and them. I'll just post myself as guard while you are away from your weapons.\"\n\n \"What are your plans Mr. Hightower?\" Major Flores asked at supper in his quarters.\n\n\"With your permission Major, I'd like to stay at the fort for a couple of days before I go back to El Paso,\" Jake answered. \"My horse needs to recover from the work he's done over the last few days; he should rest up a bit. I'll arrange for Emily to take the stage tomorrow morning.\"\n\n\"I don't want to take the stage Jake,\" Emily said. \"If I have a choice I would like to ride back with you.\"\n\nJake smiled and nodded at her. \"Reckon we'll need to find you a horse.\"\n\n\"You are welcome to our hospitality here as long as you feel the need.\" Flores looked at Jake for several seconds and asked, \"And what of the men who abducted Miss Santee, Mr. Hightower? How did you deal with them?\"\n\n\"Those men are still living Major. I was afraid of a gun battle with Emily in the way so we stole away into the night and back to Fort Quitman.\" Jake gave the Major a grim smile. \"But if I ever run into them again, I won't be so accommodating.\"\n\nMajor Flores nodded. \"I understand. By the by there are two or three places in the town to purchase horses. I would suggest Senor Reyes; he seems to have the best reputation and horses.\" He smiled and said, \"If you can't find an acceptable animal, the U.S. Army will loan you a mount; but you will have to return it. Have to keep the accountants in Washington happy you know.\"\n\n Two days later, just after lunch, Jake, Emily and Sergeant O'Flynn walked into the small town that had grown up around Fort Quitman. Jake and the Sergeant were both armed; Jake with his Colt and O'Flynn carried his Springfield rifle. \n\nThe village had been there for a hundred years or more as the head of the trail to Guadalupe and points south and east into Mexico. It was established because of the natural shallow ford for crossing the Rio Grande. The houses and business had grown somewhat due to the establishment of Fort Quitman but it was still a small village.\n\n\"I'll introduce you to Senor Reyes,\" O'Flynn said as they walked. \"A devil he is, but an honest one. But keep your wits about you and don't trust him too much. He's first and foremost a horse trader. It is the better he will treat you when he sees you under my wing.\"\n\n\"This isn't the first time I've bought horses,\" Jake replied. \"But thanks for your help.\"\n\nO'Flynn introduced Jake and Emily to Senor Reyes. The horse trader led them to a large corral which held the horses he had for sale. Jake pointed out a couple of horses he liked and Reyes had them brought to a hitching post outside the corral for inspection.\n\nJake ran his hands over the legs, chest and croup of the horses. He liked the young gray mare and turned to Emily. \"What do you think about this mare Emily? Does she suit you?\"\n\n\"I don't really know that much about horses Jake. Would you choose for me please?'\n\nNodding, Jake turned to Reyes and asked the price of the mare. Reyes replied and Jake shook his head. So began what would be a long negotiation of offers and counter offers. Jake and Reyes enjoyed the give and take that was part of the buying of horses. Emily watched for a few minutes and then wandered over to examine some stalls that had things for sale.\n\nShe was trying on a knitted shawl, turned and froze. Standing at the next stall was Lem and the other two men that had kidnapped her. When he saw her Lem smiled and nudged his companions. Emily looked for an escape but the men were between her and Jake.\n\n\"Well lookie here boys. It's our lady friend. Hello Missy,\" Lem said with an evil smile. \"I was hopin we'd find you here. Reckon we'll have to tie you up this time for our trip back to Los Frailes.\"\n\nEmily was standing next to a table with knives for sale. She picked up a large butcher knife and swung back to face Lem and the others. \"I'm not going with you this time,\" she declared.\n\nLem slowly pulled his pistol, pointed it at Emily and said, \"I reckon you will Missy or I'll shoot you where you stand.\"\n\n\"Go ahead,\" she challenged. \"I'm worth nothing to you dead.\"\n\n\"Well we'll just have to wrestle you down now won't we,\" Lem replied and holstered his gun. \"Little slip of a girl like you won't stop us.\"\n\n\"No, but I will,\" Jake said as he walked up behind the three men. His hand hovered over the handle of the Colt at his hip. At his side, Sergeant O'Flynn had his Springfield pointed in their direction; the hammer was pulled back and the rifle was ready to fire.\n\nLem turned to face Jake and O'Flynn and pointed to his companions. \"There's three of us and just two of you,\" he offered.\n\n\"Soon there won't be any of you unless you drop your guns.\" Jake pointed toward the fort with his left hand. I'm going to take you to the Major and have you jailed until the Marshal from El Paso comes to get you. You'll stand trial for robbing the stage depot and for kidnapping Emily. You'll probably hang.\"\n\n\"Ain't gonna swing on the end of no rope,\" Lem said pawing at his gun.\n\n\"I was hoping you'd say that,\" Jake replied as his Colt seemed to jump into his hand. He fired at Lem and the man next to him hitting them both in the chest and they slid to the ground. The sound of O'Flynn's Springfield was added to the noise of the gunfight and the third man was knocked off his feet.\n\nEmily ran to Jake and hugged him. He carefully took the knife from her and held it out. \"Suppose we ought to tell the Major about this and get someone to pick up the bodies.\"\n\n\"You go see the Major,\" O'Flynn suggested. \"I'll get a squad of my troopers to take care of this garbage.\"\n\n \"And Sergeant Major O'Flynn assisted you in protecting Miss Santee?\" Major Flores asked after Jake told him about meeting and dealing with Lem and his companions. \n\n\"Yes sir, he kept the third one off my back while I dealt with the other two.\"\n\nFlores smiled and added, \"The Sergeant Major is a good man and somewhat of a force of nature.\" The Major poured each of them a cup of coffee. \"I suppose you'll be headed back to El Paso soon.\"\n\n\"I've found Emily a horse and dealt with the men that took her.\" Jake smiled at Emily. \"I guess you could say my work here is done. We'll leave tomorrow morning.\"\n\nShortly after first light, Jake and Emily said good bye to Major Flores and to Sergeant Major O'Flynn. Emily hugged O'Flynn. \"Thank you for helping Jake. Come see us in El Paso first chance you get.\"\n\n\"You'll always be welcome at my fire Sergeant Major,\" Jake said while shaking O'Flynn's hand.\n\nJake and Emily mounted, waved one last time, and set on the trail back to El Paso. They figured it would be a three day ride if the weather held and they didn't run into problems on the trip.\n\nThe first night, sitting around a fire, Emily told Jake the story of how she'd been taken and what happened on the trail. She hadn't talked about the ordeal while at Fort Quitman and Jake hadn't wanted to push her. \n\n\"It was strange,\" Emily concluded. \"Lem was the leader. He didn't bother me and he wouldn't let the others bother me either. As I said other than one time I tried to run away and he grabbed me, I was well treated.\" She smiled, reached across the small space that separated them and took his hand. \"I was very glad to see you in the fire light that night.\"\n\nShe stared at the fire for a minute or so. Looking up at Jake she said, \"I wasn't going back with them. I would have cut my throat if I'd had to.\"\n\nGlad you didn't have to do that,\" Jake replied. \"Jeremiah needs you.\" In a softer voice, almost under his breath, he added, \"I do to.\n\nEmily looked at him and smiled: she had heard his quiet words.\n\nThe second night on the trail they talked about what they would do when they got back to El Paso as they sat with the fire almost between them. \"I may sleep for a week,\" Emily said with a small laugh. What do you plan on doing Jake? When will you leave on your next sales trip?\"\n\nHe stared into the fire for several seconds then looked up at Emily. \"I'm not going on any more sales trips. I'm gonna open a gunsmith shop in El Paso. That's why I was in such a hurry to get back to you and Jeremiah after the last one. I've already talked to Colt Firearms and they agreed to give me bargain prices and I will promote their guns in the area.\" \n\n\"That's wonderful Jake.\"\n\nStanding up, Jake moved around the fire to Emily's side. \"That means I won't have to travel near as much.\"\n\n\"I'm glad,\" Emily replied. \"Jeremiah will be glad too; he misses you when you're gone.\"\n\n\"The other thing I will do is never be far from your side again. I want you and Jeremiah with me Emily.\" He took her hand and said, \"I don't want to be a tumbleweed anymore. Will you marry me?\"\n\nEmily almost leaped to her feet and put her arms around Jake's neck. She kissed him and then hugged him tight. With her arms still around his neck, she leaned back. \"Can we push a little harder and get home tomorrow?\"\n\n\"Should be able to do that; the horses are rested and it's only about another five or six hour's home. Why?\"\n\nEmily gave him a big smile and answered, \"Mrs. Stewart and I have a wedding to plan.\"\n\n The End  "
    ],
    "authorname": "woodmanone",
    "tags": [
        "western",
        "drama",
        "action/adventure",
        "romance"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/tumbleweed-ch-03"
}